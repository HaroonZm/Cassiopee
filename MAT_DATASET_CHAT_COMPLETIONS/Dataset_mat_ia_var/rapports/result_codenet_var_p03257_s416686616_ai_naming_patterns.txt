================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import random
import math
import fractions

def compute_lcm(val_a, val_b):
    return (val_a // fractions.gcd(val_a, val_b)) * val_b

def check_prime(value):
    divisor = 2
    while divisor * divisor <= value:
        if value % divisor == 0:
            return False
        divisor += 1
    return True

def generate_primes(limit_val):
    prime_list = []
    for candidate in range(2, limit_val + 1):
        if check_prime(candidate):
            prime_list.append(candidate)
    return prime_list

matrix_size = int(input())

matrix_elements = [[None for idx_col in range(matrix_size)] for idx_row in range(matrix_size)]

matrix_indices = [(row_idx, col_idx) for row_idx in range(matrix_size) for col_idx in range(matrix_size - 1, -1, -1)]

used_numbers = set()
prime_sequence = generate_primes(10 ** 4)

prime_offset = 0
while prime_sequence[prime_offset] < matrix_size + 3:
    prime_offset += 1

for tup_pos in matrix_indices:
    row_pos, col_pos = tup_pos
    if (row_pos + col_pos) % 2 == 0:
        sum_half = (row_pos + col_pos) // 2
        diff_half = matrix_size + (row_pos - col_pos) // 2
        calc_value = (sum_half + 1) * (prime_sequence[prime_offset + diff_half])
        if calc_value in used_numbers:
            print(101, calc_value)
            raise ValueError()
        matrix_elements[row_pos][col_pos] = calc_value
        used_numbers.add(calc_value)

for tup_pos in matrix_indices:
    row_pos, col_pos = tup_pos
    if (row_pos + col_pos) % 2 == 0:
        continue

    adjacent_lcm = 1
    for neighbor in [(row_pos - 1, col_pos), (row_pos + 1, col_pos), (row_pos, col_pos - 1), (row_pos, col_pos + 1)]:
        neigh_row, neigh_col = neighbor
        if 0 <= neigh_row < matrix_size and 0 <= neigh_col < matrix_size and matrix_elements[neigh_row][neigh_col] is not None:
            adjacent_lcm = compute_lcm(adjacent_lcm, matrix_elements[neigh_row][neigh_col])

    if adjacent_lcm >= 5 * 10 ** 14:
        print("ERR", adjacent_lcm)
        raise ValueError()

    candidate_result = adjacent_lcm + 1
    while candidate_result in used_numbers:
        multiplier = random.randint(1, (10 ** 15 - 1) // adjacent_lcm)
        candidate_result = multiplier * adjacent_lcm + 1

    matrix_elements[row_pos][col_pos] = candidate_result
    used_numbers.add(candidate_result)

for idx_row in range(matrix_size):
    print(" ".join(map(str, matrix_elements[idx_row])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' random' (ID: 7526)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004062434600200504
    2. '.random' → logprob: -8.250406265258789
    3. '<|end|>' → logprob: -10.250406265258789
    4. '```' → logprob: -10.625406265258789
    5. 'import' → logprob: -10.875406265258789
    6. '.Random' → logprob: -11.375406265258789
    7. ' ' → logprob: -11.625406265258789
    8. 'random' → logprob: -11.875406265258789
    9. '\' → logprob: -12.000406265258789
    10. '<|end|>' → logprob: -12.250406265258789

Token 4: ' math' (ID: 13324)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -1.0985509157180786
    2. 'string' → logprob: -1.4735509157180786
    3. ' math' → logprob: -2.223550796508789
    4. 'math' → logprob: -2.348550796508789
    5. ' sys' → logprob: -2.348550796508789
    6. 'sys' → logprob: -2.598550796508789
    7. 'os' → logprob: -3.348550796508789
    8. ' os' → logprob: -3.598550796508789
    9. ' numpy' → logprob: -7.348550796508789
    10. 'time' → logprob: -7.973550796508789

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0816901922225952
    2. '\' → logprob: -1.8316901922225952
    3. '.' → logprob: -2.0816903114318848
    4. 'import' → logprob: -2.2066903114318848
    5. '```' → logprob: -2.5816903114318848
    6. '
' → logprob: -2.8316903114318848
    7. '<|end|>' → logprob: -3.0816903114318848
    8. '

' → logprob: -3.0816903114318848
    9. '<|end|>' → logprob: -4.956690311431885
    10. ',' → logprob: -5.206690311431885

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4399234056472778
    2. '\n' → logprob: -1.8149234056472778
    3. '

' → logprob: -1.9399234056472778
    4. '\' → logprob: -1.9399234056472778
    5. 'import' → logprob: -2.4399232864379883
    6. '```' → logprob: -2.5649232864379883
    7. '
' → logprob: -2.6899232864379883
    8. 'def' → logprob: -4.064923286437988
    9. ',' → logprob: -4.314923286437988
    10. '<|end|>' → logprob: -4.814923286437988

Token 7: ' fractions' (ID: 110523)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.6130860447883606
    2. 'sys' → logprob: -1.7380859851837158
    3. ' os' → logprob: -2.238085985183716
    4. 'numpy' → logprob: -2.988085985183716
    5. ' numpy' → logprob: -3.363085985183716
    6. ' sys' → logprob: -3.613085985183716
    7. 'time' → logprob: -3.738085985183716
    8. 'statistics' → logprob: -3.988085985183716
    9. ' statistics' → logprob: -4.488086223602295
    10. ' time' → logprob: -5.488086223602295

Token 8: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8062339425086975
    2. '.' → logprob: -1.0562338829040527
    3. '\n' → logprob: -2.3062338829040527
    4. '<|end|>' → logprob: -3.4312338829040527
    5. 'import' → logprob: -3.8062338829040527
    6. '```' → logprob: -4.306233882904053
    7. '

' → logprob: -4.806233882904053
    8. '\' → logprob: -4.806233882904053
    9. '#' → logprob: -5.056233882904053
    10. '
' → logprob: -5.306233882904053

Token 9: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11465802043676376
    2. 'def' → logprob: -3.4896581172943115
    3. '#' → logprob: -3.7396581172943115
    4. '\' → logprob: -4.114657878875732
    5. 'import' → logprob: -4.989657878875732
    6. '\n' → logprob: -4.989657878875732
    7. 'a' → logprob: -5.364657878875732
    8. '
' → logprob: -5.614657878875732
    9. '```' → logprob: -5.989657878875732
    10. '

' → logprob: -6.739657878875732

Token 10: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002362325321882963
    2. ' random' → logprob: -6.627362251281738
    3. ' randint' → logprob: -8.377362251281738
    4. ' factor' → logprob: -8.877362251281738
    5. ' factorial' → logprob: -8.877362251281738
    6. ' generate' → logprob: -8.877362251281738
    7. ' r' → logprob: -9.627362251281738
    8. ' calculate' → logprob: -9.877362251281738
    9. ' space' → logprob: -10.127362251281738
    10. '_' → logprob: -10.252362251281738

Token 11: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48865172266960144
    2. '_factor' → logprob: -0.9886517524719238
    3. '_area' → logprob: -5.363651752471924
    4. '(' → logprob: -6.238651752471924
    5. '_div' → logprob: -6.488651752471924
    6. '_sum' → logprob: -6.863651752471924
    7. '_f' → logprob: -7.238651752471924
    8. '_s' → logprob: -7.613651752471924
    9. '_value' → logprob: -7.863651752471924
    10. '_square' → logprob: -8.113651275634766

Token 12: 'cm' (ID: 7871)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1370618343353271
    2. 'n' → logprob: -1.2620618343353271
    3. 'cm' → logprob: -1.6370618343353271
    4. 'og' → logprob: -2.637061834335327
    5. 'c' → logprob: -3.137061834335327
    6. 'ength' → logprob: -4.512062072753906
    7. 'a' → logprob: -4.637062072753906
    8. 'ist' → logprob: -4.762062072753906
    9. '_' → logprob: -4.887062072753906
    10. 'inear' → logprob: -5.137062072753906

Token 13: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004397598095238209
    2. '(a' → logprob: -6.504397392272949
    3. '(x' → logprob: -6.629397392272949
    4. ' (' → logprob: -7.629397392272949
    5. '_' → logprob: -8.25439739227295
    6. '```' → logprob: -8.25439739227295
    7. '<|end|>' → logprob: -9.50439739227295
    8. '(_' → logprob: -9.62939739227295
    9. '(_)' → logprob: -9.87939739227295
    10. '_(' → logprob: -10.00439739227295

Token 14: '_a' (ID: 10852)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.1267173290252686
    2. '):' → logprob: -1.2517173290252686
    3. 'ues' → logprob: -1.6267173290252686
    4. 's' → logprob: -2.6267173290252686
    5. ')' → logprob: -3.0017173290252686
    6. 'u' → logprob: -3.6267173290252686
    7. '1' → logprob: -3.6267173290252686
    8. ',' → logprob: -4.876717567443848
    9. '(' → logprob: -5.251717567443848
    10. '_' → logprob: -6.501717567443848

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002533452119678259
    2. ' ,' → logprob: -6.252533435821533
    3. '_,' → logprob: -8.252533912658691
    4. ',val' → logprob: -8.752533912658691
    5. ',a' → logprob: -9.127533912658691
    6. '):' → logprob: -10.252533912658691
    7. ',_' → logprob: -11.877533912658691
    8. ' ' → logprob: -11.877533912658691
    9. ')' → logprob: -12.127533912658691
    10. ',b' → logprob: -12.252533912658691

Token 16: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0040978738106787205
    2. 'val' → logprob: -5.504097938537598
    3. ' ' → logprob: -12.379097938537598
    4. ' ' → logprob: -12.379097938537598
    5. '_val' → logprob: -12.754097938537598
    6. '	val' → logprob: -13.254097938537598
    7. '"' → logprob: -13.379097938537598
    8. ',val' → logprob: -13.629097938537598
    9. ')' → logprob: -14.004097938537598
    10. ''' → logprob: -14.629097938537598

Token 17: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.012866534292697906
    2. '_' → logprob: -4.637866497039795
    3. '_a' → logprob: -6.137866497039795
    4. '_c' → logprob: -7.887866497039795
    5. '_u' → logprob: -9.137866973876953
    6. ')_' → logprob: -9.262866973876953
    7. '_)' → logprob: -9.762866973876953
    8. ')' → logprob: -10.012866973876953
    9. '_d' → logprob: -10.262866973876953
    10. '_f' → logprob: -10.262866973876953

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008685601875185966
    2. ')' → logprob: -4.75868558883667
    3. ':' → logprob: -10.508686065673828
    4. '):
' → logprob: -10.633686065673828
    5. ' ):' → logprob: -12.133686065673828
    6. ',' → logprob: -12.758686065673828
    7. '   ' → logprob: -12.758686065673828
    8. '*' → logprob: -13.758686065673828
    9. '**' → logprob: -13.883686065673828
    10. ' ' → logprob: -14.133686065673828

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07711245119571686
    2. ':' → logprob: -2.7021124362945557
    3. ':
' → logprob: -6.702112674713135
    4. ' ' → logprob: -6.827112674713135
    5. '    
' → logprob: -6.827112674713135
    6. '    ' → logprob: -6.952112674713135
    7. '\' → logprob: -7.452112674713135
    8. '```' → logprob: -7.827112674713135
    9. ' return' → logprob: -8.452112197875977
    10. ''' → logprob: -8.702112197875977

Token 20: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4983569383621216
    2. ' return' → logprob: -1.1233569383621216
    3. '    ' → logprob: -3.623356819152832
    4. '    
' → logprob: -4.623356819152832
    5. ' l' → logprob: -4.748356819152832
    6. 'return' (adapté à ' return') → logprob: -5.373356819152832
    7. ' ' → logprob: -5.498356819152832
    8. '```' → logprob: -6.123356819152832
    9. ' if' → logprob: -6.248356819152832
    10. ' a' → logprob: -6.498356819152832

Token 21: ' (' (ID: 350)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.04630538448691368
    2. ' math' → logprob: -4.046305179595947
    3. ' (' → logprob: -4.171305179595947
    4. ' ' → logprob: -4.921305179595947
    5. 'val' → logprob: -5.546305179595947
    6. ' abs' → logprob: -7.671305179595947
    7. '(val' → logprob: -8.671305656433105
    8. 'math' → logprob: -8.921305656433105
    9. ' random' → logprob: -9.171305656433105
    10. '(' → logprob: -9.546305656433105

Token 22: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1602465659379959
    2. ' val' → logprob: -1.9102466106414795
    3. 'abs' → logprob: -12.035246849060059
    4. '(val' → logprob: -12.160246849060059
    5. ' abs' → logprob: -12.785246849060059
    6. 'math' → logprob: -12.910246849060059
    7. '_val' → logprob: -13.035246849060059
    8. '   ' → logprob: -14.410246849060059
    9. '	val' → logprob: -14.410246849060059
    10. ' ' → logprob: -14.535246849060059

Token 23: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.8351892473874614e-05
    2. '_' → logprob: -10.125048637390137
    3. '_b' → logprob: -12.250048637390137
    4. ' _' → logprob: -12.750048637390137
    5. ')_' → logprob: -15.500048637390137
    6. 'a' → logprob: -15.625048637390137
    7. '_c' → logprob: -17.62504768371582
    8. '_)' → logprob: -17.62504768371582
    9. '__' → logprob: -17.75004768371582
    10. '_s' → logprob: -18.00004768371582

Token 24: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0033868374302983284
    2. '*' → logprob: -5.753386974334717
    3. ' ' → logprob: -8.503386497497559
    4. ' //' → logprob: -12.128386497497559
    5. ' ' → logprob: -15.253386497497559
    6. ' **' → logprob: -16.003387451171875
    7. '*l' → logprob: -16.128387451171875
    8. '//' → logprob: -16.503387451171875
    9. '  ' → logprob: -16.628387451171875
    10. '   ' → logprob: -16.628387451171875

Token 25: ' fractions' (ID: 110523)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.392697811126709
    2. ' math' → logprob: -1.267697811126709
    3. ' fractions' → logprob: -3.267697811126709
    4. 'fra' → logprob: -5.267697811126709
    5. '(math' → logprob: -11.392698287963867
    6. ' ' → logprob: -11.517698287963867
    7. '   ' → logprob: -11.892698287963867
    8. ')' → logprob: -13.017698287963867
    9. 'm' → logprob: -13.517698287963867
    10. 'g' → logprob: -13.642698287963867

Token 26: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.13117890059947968
    2. 'g' → logprob: -2.131178855895996
    3. ' gcd' → logprob: -6.256178855895996
    4. '   ' → logprob: -6.631178855895996
    5. '.' → logprob: -7.381178855895996
    6. '_g' → logprob: -9.006178855895996
    7. '#g' → logprob: -9.756178855895996
    8. 'import' → logprob: -10.006178855895996
    9. '```' → logprob: -10.381178855895996
    10. '.F' → logprob: -10.631178855895996

Token 27: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.9504606825648807e-05
    2. 'cdn' → logprob: -11.500019073486328
    3. 'cm' → logprob: -12.750019073486328
    4. 'c' → logprob: -13.750019073486328
    5. 'math' → logprob: -13.750019073486328
    6. 'cf' → logprob: -14.000019073486328
    7. 'mp' → logprob: -14.000019073486328
    8. 'a' → logprob: -14.125019073486328
    9. 's' → logprob: -14.750019073486328
    10. 'CD' → logprob: -14.750019073486328

Token 28: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0011335473973304033
    2. 'val' → logprob: -7.376133441925049
    3. '(' → logprob: -7.876133441925049
    4. '_val' → logprob: -10.251133918762207
    5. ' (' → logprob: -10.501133918762207
    6. ' val' → logprob: -10.751133918762207
    7. ',val' → logprob: -11.126133918762207
    8. '[val' → logprob: -11.126133918762207
    9. ')' → logprob: -12.376133918762207
    10. '_' → logprob: -13.126133918762207

Token 29: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020544764993246645
    2. '_a' → logprob: -8.500205039978027
    3. '_)' → logprob: -14.125205039978027
    4. '_' → logprob: -14.250205039978027
    5. ')' → logprob: -15.125205039978027
    6. ')_' → logprob: -16.125205993652344
    7. 'b' → logprob: -17.375205993652344
    8. 's' → logprob: -17.625205993652344
    9. '_s' → logprob: -17.750205993652344
    10. 'a' → logprob: -17.875205993652344

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06392275542020798
    2. ',val' → logprob: -3.063922643661499
    3. ' ,' → logprob: -4.188922882080078
    4. ' ' → logprob: -10.688922882080078
    5. ' val' → logprob: -11.313922882080078
    6. '_,' → logprob: -12.063922882080078
    7. 'val' → logprob: -12.063922882080078
    8. ',

' → logprob: -13.563922882080078
    9. ',
' → logprob: -13.813922882080078
    10. ')' → logprob: -13.813922882080078

Token 31: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.06995154917240143
    2. 'val' → logprob: -2.6949515342712402
    3. ' ' → logprob: -12.319952011108398
    4. '	val' → logprob: -12.694952011108398
    5. '[val' → logprob: -12.944952011108398
    6. '_val' → logprob: -13.444952011108398
    7. ',val' → logprob: -13.569952011108398
    8. '.val' → logprob: -14.194952011108398
    9. '<|end|>' → logprob: -14.569952011108398
    10. '(val' → logprob: -14.819952011108398

Token 32: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.875019073486328
    3. 'b' → logprob: -12.375019073486328
    4. '_a' → logprob: -12.500019073486328
    5. ')' → logprob: -13.375019073486328
    6. ')_' → logprob: -14.000019073486328
    7. '_)' → logprob: -14.375019073486328
    8. '_,' → logprob: -15.625019073486328
    9. 'a' → logprob: -15.750019073486328
    10. ',' → logprob: -15.875019073486328

Token 33: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009174126898869872
    2. ' )' → logprob: -7.375917434692383
    3. ')*' → logprob: -9.500917434692383
    4. '*)' → logprob: -10.375917434692383
    5. '*' → logprob: -10.500917434692383
    6. '(' → logprob: -10.500917434692383
    7. '))' → logprob: -10.625917434692383
    8. ' ' → logprob: -10.875917434692383
    9. '(val' → logprob: -10.875917434692383
    10. 'val' → logprob: -11.000917434692383

Token 34: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01842348463833332
    2. '*' → logprob: -4.018423557281494
    3. ' ' → logprob: -8.643423080444336
    4. ')' → logprob: -10.143423080444336
    5. ' *)' → logprob: -10.643423080444336
    6. ' ' → logprob: -11.643423080444336
    7. ' )' → logprob: -12.393423080444336
    8. '  ' → logprob: -12.393423080444336
    9. ' *

' → logprob: -12.518423080444336
    10. ' *
' → logprob: -12.893423080444336

Token 35: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02324594371020794
    2. ' val' → logprob: -3.7732460498809814
    3. '_val' → logprob: -15.773245811462402
    4. '	val' → logprob: -16.14824676513672
    5. ' ' → logprob: -16.64824676513672
    6. '(val' → logprob: -17.77324676513672
    7. '[val' → logprob: -17.89824676513672
    8. 'b' → logprob: -18.39824676513672
    9. ',val' → logprob: -18.64824676513672
    10. 'Val' → logprob: -18.64824676513672

Token 36: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.043619852513074875
    2. '_a' → logprob: -3.2936198711395264
    3. '_' → logprob: -5.293619632720947
    4. '_c' → logprob: -8.418620109558105
    5. '_s' → logprob: -9.043620109558105
    6. '```' → logprob: -10.168620109558105
    7. '_val' → logprob: -10.293620109558105
    8. '_g' → logprob: -10.543620109558105
    9. ' _' → logprob: -11.043620109558105
    10. 'b' → logprob: -11.293620109558105

Token 37: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44765734672546387
    2. ')' → logprob: -1.1976573467254639
    3. '(' → logprob: -3.072657346725464
    4. 's' → logprob: -5.447657585144043
    5. '_' → logprob: -5.822657585144043
    6. '<|end|>' → logprob: -6.072657585144043
    7. '.)' → logprob: -7.072657585144043
    8. ',' → logprob: -8.697657585144043
    9. '(
' → logprob: -8.697657585144043
    10. '```' → logprob: -8.822657585144043

Token 38: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.665297269821167
    2. '(' → logprob: -1.165297269821167
    3. 's' → logprob: -2.415297269821167
    4. '.' → logprob: -3.665297269821167
    5. '_' → logprob: -4.540297508239746
    6. 'Attribute' → logprob: -4.915297508239746
    7. '<|end|>' → logprob: -5.040297508239746
    8. ' ' → logprob: -5.540297508239746
    9. '#' → logprob: -5.665297508239746
    10. 'def' → logprob: -5.790297508239746

Token 39: ' check' (ID: 2371)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.04007069766521454
    2. ' _' → logprob: -3.5400707721710205
    3. ' ' → logprob: -5.540070533752441
    4. '_' → logprob: -6.040070533752441
    5. '_compute' → logprob: -6.040070533752441
    6. ' calculate' → logprob: -6.665070533752441
    7. ' space' → logprob: -8.665070533752441
    8. 'compute' → logprob: -10.290070533752441
    9. ' find' → logprob: -10.415070533752441
    10. ' random' → logprob: -11.415070533752441

Token 40: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05474945157766342
    2. '(' → logprob: -3.6797494888305664
    3. '_div' → logprob: -5.054749488830566
    4. '_factor' → logprob: -5.554749488830566
    5. '_l' → logprob: -6.304749488830566
    6. '_val' → logprob: -6.304749488830566
    7. '_pal' → logprob: -6.554749488830566
    8. '_prime' → logprob: -6.679749488830566
    9. '_a' → logprob: -7.304749488830566
    10. '_overlap' → logprob: -7.429749488830566

Token 41: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020926215802319348
    2. '_' → logprob: -9.875208854675293
    3. ' (' → logprob: -9.875208854675293
    4. '(n' → logprob: -10.250208854675293
    5. '(num' → logprob: -10.875208854675293
    6. '(x' → logprob: -11.875208854675293
    7. '(token' → logprob: -12.125208854675293
    8. '(number' → logprob: -12.250208854675293
    9. '(user' → logprob: -12.500208854675293
    10. 's' → logprob: -12.500208854675293

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005979750771075487
    2. ')' → logprob: -5.130979537963867
    3. ' ):' → logprob: -10.630979537963867
    4. ':' → logprob: -11.255979537963867
    5. '(' → logprob: -12.380979537963867
    6. '):
' → logprob: -13.005979537963867
    7. ',' → logprob: -13.505979537963867
    8. ' ' → logprob: -13.880979537963867
    9. '():' → logprob: -14.380979537963867
    10. ')：' → logprob: -14.380979537963867

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12321789562702179
    2. ':' → logprob: -2.873217821121216
    3. ')' → logprob: -3.748217821121216
    4. ' ' → logprob: -3.998217821121216
    5. '<|end|>' → logprob: -5.123218059539795
    6. '(' → logprob: -5.248218059539795
    7. ' 
' → logprob: -6.873218059539795
    8. ' (' → logprob: -6.998218059539795
    9. '    ' → logprob: -7.248218059539795
    10. '  ' → logprob: -7.498218059539795

Token 44: ' divisor' (ID: 100482)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3407193720340729
    2. ' for' → logprob: -2.21571946144104
    3. '   ' → logprob: -2.46571946144104
    4. ' ' → logprob: -3.34071946144104
    5. 'if' → logprob: -3.59071946144104
    6. ' i' → logprob: -4.465719223022461
    7. 'for' → logprob: -5.590719223022461
    8. ' ```' → logprob: -5.715719223022461
    9. ' )' → logprob: -6.715719223022461
    10. ' (' → logprob: -6.965719223022461

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09377886354923248
    2. '=' → logprob: -2.4687788486480713
    3. 's' → logprob: -5.34377908706665
    4. '_' → logprob: -11.218778610229492
    5. ' ' → logprob: -11.718778610229492
    6. ',' → logprob: -11.718778610229492
    7. '<|end|>' → logprob: -12.593778610229492
    8. ' ==' → logprob: -13.468778610229492
    9. ' =)' → logprob: -13.593778610229492
    10. ' =
' → logprob: -13.843778610229492

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05488826707005501
    2. '2' → logprob: -2.9298882484436035
    3. ' ' → logprob: -12.804888725280762
    4. '   ' → logprob: -13.804888725280762
    5. ' math' → logprob: -15.054888725280762
    6. '3' → logprob: -15.492388725280762
    7. '  ' → logprob: -15.742388725280762
    8. 'import' → logprob: -15.804888725280762
    9. '1' → logprob: -15.867388725280762
    10. '    ' → logprob: -15.929888725280762

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015046248445287347
    2. ' ' → logprob: -6.501504421234131
    3. '3' → logprob: -14.251504898071289
    4. '   ' → logprob: -14.751504898071289
    5. '1' → logprob: -15.126504898071289
    6. 'int' → logprob: -15.251504898071289
    7. '0' → logprob: -15.501504898071289
    8. ' int' → logprob: -16.62650489807129
    9. ' math' → logprob: -16.75150489807129
    10. 'value' → logprob: -16.87650489807129

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' divisor' (ID: 100482)
  Prédit: ' divisor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.005580686964094639
    2. 'div' → logprob: -5.255580902099609
    3. '(div' → logprob: -8.38058090209961
    4. ' value' → logprob: -9.25558090209961
    5. '	div' → logprob: -12.00558090209961
    6. ' divis' → logprob: -12.00558090209961
    7. '_div' → logprob: -12.75558090209961
    8. ' div' → logprob: -12.88058090209961
    9. 'value' → logprob: -13.00558090209961
    10. ' (' → logprob: -14.38058090209961

Token 52: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0943291187286377
    2. ' <=' → logprob: -2.4693291187286377
    3. '*' → logprob: -5.344328880310059
    4. ' **' → logprob: -8.094328880310059
    5. '**' → logprob: -8.969328880310059
    6. ' ' → logprob: -9.219328880310059
    7. '<=' → logprob: -9.844328880310059
    8. '<|end|>' → logprob: -12.344328880310059
    9. '*object' → logprob: -13.094328880310059
    10. ' <' → logprob: -13.219328880310059

Token 53: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.01838042587041855
    2. ' divisor' → logprob: -4.018380641937256
    3. '	div' → logprob: -8.643380165100098
    4. '_div' → logprob: -11.018380165100098
    5. '<div' → logprob: -11.143380165100098
    6. '(div' → logprob: -11.768380165100098
    7. ' divis' → logprob: -12.393380165100098
    8. ' ' → logprob: -12.518380165100098
    9. '-div' → logprob: -12.768380165100098
    10. '/div' → logprob: -13.393380165100098

Token 54: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0012048733187839389
    2. '<=' → logprob: -7.126204967498779
    3. '<|end|>' → logprob: -7.876204967498779
    4. ' ' → logprob: -11.626204490661621
    5. '<|end|>' → logprob: -13.001204490661621
    6. ' <' → logprob: -13.001204490661621
    7. ' ≤' → logprob: -13.126204490661621
    8. ' <=",' → logprob: -13.501204490661621
    9. ')<=' → logprob: -14.126204490661621
    10. ']<=' → logprob: -14.251204490661621

Token 55: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.029750952497124672
    2. 'value' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.40475082397461
    4. '	value' → logprob: -15.65475082397461
    5. '    ' → logprob: -16.77975082397461
    6. ')value' → logprob: -17.77975082397461
    7. '   ' → logprob: -17.77975082397461
    8. ' ' → logprob: -17.77975082397461
    9. '(value' → logprob: -18.02975082397461
    10. '"value' → logprob: -18.27975082397461

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042073700577020645
    2. ' and' → logprob: -3.2920737266540527
    3. ' :' → logprob: -5.792073726654053
    4. 'and' → logprob: -7.542073726654053
    5. ':
' → logprob: -8.292073249816895
    6. '<|end|>' → logprob: -9.167073249816895
    7. '):' → logprob: -10.542073249816895
    8. '   ' → logprob: -11.417073249816895
    9. '<|end|>' → logprob: -11.417073249816895
    10. ':return' → logprob: -11.667073249816895

Token 57: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.361474871635437
    2. '   ' → logprob: -2.1114749908447266
    3. ' ' → logprob: -2.2364749908447266
    4. '\' → logprob: -2.3614749908447266
    5. '       ' → logprob: -2.3614749908447266
    6. '    ' → logprob: -2.3614749908447266
    7. ' :' → logprob: -2.9864749908447266
    8. ' 
' → logprob: -2.9864749908447266
    9. '<|end|>' → logprob: -3.1114749908447266
    10. '\n' → logprob: -3.7364749908447266

Token 58: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7033234238624573
    2. '<|end|>' → logprob: -1.8283233642578125
    3. ' if' → logprob: -2.2033233642578125
    4. '    ' → logprob: -2.4533233642578125
    5. 'if' (adapté à ' if') → logprob: -3.5783233642578125
    6. '   ' → logprob: -3.5783233642578125
    7. '<|end|>' → logprob: -3.7033233642578125
    8. ' 
' → logprob: -4.2033233642578125
    9. '
' → logprob: -4.2033233642578125
    10. ':' → logprob: -4.2033233642578125

Token 59: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.004626172594726086
    2. 'value' → logprob: -5.379626274108887
    3. '(value' → logprob: -12.504626274108887
    4. ' ' → logprob: -13.879626274108887
    5. ' (' → logprob: -14.004626274108887
    6. '	value' → logprob: -15.504626274108887
    7. ')value' → logprob: -15.879626274108887
    8. '"value' → logprob: -16.75462532043457
    9. ' ' → logprob: -17.37962532043457
    10. ' val' → logprob: -17.62962532043457

Token 60: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.038044705986976624
    2. '%' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.163044929504395
    4. ' ' → logprob: -14.038044929504395
    5. '<|end|>' → logprob: -15.288044929504395
    6. '%i' → logprob: -17.038043975830078
    7. '％' → logprob: -17.663043975830078
    8. ' %"' → logprob: -17.788043975830078
    9. ' %

' → logprob: -18.038043975830078
    10. '<|end|>' → logprob: -18.163043975830078

Token 61: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.006721417419612408
    2. ' divisor' → logprob: -5.006721496582031
    3. '	div' → logprob: -13.131721496582031
    4. '(div' → logprob: -13.506721496582031
    5. '_div' → logprob: -13.881721496582031
    6. 'divider' → logprob: -14.256721496582031
    7. ' ' → logprob: -14.756721496582031
    8. '<div' → logprob: -14.881721496582031
    9. '/div' → logprob: -16.13172149658203
    10. '.div' → logprob: -16.13172149658203

Token 62: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5232383608818054
    2. '==' → logprob: -0.8982383608818054
    3. '=' → logprob: -10.398238182067871
    4. ' ' → logprob: -10.398238182067871
    5. ')==' → logprob: -11.148238182067871
    6. '<|end|>' → logprob: -11.148238182067871
    7. '0' → logprob: -11.398238182067871
    8. ' ' → logprob: -12.648238182067871
    9. ')' → logprob: -12.773238182067871
    10. '===' → logprob: -13.023238182067871

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519300878047943
    2. '0' → logprob: -1.5019301176071167
    3. ' ' → logprob: -14.251930236816406
    4. '<|end|>' → logprob: -15.501930236816406
    5. '  ' → logprob: -16.501930236816406
    6. '```' → logprob: -17.626930236816406
    7. '   ' → logprob: -17.751930236816406
    8. '۰' → logprob: -18.126930236816406
    9. ' 
' → logprob: -18.314430236816406
    10. ' 

' → logprob: -18.439430236816406

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.375709533691406
    4. '  ' → logprob: -20.750709533691406
    5. '۰' → logprob: -21.375709533691406
    6. '<|end|>' → logprob: -21.875709533691406
    7. '```' → logprob: -22.125709533691406
    8. ' ' → logprob: -22.125709533691406
    9. ' ' → logprob: -22.750709533691406
    10. '00' → logprob: -23.125709533691406

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019248253665864468
    2. ':return' → logprob: -6.751924991607666
    3. ':
' → logprob: -7.501924991607666
    4. '):' → logprob: -9.376924514770508
    5. ' :' → logprob: -9.501924514770508
    6. '       ' → logprob: -10.501924514770508
    7. '           ' → logprob: -12.376924514770508
    8. ' return' → logprob: -13.001924514770508
    9. '   ' → logprob: -13.251924514770508
    10. '<|end|>' → logprob: -13.751924514770508

Token 66: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0645703673362732
    2. ' return' → logprob: -3.189570426940918
    3. '           ' → logprob: -4.189570426940918
    4. '        ' → logprob: -5.814570426940918
    5. 'return' → logprob: -6.314570426940918
    6. '        
' → logprob: -8.064570426940918
    7. ' 
' → logprob: -8.064570426940918
    8. '   ' → logprob: -8.439570426940918
    9. ' ' → logprob: -8.814570426940918
    10. '    ' → logprob: -9.314570426940918

Token 67: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04899971932172775
    2. 'return' (adapté à ' return') → logprob: -3.298999786376953
    3. '       ' → logprob: -5.048999786376953
    4. '               ' → logprob: -5.673999786376953
    5. '           ' → logprob: -7.048999786376953
    6. '   ' → logprob: -9.423999786376953
    7. ' ' → logprob: -10.423999786376953
    8. ' 
' → logprob: -10.673999786376953
    9. '        ' → logprob: -11.423999786376953
    10. ' ' → logprob: -11.423999786376953

Token 68: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.2014133334159851
    2. 'False' → logprob: -1.7014133930206299
    3. ' True' → logprob: -17.326414108276367
    4. ' ' → logprob: -17.451414108276367
    5. '(False' → logprob: -18.826414108276367
    6. ' ' → logprob: -19.076414108276367
    7. ' None' → logprob: -19.201414108276367
    8. 'True' → logprob: -19.326414108276367
    9. ' false' → logprob: -19.951414108276367
    10. 'F' → logprob: -20.326414108276367

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07895401120185852
    2. '
' → logprob: -2.828953981399536
    3. '        
' → logprob: -5.203954219818115
    4. '<|end|>' → logprob: -5.703954219818115
    5. '   ' → logprob: -5.828954219818115
    6. ' 
' → logprob: -6.078954219818115
    7. '    
' → logprob: -6.953954219818115
    8. '\n' → logprob: -7.453954219818115
    9. '  
' → logprob: -7.828954219818115
    10. '   
' → logprob: -9.078953742980957

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01447962038218975
    2. '<|end|>' → logprob: -4.639479637145996
    3. '   ' → logprob: -6.139479637145996
    4. '        
' → logprob: -6.889479637145996
    5. '
' → logprob: -7.889479637145996
    6. ' 
' → logprob: -8.264479637145996
    7. '<|end|>' → logprob: -9.014479637145996
    8. ')' → logprob: -9.014479637145996
    9. '    
' → logprob: -9.264479637145996
    10. '    ' → logprob: -9.514479637145996

Token 71: ' divisor' (ID: 100482)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10334785282611847
    2. 'div' → logprob: -2.9783477783203125
    3. '   ' → logprob: -3.6033477783203125
    4. ' divisor' → logprob: -4.1033477783203125
    5. '
' → logprob: -6.8533477783203125
    6. '	div' → logprob: -7.3533477783203125
    7. '        
' → logprob: -7.4783477783203125
    8. ' div' → logprob: -7.8533477783203125
    9. '    ' → logprob: -8.228347778320312
    10. ' ' → logprob: -8.478347778320312

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07012315839529037
    2. '+=' → logprob: -2.8201231956481934
    3. '+' → logprob: -4.820123195648193
    4. ' +' → logprob: -9.945122718811035
    5. '=' → logprob: -12.570122718811035
    6. '++' → logprob: -13.070122718811035
    7. ' ' → logprob: -13.445122718811035
    8. '<|end|>' → logprob: -14.695122718811035
    9. '+="' → logprob: -14.820122718811035
    10. '+='' → logprob: -15.695122718811035

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '2' → logprob: -18.253177642822266
    4. '   ' → logprob: -18.503177642822266
    5. ' ' → logprob: -18.753177642822266
    6. '  ' → logprob: -19.503177642822266
    7. '```' → logprob: -20.503177642822266
    8. '<|end|>' → logprob: -20.628177642822266
    9. '１' → logprob: -21.128177642822266
    10. '    ' → logprob: -21.253177642822266

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.2500057220459
    4. '１' → logprob: -19.6250057220459
    5. '  ' → logprob: -20.1875057220459
    6. '१' → logprob: -20.2500057220459
    7. '2' → logprob: -20.2500057220459
    8. '۱' → logprob: -20.3125057220459
    9. '১' → logprob: -21.0000057220459
    10. '```' → logprob: -21.0000057220459

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01716015115380287
    2. '   ' → logprob: -4.267159938812256
    3. 'return' → logprob: -6.892159938812256
    4. ' 
' → logprob: -7.142159938812256
    5. '    
' → logprob: -7.892159938812256
    6. ' return' → logprob: -8.392160415649414
    7. '```' → logprob: -8.392160415649414
    8. '  
' → logprob: -8.642160415649414
    9. '
' → logprob: -9.517160415649414
    10. '\n' → logprob: -10.767160415649414

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44681328535079956
    2. '   ' → logprob: -1.0718133449554443
    3. 'return' → logprob: -4.696813106536865
    4. '```' → logprob: -5.821813106536865
    5. ' 
' → logprob: -5.946813106536865
    6. '    
' → logprob: -6.571813106536865
    7. '  
' → logprob: -7.321813106536865
    8. ' return' → logprob: -7.696813106536865
    9. '	return' → logprob: -8.821813583374023
    10. '<|end|>' → logprob: -9.071813583374023

Token 77: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5888693928718567
    2. 'return' (adapté à ' return') → logprob: -0.8388693928718567
    3. '
' → logprob: -4.963869571685791
    4. ' return' → logprob: -5.713869571685791
    5. '    
' → logprob: -6.713869571685791
    6. '```' → logprob: -7.338869571685791
    7. '	return' → logprob: -8.463869094848633
    8. ' 
' → logprob: -8.963869094848633
    9. '  
' → logprob: -9.213869094848633
    10. ':return' → logprob: -9.338869094848633

Token 78: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25192907452583313
    2. ' True' → logprob: -1.5019290447235107
    3. '(True' → logprob: -17.626928329467773
    4. ' Tru' → logprob: -19.001928329467773
    5. 'Tr' → logprob: -19.501928329467773
    6. ' ' → logprob: -19.626928329467773
    7. '=True' → logprob: -19.876928329467773
    8. 'true' → logprob: -20.501928329467773
    9. '   ' → logprob: -20.751928329467773
    10. ' ' → logprob: -20.876928329467773

Token 79: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5387372970581055
    2. ')' → logprob: -2.0387372970581055
    3. 's' → logprob: -2.6637372970581055
    4. '#' → logprob: -3.0387372970581055
    5. ' ' → logprob: -3.1637372970581055
    6. 'def' → logprob: -3.5387372970581055
    7. 'f' → logprob: -3.7887372970581055
    8. '<|end|>' → logprob: -3.9137372970581055
    9. 'r' → logprob: -4.6637372970581055
    10. '-' → logprob: -4.7887372970581055

Token 80: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31180810928344727
    2. ')' → logprob: -2.1868081092834473
    3. '#' → logprob: -3.4368081092834473
    4. 'f' → logprob: -3.8118081092834473
    5. 's' → logprob: -4.186808109283447
    6. 'r' → logprob: -4.311808109283447
    7. ' ' → logprob: -4.311808109283447
    8. 'def' → logprob: -4.436808109283447
    9. '-' → logprob: -4.936808109283447
    10. 'e' → logprob: -5.061808109283447

Token 81: ' generate' (ID: 10419)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.49595287442207336
    2. ' generate' → logprob: -1.495952844619751
    3. ' find' → logprob: -2.870952844619751
    4. ' compute' → logprob: -3.245952844619751
    5. ' get' → logprob: -3.995952844619751
    6. ' calculate' → logprob: -4.37095308303833
    7. ' factorial' → logprob: -4.87095308303833
    8. ' main' → logprob: -4.99595308303833
    9. ' l' → logprob: -4.99595308303833
    10. ' random' → logprob: -5.24595308303833

Token 82: '_pr' (ID: 18177)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.1684180349111557
    2. '_random' → logprob: -2.4184179306030273
    3. '_number' → logprob: -3.6684179306030273
    4. '_' → logprob: -4.043417930603027
    5. '_numbers' → logprob: -4.668417930603027
    6. '_pr' → logprob: -5.418417930603027
    7. '_factor' → logprob: -5.418417930603027
    8. '_unique' → logprob: -7.043417930603027
    9. '_pal' → logprob: -7.043417930603027
    10. '_key' → logprob: -7.418417930603027

Token 83: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.0055215307511389256
    2. 'imes' → logprob: -5.755521297454834
    3. 'im' → logprob: -6.880521297454834
    4. 'i' → logprob: -7.630521297454834
    5. '#' → logprob: -9.130521774291992
    6. '_' → logprob: -9.255521774291992
    7. '```' → logprob: -9.505521774291992
    8. '   ' → logprob: -9.880521774291992
    9. '_prime' → logprob: -10.005521774291992
    10. 'prime' → logprob: -10.380521774291992

Token 84: '(limit' (ID: 112473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08077143132686615
    2. '(n' → logprob: -2.5807714462280273
    3. '(num' → logprob: -6.955771446228027
    4. '(max' → logprob: -8.205771446228027
    5. '(size' → logprob: -8.580771446228027
    6. ' (' → logprob: -9.455771446228027
    7. '(start' → logprob: -9.705771446228027
    8. '(_' → logprob: -9.830771446228027
    9. '(limit' → logprob: -9.830771446228027
    10. '(count' → logprob: -10.455771446228027

Token 85: '_val' (ID: 13694)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006797884125262499
    2. ')' → logprob: -7.750679969787598
    3. ' ):' → logprob: -9.000679969787598
    4. '):
' → logprob: -9.875679969787598
    5. ':' → logprob: -10.250679969787598
    6. '=' → logprob: -10.625679969787598
    7. ' ' → logprob: -12.250679969787598
    8. ',' → logprob: -12.625679969787598
    9. '   ' → logprob: -13.125679969787598
    10. '():' → logprob: -13.875679969787598

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032402228680439293
    2. ')' → logprob: -8.250324249267578
    3. ' ):' → logprob: -10.625324249267578
    4. '):
' → logprob: -11.625324249267578
    5. '():' → logprob: -11.875324249267578
    6. ':' → logprob: -11.875324249267578
    7. '(' → logprob: -12.125324249267578
    8. '=' → logprob: -12.375324249267578
    9. ',' → logprob: -12.875324249267578
    10. '   ' → logprob: -13.375324249267578

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1437402069568634
    2. ' primes' → logprob: -2.018740177154541
    3. 'pr' → logprob: -7.893740177154541
    4. ':' → logprob: -8.3937406539917
    5. '	pr' → logprob: -9.0187406539917
    6. 'prime' → logprob: -9.6437406539917
    7. ' prime' → logprob: -10.2687406539917
    8. '  ' → logprob: -10.3937406539917
    9. '    
' → logprob: -10.3937406539917
    10. '    ' → logprob: -10.6437406539917

Token 88: ' prime' (ID: 9197)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.45446035265922546
    2. 'pr' → logprob: -1.0794603824615479
    3. '   ' → logprob: -3.704460382461548
    4. ' prime' → logprob: -8.079460144042969
    5. 'prime' (adapté à ' prime') → logprob: -8.079460144042969
    6. '	pr' → logprob: -9.579460144042969
    7. ' for' → logprob: -10.829460144042969
    8. ' pr' → logprob: -11.204460144042969
    9. '```' → logprob: -11.204460144042969
    10. ' result' → logprob: -11.329460144042969

Token 89: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00103042705450207
    2. '_list' → logprob: -7.126030445098877
    3. '_s' → logprob: -8.751029968261719
    4. '_numbers' → logprob: -10.001029968261719
    5. 'list' → logprob: -12.126029968261719
    6. '_' → logprob: -12.376029968261719
    7. '_set' → logprob: -13.126029968261719
    8. 'List' → logprob: -13.376029968261719
    9. '_values' → logprob: -13.501029968261719
    10. '```' → logprob: -13.626029968261719

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975963056087494
    2. '=' → logprob: -3.529759645462036
    3. '=[]' → logprob: -12.029759407043457
    4. 's' → logprob: -13.154759407043457
    5. ' ' → logprob: -14.404759407043457
    6. '=[]
' → logprob: -15.904759407043457
    7. '  ' → logprob: -16.279760360717773
    8. ')' → logprob: -16.404760360717773
    9. '_' → logprob: -16.529760360717773
    10. ',' → logprob: -16.654760360717773

Token 91: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0038986308500170708
    2. '[]' → logprob: -6.128898620605469
    3. ' [' → logprob: -6.378898620605469
    4. ' ' → logprob: -11.753898620605469
    5. '[' → logprob: -12.128898620605469
    6. ' []
' → logprob: -13.628898620605469
    7. ' []

' → logprob: -15.753898620605469
    8. ' [];' → logprob: -15.753898620605469
    9. ' [],' → logprob: -16.37889862060547
    10. '[]>' → logprob: -17.25389862060547

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00647945748642087
    2. ' for' → logprob: -6.506479263305664
    3. '    
' → logprob: -6.631479263305664
    4. '
' → logprob: -6.756479263305664
    5. ' ' → logprob: -7.381479263305664
    6. '<|end|>' → logprob: -7.381479263305664
    7. 'for' → logprob: -7.631479263305664
    8. '  ' → logprob: -8.381479263305664
    9. '    ' → logprob: -8.506479263305664
    10. ' 
' → logprob: -9.756479263305664

Token 93: ' for' (ID: 395)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.44142240285873413
    2. 'for' (adapté à ' for') → logprob: -1.316422462463379
    3. 'number' → logprob: -3.316422462463379
    4. 'current' → logprob: -3.441422462463379
    5. ' for' → logprob: -4.941422462463379
    6. '   ' → logprob: -5.566422462463379
    7. 'candidate' → logprob: -5.566422462463379
    8. ' num' → logprob: -6.066422462463379
    9. 'value' → logprob: -6.816422462463379
    10. 'n' → logprob: -7.441422462463379

Token 94: ' candidate' (ID: 17098)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.18937738239765167
    2. ' number' → logprob: -2.0643773078918457
    3. ' i' → logprob: -3.1893773078918457
    4. ' n' → logprob: -5.939377307891846
    5. ' value' → logprob: -7.064377307891846
    6. ' val' → logprob: -7.814377307891846
    7. 'num' → logprob: -8.689377784729004
    8. ' current' → logprob: -8.939377784729004
    9. ' ' → logprob: -9.564377784729004
    10. ' x' → logprob: -10.064377784729004

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005409838631749153
    2. 'in' → logprob: -5.2554097175598145
    3. ' ' → logprob: -8.755410194396973
    4. 's' → logprob: -12.505410194396973
    5. '  ' → logprob: -12.880410194396973
    6. '	in' → logprob: -12.880410194396973
    7. '<|end|>' → logprob: -13.255410194396973
    8. '=' → logprob: -13.755410194396973
    9. '_' → logprob: -14.005410194396973
    10. 'import' → logprob: -14.130410194396973

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.8312570318812504e-05
    2. 'range' → logprob: -11.000018119812012
    3. ' ' → logprob: -14.000018119812012
    4. '	range' → logprob: -14.375018119812012
    5. ' xrange' → logprob: -16.375019073486328
    6. '(range' → logprob: -18.000019073486328
    7. '  ' → logprob: -18.250019073486328
    8. ' ' → logprob: -18.500019073486328
    9. '   ' → logprob: -19.000019073486328
    10. '    ' → logprob: -19.750019073486328

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. '2' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.625006675720215
    4. ' ' → logprob: -17.6250057220459
    5. '(
' → logprob: -17.7500057220459
    6. '1' → logprob: -18.5000057220459
    7. '<|end|>' → logprob: -19.7500057220459
    8. '```' → logprob: -19.8750057220459
    9. '(

' → logprob: -20.5000057220459
    10. '   ' → logprob: -20.5000057220459

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004092647228389978
    2. ' ' → logprob: -5.504092693328857
    3. '   ' → logprob: -11.3790922164917
    4. '  ' → logprob: -14.2540922164917
    5. '(' → logprob: -14.6290922164917
    6. '1' → logprob: -14.7540922164917
    7. ')' → logprob: -15.4415922164917
    8. '```' → logprob: -15.6915922164917
    9. '    ' → logprob: -15.8790922164917
    10. '3' → logprob: -15.8790922164917

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009115827269852161
    2. ' ,' → logprob: -7.000911712646484
    3. 'limit' → logprob: -17.000911712646484
    4. ',
' → logprob: -17.875911712646484
    5. ',

' → logprob: -18.125911712646484
    6. ',int' → logprob: -19.000911712646484
    7. '(limit' → logprob: -19.375911712646484
    8. ',len' → logprob: -19.500911712646484
    9. ',to' → logprob: -19.875911712646484
    10. ',length' → logprob: -20.125911712646484

Token 100: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.57594895362854
    2. 'limit' → logprob: -0.82594895362854
    3. '(limit' → logprob: -11.950948715209961
    4. ' ' → logprob: -13.700948715209961
    5. '_limit' → logprob: -14.575948715209961
    6. ' ' → logprob: -14.575948715209961
    7. '   ' → logprob: -15.325948715209961
    8. 'lim' → logprob: -15.575948715209961
    9. '.limit' → logprob: -15.575948715209961
    10. '    ' → logprob: -15.700948715209961

Token 101: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.4153549020411447e-05
    2. '_' → logprob: -11.00002384185791
    3. 'val' → logprob: -13.25002384185791
    4. '   ' → logprob: -13.62502384185791
    5. ')' → logprob: -13.75002384185791
    6. '_VAL' → logprob: -14.25002384185791
    7. '+' → logprob: -15.12502384185791
    8. 'Val' → logprob: -15.12502384185791
    9. ' ' → logprob: -15.25002384185791
    10. '):' → logprob: -15.62502384185791

Token 102: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0677809938788414
    2. '+' → logprob: -2.8177809715270996
    3. ' +' → logprob: -5.8177809715271
    4. ' ):' → logprob: -5.9427809715271
    5. '):
' → logprob: -9.192781448364258
    6. ')' → logprob: -9.442781448364258
    7. ' ' → logprob: -11.442781448364258
    8. '+:' → logprob: -13.442781448364258
    9. '   ' → logprob: -14.067781448364258
    10. ':' → logprob: -14.192781448364258

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014138251543045
    2. ' ' → logprob: -1.701413869857788
    3. ')' → logprob: -15.576414108276367
    4. '  ' → logprob: -16.076414108276367
    5. ' ' → logprob: -16.076414108276367
    6. '   ' → logprob: -16.826414108276367
    7. ' )' → logprob: -17.076414108276367
    8. '```' → logprob: -18.701414108276367
    9. '    ' → logprob: -18.826414108276367
    10. '

' → logprob: -19.076414108276367

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.877185821533203
    4. '  ' → logprob: -16.127185821533203
    5. ')' → logprob: -17.252185821533203
    6. '```' → logprob: -17.877185821533203
    7. '    ' → logprob: -18.502185821533203
    8. ' ' → logprob: -19.002185821533203
    9. ' )' → logprob: -19.252185821533203
    10. '
' → logprob: -19.564685821533203

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006724014529027045
    2. '):
' → logprob: -8.000672340393066
    3. ':' → logprob: -8.125672340393066
    4. ' ):' → logprob: -10.500672340393066
    5. ')' → logprob: -11.875672340393066
    6. '   ' → logprob: -12.625672340393066
    7. ',' → logprob: -13.375672340393066
    8. '):
' → logprob: -14.250672340393066
    9. ' ' → logprob: -15.125672340393066
    10. ' :' → logprob: -15.625672340393066

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009135767817497253
    2. ':' → logprob: -5.884135723114014
    3. '   ' → logprob: -6.009135723114014
    4. ' if' → logprob: -6.009135723114014
    5. ' ' → logprob: -7.134135723114014
    6. '    ' → logprob: -9.259136199951172
    7. ' :' → logprob: -9.509136199951172
    8. 'if' → logprob: -9.634136199951172
    9. '        
' → logprob: -9.759136199951172
    10. ':
' → logprob: -9.884136199951172

Token 107: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14441326260566711
    2. 'if' (adapté à ' if') → logprob: -2.3944132328033447
    3. '       ' → logprob: -3.2694132328033447
    4. '   ' → logprob: -5.269413471221924
    5. ' ' → logprob: -10.019412994384766
    6. '    ' → logprob: -11.644412994384766
    7. '	if' → logprob: -12.769412994384766
    8. '           ' → logprob: -12.894412994384766
    9. '  ' → logprob: -13.144412994384766
    10. ' ' → logprob: -13.269412994384766

Token 108: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.0011734402505680919
    2. 'check' → logprob: -6.751173496246338
    3. ' ' → logprob: -12.87617301940918
    4. '(check' → logprob: -15.00117301940918
    5. '	check' → logprob: -15.37617301940918
    6. ' ' → logprob: -16.12617301940918
    7. ' not' → logprob: -18.87617301940918
    8. '  ' → logprob: -19.50117301940918
    9. '   ' → logprob: -20.00117301940918
    10. ' compute' → logprob: -20.12617301940918

Token 109: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0003230686706956476
    2. '_' → logprob: -8.375323295593262
    3. '_pr' → logprob: -9.375323295593262
    4. 'prime' → logprob: -13.250323295593262
    5. ' _' → logprob: -13.250323295593262
    6. '_candidate' → logprob: -13.500323295593262
    7. '_Pr' → logprob: -14.375323295593262
    8. ' ' → logprob: -14.750323295593262
    9. '```' → logprob: -15.125323295593262
    10. ''_' → logprob: -15.500323295593262

Token 110: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.0006778847891837358
    2. '(' → logprob: -7.875678062438965
    3. ' (' → logprob: -8.125678062438965
    4. ')' → logprob: -13.625678062438965
    5. 'candidate' → logprob: -15.250678062438965
    6. ')(' → logprob: -16.00067710876465
    7. ' ' → logprob: -16.37567710876465
    8. '(
' → logprob: -16.75067710876465
    9. ' )' → logprob: -17.37567710876465
    10. ' candidate' → logprob: -17.75067710876465

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00271952198818326
    2. '):
' → logprob: -6.002719402313232
    3. ' ):' → logprob: -8.37771987915039
    4. ')' → logprob: -11.75271987915039
    5. ':' → logprob: -13.00271987915039
    6. ' ):
' → logprob: -13.75271987915039
    7. '   ' → logprob: -14.12771987915039
    8. '):
' → logprob: -14.25271987915039
    9. '():' → logprob: -14.62771987915039
    10. '):

' → logprob: -15.37771987915039

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009088410879485309
    2. ' prime' → logprob: -7.625908851623535
    3. 'prime' → logprob: -8.000908851623535
    4. '          ' → logprob: -11.125908851623535
    5. '       ' → logprob: -11.125908851623535
    6. ' ' → logprob: -11.500908851623535
    7. '            
' → logprob: -11.750908851623535
    8. '	       ' → logprob: -11.750908851623535
    9. ':' → logprob: -11.875908851623535
    10. '_prime' → logprob: -12.000908851623535

Token 113: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.017234904691576958
    2. 'prime' (adapté à ' prime') → logprob: -4.142234802246094
    3. '           ' → logprob: -6.767234802246094
    4. '       ' → logprob: -11.142234802246094
    5. ' ' → logprob: -11.392234802246094
    6. '               ' → logprob: -11.642234802246094
    7. '   ' → logprob: -12.017234802246094
    8. '_prime' → logprob: -12.267234802246094
    9. ' ' → logprob: -14.142234802246094
    10. '
' → logprob: -14.267234802246094

Token 114: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.45848218582978e-06
    2. 's' → logprob: -13.00000286102295
    3. ' _' → logprob: -15.87500286102295
    4. '_' → logprob: -18.500001907348633
    5. ')_' → logprob: -18.625001907348633
    6. '_s' → logprob: -18.750001907348633
    7. '_List' → logprob: -18.875001907348633
    8. '_lst' → logprob: -18.875001907348633
    9. '_lists' → logprob: -19.000001907348633
    10. 'List' → logprob: -19.500001907348633

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018200045451521873
    2. '.' → logprob: -4.018199920654297
    3. ' .' → logprob: -10.143199920654297
    4. '.app' → logprob: -12.893199920654297
    5. '.add' → logprob: -13.018199920654297
    6. '.Append' → logprob: -13.768199920654297
    7. '.setdefault' → logprob: -14.268199920654297
    8. '.ap' → logprob: -14.393199920654297
    9. '.py' → logprob: -14.393199920654297
    10. 'append' → logprob: -14.393199920654297

Token 116: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.25193166732788086
    2. '(' → logprob: -1.5019316673278809
    3. '(
' → logprob: -13.501932144165039
    4. '(

' → logprob: -14.376932144165039
    5. 'candidate' → logprob: -15.376932144165039
    6. ' (' → logprob: -15.626932144165039
    7. '(c' → logprob: -17.75193214416504
    8. '('' → logprob: -17.87693214416504
    9. '((' → logprob: -18.00193214416504
    10. '()' → logprob: -18.12693214416504

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.841743303695694e-05
    2. ')
' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.87509822845459
    4. ' )' → logprob: -14.37509822845459
    5. ')return' → logprob: -14.75009822845459
    6. ')

' → logprob: -16.375099182128906
    7. ')
' → logprob: -16.500099182128906
    8. ' ' → logprob: -17.750099182128906
    9. '       ' → logprob: -17.875099182128906
    10. ',' → logprob: -18.125099182128906

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001499983249232173
    2. 'return' → logprob: -6.751500129699707
    3. ' return' → logprob: -8.501500129699707
    4. '
' → logprob: -9.126500129699707
    5. '    
' → logprob: -11.876500129699707
    6. '	return' → logprob: -13.001500129699707
    7. '```' → logprob: -13.376500129699707
    8. ':return' → logprob: -13.376500129699707
    9. '       ' → logprob: -13.501500129699707
    10. ')' → logprob: -13.751500129699707

Token 119: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07479695230722427
    2. '   ' → logprob: -3.3247969150543213
    3. ' return' → logprob: -3.3247969150543213
    4. '
' → logprob: -9.699796676635742
    5. ' ' → logprob: -11.074796676635742
    6. '    
' → logprob: -11.449796676635742
    7. '	return' → logprob: -12.324796676635742
    8. '```' → logprob: -12.574796676635742
    9. ':return' → logprob: -12.699796676635742
    10. 'eturn' → logprob: -12.949796676635742

Token 120: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.10020806640386581
    2. 'prime' → logprob: -2.350208044052124
    3. 'pr' → logprob: -14.100208282470703
    4. ' ' → logprob: -14.975208282470703
    5. ' primes' → logprob: -16.100208282470703
    6. '_prime' → logprob: -16.225208282470703
    7. ' ' → logprob: -16.725208282470703
    8. 'prim' → logprob: -17.100208282470703
    9. '   ' → logprob: -17.975208282470703
    10. '(pr' → logprob: -18.850208282470703

Token 121: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.750005722045898
    3. '_l' → logprob: -13.000005722045898
    4. ' _' → logprob: -15.125005722045898
    5. '_li' → logprob: -15.500005722045898
    6. 's' → logprob: -15.875005722045898
    7. 'list' → logprob: -16.6250057220459
    8. '_lst' → logprob: -16.7500057220459
    9. 'List' → logprob: -18.2500057220459
    10. '```' → logprob: -18.3750057220459

Token 122: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7748874425888062
    2. '<|end|>' → logprob: -1.2748874425888062
    3. '#' → logprob: -2.3998875617980957
    4. ',' → logprob: -2.8998875617980957
    5. '_' → logprob: -3.5248875617980957
    6. '[' → logprob: -3.7748875617980957
    7. ' ' → logprob: -4.774887561798096
    8. 's' → logprob: -4.899887561798096
    9. '.' → logprob: -5.024887561798096
    10. 'def' → logprob: -5.149887561798096

Token 123: 'matrix' (ID: 37307)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7180465459823608
    2. '_' → logprob: -1.7180465459823608
    3. ',' → logprob: -2.5930466651916504
    4. ')' → logprob: -2.9680466651916504
    5. 'def' → logprob: -2.9680466651916504
    6. 'f' → logprob: -3.2180466651916504
    7. '-' → logprob: -3.3430466651916504
    8. ':' → logprob: -3.8430466651916504
    9. '/' → logprob: -4.34304666519165
    10. '[' → logprob: -4.59304666519165

Token 124: '_size' (ID: 5044)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11796092242002487
    2. '_' → logprob: -2.4929609298706055
    3. '[' → logprob: -4.2429609298706055
    4. '=' → logprob: -5.1179609298706055
    5. ' ' → logprob: -5.2429609298706055
    6. '_size' → logprob: -7.2429609298706055
    7. 's' → logprob: -7.7429609298706055
    8. '.' → logprob: -7.8679609298706055
    9. '_space' → logprob: -7.9929609298706055
    10. '(' → logprob: -8.242960929870605

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07917695492506027
    2. ' ' → logprob: -3.329176902770996
    3. '=' → logprob: -3.454176902770996
    4. '<|end|>' → logprob: -5.204176902770996
    5. '_' → logprob: -5.954176902770996
    6. ')' → logprob: -8.704176902770996
    7. '_space' → logprob: -9.454176902770996
    8. '  ' → logprob: -9.579176902770996
    9. '[' → logprob: -10.079176902770996
    10. ',' → logprob: -10.204176902770996

Token 126: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010488930158317089
    2. '10' → logprob: -4.885488986968994
    3. '5' → logprob: -6.010488986968994
    4. ' int' → logprob: -8.635488510131836
    5. '4' → logprob: -9.260488510131836
    6. ' random' → logprob: -9.635488510131836
    7. '3' → logprob: -10.635488510131836
    8. '100' → logprob: -11.260488510131836
    9. 'int' → logprob: -11.260488510131836
    10. ' randint' → logprob: -11.760488510131836

Token 127: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3136175572872162
    2. '(input' → logprob: -1.3136175870895386
    3. 'input' → logprob: -8.813617706298828
    4. '()' → logprob: -9.688617706298828
    5. '(random' → logprob: -9.938617706298828
    6. '('' → logprob: -10.063617706298828
    7. ' (' → logprob: -10.438617706298828
    8. '("' → logprob: -11.438617706298828
    9. '(
' → logprob: -12.563617706298828
    10. '(raw' → logprob: -13.438617706298828

Token 128: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.210536390542984
    2. '())' → logprob: -2.335536479949951
    3. '(' → logprob: -2.460536479949951
    4. '("' → logprob: -5.460536479949951
    5. '('' → logprob: -6.085536479949951
    6. '("("' → logprob: -7.210536479949951
    7. '("")' → logprob: -9.335536003112793
    8. '()>' → logprob: -9.460536003112793
    9. '(">' → logprob: -9.460536003112793
    10. '(""))' → logprob: -10.460536003112793

Token 129: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.07997136563062668
    2. ' matrix' → logprob: -3.2049713134765625
    3. 'result' → logprob: -4.7049713134765625
    4. 'n' → logprob: -5.4549713134765625
    5. '[' → logprob: -5.8299713134765625
    6. '_matrix' → logprob: -5.9549713134765625
    7. 'numbers' → logprob: -6.0799713134765625
    8. ' ' → logprob: -6.4549713134765625
    9. ')' → logprob: -6.8299713134765625
    10. 'rows' → logprob: -6.9549713134765625

Token 130: '_elements' (ID: 53344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07071677595376968
    2. '=' → logprob: -2.6957168579101562
    3. '_' → logprob: -7.570716857910156
    4. '=[]' → logprob: -9.320716857910156
    5. '[]' → logprob: -10.195716857910156
    6. '[' → logprob: -10.195716857910156
    7. 's' → logprob: -10.320716857910156
    8. ' ' → logprob: -10.695716857910156
    9. ' =[' → logprob: -11.320716857910156
    10. '   ' → logprob: -11.695716857910156

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197163224220276
    2. '=' → logprob: -1.5019716024398804
    3. '=[]' → logprob: -10.251971244812012
    4. ' =[' → logprob: -12.751971244812012
    5. ' ' → logprob: -13.376971244812012
    6. '[]' → logprob: -14.251971244812012
    7. '[' → logprob: -14.501971244812012
    8. '=[' → logprob: -14.626971244812012
    9. ' ' → logprob: -15.626971244812012
    10. '[:]' → logprob: -15.876971244812012

Token 132: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.40177062153816223
    2. '[' → logprob: -1.1517705917358398
    3. ' []' → logprob: -4.40177059173584
    4. ' [' → logprob: -6.15177059173584
    5. '[list' → logprob: -9.15177059173584
    6. '[
' → logprob: -9.27677059173584
    7. '[]
' → logprob: -9.52677059173584
    8. '[][]' → logprob: -10.65177059173584
    9. '[int' → logprob: -11.02677059173584
    10. '[input' → logprob: -11.40177059173584

Token 133: 'None' (ID: 8505)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013968037441372871
    2. '0' → logprob: -4.763967990875244
    3. 'random' → logprob: -5.263967990875244
    4. ' int' → logprob: -8.763968467712402
    5. ' random' → logprob: -12.263968467712402
    6. '(int' → logprob: -13.888968467712402
    7. 'float' → logprob: -14.013968467712402
    8. ' ' → logprob: -14.888968467712402
    9. 'rand' → logprob: -14.888968467712402
    10. '   ' → logprob: -15.638968467712402

Token 134: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048895616084337234
    2. 'for' → logprob: -3.0488955974578857
    3. ' ' → logprob: -8.298895835876465
    4. ']' → logprob: -10.048895835876465
    5. ')' → logprob: -12.048895835876465
    6. '	for' → logprob: -12.173895835876465
    7. ' ]' → logprob: -13.048895835876465
    8. '  ' → logprob: -14.298895835876465
    9. '<|end|>' → logprob: -14.423895835876465
    10. '   ' → logprob: -14.673895835876465

Token 135: ' idx' (ID: 14016)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03850742056965828
    2. '_' → logprob: -3.2885074615478516
    3. ' ' → logprob: -8.038507461547852
    4. ' j' → logprob: -9.538507461547852
    5. ' i' → logprob: -9.788507461547852
    6. ' in' → logprob: -12.038507461547852
    7. ' range' → logprob: -12.288507461547852
    8. '<|end|>' → logprob: -13.663507461547852
    9. '_j' → logprob: -14.163507461547852
    10. 'range' → logprob: -14.163507461547852

Token 136: '_col' (ID: 7255)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043042805045843124
    2. 'in' → logprob: -3.1680428981781006
    3. ' ' → logprob: -10.16804313659668
    4. '	in' → logprob: -13.04304313659668
    5. ')' → logprob: -14.04304313659668
    6. '_' → logprob: -15.29304313659668
    7. 'inx' → logprob: -15.54304313659668
    8. '_in' → logprob: -15.66804313659668
    9. ' )' → logprob: -15.66804313659668
    10. 'i' → logprob: -15.91804313659668

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0068444302305579185
    2. 'in' → logprob: -5.006844520568848
    3. ' ' → logprob: -9.131844520568848
    4. 'range' → logprob: -11.506844520568848
    5. ']' → logprob: -12.256844520568848
    6. ' range' → logprob: -13.006844520568848
    7. ')' → logprob: -13.256844520568848
    8. ' ]' → logprob: -13.506844520568848
    9. '(range' → logprob: -15.881844520568848
    10. ' )' → logprob: -16.25684356689453

Token 138: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931474208831787
    2. 'range' → logprob: -0.6931474208831787
    3. '	range' → logprob: -15.943147659301758
    4. '(range' → logprob: -16.568147659301758
    5. ' ' → logprob: -18.318147659301758
    6. '_range' → logprob: -19.693147659301758
    7. ' xrange' → logprob: -20.193147659301758
    8. 'row' → logprob: -20.443147659301758
    9. '   ' → logprob: -20.568147659301758
    10. '  ' → logprob: -20.943147659301758

Token 139: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -4.811348480870947e-05
    2. '(' → logprob: -10.00004768371582
    3. ' (' → logprob: -13.00004768371582
    4. 'matrix' → logprob: -15.37504768371582
    5. ' matrix' → logprob: -16.25004768371582
    6. '	matrix' → logprob: -16.75004768371582
    7. '(m' → logprob: -17.75004768371582
    8. '(Matrix' → logprob: -18.12504768371582
    9. '(mat' → logprob: -18.37504768371582
    10. '(len' → logprob: -18.50004768371582

Token 140: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -9.13388703338569e-06
    2. 'size' → logprob: -12.000009536743164
    3. ')' → logprob: -14.250009536743164
    4. '_elements' → logprob: -14.500009536743164
    5. '_s' → logprob: -14.625009536743164
    6. '_' → logprob: -15.000009536743164
    7. ' size' → logprob: -15.375009536743164
    8. '_SIZE' → logprob: -15.625009536743164
    9. ' _' → logprob: -16.250009536743164
    10. ')])' → logprob: -16.500009536743164

Token 141: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.621933451038785e-05
    2. ' )' → logprob: -9.875056266784668
    3. ')' → logprob: -12.750056266784668
    4. ']' → logprob: -14.000056266784668
    5. ' ]' → logprob: -14.875056266784668
    6. ')]
' → logprob: -15.875056266784668
    7. '   ' → logprob: -16.00005531311035
    8. ' ' → logprob: -16.12505531311035
    9. '+' → logprob: -16.12505531311035
    10. ')}' → logprob: -17.00005531311035

Token 142: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43801450729370117
    2. ' for' → logprob: -1.1880145072937012
    3. ' ]' → logprob: -3.313014507293701
    4. 'for' → logprob: -4.313014507293701
    5. '   ' → logprob: -10.31301498413086
    6. ' ' → logprob: -11.93801498413086
    7. ' in' → logprob: -12.43801498413086
    8. ')' → logprob: -12.68801498413086
    9. ')]' → logprob: -12.93801498413086
    10. '	for' → logprob: -13.06301498413086

Token 143: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.02012580819427967
    2. 'idx' → logprob: -4.020125865936279
    3. ' range' → logprob: -6.270125865936279
    4. 'range' → logprob: -10.145125389099121
    5. ' row' → logprob: -11.020125389099121
    6. ' i' → logprob: -11.770125389099121
    7. ' _' → logprob: -12.145125389099121
    8. '_' → logprob: -12.395125389099121
    9. ' index' → logprob: -12.770125389099121
    10. ' ' → logprob: -12.770125389099121

Token 144: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.006859824061393738
    2. '_' → logprob: -5.38185977935791
    3. '_col' → logprob: -6.25685977935791
    4. 'row' → logprob: -9.00685977935791
    5. '_idx' → logprob: -9.88185977935791
    6. '_range' → logprob: -10.13185977935791
    7. '_matrix' → logprob: -10.88185977935791
    8. '=row' → logprob: -11.13185977935791
    9. '_rows' → logprob: -11.25685977935791
    10. '_val' → logprob: -11.25685977935791

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10041607916355133
    2. 'in' → logprob: -2.3504161834716797
    3. 'range' → logprob: -8.97541618347168
    4. ' range' → logprob: -10.22541618347168
    5. '(range' → logprob: -10.97541618347168
    6. '(matrix' → logprob: -10.97541618347168
    7. '(' → logprob: -12.72541618347168
    8. ')' → logprob: -12.85041618347168
    9. 'matrix' → logprob: -13.22541618347168
    10. ']' → logprob: -13.72541618347168

Token 146: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868727385997772
    2. 'range' → logprob: -1.1368727684020996
    3. '(range' → logprob: -13.386872291564941
    4. '	range' → logprob: -15.761872291564941
    5. ' ' → logprob: -17.136873245239258
    6. ' xrange' → logprob: -18.386873245239258
    7. 'matrix' → logprob: -18.511873245239258
    8. ')' → logprob: -20.011873245239258
    9. ' matrix' → logprob: -20.136873245239258
    10. '   ' → logprob: -20.136873245239258

Token 147: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.00268089072778821
    2. '(' → logprob: -6.252680778503418
    3. ' matrix' → logprob: -7.877680778503418
    4. ' (' → logprob: -8.252680778503418
    5. 'matrix' → logprob: -9.127680778503418
    6. '(m' → logprob: -13.502680778503418
    7. '	matrix' → logprob: -13.502680778503418
    8. '(range' → logprob: -15.002680778503418
    9. '(s' → logprob: -15.252680778503418
    10. '(
' → logprob: -15.752680778503418

Token 148: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00018327576981391758
    2. 'size' → logprob: -8.62518310546875
    3. ')' → logprob: -13.62518310546875
    4. 'Size' → logprob: -13.75018310546875
    5. '_SIZE' → logprob: -15.00018310546875
    6. ')]' → logprob: -15.12518310546875
    7. ' size' → logprob: -15.25018310546875
    8. ')])' → logprob: -15.50018310546875
    9. '])' → logprob: -15.87518310546875
    10. 's' → logprob: -16.50018310546875

Token 149: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.630610641877865e-06
    2. ']' → logprob: -12.625006675720215
    3. ')' → logprob: -13.000006675720215
    4. ' )' → logprob: -15.000006675720215
    5. ')],' → logprob: -15.625006675720215
    6. '   ' → logprob: -16.2500057220459
    7. '])]' → logprob: -16.2500057220459
    8. ')]
' → logprob: -16.6250057220459
    9. ')])' → logprob: -17.0000057220459
    10. ' ]' → logprob: -17.1250057220459

Token 150: 'matrix' (ID: 37307)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003391574718989432
    2. ' for' → logprob: -8.00033950805664
    3. 'row' → logprob: -12.87533950805664
    4. 'value' → logprob: -15.25033950805664
    5. 'input' → logprob: -16.25033950805664
    6. 'matrix' → logprob: -16.25033950805664
    7. '#' → logprob: -16.50033950805664
    8. 'current' → logprob: -17.00033950805664
    9. 'val' → logprob: -17.00033950805664
    10. 'def' → logprob: -17.12533950805664

Token 151: '_indices' (ID: 43508)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.5806089043617249
    2. '_size' → logprob: -1.08060884475708
    3. '_' → logprob: -2.33060884475708
    4. '[' → logprob: -6.20560884475708
    5. 'size' → logprob: -8.455609321594238
    6. '_s' → logprob: -8.830609321594238
    7. '_matrix' → logprob: -8.830609321594238
    8. '<|end|>' → logprob: -8.955609321594238
    9. '_rows' → logprob: -9.080609321594238
    10. ' ' → logprob: -9.080609321594238

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048785388469696045
    2. '=' → logprob: -3.173785448074341
    3. ' ' → logprob: -5.548785209655762
    4. '[' → logprob: -8.048785209655762
    5. '_' → logprob: -8.548785209655762
    6. ',' → logprob: -8.673785209655762
    7. 'for' → logprob: -8.673785209655762
    8. '=[]' → logprob: -8.798785209655762
    9. '   ' → logprob: -9.048785209655762
    10. '.' → logprob: -9.048785209655762

Token 153: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0299594402313232
    2. '[(' → logprob: -1.5299594402313232
    3. ' [(' → logprob: -2.1549594402313232
    4. ' [' → logprob: -2.4049594402313232
    5. ' []' → logprob: -2.5299594402313232
    6. '[' → logprob: -2.5299594402313232
    7. ' list' → logprob: -3.7799594402313232
    8. 'list' → logprob: -4.279959678649902
    9. 'range' → logprob: -4.779959678649902
    10. '0' → logprob: -5.779959678649902

Token 154: 'row' (ID: 843)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20683279633522034
    2. 'idx' → logprob: -1.831832766532898
    3. 'row' → logprob: -3.8318328857421875
    4. 'r' → logprob: -6.5818328857421875
    5. 'x' → logprob: -6.7068328857421875
    6. ' i' → logprob: -6.8318328857421875
    7. ' idx' → logprob: -7.3318328857421875
    8. '0' → logprob: -8.456832885742188
    9. ')' → logprob: -8.956832885742188
    10. ' row' → logprob: -9.456832885742188

Token 155: '_idx' (ID: 15257)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003697781648952514
    2. ' ,' → logprob: -8.000370025634766
    3. ',row' → logprob: -10.500370025634766
    4. ',column' → logprob: -13.000370025634766
    5. ')' → logprob: -13.125370025634766
    6. ',col' → logprob: -13.875370025634766
    7. 'for' → logprob: -14.500370025634766
    8. '<|end|>' → logprob: -15.625370025634766
    9. ',
' → logprob: -15.875370025634766
    10. ',index' → logprob: -16.000370025634766

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031508569372817874
    2. ' ,' → logprob: -8.250314712524414
    3. ',row' → logprob: -9.875314712524414
    4. ',column' → logprob: -13.625314712524414
    5. ')' → logprob: -14.875314712524414
    6. ',
' → logprob: -15.000314712524414
    7. ',m' → logprob: -15.000314712524414
    8. ' ' → logprob: -17.250314712524414
    9. '[row' → logprob: -17.250314712524414
    10. '<|end|>' → logprob: -17.250314712524414

Token 157: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.3869597017765045
    2. ' col' → logprob: -1.1369596719741821
    3. 'column' → logprob: -9.63696002960205
    4. ' column' → logprob: -11.01196002960205
    5. '	col' → logprob: -13.01196002960205
    6. 'colm' → logprob: -13.51196002960205
    7. ')' → logprob: -14.13696002960205
    8. 'coln' → logprob: -14.38696002960205
    9. ' ' → logprob: -14.63696002960205
    10. 'coli' → logprob: -15.13696002960205

Token 158: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -7.44574936106801e-05
    2. '_' → logprob: -10.12507438659668
    3. ')_' → logprob: -10.87507438659668
    4. ')' → logprob: -12.62507438659668
    5. '_ix' → logprob: -12.62507438659668
    6. ')]' → logprob: -12.75007438659668
    7. '_idxs' → logprob: -13.00007438659668
    8. '_IDX' → logprob: -13.62507438659668
    9. 'idx' → logprob: -13.87507438659668
    10. ' _' → logprob: -14.75007438659668

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001170132018160075
    2. ' )' → logprob: -9.125117301940918
    3. ')
' → logprob: -12.250117301940918
    4. ',' → logprob: -13.125117301940918
    5. ',)' → logprob: -15.000117301940918
    6. '   ' → logprob: -15.500117301940918
    7. ')]' → logprob: -15.500117301940918
    8. 'for' → logprob: -15.750117301940918
    9. ' ' → logprob: -16.6251163482666
    10. '),' → logprob: -16.6251163482666

Token 160: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02450154349207878
    2. 'for' → logprob: -4.024501323699951
    3. ')' → logprob: -5.149501323699951
    4. ' ' → logprob: -8.14950180053711
    5. ' )' → logprob: -8.89950180053711
    6. ',' → logprob: -9.52450180053711
    7. ' in' → logprob: -11.52450180053711
    8. '	for' → logprob: -12.02450180053711
    9. ' ,' → logprob: -12.14950180053711
    10. '<|end|>' → logprob: -13.14950180053711

Token 161: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.2811611294746399
    2. 'row' → logprob: -1.4061610698699951
    3. '	row' → logprob: -12.156161308288574
    4. ' col' → logprob: -12.781161308288574
    5. ' ' → logprob: -13.656161308288574
    6. 'col' → logprob: -14.156161308288574
    7. '(row' → logprob: -15.281161308288574
    8. '_row' → logprob: -16.031160354614258
    9. ' in' → logprob: -16.656160354614258
    10. '0' → logprob: -16.656160354614258

Token 162: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04094117507338524
    2. ' in' → logprob: -3.2909412384033203
    3. '_' → logprob: -6.29094123840332
    4. ',' → logprob: -7.66594123840332
    5. ',row' → logprob: -9.04094123840332
    6. 'idx' → logprob: -9.41594123840332
    7. 'in' → logprob: -9.41594123840332
    8. '_row' → logprob: -9.79094123840332
    9. ' ' → logprob: -9.91594123840332
    10. '_,' → logprob: -10.29094123840332

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038934845477342606
    2. 'in' → logprob: -3.9139349460601807
    3. ',' → logprob: -4.038934707641602
    4. ' ,' → logprob: -7.538934707641602
    5. ' ' → logprob: -9.663934707641602
    6. ',row' → logprob: -12.288934707641602
    7. '<|end|>' → logprob: -13.288934707641602
    8. ',in' → logprob: -13.663934707641602
    9. 'import' → logprob: -13.788934707641602
    10. ' for' → logprob: -13.913934707641602

Token 164: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132622241973877
    2. 'range' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.688261985778809
    4. 'row' → logprob: -15.813261985778809
    5. '	range' → logprob: -16.438262939453125
    6. '0' → logprob: -17.063262939453125
    7. '(range' → logprob: -17.688262939453125
    8. ' row' → logprob: -17.813262939453125
    9. '   ' → logprob: -18.688262939453125
    10. '  ' → logprob: -18.813262939453125

Token 165: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.02801617421209812
    2. ' matrix' → logprob: -4.403016090393066
    3. 'matrix' → logprob: -4.403016090393066
    4. '(' → logprob: -6.153016090393066
    5. ' (' → logprob: -6.903016090393066
    6. '	matrix' → logprob: -11.528016090393066
    7. '_matrix' → logprob: -13.528016090393066
    8. ')' → logprob: -13.653016090393066
    9. ' ' → logprob: -14.403016090393066
    10. '1' → logprob: -14.528016090393066

Token 166: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.7252845029579476e-05
    2. 'size' → logprob: -10.750027656555176
    3. ')' → logprob: -13.125027656555176
    4. '_' → logprob: -13.750027656555176
    5. ' size' → logprob: -14.125027656555176
    6. '_s' → logprob: -14.875027656555176
    7. 's' → logprob: -15.125027656555176
    8. '_SIZE' → logprob: -15.125027656555176
    9. '_sizes' → logprob: -15.875027656555176
    10. '_elements' → logprob: -16.25002670288086

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003831252979580313
    2. ' )' → logprob: -8.000383377075195
    3. ',' → logprob: -10.375383377075195
    4. ')]' → logprob: -11.500383377075195
    5. ')
' → logprob: -13.500383377075195
    6. '),' → logprob: -13.875383377075195
    7. ' ' → logprob: -14.375383377075195
    8. ' for' → logprob: -14.375383377075195
    9. ')][' → logprob: -14.375383377075195
    10. '   ' → logprob: -14.500383377075195

Token 168: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010204236023128033
    2. 'for' → logprob: -4.635204315185547
    3. ',' → logprob: -8.135204315185547
    4. '   ' → logprob: -10.135204315185547
    5. ' ' → logprob: -10.635204315185547
    6. '	for' → logprob: -10.760204315185547
    7. '       ' → logprob: -11.385204315185547
    8. '           ' → logprob: -11.760204315185547
    9. ')' → logprob: -12.135204315185547
    10. '        ' → logprob: -12.760204315185547

Token 169: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.3868747651576996
    2. 'col' → logprob: -1.136874794960022
    3. ' ' → logprob: -12.88687515258789
    4. '	col' → logprob: -14.26187515258789
    5. '(col' → logprob: -15.88687515258789
    6. '   ' → logprob: -16.01187515258789
    7. '  ' → logprob: -16.26187515258789
    8. '_col' → logprob: -17.01187515258789
    9. ' ' → logprob: -17.13687515258789
    10. '.col' → logprob: -17.63687515258789

Token 170: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.339278580620885e-06
    2. 'idx' → logprob: -14.125001907348633
    3. '_idxs' → logprob: -14.875001907348633
    4. '_' → logprob: -15.625001907348633
    5. 'Idx' → logprob: -15.750001907348633
    6. '_ix' → logprob: -15.875001907348633
    7. '_IDX' → logprob: -16.125001907348633
    8. 'um' → logprob: -16.125001907348633
    9. 'ex' → logprob: -16.500001907348633
    10. ' _' → logprob: -16.750001907348633

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023273898288607597
    2. 'in' → logprob: -3.7732739448547363
    3. ')' → logprob: -11.273273468017578
    4. '(' → logprob: -12.023273468017578
    5. ' (' → logprob: -13.273273468017578
    6. '=' → logprob: -13.523273468017578
    7. 'import' → logprob: -13.648273468017578
    8. ' ' → logprob: -13.648273468017578
    9. '<|end|>' → logprob: -13.648273468017578
    10. 'In' → logprob: -14.273273468017578

Token 172: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27071821689605713
    2. 'range' → logprob: -1.5207182168960571
    3. 'matrix' → logprob: -4.145718097686768
    4. ' matrix' → logprob: -5.895718097686768
    5. '(range' → logprob: -10.895718574523926
    6. '(matrix' → logprob: -11.520718574523926
    7. ')' → logprob: -14.395718574523926
    8. ' ' → logprob: -14.395718574523926
    9. '(' → logprob: -15.020718574523926
    10. '	range' → logprob: -16.39571762084961

Token 173: '(matrix' (ID: 57027)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.7658739686012268
    2. '(matrix' → logprob: -1.015873908996582
    3. ' matrix' → logprob: -1.765873908996582
    4. ' (' → logprob: -6.265873908996582
    5. '(' → logprob: -10.765873908996582
    6. '	matrix' → logprob: -10.890873908996582
    7. ')' → logprob: -11.890873908996582
    8. '_matrix' → logprob: -14.265873908996582
    9. '(m' → logprob: -14.390873908996582
    10. '.matrix' → logprob: -14.765873908996582

Token 174: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00016396844875998795
    2. 'size' → logprob: -9.125164031982422
    3. 'matrix' → logprob: -10.250164031982422
    4. ')' → logprob: -11.750164031982422
    5. '_matrix' → logprob: -11.875164031982422
    6. '_SIZE' → logprob: -13.250164031982422
    7. ' size' → logprob: -14.500164031982422
    8. 's' → logprob: -14.625164031982422
    9. '_s' → logprob: -15.000164031982422
    10. 'Size' → logprob: -15.500164031982422

Token 175: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006709783338010311
    2. ']' → logprob: -7.375670909881592
    3. ')' → logprob: -10.12567138671875
    4. ' )' → logprob: -13.50067138671875
    5. ' ]' → logprob: -13.75067138671875
    6. ')],' → logprob: -13.87567138671875
    7. '])]' → logprob: -15.12567138671875
    8. '])' → logprob: -16.00067138671875
    9. ')])' → logprob: -16.00067138671875
    10. '   ' → logprob: -16.25067138671875

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16075320541858673
    2. ' ' → logprob: -1.9107532501220703
    3. '0' → logprob: -8.28575325012207
    4. ' row' → logprob: -9.03575325012207
    5. ' matrix' → logprob: -10.66075325012207
    6. 'row' → logprob: -10.66075325012207
    7. ')' → logprob: -10.66075325012207
    8. ' col' → logprob: -10.91075325012207
    9. '2' → logprob: -11.03575325012207
    10. '+' → logprob: -11.28575325012207

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006259612273424864
    2. ' ' → logprob: -5.506259441375732
    3. '0' → logprob: -6.506259441375732
    4. 'row' → logprob: -7.881259441375732
    5. 'matrix' → logprob: -9.25625991821289
    6. '+' → logprob: -9.50625991821289
    7. ' row' → logprob: -9.75625991821289
    8. '2' → logprob: -11.50625991821289
    9. 'idx' → logprob: -11.50625991821289
    10. ' matrix' → logprob: -11.50625991821289

Token 178: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008821651572361588
    2. ' )' → logprob: -7.750882148742676
    3. '+' → logprob: -8.125882148742676
    4. ')' → logprob: -9.750882148742676
    5. ',' → logprob: -9.875882148742676
    6. ' +' → logprob: -11.500882148742676
    7. ')])' → logprob: -11.500882148742676
    8. ']' → logprob: -11.750882148742676
    9. ' ]' → logprob: -12.125882148742676
    10. ')],' → logprob: -12.875882148742676

Token 179: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020554153248667717
    2. ' -' → logprob: -3.8955540657043457
    3. ' ' → logprob: -11.520554542541504
    4. '-m' → logprob: -14.270554542541504
    5. '-row' → logprob: -14.645554542541504
    6. '0' → logprob: -15.145554542541504
    7. 'row' → logprob: -15.270554542541504
    8. ' row' → logprob: -15.270554542541504
    9. '   ' → logprob: -15.270554542541504
    10. 'matrix' → logprob: -15.395554542541504

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.231182826217264e-05
    2. ' ' → logprob: -9.625072479248047
    3. 'matrix' → logprob: -12.375072479248047
    4. '0' → logprob: -14.500072479248047
    5. '   ' → logprob: -14.875072479248047
    6. ' -' → logprob: -15.125072479248047
    7. '  ' → logprob: -15.812572479248047
    8. ' matrix' → logprob: -16.000072479248047
    9. '-' → logprob: -16.187572479248047
    10. ',' → logprob: -16.750072479248047

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004557580687105656
    2. '-' → logprob: -5.6295576095581055
    3. ',-' → logprob: -7.5045576095581055
    4. ')' → logprob: -8.879557609558105
    5. ' ,' → logprob: -8.879557609558105
    6. ' -' → logprob: -9.379557609558105
    7. ')]' → logprob: -10.254557609558105
    8. ' ,-' → logprob: -12.754557609558105
    9. '1' → logprob: -14.004557609558105
    10. '-,' → logprob: -14.254557609558105

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007606627885252237
    2. ' -' → logprob: -4.882606506347656
    3. '1' → logprob: -15.382606506347656
    4. '-step' → logprob: -16.132606506347656
    5. ' ' → logprob: -16.257606506347656
    6. ')' → logprob: -17.132606506347656
    7. '```' → logprob: -18.007606506347656
    8. '   ' → logprob: -18.132606506347656
    9. '0' → logprob: -18.882606506347656
    10. ')-' → logprob: -19.007606506347656

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -16.3125057220459
    4. '```' → logprob: -16.8750057220459
    5. '-' → logprob: -17.1875057220459
    6. ' -' → logprob: -17.5625057220459
    7. '   ' → logprob: -17.5625057220459
    8. '2' → logprob: -17.7500057220459
    9. '
' → logprob: -17.7500057220459
    10. '  ' → logprob: -17.9375057220459

Token 184: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011080480180680752
    2. ')' → logprob: -4.511080265045166
    3. ']' → logprob: -10.886080741882324
    4. ' )' → logprob: -12.386080741882324
    5. ')])' → logprob: -12.636080741882324
    6. ')],' → logprob: -12.761080741882324
    7. '),' → logprob: -13.636080741882324
    8. '))' → logprob: -13.761080741882324
    9. ')}' → logprob: -14.886080741882324
    10. '   ' → logprob: -15.136080741882324

Token 185: 'used' (ID: 4943)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020018432289361954
    2. ' for' → logprob: -4.770018577575684
    3. ']' → logprob: -5.770018577575684
    4. 'current' → logprob: -6.145018577575684
    5. 'matrix' → logprob: -6.395018577575684
    6. 'row' → logprob: -6.520018577575684
    7. ')' → logprob: -6.645018577575684
    8. 'value' → logprob: -8.145018577575684
    9. '#' → logprob: -8.395018577575684
    10. '(' → logprob: -8.520018577575684

Token 186: '_numbers' (ID: 76842)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4756380319595337
    2. '_values' → logprob: -1.4756380319595337
    3. '_numbers' → logprob: -2.475637912750244
    4. '_elements' → logprob: -3.100637912750244
    5. '_tokens' → logprob: -4.850637912750244
    6. '_matrix' → logprob: -5.225637912750244
    7. '_vals' → logprob: -6.475637912750244
    8. '_indices' → logprob: -6.725637912750244
    9. '_set' → logprob: -6.850637912750244
    10. '_rows' → logprob: -7.100637912750244

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024768433067947626
    2. '=' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.002476692199707
    4. ',' → logprob: -15.252476692199707
    5. '<|end|>' → logprob: -15.752476692199707
    6. '_' → logprob: -16.127477645874023
    7. ')' → logprob: -16.377477645874023
    8. ' =
' → logprob: -16.502477645874023
    9. 's' → logprob: -16.502477645874023
    10. '  ' → logprob: -16.877477645874023

Token 188: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3133121728897095
    2. 'set' → logprob: -1.3133121728897095
    3. '[]' → logprob: -10.563312530517578
    4. ' []' → logprob: -11.188312530517578
    5. '{}' → logprob: -12.188312530517578
    6. '	set' → logprob: -12.688312530517578
    7. ' {}' → logprob: -13.813312530517578
    8. ' ' → logprob: -14.063312530517578
    9. '=set' → logprob: -14.563312530517578
    10. '{' → logprob: -16.063312530517578

Token 189: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012789263855665922
    2. '()
' → logprob: -7.126278877258301
    3. '(' → logprob: -7.876278877258301
    4. '()

' → logprob: -10.0012788772583
    5. ' ()' → logprob: -10.5012788772583
    6. '()\' → logprob: -11.8762788772583
    7. '<|end|>' → logprob: -12.3762788772583
    8. '()]' → logprob: -13.0012788772583
    9. '(),' → logprob: -13.1262788772583
    10. '();' → logprob: -13.8762788772583

Token 190: 'prime' (ID: 46441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05884331092238426
    2. 'next' → logprob: -4.05884313583374
    3. 'current' → logprob: -4.05884313583374
    4. ' for' → logprob: -4.68384313583374
    5. 'number' → logprob: -5.68384313583374
    6. 'num' → logprob: -6.05884313583374
    7. 'row' → logprob: -6.43384313583374
    8. 'token' → logprob: -6.43384313583374
    9. 'counter' → logprob: -6.43384313583374
    10. 'value' → logprob: -7.18384313583374

Token 191: '_sequence' (ID: 55606)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02069696970283985
    2. '_list' → logprob: -4.020697116851807
    3. '_numbers' → logprob: -6.645697116851807
    4. '_pr' → logprob: -7.145697116851807
    5. '_s' → logprob: -8.395696640014648
    6. '_candidates' → logprob: -9.395696640014648
    7. '_' → logprob: -10.020696640014648
    8. '_values' → logprob: -10.520696640014648
    9. '_index' → logprob: -10.645696640014648
    10. '_indices' → logprob: -10.895696640014648

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012519069947302341
    2. '=' → logprob: -4.387518882751465
    3. ' ' → logprob: -12.137518882751465
    4. 's' → logprob: -13.887518882751465
    5. '_' → logprob: -13.887518882751465
    6. '=[]' → logprob: -13.887518882751465
    7. ',' → logprob: -14.637518882751465
    8. '  ' → logprob: -15.262518882751465
    9. '   ' → logprob: -15.637518882751465
    10. '[' → logprob: -16.76251983642578

Token 193: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.5809383392333984
    2. 'generate' → logprob: -0.8309383392333984
    3. '[]' → logprob: -5.830938339233398
    4. ' []' → logprob: -6.330938339233398
    5. ' ' → logprob: -8.830938339233398
    6. '[' → logprob: -10.330938339233398
    7. '[]
' → logprob: -10.455938339233398
    8. ' [' → logprob: -10.830938339233398
    9. '  ' → logprob: -11.330938339233398
    10. '(generate' → logprob: -11.330938339233398

Token 194: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -3.531315314830863e-06
    2. 's' → logprob: -13.625003814697266
    3. '(_' → logprob: -14.750003814697266
    4. 'pr' → logprob: -15.125003814697266
    5. '_pl' → logprob: -15.125003814697266
    6. '(' → logprob: -15.375003814697266
    7. '_' → logprob: -15.750003814697266
    8. '_s' → logprob: -16.000003814697266
    9. '_par' → logprob: -16.500003814697266
    10. '_ro' → logprob: -16.500003814697266

Token 195: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0009745901916176081
    2. 'ime' → logprob: -7.375974655151367
    3. '_' → logprob: -9.500974655151367
    4. 'mes' → logprob: -10.375974655151367
    5. 'omes' → logprob: -10.500974655151367
    6. '

' → logprob: -10.750974655151367
    7. '
' → logprob: -10.750974655151367
    8. '[' → logprob: -11.000974655151367
    9. 'es' → logprob: -11.250974655151367
    10. '#' → logprob: -11.750974655151367

Token 196: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3869231939315796
    2. '(matrix' → logprob: -1.1369231939315796
    3. '(m' → logprob: -11.261922836303711
    4. 'matrix' → logprob: -11.886922836303711
    5. '<|end|>' → logprob: -12.011922836303711
    6. '((' → logprob: -12.261922836303711
    7. '(random' → logprob: -12.386922836303711
    8. '(limit' → logprob: -12.511922836303711
    9. ' (' → logprob: -12.511922836303711
    10. '(max' → logprob: -12.886922836303711

Token 197: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10738197714090347
    2. ' ' → logprob: -2.98238205909729
    3. 'matrix' → logprob: -3.10738205909729
    4. ' matrix' → logprob: -6.232381820678711
    5. '200' → logprob: -6.982381820678711
    6. '999' → logprob: -7.107381820678711
    7. '10' → logprob: -7.107381820678711
    8. '2' → logprob: -7.482381820678711
    9. '500' → logprob: -7.982381820678711
    10. '50' → logprob: -8.232381820678711

Token 198: ' **' (ID: 6240)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -0.7943212985992432
    2. '0' → logprob: -0.9193212985992432
    3. '000' → logprob: -1.9193212985992432
    4. '**' → logprob: -6.544321060180664
    5. '5' → logprob: -7.919321060180664
    6. '6' → logprob: -8.294321060180664
    7. '4' → logprob: -9.044321060180664
    8. '3' → logprob: -9.419321060180664
    9. ')' → logprob: -9.544321060180664
    10. '8' → logprob: -9.919321060180664

Token 199: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.13833247125148773
    2. '5' → logprob: -2.1383323669433594
    3. '4' → logprob: -5.138332366943359
    4. '7' → logprob: -5.263332366943359
    5. '3' → logprob: -8.88833236694336
    6. '8' → logprob: -8.88833236694336
    7. '2' → logprob: -12.13833236694336
    8. ' ' → logprob: -12.38833236694336
    9. '9' → logprob: -12.51333236694336
    10. '```' → logprob: -13.45083236694336

Token 200: '4' (ID: 19)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.14535103738307953
    2. '5' → logprob: -2.145350933074951
    3. '7' → logprob: -4.395350933074951
    4. '4' → logprob: -5.270350933074951
    5. '3' → logprob: -7.770350933074951
    6. '8' → logprob: -8.02035140991211
    7. '2' → logprob: -11.52035140991211
    8. '9' → logprob: -11.52035140991211
    9. ' ' → logprob: -12.89535140991211
    10. '```' → logprob: -14.08285140991211

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.416665640543215e-05
    2. ' )' → logprob: -10.50003433227539
    3. '+' → logprob: -13.75003433227539
    4. ')
' → logprob: -13.87503433227539
    5. '))' → logprob: -14.37503433227539
    6. '3' → logprob: -14.50003433227539
    7. '4' → logprob: -14.50003433227539
    8. '6' → logprob: -14.50003433227539
    9. '7' → logprob: -14.87503433227539
    10. '0' → logprob: -15.12503433227539

Token 202: 'prime' (ID: 46441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16738225519657135
    2. 'current' → logprob: -2.54238224029541
    3. 'row' → logprob: -3.29238224029541
    4. 'next' → logprob: -4.16738224029541
    5. 'num' → logprob: -5.04238224029541
    6. ' for' → logprob: -5.41738224029541
    7. 'value' → logprob: -5.66738224029541
    8. 'number' → logprob: -6.16738224029541
    9. 'idx' → logprob: -6.16738224029541
    10. 'curr' → logprob: -6.79238224029541

Token 203: '_offset' (ID: 15447)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.1354977935552597
    2. '_idx' → logprob: -2.260497808456421
    3. '_sequence' → logprob: -3.885497808456421
    4. '_seq' → logprob: -7.135497570037842
    5. '_' → logprob: -7.385497570037842
    6. '_indices' → logprob: -9.135498046875
    7. '_iter' → logprob: -9.135498046875
    8. '_counter' → logprob: -9.510498046875
    9. '_pos' → logprob: -10.510498046875
    10. 's' → logprob: -10.510498046875

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01836520805954933
    2. '=' → logprob: -4.018365383148193
    3. 's' → logprob: -8.643364906311035
    4. '_index' → logprob: -10.768364906311035
    5. '_idx' → logprob: -11.643364906311035
    6. ' ' → logprob: -12.018364906311035
    7. '_' → logprob: -13.143364906311035
    8. '  ' → logprob: -15.143364906311035
    9. ',' → logprob: -15.143364906311035
    10. 'index' → logprob: -15.393364906311035

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10411538183689117
    2. ' ' → logprob: -2.3541154861450195
    3. '1' → logprob: -5.6041154861450195
    4. '100' → logprob: -9.72911548614502
    5. '10' → logprob: -10.10411548614502
    6. '2' → logprob: -10.22911548614502
    7. 'len' → logprob: -10.85411548614502
    8. ' len' → logprob: -11.10411548614502
    9. '5' → logprob: -11.47911548614502
    10. '3' → logprob: -11.72911548614502

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017894209595397115
    2. '1' → logprob: -7.126789569854736
    3. ' ' → logprob: -7.626789569854736
    4. '100' → logprob: -8.751789093017578
    5. '-' → logprob: -9.251789093017578
    6. '2' → logprob: -9.251789093017578
    7. 'len' → logprob: -10.126789093017578
    8. '10' → logprob: -10.626789093017578
    9. '5' → logprob: -10.876789093017578
    10. 'random' → logprob: -11.001789093017578

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3428170382976532
    2. '<|end|>' → logprob: -1.7178170680999756
    3. 'for' → logprob: -2.8428170680999756
    4. 'def' → logprob: -4.3428168296813965
    5. ' for' → logprob: -4.8428168296813965
    6. ')' → logprob: -5.3428168296813965
    7. '<|end|>' → logprob: -5.4678168296813965
    8. ' 
' → logprob: -5.5928168296813965
    9. ':' → logprob: -5.5928168296813965
    10. '#' → logprob: -5.5928168296813965

Token 208: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11437278985977173
    2. ' for' → logprob: -2.489372730255127
    3. 'while' → logprob: -4.739372730255127
    4. 'row' → logprob: -5.239372730255127
    5. ':' → logprob: -6.114372730255127
    6. '<|end|>' → logprob: -6.239372730255127
    7. 'current' → logprob: -6.739372730255127
    8. ')' → logprob: -7.239372730255127
    9. ' while' → logprob: -7.239372730255127
    10. 'token' → logprob: -7.489372730255127

Token 209: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.032893091440200806
    2. 'prime' → logprob: -4.532893180847168
    3. ' matrix' → logprob: -4.657893180847168
    4. ' len' → logprob: -4.657893180847168
    5. ' True' → logprob: -6.532893180847168
    6. ' not' → logprob: -7.782893180847168
    7. ' ' → logprob: -8.407893180847168
    8. 'True' → logprob: -8.532893180847168
    9. '_prime' → logprob: -9.532893180847168
    10. ' used' → logprob: -9.907893180847168

Token 210: '_sequence' (ID: 55606)
  Prédit: '_offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.002446042839437723
    2. '_sequence' → logprob: -6.252446174621582
    3. '_' → logprob: -8.377446174621582
    4. 'offset' → logprob: -8.502446174621582
    5. '_offsets' → logprob: -10.627446174621582
    6. ' _' → logprob: -10.877446174621582
    7. '_index' → logprob: -11.627446174621582
    8. '[offset' → logprob: -11.877446174621582
    9. '<' → logprob: -12.377446174621582
    10. 'sequence' → logprob: -12.877446174621582

Token 211: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016369777731597424
    2. ':' → logprob: -7.376636981964111
    3. ' and' → logprob: -8.001636505126953
    4. 'prime' → logprob: -8.001636505126953
    5. 'and' → logprob: -9.501636505126953
    6. ' [' → logprob: -10.251636505126953
    7. '[token' → logprob: -10.626636505126953
    8. '_prime' → logprob: -10.751636505126953
    9. ' prime' → logprob: -11.126636505126953
    10. '>' → logprob: -11.251636505126953

Token 212: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0019407729851081967
    2. ' prime' → logprob: -6.251940727233887
    3. 'pr' → logprob: -12.251940727233887
    4. '_prime' → logprob: -12.626940727233887
    5. 'prim' → logprob: -13.751940727233887
    6. 'primer' → logprob: -14.126940727233887
    7. '   ' → logprob: -14.376940727233887
    8. ' ' → logprob: -14.751940727233887
    9. '[' → logprob: -15.626940727233887
    10. '
' → logprob: -15.876940727233887

Token 213: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0004946522531099617
    2. 'offset' → logprob: -7.625494480133057
    3. 'ffset' → logprob: -12.875494956970215
    4. ' offset' → logprob: -13.625494956970215
    5. '_index' → logprob: -13.625494956970215
    6. 'Offset' → logprob: -14.125494956970215
    7. '	offset' → logprob: -15.375494956970215
    8. '[offset' → logprob: -15.625494956970215
    9. '_offsets' → logprob: -16.0004940032959
    10. '-offset' → logprob: -16.1254940032959

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020473632030189037
    2. ' ]' → logprob: -6.752047538757324
    3. ']<' → logprob: -7.752047538757324
    4. ']%' → logprob: -8.627047538757324
    5. ']==' → logprob: -9.627047538757324
    6. ']<=' → logprob: -9.877047538757324
    7. ']+' → logprob: -10.127047538757324
    8. '[' → logprob: -10.377047538757324
    9. ']
' → logprob: -10.627047538757324
    10. ']!=' → logprob: -11.002047538757324

Token 215: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8436073660850525
    2. ' <' → logprob: -0.9686073660850525
    3. '%' → logprob: -2.8436074256896973
    4. ' %' → logprob: -3.3436074256896973
    5. ' <=' → logprob: -3.3436074256896973
    6. '<=' → logprob: -3.4686074256896973
    7. ' ' → logprob: -3.8436074256896973
    8. '*' → logprob: -5.718607425689697
    9. '+' → logprob: -6.343607425689697
    10. '**' → logprob: -6.718607425689697

Token 216: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.2028425931930542
    2. ' matrix' → logprob: -2.3278427124023438
    3. '2' → logprob: -3.0778427124023438
    4. ' ' → logprob: -3.5778427124023438
    5. '100' → logprob: -5.452842712402344
    6. '10' → logprob: -5.452842712402344
    7. '5' → logprob: -7.327842712402344
    8. '3' → logprob: -7.452842712402344
    9. '20' → logprob: -7.827842712402344
    10. 'math' → logprob: -8.202842712402344

Token 217: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -5.88418151892256e-05
    2. '_' → logprob: -10.250059127807617
    3. '_elements' → logprob: -11.625059127807617
    4. '_offset' → logprob: -12.125059127807617
    5. 'size' → logprob: -12.625059127807617
    6. ' _' → logprob: -14.000059127807617
    7. 'elements' → logprob: -14.000059127807617
    8. '[' → logprob: -14.000059127807617
    9. '_s' → logprob: -14.250059127807617
    10. '_matrix' → logprob: -14.500059127807617

Token 218: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027619430795311928
    2. ':
' → logprob: -4.527619361877441
    3. '**' → logprob: -5.277619361877441
    4. ' and' → logprob: -5.402619361877441
    5. ' *' → logprob: -5.777619361877441
    6. '*' → logprob: -6.402619361877441
    7. 'and' → logprob: -7.402619361877441
    8. ' :' → logprob: -7.652619361877441
    9. '   ' → logprob: -8.027619361877441
    10. ' **' → logprob: -8.652619361877441

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2118302881717682
    2. '2' → logprob: -2.9618303775787354
    3. ' ' → logprob: -3.5868303775787354
    4. 'matrix' → logprob: -3.5868303775787354
    5. 'prime' → logprob: -3.7118303775787354
    6. '10' → logprob: -3.9618303775787354
    7. '5' → logprob: -4.086830139160156
    8. ' prime' → logprob: -4.836830139160156
    9. '100' → logprob: -5.461830139160156
    10. ' matrix' → logprob: -5.586830139160156

Token 220: '3' (ID: 18)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.8952154517173767
    2. '1' → logprob: -1.0202155113220215
    3. 'prime' → logprob: -2.1452155113220215
    4. '2' → logprob: -3.3952155113220215
    5. '10' → logprob: -3.3952155113220215
    6. '5' → logprob: -3.8952155113220215
    7. '100' → logprob: -4.7702155113220215
    8. ' ' → logprob: -5.3952155113220215
    9. '3' → logprob: -5.6452155113220215
    10. ' matrix' → logprob: -5.8952155113220215

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0372864231467247
    2. ':
' → logprob: -3.4122865200042725
    3. ' and' → logprob: -6.162286281585693
    4. '   ' → logprob: -7.287286281585693
    5. ' :' → logprob: -7.287286281585693
    6. ' :
' → logprob: -9.287286758422852
    7. 'and' → logprob: -10.787286758422852
    8. ' or' → logprob: -11.162286758422852
    9. ' ' → logprob: -11.662286758422852
    10. '):' → logprob: -11.912286758422852

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041991365142166615
    2. ' prime' → logprob: -6.004199028015137
    3. ':' → logprob: -7.254199028015137
    4. ':
' → logprob: -8.004199028015137
    5. ' ' → logprob: -8.629199028015137
    6. ' 
' → logprob: -9.629199028015137
    7. ' ,' → logprob: -9.629199028015137
    8. '    ' → logprob: -9.879199028015137
    9. 'prime' → logprob: -10.004199028015137
    10. '
' → logprob: -10.254199028015137

Token 223: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.13155406713485718
    2. 'prime' (adapté à ' prime') → logprob: -2.131554126739502
    3. '   ' → logprob: -5.381554126739502
    4. '_prime' → logprob: -11.756553649902344
    5. 'pr' → logprob: -12.756553649902344
    6. 'prim' → logprob: -13.381553649902344
    7. ' ' → logprob: -14.256553649902344
    8. ' prim' → logprob: -14.631553649902344
    9. ' primes' → logprob: -15.131553649902344
    10. '
' → logprob: -15.381553649902344

Token 224: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -1.0564331205387134e-05
    2. 'offset' → logprob: -11.50001049041748
    3. '_offsets' → logprob: -15.75001049041748
    4. '_sequence' → logprob: -16.750011444091797
    5. '	offset' → logprob: -16.875011444091797
    6. 'ffset' → logprob: -17.125011444091797
    7. ' offset' → logprob: -17.250011444091797
    8. '_OFFSET' → logprob: -17.500011444091797
    9. 'Offset' → logprob: -18.250011444091797
    10. '   ' → logprob: -19.625011444091797

Token 225: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.056967586278915405
    2. ' +=' → logprob: -2.9319674968719482
    3. '+' → logprob: -6.181967735290527
    4. ']+=' → logprob: -11.556967735290527
    5. '<|end|>' → logprob: -13.056967735290527
    6. '+='' → logprob: -13.306967735290527
    7. '+="' → logprob: -14.056967735290527
    8. ' ' → logprob: -14.556967735290527
    9. '++' → logprob: -14.556967735290527
    10. '=' → logprob: -14.806967735290527

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.750011444091797
    4. '```' → logprob: -18.750011444091797
    5. '  ' → logprob: -19.750011444091797
    6. '
' → logprob: -19.875011444091797
    7. '0' → logprob: -20.062511444091797
    8. '<|end|>' → logprob: -20.937511444091797
    9. ' ' → logprob: -21.187511444091797
    10. '۱' → logprob: -21.250011444091797

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.375011444091797
    4. '   ' → logprob: -17.500011444091797
    5. '
' → logprob: -18.937511444091797
    6. '  ' → logprob: -19.375011444091797
    7. '۱' → logprob: -19.500011444091797
    8. '１' → logprob: -19.937511444091797
    9. '१' → logprob: -19.937511444091797
    10. '১' → logprob: -20.125011444091797

Token 228: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021310050040483475
    2. 'current' → logprob: -5.271309852600098
    3. 'while' → logprob: -5.396309852600098
    4. 'row' → logprob: -5.521309852600098
    5. 'result' → logprob: -5.521309852600098
    6. 'matrix' → logprob: -6.771309852600098
    7. 'next' → logprob: -7.021309852600098
    8. 'value' → logprob: -8.396309852600098
    9. 'output' → logprob: -8.896309852600098
    10. 'number' → logprob: -8.896309852600098

Token 230: ' tup' (ID: 84170)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.092806875705719
    2. 'row' → logprob: -2.717806816101074
    3. ' idx' → logprob: -4.842806816101074
    4. ' (' → logprob: -5.092806816101074
    5. '(row' → logprob: -5.092806816101074
    6. '(' → logprob: -7.717806816101074
    7. ' i' → logprob: -7.717806816101074
    8. ' ' → logprob: -8.092806816101074
    9. 'idx' → logprob: -8.217806816101074
    10. ' current' → logprob: -9.092806816101074

Token 231: '_pos' (ID: 14692)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09799063950777054
    2. 'in' → logprob: -3.0979907512664795
    3. '_row' → logprob: -3.5979907512664795
    4. ' ' → logprob: -5.0979905128479
    5. '_' → logprob: -5.3479905128479
    6. '_idx' → logprob: -5.4729905128479
    7. '(row' → logprob: -5.9729905128479
    8. ' (' → logprob: -6.3479905128479
    9. '_in' → logprob: -7.5979905128479
    10. ' =' → logprob: -8.597990989685059

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05518195033073425
    2. 'in' → logprob: -2.9301819801330566
    3. ' ' → logprob: -8.930181503295898
    4. ',' → logprob: -9.430181503295898
    5. ' ,' → logprob: -9.805181503295898
    6. 'row' → logprob: -11.805181503295898
    7. ',row' → logprob: -12.180181503295898
    8. '(row' → logprob: -12.305181503295898
    9. '   ' → logprob: -12.805181503295898
    10. 't' → logprob: -13.180181503295898

Token 233: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.5759583711624146
    2. 'matrix' → logprob: -0.8259583711624146
    3. 'range' → logprob: -11.700958251953125
    4. ' range' → logprob: -12.075958251953125
    5. '	matrix' → logprob: -13.325958251953125
    6. ' ' → logprob: -13.450958251953125
    7. '(matrix' → logprob: -13.575958251953125
    8. '   ' → logprob: -14.825958251953125
    9. '  ' → logprob: -16.700958251953125
    10. '.matrix' → logprob: -17.075958251953125

Token 234: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0009223000961355865
    2. '_elements' → logprob: -7.250922203063965
    3. '_size' → logprob: -9.250922203063965
    4. 'indices' → logprob: -9.750922203063965
    5. '_' → logprob: -10.750922203063965
    6. '_positions' → logprob: -11.625922203063965
    7. '_:' → logprob: -11.750922203063965
    8. ':' → logprob: -12.000922203063965
    9. '[' → logprob: -12.375922203063965
    10. 'Indices' → logprob: -13.750922203063965

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018923594325315207
    2. ':
' → logprob: -8.875188827514648
    3. ' :' → logprob: -10.125188827514648
    4. ',' → logprob: -12.375188827514648
    5. '):' → logprob: -13.000188827514648
    6. '[' → logprob: -13.625188827514648
    7. '   ' → logprob: -14.875188827514648
    8. '=' → logprob: -15.750188827514648
    9. '):
' → logprob: -16.00018882751465
    10. ' =' → logprob: -16.12518882751465

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4341782331466675
    2. ' row' → logprob: -1.4341782331466675
    3. '(row' → logprob: -2.934178352355957
    4. '    
' → logprob: -3.809178352355957
    5. ' 
' → logprob: -4.434178352355957
    6. ' (' → logprob: -4.684178352355957
    7. 'row' → logprob: -5.184178352355957
    8. '[row' → logprob: -6.059178352355957
    9. ',row' → logprob: -6.309178352355957
    10. ',' → logprob: -6.309178352355957

Token 237: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.7357909083366394
    2. ' row' → logprob: -0.7357909083366394
    3. ' if' → logprob: -3.985790967941284
    4. 'if' → logprob: -5.110790729522705
    5. ' val' → logprob: -5.235790729522705
    6. ' value' → logprob: -5.610790729522705
    7. 'val' → logprob: -6.235790729522705
    8. ' number' → logprob: -6.360790729522705
    9. 'value' → logprob: -6.485790729522705
    10. 'num' → logprob: -6.985790729522705

Token 238: '_pos' (ID: 14692)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.570245623588562
    2. '_idx' → logprob: -1.195245623588562
    3. '[' → logprob: -3.5702457427978516
    4. '_,' → logprob: -3.6952457427978516
    5. '_t' → logprob: -3.8202457427978516
    6. '[row' → logprob: -4.070245742797852
    7. ',row' → logprob: -4.695245742797852
    8. ',t' → logprob: -4.820245742797852
    9. '_' → logprob: -4.945245742797852
    10. '[t' → logprob: -5.195245742797852

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044771170360036194
    2. ' ,' → logprob: -8.500447273254395
    3. ',row' → logprob: -8.625447273254395
    4. ',column' → logprob: -10.625447273254395
    5. ',col' → logprob: -11.250447273254395
    6. '[' → logprob: -11.375447273254395
    7. '[row' → logprob: -12.000447273254395
    8. ',t' → logprob: -13.000447273254395
    9. '][' → logprob: -13.125447273254395
    10. '   ' → logprob: -14.000447273254395

Token 240: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.1269282102584839
    2. 'col' → logprob: -2.1269283294677734
    3. '	col' → logprob: -16.626928329467773
    4. ' column' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.376928329467773
    6. 'colm' → logprob: -18.626928329467773
    7. '_col' → logprob: -18.751928329467773
    8. 'column' → logprob: -19.251928329467773
    9. ' coli' → logprob: -19.626928329467773
    10. '   ' → logprob: -19.751928329467773

Token 241: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.4881879400927573e-05
    2. '_idx' → logprob: -10.500035285949707
    3. '_' → logprob: -12.875035285949707
    4. 'pos' → logprob: -13.125035285949707
    5. ' _' → logprob: -13.500035285949707
    6. '_t' → logprob: -14.625035285949707
    7. '=_' → logprob: -15.250035285949707
    8. 'Pos' → logprob: -15.625035285949707
    9. ',_' → logprob: -16.12503433227539
    10. 't' → logprob: -16.75003433227539

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02238064631819725
    2. '=' → logprob: -4.272380828857422
    3. ']' → logprob: -5.147380828857422
    4. ')' → logprob: -6.522380828857422
    5. '   ' → logprob: -7.647380828857422
    6. ',' → logprob: -8.897380828857422
    7. ' +=' → logprob: -9.522380828857422
    8. ' =
' → logprob: -9.772380828857422
    9. ' ]' → logprob: -10.022380828857422
    10. ' ' → logprob: -10.147380828857422

Token 243: ' tup' (ID: 84170)
  Prédit: ' tup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tup' → logprob: -0.08105113357305527
    2. 't' → logprob: -2.5810511112213135
    3. ' matrix' → logprob: -6.831051349639893
    4. ' tuple' → logprob: -7.831051349639893
    5. ' prime' → logprob: -8.831050872802734
    6. ' ' → logprob: -9.081050872802734
    7. ' random' → logprob: -9.331050872802734
    8. 'matrix' → logprob: -9.456050872802734
    9. 'tuple' → logprob: -9.581050872802734
    10. '0' → logprob: -10.206050872802734

Token 244: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.392202976712724e-06
    2. 'pos' → logprob: -13.250006675720215
    3. ' _' → logprob: -13.375006675720215
    4. '_' → logprob: -13.875006675720215
    5. 's' → logprob: -14.375006675720215
    6. '_p' → logprob: -14.875006675720215
    7. '_idx' → logprob: -15.250006675720215
    8. '[' → logprob: -15.625006675720215
    9. '_t' → logprob: -15.625006675720215
    10. 'os' → logprob: -16.1250057220459

Token 245: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018690401688218117
    2. ':' → logprob: -4.643690586090088
    3. '=' → logprob: -5.643690586090088
    4. ' =' → logprob: -5.768690586090088
    5. ',' → logprob: -7.268690586090088
    6. '    
' → logprob: -7.643690586090088
    7. '<|end|>' → logprob: -8.01869010925293
    8. '[' → logprob: -8.51869010925293
    9. '       ' → logprob: -9.51869010925293
    10. '    ' → logprob: -9.51869010925293

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008947690017521381
    2. ' if' → logprob: -5.383947849273682
    3. '       ' → logprob: -6.258947849273682
    4. '    
' → logprob: -7.008947849273682
    5. '    ' → logprob: -7.633947849273682
    6. ' number' → logprob: -8.758947372436523
    7. 'if' → logprob: -9.008947372436523
    8. 'num' → logprob: -9.133947372436523
    9. ')' → logprob: -9.258947372436523
    10. ' value' → logprob: -9.758947372436523

Token 247: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7956827282905579
    2. 'num' → logprob: -1.795682668685913
    3. 'if' (adapté à ' if') → logprob: -2.045682668685913
    4. ' num' → logprob: -2.670682668685913
    5. ' number' → logprob: -2.920682668685913
    6. ' value' → logprob: -3.420682668685913
    7. 'value' → logprob: -3.920682668685913
    8. ' next' → logprob: -4.295682907104492
    9. '   ' → logprob: -4.420682907104492
    10. 'number' → logprob: -4.670682907104492

Token 248: ' (' (ID: 350)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.5505480766296387
    2. ' row' → logprob: -1.4255480766296387
    3. ' (' → logprob: -2.4255480766296387
    4. 'col' → logprob: -3.0505480766296387
    5. ' prime' → logprob: -4.300548076629639
    6. 'row' → logprob: -4.550548076629639
    7. '(row' → logprob: -5.300548076629639
    8. ' matrix' → logprob: -5.300548076629639
    9. ' ' → logprob: -5.550548076629639
    10. '(' → logprob: -5.925548076629639

Token 249: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6257678270339966
    2. 'col' → logprob: -1.1257678270339966
    3. ' row' → logprob: -2.625767707824707
    4. ' col' → logprob: -3.125767707824707
    5. 'prime' → logprob: -4.625767707824707
    6. 'matrix' → logprob: -5.125767707824707
    7. ' matrix' → logprob: -6.250767707824707
    8. ' prime' → logprob: -6.500767707824707
    9. '(row' → logprob: -6.750767707824707
    10. 'not' → logprob: -7.000767707824707

Token 250: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -10.62503719329834
    3. 'pos' → logprob: -12.62503719329834
    4. 'Pos' → logprob: -13.00003719329834
    5. ' _' → logprob: -13.75003719329834
    6. '_positions' → logprob: -13.75003719329834
    7. '_size' → logprob: -14.00003719329834
    8. '[pos' → logprob: -14.00003719329834
    9. ')' → logprob: -15.00003719329834
    10. '_p' → logprob: -15.00003719329834

Token 251: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.15650756657123566
    2. '+' → logprob: -2.0315074920654297
    3. ' ==' → logprob: -5.15650749206543
    4. ',' → logprob: -6.40650749206543
    5. ' >=' → logprob: -6.78150749206543
    6. ' ,' → logprob: -6.90650749206543
    7. ' ' → logprob: -7.03150749206543
    8. ' >' → logprob: -7.03150749206543
    9. '==' → logprob: -7.40650749206543
    10. ' <=' → logprob: -7.53150749206543

Token 252: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.226103276014328
    2. 'col' → logprob: -1.6011033058166504
    3. '1' → logprob: -7.47610330581665
    4. ' ' → logprob: -9.351102828979492
    5. '   ' → logprob: -10.976102828979492
    6. '	col' → logprob: -12.351102828979492
    7. ')' → logprob: -12.601102828979492
    8. '    ' → logprob: -13.476102828979492
    9. '(col' → logprob: -13.601102828979492
    10. 'column' → logprob: -13.726102828979492

Token 253: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0009325406281277537
    2. ')' → logprob: -7.500932693481445
    3. '_' → logprob: -9.375932693481445
    4. 'pos' → logprob: -9.750932693481445
    5. '_positions' → logprob: -10.125932693481445
    6. 'os' → logprob: -10.250932693481445
    7. 'Pos' → logprob: -10.375932693481445
    8. '```' → logprob: -11.000932693481445
    9. ')_' → logprob: -11.125932693481445
    10. 's' → logprob: -11.500932693481445

Token 254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006341941654682159
    2. ' )' → logprob: -5.506341934204102
    3. ')%' → logprob: -6.756341934204102
    4. ' ==' → logprob: -8.256341934204102
    5. ' >=' → logprob: -8.506341934204102
    6. '+' → logprob: -8.756341934204102
    7. '==' → logprob: -9.631341934204102
    8. ' <=' → logprob: -9.881341934204102
    9. ' <' → logprob: -9.881341934204102
    10. ' +' → logprob: -10.006341934204102

Token 255: ' %' (ID: 1851)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.15775728225708
    2. ' %' → logprob: -1.78275728225708
    3. ' <' → logprob: -1.90775728225708
    4. '%' → logprob: -1.90775728225708
    5. ' <=' → logprob: -2.53275728225708
    6. ' ==' → logprob: -2.65775728225708
    7. ' >' → logprob: -3.78275728225708
    8. '<' → logprob: -4.53275728225708
    9. '>=' → logprob: -4.53275728225708
    10. '==' → logprob: -4.65775728225708

Token 256: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01291795913130045
    2. '3' → logprob: -4.887917995452881
    3. ' ' → logprob: -5.262917995452881
    4. '4' → logprob: -9.637917518615723
    5. '7' → logprob: -11.012917518615723
    6. '5' → logprob: -11.137917518615723
    7. '   ' → logprob: -12.512917518615723
    8. '  ' → logprob: -12.887917518615723
    9. 'matrix' → logprob: -13.012917518615723
    10. '==' → logprob: -13.137917518615723

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004361048340797424
    2. '3' → logprob: -5.504361152648926
    3. ' ' → logprob: -8.629361152648926
    4. '4' → logprob: -9.504361152648926
    5. '5' → logprob: -11.879361152648926
    6. '7' → logprob: -12.004361152648926
    7. 'prime' → logprob: -12.129361152648926
    8. 'matrix' → logprob: -12.379361152648926
    9. '   ' → logprob: -13.879361152648926
    10. '```' → logprob: -14.566861152648926

Token 258: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04882069677114487
    2. '==' → logprob: -3.048820734024048
    3. ' !=' → logprob: -9.173820495605469
    4. ')' → logprob: -9.923820495605469
    5. ' ' → logprob: -9.923820495605469
    6. ')==' → logprob: -11.173820495605469
    7. ' ' → logprob: -12.173820495605469
    8. '=' → logprob: -12.548820495605469
    9. '!=' → logprob: -13.298820495605469
    10. ']==' → logprob: -13.298820495605469

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25988903641700745
    2. ' ' → logprob: -1.634889006614685
    3. '1' → logprob: -3.3848891258239746
    4. '   ' → logprob: -13.009888648986816
    5. '==' → logprob: -13.947388648986816
    6. '  ' → logprob: -14.509888648986816
    7. ' ==' → logprob: -14.509888648986816
    8. '
' → logprob: -14.634888648986816
    9. '    ' → logprob: -14.884888648986816
    10. ' 
' → logprob: -15.134888648986816

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05423919856548309
    2. '1' → logprob: -3.054239273071289
    3. ' ' → logprob: -5.179239273071289
    4. '   ' → logprob: -13.804239273071289
    5. '```' → logprob: -14.804239273071289
    6. '
' → logprob: -14.991739273071289
    7. '==' → logprob: -15.929239273071289
    8. '  ' → logprob: -16.17923927307129
    9. ' ' → logprob: -16.36673927307129
    10. '

' → logprob: -16.42923927307129

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018337469547986984
    2. ':
' → logprob: -4.018337249755859
    3. '       ' → logprob: -9.89333724975586
    4. '   ' → logprob: -10.14333724975586
    5. ' :' → logprob: -10.51833724975586
    6. ' and' → logprob: -10.89333724975586
    7. '):
' → logprob: -11.14333724975586
    8. ' :
' → logprob: -11.76833724975586
    9. '):' → logprob: -12.01833724975586
    10. '=' → logprob: -12.14333724975586

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01329775806516409
    2. ':' → logprob: -4.5132975578308105
    3. '   ' → logprob: -7.0132975578308105
    4. ',' → logprob: -8.263298034667969
    5. ':
' → logprob: -8.388298034667969
    6. '        
' → logprob: -8.763298034667969
    7. '<|end|>' → logprob: -9.138298034667969
    8. ')' → logprob: -9.263298034667969
    9. ' ' → logprob: -9.763298034667969
    10. ' and' → logprob: -9.763298034667969

Token 263: ' sum' (ID: 4215)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.5827199220657349
    2. ' matrix' → logprob: -1.0827199220657349
    3. 'while' → logprob: -3.4577198028564453
    4. ' while' → logprob: -3.5827198028564453
    5. '   ' → logprob: -4.082719802856445
    6. 'value' → logprob: -5.207719802856445
    7. ' if' → logprob: -5.332719802856445
    8. ' value' → logprob: -5.457719802856445
    9. 'if' → logprob: -5.582719802856445
    10. ' number' → logprob: -6.332719802856445

Token 264: '_half' (ID: 105284)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6171655058860779
    2. ' =' → logprob: -1.2421655654907227
    3. '_' → logprob: -2.4921655654907227
    4. '_value' → logprob: -3.4921655654907227
    5. '=' → logprob: -3.9921655654907227
    6. '_num' → logprob: -4.117165565490723
    7. '_pos' → logprob: -4.867165565490723
    8. '_=' → logprob: -5.492165565490723
    9. '_of' → logprob: -6.367165565490723
    10. '_row' → logprob: -6.617165565490723

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03527479246258736
    2. '=' → logprob: -3.4102747440338135
    3. '_val' → logprob: -7.285274982452393
    4. ' ' → logprob: -7.910274982452393
    5. '_' → logprob: -8.035274505615234
    6. '   ' → logprob: -9.535274505615234
    7. 's' → logprob: -10.285274505615234
    8. '_value' → logprob: -10.410274505615234
    9. '_idx' → logprob: -11.035274505615234
    10. '_index' → logprob: -11.160274505615234

Token 266: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5302159190177917
    2. '(row' → logprob: -1.1552159786224365
    3. '(pr' → logprob: -3.7802159786224365
    4. '(matrix' → logprob: -3.9052159786224365
    5. 'prime' → logprob: -4.655215740203857
    6. ' ' → logprob: -4.780215740203857
    7. ' prime' → logprob: -4.780215740203857
    8. '   ' → logprob: -4.905215740203857
    9. 'matrix' → logprob: -5.155215740203857
    10. ' matrix' → logprob: -5.780215740203857

Token 267: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.2964780330657959
    2. 'matrix' → logprob: -1.546478033065796
    3. 'prime' → logprob: -3.796478033065796
    4. ' row' → logprob: -4.671478271484375
    5. ' matrix' → logprob: -5.296478271484375
    6. '(row' → logprob: -6.421478271484375
    7. ' prime' → logprob: -6.671478271484375
    8. 'col' → logprob: -6.796478271484375
    9. '(' → logprob: -7.171478271484375
    10. '(matrix' → logprob: -7.796478271484375

Token 268: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.3199920178740285e-05
    2. 'pos' → logprob: -11.125022888183594
    3. ' _' → logprob: -13.125022888183594
    4. '_' → logprob: -13.375022888183594
    5. 'Pos' → logprob: -13.750022888183594
    6. '_size' → logprob: -13.875022888183594
    7. '   ' → logprob: -14.250022888183594
    8. '_positions' → logprob: -15.125022888183594
    9. '[pos' → logprob: -15.250022888183594
    10. '_val' → logprob: -15.625022888183594

Token 269: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34852495789527893
    2. '+' → logprob: -1.2235249280929565
    3. ' ' → logprob: -9.848525047302246
    4. '   ' → logprob: -11.473525047302246
    5. ' +
' → logprob: -11.473525047302246
    6. '+
' → logprob: -13.098525047302246
    7. '  ' → logprob: -14.098525047302246
    8. '    ' → logprob: -14.098525047302246
    9. '	' → logprob: -14.598525047302246
    10. '       ' → logprob: -14.723525047302246

Token 270: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.6326663494110107
    2. ' col' → logprob: -0.7576663494110107
    3. '1' → logprob: -10.38266658782959
    4. '   ' → logprob: -11.25766658782959
    5. ' ' → logprob: -11.63266658782959
    6. '	col' → logprob: -11.88266658782959
    7. '(col' → logprob: -13.88266658782959
    8. '           ' → logprob: -13.88266658782959
    9. '  ' → logprob: -14.00766658782959
    10. '    ' → logprob: -14.13266658782959

Token 271: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00013738969573751092
    2. 'pos' → logprob: -9.000137329101562
    3. 'Pos' → logprob: -12.000137329101562
    4. '_positions' → logprob: -13.500137329101562
    5. '_' → logprob: -13.625137329101562
    6. ')' → logprob: -13.750137329101562
    7. '_col' → logprob: -14.000137329101562
    8. '   ' → logprob: -14.500137329101562
    9. 'col' → logprob: -14.750137329101562
    10. '_p' → logprob: -15.000137329101562

Token 272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001026854501105845
    2. ')//' → logprob: -7.126026630401611
    3. ' )' → logprob: -8.50102710723877
    4. '+' → logprob: -11.50102710723877
    5. '   ' → logprob: -12.37602710723877
    6. ')
' → logprob: -13.12602710723877
    7. '//' → logprob: -13.87602710723877
    8. ' +' → logprob: -14.37602710723877
    9. ')>>' → logprob: -15.37602710723877
    10. ' //' → logprob: -15.87602710723877

Token 273: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.27708199620246887
    2. '//' → logprob: -2.0270819664001465
    3. ')' → logprob: -2.4020819664001465
    4. '   ' → logprob: -4.1520819664001465
    5. ' ' → logprob: -7.0270819664001465
    6. '#' → logprob: -7.1520819664001465
    7. '
' → logprob: -7.4020819664001465
    8. '+' → logprob: -7.6520819664001465
    9. ')//' → logprob: -7.9020819664001465
    10. '       ' → logprob: -8.152082443237305

Token 274: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00193149340339005
    2. ' ' → logprob: -6.251931667327881
    3. '1' → logprob: -13.626931190490723
    4. '
' → logprob: -14.126931190490723
    5. '   ' → logprob: -14.501931190490723
    6. '3' → logprob: -16.00193214416504
    7. '  ' → logprob: -16.37693214416504
    8. ')' → logprob: -16.87693214416504
    9. '```' → logprob: -17.00193214416504
    10. '
' → logprob: -17.25193214416504

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.901345038088039e-05
    2. ' ' → logprob: -9.250099182128906
    3. '1' → logprob: -13.000099182128906
    4. '   ' → logprob: -15.000099182128906
    5. '3' → logprob: -15.750099182128906
    6. '
' → logprob: -16.125099182128906
    7. '4' → logprob: -17.562599182128906
    8. '```' → logprob: -17.750099182128906
    9. '=' → logprob: -17.812599182128906
    10. '  ' → logprob: -17.875099182128906

Token 276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22903257608413696
    2. '
' → logprob: -2.479032516479492
    3. '   ' → logprob: -2.479032516479492
    4. '        
' → logprob: -3.854032516479492
    5. '    
' → logprob: -5.604032516479492
    6. '<|end|>' → logprob: -5.854032516479492
    7. ' 
' → logprob: -6.479032516479492
    8. '  
' → logprob: -7.104032516479492
    9. 'matrix' → logprob: -7.104032516479492
    10. ')' → logprob: -7.229032516479492

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009246804984286427
    2. ' number' → logprob: -8.875925064086914
    3. 'number' → logprob: -9.000925064086914
    4. 'num' → logprob: -9.000925064086914
    5. ' if' → logprob: -9.375925064086914
    6. '        
' → logprob: -9.500925064086914
    7. ',' → logprob: -9.750925064086914
    8. 'if' → logprob: -9.875925064086914
    9. 'n' → logprob: -10.000925064086914
    10. 'value' → logprob: -10.250925064086914

Token 278: ' diff' (ID: 8868)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.06539209932088852
    2. 'if' → logprob: -3.690392017364502
    3. ' matrix' → logprob: -3.940392017364502
    4. 'value' → logprob: -5.190392017364502
    5. '   ' → logprob: -5.315392017364502
    6. 'next' → logprob: -6.815392017364502
    7. 'val' → logprob: -6.940392017364502
    8. 'while' → logprob: -6.940392017364502
    9. ' if' → logprob: -6.940392017364502
    10. 'number' → logprob: -7.440392017364502

Token 279: '_half' (ID: 105284)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.069948211312294
    2. '=' → logprob: -2.694948196411133
    3. ' ' → logprob: -12.694948196411133
    4. ')' → logprob: -13.069948196411133
    5. 's' → logprob: -13.069948196411133
    6. ',' → logprob: -13.444948196411133
    7. '<|end|>' → logprob: -14.444948196411133
    8. '_' → logprob: -14.569948196411133
    9. '  ' → logprob: -15.444948196411133
    10. 'a' → logprob: -15.444948196411133

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889363914728165
    2. '=' → logprob: -2.5788936614990234
    3. ',' → logprob: -12.828893661499023
    4. '   ' → logprob: -14.328893661499023
    5. ' ' → logprob: -14.953893661499023
    6. ')' → logprob: -16.078893661499023
    7. '    ' → logprob: -16.203893661499023
    8. ' =
' → logprob: -17.703893661499023
    9. '       ' → logprob: -17.953893661499023
    10. '        ' → logprob: -17.953893661499023

Token 281: ' matrix' (ID: 12248)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8652991652488708
    2. '(row' → logprob: -1.3652992248535156
    3. '(col' → logprob: -1.3652992248535156
    4. '(abs' → logprob: -2.7402992248535156
    5. ' abs' → logprob: -6.740299224853516
    6. '(' → logprob: -7.240299224853516
    7. 'abs' → logprob: -7.365299224853516
    8. '((' → logprob: -7.740299224853516
    9. ' col' → logprob: -7.990299224853516
    10. 'col' → logprob: -8.740299224853516

Token 282: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.01826559193432331
    2. '_elements' → logprob: -4.268265724182129
    3. 'size' → logprob: -6.393265724182129
    4. '[row' → logprob: -6.893265724182129
    5. '_pos' → logprob: -7.518265724182129
    6. '_indices' → logprob: -7.893265724182129
    7. '[' → logprob: -9.018265724182129
    8. 'pos' → logprob: -10.143265724182129
    9. '[size' → logprob: -10.143265724182129
    10. '[pos' → logprob: -10.643265724182129

Token 283: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.056291718035936356
    2. '-' → logprob: -3.4312918186187744
    3. ' +' → logprob: -4.431291580200195
    4. ' ' → logprob: -5.056291580200195
    5. '+' → logprob: -6.556291580200195
    6. '<|end|>' → logprob: -6.681291580200195
    7. ' //' → logprob: -7.181291580200195
    8. '//' → logprob: -8.306291580200195
    9. ' *' → logprob: -9.181291580200195
    10. '  ' → logprob: -10.181291580200195

Token 284: ' (' (ID: 350)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.7271276116371155
    2. '(col' → logprob: -1.2271275520324707
    3. ' (' → logprob: -2.6021275520324707
    4. ' col' → logprob: -2.8521275520324707
    5. '3' → logprob: -3.6021275520324707
    6. '(sum' → logprob: -4.227127552032471
    7. '1' → logprob: -4.477127552032471
    8. 'sum' → logprob: -4.602127552032471
    9. '(row' → logprob: -4.852127552032471
    10. '(' → logprob: -4.977127552032471

Token 285: 'row' (ID: 843)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.06745108962059021
    2. 'row' → logprob: -3.442451000213623
    3. ' col' → logprob: -3.567451000213623
    4. 'sum' → logprob: -5.692451000213623
    5. ' row' → logprob: -7.192451000213623
    6. '(col' → logprob: -8.567451477050781
    7. ' sum' → logprob: -8.942451477050781
    8. '(row' → logprob: -9.067451477050781
    9. ' ' → logprob: -9.067451477050781
    10. ')' → logprob: -9.692451477050781

Token 286: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.002883214270696044
    2. 'pos' → logprob: -6.627883434295654
    3. '_size' → logprob: -6.627883434295654
    4. 'Pos' → logprob: -8.502882957458496
    5. '-pos' → logprob: -12.002882957458496
    6. '-' → logprob: -12.127882957458496
    7. 'size' → logprob: -12.502882957458496
    8. '_positions' → logprob: -13.002882957458496
    9. '_position' → logprob: -13.377882957458496
    10. ' pos' → logprob: -13.502882957458496

Token 287: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18667970597743988
    2. '-' → logprob: -1.811679720878601
    3. '+' → logprob: -5.561679840087891
    4. ' +' → logprob: -6.186679840087891
    5. ')' → logprob: -7.686679840087891
    6. ' ' → logprob: -7.686679840087891
    7. ',' → logprob: -10.43667984008789
    8. ' -
' → logprob: -10.81167984008789
    9. '<|end|>' → logprob: -11.81167984008789
    10. ')-' → logprob: -12.24917984008789

Token 288: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.10020904988050461
    2. ' col' → logprob: -2.3502089977264404
    3. '_col' → logprob: -13.97520923614502
    4. '	col' → logprob: -14.97520923614502
    5. ' ' → logprob: -15.22520923614502
    6. '   ' → logprob: -15.22520923614502
    7. '(col' → logprob: -15.47520923614502
    8. 'column' → logprob: -15.60020923614502
    9. 'row' → logprob: -16.225208282470703
    10. '       ' → logprob: -16.725208282470703

Token 289: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.7530574849806726e-05
    2. 'os' → logprob: -10.375057220458984
    3. 'pos' → logprob: -10.625057220458984
    4. 'Pos' → logprob: -13.625057220458984
    5. '_idx' → logprob: -15.875057220458984
    6. 'oss' → logprob: -16.125057220458984
    7. 'osition' → logprob: -16.375057220458984
    8. '	pos' → logprob: -16.375057220458984
    9. '_' → logprob: -16.625057220458984
    10. ')' → logprob: -16.625057220458984

Token 290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002954285591840744
    2. ')//' → logprob: -6.252954483032227
    3. ' )' → logprob: -7.252954483032227
    4. ')
' → logprob: -8.502954483032227
    5. '   ' → logprob: -10.127954483032227
    6. 'def' → logprob: -11.002954483032227
    7. '))' → logprob: -11.252954483032227
    8. '[' → logprob: -11.502954483032227
    9. ')#' → logprob: -11.877954483032227
    10. ')))' → logprob: -12.627954483032227

Token 291: ' //' (ID: 602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34525179862976074
    2. ')' → logprob: -2.0952517986297607
    3. '
' → logprob: -2.5952517986297607
    4. '   ' → logprob: -3.3452517986297607
    5. 'def' → logprob: -4.09525203704834
    6. ' //' → logprob: -4.59525203704834
    7. ' ' → logprob: -4.97025203704834
    8. '[' → logprob: -4.97025203704834
    9. '#' → logprob: -5.34525203704834
    10. '//' → logprob: -6.59525203704834

Token 292: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. '           ' → logprob: -16.875045776367188
    5. '
' → logprob: -17.125045776367188
    6. '```' → logprob: -17.250045776367188
    7. '...' → logprob: -17.625045776367188
    8. '1' → logprob: -18.125045776367188
    9. '۲' → logprob: -18.375045776367188
    10. '<|end|>' → logprob: -18.375045776367188

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.25001335144043
    4. '1' → logprob: -16.50001335144043
    5. '
' → logprob: -16.87501335144043
    6. '```' → logprob: -17.00001335144043
    7. '...' → logprob: -18.25001335144043
    8. '۲' → logprob: -18.37501335144043
    9. '<|end|>' → logprob: -18.62501335144043
    10. ')' → logprob: -18.68751335144043

Token 294: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012274051085114479
    2. '
' → logprob: -4.762274265289307
    3. '<|end|>' → logprob: -6.012274265289307
    4. '        
' → logprob: -7.637274265289307
    5. ',' → logprob: -7.762274265289307
    6. ')' → logprob: -9.137273788452148
    7. '   ' → logprob: -10.137273788452148
    8. '  
' → logprob: -10.637273788452148
    9. '<|end|>' → logprob: -11.012273788452148
    10. ',
' → logprob: -11.137273788452148

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044068231363780797
    2. '   ' → logprob: -9.12544059753418
    3. '        
' → logprob: -9.25044059753418
    4. '
' → logprob: -9.87544059753418
    5. '<|end|>' → logprob: -10.25044059753418
    6. ',' → logprob: -10.37544059753418
    7. ' if' → logprob: -10.87544059753418
    8. '           ' → logprob: -10.87544059753418
    9. 'if' → logprob: -11.12544059753418
    10. ')' → logprob: -11.50044059753418

Token 296: ' calc' (ID: 25691)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.21123076975345612
    2. '       ' → logprob: -3.086230754852295
    3. ' matrix' → logprob: -3.211230754852295
    4. '   ' → logprob: -3.211230754852295
    5. 'if' → logprob: -4.086230754852295
    6. '           ' → logprob: -4.836230754852295
    7. 'value' → logprob: -4.961230754852295
    8. 'number' → logprob: -5.211230754852295
    9. 'val' → logprob: -5.336230754852295
    10. 'num' → logprob: -5.586230754852295

Token 297: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6749584674835205
    2. '_val' → logprob: -0.9249584674835205
    3. '_l' → logprob: -2.9249584674835205
    4. '_num' → logprob: -4.674958229064941
    5. '_number' → logprob: -5.174958229064941
    6. 'ed' → logprob: -5.299958229064941
    7. 'ulated' → logprob: -5.549958229064941
    8. ' =' → logprob: -5.924958229064941
    9. '_matrix' → logprob: -5.924958229064941
    10. '_result' → logprob: -6.299958229064941

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009783715009689331
    2. '=' → logprob: -4.634783744812012
    3. ' ' → logprob: -11.384783744812012
    4. '   ' → logprob: -12.259783744812012
    5. ',' → logprob: -12.384783744812012
    6. ')' → logprob: -13.259783744812012
    7. '[' → logprob: -13.509783744812012
    8. '  ' → logprob: -14.134783744812012
    9. '<|end|>' → logprob: -14.259783744812012
    10. '_' → logprob: -14.384783744812012

Token 299: ' (' (ID: 350)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.4805735647678375
    2. ' prime' → logprob: -0.9805735349655151
    3. '(' → logprob: -6.230573654174805
    4. ' (' → logprob: -6.730573654174805
    5. '(pr' → logprob: -6.980573654174805
    6. ' fractions' → logprob: -7.355573654174805
    7. '   ' → logprob: -7.855573654174805
    8. 'fra' → logprob: -8.105573654174805
    9. ' ' → logprob: -8.230573654174805
    10. 'math' → logprob: -8.855573654174805

Token 300: 'sum' (ID: 12298)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.014758738689124584
    2. ' prime' → logprob: -4.264758586883545
    3. ')' → logprob: -8.264759063720703
    4. '2' → logprob: -9.389759063720703
    5. '   ' → logprob: -9.764759063720703
    6. 'matrix' → logprob: -10.389759063720703
    7. ' ' → logprob: -10.889759063720703
    8. 'math' → logprob: -10.889759063720703
    9. 'pr' → logprob: -11.014759063720703
    10. '(' → logprob: -11.264759063720703

Token 301: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -4.9424725148128346e-05
    2. '_' → logprob: -10.250049591064453
    3. '_hal' → logprob: -12.125049591064453
    4. 'half' → logprob: -13.125049591064453
    5. '_offset' → logprob: -14.125049591064453
    6. '(' → logprob: -14.250049591064453
    7. 'Half' → logprob: -14.250049591064453
    8. '_HALF' → logprob: -14.375049591064453
    9. '_
' → logprob: -14.500049591064453
    10. ')_' → logprob: -14.875049591064453

Token 302: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3351152241230011
    2. '+' → logprob: -1.4601151943206787
    3. ' *' → logprob: -3.4601151943206787
    4. '*' → logprob: -4.460115432739258
    5. ')' → logprob: -5.335115432739258
    6. ',' → logprob: -6.960115432739258
    7. ' ' → logprob: -7.210115432739258
    8. ' -' → logprob: -7.335115432739258
    9. '**' → logprob: -7.460115432739258
    10. ' +
' → logprob: -7.960115432739258

Token 303: ' ' (ID: 220)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.24094940721988678
    2. ' diff' → logprob: -1.6159493923187256
    3. 'prime' → logprob: -4.615949630737305
    4. ' prime' → logprob: -5.240949630737305
    5. ')' → logprob: -9.615949630737305
    6. ' ' → logprob: -10.365949630737305
    7. '1' → logprob: -10.490949630737305
    8. ' col' → logprob: -10.490949630737305
    9. '(diff' → logprob: -11.115949630737305
    10. 'col' → logprob: -11.115949630737305

Token 304: '1' (ID: 16)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3523687422275543
    2. 'prime' → logprob: -1.227368712425232
    3. ' diff' → logprob: -6.2273688316345215
    4. ' prime' → logprob: -6.3523688316345215
    5. 'col' → logprob: -9.977368354797363
    6. ')' → logprob: -10.602368354797363
    7. '1' → logprob: -10.727368354797363
    8. ' ' → logprob: -10.977368354797363
    9. '(diff' → logprob: -10.977368354797363
    10. 'matrix' → logprob: -11.352368354797363

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010335329920053482
    2. ')**' → logprob: -5.385335445404053
    3. ' )' → logprob: -5.635335445404053
    4. ')*' → logprob: -6.510335445404053
    5. '*' → logprob: -8.885334968566895
    6. ' +' → logprob: -9.010334968566895
    7. '+' → logprob: -9.260334968566895
    8. '**' → logprob: -9.510334968566895
    9. ' *' → logprob: -10.135334968566895
    10. '[' → logprob: -10.385334968566895

Token 306: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.36572521924972534
    2. '*' → logprob: -1.9907252788543701
    3. ' +' → logprob: -2.24072527885437
    4. '+' → logprob: -3.74072527885437
    5. '**' → logprob: -4.115725040435791
    6. ')' → logprob: -4.740725040435791
    7. '<|end|>' → logprob: -5.240725040435791
    8. ' **' → logprob: -5.490725040435791
    9. ' ' → logprob: -6.115725040435791
    10. ' -' → logprob: -7.240725040435791

Token 307: ' (' (ID: 350)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.2845833897590637
    2. ' prime' → logprob: -1.409583330154419
    3. ' (' → logprob: -6.409583568572998
    4. '(pr' → logprob: -6.909583568572998
    5. '(' → logprob: -8.15958309173584
    6. '   ' → logprob: -9.53458309173584
    7. 'sum' → logprob: -9.78458309173584
    8. ' ' → logprob: -9.78458309173584
    9. 'matrix' → logprob: -10.03458309173584
    10. ' primes' → logprob: -10.28458309173584

Token 308: 'prime' (ID: 46441)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16791333258152008
    2. 'prime' → logprob: -2.5429134368896484
    3. ' diff' → logprob: -2.9179134368896484
    4. ' prime' → logprob: -4.917913436889648
    5. 'sum' → logprob: -5.042913436889648
    6. '(diff' → logprob: -5.167913436889648
    7. ' sum' → logprob: -7.292913436889648
    8. 'matrix' → logprob: -7.917913436889648
    9. ' ' → logprob: -8.542913436889648
    10. ' (' → logprob: -8.542913436889648

Token 309: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0003148472751490772
    2. '_offset' → logprob: -8.125314712524414
    3. 'sequence' → logprob: -11.000314712524414
    4. '[' → logprob: -13.625314712524414
    5. '[offset' → logprob: -15.375314712524414
    6. '
' → logprob: -16.250314712524414
    7. 'Sequence' → logprob: -16.500314712524414
    8. ' sequence' → logprob: -16.500314712524414
    9. 's' → logprob: -16.750314712524414
    10. '_list' → logprob: -16.875314712524414

Token 310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7491250875755213e-05
    2. ' [' → logprob: -10.875027656555176
    3. 'prime' → logprob: -12.250027656555176
    4. '[
' → logprob: -13.125027656555176
    5. '[col' → logprob: -14.375027656555176
    6. '   ' → logprob: -14.500027656555176
    7. '[val' → logprob: -15.500027656555176
    8. ')[' → logprob: -16.37502670288086
    9. '[p' → logprob: -16.37502670288086
    10. '```' → logprob: -17.25002670288086

Token 311: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.00021593389101326466
    2. '[' → logprob: -8.875215530395508
    3. ' prime' → logprob: -9.625215530395508
    4. '   ' → logprob: -12.625215530395508
    5. 'pr' → logprob: -12.625215530395508
    6. 'calc' → logprob: -13.250215530395508
    7. '_prime' → logprob: -14.500215530395508
    8. 'prim' → logprob: -14.500215530395508
    9. ' ' → logprob: -16.125215530395508
    10. '
' → logprob: -16.125215530395508

Token 312: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.00807843916118145
    2. 'offset' → logprob: -4.883078575134277
    3. 'ffset' → logprob: -8.133078575134277
    4. 'Offset' → logprob: -9.008078575134277
    5. 'prime' → logprob: -10.758078575134277
    6. '[offset' → logprob: -11.883078575134277
    7. ' offset' → logprob: -11.883078575134277
    8. '_OFFSET' → logprob: -12.008078575134277
    9. '-offset' → logprob: -12.508078575134277
    10. 'OFFSET' → logprob: -13.008078575134277

Token 313: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8415434956550598
    2. ']' → logprob: -0.9665434956550598
    3. '])' → logprob: -2.341543436050415
    4. '+' → logprob: -2.591543436050415
    5. ' -' → logprob: -4.966543674468994
    6. '[' → logprob: -5.591543674468994
    7. ' ]' → logprob: -6.216543674468994
    8. '-' → logprob: -6.591543674468994
    9. ' ])' → logprob: -6.841543674468994
    10. ' ' → logprob: -7.216543674468994

Token 314: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3737289309501648
    2. ' diff' → logprob: -1.9987289905548096
    3. 'sum' → logprob: -2.3737289905548096
    4. 'calc' → logprob: -3.2487289905548096
    5. ' sum' → logprob: -4.2487287521362305
    6. ' calc' → logprob: -4.3737287521362305
    7. 'prime' → logprob: -4.6237287521362305
    8. ' prime' → logprob: -5.8737287521362305
    9. 'col' → logprob: -6.6237287521362305
    10. ' col' → logprob: -6.9987287521362305

Token 315: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.0001637300301808864
    2. '_offset' → logprob: -8.750164031982422
    3. 'half' → logprob: -12.875164031982422
    4. '_pos' → logprob: -14.625164031982422
    5. '_hal' → logprob: -14.875164031982422
    6. '_HALF' → logprob: -15.125164031982422
    7. '_value' → logprob: -15.375164031982422
    8. 'offset' → logprob: -15.625164031982422
    9. '_off' → logprob: -15.875164031982422
    10. '
' → logprob: -15.875164031982422

Token 316: '])
' (ID: 5169)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6403765082359314
    2. '])' → logprob: -0.8903765082359314
    3. ')' → logprob: -2.890376567840576
    4. '-' → logprob: -6.390376567840576
    5. ' )' → logprob: -6.640376567840576
    6. ' ])' → logprob: -6.640376567840576
    7. ' ]' → logprob: -6.890376567840576
    8. '[' → logprob: -8.015376091003418
    9. ')]' → logprob: -8.390376091003418
    10. ' -' → logprob: -8.390376091003418

Token 317: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4943888187408447
    2. '<|end|>' → logprob: -1.1193888187408447
    3. ')' → logprob: -3.6193888187408447
    4. '       ' → logprob: -4.494388580322266
    5. 'matrix' → logprob: -5.244388580322266
    6. ' ' → logprob: -5.244388580322266
    7. '
' → logprob: -5.494388580322266
    8. ' matrix' → logprob: -6.119388580322266
    9. '    
' → logprob: -6.244388580322266
    10. '	matrix' → logprob: -6.494388580322266

Token 318: ' if' (ID: 538)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03639400377869606
    2. ' matrix' → logprob: -3.5363941192626953
    3. '   ' → logprob: -5.661394119262695
    4. 'if' (adapté à ' if') → logprob: -7.036394119262695
    5. 'while' → logprob: -7.536394119262695
    6. ' if' → logprob: -7.536394119262695
    7. '	matrix' → logprob: -7.786394119262695
    8. ')' → logprob: -8.161394119262695
    9. ' while' → logprob: -8.911394119262695
    10. '
' → logprob: -9.661394119262695

Token 319: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.2634897530078888
    2. 'calc' → logprob: -1.5134897232055664
    3. '(calc' → logprob: -5.013489723205566
    4. ' (' → logprob: -5.888489723205566
    5. '(' → logprob: -7.263489723205566
    6. ' not' → logprob: -7.763489723205566
    7. ' col' → logprob: -8.638489723205566
    8. ' ' → logprob: -8.638489723205566
    9. ' matrix' → logprob: -9.263489723205566
    10. ' row' → logprob: -9.263489723205566

Token 320: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1994775377388578e-05
    2. '_' → logprob: -11.750012397766113
    3. ' _' → logprob: -13.625012397766113
    4. '_val' → logprob: -14.125012397766113
    5. '_values' → logprob: -14.625012397766113
    6. '_Value' → logprob: -15.375012397766113
    7. 'alue' → logprob: -15.500012397766113
    8. '_VALUE' → logprob: -15.875012397766113
    9. 's' → logprob: -16.000011444091797
    10. 'value' → logprob: -16.125011444091797

Token 321: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10071026533842087
    2. ' in' → logprob: -2.975710153579712
    3. ' >' → logprob: -3.225710153579712
    4. ' <=' → logprob: -6.100710391998291
    5. ' ' → logprob: -7.225710391998291
    6. '>' → logprob: -7.225710391998291
    7. 'not' → logprob: -7.600710391998291
    8. ' <' → logprob: -7.850710391998291
    9. ' ==' → logprob: -8.850709915161133
    10. ' >=' → logprob: -9.225709915161133

Token 322: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.474078893661499
    2. 'used' → logprob: -0.974078893661499
    3. '   ' → logprob: -14.349079132080078
    4. '.used' → logprob: -14.599079132080078
    5. ' ' → logprob: -14.724079132080078
    6. '_used' → logprob: -15.849079132080078
    7. 'unused' → logprob: -16.599079132080078
    8. 'Used' → logprob: -17.099079132080078
    9. '  ' → logprob: -17.224079132080078
    10. ' ' → logprob: -17.349079132080078

Token 323: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -3.500108141452074e-05
    2. '_' → logprob: -10.500035285949707
    3. '_values' → logprob: -11.875035285949707
    4. '_
' → logprob: -15.250035285949707
    5. ' _' → logprob: -16.12503433227539
    6. '_elements' → logprob: -17.25003433227539
    7. '_number' → logprob: -17.62503433227539
    8. 'numbers' → logprob: -17.87503433227539
    9. '_n' → logprob: -18.12503433227539
    10. '
' → logprob: -18.50003433227539

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006045162212103605
    2. ':
' → logprob: -5.131045341491699
    3. ':return' → logprob: -9.3810453414917
    4. '   ' → logprob: -11.8810453414917
    5. ' continue' → logprob: -12.2560453414917
    6. ' :' → logprob: -12.6310453414917
    7. ',' → logprob: -12.7560453414917
    8. '       ' → logprob: -13.0060453414917
    9. ' or' → logprob: -13.1310453414917
    10. '):' → logprob: -13.3810453414917

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01327317114919424
    2. ' continue' → logprob: -4.513273239135742
    3. 'continue' → logprob: -6.888273239135742
    4. '       ' → logprob: -7.138273239135742
    5. '               ' → logprob: -8.638273239135742
    6. '            
' → logprob: -10.013273239135742
    7. ',' → logprob: -10.138273239135742
    8. '   ' → logprob: -10.638273239135742
    9. ' col' → logprob: -11.388273239135742
    10. '
' → logprob: -11.513273239135742

Token 326: ' print' (ID: 2123)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.308668315410614
    2. 'prime' → logprob: -1.8086683750152588
    3. '           ' → logprob: -2.433668375015259
    4. ' calc' → logprob: -4.93366813659668
    5. 'calc' → logprob: -5.93366813659668
    6. '               ' → logprob: -6.18366813659668
    7. '       ' → logprob: -7.30866813659668
    8. ' break' → logprob: -7.93366813659668
    9. ' continue' → logprob: -8.18366813659668
    10. 'continue' → logprob: -8.55866813659668

Token 327: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09122899919748306
    2. '("' → logprob: -2.46622896194458
    3. '('' → logprob: -7.21622896194458
    4. '("")' → logprob: -7.34122896194458
    5. '()' → logprob: -7.59122896194458
    6. '(-' → logprob: -8.716229438781738
    7. '("("' → logprob: -9.216229438781738
    8. '(calc' → logprob: -9.716229438781738
    9. '("?' → logprob: -10.966229438781738
    10. '("="' → logprob: -11.466229438781738

Token 328: '101' (ID: 7959)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10993914306163788
    2. 'calc' → logprob: -2.7349390983581543
    3. '-' → logprob: -3.7349390983581543
    4. '"No' → logprob: -4.484939098358154
    5. ''' → logprob: -7.109939098358154
    6. '"-' → logprob: -7.234939098358154
    7. '(calc' → logprob: -7.859939098358154
    8. ' calc' → logprob: -7.859939098358154
    9. '   ' → logprob: -8.984939575195312
    10. 'False' → logprob: -9.109939575195312

Token 329: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15165427327156067
    2. ')
' → logprob: -2.1516542434692383
    3. '0' → logprob: -4.026654243469238
    4. '9' → logprob: -6.026654243469238
    5. '2' → logprob: -7.026654243469238
    6. '7' → logprob: -7.276654243469238
    7. '8' → logprob: -7.651654243469238
    8. '3' → logprob: -7.901654243469238
    9. ',' → logprob: -8.151654243469238
    10. '1' → logprob: -8.276654243469238

Token 330: ' calc' (ID: 25691)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.23094823956489563
    2. ')' → logprob: -1.9809482097625732
    3. 'calc' → logprob: -3.2309482097625732
    4. '0' → logprob: -4.480948448181152
    5. 'row' → logprob: -5.230948448181152
    6. 'matrix' → logprob: -5.355948448181152
    7. '"' → logprob: -6.855948448181152
    8. ')
' → logprob: -6.980948448181152
    9. 'col' → logprob: -7.105948448181152
    10. ' end' → logprob: -7.105948448181152

Token 331: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.002600983949378133
    2. ')' → logprob: -6.752601146697998
    3. '_val' → logprob: -7.127601146697998
    4. '_error' → logprob: -7.627601146697998
    5. '_' → logprob: -10.37760066986084
    6. '_)' → logprob: -10.75260066986084
    7. '_values' → logprob: -10.75260066986084
    8. '_exit' → logprob: -11.50260066986084
    9. ' )' → logprob: -11.75260066986084
    10. 'value' → logprob: -12.00260066986084

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029856126755475998
    2. ')
' → logprob: -3.5298562049865723
    3. ',' → logprob: -9.404855728149414
    4. ' )' → logprob: -11.654855728149414
    5. ')
' → logprob: -11.904855728149414
    6. ',)' → logprob: -12.904855728149414
    7. '   ' → logprob: -13.279855728149414
    8. ' )
' → logprob: -14.404855728149414
    9. '))' → logprob: -14.654855728149414
    10. '),' → logprob: -14.904855728149414

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010691462084650993
    2. '       ' → logprob: -4.7606916427612305
    3. ')' → logprob: -7.6356916427612305
    4. ',' → logprob: -7.7606916427612305
    5. '               ' → logprob: -8.01069164276123
    6. '<|end|>' → logprob: -8.01069164276123
    7. '            
' → logprob: -8.51069164276123
    8. '        
' → logprob: -10.63569164276123
    9. 'exit' → logprob: -10.76069164276123
    10. 'continue' → logprob: -10.76069164276123

Token 334: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7504868507385254
    2. ' break' → logprob: -0.8754868507385254
    3. 'break' → logprob: -2.6254868507385254
    4. 'exit' → logprob: -4.500486850738525
    5. ' exit' → logprob: -4.875486850738525
    6. '       ' → logprob: -4.875486850738525
    7. '            
' → logprob: -5.500486850738525
    8. ')' → logprob: -6.000486850738525
    9. ' raise' → logprob: -6.250486850738525
    10. '    
' → logprob: -7.375486850738525

Token 335: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -1.0073500871658325
    2. ' Exception' → logprob: -1.2573500871658325
    3. ' Runtime' → logprob: -1.7573500871658325
    4. 'Value' → logprob: -2.132349967956543
    5. 'Exception' → logprob: -3.632349967956543
    6. 'Runtime' → logprob: -3.757349967956543
    7. ' Assertion' → logprob: -4.757349967956543
    8. 'Assertion' → logprob: -7.007349967956543
    9. '(Exception' → logprob: -11.382349967956543
    10. '(Runtime' → logprob: -11.382349967956543

Token 336: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00313529372215271
    2. 'Value' → logprob: -6.2531352043151855
    3. 'Exception' → logprob: -7.2531352043151855
    4. 'rror' → logprob: -9.003135681152344
    5. 'Index' → logprob: -9.378135681152344
    6. ' Value' → logprob: -9.503135681152344
    7. ' Error' → logprob: -9.628135681152344
    8. 'Assertion' → logprob: -10.628135681152344
    9. ' ' → logprob: -11.003135681152344
    10. '()' → logprob: -11.253135681152344

Token 337: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5973265767097473
    2. '("' → logprob: -0.8473265767097473
    3. '('' → logprob: -4.847326755523682
    4. '(' → logprob: -4.972326755523682
    5. '()
' → logprob: -5.347326755523682
    6. '(
' → logprob: -6.722326755523682
    7. '       ' → logprob: -8.347326278686523
    8. '()

' → logprob: -10.222326278686523
    9. '           ' → logprob: -10.347326278686523
    10. '   ' → logprob: -10.347326278686523

Token 338: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21450075507164001
    2. '       ' → logprob: -1.8395007848739624
    3. ' used' → logprob: -4.964500904083252
    4. 'else' → logprob: -4.964500904083252
    5. ' else' → logprob: -5.339500904083252
    6. '    
' → logprob: -5.589500904083252
    7. ')' → logprob: -5.964500904083252
    8. 'used' → logprob: -6.089500904083252
    9. '        
' → logprob: -6.589500904083252
    10. '<|end|>' → logprob: -6.714500904083252

Token 339: ' matrix' (ID: 12248)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.36048218607902527
    2. '       ' → logprob: -1.3604822158813477
    3. 'used' → logprob: -3.1104822158813477
    4. '   ' → logprob: -6.735482215881348
    5. '
' → logprob: -8.485482215881348
    6. '        
' → logprob: -9.485482215881348
    7. '.used' → logprob: -11.110482215881348
    8. '    
' → logprob: -11.735482215881348
    9. ')' → logprob: -11.735482215881348
    10. '           ' → logprob: -11.985482215881348

Token 340: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -2.975612187583465e-05
    2. '[row' → logprob: -10.500029563903809
    3. '_' → logprob: -14.250029563903809
    4. 'elements' → logprob: -14.875029563903809
    5. '_positions' → logprob: -15.125029563903809
    6. '_ELEMENTS' → logprob: -15.250029563903809
    7. 'Elements' → logprob: -15.625029563903809
    8. '[' → logprob: -16.250030517578125
    9. ' _' → logprob: -17.000030517578125
    10. '_rows' → logprob: -17.125030517578125

Token 341: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.125015258789062
    3. ' [' → logprob: -15.750015258789062
    4. '][' → logprob: -16.875015258789062
    5. ')[' → logprob: -17.000015258789062
    6. '[col' → logprob: -17.125015258789062
    7. '[
' → logprob: -19.125015258789062
    8. '\[' → logprob: -19.250015258789062
    9. '```' → logprob: -19.750015258789062
    10. '[line' → logprob: -19.750015258789062

Token 342: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.8921695047756657e-05
    2. 'pos' → logprob: -11.125028610229492
    3. '_positions' → logprob: -12.125028610229492
    4. '_elements' → logprob: -12.375028610229492
    5. 'Pos' → logprob: -13.500028610229492
    6. '[pos' → logprob: -13.750028610229492
    7. '][' → logprob: -14.625028610229492
    8. '[row' → logprob: -14.875028610229492
    9. '_size' → logprob: -15.500028610229492
    10. '_position' → logprob: -15.750028610229492

Token 343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018355252221226692
    2. '[col' → logprob: -4.018355369567871
    3. ' ][' → logprob: -9.143355369567871
    4. ']' → logprob: -9.393355369567871
    5. '[' → logprob: -11.893355369567871
    6. '[row' → logprob: -13.268355369567871
    7. ' col' → logprob: -13.518355369567871
    8. ')[' → logprob: -13.768355369567871
    9. ' [' → logprob: -13.893355369567871
    10. '"][' → logprob: -14.393355369567871

Token 344: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -7.493430894101039e-05
    2. ' col' → logprob: -9.500075340270996
    3. '	col' → logprob: -20.25007438659668
    4. 'coll' → logprob: -21.50007438659668
    5. 'colm' → logprob: -21.50007438659668
    6. '[col' → logprob: -21.62507438659668
    7. '_col' → logprob: -22.00007438659668
    8. '   ' → logprob: -22.25007438659668
    9. '(col' → logprob: -22.75007438659668
    10. 'coln' → logprob: -23.50007438659668

Token 345: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.010189731605350971
    2. 'pos' → logprob: -4.635189533233643
    3. 'os' → logprob: -7.885189533233643
    4. 'Pos' → logprob: -10.3851900100708
    5. ']' → logprob: -11.7601900100708
    6. 'osition' → logprob: -12.3851900100708
    7. '	pos' → logprob: -12.7601900100708
    8. '   ' → logprob: -13.3851900100708
    9. 's' → logprob: -13.3851900100708
    10. '```' → logprob: -13.8851900100708

Token 346: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270138919353485
    2. ' =' → logprob: -2.127013921737671
    3. ']' → logprob: -9.87701416015625
    4. ']=' → logprob: -10.62701416015625
    5. ')=' → logprob: -12.25201416015625
    6. ')' → logprob: -12.25201416015625
    7. ' ]' → logprob: -16.50201416015625
    8. '=

' → logprob: -16.62701416015625
    9. ' ' → logprob: -16.75201416015625
    10. ',' → logprob: -16.87701416015625

Token 347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '=

' → logprob: -17.754077911376953
    4. '=
' → logprob: -18.879077911376953
    5. '=int' → logprob: -19.254077911376953
    6. '＝' → logprob: -19.879077911376953
    7. '.=' → logprob: -20.004077911376953
    8. '=}' → logprob: -20.129077911376953
    9. ' ' → logprob: -21.004077911376953
    10. ')=' → logprob: -21.254077911376953

Token 348: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.004078878089785576
    2. ' calc' → logprob: -5.5040788650512695
    3. 'cal' → logprob: -15.12907886505127
    4. '(calc' → logprob: -15.75407886505127
    5. '_calc' → logprob: -19.004079818725586
    6. '.calc' → logprob: -19.004079818725586
    7. '   ' → logprob: -19.379079818725586
    8. 'calculator' → logprob: -19.379079818725586
    9. 'calculate' → logprob: -19.754079818725586
    10. 'calcul' → logprob: -20.129079818725586

Token 349: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.500000953674316
    3. '_val' → logprob: -16.75
    4. '_values' → logprob: -17.625
    5. '_VALUE' → logprob: -17.875
    6. ' _' → logprob: -18.25
    7. '_Value' → logprob: -19.0
    8. 'alue' → logprob: -19.5
    9. '_v' → logprob: -20.125
    10. 'value' → logprob: -21.0

Token 350: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45577695965766907
    2. '<|end|>' → logprob: -1.0807769298553467
    3. '       ' → logprob: -4.705777168273926
    4. ' used' → logprob: -4.830777168273926
    5. '
' → logprob: -5.705777168273926
    6. 'used' → logprob: -5.830777168273926
    7. '    
' → logprob: -6.830777168273926
    8. 'else' → logprob: -7.455777168273926
    9. 'elif' → logprob: -8.205777168273926
    10. '<|end|>' → logprob: -8.330777168273926

Token 352: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.6695567965507507
    2. '       ' → logprob: -1.2945568561553955
    3. ' used' → logprob: -1.5445568561553955
    4. '   ' → logprob: -7.419556617736816
    5. '
' → logprob: -11.169556617736816
    6. '.used' → logprob: -11.794556617736816
    7. '           ' → logprob: -11.919556617736816
    8. '_used' → logprob: -12.919556617736816
    9. ' ' → logprob: -13.044556617736816
    10. 'Used' → logprob: -13.419556617736816

Token 353: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0007590038585476577
    2. '_' → logprob: -7.250759124755859
    3. ' _' → logprob: -10.12575912475586
    4. ')_' → logprob: -13.00075912475586
    5. '_number' → logprob: -14.12575912475586
    6. '_values' → logprob: -14.25075912475586
    7. '_tokens' → logprob: -14.37575912475586
    8. '```' → logprob: -14.50075912475586
    9. '_n' → logprob: -14.62575912475586
    10. '_names' → logprob: -14.87575912475586

Token 354: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0024774393532425165
    2. '.' → logprob: -6.002477645874023
    3. ' .' → logprob: -14.002477645874023
    4. '.update' → logprob: -15.002477645874023
    5. '.setdefault' → logprob: -15.377477645874023
    6. '.append' → logprob: -15.502477645874023
    7. '.Add' → logprob: -16.252477645874023
    8. '.insert' → logprob: -16.502477645874023
    9. '.remove' → logprob: -17.377477645874023
    10. '‌.' → logprob: -18.752477645874023

Token 355: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.0015031944494694471
    2. '(' → logprob: -6.501502990722656
    3. '(cal' → logprob: -14.001502990722656
    4. '(
' → logprob: -17.001502990722656
    5. 'calc' → logprob: -18.001502990722656
    6. ' calc' → logprob: -19.126502990722656
    7. ' (' → logprob: -19.876502990722656
    8. '(curr' → logprob: -20.876502990722656
    9. '(

' → logprob: -20.876502990722656
    10. '.calc' → logprob: -21.001502990722656

Token 356: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.4021237802808173e-05
    2. '_val' → logprob: -11.625014305114746
    3. '_' → logprob: -13.375014305114746
    4. 'alue' → logprob: -13.375014305114746
    5. '_values' → logprob: -13.625014305114746
    6. 'value' → logprob: -14.500014305114746
    7. '_VALUE' → logprob: -16.87501335144043
    8. '_calc' → logprob: -17.00001335144043
    9. 'alc' → logprob: -17.25001335144043
    10. 'al' → logprob: -17.50001335144043

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.228561349213123e-05
    2. ')
' → logprob: -10.500052452087402
    3. '<|end|>' → logprob: -11.000052452087402
    4. '   ' → logprob: -12.250052452087402
    5. ' )' → logprob: -14.125052452087402
    6. '}' → logprob: -14.250052452087402
    7. '       ' → logprob: -15.000052452087402
    8. ')return' → logprob: -15.000052452087402
    9. '),' → logprob: -15.375052452087402
    10. ')}' → logprob: -15.875052452087402

Token 358: 'for' (ID: 1938)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.010071600787341595
    2. ' else' → logprob: -4.885071754455566
    3. 'elif' → logprob: -6.135071754455566
    4. '   ' → logprob: -8.510071754455566
    5. 'e' → logprob: -10.135071754455566
    6. 'for' → logprob: -10.760071754455566
    7. ' elif' → logprob: -12.135071754455566
    8. '```' → logprob: -12.260071754455566
    9. '    
' → logprob: -12.510071754455566
    10. '<|end|>' → logprob: -12.760071754455566

Token 359: ' tup' (ID: 84170)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.06521297991275787
    2. 'row' → logprob: -2.8152129650115967
    3. ' col' → logprob: -6.940213203430176
    4. ' tup' → logprob: -7.065213203430176
    5. ' idx' → logprob: -7.565213203430176
    6. 't' → logprob: -8.565213203430176
    7. 'col' → logprob: -9.190213203430176
    8. ' ' → logprob: -9.315213203430176
    9. ' val' → logprob: -9.565213203430176
    10. 'idx' → logprob: -9.815213203430176

Token 360: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001637300301808864
    2. '_' → logprob: -9.500164031982422
    3. ' in' → logprob: -9.875164031982422
    4. 'pos' → logprob: -10.625164031982422
    5. '_in' → logprob: -11.750164031982422
    6. 'in' → logprob: -12.750164031982422
    7. '_p' → logprob: -14.875164031982422
    8. '_idx' → logprob: -15.000164031982422
    9. '_row' → logprob: -15.250164031982422
    10. '_position' → logprob: -15.625164031982422

Token 361: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006737392861396074
    2. 'in' → logprob: -5.006737232208252
    3. '   ' → logprob: -11.75673770904541
    4. ' ' → logprob: -12.00673770904541
    5. '  ' → logprob: -12.38173770904541
    6. '	in' → logprob: -14.13173770904541
    7. 'import' → logprob: -14.38173770904541
    8. 't' → logprob: -14.75673770904541
    9. '    ' → logprob: -15.13173770904541
    10. 's' → logprob: -15.25673770904541

Token 362: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.6348767876625061
    2. ' matrix' → logprob: -0.7598767876625061
    3. '[(' → logprob: -6.634876728057861
    4. '(matrix' → logprob: -7.634876728057861
    5. ' range' → logprob: -8.75987720489502
    6. ' [(' → logprob: -8.75987720489502
    7. 'range' → logprob: -9.25987720489502
    8. '(' → logprob: -11.25987720489502
    9. '((' → logprob: -11.63487720489502
    10. ' ' → logprob: -11.63487720489502

Token 363: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.06371105462312698
    2. ':' → logprob: -3.938711166381836
    3. '   ' → logprob: -4.938711166381836
    4. '[' → logprob: -4.938711166381836
    5. 'Indices' → logprob: -5.188711166381836
    6. 'indices' → logprob: -5.313711166381836
    7. ':
' → logprob: -5.438711166381836
    8. 'in' → logprob: -5.938711166381836
    9. 's' → logprob: -6.188711166381836
    10. ' in' → logprob: -6.313711166381836

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028299614787101746
    2. ':
' → logprob: -6.5028300285339355
    3. '[' → logprob: -7.3778300285339355
    4. '   ' → logprob: -7.7528300285339355
    5. '=' → logprob: -9.627829551696777
    6. '<|end|>' → logprob: -9.627829551696777
    7. ',' → logprob: -9.752829551696777
    8. ' =' → logprob: -11.002829551696777
    9. '):' → logprob: -11.877829551696777
    10. '[row' → logprob: -12.252829551696777

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02542172744870186
    2. ' row' → logprob: -3.775421619415283
    3. ':' → logprob: -6.650421619415283
    4. 'row' → logprob: -8.025422096252441
    5. '[row' → logprob: -8.650422096252441
    6. '<|end|>' → logprob: -8.900422096252441
    7. '	row' → logprob: -9.400422096252441
    8. ':
' → logprob: -10.150422096252441
    9. '(row' → logprob: -10.400422096252441
    10. ' ' → logprob: -10.650422096252441

Token 366: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.47443386912345886
    2. 'row' (adapté à ' row') → logprob: -0.9744338989257812
    3. '   ' → logprob: -7.974433898925781
    4. '(row' → logprob: -11.724433898925781
    5. '	row' → logprob: -13.099433898925781
    6. '[row' → logprob: -14.224433898925781
    7. '_row' → logprob: -15.099433898925781
    8. '    
' → logprob: -15.224433898925781
    9. ' ' → logprob: -15.349433898925781
    10. '.row' → logprob: -15.599433898925781

Token 367: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.20603168499656e-05
    2. '_,' → logprob: -10.500061988830566
    3. ',' → logprob: -10.875061988830566
    4. 'pos' → logprob: -11.500061988830566
    5. '_' → logprob: -12.500061988830566
    6. 'Pos' → logprob: -15.125061988830566
    7. ',_' → logprob: -15.250061988830566
    8. ',pos' → logprob: -15.375061988830566
    9. '_idx' → logprob: -15.625061988830566
    10. '_t' → logprob: -15.750061988830566

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ' ,' → logprob: -14.625000953674316
    3. ',
' → logprob: -15.375000953674316
    4. ',col' → logprob: -16.75
    5. ',column' → logprob: -18.0
    6. '=' → logprob: -19.375
    7. ',

' → logprob: -19.75
    8. ',\
' → logprob: -20.125
    9. '‌,' → logprob: -20.375
    10. '<|end|>' → logprob: -20.375

Token 369: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.5759396553039551
    2. 'col' → logprob: -0.8259396553039551
    3. '	col' → logprob: -16.200939178466797
    4. '   ' → logprob: -16.450939178466797
    5. ' ' → logprob: -16.700939178466797
    6. ',col' → logprob: -17.825939178466797
    7. '.col' → logprob: -17.950939178466797
    8. '_col' → logprob: -18.200939178466797
    9. '[col' → logprob: -19.200939178466797
    10. 'colm' → logprob: -19.325939178466797

Token 370: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.002534759696573019
    2. 'pos' → logprob: -6.002534866333008
    3. 'Pos' → logprob: -10.127534866333008
    4. 'os' → logprob: -11.252534866333008
    5. '	pos' → logprob: -13.002534866333008
    6. ' Pos' → logprob: -13.752534866333008
    7. '_idx' → logprob: -14.127534866333008
    8. '-pos' → logprob: -14.502534866333008
    9. '[pos' → logprob: -15.002534866333008
    10. 't' → logprob: -15.502534866333008

Token 371: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004698426462709904
    2. '   ' → logprob: -5.879698276519775
    3. '=' → logprob: -6.879698276519775
    4. ' =' → logprob: -7.504698276519775
    5. ' if' → logprob: -9.004698753356934
    6. ' ,' → logprob: -9.504698753356934
    7. 'if' → logprob: -10.004698753356934
    8. ':' → logprob: -10.129698753356934
    9. ')' → logprob: -11.629698753356934
    10. ' ' → logprob: -12.004698753356934

Token 372: ' tup' (ID: 84170)
  Prédit: ' tup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tup' → logprob: -0.16024331748485565
    2. 't' → logprob: -1.910243272781372
    3. '	t' → logprob: -11.035243034362793
    4. '(t' → logprob: -13.910243034362793
    5. ' ' → logprob: -14.285243034362793
    6. '_t' → logprob: -14.785243034362793
    7. '   ' → logprob: -15.160243034362793
    8. 's' → logprob: -15.535243034362793
    9. ' t' → logprob: -16.03524398803711
    10. ' tux' → logprob: -16.28524398803711

Token 373: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.004763568751513958
    2. 'pos' → logprob: -5.379763603210449
    3. 'os' → logprob: -8.87976360321045
    4. 'Pos' → logprob: -13.00476360321045
    5. 's' → logprob: -13.62976360321045
    6. 'ost' → logprob: -15.75476360321045
    7. 't' → logprob: -15.87976360321045
    8. '	pos' → logprob: -16.879762649536133
    9. 'p' → logprob: -17.004762649536133
    10. 'o' → logprob: -17.004762649536133

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004745298996567726
    2. ':' → logprob: -5.3797454833984375
    3. '<|end|>' → logprob: -10.129745483398438
    4. ' if' → logprob: -11.129745483398438
    5. ':
' → logprob: -11.379745483398438
    6. 'if' → logprob: -11.504745483398438
    7. '       ' → logprob: -11.504745483398438
    8. '[' → logprob: -11.754745483398438
    9. '    
' → logprob: -11.879745483398438
    10. ',' → logprob: -12.004745483398438

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000689082604367286
    2. ' if' → logprob: -7.7506890296936035
    3. '       ' → logprob: -9.000689506530762
    4. ':' → logprob: -9.500689506530762
    5. 'if' → logprob: -10.625689506530762
    6. ' ' → logprob: -11.000689506530762
    7. '    
' → logprob: -12.125689506530762
    8. '    ' → logprob: -12.500689506530762
    9. ',' → logprob: -13.000689506530762
    10. ':
' → logprob: -13.625689506530762

Token 376: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01843799464404583
    2. ' if' → logprob: -4.39343786239624
    3. 'if' (adapté à ' if') → logprob: -5.26843786239624
    4. 'else' → logprob: -7.76843786239624
    5. ' else' → logprob: -8.018438339233398
    6. '       ' → logprob: -12.393438339233398
    7. 'elif' → logprob: -14.268438339233398
    8. ' ' → logprob: -14.393438339233398
    9. '    
' → logprob: -14.643438339233398
    10. '    ' → logprob: -14.768438339233398

Token 377: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08037670701742172
    2. '(row' → logprob: -2.580376625061035
    3. '   ' → logprob: -7.205376625061035
    4. '(matrix' → logprob: -8.330376625061035
    5. '(col' → logprob: -8.330376625061035
    6. ' ' → logprob: -9.080376625061035
    7. '  ' → logprob: -9.205376625061035
    8. '(' → logprob: -10.705376625061035
    9. ' not' → logprob: -11.830376625061035
    10. '(column' → logprob: -11.955376625061035

Token 378: 'row' (ID: 843)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.046428531408309937
    2. 'row' → logprob: -3.5464284420013428
    3. ' row' → logprob: -4.796428680419922
    4. ' (' → logprob: -4.796428680419922
    5. '(' → logprob: -11.796428680419922
    6. ' ' → logprob: -12.046428680419922
    7. '[row' → logprob: -12.171428680419922
    8. '   ' → logprob: -13.671428680419922
    9. '=row' → logprob: -14.796428680419922
    10. '	row' → logprob: -15.171428680419922

Token 379: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3306015716807451e-05
    2. 'pos' → logprob: -11.25001335144043
    3. 'Pos' → logprob: -15.62501335144043
    4. '   ' → logprob: -17.50001335144043
    5. '+' → logprob: -18.00001335144043
    6. ' ' → logprob: -18.62501335144043
    7. '%' → logprob: -19.00001335144043
    8. '	pos' → logprob: -19.12501335144043
    9. ' pos' → logprob: -19.25001335144043
    10. ' Pos' → logprob: -19.25001335144043

Token 380: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2254464030265808
    2. ' +' → logprob: -1.6004464626312256
    3. ' ' → logprob: -10.350446701049805
    4. '[' → logprob: -14.850446701049805
    5. '%' → logprob: -15.100446701049805
    6. 'import' → logprob: -15.225446701049805
    7. '   ' → logprob: -15.725446701049805
    8. ')' → logprob: -15.725446701049805
    9. ' ' → logprob: -15.850446701049805
    10. '  ' → logprob: -16.225446701049805

Token 381: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.002476724097505212
    2. ' col' → logprob: -6.002476692199707
    3. '   ' → logprob: -13.752476692199707
    4. '	col' → logprob: -17.752477645874023
    5. ' ' → logprob: -19.252477645874023
    6. '  ' → logprob: -19.752477645874023
    7. '1' → logprob: -19.877477645874023
    8. 'coll' → logprob: -20.377477645874023
    9. '(col' → logprob: -20.502477645874023
    10. '[col' → logprob: -20.627477645874023

Token 382: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.226628895296017e-06
    2. 'pos' → logprob: -12.000007629394531
    3. '_col' → logprob: -14.500007629394531
    4. 'Pos' → logprob: -14.750007629394531
    5. '%' → logprob: -17.12500762939453
    6. '_' → logprob: -17.37500762939453
    7. 'os' → logprob: -18.00000762939453
    8. '_Pos' → logprob: -19.50000762939453
    9. 'col' → logprob: -19.87500762939453
    10. '__' → logprob: -19.87500762939453

Token 383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8206473871250637e-05
    2. '+' → logprob: -11.375028610229492
    3. ')%' → logprob: -11.750028610229492
    4. ' )' → logprob: -12.125028610229492
    5. '%' → logprob: -13.625028610229492
    6. ' +' → logprob: -14.500028610229492
    7. '   ' → logprob: -14.750028610229492
    8. ')
' → logprob: -14.875028610229492
    9. '[' → logprob: -15.750028610229492
    10. '```' → logprob: -16.000028610229492

Token 384: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1653250753879547
    2. '%' → logprob: -1.9153250455856323
    3. ')' → logprob: -5.290325164794922
    4. ' ' → logprob: -10.415325164794922
    5. ')%' → logprob: -11.790325164794922
    6. ' )' → logprob: -13.165325164794922
    7. '()' → logprob: -13.290325164794922
    8. '```' → logprob: -13.415325164794922
    9. ']' → logprob: -14.165325164794922
    10. ' %
' → logprob: -14.290325164794922

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4202112555503845
    2. '2' → logprob: -1.2952113151550293
    3. ' ' → logprob: -2.6702113151550293
    4. '!=' → logprob: -11.795210838317871
    5. '   ' → logprob: -13.295210838317871
    6. ' !=' → logprob: -13.420210838317871
    7. '```' → logprob: -13.545210838317871
    8. '0' → logprob: -14.420210838317871
    9. '==' → logprob: -15.295210838317871
    10. '           ' → logprob: -15.670210838317871

Token 386: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3134300708770752
    2. '2' → logprob: -1.3134300708770752
    3. ' ' → logprob: -8.813429832458496
    4. '!=' → logprob: -10.938429832458496
    5. ' !=' → logprob: -14.063429832458496
    6. '```' → logprob: -14.938429832458496
    7. '!' → logprob: -15.813429832458496
    8. '   ' → logprob: -15.813429832458496
    9. '0' → logprob: -16.313430786132812
    10. '==' → logprob: -16.813430786132812

Token 387: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.595511257648468
    2. '!=' → logprob: -0.845511257648468
    3. '==' → logprob: -4.345511436462402
    4. ' ==' → logprob: -5.095511436462402
    5. '1' → logprob: -8.345511436462402
    6. '```' → logprob: -10.470511436462402
    7. ' ' → logprob: -11.845511436462402
    8. ':' → logprob: -12.595511436462402
    9. '()!=' → logprob: -12.720511436462402
    10. 'else' → logprob: -12.720511436462402

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002195337088778615
    2. ' ' → logprob: -6.127195358276367
    3. '!=' → logprob: -12.252195358276367
    4. '0' → logprob: -12.502195358276367
    5. ' !=' → logprob: -14.377195358276367
    6. '!' → logprob: -14.752195358276367
    7. '   ' → logprob: -15.002195358276367
    8. '```' → logprob: -15.877195358276367
    9. '==' → logprob: -16.502195358276367
    10. 'else' → logprob: -16.877195358276367

Token 389: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.125016212463379
    3. '!=' → logprob: -14.000016212463379
    4. '0' → logprob: -15.000016212463379
    5. '!' → logprob: -17.000017166137695
    6. ' !=' → logprob: -17.250017166137695
    7. '```' → logprob: -17.375017166137695
    8. 'not' → logprob: -17.625017166137695
    9. '   ' → logprob: -17.625017166137695
    10. 'else' → logprob: -17.875017166137695

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10589471459388733
    2. '==' → logprob: -2.9808948040008545
    3. ' ==' → logprob: -3.6058948040008545
    4. '   ' → logprob: -4.355894565582275
    5. '       ' → logprob: -4.980894565582275
    6. ' continue' → logprob: -6.730894565582275
    7. ':
' → logprob: -6.980894565582275
    8. '	continue' → logprob: -8.605895042419434
    9. 'continue' → logprob: -9.105895042419434
    10. ' continues' → logprob: -9.230895042419434

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050866990350186825
    2. ' continue' → logprob: -5.505086898803711
    3. 'continue' → logprob: -7.880086898803711
    4. ':' → logprob: -8.130086898803711
    5. '   ' → logprob: -8.880086898803711
    6. '        
' → logprob: -10.505086898803711
    7. '=' → logprob: -10.755086898803711
    8. ',' → logprob: -10.880086898803711
    9. '	continue' → logprob: -11.005086898803711
    10. ':
' → logprob: -11.380086898803711

Token 392: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3677140474319458
    2. ' continue' → logprob: -1.3677140474319458
    3. '   ' → logprob: -2.9927139282226562
    4. 'calc' → logprob: -7.242713928222656
    5. 'matrix' → logprob: -8.367713928222656
    6. 'continu' → logprob: -8.367713928222656
    7. 'pass' → logprob: -8.492713928222656
    8. 'cont' → logprob: -8.742713928222656
    9. '       ' → logprob: -8.742713928222656
    10. 'row' → logprob: -8.867713928222656

Token 393: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07880210131406784
    2. 'sum' → logprob: -3.4538021087646484
    3. 'calc' → logprob: -4.203802108764648
    4. ' sum' → logprob: -4.953802108764648
    5. ' calc' → logprob: -5.328802108764648
    6. 'else' → logprob: -5.578802108764648
    7. ' else' → logprob: -5.953802108764648
    8. ' val' → logprob: -6.078802108764648
    9. 'val' → logprob: -6.703802108764648
    10. 'diff' → logprob: -7.078802108764648

Token 394: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.47480157017707825
    2. 'calc' → logprob: -1.7248015403747559
    3. 'prime' → logprob: -2.849801540374756
    4. 'row' → logprob: -3.724801540374756
    5. 'for' → logprob: -3.974801540374756
    6. 'value' → logprob: -4.599801540374756
    7. 'candidate' → logprob: -4.599801540374756
    8. 'matrix' → logprob: -4.599801540374756
    9. 'num' → logprob: -4.724801540374756
    10. 'possible' → logprob: -4.724801540374756

Token 395: ' adjacent' (ID: 39069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08707822859287262
    2. 'calc' → logprob: -3.837078332901001
    3. 'prime' → logprob: -4.212078094482422
    4. 'diff' → logprob: -4.212078094482422
    5. 'row' → logprob: -4.587078094482422
    6. 'for' → logprob: -5.462078094482422
    7. 'if' → logprob: -5.837078094482422
    8. 'found' → logprob: -6.087078094482422
    9. 'min' → logprob: -6.587078094482422
    10. 'while' → logprob: -6.837078094482422

Token 396: '_l' (ID: 1478)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.3506900668144226
    2. '_sum' → logprob: -2.3506901264190674
    3. '_vals' → logprob: -2.6006901264190674
    4. '_positions' → logprob: -3.1006901264190674
    5. '_value' → logprob: -3.8506901264190674
    6. '_val' → logprob: -4.100689888000488
    7. '_up' → logprob: -5.225689888000488
    8. '_elements' → logprob: -5.225689888000488
    9. '_left' → logprob: -5.600689888000488
    10. '_cells' → logprob: -5.850689888000488

Token 397: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.978781521320343
    2. '_values' → logprob: -1.1037814617156982
    3. 'values' → logprob: -2.7287814617156982
    4. 'eft' → logprob: -2.8537814617156982
    5. 'vals' → logprob: -3.8537814617156982
    6. '_elements' → logprob: -3.8537814617156982
    7. '_indices' → logprob: -4.228781700134277
    8. 'cms' → logprob: -4.228781700134277
    9. '_value' → logprob: -4.478781700134277
    10. '_vals' → logprob: -4.478781700134277

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24050167202949524
    2. '=' → logprob: -1.8655016422271729
    3. '_val' → logprob: -2.990501642227173
    4. '_value' → logprob: -5.115501880645752
    5. '_' → logprob: -5.990501880645752
    6. 's' → logprob: -9.990501403808594
    7. '_=' → logprob: -10.240501403808594
    8. '   ' → logprob: -10.490501403808594
    9. '_values' → logprob: -10.490501403808594
    10. '(' → logprob: -11.615501403808594

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09288682788610458
    2. 'None' → logprob: -3.4678869247436523
    3. 'matrix' → logprob: -3.4678869247436523
    4. 'math' → logprob: -4.342886924743652
    5. 'compute' → logprob: -4.467886924743652
    6. '   ' → logprob: -7.717886924743652
    7. '0' → logprob: -8.092886924743652
    8. ' None' → logprob: -8.092886924743652
    9. ' ' → logprob: -8.717886924743652
    10. ' matrix' → logprob: -9.217886924743652

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08798494189977646
    2. 'compute' → logprob: -2.587985038757324
    3. 'None' → logprob: -5.087985038757324
    4. 'matrix' → logprob: -6.337985038757324
    5. 'math' → logprob: -7.087985038757324
    6. '0' → logprob: -9.337985038757324
    7. 'lambda' → logprob: -9.962985038757324
    8. 'max' → logprob: -10.087985038757324
    9. ' compute' → logprob: -11.462985038757324
    10. '2' → logprob: -11.587985038757324

Token 401: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03838019818067551
    2. '
' → logprob: -4.538380146026611
    3. '<|end|>' → logprob: -4.538380146026611
    4. ' for' → logprob: -5.163380146026611
    5. 'for' → logprob: -5.288380146026611
    6. '    
' → logprob: -5.413380146026611
    7. ',' → logprob: -8.03838062286377
    8. '<|end|>' → logprob: -8.66338062286377
    9. '       ' → logprob: -9.91338062286377
    10. '    ' → logprob: -10.03838062286377

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012793447822332382
    2. 'for' → logprob: -5.38779354095459
    3. ' for' → logprob: -5.38779354095459
    4. '    
' → logprob: -6.26279354095459
    5. '
' → logprob: -6.76279354095459
    6. '<|end|>' → logprob: -8.13779354095459
    7. '       ' → logprob: -10.13779354095459
    8. '    ' → logprob: -10.63779354095459
    9. ' ' → logprob: -10.63779354095459
    10. '	for' → logprob: -10.76279354095459

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02922987751662731
    2. 'if' → logprob: -3.7792298793792725
    3. 'adj' → logprob: -5.779229640960693
    4. 'row' → logprob: -6.529229640960693
    5. '   ' → logprob: -7.404229640960693
    6. 'neighbors' → logprob: -8.029230117797852
    7. ' for' → logprob: -8.279230117797852
    8. 'dire' → logprob: -9.529230117797852
    9. 'neighbor' → logprob: -10.154230117797852
    10. '#' → logprob: -10.279230117797852

Token 404: ' neighbor' (ID: 13034)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2802220582962036
    2. 'adj' → logprob: -1.2802220582962036
    3. 'delta' → logprob: -1.2802220582962036
    4. 'dx' → logprob: -3.030221939086914
    5. 'dr' → logprob: -3.155221939086914
    6. 'neighbor' → logprob: -3.280221939086914
    7. 'row' → logprob: -4.405221939086914
    8. ' delta' → logprob: -5.530221939086914
    9. 'r' → logprob: -5.905221939086914
    10. 'n' → logprob: -6.155221939086914

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6244741678237915
    2. '_row' → logprob: -0.8744741678237915
    3. '_offset' → logprob: -3.499474048614502
    4. 'in' → logprob: -4.374474048614502
    5. '_' → logprob: -6.749474048614502
    6. '_delta' → logprob: -6.749474048614502
    7. '_pos' → logprob: -7.624474048614502
    8. 'row' → logprob: -7.874474048614502
    9. '_in' → logprob: -8.49947452545166
    10. '_token' → logprob: -8.74947452545166

Token 406: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0004265044699423015
    2. '[
' → logprob: -8.000426292419434
    3. '((' → logprob: -10.000426292419434
    4. ' [(' → logprob: -10.500426292419434
    5. '[((' → logprob: -12.000426292419434
    6. '[row' → logprob: -12.125426292419434
    7. '[' → logprob: -12.250426292419434
    8. '[-' → logprob: -13.625426292419434
    9. '(' → logprob: -15.375426292419434
    10. '(row' → logprob: -16.12542724609375

Token 407: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.001396783976815641
    2. '(row' → logprob: -6.626396656036377
    3. ' row' → logprob: -9.751397132873535
    4. '   ' → logprob: -11.501397132873535
    5. '0' → logprob: -14.001397132873535
    6. '[row' → logprob: -14.501397132873535
    7. '	row' → logprob: -15.376397132873535
    8. '(' → logprob: -15.626397132873535
    9. ',row' → logprob: -15.876397132873535
    10. '-' → logprob: -16.00139617919922

Token 408: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.15310683415737e-05
    2. 'pos' → logprob: -10.875021934509277
    3. ',' → logprob: -14.625021934509277
    4. 'Pos' → logprob: -14.875021934509277
    5. '_' → logprob: -15.250021934509277
    6. '_,' → logprob: -15.250021934509277
    7. '_row' → logprob: -15.500021934509277
    8. ' pos' → logprob: -15.500021934509277
    9. '-' → logprob: -15.750021934509277
    10. '_idx' → logprob: -15.875021934509277

Token 409: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7295363545417786
    2. '-' → logprob: -0.8545363545417786
    3. ' -' → logprob: -2.729536294937134
    4. '   ' → logprob: -3.979536294937134
    5. '+' → logprob: -5.229536533355713
    6. ' ,' → logprob: -6.479536533355713
    7. ',col' → logprob: -7.104536533355713
    8. ' +' → logprob: -7.604536533355713
    9. ' ' → logprob: -8.729536056518555
    10. '  ' → logprob: -10.729536056518555

Token 410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.959636033978313e-05
    2. ' ' → logprob: -9.625089645385742
    3. '0' → logprob: -10.750089645385742
    4. '   ' → logprob: -13.250089645385742
    5. ',' → logprob: -16.500089645385742
    6. '    ' → logprob: -16.625089645385742
    7. '-' → logprob: -17.250089645385742
    8. '           ' → logprob: -17.562589645385742
    9. ')' → logprob: -17.687589645385742
    10. '  ' → logprob: -17.750089645385742

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. ' ' → logprob: -10.500035285949707
    3. '0' → logprob: -11.875035285949707
    4. '   ' → logprob: -14.500035285949707
    5. '-' → logprob: -17.37503433227539
    6. '    ' → logprob: -17.75003433227539
    7. ',' → logprob: -18.12503433227539
    8. '
' → logprob: -18.25003433227539
    9. '  ' → logprob: -18.31253433227539
    10. ')' → logprob: -18.81253433227539

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005742399953305721
    2. ',col' → logprob: -7.625574111938477
    3. ' ,' → logprob: -9.500574111938477
    4. ',row' → logprob: -11.750574111938477
    5. '   ' → logprob: -12.875574111938477
    6. ',column' → logprob: -14.125574111938477
    7. ',
' → logprob: -15.875574111938477
    8. ' ' → logprob: -17.500574111938477
    9. ' col' → logprob: -17.750574111938477
    10. '[col' → logprob: -17.875574111938477

Token 413: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.023247340694069862
    2. ' col' → logprob: -3.773247241973877
    3. '   ' → logprob: -13.648247718811035
    4. '    ' → logprob: -15.148247718811035
    5. '	col' → logprob: -15.273247718811035
    6. ' ' → logprob: -16.39824676513672
    7. 'column' → logprob: -17.14824676513672
    8. ',col' → logprob: -17.52324676513672
    9. '  ' → logprob: -17.89824676513672
    10. '[col' → logprob: -18.39824676513672

Token 414: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00010545044642640278
    2. '_idx' → logprob: -9.750105857849121
    3. 'pos' → logprob: -10.250105857849121
    4. 'Pos' → logprob: -11.625105857849121
    5. '1' → logprob: -13.875105857849121
    6. '   ' → logprob: -14.375105857849121
    7. '	pos' → logprob: -15.125105857849121
    8. ')' → logprob: -15.625105857849121
    9. '_' → logprob: -16.000104904174805
    10. '-' → logprob: -16.250104904174805

Token 415: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008277199231088161
    2. '),(' → logprob: -5.008277416229248
    3. ' ),' → logprob: -6.758277416229248
    4. '),
' → logprob: -8.13327693939209
    5. '   ' → logprob: -9.25827693939209
    6. ')' → logprob: -12.63327693939209
    7. '       ' → logprob: -13.75827693939209
    8. ' ),
' → logprob: -13.75827693939209
    9. ',' → logprob: -13.75827693939209
    10. '),

' → logprob: -13.88327693939209

Token 416: ' (' (ID: 350)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.04861007630825043
    2. ' (' → logprob: -3.048609972000122
    3. '   ' → logprob: -10.923609733581543
    4. '(' → logprob: -12.798609733581543
    5. ' ' → logprob: -14.298609733581543
    6. '  ' → logprob: -14.423609733581543
    7. '((' → logprob: -15.423609733581543
    8. '[row' → logprob: -15.673609733581543
    9. '    ' → logprob: -15.798609733581543
    10. '(column' → logprob: -16.79861068725586

Token 417: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.003193993354216218
    2. ' row' → logprob: -5.7531938552856445
    3. '   ' → logprob: -11.378193855285645
    4. '    ' → logprob: -13.253193855285645
    5. '	row' → logprob: -13.878193855285645
    6. ' ' → logprob: -14.128193855285645
    7. '(row' → logprob: -14.128193855285645
    8. '  ' → logprob: -15.253193855285645
    9. '$row' → logprob: -16.50319480895996
    10. '       ' → logprob: -16.50319480895996

Token 418: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001884015218820423
    2. 'pos' → logprob: -8.625188827514648
    3. 'Pos' → logprob: -11.750188827514648
    4. '_idx' → logprob: -14.500188827514648
    5. '+' → logprob: -15.750188827514648
    6. ' pos' → logprob: -16.75018882751465
    7. '	pos' → logprob: -16.87518882751465
    8. '_' → logprob: -16.87518882751465
    9. ',' → logprob: -17.00018882751465
    10. '```' → logprob: -17.50018882751465

Token 419: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1496303379535675
    2. '   ' → logprob: -2.649630308151245
    3. ' +' → logprob: -3.149630308151245
    4. '+' → logprob: -4.399630546569824
    5. ' ,' → logprob: -4.774630546569824
    6. ' -' → logprob: -5.774630546569824
    7. '-' → logprob: -7.399630546569824
    8. ' ' → logprob: -7.774630546569824
    9. '    ' → logprob: -8.649630546569824
    10. ',row' → logprob: -8.774630546569824

Token 420: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33503568172454834
    2. '0' → logprob: -1.8350356817245483
    3. ' ' → logprob: -2.085035800933838
    4. '   ' → logprob: -7.835035800933838
    5. ' col' → logprob: -8.71003532409668
    6. 'col' → logprob: -8.83503532409668
    7. ',' → logprob: -10.58503532409668
    8. '  ' → logprob: -10.83503532409668
    9. '```' → logprob: -11.96003532409668
    10. '    ' → logprob: -12.58503532409668

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033643851056694984
    2. 'col' → logprob: -5.753364562988281
    3. '0' → logprob: -9.253364562988281
    4. ' col' → logprob: -9.753364562988281
    5. ' ' → logprob: -10.378364562988281
    6. '   ' → logprob: -13.753364562988281
    7. '+' → logprob: -16.37836456298828
    8. '```' → logprob: -16.50336456298828
    9. '  ' → logprob: -16.62836456298828
    10. '[col' → logprob: -16.75336456298828

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010270876373397186
    2. ' ,' → logprob: -9.375102996826172
    3. ',col' → logprob: -11.000102996826172
    4. ' col' → logprob: -14.625102996826172
    5. ',row' → logprob: -14.625102996826172
    6. '   ' → logprob: -16.125102996826172
    7. ',
' → logprob: -16.625102996826172
    8. 'col' → logprob: -17.125102996826172
    9. ',column' → logprob: -17.250102996826172
    10. '[col' → logprob: -17.750102996826172

Token 423: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.6931540369987488
    2. 'col' → logprob: -0.6931540369987488
    3. '    ' → logprob: -13.068154335021973
    4. '   ' → logprob: -13.318154335021973
    5. '	col' → logprob: -13.818154335021973
    6. '(col' → logprob: -13.943154335021973
    7. ' ' → logprob: -14.693154335021973
    8. ',col' → logprob: -15.318154335021973
    9. 'row' → logprob: -16.568153381347656
    10. '_col' → logprob: -16.693153381347656

Token 424: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00014895245840307325
    2. 'pos' → logprob: -9.12514877319336
    3. '1' → logprob: -10.50014877319336
    4. '_idx' → logprob: -12.00014877319336
    5. 'Pos' → logprob: -12.50014877319336
    6. '_col' → logprob: -14.50014877319336
    7. '-' → logprob: -14.75014877319336
    8. '	pos' → logprob: -14.75014877319336
    9. '_' → logprob: -15.50014877319336
    10. '+' → logprob: -15.50014877319336

Token 425: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004704476799815893
    2. ',' → logprob: -5.879704475402832
    3. '),(' → logprob: -6.379704475402832
    4. ' ),' → logprob: -9.379704475402832
    5. '),
' → logprob: -10.004704475402832
    6. ')' → logprob: -10.754704475402832
    7. ')]' → logprob: -11.004704475402832
    8. '):' → logprob: -11.129704475402832
    9. '   ' → logprob: -12.254704475402832
    10. ')],' → logprob: -12.504704475402832

Token 426: ' (' (ID: 350)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.3149353861808777
    2. ' (' → logprob: -1.3149354457855225
    3. '   ' → logprob: -6.439935207366943
    4. '(' → logprob: -9.564935684204102
    5. ' ' → logprob: -13.314935684204102
    6. '  ' → logprob: -13.814935684204102
    7. '       ' → logprob: -14.189935684204102
    8. '    ' → logprob: -14.189935684204102
    9. '[row' → logprob: -14.939935684204102
    10. '           ' → logprob: -15.189935684204102

Token 427: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.008637497201561928
    2. ' row' → logprob: -4.758637428283691
    3. '(row' → logprob: -10.758637428283691
    4. '   ' → logprob: -13.633637428283691
    5. ' ' → logprob: -15.383637428283691
    6. '	row' → logprob: -16.258638381958008
    7. '[row' → logprob: -17.258638381958008
    8. '  ' → logprob: -17.883638381958008
    9. '
' → logprob: -17.883638381958008
    10. ',row' → logprob: -17.883638381958008

Token 428: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0002627662615850568
    2. 'pos' → logprob: -8.250263214111328
    3. 'Pos' → logprob: -13.750263214111328
    4. ' pos' → logprob: -15.250263214111328
    5. '-pos' → logprob: -16.625263214111328
    6. '	pos' → logprob: -17.125263214111328
    7. '-' → logprob: -17.375263214111328
    8. ',' → logprob: -17.500263214111328
    9. '_position' → logprob: -18.000263214111328
    10. '+' → logprob: -18.250263214111328

Token 429: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43534940481185913
    2. '-' → logprob: -1.685349464416504
    3. ',' → logprob: -1.810349464416504
    4. '   ' → logprob: -5.935349464416504
    5. ' ,' → logprob: -7.435349464416504
    6. ' ' → logprob: -7.560349464416504
    7. ')' → logprob: -9.310349464416504
    8. '),' → logprob: -10.060349464416504
    9. '       ' → logprob: -10.060349464416504
    10. '  ' → logprob: -10.935349464416504

Token 430: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.25193697214126587
    2. ' col' → logprob: -1.501936912536621
    3. '   ' → logprob: -12.751936912536621
    4. '    ' → logprob: -12.751936912536621
    5. ' ' → logprob: -14.126936912536621
    6. '	col' → logprob: -14.376936912536621
    7. '  ' → logprob: -15.001936912536621
    8. '(col' → logprob: -15.251936912536621
    9. '_col' → logprob: -16.001937866210938
    10. '     ' → logprob: -17.876937866210938

Token 431: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.240481914370321e-05
    2. 'pos' → logprob: -9.875052452087402
    3. 'Pos' → logprob: -14.750052452087402
    4. '+' → logprob: -15.000052452087402
    5. '_idx' → logprob: -15.750052452087402
    6. '	pos' → logprob: -17.250051498413086
    7. '   ' → logprob: -17.875051498413086
    8. '-pos' → logprob: -18.250051498413086
    9. '-' → logprob: -18.500051498413086
    10. '_col' → logprob: -19.375051498413086

Token 432: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17166315019130707
    2. '-' → logprob: -1.9216631650924683
    3. '+' → logprob: -5.296663284301758
    4. ' +' → logprob: -5.421663284301758
    5. '   ' → logprob: -6.421663284301758
    6. ' ' → logprob: -8.796663284301758
    7. '),' → logprob: -10.421663284301758
    8. ')' → logprob: -10.546663284301758
    9. '	' → logprob: -10.671663284301758
    10. '    ' → logprob: -10.921663284301758

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020115631923545152
    2. ' ' → logprob: -8.625201225280762
    3. ')' → logprob: -11.125201225280762
    4. ' )' → logprob: -12.625201225280762
    5. '```' → logprob: -13.750201225280762
    6. '   ' → logprob: -14.250201225280762
    7. '),' → logprob: -14.625201225280762
    8. ')>' → logprob: -15.312701225280762
    9. ' ),' → logprob: -15.375201225280762
    10. '<|end|>' → logprob: -15.562701225280762

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.500029563903809
    3. ')' → logprob: -14.187529563903809
    4. '```' → logprob: -14.375029563903809
    5. '   ' → logprob: -14.750029563903809
    6. '),' → logprob: -17.000030517578125
    7. '  ' → logprob: -17.125030517578125
    8. ' )' → logprob: -17.187530517578125
    9. '+' → logprob: -17.250030517578125
    10. '`' → logprob: -17.437530517578125

Token 435: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18472246825695038
    2. '):' → logprob: -1.9347224235534668
    3. ')' → logprob: -4.059722423553467
    4. ')]' → logprob: -5.309722423553467
    5. ',' → logprob: -6.934722423553467
    6. '),
' → logprob: -7.809722423553467
    7. '):
' → logprob: -8.559722900390625
    8. '):

' → logprob: -9.059722900390625
    9. ' ),' → logprob: -9.059722900390625
    10. '),(' → logprob: -9.809722900390625

Token 436: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7150189280509949
    2. '(row' → logprob: -0.7150189280509949
    3. ' row' → logprob: -4.7150187492370605
    4. ' col' → logprob: -5.0900187492370605
    5. 'col' → logprob: -5.7150187492370605
    6. '(col' → logprob: -6.0900187492370605
    7. 'row' → logprob: -7.3400187492370605
    8. '(' → logprob: -8.715019226074219
    9. ' ' → logprob: -9.590019226074219
    10. '   ' → logprob: -9.840019226074219

Token 437: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.062231846153736115
    2. ' row' → logprob: -2.8122317790985107
    3. 'col' → logprob: -8.81223201751709
    4. ' col' → logprob: -9.31223201751709
    5. '   ' → logprob: -11.18723201751709
    6. ' ' → logprob: -12.43723201751709
    7. '(row' → logprob: -12.43723201751709
    8. '    ' → logprob: -13.43723201751709
    9. '	row' → logprob: -14.18723201751709
    10. '  ' → logprob: -14.93723201751709

Token 438: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00526636466383934
    2. 'pos' → logprob: -5.255266189575195
    3. 'Pos' → logprob: -10.505266189575195
    4. '_idx' → logprob: -13.380266189575195
    5. '+' → logprob: -13.630266189575195
    6. '1' → logprob: -14.130266189575195
    7. 'col' → logprob: -14.880266189575195
    8. '```' → logprob: -15.255266189575195
    9. ' pos' → logprob: -15.380266189575195
    10. '0' → logprob: -15.755266189575195

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014849855797365308
    2. '+' → logprob: -7.3764848709106445
    3. ' ,' → logprob: -7.6264848709106445
    4. ' +' → logprob: -8.501484870910645
    5. ')' → logprob: -8.876484870910645
    6. ',col' → logprob: -12.251484870910645
    7. '),' → logprob: -12.626484870910645
    8. '   ' → logprob: -12.751484870910645
    9. ' ' → logprob: -12.751484870910645
    10. '+,' → logprob: -13.126484870910645

Token 440: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.126943439245224
    2. ' col' → logprob: -2.126943349838257
    3. '   ' → logprob: -12.376943588256836
    4. ' ' → logprob: -12.501943588256836
    5. '    ' → logprob: -13.126943588256836
    6. '(col' → logprob: -13.626943588256836
    7. '  ' → logprob: -13.876943588256836
    8. '	col' → logprob: -14.001943588256836
    9. '1' → logprob: -14.876943588256836
    10. '     ' → logprob: -15.001943588256836

Token 441: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00045379105722531676
    2. '_idx' → logprob: -7.875453948974609
    3. 'pos' → logprob: -9.62545394897461
    4. 'Pos' → logprob: -11.87545394897461
    5. '-' → logprob: -15.37545394897461
    6. '1' → logprob: -15.62545394897461
    7. '+' → logprob: -16.25045394897461
    8. '-pos' → logprob: -16.62545394897461
    9. '_' → logprob: -17.12545394897461
    10. ')' → logprob: -17.25045394897461

Token 442: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25049012899398804
    2. ' +' → logprob: -1.6254901885986328
    3. ')]' → logprob: -4.625490188598633
    4. ' -' → logprob: -5.000490188598633
    5. '-' → logprob: -5.250490188598633
    6. ')' → logprob: -6.625490188598633
    7. '):' → logprob: -7.250490188598633
    8. '   ' → logprob: -7.375490188598633
    9. '),' → logprob: -9.250490188598633
    10. ' ' → logprob: -9.875490188598633

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003096023283433169
    2. ' ' → logprob: -8.125309944152832
    3. '0' → logprob: -11.625309944152832
    4. '   ' → logprob: -13.125309944152832
    5. ')' → logprob: -13.375309944152832
    6. '  ' → logprob: -15.250309944152832
    7. '+' → logprob: -15.500309944152832
    8. '```' → logprob: -15.562809944152832
    9. '-' → logprob: -16.250308990478516
    10. '    ' → logprob: -17.062808990478516

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.625005722045898
    3. '0' → logprob: -13.250005722045898
    4. ')' → logprob: -14.875005722045898
    5. '```' → logprob: -15.500005722045898
    6. '+' → logprob: -15.750005722045898
    7. '   ' → logprob: -16.3125057220459
    8. '-' → logprob: -16.4375057220459
    9. '  ' → logprob: -18.3125057220459
    10. 'row' → logprob: -18.3750057220459

Token 445: ')]' (ID: 15710)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2219629287719727
    2. ']:' → logprob: -1.3469629287719727
    3. '):
' → logprob: -1.5969629287719727
    4. ']:
' → logprob: -1.7219629287719727
    5. ']' → logprob: -3.7219629287719727
    6. ')]' → logprob: -4.096962928771973
    7. '   ' → logprob: -4.721962928771973
    8. ')' → logprob: -4.721962928771973
    9. '       ' → logprob: -5.846962928771973
    10. ']):' → logprob: -6.596962928771973

Token 446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5165209770202637
    2. '       ' → logprob: -1.0165209770202637
    3. ':
' → logprob: -3.3915209770202637
    4. '<|end|>' → logprob: -5.766520977020264
    5. ',' → logprob: -6.266520977020264
    6. '   ' → logprob: -6.766520977020264
    7. '[' → logprob: -7.641520977020264
    8. '):' → logprob: -8.266521453857422
    9. '<|end|>' → logprob: -8.266521453857422
    10. '):
' → logprob: -9.141521453857422

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2697906196117401
    2. 'row' → logprob: -1.7697906494140625
    3. '   ' → logprob: -3.3947906494140625
    4. '        
' → logprob: -4.7697906494140625
    5. ' row' → logprob: -5.2697906494140625
    6. '	row' → logprob: -5.2697906494140625
    7. 'if' → logprob: -5.7697906494140625
    8. '    ' → logprob: -5.8947906494140625
    9. '(row' → logprob: -6.5197906494140625
    10. 'n' → logprob: -6.8947906494140625

Token 448: ' neigh' (ID: 9109)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9226698279380798
    2. '(row' → logprob: -1.5476698875427246
    3. '(' → logprob: -1.9226698875427246
    4. 'if' → logprob: -2.6726698875427246
    5. 'row' → logprob: -2.6726698875427246
    6. ' if' → logprob: -2.7976698875427246
    7. ' row' → logprob: -4.047669887542725
    8. 'r' → logprob: -4.547669887542725
    9. '(
' → logprob: -5.047669887542725
    10. '(n' → logprob: -5.922669887542725

Token 449: '_row' (ID: 19157)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.003293447894975543
    2. '[' → logprob: -6.128293514251709
    3. 'bor' → logprob: -8.00329303741455
    4. '_' → logprob: -8.12829303741455
    5. '_row' → logprob: -8.37829303741455
    6. 'row' → logprob: -9.62829303741455
    7. 'r' → logprob: -10.62829303741455
    8. 'er' → logprob: -10.75329303741455
    9. 'b' → logprob: -11.00329303741455
    10. '_or' → logprob: -11.25329303741455

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010902655776590109
    2. ' ,' → logprob: -9.62510871887207
    3. '=' → logprob: -11.00010871887207
    4. ',n' → logprob: -11.12510871887207
    5. '<|end|>' → logprob: -12.87510871887207
    6. ',
' → logprob: -13.37510871887207
    7. 'ne' → logprob: -13.75010871887207
    8. '       ' → logprob: -14.00010871887207
    9. 'if' → logprob: -14.00010871887207
    10. ' =' → logprob: -14.25010871887207

Token 451: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.018214795738458633
    2. ' neigh' → logprob: -4.018214702606201
    3. 'neighbor' → logprob: -9.89321517944336
    4. '(ne' → logprob: -12.64321517944336
    5. ' ne' → logprob: -12.89321517944336
    6. 'n' → logprob: -13.14321517944336
    7. 'neq' → logprob: -13.39321517944336
    8. ' neighbor' → logprob: -13.89321517944336
    9. 'neighbors' → logprob: -14.14321517944336
    10. 'nei' → logprob: -14.64321517944336

Token 452: '_col' (ID: 7255)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.004830599762499332
    2. 'bor' → logprob: -6.879830837249756
    3. '_row' → logprob: -7.004830837249756
    4. '_col' → logprob: -7.379830837249756
    5. ',' → logprob: -7.629830837249756
    6. 'ow' → logprob: -7.754830837249756
    7. '_pos' → logprob: -8.004830360412598
    8. 'ighbor' → logprob: -8.129830360412598
    9. 'col' → logprob: -8.504830360412598
    10. '_idx' → logprob: -8.629830360412598

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21852661669254303
    2. '=' → logprob: -1.7185266017913818
    3. ',' → logprob: -4.218526840209961
    4. '   ' → logprob: -6.843526840209961
    5. ')' → logprob: -7.093526840209961
    6. '<|end|>' → logprob: -9.093526840209961
    7. '       ' → logprob: -9.468526840209961
    8. ' ' → logprob: -10.468526840209961
    9. '    ' → logprob: -10.718526840209961
    10. '=None' → logprob: -11.218526840209961

Token 454: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0015036711702123284
    2. ' neighbor' → logprob: -6.5015034675598145
    3. '   ' → logprob: -13.876503944396973
    4. 'ne' → logprob: -15.376503944396973
    5. '    ' → logprob: -17.376502990722656
    6. '  ' → logprob: -17.626502990722656
    7. 'neighbors' → logprob: -17.751502990722656
    8. '
' → logprob: -17.751502990722656
    9. '       ' → logprob: -18.251502990722656
    10. ' ' → logprob: -18.626502990722656

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19440308213233948
    2. '<|end|>' → logprob: -2.1944031715393066
    3. '   ' → logprob: -3.4444031715393066
    4. '        
' → logprob: -4.319403171539307
    5. '<|end|>' → logprob: -5.569403171539307
    6. ' if' → logprob: -6.069403171539307
    7. ',' → logprob: -6.194403171539307
    8. '  
' → logprob: -6.194403171539307
    9. '
' → logprob: -6.194403171539307
    10. 'if' → logprob: -6.569403171539307

Token 456: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7515331506729126
    2. 'if' (adapté à ' if') → logprob: -0.7515331506729126
    3. ' if' → logprob: -2.876533031463623
    4. '   ' → logprob: -9.001533508300781
    5. '        
' → logprob: -9.251533508300781
    6. '	if' → logprob: -9.251533508300781
    7. '        ' → logprob: -10.876533508300781
    8. '
' → logprob: -11.501533508300781
    9. ' 
' → logprob: -11.501533508300781
    10. '<|end|>' → logprob: -11.751533508300781

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043034475296735764
    2. ' ' → logprob: -3.168034553527832
    3. '   ' → logprob: -10.543034553527832
    4. 'ne' → logprob: -12.293034553527832
    5. '  ' → logprob: -14.043034553527832
    6. '(' → logprob: -14.793034553527832
    7. ' (' → logprob: -14.918034553527832
    8. '    ' → logprob: -15.043034553527832
    9. '       ' → logprob: -15.043034553527832
    10. '(ne' → logprob: -15.168034553527832

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.250015258789062
    3. 'ne' → logprob: -13.875015258789062
    4. '(' → logprob: -14.375015258789062
    5. '(ne' → logprob: -16.000015258789062
    6. '   ' → logprob: -16.500015258789062
    7. 'not' → logprob: -16.625015258789062
    8. '-' → logprob: -17.000015258789062
    9. '۰' → logprob: -17.125015258789062
    10. '
' → logprob: -18.625015258789062

Token 460: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3868713080883026
    2. ' <=' → logprob: -1.136871337890625
    3. '<' → logprob: -16.386871337890625
    4. ')<=' → logprob: -16.636871337890625
    5. ' ' → logprob: -16.886871337890625
    6. ']<=' → logprob: -18.011871337890625
    7. ',' → logprob: -18.136871337890625
    8. '...' → logprob: -18.136871337890625
    9. ')' → logprob: -18.261871337890625
    10. '>' → logprob: -18.636871337890625

Token 461: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.5928495486150496e-05
    2. ' neigh' → logprob: -11.125016212463379
    3. 'neighbor' → logprob: -15.375016212463379
    4. '(ne' → logprob: -15.625016212463379
    5. 'n' → logprob: -16.000015258789062
    6. 'neh' → logprob: -16.250015258789062
    7. 'neq' → logprob: -16.500015258789062
    8. ' ne' → logprob: -16.750015258789062
    9. '   ' → logprob: -17.000015258789062
    10. 'neighbors' → logprob: -17.250015258789062

Token 462: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0001801801408873871
    2. 'row' → logprob: -8.6251802444458
    3. '_col' → logprob: -14.8751802444458
    4. 'Row' → logprob: -15.7501802444458
    5. '_' → logprob: -17.375179290771484
    6. '_Row' → logprob: -18.250179290771484
    7. '_ROW' → logprob: -18.500179290771484
    8. '	row' → logprob: -18.500179290771484
    9. 'rown' → logprob: -18.875179290771484
    10. ' row' → logprob: -18.875179290771484

Token 463: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02078675664961338
    2. ' <' → logprob: -3.895786762237549
    3. 'and' → logprob: -8.77078628540039
    4. ' and' → logprob: -9.52078628540039
    5. '<size' → logprob: -11.89578628540039
    6. '<len' → logprob: -12.27078628540039
    7. '<n' → logprob: -13.02078628540039
    8. '<m' → logprob: -14.39578628540039
    9. '[' → logprob: -15.02078628540039
    10. '<num' → logprob: -15.27078628540039

Token 464: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.00020354038861114532
    2. ' matrix' → logprob: -8.500203132629395
    3. '	matrix' → logprob: -18.62520408630371
    4. '   ' → logprob: -20.87520408630371
    5. '(matrix' → logprob: -22.12520408630371
    6. '.matrix' → logprob: -22.75020408630371
    7. ' ' → logprob: -23.62520408630371
    8. '_matrix' → logprob: -23.87520408630371
    9. 'm' → logprob: -24.50020408630371
    10. 'Matrix' → logprob: -24.75020408630371

Token 465: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.759734732331708e-05
    2. 'size' → logprob: -11.000017166137695
    3. ' size' → logprob: -14.625017166137695
    4. '_SIZE' → logprob: -15.750017166137695
    5. '   ' → logprob: -16.625017166137695
    6. 'Size' → logprob: -17.750017166137695
    7. '_' → logprob: -17.750017166137695
    8. '_sizes' → logprob: -18.750017166137695
    9. '	size' → logprob: -19.125017166137695
    10. '[' → logprob: -19.250017166137695

Token 466: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197149679064751
    2. 'and' → logprob: -2.811971426010132
    3. '       ' → logprob: -13.186971664428711
    4. ' ' → logprob: -14.436971664428711
    5. '	and' → logprob: -14.436971664428711
    6. '        ' → logprob: -14.686971664428711
    7. '           ' → logprob: -16.31197166442871
    8. '   ' → logprob: -16.68697166442871
    9. ' ' → logprob: -16.68697166442871
    10. ' <' → logprob: -17.31197166442871

Token 467: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044401636114344
    2. ' ' → logprob: -7.750443935394287
    3. '       ' → logprob: -12.000444412231445
    4. '           ' → logprob: -13.250444412231445
    5. '   ' → logprob: -13.250444412231445
    6. '               ' → logprob: -14.500444412231445
    7. '         ' → logprob: -14.750444412231445
    8. '        ' → logprob: -14.750444412231445
    9. '    ' → logprob: -15.125444412231445
    10. '          ' → logprob: -15.125444412231445

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019853790290653706
    2. 'ne' → logprob: -6.251985549926758
    3. ' ' → logprob: -9.876985549926758
    4. 'matrix' → logprob: -12.751985549926758
    5. ' neigh' → logprob: -13.626985549926758
    6. 'neighbor' → logprob: -14.751985549926758
    7. 'neighbors' → logprob: -15.251985549926758
    8. '   ' → logprob: -16.001985549926758
    9. '(ne' → logprob: -16.126985549926758
    10. ' ne' → logprob: -16.376985549926758

Token 469: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1405183970928192
    2. ' <' → logprob: -2.5155184268951416
    3. '<=' → logprob: -3.1405184268951416
    4. '<' → logprob: -5.0155181884765625
    5. '<size' → logprob: -9.015518188476562
    6. '_size' → logprob: -9.265518188476562
    7. ' ' → logprob: -9.640518188476562
    8. '        ' → logprob: -10.140518188476562
    9. 'size' → logprob: -10.640518188476562
    10. '       ' → logprob: -12.140518188476562

Token 470: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.2815926671028137
    2. 'matrix' → logprob: -1.406592607498169
    3. 'neighbor' → logprob: -8.03159236907959
    4. ' matrix' → logprob: -9.90659236907959
    5. ' neigh' → logprob: -10.15659236907959
    6. 'mat' → logprob: -11.90659236907959
    7. 'neighbors' → logprob: -11.90659236907959
    8. '(ne' → logprob: -12.15659236907959
    9. 'neur' → logprob: -13.65659236907959
    10. 'n' → logprob: -13.90659236907959

Token 471: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.03288709744811058
    2. 'col' → logprob: -3.5328869819641113
    3. '_size' → logprob: -5.782886981964111
    4. 'size' → logprob: -10.40788745880127
    5. '_row' → logprob: -11.53288745880127
    6. 'Col' → logprob: -11.90788745880127
    7. '	col' → logprob: -14.03288745880127
    8. '_COL' → logprob: -14.28288745880127
    9. '```' → logprob: -14.53288745880127
    10. '_cols' → logprob: -14.53288745880127

Token 472: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3890524208545685
    2. '<' → logprob: -1.139052391052246
    3. '<m' → logprob: -6.139052391052246
    4. '<size' → logprob: -11.389052391052246
    5. '<len' → logprob: -11.889052391052246
    6. '<n' → logprob: -13.514052391052246
    7. ' and' → logprob: -14.764052391052246
    8. 'matrix' → logprob: -14.889052391052246
    9. '(matrix' → logprob: -15.264052391052246
    10. 'and' → logprob: -15.264052391052246

Token 473: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.00033546582562848926
    2. ' matrix' → logprob: -8.000335693359375
    3. '	matrix' → logprob: -17.625335693359375
    4. '   ' → logprob: -19.000335693359375
    5. ' ' → logprob: -20.125335693359375
    6. '(matrix' → logprob: -20.625335693359375
    7. '.matrix' → logprob: -21.250335693359375
    8. '_matrix' → logprob: -22.500335693359375
    9. 'mat' → logprob: -23.375335693359375
    10. '  ' → logprob: -23.750335693359375

Token 474: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00026300468016415834
    2. 'size' → logprob: -8.250263214111328
    3. ' size' → logprob: -14.250263214111328
    4. '_SIZE' → logprob: -14.375263214111328
    5. 'Size' → logprob: -15.375263214111328
    6. '```' → logprob: -16.375263214111328
    7. 'and' → logprob: -16.750263214111328
    8. ')' → logprob: -17.625263214111328
    9. '   ' → logprob: -17.750263214111328
    10. 'col' → logprob: -17.875263214111328

Token 475: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13831275701522827
    2. ':' → logprob: -2.888312816619873
    3. 'and' → logprob: -3.263312816619873
    4. ':
' → logprob: -3.888312816619873
    5. '       ' → logprob: -4.263312816619873
    6. '           ' → logprob: -8.138312339782715
    7. '   ' → logprob: -8.138312339782715
    8. ':

' → logprob: -10.388312339782715
    9. '	and' → logprob: -11.013312339782715
    10. '<|end|>' → logprob: -11.513312339782715

Token 476: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.011812341399490833
    2. ' matrix' → logprob: -4.761812210083008
    3. '(matrix' → logprob: -6.011812210083008
    4. '   ' → logprob: -7.511812210083008
    5. ' (' → logprob: -9.761812210083008
    6. 'mat' → logprob: -10.261812210083008
    7. '((' → logprob: -10.261812210083008
    8. '           ' → logprob: -11.261812210083008
    9. '	matrix' → logprob: -11.261812210083008
    10. '       ' → logprob: -11.386812210083008

Token 477: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -1.9981420336989686e-05
    2. 'elements' → logprob: -10.875020027160645
    3. '_' → logprob: -15.250020027160645
    4. '```' → logprob: -15.375020027160645
    5. '_ELEMENTS' → logprob: -16.250019073486328
    6. '   ' → logprob: -16.750019073486328
    7. 'Elements' → logprob: -16.750019073486328
    8. '_indices' → logprob: -16.875019073486328
    9. '_positions' → logprob: -17.000019073486328
    10. '[row' → logprob: -17.250019073486328

Token 478: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.810037742368877e-05
    2. 'ne' → logprob: -10.625038146972656
    3. '```' → logprob: -12.000038146972656
    4. '[
' → logprob: -12.375038146972656
    5. ' [' → logprob: -13.000038146972656
    6. '][' → logprob: -15.375038146972656
    7. '   ' → logprob: -15.625038146972656
    8. '(ne' → logprob: -16.375038146972656
    9. '
' → logprob: -16.375038146972656
    10. ')[' → logprob: -16.500038146972656

Token 479: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.259079363080673e-05
    2. ' neigh' → logprob: -11.750012397766113
    3. '[' → logprob: -13.375012397766113
    4. 'neighbor' → logprob: -13.375012397766113
    5. 'neq' → logprob: -14.500012397766113
    6. '```' → logprob: -15.500012397766113
    7. '   ' → logprob: -16.00001335144043
    8. '(ne' → logprob: -16.00001335144043
    9. 'neh' → logprob: -16.12501335144043
    10. 'neighbors' → logprob: -16.12501335144043

Token 480: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -2.463036435074173e-05
    2. 'gh' → logprob: -11.875024795532227
    3. 'ig' → logprob: -12.625024795532227
    4. 'i' → logprob: -12.750024795532227
    5. 'w' → logprob: -13.000024795532227
    6. '[' → logprob: -13.000024795532227
    7. 'ighbor' → logprob: -13.500024795532227
    8. 'row' → logprob: -13.625024795532227
    9. '_row' → logprob: -14.125024795532227
    10. 'e' → logprob: -14.125024795532227

Token 481: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.003117941552773118
    2. '_pos' → logprob: -6.12811803817749
    3. 'row' → logprob: -8.128117561340332
    4. '_ne' → logprob: -8.378117561340332
    5. '[' → logprob: -9.378117561340332
    6. '_elements' → logprob: -9.628117561340332
    7. 'elements' → logprob: -10.378117561340332
    8. '_rows' → logprob: -10.628117561340332
    9. 'ne' → logprob: -10.628117561340332
    10. '[row' → logprob: -10.753117561340332

Token 482: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008360736537724733
    2. '[row' → logprob: -7.87583589553833
    3. '[' → logprob: -8.500836372375488
    4. ']' → logprob: -8.625836372375488
    5. ' ][' → logprob: -9.750836372375488
    6. ']!=' → logprob: -13.000836372375488
    7. 'and' → logprob: -13.125836372375488
    8. '"][' → logprob: -13.625836372375488
    9. 'row' → logprob: -13.750836372375488
    10. ''][' → logprob: -13.875836372375488

Token 483: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00012964145571459085
    2. 'col' → logprob: -9.000129699707031
    3. ' neigh' → logprob: -12.875129699707031
    4. '(ne' → logprob: -12.875129699707031
    5. 'neq' → logprob: -15.125129699707031
    6. '   ' → logprob: -16.12512969970703
    7. '_ne' → logprob: -16.25012969970703
    8. 'neh' → logprob: -16.50012969970703
    9. ' ne' → logprob: -16.50012969970703
    10. 'neg' → logprob: -16.50012969970703

Token 484: 'igh' (ID: 1251)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.543807864189148
    2. '_col' → logprob: -0.918807864189148
    3. '_pos' → logprob: -4.4188079833984375
    4. 'lements' → logprob: -5.2938079833984375
    5. 'pos' → logprob: -6.7938079833984375
    6. 'ol' → logprob: -6.9188079833984375
    7. '[col' → logprob: -7.9188079833984375
    8. 'lem' → logprob: -8.918807983398438
    9. 'Col' → logprob: -9.293807983398438
    10. ' col' → logprob: -9.543807983398438

Token 485: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.014193004928529263
    2. '_pos' → logprob: -4.264193058013916
    3. 'col' → logprob: -10.889192581176758
    4. 'pos' → logprob: -12.764192581176758
    5. '_elements' → logprob: -12.764192581176758
    6. 'elements' → logprob: -13.514192581176758
    7. '_row' → logprob: -13.639192581176758
    8. '_idx' → logprob: -14.889192581176758
    9. 'Col' → logprob: -15.014192581176758
    10. ']' → logprob: -15.139192581176758

Token 486: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045902872807346284
    2. 'is' → logprob: -8.000458717346191
    3. ' is' → logprob: -9.625458717346191
    4. ']!=' → logprob: -10.125458717346191
    5. '[' → logprob: -12.250458717346191
    6. ')' → logprob: -12.500458717346191
    7. ' ]' → logprob: -13.000458717346191
    8. ']:
' → logprob: -13.375458717346191
    9. ']>' → logprob: -13.500458717346191
    10. '[
' → logprob: -14.250458717346191

Token 487: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10047008842229843
    2. 'is' → logprob: -2.3504700660705566
    3. '!=' → logprob: -9.600470542907715
    4. '<|end|>' → logprob: -9.600470542907715
    5. ']' → logprob: -10.350470542907715
    6. ')' → logprob: -10.350470542907715
    7. ' ' → logprob: -10.725470542907715
    8. '[' → logprob: -11.975470542907715
    9. 'not' → logprob: -11.975470542907715
    10. ':' → logprob: -12.100470542907715

Token 488: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.033651113510131836
    2. ' not' → logprob: -3.408651113510132
    3. 'None' → logprob: -13.283651351928711
    4. '	not' → logprob: -13.533651351928711
    5. 'Not' → logprob: -14.658651351928711
    6. 'n' → logprob: -15.158651351928711
    7. '   ' → logprob: -15.783651351928711
    8. '
' → logprob: -15.908651351928711
    9. '[' → logprob: -15.908651351928711
    10. ' ' → logprob: -16.03365135192871

Token 489: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00162221840582788
    2. ' not' → logprob: -7.001622200012207
    3. 'None' → logprob: -7.251622200012207
    4. ' None' → logprob: -14.251622200012207
    5. '```' → logprob: -15.001622200012207
    6. 'none' → logprob: -15.626622200012207
    7. '
' → logprob: -16.126623153686523
    8. 'int' → logprob: -17.126623153686523
    9. '	not' → logprob: -17.126623153686523
    10. '``' → logprob: -17.126623153686523

Token 490: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21144461631774902
    2. ':' → logprob: -1.711444616317749
    3. '           ' → logprob: -5.586444854736328
    4. ' and' → logprob: -5.836444854736328
    5. '       ' → logprob: -6.086444854736328
    6. '):
' → logprob: -7.461444854736328
    7. ':

' → logprob: -8.961444854736328
    8. ',' → logprob: -9.086444854736328
    9. '():
' → logprob: -9.586444854736328
    10. 'and' → logprob: -10.086444854736328

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011797507759183645
    2. '	       ' → logprob: -8.251179695129395
    3. '       ' → logprob: -8.376179695129395
    4. '<|end|>' → logprob: -8.626179695129395
    5. ',' → logprob: -8.751179695129395
    6. '            
' → logprob: -9.126179695129395
    7. '
' → logprob: -9.501179695129395
    8. ':' → logprob: -10.251179695129395
    9. '<|end|>' → logprob: -10.876179695129395
    10. ':
' → logprob: -10.876179695129395

Token 492: ' adjacent' (ID: 39069)
  Prédit: ' adjacent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacent' → logprob: -0.7327532172203064
    2. 'adj' → logprob: -0.8577532172203064
    3. '           ' → logprob: -2.357753276824951
    4. '               ' → logprob: -7.732753276824951
    5. '       ' → logprob: -9.232752799987793
    6. '   ' → logprob: -9.732752799987793
    7. ' adj' → logprob: -10.482752799987793
    8. ' adjacency' → logprob: -11.232752799987793
    9. '_adj' → logprob: -11.732752799987793
    10. ' adjunct' → logprob: -11.982752799987793

Token 493: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.531315314830863e-06
    2. '_tokens' → logprob: -13.875003814697266
    3. '_elements' → logprob: -14.375003814697266
    4. '=' → logprob: -14.375003814697266
    5. '_token' → logprob: -15.125003814697266
    6. 'l' → logprob: -15.125003814697266
    7. '_' → logprob: -16.125003814697266
    8. '_value' → logprob: -16.375003814697266
    9. '```' → logprob: -16.500003814697266
    10. ' =' → logprob: -16.500003814697266

Token 494: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -4.723352049040841e-06
    2. 'adj' → logprob: -13.125004768371582
    3. 'cms' → logprob: -13.625004768371582
    4. 'l' → logprob: -14.125004768371582
    5. 'c' → logprob: -15.125004768371582
    6. 'm' → logprob: -15.875004768371582
    7. '   ' → logprob: -16.125003814697266
    8. '=' → logprob: -16.500003814697266
    9. 'CM' → logprob: -17.250003814697266
    10. '```' → logprob: -17.250003814697266

Token 495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12703992426395416
    2. ' =' → logprob: -2.127039909362793
    3. ' *=' → logprob: -9.627039909362793
    4. '*=' → logprob: -10.002039909362793
    5. '   ' → logprob: -15.002039909362793
    6. '	' → logprob: -15.752039909362793
    7. ' ' → logprob: -15.877039909362793
    8. '=

' → logprob: -17.00204086303711
    9. '    ' → logprob: -17.25204086303711
    10. '＝' → logprob: -17.75204086303711

Token 496: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.005448970478028059
    2. ' compute' → logprob: -5.630448818206787
    3. 'math' → logprob: -6.505448818206787
    4. '(com' → logprob: -8.505449295043945
    5. 'adj' → logprob: -9.505449295043945
    6. 'l' → logprob: -10.505449295043945
    7. 'computer' → logprob: -11.380449295043945
    8. '(math' → logprob: -11.505449295043945
    9. ' math' → logprob: -11.630449295043945
    10. 'comput' → logprob: -12.380449295043945

Token 497: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -6.742448022123426e-05
    2. 'l' → logprob: -10.000067710876465
    3. 'adj' → logprob: -11.750067710876465
    4. '_' → logprob: -12.125067710876465
    5. '_adj' → logprob: -12.375067710876465
    6. '```' → logprob: -13.500067710876465
    7. '(' → logprob: -14.125067710876465
    8. '(adj' → logprob: -14.125067710876465
    9. '_ll' → logprob: -15.625067710876465
    10. ' adjacent' → logprob: -15.625067710876465

Token 498: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00010819212911883369
    2. 'c' → logprob: -9.625107765197754
    3. 'm' → logprob: -11.125107765197754
    4. 'cms' → logprob: -11.625107765197754
    5. ' adjacent' → logprob: -11.625107765197754
    6. 'adj' → logprob: -12.625107765197754
    7. '_cm' → logprob: -13.000107765197754
    8. ' cm' → logprob: -13.625107765197754
    9. 'CM' → logprob: -13.875107765197754
    10. '   ' → logprob: -15.000107765197754

Token 499: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.001518907374702394
    2. '(' → logprob: -6.626518726348877
    3. 'adj' → logprob: -8.751519203186035
    4. '(ad' → logprob: -11.001519203186035
    5. '(
' → logprob: -11.126519203186035
    6. ' adjacent' → logprob: -13.001519203186035
    7. ' (' → logprob: -14.126519203186035
    8. '_adj' → logprob: -16.75151824951172
    9. '(abs' → logprob: -16.75151824951172
    10. 'Adjacent' → logprob: -16.75151824951172

Token 500: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -5.319370302458992e-06
    2. 'cent' → logprob: -14.000005722045898
    3. '```' → logprob: -14.000005722045898
    4. '(
' → logprob: -14.625005722045898
    5. '(' → logprob: -14.750005722045898
    6. '[' → logprob: -14.875005722045898
    7. '=' → logprob: -15.375005722045898
    8. '
' → logprob: -15.500005722045898
    9. '   ' → logprob: -15.500005722045898
    10. 'acency' → logprob: -15.875005722045898

Token 501: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.297462171758525e-05
    2. 'adj' → logprob: -11.000033378601074
    3. 'l' → logprob: -11.250033378601074
    4. '```' → logprob: -13.375033378601074
    5. '_value' → logprob: -14.250033378601074
    6. '_' → logprob: -15.125033378601074
    7. ')' → logprob: -15.250033378601074
    8. ')_' → logprob: -16.375032424926758
    9. ' adjacent' → logprob: -16.500032424926758
    10. '_adj' → logprob: -16.750032424926758

Token 502: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.003717892337590456
    2. 'adj' → logprob: -6.50371789932251
    3. ' adjacent' → logprob: -7.00371789932251
    4. 'acent' → logprob: -7.25371789932251
    5. 'm' → logprob: -9.003717422485352
    6. 'ent' → logprob: -9.003717422485352
    7. 'c' → logprob: -9.128717422485352
    8. '   ' → logprob: -10.753717422485352
    9. 'cms' → logprob: -10.753717422485352
    10. '```' → logprob: -10.878717422485352

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015716375783085823
    2. ',m' → logprob: -7.5015716552734375
    3. '(' → logprob: -7.6265716552734375
    4. '(matrix' → logprob: -7.7515716552734375
    5. ' ,' → logprob: -9.501571655273438
    6. 'matrix' → logprob: -11.251571655273438
    7. ',
' → logprob: -12.501571655273438
    8. 'adj' → logprob: -12.876571655273438
    9. '(adj' → logprob: -13.251571655273438
    10. '           ' → logprob: -13.751571655273438

Token 504: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.02324792370200157
    2. ' matrix' → logprob: -3.7732479572296143
    3. '           ' → logprob: -13.773247718811035
    4. '	matrix' → logprob: -13.898247718811035
    5. '   ' → logprob: -15.148247718811035
    6. '(matrix' → logprob: -16.02324867248535
    7. '               ' → logprob: -16.27324867248535
    8. '.matrix' → logprob: -17.77324867248535
    9. '                   ' → logprob: -18.14824867248535
    10. ' ' → logprob: -18.39824867248535

Token 505: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -6.694766489090398e-05
    2. 'elements' → logprob: -9.625066757202148
    3. '```' → logprob: -15.000066757202148
    4. 'Elements' → logprob: -16.00006675720215
    5. '_neighbors' → logprob: -16.12506675720215
    6. '[' → logprob: -16.50006675720215
    7. '_ELEMENTS' → logprob: -16.62506675720215
    8. '_' → logprob: -17.00006675720215
    9. '_element' → logprob: -17.37506675720215
    10. ' elements' → logprob: -17.87506675720215

Token 506: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -13.750001907348633
    3. '[
' → logprob: -14.750001907348633
    4. '```' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '       ' → logprob: -16.875001907348633
    7. '
' → logprob: -17.000001907348633
    8. 'ne' → logprob: -17.250001907348633
    9. '[row' → logprob: -17.250001907348633
    10. ' ' → logprob: -17.375001907348633

Token 507: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -6.945094355614856e-05
    2. ' neigh' → logprob: -9.625069618225098
    3. 'neighbor' → logprob: -13.500069618225098
    4. '   ' → logprob: -14.375069618225098
    5. '(ne' → logprob: -15.625069618225098
    6. '
' → logprob: -15.875069618225098
    7. ' ne' → logprob: -15.875069618225098
    8. 'neighbors' → logprob: -16.00006866455078
    9. '    ' → logprob: -16.12506866455078
    10. 'neh' → logprob: -16.12506866455078

Token 508: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.0006528667290695012
    2. 'ighbor' → logprob: -8.000653266906738
    3. 'gh' → logprob: -8.250653266906738
    4. 'ig' → logprob: -11.000653266906738
    5. '[' → logprob: -11.625653266906738
    6. 'ighbors' → logprob: -12.000653266906738
    7. '```' → logprob: -12.250653266906738
    8. 'w' → logprob: -12.875653266906738
    9. '_row' → logprob: -13.375653266906738
    10. '
' → logprob: -13.375653266906738

Token 509: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.08148010075092316
    2. '_col' → logprob: -2.706480026245117
    3. 'ighbor' → logprob: -4.581480026245117
    4. 'row' → logprob: -7.706480026245117
    5. 'ighbors' → logprob: -8.081480026245117
    6. 'bor' → logprob: -8.581480026245117
    7. '_pos' → logprob: -9.456480026245117
    8. 'or' → logprob: -10.331480026245117
    9. 'b' → logprob: -10.456480026245117
    10. 'ighbour' → logprob: -10.581480026245117

Token 510: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0804995745420456
    2. '[' → logprob: -2.5804996490478516
    3. ']' → logprob: -6.580499649047852
    4. ' ][' → logprob: -8.955499649047852
    5. '```' → logprob: -10.330499649047852
    6. '"][' → logprob: -11.705499649047852
    7. '[
' → logprob: -11.705499649047852
    8. ''][' → logprob: -11.955499649047852
    9. '[row' → logprob: -12.330499649047852
    10. ']
' → logprob: -12.580499649047852

Token 511: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -5.319370302458992e-06
    2. ' neigh' → logprob: -12.875005722045898
    3. 'neighbor' → logprob: -13.625005722045898
    4. '(ne' → logprob: -14.250005722045898
    5. '   ' → logprob: -15.375005722045898
    6. 'neq' → logprob: -15.625005722045898
    7. '_ne' → logprob: -16.1250057220459
    8. '    ' → logprob: -16.5000057220459
    9. 'neighbors' → logprob: -16.7500057220459
    10. 'nei' → logprob: -17.2500057220459

Token 512: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.0004659425176214427
    2. 'gh' → logprob: -7.7504658699035645
    3. 'ighbor' → logprob: -10.625466346740723
    4. 'ig' → logprob: -12.750466346740723
    5. 'IGH' → logprob: -13.375466346740723
    6. 'ighbors' → logprob: -13.625466346740723
    7. 'i' → logprob: -14.000466346740723
    8. '[' → logprob: -14.125466346740723
    9. '_' → logprob: -14.250466346740723
    10. '1' → logprob: -14.625466346740723

Token 513: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00740086892619729
    2. 'ighbor' → logprob: -5.882400989532471
    3. 'bor' → logprob: -6.257400989532471
    4. 'ighbors' → logprob: -6.882400989532471
    5. 'col' → logprob: -7.632400989532471
    6. 'b' → logprob: -7.632400989532471
    7. '_row' → logprob: -8.132400512695312
    8. 'bors' → logprob: -9.007400512695312
    9. 'gh' → logprob: -9.507400512695312
    10. 'ighbour' → logprob: -11.007400512695312

Token 514: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')
' → logprob: -11.375020027160645
    3. ' )' → logprob: -11.875020027160645
    4. '   ' → logprob: -15.125020027160645
    5. '))' → logprob: -16.125019073486328
    6. '<|end|>' → logprob: -16.125019073486328
    7. '[' → logprob: -16.250019073486328
    8. '),' → logprob: -16.500019073486328
    9. ']' → logprob: -16.750019073486328
    10. ')

' → logprob: -16.875019073486328

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4365096688270569
    2. 'matrix' → logprob: -1.186509609222412
    3. ')' → logprob: -3.811509609222412
    4. '    
' → logprob: -4.561509609222412
    5. ' matrix' → logprob: -4.561509609222412
    6. '	matrix' → logprob: -6.811509609222412
    7. '   
' → logprob: -7.811509609222412
    8. '```' → logprob: -7.811509609222412
    9. '
' → logprob: -7.936509609222412
    10. ' ' → logprob: -8.06151008605957

Token 516: ' if' (ID: 538)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0003497666330076754
    2. '   ' → logprob: -8.125349998474121
    3. ' matrix' → logprob: -9.875349998474121
    4. 'value' → logprob: -14.250349998474121
    5. 'if' (adapté à ' if') → logprob: -14.375349998474121
    6. '       ' → logprob: -15.500349998474121
    7. '           ' → logprob: -15.750349998474121
    8. '```' → logprob: -15.750349998474121
    9. '	matrix' → logprob: -16.000349044799805
    10. ' ' → logprob: -16.500349044799805

Token 517: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3558371663093567
    2. ' adjacent' → logprob: -1.230837106704712
    3. 'matrix' → logprob: -6.355837345123291
    4. '(adj' → logprob: -6.730837345123291
    5. ' matrix' → logprob: -6.980837345123291
    6. 'prime' → logprob: -7.230837345123291
    7. 'col' → logprob: -7.605837345123291
    8. 'row' → logprob: -7.730837345123291
    9. '(' → logprob: -7.855837345123291
    10. ' ' → logprob: -8.230836868286133

Token 518: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.000003814697266
    3. '>' → logprob: -15.250003814697266
    4. '[' → logprob: -16.500003814697266
    5. '==' → logprob: -16.750003814697266
    6. ' _' → logprob: -16.875003814697266
    7. '_elements' → logprob: -16.875003814697266
    8. ')' → logprob: -17.000003814697266
    9. '...' → logprob: -17.125003814697266
    10. '=' → logprob: -17.125003814697266

Token 519: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -6.384836888173595e-05
    2. 'c' → logprob: -10.5000638961792
    3. 'm' → logprob: -11.0000638961792
    4. 'cms' → logprob: -12.2500638961792
    5. '   ' → logprob: -12.3750638961792
    6. 'adj' → logprob: -12.5000638961792
    7. '```' → logprob: -13.0000638961792
    8. 'CM' → logprob: -13.7500638961792
    9. '_cm' → logprob: -14.7500638961792
    10. 'l' → logprob: -14.8750638961792

Token 520: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6508201956748962
    2. '==' → logprob: -0.7758201956748962
    3. '%' → logprob: -5.150820255279541
    4. ' !=' → logprob: -5.275820255279541
    5. '!=' → logprob: -5.650820255279541
    6. ' >' → logprob: -6.275820255279541
    7. '>' → logprob: -6.900820255279541
    8. ' %' → logprob: -7.525820255279541
    9. '<|end|>' → logprob: -9.900819778442383
    10. ' is' → logprob: -10.400819778442383

Token 521: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.030514704063534737
    2. '100' → logprob: -4.155514717102051
    3. '2' → logprob: -4.780514717102051
    4. '(' → logprob: -6.280514717102051
    5. 'prime' → logprob: -6.405514717102051
    6. '1' → logprob: -6.655514717102051
    7. '101' → logprob: -7.655514717102051
    8. 'math' → logprob: -8.90551471710205
    9. 'int' → logprob: -8.90551471710205
    10. 'matrix' → logprob: -9.03051471710205

Token 522: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.013357860967516899
    2. '2' → logprob: -4.888357639312744
    3. '100' → logprob: -5.763357639312744
    4. '1' → logprob: -6.138357639312744
    5. '(' → logprob: -8.263358116149902
    6. 'int' → logprob: -9.763358116149902
    7. '999' → logprob: -10.513358116149902
    8. '3' → logprob: -11.013358116149902
    9. '200' → logprob: -11.388358116149902
    10. '101' → logprob: -11.513358116149902

Token 523: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07788766175508499
    2. ':
' → logprob: -2.827887773513794
    3. '0' → logprob: -4.202887535095215
    4. '00' → logprob: -8.077887535095215
    5. '   ' → logprob: -8.827887535095215
    6. ' and' → logprob: -9.702887535095215
    7. '*' → logprob: -9.702887535095215
    8. '**' → logprob: -10.327887535095215
    9. ' *' → logprob: -10.327887535095215
    10. '6' → logprob: -10.702887535095215

Token 524: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014734657481312752
    2. '(' → logprob: -4.389734745025635
    3. 'matrix' → logprob: -6.514734745025635
    4. '(matrix' → logprob: -7.889734745025635
    5. ' ' → logprob: -9.014734268188477
    6. 'prime' → logprob: -9.514734268188477
    7. '1' → logprob: -9.764734268188477
    8. '100' → logprob: -10.014734268188477
    9. ' (' → logprob: -10.014734268188477
    10. '(pr' → logprob: -11.764734268188477

Token 525: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002615016885101795
    2. '(' → logprob: -6.002614974975586
    3. 'matrix' → logprob: -9.127614974975586
    4. '(matrix' → logprob: -11.377614974975586
    5. '100' → logprob: -11.752614974975586
    6. '1' → logprob: -12.252614974975586
    7. 'prime' → logprob: -13.127614974975586
    8. '
' → logprob: -13.752614974975586
    9. ' ' → logprob: -13.877614974975586
    10. '

' → logprob: -14.502614974975586

Token 526: ' **' (ID: 6240)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7024954557418823
    2. '9' → logprob: -1.2024954557418823
    3. '6' → logprob: -2.202495574951172
    4. '8' → logprob: -3.077495574951172
    5. '**' → logprob: -3.077495574951172
    6. '5' → logprob: -6.952495574951172
    7. '10' → logprob: -7.702495574951172
    8. '```' → logprob: -9.452495574951172
    9. '4' → logprob: -10.452495574951172
    10. '12' → logprob: -11.452495574951172

Token 527: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.41980379819869995
    2. '18' → logprob: -2.2948038578033447
    3. '8' → logprob: -2.9198038578033447
    4. '10' → logprob: -3.0448038578033447
    5. '15' → logprob: -3.4198038578033447
    6. '12' → logprob: -3.5448038578033447
    7. '14' → logprob: -3.6698038578033447
    8. '7' → logprob: -3.9198038578033447
    9. '11' → logprob: -4.544803619384766
    10. '13' → logprob: -4.544803619384766

Token 528: '14' (ID: 1265)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.2372746467590332
    2. '9' → logprob: -1.3622746467590332
    3. '7' → logprob: -1.4872746467590332
    4. '18' → logprob: -2.737274646759033
    5. '6' → logprob: -2.987274646759033
    6. '10' → logprob: -3.237274646759033
    7. '15' → logprob: -4.362274646759033
    8. '11' → logprob: -4.362274646759033
    9. '12' → logprob: -4.362274646759033
    10. '14' → logprob: -4.612274646759033

Token 529: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39484086632728577
    2. ':
' → logprob: -1.1448408365249634
    3. '       ' → logprob: -4.894840717315674
    4. '   ' → logprob: -8.144841194152832
    5. ' or' → logprob: -9.644841194152832
    6. ':return' → logprob: -10.269841194152832
    7. ' and' → logprob: -11.144841194152832
    8. ' :
' → logprob: -11.644841194152832
    9. ':
' → logprob: -11.894841194152832
    10. ':

' → logprob: -12.144841194152832

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005555360112339258
    2. ' raise' → logprob: -8.625555992126465
    3. 'raise' → logprob: -8.625555992126465
    4. 'print' → logprob: -9.125555992126465
    5. 'matrix' → logprob: -10.375555992126465
    6. '   ' → logprob: -11.125555992126465
    7. ' matrix' → logprob: -11.125555992126465
    8. '           ' → logprob: -11.750555992126465
    9. ' print' → logprob: -12.125555992126465
    10. 'import' → logprob: -12.625555992126465

Token 531: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7084125876426697
    2. 'print' (adapté à ' print') → logprob: -1.5834126472473145
    3. 'raise' → logprob: -2.2084126472473145
    4. '       ' → logprob: -2.4584126472473145
    5. 'matrix' → logprob: -2.7084126472473145
    6. ' raise' → logprob: -4.3334126472473145
    7. 'break' → logprob: -4.4584126472473145
    8. 'adj' → logprob: -5.4584126472473145
    9. 'continue' → logprob: -5.7084126472473145
    10. ' matrix' → logprob: -6.0834126472473145

Token 532: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2333974987268448
    2. '("' → logprob: -1.9833974838256836
    3. '()' → logprob: -3.6083974838256836
    4. '(adj' → logprob: -3.8583974838256836
    5. '('' → logprob: -3.9833974838256836
    6. '(-' → logprob: -6.233397483825684
    7. '("")' → logprob: -7.858397483825684
    8. 'adj' → logprob: -8.108397483825684
    9. '(ad' → logprob: -8.233397483825684
    10. '(
' → logprob: -8.608397483825684

Token 533: 'ERR' (ID: 5392)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.6665406227111816
    2. ')' → logprob: -1.2915406227111816
    3. '(' → logprob: -1.9165406227111816
    4. '    ' → logprob: -4.291540622711182
    5. '   ' → logprob: -4.916540622711182
    6. ' Value' → logprob: -5.041540622711182
    7. '#' → logprob: -5.666540622711182
    8. '       ' → logprob: -5.791540622711182
    9. ' ' → logprob: -5.791540622711182
    10. 'raise' → logprob: -6.041540622711182

Token 534: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5181472301483154
    2. 'or' → logprob: -1.0181472301483154
    3. ':' → logprob: -3.6431472301483154
    4. 'OR' → logprob: -4.3931474685668945
    5. '")
' → logprob: -5.6431474685668945
    6. ')' → logprob: -8.018147468566895
    7. 'ROR' → logprob: -8.518147468566895
    8. 'R' → logprob: -8.643147468566895
    9. '"' → logprob: -9.768147468566895
    10. '!")' → logprob: -10.143147468566895

Token 535: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2395852655172348
    2. ' adjacent' → logprob: -1.739585280418396
    3. 'row' → logprob: -3.7395851612091064
    4. ' row' → logprob: -4.9895853996276855
    5. 't' → logprob: -5.4895853996276855
    6. ' matrix' → logprob: -7.6145853996276855
    7. ' tup' → logprob: -7.7395853996276855
    8. 'matrix' → logprob: -7.8645853996276855
    9. ' adj' → logprob: -7.9895853996276855
    10. '"' → logprob: -8.114584922790527

Token 536: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.621933451038785e-05
    2. 'adj' → logprob: -10.000056266784668
    3. 'acent' → logprob: -12.250056266784668
    4. 'ent' → logprob: -14.125056266784668
    5. 'l' → logprob: -14.250056266784668
    6. '_' → logprob: -14.625056266784668
    7. ')' → logprob: -14.625056266784668
    8. '```' → logprob: -14.875056266784668
    9. 'anc' → logprob: -15.000056266784668
    10. ' adjacent' → logprob: -15.125056266784668

Token 537: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.534558552724775e-05
    2. 'm' → logprob: -11.125025749206543
    3. 'c' → logprob: -12.125025749206543
    4. 'mc' → logprob: -13.000025749206543
    5. 'CM' → logprob: -13.625025749206543
    6. '_cm' → logprob: -14.750025749206543
    7. '_c' → logprob: -14.875025749206543
    8. 'cms' → logprob: -15.000025749206543
    9. '_m' → logprob: -16.500024795532227
    10. 'adj' → logprob: -16.625024795532227

Token 538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01828690432012081
    2. ')
' → logprob: -4.01828670501709
    3. '       ' → logprob: -9.39328670501709
    4. '   ' → logprob: -10.14328670501709
    5. ' )' → logprob: -12.14328670501709
    6. ')
' → logprob: -12.26828670501709
    7. ')`
' → logprob: -13.76828670501709
    8. ',' → logprob: -14.64328670501709
    9. ')return' → logprob: -14.64328670501709
    10. '")' → logprob: -14.76828670501709

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030078593641519547
    2. '   ' → logprob: -3.530078649520874
    3. ',' → logprob: -9.030078887939453
    4. '
' → logprob: -9.530078887939453
    5. '           ' → logprob: -10.030078887939453
    6. '    
' → logprob: -10.280078887939453
    7. '        
' → logprob: -11.655078887939453
    8. ')' → logprob: -11.655078887939453
    9. 'import' → logprob: -12.030078887939453
    10. '<|end|>' → logprob: -12.155078887939453

Token 540: ' raise' (ID: 9338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.16898156702518463
    2. 'raise' (adapté à ' raise') → logprob: -1.9189815521240234
    3. 'exit' → logprob: -4.918981552124023
    4. '   ' → logprob: -7.043981552124023
    5. 'import' → logprob: -8.418981552124023
    6. ' break' → logprob: -8.668981552124023
    7. 'continue' → logprob: -9.293981552124023
    8. ' raise' → logprob: -10.793981552124023
    9. '       ' → logprob: -11.168981552124023
    10. 'matrix' → logprob: -11.668981552124023

Token 541: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.13041026890277863
    2. 'Overflow' → logprob: -2.1304101943969727
    3. ' Value' → logprob: -5.880410194396973
    4. ' Overflow' → logprob: -7.880410194396973
    5. 'Runtime' → logprob: -8.505410194396973
    6. 'Exception' → logprob: -9.755410194396973
    7. 'Memory' → logprob: -10.380410194396973
    8. 'Arithmetic' → logprob: -12.380410194396973
    9. ' Runtime' → logprob: -12.880410194396973
    10. '(Value' → logprob: -13.505410194396973

Token 542: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.2664456789934775e-06
    2. 'Value' → logprob: -13.750000953674316
    3. 'rror' → logprob: -16.375001907348633
    4. 'Overflow' → logprob: -16.875001907348633
    5. 'Errors' → logprob: -18.625001907348633
    6. '_Error' → logprob: -19.000001907348633
    7. 'Input' → logprob: -19.125001907348633
    8. 'Erro' → logprob: -19.875001907348633
    9. 'Info' → logprob: -20.125001907348633
    10. 'Warning' → logprob: -20.250001907348633

Token 543: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13859745860099792
    2. '    
' → logprob: -2.1385974884033203
    3. '(' → logprob: -5.13859748840332
    4. '<|end|>' → logprob: -6.26359748840332
    5. '()' → logprob: -7.13859748840332
    6. '  
' → logprob: -7.38859748840332
    7. '
' → logprob: -7.51359748840332
    8. '        
' → logprob: -7.63859748840332
    9. '(
' → logprob: -7.76359748840332
    10. '()
' → logprob: -8.38859748840332

Token 544: '   ' (ID: 271)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03144428879022598
    2. '   ' → logprob: -3.5314443111419678
    3. ' matrix' → logprob: -6.656444072723389
    4. '       ' → logprob: -8.156444549560547
    5. '	matrix' → logprob: -9.156444549560547
    6. '           ' → logprob: -11.906444549560547
    7. '```' → logprob: -13.031444549560547
    8. '    
' → logprob: -13.156444549560547
    9. '_matrix' → logprob: -14.406444549560547
    10. '
' → logprob: -14.406444549560547

Token 545: ' candidate' (ID: 17098)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0001996066712308675
    2. '   ' → logprob: -8.625199317932129
    3. ' matrix' → logprob: -10.875199317932129
    4. 'value' → logprob: -14.375199317932129
    5. '       ' → logprob: -15.625199317932129
    6. '	matrix' → logprob: -16.250200271606445
    7. 'if' → logprob: -17.000200271606445
    8. '
' → logprob: -17.500200271606445
    9. '```' → logprob: -17.750200271606445
    10. '    
' → logprob: -18.000200271606445

Token 546: '_result' (ID: 11623)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002056523459032178
    2. '=' → logprob: -6.62705659866333
    3. '_val' → logprob: -7.87705659866333
    4. '_value' → logprob: -8.377056121826172
    5. '_' → logprob: -9.627056121826172
    6. '_num' → logprob: -10.252056121826172
    7. '_number' → logprob: -12.002056121826172
    8. '_candidate' → logprob: -12.127056121826172
    9. ' ' → logprob: -13.252056121826172
    10. 'num' → logprob: -13.877056121826172

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009172935388050973
    2. '=' → logprob: -7.000917434692383
    3. ' ' → logprob: -12.625917434692383
    4. '_' → logprob: -13.500917434692383
    5. '  ' → logprob: -14.750917434692383
    6. 's' → logprob: -15.500917434692383
    7. ',' → logprob: -15.875917434692383
    8. ' _' → logprob: -16.375917434692383
    9. '   ' → logprob: -16.625917434692383
    10. '_val' → logprob: -16.750917434692383

Token 548: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.002841491252183914
    2. '1' → logprob: -6.877841472625732
    3. ' adjacent' → logprob: -7.002841472625732
    4. 'random' → logprob: -7.627841472625732
    5. '2' → logprob: -9.00284194946289
    6. '5' → logprob: -9.50284194946289
    7. 'None' → logprob: -10.25284194946289
    8. 'prime' → logprob: -10.37784194946289
    9. '   ' → logprob: -10.50284194946289
    10. '(adj' → logprob: -10.75284194946289

Token 549: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.8087270038668066e-05
    2. '_result' → logprob: -10.625027656555176
    3. '_candidate' → logprob: -13.875027656555176
    4. '```' → logprob: -14.500027656555176
    5. 'result' → logprob: -14.625027656555176
    6. '_candidates' → logprob: -15.125027656555176
    7. '_results' → logprob: -15.500027656555176
    8. '_elements' → logprob: -15.500027656555176
    9. '_value' → logprob: -16.000028610229492
    10. 'l' → logprob: -16.000028610229492

Token 550: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.1008713702030946e-06
    2. 'c' → logprob: -13.500001907348633
    3. 'cms' → logprob: -14.875001907348633
    4. 'm' → logprob: -16.000001907348633
    5. 'CM' → logprob: -17.125001907348633
    6. '```' → logprob: -17.750001907348633
    7. 'cmd' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. 'с' → logprob: -18.625001907348633
    10. ' cm' → logprob: -18.750001907348633

Token 551: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44852423667907715
    2. '+' → logprob: -1.3235242366790771
    3. '
' → logprob: -4.073524475097656
    4. ' +=' → logprob: -4.448524475097656
    5. ' ' → logprob: -4.698524475097656
    6. 'import' → logprob: -4.948524475097656
    7. ' *' → logprob: -4.948524475097656
    8. '   ' → logprob: -5.198524475097656
    9. ' 
' → logprob: -5.198524475097656
    10. '*' → logprob: -5.448524475097656

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0192855317145586
    2. ' ' → logprob: -4.019285678863525
    3. ' random' → logprob: -7.644285678863525
    4. 'random' → logprob: -8.644285202026367
    5. '2' → logprob: -8.894285202026367
    6. ' math' → logprob: -9.519285202026367
    7. ' col' → logprob: -9.644285202026367
    8. 'matrix' → logprob: -10.144285202026367
    9. '  ' → logprob: -10.644285202026367
    10. 'math' → logprob: -10.831785202026367

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008045206777751446
    2. 'matrix' → logprob: -5.508045196533203
    3. 'prime' → logprob: -6.383045196533203
    4. 'random' → logprob: -6.883045196533203
    5. '2' → logprob: -8.008045196533203
    6. 'math' → logprob: -8.508045196533203
    7. 'row' → logprob: -8.883045196533203
    8. 'col' → logprob: -9.133045196533203
    9. 'adj' → logprob: -9.133045196533203
    10. ' ' → logprob: -9.633045196533203

Token 554: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4166256785392761
    2. '<|end|>' → logprob: -1.291625738143921
    3. '   ' → logprob: -2.916625738143921
    4. '  
' → logprob: -5.166625499725342
    5. '    
' → logprob: -5.791625499725342
    6. '   
' → logprob: -7.416625499725342
    7. '

' → logprob: -7.541625499725342
    8. ' 
' → logprob: -7.791625499725342
    9. '<|end|>' → logprob: -7.916625499725342
    10. ')' → logprob: -8.2916259765625

Token 555: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3338065445423126
    2. '   ' → logprob: -1.4588065147399902
    3. ' while' → logprob: -3.0838065147399902
    4. '
' → logprob: -6.20880651473999
    5. '    
' → logprob: -6.70880651473999
    6. 'matrix' → logprob: -6.95880651473999
    7. 'for' → logprob: -7.58380651473999
    8. 'if' → logprob: -8.708806991577148
    9. '	while' → logprob: -8.958806991577148
    10. ' matrix' → logprob: -8.958806991577148

Token 557: ' candidate' (ID: 17098)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5698063969612122
    2. ' True' → logprob: -1.1948063373565674
    3. ' not' → logprob: -2.1948063373565674
    4. 'not' → logprob: -4.4448065757751465
    5. ' any' → logprob: -5.5698065757751465
    6. 'candidate' → logprob: -6.4448065757751465
    7. 'any' → logprob: -6.5698065757751465
    8. '(True' → logprob: -7.0698065757751465
    9. ' candidate' → logprob: -7.3198065757751465
    10. '(not' → logprob: -9.319806098937988

Token 558: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00020270596724003553
    2. '_candidate' → logprob: -8.625203132629395
    3. '_' → logprob: -11.125203132629395
    4. ' _' → logprob: -12.750203132629395
    5. '```' → logprob: -12.750203132629395
    6. 'result' → logprob: -14.500203132629395
    7. '"_' → logprob: -14.875203132629395
    8. '_results' → logprob: -15.875203132629395
    9. '<=' → logprob: -16.000202178955078
    10. '_RESULT' → logprob: -16.000202178955078

Token 559: ' in' (ID: 306)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.30957677960395813
    2. '%' → logprob: -1.4345767498016357
    3. ' <=' → logprob: -3.6845767498016357
    4. '<=' → logprob: -6.184576988220215
    5. '%e' → logprob: -7.934576988220215
    6. '%s' → logprob: -8.684576988220215
    7. '%c' → logprob: -9.309576988220215
    8. ' >' → logprob: -9.434576988220215
    9. '%i' → logprob: -10.559576988220215
    10. '>' → logprob: -10.809576988220215

Token 560: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0001234428636962548
    2. ' used' → logprob: -9.000123023986816
    3. '.used' → logprob: -18.750123977661133
    4. '   ' → logprob: -21.125123977661133
    5. '_used' → logprob: -21.125123977661133
    6. '
' → logprob: -22.250123977661133
    7. 'unused' → logprob: -22.250123977661133
    8. 'use' → logprob: -23.000123977661133
    9. ' ' → logprob: -23.375123977661133
    10. 'Used' → logprob: -23.500123977661133

Token 561: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.00030066570616327226
    2. '_' → logprob: -8.125300407409668
    3. '_candidates' → logprob: -12.750300407409668
    4. 'numbers' → logprob: -14.375300407409668
    5. ' _' → logprob: -14.750300407409668
    6. '_results' → logprob: -15.375300407409668
    7. 'Numbers' → logprob: -15.375300407409668
    8. '_n' → logprob: -16.125301361083984
    9. '_
' → logprob: -16.375301361083984
    10. ' numbers' → logprob: -16.375301361083984

Token 562: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023294975981116295
    2. ':
' → logprob: -4.023294925689697
    3. ' and' → logprob: -5.773294925689697
    4. '   ' → logprob: -6.898294925689697
    5. 'and' → logprob: -8.273295402526855
    6. ' or' → logprob: -8.398295402526855
    7. '       ' → logprob: -8.773295402526855
    8. '<|end|>' → logprob: -9.273295402526855
    9. ',' → logprob: -9.398295402526855
    10. ' :' → logprob: -9.523295402526855

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012774959905073047
    2. 'candidate' → logprob: -7.376277446746826
    3. ' candidate' → logprob: -8.251277923583984
    4. '        
' → logprob: -8.751277923583984
    5. ',' → logprob: -10.126277923583984
    6. '+' → logprob: -10.126277923583984
    7. '_candidate' → logprob: -10.376277923583984
    8. '<|end|>' → logprob: -10.376277923583984
    9. '   ' → logprob: -11.376277923583984
    10. ' 
' → logprob: -11.876277923583984

Token 564: ' multiplier' (ID: 61814)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0019324433524161577
    2. ' candidate' → logprob: -6.251932621002197
    3. '   ' → logprob: -13.001932144165039
    4. '       ' → logprob: -13.501932144165039
    5. '           ' → logprob: -16.50193214416504
    6. '_candidate' → logprob: -16.75193214416504
    7. 'c' → logprob: -17.00193214416504
    8. '(candidate' → logprob: -17.00193214416504
    9. ' candidat' → logprob: -18.00193214416504
    10. '候' → logprob: -18.25193214416504

Token 565: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11380153894424438
    2. '+=' → logprob: -2.4888014793395996
    3. ' *=' → logprob: -4.1138014793396
    4. '=' → logprob: -5.8638014793396
    5. ' =' → logprob: -6.1138014793396
    6. '_' → logprob: -7.4888014793396
    7. ' ' → logprob: -7.6138014793396
    8. '*=' → logprob: -7.6138014793396
    9. '<|end|>' → logprob: -7.8638014793396
    10. ' *' → logprob: -8.738801956176758

Token 566: ' random' (ID: 7526)
  Prédit: ' random'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.338125616312027
    2. 'random' → logprob: -1.3381255865097046
    3. '2' → logprob: -4.088125705718994
    4. ' candidate' → logprob: -5.338125705718994
    5. 'candidate' → logprob: -6.088125705718994
    6. 'compute' → logprob: -8.963125228881836
    7. ' randint' → logprob: -8.963125228881836
    8. ' ' → logprob: -9.088125228881836
    9. '	random' → logprob: -9.463125228881836
    10. ' compute' → logprob: -9.588125228881836

Token 567: '.randint' (ID: 55817)
  Prédit: '.randint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.randint' → logprob: -0.0011966594029217958
    2. '.randrange' → logprob: -7.50119686126709
    3. '.random' → logprob: -8.37619686126709
    4. '.' → logprob: -8.50119686126709
    5. '.choice' → logprob: -8.62619686126709
    6. '.uniform' → logprob: -10.50119686126709
    7. '.Random' → logprob: -13.37619686126709
    8. ' .' → logprob: -14.37619686126709
    9. '(' → logprob: -14.75119686126709
    10. '()' → logprob: -15.00119686126709

Token 568: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025649838149547577
    2. '2' → logprob: -4.1506500244140625
    3. '1' → logprob: -4.6506500244140625
    4. '(
' → logprob: -11.775650024414062
    5. ' ' → logprob: -12.650650024414062
    6. ' (' → logprob: -13.775650024414062
    7. '(-' → logprob: -14.650650024414062
    8. '[' → logprob: -14.775650024414062
    9. 'a' → logprob: -14.775650024414062
    10. '0' → logprob: -15.775650024414062

Token 569: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006119333207607269
    2. '1' → logprob: -5.131119251251221
    3. ' ' → logprob: -9.381119728088379
    4. '3' → logprob: -10.631119728088379
    5. '   ' → logprob: -11.006119728088379
    6. '100' → logprob: -11.256119728088379
    7. '10' → logprob: -11.256119728088379
    8. '0' → logprob: -11.881119728088379
    9. '5' → logprob: -12.006119728088379
    10. '(' → logprob: -12.506119728088379

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007194612408056855
    2. ' ,' → logprob: -7.2507195472717285
    3. '100' → logprob: -12.75071907043457
    4. '1' → logprob: -13.25071907043457
    5. '0' → logprob: -13.37571907043457
    6. '2' → logprob: -14.00071907043457
    7. '10' → logprob: -14.12571907043457
    8. ' ' → logprob: -14.37571907043457
    9. '000' → logprob: -15.50071907043457
    10. '5' → logprob: -15.87571907043457

Token 571: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6123425960540771
    2. '100' → logprob: -0.8623425960540771
    3. '5' → logprob: -4.112342834472656
    4. '50' → logprob: -5.237342834472656
    5. '3' → logprob: -5.362342834472656
    6. '20' → logprob: -5.487342834472656
    7. ' ' → logprob: -6.612342834472656
    8. '4' → logprob: -7.362342834472656
    9. '15' → logprob: -7.487342834472656
    10. '500' → logprob: -7.862342834472656

Token 572: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.21258050203323364
    2. '100' → logprob: -1.7125804424285889
    3. '5' → logprob: -5.337580680847168
    4. '20' → logprob: -6.212580680847168
    5. '50' → logprob: -6.462580680847168
    6. '3' → logprob: -7.337580680847168
    7. ' ' → logprob: -7.837580680847168
    8. '2' → logprob: -7.962580680847168
    9. '9' → logprob: -8.587580680847168
    10. '15' → logprob: -8.837580680847168

Token 573: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0497996807098389
    2. '5' → logprob: -1.5497996807098389
    3. '3' → logprob: -1.7997996807098389
    4. '4' → logprob: -1.7997996807098389
    5. '7' → logprob: -3.049799680709839
    6. '2' → logprob: -3.299799680709839
    7. '8' → logprob: -4.799799919128418
    8. '**' → logprob: -5.049799919128418
    9. '9' → logprob: -6.299799919128418
    10. '14' → logprob: -6.299799919128418

Token 574: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.59884113073349
    2. '7' → logprob: -1.5988411903381348
    3. '9' → logprob: -2.2238411903381348
    4. '5' → logprob: -2.7238411903381348
    5. '8' → logprob: -3.7238411903381348
    6. '3' → logprob: -3.7238411903381348
    7. '4' → logprob: -4.223841190338135
    8. '12' → logprob: -5.223841190338135
    9. '10' → logprob: -5.848841190338135
    10. '2' → logprob: -6.348841190338135

Token 575: '15' (ID: 1055)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5601651072502136
    2. '7' → logprob: -1.5601651668548584
    3. '9' → logprob: -2.1851651668548584
    4. '5' → logprob: -3.3101651668548584
    5. '8' → logprob: -3.5601651668548584
    6. '12' → logprob: -3.8101651668548584
    7. '3' → logprob: -4.810164928436279
    8. '4' → logprob: -5.435164928436279
    9. '10' → logprob: -5.435164928436279
    10. '14' → logprob: -7.560164928436279

Token 576: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3276948034763336
    2. ' //' → logprob: -2.577694892883301
    3. '//' → logprob: -2.577694892883301
    4. ')//' → logprob: -3.452694892883301
    5. '6' → logprob: -3.952694892883301
    6. '   ' → logprob: -4.202694892883301
    7. ' )' → logprob: -4.452694892883301
    8. ' ' → logprob: -4.702694892883301
    9. '))' → logprob: -5.077694892883301
    10. '7' → logprob: -5.202694892883301

Token 577: ' ' (ID: 220)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.009079890325665474
    2. ' candidate' → logprob: -4.884079933166504
    3. '1' → logprob: -6.884079933166504
    4. '(candidate' → logprob: -8.509079933166504
    5. 'adj' → logprob: -9.134079933166504
    6. '   ' → logprob: -9.509079933166504
    7. '100' → logprob: -11.009079933166504
    8. 'int' → logprob: -11.009079933166504
    9. '10' → logprob: -12.009079933166504
    10. ' ' → logprob: -12.384079933166504

Token 578: '1' (ID: 16)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0010836597066372633
    2. ' candidate' → logprob: -7.376083850860596
    3. '(candidate' → logprob: -8.501083374023438
    4. '1' → logprob: -8.751083374023438
    5. '   ' → logprob: -9.876083374023438
    6. '100' → logprob: -11.501083374023438
    7. 'adj' → logprob: -11.626083374023438
    8. 'int' → logprob: -12.126083374023438
    9. '10' → logprob: -12.251083374023438
    10. '(' → logprob: -12.876083374023438

Token 579: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0065139289945364
    2. ')//' → logprob: -5.256514072418213
    3. ' )' → logprob: -6.881514072418213
    4. '))' → logprob: -8.506513595581055
    5. '   ' → logprob: -10.881513595581055
    6. '//' → logprob: -12.131513595581055
    7. ' //' → logprob: -12.381513595581055
    8. '))
' → logprob: -12.381513595581055
    9. 'candidate' → logprob: -12.756513595581055
    10. ')
' → logprob: -12.881513595581055

Token 580: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31597086787223816
    2. ')
' → logprob: -1.3159708976745605
    3. ' )' → logprob: -6.9409708976745605
    4. ' )
' → logprob: -6.9409708976745605
    5. ')+' → logprob: -7.5659708976745605
    6. '   ' → logprob: -9.315970420837402
    7. '       ' → logprob: -10.190970420837402
    8. ')

' → logprob: -10.440970420837402
    9. ')//' → logprob: -10.815970420837402
    10. ')
' → logprob: -10.940970420837402

Token 581: ' adjacent' (ID: 39069)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00026848804554902017
    2. ' candidate' → logprob: -8.250268936157227
    3. '(candidate' → logprob: -12.375268936157227
    4. 'adj' → logprob: -12.750268936157227
    5. '_candidate' → logprob: -16.250268936157227
    6. 'c' → logprob: -17.875268936157227
    7. '   ' → logprob: -18.750268936157227
    8. ' ' → logprob: -18.750268936157227
    9. 'andidate' → logprob: -19.375268936157227
    10. '     ' → logprob: -19.375268936157227

Token 582: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.5048530030981055e-06
    2. 'l' → logprob: -13.750001907348633
    3. 'adj' → logprob: -15.250001907348633
    4. ')' → logprob: -17.500001907348633
    5. '```' → logprob: -17.625001907348633
    6. '
' → logprob: -18.375001907348633
    7. '_' → logprob: -18.500001907348633
    8. '[' → logprob: -18.500001907348633
    9. '\' → logprob: -18.500001907348633
    10. '_candidate' → logprob: -18.875001907348633

Token 583: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.1186566047836095e-05
    2. 'cms' → logprob: -11.250031471252441
    3. 'c' → logprob: -11.625031471252441
    4. '   ' → logprob: -12.625031471252441
    5. 'CM' → logprob: -12.625031471252441
    6. 'm' → logprob: -13.875031471252441
    7. 'adj' → logprob: -14.000031471252441
    8. 'cmb' → logprob: -16.125030517578125
    9. '_cm' → logprob: -16.125030517578125
    10. 'cmd' → logprob: -16.375030517578125

Token 584: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5268834233283997
    2. ')
' → logprob: -0.9018834233283997
    3. ')+' → logprob: -6.026883602142334
    4. '       ' → logprob: -7.651883602142334
    5. '+' → logprob: -7.651883602142334
    6. ' )
' → logprob: -8.901883125305176
    7. ' +' → logprob: -9.026883125305176
    8. ' )' → logprob: -9.776883125305176
    9. ')

' → logprob: -10.151883125305176
    10. '   ' → logprob: -10.901883125305176

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048766084015369415
    2. '
' → logprob: -3.4237661361694336
    3. ' 
' → logprob: -5.173766136169434
    4. '        
' → logprob: -5.548766136169434
    5. ' candidate' → logprob: -6.173766136169434
    6. '<|end|>' → logprob: -6.548766136169434
    7. 'candidate' → logprob: -6.798766136169434
    8. '(candidate' → logprob: -9.173766136169434
    9. '  
' → logprob: -9.423766136169434
    10. '_candidate' → logprob: -9.423766136169434

Token 586: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.08149723708629608
    2. 'candidate' (adapté à ' candidate') → logprob: -2.5814971923828125
    3. ' adjacent' → logprob: -5.9564971923828125
    4. 'adj' → logprob: -11.956497192382812
    5. ' candidat' → logprob: -12.331497192382812
    6. '_candidate' → logprob: -13.206497192382812
    7. '(candidate' → logprob: -13.706497192382812
    8. ' 
' → logprob: -14.331497192382812
    9. ' ' → logprob: -15.831497192382812
    10. ' candidato' → logprob: -16.331497192382812

Token 587: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.440506407059729e-05
    2. 'result' → logprob: -10.75003433227539
    3. '_candidate' → logprob: -12.00003433227539
    4. '_' → logprob: -12.62503433227539
    5. '_results' → logprob: -14.12503433227539
    6. '_value' → logprob: -14.87503433227539
    7. ' _' → logprob: -15.12503433227539
    8. '   ' → logprob: -15.25003433227539
    9. '_res' → logprob: -15.37503433227539
    10. 'Result' → logprob: -15.37503433227539

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6350443363189697
    2. '=' → logprob: -0.8850443363189697
    3. ' *=' → logprob: -3.8850443363189697
    4. '*=' → logprob: -4.135044097900391
    5. '+=' → logprob: -4.260044097900391
    6. ' +=' → logprob: -5.010044097900391
    7. '-=' → logprob: -10.63504409790039
    8. ' -=' → logprob: -11.63504409790039
    9. ' ' → logprob: -11.63504409790039
    10. '*' → logprob: -12.26004409790039

Token 589: ' multiplier' (ID: 61814)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.05566398799419403
    2. ' adjacent' → logprob: -2.9306640625
    3. 'mult' → logprob: -7.9306640625
    4. ' multip' → logprob: -8.6806640625
    5. 'multip' → logprob: -9.1806640625
    6. 'random' → logprob: -9.9306640625
    7. ' multiplier' → logprob: -10.5556640625
    8. '(adj' → logprob: -10.5556640625
    9. '   ' → logprob: -11.1806640625
    10. ' random' → logprob: -11.8056640625

Token 590: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20158368349075317
    2. '*' → logprob: -1.7015836238861084
    3. ' ' → logprob: -8.826583862304688
    4. ' ' → logprob: -10.826583862304688
    5. '*object' → logprob: -13.951583862304688
    6. '   ' → logprob: -14.076583862304688
    7. '**' → logprob: -14.576583862304688
    8. '  ' → logprob: -14.701583862304688
    9. '```' → logprob: -15.326583862304688
    10. '[' → logprob: -15.576583862304688

Token 591: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.011049000546336174
    2. ' adjacent' → logprob: -4.511048793792725
    3. '(adj' → logprob: -14.011049270629883
    4. '   ' → logprob: -16.136049270629883
    5. ' adj' → logprob: -16.636049270629883
    6. 'ad' → logprob: -16.761049270629883
    7. ' adjacency' → logprob: -17.261049270629883
    8. 'Adjacent' → logprob: -17.261049270629883
    9. '_adj' → logprob: -17.761049270629883
    10. ' ' → logprob: -17.886049270629883

Token 592: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0002506111632101238
    2. 'l' → logprob: -8.875250816345215
    3. 'cm' → logprob: -9.250250816345215
    4. 'c' → logprob: -12.000250816345215
    5. 'cl' → logprob: -12.750250816345215
    6. 'adj' → logprob: -12.750250816345215
    7. '_c' → logprob: -14.250250816345215
    8. 'lc' → logprob: -15.000250816345215
    9. 'cms' → logprob: -15.375250816345215
    10. 'cd' → logprob: -15.500250816345215

Token 593: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -9.674858301877975e-05
    2. 'm' → logprob: -10.000096321105957
    3. 'adj' → logprob: -10.750096321105957
    4. 'c' → logprob: -10.875096321105957
    5. ' adjacent' → logprob: -12.500096321105957
    6. 'cms' → logprob: -13.125096321105957
    7. 'CM' → logprob: -13.250096321105957
    8. 'cmb' → logprob: -14.000096321105957
    9. '```' → logprob: -14.500096321105957
    10. 'cmath' → logprob: -15.000096321105957

Token 594: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.48042988777160645
    2. '+' → logprob: -1.3554298877716064
    3. '<|end|>' → logprob: -2.1054298877716064
    4. '<|end|>' → logprob: -6.730429649353027
    5. ' ' → logprob: -8.605429649353027
    6. ')' → logprob: -8.730429649353027
    7. '   ' → logprob: -9.480429649353027
    8. ' 
' → logprob: -9.730429649353027
    9. 'while' → logprob: -10.980429649353027
    10. ')+' → logprob: -11.105429649353027

Token 595: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. ' ' → logprob: -8.875142097473145
    3. 'random' → logprob: -13.500142097473145
    4. ' random' → logprob: -14.875142097473145
    5. 'adj' → logprob: -15.500142097473145
    6. 'candidate' → logprob: -16.12514305114746
    7. '
' → logprob: -16.62514305114746
    8. '(' → logprob: -17.12514305114746
    9. '10' → logprob: -17.37514305114746
    10. '+' → logprob: -17.75014305114746

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. 'random' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.125012397766113
    4. ' random' → logprob: -15.625012397766113
    5. 'candidate' → logprob: -16.00001335144043
    6. '(random' → logprob: -16.75001335144043
    7. '
' → logprob: -17.12501335144043
    8. '0' → logprob: -17.12501335144043
    9. '[random' → logprob: -17.62501335144043
    10. '

' → logprob: -17.75001335144043

Token 597: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 598: '   ' (ID: 271)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.27637267112731934
    2. '   ' → logprob: -1.5263726711273193
    3. ' matrix' → logprob: -3.7763726711273193
    4. '    
' → logprob: -7.401372909545898
    5. '	matrix' → logprob: -8.651372909545898
    6. ')' → logprob: -8.901372909545898
    7. ' 
' → logprob: -9.651372909545898
    8. 'token' → logprob: -10.026372909545898
    9. '
' → logprob: -10.526372909545898
    10. 'if' → logprob: -10.651372909545898

Token 599: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.0015715183690190315
    2. 'used' → logprob: -6.8765716552734375
    3. '   ' → logprob: -7.6265716552734375
    4. ' matrix' → logprob: -10.126571655273438
    5. 'candidate' → logprob: -12.376571655273438
    6. 'while' → logprob: -12.501571655273438
    7. '
' → logprob: -13.251571655273438
    8. '	matrix' → logprob: -14.626571655273438
    9. ' used' → logprob: -15.001571655273438
    10. '    
' → logprob: -15.251571655273438

Token 600: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -4.320199877838604e-07
    2. 'elements' → logprob: -15.625
    3. '_ELEMENTS' → logprob: -16.75
    4. 'Elements' → logprob: -17.375
    5. '_' → logprob: -18.125
    6. '[_' → logprob: -18.375
    7. ' _' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '[' → logprob: -19.0
    10. '_entities' → logprob: -19.0

Token 601: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. 'row' → logprob: -20.0
    4. ' [' → logprob: -20.125
    5. ',row' → logprob: -20.375
    6. '```' → logprob: -20.5
    7. '=row' → logprob: -20.625
    8. '(row' → logprob: -20.625
    9. '[col' → logprob: -20.875
    10. '[user' → logprob: -21.0

Token 602: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00024406595912296325
    2. 'pos' → logprob: -8.500244140625
    3. 'Pos' → logprob: -10.625244140625
    4. '[pos' → logprob: -12.000244140625
    5. '[' → logprob: -13.250244140625
    6. '][' → logprob: -13.375244140625
    7. 'elements' → logprob: -13.750244140625
    8. '_positions' → logprob: -13.750244140625
    9. '[row' → logprob: -14.000244140625
    10. '_elements' → logprob: -14.125244140625

Token 603: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0069931307807564735
    2. '[col' → logprob: -5.006993293762207
    3. '[row' → logprob: -8.381993293762207
    4. ' ][' → logprob: -11.131993293762207
    5. '[' → logprob: -11.381993293762207
    6. ')[' → logprob: -12.256993293762207
    7. ']' → logprob: -12.256993293762207
    8. '}[' → logprob: -12.506993293762207
    9. '"][' → logprob: -13.131993293762207
    10. ']][' → logprob: -13.631993293762207

Token 604: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.0802738870552275e-05
    2. ' col' → logprob: -11.50001049041748
    3. '[col' → logprob: -15.75001049041748
    4. '(col' → logprob: -16.500011444091797
    5. '	col' → logprob: -16.750011444091797
    6. '   ' → logprob: -17.000011444091797
    7. 'column' → logprob: -17.500011444091797
    8. 'colm' → logprob: -17.500011444091797
    9. '_col' → logprob: -17.750011444091797
    10. 'pos' → logprob: -18.000011444091797

Token 605: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.21111784875392914
    2. 'pos' → logprob: -1.8361178636550903
    3. 'os' → logprob: -3.711117744445801
    4. 'col' → logprob: -5.211117744445801
    5. '_col' → logprob: -7.461117744445801
    6. 'ol' → logprob: -8.8361177444458
    7. '[col' → logprob: -9.4611177444458
    8. 'Pos' → logprob: -10.2111177444458
    9. '_positions' → logprob: -10.7111177444458
    10. '_elements' → logprob: -10.9611177444458

Token 606: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410938143730164
    2. ' =' → logprob: -0.974109411239624
    3. ']' → logprob: -10.849109649658203
    4. ')' → logprob: -11.474109649658203
    5. ']=' → logprob: -13.474109649658203
    6. ')=' → logprob: -14.224109649658203
    7. '   ' → logprob: -15.724109649658203
    8. ' ' → logprob: -16.849109649658203
    9. ' ]' → logprob: -17.224109649658203
    10. ',' → logprob: -17.224109649658203

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '=

' → logprob: -18.15475082397461
    4. '=
' → logprob: -18.65475082397461
    5. '.=' → logprob: -19.27975082397461
    6. '＝' → logprob: -19.40475082397461
    7. '   ' → logprob: -19.52975082397461
    8. '=int' → logprob: -20.27975082397461
    9. '=}' → logprob: -20.90475082397461
    10. ' ' → logprob: -21.02975082397461

Token 608: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.16022473573684692
    2. ' candidate' → logprob: -1.9102246761322021
    3. '(candidate' → logprob: -15.535224914550781
    4. '   ' → logprob: -15.660224914550781
    5. 'c' → logprob: -16.16022491455078
    6. ' candidat' → logprob: -16.91022491455078
    7. '_candidate' → logprob: -17.66022491455078
    8. 'cand' → logprob: -18.16022491455078
    9. '候' → logprob: -18.66022491455078
    10. ' candidato' → logprob: -18.78522491455078

Token 609: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.8624639324116288e-06
    2. 'result' → logprob: -14.125001907348633
    3. '_results' → logprob: -14.625001907348633
    4. '_' → logprob: -14.750001907348633
    5. '_candidate' → logprob: -16.625001907348633
    6. ' _' → logprob: -17.000001907348633
    7. '_res' → logprob: -17.125001907348633
    8. '_RESULT' → logprob: -17.250001907348633
    9. '_value' → logprob: -17.875001907348633
    10. 'Result' → logprob: -19.000001907348633

Token 610: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -2.339278580620885e-06
    2. ' used' → logprob: -13.000001907348633
    3. '.used' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '_used' → logprob: -21.250001907348633
    6. '-used' → logprob: -22.375001907348633
    7. 'Used' → logprob: -22.500001907348633
    8. 'print' → logprob: -22.750001907348633
    9. 'USED' → logprob: -23.750001907348633
    10. '```' → logprob: -25.000001907348633

Token 613: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.318681188422488e-05
    2. '_' → logprob: -11.50001335144043
    3. ' _' → logprob: -14.50001335144043
    4. '._' → logprob: -14.62501335144043
    5. '```' → logprob: -14.62501335144043
    6. 'Numbers' → logprob: -15.00001335144043
    7. '_number' → logprob: -15.25001335144043
    8. '_n' → logprob: -15.50001335144043
    9. '_tokens' → logprob: -15.62501335144043
    10. ')_' → logprob: -15.75001335144043

Token 614: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002615742268972099
    2. '.' → logprob: -8.250261306762695
    3. '.update' → logprob: -15.250261306762695
    4. '.append' → logprob: -17.250261306762695
    5. '_add' → logprob: -17.375261306762695
    6. 'add' → logprob: -17.500261306762695
    7. '.Add' → logprob: -17.500261306762695
    8. '.setdefault' → logprob: -18.000261306762695
    9. '.insert' → logprob: -18.375261306762695
    10. ' .' → logprob: -18.625261306762695

Token 615: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. 'candidate' → logprob: -15.750000953674316
    4. ' candidate' → logprob: -19.125
    5. '(c' → logprob: -20.75
    6. '(
' → logprob: -21.0
    7. '_candidate' → logprob: -21.5
    8. ' (' → logprob: -22.25
    9. '(agent' → logprob: -23.375
    10. '(matrix' → logprob: -23.5

Token 616: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.610702363715973e-06
    2. 'result' → logprob: -11.625009536743164
    3. '_results' → logprob: -14.500009536743164
    4. 'Result' → logprob: -16.625009536743164
    5. '_RESULT' → logprob: -17.625009536743164
    6. '_res' → logprob: -18.000009536743164
    7. '_candidate' → logprob: -18.375009536743164
    8. '_' → logprob: -19.750009536743164
    9. '$result' → logprob: -20.000009536743164
    10. ' result' → logprob: -20.000009536743164

Token 617: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3884773552417755
    2. 'print' → logprob: -1.1384773254394531
    3. '<|end|>' → logprob: -6.513477325439453
    4. ' for' → logprob: -10.138477325439453
    5. 'return' → logprob: -10.888477325439453
    6. 'import' → logprob: -11.263477325439453
    7. '```' → logprob: -11.513477325439453
    8. '#' → logprob: -11.513477325439453
    9. ')' → logprob: -11.638477325439453
    10. 'matrix' → logprob: -11.763477325439453

Token 619: ' idx' (ID: 14016)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.00272831367328763
    2. 'row' → logprob: -6.002728462219238
    3. ' ' → logprob: -9.252728462219238
    4. ' idx' → logprob: -9.627728462219238
    5. '	row' → logprob: -10.502728462219238
    6. '_' → logprob: -10.627728462219238
    7. ' _' → logprob: -10.752728462219238
    8. ' r' → logprob: -12.127728462219238
    9. ' i' → logprob: -12.252728462219238
    10. '   ' → logprob: -13.002728462219238

Token 620: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0010940231150016189
    2. '_' → logprob: -7.001093864440918
    3. 'row' → logprob: -9.501093864440918
    4. ' in' → logprob: -9.751093864440918
    5. '_col' → logprob: -11.501093864440918
    6. ' row' → logprob: -11.501093864440918
    7. '```' → logprob: -11.876093864440918
    8. '_matrix' → logprob: -12.626093864440918
    9. '	row' → logprob: -12.751093864440918
    10. ',' → logprob: -12.876093864440918

Token 621: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11285968869924545
    2. 'in' → logprob: -2.2378597259521484
    3. ',' → logprob: -11.112859725952148
    4. '	in' → logprob: -12.112859725952148
    5. '_in' → logprob: -12.487859725952148
    6. 'range' → logprob: -12.737859725952148
    7. ' ' → logprob: -13.112859725952148
    8. '<|end|>' → logprob: -13.612859725952148
    9. 'In' → logprob: -13.737859725952148
    10. '```' → logprob: -13.862859725952148

Token 622: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029765060171484947
    2. ' range' → logprob: -3.5297651290893555
    3. 'matrix' → logprob: -11.154765129089355
    4. ' matrix' → logprob: -16.27976417541504
    5. '   ' → logprob: -16.52976417541504
    6. '  ' → logprob: -16.77976417541504
    7. ' ' → logprob: -17.15476417541504
    8. '	range' → logprob: -18.65476417541504
    9. '(range' → logprob: -19.27976417541504
    10. '    ' → logprob: -20.77976417541504

Token 623: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.2586531639099121
    2. 'matrix' → logprob: -1.508653163909912
    3. ' matrix' → logprob: -5.008653163909912
    4. '(' → logprob: -11.13365364074707
    5. '	matrix' → logprob: -12.25865364074707
    6. '0' → logprob: -13.38365364074707
    7. ' (' → logprob: -15.38365364074707
    8. '(len' → logprob: -15.38365364074707
    9. '_matrix' → logprob: -15.75865364074707
    10. '(
' → logprob: -15.88365364074707

Token 624: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -5.9153885558771435e-06
    2. 'size' → logprob: -12.625005722045898
    3. '_' → logprob: -13.750005722045898
    4. '_s' → logprob: -14.625005722045898
    5. '_SIZE' → logprob: -15.000005722045898
    6. ' size' → logprob: -15.750005722045898
    7. ')' → logprob: -15.750005722045898
    8. '_matrix' → logprob: -16.0000057220459
    9. '```' → logprob: -16.3750057220459
    10. '[' → logprob: -16.8750057220459

Token 625: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6326767206192017
    2. '):' → logprob: -0.7576767206192017
    3. ':' → logprob: -10.25767707824707
    4. '):
' → logprob: -10.75767707824707
    5. '   ' → logprob: -11.75767707824707
    6. '+' → logprob: -13.25767707824707
    7. ')' → logprob: -13.38267707824707
    8. ':
' → logprob: -13.63267707824707
    9. ' ):' → logprob: -13.63267707824707
    10. ' ):
' → logprob: -13.63267707824707

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.368984107510187e-05
    2. 'print' → logprob: -10.375033378601074
    3. ' print' → logprob: -13.125033378601074
    4. 'for' → logprob: -16.00003433227539
    5. '...' → logprob: -16.25003433227539
    6. '       ' → logprob: -16.50003433227539
    7. '	print' → logprob: -17.12503433227539
    8. '```' → logprob: -17.87503433227539
    9. '   ' → logprob: -18.00003433227539
    10. ' for' → logprob: -18.50003433227539

Token 627: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25730279088020325
    2. ' print' → logprob: -1.7573027610778809
    3. '   ' → logprob: -3.007302761077881
    4. 'for' → logprob: -5.632302761077881
    5. ' for' → logprob: -6.882302761077881
    6. ' row' → logprob: -8.632303237915039
    7. 'row' → logprob: -8.882303237915039
    8. '    
' → logprob: -13.132303237915039
    9. '    ' → logprob: -13.382303237915039
    10. '	print' → logprob: -14.257303237915039

Token 628: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6951233744621277
    2. '(*' → logprob: -1.1951234340667725
    3. '("' → logprob: -2.1951234340667725
    4. '('' → logprob: -2.4451234340667725
    5. '(
' → logprob: -8.320123672485352
    6. '()' → logprob: -12.445123672485352
    7. '(

' → logprob: -12.695123672485352
    8. '(*)' → logprob: -13.070123672485352
    9. '(*(' → logprob: -13.320123672485352
    10. '("*' → logprob: -13.320123672485352

Token 629: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8272011280059814
    2. ''' → logprob: -0.8272011280059814
    3. '*' → logprob: -2.0772011280059814
    4. ''m' → logprob: -10.077200889587402
    5. ' '' → logprob: -10.077200889587402
    6. ' "' → logprob: -10.452200889587402
    7. ' *' → logprob: -11.077200889587402
    8. '"*' → logprob: -11.577200889587402
    9. '*"' → logprob: -11.702200889587402
    10. '   ' → logprob: -11.702200889587402

Token 630: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0087516784551553e-05
    2. ' join' → logprob: -11.87501049041748
    3. 'print' → logprob: -13.00001049041748
    4. 'j' → logprob: -14.12501049041748
    5. '.' → logprob: -16.250009536743164
    6. '.join' → logprob: -17.125009536743164
    7. 'jo' → logprob: -17.250009536743164
    8. ')' → logprob: -18.500009536743164
    9. '```' → logprob: -18.625009536743164
    10. '(join' → logprob: -19.250009536743164

Token 631: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.004570154007524252
    2. '[str' → logprob: -6.254570007324219
    3. '(map' → logprob: -6.254570007324219
    4. 'str' → logprob: -7.254570007324219
    5. 'map' → logprob: -11.754570007324219
    6. '(' → logprob: -13.754570007324219
    7. '	str' → logprob: -15.754570007324219
    8. '=str' → logprob: -15.754570007324219
    9. ' str' → logprob: -15.879570007324219
    10. '([' → logprob: -16.25457000732422

Token 632: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00037192381569184363
    2. 'str' → logprob: -8.000371932983398
    3. '(' → logprob: -10.250371932983398
    4. '(
' → logprob: -14.375371932983398
    5. '[str' → logprob: -15.000371932983398
    6. ' str' → logprob: -15.375371932983398
    7. '=str' → logprob: -17.1253719329834
    8. '	str' → logprob: -17.7503719329834
    9. ')' → logprob: -18.3753719329834
    10. '```' → logprob: -18.6253719329834

Token 633: ',' (ID: 11)
  Prédit: '(matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.00019018957391381264
    2. ',' → logprob: -8.750189781188965
    3. 'matrix' → logprob: -11.250189781188965
    4. '(' → logprob: -11.625189781188965
    5. ' (' → logprob: -12.125189781188965
    6. ' matrix' → logprob: -13.125189781188965
    7. '	matrix' → logprob: -13.625189781188965
    8. ',m' → logprob: -14.625189781188965
    9. '(mat' → logprob: -15.625189781188965
    10. '(
' → logprob: -15.750189781188965

Token 634: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.002551050391048193
    2. ' matrix' → logprob: -6.002551078796387
    3. '(matrix' → logprob: -9.502551078796387
    4. '	matrix' → logprob: -14.252551078796387
    5. '   ' → logprob: -18.25255012512207
    6. '.matrix' → logprob: -19.87755012512207
    7. 'mat' → logprob: -20.62755012512207
    8. 'm' → logprob: -21.00255012512207
    9. '_matrix' → logprob: -21.50255012512207
    10. ' ' → logprob: -21.87755012512207

Token 635: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.000433291686931625
    2. 'elements' → logprob: -7.750433444976807
    3. 'Elements' → logprob: -13.250432968139648
    4. '[row' → logprob: -14.625432968139648
    5. '[_' → logprob: -16.12543296813965
    6. '_ELEMENTS' → logprob: -16.50043296813965
    7. '_[' → logprob: -17.37543296813965
    8. ' Elements' → logprob: -17.37543296813965
    9. ' elements' → logprob: -17.62543296813965
    10. '```' → logprob: -17.75043296813965

Token 636: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.5
    3. '[row' → logprob: -16.5
    4. ' [' → logprob: -16.75
    5. '[
' → logprob: -16.875
    6. '[id' → logprob: -17.625
    7. 'idx' → logprob: -17.875
    8. ')[' → logprob: -18.5
    9. '   ' → logprob: -18.625
    10. '```' → logprob: -19.0

Token 637: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.000891928793862462
    2. '_idx' → logprob: -7.625892162322998
    3. 'row' → logprob: -8.00089168548584
    4. 'ow' → logprob: -10.37589168548584
    5. '_col' → logprob: -11.25089168548584
    6. '[row' → logprob: -11.75089168548584
    7. '][' → logprob: -12.37589168548584
    8. 'Row' → logprob: -13.12589168548584
    9. 'idx' → logprob: -13.62589168548584
    10. '```' → logprob: -13.75089168548584

Token 638: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -4.692145012086257e-05
    2. '))' → logprob: -10.500046730041504
    3. ' ' → logprob: -11.625046730041504
    4. ')' → logprob: -12.125046730041504
    5. '))))' → logprob: -13.000046730041504
    6. ')))
' → logprob: -13.250046730041504
    7. ')));' → logprob: -14.625046730041504
    8. ']))' → logprob: -15.375046730041504
    9. '())))' → logprob: -16.50004768371582
    10. '   ' → logprob: -17.00004768371582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 636
Tokens correctement prédits (1ère position, stricte): 338
Tokens correctement prédits (1ère position, avec adaptation): 347
Tokens correctement prédits (top 10): 545
Précision stricte (1ère position): 53.14%
Précision adaptée (1ère position): 54.56%
Précision (top 10): 85.69%
================================================================================
