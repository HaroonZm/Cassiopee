================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num_nodes, num_edges = map(int, input().split())
segment_limits = [200000 for idx in range(num_nodes - 1)]

for edge_idx in range(num_edges):
    node_a, node_b = map(int, input().split())
    segment_limits[node_a - 1] = min(segment_limits[node_a - 1], node_b - 2)

current_right = -1
segment_count = 0

for segment_idx in range(num_nodes - 1):
    if segment_idx > current_right and segment_limits[segment_idx] != 200000:
        segment_count += 1
        current_right = segment_limits[segment_idx]
    elif segment_idx <= current_right and segment_limits[segment_idx] != 200000:
        current_right = min(segment_limits[segment_idx], current_right)

print(segment_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: '_nodes' (ID: 34593)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6440140008926392
    2. '_' → logprob: -2.2690138816833496
    3. ' num' → logprob: -2.2690138816833496
    4. '=' → logprob: -2.5190138816833496
    5. 'num' → logprob: -2.8940138816833496
    6. '_num' → logprob: -3.7690138816833496
    7. ' =' → logprob: -4.01901388168335
    8. '_size' → logprob: -4.51901388168335
    9. ',' → logprob: -5.01901388168335
    10. ' _' → logprob: -5.01901388168335

Token 4: '_edges' (ID: 68870)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10601405799388885
    2. '_nodes' → logprob: -2.3560140132904053
    3. '_edges' → logprob: -6.106014251708984
    4. '_layers' → logprob: -6.981014251708984
    5. 's' → logprob: -7.106014251708984
    6. '_s' → logprob: -7.231014251708984
    7. '_tokens' → logprob: -9.356014251708984
    8. '_n' → logprob: -9.356014251708984
    9. '```' → logprob: -9.356014251708984
    10. '_features' → logprob: -9.481014251708984

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19596406817436218
    2. ',' → logprob: -1.8209640979766846
    3. '_' → logprob: -4.5709638595581055
    4. ' =' → logprob: -5.8209638595581055
    5. ':' → logprob: -6.5709638595581055
    6. '(' → logprob: -7.4459638595581055
    7. ')' → logprob: -8.195963859558105
    8. '```' → logprob: -8.445963859558105
    9. '.' → logprob: -9.570963859558105
    10. ';' → logprob: -9.695963859558105

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6731791496276855
    2. ' map' → logprob: -0.7981791496276855
    3. ' graph' → logprob: -3.6731791496276855
    4. '0' → logprob: -4.9231791496276855
    5. 'map' → logprob: -5.5481791496276855
    6. ' num' → logprob: -6.6731791496276855
    7. ' nodes' → logprob: -7.7981791496276855
    8. ' node' → logprob: -7.9231791496276855
    9. 'graph' → logprob: -8.173179626464844
    10. ' len' → logprob: -8.548179626464844

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39887580275535583
    2. '(int' → logprob: -1.8988758325576782
    3. '(lambda' → logprob: -2.1488757133483887
    4. '<|end|>' → logprob: -3.0238757133483887
    5. '(str' → logprob: -5.648875713348389
    6. '<|end|>' → logprob: -6.523875713348389
    7. '```' → logprob: -6.898875713348389
    8. ')' → logprob: -7.023875713348389
    9. '(range' → logprob: -7.148875713348389
    10. '(len' → logprob: -7.273875713348389

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.025786126032471657
    2. '(' → logprob: -4.27578592300415
    3. ')' → logprob: -4.90078592300415
    4. 'input' → logprob: -5.65078592300415
    5. '(user' → logprob: -8.400786399841309
    6. ' input' → logprob: -9.025786399841309
    7. '('' → logprob: -9.775786399841309
    8. '[input' → logprob: -10.525786399841309
    9. '(raw' → logprob: -10.650786399841309
    10. '`)' → logprob: -11.275786399841309

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014511525630951
    2. ' input' → logprob: -1.7014511823654175
    3. ')' → logprob: -10.451451301574707
    4. '(input' → logprob: -11.951451301574707
    5. ',input' → logprob: -13.701451301574707
    6. ' )' → logprob: -14.826451301574707
    7. '<input' → logprob: -15.201451301574707
    8. '=input' → logprob: -15.576451301574707
    9. '[input' → logprob: -16.45145034790039
    10. '```' → logprob: -16.45145034790039

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5497587323188782
    2. '())' → logprob: -1.1747586727142334
    3. '().' → logprob: -2.1747586727142334
    4. ')' → logprob: -9.174758911132812
    5. '()`' → logprob: -10.174758911132812
    6. '());' → logprob: -10.299758911132812
    7. '();)' → logprob: -10.674758911132812
    8. '()))' → logprob: -10.799758911132812
    9. '(' → logprob: -10.799758911132812
    10. '()[' → logprob: -10.924758911132812

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007195804500952363
    2. 'strip' → logprob: -7.2507195472717285
    3. 'rstrip' → logprob: -12.125720024108887
    4. 'read' → logprob: -13.125720024108887
    5. ' split' → logprob: -13.250720024108887
    6. '(split' → logprob: -14.750720024108887
    7. 'startswith' → logprob: -16.75071907043457
    8. 'spl' → logprob: -16.75071907043457
    9. 'replace' → logprob: -17.87571907043457
    10. '```' → logprob: -18.25071907043457

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6074564456939697
    2. ')' → logprob: -0.8574564456939697
    3. '))' → logprob: -3.8574564456939697
    4. '()' → logprob: -5.232456207275391
    5. '()))' → logprob: -5.732456207275391
    6. '(' → logprob: -6.982456207275391
    7. '('' → logprob: -8.60745620727539
    8. '`)' → logprob: -9.10745620727539
    9. ' ())' → logprob: -11.10745620727539
    10. '(""))' → logprob: -11.35745620727539

Token 13: 'segment' (ID: 45362)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4992002248764038
    2. ')' → logprob: -1.6242002248764038
    3. 'num' → logprob: -1.9992002248764038
    4. 'for' → logprob: -2.6242003440856934
    5. '\n' → logprob: -2.7492003440856934
    6. 'a' → logprob: -3.1242003440856934
    7. 'nodes' → logprob: -3.2492003440856934
    8. '```' → logprob: -3.3742003440856934
    9. '`' → logprob: -3.4992003440856934
    10. ',' → logprob: -3.4992003440856934

Token 14: '_limits' (ID: 80205)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3772395849227905
    2. '_' → logprob: -1.5022395849227905
    3. '_tree' → logprob: -2.50223970413208
    4. '_size' → logprob: -5.75223970413208
    5. '_s' → logprob: -6.50223970413208
    6. '_sizes' → logprob: -7.25223970413208
    7. '_lengths' → logprob: -7.62723970413208
    8. '[' → logprob: -7.62723970413208
    9. '_nodes' → logprob: -7.75223970413208
    10. '_ids' → logprob: -7.87723970413208

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14463001489639282
    2. '_' → logprob: -2.519629955291748
    3. '=' → logprob: -3.394629955291748
    4. ' =' → logprob: -4.394629955291748
    5. '[:]' → logprob: -5.769629955291748
    6. '[]' → logprob: -6.519629955291748
    7. '```' → logprob: -6.769629955291748
    8. '.' → logprob: -7.144629955291748
    9. '\[' → logprob: -8.394630432128906
    10. ',' → logprob: -8.894630432128906

Token 16: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34795549511909485
    2. ' [' → logprob: -1.5979554653167725
    3. '[]' → logprob: -2.7229554653167725
    4. ' []' → logprob: -3.8479554653167725
    5. '[int' → logprob: -6.472955703735352
    6. '[input' → logprob: -6.847955703735352
    7. 'list' → logprob: -7.597955703735352
    8. ' list' → logprob: -7.972955703735352
    9. '[min' → logprob: -8.597955703735352
    10. '[list' → logprob: -8.847955703735352

Token 17: '200' (ID: 1179)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04227827489376068
    2. ' ' → logprob: -3.667278289794922
    3. 'int' → logprob: -4.667278289794922
    4. ']' → logprob: -6.542278289794922
    5. ' int' → logprob: -6.667278289794922
    6. '(int' → logprob: -6.792278289794922
    7. '[int' → logprob: -7.167278289794922
    8. ')' → logprob: -7.917278289794922
    9. 'list' → logprob: -8.167278289794922
    10. ' ]' → logprob: -8.417278289794922

Token 18: '000' (ID: 1302)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04362509399652481
    2. ' ,' → logprob: -3.7936251163482666
    3. '0' → logprob: -4.5436248779296875
    4. ')' → logprob: -4.9186248779296875
    5. '00' → logprob: -7.1686248779296875
    6. '000' → logprob: -7.6686248779296875
    7. ' )' → logprob: -8.418624877929688
    8. ' ' → logprob: -8.793624877929688
    9. ')]' → logprob: -8.793624877929688
    10. ',)' → logprob: -9.668624877929688

Token 19: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000954098126385361
    2. ')' → logprob: -7.8759541511535645
    3. ' ,' → logprob: -8.000953674316406
    4. '0' → logprob: -8.625953674316406
    5. ')]' → logprob: -11.250953674316406
    6. ',
' → logprob: -11.375953674316406
    7. ' ' → logprob: -11.750953674316406
    8. '00' → logprob: -12.250953674316406
    9. ']' → logprob: -12.250953674316406
    10. ',)' → logprob: -12.625953674316406

Token 20: ' idx' (ID: 14016)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.29019615054130554
    2. '_' → logprob: -1.415196180343628
    3. ' range' → logprob: -5.290195941925049
    4. ' ' → logprob: -5.915195941925049
    5. ' i' → logprob: -7.540195941925049
    6. 'range' → logprob: -7.915195941925049
    7. '_range' → logprob: -8.165196418762207
    8. 'i' → logprob: -10.290196418762207
    9. '  ' → logprob: -10.790196418762207
    10. '   ' → logprob: -11.915196418762207

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006007717456668615
    2. 'in' → logprob: -5.131007671356201
    3. ' ' → logprob: -9.63100814819336
    4. ')' → logprob: -12.75600814819336
    5. ']' → logprob: -13.00600814819336
    6. 'range' → logprob: -13.25600814819336
    7. '_' → logprob: -13.50600814819336
    8. '  ' → logprob: -14.00600814819336
    9. 'idx' → logprob: -14.50600814819336
    10. ' ]' → logprob: -14.88100814819336

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022686660289764
    2. 'range' → logprob: -1.910226821899414
    3. '	range' → logprob: -13.035226821899414
    4. ' xrange' → logprob: -15.660226821899414
    5. '_range' → logprob: -15.785226821899414
    6. '(range' → logprob: -16.535226821899414
    7. ' ' → logprob: -16.910226821899414
    8. 'Range' → logprob: -17.785226821899414
    9. '0' → logprob: -17.910226821899414
    10. 'rang' → logprob: -18.410226821899414

Token 23: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0028576552867889404
    2. '(' → logprob: -5.877857685089111
    3. 'num' → logprob: -10.627857208251953
    4. ' (' → logprob: -11.002857208251953
    5. '(len' → logprob: -11.627857208251953
    6. ' num' → logprob: -13.502857208251953
    7. '(n' → logprob: -14.252857208251953
    8. ')' → logprob: -14.627857208251953
    9. '(
' → logprob: -15.627857208251953
    10. '<num' → logprob: -15.627857208251953

Token 24: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -3.976922744186595e-05
    2. '_' → logprob: -10.750040054321289
    3. '_edges' → logprob: -11.625040054321289
    4. '_n' → logprob: -12.750040054321289
    5. ' _' → logprob: -13.000040054321289
    6. ')_' → logprob: -13.000040054321289
    7. '_node' → logprob: -14.375040054321289
    8. ')' → logprob: -14.500040054321289
    9. '_tokens' → logprob: -15.750040054321289
    10. '_s' → logprob: -16.87504005432129

Token 25: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.180879816180095e-05
    2. ']' → logprob: -10.625051498413086
    3. ')' → logprob: -11.625051498413086
    4. '])]' → logprob: -11.750051498413086
    5. ')])' → logprob: -12.000051498413086
    6. ')],' → logprob: -13.375051498413086
    7. '')]' → logprob: -13.875051498413086
    8. '])' → logprob: -14.000051498413086
    9. ' )' → logprob: -15.375051498413086
    10. '")]' → logprob: -16.125051498413086

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519688308238983
    2. ' ' → logprob: -1.5019688606262207
    3. '2' → logprob: -10.501968383789062
    4. ')' → logprob: -11.751968383789062
    5. '0' → logprob: -13.251968383789062
    6. '+' → logprob: -14.876968383789062
    7. ' )' → logprob: -14.876968383789062
    8. '  ' → logprob: -15.251968383789062
    9. '   ' → logprob: -15.376968383789062
    10. ')]' → logprob: -15.564468383789062

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023607931507285684
    2. ' ' → logprob: -8.375236511230469
    3. '2' → logprob: -12.625236511230469
    4. ')' → logprob: -13.750236511230469
    5. '0' → logprob: -14.750236511230469
    6. '   ' → logprob: -15.000236511230469
    7. '<|end|>' → logprob: -16.12523651123047
    8. '  ' → logprob: -17.06273651123047
    9. '+' → logprob: -17.37523651123047
    10. '3' → logprob: -17.56273651123047

Token 28: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.371605948312208e-05
    2. ']' → logprob: -10.500053405761719
    3. ')' → logprob: -11.500053405761719
    4. ')])' → logprob: -11.875053405761719
    5. '])]' → logprob: -12.375053405761719
    6. ')],' → logprob: -12.875053405761719
    7. '])' → logprob: -14.125053405761719
    8. '')]' → logprob: -14.375053405761719
    9. ' )' → logprob: -15.500053405761719
    10. '+' → logprob: -16.00005340576172

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8871971964836121
    2. 'num' → logprob: -2.137197256088257
    3. ')' → logprob: -2.762197256088257
    4. 'segment' → logprob: -2.762197256088257
    5. '\n' → logprob: -3.137197256088257
    6. 'max' → logprob: -3.262197256088257
    7. 'segments' → logprob: -3.262197256088257
    8. '#' → logprob: -3.512197256088257
    9. '
' → logprob: -3.637197256088257
    10. '<|end|>' → logprob: -3.762197256088257

Token 30: ' edge' (ID: 11165)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.026811083778738976
    2. ' i' → logprob: -4.276811122894287
    3. ' node' → logprob: -4.776811122894287
    4. ' _' → logprob: -6.401811122894287
    5. ' ' → logprob: -6.526811122894287
    6. ' num' → logprob: -7.901811122894287
    7. '_' → logprob: -8.026810646057129
    8. 'idx' → logprob: -8.401810646057129
    9. 'i' → logprob: -10.276810646057129
    10. ' index' → logprob: -10.401810646057129

Token 31: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014352714642882347
    2. '_' → logprob: -4.889352798461914
    3. ' ' → logprob: -5.639352798461914
    4. 's' → logprob: -6.889352798461914
    5. ' _' → logprob: -7.264352798461914
    6. 'in' → logprob: -7.389352798461914
    7. '<|end|>' → logprob: -8.639352798461914
    8. ',' → logprob: -8.764352798461914
    9. '_in' → logprob: -9.264352798461914
    10. ' ,' → logprob: -9.389352798461914

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03899332135915756
    2. 'in' → logprob: -3.2889933586120605
    3. ' ' → logprob: -7.0389933586120605
    4. ',' → logprob: -9.913992881774902
    5. ' ,' → logprob: -11.788992881774902
    6. '```' → logprob: -12.413992881774902
    7. '<|end|>' → logprob: -12.913992881774902
    8. '  ' → logprob: -13.163992881774902
    9. ')' → logprob: -13.288992881774902
    10. 'In' → logprob: -13.538992881774902

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693388760089874
    2. 'range' → logprob: -2.1269338130950928
    3. '	range' → logprob: -12.251934051513672
    4. ' xrange' → logprob: -15.001934051513672
    5. '(range' → logprob: -15.126934051513672
    6. ' ' → logprob: -15.626934051513672
    7. '_range' → logprob: -16.376934051513672
    8. '```' → logprob: -16.751934051513672
    9. 'Range' → logprob: -17.001934051513672
    10. '.range' → logprob: -17.501934051513672

Token 34: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036145627964287996
    2. '(num' → logprob: -5.87861442565918
    3. ' (' → logprob: -7.12861442565918
    4. '(len' → logprob: -12.00361442565918
    5. '(
' → logprob: -14.25361442565918
    6. ' ' → logprob: -15.25361442565918
    7. '(

' → logprob: -15.62861442565918
    8. '(n' → logprob: -15.87861442565918
    9. ')' → logprob: -17.00361442565918
    10. 'num' → logprob: -17.25361442565918

Token 35: '_edges' (ID: 68870)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.20146186649799347
    2. '_edges' → logprob: -1.701461911201477
    3. '_' → logprob: -10.451461791992188
    4. ')_' → logprob: -11.201461791992188
    5. ')' → logprob: -13.076461791992188
    6. '```' → logprob: -13.951461791992188
    7. '_)' → logprob: -14.576461791992188
    8. ' _' → logprob: -15.076461791992188
    9. '_vertices' → logprob: -15.076461791992188
    10. '_links' → logprob: -15.201461791992188

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00067966926144436
    2. ' ):' → logprob: -8.125679969787598
    3. ':' → logprob: -8.375679969787598
    4. ')' → logprob: -9.375679969787598
    5. '+' → logprob: -10.250679969787598
    6. '):
' → logprob: -10.625679969787598
    7. ']:' → logprob: -12.375679969787598
    8. ',' → logprob: -14.000679969787598
    9. '}:' → logprob: -14.125679969787598
    10. '():' → logprob: -14.375679969787598

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15874262154102325
    2. ' input' → logprob: -2.783742666244507
    3. '    ' → logprob: -3.658742666244507
    4. ' ' → logprob: -4.783742427825928
    5. ' edge' → logprob: -4.783742427825928
    6. '    
' → logprob: -4.783742427825928
    7. ' node' → logprob: -5.408742427825928
    8. ' edges' → logprob: -5.408742427825928
    9. ' 
' → logprob: -5.658742427825928
    10. ' line' → logprob: -5.908742427825928

Token 38: ' node' (ID: 4596)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.4618528187274933
    2. ' u' → logprob: -2.211852788925171
    3. ' node' → logprob: -2.211852788925171
    4. 'edge' → logprob: -2.961852788925171
    5. '   ' → logprob: -3.461852788925171
    6. ' source' → logprob: -3.836852788925171
    7. ' src' → logprob: -4.96185302734375
    8. ' line' → logprob: -5.08685302734375
    9. ' input' → logprob: -5.58685302734375
    10. ' from' → logprob: -5.71185302734375

Token 39: '_a' (ID: 10852)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21168231964111328
    2. '_u' → logprob: -2.5866823196411133
    3. '_a' → logprob: -2.9616823196411133
    4. '_' → logprob: -3.4616823196411133
    5. '_from' → logprob: -4.086682319641113
    6. 's' → logprob: -4.961682319641113
    7. 'A' → logprob: -6.211682319641113
    8. '_ids' → logprob: -6.336682319641113
    9. '_pair' → logprob: -6.836682319641113
    10. '_start' → logprob: -6.961682319641113

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029052048921585083
    2. ' ,' → logprob: -6.002905368804932
    3. '_,' → logprob: -7.877905368804932
    4. ',node' → logprob: -10.252904891967773
    5. ' ' → logprob: -12.252904891967773
    6. '‌,' → logprob: -13.252904891967773
    7. '_' → logprob: -13.627904891967773
    8. ',_' → logprob: -13.752904891967773
    9. ')' → logprob: -13.752904891967773
    10. '<|end|>' → logprob: -13.877904891967773

Token 41: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.06210056319832802
    2. 'node' → logprob: -2.812100648880005
    3. ',node' → logprob: -9.937100410461426
    4. '=node' → logprob: -10.312100410461426
    5. ' ' → logprob: -11.187100410461426
    6. '<|end|>' → logprob: -11.687100410461426
    7. '_node' → logprob: -11.937100410461426
    8. '	node' → logprob: -12.562100410461426
    9. ',' → logprob: -12.687100410461426
    10. '(node' → logprob: -13.062100410461426

Token 42: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.06389502435922623
    2. '_a' → logprob: -2.8138949871063232
    3. '_' → logprob: -6.438895225524902
    4. '_,' → logprob: -8.313895225524902
    5. 'a' → logprob: -10.813895225524902
    6. ',' → logprob: -11.063895225524902
    7. '_c' → logprob: -11.063895225524902
    8. 'b' → logprob: -11.313895225524902
    9. '```' → logprob: -12.563895225524902
    10. ',_' → logprob: -12.813895225524902

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08050023764371872
    2. '=' → logprob: -2.5805001258850098
    3. ',' → logprob: -6.45550012588501
    4. ' ' → logprob: -10.830500602722168
    5. ' ,' → logprob: -11.580500602722168
    6. ')' → logprob: -12.705500602722168
    7. '   ' → logprob: -12.955500602722168
    8. '=input' → logprob: -13.705500602722168
    9. '```' → logprob: -15.455500602722168
    10. '<|end|>' → logprob: -15.455500602722168

Token 44: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0017054134514182806
    2. 'map' → logprob: -6.376705646514893
    3. ' input' → logprob: -13.626705169677734
    4. ' list' → logprob: -13.751705169677734
    5. '	map' → logprob: -14.751705169677734
    6. ' ' → logprob: -15.376705169677734
    7. '   ' → logprob: -15.876705169677734
    8. ' ' → logprob: -16.876705169677734
    9. ' tuple' → logprob: -17.376705169677734
    10. 'input' → logprob: -17.376705169677734

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009286141721531749
    2. '(' → logprob: -8.00092887878418
    3. '<int' → logprob: -8.50092887878418
    4. '(input' → logprob: -8.50092887878418
    5. '(str' → logprob: -9.12592887878418
    6. 'int' → logprob: -10.75092887878418
    7. '=int' → logprob: -11.12592887878418
    8. '[int' → logprob: -11.25092887878418
    9. '<|end|>' → logprob: -12.00092887878418
    10. '```' → logprob: -12.12592887878418

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013837776146829128
    2. ',input' → logprob: -4.763837814331055
    3. '(input' → logprob: -5.388837814331055
    4. '(' → logprob: -8.013837814331055
    5. 'input' → logprob: -9.138837814331055
    6. ')' → logprob: -9.138837814331055
    7. '(),' → logprob: -10.138837814331055
    8. ' ,' → logprob: -10.638837814331055
    9. '=input' → logprob: -11.138837814331055
    10. ' input' → logprob: -12.138837814331055

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931722164154053
    2. ' input' → logprob: -0.6931722164154053
    3. ')' → logprob: -10.693172454833984
    4. '=input' → logprob: -14.443172454833984
    5. ',input' → logprob: -14.443172454833984
    6. '(input' → logprob: -14.568172454833984
    7. '	input' → logprob: -15.193172454833984
    8. '_input' → logprob: -15.818172454833984
    9. '[input' → logprob: -16.193172454833984
    10. ' )' → logprob: -16.193172454833984

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011069540778407827
    2. '()' → logprob: -9.125110626220703
    3. ')' → logprob: -14.375110626220703
    4. ' ().' → logprob: -14.750110626220703
    5. '())' → logprob: -15.375110626220703
    6. '(' → logprob: -15.625110626220703
    7. '()).' → logprob: -16.500110626220703
    8. '.' → logprob: -16.500110626220703
    9. '().__' → logprob: -16.750110626220703
    10. ').' → logprob: -17.500110626220703

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. '(split' → logprob: -15.625
    3. ' split' → logprob: -16.875
    4. 'spl' → logprob: -17.75
    5. 'strip' → logprob: -18.25
    6. ')' → logprob: -18.75
    7. 'rstrip' → logprob: -19.25
    8. 'plit' → logprob: -19.5
    9. '```' → logprob: -20.125
    10. ' ' → logprob: -21.25

Token 50: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10744888335466385
    2. ')' → logprob: -2.3574488162994385
    3. '()' → logprob: -4.982449054718018
    4. '())
' → logprob: -8.10744857788086
    5. '))' → logprob: -10.60744857788086
    6. '()))' → logprob: -11.98244857788086
    7. ')
' → logprob: -11.98244857788086
    8. '`)' → logprob: -12.35744857788086
    9. '()
' → logprob: -12.73244857788086
    10. '   ' → logprob: -13.10744857788086

Token 51: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' segment' (ID: 14806)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.00017505438881926239
    2. '_' → logprob: -8.875175476074219
    3. '_s' → logprob: -11.125175476074219
    4. 's' → logprob: -11.750175476074219
    5. '_bounds' → logprob: -13.250175476074219
    6. '_l' → logprob: -13.250175476074219
    7. '_lengths' → logprob: -13.750175476074219
    8. '_lim' → logprob: -13.875175476074219
    9. '_constraints' → logprob: -14.125175476074219
    10. '_limit' → logprob: -14.375175476074219

Token 54: '[node' (ID: 67268)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22571353614330292
    2. '[node' → logprob: -1.6007134914398193
    3. '[min' → logprob: -8.725713729858398
    4. ']' → logprob: -10.975713729858398
    5. '[max' → logprob: -10.975713729858398
    6. '.append' → logprob: -11.475713729858398
    7. '[user' → logprob: -11.600713729858398
    8. '[]' → logprob: -11.600713729858398
    9. '[...]' → logprob: -11.975713729858398
    10. '[:]' → logprob: -11.975713729858398

Token 55: '_a' (ID: 10852)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0008006958523765206
    2. '_a' → logprob: -8.125801086425781
    3. '_' → logprob: -9.000801086425781
    4. '-' → logprob: -9.125801086425781
    5. '_idxs' → logprob: -9.125801086425781
    6. '-_' → logprob: -9.875801086425781
    7. '_b' → logprob: -10.125801086425781
    8. '_IDX' → logprob: -11.500801086425781
    9. ' _' → logprob: -11.875801086425781
    10. 'a' → logprob: -11.875801086425781

Token 56: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41670963168144226
    2. '-' → logprob: -1.2917096614837646
    3. ' -' → logprob: -2.9167096614837646
    4. ' ]' → logprob: -4.6667094230651855
    5. ':]' → logprob: -7.2917094230651855
    6. ':' → logprob: -7.9167094230651855
    7. ' :]' → logprob: -7.9167094230651855
    8. ')]' → logprob: -8.166709899902344
    9. ')' → logprob: -8.291709899902344
    10. '])' → logprob: -8.791709899902344

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00799837987869978
    2. ' ' → logprob: -5.007998466491699
    3. '2' → logprob: -6.882998466491699
    4. '<|end|>' → logprob: -8.3829984664917
    5. '<|end|>' → logprob: -11.2579984664917
    6. ')' → logprob: -12.6329984664917
    7. '0' → logprob: -13.0079984664917
    8. ']' → logprob: -13.3829984664917
    9. 'to' → logprob: -13.7579984664917
    10. '`' → logprob: -13.8829984664917

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026344306766986847
    2. '2' → logprob: -3.6513442993164062
    3. ' ' → logprob: -10.151344299316406
    4. '<|end|>' → logprob: -13.026344299316406
    5. '0' → logprob: -13.838844299316406
    6. '<|end|>' → logprob: -14.838844299316406
    7. '   ' → logprob: -15.901344299316406
    8. '```' → logprob: -16.213844299316406
    9. ')' → logprob: -16.401344299316406
    10. ']' → logprob: -16.463844299316406

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005799740087240934
    2. ' ]' → logprob: -5.255799770355225
    3. ')]' → logprob: -8.630799293518066
    4. ')' → logprob: -8.880799293518066
    5. ']=' → logprob: -9.005799293518066
    6. ']+=' → logprob: -10.255799293518066
    7. '-' → logprob: -11.130799293518066
    8. ' =' → logprob: -11.755799293518066
    9. '])' → logprob: -11.755799293518066
    10. '[' → logprob: -11.755799293518066

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24954652786254883
    2. '=' → logprob: -1.7495465278625488
    3. ' +=' → logprob: -3.499546527862549
    4. ' -=' → logprob: -5.249546527862549
    5. '<|end|>' → logprob: -6.249546527862549
    6. ' >=' → logprob: -6.624546527862549
    7. ',' → logprob: -6.624546527862549
    8. ')' → logprob: -6.749546527862549
    9. '+=' → logprob: -6.874546527862549
    10. ' <=' → logprob: -6.999546527862549

Token 61: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19065657258033752
    2. 'max' → logprob: -2.5656566619873047
    3. '0' → logprob: -2.8156566619873047
    4. 'node' → logprob: -3.6906566619873047
    5. 'segment' → logprob: -5.565656661987305
    6. '200' → logprob: -5.815656661987305
    7. ' min' → logprob: -6.315656661987305
    8. '100' → logprob: -7.440656661987305
    9. '1' → logprob: -7.690656661987305
    10. 'edge' → logprob: -7.815656661987305

Token 62: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.029797356575727463
    2. '(' → logprob: -3.529797315597534
    3. '(
' → logprob: -10.654797554016113
    4. '(seg' → logprob: -11.154797554016113
    5. 'segment' → logprob: -12.404797554016113
    6. '(

' → logprob: -13.654797554016113
    7. '(s' → logprob: -13.779797554016113
    8. ' (' → logprob: -14.154797554016113
    9. '(node' → logprob: -14.279797554016113
    10. '(`' → logprob: -15.654797554016113

Token 63: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -9.424530435353518e-05
    2. '_' → logprob: -10.375094413757324
    3. ' _' → logprob: -11.375094413757324
    4. ')_' → logprob: -11.625094413757324
    5. '```' → logprob: -11.750094413757324
    6. '_limit' → logprob: -11.875094413757324
    7. 'limits' → logprob: -12.500094413757324
    8. '"_' → logprob: -12.625094413757324
    9. 's' → logprob: -13.000094413757324
    10. '-_' → logprob: -13.125094413757324

Token 64: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.059867363423109055
    2. '[' → logprob: -2.9348673820495605
    3. '(node' → logprob: -5.5598673820495605
    4. '(' → logprob: -8.059866905212402
    5. ',' → logprob: -8.059866905212402
    6. '[
' → logprob: -8.434866905212402
    7. ')' → logprob: -9.184866905212402
    8. ',node' → logprob: -10.059866905212402
    9. '```' → logprob: -10.559866905212402
    10. ')[' → logprob: -11.184866905212402

Token 65: '_a' (ID: 10852)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.011282536201179028
    2. '_a' → logprob: -4.886282444000244
    3. 'a' → logprob: -6.511282444000244
    4. '_b' → logprob: -6.636282444000244
    5. '-' → logprob: -7.511282444000244
    6. 'b' → logprob: -8.886282920837402
    7. '_idxs' → logprob: -10.261282920837402
    8. ' -' → logprob: -10.386282920837402
    9. 'idx' → logprob: -10.511282920837402
    10. 'Idx' → logprob: -11.136282920837402

Token 66: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.32038235664367676
    2. '-' → logprob: -1.4453823566436768
    3. '_idx' → logprob: -3.5703823566436768
    4. '   ' → logprob: -5.070382118225098
    5. ' ' → logprob: -6.070382118225098
    6. 'idx' → logprob: -7.695382118225098
    7. '    ' → logprob: -8.945382118225098
    8. ']' → logprob: -9.195382118225098
    9. '  ' → logprob: -9.320382118225098
    10. '_index' → logprob: -9.445382118225098

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043937109876424074
    2. ' ' → logprob: -7.750439167022705
    3. '   ' → logprob: -13.062939643859863
    4. '```' → logprob: -13.437939643859863
    5. '2' → logprob: -13.625439643859863
    6. ')' → logprob: -14.062939643859863
    7. '-' → logprob: -14.750439643859863
    8. '  ' → logprob: -15.125439643859863
    9. '`' → logprob: -15.500439643859863
    10. '           ' → logprob: -15.625439643859863

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002719449403230101
    2. ' ' → logprob: -8.250271797180176
    3. '2' → logprob: -11.875271797180176
    4. '   ' → logprob: -14.000271797180176
    5. '0' → logprob: -14.187771797180176
    6. 'idx' → logprob: -15.250271797180176
    7. '```' → logprob: -16.062772750854492
    8. '  ' → logprob: -16.250272750854492
    9. '11' → logprob: -16.375272750854492
    10. ']' → logprob: -16.375272750854492

Token 69: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011009939044015482
    2. ',node' → logprob: -9.750109672546387
    3. ' ,' → logprob: -10.000109672546387
    4. '),' → logprob: -13.125109672546387
    5. '   ' → logprob: -13.625109672546387
    6. ',
' → logprob: -13.625109672546387
    7. ',num' → logprob: -14.375109672546387
    8. ',n' → logprob: -15.125109672546387
    9. ',

' → logprob: -15.875109672546387
    10. '`,' → logprob: -16.250110626220703

Token 70: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.2032945603132248
    2. 'node' → logprob: -1.7032945156097412
    3. 'segment' → logprob: -6.95329475402832
    4. ' segment' → logprob: -7.70329475402832
    5. ' edge' → logprob: -8.57829475402832
    6. 'edge' → logprob: -8.82829475402832
    7. '(node' → logprob: -9.57829475402832
    8. ' ' → logprob: -10.95329475402832
    9. ')' → logprob: -11.32829475402832
    10. '[node' → logprob: -11.70329475402832

Token 71: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002969703928101808
    2. '_a' → logprob: -8.125296592712402
    3. '_' → logprob: -15.000296592712402
    4. ' _' → logprob: -15.000296592712402
    5. '   ' → logprob: -16.87529754638672
    6. ')_' → logprob: -16.87529754638672
    7. ')' → logprob: -17.12529754638672
    8. ' -' → logprob: -17.37529754638672
    9. '-_' → logprob: -17.62529754638672
    10. '__' → logprob: -17.62529754638672

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3539673686027527
    2. ')' → logprob: -1.3539674282073975
    3. ' )' → logprob: -3.3539674282073975
    4. '-' → logprob: -5.353967189788818
    5. '<|end|>' → logprob: -9.353967666625977
    6. ' ' → logprob: -10.353967666625977
    7. ')
' → logprob: -10.603967666625977
    8. '   ' → logprob: -10.853967666625977
    9. '-)' → logprob: -11.228967666625977
    10. ' )
' → logprob: -11.353967666625977

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024645665660500526
    2. '2' → logprob: -3.8996455669403076
    3. ' ' → logprob: -5.524645805358887
    4. ')' → logprob: -9.399645805358887
    5. '-' → logprob: -11.774645805358887
    6. '   ' → logprob: -11.899645805358887
    7. ' )' → logprob: -13.149645805358887
    8. ' -' → logprob: -13.149645805358887
    9. '```' → logprob: -13.399645805358887
    10. '  ' → logprob: -13.587145805358887

Token 74: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0892549380660057
    2. '2' → logprob: -2.464254856109619
    3. ' ' → logprob: -8.089255332946777
    4. ')' → logprob: -12.964255332946777
    5. '0' → logprob: -13.276755332946777
    6. '-' → logprob: -13.839255332946777
    7. '```' → logprob: -13.901755332946777
    8. '   ' → logprob: -14.589255332946777
    9. '<|end|>' → logprob: -14.839255332946777
    10. '  ' → logprob: -15.026755332946777

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.68153518543113e-05
    2. ')
' → logprob: -9.875057220458984
    3. '   ' → logprob: -12.625057220458984
    4. ' )' → logprob: -13.250057220458984
    5. '`)' → logprob: -16.750057220458984
    6. ')

' → logprob: -16.875057220458984
    7. ')
' → logprob: -17.125057220458984
    8. ' ' → logprob: -17.250057220458984
    9. '))' → logprob: -17.250057220458984
    10. '')' → logprob: -17.250057220458984

Token 76: 'current' (ID: 5804)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '_right' (ID: 24402)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.9718388319015503
    2. '_limit' → logprob: -1.3468388319015503
    3. '_limits' → logprob: -2.09683895111084
    4. '_' → logprob: -2.47183895111084
    5. '_node' → logprob: -3.47183895111084
    6. '_min' → logprob: -3.59683895111084
    7. '_max' → logprob: -4.09683895111084
    8. '_index' → logprob: -4.22183895111084
    9. '_pos' → logprob: -4.59683895111084
    10. '_position' → logprob: -4.72183895111084

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35114941000938416
    2. '=' → logprob: -1.3511494398117065
    3. '_bound' → logprob: -3.976149320602417
    4. '_' → logprob: -4.476149559020996
    5. '_boundary' → logprob: -6.101149559020996
    6. '_endpoint' → logprob: -6.476149559020996
    7. '_pointer' → logprob: -7.226149559020996
    8. '_limit' → logprob: -7.601149559020996
    9. '_end' → logprob: -8.226149559020996
    10. '_index' → logprob: -8.476149559020996

Token 79: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16384893655776978
    2. '0' → logprob: -2.163848876953125
    3. ' -' → logprob: -4.038848876953125
    4. 'segment' → logprob: -4.538848876953125
    5. 'num' → logprob: -5.913848876953125
    6. '-num' → logprob: -6.038848876953125
    7. ' ' → logprob: -6.288848876953125
    8. '200' → logprob: -8.038848876953125
    9. ' segment' → logprob: -8.288848876953125
    10. '-se' → logprob: -9.288848876953125

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. '2' → logprob: -11.375021934509277
    3. 'float' → logprob: -12.375021934509277
    4. '-' → logprob: -12.875021934509277
    5. '10' → logprob: -13.375021934509277
    6. ' ' → logprob: -14.125021934509277
    7. '```' → logprob: -14.875021934509277
    8. '999' → logprob: -15.250021934509277
    9. '100' → logprob: -15.375021934509277
    10. 'int' → logprob: -16.125022888183594

Token 81: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04344785958528519
    2. ' for' → logprob: -3.418447971343994
    3. '<|end|>' → logprob: -5.293447971343994
    4. '
' → logprob: -5.668447971343994
    5. '```' → logprob: -7.668447971343994
    6. 'result' → logprob: -8.043447494506836
    7. 'valid' → logprob: -8.918447494506836
    8. '\n' → logprob: -9.793447494506836
    9. 'current' → logprob: -10.043447494506836
    10. 'num' → logprob: -10.543447494506836

Token 82: 'segment' (ID: 45362)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034968528896570206
    2. 'result' → logprob: -3.909968614578247
    3. ' for' → logprob: -4.659968376159668
    4. 'answer' → logprob: -6.909968376159668
    5. 'total' → logprob: -6.909968376159668
    6. 'max' → logprob: -7.409968376159668
    7. 'valid' → logprob: -7.409968376159668
    8. 'current' → logprob: -8.409968376159668
    9. 'count' → logprob: -8.534968376159668
    10. '```' → logprob: -8.659968376159668

Token 83: '_count' (ID: 7536)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.05624654144048691
    2. '_' → logprob: -4.056246757507324
    3. 's' → logprob: -4.181246757507324
    4. '_start' → logprob: -5.181246757507324
    5. '_right' → logprob: -5.556246757507324
    6. '_lengths' → logprob: -5.931246757507324
    7. '_end' → logprob: -6.056246757507324
    8. '_max' → logprob: -6.806246757507324
    9. '_limit' → logprob: -6.806246757507324
    10. '_left' → logprob: -7.056246757507324

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01801367476582527
    2. ' +=' → logprob: -4.1430134773254395
    3. '=' → logprob: -6.2680134773254395
    4. '+=' → logprob: -10.393013954162598
    5. '<|end|>' → logprob: -11.143013954162598
    6. ' =
' → logprob: -11.893013954162598
    7. ' ' → logprob: -12.018013954162598
    8. ' |=' → logprob: -12.393013954162598
    9. 's' → logprob: -12.643013954162598
    10. ')' → logprob: -12.768013954162598

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2524136006832123
    2. ' ' → logprob: -1.5024136304855347
    3. ' num' → logprob: -8.502413749694824
    4. '1' → logprob: -8.752413749694824
    5. 'num' → logprob: -9.127413749694824
    6. '2' → logprob: -13.189913749694824
    7. ' len' → logprob: -13.314913749694824
    8. '200' → logprob: -14.002413749694824
    9. '`' → logprob: -14.189913749694824
    10. ' ' → logprob: -14.314913749694824

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008096250821836293
    2. 'num' → logprob: -8.000809669494629
    3. ' ' → logprob: -8.250809669494629
    4. '1' → logprob: -8.500809669494629
    5. ' num' → logprob: -12.750809669494629
    6. 'len' → logprob: -13.250809669494629
    7. '2' → logprob: -13.625809669494629
    8. '-' → logprob: -14.688309669494629
    9. '   ' → logprob: -15.188309669494629
    10. '`' → logprob: -15.563309669494629

Token 87: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4380820393562317
    2. 'for' → logprob: -1.063081979751587
    3. ' for' → logprob: -5.063082218170166
    4. '<|end|>' → logprob: -6.188082218170166
    5. '\n' → logprob: -7.688082218170166
    6. '```' → logprob: -7.813082218170166
    7. '
' → logprob: -9.938081741333008
    8. ' 
' → logprob: -11.438081741333008
    9. '\' → logprob: -11.688081741333008
    10. '  
' → logprob: -12.188081741333008

Token 88: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.610702363715973e-06
    2. ' for' → logprob: -11.750009536743164
    3. '```' → logprob: -13.625009536743164
    4. 'range' → logprob: -16.375009536743164
    5. '
' → logprob: -16.750009536743164
    6. 'current' → logprob: -17.125009536743164
    7. 'in' → logprob: -17.375009536743164
    8. 'i' → logprob: -17.375009536743164
    9. 'node' → logprob: -17.500009536743164
    10. 'num' → logprob: -17.500009536743164

Token 89: ' segment' (ID: 14806)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4929342567920685
    2. ' idx' → logprob: -1.242934226989746
    3. ' node' → logprob: -2.492934226989746
    4. ' _' → logprob: -4.742934226989746
    5. '_' → logprob: -5.367934226989746
    6. 'i' → logprob: -5.992934226989746
    7. 'idx' → logprob: -7.367934226989746
    8. 'node' → logprob: -7.492934226989746
    9. ' segment' → logprob: -7.867934226989746
    10. ' index' → logprob: -8.992934226989746

Token 90: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.1606648862361908
    2. '_start' → logprob: -2.0356647968292236
    3. '_index' → logprob: -4.660665035247803
    4. '_' → logprob: -5.410665035247803
    5. '_end' → logprob: -6.785665035247803
    6. '_right' → logprob: -7.285665035247803
    7. '_left' → logprob: -7.410665035247803
    8. '_len' → logprob: -8.160664558410645
    9. '_i' → logprob: -8.285664558410645
    10. '_length' → logprob: -8.535664558410645

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007662105839699507
    2. 'in' → logprob: -4.882662296295166
    3. ' ' → logprob: -9.882661819458008
    4. '	in' → logprob: -12.757661819458008
    5. ',' → logprob: -14.382661819458008
    6. ' ,' → logprob: -15.257661819458008
    7. ' i' → logprob: -15.757661819458008
    8. ' ' → logprob: -16.132661819458008
    9. '  ' → logprob: -16.257661819458008
    10. '_' → logprob: -16.570161819458008

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014165629632771015
    2. 'range' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.139165878295898
    4. '	range' → logprob: -14.514165878295898
    5. '(range' → logprob: -14.889165878295898
    6. ' in' → logprob: -15.639165878295898
    7. ' segment' → logprob: -15.764165878295898
    8. ' ' → logprob: -16.7641658782959
    9. ' xrange' → logprob: -16.8891658782959
    10. ')' → logprob: -17.1391658782959

Token 93: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.005064991302788258
    2. '(' → logprob: -5.380064964294434
    3. ' (' → logprob: -7.880064964294434
    4. ' num' → logprob: -10.005064964294434
    5. '(len' → logprob: -11.255064964294434
    6. 'num' → logprob: -12.130064964294434
    7. '<num' → logprob: -13.380064964294434
    8. ',num' → logprob: -14.880064964294434
    9. '(n' → logprob: -15.255064964294434
    10. ':num' → logprob: -15.630064964294434

Token 94: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -3.173704271830502e-06
    2. '_edges' → logprob: -13.37500286102295
    3. '_' → logprob: -14.50000286102295
    4. '_segments' → logprob: -14.75000286102295
    5. '_n' → logprob: -15.87500286102295
    6. 's' → logprob: -16.000003814697266
    7. '```' → logprob: -16.250003814697266
    8. 'nodes' → logprob: -17.000003814697266
    9. ' _' → logprob: -17.000003814697266
    10. '-_' → logprob: -17.125003814697266

Token 95: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6289123892784119
    2. ' -' → logprob: -1.3789124488830566
    3. '):' → logprob: -1.7539124488830566
    4. '):
' → logprob: -3.2539124488830566
    5. ' ):' → logprob: -6.378912448883057
    6. ')' → logprob: -7.128912448883057
    7. ' ):
' → logprob: -7.503912448883057
    8. '   ' → logprob: -9.753911972045898
    9. ' )' → logprob: -10.003911972045898
    10. ' ' → logprob: -10.003911972045898

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003602094016969204
    2. ' ' → logprob: -5.628602027893066
    3. ')' → logprob: -14.003602027893066
    4. '   ' → logprob: -15.128602027893066
    5. '2' → logprob: -15.253602027893066
    6. '```' → logprob: -15.378602027893066
    7. '<|end|>' → logprob: -15.503602027893066
    8. '<|end|>' → logprob: -16.628602981567383
    9. '۱' → logprob: -17.441102981567383
    10. '  ' → logprob: -17.441102981567383

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.12504005432129
    4. '2' → logprob: -16.37504005432129
    5. '```' → logprob: -16.87504005432129
    6. ')' → logprob: -17.25004005432129
    7. '-' → logprob: -17.37504005432129
    8. '１' → logprob: -17.50004005432129
    9. '  ' → logprob: -17.56254005432129
    10. '۱' → logprob: -18.00004005432129

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024528263602405787
    2. '):
' → logprob: -6.877452850341797
    3. ')' → logprob: -7.002452850341797
    4. ':' → logprob: -7.752452850341797
    5. ' ):' → logprob: -9.752452850341797
    6. '+' → logprob: -11.002452850341797
    7. '   ' → logprob: -14.002452850341797
    8. '):
' → logprob: -14.127452850341797
    9. ' )' → logprob: -14.252452850341797
    10. ',' → logprob: -14.627452850341797

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007189507596194744
    2. '<|end|>' → logprob: -5.7571892738342285
    3. ' ' → logprob: -6.6321892738342285
    4. ' if' → logprob: -7.2571892738342285
    5. '```' → logprob: -7.5071892738342285
    6. '    
' → logprob: -7.6321892738342285
    7. '    ' → logprob: -8.507189750671387
    8. '  ' → logprob: -8.757189750671387
    9. ':' → logprob: -9.007189750671387
    10. ' 
' → logprob: -9.132189750671387

Token 100: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15013962984085083
    2. 'if' (adapté à ' if') → logprob: -2.650139570236206
    3. '   ' → logprob: -3.150139570236206
    4. ' ' → logprob: -4.275139808654785
    5. ' current' → logprob: -4.775139808654785
    6. 'current' → logprob: -6.025139808654785
    7. '    ' → logprob: -7.275139808654785
    8. '```' → logprob: -8.525139808654785
    9. '  ' → logprob: -9.525139808654785
    10. ' 
' → logprob: -9.900139808654785

Token 101: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.579175591468811
    2. ' segment' → logprob: -0.829175591468811
    3. ' current' → logprob: -6.0791754722595215
    4. '   ' → logprob: -7.4541754722595215
    5. 'current' → logprob: -8.07917594909668
    6. '(segment' → logprob: -10.45417594909668
    7. '    ' → logprob: -11.57917594909668
    8. ' ' → logprob: -12.20417594909668
    9. '  ' → logprob: -13.32917594909668
    10. ' segmento' → logprob: -13.70417594909668

Token 102: '_idx' (ID: 15257)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.3892987370491028
    2. '_idx' → logprob: -1.139298677444458
    3. '_count' → logprob: -7.389298915863037
    4. 'idx' → logprob: -7.389298915863037
    5. '_idxs' → logprob: -8.514298439025879
    6. '_indices' → logprob: -8.639298439025879
    7. 'limits' → logprob: -8.764298439025879
    8. '_' → logprob: -9.014298439025879
    9. '_indexes' → logprob: -9.264298439025879
    10. '_limit' → logprob: -9.639298439025879

Token 103: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09089955687522888
    2. ' >' → logprob: -2.4658994674682617
    3. ' ' → logprob: -6.340899467468262
    4. '<=' → logprob: -9.215899467468262
    5. ' <=' → logprob: -10.715899467468262
    6. '<' → logprob: -11.090899467468262
    7. '">' → logprob: -11.340899467468262
    8. '   ' → logprob: -11.590899467468262
    9. '==' → logprob: -11.840899467468262
    10. '=' → logprob: -12.215899467468262

Token 104: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06197787821292877
    2. ' current' → logprob: -2.8119778633117676
    3. '=current' → logprob: -11.686978340148926
    4. '<|end|>' → logprob: -14.811978340148926
    5. '_current' → logprob: -15.311978340148926
    6. 'Current' → logprob: -15.561978340148926
    7. 'segment' → logprob: -15.686978340148926
    8. '(current' → logprob: -15.686978340148926
    9. '[current' → logprob: -15.811978340148926
    10. '	current' → logprob: -15.936978340148926

Token 105: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -2.935296834039036e-06
    2. 'right' → logprob: -13.75000286102295
    3. '_Right' → logprob: -14.12500286102295
    4. 'Right' → logprob: -14.25000286102295
    5. '_RIGHT' → logprob: -15.37500286102295
    6. '_' → logprob: -16.750003814697266
    7. '_r' → logprob: -16.875003814697266
    8. '_rhs' → logprob: -17.125003814697266
    9. '```' → logprob: -17.125003814697266
    10. '<|end|>' → logprob: -18.500003814697266

Token 106: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006556094624102116
    2. ':
' → logprob: -5.506556034088135
    3. '):' → logprob: -6.631556034088135
    4. ' and' → logprob: -7.631556034088135
    5. '):
' → logprob: -8.631556510925293
    6. '   ' → logprob: -8.631556510925293
    7. ')' → logprob: -9.131556510925293
    8. '<|end|>' → logprob: -9.881556510925293
    9. ' or' → logprob: -10.256556510925293
    10. ' :' → logprob: -10.256556510925293

Token 107: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.10148054361343384
    2. ' segment' → logprob: -2.351480484008789
    3. '   ' → logprob: -7.226480484008789
    4. '(segment' → logprob: -8.726480484008789
    5. 'current' → logprob: -8.851480484008789
    6. ' current' → logprob: -8.851480484008789
    7. ' ' → logprob: -10.101480484008789
    8. '  ' → logprob: -11.601480484008789
    9. '    ' → logprob: -11.726480484008789
    10. '0' → logprob: -12.101480484008789

Token 108: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.007689440157264471
    2. '_idx' → logprob: -4.882689476013184
    3. '_idxs' → logprob: -11.007689476013184
    4. 'limits' → logprob: -11.382689476013184
    5. '_indices' → logprob: -11.632689476013184
    6. '_' → logprob: -11.632689476013184
    7. 'idx' → logprob: -11.882689476013184
    8. '_counts' → logprob: -12.007689476013184
    9. '_count' → logprob: -12.257689476013184
    10. 'Limits' → logprob: -12.882689476013184

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.180879816180095e-05
    2. ' [' → logprob: -10.125051498413086
    3. '[
' → logprob: -12.500051498413086
    4. '```' → logprob: -12.875051498413086
    5. 'segment' → logprob: -14.125051498413086
    6. '
' → logprob: -14.375051498413086
    7. ' ' → logprob: -14.500051498413086
    8. '   ' → logprob: -14.750051498413086
    9. ')[' → logprob: -14.750051498413086
    10. '[token' → logprob: -15.125051498413086

Token 110: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0017005297122523189
    2. '[' → logprob: -6.501700401306152
    3. ' segment' → logprob: -8.626700401306152
    4. '(segment' → logprob: -11.751700401306152
    5. 'seg' → logprob: -13.251700401306152
    6. '   ' → logprob: -13.376700401306152
    7. '.segment' → logprob: -13.501700401306152
    8. '```' → logprob: -13.626700401306152
    9. '_segment' → logprob: -13.751700401306152
    10. ']' → logprob: -14.001700401306152

Token 111: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00047654795343987644
    2. 'idx' → logprob: -7.750476360321045
    3. 'x' → logprob: -10.500476837158203
    4. 'Idx' → logprob: -12.250476837158203
    5. 'dx' → logprob: -12.875476837158203
    6. '_limits' → logprob: -13.000476837158203
    7. '_idxs' → logprob: -13.000476837158203
    8. '_ix' → logprob: -13.250476837158203
    9. '   ' → logprob: -14.250476837158203
    10. '```' → logprob: -14.250476837158203

Token 112: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4622407853603363
    2. '<' → logprob: -1.8372408151626587
    3. ' >=' → logprob: -1.9622408151626587
    4. '>=' → logprob: -3.462240695953369
    5. '>' → logprob: -4.337240695953369
    6. ' >' → logprob: -4.837240695953369
    7. ' ' → logprob: -5.087240695953369
    8. ' !=' → logprob: -5.462240695953369
    9. ']' → logprob: -5.587240695953369
    10. ')' → logprob: -6.837240695953369

Token 113: ' !=' (ID: 1666)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.40867307782173157
    2. ' >=' → logprob: -1.1586730480194092
    3. ' !=' → logprob: -4.408673286437988
    4. '>' → logprob: -5.283673286437988
    5. '!=' → logprob: -5.783673286437988
    6. '!=-' → logprob: -7.533673286437988
    7. ' >' → logprob: -7.658673286437988
    8. '<' → logprob: -9.033673286437988
    9. ' ' → logprob: -10.283673286437988
    10. ' <' → logprob: -10.283673286437988

Token 114: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8953768610954285
    2. '200' → logprob: -1.5203769207000732
    3. ' -' → logprob: -1.5203769207000732
    4. '-' → logprob: -1.8953769207000732
    5. '199' → logprob: -7.145376682281494
    6. ' float' → logprob: -7.395376682281494
    7. '   ' → logprob: -7.520376682281494
    8. '  ' → logprob: -7.770376682281494
    9. ' current' → logprob: -7.895376682281494
    10. '20' → logprob: -8.395377159118652

Token 115: '200' (ID: 1179)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4785393178462982
    2. '200' → logprob: -0.9785393476486206
    3. ' ' → logprob: -5.85353946685791
    4. ' -' → logprob: -6.85353946685791
    5. '   ' → logprob: -8.60353946685791
    6. '199' → logprob: -8.97853946685791
    7. 'float' → logprob: -10.10353946685791
    8. '  ' → logprob: -10.22853946685791
    9. '```' → logprob: -10.47853946685791
    10. '0' → logprob: -10.60353946685791

Token 116: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -3.054500666621607e-06
    2. '00' → logprob: -13.00000286102295
    3. '0' → logprob: -15.50000286102295
    4. ' ' → logprob: -15.87500286102295
    5. '001' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '```' → logprob: -17.000003814697266
    8. '  ' → logprob: -18.062503814697266
    9. '_' → logprob: -18.125003814697266
    10. ')' → logprob: -18.187503814697266

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018219047924503684
    2. '):' → logprob: -6.501821994781494
    3. ':
' → logprob: -8.126821517944336
    4. ' :' → logprob: -11.001821517944336
    5. '):
' → logprob: -12.751821517944336
    6. ' and' → logprob: -13.501821517944336
    7. '   ' → logprob: -14.001821517944336
    8. ')' → logprob: -14.251821517944336
    9. '>:' → logprob: -15.376821517944336
    10. 'and' → logprob: -15.501821517944336

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04565419629216194
    2. ':' → logprob: -3.545654296875
    3. '   ' → logprob: -4.920654296875
    4. ':
' → logprob: -5.045654296875
    5. 'current' → logprob: -7.045654296875
    6. '):
' → logprob: -8.045654296875
    7. ' current' → logprob: -8.170654296875
    8. '):' → logprob: -8.670654296875
    9. 'segment' → logprob: -9.545654296875
    10. '```' → logprob: -9.670654296875

Token 119: ' segment' (ID: 14806)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4760766923427582
    2. ' current' → logprob: -1.1010767221450806
    3. 'segment' (adapté à ' segment') → logprob: -3.851076602935791
    4. '       ' → logprob: -4.351076602935791
    5. ' segment' → logprob: -4.476076602935791
    6. '           ' → logprob: -7.601076602935791
    7. '
' → logprob: -9.10107707977295
    8. '   ' → logprob: -9.60107707977295
    9. '{
' → logprob: -10.85107707977295
    10. '```' → logprob: -11.35107707977295

Token 120: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.87500286102295
    3. 'count' → logprob: -14.25000286102295
    4. '_limits' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.25000286102295
    6. '_counts' → logprob: -15.62500286102295
    7. '_limit' → logprob: -16.500003814697266
    8. '_current' → logprob: -17.125003814697266
    9. '{' → logprob: -17.250003814697266
    10. ' _' → logprob: -17.250003814697266

Token 121: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.003842232981696725
    2. '+=' → logprob: -5.628842353820801
    3. ' =' → logprob: -8.3788423538208
    4. '=' → logprob: -11.7538423538208
    5. ' ' → logprob: -13.0038423538208
    6. '+' → logprob: -14.1288423538208
    7. '   ' → logprob: -15.0038423538208
    8. ' +' → logprob: -15.1288423538208
    9. ']+=' → logprob: -15.3788423538208
    10. ')' → logprob: -15.6288423538208

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.000003814697266
    4. '```' → logprob: -19.625003814697266
    5. '<|end|>' → logprob: -20.125003814697266
    6. '+' → logprob: -21.000003814697266
    7. '2' → logprob: -21.000003814697266
    8. '۱' → logprob: -21.375003814697266
    9. '  ' → logprob: -21.500003814697266
    10. 'segment' → logprob: -21.687503814697266

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'segment' → logprob: -16.875001907348633
    4. '```' → logprob: -18.625001907348633
    5. '
' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.375001907348633
    7. ')' → logprob: -20.375001907348633
    8. ' segment' → logprob: -20.625001907348633
    9. '１' → logprob: -20.812501907348633
    10. '  ' → logprob: -20.812501907348633

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05735364928841591
    2. 'current' → logprob: -3.6823537349700928
    3. ' current' → logprob: -4.432353496551514
    4. '<|end|>' → logprob: -5.307353496551514
    5. ',current' → logprob: -5.932353496551514
    6. '       ' → logprob: -6.182353496551514
    7. ' 
' → logprob: -6.307353496551514
    8. '[current' → logprob: -6.557353496551514
    9. ',' → logprob: -6.682353496551514
    10. '```' → logprob: -6.932353496551514

Token 125: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.24633623659610748
    2. ' current' → logprob: -2.1213362216949463
    3. '       ' → logprob: -2.3713362216949463
    4. '
' → logprob: -5.621336460113525
    5. '   ' → logprob: -7.246336460113525
    6. '```' → logprob: -7.871336460113525
    7. ',current' → logprob: -8.621335983276367
    8. '	current' → logprob: -9.246335983276367
    9. '        
' → logprob: -9.996335983276367
    10. '[current' → logprob: -10.246335983276367

Token 126: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.001175820711068809
    2. ' current' → logprob: -6.751175880432129
    3. '       ' → logprob: -12.376175880432129
    4. '   ' → logprob: -14.001175880432129
    5. '
' → logprob: -15.001175880432129
    6. '	current' → logprob: -16.126174926757812
    7. '           ' → logprob: -17.376174926757812
    8. '```' → logprob: -18.001174926757812
    9. '        
' → logprob: -18.501174926757812
    10. ' ' → logprob: -18.626174926757812

Token 127: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -5.490809417096898e-05
    2. '_' → logprob: -10.500055313110352
    3. '=_' → logprob: -12.125055313110352
    4. '=' → logprob: -12.125055313110352
    5. '```' → logprob: -12.250055313110352
    6. ' =' → logprob: -12.375055313110352
    7. ' _' → logprob: -12.750055313110352
    8. ')_' → logprob: -14.250055313110352
    9. '_left' → logprob: -14.375055313110352
    10. '_Right' → logprob: -14.500055313110352

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' +=' → logprob: -16.923587799072266
    4. ')' → logprob: -17.298587799072266
    5. ' ' → logprob: -17.423587799072266
    6. '＝' → logprob: -18.173587799072266
    7. ' =
' → logprob: -18.548587799072266
    8. '=max' → logprob: -18.548587799072266
    9. ',' → logprob: -18.923587799072266
    10. '<|end|>' → logprob: -19.173587799072266

Token 129: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.023428790271282196
    2. ' segment' → logprob: -3.7734286785125732
    3. 'max' → logprob: -8.773428916931152
    4. ' max' → logprob: -10.523428916931152
    5. 'min' → logprob: -14.273428916931152
    6. '(segment' → logprob: -14.898428916931152
    7. '   ' → logprob: -15.023428916931152
    8. ' min' → logprob: -15.523428916931152
    9. ' ' → logprob: -17.398427963256836
    10. '.segment' → logprob: -17.523427963256836

Token 130: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.00020783171930816025
    2. 'limits' → logprob: -8.750207901000977
    3. '_idx' → logprob: -10.125207901000977
    4. 'Limits' → logprob: -12.375207901000977
    5. 'idx' → logprob: -13.375207901000977
    6. '_limit' → logprob: -13.500207901000977
    7. ' limits' → logprob: -14.625207901000977
    8. '```' → logprob: -14.625207901000977
    9. '_indices' → logprob: -15.000207901000977
    10. '_right' → logprob: -16.125207901000977

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. 'segment' → logprob: -11.750009536743164
    3. '```' → logprob: -14.375009536743164
    4. '[node' → logprob: -15.125009536743164
    5. '[
' → logprob: -15.250009536743164
    6. '[current' → logprob: -15.625009536743164
    7. ' [' → logprob: -15.875009536743164
    8. '_segment' → logprob: -16.500009536743164
    9. '[token' → logprob: -16.625009536743164
    10. '(segment' → logprob: -16.875009536743164

Token 132: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -9.610702363715973e-06
    2. ' segment' → logprob: -11.625009536743164
    3. '(segment' → logprob: -15.375009536743164
    4. 'seg' → logprob: -15.875009536743164
    5. 'idx' → logprob: -16.000009536743164
    6. '[' → logprob: -16.625009536743164
    7. '.segment' → logprob: -17.000009536743164
    8. '_segment' → logprob: -17.125009536743164
    9. '   ' → logprob: -17.625009536743164
    10. ']' → logprob: -18.000009536743164

Token 133: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0001649220648687333
    2. 'idx' → logprob: -8.750164985656738
    3. 'Idx' → logprob: -13.250164985656738
    4. '])' → logprob: -13.625164985656738
    5. ']' → logprob: -13.875164985656738
    6. 's' → logprob: -14.375164985656738
    7. '_]' → logprob: -14.625164985656738
    8. '```' → logprob: -15.250164985656738
    9. '_index' → logprob: -15.500164985656738
    10. ')' → logprob: -15.500164985656738

Token 134: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20793183147907257
    2. '<|end|>' → logprob: -1.7079318761825562
    3. ']' → logprob: -5.457931995391846
    4. '}' → logprob: -6.707931995391846
    5. '<|end|>' → logprob: -7.457931995391846
    6. '
' → logprob: -8.457931518554688
    7. ' )' → logprob: -9.707931518554688
    8. '```' → logprob: -10.082931518554688
    9. ')
' → logprob: -10.457931518554688
    10. '   ' → logprob: -10.582931518554688

Token 135: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' elif' (ID: 9497)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008530533872544765
    2. ')' → logprob: -5.883530616760254
    3. 'else' → logprob: -6.383530616760254
    4. '
' → logprob: -6.383530616760254
    5. '<|end|>' → logprob: -6.758530616760254
    6. '```' → logprob: -8.258530616760254
    7. 'elif' (adapté à ' elif') → logprob: -8.383530616760254
    8. '\n' → logprob: -8.508530616760254
    9. ' print' → logprob: -8.633530616760254
    10. ' else' → logprob: -9.258530616760254

Token 137: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3565380275249481
    2. ' segment' → logprob: -1.2315380573272705
    3. ' current' → logprob: -5.231537818908691
    4. 'current' → logprob: -5.981537818908691
    5. ' ' → logprob: -9.731537818908691
    6. 'num' → logprob: -9.981537818908691
    7. '   ' → logprob: -10.731537818908691
    8. ' num' → logprob: -11.231537818908691
    9. '(segment' → logprob: -11.731537818908691
    10. '  ' → logprob: -11.981537818908691

Token 138: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00437529431656003
    2. '_count' → logprob: -5.879375457763672
    3. '_limits' → logprob: -6.504375457763672
    4. '_limit' → logprob: -11.004375457763672
    5. '_counts' → logprob: -11.254375457763672
    6. 'idx' → logprob: -11.629375457763672
    7. '_idxs' → logprob: -11.754375457763672
    8. '_' → logprob: -12.504375457763672
    9. '_indices' → logprob: -12.629375457763672
    10. '```' → logprob: -12.754375457763672

Token 139: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0464288666844368
    2. '<=' → logprob: -3.296428918838501
    3. ' >' → logprob: -5.296428680419922
    4. '>' → logprob: -6.796428680419922
    5. ' <' → logprob: -6.796428680419922
    6. ' ==' → logprob: -7.671428680419922
    7. '<' → logprob: -8.421428680419922
    8. ' ' → logprob: -8.671428680419922
    9. ' >=' → logprob: -9.046428680419922
    10. '==' → logprob: -9.421428680419922

Token 140: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.05489131063222885
    2. ' current' → logprob: -2.929891347885132
    3. ' ' → logprob: -12.804891586303711
    4. 'segment' → logprob: -13.304891586303711
    5. '	current' → logprob: -13.804891586303711
    6. '[current' → logprob: -14.429891586303711
    7. '$current' → logprob: -14.429891586303711
    8. '<|end|>' → logprob: -14.679891586303711
    9. 'urrent' → logprob: -15.429891586303711
    10. '=current' → logprob: -15.429891586303711

Token 141: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -2.6537622034084052e-05
    2. 'right' → logprob: -10.62502670288086
    3. '_' → logprob: -13.50002670288086
    4. '_current' → logprob: -15.62502670288086
    5. '_r' → logprob: -15.87502670288086
    6. 'Right' → logprob: -16.12502670288086
    7. ' _' → logprob: -16.12502670288086
    8. '_RIGHT' → logprob: -16.25002670288086
    9. '```' → logprob: -16.25002670288086
    10. '_left' → logprob: -17.00002670288086

Token 142: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15652978420257568
    2. ':' → logprob: -2.7815299034118652
    3. 'and' → logprob: -3.2815299034118652
    4. '       ' → logprob: -3.2815299034118652
    5. ':
' → logprob: -5.156529903411865
    6. '=' → logprob: -7.031529903411865
    7. '   ' → logprob: -7.406529903411865
    8. ' ' → logprob: -9.281529426574707
    9. '<|end|>' → logprob: -9.281529426574707
    10. ',' → logprob: -9.781529426574707

Token 143: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0011636728886514902
    2. ' segment' → logprob: -7.126163482666016
    3. 'current' → logprob: -8.001163482666016
    4. '   ' → logprob: -11.126163482666016
    5. '(segment' → logprob: -12.626163482666016
    6. ' current' → logprob: -13.126163482666016
    7. 'min' → logprob: -13.251163482666016
    8. '0' → logprob: -14.501163482666016
    9. ' ' → logprob: -15.126163482666016
    10. '       ' → logprob: -15.501163482666016

Token 144: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.0004236435634084046
    2. 'limits' → logprob: -8.125423431396484
    3. '_idx' → logprob: -10.000423431396484
    4. '_' → logprob: -10.250423431396484
    5. '_count' → logprob: -10.750423431396484
    6. '_limit' → logprob: -12.375423431396484
    7. 'idx' → logprob: -12.625423431396484
    8. 'Limits' → logprob: -12.625423431396484
    9. ' limits' → logprob: -12.750423431396484
    10. '_indices' → logprob: -12.750423431396484

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. 'segment' → logprob: -12.375005722045898
    3. ' [' → logprob: -14.500005722045898
    4. '```' → logprob: -15.375005722045898
    5. '[
' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.6250057220459
    7. 'Segment' → logprob: -16.7500057220459
    8. ' segment' → logprob: -17.3750057220459
    9. '[module' → logprob: -17.3750057220459
    10. '[node' → logprob: -17.6250057220459

Token 146: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0001805377542041242
    2. '[' → logprob: -8.8751802444458
    3. ' segment' → logprob: -10.2501802444458
    4. 'seg' → logprob: -12.5001802444458
    5. '(segment' → logprob: -14.1251802444458
    6. '
' → logprob: -15.0001802444458
    7. '```' → logprob: -15.8751802444458
    8. 'Segment' → logprob: -16.500181198120117
    9. '   ' → logprob: -16.500181198120117
    10. '.segment' → logprob: -16.625181198120117

Token 147: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.024631468579173088
    2. '[' → logprob: -3.8996315002441406
    3. 'segment' → logprob: -5.649631500244141
    4. ']' → logprob: -8.14963150024414
    5. 'idx' → logprob: -9.52463150024414
    6. '_]' → logprob: -9.89963150024414
    7. ' segment' → logprob: -10.52463150024414
    8. '_limits' → logprob: -10.64963150024414
    9. '(segment' → logprob: -11.02463150024414
    10. '```' → logprob: -11.02463150024414

Token 148: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3456787168979645
    2. '<' → logprob: -1.345678687095642
    3. ')' → logprob: -4.095678806304932
    4. ']' → logprob: -5.345678806304932
    5. '   ' → logprob: -5.470678806304932
    6. '>' → logprob: -5.970678806304932
    7. ' ' → logprob: -6.345678806304932
    8. '    ' → logprob: -7.720678806304932
    9. '       ' → logprob: -8.595678329467773
    10. ' >' → logprob: -8.595678329467773

Token 149: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4760538935661316
    2. ' <' → logprob: -0.9760538935661316
    3. '>' → logprob: -6.601053714752197
    4. ' ' → logprob: -8.976054191589355
    5. ' >' → logprob: -8.976054191589355
    6. ')' → logprob: -9.351054191589355
    7. '=' → logprob: -9.476054191589355
    8. '<|end|>' → logprob: -10.101054191589355
    9. '   ' → logprob: -10.351054191589355
    10. '<int' → logprob: -10.976054191589355

Token 150: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.044742830097675323
    2. ' ' → logprob: -3.2947428226470947
    3. '-' → logprob: -5.044743061065674
    4. ' -' → logprob: -9.044742584228516
    5. 'segment' → logprob: -10.169742584228516
    6. '   ' → logprob: -11.294742584228516
    7. '0' → logprob: -11.669742584228516
    8. ' segment' → logprob: -11.669742584228516
    9. 'current' → logprob: -11.794742584228516
    10. '
' → logprob: -11.794742584228516

Token 151: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.004280922934412956
    2. '-' → logprob: -6.004281044006348
    3. ' ' → logprob: -6.379281044006348
    4. 'segment' → logprob: -10.129281044006348
    5. '   ' → logprob: -10.879281044006348
    6. ' -' → logprob: -11.379281044006348
    7. 'current' → logprob: -11.629281044006348
    8. '  ' → logprob: -12.629281044006348
    9. '0' → logprob: -12.754281044006348
    10. 'min' → logprob: -12.754281044006348

Token 152: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16158683598041534
    2. '200' → logprob: -1.911586880683899
    3. '00' → logprob: -7.911586761474609
    4. ' ' → logprob: -8.03658676147461
    5. '0' → logprob: -8.28658676147461
    6. '```' → logprob: -8.91158676147461
    7. '{' → logprob: -10.28658676147461
    8. '-' → logprob: -10.28658676147461
    9. '   ' → logprob: -10.28658676147461
    10. '
' → logprob: -10.91158676147461

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.623329758644104
    2. ' and' → logprob: -0.873329758644104
    3. ':
' → logprob: -3.8733296394348145
    4. 'and' → logprob: -4.3733296394348145
    5. '):' → logprob: -5.4983296394348145
    6. '=' → logprob: -6.1233296394348145
    7. '):
' → logprob: -6.3733296394348145
    8. ' :' → logprob: -6.3733296394348145
    9. '       ' → logprob: -6.8733296394348145
    10. ')' → logprob: -7.1233296394348145

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057484548538923264
    2. ':' → logprob: -3.9324846267700195
    3. 'current' → logprob: -3.9324846267700195
    4. ' current' → logprob: -4.4324846267700195
    5. '=' → logprob: -6.0574846267700195
    6. '=current' → logprob: -7.0574846267700195
    7. '   ' → logprob: -7.9324846267700195
    8. ':
' → logprob: -8.05748462677002
    9. ' =' → logprob: -8.18248462677002
    10. '[current' → logprob: -8.18248462677002

Token 155: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.03804642707109451
    2. ' current' → logprob: -3.288046360015869
    3. '       ' → logprob: -13.163046836853027
    4. '
' → logprob: -14.038046836853027
    5. 'if' → logprob: -14.288046836853027
    6. '	current' → logprob: -14.538046836853027
    7. '           ' → logprob: -14.538046836853027
    8. '   ' → logprob: -15.663046836853027
    9. '=current' → logprob: -15.663046836853027
    10. 'Current' → logprob: -16.41304588317871

Token 156: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.2855416066013277e-05
    2. 'right' → logprob: -10.500032424926758
    3. 'Right' → logprob: -14.000032424926758
    4. '_' → logprob: -14.250032424926758
    5. '_RIGHT' → logprob: -14.500032424926758
    6. '_left' → logprob: -14.625032424926758
    7. '```' → logprob: -14.750032424926758
    8. '_r' → logprob: -14.875032424926758
    9. '[right' → logprob: -15.125032424926758
    10. '_Right' → logprob: -15.125032424926758

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029781386256217957
    2. ' =' → logprob: -3.5297813415527344
    3. '=min' → logprob: -10.404781341552734
    4. '=max' → logprob: -15.154781341552734
    5. 'min' → logprob: -15.404781341552734
    6. '.=' → logprob: -17.404781341552734
    7. '=
' → logprob: -17.654781341552734
    8. '=

' → logprob: -17.654781341552734
    9. '   ' → logprob: -18.029781341552734
    10. '+=' → logprob: -18.404781341552734

Token 158: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.13148769736289978
    2. ' max' → logprob: -2.6314876079559326
    3. 'min' → logprob: -3.1314876079559326
    4. 'max' → logprob: -4.881487846374512
    5. '	min' → logprob: -16.256486892700195
    6. '	max' → logprob: -18.381486892700195
    7. '[min' → logprob: -18.506486892700195
    8. ' ' → logprob: -18.881486892700195
    9. '(min' → logprob: -18.881486892700195
    10. '   ' → logprob: -19.506486892700195

Token 159: '(segment' (ID: 144369)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0011803467059507966
    2. '(' → logprob: -7.001180171966553
    3. '(segment' → logprob: -8.251180648803711
    4. 'current' → logprob: -12.126180648803711
    5. '(
' → logprob: -13.376180648803711
    6. '(cur' → logprob: -15.251180648803711
    7. 'segment' → logprob: -15.501180648803711
    8. ' current' → logprob: -16.00118064880371
    9. ' (' → logprob: -16.37618064880371
    10. '(c' → logprob: -17.12618064880371

Token 160: '_limits' (ID: 80205)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.38734012842178345
    2. '_limits' → logprob: -1.1373400688171387
    3. '_left' → logprob: -9.137340545654297
    4. '_limit' → logprob: -9.637340545654297
    5. 'Right' → logprob: -9.762340545654297
    6. '_' → logprob: -9.887340545654297
    7. 'limits' → logprob: -10.137340545654297
    8. 'right' → logprob: -10.262340545654297
    9. '(segment' → logprob: -10.387340545654297
    10. 'Limits' → logprob: -11.637340545654297

Token 161: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.001515100128017366
    2. '[' → logprob: -6.501514911651611
    3. 'current' → logprob: -12.12651538848877
    4. '(current' → logprob: -12.25151538848877
    5. '[
' → logprob: -13.62651538848877
    6. ')' → logprob: -15.25151538848877
    7. ',current' → logprob: -15.37651538848877
    8. '[cur' → logprob: -15.87651538848877
    9. '_current' → logprob: -16.376514434814453
    10. '[node' → logprob: -16.376514434814453

Token 162: 'segment' (ID: 45362)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0019637243822216988
    2. '[current' → logprob: -6.7519636154174805
    3. '[' → logprob: -7.7519636154174805
    4. 'segment' → logprob: -8.12696361541748
    5. ' current' → logprob: -9.62696361541748
    6. '_current' → logprob: -14.12696361541748
    7. '   ' → logprob: -15.00196361541748
    8. ')' → logprob: -15.25196361541748
    9. '[
' → logprob: -15.25196361541748
    10. ',current' → logprob: -16.376964569091797

Token 163: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.007025445811450481
    2. '[' → logprob: -5.007025241851807
    3. ']' → logprob: -9.507025718688965
    4. 'idx' → logprob: -9.757025718688965
    5. '])' → logprob: -9.882025718688965
    6. ')' → logprob: -10.382025718688965
    7. '```' → logprob: -10.757025718688965
    8. '   ' → logprob: -11.007025718688965
    9. 'Idx' → logprob: -11.382025718688965
    10. ')]' → logprob: -11.632025718688965

Token 164: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05657958984375
    2. ' ,' → logprob: -3.43157958984375
    3. ',current' → logprob: -3.80657958984375
    4. '),' → logprob: -8.55657958984375
    5. ')' → logprob: -9.05657958984375
    6. 'current' → logprob: -10.18157958984375
    7. '],' → logprob: -10.30657958984375
    8. ' current' → logprob: -11.30657958984375
    9. '(current' → logprob: -11.43157958984375
    10. ',
' → logprob: -11.55657958984375

Token 165: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931476593017578
    2. 'current' → logprob: -0.6931476593017578
    3. '	current' → logprob: -15.318147659301758
    4. '   ' → logprob: -16.443147659301758
    5. '[current' → logprob: -16.568147659301758
    6. '(current' → logprob: -17.193147659301758
    7. '$current' → logprob: -17.443147659301758
    8. '       ' → logprob: -17.943147659301758
    9. '_current' → logprob: -18.693147659301758
    10. '=current' → logprob: -18.818147659301758

Token 166: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -2.6776029699249193e-05
    2. 'right' → logprob: -10.62502670288086
    3. 'Right' → logprob: -13.75002670288086
    4. '_current' → logprob: -14.37502670288086
    5. '_RIGHT' → logprob: -15.00002670288086
    6. '_' → logprob: -15.87502670288086
    7. '_Right' → logprob: -15.87502670288086
    8. '_r' → logprob: -16.62502670288086
    9. '_left' → logprob: -17.12502670288086
    10. '[right' → logprob: -17.50002670288086

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003370118502061814
    2. ')
' → logprob: -8.500336647033691
    3. ' )' → logprob: -9.625336647033691
    4. '<|end|>' → logprob: -9.750336647033691
    5. '   ' → logprob: -12.500336647033691
    6. '       ' → logprob: -13.250336647033691
    7. '```' → logprob: -14.000336647033691
    8. '
' → logprob: -14.625336647033691
    9. ')}' → logprob: -14.875336647033691
    10. '}' → logprob: -15.000336647033691

Token 168: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '(segment' (ID: 144369)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07896535843610764
    2. '(segment' → logprob: -2.578965425491333
    3. '()' → logprob: -10.078965187072754
    4. '(
' → logprob: -11.328965187072754
    5. '('' → logprob: -12.078965187072754
    6. ' (' → logprob: -12.578965187072754
    7. '("("' → logprob: -12.703965187072754
    8. '(len' → logprob: -12.828965187072754
    9. '(seg' → logprob: -13.078965187072754
    10. 'segment' → logprob: -13.328965187072754

Token 170: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -16.5
    3. '_' → logprob: -16.5
    4. '_counts' → logprob: -16.75
    5. 'count' → logprob: -17.25
    6. ')_' → logprob: -17.625
    7. '_co' → logprob: -18.375
    8. '_cont' → logprob: -18.875
    9. '_)' → logprob: -19.0
    10. ' _' → logprob: -19.125

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ' )' → logprob: -11.750016212463379
    3. '+' → logprob: -12.375016212463379
    4. ')
' → logprob: -12.500016212463379
    5. '+)' → logprob: -17.000015258789062
    6. '```' → logprob: -17.125015258789062
    7. '#' → logprob: -17.375015258789062
    8. '))' → logprob: -17.375015258789062
    9. ')`' → logprob: -17.375015258789062
    10. '*' → logprob: -17.625015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 169
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 145
Précision stricte (1ère position): 47.34%
Précision adaptée (1ère position): 48.52%
Précision (top 10): 85.80%
================================================================================
