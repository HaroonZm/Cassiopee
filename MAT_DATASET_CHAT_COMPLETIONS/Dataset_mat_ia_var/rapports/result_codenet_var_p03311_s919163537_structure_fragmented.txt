================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input())

def read_array():
    return list(map(int, input().split()))

def initialize_B(N):
    return [0] * N

def compute_B_element(A, i):
    return A[i] - i

def build_B(A, N):
    B = initialize_B(N)
    for i in range(N):
        B[i] = compute_B_element(A, i)
    return B

def sort_array(arr):
    arr.sort()
    return arr

def median_index(N):
    return N // 2

def compute_b(B, N):
    idx = median_index(N)
    return B[idx] - 1

def abs_difference(a, b):
    return abs(a - b)

def compute_adjusted_value(b, i):
    return b + i + 1

def accumulate_difference(ans, diff):
    return ans + diff

def compute_total_cost(A, b, N):
    ans = 0
    for i in range(N):
        target = compute_adjusted_value(b, i)
        diff = abs_difference(A[i], target)
        ans = accumulate_difference(ans, diff)
    return ans

def print_result(ans):
    print(ans)

def main():
    N = read_input()
    A = read_array()
    B = build_B(A, N)
    B = sort_array(B)
    b = compute_b(B, N)
    ans = compute_total_cost(A, b, N)
    print_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' (adapté à ' return') → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21319261193275452
    2. ' input' → logprob: -2.2131927013397217
    3. 'input' → logprob: -3.0881927013397217
    4. '"' → logprob: -3.4631927013397217
    5. ''' → logprob: -5.588192462921143
    6. ' []' → logprob: -7.588192462921143
    7. '  ' → logprob: -7.963192462921143
    8. ' "' → logprob: -8.5881929397583
    9. ' None' → logprob: -9.0881929397583
    10. '(input' → logprob: -9.2131929397583

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005015624337829649
    2. '('' → logprob: -8.37550163269043
    3. ''' → logprob: -9.62550163269043
    4. '```' → logprob: -9.62550163269043
    5. ' (' → logprob: -10.75050163269043
    6. '`' → logprob: -11.00050163269043
    7. '(open' → logprob: -11.00050163269043
    8. '("("' → logprob: -11.12550163269043
    9. '(input' → logprob: -11.25050163269043
    10. '()' → logprob: -11.50050163269043

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23295630514621735
    2. '(' → logprob: -1.8579562902450562
    3. '()' → logprob: -3.7329564094543457
    4. ')' → logprob: -3.9829564094543457
    5. '()))' → logprob: -4.982956409454346
    6. '))' → logprob: -6.982956409454346
    7. '(()' → logprob: -7.607956409454346
    8. ' ())' → logprob: -8.232955932617188
    9. '('' → logprob: -8.482955932617188
    10. '(""))' → logprob: -8.732955932617188

Token 9: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2878761291503906
    2. 'def' → logprob: -1.7878761291503906
    3. '\n' → logprob: -1.7878761291503906
    4. '
' → logprob: -2.2878761291503906
    5. '<|end|>' → logprob: -2.7878761291503906
    6. '```' → logprob: -2.9128761291503906
    7. '(' → logprob: -3.0378761291503906
    8. ' ' → logprob: -3.7878761291503906
    9. ')' → logprob: -4.412876129150391
    10. '' → logprob: -4.412876129150391

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.3484419286251068
    2. ' write' → logprob: -2.4734418392181396
    3. ' main' → logprob: -2.5984418392181396
    4. ' compute' → logprob: -2.7234418392181396
    5. ' process' → logprob: -3.4734418392181396
    6. ' read' → logprob: -4.223442077636719
    7. ' add' → logprob: -4.473442077636719
    8. ' space' → logprob: -5.348442077636719
    9. ' sum' → logprob: -6.348442077636719
    10. ' ' → logprob: -6.848442077636719

Token 11: '_array' (ID: 8766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007633247412741184
    2. '_input' → logprob: -5.132633209228516
    3. '_line' → logprob: -6.757633209228516
    4. '_output' → logprob: -8.507633209228516
    5. '_string' → logprob: -9.132633209228516
    6. '(' → logprob: -9.882633209228516
    7. '_data' → logprob: -10.382633209228516
    8. '_value' → logprob: -10.757633209228516
    9. ' _' → logprob: -11.007633209228516
    10. '()' → logprob: -11.257633209228516

Token 12: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12320176512002945
    2. '(' → logprob: -2.248201847076416
    3. '():' → logprob: -5.123201847076416
    4. '()(' → logprob: -6.873201847076416
    5. '(size' → logprob: -6.998201847076416
    6. '_' → logprob: -7.248201847076416
    7. '```' → logprob: -8.748201370239258
    8. '(()' → logprob: -8.873201370239258
    9. '()>' → logprob: -9.248201370239258
    10. '()[' → logprob: -9.373201370239258

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034464688505977392
    2. '(' → logprob: -6.628446578979492
    3. '[]' → logprob: -7.003446578979492
    4. '    ' → logprob: -7.128446578979492
    5. '[' → logprob: -8.878446578979492
    6. '    
' → logprob: -9.253446578979492
    7. ' return' → logprob: -9.628446578979492
    8. '()' → logprob: -9.878446578979492
    9. 'return' → logprob: -11.628446578979492
    10. ' (' → logprob: -11.878446578979492

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0286489836871624
    2. 'return' (adapté à ' return') → logprob: -4.528648853302002
    3. ' return' → logprob: -4.528648853302002
    4. '[]' → logprob: -5.528648853302002
    5. ' []' → logprob: -7.278648853302002
    6. 'array' → logprob: -7.528648853302002
    7. '[' → logprob: -7.653648853302002
    8. ' ' → logprob: -8.52864933013916
    9. '    ' → logprob: -8.77864933013916
    10. '       ' → logprob: -8.77864933013916

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04650124907493591
    2. 'list' → logprob: -3.1715011596679688
    3. ' [' → logprob: -6.171501159667969
    4. '[list' → logprob: -7.171501159667969
    5. '[' → logprob: -7.671501159667969
    6. ' ' → logprob: -9.046501159667969
    7. ' []' → logprob: -10.171501159667969
    8. '(list' → logprob: -12.421501159667969
    9. '[int' → logprob: -12.671501159667969
    10. '  ' → logprob: -12.796501159667969

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028094066306948662
    2. '(int' → logprob: -3.7780940532684326
    3. '(map' → logprob: -5.778094291687012
    4. '(input' → logprob: -6.528094291687012
    5. '(range' → logprob: -8.778094291687012
    6. ' (' → logprob: -10.278094291687012
    7. '(eval' → logprob: -10.653094291687012
    8. '(

' → logprob: -11.153094291687012
    9. '(list' → logprob: -11.778094291687012
    10. '[int' → logprob: -12.028094291687012

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009878505021333694
    2. '(' → logprob: -4.634878635406494
    3. 'int' → logprob: -9.634878158569336
    4. '(
' → logprob: -11.384878158569336
    5. '=int' → logprob: -11.509878158569336
    6. ' int' → logprob: -11.509878158569336
    7. '<int' → logprob: -11.634878158569336
    8. ',int' → logprob: -12.134878158569336
    9. ')' → logprob: -12.509878158569336
    10. '(input' → logprob: -13.134878158569336

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05169975385069847
    2. ',input' → logprob: -3.176699638366699
    3. ',' → logprob: -5.301699638366699
    4. 'input' → logprob: -6.301699638366699
    5. '(' → logprob: -6.676699638366699
    6. ' (' → logprob: -8.5516996383667
    7. '=input' → logprob: -8.8016996383667
    8. ' input' → logprob: -8.9266996383667
    9. '))' → logprob: -10.4266996383667
    10. ')' → logprob: -10.5516996383667

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25195279717445374
    2. ' input' → logprob: -1.5019527673721313
    3. '(input' → logprob: -11.126953125
    4. ' ' → logprob: -13.126953125
    5. '   ' → logprob: -13.126953125
    6. '	input' → logprob: -13.626953125
    7. ',input' → logprob: -13.626953125
    8. '=input' → logprob: -13.876953125
    9. '<input' → logprob: -14.501953125
    10. '  ' → logprob: -15.626953125

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013309523928910494
    2. '()))' → logprob: -7.251330852508545
    3. '()' → logprob: -7.876330852508545
    4. '))' → logprob: -8.626331329345703
    5. '())' → logprob: -10.751331329345703
    6. ')' → logprob: -11.001331329345703
    7. '())))' → logprob: -11.751331329345703
    8. '()));' → logprob: -12.251331329345703
    9. ')))' → logprob: -12.501331329345703
    10. ' ().' → logprob: -13.126331329345703

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003184363478794694
    2. 'strip' → logprob: -5.7531843185424805
    3. 'rstrip' → logprob: -12.12818431854248
    4. ' split' → logprob: -13.62818431854248
    5. '(split' → logprob: -17.253185272216797
    6. 'spl' → logprob: -17.753185272216797
    7. 'read' → logprob: -18.128185272216797
    8. ')' → logprob: -18.128185272216797
    9. ' ' → logprob: -18.128185272216797
    10. ' strip' → logprob: -18.878185272216797

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02949531190097332
    2. '()' → logprob: -4.5294952392578125
    3. '())))' → logprob: -4.5294952392578125
    4. '())' → logprob: -5.6544952392578125
    5. '))' → logprob: -5.9044952392578125
    6. ')))' → logprob: -6.7794952392578125
    7. '(' → logprob: -10.029495239257812
    8. ')' → logprob: -10.654495239257812
    9. '()))
' → logprob: -11.154495239257812
    10. '()));' → logprob: -11.654495239257812

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20392493903636932
    2. 'd' → logprob: -1.7039248943328857
    3. 'n' → logprob: -6.828925132751465
    4. '#' → logprob: -7.828925132751465
    5. '
' → logprob: -8.203925132751465
    6. '

' → logprob: -8.578925132751465
    7. '```' → logprob: -8.703925132751465
    8. '\' → logprob: -9.203925132751465
    9. 'de' → logprob: -9.328925132751465
    10. 'a' → logprob: -9.703925132751465

Token 24: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.614308774471283
    2. ' solve' → logprob: -1.3643088340759277
    3. 'solve' → logprob: -2.3643088340759277
    4. ' write' → logprob: -2.8643088340759277
    5. 'main' → logprob: -3.6143088340759277
    6. 'write' → logprob: -4.614308834075928
    7. ' factorial' → logprob: -5.489308834075928
    8. ' binary' → logprob: -6.114308834075928
    9. 'binary' → logprob: -6.489308834075928
    10. ' sum' → logprob: -6.489308834075928

Token 25: '_B' (ID: 3201)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5962509512901306
    2. '_array' → logprob: -0.8462509512901306
    3. '(' → logprob: -5.221251010894775
    4. '_matrix' → logprob: -5.846251010894775
    5. '_counter' → logprob: -6.596251010894775
    6. '_data' → logprob: -6.721251010894775
    7. '_stack' → logprob: -7.221251010894775
    8. '_arrays' → logprob: -7.221251010894775
    9. '_vector' → logprob: -7.346251010894775
    10. '_list' → logprob: -7.346251010894775

Token 26: '(N' (ID: 10564)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3073132634162903
    2. '[]' → logprob: -2.5573132038116455
    3. '_' → logprob: -2.6823132038116455
    4. '_array' → logprob: -3.0573132038116455
    5. '():' → logprob: -3.6823132038116455
    6. '(' → logprob: -4.057313442230225
    7. '(size' → logprob: -5.182313442230225
    8. '(len' → logprob: -5.932313442230225
    9. '(N' → logprob: -6.307313442230225
    10. '[' → logprob: -6.307313442230225

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28314417600631714
    2. ',' → logprob: -1.408144235610962
    3. '):
' → logprob: -6.783143997192383
    4. ' ):' → logprob: -7.408143997192383
    5. ' ,' → logprob: -9.408143997192383
    6. ')' → logprob: -9.533143997192383
    7. ',size' → logprob: -11.033143997192383
    8. '   ' → logprob: -11.283143997192383
    9. ',n' → logprob: -11.658143997192383
    10. '):
' → logprob: -11.783143997192383

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001877231989055872
    2. ':' → logprob: -7.501877307891846
    3. ' return' → logprob: -8.251876831054688
    4. 'B' → logprob: -8.376876831054688
    5. ' =' → logprob: -8.501876831054688
    6. 'return' → logprob: -9.126876831054688
    7. '[' → logprob: -9.126876831054688
    8. ' ' → logprob: -9.876876831054688
    9. ':
' → logprob: -9.876876831054688
    10. '  ' → logprob: -10.126876831054688

Token 29: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040019843727350235
    2. ' return' → logprob: -3.9150197505950928
    3. ' [' → logprob: -4.915019989013672
    4. '[' → logprob: -5.415019989013672
    5. 'return' (adapté à ' return') → logprob: -5.665019989013672
    6. 'B' → logprob: -5.915019989013672
    7. ' B' → logprob: -6.915019989013672
    8. ' ' → logprob: -8.790019989013672
    9. '    ' → logprob: -9.165019989013672
    10. '  ' → logprob: -10.790019989013672

Token 30: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10024948418140411
    2. ' [' → logprob: -2.3502495288848877
    3. '[N' → logprob: -10.475249290466309
    4. '[n' → logprob: -12.350249290466309
    5. '[B' → logprob: -12.475249290466309
    6. '[int' → logprob: -13.225249290466309
    7. ' ' → logprob: -14.100249290466309
    8. '[len' → logprob: -14.475249290466309
    9. '[-' → logprob: -14.475249290466309
    10. '[np' → logprob: -15.100249290466309

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002907718007918447
    2. ' ' → logprob: -8.750290870666504
    3. 'False' → logprob: -9.625290870666504
    4. '1' → logprob: -10.750290870666504
    5. '-' → logprob: -10.750290870666504
    6. '[' → logprob: -12.125290870666504
    7. 'float' → logprob: -12.250290870666504
    8. 'None' → logprob: -12.750290870666504
    9. '   ' → logprob: -13.625290870666504
    10. ']' → logprob: -13.625290870666504

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029031820595264435
    2. ']*(' → logprob: -6.502902984619141
    3. ']*' → logprob: -6.627902984619141
    4. ' for' → logprob: -9.75290298461914
    5. ' ]' → logprob: -11.37790298461914
    6. 'for' → logprob: -12.75290298461914
    7. '   ' → logprob: -12.87790298461914
    8. ']+' → logprob: -14.37790298461914
    9. ',' → logprob: -14.62790298461914
    10. ')' → logprob: -15.12790298461914

Token 33: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47755470871925354
    2. ' *' → logprob: -0.9775546789169312
    3. '+' → logprob: -6.852554798126221
    4. ' ' → logprob: -7.602554798126221
    5. '*N' → logprob: -7.602554798126221
    6. '*(' → logprob: -7.727554798126221
    7. '*[' → logprob: -7.727554798126221
    8. '[' → logprob: -8.602554321289062
    9. ' for' → logprob: -8.977554321289062
    10. '<|end|>' → logprob: -9.977554321289062

Token 34: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.056370820850133896
    2. '(N' → logprob: -3.181370735168457
    3. ' N' → logprob: -4.806370735168457
    4. '(' → logprob: -5.806370735168457
    5. ' (' → logprob: -6.181370735168457
    6. ' ' → logprob: -10.931370735168457
    7. '	N' → logprob: -12.681370735168457
    8. '   ' → logprob: -13.868870735168457
    9. '(n' → logprob: -13.931370735168457
    10. '_N' → logprob: -14.056370735168457

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4436359107494354
    2. '<|end|>' → logprob: -1.1936359405517578
    3. 'def' → logprob: -3.318635940551758
    4. '

' → logprob: -4.443635940551758
    5. '<|end|>' → logprob: -6.068635940551758
    6. 'newline' → logprob: -6.943635940551758
    7. '
' → logprob: -7.193635940551758
    8. '```' → logprob: -7.318635940551758
    9. '[' → logprob: -7.318635940551758
    10. '\n' → logprob: -7.443635940551758

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14659690856933594
    2. '

' → logprob: -2.021596908569336
    3. '
' → logprob: -5.771596908569336
    4. ' def' → logprob: -8.146596908569336
    5. '<|end|>' → logprob: -8.521596908569336
    6. '```' → logprob: -9.146596908569336
    7. '\' → logprob: -10.146596908569336
    8. '<|end|>' → logprob: -10.271596908569336
    9. ' 

' → logprob: -10.396596908569336
    10. '
' → logprob: -10.896596908569336

Token 37: ' compute' (ID: 23864)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.12404212355613708
    2. '_' → logprob: -2.74904203414917
    3. ' process' → logprob: -4.87404203414917
    4. ' build' → logprob: -5.12404203414917
    5. ' ' → logprob: -5.24904203414917
    6. '_update' → logprob: -5.24904203414917
    7. ' solve' → logprob: -5.37404203414917
    8. ' compute' → logprob: -5.62404203414917
    9. ' calculate' → logprob: -5.74904203414917
    10. ' multiply' → logprob: -6.12404203414917

Token 38: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.020843857899308205
    2. '_prefix' → logprob: -4.520843982696533
    3. '_' → logprob: -5.395843982696533
    4. '_A' → logprob: -7.020843982696533
    5. 'B' → logprob: -7.145843982696533
    6. '_sum' → logprob: -7.270843982696533
    7. '_difference' → logprob: -8.020843505859375
    8. '_C' → logprob: -8.145843505859375
    9. '_diff' → logprob: -8.645843505859375
    10. '_S' → logprob: -8.895843505859375

Token 39: '_element' (ID: 21131)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3967324197292328
    2. '(' → logprob: -1.1467324495315552
    3. '(A' → logprob: -5.146732330322266
    4. '(B' → logprob: -5.896732330322266
    5. '(i' → logprob: -8.271732330322266
    6. '```' → logprob: -8.396732330322266
    7. '((' → logprob: -8.896732330322266
    8. ' (' → logprob: -9.021732330322266
    9. '(I' → logprob: -9.146732330322266
    10. '_' → logprob: -9.646732330322266

Token 40: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01797105185687542
    2. '(N' → logprob: -4.392971038818359
    3. '(i' → logprob: -5.392971038818359
    4. '(B' → logprob: -7.392971038818359
    5. '(n' → logprob: -9.26797103881836
    6. '(index' → logprob: -10.01797103881836
    7. '((' → logprob: -10.39297103881836
    8. '```' → logprob: -10.89297103881836
    9. '(s' → logprob: -11.39297103881836
    10. '()' → logprob: -11.51797103881836

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028423182666301727
    2. ',i' → logprob: -6.377842426300049
    3. '[i' → logprob: -7.752842426300049
    4. ' ,' → logprob: -8.25284194946289
    5. '[' → logprob: -8.75284194946289
    6. ',N' → logprob: -9.75284194946289
    7. '):' → logprob: -9.87784194946289
    8. '   ' → logprob: -10.12784194946289
    9. ')' → logprob: -10.62784194946289
    10. '[N' → logprob: -10.62784194946289

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6367098689079285
    2. 'i' → logprob: -0.8867098689079285
    3. ' N' → logprob: -4.386709690093994
    4. 'N' → logprob: -4.761709690093994
    5. ' B' → logprob: -5.011709690093994
    6. ' idx' → logprob: -5.011709690093994
    7. ' index' → logprob: -5.261709690093994
    8. ' j' → logprob: -5.511709690093994
    9. 'B' → logprob: -5.636709690093994
    10. 'index' → logprob: -5.636709690093994

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23700512945652008
    2. ')' → logprob: -1.8620051145553589
    3. '-' → logprob: -3.2370052337646484
    4. '):
' → logprob: -4.862005233764648
    5. '+' → logprob: -5.737005233764648
    6. ' ):' → logprob: -6.112005233764648
    7. ',' → logprob: -6.612005233764648
    8. ' )' → logprob: -7.487005233764648
    9. ' -' → logprob: -7.612005233764648
    10. '   ' → logprob: -7.862005233764648

Token 44: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5132828950881958
    2. '   ' → logprob: -2.3882827758789062
    3. ' =' → logprob: -2.8882827758789062
    4. ')' → logprob: -3.0132827758789062
    5. ' A' → logprob: -3.0132827758789062
    6. '=' → logprob: -3.1382827758789062
    7. '+' → logprob: -3.8882827758789062
    8. ' ' → logprob: -4.013282775878906
    9. '(' → logprob: -4.138282775878906
    10. '0' → logprob: -4.263282775878906

Token 45: ' return' (ID: 622)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39203646779060364
    2. ' A' → logprob: -1.2670364379882812
    3. ' max' → logprob: -4.267036437988281
    4. ' return' → logprob: -4.767036437988281
    5. 'return' (adapté à ' return') → logprob: -5.392036437988281
    6. 'max' → logprob: -5.392036437988281
    7. '   ' → logprob: -6.017036437988281
    8. 'sum' → logprob: -6.392036437988281
    9. ' sum' → logprob: -6.642036437988281
    10. '(A' → logprob: -7.267036437988281

Token 46: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09110352396965027
    2. ' A' → logprob: -2.4661035537719727
    3. '(A' → logprob: -6.841103553771973
    4. '   ' → logprob: -7.966103553771973
    5. 'sum' → logprob: -8.341103553771973
    6. ' (' → logprob: -9.341103553771973
    7. '0' → logprob: -9.591103553771973
    8. '2' → logprob: -9.716103553771973
    9. ' sum' → logprob: -9.966103553771973
    10. 'max' → logprob: -9.966103553771973

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028767958283424377
    2. '[' → logprob: -5.8778767585754395
    3. 'i' → logprob: -10.002877235412598
    4. '[I' → logprob: -12.127877235412598
    5. '[
' → logprob: -12.127877235412598
    6. '```' → logprob: -12.877877235412598
    7. ' [' → logprob: -13.502877235412598
    8. '[A' → logprob: -13.627877235412598
    9. '[-' → logprob: -14.065377235412598
    10. ' i' → logprob: -14.127877235412598

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09576305001974106
    2. '-' → logprob: -2.4707629680633545
    3. ']+' → logprob: -5.970763206481934
    4. ' -' → logprob: -6.345763206481934
    5. ' ]' → logprob: -6.845763206481934
    6. ']*' → logprob: -7.970763206481934
    7. '+' → logprob: -7.970763206481934
    8. ' ' → logprob: -9.095763206481934
    9. ')' → logprob: -9.220763206481934
    10. '])' → logprob: -9.345763206481934

Token 49: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.040902841836214066
    2. '<|end|>' → logprob: -3.915902853012085
    3. ' +' → logprob: -4.665902614593506
    4. '*' → logprob: -4.790902614593506
    5. '-' → logprob: -6.665902614593506
    6. 'def' → logprob: -8.415903091430664
    7. '<|end|>' → logprob: -8.540903091430664
    8. ' ' → logprob: -9.165903091430664
    9. ' *' → logprob: -9.415903091430664
    10. '[' → logprob: -9.540903091430664

Token 50: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4909072816371918
    2. '1' → logprob: -0.9909073114395142
    3. 'i' → logprob: -4.990907192230225
    4. ' A' → logprob: -5.865907192230225
    5. 'B' → logprob: -6.115907192230225
    6. ' ' → logprob: -6.240907192230225
    7. '2' → logprob: -6.865907192230225
    8. '(i' → logprob: -7.740907192230225
    9. '0' → logprob: -7.865907192230225
    10. '(' → logprob: -7.865907192230225

Token 51: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49685701727867126
    2. '<|end|>' → logprob: -0.9968570470809937
    3. '
' → logprob: -4.371857166290283
    4. '*' → logprob: -6.121857166290283
    5. '

' → logprob: -6.246857166290283
    6. '<|end|>' → logprob: -6.371857166290283
    7. ')' → logprob: -6.871857166290283
    8. ' def' → logprob: -7.371857166290283
    9. '```' → logprob: -7.371857166290283
    10. '\' → logprob: -7.621857166290283

Token 53: ' build' (ID: 3024)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06558303534984589
    2. 'def' → logprob: -3.5655829906463623
    3. ' compute' → logprob: -3.9405829906463623
    4. ' ' → logprob: -4.565583229064941
    5. '_' → logprob: -6.190583229064941
    6. ' define' → logprob: -7.065583229064941
    7. 'd' → logprob: -7.190583229064941
    8. ' d' → logprob: -7.940583229064941
    9. ' write' → logprob: -8.315583229064941
    10. ' initialize' → logprob: -8.440583229064941

Token 54: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.00033308175625279546
    2. 'B' → logprob: -8.625332832336426
    3. '(B' → logprob: -9.625332832336426
    4. ' _' → logprob: -10.500332832336426
    5. '_' → logprob: -11.250332832336426
    6. '```' → logprob: -11.500332832336426
    7. ' B' → logprob: -11.625332832336426
    8. 'def' → logprob: -12.000332832336426
    9. '(_' → logprob: -12.125332832336426
    10. '(' → logprob: -12.500332832336426

Token 55: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9162325263023376
    2. '(N' → logprob: -0.9162325263023376
    3. '(A' → logprob: -1.6662325859069824
    4. '(B' → logprob: -4.541232585906982
    5. 'def' → logprob: -9.166232109069824
    6. '_(' → logprob: -10.041232109069824
    7. '```' → logprob: -10.416232109069824
    8. '(n' → logprob: -10.666232109069824
    9. ' (' → logprob: -11.291232109069824
    10. '_' → logprob: -11.291232109069824

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05599520727992058
    2. '):' → logprob: -2.930995225906372
    3. ')' → logprob: -6.930994987487793
    4. '):
' → logprob: -9.555994987487793
    5. ' ,' → logprob: -10.805994987487793
    6. ',N' → logprob: -10.930994987487793
    7. '   ' → logprob: -12.055994987487793
    8. ' ):' → logprob: -12.180994987487793
    9. '),' → logprob: -12.430994987487793
    10. ')):' → logprob: -13.680994987487793

Token 57: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.558046817779541
    2. 'len' → logprob: -1.433046817779541
    3. ' len' → logprob: -2.183046817779541
    4. ' N' → logprob: -2.683046817779541
    5. ')' → logprob: -5.183046817779541
    6. '   ' → logprob: -7.308046817779541
    7. ' ' → logprob: -8.058046340942383
    8. ' range' → logprob: -8.433046340942383
    9. 'A' → logprob: -8.558046340942383
    10. 'B' → logprob: -8.683046340942383

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046868418576195836
    2. ')' → logprob: -8.000468254089355
    3. '):
' → logprob: -9.000468254089355
    4. ',' → logprob: -12.500468254089355
    5. ' ):' → logprob: -12.625468254089355
    6. '   ' → logprob: -13.250468254089355
    7. '):
' → logprob: -14.375468254089355
    8. ':' → logprob: -15.500468254089355
    9. ' ' → logprob: -16.500469207763672
    10. ')：' → logprob: -16.500469207763672

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003398363711312413
    2. 'B' → logprob: -5.753398418426514
    3. ' B' → logprob: -8.878397941589355
    4. ' ' → logprob: -10.253397941589355
    5. '```' → logprob: -11.128397941589355
    6. '	B' → logprob: -11.503397941589355
    7. ')' → logprob: -12.378397941589355
    8. '   ' → logprob: -12.628397941589355
    9. '  ' → logprob: -12.753397941589355
    10. '    
' → logprob: -12.878397941589355

Token 60: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.05253112316131592
    2. ' B' → logprob: -3.5525312423706055
    3. '   ' → logprob: -3.8025312423706055
    4. ' ' → logprob: -8.802531242370605
    5. ' return' → logprob: -11.177531242370605
    6. 'return' → logprob: -11.302531242370605
    7. '```' → logprob: -11.302531242370605
    8. '  ' → logprob: -11.677531242370605
    9. '	B' → logprob: -11.927531242370605
    10. '``' → logprob: -13.677531242370605

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07013171166181564
    2. '=' → logprob: -2.695131778717041
    3. '[' → logprob: -9.070131301879883
    4. ' ' → logprob: -9.570131301879883
    5. '[:]' → logprob: -12.695131301879883
    6. ' =[' → logprob: -13.445131301879883
    7. '   ' → logprob: -13.695131301879883
    8. '  ' → logprob: -14.195131301879883
    9. '_' → logprob: -14.195131301879883
    10. ',' → logprob: -14.320131301879883

Token 62: ' initialize' (ID: 18400)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.46281442046165466
    2. '[' → logprob: -1.337814450263977
    3. 'initialize' → logprob: -2.9628143310546875
    4. ' initialize' → logprob: -3.3378143310546875
    5. '[]' → logprob: -4.4628143310546875
    6. ' []' → logprob: -4.7128143310546875
    7. '[in' → logprob: -8.712814331054688
    8. '[i' → logprob: -10.212814331054688
    9. ' ' → logprob: -10.962814331054688
    10. '	initialize' → logprob: -10.962814331054688

Token 63: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -9.13388703338569e-06
    2. '```' → logprob: -12.375009536743164
    3. '_' → logprob: -12.500009536743164
    4. '`' → logprob: -14.500009536743164
    5. ' _' → logprob: -15.250009536743164
    6. ')_' → logprob: -16.750009536743164
    7. '_A' → logprob: -17.000009536743164
    8. '"_' → logprob: -17.000009536743164
    9. '\' → logprob: -17.500009536743164
    10. ''_' → logprob: -18.000009536743164

Token 64: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015574743738397956
    2. '(' → logprob: -6.501557350158691
    3. ' (' → logprob: -10.126557350158691
    4. '```' → logprob: -11.876557350158691
    5. ')' → logprob: -12.751557350158691
    6. ' ' → logprob: -12.876557350158691
    7. '(B' → logprob: -14.126557350158691
    8. '`' → logprob: -14.876557350158691
    9. ')(' → logprob: -15.001557350158691
    10. '(n' → logprob: -15.001557350158691

Token 65: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10141020268201828
    2. ')' → logprob: -2.351410150527954
    3. ')
' → logprob: -6.976410388946533
    4. ')

' → logprob: -8.226409912109375
    5. ' )
' → logprob: -13.851409912109375
    6. ')

' → logprob: -14.726409912109375
    7. ' ' → logprob: -15.851409912109375
    8. '   ' → logprob: -16.351409912109375
    9. ' )' → logprob: -16.976409912109375
    10. ')`
' → logprob: -17.226409912109375

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4988415837287903
    2. '   ' → logprob: -1.7488415241241455
    3. ' for' → logprob: -1.7488415241241455
    4. 'for' → logprob: -3.3738415241241455
    5. '<|end|>' → logprob: -5.873841762542725
    6. '    
' → logprob: -5.998841762542725
    7. ')' → logprob: -6.748841762542725
    8. '	for' → logprob: -6.748841762542725
    9. '```' → logprob: -6.873841762542725
    10. '  
' → logprob: -7.498841762542725

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1363612711429596
    2. ' for' → logprob: -2.6363613605499268
    3. '   ' → logprob: -2.8863613605499268
    4. '	for' → logprob: -9.886361122131348
    5. ' ' → logprob: -11.386361122131348
    6. '```' → logprob: -11.636361122131348
    7. '
' → logprob: -14.761361122131348
    8. '    
' → logprob: -14.761361122131348
    9. '``' → logprob: -15.386361122131348
    10. '  ' → logprob: -15.636361122131348

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004426674451678991
    2. 'i' → logprob: -6.0044264793396
    3. ' ' → logprob: -6.2544264793396
    4. '	i' → logprob: -12.129426956176758
    5. '_' → logprob: -12.379426956176758
    6. ' in' → logprob: -12.504426956176758
    7. ' _' → logprob: -12.504426956176758
    8. ' range' → logprob: -13.129426956176758
    9. '_i' → logprob: -13.379426956176758
    10. ')' → logprob: -13.504426956176758

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012744132429361343
    2. 'in' → logprob: -4.387743949890137
    3. ' ' → logprob: -8.512743949890137
    4. '	in' → logprob: -11.262743949890137
    5. ' i' → logprob: -12.762743949890137
    6. '  ' → logprob: -12.762743949890137
    7. ')' → logprob: -12.887743949890137
    8. '<|end|>' → logprob: -13.262743949890137
    9. ',' → logprob: -13.512743949890137
    10. 'range' → logprob: -13.637743949890137

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04888688400387764
    2. 'range' → logprob: -3.048886775970459
    3. '(range' → logprob: -8.298887252807617
    4. ' xrange' → logprob: -10.923887252807617
    5. ' in' → logprob: -11.173887252807617
    6. '	range' → logprob: -11.923887252807617
    7. ' ' → logprob: -11.923887252807617
    8. ' N' → logprob: -13.548887252807617
    9. ')' → logprob: -13.798887252807617
    10. '(' → logprob: -13.923887252807617

Token 71: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3137052059173584
    2. '(N' → logprob: -1.3137052059173584
    3. ' (' → logprob: -7.9387054443359375
    4. '(len' → logprob: -9.563705444335938
    5. '(n' → logprob: -12.063705444335938
    6. ' ' → logprob: -12.188705444335938
    7. '(
' → logprob: -12.813705444335938
    8. ' N' → logprob: -13.313705444335938
    9. ')' → logprob: -15.188705444335938
    10. '(

' → logprob: -15.688705444335938

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00013035668234806508
    2. '):
' → logprob: -9.250130653381348
    3. ' ):' → logprob: -11.375130653381348
    4. ':' → logprob: -11.375130653381348
    5. ')' → logprob: -11.500130653381348
    6. '   ' → logprob: -14.875130653381348
    7. ' ' → logprob: -15.625130653381348
    8. '():' → logprob: -15.875130653381348
    9. '):
' → logprob: -15.875130653381348
    10. '-' → logprob: -16.75012969970703

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06347658485174179
    2. ' B' → logprob: -2.9384765625
    3. 'B' → logprob: -5.3134765625
    4. '<|end|>' → logprob: -6.1884765625
    5. '   ' → logprob: -7.5634765625
    6. '        
' → logprob: -8.5634765625
    7. ')' → logprob: -8.6884765625
    8. ' 
' → logprob: -8.6884765625
    9. ' ' → logprob: -9.0634765625
    10. '
' → logprob: -9.0634765625

Token 74: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2521982192993164
    2. 'B' (adapté à ' B') → logprob: -1.5021982192993164
    3. '       ' → logprob: -8.627198219299316
    4. ' ' → logprob: -10.377198219299316
    5. '   ' → logprob: -10.377198219299316
    6. '<|end|>' → logprob: -11.627198219299316
    7. '           ' → logprob: -11.752198219299316
    8. '	B' → logprob: -12.252198219299316
    9. '  ' → logprob: -13.502198219299316
    10. '               ' → logprob: -14.127198219299316

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.375012397766113
    3. '```' → logprob: -15.125012397766113
    4. '[I' → logprob: -16.000011444091797
    5. '[B' → logprob: -16.125011444091797
    6. '\[' → logprob: -17.500011444091797
    7. '[index' → logprob: -18.250011444091797
    8. '[idx' → logprob: -18.250011444091797
    9. '[int' → logprob: -18.750011444091797
    10. '[in' → logprob: -19.000011444091797

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016489775851368904
    2. ')' → logprob: -4.1414899826049805
    3. ' ]' → logprob: -8.39148998260498
    4. ']=' → logprob: -9.01648998260498
    5. ')]' → logprob: -9.76648998260498
    6. '])' → logprob: -11.14148998260498
    7. '=' → logprob: -11.14148998260498
    8. ' )' → logprob: -11.14148998260498
    9. ' =' → logprob: -12.76648998260498
    10. ')=' → logprob: -12.76648998260498

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. ' +=' → logprob: -14.404751777648926
    4. ' ' → logprob: -15.654751777648926
    5. ')' → logprob: -15.654751777648926
    6. ' =)' → logprob: -15.779751777648926
    7. ' |=' → logprob: -17.52975082397461
    8. '=int' → logprob: -18.15475082397461
    9. ' ==' → logprob: -18.27975082397461
    10. ' =
' → logprob: -18.52975082397461

Token 78: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.011048054322600365
    2. 'compute' → logprob: -4.511047840118408
    3. ' A' → logprob: -16.63604736328125
    4. ' computer' → logprob: -16.88604736328125
    5. '.compute' → logprob: -17.26104736328125
    6. '_compute' → logprob: -17.76104736328125
    7. ' computed' → logprob: -18.51104736328125
    8. ' ' → logprob: -18.51104736328125
    9. 'A' → logprob: -18.76104736328125
    10. ' comput' → logprob: -18.88604736328125

Token 79: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -4.56102097814437e-05
    2. '```' → logprob: -10.625045776367188
    3. '_' → logprob: -11.000045776367188
    4. '_A' → logprob: -13.125045776367188
    5. ' _' → logprob: -14.500045776367188
    6. ')_' → logprob: -14.625045776367188
    7. '`' → logprob: -15.000045776367188
    8. '_C' → logprob: -15.875045776367188
    9. '##_' → logprob: -16.000045776367188
    10. '_T' → logprob: -16.125045776367188

Token 80: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -1.700132997939363e-05
    2. '_' → logprob: -12.125017166137695
    3. '_elements' → logprob: -13.125017166137695
    4. '_Element' → logprob: -13.250017166137695
    5. '_elem' → logprob: -13.250017166137695
    6. '(A' → logprob: -13.500017166137695
    7. '```' → logprob: -13.750017166137695
    8. '_array' → logprob: -14.000017166137695
    9. 'element' → logprob: -14.375017166137695
    10. '_ele' → logprob: -14.875017166137695

Token 81: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00014132341311778873
    2. '(' → logprob: -8.875141143798828
    3. ' (' → logprob: -13.750141143798828
    4. '(B' → logprob: -15.625141143798828
    5. '(
' → logprob: -15.875141143798828
    6. '(i' → logprob: -18.375141143798828
    7. '```' → logprob: -18.625141143798828
    8. '(a' → logprob: -19.000141143798828
    9. ')' → logprob: -19.125141143798828
    10. '(

' → logprob: -19.250141143798828

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009395699598826468
    2. ',i' → logprob: -7.00093936920166
    3. ' ,' → logprob: -10.87593936920166
    4. '[i' → logprob: -12.37593936920166
    5. ')' → logprob: -13.00093936920166
    6. ' ' → logprob: -14.50093936920166
    7. ',
' → logprob: -15.00093936920166
    8. '   ' → logprob: -15.37593936920166
    9. '```' → logprob: -15.37593936920166
    10. '),' → logprob: -15.50093936920166

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740934371948242
    2. ' i' → logprob: -0.9740934371948242
    3. ')' → logprob: -11.224093437194824
    4. ')i' → logprob: -13.724093437194824
    5. ' ' → logprob: -13.974093437194824
    6. '   ' → logprob: -14.724093437194824
    7. ' )' → logprob: -15.099093437194824
    8. '	i' → logprob: -15.224093437194824
    9. '    ' → logprob: -17.47409439086914
    10. '```' → logprob: -18.09909439086914

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0722858102526516e-05
    2. ')
' → logprob: -10.125041007995605
    3. ')i' → logprob: -15.375041007995605
    4. ' )' → logprob: -15.875041007995605
    5. '))' → logprob: -16.12504005432129
    6. ')return' → logprob: -17.12504005432129
    7. ')

' → logprob: -17.87504005432129
    8. ')`' → logprob: -17.87504005432129
    9. '   ' → logprob: -18.00004005432129
    10. ')
' → logprob: -18.37504005432129

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011832444579340518
    2. ' return' → logprob: -9.875118255615234
    3. '<|end|>' → logprob: -10.000118255615234
    4. '    
' → logprob: -12.125118255615234
    5. '	return' → logprob: -12.250118255615234
    6. 'return' → logprob: -12.250118255615234
    7. '
' → logprob: -12.625118255615234
    8. '       ' → logprob: -14.125118255615234
    9. '<|end|>' → logprob: -14.125118255615234
    10. '```' → logprob: -14.375118255615234

Token 86: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04946669936180115
    2. 'return' (adapté à ' return') → logprob: -3.049466609954834
    3. ' return' → logprob: -7.049466609954834
    4. '	return' → logprob: -12.049467086791992
    5. '       ' → logprob: -13.174467086791992
    6. '```' → logprob: -13.549467086791992
    7. ' ' → logprob: -13.924467086791992
    8. '    
' → logprob: -14.174467086791992
    9. ':return' → logprob: -15.924467086791992
    10. '
' → logprob: -16.424467086791992

Token 87: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2254173904657364
    2. 'B' → logprob: -1.6004173755645752
    3. ' ' → logprob: -13.100417137145996
    4. '(B' → logprob: -14.225417137145996
    5. '	B' → logprob: -14.225417137145996
    6. '_B' → logprob: -14.600417137145996
    7. '`' → logprob: -15.600417137145996
    8. '```' → logprob: -15.600417137145996
    9. ' ' → logprob: -15.975417137145996
    10. '‌' → logprob: -16.100418090820312

Token 88: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018169842660427094
    2. '<|end|>' → logprob: -4.14316987991333
    3. '```' → logprob: -6.76816987991333
    4. '#' → logprob: -7.76816987991333
    5. '
' → logprob: -8.393169403076172
    6. '[' → logprob: -8.893169403076172
    7. 'print' → logprob: -10.268169403076172
    8. '<|end|>' → logprob: -10.268169403076172
    9. '\' → logprob: -10.893169403076172
    10. '\n' → logprob: -11.143169403076172

Token 89: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001859272480942309
    2. '<|end|>' → logprob: -7.001859188079834
    3. '```' → logprob: -7.501859188079834
    4. '#' → logprob: -8.251859664916992
    5. '
' → logprob: -10.251859664916992
    6. '\' → logprob: -10.376859664916992
    7. '[' → logprob: -11.001859664916992
    8. 'print' → logprob: -11.876859664916992
    9. '<|end|>' → logprob: -11.876859664916992
    10. 'data' → logprob: -12.376859664916992

Token 90: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12533977627754211
    2. 'main' → logprob: -2.5003397464752197
    3. ' solve' → logprob: -4.875339984893799
    4. ' process' → logprob: -4.875339984893799
    5. ' compute' → logprob: -5.000339984893799
    6. ' build' → logprob: -5.375339984893799
    7. 'solve' → logprob: -6.125339984893799
    8. 'compute' → logprob: -6.375339984893799
    9. ' find' → logprob: -6.750339984893799
    10. 'build' → logprob: -6.875339984893799

Token 91: '_array' (ID: 8766)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.08131613582372665
    2. '(' → logprob: -3.7063162326812744
    3. '(B' → logprob: -3.7063162326812744
    4. '_' → logprob: -4.331315994262695
    5. '_(' → logprob: -4.331315994262695
    6. '(_' → logprob: -7.081315994262695
    7. '_array' → logprob: -7.331315994262695
    8. '_A' → logprob: -7.456315994262695
    9. '```' → logprob: -8.331315994262695
    10. '(A' → logprob: -10.456315994262695

Token 92: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6695688962936401
    2. '(A' → logprob: -0.7945688962936401
    3. '(B' → logprob: -3.4195690155029297
    4. '(arr' → logprob: -6.54456901550293
    5. '(array' → logprob: -6.79456901550293
    6. '()' → logprob: -7.66956901550293
    7. '(S' → logprob: -8.91956901550293
    8. '(a' → logprob: -9.29456901550293
    9. 'def' → logprob: -9.79456901550293
    10. '(
' → logprob: -10.41956901550293

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004542862065136433
    2. ')' → logprob: -5.504542827606201
    3. '():' → logprob: -8.12954330444336
    4. '[]):' → logprob: -9.87954330444336
    5. '(arr' → logprob: -10.62954330444336
    6. '()' → logprob: -10.62954330444336
    7. '):
' → logprob: -10.87954330444336
    8. ' ):' → logprob: -11.00454330444336
    9. '   ' → logprob: -11.25454330444336
    10. '(' → logprob: -11.50454330444336

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08934617787599564
    2. ' return' → logprob: -3.464346170425415
    3. 'arr' → logprob: -3.464346170425415
    4. ' arr' → logprob: -4.214346408843994
    5. 'return' → logprob: -4.839346408843994
    6. '(arr' → logprob: -9.964345932006836
    7. '    
' → logprob: -10.089345932006836
    8. '	arr' → logprob: -10.839345932006836
    9. 'sorted' → logprob: -10.964345932006836
    10. ' 
' → logprob: -11.214345932006836

Token 95: ' arr' (ID: 1724)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1107110008597374
    2. ' return' → logprob: -2.610711097717285
    3. '   ' → logprob: -3.860711097717285
    4. 'arr' (adapté à ' arr') → logprob: -4.610711097717285
    5. 'sorted' → logprob: -8.610711097717285
    6. ' arr' → logprob: -8.985711097717285
    7. '```' → logprob: -12.360711097717285
    8. ' sorted' → logprob: -12.360711097717285
    9. ' ' → logprob: -12.860711097717285
    10. '  ' → logprob: -13.110711097717285

Token 96: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3132665753364563
    2. '.sort' → logprob: -1.3132665157318115
    3. ' .' → logprob: -13.31326675415039
    4. '.append' → logprob: -13.68826675415039
    5. '.s' → logprob: -13.81326675415039
    6. '.sorted' → logprob: -14.68826675415039
    7. '.setdefault' → logprob: -16.68826675415039
    8. '.Sort' → logprob: -16.68826675415039
    9. '.extend' → logprob: -16.81326675415039
    10. '.reverse' → logprob: -16.93826675415039

Token 97: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. '()
' → logprob: -13.500077247619629
    4. '()`' → logprob: -14.375077247619629
    5. '()

' → logprob: -15.125077247619629
    6. '()\' → logprob: -15.750077247619629
    7. ' ()' → logprob: -16.500078201293945
    8. '();' → logprob: -16.875078201293945
    9. '().' → logprob: -17.125078201293945
    10. '()<' → logprob: -17.375078201293945

Token 98: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8214725852012634
    2. '
' → logprob: -0.9464725852012634
    3. '<|end|>' → logprob: -1.8214726448059082
    4. '

' → logprob: -4.696472644805908
    5. '<|end|>' → logprob: -7.821472644805908
    6. '```' → logprob: -8.07147216796875
    7. ' def' → logprob: -8.44647216796875
    8. '\' → logprob: -9.69647216796875
    9. '
' → logprob: -9.94647216796875
    10. '\n' → logprob: -10.07147216796875

Token 99: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44782763719558716
    2. '
' → logprob: -1.3228275775909424
    3. 'return' (adapté à ' return') → logprob: -2.5728275775909424
    4. '<|end|>' → logprob: -4.4478278160095215
    5. '   ' → logprob: -5.6978278160095215
    6. ' return' → logprob: -6.4478278160095215
    7. '

' → logprob: -7.6978278160095215
    8. '    
' → logprob: -7.8228278160095215
    9. ' 
' → logprob: -8.572827339172363
    10. '<|end|>' → logprob: -8.822827339172363

Token 100: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3132670223712921
    2. 'arr' → logprob: -1.3132669925689697
    3. '(arr' → logprob: -13.31326675415039
    4. '	arr' → logprob: -13.43826675415039
    5. ' None' → logprob: -13.56326675415039
    6. 'None' → logprob: -14.93826675415039
    7. '_arr' → logprob: -15.31326675415039
    8. '[arr' → logprob: -15.56326675415039
    9. '<arr' → logprob: -16.06326675415039
    10. ' ' → logprob: -17.06326675415039

Token 101: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00306517630815506
    2. '<|end|>' → logprob: -6.37806510925293
    3. '
' → logprob: -7.12806510925293
    4. '

' → logprob: -7.87806510925293
    5. '```' → logprob: -9.25306510925293
    6. '<|end|>' → logprob: -10.87806510925293
    7. '#' → logprob: -11.00306510925293
    8. '[' → logprob: -11.25306510925293
    9. ' def' → logprob: -11.62806510925293
    10. '(def' → logprob: -12.62806510925293

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001290454383706674
    2. '<|end|>' → logprob: -9.250128746032715
    3. '```' → logprob: -10.875128746032715
    4. '
' → logprob: -11.875128746032715
    5. '#' → logprob: -13.000128746032715
    6. '<|end|>' → logprob: -13.625128746032715
    7. 'from' → logprob: -14.250128746032715
    8. '

' → logprob: -14.375128746032715
    9. ' def' → logprob: -14.500128746032715
    10. 'import' → logprob: -15.375128746032715

Token 103: ' median' (ID: 31473)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6360971331596375
    2. ' main' → logprob: -1.1360971927642822
    3. 'find' → logprob: -3.2610971927642822
    4. ' find' → logprob: -3.2610971927642822
    5. 'compute' → logprob: -4.011096954345703
    6. 'process' → logprob: -4.386096954345703
    7. 'count' → logprob: -4.886096954345703
    8. 'solve' → logprob: -5.261096954345703
    9. ' process' → logprob: -5.386096954345703
    10. ' compute' → logprob: -5.511096954345703

Token 104: '_index' (ID: 7748)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.025666572153568268
    2. '_' → logprob: -4.5256667137146
    3. '_(' → logprob: -4.5256667137146
    4. '(' → logprob: -6.4006667137146
    5. '_value' → logprob: -7.5256667137146
    6. '(lst' → logprob: -7.5256667137146
    7. '(array' → logprob: -7.7756667137146
    8. '(A' → logprob: -9.275666236877441
    9. '_array' → logprob: -9.775666236877441
    10. '_index' → logprob: -9.775666236877441

Token 105: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07681089639663696
    2. '(N' → logprob: -2.951810836791992
    3. '(arr' → logprob: -3.951810836791992
    4. ' (' → logprob: -6.326810836791992
    5. '(n' → logprob: -7.951810836791992
    6. '(len' → logprob: -9.326810836791992
    7. '(A' → logprob: -10.326810836791992
    8. 'def' → logprob: -10.451810836791992
    9. ' =' → logprob: -10.451810836791992
    10. '(lst' → logprob: -10.701810836791992

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015787990763783455
    2. '):
' → logprob: -4.2657880783081055
    3. ')' → logprob: -7.0157880783081055
    4. ' ):' → logprob: -7.2657880783081055
    5. '):
' → logprob: -11.765788078308105
    6. ' ):
' → logprob: -11.890788078308105
    7. ' )' → logprob: -12.890788078308105
    8. ' ' → logprob: -12.890788078308105
    9. '   ' → logprob: -13.265788078308105
    10. '):

' → logprob: -13.390788078308105

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031595490872859955
    2. ' return' → logprob: -3.656595468521118
    3. 'return' → logprob: -5.281595706939697
    4. ' =' → logprob: -10.031595230102539
    5. ' (' → logprob: -10.531595230102539
    6. ' 
' → logprob: -10.906595230102539
    7. 'def' → logprob: -11.031595230102539
    8. ' if' → logprob: -11.156595230102539
    9. ' ' → logprob: -11.156595230102539
    10. '    ' → logprob: -11.531595230102539

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10220413655042648
    2. 'N' → logprob: -2.6022040843963623
    3. '(N' → logprob: -4.102204322814941
    4. ' return' → logprob: -5.102204322814941
    5. ' (' → logprob: -8.102204322814941
    6. ' N' → logprob: -10.102204322814941
    7. '   ' → logprob: -10.477204322814941
    8. '(' → logprob: -10.727204322814941
    9. '(return' → logprob: -11.602204322814941
    10. 'if' → logprob: -11.977204322814941

Token 109: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0859851837158203
    2. ' N' → logprob: -1.2109851837158203
    3. ' (' → logprob: -1.2109851837158203
    4. '(N' → logprob: -2.7109851837158203
    5. '(' → logprob: -8.96098518371582
    6. ' ' → logprob: -11.71098518371582
    7. '   ' → logprob: -11.83598518371582
    8. '	N' → logprob: -13.33598518371582
    9. '((' → logprob: -13.46098518371582
    10. ' ' → logprob: -13.83598518371582

Token 110: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.47408637404441833
    2. '//' → logprob: -0.9740864038467407
    3. ' ' → logprob: -11.97408676147461
    4. '   ' → logprob: -13.34908676147461
    5. '
' → logprob: -14.59908676147461
    6. '#' → logprob: -15.34908676147461
    7. '```' → logprob: -15.59908676147461
    8. ' ' → logprob: -15.84908676147461
    9. '://' → logprob: -16.59908676147461
    10. '  ' → logprob: -16.72408676147461

Token 111: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۲' → logprob: -19.750003814697266
    4. '   ' → logprob: -20.625003814697266
    5. '22' → logprob: -21.500003814697266
    6. '23' → logprob: -21.500003814697266
    7. '२' → logprob: -21.625003814697266
    8. '21' → logprob: -21.875003814697266
    9. '٢' → logprob: -21.875003814697266
    10. '```' → logprob: -22.000003814697266

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '```' → logprob: -19.000001907348633
    5. '۲' → logprob: -19.000001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '२' → logprob: -20.000001907348633
    8. '２' → logprob: -20.250001907348633
    9. '٢' → logprob: -20.250001907348633
    10. '২' → logprob: -21.187501907348633

Token 113: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009819131344556808
    2. '<|end|>' → logprob: -4.634819030761719
    3. '<|end|>' → logprob: -10.759819030761719
    4. '
' → logprob: -11.009819030761719
    5. '```' → logprob: -11.384819030761719
    6. '

' → logprob: -11.634819030761719
    7. ' def' → logprob: -12.759819030761719
    8. '``' → logprob: -14.634819030761719
    9. '\' → logprob: -14.884819030761719
    10. '#' → logprob: -15.134819030761719

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018565307836979628
    2. '<|end|>' → logprob: -6.376856327056885
    3. '
' → logprob: -9.501856803894043
    4. '```' → logprob: -10.501856803894043
    5. '

' → logprob: -10.626856803894043
    6. '<|end|>' → logprob: -11.376856803894043
    7. 'median' → logprob: -12.001856803894043
    8. '  
' → logprob: -13.001856803894043
    9. '    
' → logprob: -13.876856803894043
    10. ' def' → logprob: -13.876856803894043

Token 115: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.7131619453430176
    2. 'find' → logprob: -1.0881619453430176
    3. 'main' → logprob: -2.7131619453430176
    4. 'calculate' → logprob: -3.2131619453430176
    5. 'median' → logprob: -3.7131619453430176
    6. ' find' → logprob: -3.7131619453430176
    7. ' compute' → logprob: -4.838161945343018
    8. ' main' → logprob: -5.713161945343018
    9. 'get' → logprob: -6.588161945343018
    10. 'def' → logprob: -7.213161945343018

Token 116: '_b' (ID: 1535)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.01966782845556736
    2. '_B' → logprob: -4.019667625427246
    3. '_' → logprob: -7.519667625427246
    4. '_M' → logprob: -8.144667625427246
    5. '_C' → logprob: -9.394667625427246
    6. 'median' → logprob: -9.394667625427246
    7. '_med' → logprob: -9.644667625427246
    8. '_b' → logprob: -9.769667625427246
    9. '_result' → logprob: -9.769667625427246
    10. '(B' → logprob: -10.019667625427246

Token 117: '(B' (ID: 8409)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.015391054563224316
    2. '_value' → logprob: -5.140390872955322
    3. '_element' → logprob: -5.140390872955322
    4. 'median' → logprob: -6.015390872955322
    5. '_med' → logprob: -9.01539134979248
    6. '_mean' → logprob: -9.14039134979248
    7. '_array' → logprob: -9.51539134979248
    8. '_values' → logprob: -9.76539134979248
    9. '_elements' → logprob: -9.76539134979248
    10. 'ase' → logprob: -9.76539134979248

Token 118: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03792063519358635
    2. ',' → logprob: -3.5379207134246826
    3. ')' → logprob: -5.1629204750061035
    4. '):
' → logprob: -6.5379204750061035
    5. '[' → logprob: -7.6629204750061035
    6. ' ):' → logprob: -8.287920951843262
    7. '   ' → logprob: -9.412920951843262
    8. ')):' → logprob: -10.412920951843262
    9. '[N' → logprob: -10.912920951843262
    10. '  ' → logprob: -11.412920951843262

Token 119: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06476669758558273
    2. ' N' → logprob: -2.8147666454315186
    3. 'median' → logprob: -7.064766883850098
    4. ' median' → logprob: -7.689766883850098
    5. 'n' → logprob: -8.064766883850098
    6. ')' → logprob: -8.314766883850098
    7. 'A' → logprob: -8.689766883850098
    8. 'B' → logprob: -8.814766883850098
    9. '   ' → logprob: -9.064766883850098
    10. '):
' → logprob: -9.564766883850098

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012989268638193607
    2. '):
' → logprob: -4.637989044189453
    3. ',' → logprob: -5.762989044189453
    4. '   ' → logprob: -10.512989044189453
    5. ')' → logprob: -10.637989044189453
    6. '):
' → logprob: -10.762989044189453
    7. ' ):' → logprob: -11.387989044189453
    8. '  ' → logprob: -14.512989044189453
    9. ' ' → logprob: -14.762989044189453
    10. ' ,' → logprob: -14.762989044189453

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006249914295040071
    2. '```' → logprob: -8.125624656677246
    3. '
' → logprob: -9.250624656677246
    4. '    
' → logprob: -9.375624656677246
    5. ' median' → logprob: -10.000624656677246
    6. 'median' → logprob: -10.375624656677246
    7. '  ' → logprob: -11.625624656677246
    8. '[' → logprob: -12.125624656677246
    9. '``' → logprob: -12.125624656677246
    10. '       ' → logprob: -12.250624656677246

Token 122: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6647371649742126
    2. 'sorted' → logprob: -1.4147372245788574
    3. 'B' → logprob: -1.9147372245788574
    4. 'median' → logprob: -3.0397372245788574
    5. 'm' → logprob: -3.2897372245788574
    6. 's' → logprob: -6.039737224578857
    7. 'med' → logprob: -6.414737224578857
    8. 'def' → logprob: -6.664737224578857
    9. 'mid' → logprob: -7.414737224578857
    10. ' sorted' → logprob: -7.664737224578857

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01293102651834488
    2. '=' → logprob: -4.887930870056152
    3. 'ex' → logprob: -5.512930870056152
    4. ' ' → logprob: -7.637930870056152
    5. ')' → logprob: -7.887930870056152
    6. 'x' → logprob: -8.387930870056152
    7. '   ' → logprob: -9.012930870056152
    8. '_' → logprob: -10.387930870056152
    9. '  ' → logprob: -11.387930870056152
    10. 'dx' → logprob: -12.387930870056152

Token 124: ' median' (ID: 31473)
  Prédit: 'median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'median' → logprob: -0.2519342601299286
    2. ' median' → logprob: -1.501934289932251
    3. 'med' → logprob: -13.001934051513672
    4. '   ' → logprob: -13.251934051513672
    5. 'medi' → logprob: -15.501934051513672
    6. ' ' → logprob: -15.501934051513672
    7. '  ' → logprob: -16.251934051513672
    8. ' N' → logprob: -16.251934051513672
    9. 'sort' → logprob: -16.501934051513672
    10. 'm' → logprob: -16.626934051513672

Token 125: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -12.000016212463379
    3. 'ex' → logprob: -12.125016212463379
    4. '_idx' → logprob: -13.250016212463379
    5. 'index' → logprob: -13.625016212463379
    6. 'x' → logprob: -14.250016212463379
    7. 'dex' → logprob: -14.500016212463379
    8. '_i' → logprob: -15.500016212463379
    9. 'Index' → logprob: -15.500016212463379
    10. '_x' → logprob: -16.750017166137695

Token 126: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016182278341148049
    2. '(' → logprob: -8.875162124633789
    3. ' (' → logprob: -10.750162124633789
    4. '(
' → logprob: -15.125162124633789
    5. 'N' → logprob: -16.25016212463379
    6. '   ' → logprob: -16.37516212463379
    7. '(n' → logprob: -16.75016212463379
    8. '```' → logprob: -17.12516212463379
    9. '(B' → logprob: -18.12516212463379
    10. ' N' → logprob: -18.12516212463379

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04305582493543625
    2. ')
' → logprob: -3.168055772781372
    3. ')
' → logprob: -10.418055534362793
    4. ' )' → logprob: -10.918055534362793
    5. ')

' → logprob: -12.543055534362793
    6. ' )
' → logprob: -13.043055534362793
    7. '   ' → logprob: -13.918055534362793
    8. ')`' → logprob: -14.668055534362793
    9. '))' → logprob: -15.043055534362793
    10. '-' → logprob: -15.543055534362793

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018759191036224365
    2. 'median' → logprob: -4.268759250640869
    3. ' median' → logprob: -6.393759250640869
    4. 'm' → logprob: -6.518759250640869
    5. '    
' → logprob: -7.893759250640869
    6. '
' → logprob: -8.268758773803711
    7. 'med' → logprob: -8.268758773803711
    8. ' m' → logprob: -9.268758773803711
    9. ' med' → logprob: -9.643758773803711
    10. '```' → logprob: -9.768758773803711

Token 129: ' return' (ID: 622)
  Prédit: 'median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'median' → logprob: -0.42638450860977173
    2. 'm' → logprob: -1.301384449005127
    3. 'med' → logprob: -2.926384449005127
    4. '   ' → logprob: -5.176384449005127
    5. 'return' (adapté à ' return') → logprob: -5.676384449005127
    6. ' median' → logprob: -5.801384449005127
    7. 'b' → logprob: -5.926384449005127
    8. ' m' → logprob: -6.426384449005127
    9. 'M' → logprob: -6.426384449005127
    10. 'mid' → logprob: -6.926384449005127

Token 130: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5237648487091064
    2. 'B' → logprob: -0.8987648487091064
    3. ' sorted' → logprob: -8.523764610290527
    4. 'sort' → logprob: -9.023764610290527
    5. 'sorted' → logprob: -9.023764610290527
    6. '(B' → logprob: -9.398764610290527
    7. ' sort' → logprob: -10.273764610290527
    8. ' ' → logprob: -10.898764610290527
    9. ' abs' → logprob: -11.273764610290527
    10. 'abs' → logprob: -11.273764610290527

Token 131: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0006354739889502525
    2. '[' → logprob: -7.625635623931885
    3. 'idx' → logprob: -9.750635147094727
    4. '[index' → logprob: -10.500635147094727
    5. '<|end|>' → logprob: -10.500635147094727
    6. '[arr' → logprob: -12.250635147094727
    7. '[:]' → logprob: -12.250635147094727
    8. '```' → logprob: -13.000635147094727
    9. '[Index' → logprob: -13.125635147094727
    10. '[
' → logprob: -13.500635147094727

Token 132: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006034973077476025
    2. ' )' → logprob: -5.131034851074219
    3. '[' → logprob: -9.506034851074219
    4. '<|end|>' → logprob: -12.131034851074219
    5. ']' → logprob: -12.506034851074219
    6. ' ' → logprob: -12.631034851074219
    7. ')
' → logprob: -12.631034851074219
    8. '])' → logprob: -13.006034851074219
    9. '   ' → logprob: -13.256034851074219
    10. '}' → logprob: -13.381034851074219

Token 133: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7281208038330078
    2. '<|end|>' → logprob: -0.7281208038330078
    3. '+' → logprob: -4.978120803833008
    4. '
' → logprob: -5.353120803833008
    5. ' def' → logprob: -5.353120803833008
    6. '*' → logprob: -5.478120803833008
    7. '```' → logprob: -5.853120803833008
    8. '(' → logprob: -5.978120803833008
    9. '[' → logprob: -6.103120803833008
    10. '()' → logprob: -6.228120803833008

Token 134: ' ' (ID: 220)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.2686972618103027
    2. '0' → logprob: -1.5186972618103027
    3. ' idx' → logprob: -1.8936972618103027
    4. 'B' → logprob: -2.5186972618103027
    5. '1' → logprob: -2.5186972618103027
    6. '(idx' → logprob: -2.7686972618103027
    7. 'median' → logprob: -2.8936972618103027
    8. ' (' → logprob: -4.143697261810303
    9. ' median' → logprob: -4.393697261810303
    10. ' B' → logprob: -4.518697261810303

Token 135: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4973424971103668
    2. '0' → logprob: -2.122342586517334
    3. '(idx' → logprob: -2.122342586517334
    4. 'B' → logprob: -2.747342586517334
    5. '1' → logprob: -3.247342586517334
    6. 'median' → logprob: -4.247342586517334
    7. '(B' → logprob: -4.497342586517334
    8. '(' → logprob: -4.622342586517334
    9. 'N' → logprob: -5.497342586517334
    10. '(N' → logprob: -6.247342586517334

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' abs' (ID: 8443)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08288351446390152
    2. ' main' → logprob: -3.332883596420288
    3. 'compute' → logprob: -3.332883596420288
    4. 'read' → logprob: -6.082883358001709
    5. 'def' → logprob: -6.207883358001709
    6. 'solve' → logprob: -6.957883358001709
    7. 'median' → logprob: -7.082883358001709
    8. ' compute' → logprob: -7.332883358001709
    9. 'process' → logprob: -8.207883834838867
    10. 'find' → logprob: -8.457883834838867

Token 139: '_difference' (ID: 123771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033939589047804475
    2. '()' → logprob: -9.12533950805664
    3. '_' → logprob: -9.75033950805664
    4. '(value' → logprob: -10.25033950805664
    5. '(abs' → logprob: -10.62533950805664
    6. '(_)' → logprob: -10.62533950805664
    7. 'def' → logprob: -11.37533950805664
    8. '<|end|>' → logprob: -11.50033950805664
    9. '_value' → logprob: -11.87533950805664
    10. '(`' → logprob: -12.00033950805664

Token 140: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3553592264652252
    2. '(' → logprob: -1.2303591966629028
    3. '(x' → logprob: -5.230359077453613
    4. '(A' → logprob: -7.105359077453613
    5. ' (' → logprob: -7.855359077453613
    6. '(value' → logprob: -8.605359077453613
    7. '(n' → logprob: -10.980359077453613
    8. '(num' → logprob: -11.105359077453613
    9. '(B' → logprob: -11.230359077453613
    10. 'def' → logprob: -11.605359077453613

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01902625896036625
    2. ')' → logprob: -4.394026279449463
    3. ',b' → logprob: -5.644026279449463
    4. '(' → logprob: -6.269026279449463
    5. '(a' → logprob: -7.644026279449463
    6. 'a' → logprob: -8.644025802612305
    7. ',a' → logprob: -9.019025802612305
    8. '_,' → logprob: -9.394025802612305
    9. ' ,' → logprob: -9.644025802612305
    10. ',)' → logprob: -9.644025802612305

Token 142: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407805919647217
    2. ' b' → logprob: -0.9740780591964722
    3. ' ' → logprob: -14.474078178405762
    4. '   ' → logprob: -15.474078178405762
    5. 'a' → logprob: -15.724078178405762
    6. ' ' → logprob: -16.349077224731445
    7. ' a' → logprob: -16.974077224731445
    8. '  ' → logprob: -17.349077224731445
    9. '    ' → logprob: -17.474077224731445
    10. '	b' → logprob: -17.849077224731445

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03853575512766838
    2. ')' → logprob: -3.2885358333587646
    3. '):
' → logprob: -7.7885355949401855
    4. '(a' → logprob: -9.913536071777344
    5. '   ' → logprob: -12.288536071777344
    6. '):

' → logprob: -12.663536071777344
    7. '(' → logprob: -12.663536071777344
    8. ' ):' → logprob: -12.913536071777344
    9. ')**' → logprob: -13.038536071777344
    10. ':' → logprob: -13.163536071777344

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24858863651752472
    2. ' return' → logprob: -1.9985886812210083
    3. 'return' → logprob: -2.4985885620117188
    4. 'abs' → logprob: -6.248588562011719
    5. ' abs' → logprob: -7.873588562011719
    6. 'def' → logprob: -10.123588562011719
    7. '	return' → logprob: -11.748588562011719
    8. '    ' → logprob: -11.998588562011719
    9. '  ' → logprob: -13.873588562011719
    10. '(abs' → logprob: -13.998588562011719

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25322163105010986
    2. 'abs' → logprob: -2.2532215118408203
    3. ' return' → logprob: -2.5032215118408203
    4. '   ' → logprob: -3.5032215118408203
    5. ' abs' → logprob: -5.00322151184082
    6. '	return' → logprob: -12.75322151184082
    7. 'def' → logprob: -13.62822151184082
    8. '    ' → logprob: -14.12822151184082
    9. '(abs' → logprob: -14.37822151184082
    10. '  ' → logprob: -15.25322151184082

Token 146: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.474077433347702
    2. 'abs' → logprob: -0.9740774631500244
    3. '(abs' → logprob: -14.849077224731445
    4. '   ' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.724077224731445
    6. '.abs' → logprob: -18.599077224731445
    7. ' ' → logprob: -20.224077224731445
    8. '_abs' → logprob: -20.474077224731445
    9. '  ' → logprob: -21.224077224731445
    10. '|' → logprob: -21.599077224731445

Token 147: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02324792370200157
    2. '(' → logprob: -3.7732479572296143
    3. 'a' → logprob: -13.398247718811035
    4. '(b' → logprob: -14.773247718811035
    5. '((' → logprob: -15.398247718811035
    6. '(
' → logprob: -15.523247718811035
    7. '(abs' → logprob: -17.02324867248535
    8. '(

' → logprob: -17.64824867248535
    9. '(A' → logprob: -18.77324867248535
    10. '(ab' → logprob: -18.77324867248535

Token 148: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2527819573879242
    2. ' -' → logprob: -1.5027819871902466
    3. '-b' → logprob: -7.502781867980957
    4. ')' → logprob: -8.252781867980957
    5. ',' → logprob: -10.627781867980957
    6. ' ' → logprob: -11.627781867980957
    7. '(' → logprob: -13.377781867980957
    8. 'b' → logprob: -14.127781867980957
    9. ' )' → logprob: -14.127781867980957
    10. '-)' → logprob: -14.127781867980957

Token 149: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '1' → logprob: -18.875261306762695
    4. '   ' → logprob: -19.250261306762695
    5. ' ' → logprob: -20.000261306762695
    6. ')b' → logprob: -20.125261306762695
    7. ')' → logprob: -21.750261306762695
    8. '  ' → logprob: -21.750261306762695
    9. '	b' → logprob: -21.875261306762695
    10. '    ' → logprob: -22.750261306762695

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.125
    3. ' )' → logprob: -17.375
    4. ')

' → logprob: -19.125
    5. '))' → logprob: -19.25
    6. '}' → logprob: -19.5
    7. ')return' → logprob: -19.75
    8. ')`' → logprob: -19.75
    9. '<|end|>' → logprob: -20.125
    10. ')}' → logprob: -20.375

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006379772676154971
    2. '<|end|>' → logprob: -7.375638008117676
    3. '```' → logprob: -11.875638008117676
    4. '#' → logprob: -13.250638008117676
    5. '<|end|>' → logprob: -13.500638008117676
    6. ' def' → logprob: -14.375638008117676
    7. 'for' → logprob: -15.750638008117676
    8. 'print' → logprob: -16.25063705444336
    9. 'import' → logprob: -16.75063705444336
    10. ')' → logprob: -16.87563705444336

Token 152: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3986222445964813
    2. 'compute' → logprob: -2.1486222743988037
    3. 'sum' → logprob: -2.1486222743988037
    4. 'min' → logprob: -3.5236222743988037
    5. 'calculate' → logprob: -4.148622035980225
    6. 'total' → logprob: -4.398622035980225
    7. ' main' → logprob: -4.648622035980225
    8. 'adjust' → logprob: -5.273622035980225
    9. 'minimum' → logprob: -5.398622035980225
    10. 'minimal' → logprob: -5.398622035980225

Token 153: '_adjust' (ID: 109618)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0855969190597534
    2. '_total' → logprob: -1.2105969190597534
    3. '_A' → logprob: -2.585597038269043
    4. '_min' → logprob: -2.835597038269043
    5. '_difference' → logprob: -3.335597038269043
    6. '_diff' → logprob: -3.585597038269043
    7. 'A' → logprob: -3.585597038269043
    8. '_result' → logprob: -4.335597038269043
    9. '_cost' → logprob: -4.335597038269043
    10. 'sum' → logprob: -4.460597038269043

Token 154: 'ed' (ID: 295)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.6108414530754089
    2. 'ed' → logprob: -1.2358415126800537
    3. 'ments' → logprob: -1.8608415126800537
    4. '_value' → logprob: -5.860841274261475
    5. '_b' → logprob: -5.985841274261475
    6. 'def' → logprob: -6.360841274261475
    7. '_array' → logprob: -7.485841274261475
    8. 'ement' → logprob: -7.485841274261475
    9. '_B' → logprob: -7.735841274261475
    10. 'e' → logprob: -8.110841751098633

Token 155: '_value' (ID: 6734)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.9880231022834778
    2. '_sum' → logprob: -1.613023042678833
    3. '_value' → logprob: -1.738023042678833
    4. '_A' → logprob: -1.863023042678833
    5. '_array' → logprob: -3.488023042678833
    6. '_difference' → logprob: -4.488023281097412
    7. '_values' → logprob: -4.738023281097412
    8. 'A' → logprob: -4.988023281097412
    9. '_element' → logprob: -5.113023281097412
    10. 'B' → logprob: -5.363023281097412

Token 156: '(b' (ID: 3229)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5918881297111511
    2. '(A' → logprob: -0.8418881297111511
    3. '(a' → logprob: -4.841887950897217
    4. '(C' → logprob: -5.841887950897217
    5. '(' → logprob: -6.341887950897217
    6. '(N' → logprob: -7.591887950897217
    7. '():' → logprob: -8.091888427734375
    8. '(value' → logprob: -8.341888427734375
    9. '(b' → logprob: -8.341888427734375
    10. '(x' → logprob: -8.466888427734375

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038377325981855392
    2. '):' → logprob: -6.628837585449219
    3. ' ,' → logprob: -7.003837585449219
    4. ',B' → logprob: -7.503837585449219
    5. ')' → logprob: -8.128837585449219
    6. ',A' → logprob: -8.878837585449219
    7. '_,' → logprob: -9.253837585449219
    8. 'a' → logprob: -9.628837585449219
    9. '):
' → logprob: -9.753837585449219
    10. ',b' → logprob: -9.878837585449219

Token 158: ' i' (ID: 575)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7252613306045532
    2. 'A' → logprob: -1.2252613306045532
    3. ' B' → logprob: -2.7252612113952637
    4. 'N' → logprob: -2.8502612113952637
    5. ' A' → logprob: -2.9752612113952637
    6. 'i' → logprob: -4.225261211395264
    7. ' N' → logprob: -4.975261211395264
    8. 'arr' → logprob: -5.100261211395264
    9. 'a' → logprob: -5.350261211395264
    10. 'x' → logprob: -5.725261211395264

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22929012775421143
    2. '):
' → logprob: -1.6042901277542114
    3. ',' → logprob: -5.729290008544922
    4. ')' → logprob: -8.354290008544922
    5. '):
' → logprob: -8.729290008544922
    6. ' ):' → logprob: -9.229290008544922
    7. '   ' → logprob: -9.479290008544922
    8. '):

' → logprob: -10.729290008544922
    9. ' ):
' → logprob: -11.229290008544922
    10. '  ' → logprob: -12.729290008544922

Token 160: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14816990494728088
    2. 'abs' → logprob: -2.523169994354248
    3. 'return' → logprob: -3.023169994354248
    4. 'i' → logprob: -5.273169994354248
    5. '   ' → logprob: -5.898169994354248
    6. ' b' → logprob: -7.773169994354248
    7. ' return' → logprob: -8.02316951751709
    8. ' abs' → logprob: -8.77316951751709
    9. ' i' → logprob: -10.64816951751709
    10. 'a' → logprob: -11.39816951751709

Token 161: ' return' (ID: 622)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05340688303112984
    2. 'abs' → logprob: -3.3034069538116455
    3. 'i' → logprob: -4.303406715393066
    4. 'return' (adapté à ' return') → logprob: -6.928406715393066
    5. ' b' → logprob: -7.928406715393066
    6. ' abs' → logprob: -8.928406715393066
    7. 'a' → logprob: -9.928406715393066
    8. '   ' → logprob: -9.928406715393066
    9. ' i' → logprob: -10.428406715393066
    10. '(i' → logprob: -10.803406715393066

Token 162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.053948625922203064
    2. 'abs' → logprob: -3.0539486408233643
    3. ' b' → logprob: -5.803948402404785
    4. 'i' → logprob: -6.678948402404785
    5. ' abs' → logprob: -7.303948402404785
    6. '(b' → logprob: -9.303948402404785
    7. 'a' → logprob: -9.678948402404785
    8. '(abs' → logprob: -9.678948402404785
    9. '(i' → logprob: -10.053948402404785
    10. ' i' → logprob: -10.053948402404785

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3249278664588928
    2. '+' → logprob: -1.324927806854248
    3. ' -' → logprob: -4.574927806854248
    4. '-' → logprob: -7.074927806854248
    5. '<|end|>' → logprob: -8.324928283691406
    6. '+i' → logprob: -8.699928283691406
    7. ' ' → logprob: -11.574928283691406
    8. ' ' → logprob: -12.574928283691406
    9. '<|end|>' → logprob: -12.574928283691406
    10. 'def' → logprob: -12.699928283691406

Token 164: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002639749087393284
    2. ' i' → logprob: -6.2526397705078125
    3. '1' → logprob: -7.2526397705078125
    4. '(i' → logprob: -14.377639770507812
    5. '   ' → logprob: -14.627639770507812
    6. '2' → logprob: -14.752639770507812
    7. '	i' → logprob: -15.002639770507812
    8. '(' → logprob: -15.377639770507812
    9. ' ' → logprob: -15.752639770507812
    10. '_i' → logprob: -16.127639770507812

Token 165: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.043348100036382675
    2. '<|end|>' → logprob: -3.1683480739593506
    3. '<|end|>' → logprob: -8.91834831237793
    4. '```' → logprob: -9.66834831237793
    5. ' def' → logprob: -9.79334831237793
    6. '#' → logprob: -9.91834831237793
    7. '[' → logprob: -11.41834831237793
    8. ')' → logprob: -11.79334831237793
    9. '
' → logprob: -12.41834831237793
    10. '...' → logprob: -12.54334831237793

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011964209843426943
    2. ' ' → logprob: -6.751196384429932
    3. '2' → logprob: -11.00119686126709
    4. '0' → logprob: -12.62619686126709
    5. '```' → logprob: -14.12619686126709
    6. '<|end|>' → logprob: -14.43869686126709
    7. '   ' → logprob: -14.50119686126709
    8. ' ' → logprob: -14.50119686126709
    9. 'def' → logprob: -14.50119686126709
    10. '3' → logprob: -14.62619686126709

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.875015258789062
    3. '2' → logprob: -12.250015258789062
    4. '0' → logprob: -12.750015258789062
    5. '3' → logprob: -15.937515258789062
    6. '```' → logprob: -16.437515258789062
    7. '   ' → logprob: -16.500015258789062
    8. '+' → logprob: -16.687515258789062
    9. '
' → logprob: -16.812515258789062
    10. '-' → logprob: -17.250015258789062

Token 168: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009068080224096775
    2. '<|end|>' → logprob: -4.759068012237549
    3. '```' → logprob: -8.384068489074707
    4. '#' → logprob: -9.384068489074707
    5. '<|end|>' → logprob: -9.634068489074707
    6. ')' → logprob: -11.384068489074707
    7. ' def' → logprob: -11.509068489074707
    8. '\' → logprob: -11.634068489074707
    9. '[' → logprob: -11.884068489074707
    10. '.' → logprob: -12.134068489074707

Token 169: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041577612864784896
    2. '<|end|>' → logprob: -7.875415802001953
    3. '#' → logprob: -11.250415802001953
    4. '```' → logprob: -11.375415802001953
    5. 'print' → logprob: -12.500415802001953
    6. ' def' → logprob: -13.125415802001953
    7. ')' → logprob: -13.750415802001953
    8. 'a' → logprob: -14.000415802001953
    9. '<|end|>' → logprob: -14.000415802001953
    10. '[' → logprob: -14.250415802001953

Token 170: ' accumulate' (ID: 74226)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09237436950206757
    2. ' main' → logprob: -2.717374324798584
    3. 'compute' → logprob: -5.092374324798584
    4. 'adjust' → logprob: -5.467374324798584
    5. 'def' → logprob: -5.592374324798584
    6. 'solve' → logprob: -5.967374324798584
    7. 'process' → logprob: -6.342374324798584
    8. 'calculate' → logprob: -6.467374324798584
    9. 'min' → logprob: -6.967374324798584
    10. 'sum' → logprob: -8.342374801635742

Token 171: '_difference' (ID: 123771)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.7327393293380737
    2. '_values' → logprob: -1.6077393293380737
    3. '_sum' → logprob: -1.9827393293380737
    4. '(' → logprob: -2.6077394485473633
    5. 'def' → logprob: -3.8577394485473633
    6. '_result' → logprob: -4.357739448547363
    7. '_value' → logprob: -4.732739448547363
    8. '_difference' → logprob: -4.732739448547363
    9. '_diff' → logprob: -4.857739448547363
    10. '_results' → logprob: -4.982739448547363

Token 172: '(ans' (ID: 70054)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5399398803710938
    2. 's' → logprob: -1.1649398803710938
    3. '(s' → logprob: -2.7899398803710938
    4. '(' → logprob: -3.4149398803710938
    5. '(A' → logprob: -4.914939880371094
    6. '_s' → logprob: -6.914939880371094
    7. '(a' → logprob: -7.664939880371094
    8. '(S' → logprob: -8.164939880371094
    9. '(D' → logprob: -8.414939880371094
    10. '(N' → logprob: -8.539939880371094

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014355888590216637
    2. ' ,' → logprob: -4.264355659484863
    3. ')' → logprob: -9.889355659484863
    4. '(' → logprob: -10.139355659484863
    5. '(ans' → logprob: -10.889355659484863
    6. '):' → logprob: -11.014355659484863
    7. ' (' → logprob: -11.014355659484863
    8. ' ' → logprob: -11.764355659484863
    9. '(a' → logprob: -12.014355659484863
    10. ',a' → logprob: -12.389355659484863

Token 174: ' diff' (ID: 8868)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0761117935180664
    2. 'b' → logprob: -2.7011117935180664
    3. 'a' → logprob: -2.7011117935180664
    4. 'arr' → logprob: -2.7011117935180664
    5. 'value' → logprob: -2.9511117935180664
    6. ' B' → logprob: -2.9511117935180664
    7. 'A' → logprob: -2.9511117935180664
    8. 'diff' → logprob: -3.0761117935180664
    9. 'val' → logprob: -3.4511117935180664
    10. ' arr' → logprob: -3.4511117935180664

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5537965893745422
    2. '):' → logprob: -1.0537965297698975
    3. ',' → logprob: -3.1787965297698975
    4. 's' → logprob: -3.4287965297698975
    5. '):
' → logprob: -6.678796768188477
    6. 'er' → logprob: -7.928796768188477
    7. '):

' → logprob: -8.053796768188477
    8. '=' → logprob: -8.553796768188477
    9. ')' → logprob: -9.428796768188477
    10. ':' → logprob: -9.678796768188477

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042066131718456745
    2. '=' → logprob: -6.254206657409668
    3. ':' → logprob: -6.504206657409668
    4. ':
' → logprob: -8.629206657409668
    5. 'def' → logprob: -8.879206657409668
    6. ' =' → logprob: -9.254206657409668
    7. ' +=' → logprob: -9.629206657409668
    8. ',' → logprob: -9.754206657409668
    9. ' return' → logprob: -9.879206657409668
    10. 'return' → logprob: -10.129206657409668

Token 177: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08691946417093277
    2. 'return' (adapté à ' return') → logprob: -2.5869195461273193
    3. ' return' → logprob: -4.83691930770874
    4. 'ans' → logprob: -9.961919784545898
    5. ' ans' → logprob: -11.211919784545898
    6. '	return' → logprob: -12.711919784545898
    7. '  ' → logprob: -13.961919784545898
    8. '       ' → logprob: -15.086919784545898
    9. '	ans' → logprob: -15.461919784545898
    10. ' ' → logprob: -15.461919784545898

Token 178: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004622968845069408
    2. ' ans' → logprob: -5.379622936248779
    3. '(ans' → logprob: -13.379623413085938
    4. '	ans' → logprob: -14.004623413085938
    5. '   ' → logprob: -15.754623413085938
    6. 'answer' → logprob: -16.504623413085938
    7. '_ans' → logprob: -17.379623413085938
    8. 'ann' → logprob: -17.629623413085938
    9. ' ' → logprob: -18.629623413085938
    10. 'anst' → logprob: -18.629623413085938

Token 179: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519300878047943
    2. ' +' → logprob: -1.5019301176071167
    3. ' ' → logprob: -15.251930236816406
    4. ' +=' → logprob: -15.376930236816406
    5. ' plus' → logprob: -16.001930236816406
    6. '+=' → logprob: -16.001930236816406
    7. '+
' → logprob: -16.751930236816406
    8. ' +
' → logprob: -17.001930236816406
    9. '+b' → logprob: -17.126930236816406
    10. '+d' → logprob: -17.376930236816406

Token 180: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.5759406089782715
    2. 'diff' → logprob: -0.8259406089782715
    3. '	diff' → logprob: -13.95094108581543
    4. ' abs' → logprob: -16.20094108581543
    5. 'abs' → logprob: -16.57594108581543
    6. '(diff' → logprob: -16.82594108581543
    7. '_diff' → logprob: -17.70094108581543
    8. ' dif' → logprob: -17.95094108581543
    9. 'dif' → logprob: -17.95094108581543
    10. 'difference' → logprob: -19.32594108581543

Token 181: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003385614836588502
    2. '<|end|>' → logprob: -8.250338554382324
    3. '```' → logprob: -10.750338554382324
    4. '#' → logprob: -11.000338554382324
    5. ' def' → logprob: -11.000338554382324
    6. '
' → logprob: -12.000338554382324
    7. '<|end|>' → logprob: -12.500338554382324
    8. '[' → logprob: -13.250338554382324
    9. '\' → logprob: -13.625338554382324
    10. 'ndef' → logprob: -13.750338554382324

Token 182: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.7697225252486533e-06
    2. '<|end|>' → logprob: -13.750003814697266
    3. '```' → logprob: -14.250003814697266
    4. ' def' → logprob: -14.250003814697266
    5. '#' → logprob: -14.375003814697266
    6. 'if' → logprob: -15.500003814697266
    7. 'print' → logprob: -16.500003814697266
    8. 'for' → logprob: -16.875003814697266
    9. 'ndef' → logprob: -17.000003814697266
    10. '.' → logprob: -17.125003814697266

Token 183: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004076147451996803
    2. ' solve' → logprob: -6.37907600402832
    3. 'main' → logprob: -6.87907600402832
    4. ' compute' → logprob: -7.25407600402832
    5. ' process' → logprob: -8.37907600402832
    6. ' calculate' → logprob: -8.62907600402832
    7. ' def' → logprob: -8.62907600402832
    8. ' find' → logprob: -11.25407600402832
    9. 'def' → logprob: -11.87907600402832
    10. 'solve' → logprob: -11.87907600402832

Token 184: '_total' (ID: 23814)
  Prédit: '_adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adjust' → logprob: -0.2621820271015167
    2. '_' → logprob: -2.7621819972991943
    3. '_ans' → logprob: -3.2621819972991943
    4. '_B' → logprob: -3.6371819972991943
    5. '_sum' → logprob: -4.012182235717773
    6. '_difference' → logprob: -4.012182235717773
    7. '_answer' → logprob: -4.137182235717773
    8. '_A' → logprob: -4.387182235717773
    9. '_diff' → logprob: -4.512182235717773
    10. '_b' → logprob: -5.137182235717773

Token 185: '_cost' (ID: 36820)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.03541000559926033
    2. '_adjust' → logprob: -4.160409927368164
    3. '_' → logprob: -5.160409927368164
    4. '(' → logprob: -5.410409927368164
    5. '_diff' → logprob: -5.785409927368164
    6. '_distance' → logprob: -6.160409927368164
    7. '_sum' → logprob: -6.535409927368164
    8. '_answer' → logprob: -6.910409927368164
    9. '_cost' → logprob: -7.910409927368164
    10. '_ans' → logprob: -7.910409927368164

Token 186: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.06164068356156349
    2. '(B' → logprob: -3.311640739440918
    3. '(' → logprob: -3.811640739440918
    4. ' (' → logprob: -7.186640739440918
    5. '(N' → logprob: -8.311640739440918
    6. '():' → logprob: -9.311640739440918
    7. '(ans' → logprob: -9.561640739440918
    8. '(arr' → logprob: -10.936640739440918
    9. '(def' → logprob: -12.186640739440918
    10. '(a' → logprob: -12.186640739440918

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ' ,' → logprob: -13.750001907348633
    3. ',N' → logprob: -14.750001907348633
    4. ',
' → logprob: -16.375001907348633
    5. '):' → logprob: -16.875001907348633
    6. ',B' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '):
' → logprob: -17.250001907348633
    9. '_,' → logprob: -19.000001907348633
    10. '‌,' → logprob: -19.125001907348633

Token 188: ' b' (ID: 287)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005941716954112053
    2. ' N' → logprob: -5.130941867828369
    3. 'B' → logprob: -11.630941390991211
    4. ')' → logprob: -12.630941390991211
    5. '   ' → logprob: -15.255941390991211
    6. '):
' → logprob: -15.380941390991211
    7. 'def' → logprob: -15.380941390991211
    8. ' B' → logprob: -16.63094139099121
    9. ' ' → logprob: -16.88094139099121
    10. ' )' → logprob: -17.25594139099121

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040934275602921844
    2. ',N' → logprob: -8.125409126281738
    3. ' ,' → logprob: -9.125409126281738
    4. '   ' → logprob: -13.500409126281738
    5. ',
' → logprob: -14.125409126281738
    6. '):
' → logprob: -14.250409126281738
    7. 'N' → logprob: -14.750409126281738
    8. 'def' → logprob: -15.000409126281738
    9. '_,' → logprob: -15.625409126281738
    10. ' ' → logprob: -16.125410079956055

Token 190: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015047440538182855
    2. ' N' → logprob: -6.501504898071289
    3. 'B' → logprob: -13.876504898071289
    4. ' ' → logprob: -14.626504898071289
    5. ')' → logprob: -15.001504898071289
    6. '	N' → logprob: -15.251504898071289
    7. '   ' → logprob: -15.626504898071289
    8. 'n' → logprob: -16.37650489807129
    9. '  ' → logprob: -17.37650489807129
    10. '<|end|>' → logprob: -18.12650489807129

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043182674795389175
    2. '):
' → logprob: -3.168182611465454
    3. ',' → logprob: -9.418182373046875
    4. '):
' → logprob: -9.543182373046875
    5. ')' → logprob: -10.918182373046875
    6. '   ' → logprob: -11.918182373046875
    7. ' ):' → logprob: -12.793182373046875
    8. '):

' → logprob: -13.418182373046875
    9. ':' → logprob: -14.168182373046875
    10. 'def' → logprob: -15.043182373046875

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009539441205561161
    2. 'ans' → logprob: -5.134539604187012
    3. ' ans' → logprob: -5.634539604187012
    4. '	ans' → logprob: -10.884539604187012
    5. '(ans' → logprob: -12.009539604187012
    6. 'def' → logprob: -13.009539604187012
    7. '   ' → logprob: -13.759539604187012
    8. '    
' → logprob: -13.759539604187012
    9. '
' → logprob: -14.009539604187012
    10. '```' → logprob: -14.009539604187012

Token 193: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.25899723172187805
    2. ' ans' → logprob: -1.7589972019195557
    3. '   ' → logprob: -2.8839972019195557
    4. '
' → logprob: -11.008996963500977
    5. '	ans' → logprob: -11.258996963500977
    6. 'answer' → logprob: -12.508996963500977
    7. '```' → logprob: -12.633996963500977
    8. '(ans' → logprob: -12.633996963500977
    9. 'def' → logprob: -13.508996963500977
    10. '    
' → logprob: -13.508996963500977

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.77975082397461
    4. '   ' → logprob: -16.40475082397461
    5. ',' → logprob: -17.52975082397461
    6. ' =
' → logprob: -18.15475082397461
    7. '  ' → logprob: -18.65475082397461
    8. ' ' → logprob: -19.02975082397461
    9. ')' → logprob: -19.65475082397461
    10. ' +=' → logprob: -19.90475082397461

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004114373121410608
    2. ' ' → logprob: -5.504114151000977
    3. '   ' → logprob: -10.254114151000977
    4. '  ' → logprob: -14.629114151000977
    5. '    ' → logprob: -16.191614151000977
    6. ' ' → logprob: -17.629114151000977
    7. '       ' → logprob: -17.941614151000977
    8. '۰' → logprob: -18.129114151000977
    9. 'def' → logprob: -18.441614151000977
    10. '     ' → logprob: -18.629114151000977

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.375011444091797
    4. 'int' → logprob: -18.687511444091797
    5. 'sum' → logprob: -18.937511444091797
    6. '  ' → logprob: -19.125011444091797
    7. '000' → logprob: -19.125011444091797
    8. 'def' → logprob: -19.187511444091797
    9. '۰' → logprob: -19.187511444091797
    10. '1' → logprob: -19.500011444091797

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006160800810903311
    2. '   ' → logprob: -5.131160736083984
    3. ' for' → logprob: -9.256160736083984
    4. '    
' → logprob: -9.756160736083984
    5. '
' → logprob: -10.506160736083984
    6. '  
' → logprob: -10.756160736083984
    7. 'for' → logprob: -11.756160736083984
    8. '<|end|>' → logprob: -11.756160736083984
    9. ' 
' → logprob: -12.006160736083984
    10. '   
' → logprob: -13.256160736083984

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00845843181014061
    2. ' for' → logprob: -5.133458614349365
    3. 'for' → logprob: -6.633458614349365
    4. '
' → logprob: -6.883458614349365
    5. '    
' → logprob: -9.133458137512207
    6. '	for' → logprob: -9.758458137512207
    7. '<|end|>' → logprob: -12.258458137512207
    8. 'def' → logprob: -12.633458137512207
    9. '  
' → logprob: -13.133458137512207
    10. '' → logprob: -13.258458137512207

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0020813820883631706
    2. ' for' → logprob: -6.752081394195557
    3. '   ' → logprob: -7.002081394195557
    4. 'B' → logprob: -14.502080917358398
    5. '	for' → logprob: -15.752080917358398
    6. ' ' → logprob: -16.5020809173584
    7. 'b' → logprob: -16.8770809173584
    8. '```' → logprob: -17.0020809173584
    9. 'def' → logprob: -18.0020809173584
    10. '  ' → logprob: -18.0020809173584

Token 200: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868851363658905
    2. 'i' → logprob: -1.136885166168213
    3. '	i' → logprob: -11.636884689331055
    4. ' ' → logprob: -13.636884689331055
    5. '   ' → logprob: -13.636884689331055
    6. '_i' → logprob: -14.511884689331055
    7. ' in' → logprob: -15.011884689331055
    8. '  ' → logprob: -15.136884689331055
    9. '<|end|>' → logprob: -15.261884689331055
    10. '[i' → logprob: -15.511884689331055

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0110669219866395
    2. 'in' → logprob: -4.511066913604736
    3. ' ' → logprob: -11.136067390441895
    4. '   ' → logprob: -13.636067390441895
    5. 'import' → logprob: -13.886067390441895
    6. ',' → logprob: -14.511067390441895
    7. '  ' → logprob: -14.886067390441895
    8. '0' → logprob: -15.511067390441895
    9. 'In' → logprob: -15.636067390441895
    10. ')' → logprob: -15.761067390441895

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889308780431747
    2. ' range' → logprob: -2.5788931846618652
    3. '(range' → logprob: -13.578892707824707
    4. ' ' → logprob: -13.828892707824707
    5. '   ' → logprob: -14.203892707824707
    6. '	range' → logprob: -15.328892707824707
    7. '  ' → logprob: -15.953892707824707
    8. ')' → logprob: -17.703893661499023
    9. '    ' → logprob: -18.703893661499023
    10. '
' → logprob: -18.703893661499023

Token 203: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.016392452642321587
    2. '(' → logprob: -4.391392230987549
    3. 'N' → logprob: -6.141392230987549
    4. ' (' → logprob: -7.016392230987549
    5. ' N' → logprob: -7.391392230987549
    6. ',' → logprob: -9.141392707824707
    7. '   ' → logprob: -9.516392707824707
    8. ',N' → logprob: -11.766392707824707
    9. '(
' → logprob: -12.016392707824707
    10. ' ' → logprob: -12.266392707824707

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10055471956729889
    2. '):
' → logprob: -2.3505547046661377
    3. '   ' → logprob: -8.850554466247559
    4. ':' → logprob: -8.975554466247559
    5. ')' → logprob: -10.475554466247559
    6. ' ):' → logprob: -10.600554466247559
    7. '+' → logprob: -11.600554466247559
    8. '):
' → logprob: -12.100554466247559
    9. '):

' → logprob: -12.725554466247559
    10. ' ):
' → logprob: -13.350554466247559

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017371637746691704
    2. '   ' → logprob: -4.642371654510498
    3. ' diff' → logprob: -5.017371654510498
    4. 'diff' → logprob: -7.142371654510498
    5. ' ans' → logprob: -9.76737117767334
    6. '	diff' → logprob: -10.14237117767334
    7. '```' → logprob: -11.26737117767334
    8. ' dif' → logprob: -11.26737117767334
    9. ' a' → logprob: -11.64237117767334
    10. 'a' → logprob: -11.76737117767334

Token 206: ' target' (ID: 3783)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5015555024147034
    2. '   ' → logprob: -1.3765554428100586
    3. 'ans' → logprob: -2.6265554428100586
    4. ' diff' → logprob: -3.2515554428100586
    5. '       ' → logprob: -4.126555442810059
    6. ' ans' → logprob: -4.376555442810059
    7. 'd' → logprob: -7.501555442810059
    8. '	diff' → logprob: -7.626555442810059
    9. '	ans' → logprob: -8.001555442810059
    10. 'a' → logprob: -9.126555442810059

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011508945375680923
    2. '=' → logprob: -4.761508941650391
    3. '_value' → logprob: -5.886508941650391
    4. '_val' → logprob: -9.51150894165039
    5. 'value' → logprob: -11.01150894165039
    6. '_' → logprob: -12.01150894165039
    7. '   ' → logprob: -12.38650894165039
    8. '<|end|>' → logprob: -12.63650894165039
    9. 'Value' → logprob: -13.01150894165039
    10. '=A' → logprob: -14.13650894165039

Token 208: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.018154039978981018
    2. ' compute' → logprob: -4.018154144287109
    3. '   ' → logprob: -12.51815414428711
    4. 'b' → logprob: -15.39315414428711
    5. ' ' → logprob: -16.51815414428711
    6. '  ' → logprob: -16.76815414428711
    7. '.compute' → logprob: -17.14315414428711
    8. 'calculate' → logprob: -17.14315414428711
    9. '
' → logprob: -17.76815414428711
    10. '    ' → logprob: -18.01815414428711

Token 209: '_adjust' (ID: 109618)
  Prédit: '_adjust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adjust' → logprob: -0.00011570196511456743
    2. 'adjust' → logprob: -9.125115394592285
    3. '_total' → logprob: -13.500115394592285
    4. 'Adjusted' → logprob: -13.500115394592285
    5. '_b' → logprob: -13.625115394592285
    6. '_' → logprob: -15.000115394592285
    7. '```' → logprob: -15.125115394592285
    8. '_adj' → logprob: -15.250115394592285
    9. '_a' → logprob: -15.500115394592285
    10. 'b' → logprob: -15.625115394592285

Token 210: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -9.372294698550832e-06
    2. 'e' → logprob: -12.625009536743164
    3. '_value' → logprob: -12.750009536743164
    4. 'd' → logprob: -14.125009536743164
    5. 'b' → logprob: -14.500009536743164
    6. 'value' → logprob: -14.875009536743164
    7. 'ated' → logprob: -15.250009536743164
    8. 'ted' → logprob: -15.625009536743164
    9. '_b' → logprob: -15.750009536743164
    10. '```' → logprob: -15.875009536743164

Token 211: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -11.375020027160645
    3. '_val' → logprob: -12.750020027160645
    4. '_values' → logprob: -13.000020027160645
    5. '_total' → logprob: -13.625020027160645
    6. 'value' → logprob: -14.125020027160645
    7. '_target' → logprob: -15.250020027160645
    8. 'alue' → logprob: -15.250020027160645
    9. '_cost' → logprob: -15.875020027160645
    10. '_difference' → logprob: -16.250019073486328

Token 212: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.6550729419104755e-05
    2. '(' → logprob: -10.250036239624023
    3. 'b' → logprob: -14.000036239624023
    4. '(
' → logprob: -15.375036239624023
    5. ' (' → logprob: -17.125036239624023
    6. ' b' → logprob: -18.625036239624023
    7. ')b' → logprob: -18.875036239624023
    8. '	b' → logprob: -19.250036239624023
    9. ',b' → logprob: -20.250036239624023
    10. '```' → logprob: -20.625036239624023

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007998264394700527
    2. ',i' → logprob: -4.882998466491699
    3. ' ,' → logprob: -7.882998466491699
    4. 'i' → logprob: -11.6329984664917
    5. ' i' → logprob: -13.1329984664917
    6. ',
' → logprob: -13.3829984664917
    7. '   ' → logprob: -14.2579984664917
    8. ' ' → logprob: -14.6329984664917
    9. '(i' → logprob: -14.8829984664917
    10. '[i' → logprob: -15.1329984664917

Token 214: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196891888976097
    2. ' i' → logprob: -2.8119688034057617
    3. '   ' → logprob: -14.561968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ')' → logprob: -15.436968803405762
    6. ')i' → logprob: -15.936968803405762
    7. '	i' → logprob: -16.311969757080078
    8. '[i' → logprob: -17.061969757080078
    9. '    ' → logprob: -17.311969757080078
    10. '(i' → logprob: -18.061969757080078

Token 215: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5773658752441406
    2. ')' → logprob: -0.8273658752441406
    3. '       ' → logprob: -6.577365875244141
    4. '   ' → logprob: -11.20236587524414
    5. ')
' → logprob: -11.57736587524414
    6. ')

' → logprob: -11.82736587524414
    7. '<|end|>' → logprob: -14.07736587524414
    8. ' )
' → logprob: -14.20236587524414
    9. '):
' → logprob: -14.57736587524414
    10. ',' → logprob: -14.82736587524414

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001256303396075964
    2. 'diff' → logprob: -7.126256465911865
    3. ' diff' → logprob: -8.001255989074707
    4. '   ' → logprob: -9.751255989074707
    5. ',' → logprob: -10.376255989074707
    6. '	diff' → logprob: -11.251255989074707
    7. '
' → logprob: -12.876255989074707
    8. '<|end|>' → logprob: -13.251255989074707
    9. ' ans' → logprob: -13.501255989074707
    10. '           ' → logprob: -13.751255989074707

Token 217: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.05434861034154892
    2. ' diff' → logprob: -3.5543487071990967
    3. '       ' → logprob: -4.304348468780518
    4. 'ans' → logprob: -4.679348468780518
    5. ' ans' → logprob: -7.054348468780518
    6. '   ' → logprob: -8.054348945617676
    7. 'difference' → logprob: -8.804348945617676
    8. '	diff' → logprob: -9.804348945617676
    9. 'd' → logprob: -10.179348945617676
    10. 'dist' → logprob: -11.429348945617676

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994065642356873
    2. '=' → logprob: -2.6949405670166016
    3. '   ' → logprob: -12.819940567016602
    4. ' ' → logprob: -14.069940567016602
    5. '  ' → logprob: -14.694940567016602
    6. '    ' → logprob: -16.0699405670166
    7. '	' → logprob: -16.0699405670166
    8. ' ' → logprob: -16.6949405670166
    9. '_' → logprob: -16.9449405670166
    10. ',' → logprob: -17.0699405670166

Token 219: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.005251899361610413
    2. ' abs' → logprob: -5.255251884460449
    3. '   ' → logprob: -11.00525188446045
    4. '
' → logprob: -14.38025188446045
    5. '       ' → logprob: -14.75525188446045
    6. '(abs' → logprob: -15.63025188446045
    7. '    ' → logprob: -16.380252838134766
    8. '.abs' → logprob: -16.880252838134766
    9. '_abs' → logprob: -17.505252838134766
    10. '  ' → logprob: -17.505252838134766

Token 220: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -8.423219696851447e-05
    2. 'difference' → logprob: -9.625083923339844
    3. '(A' → logprob: -11.375083923339844
    4. '(' → logprob: -13.000083923339844
    5. '(a' → logprob: -13.500083923339844
    6. '_' → logprob: -13.625083923339844
    7. 'ifference' → logprob: -14.500083923339844
    8. '(B' → logprob: -14.875083923339844
    9. '\' → logprob: -15.625083923339844
    10. '(_' → logprob: -15.750083923339844

Token 221: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -12.375009536743164
    3. 'A' → logprob: -12.375009536743164
    4. '   ' → logprob: -14.625009536743164
    5. ' (' → logprob: -15.125009536743164
    6. '(target' → logprob: -15.375009536743164
    7. '(
' → logprob: -16.500009536743164
    8. 'compute' → logprob: -16.500009536743164
    9. '(B' → logprob: -16.750009536743164
    10. '(ans' → logprob: -17.250009536743164

Token 222: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3685496747493744
    2. '[' → logprob: -1.2435497045516968
    3. ',' → logprob: -3.9935495853424072
    4. '[target' → logprob: -6.993549823760986
    5. '[
' → logprob: -8.243549346923828
    6. ' ,' → logprob: -9.868549346923828
    7. ',i' → logprob: -9.993549346923828
    8. ',[' → logprob: -10.118549346923828
    9. '[,' → logprob: -10.368549346923828
    10. ',
' → logprob: -10.993549346923828

Token 223: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021513307001441717
    2. ',target' → logprob: -6.3771514892578125
    3. ' ,' → logprob: -7.7521514892578125
    4. 'target' → logprob: -11.627151489257812
    5. '[target' → logprob: -12.752151489257812
    6. '[' → logprob: -13.002151489257812
    7. ',
' → logprob: -13.127151489257812
    8. '],' → logprob: -15.002151489257812
    9. '[],' → logprob: -15.127151489257812
    10. '
' → logprob: -15.127151489257812

Token 224: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.10020839422941208
    2. ' target' → logprob: -2.350208282470703
    3. '(target' → logprob: -13.475208282470703
    4. '	target' → logprob: -15.975208282470703
    5. '[target' → logprob: -16.225208282470703
    6. 'arget' → logprob: -16.600208282470703
    7. '   ' → logprob: -17.350208282470703
    8. ',target' → logprob: -17.350208282470703
    9. '       ' → logprob: -17.975208282470703
    10. '_target' → logprob: -18.350208282470703

Token 225: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12695026397705078
    2. ')' → logprob: -2.126950263977051
    3. ')
' → logprob: -11.12695026397705
    4. ')

' → logprob: -12.12695026397705
    5. '       ' → logprob: -13.62695026397705
    6. '   ' → logprob: -14.50195026397705
    7. ' )
' → logprob: -15.62695026397705
    8. ')\
' → logprob: -17.251949310302734
    9. ')return' → logprob: -17.501949310302734
    10. ')`
' → logprob: -17.626949310302734

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004655830562114716
    2. '   ' → logprob: -5.379655838012695
    3. '<|end|>' → logprob: -10.754655838012695
    4. 'ans' → logprob: -12.254655838012695
    5. '<|end|>' → logprob: -12.754655838012695
    6. '	ans' → logprob: -13.254655838012695
    7. ' ' → logprob: -14.129655838012695
    8. ',' → logprob: -14.504655838012695
    9. '           ' → logprob: -14.504655838012695
    10. '     ' → logprob: -14.629655838012695

Token 227: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.001703983056358993
    2. ' ans' → logprob: -6.501704216003418
    3. '   ' → logprob: -8.876704216003418
    4. '	ans' → logprob: -9.876704216003418
    5. '       ' → logprob: -11.751704216003418
    6. '
' → logprob: -13.751704216003418
    7. '(ans' → logprob: -13.876704216003418
    8. 'answer' → logprob: -15.001704216003418
    9. '_ans' → logprob: -15.501704216003418
    10. ' ' → logprob: -16.8767032623291

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868737816810608
    2. '=' → logprob: -1.136873722076416
    3. ' +=' → logprob: -13.136874198913574
    4. '+=' → logprob: -14.136874198913574
    5. ',' → logprob: -16.636873245239258
    6. ' ' → logprob: -17.761873245239258
    7. '    ' → logprob: -17.761873245239258
    8. '＝' → logprob: -18.011873245239258
    9. ')' → logprob: -18.636873245239258
    10. '  ' → logprob: -19.011873245239258

Token 229: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.006716674659401178
    2. ' accumulate' → logprob: -5.006716728210449
    3. '(acc' → logprob: -14.38171672821045
    4. ' acc' → logprob: -15.25671672821045
    5. 'ans' → logprob: -15.38171672821045
    6. '	acc' → logprob: -16.256715774536133
    7. 'ac' → logprob: -16.506715774536133
    8. '
' → logprob: -18.006715774536133
    9. '.acc' → logprob: -18.131715774536133
    10. '   ' → logprob: -18.256715774536133

Token 230: '_difference' (ID: 123771)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0008114131633192301
    2. '_difference' → logprob: -7.250811576843262
    3. 'ans' → logprob: -9.500811576843262
    4. 'difference' → logprob: -11.750811576843262
    5. '(answer' → logprob: -12.125811576843262
    6. '_answer' → logprob: -12.500811576843262
    7. '_ans' → logprob: -13.125811576843262
    8. '(' → logprob: -13.250811576843262
    9. '	ans' → logprob: -13.375811576843262
    10. 'answer' → logprob: -14.000811576843262

Token 231: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -15.0
    3. '(' → logprob: -16.5
    4. '(answer' → logprob: -19.5
    5. '	ans' → logprob: -20.375
    6. '(
' → logprob: -21.125
    7. ' ans' → logprob: -21.375
    8. ' (' → logprob: -21.875
    9. '(err' → logprob: -22.75
    10. 'ANS' → logprob: -23.0

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.750028610229492
    3. ',d' → logprob: -12.000028610229492
    4. ',
' → logprob: -14.250028610229492
    5. '(diff' → logprob: -16.000028610229492
    6. '   ' → logprob: -17.000028610229492
    7. 'diff' → logprob: -17.250028610229492
    8. ' diff' → logprob: -17.875028610229492
    9. ',
' → logprob: -19.000028610229492
    10. ')' → logprob: -19.250028610229492

Token 233: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.07889056205749512
    2. ' diff' → logprob: -2.578890562057495
    3. '	diff' → logprob: -14.203890800476074
    4. '(diff' → logprob: -16.453889846801758
    5. '   ' → logprob: -19.328889846801758
    6. '
' → logprob: -19.828889846801758
    7. ' ' → logprob: -20.203889846801758
    8. '.diff' → logprob: -20.328889846801758
    9. '_diff' → logprob: -20.453889846801758
    10. '    ' → logprob: -20.828889846801758

Token 234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.29488426446914673
    2. '   ' → logprob: -1.544884204864502
    3. ')' → logprob: -3.169884204864502
    4. '
' → logprob: -10.91988468170166
    5. ')return' → logprob: -11.79488468170166
    6. ')

' → logprob: -12.79488468170166
    7. ')
' → logprob: -12.91988468170166
    8. 'return' → logprob: -13.29488468170166
    9. ')\' → logprob: -14.04488468170166
    10. ' ' → logprob: -14.04488468170166

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025760135613381863
    2. 'return' → logprob: -6.002575874328613
    3. ' return' → logprob: -9.252575874328613
    4. '
' → logprob: -13.002575874328613
    5. '    
' → logprob: -14.002575874328613
    6. '	return' → logprob: -14.877575874328613
    7. '       ' → logprob: -15.002575874328613
    8. 'def' → logprob: -15.502575874328613
    9. '```' → logprob: -16.12757682800293
    10. ' ' → logprob: -16.87757682800293

Token 236: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024390213191509247
    2. 'return' (adapté à ' return') → logprob: -3.77439022064209
    3. ' return' → logprob: -6.77439022064209
    4. '	return' → logprob: -14.27439022064209
    5. '
' → logprob: -15.52439022064209
    6. '       ' → logprob: -15.64939022064209
    7. 'def' → logprob: -16.024389266967773
    8. ' ' → logprob: -16.524389266967773
    9. '```' → logprob: -16.649389266967773
    10. '  ' → logprob: -17.149389266967773

Token 237: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014165744185447693
    2. ' ans' → logprob: -4.264165878295898
    3. '(ans' → logprob: -13.639165878295898
    4. '	ans' → logprob: -13.889165878295898
    5. '   ' → logprob: -17.0141658782959
    6. '_ans' → logprob: -18.0141658782959
    7. ' ' → logprob: -18.3891658782959
    8. 'Ans' → logprob: -19.0141658782959
    9. 'answer' → logprob: -19.1391658782959
    10. ' ' → logprob: -19.2641658782959

Token 238: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06282994896173477
    2. '<|end|>' → logprob: -2.8128299713134766
    3. '```' → logprob: -8.312829971313477
    4. '
' → logprob: -8.312829971313477
    5. '#' → logprob: -9.062829971313477
    6. '<|end|>' → logprob: -9.187829971313477
    7. ' def' → logprob: -9.937829971313477
    8. '[' → logprob: -10.312829971313477
    9. '\n' → logprob: -11.562829971313477
    10. ')' → logprob: -11.812829971313477

Token 239: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010115911572938785
    2. '#' → logprob: -10.375101089477539
    3. 'N' → logprob: -11.000101089477539
    4. '```' → logprob: -11.250101089477539
    5. 'a' → logprob: -11.375101089477539
    6. 'A' → logprob: -11.625101089477539
    7. 'n' → logprob: -12.125101089477539
    8. ' def' → logprob: -12.875101089477539
    9. 'if' → logprob: -13.125101089477539
    10. 'print' → logprob: -13.375101089477539

Token 240: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5763739943504333
    2. ' main' → logprob: -0.8263739943504333
    3. 'solve' → logprob: -8.576374053955078
    4. ' solve' → logprob: -8.951374053955078
    5. 'def' → logprob: -10.576374053955078
    6. 'process' → logprob: -10.951374053955078
    7. 'min' → logprob: -11.201374053955078
    8. ' def' → logprob: -11.451374053955078
    9. 'minimal' → logprob: -11.701374053955078
    10. 'solution' → logprob: -11.826374053955078

Token 241: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002561268862336874
    2. '_' → logprob: -6.752561092376709
    3. '("' → logprob: -7.752561092376709
    4. '('' → logprob: -7.877561092376709
    5. '_total' → logprob: -8.502561569213867
    6. ' (' → logprob: -9.627561569213867
    7. '("("' → logprob: -9.627561569213867
    8. '_(' → logprob: -10.502561569213867
    9. '_final' → logprob: -10.627561569213867
    10. '("")' → logprob: -10.627561569213867

Token 242: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11504634469747543
    2. '():' → logprob: -2.615046262741089
    3. '(ans' → logprob: -3.740046262741089
    4. '()' → logprob: -4.490046501159668
    5. '(result' → logprob: -9.240046501159668
    6. '():
' → logprob: -9.740046501159668
    7. ' (' → logprob: -9.990046501159668
    8. '(output' → logprob: -10.115046501159668
    9. '(answer' → logprob: -10.240046501159668
    10. '("("' → logprob: -10.490046501159668

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06229647621512413
    2. '):
' → logprob: -2.8122963905334473
    3. ')' → logprob: -8.062296867370605
    4. '):
' → logprob: -11.312296867370605
    5. '):

' → logprob: -14.062296867370605
    6. ':' → logprob: -15.312296867370605
    7. ' ):' → logprob: -16.18729591369629
    8. ',' → logprob: -16.81229591369629
    9. '   ' → logprob: -17.31229591369629
    10. ')
' → logprob: -17.31229591369629

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007265847641974688
    2. ' print' → logprob: -5.007266044616699
    3. 'print' → logprob: -7.507266044616699
    4. '```' → logprob: -13.6322660446167
    5. '   ' → logprob: -16.882265090942383
    6. '    ' → logprob: -18.632265090942383
    7. '`' → logprob: -19.007265090942383
    8. '	print' → logprob: -19.382265090942383
    9. '    
' → logprob: -19.632265090942383
    10. '   ' → logprob: -20.257265090942383

Token 245: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.3306015716807451e-05
    2. ' print' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.50001335144043
    4. '```' → logprob: -19.00001335144043
    5. 'def' → logprob: -21.12501335144043
    6. 'pass' → logprob: -22.87501335144043
    7. '`' → logprob: -23.75001335144043
    8. '
' → logprob: -24.00001335144043
    9. '#print' → logprob: -24.37501335144043
    10. '	print' → logprob: -24.50001335144043

Token 246: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.726595241460018e-05
    2. '(' → logprob: -10.25003719329834
    3. 'ans' → logprob: -13.50003719329834
    4. '()' → logprob: -15.12503719329834
    5. '(answer' → logprob: -16.375038146972656
    6. ' (' → logprob: -16.875038146972656
    7. '(
' → logprob: -18.125038146972656
    8. '(abs' → logprob: -18.125038146972656
    9. '	ans' → logprob: -18.750038146972656
    10. '(f' → logprob: -18.875038146972656

Token 247: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -17.0
    4. '()' → logprob: -17.625
    5. ')`' → logprob: -17.625
    6. '())' → logprob: -17.75
    7. '')' → logprob: -18.625
    8. '))' → logprob: -19.5
    9. '")' → logprob: -19.875
    10. ')

' → logprob: -20.375

Token 248: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0564331205387134e-05
    2. 'if' → logprob: -12.37501049041748
    3. '#' → logprob: -13.50001049041748
    4. '```' → logprob: -13.62501049041748
    5. 'N' → logprob: -14.00001049041748
    6. '<|end|>' → logprob: -14.25001049041748
    7. 'ndef' → logprob: -14.37501049041748
    8. 'n' → logprob: -14.62501049041748
    9. 'for' → logprob: -15.37501049041748
    10. ' def' → logprob: -15.62501049041748

Token 249: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014166799373924732
    2. ' main' → logprob: -4.264166831970215
    3. 'def' → logprob: -12.889166831970215
    4. 'solve' → logprob: -14.389166831970215
    5. 'process' → logprob: -16.5141658782959
    6. ' solve' → logprob: -16.6391658782959
    7. ' def' → logprob: -17.6391658782959
    8. 'run' → logprob: -17.6391658782959
    9. 'solution' → logprob: -17.8891658782959
    10. '
' → logprob: -18.1391658782959

Token 250: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001872094871941954
    2. '():
' → logprob: -8.750186920166016
    3. '()' → logprob: -11.750186920166016
    4. ' ():' → logprob: -11.750186920166016
    5. '_' → logprob: -11.875186920166016
    6. '(' → logprob: -12.250186920166016
    7. '():
' → logprob: -15.125186920166016
    8. '()>' → logprob: -15.500186920166016
    9. '():

' → logprob: -15.500186920166016
    10. ':' → logprob: -16.250186920166016

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3351772129535675
    2. 'N' → logprob: -1.3351771831512451
    3. ' N' → logprob: -3.835177183151245
    4. 'n' → logprob: -9.835177421569824
    5. ' ' → logprob: -11.085177421569824
    6. '  ' → logprob: -12.585177421569824
    7. '	N' → logprob: -13.085177421569824
    8. '    
' → logprob: -13.210177421569824
    9. '
' → logprob: -13.335177421569824
    10. ' n' → logprob: -13.960177421569824

Token 252: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0025062207132577896
    2. 'n' → logprob: -6.252506256103516
    3. ' N' → logprob: -7.627506256103516
    4. '   ' → logprob: -9.377506256103516
    5. '
' → logprob: -12.502506256103516
    6. ' n' → logprob: -13.752506256103516
    7. '    
' → logprob: -14.752506256103516
    8. ' ' → logprob: -15.377506256103516
    9. 'import' → logprob: -16.127506256103516
    10. '#' → logprob: -16.127506256103516

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011104652658104897
    2. '=' → logprob: -4.511104583740234
    3. ',' → logprob: -10.011104583740234
    4. '=int' → logprob: -12.386104583740234
    5. ' ' → logprob: -13.261104583740234
    6. '   ' → logprob: -13.511104583740234
    7. ')' → logprob: -13.511104583740234
    8. '=input' → logprob: -14.011104583740234
    9. ' =)' → logprob: -14.136104583740234
    10. ' =
' → logprob: -14.386104583740234

Token 254: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5759860277175903
    2. ' read' → logprob: -0.8259860277175903
    3. 'int' → logprob: -10.4509859085083
    4. ' int' → logprob: -10.9509859085083
    5. '	read' → logprob: -16.575986862182617
    6. '(read' → logprob: -17.950986862182617
    7. '   ' → logprob: -18.075986862182617
    8. ' ' → logprob: -18.075986862182617
    9. '  ' → logprob: -18.200986862182617
    10. 'Read' → logprob: -19.700986862182617

Token 255: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0008695332217030227
    2. '_' → logprob: -7.6258697509765625
    3. '()' → logprob: -8.000869750976562
    4. ' _' → logprob: -12.125869750976562
    5. '_INPUT' → logprob: -12.125869750976562
    6. '(' → logprob: -12.125869750976562
    7. '_integer' → logprob: -12.125869750976562
    8. '_Input' → logprob: -12.250869750976562
    9. '_int' → logprob: -12.500869750976562
    10. 'input' → logprob: -12.750869750976562

Token 256: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012582694762386382
    2. '()
' → logprob: -9.000125885009766
    3. '()

' → logprob: -13.875125885009766
    4. '()\' → logprob: -14.125125885009766
    5. '()
' → logprob: -15.625125885009766
    6. '()`' → logprob: -15.750125885009766
    7. ' ()' → logprob: -16.250125885009766
    8. '())' → logprob: -16.750125885009766
    9. '()"' → logprob: -16.875125885009766
    10. '()<' → logprob: -17.625125885009766

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022453969344496727
    2. 'A' → logprob: -3.897454023361206
    3. ' A' → logprob: -6.397453784942627
    4. '
' → logprob: -9.147454261779785
    5. '    
' → logprob: -9.397454261779785
    6. '<|end|>' → logprob: -10.897454261779785
    7. '	A' → logprob: -11.647454261779785
    8. ' ' → logprob: -11.897454261779785
    9. '  ' → logprob: -12.147454261779785
    10. '    ' → logprob: -12.772454261779785

Token 258: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.07008437067270279
    2. '   ' → logprob: -2.8200843334198
    3. ' A' → logprob: -4.820084571838379
    4. ' ' → logprob: -11.445084571838379
    5. '	A' → logprob: -12.570084571838379
    6. '  ' → logprob: -13.195084571838379
    7. '```' → logprob: -14.320084571838379
    8. '
' → logprob: -15.320084571838379
    9. '    ' → logprob: -15.695084571838379
    10. '    
' → logprob: -15.820084571838379

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426788717508316
    2. '=' → logprob: -2.01767897605896
    3. '   ' → logprob: -13.642679214477539
    4. ',' → logprob: -13.642679214477539
    5. '[' → logprob: -15.017679214477539
    6. '.sort' → logprob: -15.017679214477539
    7. ' ' → logprob: -15.392679214477539
    8. '.' → logprob: -16.01767921447754
    9. ')' → logprob: -16.39267921447754
    10. 'sort' → logprob: -16.76767921447754

Token 260: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0485873706638813
    2. ' read' → logprob: -3.0485873222351074
    3. '	read' → logprob: -16.923587799072266
    4. '(read' → logprob: -17.673587799072266
    5. '   ' → logprob: -18.548587799072266
    6. 'sorted' → logprob: -20.423587799072266
    7. 'sort' → logprob: -20.423587799072266
    8. ' ' → logprob: -20.548587799072266
    9. '  ' → logprob: -20.673587799072266
    10. 'list' → logprob: -21.048587799072266

Token 261: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.9361264946837764e-07
    2. 'array' → logprob: -16.375
    3. '_ARRAY' → logprob: -17.75
    4. 'Array' → logprob: -18.125
    5. '()' → logprob: -18.875
    6. '_' → logprob: -19.0
    7. '_input' → logprob: -19.75
    8. '_arrays' → logprob: -20.375
    9. '_arr' → logprob: -20.75
    10. '_line' → logprob: -21.125

Token 262: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06412794440984726
    2. '
' → logprob: -2.9391279220581055
    3. '()
' → logprob: -5.0641279220581055
    4. '()' → logprob: -6.3141279220581055
    5. '    
' → logprob: -7.0641279220581055
    6. '[' → logprob: -10.189127922058105
    7. '  
' → logprob: -10.314127922058105
    8. '(' → logprob: -10.689127922058105
    9. ' 
' → logprob: -11.064127922058105
    10. 'def' → logprob: -11.189127922058105

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011392155662178993
    2. ' B' → logprob: -5.511392116546631
    3. ' A' → logprob: -6.011392116546631
    4. 'B' → logprob: -6.136392116546631
    5. '
' → logprob: -6.761392116546631
    6. 'A' → logprob: -6.761392116546631
    7. ' ' → logprob: -9.011392593383789
    8. '    
' → logprob: -9.636392593383789
    9. '```' → logprob: -9.761392593383789
    10. '  ' → logprob: -10.011392593383789

Token 264: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.9207168221473694
    2. 'A' → logprob: -1.6707167625427246
    3. ' B' → logprob: -1.6707167625427246
    4. '   ' → logprob: -1.9207167625427246
    5. ' A' → logprob: -2.5457167625427246
    6. ' ' → logprob: -8.045717239379883
    7. '  ' → logprob: -9.920717239379883
    8. '```' → logprob: -9.920717239379883
    9. ' sorted' → logprob: -9.920717239379883
    10. 'sorted' → logprob: -10.045717239379883

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '[' → logprob: -17.453889846801758
    4. ' ' → logprob: -17.953889846801758
    5. ',' → logprob: -18.203889846801758
    6. '=create' → logprob: -18.328889846801758
    7. '＝' → logprob: -18.453889846801758
    8. '.' → logprob: -18.828889846801758
    9. ')' → logprob: -19.453889846801758
    10. '   ' → logprob: -19.828889846801758

Token 266: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.0633385181427002
    2. 'build' → logprob: -2.8133385181427
    3. ' initialize' → logprob: -6.938338279724121
    4. 'initialize' → logprob: -8.188338279724121
    5. ' compute' → logprob: -9.688338279724121
    6. 'compute' → logprob: -10.813338279724121
    7. ' sort' → logprob: -10.938338279724121
    8. 'sort' → logprob: -11.813338279724121
    9. '(build' → logprob: -12.063338279724121
    10. '	build' → logprob: -13.813338279724121

Token 267: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -7.314625690924004e-05
    2. '(B' → logprob: -10.375073432922363
    3. '_A' → logprob: -11.000073432922363
    4. '(A' → logprob: -11.250073432922363
    5. 'B' → logprob: -11.375073432922363
    6. '```' → logprob: -15.375073432922363
    7. '_' → logprob: -15.875073432922363
    8. '(' → logprob: -16.000072479248047
    9. '_(' → logprob: -16.375072479248047
    10. '\' → logprob: -16.375072479248047

Token 268: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.953082341467962e-05
    2. '(' → logprob: -10.875039100646973
    3. 'A' → logprob: -11.375039100646973
    4. '(B' → logprob: -13.000039100646973
    5. '
' → logprob: -13.125039100646973
    6. '(N' → logprob: -14.000039100646973
    7. ' (' → logprob: -14.000039100646973
    8. '(
' → logprob: -14.500039100646973
    9. '```' → logprob: -14.500039100646973
    10. 'def' → logprob: -14.875039100646973

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ',N' → logprob: -9.500077247619629
    3. ' ,' → logprob: -13.000077247619629
    4. '(N' → logprob: -16.250078201293945
    5. ')' → logprob: -16.375078201293945
    6. ',
' → logprob: -16.500078201293945
    7. '   ' → logprob: -16.875078201293945
    8. 'N' → logprob: -17.375078201293945
    9. '```' → logprob: -17.750078201293945
    10. '‌,' → logprob: -18.125078201293945

Token 270: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015024791937321424
    2. ' N' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.62650203704834
    4. '	N' → logprob: -18.251502990722656
    5. 'len' → logprob: -18.751502990722656
    6. ' ' → logprob: -19.001502990722656
    7. ')' → logprob: -19.501502990722656
    8. 'n' → logprob: -20.626502990722656
    9. '  ' → logprob: -21.126502990722656
    10. ',N' → logprob: -21.501502990722656

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048615410923957825
    2. ')
' → logprob: -3.0486154556274414
    3. '   ' → logprob: -10.548615455627441
    4. ')
' → logprob: -13.798615455627441
    5. ')

' → logprob: -14.548615455627441
    6. ' )' → logprob: -16.673614501953125
    7. '),' → logprob: -16.798614501953125
    8. ')#' → logprob: -17.173614501953125
    9. '
' → logprob: -17.548614501953125
    10. ' ' → logprob: -17.673614501953125

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017743296921253204
    2. 'B' → logprob: -4.267743110656738
    3. ' B' → logprob: -5.642743110656738
    4. ' ' → logprob: -11.392743110656738
    5. '```' → logprob: -12.267743110656738
    6. '  ' → logprob: -12.517743110656738
    7. 'sorted' → logprob: -13.017743110656738
    8. ' sorted' → logprob: -13.267743110656738
    9. '	B' → logprob: -13.642743110656738
    10. '
' → logprob: -13.642743110656738

Token 273: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.028978383168578148
    2. ' B' → logprob: -3.6539783477783203
    3. 'sort' → logprob: -6.65397834777832
    4. '   ' → logprob: -7.02897834777832
    5. 'sorted' → logprob: -7.77897834777832
    6. ' sort' → logprob: -10.52897834777832
    7. ' sorted' → logprob: -10.90397834777832
    8. ' ' → logprob: -10.90397834777832
    9. 'Sorted' → logprob: -11.90397834777832
    10. '  ' → logprob: -13.15397834777832

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20228974521160126
    2. '=' → logprob: -1.7022897005081177
    3. '_sorted' → logprob: -7.327289581298828
    4. 'sorted' → logprob: -8.952289581298828
    5. '.sort' → logprob: -9.702289581298828
    6. ' sorted' → logprob: -11.327289581298828
    7. ' ' → logprob: -11.827289581298828
    8. 'sort' → logprob: -12.827289581298828
    9. 'Sorted' → logprob: -13.327289581298828
    10. '   ' → logprob: -13.952289581298828

Token 275: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.06199255958199501
    2. ' sort' → logprob: -2.811992645263672
    3. 'sorted' → logprob: -10.686992645263672
    4. ' sorted' → logprob: -13.186992645263672
    5. '(sort' → logprob: -16.436992645263672
    6. ' ' → logprob: -16.811992645263672
    7. '   ' → logprob: -16.936992645263672
    8. '	sort' → logprob: -17.686992645263672
    9. '.sort' → logprob: -19.311992645263672
    10. 's' → logprob: -20.186992645263672

Token 276: '_array' (ID: 8766)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.23501601815223694
    2. '(B' → logprob: -1.7350159883499146
    3. '_array' → logprob: -3.485016107559204
    4. '_' → logprob: -6.860015869140625
    5. 'Array' → logprob: -6.985015869140625
    6. '_Array' → logprob: -8.985015869140625
    7. 'array' → logprob: -9.610015869140625
    8. '_(' → logprob: -9.610015869140625
    9. '_ARRAY' → logprob: -9.735015869140625
    10. '```' → logprob: -10.735015869140625

Token 277: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.000018119812012
    3. 'B' → logprob: -14.000018119812012
    4. '(A' → logprob: -16.625017166137695
    5. '(
' → logprob: -16.750017166137695
    6. ' (' → logprob: -17.125017166137695
    7. '<|end|>' → logprob: -17.750017166137695
    8. '```' → logprob: -18.875017166137695
    9. '(Q' → logprob: -19.375017166137695
    10. '	B' → logprob: -19.500017166137695

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005398084758780897
    2. ')
' → logprob: -7.625539779663086
    3. '())' → logprob: -10.750539779663086
    4. '   ' → logprob: -11.125539779663086
    5. '()' → logprob: -11.250539779663086
    6. ')

' → logprob: -13.875539779663086
    7. ' )' → logprob: -14.250539779663086
    8. '()
' → logprob: -15.250539779663086
    9. '())
' → logprob: -15.750539779663086
    10. ')
' → logprob: -16.125539779663086

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14583373069763184
    2. '
' → logprob: -2.020833730697632
    3. '    
' → logprob: -6.895833969116211
    4. 'b' → logprob: -7.020833969116211
    5. ' b' → logprob: -7.645833969116211
    6. ' ans' → logprob: -9.020833969116211
    7. 'def' → logprob: -9.020833969116211
    8. '  
' → logprob: -9.145833969116211
    9. '```' → logprob: -9.145833969116211
    10. 'ans' → logprob: -9.645833969116211

Token 280: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.010785577818751335
    2. ' b' → logprob: -4.6357855796813965
    3. '   ' → logprob: -6.8857855796813965
    4. '
' → logprob: -13.010785102844238
    5. '```' → logprob: -13.135785102844238
    6. ' ' → logprob: -13.385785102844238
    7. '	b' → logprob: -15.135785102844238
    8. 'def' → logprob: -15.885785102844238
    9. '  ' → logprob: -15.885785102844238
    10. '    
' → logprob: -16.010786056518555

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007110013975761831
    2. '=' → logprob: -7.250710964202881
    3. '<|end|>' → logprob: -14.750711441040039
    4. ' ' → logprob: -15.375711441040039
    5. ',' → logprob: -15.875711441040039
    6. ' =)' → logprob: -16.87571144104004
    7. ' =
' → logprob: -17.12571144104004
    8. 'b' → logprob: -17.25071144104004
    9. '<|end|>' → logprob: -17.37571144104004
    10. '  ' → logprob: -17.62571144104004

Token 282: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3878228962421417
    2. ' compute' → logprob: -1.1378228664398193
    3. 'B' → logprob: -7.387823104858398
    4. ' B' → logprob: -8.012823104858398
    5. ' ' → logprob: -14.637823104858398
    6. 'b' → logprob: -14.887823104858398
    7. '.compute' → logprob: -15.012823104858398
    8. '_compute' → logprob: -16.7628231048584
    9. ' b' → logprob: -16.8878231048584
    10. 'computer' → logprob: -17.0128231048584

Token 283: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.7159857786027715e-05
    2. '_' → logprob: -10.750046730041504
    3. '_B' → logprob: -11.000046730041504
    4. '_compute' → logprob: -12.375046730041504
    5. ' _' → logprob: -13.500046730041504
    6. '_a' → logprob: -14.875046730041504
    7. '```' → logprob: -14.875046730041504
    8. '_value' → logprob: -15.000046730041504
    9. '_total' → logprob: -15.125046730041504
    10. 'b' → logprob: -15.250046730041504

Token 284: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00029923528200015426
    2. '(' → logprob: -8.125299453735352
    3. ' (' → logprob: -13.750299453735352
    4. '(
' → logprob: -14.000299453735352
    5. '```' → logprob: -14.625299453735352
    6. '(A' → logprob: -14.875299453735352
    7. '<|end|>' → logprob: -15.125299453735352
    8. ')' → logprob: -16.75029945373535
    9. 'B' → logprob: -17.12529945373535
    10. '(b' → logprob: -17.12529945373535

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018065694894175977
    2. ',N' → logprob: -8.7501802444458
    3. ' ,' → logprob: -11.1251802444458
    4. ')' → logprob: -12.7501802444458
    5. ',
' → logprob: -13.3751802444458
    6. '<|end|>' → logprob: -13.6251802444458
    7. '‌,' → logprob: -14.7501802444458
    8. 'N' → logprob: -15.1251802444458
    9. '   ' → logprob: -15.5001802444458
    10. '<|end|>' → logprob: -15.8751802444458

Token 286: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.572941179503687e-05
    2. ' N' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.250045776367188
    4. ')' → logprob: -19.125045776367188
    5. '	N' → logprob: -19.500045776367188
    6. 'len' → logprob: -21.375045776367188
    7. ',N' → logprob: -21.750045776367188
    8. 'n' → logprob: -22.375045776367188
    9. ' ' → logprob: -22.375045776367188
    10. '>N' → logprob: -22.625045776367188

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019301822176203132
    2. ')
' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.876930236816406
    4. ')

' → logprob: -14.501930236816406
    5. ' )' → logprob: -16.876930236816406
    6. ')
' → logprob: -17.001930236816406
    7. '<|end|>' → logprob: -17.501930236816406
    8. '),' → logprob: -17.751930236816406
    9. ')#' → logprob: -17.876930236816406
    10. ')\
' → logprob: -18.501930236816406

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019947735592722893
    2. '
' → logprob: -4.269947528839111
    3. 'ans' → logprob: -5.519947528839111
    4. ' ans' → logprob: -7.269947528839111
    5. 'total' → logprob: -7.644947528839111
    6. '	ans' → logprob: -8.64494800567627
    7. '<|end|>' → logprob: -8.64494800567627
    8. '    
' → logprob: -9.89494800567627
    9. ' total' → logprob: -10.01994800567627
    10. '```' → logprob: -10.14494800567627

Token 289: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00017445837147533894
    2. '   ' → logprob: -9.375174522399902
    3. ' ans' → logprob: -9.375174522399902
    4. '	ans' → logprob: -13.125174522399902
    5. 'total' → logprob: -13.625174522399902
    6. '(ans' → logprob: -14.375174522399902
    7. '```' → logprob: -15.125174522399902
    8. 'answer' → logprob: -15.250174522399902
    9. 'anst' → logprob: -15.625174522399902
    10. '
' → logprob: -16.000173568725586

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. ' =
' → logprob: -17.03522491455078
    4. ' ' → logprob: -17.66022491455078
    5. ' =)' → logprob: -17.91022491455078
    6. ')' → logprob: -18.16022491455078
    7. '   ' → logprob: -18.53522491455078
    8. ' =
' → logprob: -18.53522491455078
    9. '  ' → logprob: -19.03522491455078
    10. '＝' → logprob: -19.28522491455078

Token 291: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0019286326132714748
    2. ' compute' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.001928329467773
    4. '.compute' → logprob: -19.001928329467773
    5. '_compute' → logprob: -19.626928329467773
    6. 'calculate' → logprob: -20.626928329467773
    7. '0' → logprob: -20.626928329467773
    8. '
' → logprob: -20.876928329467773
    9. 'computer' → logprob: -20.876928329467773
    10. 'comput' → logprob: -22.376928329467773

Token 292: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0002614550176076591
    2. 'total' → logprob: -8.250261306762695
    3. 'Total' → logprob: -16.125261306762695
    4. ' total' → logprob: -16.875261306762695
    5. 'compute' → logprob: -19.250261306762695
    6. '_compute' → logprob: -20.000261306762695
    7. '$total' → logprob: -20.125261306762695
    8. '_TOTAL' → logprob: -20.250261306762695
    9. 'otal' → logprob: -20.375261306762695
    10. '```' → logprob: -20.750261306762695

Token 293: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.128163257315464e-07
    2. 'cost' → logprob: -16.0
    3. '_co' → logprob: -17.625
    4. '_' → logprob: -18.0
    5. ' _' → logprob: -18.0
    6. '_COST' → logprob: -18.125
    7. '_cos' → logprob: -19.25
    8. '_total' → logprob: -19.5
    9. '_code' → logprob: -20.0
    10. '```' → logprob: -20.0

Token 294: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00012415809032972902
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -14.625123977661133
    4. ' (' → logprob: -15.750123977661133
    5. '```' → logprob: -16.750123977661133
    6. '   ' → logprob: -18.250123977661133
    7. '(

' → logprob: -18.500123977661133
    8. '((' → logprob: -18.500123977661133
    9. '\(' → logprob: -18.500123977661133
    10. '(AST' → logprob: -19.000123977661133

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011874916963279247
    2. ',b' → logprob: -6.751187324523926
    3. ' ,' → logprob: -11.751187324523926
    4. 'b' → logprob: -11.876187324523926
    5. ',
' → logprob: -13.126187324523926
    6. ')' → logprob: -15.376187324523926
    7. '   ' → logprob: -15.876187324523926
    8. ' b' → logprob: -17.001188278198242
    9. '‌,' → logprob: -17.376188278198242
    10. '```' → logprob: -17.626188278198242

Token 296: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '	b' → logprob: -20.500335693359375
    5. ' ' → logprob: -21.750335693359375
    6. ')b' → logprob: -22.000335693359375
    7. ')' → logprob: -23.375335693359375
    8. '
' → logprob: -23.500335693359375
    9. '```' → logprob: -23.750335693359375
    10. '    ' → logprob: -23.875335693359375

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.416665640543215e-05
    2. ' ,' → logprob: -10.87503433227539
    3. ',N' → logprob: -11.12503433227539
    4. '   ' → logprob: -15.37503433227539
    5. 'N' → logprob: -16.37503433227539
    6. ',
' → logprob: -16.75003433227539
    7. ')' → logprob: -16.75003433227539
    8. '```' → logprob: -17.75003433227539
    9. '‌,' → logprob: -17.87503433227539
    10. ',n' → logprob: -19.00003433227539

Token 298: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.15310683415737e-05
    2. ' N' → logprob: -10.750021934509277
    3. '   ' → logprob: -20.37502098083496
    4. ')' → logprob: -21.50002098083496
    5. '	N' → logprob: -22.87502098083496
    6. '
' → logprob: -23.75002098083496
    7. ' ' → logprob: -24.12502098083496
    8. '<|end|>' → logprob: -24.62502098083496
    9. ',N' → logprob: -24.75002098083496
    10. '```' → logprob: -25.25002098083496

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860088601708412
    2. ')
' → logprob: -3.048600912094116
    3. '   ' → logprob: -11.298601150512695
    4. ')
' → logprob: -14.298601150512695
    5. ')

' → logprob: -15.048601150512695
    6. ' )' → logprob: -16.673601150512695
    7. '),' → logprob: -17.548601150512695
    8. ')\
' → logprob: -17.548601150512695
    9. ')`' → logprob: -18.048601150512695
    10. ')return' → logprob: -18.173601150512695

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19504015147686005
    2. 'print' → logprob: -2.320040225982666
    3. '
' → logprob: -2.570040225982666
    4. ' print' → logprob: -6.320040225982666
    5. '    
' → logprob: -7.820040225982666
    6. '```' → logprob: -8.820039749145508
    7. '(print' → logprob: -10.945039749145508
    8. '	print' → logprob: -11.445039749145508
    9. '
' → logprob: -12.570039749145508
    10. '``' → logprob: -12.695039749145508

Token 301: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011832444579340518
    2. '   ' → logprob: -9.250118255615234
    3. ' print' → logprob: -10.750118255615234
    4. '
' → logprob: -14.375118255615234
    5. '```' → logprob: -16.375118255615234
    6. '	print' → logprob: -17.500118255615234
    7. '(print' → logprob: -18.375118255615234
    8. '    
' → logprob: -18.750118255615234
    9. ' ' → logprob: -19.125118255615234
    10. '.print' → logprob: -19.375118255615234

Token 302: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.29340603761375e-05
    2. '(' → logprob: -9.375092506408691
    3. '(_' → logprob: -12.750092506408691
    4. '_' → logprob: -13.250092506408691
    5. '_results' → logprob: -14.125092506408691
    6. '(result' → logprob: -14.125092506408691
    7. 'Result' → logprob: -15.000092506408691
    8. '_RESULT' → logprob: -15.000092506408691
    9. '(ans' → logprob: -15.000092506408691
    10. '_(' → logprob: -15.500092506408691

Token 303: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.250006675720215
    3. ' (' → logprob: -14.000006675720215
    4. '(answer' → logprob: -14.375006675720215
    5. '```' → logprob: -16.3750057220459
    6. '(an' → logprob: -16.8750057220459
    7. '(
' → logprob: -17.1250057220459
    8. 'ans' → logprob: -17.6250057220459
    9. '(arr' → logprob: -18.1250057220459
    10. '(abs' → logprob: -18.7500057220459

Token 304: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011903966515092179
    2. ')
' → logprob: -9.25011920928955
    3. '()' → logprob: -11.25011920928955
    4. '())' → logprob: -11.62511920928955
    5. ')`' → logprob: -15.37511920928955
    6. ' )' → logprob: -15.62511920928955
    7. '`)' → logprob: -16.375118255615234
    8. ')

' → logprob: -16.375118255615234
    9. '#' → logprob: -16.500118255615234
    10. '))' → logprob: -16.625118255615234

Token 305: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4346649944782257
    2. 'main' → logprob: -1.0596649646759033
    3. '(main' → logprob: -6.559665203094482
    4. '```' → logprob: -6.934665203094482
    5. ' main' → logprob: -7.184665203094482
    6. '
' → logprob: -7.309665203094482
    7. '\n' → logprob: -7.559665203094482
    8. '()' → logprob: -7.809665203094482
    9. '\' → logprob: -8.184664726257324
    10. '<|end|>' → logprob: -8.184664726257324

Token 306: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 304
Tokens correctement prédits (1ère position, stricte): 133
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 262
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 49.01%
Précision (top 10): 86.18%
================================================================================
