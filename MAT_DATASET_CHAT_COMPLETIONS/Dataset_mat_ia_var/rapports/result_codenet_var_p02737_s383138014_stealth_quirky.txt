================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict as dd
import sys

# Let's use a weirdly verbose read function for input
def read_stdin():
    return sys.stdin.readline().strip()

INP = read_stdin

MODULUS = 998244353
BIG_B = pow(10,18,MODULUS)
N = int(INP())

def make_geom_seq(init, ratio, mod, count):
    i = 0
    val = init
    while i < count:
        yield val
        val = (val * ratio) % mod
        i += 1

# aggressively upper-case variable, all-caps, as a personal choice
BBUFFET = [x for x in make_geom_seq(1,BIG_B,MODULUS,N+2)]

def ext_euclid(alpha, beta):
    # unnecessary tuple unpacking, odd b swap, and variable renaming
    P = (1,0,alpha)
    Q = (0,1,beta)
    while P[2] != 1:
        k, r = divmod(Q[2],P[2])
        P, Q = (Q[0]-k*P[0], Q[1]-k*P[1], r), P
    return (P[0], P[1])

invmod_curry = lambda a,b,m: (ext_euclid(a,m)[0]*b)%m

def find_mex(seen):
    """A strange way to write mex, looping from 0 and making a set comprehension for each call."""
    unused = set(range(N+1))
    try:
        return min(unused - seen)
    except ValueError:
        return N+1 # for safety

def grundize(edge):
    # intentionally keep unused legacy names and mutable dicts
    GGG = dict()
    sm = dd(int)
    sm[0] = invmod_curry(BIG_B-1, pow(BIG_B,N+1,MODULUS)-BIG_B, MODULUS)
    for idx in reversed(range(1,N+1)):
        if idx not in edge:
            continue
        vals = set(GGG.get(child, 0) for child in set(edge[idx]))
        X = find_mex(vals)
        if X:
            GGG[idx] = X
            sm[X] = (sm[X] + BBUFFET[idx]) % MODULUS
            sm[0]  = (sm[0] - BBUFFET[idx]) % MODULUS
    return sm

def inputifier():
    mcard = int(INP())
    rs = dd(list)
    for _ in range(mcard):
        a,b = sorted(map(int, INP().split()))
        rs[a].append(b)
    return rs

def crazy_crossing(nn, basket):
    grund_memo = list(map(grundize, basket))
    wow = 0
    for kx, vx in grund_memo[0].items():
        for ky, vy in grund_memo[1].items():
            idx = kx^ky
            vz = grund_memo[2][idx]
            if vz:
                wow = (wow + vx*vy*vz) % MODULUS
    return wow

BASKET = [inputifier() for _ in range(3)]
print(crazy_crossing(N, BASKET))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.6150609850883484
    2. 'deque' → logprob: -1.2400610446929932
    3. 'default' → logprob: -2.240061044692993
    4. ' defaultdict' → logprob: -3.490061044692993
    5. 'Counter' → logprob: -4.240060806274414
    6. ' abc' → logprob: -4.615060806274414
    7. 'named' → logprob: -5.490060806274414
    8. ' deque' → logprob: -6.240060806274414
    9. ' Counter' → logprob: -7.115060806274414
    10. '```' → logprob: -7.240060806274414

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001962297596037388
    2. '(
' → logprob: -6.626962184906006
    3. '\(' → logprob: -8.251962661743164
    4. '\' → logprob: -9.126962661743164
    5. '\n' → logprob: -9.626962661743164
    6. 'newline' → logprob: -10.126962661743164
    7. '(

' → logprob: -10.376962661743164
    8. '```' → logprob: -10.376962661743164
    9. '()' → logprob: -11.251962661743164
    10. '.' → logprob: -11.376962661743164

Token 5: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.17250381410121918
    2. ' dd' → logprob: -2.047503709793091
    3. '_dd' → logprob: -3.547503709793091
    4. 'DD' → logprob: -8.422503471374512
    5. 'default' → logprob: -9.547503471374512
    6. 'ddd' → logprob: -9.672503471374512
    7. '-dd' → logprob: -9.797503471374512
    8. ' defaultdict' → logprob: -9.922503471374512
    9. 'dict' → logprob: -10.547503471374512
    10. 'ddb' → logprob: -10.672503471374512

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09033294022083282
    2. '.' → logprob: -2.8403329849243164
    3. ',' → logprob: -4.965332984924316
    4. ' (' → logprob: -5.090332984924316
    5. '\' → logprob: -5.215332984924316
    6. '\(' → logprob: -5.715332984924316
    7. '(
' → logprob: -6.340332984924316
    8. 'newline' → logprob: -7.090332984924316
    9. '\n' → logprob: -7.590332984924316
    10. '[' → logprob: -7.590332984924316

Token 7: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01823224127292633
    2. '(
' → logprob: -4.268232345581055
    3. ',' → logprob: -7.143232345581055
    4. '\n' → logprob: -7.518232345581055
    5. '(

' → logprob: -7.643232345581055
    6. '.' → logprob: -7.768232345581055
    7. '\' → logprob: -8.018232345581055
    8. '()' → logprob: -8.268232345581055
    9. 'newline' → logprob: -8.268232345581055
    10. '
' → logprob: -8.393232345581055

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.138601616024971
    2. ' sys' → logprob: -2.763601541519165
    3. ' re' → logprob: -3.513601541519165
    4. ' numpy' → logprob: -4.263601779937744
    5. ' pandas' → logprob: -4.638601779937744
    6. ' json' → logprob: -5.388601779937744
    7. ' collections' → logprob: -5.638601779937744
    8. ' ' → logprob: -6.388601779937744
    9. ' itertools' → logprob: -6.388601779937744
    10. ' random' → logprob: -7.388601779937744

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1040073111653328
    2. '\n' → logprob: -3.1040072441101074
    3. '\' → logprob: -4.104007244110107
    4. ',' → logprob: -4.229007244110107
    5. '
' → logprob: -4.854007244110107
    6. 'newline' → logprob: -5.354007244110107
    7. 'import' → logprob: -6.729007244110107
    8. '.readline' → logprob: -7.104007244110107
    9. '```' → logprob: -7.104007244110107
    10. '[' → logprob: -7.229007244110107

Token 10: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20365209877490997
    2. '_' → logprob: -2.8286521434783936
    3. 'sys' → logprob: -3.0786521434783936
    4. 'for' → logprob: -3.9536521434783936
    5. '=' → logprob: -4.0786519050598145
    6. 'data' → logprob: -4.5786519050598145
    7. 'input' → logprob: -5.5786519050598145
    8. '[' → logprob: -5.5786519050598145
    9. 'newline' → logprob: -5.5786519050598145
    10. '```' → logprob: -6.0786519050598145

Token 11: ' Let's' (ID: 41021)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5269787907600403
    2. 'def' → logprob: -1.4019787311553955
    3. 'data' → logprob: -2.5269787311553955
    4. 'stdin' → logprob: -3.6519787311553955
    5. ' ' → logprob: -4.401978969573975
    6. 'argv' → logprob: -4.651978969573975
    7. ' input' → logprob: -4.776978969573975
    8. 'read' → logprob: -5.651978969573975
    9. 'd' → logprob: -5.776978969573975
    10. '#' → logprob: -6.026978969573975

Token 12: ' use' (ID: 1199)
  Prédit: ' define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' define' → logprob: -0.936496913433075
    2. '_' → logprob: -1.5614969730377197
    3. 'def' → logprob: -1.5614969730377197
    4. ' def' → logprob: -3.3114969730377197
    5. ' write' → logprob: -3.4364969730377197
    6. ' use' → logprob: -3.4364969730377197
    7. ' input' → logprob: -4.186496734619141
    8. ' make' → logprob: -4.436496734619141
    9. 'define' → logprob: -4.561496734619141
    10. ' ' → logprob: -4.811496734619141

Token 13: ' a' (ID: 261)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5364879965782166
    2. 'dd' → logprob: -1.0364880561828613
    3. ' input' → logprob: -4.411488056182861
    4. 'd' → logprob: -4.411488056182861
    5. 'default' → logprob: -4.661488056182861
    6. ' dd' → logprob: -5.161488056182861
    7. 'data' → logprob: -5.161488056182861
    8. ' defaultdict' → logprob: -6.286488056182861
    9. 'sys' → logprob: -6.411488056182861
    10. 'def' → logprob: -6.536488056182861

Token 14: ' weird' (ID: 28783)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.7141498923301697
    2. ' defaultdict' → logprob: -1.4641499519348145
    3. ' def' → logprob: -2.7141499519348145
    4. 'def' → logprob: -2.8391499519348145
    5. 'd' → logprob: -3.0891499519348145
    6. ' default' → logprob: -3.4641499519348145
    7. ' d' → logprob: -4.2141499519348145
    8. ' counter' → logprob: -4.3391499519348145
    9. 'dd' → logprob: -4.8391499519348145
    10. 'n' → logprob: -5.2141499519348145

Token 15: 'ly' (ID: 423)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_name' → logprob: -1.3409037590026855
    2. '_' → logprob: -2.0909037590026855
    3. 'variable' → logprob: -2.5909037590026855
    4. ' variable' → logprob: -2.7159037590026855
    5. '_variable' → logprob: -2.8409037590026855
    6. 'dict' → logprob: -3.2159037590026855
    7. 'name' → logprob: -3.4659037590026855
    8. 'n' → logprob: -3.8409037590026855
    9. '_var' → logprob: -4.0909037590026855
    10. '_token' → logprob: -4.2159037590026855

Token 16: ' verbose' (ID: 32134)
  Prédit: 'named'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'named' → logprob: -0.01756538823246956
    2. ' named' → logprob: -4.7675652503967285
    3. '_named' → logprob: -5.7675652503967285
    4. 'ind' → logprob: -6.1425652503967285
    5. 'formatted' → logprob: -6.7675652503967285
    6. 'n' → logprob: -7.6425652503967285
    7. '_' → logprob: -8.142565727233887
    8. 'indent' → logprob: -8.142565727233887
    9. 'defined' → logprob: -8.517565727233887
    10. 'name' → logprob: -8.767565727233887

Token 17: ' read' (ID: 1729)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variable' → logprob: -1.1464110612869263
    2. ' approach' → logprob: -1.2714110612869263
    3. ' name' → logprob: -3.2714109420776367
    4. 'name' → logprob: -3.3964109420776367
    5. '_name' → logprob: -3.5214109420776367
    6. ' way' → logprob: -3.7714109420776367
    7. 'variable' → logprob: -3.7714109420776367
    8. ' token' → logprob: -3.8964109420776367
    9. 'token' → logprob: -4.021410942077637
    10. ' method' → logprob: -4.146410942077637

Token 18: ' function' (ID: 1114)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2008400857448578
    2. '_line' → logprob: -2.2008399963378906
    3. 'r' → logprob: -3.2008399963378906
    4. '()' → logprob: -3.8258399963378906
    5. 'er' → logprob: -6.450839996337891
    6. 'ing' → logprob: -6.825839996337891
    7. '(' → logprob: -6.950839996337891
    8. ' =' → logprob: -7.075839996337891
    9. '_input' → logprob: -7.575839996337891
    10. '_' → logprob: -7.825839996337891

Token 19: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10842635482549667
    2. '_' → logprob: -3.233426332473755
    3. ' def' → logprob: -3.608426332473755
    4. '(' → logprob: -4.358426570892334
    5. '\' → logprob: -4.858426570892334
    6. 'd' → logprob: -5.483426570892334
    7. '
' → logprob: -5.733426570892334
    8. ':' → logprob: -6.608426570892334
    9. '```' → logprob: -6.858426570892334
    10. 'de' → logprob: -7.108426570892334

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7638457417488098
    2. ' input' → logprob: -1.138845682144165
    3. ' line' → logprob: -2.388845682144165
    4. 'line' → logprob: -3.388845682144165
    5. ' data' → logprob: -4.263845920562744
    6. '_' → logprob: -4.388845920562744
    7. 'data' → logprob: -4.513845920562744
    8. 'stdin' → logprob: -4.638845920562744
    9. ' stdin' → logprob: -4.638845920562744
    10. ' sys' → logprob: -5.013845920562744

Token 21: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20575322210788727
    2. '_' → logprob: -2.0807533264160156
    3. ' def' → logprob: -3.9557533264160156
    4. '\' → logprob: -4.080753326416016
    5. '(' → logprob: -4.705753326416016
    6. ':' → logprob: -5.955753326416016
    7. 'd' → logprob: -6.080753326416016
    8. 's' → logprob: -6.330753326416016
    9. '```' → logprob: -6.455753326416016
    10. '
' → logprob: -6.580753326416016

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13882368803024292
    2. ' def' → logprob: -2.7638237476348877
    3. '_' → logprob: -3.3888237476348877
    4. '\' → logprob: -4.388823509216309
    5. 'd' → logprob: -4.888823509216309
    6. 'de' → logprob: -5.888823509216309
    7. '
' → logprob: -6.513823509216309
    8. '(' → logprob: -6.513823509216309
    9. 's' → logprob: -6.888823509216309
    10. '_de' → logprob: -7.013823509216309

Token 23: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.07267645001411438
    2. ' ' → logprob: -3.322676420211792
    3. ' readline' → logprob: -3.822676420211792
    4. ' input' → logprob: -4.697676658630371
    5. '_' → logprob: -6.697676658630371
    6. '  ' → logprob: -8.072676658630371
    7. ' main' → logprob: -8.072676658630371
    8. '_read' → logprob: -8.322676658630371
    9. ' weird' → logprob: -8.697676658630371
    10. ' reads' → logprob: -8.947676658630371

Token 24: '_st' (ID: 2518)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.027485713362693787
    2. '(' → logprob: -4.0274858474731445
    3. '_' → logprob: -5.2774858474731445
    4. '_input' → logprob: -6.4024858474731445
    5. '()' → logprob: -7.0274858474731445
    6. '_line' → logprob: -7.4024858474731445
    7. ' ():' → logprob: -7.4024858474731445
    8. ':' → logprob: -9.027485847473145
    9. '_token' → logprob: -9.277485847473145
    10. ' ()' → logprob: -10.402485847473145

Token 25: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.7474626898765564
    2. 'r' → logprob: -1.1224627494812012
    3. 'ring' → logprob: -1.9974627494812012
    4. 'ream' → logprob: -3.372462749481201
    5. 'd' → logprob: -3.997462749481201
    6. 'rings' → logprob: -4.622462749481201
    7. 'rin' → logprob: -6.372462749481201
    8. 'rim' → logprob: -9.122462272644043
    9. 'derr' → logprob: -9.497462272644043
    10. 'rip' → logprob: -9.997462272644043

Token 26: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0010334034450352192
    2. ' ():' → logprob: -7.376033306121826
    3. '()' → logprob: -8.001033782958984
    4. '(' → logprob: -10.001033782958984
    5. ' ()' → logprob: -11.751033782958984
    6. '():
' → logprob: -12.251033782958984
    7. '_input' → logprob: -12.376033782958984
    8. '_line' → logprob: -12.876033782958984
    9. '_' → logprob: -12.876033782958984
    10. ':' → logprob: -13.876033782958984

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011589791625738144
    2. 'data' → logprob: -5.386590003967285
    3. ' data' → logprob: -5.886590003967285
    4. ' return' → logprob: -6.386590003967285
    5. ' ' → logprob: -7.511590003967285
    6. ' line' → logprob: -7.636590003967285
    7. 'return' → logprob: -8.261590003967285
    8. ' for' → logprob: -8.261590003967285
    9. ' input' → logprob: -8.511590003967285
    10. ' lines' → logprob: -8.761590003967285

Token 28: ' return' (ID: 622)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8673952221870422
    2. ' sys' → logprob: -1.3673951625823975
    3. 'return' (adapté à ' return') → logprob: -2.2423951625823975
    4. 'data' → logprob: -2.2423951625823975
    5. ' return' → logprob: -3.6173951625823975
    6. 'for' → logprob: -4.117395401000977
    7. ' data' → logprob: -4.117395401000977
    8. 'line' → logprob: -4.242395401000977
    9. '   ' → logprob: -4.492395401000977
    10. ' line' → logprob: -4.617395401000977

Token 29: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.026321198791265488
    2. 'sys' → logprob: -3.6513211727142334
    3. ' ' → logprob: -12.151321411132812
    4. '(sys' → logprob: -12.276321411132812
    5. '	sys' → logprob: -12.401321411132812
    6. '=sys' → logprob: -13.026321411132812
    7. ' list' → logprob: -13.151321411132812
    8. 'list' → logprob: -14.401321411132812
    9. ' input' → logprob: -14.526321411132812
    10. 'input' → logprob: -14.526321411132812

Token 30: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00019769940990954638
    2. '.stdout' → logprob: -8.875197410583496
    3. '.' → logprob: -10.000197410583496
    4. '.std' → logprob: -11.750197410583496
    5. '.argv' → logprob: -12.625197410583496
    6. 'stdin' → logprob: -15.000197410583496
    7. '.st' → logprob: -15.250197410583496
    8. '.stderr' → logprob: -15.625197410583496
    9. ' .' → logprob: -15.750197410583496
    10. '._' → logprob: -16.000198364257812

Token 31: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08042136579751968
    2. '.read' → logprob: -2.5804214477539062
    3. '.readlines' → logprob: -6.830421447753906
    4. '.' → logprob: -7.830421447753906
    5. 'read' → logprob: -9.955421447753906
    6. '.buffer' → logprob: -13.080421447753906
    7. '_read' → logprob: -14.080421447753906
    8. ' readline' → logprob: -14.080421447753906
    9. '.Read' → logprob: -14.205421447753906
    10. '.write' → logprob: -15.080421447753906

Token 32: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014299373142421246
    2. '().' → logprob: -4.264299392700195
    3. ' ()' → logprob: -9.889299392700195
    4. '()
' → logprob: -10.014299392700195
    5. '()

' → logprob: -10.889299392700195
    6. '(' → logprob: -12.139299392700195
    7. '()(' → logprob: -12.514299392700195
    8. ' ' → logprob: -13.139299392700195
    9. '()\' → logprob: -13.264299392700195
    10. '（）' → logprob: -13.639299392700195

Token 33: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.003177952254191041
    2. 'rstrip' → logprob: -5.753178119659424
    3. ' strip' → logprob: -15.628177642822266
    4. '_strip' → logprob: -16.878177642822266
    5. 'str' → logprob: -17.003177642822266
    6. 'rst' → logprob: -19.003177642822266
    7. 'r' → logprob: -19.628177642822266
    8. '-strip' → logprob: -20.003177642822266
    9. 'stripe' → logprob: -20.378177642822266
    10. '(strip' → logprob: -20.878177642822266

Token 34: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0184326134622097
    2. '(' → logprob: -4.0184326171875
    3. '()
' → logprob: -9.0184326171875
    4. '()

' → logprob: -10.0184326171875
    5. ' ()' → logprob: -10.2684326171875
    6. '(
' → logprob: -10.2684326171875
    7. '()\' → logprob: -11.5184326171875
    8. '(

' → logprob: -12.0184326171875
    9. '()`' → logprob: -12.2684326171875
    10. '().' → logprob: -12.7684326171875

Token 35: 'IN' (ID: 965)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6482949256896973
    2. 'd' → logprob: -1.8982949256896973
    3. 'n' → logprob: -2.1482949256896973
    4. '
' → logprob: -2.6482949256896973
    5. '#' → logprob: -3.5232949256896973
    6. '\n' → logprob: -3.5232949256896973
    7. 'data' → logprob: -3.7732949256896973
    8. '\' → logprob: -4.023294925689697
    9. 'a' → logprob: -4.273294925689697
    10. 'x' → logprob: -4.898294925689697

Token 36: 'P' (ID: 47)
  Prédit: 'PUT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PUT' → logprob: -0.012246152386069298
    2. 'P' → logprob: -4.512246131896973
    3. 'put' → logprob: -7.137246131896973
    4. '.put' → logprob: -9.387246131896973
    5. 'Put' → logprob: -9.887246131896973
    6. '_put' → logprob: -10.512246131896973
    7. 'PT' → logprob: -10.512246131896973
    8. '.PUT' → logprob: -10.512246131896973
    9. 'PU' → logprob: -10.637246131896973
    10. '```' → logprob: -10.637246131896973

Token 37: ' =' (ID: 314)
  Prédit: 'UT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'UT' → logprob: -6.749814019713085e-06
    2. 'Ut' → logprob: -12.875006675720215
    3. 'U' → logprob: -13.000006675720215
    4. ' UT' → logprob: -13.625006675720215
    5. '_ut' → logprob: -16.00000762939453
    6. '_' → logprob: -16.25000762939453
    7. 'UTF' → logprob: -16.50000762939453
    8. '\' → logprob: -16.75000762939453
    9. '```' → logprob: -16.75000762939453
    10. '[]' → logprob: -16.87500762939453

Token 38: ' read' (ID: 1729)
  Prédit: ' dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dd' → logprob: -0.7918181419372559
    2. 'read' → logprob: -1.4168181419372559
    3. ' read' → logprob: -1.6668181419372559
    4. 'dd' → logprob: -2.666818141937256
    5. '(dd' → logprob: -4.416818141937256
    6. ' ' → logprob: -4.791818141937256
    7. ' input' → logprob: -5.041818141937256
    8. 'input' → logprob: -5.041818141937256
    9. '()' → logprob: -5.416818141937256
    10. ' []' → logprob: -6.041818141937256

Token 39: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0002075933152809739
    2. '_' → logprob: -8.625207901000977
    3. '_stdout' → logprob: -11.625207901000977
    4. 'stdin' → logprob: -11.875207901000977
    5. '_ST' → logprob: -12.375207901000977
    6. '_s' → logprob: -13.125207901000977
    7. '_std' → logprob: -13.125207901000977
    8. '_in' → logprob: -13.875207901000977
    9. '_stdio' → logprob: -14.375207901000977
    10. '_str' → logprob: -14.750207901000977

Token 40: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.02060880698263645
    2. 'd' → logprob: -3.895608901977539
    3. 'dn' → logprob: -10.645608901977539
    4. 'in' → logprob: -11.395608901977539
    5. 'td' → logprob: -11.895608901977539
    6. 'dp' → logprob: -11.895608901977539
    7. 'dt' → logprob: -12.770608901977539
    8. 'dx' → logprob: -13.020608901977539
    9. 'dtype' → logprob: -13.145608901977539
    10. 'df' → logprob: -13.645608901977539

Token 41: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.875027656555176
    3. '()
' → logprob: -12.500027656555176
    4. '()`' → logprob: -13.625027656555176
    5. ' ()' → logprob: -13.750027656555176
    6. '()

' → logprob: -13.875027656555176
    7. '())' → logprob: -14.750027656555176
    8. '().' → logprob: -15.000027656555176
    9. '();' → logprob: -15.250027656555176
    10. '()]' → logprob: -15.500027656555176

Token 42: 'MOD' (ID: 52135)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11842123419046402
    2. '(' → logprob: -2.7434213161468506
    3. 'def' → logprob: -4.3684210777282715
    4. '()
' → logprob: -4.4934210777282715
    5. 'n' → logprob: -5.1184210777282715
    6. '()

' → logprob: -5.2434210777282715
    7. '(
' → logprob: -5.3684210777282715
    8. '#' → logprob: -5.6184210777282715
    9. 's' → logprob: -7.6184210777282715
    10. 'data' → logprob: -7.7434210777282715

Token 43: 'UL' (ID: 1949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34924644231796265
    2. '=' → logprob: -1.2242465019226074
    3. '_' → logprob: -7.974246501922607
    4. ' ' → logprob: -7.974246501922607
    5. ')' → logprob: -9.97424602508545
    6. ' =)' → logprob: -10.72424602508545
    7. '.' → logprob: -11.22424602508545
    8. ',' → logprob: -12.09924602508545
    9. '  ' → logprob: -12.47424602508545
    10. ' =
' → logprob: -12.59924602508545

Token 44: 'US' (ID: 3042)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.018969060853123665
    2. 'US' → logprob: -4.2689690589904785
    3. 'AR' → logprob: -6.2689690589904785
    4. 'OS' → logprob: -6.5189690589904785
    5. 'E' → logprob: -6.6439690589904785
    6. ' =' → logprob: -10.018969535827637
    7. '=' → logprob: -10.268969535827637
    8. '0' → logprob: -11.393969535827637
    9. 'ES' → logprob: -11.643969535827637
    10. 'I' → logprob: -12.893969535827637

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03498729318380356
    2. '=' → logprob: -3.409987211227417
    3. '_' → logprob: -6.784987449645996
    4. ' ' → logprob: -8.534987449645996
    5. ',' → logprob: -12.659987449645996
    6. '_SPACE' → logprob: -12.784987449645996
    7. '  ' → logprob: -13.284987449645996
    8. ' _' → logprob: -13.534987449645996
    9. ')' → logprob: -14.284987449645996
    10. '.' → logprob: -14.534987449645996

Token 46: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1287504881620407
    2. '100' → logprob: -2.1287505626678467
    3. ' ' → logprob: -6.378750324249268
    4. '1' → logprob: -9.503750801086426
    5. '998' → logprob: -10.128750801086426
    6. '(' → logprob: -12.128750801086426
    7. 'int' → logprob: -13.753750801086426
    8. '123' → logprob: -14.378750801086426
    9. ' (' → logprob: -14.503750801086426
    10. '2' → logprob: -14.628750801086426

Token 47: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10050319135189056
    2. '100' → logprob: -2.3505032062530518
    3. '1' → logprob: -8.850502967834473
    4. '998' → logprob: -8.975502967834473
    5. '(' → logprob: -10.975502967834473
    6. 'int' → logprob: -12.100502967834473
    7. '123' → logprob: -13.475502967834473
    8. '2' → logprob: -13.975502967834473
    9. ' ' → logprob: -14.475502967834473
    10. '999' → logprob: -15.100502967834473

Token 48: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.2127087504486553e-05
    2. '247' → logprob: -11.375021934509277
    3. '243' → logprob: -11.750021934509277
    4. '```' → logprob: -14.375021934509277
    5. '457' → logprob: -15.000021934509277
    6. '245' → logprob: -15.375021934509277
    7. '7' → logprob: -15.500021934509277
    8. '_' → logprob: -15.500021934509277
    9. '344' → logprob: -15.875021934509277
    10. '239' → logprob: -16.125022888183594

Token 49: '353' (ID: 32996)
  Prédit: '257'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '257' → logprob: -0.03820684924721718
    2. '357' → logprob: -4.288207054138184
    3. '353' → logprob: -4.913207054138184
    4. '853' → logprob: -5.163207054138184
    5. '857' → logprob: -5.538207054138184
    6. '7' → logprob: -5.663207054138184
    7. '457' → logprob: -6.663207054138184
    8. '253' → logprob: -6.913207054138184
    9. '957' → logprob: -8.038207054138184
    10. '953' → logprob: -9.038207054138184

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3869493305683136
    2. '

' → logprob: -1.3869493007659912
    3. '\n' → logprob: -3.261949300765991
    4. 'def' → logprob: -4.01194953918457
    5. 'newline' → logprob: -5.76194953918457
    6. '\' → logprob: -5.88694953918457
    7. '
' → logprob: -6.38694953918457
    8. ' 

' → logprob: -6.51194953918457
    9. '' → logprob: -6.63694953918457
    10. '<|end|>' → logprob: -6.63694953918457

Token 51: 'BIG' (ID: 118898)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5540603995323181
    2. 'def' → logprob: -1.179060459136963
    3. '

' → logprob: -2.804060459136963
    4. '#' → logprob: -3.554060459136963
    5. '\n' → logprob: -4.804060459136963
    6. '\' → logprob: -5.554060459136963
    7. '' → logprob: -5.679060459136963
    8. ' 

' → logprob: -6.054060459136963
    9. ' 
' → logprob: -6.054060459136963
    10. 'n' → logprob: -6.429060459136963

Token 52: '_B' (ID: 3201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5072271823883057
    2. ' =' → logprob: -1.5072271823883057
    3. '_INT' → logprob: -2.8822271823883057
    4. 'INT' → logprob: -3.0072271823883057
    5. ' ' → logprob: -4.007226943969727
    6. '_NUMBER' → logprob: -4.507226943969727
    7. '_' → logprob: -4.632226943969727
    8. '_NUM' → logprob: -4.757226943969727
    9. '_MOD' → logprob: -5.132226943969727
    10. '=int' → logprob: -5.382226943969727

Token 53: ' =' (ID: 314)
  Prédit: 'ASE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ASE' → logprob: -0.14117790758609772
    2. 'I' → logprob: -3.6411778926849365
    3. 'O' → logprob: -3.6411778926849365
    4. 'L' → logprob: -3.7661778926849365
    5. 'IT' → logprob: -4.516178131103516
    6. 'LOCK' → logprob: -4.641178131103516
    7. 'U' → logprob: -4.641178131103516
    8. 'IG' → logprob: -5.891178131103516
    9. 'ase' → logprob: -5.891178131103516
    10. '=' → logprob: -6.016178131103516

Token 54: ' pow' (ID: 9779)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.636588990688324
    2. '10' → logprob: -1.0115890502929688
    3. '100' → logprob: -2.2615890502929688
    4. '1' → logprob: -7.136589050292969
    5. 'int' → logprob: -7.386589050292969
    6. '998' → logprob: -7.761589050292969
    7. '999' → logprob: -8.511589050292969
    8. '2' → logprob: -8.761589050292969
    9. 'pow' → logprob: -8.761589050292969
    10. ' int' → logprob: -8.761589050292969

Token 55: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003020961594302207
    2. '(B' → logprob: -8.3753023147583
    3. '2' → logprob: -10.0003023147583
    4. '(M' → logprob: -11.5003023147583
    5. '(
' → logprob: -12.3753023147583
    6. '10' → logprob: -13.0003023147583
    7. '(BASE' → logprob: -13.7503023147583
    8. '(Big' → logprob: -14.0003023147583
    9. '(IN' → logprob: -14.3753023147583
    10. ' ' → logprob: -14.5003023147583

Token 56: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16638891398906708
    2. '10' → logprob: -1.9163888692855835
    3. '3' → logprob: -6.791388988494873
    4. '998' → logprob: -7.291388988494873
    5. '7' → logprob: -7.416388988494873
    6. '26' → logprob: -7.541388988494873
    7. '27' → logprob: -7.666388988494873
    8. '100' → logprob: -7.666388988494873
    9. '5' → logprob: -7.791388988494873
    10. ')' → logprob: -8.166388511657715

Token 57: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.008631941862404346
    2. '7' → logprob: -5.383631706237793
    3. '18' → logprob: -6.133631706237793
    4. '8' → logprob: -6.633631706237793
    5. '6' → logprob: -7.883631706237793
    6. '10' → logprob: -10.008631706237793
    7. '12' → logprob: -10.383631706237793
    8. ' ' → logprob: -10.383631706237793
    9. '15' → logprob: -11.633631706237793
    10. '16' → logprob: -12.258631706237793

Token 58: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.057547569274902344
    2. '7' → logprob: -3.5575475692749023
    3. '18' → logprob: -4.307547569274902
    4. '6' → logprob: -4.557547569274902
    5. '12' → logprob: -6.807547569274902
    6. '8' → logprob: -6.932547569274902
    7. '10' → logprob: -7.807547569274902
    8. '5' → logprob: -8.182547569274902
    9. '15' → logprob: -8.182547569274902
    10. ' ' → logprob: -8.682547569274902

Token 59: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013665871694684029
    2. ',' → logprob: -4.388665676116943
    3. ' )' → logprob: -7.013665676116943
    4. ' ,' → logprob: -9.763666152954102
    5. '),' → logprob: -10.013666152954102
    6. '+' → logprob: -10.263666152954102
    7. ',)' → logprob: -10.388666152954102
    8. '6' → logprob: -10.763666152954102
    9. '9' → logprob: -11.138666152954102
    10. '7' → logprob: -11.263666152954102

Token 60: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.009714193642139435
    2. ' MOD' → logprob: -5.009714126586914
    3. ')' → logprob: -5.884714126586914
    4. '998' → logprob: -9.259714126586914
    5. '_MOD' → logprob: -10.259714126586914
    6. ' )' → logprob: -10.509714126586914
    7. '999' → logprob: -10.759714126586914
    8. '.MOD' → logprob: -11.384714126586914
    9. ' ' → logprob: -11.509714126586914
    10. ',' → logprob: -13.884714126586914

Token 61: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -4.1318875446449965e-05
    2. 'L' → logprob: -11.125041007995605
    3. 'US' → logprob: -11.375041007995605
    4. ')' → logprob: -12.500041007995605
    5. '```' → logprob: -12.625041007995605
    6. 'OL' → logprob: -13.250041007995605
    7. ' UL' → logprob: -14.250041007995605
    8. 'ULO' → logprob: -14.375041007995605
    9. '_UL' → logprob: -14.500041007995605
    10. '   ' → logprob: -14.500041007995605

Token 62: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003611708991229534
    2. 'US' → logprob: -5.6286115646362305
    3. ')' → logprob: -12.87861156463623
    4. ' S' → logprob: -13.00361156463623
    5. '   ' → logprob: -13.62861156463623
    6. '_S' → logprob: -13.87861156463623
    7. '8' → logprob: -14.87861156463623
    8. '5' → logprob: -15.12861156463623
    9. '53' → logprob: -15.12861156463623
    10. '```' → logprob: -15.12861156463623

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '))' → logprob: -13.50000286102295
    3. ' )' → logprob: -14.62500286102295
    4. '),' → logprob: -15.00000286102295
    5. ')}' → logprob: -16.000003814697266
    6. '}' → logprob: -16.500003814697266
    7. '+' → logprob: -16.500003814697266
    8. '')' → logprob: -16.750003814697266
    9. '**' → logprob: -16.875003814697266
    10. ')`' → logprob: -16.875003814697266

Token 64: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9790961742401123
    2. 'def' → logprob: -1.4790961742401123
    3. '

' → logprob: -1.4790961742401123
    4. '#' → logprob: -2.4790961742401123
    5. '\n' → logprob: -3.2290961742401123
    6. '\' → logprob: -4.229096412658691
    7. ')' → logprob: -4.979096412658691
    8. '' → logprob: -5.229096412658691
    9. '
' → logprob: -5.854096412658691
    10. 'newline' → logprob: -5.979096412658691

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1434268057346344
    2. '=' → logprob: -2.0184268951416016
    3. ',' → logprob: -7.268426895141602
    4. '=int' → logprob: -10.643426895141602
    5. ' ' → logprob: -11.268426895141602
    6. '_' → logprob: -12.018426895141602
    7. ' ,' → logprob: -12.268426895141602
    8. '  ' → logprob: -13.143426895141602
    9. '.' → logprob: -14.143426895141602
    10. ' =
' → logprob: -14.268426895141602

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04750869423151016
    2. 'int' → logprob: -3.422508716583252
    3. ' ' → logprob: -4.297508716583252
    4. '0' → logprob: -9.422508239746094
    5. '  ' → logprob: -10.172508239746094
    6. ' None' → logprob: -11.297508239746094
    7. ' IN' → logprob: -11.922508239746094
    8. ' read' → logprob: -12.297508239746094
    9. '10' → logprob: -12.797508239746094
    10. '=int' → logprob: -12.922508239746094

Token 67: '(IN' (ID: 46131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2018934190273285
    2. '(IN' → logprob: -1.7018934488296509
    3. '('' → logprob: -8.32689380645752
    4. '(read' → logprob: -8.57689380645752
    5. '(in' → logprob: -11.95189380645752
    6. '(IO' → logprob: -11.95189380645752
    7. '(`' → logprob: -12.45189380645752
    8. ' (' → logprob: -12.57689380645752
    9. '(I' → logprob: -12.57689380645752
    10. '(In' → logprob: -12.82689380645752

Token 68: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.7835754988482222e-05
    2. '(P' → logprob: -11.375018119812012
    3. '(' → logprob: -13.000018119812012
    4. 'put' → logprob: -13.250018119812012
    5. 'PUT' → logprob: -14.500018119812012
    6. '()' → logprob: -14.750018119812012
    7. 'p' → logprob: -15.000018119812012
    8. ')' → logprob: -15.125018119812012
    9. '())' → logprob: -15.500018119812012
    10. '(INPUT' → logprob: -15.625018119812012

Token 69: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014313703402876854
    2. '()' → logprob: -4.264313697814941
    3. ')' → logprob: -9.014313697814941
    4. ' ())' → logprob: -10.889313697814941
    5. '())
' → logprob: -13.014313697814941
    6. '().' → logprob: -13.264313697814941
    7. '();)' → logprob: -13.264313697814941
    8. '(' → logprob: -13.389313697814941
    9. '()
' → logprob: -14.014313697814941
    10. '()))' → logprob: -14.389313697814941

Token 70: 'def' (ID: 1314)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6360247135162354
    2. 'A' → logprob: -1.7610247135162354
    3. 'a' → logprob: -1.7610247135162354
    4. 'data' → logprob: -2.7610247135162354
    5. 'lst' → logprob: -3.5110247135162354
    6. 'dp' → logprob: -4.511024475097656
    7. ')' → logprob: -4.886024475097656
    8. 'd' → logprob: -5.511024475097656
    9. 'numbers' → logprob: -7.011024475097656
    10. 's' → logprob: -7.011024475097656

Token 71: ' make' (ID: 1520)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.2385543584823608
    2. ' main' → logprob: -1.4885543584823608
    3. ' solve' → logprob: -2.1135544776916504
    4. ' ' → logprob: -2.3635544776916504
    5. ' calculate' → logprob: -2.7385544776916504
    6. ' count' → logprob: -3.6135544776916504
    7. ' compute' → logprob: -3.6135544776916504
    8. ' dp' → logprob: -3.7385544776916504
    9. ' factor' → logprob: -3.8635544776916504
    10. ' pow' → logprob: -3.8635544776916504

Token 72: '_geom' (ID: 180091)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -1.9663479328155518
    2. '_list' → logprob: -2.0913479328155518
    3. '_counter' → logprob: -2.0913479328155518
    4. '_array' → logprob: -2.2163479328155518
    5. '_arr' → logprob: -2.4663479328155518
    6. '_map' → logprob: -2.5913479328155518
    7. '_dp' → logprob: -2.9663479328155518
    8. '_b' → logprob: -3.3413479328155518
    9. '_dict' → logprob: -3.5913479328155518
    10. '_mod' → logprob: -3.9663479328155518

Token 73: '_seq' (ID: 34260)
  Prédit: 'etric'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etric' → logprob: -0.008444956503808498
    2. '_series' → logprob: -5.508444786071777
    3. '_progress' → logprob: -7.008444786071777
    4. '_metric' → logprob: -7.008444786071777
    5. 'etrics' → logprob: -7.883444786071777
    6. 'et' → logprob: -8.133444786071777
    7. 'etry' → logprob: -8.258444786071777
    8. '_seq' → logprob: -8.383444786071777
    9. 'tric' → logprob: -8.383444786071777
    10. 'metric' → logprob: -8.508444786071777

Token 74: '(init' (ID: 76539)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6215257048606873
    2. '(k' → logprob: -1.371525764465332
    3. '(a' → logprob: -2.371525764465332
    4. '(length' → logprob: -3.746525764465332
    5. '(l' → logprob: -3.996525764465332
    6. '(' → logprob: -3.996525764465332
    7. '(b' → logprob: -4.246525764465332
    8. '(start' → logprob: -4.496525764465332
    9. '(base' → logprob: -4.746525764465332
    10. '(r' → logprob: -4.996525764465332

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10403406620025635
    2. 'al' → logprob: -2.729033946990967
    3. 'ial' → logprob: -4.479033946990967
    4. ',val' → logprob: -4.729033946990967
    5. '_val' → logprob: -5.854033946990967
    6. 'val' → logprob: -6.354033946990967
    7. ',i' → logprob: -6.604033946990967
    8. ' ,' → logprob: -6.604033946990967
    9. ',a' → logprob: -6.604033946990967
    10. 'erval' → logprob: -7.229033946990967

Token 76: ' ratio' (ID: 18051)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.2872459888458252
    2. 'r' → logprob: -2.537245988845825
    3. ' ratio' → logprob: -2.662245988845825
    4. 'mult' → logprob: -3.287245988845825
    5. 'common' → logprob: -4.287245750427246
    6. 'factor' → logprob: -4.787245750427246
    7. 'base' → logprob: -5.037245750427246
    8. 'mul' → logprob: -5.037245750427246
    9. ' r' → logprob: -5.287245750427246
    10. ' common' → logprob: -5.787245750427246

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14304779469966888
    2. '):' → logprob: -2.01804780960083
    3. ')' → logprob: -8.518047332763672
    4. ' ,' → logprob: -9.393047332763672
    5. '):
' → logprob: -10.768047332763672
    6. ' ):' → logprob: -11.518047332763672
    7. 's' → logprob: -11.643047332763672
    8. '_,' → logprob: -11.893047332763672
    9. ':' → logprob: -12.143047332763672
    10. '=' → logprob: -12.268047332763672

Token 78: ' mod' (ID: 1812)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.28821009397506714
    2. 'length' → logprob: -1.538210153579712
    3. ' n' → logprob: -4.288209915161133
    4. 'n' → logprob: -4.663209915161133
    5. ' size' → logprob: -6.038209915161133
    6. ' count' → logprob: -6.163209915161133
    7. 'count' → logprob: -6.788209915161133
    8. 'terms' → logprob: -7.288209915161133
    9. 'limit' → logprob: -7.288209915161133
    10. ' terms' → logprob: -7.413209915161133

Token 79: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017187348566949368
    2. '=' → logprob: -7.501718521118164
    3. '):
' → logprob: -7.501718521118164
    4. '):
' → logprob: -9.001718521118164
    5. 'ulo' → logprob: -9.001718521118164
    6. '=None' → logprob: -9.251718521118164
    7. 'ulus' → logprob: -9.501718521118164
    8. ')' → logprob: -9.626718521118164
    9. ',' → logprob: -9.751718521118164
    10. 'ul' → logprob: -10.751718521118164

Token 80: ' count' (ID: 3605)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.2886049151420593
    2. 'length' → logprob: -1.663604974746704
    3. ' n' → logprob: -3.413604974746704
    4. 'n' → logprob: -4.163604736328125
    5. ' size' → logprob: -5.038604736328125
    6. 'size' → logprob: -6.663604736328125
    7. ' ' → logprob: -7.288604736328125
    8. ' count' → logprob: -7.538604736328125
    9. ' terms' → logprob: -7.538604736328125
    10. 'terms' → logprob: -7.663604736328125

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010771531378850341
    2. ')' → logprob: -9.250107765197754
    3. ' ):' → logprob: -12.500107765197754
    4. '=' → logprob: -12.750107765197754
    5. '):
' → logprob: -13.000107765197754
    6. ',' → logprob: -13.375107765197754
    7. ':' → logprob: -14.250107765197754
    8. '):
' → logprob: -16.875106811523438
    9. 's' → logprob: -17.000106811523438
    10. ''):' → logprob: -17.125106811523438

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011117222311440855
    2. 'result' → logprob: -10.50011157989502
    3. '    ' → logprob: -11.00011157989502
    4. ' res' → logprob: -11.12511157989502
    5. ' sequence' → logprob: -11.75011157989502
    6. '    
' → logprob: -11.87511157989502
    7. ' result' → logprob: -12.00011157989502
    8. ',' → logprob: -12.37511157989502
    9. ')' → logprob: -12.62511157989502
    10. '	result' → logprob: -12.75011157989502

Token 83: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.50390625
    2. ' seq' → logprob: -1.50390625
    3. ' res' → logprob: -2.00390625
    4. 'seq' → logprob: -3.87890625
    5. ' result' → logprob: -4.87890625
    6. ' sequence' → logprob: -5.25390625
    7. 'res' → logprob: -5.87890625
    8. 'result' → logprob: -6.37890625
    9. ' geom' → logprob: -8.75390625
    10. 'geom' → logprob: -8.87890625

Token 84: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9231897592544556
    2. '=' → logprob: -1.1731897592544556
    3. ' =' → logprob: -1.2981897592544556
    4. 'nit' → logprob: -4.423189640045166
    5. 'n' → logprob: -5.173189640045166
    6. 't' → logprob: -6.173189640045166
    7. 'nt' → logprob: -8.423190116882324
    8. '   ' → logprob: -9.548190116882324
    9. 'm' → logprob: -9.798190116882324
    10. 's' → logprob: -10.173190116882324

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22555877268314362
    2. ' ' → logprob: -1.6005587577819824
    3. '[' → logprob: -9.60055923461914
    4. ' [' → logprob: -9.97555923461914
    5. '1' → logprob: -11.35055923461914
    6. '[]' → logprob: -11.85055923461914
    7. 'init' → logprob: -11.97555923461914
    8. '  ' → logprob: -13.10055923461914
    9. ' init' → logprob: -14.22555923461914
    10. '2' → logprob: -14.66305923461914

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -10.125054359436035
    3. '1' → logprob: -11.250054359436035
    4. 'init' → logprob: -14.125054359436035
    5. '2' → logprob: -15.375054359436035
    6. 'count' → logprob: -15.625054359436035
    7. 'int' → logprob: -16.00005531311035
    8. '[' → logprob: -16.25005531311035
    9. '```' → logprob: -17.25005531311035
    10. 'i' → logprob: -17.37505531311035

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2499397248029709
    2. '
' → logprob: -2.3749396800994873
    3. '<|end|>' → logprob: -3.2499396800994873
    4. ' ' → logprob: -3.6249396800994873
    5. '    
' → logprob: -4.249939918518066
    6. ' while' → logprob: -4.999939918518066
    7. ',' → logprob: -5.374939918518066
    8. 'while' → logprob: -5.374939918518066
    9. '  
' → logprob: -5.499939918518066
    10. '  ' → logprob: -5.624939918518066

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0705670565366745
    2. 'result' → logprob: -3.4455671310424805
    3. ' result' → logprob: -4.0705671310424805
    4. ' while' → logprob: -5.0705671310424805
    5. ' sequence' → logprob: -5.5705671310424805
    6. '    
' → logprob: -6.0705671310424805
    7. ' res' → logprob: -6.5705671310424805
    8. 'res' → logprob: -7.0705671310424805
    9. '    ' → logprob: -7.3205671310424805
    10. ',' → logprob: -7.8205671310424805

Token 89: ' val' (ID: 1459)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.9153668880462646
    2. ' seq' → logprob: -1.2903668880462646
    3. ' result' → logprob: -2.2903668880462646
    4. 'res' → logprob: -2.5403668880462646
    5. 'result' → logprob: -3.0403668880462646
    6. '   ' → logprob: -3.4153668880462646
    7. 'seq' → logprob: -3.6653668880462646
    8. ' sequence' → logprob: -4.165367126464844
    9. ' while' → logprob: -4.290367126464844
    10. 'while' → logprob: -6.415367126464844

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232194662094116
    2. ' =' → logprob: -0.8982194662094116
    3. '   ' → logprob: -10.273219108581543
    4. ',' → logprob: -11.023219108581543
    5. ' ' → logprob: -11.273219108581543
    6. 'ue' → logprob: -11.523219108581543
    7. '  ' → logprob: -12.273219108581543
    8. 'u' → logprob: -12.398219108581543
    9. 's' → logprob: -12.898219108581543
    10. 'l' → logprob: -13.148219108581543

Token 91: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.01417174469679594
    2. ' init' → logprob: -4.264171600341797
    3. '(init' → logprob: -12.639171600341797
    4. '	init' → logprob: -14.014171600341797
    5. 'inite' → logprob: -14.014171600341797
    6. '1' → logprob: -14.014171600341797
    7. 'int' → logprob: -14.139171600341797
    8. ' ' → logprob: -14.389171600341797
    9. '_init' → logprob: -15.639171600341797
    10. '   ' → logprob: -15.639171600341797

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0634994506835938
    2. ' ' → logprob: -1.6884994506835938
    3. ' while' → logprob: -1.9384994506835938
    4. 'yield' → logprob: -2.4384994506835938
    5. ' yield' → logprob: -2.4384994506835938
    6. 'while' (adapté à ' while') → logprob: -2.5634994506835938
    7. '<|end|>' → logprob: -3.6884994506835938
    8. '	yield' → logprob: -4.313499450683594
    9. '  ' → logprob: -5.063499450683594
    10. '    ' → logprob: -5.438499450683594

Token 95: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10031040012836456
    2. ' i' → logprob: -2.3503103256225586
    3. 'count' → logprob: -9.350310325622559
    4. ' count' → logprob: -11.225310325622559
    5. '	i' → logprob: -13.350310325622559
    6. '   ' → logprob: -14.100310325622559
    7. '(i' → logprob: -14.850310325622559
    8. ' ' → logprob: -15.100310325622559
    9. 'True' → logprob: -15.850310325622559
    10. ' True' → logprob: -15.850310325622559

Token 96: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5235922932624817
    2. '<' → logprob: -0.8985922932624817
    3. '<len' → logprob: -9.023591995239258
    4. ' <=' → logprob: -9.273591995239258
    5. '<=' → logprob: -9.523591995239258
    6. ' ' → logprob: -9.523591995239258
    7. '<n' → logprob: -9.898591995239258
    8. '<num' → logprob: -10.898591995239258
    9. '<size' → logprob: -11.398591995239258
    10. '<N' → logprob: -11.523591995239258

Token 97: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0485873706638813
    2. ' count' → logprob: -3.0485873222351074
    3. '	count' → logprob: -18.423587799072266
    4. '   ' → logprob: -18.923587799072266
    5. '_count' → logprob: -19.548587799072266
    6. '[count' → logprob: -20.548587799072266
    7. '<count' → logprob: -20.798587799072266
    8. '(count' → logprob: -21.048587799072266
    9. '$count' → logprob: -21.173587799072266
    10. ' ' → logprob: -21.173587799072266

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16041147708892822
    2. ':
' → logprob: -1.9104114770889282
    3. '   ' → logprob: -8.910411834716797
    4. '):
' → logprob: -11.285411834716797
    5. ':return' → logprob: -11.535411834716797
    6. ':
' → logprob: -11.785411834716797
    7. '):' → logprob: -12.035411834716797
    8. ',' → logprob: -12.410411834716797
    9. ':

' → logprob: -12.785411834716797
    10. ' :' → logprob: -13.285411834716797

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19251929223537445
    2. '   ' → logprob: -1.8175193071365356
    3. ' yield' → logprob: -4.942519187927246
    4. 'yield' → logprob: -6.317519187927246
    5. '	yield' → logprob: -6.442519187927246
    6. '
' → logprob: -7.192519187927246
    7. '<|end|>' → logprob: -7.317519187927246
    8. ' ' → logprob: -9.067519187927246
    9. '    
' → logprob: -9.067519187927246
    10. ',' → logprob: -9.442519187927246

Token 100: ' yield' (ID: 14376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47917643189430237
    2. 'yield' (adapté à ' yield') → logprob: -1.35417640209198
    3. ' yield' → logprob: -2.1041765213012695
    4. '   ' → logprob: -8.10417652130127
    5. '	yield' → logprob: -8.85417652130127
    6. '
' → logprob: -9.22917652130127
    7. '```' → logprob: -10.72917652130127
    8. 'val' → logprob: -11.22917652130127
    9. 'Yield' → logprob: -12.60417652130127
    10. ' val' → logprob: -12.85417652130127

Token 101: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0380416102707386
    2. ' val' → logprob: -3.288041591644287
    3. '	val' → logprob: -16.413042068481445
    4. '(val' → logprob: -16.913042068481445
    5. ' ' → logprob: -18.663042068481445
    6. '   ' → logprob: -18.663042068481445
    7. '_val' → logprob: -19.538042068481445
    8. '[val' → logprob: -19.663042068481445
    9. 'Val' → logprob: -19.913042068481445
    10. 'value' → logprob: -20.288042068481445

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004123399965465069
    2. '        
' → logprob: -6.629123210906982
    3. ',' → logprob: -6.754123210906982
    4. '
' → logprob: -7.379123210906982
    5. 'val' → logprob: -8.37912368774414
    6. ' val' → logprob: -8.50412368774414
    7. '```' → logprob: -9.12912368774414
    8. '<|end|>' → logprob: -9.62912368774414
    9. ' ' → logprob: -9.75412368774414
    10. ',val' → logprob: -10.37912368774414

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005370667786337435
    2. '
' → logprob: -8.500536918640137
    3. ',' → logprob: -9.125536918640137
    4. 'val' → logprob: -9.750536918640137
    5. '        
' → logprob: -10.250536918640137
    6. '   ' → logprob: -10.500536918640137
    7. '```' → logprob: -10.500536918640137
    8. ' val' → logprob: -10.625536918640137
    9. '	val' → logprob: -11.375536918640137
    10. '	' → logprob: -11.625536918640137

Token 104: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0005109758349135518
    2. ' val' → logprob: -7.750511169433594
    3. '       ' → logprob: -9.500511169433594
    4. '   ' → logprob: -12.750511169433594
    5. '	val' → logprob: -13.125511169433594
    6. '```' → logprob: -15.250511169433594
    7. '(val' → logprob: -15.875511169433594
    8. '
' → logprob: -16.750511169433594
    9. ',val' → logprob: -16.875511169433594
    10. '           ' → logprob: -17.500511169433594

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12765201926231384
    2. ' =' → logprob: -2.1276519298553467
    3. '*=' → logprob: -7.252652168273926
    4. ' *=' → logprob: -11.252652168273926
    5. '=(' → logprob: -13.502652168273926
    6. '*' → logprob: -14.127652168273926
    7. ' ' → logprob: -16.25265121459961
    8. '＝' → logprob: -16.75265121459961
    9. '.=' → logprob: -17.12765121459961
    10. '+=' → logprob: -17.12765121459961

Token 106: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.04526098445057869
    2. ' (' → logprob: -3.4202609062194824
    3. 'val' → logprob: -5.045260906219482
    4. ' val' → logprob: -5.295260906219482
    5. '   ' → logprob: -10.04526138305664
    6. '[val' → logprob: -10.79526138305664
    7. ',val' → logprob: -11.29526138305664
    8. '(' → logprob: -11.92026138305664
    9. '	val' → logprob: -12.42026138305664
    10. ' ' → logprob: -13.29526138305664

Token 107: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0019081698264926672
    2. '(val' → logprob: -6.376908302307129
    3. ' val' → logprob: -8.501908302307129
    4. '	val' → logprob: -13.751908302307129
    5. '   ' → logprob: -14.001908302307129
    6. '[val' → logprob: -15.251908302307129
    7. 'vall' → logprob: -15.876908302307129
    8. ' (' → logprob: -16.126907348632812
    9. ',val' → logprob: -16.251907348632812
    10. '_val' → logprob: -16.251907348632812

Token 108: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3868715465068817
    2. '*' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.136871337890625
    4. '*object' → logprob: -16.011871337890625
    5. '**' → logprob: -17.136871337890625
    6. '*r' → logprob: -18.011871337890625
    7. ')' → logprob: -18.011871337890625
    8. ' ' → logprob: -18.886871337890625
    9. ' **' → logprob: -19.011871337890625
    10. 'val' → logprob: -19.136871337890625

Token 109: ' ratio' (ID: 18051)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.029751179739832878
    2. ' ratio' → logprob: -3.5297510623931885
    3. 'ration' → logprob: -14.65475082397461
    4. ' ' → logprob: -16.15475082397461
    5. '_ratio' → logprob: -17.40475082397461
    6. 'rat' → logprob: -17.52975082397461
    7. 'rate' → logprob: -17.52975082397461
    8. 'r' → logprob: -17.65475082397461
    9. '   ' → logprob: -17.65475082397461
    10. '  ' → logprob: -20.27975082397461

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.949026571121067e-05
    2. ')%' → logprob: -9.250099182128906
    3. ' )' → logprob: -12.625099182128906
    4. '%' → logprob: -17.375099182128906
    5. '+' → logprob: -19.250099182128906
    6. ')
' → logprob: -19.500099182128906
    7. '`)' → logprob: -20.000099182128906
    8. '),' → logprob: -20.500099182128906
    9. '）' → logprob: -20.500099182128906
    10. '")' → logprob: -20.500099182128906

Token 111: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38687264919281006
    2. '%' → logprob: -1.13687264919281
    3. ')' → logprob: -14.136872291564941
    4. '%i' → logprob: -15.386872291564941
    5. ' ' → logprob: -15.761872291564941
    6. ')%' → logprob: -15.886872291564941
    7. '%d' → logprob: -16.261873245239258
    8. ' ' → logprob: -16.386873245239258
    9. '%n' → logprob: -17.011873245239258
    10. ' mod' → logprob: -17.261873245239258

Token 112: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00029613598599098623
    2. ' mod' → logprob: -8.125296592712402
    3. '(mod' → logprob: -16.750295639038086
    4. '	mod' → logprob: -17.500295639038086
    5. ' ' → logprob: -18.750295639038086
    6. 'MOD' → logprob: -19.000295639038086
    7. '```' → logprob: -19.500295639038086
    8. 'md' → logprob: -20.250295639038086
    9. ' мод' → logprob: -20.375295639038086
    10. 'moder' → logprob: -20.750295639038086

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.472211968386546e-05
    2. '<|end|>' → logprob: -9.625094413757324
    3. '<|end|>' → logprob: -11.500094413757324
    4. '   ' → logprob: -12.250094413757324
    5. ',' → logprob: -12.500094413757324
    6. '        
' → logprob: -13.000094413757324
    7. '```' → logprob: -13.125094413757324
    8. '
' → logprob: -13.250094413757324
    9. 'newline' → logprob: -14.125094413757324
    10. 'n' → logprob: -14.875094413757324

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.652451464906335e-05
    2. '<|end|>' → logprob: -12.125016212463379
    3. '   ' → logprob: -12.375016212463379
    4. '```' → logprob: -13.000016212463379
    5. ',' → logprob: -13.125016212463379
    6. '<|end|>' → logprob: -14.125016212463379
    7. '        
' → logprob: -14.625016212463379
    8. 'i' → logprob: -15.375016212463379
    9. '	' → logprob: -15.625016212463379
    10. 'def' → logprob: -15.875016212463379

Token 115: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04460157826542854
    2. 'i' (adapté à ' i') → logprob: -3.1696016788482666
    3. ' i' → logprob: -6.5446014404296875
    4. '   ' → logprob: -8.919601440429688
    5. '
' → logprob: -10.794601440429688
    6. ' ' → logprob: -13.169601440429688
    7. '```' → logprob: -13.169601440429688
    8. '        
' → logprob: -14.294601440429688
    9. '      ' → logprob: -14.419601440429688
    10. '0' → logprob: -14.419601440429688

Token 116: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008964549051597714
    2. ' +=' → logprob: -7.250896453857422
    3. '+' → logprob: -8.625896453857422
    4. '=' → logprob: -11.875896453857422
    5. '++' → logprob: -17.000896453857422
    6. '+="' → logprob: -17.000896453857422
    7. '+='' → logprob: -17.000896453857422
    8. ']+=' → logprob: -17.125896453857422
    9. '+=(' → logprob: -18.625896453857422
    10. '```' → logprob: -19.500896453857422

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.00023078918457
    4. '  ' → logprob: -17.87523078918457
    5. '```' → logprob: -18.75023078918457
    6. ' ' → logprob: -20.37523078918457
    7. '۱' → logprob: -20.68773078918457
    8. '
' → logprob: -21.06273078918457
    9. '    ' → logprob: -21.25023078918457
    10. '１' → logprob: -21.43773078918457

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.25
    5. '  ' → logprob: -20.4375
    6. '۱' → logprob: -21.3125
    7. '１' → logprob: -21.875
    8. '`' → logprob: -22.3125
    9. '' → logprob: -22.5
    10. '১' → logprob: -22.6875

Token 119: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38534417748451233
    2. 'for' → logprob: -1.88534414768219
    3. ')' → logprob: -2.3853442668914795
    4. '#' → logprob: -3.6353442668914795
    5. ' for' → logprob: -4.3853440284729
    6. 'n' → logprob: -5.1353440284729
    7. '
' → logprob: -5.2603440284729
    8. 'return' → logprob: -5.8853440284729
    9. 'r' → logprob: -6.0103440284729
    10. 'result' → logprob: -6.1353440284729

Token 120: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.042056918144226
    2. 'def' → logprob: -1.292056918144226
    3. 'res' → logprob: -2.1670570373535156
    4. 'result' → logprob: -3.0420570373535156
    5. 'dp' → logprob: -3.1670570373535156
    6. 'arr' → logprob: -4.292057037353516
    7. 'ans' → logprob: -4.417057037353516
    8. 'a' → logprob: -4.667057037353516
    9. 'seq' → logprob: -4.917057037353516
    10. 'next' → logprob: -5.042057037353516

Token 121: ' aggressively' (ID: 113825)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0233898162841797
    2. 'for' → logprob: -1.5233898162841797
    3. 'res' → logprob: -2.5233898162841797
    4. 'dp' → logprob: -2.7733898162841797
    5. 'arr' → logprob: -3.1483898162841797
    6. 'ans' → logprob: -3.2733898162841797
    7. 'result' → logprob: -3.8983898162841797
    8. '#' → logprob: -4.14838981628418
    9. 'a' → logprob: -4.27338981628418
    10. 'A' → logprob: -4.52338981628418

Token 122: ' upper' (ID: 13057)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8092632293701172
    2. 'for' → logprob: -0.8092632293701172
    3. 'cache' → logprob: -3.309263229370117
    4. '#' → logprob: -4.559263229370117
    5. 'opt' → logprob: -4.684263229370117
    6. 'reduce' → logprob: -5.059263229370117
    7. 'pow' → logprob: -5.184263229370117
    8. 'read' → logprob: -5.309263229370117
    9. 'from' → logprob: -5.559263229370117
    10. 'try' → logprob: -5.809263229370117

Token 123: '-case' (ID: 83130)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.2070980817079544
    2. '_bound' → logprob: -1.957098126411438
    3. 'def' → logprob: -3.8320980072021484
    4. 'limit' → logprob: -4.457098007202148
    5. ' bound' → logprob: -5.457098007202148
    6. 'bounds' → logprob: -5.832098007202148
    7. 'case' → logprob: -6.832098007202148
    8. '=' → logprob: -7.582098007202148
    9. '_' → logprob: -7.582098007202148
    10. 'bounded' → logprob: -7.582098007202148

Token 124: ' variable' (ID: 11076)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8217071890830994
    2. 'S' → logprob: -1.9467072486877441
    3. 'for' → logprob: -2.196707248687744
    4. 'R' → logprob: -2.446707248687744
    5. 'N' → logprob: -3.446707248687744
    6. 'Q' → logprob: -3.821707248687744
    7. 'T' → logprob: -3.946707248687744
    8. 'A' → logprob: -4.196707248687744
    9. ' for' → logprob: -4.446707248687744
    10. '_' → logprob: -4.571707248687744

Token 125: ',' (ID: 11)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.816269040107727
    2. 's' → logprob: -1.066269040107727
    3. 'N' → logprob: -2.1912689208984375
    4. 'names' → logprob: -3.9412689208984375
    5. '_NAMES' → logprob: -4.0662689208984375
    6. '_' → logprob: -4.1912689208984375
    7. 'n' → logprob: -4.4412689208984375
    8. ' names' → logprob: -4.4412689208984375
    9. 'i' → logprob: -4.8162689208984375
    10. 'NAME' → logprob: -5.8162689208984375

Token 126: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33177414536476135
    2. 'R' → logprob: -2.2067742347717285
    3. 'def' → logprob: -3.5817742347717285
    4. 'result' → logprob: -3.9567742347717285
    5. 'S' → logprob: -4.2067742347717285
    6. 'i' → logprob: -4.4567742347717285
    7. 'I' → logprob: -4.4567742347717285
    8. 'V' → logprob: -4.7067742347717285
    9. 'RESULT' → logprob: -4.8317742347717285
    10. 'A' → logprob: -4.8317742347717285

Token 127: '-c' (ID: 3452)
  Prédit: 'VAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VAL' → logprob: -2.117323160171509
    2. 'S' → logprob: -2.492323160171509
    3. 'for' → logprob: -2.492323160171509
    4. 'i' → logprob: -2.992323160171509
    5. 'RESULT' → logprob: -2.992323160171509
    6. 'def' → logprob: -2.992323160171509
    7. 'INPUT' → logprob: -2.992323160171509
    8. 'DATA' → logprob: -3.117323160171509
    9. 'result' → logprob: -3.492323160171509
    10. 'I' → logprob: -3.742323160171509

Token 128: 'aps' (ID: 3506)
  Prédit: 'AP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AP' → logprob: -0.702208936214447
    2. 'APS' → logprob: -1.8272089958190918
    3. 'ODE' → logprob: -2.202208995819092
    4. 'L' → logprob: -2.202208995819092
    5. 'HAR' → logprob: -3.827208995819092
    6. 'A' → logprob: -4.077208995819092
    7. '#' → logprob: -4.077208995819092
    8. 'ON' → logprob: -4.327208995819092
    9. 'ASE' → logprob: -4.577208995819092
    10. 'HR' → logprob: -5.077208995819092

Token 129: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0429514646530151
    2. 'A' → logprob: -1.7929514646530151
    3. 'R' → logprob: -2.1679515838623047
    4. 'X' → logprob: -2.7929515838623047
    5. 'G' → logprob: -3.7929515838623047
    6. 'S' → logprob: -3.7929515838623047
    7. 'ANS' → logprob: -4.042951583862305
    8. 'def' → logprob: -4.167951583862305
    9. 'Q' → logprob: -4.167951583862305
    10. 'V' → logprob: -4.667951583862305

Token 130: ' as' (ID: 472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3053115904331207
    2. 'def' → logprob: -2.430311679840088
    3. 'RESULT' → logprob: -3.305311679840088
    4. 'result' → logprob: -4.180311679840088
    5. 'RES' → logprob: -4.305311679840088
    6. 'for' → logprob: -4.680311679840088
    7. 'S' → logprob: -4.805311679840088
    8. 'R' → logprob: -4.805311679840088
    9. 'SEQ' → logprob: -5.180311679840088
    10. 'MAX' → logprob: -5.305311679840088

Token 131: ' a' (ID: 261)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6522906422615051
    2. 'requested' → logprob: -1.7772905826568604
    3. '#' → logprob: -2.0272905826568604
    4. 'PER' → logprob: -2.4022905826568604
    5. ' per' → logprob: -3.6522905826568604
    6. 'the' → logprob: -4.5272908210754395
    7. 'it' → logprob: -4.7772908210754395
    8. ' requested' → logprob: -5.1522908210754395
    9. 'a' → logprob: -5.6522908210754395
    10. 'is' → logprob: -5.7772908210754395

Token 132: ' personal' (ID: 3832)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comment' → logprob: -0.47336533665657043
    2. 'result' → logprob: -2.098365306854248
    3. 'continu' → logprob: -2.598365306854248
    4. '#' → logprob: -3.598365306854248
    5. 'con' → logprob: -3.723365306854248
    6. 'matter' → logprob: -4.098365306854248
    7. 'placeholder' → logprob: -4.723365306854248
    8. 'n' → logprob: -4.848365306854248
    9. 'possible' → logprob: -4.973365306854248
    10. 'constant' → logprob: -4.973365306854248

Token 133: ' choice' (ID: 7158)
  Prédit: 'style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'style' → logprob: -0.30149391293525696
    2. 'comment' → logprob: -2.1764938831329346
    3. '#' → logprob: -2.8014938831329346
    4. 'n' → logprob: -3.6764938831329346
    5. 'pre' → logprob: -3.6764938831329346
    6. 'coding' → logprob: -5.426494121551514
    7. 'choice' → logprob: -5.426494121551514
    8. 'con' → logprob: -6.051494121551514
    9. 'note' → logprob: -6.051494121551514
    10. 'variable' → logprob: -6.176494121551514

Token 134: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1788486242294312
    2. 'ANS' → logprob: -2.4288487434387207
    3. 'for' → logprob: -2.6788487434387207
    4. 'arr' → logprob: -3.3038487434387207
    5. 'ans' → logprob: -3.3038487434387207
    6. 'S' → logprob: -3.3038487434387207
    7. 'result' → logprob: -3.6788487434387207
    8. 'res' → logprob: -3.6788487434387207
    9. 'SUM' → logprob: -3.8038487434387207
    10. 'DATA' → logprob: -4.053848743438721

Token 135: 'BB' (ID: 12708)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -1.3034117221832275
    2. 'A' → logprob: -2.1784117221832275
    3. 'for' → logprob: -2.1784117221832275
    4. 'Q' → logprob: -2.8034117221832275
    5. 'X' → logprob: -3.4284117221832275
    6. 'SUM' → logprob: -3.5534117221832275
    7. 'DATA' → logprob: -3.6784117221832275
    8. 'RES' → logprob: -3.6784117221832275
    9. 'S' → logprob: -3.6784117221832275
    10. 'ans' → logprob: -3.9284117221832275

Token 136: 'UFF' (ID: 113521)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18271951377391815
    2. '_' → logprob: -2.1827194690704346
    3. 'IG' → logprob: -3.5577194690704346
    4. '_B' → logprob: -4.807719707489014
    5. '=' → logprob: -5.057719707489014
    6. '_I' → logprob: -6.307719707489014
    7. '_BIG' → logprob: -6.557719707489014
    8. 'B' → logprob: -6.807719707489014
    9. '_=' → logprob: -7.057719707489014
    10. '_COUNT' → logprob: -7.057719707489014

Token 137: 'ET' (ID: 2175)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3198063373565674
    2. '=' → logprob: -1.3198063373565674
    3. 'UF' → logprob: -6.444806098937988
    4. 'F' → logprob: -6.694806098937988
    5. 'ER' → logprob: -7.069806098937988
    6. '_SIZE' → logprob: -7.319806098937988
    7. '_' → logprob: -7.694806098937988
    8. ' ' → logprob: -8.194806098937988
    9. 'FER' → logprob: -8.569806098937988
    10. 'U' → logprob: -8.694806098937988

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4824701249599457
    2. ' =' → logprob: -0.9824701547622681
    3. '_' → logprob: -5.1074700355529785
    4. '_SIZE' → logprob: -6.6074700355529785
    5. 'SIZE' → logprob: -8.482470512390137
    6. 'S' → logprob: -8.982470512390137
    7. '=[]' → logprob: -9.607470512390137
    8. ' ' → logprob: -10.107470512390137
    9. '_COUNT' → logprob: -10.232470512390137
    10. 'E' → logprob: -10.482470512390137

Token 139: ' [' (ID: 723)
  Prédit: 'BIG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BIG' → logprob: -1.4664177894592285
    2. 'list' → logprob: -1.5914177894592285
    3. '[]' → logprob: -1.8414177894592285
    4. '[' → logprob: -2.4664177894592285
    5. 'make' → logprob: -2.5914177894592285
    6. 'dd' → logprob: -2.7164177894592285
    7. 'pow' → logprob: -3.2164177894592285
    8. '0' → logprob: -3.7164177894592285
    9. '10' → logprob: -4.0914177894592285
    10. '[B' → logprob: -4.2164177894592285

Token 140: 'x' (ID: 87)
  Prédit: 'BIG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIG' → logprob: -0.7417407035827637
    2. '0' → logprob: -1.3667407035827637
    3. 'pow' → logprob: -2.7417407035827637
    4. '*' → logprob: -3.1167407035827637
    5. '1' → logprob: -3.1167407035827637
    6. 'val' → logprob: -3.3667407035827637
    7. 'b' → logprob: -3.7417407035827637
    8. 'x' → logprob: -4.241740703582764
    9. 'next' → logprob: -4.241740703582764
    10. 'big' → logprob: -5.741740703582764

Token 141: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06584346294403076
    2. 'for' → logprob: -2.8158435821533203
    3. ' %' → logprob: -6.06584358215332
    4. '%' → logprob: -6.56584358215332
    5. ' ' → logprob: -9.19084358215332
    6. ')' → logprob: -11.81584358215332
    7. '%B' → logprob: -12.19084358215332
    8. '	for' → logprob: -12.69084358215332
    9. 'async' → logprob: -12.94084358215332
    10. ' async' → logprob: -13.06584358215332

Token 142: ' x' (ID: 1215)
  Prédit: ' make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' make' → logprob: -0.6933341026306152
    2. 'make' → logprob: -0.6933341026306152
    3. 'x' → logprob: -9.068334579467773
    4. ' x' → logprob: -10.193334579467773
    5. '	make' → logprob: -11.068334579467773
    6. '(make' → logprob: -11.568334579467773
    7. ' in' → logprob: -12.818334579467773
    8. ' ' → logprob: -13.068334579467773
    9. '_make' → logprob: -13.068334579467773
    10. '_' → logprob: -13.943334579467773

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12760207056999207
    2. 'in' → logprob: -2.1276021003723145
    3. 'make' → logprob: -7.3776021003723145
    4. 'x' → logprob: -10.752601623535156
    5. ' make' → logprob: -11.002601623535156
    6. ' ' → logprob: -11.877601623535156
    7. ' x' → logprob: -14.002601623535156
    8. '
' → logprob: -14.627601623535156
    9. ',' → logprob: -14.752601623535156
    10. '  ' → logprob: -15.127601623535156

Token 144: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.038044244050979614
    2. ' make' → logprob: -3.2880442142486572
    3. '(make' → logprob: -13.413043975830078
    4. ' ' → logprob: -14.413043975830078
    5. '	make' → logprob: -14.788043975830078
    6. '  ' → logprob: -15.538043975830078
    7. '   ' → logprob: -15.788043975830078
    8. 'Make' → logprob: -18.038043975830078
    9. '    ' → logprob: -18.538043975830078
    10. '_make' → logprob: -19.038043975830078

Token 145: '_geom' (ID: 180091)
  Prédit: '_geom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_geom' → logprob: -7.107425062713446e-06
    2. 'geom' → logprob: -11.875006675720215
    3. 'Geom' → logprob: -17.00000762939453
    4. '(B' → logprob: -18.50000762939453
    5. '_geo' → logprob: -18.50000762939453
    6. ' geom' → logprob: -18.50000762939453
    7. '_ge' → logprob: -18.62500762939453
    8. '.geom' → logprob: -18.62500762939453
    9. '_phys' → logprob: -19.50000762939453
    10. '_vect' → logprob: -20.37500762939453

Token 146: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -2.339278580620885e-06
    2. '_SEQ' → logprob: -13.375001907348633
    3. 'seq' → logprob: -14.250001907348633
    4. 'Seq' → logprob: -16.250001907348633
    5. 'SEQ' → logprob: -17.750001907348633
    6. '(seq' → logprob: -21.000001907348633
    7. '_sec' → logprob: -21.250001907348633
    8. 'aseq' → logprob: -22.000001907348633
    9. '_sep' → logprob: -22.000001907348633
    10. '.seq' → logprob: -22.250001907348633

Token 147: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06205194070935249
    2. '(B' → logprob: -2.812052011489868
    3. '(Big' → logprob: -10.187051773071289
    4. '(
' → logprob: -10.687051773071289
    5. '((' → logprob: -12.062051773071289
    6. '(pow' → logprob: -12.312051773071289
    7. '(big' → logprob: -12.562051773071289
    8. '](' → logprob: -13.312051773071289
    9. ']' → logprob: -13.687051773071289
    10. '(IN' → logprob: -13.937051773071289

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6618924140930176
    2. 'BIG' → logprob: -0.7868924140930176
    3. '10' → logprob: -4.536892414093018
    4. '2' → logprob: -4.661892414093018
    5. 'BB' → logprob: -6.536892414093018
    6. '3' → logprob: -7.036892414093018
    7. '(' → logprob: -7.286892414093018
    8. 'N' → logprob: -7.286892414093018
    9. '100' → logprob: -7.411892414093018
    10. '0' → logprob: -7.536892414093018

Token 149: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04458504170179367
    2. ',B' → logprob: -3.4195849895477295
    3. ' ,' → logprob: -4.544585227966309
    4. 'B' → logprob: -9.294585227966309
    5. 'BIG' → logprob: -9.919585227966309
    6. ',b' → logprob: -10.169585227966309
    7. ' ' → logprob: -11.169585227966309
    8. '   ' → logprob: -11.794585227966309
    9. ',int' → logprob: -12.169585227966309
    10. '
' → logprob: -12.294585227966309

Token 150: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.02626766636967659
    2. 'I' → logprob: -4.4012675285339355
    3. 'BIG' → logprob: -4.9012675285339355
    4. 'B' → logprob: -5.9012675285339355
    5. '10' → logprob: -6.7762675285339355
    6. '2' → logprob: -6.7762675285339355
    7. 'Ig' → logprob: -7.9012675285339355
    8. '1' → logprob: -8.276268005371094
    9. 'ig' → logprob: -9.026268005371094
    10. '3' → logprob: -10.151268005371094

Token 151: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -2.696889623621246e-06
    2. 'B' → logprob: -13.37500286102295
    3. '_BUFF' → logprob: -14.37500286102295
    4. '_BU' → logprob: -15.37500286102295
    5. ' _' → logprob: -16.625001907348633
    6. '_BGR' → logprob: -16.750001907348633
    7. '_BIG' → logprob: -17.125001907348633
    8. ')' → logprob: -18.375001907348633
    9. '_A' → logprob: -18.500001907348633
    10. '_' → logprob: -18.625001907348633

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009631185792386532
    2. ',N' → logprob: -4.884631156921387
    3. ' ,' → logprob: -6.259631156921387
    4. ',M' → logprob: -10.009631156921387
    5. '   ' → logprob: -10.259631156921387
    6. 'MOD' → logprob: -11.134631156921387
    7. '  ' → logprob: -12.634631156921387
    8. ' ' → logprob: -12.759631156921387
    9. '%' → logprob: -12.884631156921387
    10. 'N' → logprob: -13.134631156921387

Token 153: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0008636995335109532
    2. ' MOD' → logprob: -7.125863552093506
    3. '998' → logprob: -9.750864028930664
    4. ' ' → logprob: -15.250864028930664
    5. '
' → logprob: -15.375864028930664
    6. '   ' → logprob: -16.000864028930664
    7. '_MOD' → logprob: -16.375864028930664
    8. 'MO' → logprob: -16.500864028930664
    9. '.MOD' → logprob: -16.500864028930664
    10. '

' → logprob: -17.125864028930664

Token 154: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -1.5451681974809617e-05
    2. 'L' → logprob: -11.875015258789062
    3. 'OL' → logprob: -12.625015258789062
    4. 'ulus' → logprob: -13.000015258789062
    5. 'US' → logprob: -13.750015258789062
    6. 'MOD' → logprob: -14.875015258789062
    7. 'ULE' → logprob: -15.125015258789062
    8. '```' → logprob: -15.250015258789062
    9. 'CUL' → logprob: -15.750015258789062
    10. 'ULO' → logprob: -15.750015258789062

Token 155: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6931561827659607
    2. 'US' → logprob: -0.6931561827659607
    3. '
' → logprob: -13.568156242370605
    4. '   ' → logprob: -13.693156242370605
    5. '\' → logprob: -13.943156242370605
    6. 'AS' → logprob: -14.068156242370605
    7. 'us' → logprob: -14.443156242370605
    8. '

' → logprob: -14.568156242370605
    9. 'УС' → logprob: -15.068156242370605
    10. '_S' → logprob: -15.193156242370605

Token 156: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.01116100512444973
    2. ',' → logprob: -4.511160850524902
    3. ' ,' → logprob: -9.636160850524902
    4. 'N' → logprob: -10.761160850524902
    5. ',n' → logprob: -11.886160850524902
    6. ',B' → logprob: -12.636160850524902
    7. ',int' → logprob: -12.636160850524902
    8. ',len' → logprob: -13.011160850524902
    9. '   ' → logprob: -13.386160850524902
    10. ',count' → logprob: -13.511160850524902

Token 157: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.057743949990254e-05
    2. ')' → logprob: -12.000020980834961
    3. ' )' → logprob: -12.000020980834961
    4. '+' → logprob: -12.750020980834961
    5. ']' → logprob: -13.125020980834961
    6. ')]
' → logprob: -13.375020980834961
    7. '))' → logprob: -14.750020980834961
    8. ')],' → logprob: -15.000020980834961
    9. ')]

' → logprob: -15.250020980834961
    10. ')}' → logprob: -16.25002098083496

Token 158: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019536320120096207
    2. '2' → logprob: -4.01953649520874
    3. ' ' → logprob: -7.39453649520874
    4. '10' → logprob: -7.76953649520874
    5. '5' → logprob: -8.769536018371582
    6. '3' → logprob: -8.769536018371582
    7. '7' → logprob: -11.894536018371582
    8. '100' → logprob: -11.894536018371582
    9. '+' → logprob: -12.394536018371582
    10. '4' → logprob: -12.394536018371582

Token 159: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.7729658540920354e-05
    2. ' )' → logprob: -11.250027656555176
    3. ')' → logprob: -11.375027656555176
    4. ']' → logprob: -13.750027656555176
    5. ')]
' → logprob: -14.375027656555176
    6. '))' → logprob: -14.875027656555176
    7. ')],' → logprob: -15.500027656555176
    8. '+' → logprob: -15.625027656555176
    9. ')]

' → logprob: -15.750027656555176
    10. ')][' → logprob: -15.750027656555176

Token 160: 'def' (ID: 1314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8660904765129089
    2. ')' → logprob: -1.2410905361175537
    3. '#' → logprob: -2.1160905361175537
    4. 'for' → logprob: -2.7410905361175537
    5. 'print' → logprob: -3.1160905361175537
    6. '[' → logprob: -4.741090297698975
    7. 'A' → logprob: -4.866090297698975
    8. 'def' → logprob: -5.241090297698975
    9. ')]' → logprob: -5.741090297698975
    10. 'x' → logprob: -5.741090297698975

Token 161: ' ext' (ID: 1936)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.33197909593582153
    2. ' main' → logprob: -1.5819790363311768
    3. ' pow' → logprob: -3.8319790363311768
    4. ' prefix' → logprob: -4.831979274749756
    5. ' f' → logprob: -4.956979274749756
    6. ' factorial' → logprob: -4.956979274749756
    7. 'solve' → logprob: -5.206979274749756
    8. ' factor' → logprob: -5.831979274749756
    9. ' comb' → logprob: -6.456979274749756
    10. ' compute' → logprob: -6.456979274749756

Token 162: '_e' (ID: 4618)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32205870747566223
    2. 'ended' → logprob: -1.9470586776733398
    3. 'end' → logprob: -2.32205867767334
    4. 'g' → logprob: -4.32205867767334
    5. 'reme' → logprob: -4.69705867767334
    6. 'endl' → logprob: -5.57205867767334
    7. 'ende' → logprob: -6.82205867767334
    8. '
' → logprob: -7.19705867767334
    9. '```' → logprob: -7.19705867767334
    10. 'e' → logprob: -7.19705867767334

Token 163: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4171988368034363
    2. 'g' → logprob: -1.792198896408081
    3. 'uc' → logprob: -2.042198896408081
    4. 'xt' → logprob: -3.667198896408081
    5. 'a' → logprob: -5.042198657989502
    6. 'ucl' → logprob: -5.292198657989502
    7. 'x' → logprob: -6.042198657989502
    8. 'e' → logprob: -6.042198657989502
    9. 'eu' → logprob: -7.292198657989502
    10. 'ea' → logprob: -7.667198657989502

Token 164: 'clid' (ID: 156121)
  Prédit: 'clid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.029786480590701103
    2. 'cl' → logprob: -3.5297865867614746
    3. 'l' → logprob: -11.029786109924316
    4. 'cli' → logprob: -11.404786109924316
    5. 'c' → logprob: -12.404786109924316
    6. 'clidean' → logprob: -13.154786109924316
    7. 'clr' → logprob: -14.529786109924316
    8. 'lc' → logprob: -14.779786109924316
    9. '_cl' → logprob: -14.779786109924316
    10. 'clf' → logprob: -14.904786109924316

Token 165: '(alpha' (ID: 82669)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00025561772054061294
    2. '(' → logprob: -8.375255584716797
    3. 'def' → logprob: -11.375255584716797
    4. 'a' → logprob: -12.250255584716797
    5. ' (' → logprob: -13.125255584716797
    6. '_(' → logprob: -13.250255584716797
    7. '_' → logprob: -13.875255584716797
    8. '(x' → logprob: -14.000255584716797
    9. '(b' → logprob: -14.750255584716797
    10. '(A' → logprob: -14.875255584716797

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16851069033145905
    2. ',a' → logprob: -1.9185106754302979
    3. ',b' → logprob: -6.043510913848877
    4. ' ,' → logprob: -6.168510913848877
    5. '(a' → logprob: -6.168510913848877
    6. 'a' → logprob: -6.543510913848877
    7. '_,' → logprob: -9.418510437011719
    8. 'alpha' → logprob: -10.418510437011719
    9. '   ' → logprob: -10.918510437011719
    10. ' a' → logprob: -10.918510437011719

Token 167: ' beta' (ID: 21306)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.00032747918157838285
    2. ' beta' → logprob: -8.125327110290527
    3. 'b' → logprob: -10.875327110290527
    4. 'bet' → logprob: -12.250327110290527
    5. 'omega' → logprob: -12.875327110290527
    6. 'beth' → logprob: -13.250327110290527
    7. 'br' → logprob: -13.500327110290527
    8. '_beta' → logprob: -14.375327110290527
    9. 'Beta' → logprob: -15.375327110290527
    10. '   ' → logprob: -15.625327110290527

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006025969050824642
    2. '):
' → logprob: -5.131025791168213
    3. '):
' → logprob: -9.756026268005371
    4. ')' → logprob: -10.506026268005371
    5. ' ):' → logprob: -11.506026268005371
    6. ':' → logprob: -13.881026268005371
    7. '):

' → logprob: -14.506026268005371
    8. '   ' → logprob: -16.256025314331055
    9. ',' → logprob: -16.506025314331055
    10. ' ):
' → logprob: -16.631025314331055

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10288172215223312
    2. ' if' → logprob: -2.352881669998169
    3. 'if' → logprob: -5.977881908416748
    4. '	if' → logprob: -9.72788143157959
    5. 'a' → logprob: -9.85288143157959
    6. ' a' → logprob: -10.97788143157959
    7. '    ' → logprob: -12.10288143157959
    8. '	a' → logprob: -13.85288143157959
    9. '    
' → logprob: -14.85288143157959
    10. '       ' → logprob: -15.35288143157959

Token 170: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.040572766214609146
    2. 'a' → logprob: -3.9155728816986084
    3. '   ' → logprob: -4.540572643280029
    4. ' if' → logprob: -4.915572643280029
    5. 'x' → logprob: -6.665572643280029
    6. 'old' → logprob: -8.540573120117188
    7. 's' → logprob: -9.040573120117188
    8. 'r' → logprob: -9.290573120117188
    9. ' a' → logprob: -9.415573120117188
    10. ' ' → logprob: -11.165573120117188

Token 171: ' unnecessary' (ID: 42963)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.052225109189748764
    2. ' if' → logprob: -3.177225112915039
    3. 'x' → logprob: -5.427225112915039
    4. 's' → logprob: -6.677225112915039
    5. 'r' → logprob: -6.802225112915039
    6. 'a' → logprob: -7.052225112915039
    7. 'old' → logprob: -7.177225112915039
    8. ' old' → logprob: -8.177225112915039
    9. '   ' → logprob: -8.802225112915039
    10. ' x' → logprob: -9.177225112915039

Token 172: ' tuple' (ID: 31311)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16154858469963074
    2. 'if' → logprob: -2.661548614501953
    3. 'def' → logprob: -3.036548614501953
    4. ' a' → logprob: -5.036548614501953
    5. 'a' → logprob: -5.161548614501953
    6. ' for' → logprob: -5.536548614501953
    7. 'alpha' → logprob: -5.661548614501953
    8. ' alpha' → logprob: -5.911548614501953
    9. ' code' → logprob: -6.161548614501953
    10. ' def' → logprob: -6.411548614501953

Token 173: ' unpack' (ID: 61704)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9783912897109985
    2. ' return' → logprob: -1.2283912897109985
    3. 's' → logprob: -2.103391170501709
    4. 'return' → logprob: -2.103391170501709
    5. '   ' → logprob: -3.228391170501709
    6. ',' → logprob: -4.853391170501709
    7. '<|end|>' → logprob: -4.978391170501709
    8. '=' → logprob: -5.103391170501709
    9. 'def' → logprob: -5.478391170501709
    10. ':' → logprob: -5.978391170501709

Token 174: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.4974866644479334e-05
    2. 'ng' → logprob: -11.500015258789062
    3. '=' → logprob: -12.875015258789062
    4. '#' → logprob: -14.500015258789062
    5. '   ' → logprob: -14.875015258789062
    6. 'return' → logprob: -15.125015258789062
    7. 'ed' → logprob: -15.375015258789062
    8. 'ling' → logprob: -15.625015258789062
    9. ' =' → logprob: -15.875015258789062
    10. '(' → logprob: -16.125015258789062

Token 175: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056322816759347916
    2. ',' → logprob: -3.1813228130340576
    3. '
' → logprob: -5.556323051452637
    4. '<|end|>' → logprob: -5.806323051452637
    5. ':' → logprob: -5.931323051452637
    6. ' for' → logprob: -6.931323051452637
    7. ' if' → logprob: -7.306323051452637
    8. '<|end|>' → logprob: -7.806323051452637
    9. ':
' → logprob: -8.431323051452637
    10. 'def' → logprob: -8.556323051452637

Token 176: ' odd' (ID: 14210)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9781660437583923
    2. 'x' → logprob: -1.478166103363037
    3. 'if' → logprob: -2.103166103363037
    4. ' a' → logprob: -2.353166103363037
    5. '   ' → logprob: -2.603166103363037
    6. ' x' → logprob: -2.728166103363037
    7. ' if' → logprob: -3.478166103363037
    8. 'return' → logprob: -5.978166103363037
    9. 'u' → logprob: -6.978166103363037
    10. ' return' → logprob: -7.103166103363037

Token 177: ' b' (ID: 287)
  Prédit: ' style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' style' → logprob: -0.6120110750198364
    2. '   ' → logprob: -1.7370110750198364
    3. ' indentation' → logprob: -2.737010955810547
    4. 'style' → logprob: -2.987010955810547
    5. 'def' → logprob: -3.237010955810547
    6. 'ly' → logprob: -3.737010955810547
    7. ' return' → logprob: -4.112010955810547
    8. 'return' → logprob: -4.112010955810547
    9. ' for' → logprob: -4.237010955810547
    10. ' ' → logprob: -4.612010955810547

Token 178: ' swap' (ID: 25489)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.06484492123126984
    2. 'uts' → logprob: -3.564844846725464
    3. 'reak' → logprob: -4.189845085144043
    4. 'def' → logprob: -5.439845085144043
    5. 'ecause' → logprob: -6.064845085144043
    6. '   ' → logprob: -6.189845085144043
    7. 'eta' → logprob: -6.439845085144043
    8. 'return' → logprob: -6.689845085144043
    9. ',' → logprob: -6.814845085144043
    10. ' =' → logprob: -7.064845085144043

Token 179: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01412566564977169
    2. ',' → logprob: -5.514125823974609
    3. '
' → logprob: -5.514125823974609
    4. '    
' → logprob: -6.389125823974609
    5. ':' → logprob: -7.014125823974609
    6. ' =' → logprob: -7.139125823974609
    7. ':
' → logprob: -7.264125823974609
    8. 'def' → logprob: -7.889125823974609
    9. '<|end|>' → logprob: -8.01412582397461
    10. ' ,' → logprob: -8.26412582397461

Token 180: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4212513864040375
    2. 'x' → logprob: -1.7962514162063599
    3. 'a' → logprob: -2.6712512969970703
    4. 'u' → logprob: -3.9212512969970703
    5. ' x' → logprob: -4.04625129699707
    6. 's' → logprob: -4.17125129699707
    7. 'return' → logprob: -4.54625129699707
    8. 'if' → logprob: -4.54625129699707
    9. 'def' → logprob: -4.54625129699707
    10. ' a' → logprob: -5.04625129699707

Token 181: ' variable' (ID: 11076)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3464010953903198
    2. 'def' → logprob: -1.5964010953903198
    3. 'a' → logprob: -2.2214012145996094
    4. 'extra' → logprob: -3.2214012145996094
    5. 'x' → logprob: -3.4714012145996094
    6. 'result' → logprob: -3.4714012145996094
    7. 'recursive' → logprob: -3.5964012145996094
    8. 'redu' → logprob: -3.7214012145996094
    9. 'c' → logprob: -3.8464012145996094
    10. 'verbose' → logprob: -3.8464012145996094

Token 182: ' ren' (ID: 5427)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3203909397125244
    2. 'names' → logprob: -1.6953909397125244
    3. 'n' → logprob: -1.9453909397125244
    4. 'ren' → logprob: -2.1953909397125244
    5. ' ren' → logprob: -2.6953909397125244
    6. ' naming' → logprob: -2.9453909397125244
    7. ' assignments' → logprob: -3.0703909397125244
    8. 'x' → logprob: -3.4453909397125244
    9. ' names' → logprob: -4.195390701293945
    10. '   ' → logprob: -4.445390701293945

Token 183: 'aming' (ID: 11300)
  Prédit: 'ames'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ames' → logprob: -0.06427943706512451
    2. 'aming' → logprob: -2.814279556274414
    3. '```' → logprob: -7.064279556274414
    4. 'a' → logprob: -7.564279556274414
    5. 'am' → logprob: -7.689279556274414
    6. 'ame' → logprob: -9.189279556274414
    7. '
' → logprob: -9.564279556274414
    8. '

' → logprob: -10.189279556274414
    9. 'ams' → logprob: -10.439279556274414
    10. 'amed' → logprob: -10.564279556274414

Token 184: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001494153286330402
    2. '    
' → logprob: -7.50149393081665
    3. '
' → logprob: -8.501494407653809
    4. ',' → logprob: -8.501494407653809
    5. 'def' → logprob: -8.751494407653809
    6. ':' → logprob: -8.751494407653809
    7. '):
' → logprob: -9.751494407653809
    8. ':
' → logprob: -9.876494407653809
    9. 'a' → logprob: -10.876494407653809
    10. '<|end|>' → logprob: -11.376494407653809

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031247176229953766
    2. 'def' → logprob: -6.628124713897705
    3. ' if' → logprob: -6.753124713897705
    4. 'a' → logprob: -8.253125190734863
    5. 'if' → logprob: -9.128125190734863
    6. ',' → logprob: -9.628125190734863
    7. ':' → logprob: -10.128125190734863
    8. '    ' → logprob: -10.753125190734863
    9. '
' → logprob: -10.878125190734863
    10. 'x' → logprob: -11.003125190734863

Token 186: ' P' (ID: 398)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.682131290435791
    2. 'if' → logprob: -1.432131290435791
    3. 'x' → logprob: -2.182131290435791
    4. 'old' → logprob: -3.432131290435791
    5. '   ' → logprob: -3.557131290435791
    6. 'r' → logprob: -4.307131290435791
    7. 's' → logprob: -4.432131290435791
    8. '(a' → logprob: -4.557131290435791
    9. 'u' → logprob: -4.807131290435791
    10. 'A' → logprob: -4.807131290435791

Token 187: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5238697528839111
    2. ',' → logprob: -1.8988697528839111
    3. 'rev' → logprob: -2.148869752883911
    4. 'a' → logprob: -3.148869752883911
    5. ',r' → logprob: -3.398869752883911
    6. ' =' → logprob: -3.648869752883911
    7. ',a' → logprob: -5.273869514465332
    8. '=' → logprob: -5.273869514465332
    9. '   ' → logprob: -5.398869514465332
    10. 'p' → logprob: -5.523869514465332

Token 188: ' (' (ID: 350)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.3270251452922821
    2. '0' → logprob: -1.9520251750946045
    3. 'alpha' → logprob: -2.0770251750946045
    4. '1' → logprob: -5.702024936676025
    5. '[' → logprob: -6.202024936676025
    6. 'b' → logprob: -6.327024936676025
    7. '(beta' → logprob: -6.577024936676025
    8. ' beta' → logprob: -7.327024936676025
    9. '(alpha' → logprob: -7.702024936676025
    10. '(' → logprob: -7.827024936676025

Token 189: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5780437588691711
    2. 'beta' → logprob: -1.4530436992645264
    3. '1' → logprob: -1.7030436992645264
    4. 'alpha' → logprob: -3.8280436992645264
    5. 'bb' → logprob: -8.703043937683105
    6. 'lambda' → logprob: -8.703043937683105
    7. ' beta' → logprob: -8.828043937683105
    8. 'b' → logprob: -9.078043937683105
    9. '(' → logprob: -9.328043937683105
    10. '(beta' → logprob: -9.578043937683105

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00943269208073616
    2. '0' → logprob: -4.759432792663574
    3. ' ,' → logprob: -7.634432792663574
    4. 'alpha' → logprob: -8.759432792663574
    5. '1' → logprob: -9.759432792663574
    6. '),' → logprob: -10.384432792663574
    7. ',),' → logprob: -11.009432792663574
    8. ' ' → logprob: -11.509432792663574
    9. ',P' → logprob: -11.759432792663574
    10. 'P' → logprob: -12.259432792663574

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008071291376836598
    2. ' ' → logprob: -7.125807285308838
    3. '   ' → logprob: -13.75080680847168
    4. '(' → logprob: -13.75080680847168
    5. '    ' → logprob: -15.62580680847168
    6. '  ' → logprob: -16.37580680847168
    7. '1' → logprob: -16.37580680847168
    8. '-' → logprob: -16.93830680847168
    9. ' (' → logprob: -17.12580680847168
    10. ',' → logprob: -17.25080680847168

Token 192: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1168077290058136
    2. ')' → logprob: -2.366807699203491
    3. ',' → logprob: -4.36680793762207
    4. '),' → logprob: -5.86680793762207
    5. '),(' → logprob: -7.86680793762207
    6. ' )
' → logprob: -8.86680793762207
    7. ')
' → logprob: -9.11680793762207
    8. ')

' → logprob: -9.24180793762207
    9. '   ' → logprob: -9.74180793762207
    10. ');' → logprob: -10.24180793762207

Token 193: 'alpha' (ID: 15453)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043221889063715935
    2. '1' → logprob: -9.000432014465332
    3. ')' → logprob: -9.125432014465332
    4. ' ' → logprob: -9.250432014465332
    5. 'alpha' → logprob: -9.500432014465332
    6. '(' → logprob: -11.375432014465332
    7. ')
' → logprob: -12.500432014465332
    8. '   ' → logprob: -12.625432014465332
    9. 'P' → logprob: -13.187932014465332
    10. '(alpha' → logprob: -13.562932014465332

Token 194: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03331276774406433
    2. ')' → logprob: -3.5333127975463867
    3. ' ,' → logprob: -6.033312797546387
    4. ')
' → logprob: -7.033312797546387
    5. ' )' → logprob: -9.033312797546387
    6. ',b' → logprob: -10.158312797546387
    7. 'beta' → logprob: -10.533312797546387
    8. ' )
' → logprob: -11.033312797546387
    9. ',B' → logprob: -11.408312797546387
    10. '),(' → logprob: -11.783312797546387

Token 195: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8111006617546082
    2. '   ' → logprob: -1.186100721359253
    3. ',Q' → logprob: -2.436100721359253
    4. 'Q' → logprob: -2.811100721359253
    5. ',' → logprob: -3.061100721359253
    6. 'while' → logprob: -3.811100721359253
    7. ' while' → logprob: -4.811100482940674
    8. ' Q' → logprob: -5.436100482940674
    9. '    
' → logprob: -5.561100482940674
    10. ',
' → logprob: -5.561100482940674

Token 196: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.03714640811085701
    2. 'while' → logprob: -3.4121463298797607
    3. 'A' → logprob: -7.53714656829834
    4. 'U' → logprob: -7.66214656829834
    5. 'q' → logprob: -7.78714656829834
    6. 'Y' → logprob: -7.91214656829834
    7. 'X' → logprob: -8.53714656829834
    8. 'O' → logprob: -8.66214656829834
    9. ' Q' → logprob: -8.78714656829834
    10. 'C' → logprob: -8.91214656829834

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327946782112122
    2. '=' → logprob: -0.7577946782112122
    3. '=(' → logprob: -8.757794380187988
    4. ' =(' → logprob: -10.757794380187988
    5. ' ' → logprob: -11.882794380187988
    6. '   ' → logprob: -12.007794380187988
    7. ',' → logprob: -13.507794380187988
    8. '=((' → logprob: -14.382794380187988
    9. '  ' → logprob: -14.757794380187988
    10. '=
' → logprob: -15.132794380187988

Token 198: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006753259804099798
    2. ' (' → logprob: -5.006753444671631
    3. '0' → logprob: -10.631752967834473
    4. ' ' → logprob: -12.006752967834473
    5. '   ' → logprob: -12.006752967834473
    6. '  ' → logprob: -14.381752967834473
    7. '[' → logprob: -15.131752967834473
    8. '    ' → logprob: -15.756752967834473
    9. '((' → logprob: -16.00675392150879
    10. '
' → logprob: -16.94425392150879

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010561492526903749
    2. '(' → logprob: -6.87605619430542
    3. ' ' → logprob: -11.001055717468262
    4. ')' → logprob: -13.001055717468262
    5. '1' → logprob: -13.126055717468262
    6. ' (' → logprob: -14.126055717468262
    7. '   ' → logprob: -14.251055717468262
    8. '[' → logprob: -15.251055717468262
    9. '-' → logprob: -15.626055717468262
    10. '  ' → logprob: -16.376056671142578

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021998681768309325
    2. ' ,' → logprob: -8.75022029876709
    3. '1' → logprob: -9.75022029876709
    4. ' ' → logprob: -13.50022029876709
    5. ',
' → logprob: -14.37522029876709
    6. ')' → logprob: -15.43772029876709
    7. '
' → logprob: -15.50022029876709
    8. '

' → logprob: -15.81272029876709
    9. '```' → logprob: -15.81272029876709
    10. '<|end|>' → logprob: -16.375219345092773

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. ',' → logprob: -20.5
    4. '   ' → logprob: -21.375
    5. '```' → logprob: -21.5
    6. '0' → logprob: -21.625
    7. '
' → logprob: -21.75
    8. '  ' → logprob: -21.875
    9. '۱' → logprob: -22.125
    10. 'P' → logprob: -22.125

Token 202: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.06205081567168236
    2. ',' → logprob: -2.8120508193969727
    3. ' ,' → logprob: -9.812050819396973
    4. ',B' → logprob: -11.312050819396973
    5. 'beta' → logprob: -12.062050819396973
    6. ',q' → logprob: -12.062050819396973
    7. ',
' → logprob: -14.062050819396973
    8. ',p' → logprob: -14.187050819396973
    9. ',Q' → logprob: -14.937050819396973
    10. ',int' → logprob: -15.312050819396973

Token 203: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -0.005240156780928373
    2. 'beta' → logprob: -5.255239963531494
    3. 'et' → logprob: -13.130240440368652
    4. 'alpha' → logprob: -14.005240440368652
    5. 'e' → logprob: -14.380240440368652
    6. '(beta' → logprob: -14.380240440368652
    7. 'etha' → logprob: -14.755240440368652
    8. '_beta' → logprob: -14.880240440368652
    9. ' beta' → logprob: -15.130240440368652
    10. 'ETA' → logprob: -15.505240440368652

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4290773272514343
    2. ')
' → logprob: -1.054077386856079
    3. ')

' → logprob: -8.1790771484375
    4. '   ' → logprob: -9.5540771484375
    5. ')
' → logprob: -11.0540771484375
    6. ' )' → logprob: -12.5540771484375
    7. ' )
' → logprob: -12.5540771484375
    8. '):
' → logprob: -15.3040771484375
    9. '),' → logprob: -15.4290771484375
    10. ' ' → logprob: -15.6790771484375

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16987687349319458
    2. ' while' → logprob: -2.29487681388855
    3. 'while' → logprob: -3.16987681388855
    4. '<|end|>' → logprob: -5.044877052307129
    5. '
' → logprob: -5.544877052307129
    6. '	while' → logprob: -6.794877052307129
    7. ')' → logprob: -7.044877052307129
    8. '    
' → logprob: -7.044877052307129
    9. 'def' → logprob: -9.669877052307129
    10. ',' → logprob: -10.669877052307129

Token 206: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014196186326444149
    2. ' while' → logprob: -4.264196395874023
    3. '   ' → logprob: -10.389196395874023
    4. '	while' → logprob: -13.514196395874023
    5. 'While' → logprob: -16.139196395874023
    6. '
' → logprob: -16.264196395874023
    7. 'def' → logprob: -16.264196395874023
    8. '    
' → logprob: -16.764196395874023
    9. ' ' → logprob: -18.014196395874023
    10. 'w' → logprob: -18.514196395874023

Token 207: ' P' (ID: 398)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.006754324771463871
    2. ' Q' → logprob: -5.006754398345947
    3. 'P' → logprob: -10.506753921508789
    4. '(Q' → logprob: -12.131753921508789
    5. '   ' → logprob: -12.756753921508789
    6. ' ' → logprob: -13.381753921508789
    7. '	Q' → logprob: -13.756753921508789
    8. ' P' → logprob: -15.506753921508789
    9. 'not' → logprob: -15.756753921508789
    10. 'True' → logprob: -15.756753921508789

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003687053394969553
    2. '>[' → logprob: -9.50036907196045
    3. ' [' → logprob: -9.62536907196045
    4. '][' → logprob: -10.00036907196045
    5. '0' → logprob: -10.25036907196045
    6. '>' → logprob: -10.37536907196045
    7. ')[' → logprob: -10.50036907196045
    8. '!=' → logprob: -11.62536907196045
    9. '=' → logprob: -11.75036907196045
    10. '__[' → logprob: -12.12536907196045

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.980854959692806e-05
    2. '[' → logprob: -10.750069618225098
    3. '-' → logprob: -11.375069618225098
    4. '```' → logprob: -11.375069618225098
    5. '
' → logprob: -11.750069618225098
    6. '3' → logprob: -12.000069618225098
    7. ' ' → logprob: -12.750069618225098
    8. '0' → logprob: -13.187569618225098
    9. '#' → logprob: -13.625069618225098
    10. '(' → logprob: -13.687569618225098

Token 210: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5341625809669495
    2. '!=' → logprob: -1.0341625213623047
    3. '>' → logprob: -3.0341625213623047
    4. ' >' → logprob: -4.659162521362305
    5. '>=' → logprob: -8.409162521362305
    6. ' >=' → logprob: -8.534162521362305
    7. ' and' → logprob: -9.659162521362305
    8. ' ' → logprob: -10.034162521362305
    9. 'and' → logprob: -10.409162521362305
    10. ']!=' → logprob: -10.409162521362305

Token 211: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0264283418655396
    2. ' !=' → logprob: -1.4014283418655396
    3. '!=' → logprob: -1.6514283418655396
    4. ' >' → logprob: -1.6514283418655396
    5. ' >=' → logprob: -5.15142822265625
    6. '>=' → logprob: -5.15142822265625
    7. ' and' → logprob: -9.65142822265625
    8. 'and' → logprob: -9.65142822265625
    9. ' ' → logprob: -9.90142822265625
    10. '!' → logprob: -10.15142822265625

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043257648940198123
    2. ' ' → logprob: -7.75043249130249
    3. '1' → logprob: -13.250432968139648
    4. '   ' → logprob: -16.62543296813965
    5. 'Q' → logprob: -18.87543296813965
    6. '  ' → logprob: -19.12543296813965
    7. '```' → logprob: -19.37543296813965
    8. '
' → logprob: -19.93793296813965
    9. ' Q' → logprob: -20.37543296813965
    10. '

' → logprob: -20.81293296813965

Token 213: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. '1' → logprob: -14.500296592712402
    4. '   ' → logprob: -16.62529754638672
    5. 'Q' → logprob: -17.06279754638672
    6. '  ' → logprob: -17.81279754638672
    7. '```' → logprob: -18.18779754638672
    8. 'P' → logprob: -18.56279754638672
    9. ' Q' → logprob: -18.75029754638672
    10. ' ' → logprob: -19.18779754638672

Token 214: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09019766747951508
    2. ':
' → logprob: -2.8401975631713867
    3. ':' → logprob: -3.9651975631713867
    4. 'and' → logprob: -4.840197563171387
    5. '   ' → logprob: -7.340197563171387
    6. ' :
' → logprob: -9.340197563171387
    7. ' ' → logprob: -9.840197563171387
    8. '):
' → logprob: -10.340197563171387
    9. ',' → logprob: -10.340197563171387
    10. ' :' → logprob: -10.590197563171387

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5198134779930115
    2. '   ' → logprob: -1.3948135375976562
    3. ' if' → logprob: -2.7698135375976562
    4. '    ' → logprob: -3.3948135375976562
    5. ',' → logprob: -4.269813537597656
    6. ' q' → logprob: -4.769813537597656
    7. 'q' → logprob: -5.394813537597656
    8. ' p' → logprob: -5.769813537597656
    9. ' ,' → logprob: -5.769813537597656
    10. 'a' → logprob: -6.144813537597656

Token 216: ' k' (ID: 372)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05584662780165672
    2. 'k' (adapté à ' k') → logprob: -3.305846691131592
    3. ' q' → logprob: -5.305846691131592
    4. 'Q' → logprob: -5.430846691131592
    5. 'c' → logprob: -6.055846691131592
    6. 'a' → logprob: -7.055846691131592
    7. '   ' → logprob: -7.180846691131592
    8. 'quot' → logprob: -7.555846691131592
    9. 'K' → logprob: -7.680846691131592
    10. 'd' → logprob: -7.805846691131592

Token 217: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10132338106632233
    2. '=' → logprob: -2.351323366165161
    3. ',' → logprob: -6.97632360458374
    4. '=k' → logprob: -9.476323127746582
    5. ',k' → logprob: -9.476323127746582
    6. ' ,' → logprob: -11.851323127746582
    7. '=int' → logprob: -12.101323127746582
    8. '=(' → logprob: -12.476323127746582
    9. '    ' → logprob: -13.476323127746582
    10. ' =(' → logprob: -13.476323127746582

Token 218: ' r' (ID: 428)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6585233807563782
    2. 'P' → logprob: -1.2835233211517334
    3. 'r' → logprob: -2.4085233211517334
    4. 'Q' → logprob: -3.5335233211517334
    5. 'p' → logprob: -3.5335233211517334
    6. 'm' → logprob: -4.1585235595703125
    7. 'l' → logprob: -4.6585235595703125
    8. 'k' → logprob: -4.6585235595703125
    9. '(P' → logprob: -5.4085235595703125
    10. 'a' → logprob: -6.0335235595703125

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270683854818344
    2. ' =' → logprob: -2.127068281173706
    3. ',' → logprob: -9.377068519592285
    4. '=(' → logprob: -10.627068519592285
    5. ' ' → logprob: -11.502068519592285
    6. '=k' → logprob: -11.877068519592285
    7. '=((' → logprob: -12.127068519592285
    8. '=P' → logprob: -13.002068519592285
    9. ' =(' → logprob: -13.252068519592285
    10. '   ' → logprob: -13.377068519592285

Token 220: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5872244834899902
    2. 'Q' → logprob: -0.8372244834899902
    3. 'P' → logprob: -5.33722448348999
    4. ' Q' → logprob: -5.71222448348999
    5. ' div' → logprob: -5.96222448348999
    6. '   ' → logprob: -8.587224960327148
    7. ' ' → logprob: -9.212224960327148
    8. '(div' → logprob: -9.337224960327148
    9. '(Q' → logprob: -9.462224960327148
    10. ' P' → logprob: -10.087224960327148

Token 221: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006300011184066534
    2. '(P' → logprob: -5.13129997253418
    3. 'P' → logprob: -8.13129997253418
    4. ' P' → logprob: -10.75629997253418
    5. ',P' → logprob: -10.75629997253418
    6. '(Q' → logprob: -11.63129997253418
    7. '(' → logprob: -12.38129997253418
    8. ',' → logprob: -12.63129997253418
    9. '=P' → logprob: -13.38129997253418
    10. '(
' → logprob: -13.38129997253418

Token 222: '(Q' (ID: 14437)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.8199855089187622
    2. 'P' → logprob: -1.0699855089187622
    3. '(Q' → logprob: -1.8199855089187622
    4. 'Q' → logprob: -2.9449853897094727
    5. '   ' → logprob: -6.319985389709473
    6. '       ' → logprob: -9.569985389709473
    7. '(' → logprob: -10.819985389709473
    8. ' P' → logprob: -11.569985389709473
    9. ' Q' → logprob: -12.319985389709473
    10. '(
' → logprob: -13.194985389709473

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001337624154984951
    2. '2' → logprob: -6.62633752822876
    3. '3' → logprob: -13.251338005065918
    4. '0' → logprob: -13.376338005065918
    5. '   ' → logprob: -13.501338005065918
    6. '```' → logprob: -13.501338005065918
    7. ' ' → logprob: -14.251338005065918
    8. '1' → logprob: -14.376338005065918
    9. '#' → logprob: -14.501338005065918
    10. ')' → logprob: -14.626338005065918

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020246754866093397
    2. '[' → logprob: -8.625202178955078
    3. ' ' → logprob: -11.000202178955078
    4. '```' → logprob: -13.125202178955078
    5. '(' → logprob: -14.187702178955078
    6. '   ' → logprob: -14.375202178955078
    7. '
' → logprob: -14.687702178955078
    8. '1' → logprob: -15.062702178955078
    9. '0' → logprob: -15.250202178955078
    10. '#' → logprob: -15.312702178955078

Token 225: '],' (ID: 2155)
  Prédit: ',P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',P' → logprob: -0.2709186375141144
    2. ',' → logprob: -1.645918607711792
    3. '[' → logprob: -3.270918607711792
    4. ' ,' → logprob: -5.395918846130371
    5. ',Q' → logprob: -6.520918846130371
    6. 'P' → logprob: -8.395918846130371
    7. '0' → logprob: -8.770918846130371
    8. '   ' → logprob: -11.270918846130371
    9. '),' → logprob: -11.270918846130371
    10. ',N' → logprob: -11.395918846130371

Token 226: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.107425062713446e-06
    2. ' P' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.125006675720215
    4. ')' → logprob: -15.250006675720215
    5. '       ' → logprob: -15.750006675720215
    6. ',P' → logprob: -16.75000762939453
    7. '           ' → logprob: -17.25000762939453
    8. '	P' → logprob: -17.62500762939453
    9. '=P' → logprob: -17.87500762939453
    10. '
' → logprob: -18.00000762939453

Token 227: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001830346300266683
    2. '[' → logprob: -6.376830577850342
    3. '0' → logprob: -9.376830101013184
    4. '(' → logprob: -10.876830101013184
    5. ' ' → logprob: -10.876830101013184
    6. '```' → logprob: -12.501830101013184
    7. '#' → logprob: -14.251830101013184
    8. '1' → logprob: -14.876830101013184
    9. ')' → logprob: -15.626830101013184
    10. ''s' → logprob: -15.876830101013184

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.250001907348633
    4. '[' → logprob: -17.750001907348633
    5. '۲' → logprob: -19.312501907348633
    6. '   ' → logprob: -19.500001907348633
    7. '0' → logprob: -19.937501907348633
    8. '  ' → logprob: -20.187501907348633
    9. ']' → logprob: -20.250001907348633
    10. '1' → logprob: -20.500001907348633

Token 229: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2520386278629303
    2. ')' → logprob: -1.502038598060608
    3. ')

' → logprob: -9.377038955688477
    4. ' )
' → logprob: -11.377038955688477
    5. ')
' → logprob: -11.627038955688477
    6. ' )' → logprob: -13.002038955688477
    7. '   ' → logprob: -14.377038955688477
    8. ')[' → logprob: -15.127038955688477
    9. ');' → logprob: -15.252038955688477
    10. ')`
' → logprob: -15.502038955688477

Token 230: '       ' (ID: 309)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.7038060426712036
    2. 'P' → logprob: -1.5788060426712036
    3. '       ' → logprob: -1.7038060426712036
    4. 'R' → logprob: -3.078805923461914
    5. '   ' → logprob: -3.828805923461914
    6. ' Q' → logprob: -4.578805923461914
    7. '(' → logprob: -5.203805923461914
    8. ' P' → logprob: -5.203805923461914
    9. '(P' → logprob: -5.828805923461914
    10. '(Q' → logprob: -5.828805923461914

Token 231: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.2842613756656647
    2. 'Q' → logprob: -1.6592613458633423
    3. 'R' → logprob: -3.159261465072632
    4. 'A' → logprob: -5.784261226654053
    5. 'S' → logprob: -6.534261226654053
    6. 'M' → logprob: -6.534261226654053
    7. 'N' → logprob: -6.659261226654053
    8. '   ' → logprob: -6.784261226654053
    9. 'U' → logprob: -6.784261226654053
    10. 'X' → logprob: -7.034261226654053

Token 232: ',' (ID: 11)
  Prédit: ',Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Q' → logprob: -0.314544677734375
    2. ',' → logprob: -1.314544677734375
    3. '=' → logprob: -6.689544677734375
    4. ',q' → logprob: -11.314544677734375
    5. ' ,' → logprob: -11.439544677734375
    6. 'Q' → logprob: -12.439544677734375
    7. ',r' → logprob: -12.564544677734375
    8. ',k' → logprob: -12.814544677734375
    9. ',P' → logprob: -13.689544677734375
    10. ' =' → logprob: -13.814544677734375

Token 233: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.058623332530260086
    2. '(' → logprob: -3.4336233139038086
    3. '(Q' → logprob: -4.058623313903809
    4. '(k' → logprob: -5.183623313903809
    5. '(r' → logprob: -7.308623313903809
    6. '((' → logprob: -8.558623313903809
    7. '(
' → logprob: -8.683623313903809
    8. ' Q' → logprob: -8.683623313903809
    9. 'k' → logprob: -8.808623313903809
    10. 'r' → logprob: -9.058623313903809

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012547093443572521
    2. ' =' → logprob: -4.387547016143799
    3. '=(' → logprob: -10.262547492980957
    4. '=
' → logprob: -14.387547492980957
    5. 'Q' → logprob: -14.512547492980957
    6. '   ' → logprob: -14.637547492980957
    7. ' =(' → logprob: -15.137547492980957
    8. ',' → logprob: -15.762547492980957
    9. '=((' → logprob: -16.26254653930664
    10. '=('' → logprob: -16.38754653930664

Token 235: ' (' (ID: 350)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.03465341776609421
    2. 'Q' → logprob: -3.784653425216675
    3. '(' → logprob: -4.659653186798096
    4. ' (' → logprob: -7.534653186798096
    5. '((' → logprob: -7.534653186798096
    6. '(
' → logprob: -7.909653186798096
    7. '(k' → logprob: -8.909653663635254
    8. ' Q' → logprob: -9.159653663635254
    9. '(q' → logprob: -9.784653663635254
    10. '(P' → logprob: -10.284653663635254

Token 236: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.07457084208726883
    2. '(Q' → logprob: -2.699570894241333
    3. '(' → logprob: -6.449570655822754
    4. '(r' → logprob: -6.949570655822754
    5. 'r' → logprob: -7.449570655822754
    6. '(
' → logprob: -7.699570655822754
    7. '(k' → logprob: -7.824570655822754
    8. ' Q' → logprob: -9.074570655822754
    9. 'q' → logprob: -9.199570655822754
    10. 'k' → logprob: -9.199570655822754

Token 237: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009031229419633746
    2. '0' → logprob: -7.375903129577637
    3. '1' → logprob: -8.875903129577637
    4. '
' → logprob: -9.500903129577637
    5. '),' → logprob: -11.250903129577637
    6. ',' → logprob: -11.625903129577637
    7. 'P' → logprob: -11.625903129577637
    8. ')' → logprob: -11.875903129577637
    9. '(' → logprob: -12.000903129577637
    10. '2' → logprob: -12.625903129577637

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004463231656700373
    2. '1' → logprob: -6.254463195800781
    3. '[' → logprob: -6.879463195800781
    4. 'i' → logprob: -7.254463195800781
    5. '2' → logprob: -8.004463195800781
    6. 'k' → logprob: -8.754463195800781
    7. '(' → logprob: -9.754463195800781
    8. ')' → logprob: -9.879463195800781
    9. '[i' → logprob: -10.129463195800781
    10. '
' → logprob: -10.254463195800781

Token 239: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043708622455596924
    2. '-' → logprob: -4.043708801269531
    3. ',' → logprob: -4.793708801269531
    4. '1' → logprob: -5.293708801269531
    5. ' -' → logprob: -5.418708801269531
    6. '0' → logprob: -5.918708801269531
    7. 'Q' → logprob: -6.543708801269531
    8. '-P' → logprob: -7.293708801269531
    9. 'P' → logprob: -7.668708801269531
    10. '-Q' → logprob: -7.668708801269531

Token 240: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. ' k' → logprob: -14.250001907348633
    3. 'P' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '
' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. '
' → logprob: -17.750001907348633
    8. ' ' → logprob: -18.750001907348633
    9. '    ' → logprob: -19.375001907348633
    10. '  ' → logprob: -19.375001907348633

Token 241: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.386147626675665e-05
    2. 'P' → logprob: -9.625073432922363
    3. ' *' → logprob: -12.125073432922363
    4. '[P' → logprob: -14.375073432922363
    5. '[' → logprob: -14.500073432922363
    6. ' P' → logprob: -15.125073432922363
    7. ',P' → logprob: -15.500073432922363
    8. '```' → logprob: -15.500073432922363
    9. '**' → logprob: -16.00007438659668
    10. '"P' → logprob: -16.37507438659668

Token 242: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.318681188422488e-05
    2. ' P' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.12501335144043
    4. '	P' → logprob: -15.37501335144043
    5. '[' → logprob: -15.50001335144043
    6. ' ' → logprob: -15.62501335144043
    7. '  ' → logprob: -16.12501335144043
    8. ',P' → logprob: -16.75001335144043
    9. '[P' → logprob: -16.87501335144043
    10. '       ' → logprob: -17.50001335144043

Token 243: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014370749704539776
    2. '1' → logprob: -9.125144004821777
    3. '[' → logprob: -10.375144004821777
    4. ' ' → logprob: -12.625144004821777
    5. '   ' → logprob: -15.750144004821777
    6. '(' → logprob: -16.12514305114746
    7. '
' → logprob: -18.50014305114746
    8. ',' → logprob: -18.75014305114746
    9. '  ' → logprob: -19.12514305114746
    10. '```' → logprob: -19.12514305114746

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '[' → logprob: -16.75
    4. '1' → logprob: -19.5
    5. '۰' → logprob: -19.75
    6. '   ' → logprob: -20.25
    7. '
' → logprob: -22.375
    8. '０' → logprob: -22.375
    9. '(' → logprob: -22.375
    10. '  ' → logprob: -23.0

Token 245: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06365981698036194
    2. ',Q' → logprob: -2.813659906387329
    3. ' ,' → logprob: -6.43865966796875
    4. '),' → logprob: -10.06365966796875
    5. ',
' → logprob: -10.68865966796875
    6. ',),' → logprob: -11.68865966796875
    7. '),(' → logprob: -12.56365966796875
    8. ' ),' → logprob: -12.68865966796875
    9. ',P' → logprob: -12.81365966796875
    10. ',

' → logprob: -13.18865966796875

Token 246: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -7.362307223957032e-05
    2. ' Q' → logprob: -9.750073432922363
    3. '	Q' → logprob: -11.750073432922363
    4. '   ' → logprob: -12.625073432922363
    5. '(Q' → logprob: -13.750073432922363
    6. ' ' → logprob: -13.875073432922363
    7. '       ' → logprob: -14.875073432922363
    8. '  ' → logprob: -14.875073432922363
    9. '     ' → logprob: -14.875073432922363
    10. '    ' → logprob: -15.000073432922363

Token 247: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0699753388762474
    2. '[' → logprob: -2.6949753761291504
    3. ',' → logprob: -11.694974899291992
    4. '.' → logprob: -11.944974899291992
    5. ' ' → logprob: -12.069974899291992
    6. '-' → logprob: -12.319974899291992
    7. '(' → logprob: -13.194974899291992
    8. '<|end|>' → logprob: -13.194974899291992
    9. '```' → logprob: -13.694974899291992
    10. '<|end|>' → logprob: -13.694974899291992

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '
' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '۱' → logprob: -17.812501907348633
    7. '১' → logprob: -18.125001907348633
    8. '' → logprob: -18.500001907348633
    9. '0' → logprob: -18.625001907348633
    10. '#' → logprob: -18.750001907348633

Token 249: ']-' (ID: 27107)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.045963894575834274
    2. '-' → logprob: -3.795964002609253
    3. ' -' → logprob: -3.795964002609253
    4. ' ' → logprob: -14.920964241027832
    5. '-
' → logprob: -16.545963287353516
    6. '-n' → logprob: -16.795963287353516
    7. '-K' → logprob: -16.920963287353516
    8. '' → logprob: -17.045963287353516
    9. '-m' → logprob: -17.045963287353516
    10. '-b' → logprob: -17.170963287353516

Token 250: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.8889261304575484e-06
    2. ' k' → logprob: -12.500003814697266
    3. ' ' → logprob: -17.500003814697266
    4. 'P' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '  ' → logprob: -18.750003814697266
    7. '	k' → logprob: -18.875003814697266
    8. '<|end|>' → logprob: -18.875003814697266
    9. '```' → logprob: -19.000003814697266
    10. ',k' → logprob: -19.375003814697266

Token 251: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -2.2246291337069124e-05
    2. 'P' → logprob: -10.750021934509277
    3. ' *' → logprob: -14.250021934509277
    4. '[' → logprob: -17.250022888183594
    5. '*
' → logprob: -17.875022888183594
    6. '*[' → logprob: -18.750022888183594
    7. '[P' → logprob: -18.875022888183594
    8. ' P' → logprob: -19.000022888183594
    9. '
' → logprob: -19.375022888183594
    10. '...' → logprob: -19.375022888183594

Token 252: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -6.704273118884885e-07
    2. ' P' → logprob: -14.250000953674316
    3. '(P' → logprob: -19.5
    4. '[' → logprob: -19.875
    5. ',P' → logprob: -20.625
    6. '-P' → logprob: -20.625
    7. '[P' → logprob: -20.875
    8. '...' → logprob: -21.375
    9. '   ' → logprob: -21.5
    10. ',' → logprob: -21.75

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023095356300473213
    2. '1' → logprob: -8.37523078918457
    3. '-' → logprob: -16.12523078918457
    4. '(' → logprob: -16.62523078918457
    5. '
' → logprob: -16.62523078918457
    6. '0' → logprob: -16.75023078918457
    7. '```' → logprob: -16.87523078918457
    8. '   ' → logprob: -17.75023078918457
    9. '#' → logprob: -18.12523078918457
    10. '[
' → logprob: -18.25023078918457

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018029935017693788
    2. '[' → logprob: -8.6251802444458
    3. '0' → logprob: -15.1251802444458
    4. '
' → logprob: -15.7501802444458
    5. '(' → logprob: -16.250181198120117
    6. '```' → logprob: -16.750181198120117
    7. '   ' → logprob: -17.000181198120117
    8. '2' → logprob: -17.500181198120117
    9. ' ' → logprob: -17.625181198120117
    10. '１' → logprob: -18.437681198120117

Token 255: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016849361127242446
    2. ',Q' → logprob: -6.75168514251709
    3. ' ,' → logprob: -7.62668514251709
    4. '),' → logprob: -10.62668514251709
    5. ',P' → logprob: -13.25168514251709
    6. ')' → logprob: -14.62668514251709
    7. 'Q' → logprob: -15.75168514251709
    8. '   ' → logprob: -16.001684188842773
    9. ',
' → logprob: -16.376684188842773
    10. '[' → logprob: -16.626684188842773

Token 256: ' r' (ID: 428)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.010797727853059769
    2. 'P' → logprob: -4.635797500610352
    3. 'r' → logprob: -6.885797500610352
    4. ' Q' → logprob: -11.010797500610352
    5. 'R' → logprob: -14.135797500610352
    6. '(Q' → logprob: -14.510797500610352
    7. '  ' → logprob: -14.885797500610352
    8. ' ' → logprob: -15.010797500610352
    9. '   ' → logprob: -15.260797500610352
    10. ' P' → logprob: -16.13579750061035

Token 257: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016838706796988845
    2. '),' → logprob: -6.501683712005615
    3. ')
' → logprob: -8.626684188842773
    4. ' )' → logprob: -13.501684188842773
    5. ')

' → logprob: -14.876684188842773
    6. '),(' → logprob: -15.501684188842773
    7. '   ' → logprob: -15.501684188842773
    8. ')
' → logprob: -16.001684188842773
    9. ' ),' → logprob: -18.376684188842773
    10. ')#' → logprob: -18.376684188842773

Token 258: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00038455575122497976
    2. '(P' → logprob: -8.000384330749512
    3. ' P' → logprob: -10.125384330749512
    4. '   ' → logprob: -11.875384330749512
    5. '(' → logprob: -13.875384330749512
    6. ' (' → logprob: -15.000384330749512
    7. '    ' → logprob: -15.000384330749512
    8. '	P' → logprob: -16.125385284423828
    9. ' ' → logprob: -16.375385284423828
    10. '     ' → logprob: -16.625385284423828

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016713829711079597
    2. 'def' → logprob: -4.766713619232178
    3. '<|end|>' → logprob: -5.016713619232178
    4. '
' → logprob: -7.141713619232178
    5. 'return' → logprob: -7.641713619232178
    6. '    
' → logprob: -9.641714096069336
    7. '<|end|>' → logprob: -10.766714096069336
    8. ' return' → logprob: -10.891714096069336
    9. ')' → logprob: -11.266714096069336
    10. '       ' → logprob: -11.641714096069336

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1446722000837326
    2. '<|end|>' → logprob: -2.144672155380249
    3. ')' → logprob: -4.144672393798828
    4. 'return' → logprob: -7.394672393798828
    5. '[' → logprob: -7.894672393798828
    6. '       ' → logprob: -9.394672393798828
    7. '    
' → logprob: -9.769672393798828
    8. '(' → logprob: -9.894672393798828
    9. '
' → logprob: -9.894672393798828
    10. ' ' → logprob: -10.019672393798828

Token 261: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040349751710891724
    2. 'return' (adapté à ' return') → logprob: -3.2903497219085693
    3. ')' → logprob: -6.915349960327148
    4. '(' → logprob: -7.415349960327148
    5. ' return' → logprob: -7.915349960327148
    6. '<|end|>' → logprob: -9.290349960327148
    7. ')return' → logprob: -9.415349960327148
    8. '	return' → logprob: -10.165349960327148
    9. '(P' → logprob: -10.665349960327148
    10. 'result' → logprob: -11.165349960327148

Token 262: ' (' (ID: 350)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.478885293006897
    2. '(P' → logprob: -1.103885293006897
    3. '(Q' → logprob: -3.7288851737976074
    4. 'Q' → logprob: -3.7288851737976074
    5. ' (' → logprob: -7.728885173797607
    6. ' P' → logprob: -7.853885173797607
    7. '(' → logprob: -10.353885650634766
    8. ' Q' → logprob: -11.103885650634766
    9. '((' → logprob: -11.353885650634766
    10. '(-' → logprob: -11.478885650634766

Token 263: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004485900513827801
    2. 'Q' → logprob: -5.754486083984375
    3. ' P' → logprob: -7.004486083984375
    4. '(P' → logprob: -8.129486083984375
    5. '   ' → logprob: -10.254486083984375
    6. '(Q' → logprob: -11.004486083984375
    7. ' (' → logprob: -11.254486083984375
    8. ' Q' → logprob: -11.879486083984375
    9. ')' → logprob: -12.004486083984375
    10. '-P' → logprob: -12.004486083984375

Token 264: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12699131667613983
    2. '[' → logprob: -2.1269912719726562
    3. ')' → logprob: -10.251991271972656
    4. '(' → logprob: -11.126991271972656
    5. ' ' → logprob: -12.626991271972656
    6. '1' → logprob: -12.751991271972656
    7. '[:' → logprob: -12.751991271972656
    8. '[:-' → logprob: -14.126991271972656
    9. '#' → logprob: -14.251991271972656
    10. ')[' → logprob: -15.001991271972656

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.919942486798391e-05
    2. '1' → logprob: -9.875059127807617
    3. '
' → logprob: -12.250059127807617
    4. '```' → logprob: -14.000059127807617
    5. '

' → logprob: -15.250059127807617
    6. '[' → logprob: -15.500059127807617
    7. ',' → logprob: -15.687559127807617
    8. ' ' → logprob: -15.687559127807617
    9. '2' → logprob: -15.812559127807617
    10. ':' → logprob: -16.062559127807617

Token 266: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009018931537866592
    2. '%' → logprob: -5.509018898010254
    3. ',P' → logprob: -6.009018898010254
    4. ' ,' → logprob: -6.134018898010254
    5. ' %' → logprob: -8.884018898010254
    6. ')' → logprob: -9.134018898010254
    7. '%,' → logprob: -10.259018898010254
    8. '<|end|>' → logprob: -12.009018898010254
    9. '+' → logprob: -12.384018898010254
    10. ',Q' → logprob: -13.009018898010254

Token 267: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00015860427811276168
    2. ' P' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -18.000158309936523
    4. '   ' → logprob: -18.500158309936523
    5. '	P' → logprob: -19.625158309936523
    6. '  ' → logprob: -19.875158309936523
    7. ' ' → logprob: -20.000158309936523
    8. ')' → logprob: -20.125158309936523
    9. '    ' → logprob: -21.500158309936523
    10. '(P' → logprob: -21.625158309936523

Token 268: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018327576981391758
    2. '1' → logprob: -8.62518310546875
    3. ',' → logprob: -12.87518310546875
    4. '[
' → logprob: -15.00018310546875
    5. '-' → logprob: -15.75018310546875
    6. ')' → logprob: -15.87518310546875
    7. '```' → logprob: -16.37518310546875
    8. '![' → logprob: -16.50018310546875
    9. '#' → logprob: -16.62518310546875
    10. '
' → logprob: -17.12518310546875

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '2' → logprob: -14.000001907348633
    3. '
' → logprob: -15.375001907348633
    4. '```' → logprob: -16.000001907348633
    5. '[' → logprob: -16.125001907348633
    6. '-' → logprob: -16.375001907348633
    7. '

' → logprob: -17.937501907348633
    8. '#' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.375001907348633

Token 270: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.064297824399546e-05
    2. ' )' → logprob: -9.625070571899414
    3. '<|end|>' → logprob: -12.875070571899414
    4. ')
' → logprob: -13.750070571899414
    5. '}' → logprob: -14.750070571899414
    6. ')}' → logprob: -16.000070571899414
    7. ',' → logprob: -16.125070571899414
    8. '),' → logprob: -16.250070571899414
    9. ')#' → logprob: -16.250070571899414
    10. ')return' → logprob: -17.625070571899414

Token 271: 'inv' (ID: 31086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1360434591770172
    2. 'def' → logprob: -2.7610435485839844
    3. '#' → logprob: -3.2610435485839844
    4. '^' → logprob: -5.261043548583984
    5. '<|end|>' → logprob: -5.261043548583984
    6. '(' → logprob: -5.511043548583984
    7. ',' → logprob: -6.511043548583984
    8. '*' → logprob: -6.511043548583984
    9. 'B' → logprob: -7.011043548583984
    10. ')^' → logprob: -7.386043548583984

Token 272: 'mod' (ID: 4847)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017188621684908867
    2. '=' → logprob: -4.892188549041748
    3. '(' → logprob: -5.767188549041748
    4. ' =' → logprob: -6.142188549041748
    5. '_mod' → logprob: -6.267188549041748
    6. '_=' → logprob: -6.892188549041748
    7. 's' → logprob: -8.142189025878906
    8. 'mod' → logprob: -8.767189025878906
    9. ')' → logprob: -8.892189025878906
    10. 'MOD' → logprob: -9.142189025878906

Token 273: '_c' (ID: 1303)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5447580218315125
    2. '=' → logprob: -1.6697580814361572
    3. '_' → logprob: -1.7947580814361572
    4. '(' → logprob: -3.0447580814361572
    5. 'def' → logprob: -4.919757843017578
    6. '_=' → logprob: -4.919757843017578
    7. '_mod' → logprob: -7.419757843017578
    8. '_val' → logprob: -8.044757843017578
    9. 's' → logprob: -8.294757843017578
    10. 'mod' → logprob: -8.419757843017578

Token 274: 'urry' (ID: 25001)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14832091331481934
    2. '=' → logprob: -2.0233209133148193
    3. 'def' → logprob: -5.773321151733398
    4. '_' → logprob: -6.273321151733398
    5. '(' → logprob: -8.523321151733398
    6. 'a' → logprob: -9.023321151733398
    7. '_=' → logprob: -10.523321151733398
    8. '=(' → logprob: -10.648321151733398
    9. 'alc' → logprob: -10.773321151733398
    10. 'ont' → logprob: -10.898321151733398

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28772664070129395
    2. '=' → logprob: -1.412726640701294
    3. '(' → logprob: -5.537726402282715
    4. '=lambda' → logprob: -6.662726402282715
    5. '_' → logprob: -8.037726402282715
    6. 'def' → logprob: -8.287726402282715
    7. '=_' → logprob: -8.412726402282715
    8. '(_)' → logprob: -8.912726402282715
    9. '(lambda' → logprob: -9.662726402282715
    10. ' ' → logprob: -9.787726402282715

Token 276: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.001023043761961162
    2. '(lambda' → logprob: -7.501022815704346
    3. 'ext' → logprob: -8.001023292541504
    4. ' lambda' → logprob: -9.376023292541504
    5. '   ' → logprob: -10.126023292541504
    6. '  ' → logprob: -12.251023292541504
    7. ' ' → logprob: -13.251023292541504
    8. 'partial' → logprob: -13.751023292541504
    9. 'lam' → logprob: -14.001023292541504
    10. '    ' → logprob: -15.126023292541504

Token 277: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3907354176044464
    2. 'lambda' → logprob: -2.390735387802124
    3. 'a' → logprob: -2.640735387802124
    4. 'b' → logprob: -2.890735387802124
    5. 'p' → logprob: -3.515735387802124
    6. 'mod' → logprob: -3.765735387802124
    7. 'm' → logprob: -4.140735626220703
    8. ' x' → logprob: -4.265735626220703
    9. ' lambda' → logprob: -4.765735626220703
    10. ' a' → logprob: -5.640735626220703

Token 278: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08218683302402496
    2. ':' → logprob: -2.9571869373321533
    3. ',b' → logprob: -3.9571869373321533
    4. ',a' → logprob: -5.082186698913574
    5. ',n' → logprob: -8.082186698913574
    6. ',m' → logprob: -8.207186698913574
    7. 'a' → logprob: -8.207186698913574
    8. '=' → logprob: -8.332186698913574
    9. ' :' → logprob: -8.457186698913574
    10. ',p' → logprob: -9.582186698913574

Token 279: ',m' (ID: 26648)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004032634024042636
    2. '=' → logprob: -8.12540340423584
    3. ' :' → logprob: -9.37540340423584
    4. ',' → logprob: -10.87540340423584
    5. ':(' → logprob: -13.12540340423584
    6. 'ext' → logprob: -14.50040340423584
    7. '   ' → logprob: -15.37540340423584
    8. 'a' → logprob: -16.000402450561523
    9. '=(' → logprob: -16.125402450561523
    10. ':a' → logprob: -16.750402450561523

Token 280: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007093746680766344
    2. ',' → logprob: -5.632093906402588
    3. '=' → logprob: -6.382093906402588
    4. ' :' → logprob: -6.632093906402588
    5. ':(' → logprob: -8.50709342956543
    6. ',a' → logprob: -9.63209342956543
    7. ',:' → logprob: -10.00709342956543
    8. '=(' → logprob: -10.00709342956543
    9. 'a' → logprob: -10.50709342956543
    10. ',k' → logprob: -10.88209342956543

Token 281: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6389420628547668
    2. '((' → logprob: -2.263942003250122
    3. 'ext' → logprob: -2.513942003250122
    4. 'a' → logprob: -2.888942003250122
    5. '(lambda' → logprob: -2.888942003250122
    6. 'pow' → logprob: -2.888942003250122
    7. '(pow' → logprob: -3.763942003250122
    8. '(ext' → logprob: -3.888942003250122
    9. '(inv' → logprob: -3.888942003250122
    10. ' (' → logprob: -4.388942241668701

Token 282: 'ext' (ID: 779)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1474306732416153
    2. 'ext' → logprob: -2.397430658340454
    3. '(a' → logprob: -3.647430658340454
    4. 'b' → logprob: -5.272430896759033
    5. 'lambda' → logprob: -5.522430896759033
    6. '(lambda' → logprob: -5.647430896759033
    7. 'pow' → logprob: -5.772430896759033
    8. '(ext' → logprob: -6.647430896759033
    9. '((' → logprob: -7.147430896759033
    10. '(b' → logprob: -7.522430896759033

Token 283: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -5.061676347395405e-05
    2. 'e' → logprob: -10.62505054473877
    3. 'eu' → logprob: -11.12505054473877
    4. '_a' → logprob: -12.87505054473877
    5. 'Eu' → logprob: -13.25005054473877
    6. 'mod' → logprob: -13.25005054473877
    7. 'a' → logprob: -13.50005054473877
    8. ')' → logprob: -13.50005054473877
    9. '_b' → logprob: -15.25005054473877
    10. '_c' → logprob: -15.25005054473877

Token 284: 'u' (ID: 84)
  Prédit: 'clid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.38762810826301575
    2. 'u' → logprob: -1.1376280784606934
    3. 'ucl' → logprob: -7.637628078460693
    4. 'ucid' → logprob: -8.512628555297852
    5. 'uc' → logprob: -10.637628555297852
    6. 'clud' → logprob: -11.512628555297852
    7. 'eu' → logprob: -11.637628555297852
    8. 'cid' → logprob: -12.137628555297852
    9. 'e' → logprob: -12.137628555297852
    10. 'cul' → logprob: -12.637628555297852

Token 285: 'clid' (ID: 156121)
  Prédit: 'clid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.00021438424300868064
    2. 'cid' → logprob: -8.625214576721191
    3. 'u' → logprob: -11.000214576721191
    4. 'cd' → logprob: -11.750214576721191
    5. 'c' → logprob: -12.625214576721191
    6. 'ucl' → logprob: -13.000214576721191
    7. 'id' → logprob: -14.000214576721191
    8. 'cl' → logprob: -14.000214576721191
    9. 'clud' → logprob: -14.125214576721191
    10. 'ucid' → logprob: -14.125214576721191

Token 286: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002774246677290648
    2. '(b' → logprob: -8.375277519226074
    3. '(' → logprob: -10.750277519226074
    4. 'a' → logprob: -12.000277519226074
    5. '((' → logprob: -12.125277519226074
    6. ')(' → logprob: -12.750277519226074
    7. ' (' → logprob: -12.875277519226074
    8. '(
' → logprob: -12.875277519226074
    9. '(abs' → logprob: -13.375277519226074
    10. ')' → logprob: -14.625277519226074

Token 287: ',m' (ID: 26648)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.1692827343940735
    2. ',' → logprob: -2.2942826747894287
    3. '[' → logprob: -3.2942826747894287
    4. '%m' → logprob: -4.919282913208008
    5. ',m' → logprob: -5.294282913208008
    6. '%b' → logprob: -5.794282913208008
    7. ' %' → logprob: -7.294282913208008
    8. ' ,' → logprob: -7.419282913208008
    9. '[m' → logprob: -8.044282913208008
    10. '%' → logprob: -8.294282913208008

Token 288: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00023226479243021458
    2. ')' → logprob: -8.875232696533203
    3. '))[' → logprob: -10.500232696533203
    4. ' )[' → logprob: -10.625232696533203
    5. '[' → logprob: -11.000232696533203
    6. ' if' → logprob: -11.375232696533203
    7. '   ' → logprob: -12.625232696533203
    8. ')
' → logprob: -13.500232696533203
    9. '%' → logprob: -13.875232696533203
    10. '))' → logprob: -14.000232696533203

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036024407017976046
    2. '1' → logprob: -5.628602504730225
    3. ' ' → logprob: -13.878602027893066
    4. '::-' → logprob: -14.878602027893066
    5. '   ' → logprob: -15.128602027893066
    6. '-' → logprob: -15.253602027893066
    7. '```' → logprob: -15.441102027893066
    8. '[' → logprob: -17.003602981567383
    9. '۰' → logprob: -17.128602981567383
    10. ':' → logprob: -17.378602981567383

Token 290: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.8302702307701111
    2. '%b' → logprob: -1.2052702903747559
    3. ' %' → logprob: -1.5802702903747559
    4. '%' → logprob: -3.455270290374756
    5. ' *' → logprob: -3.955270290374756
    6. '*' → logprob: -4.955270290374756
    7. '%m' → logprob: -8.580269813537598
    8. '%n' → logprob: -8.955269813537598
    9. ')' → logprob: -8.955269813537598
    10. '%c' → logprob: -9.205269813537598

Token 291: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005617907736450434
    2. ' b' → logprob: -5.255618095397949
    3. 'inv' → logprob: -8.75561809539795
    4. '(b' → logprob: -9.63061809539795
    5. 'ext' → logprob: -9.88061809539795
    6. 'pow' → logprob: -10.25561809539795
    7. '	b' → logprob: -10.88061809539795
    8. '   ' → logprob: -11.13061809539795
    9. '(inv' → logprob: -11.63061809539795
    10. ' (' → logprob: -12.25561809539795

Token 292: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5243741273880005
    2. ' %' → logprob: -1.2743741273880005
    3. ')' → logprob: -2.274374008178711
    4. '%b' → logprob: -3.899374008178711
    5. ')%' → logprob: -5.274374008178711
    6. ' )' → logprob: -9.274374008178711
    7. '%m' → logprob: -9.774374008178711
    8. '%n' → logprob: -10.774374008178711
    9. '%B' → logprob: -10.899374008178711
    10. '%)' → logprob: -11.149374008178711

Token 293: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00028302724240347743
    2. 'mod' → logprob: -8.750283241271973
    3. ' m' → logprob: -9.000283241271973
    4. 'MOD' → logprob: -13.750283241271973
    5. ' mod' → logprob: -16.375282287597656
    6. '%m' → logprob: -17.625282287597656
    7. '	m' → logprob: -18.625282287597656
    8. ' ' → logprob: -18.750282287597656
    9. ' MOD' → logprob: -18.875282287597656
    10. 'md' → logprob: -19.125282287597656

Token 294: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21863095462322235
    2. '<|end|>' → logprob: -2.3436310291290283
    3. ')' → logprob: -3.4686310291290283
    4. 'print' → logprob: -3.5936310291290283
    5. 'result' → logprob: -4.093630790710449
    6. 'def' → logprob: -4.593630790710449
    7. '#' → logprob: -4.968630790710449
    8. 'res' → logprob: -6.218630790710449
    9. ' for' → logprob: -6.843630790710449
    10. 'N' → logprob: -6.968630790710449

Token 295: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8774857521057129
    2. 'res' → logprob: -1.377485752105713
    3. 'for' → logprob: -2.002485752105713
    4. 'result' → logprob: -2.252485752105713
    5. 'inv' → logprob: -4.127485752105713
    6. 'answer' → logprob: -4.252485752105713
    7. 'x' → logprob: -4.502485752105713
    8. 'print' → logprob: -4.627485752105713
    9. 'ans' → logprob: -4.752485752105713
    10. 'INV' → logprob: -5.002485752105713

Token 296: ' find' (ID: 1646)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7026912569999695
    2. ' main' → logprob: -1.3276913166046143
    3. ' pow' → logprob: -2.8276913166046143
    4. ' mod' → logprob: -3.4526913166046143
    5. ' add' → logprob: -4.202691078186035
    6. 'solve' → logprob: -4.452691078186035
    7. 'pow' → logprob: -4.577691078186035
    8. ' poly' → logprob: -4.702691078186035
    9. ' power' → logprob: -4.702691078186035
    10. ' combine' → logprob: -4.827691078186035

Token 297: '_mex' (ID: 152402)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.4294722080230713
    2. '_max' → logprob: -2.5544722080230713
    3. '_inverse' → logprob: -2.5544722080230713
    4. '_mod' → logprob: -2.9294722080230713
    5. '_sub' → logprob: -3.4294722080230713
    6. '_min' → logprob: -3.5544722080230713
    7. '_' → logprob: -3.5544722080230713
    8. '_inv' → logprob: -3.8044722080230713
    9. '_factor' → logprob: -3.8044722080230713
    10. '_answer' → logprob: -4.054471969604492

Token 298: '(se' (ID: 19430)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.221505269408226
    2. '(s' → logprob: -3.0965051651000977
    3. '(seq' → logprob: -3.2215051651000977
    4. '(sequence' → logprob: -3.2215051651000977
    5. '(lst' → logprob: -3.5965051651000977
    6. '(nums' → logprob: -3.7215051651000977
    7. '(array' → logprob: -5.096505165100098
    8. '(a' → logprob: -5.846505165100098
    9. '(' → logprob: -6.471505165100098
    10. '(numbers' → logprob: -6.596505165100098

Token 299: 'en' (ID: 262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04477473348379135
    2. 'ts' → logprob: -3.6697747707366943
    3. 'q' → logprob: -4.794774532318115
    4. 'quence' → logprob: -5.294774532318115
    5. 'quences' → logprob: -6.044774532318115
    6. 'qs' → logprob: -6.544774532318115
    7. '```' → logprob: -7.544774532318115
    8. 'T' → logprob: -9.169775009155273
    9. 'Q' → logprob: -9.169775009155273
    10. '``' → logprob: -9.419775009155273

Token 300: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7569361329078674
    2. '):' → logprob: -0.7569361329078674
    3. '):
' → logprob: -3.3819360733032227
    4. '(' → logprob: -5.131936073303223
    5. '(se' → logprob: -5.381936073303223
    6. ',se' → logprob: -5.381936073303223
    7. '(nums' → logprob: -6.006936073303223
    8. ' ):' → logprob: -6.131936073303223
    9. ',set' → logprob: -6.381936073303223
    10. '(set' → logprob: -6.881936073303223

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.5120287066092715e-05
    2. ' for' → logprob: -11.000035285949707
    3. ' i' → logprob: -12.250035285949707
    4. 'for' → logprob: -13.250035285949707
    5. '```' → logprob: -13.250035285949707
    6. '   ' → logprob: -13.375035285949707
    7. '    
' → logprob: -13.500035285949707
    8. 'def' → logprob: -13.625035285949707
    9. 'm' → logprob: -13.750035285949707
    10. '    ' → logprob: -13.875035285949707

Token 302: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7476691007614136
    2. 'm' → logprob: -0.9976691007614136
    3. 'i' → logprob: -2.497669219970703
    4. 'mex' → logprob: -2.872669219970703
    5. 'x' → logprob: -4.247669219970703
    6. 'for' → logprob: -5.622669219970703
    7. 'v' → logprob: -8.497669219970703
    8. 'candidate' → logprob: -9.247669219970703
    9. 's' → logprob: -9.622669219970703
    10. '0' → logprob: -9.747669219970703

Token 303: 'A' (ID: 32)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43605485558509827
    2. 'm' → logprob: -1.6860548257827759
    3. 'mex' → logprob: -2.4360549449920654
    4. 'for' → logprob: -3.8110549449920654
    5. 'x' → logprob: -3.9360549449920654
    6. 'i' → logprob: -4.061054706573486
    7. ' for' → logprob: -5.436054706573486
    8. ' i' → logprob: -5.811054706573486
    9. 's' → logprob: -5.936054706573486
    10. 'v' → logprob: -6.061054706573486

Token 304: ' strange' (ID: 26197)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.28636634349823
    2. 'def' → logprob: -2.4113664627075195
    3. 'l' → logprob: -3.1613664627075195
    4. '   ' → logprob: -3.7863664627075195
    5. '"""' → logprob: -4.2863664627075195
    6. ' def' → logprob: -4.6613664627075195
    7. ' for' → logprob: -4.6613664627075195
    8. 's' → logprob: -4.9113664627075195
    9. 'for' → logprob: -4.9113664627075195
    10. ' ll' → logprob: -5.1613664627075195

Token 305: ' way' (ID: 2006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03715479373931885
    2. ' def' → logprob: -4.537154674530029
    3. ' function' → logprob: -5.537154674530029
    4. ' implementation' → logprob: -5.912154674530029
    5. 'mex' → logprob: -6.412154674530029
    6. 'function' → logprob: -6.787154674530029
    7. '"""' → logprob: -7.162154674530029
    8. ' approach' → logprob: -7.162154674530029
    9. ')' → logprob: -7.412154674530029
    10. 'int' → logprob: -7.537154674530029

Token 306: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6083880066871643
    2. 'to' → logprob: -1.4833879470825195
    3. '   ' → logprob: -1.8583879470825195
    4. 'def' → logprob: -2.9833879470825195
    5. ' of' → logprob: -4.2333879470825195
    6. 'of' → logprob: -5.2333879470825195
    7. ' ' → logprob: -7.8583879470825195
    8. '
' → logprob: -7.8583879470825195
    9. ' def' → logprob: -8.35838794708252
    10. '  ' → logprob: -8.48338794708252

Token 307: ' write' (ID: 5067)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9697831869125366
    2. 'for' → logprob: -2.094783306121826
    3. 'find' → logprob: -2.219783306121826
    4. 'mex' → logprob: -2.219783306121826
    5. 'min' → logprob: -2.844783306121826
    6. 'i' → logprob: -3.469783306121826
    7. ' find' → logprob: -3.719783306121826
    8. '
' → logprob: -3.844783306121826
    9. '0' → logprob: -3.969783306121826
    10. 'x' → logprob: -4.094783306121826

Token 308: ' mex' (ID: 32410)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2668951749801636
    2. 'for' → logprob: -1.7668951749801636
    3. 'min' → logprob: -2.766895294189453
    4. 'seen' → logprob: -2.891895294189453
    5. 'code' → logprob: -3.016895294189453
    6. 'return' → logprob: -3.016895294189453
    7. 'idx' → logprob: -3.141895294189453
    8. 'a' → logprob: -3.266895294189453
    9. '   ' → logprob: -3.266895294189453
    10. ' for' → logprob: -3.641895294189453

Token 309: ',' (ID: 11)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.051477279514074326
    2. '():' → logprob: -3.8014771938323975
    3. '(' → logprob: -4.676477432250977
    4. '   ' → logprob: -5.301477432250977
    5. '():
' → logprob: -5.301477432250977
    6. '(set' → logprob: -5.426477432250977
    7. 'def' → logprob: -6.301477432250977
    8. '(s' → logprob: -7.301477432250977
    9. ':' → logprob: -7.926477432250977
    10. '
' → logprob: -8.676477432250977

Token 310: ' looping' (ID: 140710)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25533804297447205
    2. 's' → logprob: -2.630337953567505
    3. ' s' → logprob: -2.880337953567505
    4. 'i' → logprob: -3.505337953567505
    5. ' i' → logprob: -4.005338191986084
    6. 'def' → logprob: -4.005338191986084
    7. 'x' → logprob: -4.755338191986084
    8. 'm' → logprob: -5.505338191986084
    9. 'seen' → logprob: -5.880338191986084
    10. 'idx' → logprob: -6.005338191986084

Token 311: ' from' (ID: 591)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0068445205688477
    2. 'from' → logprob: -1.6318445205688477
    3. 'i' → logprob: -1.8818445205688477
    4. ' over' → logprob: -2.2568445205688477
    5. 'over' → logprob: -2.5068445205688477
    6. ' from' → logprob: -3.8818445205688477
    7. 'num' → logprob: -4.131844520568848
    8. 'for' → logprob: -4.256844520568848
    9. '   ' → logprob: -4.756844520568848
    10. ' through' → logprob: -4.881844520568848

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.375019073486328
    3. 'i' → logprob: -13.125019073486328
    4. 'def' → logprob: -13.500019073486328
    5. 'zero' → logprob: -13.875019073486328
    6. '```' → logprob: -14.750019073486328
    7. 'x' → logprob: -15.000019073486328
    8. '
' → logprob: -15.000019073486328
    9. '   ' → logprob: -15.250019073486328
    10. '_' → logprob: -15.750019073486328

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -13.625004768371582
    3. ' ' → logprob: -13.750004768371582
    4. 'zero' → logprob: -14.000004768371582
    5. '
' → logprob: -15.125004768371582
    6. 'i' → logprob: -15.125004768371582
    7. '1' → logprob: -15.500004768371582
    8. 'for' → logprob: -15.625004768371582
    9. 'def' → logprob: -15.750004768371582
    10. 'range' → logprob: -16.0000057220459

Token 314: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09228773415088654
    2. 'def' → logprob: -3.34228777885437
    3. ' to' → logprob: -3.71728777885437
    4. ',' → logprob: -4.467287540435791
    5. ':' → logprob: -5.217287540435791
    6. ' and' → logprob: -6.217287540435791
    7. '):' → logprob: -6.467287540435791
    8. ' for' → logprob: -6.592287540435791
    9. ' while' → logprob: -6.592287540435791
    10. '):
' → logprob: -6.842287540435791

Token 315: ' making' (ID: 4137)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07285679131746292
    2. 'increment' → logprob: -3.697856903076172
    3. 'checking' → logprob: -3.947856903076172
    4. 'True' → logprob: -4.822856903076172
    5. 'def' → logprob: -4.947856903076172
    6. 'continu' → logprob: -5.572856903076172
    7. ' while' → logprob: -6.447856903076172
    8. ' checking' → logprob: -6.947856903076172
    9. 'not' → logprob: -7.197856903076172
    10. ' True' → logprob: -7.197856903076172

Token 316: ' a' (ID: 261)
  Prédit: ' sure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sure' → logprob: -0.330758661031723
    2. 'sure' → logprob: -1.4557586908340454
    3. 'while' → logprob: -3.205758571624756
    4. ' while' → logprob: -5.080758571624756
    5. ' a' → logprob: -7.830758571624756
    6. 'seen' → logprob: -7.955758571624756
    7. '```' → logprob: -8.580759048461914
    8. 'a' → logprob: -8.580759048461914
    9. '
' → logprob: -8.830759048461914
    10. ' an' → logprob: -9.330759048461914

Token 317: ' set' (ID: 920)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0014066596049815416
    2. ' while' → logprob: -6.626406669616699
    3. 'set' → logprob: -9.7514066696167
    4. 'break' → logprob: -11.1264066696167
    5. '
' → logprob: -12.8764066696167
    6. 'if' → logprob: -13.7514066696167
    7. 'try' → logprob: -14.0014066696167
    8. '```' → logprob: -14.1264066696167
    9. '   ' → logprob: -15.1264066696167
    10. 'continuous' → logprob: -15.5014066696167

Token 318: ' comprehension' (ID: 91423)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046683069318532944
    2. 'def' → logprob: -4.421682834625244
    3. ':' → logprob: -5.296682834625244
    4. '):
' → logprob: -5.546682834625244
    5. ' for' → logprob: -5.796682834625244
    6. 'while' → logprob: -5.796682834625244
    7. '):' → logprob: -5.921682834625244
    8. '():' → logprob: -5.921682834625244
    9. 'for' → logprob: -6.046682834625244
    10. ':
' → logprob: -6.046682834625244

Token 319: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11713722348213196
    2. ' for' → logprob: -3.6171371936798096
    3. 'def' → logprob: -3.8671371936798096
    4. 'for' → logprob: -3.9921371936798096
    5. 's' → logprob: -4.492137432098389
    6. '```' → logprob: -4.742137432098389
    7. ':' → logprob: -5.367137432098389
    8. 'seen' → logprob: -5.492137432098389
    9. ':
' → logprob: -5.617137432098389
    10. 'while' → logprob: -6.492137432098389

Token 320: ' each' (ID: 2454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6863579154014587
    2. 'seen' → logprob: -1.9363579750061035
    3. 'each' → logprob: -1.9363579750061035
    4. '_' → logprob: -2.5613579750061035
    5. 'i' → logprob: -2.8113579750061035
    6. ' each' → logprob: -3.8113579750061035
    7. ' x' → logprob: -4.8113579750061035
    8. 'missing' → logprob: -5.1863579750061035
    9. ' unseen' → logprob: -5.8113579750061035
    10. 'k' → logprob: -5.9363579750061035

Token 321: ' call' (ID: 2421)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.49696171283721924
    2. 'i' → logprob: -1.7469617128372192
    3. ' x' → logprob: -2.7469615936279297
    4. ' i' → logprob: -2.8719615936279297
    5. 'n' → logprob: -3.4969615936279297
    6. 'num' → logprob: -4.12196159362793
    7. ' number' → logprob: -4.87196159362793
    8. 'k' → logprob: -5.24696159362793
    9. ')' → logprob: -5.24696159362793
    10. '   ' → logprob: -5.24696159362793

Token 322: '."""
' (ID: 33044)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0921299010515213
    2. 'def' → logprob: -3.342129945755005
    3. '):
' → logprob: -4.467129707336426
    4. '"""
' → logprob: -4.467129707336426
    5. ':' → logprob: -4.967129707336426
    6. '):' → logprob: -5.467129707336426
    7. '"""' → logprob: -5.842129707336426
    8. ':
' → logprob: -5.842129707336426
    9. ' for' → logprob: -6.092129707336426
    10. ' while' → logprob: -6.467129707336426

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05978046730160713
    2. 'for' → logprob: -3.8097803592681885
    3. 'i' → logprob: -3.9347803592681885
    4. ' for' → logprob: -4.684780597686768
    5. ' i' → logprob: -5.559780597686768
    6. 'def' → logprob: -6.434780597686768
    7. 'm' → logprob: -7.309780597686768
    8. 'x' → logprob: -8.30978012084961
    9. 'n' → logprob: -8.55978012084961
    10. '```' → logprob: -8.80978012084961

Token 324: ' unused' (ID: 38192)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6839949488639832
    2. 'i' → logprob: -0.8089949488639832
    3. 'x' → logprob: -3.808995008468628
    4. '   ' → logprob: -5.183994770050049
    5. 's' → logprob: -5.558994770050049
    6. 'm' → logprob: -5.558994770050049
    7. 'n' → logprob: -5.933994770050049
    8. 'seen' → logprob: -5.933994770050049
    9. 'return' → logprob: -6.183994770050049
    10. ' for' → logprob: -6.683994770050049

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2838976979255676
    2. '=' → logprob: -1.4088976383209229
    3. '_' → logprob: -7.033897876739502
    4. 's' → logprob: -7.658897876739502
    5. '_vals' → logprob: -8.033897399902344
    6. '_values' → logprob: -8.283897399902344
    7. '_val' → logprob: -8.408897399902344
    8. '_tokens' → logprob: -9.158897399902344
    9. '   ' → logprob: -9.533897399902344
    10. '=set' → logprob: -9.533897399902344

Token 326: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2655932605266571
    2. '{i' → logprob: -2.5155932903289795
    3. '{x' → logprob: -2.5155932903289795
    4. ' {' → logprob: -3.3905932903289795
    5. 'next' → logprob: -4.1405930519104
    6. '0' → logprob: -5.0155930519104
    7. ' next' → logprob: -5.0155930519104
    8. 'min' → logprob: -5.8905930519104
    9. 'set' → logprob: -6.0155930519104
    10. '{k' → logprob: -7.0155930519104

Token 327: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.15358415246009827
    2. '(x' → logprob: -2.2785842418670654
    3. '(i' → logprob: -3.2785842418670654
    4. '([' → logprob: -6.528584003448486
    5. '(k' → logprob: -7.903584003448486
    6. '(' → logprob: -8.903584480285645
    7. 'range' → logprob: -9.778584480285645
    8. '(
' → logprob: -9.903584480285645
    9. '(n' → logprob: -10.528584480285645
    10. '(s' → logprob: -10.778584480285645

Token 328: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5856415629386902
    2. '(len' → logprob: -1.460641622543335
    3. '(max' → logprob: -1.710641622543335
    4. '(se' → logprob: -4.460641384124756
    5. '(N' → logprob: -4.585641384124756
    6. '(IN' → logprob: -5.835641384124756
    7. '(MAX' → logprob: -6.710641384124756
    8. '(i' → logprob: -6.960641384124756
    9. '(n' → logprob: -7.210641384124756
    10. '(find' → logprob: -7.710641384124756

Token 329: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04722548648715019
    2. '+' → logprob: -3.5472254753112793
    3. '))
' → logprob: -4.797225475311279
    4. ')' → logprob: -5.922225475311279
    5. '()))' → logprob: -5.922225475311279
    6. ')).' → logprob: -6.297225475311279
    7. '))-' → logprob: -7.672225475311279
    8. ' +' → logprob: -8.547225952148438
    9. ' ))' → logprob: -8.547225952148438
    10. ').' → logprob: -8.547225952148438

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4352790415287018
    2. 'N' → logprob: -1.1852790117263794
    3. '100' → logprob: -3.935279130935669
    4. '10' → logprob: -4.81027889251709
    5. '20' → logprob: -5.06027889251709
    6. 'len' → logprob: -5.43527889251709
    7. '50' → logprob: -5.56027889251709
    8. '2' → logprob: -6.31027889251709
    9. '(N' → logprob: -7.06027889251709
    10. '5' → logprob: -7.68527889251709

Token 331: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005685003008693457
    2. '))
' → logprob: -5.880684852600098
    3. ')' → logprob: -6.005684852600098
    4. ')).' → logprob: -8.130684852600098
    5. ' ))' → logprob: -9.880684852600098
    6. '))-' → logprob: -10.130684852600098
    7. '   ' → logprob: -12.130684852600098
    8. ').' → logprob: -12.255684852600098
    9. ' )' → logprob: -12.380684852600098
    10. '))

' → logprob: -12.630684852600098

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10130463540554047
    2. 'for' → logprob: -2.601304531097412
    3. ' for' → logprob: -4.101304531097412
    4. 'used' → logprob: -5.601304531097412
    5. 'while' → logprob: -7.351304531097412
    6. 'seen' → logprob: -7.976304531097412
    7. ' used' → logprob: -8.22630500793457
    8. 'return' → logprob: -8.85130500793457
    9. ')' → logprob: -9.35130500793457
    10. 'found' → logprob: -9.47630500793457

Token 333: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9507162570953369
    2. 'used' → logprob: -0.9507162570953369
    3. 'return' → logprob: -2.325716257095337
    4. 'unused' → logprob: -2.450716257095337
    5. '   ' → logprob: -4.325716018676758
    6. 'seen' → logprob: -4.950716018676758
    7. 'found' → logprob: -4.950716018676758
    8. 'present' → logprob: -5.325716018676758
    9. 'missing' → logprob: -5.825716018676758
    10. 'available' → logprob: -6.075716018676758

Token 334: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21082910895347595
    2. ':' → logprob: -1.7108291387557983
    3. '   ' → logprob: -5.335829257965088
    4. '       ' → logprob: -5.460829257965088
    5. 'except' → logprob: -9.71082878112793
    6. '    ' → logprob: -10.08582878112793
    7. ':

' → logprob: -10.46082878112793
    8. '):
' → logprob: -10.58582878112793
    9. ' except' → logprob: -10.58582878112793
    10. ' :' → logprob: -10.83582878112793

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04989183694124222
    2. '   ' → logprob: -3.799891948699951
    3. ':
' → logprob: -4.174891948699951
    4. ':' → logprob: -5.299891948699951
    5. ' for' → logprob: -6.299891948699951
    6. '    ' → logprob: -6.799891948699951
    7. ' except' → logprob: -7.799891948699951
    8. ' while' → logprob: -7.799891948699951
    9. ' as' → logprob: -7.924891948699951
    10. 'except' → logprob: -8.049891471862793

Token 336: ' return' (ID: 622)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6401520371437073
    2. '   ' → logprob: -1.5151519775390625
    3. 'for' → logprob: -2.1401519775390625
    4. 'return' (adapté à ' return') → logprob: -2.8901519775390625
    5. 'unused' → logprob: -3.3901519775390625
    6. ' while' → logprob: -4.1401519775390625
    7. '       ' → logprob: -4.1401519775390625
    8. ' for' → logprob: -5.1401519775390625
    9. ' unused' → logprob: -5.7651519775390625
    10. ' return' → logprob: -6.8901519775390625

Token 337: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11088792234659195
    2. ' min' → logprob: -2.6108880043029785
    3. 'next' → logprob: -4.1108880043029785
    4. ' next' → logprob: -4.2358880043029785
    5. '[min' → logprob: -8.61088752746582
    6. '(min' → logprob: -8.73588752746582
    7. '   ' → logprob: -8.73588752746582
    8. '{' → logprob: -9.98588752746582
    9. ' ' → logprob: -10.23588752746582
    10. '(next' → logprob: -11.36088752746582

Token 338: '(un' (ID: 33694)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5753585696220398
    2. '({' → logprob: -1.0753586292266846
    3. '(un' → logprob: -2.9503586292266846
    4. '(s' → logprob: -3.4503586292266846
    5. '(i' → logprob: -5.4503583908081055
    6. '([' → logprob: -6.0753583908081055
    7. '(se' → logprob: -6.7003583908081055
    8. '(_' → logprob: -7.2003583908081055
    9. '(k' → logprob: -7.2003583908081055
    10. '(' → logprob: -7.3253583908081055

Token 339: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.028812432661652565
    2. 'seen' → logprob: -4.278812408447266
    3. 'unused' → logprob: -4.653812408447266
    4. '{' → logprob: -6.153812408447266
    5. '[' → logprob: -6.778812408447266
    6. '(' → logprob: -7.903812408447266
    7. 'se' → logprob: -8.403812408447266
    8. 'i' → logprob: -8.903812408447266
    9. '(se' → logprob: -9.403812408447266
    10. 's' → logprob: -9.403812408447266

Token 340: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028429143130779266
    2. '-' → logprob: -5.877842903137207
    3. '.d' → logprob: -10.877842903137207
    4. ' ' → logprob: -11.752842903137207
    5. '   ' → logprob: -13.002842903137207
    6. '-set' → logprob: -13.002842903137207
    7. '-{' → logprob: -13.377842903137207
    8. ' ' → logprob: -13.502842903137207
    9. ')' → logprob: -13.502842903137207
    10. '-se' → logprob: -14.002842903137207

Token 341: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.01578611135482788
    2. 'set' → logprob: -4.265786170959473
    3. ' seen' → logprob: -6.765786170959473
    4. '{' → logprob: -8.265786170959473
    5. 'se' → logprob: -9.390786170959473
    6. ' set' → logprob: -9.515786170959473
    7. '(set' → logprob: -11.015786170959473
    8. '   ' → logprob: -11.140786170959473
    9. '(se' → logprob: -12.265786170959473
    10. ' ' → logprob: -12.890786170959473

Token 342: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9345787763595581
    2. '())
' → logprob: -1.559578776359558
    3. '())' → logprob: -1.559578776359558
    4. ')
' → logprob: -1.684578776359558
    5. ' )' → logprob: -7.809578895568848
    6. ' )
' → logprob: -8.059578895568848
    7. '   ' → logprob: -8.559578895568848
    8. '()' → logprob: -8.934578895568848
    9. '       ' → logprob: -9.684578895568848
    10. '))' → logprob: -10.059578895568848

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024775585625320673
    2. ' except' → logprob: -6.377477645874023
    3. 'except' → logprob: -7.252477645874023
    4. '	except' → logprob: -9.752477645874023
    5. '
' → logprob: -12.752477645874023
    6. '<|end|>' → logprob: -13.627477645874023
    7. ',' → logprob: -14.127477645874023
    8. '       ' → logprob: -14.377477645874023
    9. '<|end|>' → logprob: -14.502477645874023
    10. '  ' → logprob: -15.002477645874023

Token 344: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018535828217864037
    2. ' except' → logprob: -4.393535614013672
    3. 'except' (adapté à ' except') → logprob: -5.143535614013672
    4. '	except' → logprob: -8.768535614013672
    5. '
' → logprob: -12.268535614013672
    6. '       ' → logprob: -12.518535614013672
    7. ',' → logprob: -13.268535614013672
    8. '    
' → logprob: -14.393535614013672
    9. '<|end|>' → logprob: -14.643535614013672
    10. ')' → logprob: -14.768535614013672

Token 345: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.16787704825401306
    2. '(Key' → logprob: -2.917876958847046
    3. '(Value' → logprob: -3.292876958847046
    4. 'Key' → logprob: -3.542876958847046
    5. ' Value' → logprob: -3.667876958847046
    6. 'Index' → logprob: -5.042877197265625
    7. '(' → logprob: -7.542877197265625
    8. ' Key' → logprob: -7.667877197265625
    9. 'Stop' → logprob: -7.792877197265625
    10. 'Exception' → logprob: -8.292877197265625

Token 346: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.02054912969470024
    2. 'Error' → logprob: -3.8955490589141846
    3. 'ror' → logprob: -12.770548820495605
    4. 'error' → logprob: -13.145548820495605
    5. 'SError' → logprob: -14.270548820495605
    6. 'rr' → logprob: -14.770548820495605
    7. '_error' → logprob: -15.395548820495605
    8. 'LError' → logprob: -15.395548820495605
    9. 'r' → logprob: -15.520548820495605
    10. 'Index' → logprob: -15.770548820495605

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0809793546795845
    2. ':
' → logprob: -2.580979347229004
    3. ':return' → logprob: -6.830979347229004
    4. '       ' → logprob: -7.705979347229004
    5. '   ' → logprob: -7.955979347229004
    6. '():' → logprob: -9.580979347229004
    7. '():
' → logprob: -10.205979347229004
    8. ' return' → logprob: -10.705979347229004
    9. ' as' → logprob: -10.830979347229004
    10. '):' → logprob: -11.080979347229004

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027801014482975006
    2. '   ' → logprob: -3.652801036834717
    3. ' return' → logprob: -6.902801036834717
    4. 'return' → logprob: -7.652801036834717
    5. '0' → logprob: -11.027800559997559
    6. '	return' → logprob: -13.277800559997559
    7. ' ' → logprob: -14.902800559997559
    8. '   ' → logprob: -15.027800559997559
    9. '           ' → logprob: -15.402800559997559
    10. ':return' → logprob: -15.652800559997559

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030696570873260498
    2. ' return' → logprob: -3.7806966304779053
    3. '   ' → logprob: -4.905696392059326
    4. '       ' → logprob: -12.280696868896484
    5. '	return' → logprob: -12.405696868896484
    6. '
' → logprob: -12.530696868896484
    7. '0' → logprob: -12.780696868896484
    8. '#' → logprob: -13.405696868896484
    9. 'raise' → logprob: -13.655696868896484
    10. ' ' → logprob: -15.155696868896484

Token 350: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03345388174057007
    2. '0' → logprob: -3.658453941345215
    3. 'None' → logprob: -5.033453941345215
    4. ' N' → logprob: -7.533453941345215
    5. ' None' → logprob: -10.533453941345215
    6. '-' → logprob: -10.658453941345215
    7. ' ' → logprob: -10.908453941345215
    8. '   ' → logprob: -12.783453941345215
    9. '(N' → logprob: -13.783453941345215
    10. 'max' → logprob: -14.158453941345215

Token 351: '+' (ID: 10)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5624340176582336
    2. '<|end|>' → logprob: -0.9374340176582336
    3. '#' → logprob: -4.312434196472168
    4. '
' → logprob: -5.187434196472168
    5. ')' → logprob: -5.562434196472168
    6. '<|end|>' → logprob: -5.937434196472168
    7. 'A' → logprob: -6.062434196472168
    8. 'N' → logprob: -6.437434196472168
    9. 'data' → logprob: -6.812434196472168
    10. 'S' → logprob: -7.312434196472168

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4656579120783135e-05
    2. '2' → logprob: -10.125044822692871
    3. ' ' → logprob: -13.000044822692871
    4. '0' → logprob: -13.875044822692871
    5. '+' → logprob: -14.500044822692871
    6. '   ' → logprob: -15.375044822692871
    7. '```' → logprob: -15.750044822692871
    8. '10' → logprob: -15.875044822692871
    9. '3' → logprob: -16.250043869018555
    10. '<|end|>' → logprob: -16.812543869018555

Token 353: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: ' safety' (ID: 9246)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -1.4114853143692017
    2. 'the' → logprob: -2.036485195159912
    3. 'cases' → logprob: -2.161485195159912
    4. '0' → logprob: -2.661485195159912
    5. 'None' → logprob: -2.661485195159912
    6. '#' → logprob: -3.036485195159912
    7. 'com' → logprob: -3.286485195159912
    8. 's' → logprob: -3.411485195159912
    9. ' unseen' → logprob: -3.411485195159912
    10. ' None' → logprob: -3.661485195159912

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11479385197162628
    2. 'for' → logprob: -3.2397937774658203
    3. 'DP' → logprob: -3.8647937774658203
    4. 'arr' → logprob: -5.11479377746582
    5. 'data' → logprob: -5.23979377746582
    6. 'dp' → logprob: -5.48979377746582
    7. 'A' → logprob: -5.61479377746582
    8. '#' → logprob: -5.61479377746582
    9. 'res' → logprob: -5.86479377746582
    10. 'ans' → logprob: -6.36479377746582

Token 358: ' grund' (ID: 34475)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.1429076194763184
    2. 'main' → logprob: -1.2679076194763184
    3. ' main' → logprob: -1.5179076194763184
    4. ' solve' → logprob: -2.0179076194763184
    5. 'process' → logprob: -3.8929076194763184
    6. ' process' → logprob: -5.017907619476318
    7. 'count' → logprob: -5.892907619476318
    8. 'compute' → logprob: -6.267907619476318
    9. 'calculate' → logprob: -6.767907619476318
    10. 'calc' → logprob: -6.767907619476318

Token 359: 'ize' (ID: 750)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.5267536640167236
    2. 'def' → logprob: -1.9017536640167236
    3. 'val' → logprob: -3.1517536640167236
    4. 'iel' → logprob: -3.4017536640167236
    5. '_value' → logprob: -4.0267534255981445
    6. 'l' → logprob: -4.2767534255981445
    7. 'els' → logprob: -4.6517534255981445
    8. 'elsch' → logprob: -5.1517534255981445
    9. 'elper' → logprob: -5.2767534255981445
    10. '_val' → logprob: -5.4017534255981445

Token 360: '(edge' (ID: 84023)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.6754990816116333
    2. '(state' → logprob: -2.0504989624023438
    3. '(states' → logprob: -2.5504989624023438
    4. '(' → logprob: -2.9254989624023438
    5. '(s' → logprob: -3.1754989624023438
    6. '(lst' → logprob: -3.4254989624023438
    7. '(seq' → logprob: -3.5504989624023438
    8. '(nums' → logprob: -3.9254989624023438
    9. '(se' → logprob: -4.050498962402344
    10. '(sequence' → logprob: -4.300498962402344

Token 361: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5327239632606506
    2. '):' → logprob: -1.2827239036560059
    3. ')' → logprob: -2.657723903656006
    4. '_list' → logprob: -3.157723903656006
    5. ',' → logprob: -5.282723903656006
    6. 'list' → logprob: -5.907723903656006
    7. '):
' → logprob: -6.282723903656006
    8. 'u' → logprob: -6.532723903656006
    9. '   ' → logprob: -6.532723903656006
    10. '_' → logprob: -6.657723903656006

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004175152629613876
    2. ' visited' → logprob: -7.004175186157227
    3. ' seen' → logprob: -7.004175186157227
    4. ' u' → logprob: -7.379175186157227
    5. ' if' → logprob: -7.879175186157227
    6. ' s' → logprob: -8.379175186157227
    7. ' edges' → logprob: -8.754175186157227
    8. 'visited' → logprob: -8.754175186157227
    9. 'seen' → logprob: -8.879175186157227
    10. ' from' → logprob: -9.379175186157227

Token 363: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.083190679550171
    2. 'seen' → logprob: -1.708190679550171
    3. 'u' → logprob: -2.083190679550171
    4. 'g' → logprob: -2.833190679550171
    5. 'visited' → logprob: -3.333190679550171
    6. 'from' → logprob: -3.458190679550171
    7. 'if' → logprob: -3.708190679550171
    8. 'graph' → logprob: -3.708190679550171
    9. 'adj' → logprob: -3.958190679550171
    10. 'v' → logprob: -4.33319091796875

Token 364: ' intentionally' (ID: 76052)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6559420824050903
    2. 'adj' → logprob: -1.7809420824050903
    3. 'graph' → logprob: -2.155941963195801
    4. 'seen' → logprob: -2.280941963195801
    5. 'from' → logprob: -2.780941963195801
    6. 'G' → logprob: -2.905941963195801
    7. '   ' → logprob: -3.155941963195801
    8. 'u' → logprob: -3.405941963195801
    9. 'if' → logprob: -3.780941963195801
    10. 'V' → logprob: -3.905941963195801

Token 365: ' keep' (ID: 3357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6641952991485596
    2. 'pass' → logprob: -1.7891952991485596
    3. 'def' → logprob: -2.6641952991485596
    4. ' pass' → logprob: -2.7891952991485596
    5. 'edge' → logprob: -2.7891952991485596
    6. ' edge' → logprob: -3.1641952991485596
    7. '    ' → logprob: -4.4141950607299805
    8. '...' → logprob: -4.9141950607299805
    9. '#' → logprob: -5.1641950607299805
    10. ' ' → logprob: -5.6641950607299805

Token 366: ' unused' (ID: 38192)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.3724207580089569
    2. ' edge' → logprob: -1.6224207878112793
    3. '   ' → logprob: -2.3724207878112793
    4. 'len' → logprob: -4.997420787811279
    5. ' len' → logprob: -5.497420787811279
    6. '(edge' → logprob: -5.622420787811279
    7. '=edge' → logprob: -6.997420787811279
    8. '  ' → logprob: -7.247420787811279
    9. ' not' → logprob: -7.247420787811279
    10. ')' → logprob: -7.372420787811279

Token 367: ' legacy' (ID: 33304)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8947908878326416
    2. 'def' → logprob: -2.5197908878326416
    3. ',' → logprob: -2.6447908878326416
    4. 'edge' → logprob: -2.7697908878326416
    5. ' edge' → logprob: -3.1447908878326416
    6. '_edges' → logprob: -3.1447908878326416
    7. '_edge' → logprob: -3.6447908878326416
    8. '   ' → logprob: -3.6447908878326416
    9. 's' → logprob: -4.1447906494140625
    10. 'param' → logprob: -4.1447906494140625

Token 368: ' names' (ID: 8747)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32818853855133057
    2. '_' → logprob: -3.078188419342041
    3. 's' → logprob: -3.578188419342041
    4. '_edges' → logprob: -3.578188419342041
    5. '_edge' → logprob: -3.953188419342041
    6. '_code' → logprob: -4.078188419342041
    7. '=' → logprob: -4.203188419342041
    8. ',' → logprob: -4.328188419342041
    9. 'edge' → logprob: -4.453188419342041
    10. 'edges' → logprob: -4.703188419342041

Token 369: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06360400468111038
    2. ',' → logprob: -3.3136041164398193
    3. 'u' → logprob: -5.06360387802124
    4. ':' → logprob: -5.18860387802124
    5. '    
' → logprob: -5.93860387802124
    6. 'def' → logprob: -6.18860387802124
    7. ' u' → logprob: -7.18860387802124
    8. '):
' → logprob: -7.56360387802124
    9. '(u' → logprob: -7.56360387802124
    10. '
' → logprob: -7.68860387802124

Token 370: ' mutable' (ID: 54987)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.475804328918457
    2. 'def' → logprob: -1.725804328918457
    3. 'edge' → logprob: -2.975804328918457
    4. '#' → logprob: -2.975804328918457
    5. 'seen' → logprob: -2.975804328918457
    6. 'verbose' → logprob: -3.225804328918457
    7. '
' → logprob: -3.475804328918457
    8. 'graph' → logprob: -3.725804328918457
    9. 'adj' → logprob: -3.725804328918457
    10. 'g' → logprob: -3.850804328918457

Token 371: ' dict' (ID: 11878)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9090310335159302
    2. 'seen' → logprob: -1.7840310335159302
    3. 'state' → logprob: -2.1590309143066406
    4. 'visited' → logprob: -2.5340309143066406
    5. 'edge' → logprob: -3.2840309143066406
    6. 'default' → logprob: -4.034030914306641
    7. 'edges' → logprob: -4.284030914306641
    8. 's' → logprob: -4.534030914306641
    9. 'neighbors' → logprob: -4.534030914306641
    10. 'global' → logprob: -4.659030914306641

Token 372: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5384302139282227
    2. 'd' → logprob: -2.5384302139282227
    3. 'graph' → logprob: -2.5384302139282227
    4. 's' → logprob: -3.2884302139282227
    5. 'def' → logprob: -3.2884302139282227
    6. ',' → logprob: -3.5384302139282227
    7. 'G' → logprob: -4.038430213928223
    8. 'edges' → logprob: -4.038430213928223
    9. 'ion' → logprob: -4.850930213928223
    10. 'ed' → logprob: -5.038430213928223

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009684675373136997
    2. 'G' → logprob: -5.5096845626831055
    3. '():
' → logprob: -6.8846845626831055
    4. 'E' → logprob: -7.5096845626831055
    5. '    
' → logprob: -7.7596845626831055
    6. 'graph' → logprob: -7.8846845626831055
    7. '):
' → logprob: -8.259684562683105
    8. ',' → logprob: -8.384684562683105
    9. '(G' → logprob: -8.384684562683105
    10. '(graph' → logprob: -8.384684562683105

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010493889451026917
    2. 'g' → logprob: -5.760493755340576
    3. 'G' → logprob: -5.885493755340576
    4. ' G' → logprob: -7.135493755340576
    5. ' graph' → logprob: -7.635493755340576
    6. 'dp' → logprob: -7.760493755340576
    7. 'graph' → logprob: -8.010494232177734
    8. 'adj' → logprob: -8.135494232177734
    9. ' g' → logprob: -8.260494232177734
    10. 'E' → logprob: -8.510494232177734

Token 375: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.8656367063522339
    2. 'g' → logprob: -1.6156367063522339
    3. 'gr' → logprob: -2.7406368255615234
    4. 'graph' → logprob: -3.1156368255615234
    5. 'adj' → logprob: -3.4906368255615234
    6. 'grund' → logprob: -3.8656368255615234
    7. 'memo' → logprob: -4.115636825561523
    8. '   ' → logprob: -4.115636825561523
    9. 'seen' → logprob: -4.240636825561523
    10. 'dp' → logprob: -4.240636825561523

Token 376: 'GG' (ID: 43469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5772071480751038
    2. ' =' → logprob: -0.8272071480751038
    3. ',' → logprob: -7.702207088470459
    4. '={}' → logprob: -8.702207565307617
    5. '=edge' → logprob: -9.077207565307617
    6. 'LOBAL' → logprob: -9.202207565307617
    7. 'raph' → logprob: -9.452207565307617
    8. 'lobal' → logprob: -9.577207565307617
    9. '={}
' → logprob: -9.952207565307617
    10. 'G' → logprob: -10.327207565307617

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16874738037586212
    2. ' =' → logprob: -2.0437474250793457
    3. ',' → logprob: -3.7937474250793457
    4. '=edge' → logprob: -6.043747425079346
    5. '[' → logprob: -8.293746948242188
    6. ',e' → logprob: -9.418746948242188
    7. ',g' → logprob: -9.543746948242188
    8. ',G' → logprob: -9.668746948242188
    9. '={}' → logprob: -9.793746948242188
    10. '   ' → logprob: -9.918746948242188

Token 378: ' dict' (ID: 11878)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.00046177039621397853
    2. ' dd' → logprob: -8.00046157836914
    3. 'default' → logprob: -9.37546157836914
    4. '{}' → logprob: -10.25046157836914
    5. '{' → logprob: -13.00046157836914
    6. ' ' → logprob: -13.37546157836914
    7. '(dd' → logprob: -14.00046157836914
    8. 'edge' → logprob: -14.75046157836914
    9. '   ' → logprob: -15.62546157836914
    10. '  ' → logprob: -15.75046157836914

Token 379: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.16653193533420563
    2. '()' → logprob: -1.9165319204330444
    3. '(edge' → logprob: -5.291532039642334
    4. '()

' → logprob: -7.916532039642334
    5. '   ' → logprob: -8.791531562805176
    6. 'def' → logprob: -9.166531562805176
    7. '(dd' → logprob: -9.166531562805176
    8. 'edge' → logprob: -9.416531562805176
    9. 'default' → logprob: -9.416531562805176
    10. '([(' → logprob: -10.166531562805176

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003522859886288643
    2. ' for' → logprob: -6.503522872924805
    3. 'for' → logprob: -7.128522872924805
    4. '    
' → logprob: -8.378522872924805
    5. 'def' → logprob: -8.503522872924805
    6. ' edges' → logprob: -9.878522872924805
    7. 'edges' → logprob: -10.003522872924805
    8. '...' → logprob: -10.128522872924805
    9. '<|end|>' → logprob: -10.191022872924805
    10. '    ' → logprob: -10.316022872924805

Token 381: ' sm' (ID: 1765)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8186336159706116
    2. 'def' → logprob: -1.6936335563659668
    3. 'from' → logprob: -2.318633556365967
    4. 'stack' → logprob: -2.818633556365967
    5. '   ' → logprob: -2.943633556365967
    6. 'Q' → logprob: -3.068633556365967
    7. 'visited' → logprob: -4.193633556365967
    8. 'q' → logprob: -4.318633556365967
    9. 'DD' → logprob: -4.443633556365967
    10. 'seen' → logprob: -4.443633556365967

Token 382: ' =' (ID: 314)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8238336443901062
    2. ' =' → logprob: -0.9488336443901062
    3. '=' → logprob: -2.573833703994751
    4. 'aller' → logprob: -4.198833465576172
    5. 'ap' → logprob: -4.573833465576172
    6. 'al' → logprob: -5.198833465576172
    7. 'ol' → logprob: -5.323833465576172
    8. 'G' → logprob: -5.448833465576172
    9. '=set' → logprob: -5.448833465576172
    10. 's' → logprob: -5.573833465576172

Token 383: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.20409145951271057
    2. 'default' → logprob: -1.8290914297103882
    3. '0' → logprob: -3.8290915489196777
    4. ' dd' → logprob: -6.954091548919678
    5. ' defaultdict' → logprob: -8.07909107208252
    6. 'def' → logprob: -8.57909107208252
    7. ' ' → logprob: -8.57909107208252
    8. '   ' → logprob: -8.70409107208252
    9. '[]' → logprob: -8.95409107208252
    10. '{}' → logprob: -8.95409107208252

Token 384: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0076278080232441425
    2. '(int' → logprob: -4.882627964019775
    3. 'list' → logprob: -12.007627487182617
    4. 'lambda' → logprob: -12.757627487182617
    5. '   ' → logprob: -13.007627487182617
    6. '[int' → logprob: -13.132627487182617
    7. '<int' → logprob: -13.257627487182617
    8. 'def' → logprob: -13.382627487182617
    9. '=int' → logprob: -13.757627487182617
    10. '	int' → logprob: -14.007627487182617

Token 385: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.641547679901123
    2. ')' → logprob: -0.891547679901123
    3. ')

' → logprob: -2.766547679901123
    4. '())
' → logprob: -8.266548156738281
    5. '()' → logprob: -9.016548156738281
    6. ')
' → logprob: -9.141548156738281
    7. '())' → logprob: -9.891548156738281
    8. '())

' → logprob: -10.641548156738281
    9. '(int' → logprob: -11.266548156738281
    10. ' )
' → logprob: -11.266548156738281

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015453388914465904
    2. ' for' → logprob: -5.140453338623047
    3. 'for' → logprob: -5.765453338623047
    4. 'stack' → logprob: -7.015453338623047
    5. '	stack' → logprob: -7.265453338623047
    6. '	for' → logprob: -7.390453338623047
    7. ' stack' → logprob: -7.515453338623047
    8. 'Q' → logprob: -7.640453338623047
    9. 'q' → logprob: -7.890453338623047
    10. 'visited' → logprob: -8.515453338623047

Token 387: ' sm' (ID: 1765)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6455268263816833
    2. '   ' → logprob: -1.7705268859863281
    3. 'stack' → logprob: -2.145526885986328
    4. 'q' → logprob: -3.020526885986328
    5. 'def' → logprob: -3.520526885986328
    6. 'Q' → logprob: -3.895526885986328
    7. 'visited' → logprob: -4.270526885986328
    8. ' for' → logprob: -4.770526885986328
    9. 'queue' → logprob: -5.020526885986328
    10. 'from' → logprob: -5.020526885986328

Token 388: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38132336735725403
    2. ' =' → logprob: -1.5063233375549316
    3. '=' → logprob: -2.8813233375549316
    4. '=edge' → logprob: -3.6313233375549316
    5. '.clear' → logprob: -5.381323337554932
    6. ',' → logprob: -6.131323337554932
    7. 'default' → logprob: -6.256323337554932
    8. '.update' → logprob: -6.381323337554932
    9. '.setdefault' → logprob: -7.881323337554932
    10. '[:]' → logprob: -8.13132381439209

Token 389: '0' (ID: 15)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.049804847687482834
    2. '0' → logprob: -3.424804925918579
    3. '(edge' → logprob: -4.5498046875
    4. '(' → logprob: -6.1748046875
    5. ']' → logprob: -6.2998046875
    6. '()]' → logprob: -7.6748046875
    7. '1' → logprob: -8.1748046875
    8. '-' → logprob: -8.4248046875
    9. ' edge' → logprob: -8.9248046875
    10. 'None' → logprob: -9.0498046875

Token 390: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006863963324576616
    2. ']+=' → logprob: -5.631864070892334
    3. ']=' → logprob: -5.756864070892334
    4. ']+' → logprob: -10.131863594055176
    5. ' ]' → logprob: -10.881863594055176
    6. '()]' → logprob: -11.631863594055176
    7. ']
' → logprob: -11.756863594055176
    8. '=' → logprob: -12.381863594055176
    9. '[' → logprob: -13.006863594055176
    10. '0' → logprob: -13.256863594055176

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41005557775497437
    2. ' =' → logprob: -1.1600556373596191
    3. '+=' → logprob: -4.410055637359619
    4. ' +=' → logprob: -4.535055637359619
    5. ']+=' → logprob: -11.285055160522461
    6. '+' → logprob: -12.035055160522461
    7. ',' → logprob: -12.160055160522461
    8. '0' → logprob: -13.285055160522461
    9. '   ' → logprob: -13.410055160522461
    10. '[' → logprob: -13.910055160522461

Token 392: ' inv' (ID: 1827)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5281117558479309
    2. '1' → logprob: -0.9031117558479309
    3. '-' → logprob: -5.778111934661865
    4. 'N' → logprob: -7.403111934661865
    5. 'edge' → logprob: -7.403111934661865
    6. ' ' → logprob: -7.903111934661865
    7. '(' → logprob: -9.778111457824707
    8. 'len' → logprob: -9.903111457824707
    9. 'IN' → logprob: -10.528111457824707
    10. 'True' → logprob: -10.653111457824707

Token 393: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.125000953674316
    3. 'MOD' → logprob: -16.500001907348633
    4. '_mod' → logprob: -16.625001907348633
    5. '0' → logprob: -16.625001907348633
    6. '(' → logprob: -17.000001907348633
    7. 'moder' → logprob: -17.125001907348633
    8. 'mode' → logprob: -17.125001907348633
    9. '=' → logprob: -17.625001907348633
    10. 'm' → logprob: -17.750001907348633

Token 394: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005029928870499134
    2. 'mod' → logprob: -7.625503063201904
    3. '_mod' → logprob: -12.625502586364746
    4. 'c' → logprob: -13.125502586364746
    5. '(mod' → logprob: -13.500502586364746
    6. 'MOD' → logprob: -13.500502586364746
    7. '=' → logprob: -13.625502586364746
    8. '_C' → logprob: -14.250502586364746
    9. '(' → logprob: -14.375502586364746
    10. '_b' → logprob: -14.875502586364746

Token 395: 'urry' (ID: 25001)
  Prédit: 'urry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urry' → logprob: -0.00010545044642640278
    2. 'ury' → logprob: -9.500105857849121
    3. 'urr' → logprob: -11.375105857849121
    4. 'ur' → logprob: -12.375105857849121
    5. 'c' → logprob: -12.625105857849121
    6. 'urse' → logprob: -13.375105857849121
    7. 'u' → logprob: -13.375105857849121
    8. 'urray' → logprob: -13.625105857849121
    9. 'urdy' → logprob: -13.875105857849121
    10. 'arry' → logprob: -14.250105857849121

Token 396: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0173062551766634
    2. '(B' → logprob: -4.767306327819824
    3. '(edge' → logprob: -4.892306327819824
    4. '1' → logprob: -6.892306327819824
    5. '(N' → logprob: -10.767306327819824
    6. '(len' → logprob: -10.892306327819824
    7. 'edge' → logprob: -10.892306327819824
    8. '(M' → logprob: -11.017306327819824
    9. '(
' → logprob: -11.517306327819824
    10. '(edges' → logprob: -11.767306327819824

Token 397: 'IG' (ID: 3205)
  Prédit: 'BUFF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BUFF' → logprob: -0.03622788190841675
    2. 'UFF' → logprob: -3.4112279415130615
    3. 'BUFFER' → logprob: -6.411227703094482
    4. 'BU' → logprob: -8.03622817993164
    5. 'BUF' → logprob: -8.66122817993164
    6. '[' → logprob: -8.78622817993164
    7. 'B' → logprob: -9.16122817993164
    8. 'U' → logprob: -11.03622817993164
    9. 'BUG' → logprob: -11.28622817993164
    10. 'MU' → logprob: -11.41122817993164

Token 398: '_B' (ID: 3201)
  Prédit: 'UFF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UFF' → logprob: -0.47457173466682434
    2. 'BUFF' → logprob: -1.099571704864502
    3. '_B' → logprob: -3.849571704864502
    4. '_BUFF' → logprob: -4.349571704864502
    5. 'FF' → logprob: -4.724571704864502
    6. '_F' → logprob: -7.724571704864502
    7. 'F' → logprob: -8.22457218170166
    8. '_' → logprob: -8.34957218170166
    9. 'UF' → logprob: -8.72457218170166
    10. 'uff' → logprob: -9.09957218170166

Token 399: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14178328216075897
    2. '[' → logprob: -2.2667832374572754
    3. '0' → logprob: -4.641783237457275
    4. ',N' → logprob: -5.016783237457275
    5. '[N' → logprob: -5.391783237457275
    6. '1' → logprob: -6.141783237457275
    7. ' ,' → logprob: -6.266783237457275
    8. 'N' → logprob: -7.891783237457275
    9. ',B' → logprob: -7.891783237457275
    10. '**' → logprob: -8.141783714294434

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05655401200056076
    2. '2' → logprob: -3.681554079055786
    3. '0' → logprob: -4.056553840637207
    4. ',' → logprob: -5.181553840637207
    5. '3' → logprob: -6.431553840637207
    6. ' ' → logprob: -6.806553840637207
    7. 'GG' → logprob: -7.056553840637207
    8. 'BB' → logprob: -7.306553840637207
    9. 'sm' → logprob: -7.556553840637207
    10. '4' → logprob: -7.806553840637207

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008231215178966522
    2. ' ,' → logprob: -5.008231163024902
    3. ',B' → logprob: -7.258231163024902
    4. ',N' → logprob: -8.383231163024902
    5. ',(' → logprob: -8.508231163024902
    6. ',M' → logprob: -9.008231163024902
    7. '%' → logprob: -9.383231163024902
    8. '   ' → logprob: -9.508231163024902
    9. ',m' → logprob: -10.758231163024902
    10. ',n' → logprob: -11.383231163024902

Token 402: ' pow' (ID: 9779)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027263011783361435
    2. 'edge' → logprob: -4.527263164520264
    3. '(' → logprob: -4.902263164520264
    4. '(edge' → logprob: -5.652263164520264
    5. '(B' → logprob: -6.777263164520264
    6. 'BB' → logprob: -6.777263164520264
    7. '-' → logprob: -7.152263164520264
    8. '0' → logprob: -7.777263164520264
    9. 'pow' → logprob: -8.152262687683105
    10. ' ' → logprob: -8.402262687683105

Token 403: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.26906606554985046
    2. '(' → logprob: -1.7690660953521729
    3. '(edge' → logprob: -3.019066095352173
    4. '(M' → logprob: -4.894065856933594
    5. '(N' → logprob: -5.644065856933594
    6. '(IN' → logprob: -6.894065856933594
    7. '((' → logprob: -6.894065856933594
    8. '(pow' → logprob: -7.019065856933594
    9. 'edge' → logprob: -7.894065856933594
    10. '(-' → logprob: -7.894065856933594

Token 404: 'IG' (ID: 3205)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.21792005002498627
    2. '2' → logprob: -2.4679200649261475
    3. 'BB' → logprob: -3.3429200649261475
    4. 'B' → logprob: -3.7179200649261475
    5. '(' → logprob: -4.717919826507568
    6. 'N' → logprob: -4.717919826507568
    7. 'BIG' → logprob: -4.967919826507568
    8. '1' → logprob: -5.217919826507568
    9. '(B' → logprob: -5.592919826507568
    10. 'edge' → logprob: -5.717919826507568

Token 405: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0013589247828349471
    2. 'B' → logprob: -7.126358985900879
    3. '(' → logprob: -7.751358985900879
    4. '_BUFF' → logprob: -10.001358985900879
    5. '_b' → logprob: -11.501358985900879
    6. '-' → logprob: -11.751358985900879
    7. '[' → logprob: -11.876358985900879
    8. '(B' → logprob: -11.876358985900879
    9. 'BUFF' → logprob: -12.001358985900879
    10. '_BIG' → logprob: -12.376358985900879

Token 406: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5640552043914795
    2. 'N' → logprob: -1.5640552043914795
    3. 'edge' → logprob: -1.8140552043914795
    4. '(N' → logprob: -2.4390552043914795
    5. ',N' → logprob: -2.5640552043914795
    6. '(edge' → logprob: -2.5640552043914795
    7. '(' → logprob: -2.9390552043914795
    8. '2' → logprob: -3.1890552043914795
    9. '-' → logprob: -3.8140552043914795
    10. '1' → logprob: -4.564055442810059

Token 407: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19395610690116882
    2. ',' → logprob: -1.8189561367034912
    3. ',N' → logprob: -4.818955898284912
    4. ',-' → logprob: -6.193955898284912
    5. '(N' → logprob: -6.693955898284912
    6. '+' → logprob: -7.943955898284912
    7. '```' → logprob: -7.943955898284912
    8. ' -' → logprob: -8.06895637512207
    9. ' ,' → logprob: -8.31895637512207
    10. '()-' → logprob: -8.31895637512207

Token 408: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2109789401292801
    2. '1' → logprob: -2.0859789848327637
    3. '2' → logprob: -2.8359789848327637
    4. '+' → logprob: -5.710978984832764
    5. '0' → logprob: -7.335978984832764
    6. '3' → logprob: -7.710978984832764
    7. '
' → logprob: -7.710978984832764
    8. '-N' → logprob: -7.835978984832764
    9. ' -' → logprob: -7.960978984832764
    10. 'N' → logprob: -8.210978507995605

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12440504133701324
    2. '-' → logprob: -2.6244051456451416
    3. ',-' → logprob: -4.1244049072265625
    4. ',N' → logprob: -4.8744049072265625
    5. ')-' → logprob: -5.3744049072265625
    6. ' ,' → logprob: -5.3744049072265625
    7. ',M' → logprob: -5.8744049072265625
    8. ')' → logprob: -5.9994049072265625
    9. ',B' → logprob: -5.9994049072265625
    10. '),' → logprob: -7.2494049072265625

Token 410: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00015991552209015936
    2. '998' → logprob: -9.000160217285156
    3. '   ' → logprob: -11.625160217285156
    4. ' MOD' → logprob: -11.750160217285156
    5. '
' → logprob: -12.000160217285156
    6. ')' → logprob: -13.000160217285156
    7. '999' → logprob: -13.250160217285156
    8. '997' → logprob: -13.750160217285156
    9. '(M' → logprob: -13.875160217285156
    10. '-' → logprob: -13.875160217285156

Token 411: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.003090132027864456
    2. 'US' → logprob: -5.878089904785156
    3. ')' → logprob: -9.628089904785156
    4. '))' → logprob: -10.128089904785156
    5. '[' → logprob: -10.378089904785156
    6. 'L' → logprob: -11.128089904785156
    7. '```' → logprob: -11.253089904785156
    8. '(' → logprob: -11.378089904785156
    9. '
' → logprob: -11.753089904785156
    10. ')))' → logprob: -12.003089904785156

Token 412: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.000822495436295867
    2. 'S' → logprob: -7.1258225440979
    3. 'us' → logprob: -12.000822067260742
    4. '8' → logprob: -12.625822067260742
    5. 'УС' → logprob: -13.375822067260742
    6. '   ' → logprob: -14.000822067260742
    7. '3' → logprob: -14.000822067260742
    8. ')' → logprob: -14.625822067260742
    9. '53' → logprob: -14.625822067260742
    10. 'MOD' → logprob: -14.875822067260742

Token 413: ')-' (ID: 14080)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.15708142518997192
    2. ',' → logprob: -2.282081365585327
    3. ')' → logprob: -3.657081365585327
    4. ')-' → logprob: -4.282081604003906
    5. '-' → logprob: -6.532081604003906
    6. ')%' → logprob: -7.657081604003906
    7. '   ' → logprob: -7.782081604003906
    8. ' ,' → logprob: -8.532081604003906
    9. '))' → logprob: -8.657081604003906
    10. ',-' → logprob: -9.157081604003906

Token 414: 'BIG' (ID: 118898)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003065030323341489
    2. ' ' → logprob: -8.250306129455566
    3. '   ' → logprob: -11.500306129455566
    4. '0' → logprob: -12.125306129455566
    5. '
' → logprob: -12.250306129455566
    6. '  ' → logprob: -12.750306129455566
    7. ',' → logprob: -13.062806129455566
    8. 'sm' → logprob: -13.375306129455566
    9. '         ' → logprob: -13.500306129455566
    10. '           ' → logprob: -13.812806129455566

Token 415: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.019930094480514526
    2. 'B' → logprob: -4.394929885864258
    3. 'BUFF' → logprob: -5.644929885864258
    4. '_BUFF' → logprob: -5.894929885864258
    5. '1' → logprob: -7.269929885864258
    6. ' ' → logprob: -9.144929885864258
    7. 'Buff' → logprob: -9.394929885864258
    8. '-' → logprob: -10.144929885864258
    9. '   ' → logprob: -11.019929885864258
    10. '```' → logprob: -11.144929885864258

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.592309296131134
    2. '+' → logprob: -0.842309296131134
    3. ')' → logprob: -4.717309474945068
    4. ' +' → logprob: -6.092309474945068
    5. '1' → logprob: -6.592309474945068
    6. '),' → logprob: -6.967309474945068
    7. '   ' → logprob: -7.217309474945068
    8. ' ,' → logprob: -7.592309474945068
    9. ')%' → logprob: -8.21730899810791
    10. '-' → logprob: -8.34230899810791

Token 417: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007113590254448354
    2. ' MOD' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.000711441040039
    4. '           ' → logprob: -16.87571144104004
    5. '998' → logprob: -17.00071144104004
    6. '(M' → logprob: -17.00071144104004
    7. ' ' → logprob: -17.12571144104004
    8. '       ' → logprob: -17.25071144104004
    9. '  ' → logprob: -17.25071144104004
    10. '_MOD' → logprob: -17.25071144104004

Token 418: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -1.3856492842023727e-06
    2. 'OL' → logprob: -15.125000953674316
    3. 'MOD' → logprob: -15.375000953674316
    4. 'ul' → logprob: -15.875000953674316
    5. '```' → logprob: -16.250001907348633
    6. 'L' → logprob: -16.375001907348633
    7. 'US' → logprob: -16.500001907348633
    8. 'ULAR' → logprob: -16.750001907348633
    9. 'ulus' → logprob: -16.875001907348633
    10. ' UL' → logprob: -17.125001907348633

Token 419: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.0004889304982498288
    2. 'S' → logprob: -7.625488758087158
    3. 'us' → logprob: -14.625489234924316
    4. 'AS' → logprob: -15.750489234924316
    5. '   ' → logprob: -16.12548828125
    6. 'УС' → logprob: -16.25048828125
    7. ' US' → logprob: -17.25048828125
    8. 'MOD' → logprob: -17.37548828125
    9. 'L' → logprob: -17.50048828125
    10. '
' → logprob: -18.37548828125

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020449401927180588
    2. ')
' → logprob: -8.750204086303711
    3. '))' → logprob: -10.625204086303711
    4. '   ' → logprob: -11.500204086303711
    5. ' )' → logprob: -12.125204086303711
    6. ')))' → logprob: -13.000204086303711
    7. ')}' → logprob: -13.875204086303711
    8. '),' → logprob: -14.625204086303711
    9. ')

' → logprob: -14.750204086303711
    10. ')`' → logprob: -14.875204086303711

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006229402497410774
    2. '<|end|>' → logprob: -5.881229400634766
    3. '    
' → logprob: -6.256229400634766
    4. ' for' → logprob: -7.631229400634766
    5. 'for' → logprob: -8.381229400634766
    6. '    ' → logprob: -9.256229400634766
    7. '
' → logprob: -9.256229400634766
    8. ')' → logprob: -9.381229400634766
    9. 'def' → logprob: -9.506229400634766
    10. '...' → logprob: -9.881229400634766

Token 422: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2592751681804657
    2. 'for' (adapté à ' for') → logprob: -2.134275197982788
    3. ' for' → logprob: -2.509275197982788
    4. 'def' → logprob: -5.884274959564209
    5. ' sm' → logprob: -6.759274959564209
    6. 'u' → logprob: -6.759274959564209
    7. ' queue' → logprob: -6.821774959564209
    8. 'sm' → logprob: -6.884274959564209
    9. 'q' → logprob: -7.196774959564209
    10. 'Q' → logprob: -7.384274959564209

Token 423: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7903514504432678
    2. 'u' → logprob: -1.415351390838623
    3. 'v' → logprob: -2.665351390838623
    4. 'x' → logprob: -3.040351390838623
    5. ' i' → logprob: -3.290351390838623
    6. ' u' → logprob: -3.915351390838623
    7. 'a' → logprob: -4.040351390838623
    8. '(u' → logprob: -4.165351390838623
    9. ' v' → logprob: -4.540351390838623
    10. 'k' → logprob: -4.790351390838623

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.623202919960022
    2. ',' → logprob: -0.873202919960022
    3. 'in' → logprob: -3.1232028007507324
    4. ' ,' → logprob: -6.498202800750732
    5. ' ' → logprob: -9.62320327758789
    6. ',in' → logprob: -9.87320327758789
    7. ',G' → logprob: -9.99820327758789
    8. ',node' → logprob: -10.12320327758789
    9. ',line' → logprob: -10.24820327758789
    10. '_,' → logprob: -10.31070327758789

Token 425: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025137176737189293
    2. 'edge' → logprob: -4.275136947631836
    3. ' range' → logprob: -4.525136947631836
    4. ' edge' → logprob: -9.900136947631836
    5. 're' → logprob: -12.150136947631836
    6. 'enumer' → logprob: -12.150136947631836
    7. ' ' → logprob: -12.650136947631836
    8. '   ' → logprob: -13.150136947631836
    9. '  ' → logprob: -13.150136947631836
    10. 'sorted' → logprob: -13.525136947631836

Token 426: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0006896786508150399
    2. 'range' → logprob: -7.375689506530762
    3. '(' → logprob: -10.000689506530762
    4. '(edge' → logprob: -11.500689506530762
    5. ' range' → logprob: -12.500689506530762
    6. '(list' → logprob: -13.125689506530762
    7. '(sorted' → logprob: -15.125689506530762
    8. '((' → logprob: -15.250689506530762
    9. '(in' → logprob: -15.250689506530762
    10. 'in' → logprob: -15.750689506530762

Token 427: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004939023870974779
    2. '(len' → logprob: -5.879939079284668
    3. '(' → logprob: -6.254939079284668
    4. 'N' → logprob: -9.129939079284668
    5. 'len' → logprob: -10.004939079284668
    6. '(edge' → logprob: -11.129939079284668
    7. ' (' → logprob: -11.504939079284668
    8. '(n' → logprob: -12.254939079284668
    9. 'edge' → logprob: -12.379939079284668
    10. '(B' → logprob: -12.629939079284668

Token 428: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01834132708609104
    2. 'len' → logprob: -4.018341541290283
    3. '1' → logprob: -9.518341064453125
    4. ' N' → logprob: -9.768341064453125
    5. 'edge' → logprob: -10.893341064453125
    6. '   ' → logprob: -11.643341064453125
    7. '0' → logprob: -11.768341064453125
    8. ' len' → logprob: -12.268341064453125
    9. '(len' → logprob: -12.268341064453125
    10. '(N' → logprob: -12.393341064453125

Token 429: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24990972876548767
    2. ',N' → logprob: -1.62490975856781
    3. '(N' → logprob: -3.8749096393585205
    4. ',len' → logprob: -5.9999098777771
    5. ' ,' → logprob: -7.7499098777771
    6. '   ' → logprob: -8.624909400939941
    7. 'N' → logprob: -9.124909400939941
    8. '(len' → logprob: -9.749909400939941
    9. '(' → logprob: -9.874909400939941
    10. 'len' → logprob: -10.499909400939941

Token 430: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030234400182962418
    2. ')):
' → logprob: -3.9052343368530273
    3. ')):' → logprob: -4.780234336853027
    4. ' +' → logprob: -6.905234336853027
    5. ',' → logprob: -9.655234336853027
    6. '   ' → logprob: -10.405234336853027
    7. '-' → logprob: -10.405234336853027
    8. '):
' → logprob: -10.530234336853027
    9. '):' → logprob: -10.780234336853027
    10. '))' → logprob: -10.905234336853027

Token 431: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6170673370361328
    2. '1' → logprob: -0.8670673370361328
    3. '2' → logprob: -3.367067337036133
    4. '(' → logprob: -6.492067337036133
    5. '()+' → logprob: -6.492067337036133
    6. 'N' → logprob: -6.742067337036133
    7. '```' → logprob: -7.742067337036133
    8. '()' → logprob: -8.742067337036133
    9. '(N' → logprob: -8.867067337036133
    10. ' +' → logprob: -9.117067337036133

Token 432: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8848618865013123
    2. '):
' → logprob: -1.009861946105957
    3. ')):
' → logprob: -2.134861946105957
    4. ')):' → logprob: -2.259861946105957
    5. '))' → logprob: -9.259861946105957
    6. '   ' → logprob: -9.509861946105957
    7. ')):
' → logprob: -9.634861946105957
    8. '):
' → logprob: -10.384861946105957
    9. '       ' → logprob: -11.134861946105957
    10. ')' → logprob: -11.384861946105957

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004013561410829425
    2. '   ' → logprob: -8.000401496887207
    3. ',' → logprob: -10.125401496887207
    4. '#' → logprob: -12.375401496887207
    5. ' s' → logprob: -12.875401496887207
    6. '```' → logprob: -12.875401496887207
    7. ' for' → logprob: -13.250401496887207
    8. '           ' → logprob: -13.375401496887207
    9. ')' → logprob: -13.375401496887207
    10. '    ' → logprob: -13.625401496887207

Token 434: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8295503854751587
    2. 'sm' → logprob: -1.7045503854751587
    3. ' sm' → logprob: -1.8295503854751587
    4. ' val' → logprob: -2.579550266265869
    5. 'val' → logprob: -3.329550266265869
    6. '   ' → logprob: -4.079550266265869
    7. 'v' → logprob: -4.329550266265869
    8. 's' → logprob: -4.704550266265869
    9. ' s' → logprob: -4.829550266265869
    10. 'x' → logprob: -4.954550266265869

Token 435: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.016074776649475
    2. ' edge' → logprob: -1.516074776649475
    3. 'edge' → logprob: -1.641074776649475
    4. 'idx' → logprob: -1.641074776649475
    5. ' not' → logprob: -4.7660746574401855
    6. ' len' → logprob: -4.8910746574401855
    7. 'len' → logprob: -6.0160746574401855
    8. 'not' → logprob: -6.0160746574401855
    9. '(edge' → logprob: -6.1410746574401855
    10. ' sm' → logprob: -6.5160746574401855

Token 436: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34927618503570557
    2. ' not' → logprob: -1.3492761850357056
    3. 'in' → logprob: -3.724276065826416
    4. 'not' → logprob: -4.974276065826416
    5. '==' → logprob: -6.974276065826416
    6. '-' → logprob: -7.349276065826416
    7. ' ==' → logprob: -7.349276065826416
    8. '>' → logprob: -7.724276065826416
    9. '<' → logprob: -8.099276542663574
    10. ' <' → logprob: -8.474276542663574

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5001287460327148
    2. 'in' → logprob: -1.8751287460327148
    3. '(edge' → logprob: -2.000128746032715
    4. 'edge' → logprob: -2.375128746032715
    5. ' edge' → logprob: -5.000128746032715
    6. '       ' → logprob: -6.625128746032715
    7. '   ' → logprob: -6.625128746032715
    8. '=edge' → logprob: -7.000128746032715
    9. 'def' → logprob: -8.125128746032715
    10. ',' → logprob: -8.375128746032715

Token 438: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.05734667181968689
    2. 'GG' → logprob: -2.9323465824127197
    3. 'sm' → logprob: -6.557346820831299
    4. 'G' → logprob: -7.682346820831299
    5. 'gg' → logprob: -7.932346820831299
    6. ' edge' → logprob: -8.80734634399414
    7. 'edges' → logprob: -11.55734634399414
    8. '(edge' → logprob: -11.68234634399414
    9. ' GG' → logprob: -11.93234634399414
    10. ' sm' → logprob: -12.30734634399414

Token 439: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02429446391761303
    2. ':
' → logprob: -4.399294376373291
    3. ']:' → logprob: -4.899294376373291
    4. '):' → logprob: -5.649294376373291
    5. ' or' → logprob: -8.14929485321045
    6. '):
' → logprob: -9.27429485321045
    7. ']:
' → logprob: -9.52429485321045
    8. '   ' → logprob: -9.89929485321045
    9. '[' → logprob: -10.02429485321045
    10. '       ' → logprob: -10.14929485321045

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037202653475105762
    2. '       ' → logprob: -6.003720283508301
    3. ',' → logprob: -7.628720283508301
    4. ':' → logprob: -8.2537202835083
    5. ' for' → logprob: -9.2537202835083
    6. 'continue' → logprob: -9.5037202835083
    7. '	       ' → logprob: -10.1287202835083
    8. ' continue' → logprob: -10.1287202835083
    9. '#' → logprob: -10.2537202835083
    10. ' =' → logprob: -10.3787202835083

Token 441: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4642355442047119
    2. ' sm' → logprob: -1.339235544204712
    3. 'sm' → logprob: -2.839235544204712
    4. '       ' → logprob: -3.964235544204712
    5. ' continue' → logprob: -4.089235305786133
    6. 'continue' (adapté à ' continue') → logprob: -5.464235305786133
    7. ' s' → logprob: -6.214235305786133
    8. 's' → logprob: -6.714235305786133
    9. '   ' → logprob: -6.714235305786133
    10. ' val' → logprob: -6.839235305786133

Token 442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005251537077128887
    2. '
' → logprob: -8.12552547454834
    3. '        
' → logprob: -9.12552547454834
    4. '   ' → logprob: -10.37552547454834
    5. '           ' → logprob: -10.62552547454834
    6. ',' → logprob: -10.62552547454834
    7. '<|end|>' → logprob: -11.25052547454834
    8. ' for' → logprob: -12.50052547454834
    9. '```' → logprob: -12.75052547454834
    10. '    
' → logprob: -12.87552547454834

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000977671123109758
    2. '   ' → logprob: -7.875977516174316
    3. 'sm' → logprob: -9.000977516174316
    4. '           ' → logprob: -9.375977516174316
    5. ' for' → logprob: -9.500977516174316
    6. 's' → logprob: -9.500977516174316
    7. ' sm' → logprob: -9.750977516174316
    8. '        
' → logprob: -10.000977516174316
    9. ' s' → logprob: -10.500977516174316
    10. ',' → logprob: -11.000977516174316

Token 444: ' vals' (ID: 58985)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09573858231306076
    2. 'sm' → logprob: -4.345738410949707
    3. 'val' → logprob: -4.345738410949707
    4. 'for' → logprob: -4.470738410949707
    5. 'v' → logprob: -4.970738410949707
    6. 's' → logprob: -5.345738410949707
    7. 'prev' → logprob: -5.470738410949707
    8. 'x' → logprob: -5.720738410949707
    9. '   ' → logprob: -5.845738410949707
    10. 'cur' → logprob: -6.095738410949707

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5765396952629089
    2. '=' → logprob: -0.8265396952629089
    3. '   ' → logprob: -8.076539993286133
    4. '       ' → logprob: -8.826539993286133
    5. ',' → logprob: -9.451539993286133
    6. '           ' → logprob: -11.076539993286133
    7. '=edge' → logprob: -11.701539993286133
    8. '[' → logprob: -11.826539993286133
    9. '    ' → logprob: -12.326539993286133
    10. ' ' → logprob: -12.451539993286133

Token 446: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03175820782780647
    2. '[]
' → logprob: -4.7817583084106445
    3. ' [' → logprob: -5.2817583084106445
    4. '[G' → logprob: -5.4067583084106445
    5. 'set' → logprob: -5.5317583084106445
    6. '{' → logprob: -5.9067583084106445
    7. '[(' → logprob: -7.1567583084106445
    8. 'dd' → logprob: -7.1567583084106445
    9. 'sm' → logprob: -7.1567583084106445
    10. 'sum' → logprob: -7.6567583084106445

Token 447: '(G' (ID: 12449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2673603296279907
    2. '()
' → logprob: -1.5173603296279907
    3. '(sm' → logprob: -1.6423603296279907
    4. '(G' → logprob: -2.017360210418701
    5. '()' → logprob: -2.267360210418701
    6. '([' → logprob: -3.267360210418701
    7. '(
' → logprob: -4.392360210418701
    8. '(gr' → logprob: -4.892360210418701
    9. '(s' → logprob: -4.892360210418701
    10. '(edge' → logprob: -7.142360210418701

Token 448: 'GG' (ID: 43469)
  Prédit: 'GG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GG' → logprob: -0.04196397587656975
    2. '(G' → logprob: -3.791964054107666
    3. '[' → logprob: -4.166964054107666
    4. '[G' → logprob: -6.291964054107666
    5. '(' → logprob: -7.166964054107666
    6. '([' → logprob: -8.291963577270508
    7. '{' → logprob: -9.916963577270508
    8. '[(' → logprob: -9.916963577270508
    9. '((' → logprob: -10.416963577270508
    10. '(edge' → logprob: -11.666963577270508

Token 449: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03493226692080498
    2. '[v' → logprob: -4.4099321365356445
    3. '[e' → logprob: -4.6599321365356445
    4. '.values' → logprob: -5.2849321365356445
    5. '.get' → logprob: -6.2849321365356445
    6. '[node' → logprob: -6.6599321365356445
    7. '[x' → logprob: -7.0349321365356445
    8. '[j' → logprob: -7.4099321365356445
    9. '(edge' → logprob: -7.5349321365356445
    10. '[i' → logprob: -7.6599321365356445

Token 450: '(child' (ID: 34164)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.09922384470701218
    2. '(idx' → logprob: -3.0992238521575928
    3. '(i' → logprob: -4.099223613739014
    4. '(e' → logprob: -4.349223613739014
    5. '(v' → logprob: -5.099223613739014
    6. '(x' → logprob: -5.224223613739014
    7. 'edge' → logprob: -5.724223613739014
    8. '((' → logprob: -6.349223613739014
    9. '(n' → logprob: -7.474223613739014
    10. '(j' → logprob: -7.849223613739014

Token 451: ',' (ID: 11)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.15603691339492798
    2. 'for' → logprob: -2.406036853790283
    3. '(child' → logprob: -3.656036853790283
    4. '(edge' → logprob: -4.281036853790283
    5. ' for' → logprob: -5.031036853790283
    6. ')' → logprob: -5.656036853790283
    7. '(' → logprob: -7.031036853790283
    8. '[idx' → logprob: -7.156036853790283
    9. 'idx' → logprob: -7.281036853790283
    10. '()' → logprob: -7.281036853790283

Token 452: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010157158598303795
    2. '-' → logprob: -4.635157108306885
    3. 'N' → logprob: -9.260157585144043
    4. '{}' → logprob: -9.635157585144043
    5. ' ' → logprob: -10.010157585144043
    6. ')' → logprob: -10.385157585144043
    7. 'set' → logprob: -10.635157585144043
    8. '{' → logprob: -10.760157585144043
    9. 'GG' → logprob: -11.385157585144043
    10. '[]' → logprob: -11.510157585144043

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034385151229798794
    2. '-' → logprob: -6.128438472747803
    3. '{' → logprob: -8.003438949584961
    4. ' ' → logprob: -8.128438949584961
    5. 'set' → logprob: -8.503438949584961
    6. 'find' → logprob: -8.878438949584961
    7. ')' → logprob: -9.628438949584961
    8. '1' → logprob: -10.128438949584961
    9. '{-' → logprob: -10.503438949584961
    10. 'N' → logprob: -11.003438949584961

Token 454: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6341983675956726
    2. ')' → logprob: -1.3841984272003174
    3. 'for' → logprob: -1.6341984272003174
    4. '()' → logprob: -3.8841984272003174
    5. '       ' → logprob: -6.509198188781738
    6. '           ' → logprob: -7.884198188781738
    7. '        ' → logprob: -8.009198188781738
    8. '   ' → logprob: -8.009198188781738
    9. ' )' → logprob: -8.509198188781738
    10. ' ' → logprob: -8.884198188781738

Token 455: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.252980500459671
    2. 'for' → logprob: -1.5029804706573486
    3. '       ' → logprob: -7.502980709075928
    4. '           ' → logprob: -8.12798023223877
    5. '        ' → logprob: -9.62798023223877
    6. '               ' → logprob: -10.62798023223877
    7. '   ' → logprob: -10.75298023223877
    8. '	for' → logprob: -11.25298023223877
    9. '            ' → logprob: -11.25298023223877
    10. '          ' → logprob: -11.62798023223877

Token 456: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0024774393532425165
    2. ' child' → logprob: -6.002477645874023
    3. '	child' → logprob: -13.502477645874023
    4. 'children' → logprob: -15.877477645874023
    5. '(child' → logprob: -16.127477645874023
    6. ' ' → logprob: -17.377477645874023
    7. '.child' → logprob: -17.627477645874023
    8. '  ' → logprob: -17.877477645874023
    9. 'c' → logprob: -17.877477645874023
    10. 'edge' → logprob: -18.127477645874023

Token 457: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3484818935394287
    2. 'in' → logprob: -1.2234818935394287
    3. '<|end|>' → logprob: -10.973482131958008
    4. 'child' → logprob: -11.348482131958008
    5. ' ' → logprob: -12.848482131958008
    6. ')' → logprob: -13.223482131958008
    7. '<|end|>' → logprob: -13.973482131958008
    8. 'edge' → logprob: -15.098482131958008
    9. '	in' → logprob: -15.223482131958008
    10. 's' → logprob: -15.473482131958008

Token 458: ' set' (ID: 920)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.003193874144926667
    2. ' edge' → logprob: -5.7531938552856445
    3. '   ' → logprob: -11.753193855285645
    4. ' ' → logprob: -12.628193855285645
    5. '(edge' → logprob: -13.628193855285645
    6. '  ' → logprob: -14.003193855285645
    7. ')' → logprob: -14.003193855285645
    8. '
' → logprob: -14.378193855285645
    9. '=edge' → logprob: -14.628193855285645
    10. 'edges' → logprob: -15.878193855285645

Token 459: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.07914842665195465
    2. 'edge' → logprob: -2.579148530960083
    3. '=edge' → logprob: -8.579148292541504
    4. ' edge' → logprob: -10.454148292541504
    5. '(' → logprob: -11.829148292541504
    6. '()' → logprob: -11.954148292541504
    7. '(
' → logprob: -12.079148292541504
    8. '_edge' → logprob: -12.704148292541504
    9. ')' → logprob: -12.954148292541504
    10. '.edge' → logprob: -13.079148292541504

Token 460: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.816093228830141e-06
    2. 'idx' → logprob: -12.87500286102295
    3. '[' → logprob: -16.125001907348633
    4. ' idx' → logprob: -17.625001907348633
    5. '[index' → logprob: -17.750001907348633
    6. ' [' → logprob: -17.875001907348633
    7. '(idx' → logprob: -18.000001907348633
    8. '[id' → logprob: -18.250001907348633
    9. '[node' → logprob: -18.500001907348633
    10. '	idx' → logprob: -18.500001907348633

Token 461: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.006951576564460993
    2. '])' → logprob: -5.256951808929443
    3. ']' → logprob: -7.756951808929443
    4. ']):' → logprob: -7.756951808929443
    5. ']))
' → logprob: -7.881951808929443
    6. '])):
' → logprob: -8.631951332092285
    7. '])))' → logprob: -9.006951332092285
    8. '])]' → logprob: -10.131951332092285
    9. ']))

' → logprob: -10.506951332092285
    10. ']).' → logprob: -10.881951332092285

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006575119914487004
    2. ')' → logprob: -7.625657558441162
    3. ',' → logprob: -9.625657081604004
    4. '<|end|>' → logprob: -10.125657081604004
    5. '        
' → logprob: -11.625657081604004
    6. '           ' → logprob: -11.750657081604004
    7. 's' → logprob: -12.375657081604004
    8. ' for' → logprob: -12.375657081604004
    9. '
' → logprob: -12.625657081604004
    10. 'vals' → logprob: -12.750657081604004

Token 463: ' X' (ID: 2127)
  Prédit: 'GG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GG' → logprob: -0.19335085153579712
    2. '       ' → logprob: -1.9433507919311523
    3. 'gg' → logprob: -4.818350791931152
    4. 'G' → logprob: -4.943350791931152
    5. 'val' → logprob: -5.318350791931152
    6. 'g' → logprob: -5.943350791931152
    7. 'sm' → logprob: -6.193350791931152
    8. 'for' → logprob: -6.568350791931152
    9. '   ' → logprob: -7.193350791931152
    10. 'v' → logprob: -7.318350791931152

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07463667541742325
    2. '=' → logprob: -2.824636697769165
    3. 'GG' → logprob: -5.824636459350586
    4. 'X' → logprob: -5.824636459350586
    5. '_val' → logprob: -6.324636459350586
    6. 'G' → logprob: -7.324636459350586
    7. '[' → logprob: -7.574636459350586
    8. '_vals' → logprob: -7.699636459350586
    9. 'val' → logprob: -7.824636459350586
    10. 'vals' → logprob: -8.324636459350586

Token 465: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.05294128507375717
    2. '(find' → logprob: -3.42794132232666
    3. ' find' → logprob: -4.05294132232666
    4. '0' → logprob: -8.05294132232666
    5. 'pow' → logprob: -8.17794132232666
    6. '(' → logprob: -8.80294132232666
    7. 'BB' → logprob: -8.80294132232666
    8. ' ' → logprob: -8.92794132232666
    9. ' (' → logprob: -9.05294132232666
    10. '   ' → logprob: -9.05294132232666

Token 466: '_mex' (ID: 152402)
  Prédit: '_mex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mex' → logprob: -0.013988136313855648
    2. '(vals' → logprob: -4.513988018035889
    3. '_vals' → logprob: -6.013988018035889
    4. '(' → logprob: -8.013988494873047
    5. '_mux' → logprob: -10.638988494873047
    6. '(v' → logprob: -11.263988494873047
    7. '\' → logprob: -11.513988494873047
    8. '_' → logprob: -11.763988494873047
    9. '_mes' → logprob: -11.888988494873047
    10. '(_' → logprob: -11.888988494873047

Token 467: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.875009536743164
    3. 'vals' → logprob: -13.625009536743164
    4. '(val' → logprob: -14.625009536743164
    5. '(
' → logprob: -15.625009536743164
    6. '(values' → logprob: -15.750009536743164
    7. ' vals' → logprob: -16.875009536743164
    8. ' (' → logprob: -17.500009536743164
    9. '(vars' → logprob: -17.625009536743164
    10. '
' → logprob: -18.125009536743164

Token 468: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1009819507598877
    2. ')' → logprob: -2.4759819507598877
    3. '       ' → logprob: -4.475981712341309
    4. ')
' → logprob: -7.725981712341309
    5. '())
' → logprob: -9.975981712341309
    6. ' )
' → logprob: -10.350981712341309
    7. '   ' → logprob: -10.975981712341309
    8. '()' → logprob: -10.975981712341309
    9. '()
' → logprob: -11.600981712341309
    10. '+' → logprob: -11.725981712341309

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007574541959911585
    2. '
' → logprob: -8.000757217407227
    3. 'GG' → logprob: -9.000757217407227
    4. '<|end|>' → logprob: -9.375757217407227
    5. ',' → logprob: -10.250757217407227
    6. '   ' → logprob: -10.375757217407227
    7. 'G' → logprob: -10.625757217407227
    8. '```' → logprob: -10.750757217407227
    9. ' G' → logprob: -10.875757217407227
    10. '        
' → logprob: -11.250757217407227

Token 470: ' if' (ID: 538)
  Prédit: 'GG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GG' → logprob: -0.001021970878355205
    2. 'sm' → logprob: -7.376021862030029
    3. '       ' → logprob: -8.001022338867188
    4. '   ' → logprob: -10.876022338867188
    5. 'gg' → logprob: -11.251022338867188
    6. 'G' → logprob: -11.626022338867188
    7. 'SM' → logprob: -12.751022338867188
    8. ' G' → logprob: -13.001022338867188
    9. 'if' (adapté à ' if') → logprob: -13.376022338867188
    10. '           ' → logprob: -13.501022338867188

Token 471: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.2866514325141907
    2. 'idx' → logprob: -1.661651372909546
    3. ' X' → logprob: -3.411651372909546
    4. ' idx' → logprob: -4.161651611328125
    5. 'edge' → logprob: -6.286651611328125
    6. 'GG' → logprob: -6.411651611328125
    7. 'sm' → logprob: -6.911651611328125
    8. 'N' → logprob: -7.036651611328125
    9. '   ' → logprob: -7.161651611328125
    10. 'G' → logprob: -7.411651611328125

Token 472: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.36944735050201416
    2. '>' → logprob: -2.1194472312927246
    3. ' <' → logprob: -2.4944472312927246
    4. ' ==' → logprob: -3.4944472312927246
    5. ' <=' → logprob: -3.9944472312927246
    6. '<' → logprob: -4.244447231292725
    7. ' >=' → logprob: -4.619447231292725
    8. '==' → logprob: -4.744447231292725
    9. ' not' → logprob: -4.994447231292725
    10. '=' → logprob: -5.244447231292725

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011031086556613445
    2. ' =' → logprob: -6.011031150817871
    3. '		' → logprob: -6.511031150817871
    4. '	       ' → logprob: -6.511031150817871
    5. ':' → logprob: -6.761031150817871
    6. '=' → logprob: -7.386031150817871
    7. '               ' → logprob: -7.636031150817871
    8. ' G' → logprob: -7.761031150817871
    9. '<|end|>' → logprob: -8.136031150817871
    10. ',' → logprob: -8.136031150817871

Token 474: ' G' (ID: 499)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.7307920455932617
    2. 'G' (adapté à ' G') → logprob: -1.6057920455932617
    3. ' sm' → logprob: -2.3557920455932617
    4. 'GG' → logprob: -2.3557920455932617
    5. ' G' → logprob: -3.1057920455932617
    6. '           ' → logprob: -4.230792045593262
    7. '       ' → logprob: -4.730792045593262
    8. '   ' → logprob: -4.855792045593262
    9. 'val' → logprob: -5.105792045593262
    10. 'X' → logprob: -5.105792045593262

Token 475: 'GG' (ID: 43469)
  Prédit: 'GG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GG' → logprob: -9.019237768370658e-05
    2. 'G' → logprob: -9.375090599060059
    3. '=' → logprob: -12.750090599060059
    4. '[' → logprob: -14.375090599060059
    5. ' =' → logprob: -14.375090599060059
    6. ' GG' → logprob: -15.125090599060059
    7. '   ' → logprob: -16.125089645385742
    8. '[G' → logprob: -16.125089645385742
    9. ' G' → logprob: -16.375089645385742
    10. 'gg' → logprob: -16.375089645385742

Token 476: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. '.update' → logprob: -15.375004768371582
    4. '.setdefault' → logprob: -16.125003814697266
    5. '[id' → logprob: -16.250003814697266
    6. ' [' → logprob: -16.375003814697266
    7. 'idx' → logprob: -17.000003814697266
    8. ' =' → logprob: -17.000003814697266
    9. '=' → logprob: -17.250003814697266
    10. '```' → logprob: -17.250003814697266

Token 477: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016073083505034447
    2. '=' → logprob: -4.641073226928711
    3. ']=' → logprob: -5.391073226928711
    4. ' =' → logprob: -7.016073226928711
    5. ' ]' → logprob: -7.141073226928711
    6. ')' → logprob: -10.516073226928711
    7. '   ' → logprob: -11.391073226928711
    8. ' ' → logprob: -12.266073226928711
    9. '+' → logprob: -13.516073226928711
    10. '[' → logprob: -13.766073226928711

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519436180591583
    2. ' =' → logprob: -1.501943588256836
    3. '+=' → logprob: -11.876943588256836
    4. ' +=' → logprob: -12.376943588256836
    5. ' ' → logprob: -12.876943588256836
    6. ',' → logprob: -14.876943588256836
    7. ']' → logprob: -16.501943588256836
    8. '[' → logprob: -16.751943588256836
    9. ']=' → logprob: -17.001943588256836
    10. ' ' → logprob: -17.251943588256836

Token 479: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.058329544961452484
    2. '(X' → logprob: -3.0583295822143555
    3. '(B' → logprob: -5.9333295822143555
    4. 'BB' → logprob: -6.3083295822143555
    5. '(pow' → logprob: -6.5583295822143555
    6. 'pow' → logprob: -6.9333295822143555
    7. '(' → logprob: -6.9333295822143555
    8. '((' → logprob: -7.6833295822143555
    9. '(inv' → logprob: -8.433329582214355
    10. '(max' → logprob: -8.558329582214355

Token 480: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04091954976320267
    2. '<|end|>' → logprob: -3.665919542312622
    3. ' else' → logprob: -4.915919780731201
    4. 'else' → logprob: -5.540919780731201
    5. '
' → logprob: -6.915919780731201
    6. 'return' → logprob: -7.040919780731201
    7. '   ' → logprob: -8.165919303894043
    8. ' return' → logprob: -8.165919303894043
    9. '<|end|>' → logprob: -8.790919303894043
    10. '+' → logprob: -9.290919303894043

Token 481: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020875031128525734
    2. '<|end|>' → logprob: -4.520874977111816
    3. ' else' → logprob: -4.895874977111816
    4. 'else' → logprob: -6.770874977111816
    5. ' return' → logprob: -7.770874977111816
    6. 'return' → logprob: -8.145874977111816
    7. '   ' → logprob: -9.270874977111816
    8. '        ' → logprob: -9.395874977111816
    9. '           ' → logprob: -9.520874977111816
    10. ')' → logprob: -10.520874977111816

Token 482: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' (adapté à ' sm') → logprob: -0.15030437707901
    2. 'for' → logprob: -2.5253043174743652
    3. ' sm' → logprob: -3.9003043174743652
    4. 'else' → logprob: -4.525304317474365
    5. '           ' → logprob: -4.650304317474365
    6. '   ' → logprob: -4.775304317474365
    7. ' for' → logprob: -5.650304317474365
    8. '       ' → logprob: -6.025304317474365
    9. 'if' → logprob: -6.525304317474365
    10. 'continue' → logprob: -6.775304317474365

Token 483: '[X' (ID: 118621)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002880337997339666
    2. '[' → logprob: -8.250288009643555
    3. '[X' → logprob: -10.875288009643555
    4. 'idx' → logprob: -13.125288009643555
    5. '+=' → logprob: -13.500288009643555
    6. '[N' → logprob: -13.750288009643555
    7. '[...]' → logprob: -14.875288009643555
    8. ' +=' → logprob: -15.000288009643555
    9. '```' → logprob: -15.000288009643555
    10. 'X' → logprob: -15.000288009643555

Token 484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10140147805213928
    2. ']+=' → logprob: -2.3514015674591064
    3. '+=' → logprob: -6.976401329040527
    4. ']=' → logprob: -9.101401329040527
    5. '-' → logprob: -9.226401329040527
    6. '-=' → logprob: -11.226401329040527
    7. ' ]' → logprob: -11.726401329040527
    8. ' +=' → logprob: -11.976401329040527
    9. '   ' → logprob: -12.101401329040527
    10. '+' → logprob: -12.601401329040527

Token 485: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.024256296455860138
    2. ' +=' → logprob: -3.8992562294006348
    3. '=' → logprob: -5.649256229400635
    4. ' =' → logprob: -9.649256706237793
    5. ' ^=' → logprob: -10.149256706237793
    6. '-=' → logprob: -10.149256706237793
    7. '^' → logprob: -11.149256706237793
    8. ']+=' → logprob: -11.149256706237793
    9. '%=' → logprob: -12.024256706237793
    10. '+=(' → logprob: -12.774256706237793

Token 486: ' (' (ID: 350)
  Prédit: '(sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sm' → logprob: -0.021939091384410858
    2. 'sm' → logprob: -4.021939277648926
    3. '(s' → logprob: -6.896939277648926
    4. '(' → logprob: -6.896939277648926
    5. '(ss' → logprob: -7.271939277648926
    6. ' (' → logprob: -8.146939277648926
    7. '((' → logprob: -9.146939277648926
    8. '(max' → logprob: -9.396939277648926
    9. '1' → logprob: -9.646939277648926
    10. '   ' → logprob: -10.021939277648926

Token 487: 'sm' (ID: 5635)
  Prédit: 'sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.5785666108131409
    2. '(sm' → logprob: -0.8285666108131409
    3. ' sm' → logprob: -6.953566551208496
    4. '(' → logprob: -7.578566551208496
    5. ' (' → logprob: -7.828566551208496
    6. '   ' → logprob: -8.578566551208496
    7. '(s' → logprob: -8.828566551208496
    8. '	sm' → logprob: -9.703566551208496
    9. 'SM' → logprob: -10.078566551208496
    10. '((' → logprob: -10.203566551208496

Token 488: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.001917810644954443
    2. 'X' → logprob: -6.376917839050293
    3. '[idx' → logprob: -9.001917839050293
    4. '[' → logprob: -10.126917839050293
    5. '(X' → logprob: -11.001917839050293
    6. '
' → logprob: -11.876917839050293
    7. 'idx' → logprob: -11.876917839050293
    8. '   ' → logprob: -12.376917839050293
    9. '```' → logprob: -12.501917839050293
    10. ')' → logprob: -13.126917839050293

Token 489: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23684796690940857
    2. ' +' → logprob: -2.2368478775024414
    3. '-' → logprob: -2.7368478775024414
    4. ' -' → logprob: -3.2368478775024414
    5. '*' → logprob: -10.986847877502441
    6. '   ' → logprob: -12.361847877502441
    7. ')' → logprob: -12.486847877502441
    8. ' ' → logprob: -13.611847877502441
    9. '
' → logprob: -13.861847877502441
    10. ' *' → logprob: -13.986847877502441

Token 490: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07651666551828384
    2. '-' → logprob: -3.201516628265381
    3. ' +' → logprob: -3.576516628265381
    4. ' -' → logprob: -5.326516628265381
    5. '*' → logprob: -9.326517105102539
    6. '-sm' → logprob: -11.201517105102539
    7. '-s' → logprob: -11.826517105102539
    8. '^' → logprob: -13.326517105102539
    9. ' *' → logprob: -13.326517105102539
    10. ')' → logprob: -13.451517105102539

Token 491: ' B' (ID: 418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42920002341270447
    2. 'sm' → logprob: -2.0541999340057373
    3. 'pow' → logprob: -2.4291999340057373
    4. 'inv' → logprob: -2.8041999340057373
    5. 'BB' → logprob: -3.3041999340057373
    6. 'BIG' → logprob: -4.179200172424316
    7. 'MOD' → logprob: -4.679200172424316
    8. 'SM' → logprob: -6.429200172424316
    9. '(' → logprob: -6.429200172424316
    10. 'bb' → logprob: -6.554200172424316

Token 492: 'BUFF' (ID: 149994)
  Prédit: 'BUFF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BUFF' → logprob: -0.003793423529714346
    2. 'BIG' → logprob: -6.128793239593506
    3. 'UFF' → logprob: -7.628793239593506
    4. 'BUFFER' → logprob: -7.753793239593506
    5. 'IG' → logprob: -8.003793716430664
    6. 'BU' → logprob: -9.003793716430664
    7. 'BUF' → logprob: -9.628793716430664
    8. 'B' → logprob: -9.753793716430664
    9. '_BUFF' → logprob: -10.753793716430664
    10. 'I' → logprob: -11.378793716430664

Token 493: 'ET' (ID: 2175)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.13784226775169373
    2. 'ET' → logprob: -2.1378421783447266
    3. 'U' → logprob: -4.887842178344727
    4. 'FF' → logprob: -6.512842178344727
    5. 'UF' → logprob: -6.637842178344727
    6. 'FT' → logprob: -8.887842178344727
    7. '[' → logprob: -8.887842178344727
    8. 'ETF' → logprob: -10.012842178344727
    9. 'UFF' → logprob: -10.012842178344727
    10. 'V' → logprob: -10.137842178344727

Token 494: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.2537151277065277
    2. '[X' → logprob: -1.87871515750885
    3. '[N' → logprob: -2.8787150382995605
    4. '[' → logprob: -4.8787150382995605
    5. '[-' → logprob: -5.2537150382995605
    6. 'X' → logprob: -7.1287150382995605
    7. '[len' → logprob: -7.6287150382995605
    8. 'idx' → logprob: -8.378715515136719
    9. 'N' → logprob: -8.628715515136719
    10. '[val' → logprob: -8.878715515136719

Token 495: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03488149866461754
    2. '-' → logprob: -4.159881591796875
    3. ']' → logprob: -4.159881591796875
    4. ']%' → logprob: -7.159881591796875
    5. ' ])' → logprob: -7.284881591796875
    6. '   ' → logprob: -7.659881591796875
    7. '*' → logprob: -8.284881591796875
    8. ' -' → logprob: -8.659881591796875
    9. '       ' → logprob: -9.034881591796875
    10. ']*' → logprob: -9.159881591796875

Token 496: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10025077313184738
    2. ' %' → logprob: -2.350250720977783
    3. ')' → logprob: -10.975251197814941
    4. ')%' → logprob: -10.975251197814941
    5. '%m' → logprob: -12.975251197814941
    6. '%B' → logprob: -13.100251197814941
    7. '%s' → logprob: -13.350251197814941
    8. '
' → logprob: -13.975251197814941
    9. '%D' → logprob: -14.100251197814941
    10. '%x' → logprob: -14.600251197814941

Token 497: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.493430894101039e-05
    2. ' MOD' → logprob: -9.500075340270996
    3. '998' → logprob: -19.25007438659668
    4. '.MOD' → logprob: -19.50007438659668
    5. '_MOD' → logprob: -19.87507438659668
    6. ' ' → logprob: -21.12507438659668
    7. '(M' → logprob: -21.62507438659668
    8. '
' → logprob: -21.75007438659668
    9. 'MODULE' → logprob: -21.75007438659668
    10. '   ' → logprob: -22.12507438659668

Token 498: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -3.128163257315464e-07
    2. 'ul' → logprob: -17.0
    3. ' UL' → logprob: -17.25
    4. 'US' → logprob: -17.375
    5. 'MOD' → logprob: -17.5
    6. 'OL' → logprob: -17.625
    7. 'L' → logprob: -18.125
    8. 'ULAR' → logprob: -18.25
    9. 'ulus' → logprob: -18.25
    10. 'УЛ' → logprob: -18.25

Token 499: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.125000953674316
    3. ' S' → logprob: -16.0
    4. '
' → logprob: -16.25
    5. '...' → logprob: -16.625
    6. ' ' → logprob: -17.5
    7. '

' → logprob: -18.0
    8. 'US' → logprob: -18.25
    9. 'SOR' → logprob: -18.25
    10. '```' → logprob: -18.75

Token 500: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' sm' (ID: 1765)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2279751300811768
    2. '<|end|>' → logprob: -1.2279751300811768
    3. 'return' → logprob: -2.3529751300811768
    4. 'sm' (adapté à ' sm') → logprob: -2.3529751300811768
    5. ' ' → logprob: -2.9779751300811768
    6. '        ' → logprob: -3.1029751300811768
    7. 'else' → logprob: -3.4779751300811768
    8. ' return' → logprob: -3.7279751300811768
    9. ' sm' → logprob: -4.227974891662598
    10. '           ' → logprob: -4.602974891662598

Token 503: '[' (ID: 58)
  Prédit: '[X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.37185534834861755
    2. '[' → logprob: -1.24685537815094
    3. '[N' → logprob: -4.74685525894165
    4. ' =' → logprob: -5.37185525894165
    5. '=' → logprob: -5.37185525894165
    6. 'X' → logprob: -6.37185525894165
    7. '[(' → logprob: -7.24685525894165
    8. '[B' → logprob: -7.74685525894165
    9. '[G' → logprob: -7.87185525894165
    10. '0' → logprob: -7.99685525894165

Token 504: '0' (ID: 15)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08122029900550842
    2. '0' → logprob: -2.5812203884124756
    3. 'GG' → logprob: -6.5812201499938965
    4. 'idx' → logprob: -7.3312201499938965
    5. 'BB' → logprob: -9.331220626831055
    6. 'x' → logprob: -9.831220626831055
    7. '(X' → logprob: -10.331220626831055
    8. '(' → logprob: -10.581220626831055
    9. ' X' → logprob: -11.331220626831055
    10. 'BG' → logprob: -11.706220626831055

Token 505: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07611032575368881
    2. '=' → logprob: -2.701110363006592
    3. ')' → logprob: -5.201110363006592
    4. ']=' → logprob: -7.826110363006592
    5. ' =' → logprob: -8.576109886169434
    6. '])' → logprob: -10.951109886169434
    7. '   ' → logprob: -11.326109886169434
    8. ')]' → logprob: -11.701109886169434
    9. ' ]' → logprob: -12.076109886169434
    10. ')=' → logprob: -12.701109886169434

Token 506: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007102862582542002
    2. ' =' → logprob: -7.375710487365723
    3. '+=' → logprob: -10.000710487365723
    4. '-=' → logprob: -10.750710487365723
    5. '%=' → logprob: -11.625710487365723
    6. ')' → logprob: -12.750710487365723
    7. ' +=' → logprob: -13.750710487365723
    8. ' -=' → logprob: -13.750710487365723
    9. '   ' → logprob: -14.375710487365723
    10. '==' → logprob: -14.625710487365723

Token 507: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.292907877039397e-06
    2. ' =' → logprob: -12.87500286102295
    3. '+=' → logprob: -14.87500286102295
    4. ')' → logprob: -16.125003814697266
    5. '-=' → logprob: -16.625003814697266
    6. '%=' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ')=' → logprob: -19.000003814697266
    9. '==' → logprob: -19.250003814697266
    10. '.=' → logprob: -19.625003814697266

Token 508: ' (' (ID: 350)
  Prédit: '(sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sm' → logprob: -0.06271743029356003
    2. ' (' → logprob: -2.8127174377441406
    3. '(' → logprob: -7.687717437744141
    4. '(ss' → logprob: -10.06271743774414
    5. 'sm' → logprob: -10.18771743774414
    6. ' ' → logprob: -10.68771743774414
    7. '(inv' → logprob: -10.68771743774414
    8. '(mod' → logprob: -10.81271743774414
    9. '(S' → logprob: -10.93771743774414
    10. '(s' → logprob: -10.93771743774414

Token 509: 'sm' (ID: 5635)
  Prédit: '(sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sm' → logprob: -0.12955527007579803
    2. 'sm' → logprob: -2.1295552253723145
    3. ' (' → logprob: -6.3795552253723145
    4. '(mod' → logprob: -8.004555702209473
    5. ' sm' → logprob: -8.754555702209473
    6. '(' → logprob: -9.004555702209473
    7. '   ' → logprob: -9.379555702209473
    8. '	sm' → logprob: -10.254555702209473
    9. 'mod' → logprob: -10.629555702209473
    10. '  ' → logprob: -10.754555702209473

Token 510: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037609596620313823
    2. '0' → logprob: -8.000375747680664
    3. '[X' → logprob: -10.250375747680664
    4. '[idx' → logprob: -12.625375747680664
    5. 'X' → logprob: -13.875375747680664
    6. '[(' → logprob: -15.250375747680664
    7. '   ' → logprob: -16.125375747680664
    8. '```' → logprob: -16.250375747680664
    9. 'sm' → logprob: -16.375375747680664
    10. '(' → logprob: -16.375375747680664

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003712085890583694
    2. 'X' → logprob: -8.750370979309082
    3. '[' → logprob: -9.500370979309082
    4. 'idx' → logprob: -9.625370979309082
    5. '[idx' → logprob: -10.000370979309082
    6. 'sm' → logprob: -11.125370979309082
    7. 'IDX' → logprob: -12.875370979309082
    8. '(' → logprob: -13.000370979309082
    9. '(idx' → logprob: -13.125370979309082
    10. ' ' → logprob: -13.500370979309082

Token 512: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08299367129802704
    2. '-' → logprob: -2.582993745803833
    3. ' +' → logprob: -6.082993507385254
    4. '+' → logprob: -6.332993507385254
    5. ' *' → logprob: -11.207993507385254
    6. ' ' → logprob: -11.582993507385254
    7. '*' → logprob: -12.082993507385254
    8. ')' → logprob: -13.207993507385254
    9. '-B' → logprob: -13.457993507385254
    10. '   ' → logprob: -13.582993507385254

Token 513: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.45162487030029297
    2. ' -' → logprob: -1.326624870300293
    3. '*' → logprob: -3.201624870300293
    4. '+' → logprob: -3.451624870300293
    5. ' *' → logprob: -3.951624870300293
    6. ' +' → logprob: -5.201624870300293
    7. '           ' → logprob: -8.451624870300293
    8. '-B' → logprob: -8.826624870300293
    9. '   ' → logprob: -9.076624870300293
    10. ' ' → logprob: -9.576624870300293

Token 514: ' B' (ID: 418)
  Prédit: 'BB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BB' → logprob: -0.0029343178030103445
    2. ' B' → logprob: -6.877934455871582
    3. 'pow' → logprob: -7.877934455871582
    4. '(B' → logprob: -8.127934455871582
    5. 'B' → logprob: -8.252934455871582
    6. 'BBBB' → logprob: -8.502934455871582
    7. '(' → logprob: -9.002934455871582
    8. 'GB' → logprob: -9.252934455871582
    9. 'sm' → logprob: -9.252934455871582
    10. '   ' → logprob: -9.502934455871582

Token 515: 'BUFF' (ID: 149994)
  Prédit: 'BUFF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BUFF' → logprob: -0.07908729463815689
    2. 'UFF' → logprob: -2.579087257385254
    3. 'FF' → logprob: -8.954087257385254
    4. 'BUFFER' → logprob: -9.829087257385254
    5. 'BU' → logprob: -12.079087257385254
    6. '[' → logprob: -12.579087257385254
    7. '_BUFF' → logprob: -13.704087257385254
    8. 'Buff' → logprob: -14.204087257385254
    9. 'U' → logprob: -14.329087257385254
    10. 'BUF' → logprob: -15.204087257385254

Token 516: 'ET' (ID: 2175)
  Prédit: 'ET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.004684899467974901
    2. 'F' → logprob: -5.379684925079346
    3. 'FF' → logprob: -10.129684448242188
    4. 'ЕТ' → logprob: -12.379684448242188
    5. '_ET' → logprob: -12.629684448242188
    6. '_F' → logprob: -12.754684448242188
    7. '[' → logprob: -13.129684448242188
    8. 'FT' → logprob: -13.254684448242188
    9. 'ETF' → logprob: -13.504684448242188
    10. '```' → logprob: -13.879684448242188

Token 517: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001266613689949736
    2. 'idx' → logprob: -9.000126838684082
    3. '[' → logprob: -13.375126838684082
    4. '(idx' → logprob: -14.375126838684082
    5. ' idx' → logprob: -14.625126838684082
    6. '   ' → logprob: -15.125126838684082
    7. '	idx' → logprob: -15.750126838684082
    8. '       ' → logprob: -17.125125885009766
    9. '           ' → logprob: -17.250125885009766
    10. '[index' → logprob: -17.625125885009766

Token 518: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004234051739331335
    2. ')%' → logprob: -7.875423431396484
    3. ' )' → logprob: -10.250423431396484
    4. '[idx' → logprob: -12.500423431396484
    5. '   ' → logprob: -13.625423431396484
    6. '       ' → logprob: -14.250423431396484
    7. '*' → logprob: -14.500423431396484
    8. '+' → logprob: -14.500423431396484
    9. ']' → logprob: -15.500423431396484
    10. '           ' → logprob: -15.750423431396484

Token 519: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7588135600090027
    2. ')%' → logprob: -1.2588136196136475
    3. '%' → logprob: -1.5088136196136475
    4. ' %' → logprob: -3.6338136196136475
    5. ']%' → logprob: -9.508813858032227
    6. '           ' → logprob: -10.133813858032227
    7. ' )' → logprob: -10.883813858032227
    8. '
' → logprob: -12.008813858032227
    9. ']' → logprob: -12.008813858032227
    10. ' ' → logprob: -12.133813858032227

Token 520: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.018150296062231064
    2. ' MOD' → logprob: -4.018150329589844
    3. '_MOD' → logprob: -15.393150329589844
    4. '.MOD' → logprob: -16.018150329589844
    5. ' ' → logprob: -16.768150329589844
    6. '```' → logprob: -18.268150329589844
    7. '
' → logprob: -18.518150329589844
    8. '   ' → logprob: -19.018150329589844
    9. '(M' → logprob: -19.143150329589844
    10. '998' → logprob: -19.268150329589844

Token 521: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -3.214019307051785e-05
    2. 'L' → logprob: -10.500032424926758
    3. 'US' → logprob: -12.625032424926758
    4. 'ULAR' → logprob: -15.000032424926758
    5. 'MOD' → logprob: -15.250032424926758
    6. 'OL' → logprob: -15.625032424926758
    7. '_UL' → logprob: -16.375032424926758
    8. 'ULE' → logprob: -17.000032424926758
    9. '_' → logprob: -17.000032424926758
    10. '
' → logprob: -17.250032424926758

Token 522: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.20141948759555817
    2. 'S' → logprob: -1.701419472694397
    3. '   ' → logprob: -13.326419830322266
    4. '
' → logprob: -14.076419830322266
    5. 'us' → logprob: -14.951419830322266
    6. '\' → logprob: -14.951419830322266
    7. '```' → logprob: -15.201419830322266
    8. 'MOD' → logprob: -15.326419830322266
    9. 'УС' → logprob: -15.326419830322266
    10. ' US' → logprob: -15.326419830322266

Token 523: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0205577611923218
    2. '<|end|>' → logprob: -1.0205577611923218
    3. '       ' → logprob: -1.5205577611923218
    4. 'return' → logprob: -3.0205578804016113
    5. '	return' → logprob: -5.645557880401611
    6. ' return' → logprob: -5.645557880401611
    7. '           ' → logprob: -6.020557880401611
    8. '<|end|>' → logprob: -8.020557403564453
    9. '```' → logprob: -8.145557403564453
    10. '.' → logprob: -8.145557403564453

Token 525: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14448052644729614
    2. '   ' → logprob: -2.0194804668426514
    3. ' return' → logprob: -6.7694807052612305
    4. 'for' → logprob: -8.26948070526123
    5. '	return' → logprob: -8.76948070526123
    6. '
' → logprob: -9.14448070526123
    7. '       ' → logprob: -10.26948070526123
    8. '<|end|>' → logprob: -10.51948070526123
    9. '#' → logprob: -11.01948070526123
    10. ' ' → logprob: -11.39448070526123

Token 526: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.4943590462207794
    2. 'GG' → logprob: -0.994359016418457
    3. ' sm' → logprob: -4.994359016418457
    4. '(G' → logprob: -5.119359016418457
    5. 'G' → logprob: -5.494359016418457
    6. ' G' → logprob: -6.369359016418457
    7. '(' → logprob: -7.744359016418457
    8. 'gg' → logprob: -7.994359016418457
    9. '(sm' → logprob: -7.994359016418457
    10. ' GG' → logprob: -8.369359016418457

Token 527: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9628065228462219
    2. 'def' → logprob: -1.0878064632415771
    3. 'for' → logprob: -2.087806463241577
    4. '<|end|>' → logprob: -3.212806463241577
    5. 'edge' → logprob: -3.712806463241577
    6. 'result' → logprob: -4.337806701660156
    7. ')' → logprob: -4.462806701660156
    8. 'edges' → logprob: -4.587806701660156
    9. 'graph' → logprob: -4.837806701660156
    10. 'print' → logprob: -5.212806701660156

Token 529: ' input' (ID: 3422)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.579348623752594
    2. ' main' → logprob: -0.829348623752594
    3. 'solve' → logprob: -6.579348564147949
    4. ' solve' → logprob: -6.704348564147949
    5. 'process' → logprob: -9.20434856414795
    6. 'read' → logprob: -9.20434856414795
    7. 'parse' → logprob: -9.57934856414795
    8. ' process' → logprob: -9.82934856414795
    9. ' grund' → logprob: -10.07934856414795
    10. ' read' → logprob: -10.20434856414795

Token 530: 'ifier' (ID: 4550)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19135700166225433
    2. '():' → logprob: -1.8163570165634155
    3. '():
' → logprob: -5.816357135772705
    4. '_edges' → logprob: -6.066357135772705
    5. '_line' → logprob: -6.316357135772705
    6. '_edge' → logprob: -6.691357135772705
    7. '()>' → logprob: -6.941357135772705
    8. 'edge' → logprob: -8.316356658935547
    9. '_data' → logprob: -8.441356658935547
    10. '=' → logprob: -8.441356658935547

Token 531: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007006505969911814
    2. '(line' → logprob: -5.757006645202637
    3. '(edge' → logprob: -6.257006645202637
    4. '():
' → logprob: -7.132006645202637
    5. '(' → logprob: -8.507006645202637
    6. '()' → logprob: -8.632006645202637
    7. '(s' → logprob: -8.882006645202637
    8. '(edges' → logprob: -9.382006645202637
    9. ' ():' → logprob: -9.507006645202637
    10. '(input' → logprob: -9.632006645202637

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009941066382452846
    2. 'import' → logprob: -7.6259942054748535
    3. ' for' → logprob: -9.125993728637695
    4. 'try' → logprob: -9.750993728637695
    5. ' while' → logprob: -10.000993728637695
    6. 'n' → logprob: -10.000993728637695
    7. 'def' → logprob: -10.250993728637695
    8. '```' → logprob: -10.625993728637695
    9. ' try' → logprob: -10.750993728637695
    10. ' import' → logprob: -10.750993728637695

Token 533: ' m' (ID: 284)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.18734000623226166
    2. 'edges' → logprob: -2.437340021133423
    3. ' edge' → logprob: -3.937340021133423
    4. 'E' → logprob: -4.687339782714844
    5. 'import' → logprob: -4.687339782714844
    6. 'e' → logprob: -5.062339782714844
    7. '   ' → logprob: -5.312339782714844
    8. 'graph' → logprob: -5.437339782714844
    9. 'n' → logprob: -5.812339782714844
    10. 'd' → logprob: -5.937339782714844

Token 534: 'card' (ID: 7687)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.531300961971283
    2. '=' → logprob: -0.906300961971283
    3. '=int' → logprob: -5.281301021575928
    4. 'ap' → logprob: -6.781301021575928
    5. '   ' → logprob: -7.406301021575928
    6. '=sys' → logprob: -7.781301021575928
    7. 'def' → logprob: -8.15630054473877
    8. '=input' → logprob: -8.53130054473877
    9. 'e' → logprob: -9.40630054473877
    10. ' ' → logprob: -9.53130054473877

Token 535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3235877752304077
    2. '=' → logprob: -1.3235877752304077
    3. 's' → logprob: -5.698587894439697
    4. '=int' → logprob: -6.823587894439697
    5. '=input' → logprob: -7.073587894439697
    6. '   ' → logprob: -7.323587894439697
    7. '=sys' → logprob: -7.448587894439697
    8. 'def' → logprob: -7.448587894439697
    9. 'e' → logprob: -7.948587894439697
    10. '()' → logprob: -8.073587417602539

Token 536: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00013262155698612332
    2. ' int' → logprob: -9.25013256072998
    3. 'N' → logprob: -10.75013256072998
    4. 'IN' → logprob: -11.75013256072998
    5. '[int' → logprob: -12.87513256072998
    6. 'INT' → logprob: -13.00013256072998
    7. '   ' → logprob: -14.37513256072998
    8. '  ' → logprob: -14.75013256072998
    9. ' ' → logprob: -15.00013256072998
    10. '(int' → logprob: -15.62513256072998

Token 537: '(IN' (ID: 46131)
  Prédit: '(IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(IN' → logprob: -0.0005330175044946373
    2. '(input' → logprob: -7.750533103942871
    3. '(INPUT' → logprob: -10.000533103942871
    4. 'IN' → logprob: -10.250533103942871
    5. '(' → logprob: -11.625533103942871
    6. '(sys' → logprob: -12.125533103942871
    7. 'input' → logprob: -13.125533103942871
    8. '(in' → logprob: -13.750533103942871
    9. '(inp' → logprob: -14.000533103942871
    10. '(read' → logprob: -14.250533103942871

Token 538: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.141186450899113e-05
    2. 'PUT' → logprob: -11.250020980834961
    3. 'put' → logprob: -11.875020980834961
    4. 'p' → logprob: -15.000020980834961
    5. '(P' → logprob: -15.500020980834961
    6. '(' → logprob: -15.875020980834961
    7. '()' → logprob: -16.50002098083496
    8. 'UP' → logprob: -16.62502098083496
    9. '(input' → logprob: -16.75002098083496
    10. '())' → logprob: -16.75002098083496

Token 539: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0020680641755461693
    2. '())
' → logprob: -6.252068042755127
    3. '()' → logprob: -9.002068519592285
    4. ')' → logprob: -12.127068519592285
    5. ' ())' → logprob: -12.502068519592285
    6. '().' → logprob: -12.627068519592285
    7. '()
' → logprob: -13.252068519592285
    8. '())

' → logprob: -13.752068519592285
    9. '();)' → logprob: -14.502068519592285
    10. '(' → logprob: -15.502068519592285

Token 540: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.45267894864082336
    2. 'edge' → logprob: -1.327678918838501
    3. 'graph' → logprob: -3.202678918838501
    4. '   ' → logprob: -3.452678918838501
    5. ' edges' → logprob: -4.82767915725708
    6. 'for' → logprob: -4.95267915725708
    7. 'm' → logprob: -5.95267915725708
    8. '<|end|>' → logprob: -6.45267915725708
    9. ' edge' → logprob: -6.95267915725708
    10. '_edges' → logprob: -7.07767915725708

Token 541: ' rs' (ID: 15181)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1328151375055313
    2. 'edges' → logprob: -2.25781512260437
    3. '   ' → logprob: -4.382815361022949
    4. 'graph' → logprob: -5.507815361022949
    5. 'ed' → logprob: -6.132815361022949
    6. 'card' → logprob: -8.50781536102295
    7. 'm' → logprob: -9.75781536102295
    8. 'cards' → logprob: -9.88281536102295
    9. ' edge' → logprob: -10.00781536102295
    10. 'g' → logprob: -10.19531536102295

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.582966148853302
    2. '=' → logprob: -1.0829660892486572
    3. 'es' → logprob: -2.8329660892486572
    4. '=[]' → logprob: -4.832966327667236
    5. 'e' → logprob: -5.457966327667236
    6. 'edges' → logprob: -5.582966327667236
    7. '=edge' → logprob: -5.582966327667236
    8. 'ange' → logprob: -6.082966327667236
    9. 'ef' → logprob: -6.082966327667236
    10. '_edges' → logprob: -6.082966327667236

Token 543: ' dd' (ID: 18636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006253684870898724
    2. '[]
' → logprob: -5.756253719329834
    3. ' [' → logprob: -7.131253719329834
    4. '{' → logprob: -7.506253719329834
    5. '[]' → logprob: -7.506253719329834
    6. 'dd' → logprob: -8.256253242492676
    7. '[list' → logprob: -8.381253242492676
    8. '[[' → logprob: -9.256253242492676
    9. '[int' → logprob: -9.381253242492676
    10. '[m' → logprob: -10.131253242492676

Token 544: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.15697108209133148
    2. '(set' → logprob: -2.656970977783203
    3. '(int' → logprob: -2.656970977783203
    4. 'list' → logprob: -5.406970977783203
    5. 'set' → logprob: -8.406970977783203
    6. 'int' → logprob: -8.406970977783203
    7. '(lambda' → logprob: -11.531970977783203
    8. '[int' → logprob: -12.656970977783203
    9. '(' → logprob: -13.281970977783203
    10. '[list' → logprob: -13.656970977783203

Token 545: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011247287504374981
    2. ')' → logprob: -4.511247158050537
    3. ')

' → logprob: -9.261247634887695
    4. '())
' → logprob: -9.636247634887695
    5. '   ' → logprob: -11.136247634887695
    6. ')
' → logprob: -11.511247634887695
    7. '()' → logprob: -12.636247634887695
    8. ');' → logprob: -12.761247634887695
    9. 'def' → logprob: -13.261247634887695
    10. '()
' → logprob: -13.511247634887695

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6763525009155273
    2. 'for' → logprob: -0.8013525009155273
    3. ' for' → logprob: -3.1763525009155273
    4. '<|end|>' → logprob: -7.176352500915527
    5. '	for' → logprob: -9.051352500915527
    6. '    
' → logprob: -9.801352500915527
    7. '
' → logprob: -10.676352500915527
    8. '  ' → logprob: -11.051352500915527
    9. 'while' → logprob: -11.176352500915527
    10. 'i' → logprob: -11.176352500915527

Token 547: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010926496179308742
    2. ' for' → logprob: -9.500109672546387
    3. '   ' → logprob: -10.375109672546387
    4. '	for' → logprob: -12.750109672546387
    5. 'while' → logprob: -16.00010871887207
    6. '
' → logprob: -16.75010871887207
    7. '    
' → logprob: -17.50010871887207
    8. '<|end|>' → logprob: -18.87510871887207
    9. 'i' → logprob: -19.37510871887207
    10. ' 
' → logprob: -20.25010871887207

Token 548: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009714908665046096
    2. '_i' → logprob: -7.25097131729126
    3. ' _' → logprob: -8.750971794128418
    4. 'i' → logprob: -9.500971794128418
    5. '_=' → logprob: -11.625971794128418
    6. '__' → logprob: -12.000971794128418
    7. '_
' → logprob: -13.000971794128418
    8. '___' → logprob: -13.500971794128418
    9. '_x' → logprob: -13.500971794128418
    10. '_j' → logprob: -13.625971794128418

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005533903022296727
    2. 'in' → logprob: -7.750553607940674
    3. ' ' → logprob: -10.000553131103516
    4. 'idx' → logprob: -10.375553131103516
    5. '_' → logprob: -11.250553131103516
    6. 'range' → logprob: -11.500553131103516
    7. 'i' → logprob: -11.625553131103516
    8. 'm' → logprob: -12.375553131103516
    9. '  ' → logprob: -12.625553131103516
    10. ' _' → logprob: -13.875553131103516

Token 550: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004927450208924711
    2. ' range' → logprob: -7.625492572784424
    3. ' ' → logprob: -13.375493049621582
    4. 'm' → logprob: -14.000493049621582
    5. '  ' → logprob: -14.500493049621582
    6. 'r' → logprob: -14.625493049621582
    7. '   ' → logprob: -15.000493049621582
    8. 'in' → logprob: -15.500493049621582
    9. '
' → logprob: -15.875493049621582
    10. '_' → logprob: -16.250492095947266

Token 551: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.007453641388565302
    2. 'm' → logprob: -5.007453441619873
    3. ' m' → logprob: -7.632453441619873
    4. ' (' → logprob: -8.882453918457031
    5. '(' → logprob: -9.882453918457031
    6. '   ' → logprob: -10.007453918457031
    7. ')' → logprob: -12.257453918457031
    8. '	m' → logprob: -13.007453918457031
    9. ')m' → logprob: -13.132453918457031
    10. '(
' → logprob: -13.507453918457031

Token 552: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.0011378349736332893
    2. 'm' → logprob: -7.876137733459473
    3. '):
' → logprob: -8.501137733459473
    4. 'ard' → logprob: -9.001137733459473
    5. '=' → logprob: -9.376137733459473
    6. ')' → logprob: -9.376137733459473
    7. 'CARD' → logprob: -9.751137733459473
    8. '(card' → logprob: -10.126137733459473
    9. '):' → logprob: -10.251137733459473
    10. '
' → logprob: -10.751137733459473

Token 553: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4744807481765747
    2. '):
' → logprob: -0.9744807481765747
    3. ')' → logprob: -8.974480628967285
    4. '   ' → logprob: -9.099480628967285
    5. ':' → logprob: -9.474480628967285
    6. '():
' → logprob: -10.224480628967285
    7. '):
' → logprob: -10.974480628967285
    8. '():' → logprob: -10.974480628967285
    9. ':
' → logprob: -12.349480628967285
    10. ',' → logprob: -12.349480628967285

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3581577241420746
    2. ' line' → logprob: -2.3581576347351074
    3. ' idx' → logprob: -2.3581576347351074
    4. 'idx' → logprob: -3.2331576347351074
    5. '   ' → logprob: -3.8581576347351074
    6. 'line' → logprob: -4.233157634735107
    7. ' s' → logprob: -5.108157634735107
    8. 'tokens' → logprob: -5.233157634735107
    9. ' ind' → logprob: -5.483157634735107
    10. ' parts' → logprob: -6.108157634735107

Token 555: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4857778251171112
    2. 'u' → logprob: -1.2357778549194336
    3. 'x' → logprob: -3.8607778549194336
    4. ' a' → logprob: -3.9857778549194336
    5. ' u' → logprob: -4.110777854919434
    6. 'f' → logprob: -4.610777854919434
    7. '   ' → logprob: -5.110777854919434
    8. 'p' → logprob: -5.860777854919434
    9. 'frm' → logprob: -5.985777854919434
    10. 's' → logprob: -6.110777854919434

Token 556: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.10067253559827805
    2. ',' → logprob: -2.350672483444214
    3. 'b' → logprob: -8.850672721862793
    4. ' =' → logprob: -9.475672721862793
    5. ' ,' → logprob: -9.850672721862793
    6. '=' → logprob: -9.850672721862793
    7. ',r' → logprob: -10.600672721862793
    8. ',s' → logprob: -10.600672721862793
    9. ',line' → logprob: -10.600672721862793
    10. ',v' → logprob: -11.100672721862793

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868943452835083
    2. ' =' → logprob: -1.1368943452835083
    3. '   ' → logprob: -10.886894226074219
    4. 'a' → logprob: -13.511894226074219
    5. '=line' → logprob: -14.136894226074219
    6. '=a' → logprob: -14.511894226074219
    7. '    ' → logprob: -14.761894226074219
    8. ' ' → logprob: -14.886894226074219
    9. ',' → logprob: -15.011894226074219
    10. '=input' → logprob: -15.011894226074219

Token 558: ' sorted' (ID: 20099)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04861711338162422
    2. ' map' → logprob: -3.048617124557495
    3. 'IN' → logprob: -10.798617362976074
    4. 'list' → logprob: -12.298617362976074
    5. '(map' → logprob: -12.798617362976074
    6. '   ' → logprob: -14.298617362976074
    7. ' IN' → logprob: -14.423617362976074
    8. 'int' → logprob: -15.423617362976074
    9. 'tuple' → logprob: -15.798617362976074
    10. ' ' → logprob: -16.048616409301758

Token 559: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004719664808362722
    2. '([' → logprob: -6.1297197341918945
    3. '(list' → logprob: -6.3797197341918945
    4. 'map' → logprob: -7.2547197341918945
    5. '(tuple' → logprob: -9.379719734191895
    6. '[' → logprob: -10.629719734191895
    7. ' map' → logprob: -12.254719734191895
    8. 'list' → logprob: -12.379719734191895
    9. '((' → logprob: -12.879719734191895
    10. '(int' → logprob: -12.879719734191895

Token 560: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06205686554312706
    2. 'int' → logprob: -2.81205677986145
    3. '   ' → logprob: -9.937056541442871
    4. 'lambda' → logprob: -11.312056541442871
    5. '(lambda' → logprob: -11.437056541442871
    6. '[int' → logprob: -11.562056541442871
    7. 'IN' → logprob: -12.312056541442871
    8. '```' → logprob: -13.812056541442871
    9. '(' → logprob: -14.312056541442871
    10. '=int' → logprob: -14.312056541442871

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007830903865396976
    2. 'IN' → logprob: -5.25783109664917
    3. '(IN' → logprob: -6.00783109664917
    4. '   ' → logprob: -9.257830619812012
    5. ',map' → logprob: -11.257830619812012
    6. '),' → logprob: -11.632830619812012
    7. ',(' → logprob: -12.507830619812012
    8. ')' → logprob: -13.382830619812012
    9. 'map' → logprob: -13.507830619812012
    10. ',int' → logprob: -13.632830619812012

Token 562: ' IN' (ID: 3203)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.0005824613617733121
    2. 'map' → logprob: -7.500582695007324
    3. ' IN' → logprob: -11.125582695007324
    4. '   ' → logprob: -12.125582695007324
    5. ' map' → logprob: -12.875582695007324
    6. '(IN' → logprob: -12.875582695007324
    7. '[' → logprob: -13.750582695007324
    8. 'sys' → logprob: -14.000582695007324
    9. 'list' → logprob: -14.000582695007324
    10. 'INPUT' → logprob: -14.875582695007324

Token 563: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005715019651688635
    2. 'IN' → logprob: -8.000571250915527
    3. '(IN' → logprob: -9.250571250915527
    4. '(INPUT' → logprob: -10.375571250915527
    5. '(P' → logprob: -10.625571250915527
    6. '[' → logprob: -10.625571250915527
    7. ')' → logprob: -12.000571250915527
    8. '(' → logprob: -12.000571250915527
    9. '
' → logprob: -12.125571250915527
    10. '[P' → logprob: -12.250571250915527

Token 564: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.625003814697266
    3. '(' → logprob: -15.500003814697266
    4. ' ().' → logprob: -15.750003814697266
    5. '()))' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '.split' → logprob: -17.500003814697266
    8. '))' → logprob: -18.625003814697266
    9. '()
' → logprob: -18.625003814697266
    10. '()[' → logprob: -18.750003814697266

Token 565: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0042032902128994465
    2. 'strip' → logprob: -5.5042033195495605
    3. '().' → logprob: -9.504202842712402
    4. '(split' → logprob: -10.379202842712402
    5. ' split' → logprob: -11.254202842712402
    6. 'read' → logprob: -12.754202842712402
    7. 'rstrip' → logprob: -13.504202842712402
    8. '.split' → logprob: -14.004202842712402
    9. '   ' → logprob: -14.754202842712402
    10. '(strip' → logprob: -15.004202842712402

Token 566: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.15889181196689606
    2. '()))
' → logprob: -2.1588919162750244
    3. '))' → logprob: -3.9088919162750244
    4. '()' → logprob: -4.533891677856445
    5. '))
' → logprob: -8.158891677856445
    6. '()));' → logprob: -8.908891677856445
    7. '(' → logprob: -9.533891677856445
    8. '()),' → logprob: -9.908891677856445
    9. '()))
' → logprob: -10.408891677856445
    10. '()))

' → logprob: -10.533891677856445

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023503899574279785
    2. ',' → logprob: -4.64850378036499
    3. '<|end|>' → logprob: -4.77350378036499
    4. '
' → logprob: -6.27350378036499
    5. '   ' → logprob: -7.14850378036499
    6. '        
' → logprob: -7.52350378036499
    7. '[' → logprob: -7.64850378036499
    8. ')' → logprob: -7.77350378036499
    9. '<|end|>' → logprob: -8.523504257202148
    10. ',
' → logprob: -8.523504257202148

Token 568: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' (adapté à ' rs') → logprob: -0.005340605042874813
    2. ' rs' → logprob: -5.630340576171875
    3. '       ' → logprob: -6.505340576171875
    4. '   ' → logprob: -8.880340576171875
    5. '
' → logprob: -9.505340576171875
    6. '	rs' → logprob: -10.755340576171875
    7. 'r' → logprob: -13.005340576171875
    8. '        
' → logprob: -13.755340576171875
    9. '$rs' → logprob: -14.005340576171875
    10. 'rsp' → logprob: -14.505340576171875

Token 569: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.061994802206754684
    2. '[b' → logprob: -2.811994791030884
    3. '[' → logprob: -11.311994552612305
    4. 'a' → logprob: -11.686994552612305
    5. '   ' → logprob: -12.686994552612305
    6. 'b' → logprob: -13.061994552612305
    7. '
' → logprob: -15.061994552612305
    8. ' [' → logprob: -15.186994552612305
    9. '```' → logprob: -15.936994552612305
    10. '    
' → logprob: -16.186994552612305

Token 570: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00022833107504993677
    2. '.append' → logprob: -8.500227928161621
    3. ').' → logprob: -11.375227928161621
    4. ']' → logprob: -12.375227928161621
    5. ' ].' → logprob: -12.750227928161621
    6. '   ' → logprob: -13.375227928161621
    7. 'append' → logprob: -13.500227928161621
    8. ']).' → logprob: -13.500227928161621
    9. '       ' → logprob: -14.250227928161621
    10. ')].' → logprob: -15.375227928161621

Token 571: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.2729995988775045e-06
    2. '.append' → logprob: -12.750006675720215
    3. ' append' → logprob: -12.750006675720215
    4. '_append' → logprob: -15.500006675720215
    5. 'app' → logprob: -16.1250057220459
    6. 'appen' → logprob: -16.8750057220459
    7. '	append' → logprob: -19.5000057220459
    8. 'Append' → logprob: -20.3750057220459
    9. 'add' → logprob: -20.5000057220459
    10. 'appe' → logprob: -21.0000057220459

Token 572: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014239436946809292
    2. '(b' → logprob: -4.264239311218262
    3. ' b' → logprob: -9.514239311218262
    4. '   ' → logprob: -13.639239311218262
    5. '	b' → logprob: -14.139239311218262
    6. '(' → logprob: -15.514239311218262
    7. ' ' → logprob: -17.514240264892578
    8. ' (' → logprob: -17.639240264892578
    9. ')b' → logprob: -17.889240264892578
    10. '(
' → logprob: -18.014240264892578

Token 573: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001295222609769553
    2. ')
' → logprob: -9.000129699707031
    3. ')return' → logprob: -12.875129699707031
    4. '       ' → logprob: -13.750129699707031
    5. '<|end|>' → logprob: -14.125129699707031
    6. ' )' → logprob: -14.500129699707031
    7. '   ' → logprob: -14.875129699707031
    8. '))' → logprob: -15.125129699707031
    9. ')

' → logprob: -16.12512969970703
    10. ')}' → logprob: -16.62512969970703

Token 574: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06331636756658554
    2. '   ' → logprob: -2.8133163452148438
    3. ' return' → logprob: -6.688316345214844
    4. 'for' → logprob: -10.313316345214844
    5. '	return' → logprob: -10.438316345214844
    6. '<|end|>' → logprob: -10.938316345214844
    7. '
' → logprob: -11.563316345214844
    8. '    
' → logprob: -12.313316345214844
    9. ' ' → logprob: -12.438316345214844
    10. 'def' → logprob: -13.938316345214844

Token 576: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.002477200934663415
    2. ' rs' → logprob: -6.002477169036865
    3. '(rs' → logprob: -13.502477645874023
    4. 'rd' → logprob: -17.252477645874023
    5. 'r' → logprob: -17.377477645874023
    6. '$rs' → logprob: -17.877477645874023
    7. '   ' → logprob: -18.252477645874023
    8. '	rs' → logprob: -18.377477645874023
    9. 'rc' → logprob: -18.627477645874023
    10. 'rr' → logprob: -18.877477645874023

Token 577: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015329429879784584
    2. '<|end|>' → logprob: -5.515329360961914
    3. 'for' → logprob: -5.765329360961914
    4. '#' → logprob: -5.765329360961914
    5. 'if' → logprob: -5.765329360961914
    6. '```' → logprob: -7.890329360961914
    7. '
' → logprob: -8.140329360961914
    8. 'data' → logprob: -8.265329360961914
    9. '    
' → logprob: -8.640329360961914
    10. 'res' → logprob: -9.140329360961914

Token 578: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3221074938774109
    2. 'if' → logprob: -1.8221075534820557
    3. 'print' → logprob: -2.6971075534820557
    4. 'res' → logprob: -3.5721075534820557
    5. 'result' → logprob: -4.822107315063477
    6. '#' → logprob: -5.947107315063477
    7. 'rs' → logprob: -6.197107315063477
    8. 'data' → logprob: -6.447107315063477
    9. 'for' → logprob: -6.697107315063477
    10. 'edge' → logprob: -7.572107315063477

Token 579: ' crazy' (ID: 21528)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.029766689985990524
    2. ' main' → logprob: -3.529766798019409
    3. 'def' → logprob: -12.154767036437988
    4. '__' → logprob: -12.279767036437988
    5. 'solve' → logprob: -12.404767036437988
    6. '_main' → logprob: -14.654767036437988
    7. '	main' → logprob: -14.904767036437988
    8. ' solve' → logprob: -15.029767036437988
    9. 'run' → logprob: -15.279767036437988
    10. 'input' → logprob: -15.529767036437988

Token 580: '_cross' (ID: 85618)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9747425317764282
    2. '_graph' → logprob: -2.7247424125671387
    3. '_add' → logprob: -2.8497424125671387
    4. '_edge' → logprob: -2.9747424125671387
    5. '_edges' → logprob: -3.3497424125671387
    6. '_b' → logprob: -3.5997424125671387
    7. '_sum' → logprob: -3.9747424125671387
    8. '_calc' → logprob: -4.099742412567139
    9. '_gr' → logprob: -4.099742412567139
    10. '_math' → logprob: -4.099742412567139

Token 581: 'ing' (ID: 289)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3445701599121094
    2. '(edge' → logprob: -1.4695701599121094
    3. '_edges' → logprob: -3.7195701599121094
    4. '(edges' → logprob: -4.469570159912109
    5. '_' → logprob: -5.469570159912109
    6. 'edge' → logprob: -5.719570159912109
    7. '(line' → logprob: -5.844570159912109
    8. '_edge' → logprob: -6.094570159912109
    9. '(a' → logprob: -6.219570159912109
    10. 'edges' → logprob: -6.844570159912109

Token 582: '(nn' (ID: 75106)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0390506386756897
    2. '(edge' → logprob: -3.289050579071045
    3. '(' → logprob: -7.414050579071045
    4. '(edges' → logprob: -8.539051055908203
    5. '(line' → logprob: -9.914051055908203
    6. ' ():' → logprob: -10.164051055908203
    7. '():
' → logprob: -10.289051055908203
    8. '()' → logprob: -10.539051055908203
    9. '(:' → logprob: -11.539051055908203
    10. '(s' → logprob: -12.289051055908203

Token 583: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3521401882171631
    2. '):
' → logprob: -1.227140188217163
    3. '_' → logprob: -6.602140426635742
    4. '=' → logprob: -7.102140426635742
    5. ')' → logprob: -7.477140426635742
    6. ',' → logprob: -8.477140426635742
    7. '):

' → logprob: -9.477140426635742
    8. ' ):' → logprob: -9.727140426635742
    9. ':' → logprob: -9.977140426635742
    10. 'x' → logprob: -9.977140426635742

Token 584: ' basket' (ID: 17614)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5507374405860901
    2. 'mm' → logprob: -1.8007373809814453
    3. 'edges' → logprob: -2.1757373809814453
    4. ' edge' → logprob: -3.1757373809814453
    5. 'ee' → logprob: -3.8007373809814453
    6. 'rs' → logprob: -3.9257373809814453
    7. ' edges' → logprob: -4.425737380981445
    8. 'rr' → logprob: -4.800737380981445
    9. ' mm' → logprob: -5.425737380981445
    10. 'm' → logprob: -5.425737380981445

Token 585: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39393091201782227
    2. '):
' → logprob: -1.1439309120178223
    3. ',' → logprob: -5.518930912017822
    4. 's' → logprob: -6.018930912017822
    5. '):
' → logprob: -8.768930435180664
    6. ')' → logprob: -9.518930435180664
    7. ':' → logprob: -9.643930435180664
    8. '   ' → logprob: -10.018930435180664
    9. '):

' → logprob: -10.143930435180664
    10. ' ):' → logprob: -10.518930435180664

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20457501709461212
    2. ':' → logprob: -1.7045750617980957
    3. ':
' → logprob: -5.954575061798096
    4. '    
' → logprob: -8.704574584960938
    5. '():' → logprob: -10.079574584960938
    6. '):' → logprob: -10.454574584960938
    7. '):
' → logprob: -10.454574584960938
    8. ',' → logprob: -10.579574584960938
    9. '```' → logprob: -10.704574584960938
    10. ' :' → logprob: -10.954574584960938

Token 587: ' grund' (ID: 34475)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7941746711730957
    2. '   ' → logprob: -2.0441746711730957
    3. 'res' → logprob: -2.1691746711730957
    4. ' result' → logprob: -2.2941746711730957
    5. 'i' → logprob: -3.2941746711730957
    6. ' i' → logprob: -3.5441746711730957
    7. 'result' → logprob: -3.6691746711730957
    8. ' for' → logprob: -4.169174671173096
    9. ' ans' → logprob: -4.294174671173096
    10. 'r' → logprob: -4.419174671173096

Token 588: '_m' (ID: 1285)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.2836827039718628
    2. '   ' → logprob: -2.7836828231811523
    3. '=' → logprob: -3.5336828231811523
    4. ' =' → logprob: -3.9086828231811523
    5. '<|end|>' → logprob: -4.033682823181152
    6. 'iz' → logprob: -4.158682823181152
    7. '<|end|>' → logprob: -4.158682823181152
    8. '_values' → logprob: -4.158682823181152
    9. '    ' → logprob: -4.658682823181152
    10. '_vals' → logprob: -5.283682823181152

Token 589: 'emo' (ID: 7196)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.33005911111831665
    2. ' =' → logprob: -2.580059051513672
    3. '=' → logprob: -2.705059051513672
    4. 'aps' → logprob: -3.080059051513672
    5. 'ex' → logprob: -3.080059051513672
    6. 'e' → logprob: -5.080059051513672
    7. 's' → logprob: -5.205059051513672
    8. 'x' → logprob: -5.580059051513672
    9. 'em' → logprob: -5.580059051513672
    10. 'ask' → logprob: -5.705059051513672

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22740612924098969
    2. ' =' → logprob: -1.6024061441421509
    3. '   ' → logprob: -6.727406024932861
    4. 'ize' → logprob: -8.97740650177002
    5. '={}' → logprob: -8.97740650177002
    6. '    ' → logprob: -9.10240650177002
    7. ' ' → logprob: -9.22740650177002
    8. '  ' → logprob: -9.85240650177002
    9. ',' → logprob: -10.10240650177002
    10. '.setdefault' → logprob: -10.60240650177002

Token 591: ' list' (ID: 1562)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2545119524002075
    2. 'dd' → logprob: -1.8795119524002075
    3. ' {}' → logprob: -3.379511833190918
    4. ' dd' → logprob: -4.129511833190918
    5. 'dict' → logprob: -4.379511833190918
    6. ' dict' → logprob: -5.879511833190918
    7. 'grund' → logprob: -5.879511833190918
    8. '{' → logprob: -6.254511833190918
    9. ' grund' → logprob: -7.504511833190918
    10. '   ' → logprob: -8.004511833190918

Token 592: '(map' (ID: 16946)
  Prédit: '(dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dd' → logprob: -0.5807860493659973
    2. '(' → logprob: -1.7057859897613525
    3. '()' → logprob: -2.3307859897613525
    4. '(range' → logprob: -3.3307859897613525
    5. '([' → logprob: -3.4557859897613525
    6. '[' → logprob: -3.7057859897613525
    7. '(map' → logprob: -4.080786228179932
    8. '(B' → logprob: -4.330786228179932
    9. '(N' → logprob: -4.455786228179932
    10. '(size' → logprob: -5.455786228179932

Token 593: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019526496529579163
    2. '(lambda' → logprob: -4.269526481628418
    3. '(c' → logprob: -5.769526481628418
    4. '(
' → logprob: -7.019526481628418
    5. '(int' → logprob: -7.019526481628418
    6. '(gr' → logprob: -8.269526481628418
    7. '((' → logprob: -10.019526481628418
    8. '(b' → logprob: -10.894526481628418
    9. '(str' → logprob: -11.144526481628418
    10. '   ' → logprob: -11.894526481628418

Token 594: 'grund' (ID: 27797)
  Prédit: 'grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.12174409627914429
    2. 'lambda' → logprob: -2.371744155883789
    3. 'int' → logprob: -4.871744155883789
    4. '(lambda' → logprob: -4.871744155883789
    5. '   ' → logprob: -6.996744155883789
    6. '(' → logprob: -6.996744155883789
    7. 'ground' → logprob: -7.496744155883789
    8. 'partial' → logprob: -7.496744155883789
    9. 'grond' → logprob: -7.871744155883789
    10. 'grunn' → logprob: -8.121744155883789

Token 595: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.3595704734325409
    2. '(lambda' → logprob: -1.8595705032348633
    3. 'izer' → logprob: -3.6095705032348633
    4. '(b' → logprob: -3.6095705032348633
    5. 'lambda' → logprob: -3.9845705032348633
    6. '(c' → logprob: -4.109570503234863
    7. ',' → logprob: -4.609570503234863
    8. 'c' → logprob: -4.734570503234863
    9. ')' → logprob: -4.859570503234863
    10. 'value' → logprob: -4.984570503234863

Token 596: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.7045107483863831
    2. ',b' → logprob: -0.7045107483863831
    3. ',' → logprob: -4.829510688781738
    4. 'b' → logprob: -6.329510688781738
    5. '(' → logprob: -6.829510688781738
    6. '(lambda' → logprob: -8.704510688781738
    7. 'basket' → logprob: -9.079510688781738
    8. '(c' → logprob: -10.329510688781738
    9. ',c' → logprob: -10.329510688781738
    10. ',
' → logprob: -10.454510688781738

Token 597: ' basket' (ID: 17614)
  Prédit: 'basket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basket' → logprob: -0.009787493385374546
    2. '[b' → logprob: -4.884787559509277
    3. ' basket' → logprob: -6.509787559509277
    4. '[' → logprob: -7.509787559509277
    5. ' [' → logprob: -9.759787559509277
    6. '   ' → logprob: -10.884787559509277
    7. 'b' → logprob: -11.134787559509277
    8. '[n' → logprob: -11.634787559509277
    9. '(b' → logprob: -12.009787559509277
    10. 'Basket' → logprob: -12.259787559509277

Token 598: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0041733719408512115
    2. '))
' → logprob: -6.254173278808594
    3. '()))' → logprob: -6.254173278808594
    4. '(b' → logprob: -9.129173278808594
    5. ' ))' → logprob: -9.879173278808594
    6. '(' → logprob: -9.879173278808594
    7. ')))' → logprob: -10.379173278808594
    8. '))

' → logprob: -11.004173278808594
    9. '()))
' → logprob: -11.004173278808594
    10. '));' → logprob: -11.379173278808594

Token 599: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6966124773025513
    2. '<|end|>' → logprob: -0.9466124773025513
    3. '   ' → logprob: -2.5716123580932617
    4. ')' → logprob: -4.196612358093262
    5. 'def' → logprob: -5.071612358093262
    6. '    
' → logprob: -5.446612358093262
    7. '[' → logprob: -5.946612358093262
    8. ')
' → logprob: -5.946612358093262
    9. '<|end|>' → logprob: -6.571612358093262
    10. '  
' → logprob: -6.571612358093262

Token 600: ' wow' (ID: 41612)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8452659249305725
    2. 'return' → logprob: -1.3452658653259277
    3. 'res' → logprob: -2.2202658653259277
    4. '   ' → logprob: -2.9702658653259277
    5. 'def' → logprob: -3.5952658653259277
    6. ' return' → logprob: -3.9702658653259277
    7. 'for' → logprob: -4.095265865325928
    8. ')' → logprob: -4.095265865325928
    9. ' result' → logprob: -4.720265865325928
    10. ' res' → logprob: -5.095265865325928

Token 601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3996655344963074
    2. '=' → logprob: -1.1496655941009521
    3. ',' → logprob: -5.274665355682373
    4. '_' → logprob: -6.149665355682373
    5. '(' → logprob: -6.649665355682373
    6. '   ' → logprob: -6.774665355682373
    7. '[:]' → logprob: -7.899665355682373
    8. '[' → logprob: -8.024665832519531
    9. ')' → logprob: -8.149665832519531
    10. '.' → logprob: -8.149665832519531

Token 602: ' ' (ID: 220)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.1660182476043701
    2. 'sum' → logprob: -1.4160182476043701
    3. '[' → logprob: -1.6660182476043701
    4. '0' → logprob: -1.7910182476043701
    5. 'grund' → logprob: -4.291018486022949
    6. 'sm' → logprob: -4.291018486022949
    7. '(' → logprob: -4.541018486022949
    8. '(dd' → logprob: -5.166018486022949
    9. '[(' → logprob: -5.291018486022949
    10. ' ' → logprob: -5.416018486022949

Token 603: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0592451095581055
    2. 'dd' → logprob: -1.4342451095581055
    3. '[' → logprob: -1.5592451095581055
    4. 'grund' → logprob: -3.0592451095581055
    5. '0' → logprob: -3.3092451095581055
    6. 'sm' → logprob: -3.4342451095581055
    7. '[(' → logprob: -3.6842451095581055
    8. 'max' → logprob: -4.3092451095581055
    9. '[max' → logprob: -4.6842451095581055
    10. '[]
' → logprob: -5.1842451095581055

Token 604: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7285481691360474
    2. '<|end|>' → logprob: -0.9785481691360474
    3. ' for' → logprob: -3.103548049926758
    4. 'for' → logprob: -3.228548049926758
    5. '   ' → logprob: -3.728548049926758
    6. '<|end|>' → logprob: -4.478548049926758
    7. ' ' → logprob: -4.853548049926758
    8. ' 
' → logprob: -5.228548049926758
    9. '	for' → logprob: -5.978548049926758
    10. '    
' → logprob: -6.728548049926758

Token 605: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003524171421304345
    2. ' for' → logprob: -6.003524303436279
    3. '   ' → logprob: -7.003524303436279
    4. 'i' → logprob: -9.628523826599121
    5. '
' → logprob: -9.753523826599121
    6. '	for' → logprob: -11.503523826599121
    7. ' i' → logprob: -13.378523826599121
    8. '    
' → logprob: -13.503523826599121
    9. ' ' → logprob: -14.253523826599121
    10. ' 
' → logprob: -14.753523826599121

Token 607: ' k' (ID: 372)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.2232730388641357
    2. 'gm' → logprob: -1.7232730388641357
    3. 'grund' → logprob: -2.2232730388641357
    4. 'i' → logprob: -2.4732730388641357
    5. 'sm' → logprob: -2.5982730388641357
    6. 'x' → logprob: -3.2232730388641357
    7. 'gr' → logprob: -3.4732730388641357
    8. ' grund' → logprob: -3.7232730388641357
    9. ' g' → logprob: -3.9732730388641357
    10. 'gs' → logprob: -4.098273277282715

Token 608: 'x' (ID: 87)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1197362020611763
    2. ',' → logprob: -2.3697361946105957
    3. ' ,' → logprob: -4.744736194610596
    4. 'in' → logprob: -5.494736194610596
    5. ',v' → logprob: -5.994736194610596
    6. ' ' → logprob: -6.369736194610596
    7. ',w' → logprob: -6.744736194610596
    8. '  ' → logprob: -8.744736671447754
    9. ',g' → logprob: -8.869736671447754
    10. 'ey' → logprob: -8.994736671447754

Token 609: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33251839876174927
    2. ',' → logprob: -1.4575183391571045
    3. 'in' → logprob: -3.3325183391571045
    4. ',v' → logprob: -4.957518577575684
    5. ' ,' → logprob: -5.457518577575684
    6. ',w' → logprob: -7.457518577575684
    7. ',b' → logprob: -7.957518577575684
    8. ',k' → logprob: -8.082518577575684
    9. 'x' → logprob: -8.332518577575684
    10. ',y' → logprob: -8.457518577575684

Token 610: ' vx' (ID: 93588)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.7207515835762024
    2. 'gr' → logprob: -2.7207515239715576
    3. 'gm' → logprob: -2.9707515239715576
    4. 'v' → logprob: -3.0957515239715576
    5. 'vv' → logprob: -3.3457515239715576
    6. 'gv' → logprob: -3.3457515239715576
    7. 'gx' → logprob: -3.5957515239715576
    8. ' sm' → logprob: -3.8457515239715576
    9. 'gs' → logprob: -3.9707515239715576
    10. 'g' → logprob: -4.095751762390137

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47455504536628723
    2. 'in' → logprob: -0.9745550155639648
    3. ',' → logprob: -7.974555015563965
    4. 'v' → logprob: -10.474555015563965
    5. ' ' → logprob: -10.724555015563965
    6. 'n' → logprob: -11.224555015563965
    7. '   ' → logprob: -11.599555015563965
    8. 'x' → logprob: -11.849555015563965
    9. '  ' → logprob: -12.224555015563965
    10. 's' → logprob: -12.224555015563965

Token 612: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.5081090331077576
    2. 'enumer' → logprob: -1.0081090927124023
    3. ' enumerate' → logprob: -3.8831090927124023
    4. 'zip' → logprob: -5.133109092712402
    5. ' grund' → logprob: -5.508109092712402
    6. 'range' → logprob: -6.133109092712402
    7. ' zip' → logprob: -8.883109092712402
    8. 'grunn' → logprob: -9.133109092712402
    9. ' range' → logprob: -9.758109092712402
    10. '[(' → logprob: -9.883109092712402

Token 613: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.4874016344547272
    2. 'in' → logprob: -0.9874016046524048
    3. 'm' → logprob: -4.987401485443115
    4. 'memo' → logprob: -5.987401485443115
    5. ' in' → logprob: -6.237401485443115
    6. ',' → logprob: -7.612401485443115
    7. 's' → logprob: -8.237401962280273
    8. 'enumer' → logprob: -8.362401962280273
    9. 'ize' → logprob: -9.112401962280273
    10. '_in' → logprob: -9.237401962280273

Token 614: 'emo' (ID: 7196)
  Prédit: 'emo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emo' → logprob: -0.0005268189124763012
    2. 'em' → logprob: -8.000526428222656
    3. 'o' → logprob: -8.750526428222656
    4. 'eo' → logprob: -11.625526428222656
    5. '   ' → logprob: -12.250526428222656
    6. 'emoc' → logprob: -12.375526428222656
    7. 'emos' → logprob: -12.750526428222656
    8. 'memo' → logprob: -13.125526428222656
    9. 'emory' → logprob: -13.375526428222656
    10. 'емо' → logprob: -13.625526428222656

Token 615: '[' (ID: 58)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08087412267923355
    2. 'in' → logprob: -2.58087420463562
    3. ',' → logprob: -7.080873966217041
    4. ':' → logprob: -7.205873966217041
    5. '   ' → logprob: -8.2058744430542
    6. ' ' → logprob: -10.3308744430542
    7. 'items' → logprob: -10.9558744430542
    8. ')' → logprob: -11.0808744430542
    9. ':
' → logprob: -11.3308744430542
    10. '  ' → logprob: -11.5808744430542

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2725852727890015
    2. 'enumer' → logprob: -1.3975852727890015
    3. '():' → logprob: -2.397585391998291
    4. ':' → logprob: -2.397585391998291
    5. ']:' → logprob: -2.522585391998291
    6. '):' → logprob: -3.522585391998291
    7. ']):' → logprob: -4.022585391998291
    8. 'items' → logprob: -4.147585391998291
    9. 'x' → logprob: -4.272585391998291
    10. ' enumerate' → logprob: -4.272585391998291

Token 617: '].' (ID: 1651)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2385571151971817
    2. ']:
' → logprob: -1.8635571002960205
    3. ':' → logprob: -3.2385571002960205
    4. '],' → logprob: -4.6135573387146
    5. ']' → logprob: -5.6135573387146
    6. '].' → logprob: -6.6135573387146
    7. '][' → logprob: -6.8635573387146
    8. ']:
' → logprob: -7.8635573387146
    9. ':],' → logprob: -8.363556861877441
    10. ']:

' → logprob: -8.738556861877441

Token 618: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.008642463013529778
    2. 'keys' → logprob: -4.758642673492432
    3. 'values' → logprob: -10.508642196655273
    4. ' items' → logprob: -15.133642196655273
    5. '.items' → logprob: -15.633642196655273
    6. '```' → logprob: -16.133642196655273
    7. ' keys' → logprob: -17.133642196655273
    8. '_items' → logprob: -17.383642196655273
    9. '.keys' → logprob: -18.508642196655273
    10. 'get' → logprob: -18.508642196655273

Token 619: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10171142220497131
    2. '():
' → logprob: -2.3517115116119385
    3. '()' → logprob: -6.851711273193359
    4. ':' → logprob: -8.10171127319336
    5. '():
' → logprob: -9.85171127319336
    6. '(),' → logprob: -10.47671127319336
    7. '();' → logprob: -11.10171127319336
    8. '(' → logprob: -11.85171127319336
    9. '():

' → logprob: -11.85171127319336
    10. '()):
' → logprob: -12.10171127319336

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002682496269699186
    2. ':' → logprob: -8.87526798248291
    3. '<|end|>' → logprob: -10.50026798248291
    4. '   ' → logprob: -11.37526798248291
    5. '           ' → logprob: -11.37526798248291
    6. '```' → logprob: -11.50026798248291
    7. '<|end|>' → logprob: -11.75026798248291
    8. '	' → logprob: -11.87526798248291
    9. ':
' → logprob: -12.00026798248291
    10. '[' → logprob: -12.00026798248291

Token 621: ' for' (ID: 395)
  Prédit: ' wow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wow' → logprob: -0.5573791265487671
    2. '           ' → logprob: -1.057379126548767
    3. 'wow' → logprob: -2.9323792457580566
    4. '       ' → logprob: -3.9323792457580566
    5. '               ' → logprob: -5.432379245758057
    6. ' if' → logprob: -7.307379245758057
    7. '   ' → logprob: -7.557379245758057
    8. 'Wow' → logprob: -8.182378768920898
    9. '```' → logprob: -8.432378768920898
    10. 'if' → logprob: -9.057378768920898

Token 622: ' ky' (ID: 28873)
  Prédit: 'ky'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ky' → logprob: -0.24794155359268188
    2. 'kk' → logprob: -2.497941493988037
    3. ' ky' → logprob: -3.497941493988037
    4. 'kx' → logprob: -3.747941493988037
    5. 'j' → logprob: -4.122941493988037
    6. 'kv' → logprob: -4.247941493988037
    7. ' kk' → logprob: -4.622941493988037
    8. 'k' → logprob: -4.997941493988037
    9. ' j' → logprob: -4.997941493988037
    10. 'kw' → logprob: -5.372941493988037

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024859296157956123
    2. ',v' → logprob: -4.024859428405762
    3. ' in' → logprob: -5.399859428405762
    4. 'in' → logprob: -6.774859428405762
    5. ' ,' → logprob: -7.149859428405762
    6. ',k' → logprob: -9.399859428405762
    7. '   ' → logprob: -9.524859428405762
    8. ',w' → logprob: -10.524859428405762
    9. ',y' → logprob: -11.024859428405762
    10. '       ' → logprob: -11.399859428405762

Token 624: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.02978196181356907
    2. ' vy' → logprob: -3.5297820568084717
    3. ' ' → logprob: -11.77978229522705
    4. 'ky' → logprob: -12.02978229522705
    5. 'vx' → logprob: -12.65478229522705
    6. '   ' → logprob: -12.77978229522705
    7. 'v' → logprob: -13.52978229522705
    8. 'wy' → logprob: -13.65478229522705
    9. 'yv' → logprob: -13.90478229522705
    10. '  ' → logprob: -13.90478229522705

Token 625: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006208077538758516
    2. 'in' → logprob: -5.1312079429626465
    3. '       ' → logprob: -9.381208419799805
    4. '   ' → logprob: -9.506208419799805
    5. '           ' → logprob: -10.006208419799805
    6. '        ' → logprob: -10.881208419799805
    7. ' ' → logprob: -11.006208419799805
    8. ',' → logprob: -11.506208419799805
    9. '    ' → logprob: -12.131208419799805
    10. '	in' → logprob: -12.506208419799805

Token 626: ' grund' (ID: 34475)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.869635820388794
    2. ' vx' → logprob: -1.369635820388794
    3. 'grund' → logprob: -1.619635820388794
    4. ' grund' → logprob: -2.119635820388794
    5. ' vz' → logprob: -6.369635581970215
    6. 'vz' → logprob: -6.994635581970215
    7. ' ' → logprob: -7.244635581970215
    8. 'kx' → logprob: -7.369635581970215
    9. '[v' → logprob: -7.682135581970215
    10. 'vk' → logprob: -8.119635581970215

Token 627: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.02152848243713379
    2. 'memo' → logprob: -4.146528244018555
    3. 'm' → logprob: -5.271528244018555
    4. 'ok' → logprob: -10.146528244018555
    5. 'x' → logprob: -10.146528244018555
    6. 'in' → logprob: -10.396528244018555
    7. 'Memo' → logprob: -10.396528244018555
    8. 'emo' → logprob: -10.521528244018555
    9. '_mem' → logprob: -10.771528244018555
    10. '   ' → logprob: -11.271528244018555

Token 628: 'emo' (ID: 7196)
  Prédit: 'emo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emo' → logprob: -0.0002422779070911929
    2. 'memo' → logprob: -8.875242233276367
    3. 'em' → logprob: -9.875242233276367
    4. 'omo' → logprob: -10.875242233276367
    5. 'mo' → logprob: -11.750242233276367
    6. 'o' → logprob: -11.750242233276367
    7. '[' → logprob: -12.000242233276367
    8. ' memo' → logprob: -13.625242233276367
    9. 'emoc' → logprob: -13.875242233276367
    10. 'Memo' → logprob: -14.000242233276367

Token 629: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03139784559607506
    2. ' in' → logprob: -4.156397819519043
    3. 'in' → logprob: -4.281397819519043
    4. '0' → logprob: -7.531397819519043
    5. '   ' → logprob: -8.656397819519043
    6. '(' → logprob: -8.781397819519043
    7. 's' → logprob: -9.031397819519043
    8. '1' → logprob: -9.531397819519043
    9. '[-' → logprob: -9.906397819519043
    10. ' ' → logprob: -10.156397819519043

Token 630: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14511451125144958
    2. '1' → logprob: -2.0201144218444824
    3. 'kx' → logprob: -6.645114421844482
    4. '   ' → logprob: -7.895114421844482
    5. ' ' → logprob: -8.52011489868164
    6. 'k' → logprob: -9.02011489868164
    7. '
' → logprob: -9.83261489868164
    8. '-' → logprob: -9.89511489868164
    9. 'x' → logprob: -10.08261489868164
    10. '[' → logprob: -10.20761489868164

Token 631: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014038220047950745
    2. 'items' → logprob: -5.3890380859375
    3. ' in' → logprob: -5.8890380859375
    4. '.items' → logprob: -5.8890380859375
    5. ']' → logprob: -6.2640380859375
    6. '.' → logprob: -8.0140380859375
    7. '_items' → logprob: -8.5140380859375
    8. '   ' → logprob: -8.5140380859375
    9. ' ].' → logprob: -8.6390380859375
    10. ' ' → logprob: -8.8890380859375

Token 632: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -2.696889623621246e-06
    2. '.items' → logprob: -13.00000286102295
    3. 'keys' → logprob: -16.000001907348633
    4. ' items' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. 'values' → logprob: -16.750001907348633
    7. '	items' → logprob: -18.875001907348633
    8. '_items' → logprob: -19.750001907348633
    9. '
' → logprob: -20.000001907348633
    10. '0' → logprob: -21.000001907348633

Token 633: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.04853399470448494
    2. '():' → logprob: -3.2985339164733887
    3. '()' → logprob: -4.673533916473389
    4. '():
' → logprob: -7.798533916473389
    5. '():

' → logprob: -8.548534393310547
    6. '()):
' → logprob: -8.798534393310547
    7. '       ' → logprob: -8.923534393310547
    8. '(),' → logprob: -10.173534393310547
    9. '()][' → logprob: -10.673534393310547
    10. '()-' → logprob: -10.923534393310547

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009344478603452444
    2. '               ' → logprob: -7.500934600830078
    3. '                   ' → logprob: -9.125934600830078
    4. '		' → logprob: -9.375934600830078
    5. '	       ' → logprob: -10.125934600830078
    6. '[' → logprob: -11.125934600830078
    7. '                           ' → logprob: -11.250934600830078
    8. '                       ' → logprob: -11.250934600830078
    9. ' if' → logprob: -11.250934600830078
    10. ':' → logprob: -11.375934600830078

Token 635: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013559521175920963
    2. '           ' → logprob: -7.37635612487793
    3. '			' → logprob: -9.12635612487793
    4. ' if' → logprob: -9.25135612487793
    5. '	           ' → logprob: -9.25135612487793
    6. '	       ' → logprob: -9.50135612487793
    7. '		       ' → logprob: -9.62635612487793
    8. '            ' → logprob: -10.12635612487793
    9. '              ' → logprob: -10.37635612487793
    10. '                ' → logprob: -10.37635612487793

Token 636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0460275374352932
    2. '=' → logprob: -3.796027421951294
    3. ',' → logprob: -4.796027660369873
    4. '           ' → logprob: -4.921027660369873
    5. ',k' → logprob: -6.546027660369873
    6. '       ' → logprob: -7.171027660369873
    7. '        ' → logprob: -7.296027660369873
    8. '               ' → logprob: -7.671027660369873
    9. '=k' → logprob: -7.921027660369873
    10. '            ' → logprob: -8.046027183532715

Token 637: ' k' (ID: 372)
  Prédit: 'kx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kx' → logprob: -0.4258165657520294
    2. '(k' → logprob: -1.175816535949707
    3. 'k' → logprob: -3.925816535949707
    4. ' (' → logprob: -4.925816535949707
    5. 'ky' → logprob: -5.675816535949707
    6. ' k' → logprob: -5.675816535949707
    7. '(B' → logprob: -7.175816535949707
    8. ' ' → logprob: -7.425816535949707
    9. '(' → logprob: -7.425816535949707
    10. '(max' → logprob: -7.800816535949707

Token 638: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.849109119386412e-06
    2. 'y' → logprob: -11.750009536743164
    3. 'ey' → logprob: -14.750009536743164
    4. 'sx' → logprob: -14.750009536743164
    5. 'kx' → logprob: -15.875009536743164
    6. '
' → logprob: -16.000009536743164
    7. '   ' → logprob: -16.250009536743164
    8. '_x' → logprob: -16.500009536743164
    9. '```' → logprob: -16.625009536743164
    10. ',' → logprob: -16.812509536743164

Token 639: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2607053220272064
    2. ' ^' → logprob: -2.1357052326202393
    3. '+' → logprob: -2.2607052326202393
    4. ' +' → logprob: -5.635705471038818
    5. '           ' → logprob: -6.635705471038818
    6. '+x' → logprob: -8.01070499420166
    7. ',' → logprob: -8.13570499420166
    8. '^(' → logprob: -8.38570499420166
    9. ')' → logprob: -8.76070499420166
    10. '          ' → logprob: -8.76070499420166

Token 640: 'ky' (ID: 5781)
  Prédit: 'ky'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ky' → logprob: -6.2729995988775045e-06
    2. ' ky' → logprob: -12.000006675720215
    3. ' ' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.6250057220459
    5. 'Ky' → logprob: -18.1250057220459
    6. 'kx' → logprob: -18.7500057220459
    7. '  ' → logprob: -18.8750057220459
    8. 'wy' → logprob: -18.8750057220459
    9. '       ' → logprob: -19.3750057220459
    10. 'k' → logprob: -19.3750057220459

Token 641: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025907461531460285
    2. ' =' → logprob: -9.500259399414062
    3. ',' → logprob: -9.875259399414062
    4. '          ' → logprob: -10.125259399414062
    5. '<|end|>' → logprob: -10.500259399414062
    6. '               ' → logprob: -11.375259399414062
    7. '<|end|>' → logprob: -11.375259399414062
    8. '	       ' → logprob: -11.625259399414062
    9. '		' → logprob: -11.750259399414062
    10. '=' → logprob: -12.125259399414062

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003753767115995288
    2. '<|end|>' → logprob: -6.253753662109375
    3. '            
' → logprob: -7.878753662109375
    4. '          ' → logprob: -8.253753662109375
    5. '            ' → logprob: -8.253753662109375
    6. '<|end|>' → logprob: -8.378753662109375
    7. '		' → logprob: -8.753753662109375
    8. '               ' → logprob: -9.003753662109375
    9. '	       ' → logprob: -9.003753662109375
    10. '       ' → logprob: -10.378753662109375

Token 643: ' vz' (ID: 34734)
  Prédit: 'wow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wow' → logprob: -0.0014966491144150496
    2. '           ' → logprob: -6.6264967918396
    3. ' wow' → logprob: -9.001496315002441
    4. 'val' → logprob: -10.626496315002441
    5. 'wo' → logprob: -12.376496315002441
    6. 'value' → logprob: -13.126496315002441
    7. '   ' → logprob: -13.126496315002441
    8. '               ' → logprob: -13.126496315002441
    9. '       ' → logprob: -13.626496315002441
    10. 'wonder' → logprob: -13.751496315002441

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12700055539608002
    2. ' =' → logprob: -2.127000570297241
    3. '+=' → logprob: -9.87700080871582
    4. ' ' → logprob: -11.75200080871582
    5. ' +=' → logprob: -12.12700080871582
    6. 'w' → logprob: -13.12700080871582
    7. '   ' → logprob: -13.37700080871582
    8. 'v' → logprob: -13.87700080871582
    9. '=(' → logprob: -14.00200080871582
    10. '  ' → logprob: -14.62700080871582

Token 645: ' grund' (ID: 34475)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0656435415148735
    2. '(sm' → logprob: -3.065643548965454
    3. '(w' → logprob: -4.940643310546875
    4. '(' → logprob: -5.065643310546875
    5. ' (' → logprob: -5.940643310546875
    6. '((' → logprob: -8.065643310546875
    7. 'sm' → logprob: -9.440643310546875
    8. '(s' → logprob: -9.690643310546875
    9. '   ' → logprob: -9.690643310546875
    10. 'wow' → logprob: -9.940643310546875

Token 646: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.022490452975034714
    2. 'vy' → logprob: -4.022490501403809
    3. 'sm' → logprob: -6.272490501403809
    4. 'vx' → logprob: -7.522490501403809
    5. '=' → logprob: -7.772490501403809
    6. '_v' → logprob: -8.147490501403809
    7. '   ' → logprob: -8.147490501403809
    8. 'm' → logprob: -8.647490501403809
    9. 'x' → logprob: -9.647490501403809
    10. 'v' → logprob: -9.772490501403809

Token 647: 'emo' (ID: 7196)
  Prédit: 'emo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emo' → logprob: -0.0005034659989178181
    2. 'o' → logprob: -8.375503540039062
    3. 'mo' → logprob: -8.625503540039062
    4. 'omo' → logprob: -10.250503540039062
    5. 'memo' → logprob: -10.250503540039062
    6. 'em' → logprob: -11.875503540039062
    7. 'Memo' → logprob: -12.000503540039062
    8. 'vo' → logprob: -13.000503540039062
    9. 'ero' → logprob: -13.500503540039062
    10. 'umo' → logprob: -13.875503540039062

Token 648: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008970508933998644
    2. '2' → logprob: -7.75089693069458
    3. '           ' → logprob: -9.000897407531738
    4. ' [' → logprob: -9.375897407531738
    5. '0' → logprob: -9.500897407531738
    6. '```' → logprob: -10.250897407531738
    7. '1' → logprob: -10.750897407531738
    8. '[-' → logprob: -11.000897407531738
    9. '[v' → logprob: -11.250897407531738
    10. '   ' → logprob: -11.250897407531738

Token 649: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09117044508457184
    2. '2' → logprob: -2.5911705493927
    3. '1' → logprob: -5.966170310974121
    4. 'vx' → logprob: -6.716170310974121
    5. '-' → logprob: -7.028670310974121
    6. '   ' → logprob: -7.341170310974121
    7. '...' → logprob: -7.466170310974121
    8. ' ' → logprob: -7.528670310974121
    9. 'kx' → logprob: -7.528670310974121
    10. '
' → logprob: -7.778670310974121

Token 650: '][' (ID: 2696)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.015240795910358429
    2. '.get' → logprob: -4.515240669250488
    3. ']' → logprob: -5.765240669250488
    4. '][' → logprob: -7.140240669250488
    5. 'idx' → logprob: -9.640240669250488
    6. 'get' → logprob: -9.765240669250488
    7. '=' → logprob: -10.890240669250488
    8. '[idx' → logprob: -10.890240669250488
    9. '.' → logprob: -11.265240669250488
    10. 'x' → logprob: -11.515240669250488

Token 651: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0010045854141935706
    2. 'kx' → logprob: -7.001004695892334
    3. 'k' → logprob: -10.751004219055176
    4. 'vx' → logprob: -11.001004219055176
    5. 'vz' → logprob: -11.001004219055176
    6. 'index' → logprob: -11.501004219055176
    7. ' idx' → logprob: -11.501004219055176
    8. 'inx' → logprob: -12.626004219055176
    9. '(idx' → logprob: -12.751004219055176
    10. '
' → logprob: -13.251004219055176

Token 652: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012137561105191708
    2. ']*' → logprob: -5.137137413024902
    3. ']
' → logprob: -5.262137413024902
    4. ']%' → logprob: -7.262137413024902
    5. '           ' → logprob: -9.762137413024902
    6. 'if' → logprob: -10.012137413024902
    7. '       ' → logprob: -10.012137413024902
    8. ']*(' → logprob: -10.512137413024902
    9. ']+=' → logprob: -10.887137413024902
    10. 'def' → logprob: -11.137137413024902

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007746085175313056
    2. '=' → logprob: -7.750774383544922
    3. '<|end|>' → logprob: -9.125774383544922
    4. '               ' → logprob: -9.375774383544922
    5. '          ' → logprob: -10.500774383544922
    6. ' =' → logprob: -10.625774383544922
    7. '+=' → logprob: -11.000774383544922
    8. '```' → logprob: -11.000774383544922
    9. '+' → logprob: -11.625774383544922
    10. ' +=' → logprob: -12.000774383544922

Token 654: ' if' (ID: 538)
  Prédit: 'wow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wow' → logprob: -0.1635579615831375
    2. '           ' → logprob: -1.913558006286621
    3. ' wow' → logprob: -5.788558006286621
    4. 'if' (adapté à ' if') → logprob: -9.163558006286621
    5. '               ' → logprob: -9.788558006286621
    6. 'Wow' → logprob: -11.038558006286621
    7. '            
' → logprob: -11.038558006286621
    8. '       ' → logprob: -11.163558006286621
    9. '            ' → logprob: -11.288558006286621
    10. '=' → logprob: -11.663558006286621

Token 655: ' vz' (ID: 34734)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.7130209803581238
    2. 'vz' → logprob: -1.2130210399627686
    3. 'vy' → logprob: -2.2130210399627686
    4. 'kx' → logprob: -4.2130208015441895
    5. '(v' → logprob: -4.3380208015441895
    6. ' vz' → logprob: -4.7130208015441895
    7. ' vx' → logprob: -4.8380208015441895
    8. 'True' → logprob: -4.8380208015441895
    9. '(k' → logprob: -5.0880208015441895
    10. 'idx' → logprob: -5.0880208015441895

Token 656: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3200056254863739
    2. ' ==' → logprob: -1.5700056552886963
    3. '+=' → logprob: -4.320005416870117
    4. '!=' → logprob: -4.445005416870117
    5. '<|end|>' → logprob: -4.695005416870117
    6. ' +=' → logprob: -5.195005416870117
    7. '%=' → logprob: -5.570005416870117
    8. '=' → logprob: -5.695005416870117
    9. ' !=' → logprob: -5.820005416870117
    10. '%' → logprob: -5.820005416870117

Token 657: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002732240129262209
    2. '=' → logprob: -6.752732276916504
    3. ' =' → logprob: -7.627732276916504
    4. '              ' → logprob: -7.877732276916504
    5. '           ' → logprob: -8.752732276916504
    6. '                               ' → logprob: -9.127732276916504
    7. '<|end|>' → logprob: -9.752732276916504
    8. '                   ' → logprob: -9.877732276916504
    9. '                       ' → logprob: -10.002732276916504
    10. '             ' → logprob: -10.252732276916504

Token 658: ' wow' (ID: 41612)
  Prédit: 'wow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wow' (adapté à ' wow') → logprob: -0.06928273290395737
    2. ' wow' → logprob: -3.5692827701568604
    3. '                   ' → logprob: -4.069282531738281
    4. '               ' → logprob: -4.569282531738281
    5. '                       ' → logprob: -4.944282531738281
    6. '                               ' → logprob: -5.944282531738281
    7. '                                   ' → logprob: -7.944282531738281
    8. '                           ' → logprob: -7.944282531738281
    9. '           ' → logprob: -8.944282531738281
    10. '   ' → logprob: -9.319282531738281

Token 659: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8672598004341125
    2. ' =' → logprob: -1.2422597408294678
    3. '+=' → logprob: -1.4922597408294678
    4. '=' → logprob: -3.1172597408294678
    5. '                   ' → logprob: -3.9922597408294678
    6. '                  ' → logprob: -6.992259979248047
    7. ' ^=' → logprob: -7.117259979248047
    8. '               ' → logprob: -7.242259979248047
    9. '+=(' → logprob: -8.492259979248047
    10. '                ' → logprob: -8.992259979248047

Token 660: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.20363226532936096
    2. '(v' → logprob: -1.7036322355270386
    3. ' (' → logprob: -6.203632354736328
    4. '(' → logprob: -8.828632354736328
    5. '           ' → logprob: -11.328632354736328
    6. '   ' → logprob: -11.453632354736328
    7. '(max' → logprob: -12.453632354736328
    8. '       ' → logprob: -12.953632354736328
    9. '(ok' → logprob: -13.078632354736328
    10. '(now' → logprob: -13.453632354736328

Token 661: 'wow' (ID: 95194)
  Prédit: 'wow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wow' → logprob: -0.08370614051818848
    2. '(w' → logprob: -2.5837061405181885
    3. ' wow' → logprob: -5.833705902099609
    4. 'w' → logprob: -6.583705902099609
    5. '(v' → logprob: -7.833705902099609
    6. 'Wow' → logprob: -10.70870590209961
    7. 'wo' → logprob: -10.83370590209961
    8. ' (' → logprob: -11.20870590209961
    9. 'WOW' → logprob: -11.45870590209961
    10. '-wow' → logprob: -11.58370590209961

Token 662: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869069218635559
    2. '+' → logprob: -1.1369068622589111
    3. '+w' → logprob: -10.261906623840332
    4. ' ' → logprob: -15.261906623840332
    5. '+k' → logprob: -15.261906623840332
    6. '+
' → logprob: -16.01190757751465
    7. ' ' → logprob: -16.26190757751465
    8. '+x' → logprob: -16.26190757751465
    9. ' +
' → logprob: -16.76190757751465
    10. '+c' → logprob: -17.38690757751465

Token 663: ' vx' (ID: 93588)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.26279547810554504
    2. 'vx' → logprob: -2.1377954483032227
    3. 'vy' → logprob: -2.2627954483032227
    4. '(' → logprob: -5.387795448303223
    5. '   ' → logprob: -6.762795448303223
    6. ' (' → logprob: -6.887795448303223
    7. ' vy' → logprob: -7.387795448303223
    8. '((' → logprob: -7.512795448303223
    9. ' vx' → logprob: -8.387795448303223
    10. 'v' → logprob: -8.387795448303223

Token 664: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.474082887172699
    2. '*' → logprob: -0.974082887172699
    3. '*v' → logprob: -12.974082946777344
    4. '               ' → logprob: -13.474082946777344
    5. '                   ' → logprob: -13.974082946777344
    6. '           ' → logprob: -14.349082946777344
    7. '   ' → logprob: -14.849082946777344
    8. '       ' → logprob: -16.474082946777344
    9. ' ' → logprob: -16.724082946777344
    10. '*(' → logprob: -17.224082946777344

Token 665: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0010426939697936177
    2. ' vy' → logprob: -6.87604284286499
    3. '   ' → logprob: -13.501042366027832
    4. '           ' → logprob: -13.626042366027832
    5. '
' → logprob: -14.126042366027832
    6. '  ' → logprob: -14.501042366027832
    7. ' ' → logprob: -14.501042366027832
    8. '(' → logprob: -14.501042366027832
    9. '             ' → logprob: -14.626042366027832
    10. 'vi' → logprob: -14.751042366027832

Token 666: '*v' (ID: 130438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31404027342796326
    2. ')%' → logprob: -1.3140403032302856
    3. '*' → logprob: -7.439040184020996
    4. '*v' → logprob: -9.689040184020996
    5. '%' → logprob: -10.064040184020996
    6. ' *' → logprob: -10.064040184020996
    7. ' )' → logprob: -10.189040184020996
    8. '   ' → logprob: -13.689040184020996
    9. 'v' → logprob: -13.814040184020996
    10. '*w' → logprob: -13.939040184020996

Token 667: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -8.77627644513268e-06
    2. 'x' → logprob: -13.625008583068848
    3. 'w' → logprob: -14.000008583068848
    4. ' z' → logprob: -14.000008583068848
    5. '
' → logprob: -14.125008583068848
    6. '   ' → logprob: -14.500008583068848
    7. 'az' → logprob: -14.625008583068848
    8. '       ' → logprob: -14.625008583068848
    9. 'з' → logprob: -14.625008583068848
    10. ''z' → logprob: -14.750008583068848

Token 668: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006159504875540733
    2. ')%' → logprob: -5.13115930557251
    3. ' )' → logprob: -8.381159782409668
    4. '%' → logprob: -14.381159782409668
    5. '           ' → logprob: -15.131159782409668
    6. '                   ' → logprob: -15.256159782409668
    7. '   ' → logprob: -15.756159782409668
    8. '')' → logprob: -16.13115882873535
    9. '),' → logprob: -17.13115882873535
    10. '    ' → logprob: -17.25615882873535

Token 669: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4523271918296814
    2. '%' → logprob: -1.3273272514343262
    3. ')' → logprob: -2.952327251434326
    4. ')%' → logprob: -3.077327251434326
    5. ' )' → logprob: -8.577326774597168
    6. ' %=' → logprob: -9.202326774597168
    7. '%)' → logprob: -11.077326774597168
    8. ']%' → logprob: -11.077326774597168
    9. '%x' → logprob: -11.202326774597168
    10. '%=' → logprob: -11.952326774597168

Token 670: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.088138227118179e-05
    2. ' MOD' → logprob: -10.250070571899414
    3. '998' → logprob: -10.250070571899414
    4. '_MOD' → logprob: -16.625070571899414
    5. '.MOD' → logprob: -18.000070571899414
    6. '(Mod' → logprob: -18.750070571899414
    7. '(M' → logprob: -19.250070571899414
    8. 'MODE' → logprob: -20.500070571899414
    9. '```' → logprob: -20.500070571899414
    10. 'DEBUG' → logprob: -20.750070571899414

Token 671: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -8.41866585687967e-06
    2. 'ul' → logprob: -13.125008583068848
    3. '```' → logprob: -13.125008583068848
    4. 'MOD' → logprob: -13.750008583068848
    5. 'ULAR' → logprob: -14.875008583068848
    6. '``' → logprob: -15.125008583068848
    7. 'US' → logprob: -15.250008583068848
    8. '   ' → logprob: -15.375008583068848
    9. 'CUL' → logprob: -15.500008583068848
    10. '
' → logprob: -15.500008583068848

Token 672: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023253632709383965
    2. 'US' → logprob: -3.7732536792755127
    3. 'OS' → logprob: -12.273253440856934
    4. '   ' → logprob: -13.773253440856934
    5. 'AS' → logprob: -14.648253440856934
    6. 'MOD' → logprob: -14.898253440856934
    7. 'SOR' → logprob: -15.398253440856934
    8. '8' → logprob: -15.523253440856934
    9. ' S' → logprob: -15.523253440856934
    10. '53' → logprob: -15.648253440856934

Token 673: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2336347997188568
    2. ' return' → logprob: -2.9836347103118896
    3. '    
' → logprob: -2.9836347103118896
    4. 'return' → logprob: -3.2336347103118896
    5. '
' → logprob: -3.4836347103118896
    6. '  
' → logprob: -4.483634948730469
    7. '<|end|>' → logprob: -4.983634948730469
    8. '	return' → logprob: -5.108634948730469
    9. ' 
' → logprob: -5.733634948730469
    10. '   
' → logprob: -6.358634948730469

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11356204003095627
    2. '
' → logprob: -2.9885621070861816
    3. '	return' → logprob: -4.238562107086182
    4. '    
' → logprob: -4.363562107086182
    5. '  
' → logprob: -4.488562107086182
    6. 'return' → logprob: -5.488562107086182
    7. ' return' → logprob: -5.863562107086182
    8. ' ' → logprob: -5.988562107086182
    9. ' 
' → logprob: -6.238562107086182
    10. '<|end|>' → logprob: -6.488562107086182

Token 675: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21115173399448395
    2. '   ' → logprob: -2.0861518383026123
    3. '	return' → logprob: -3.3361518383026123
    4. ' return' → logprob: -3.9611518383026123
    5. '
' → logprob: -4.836151599884033
    6. '<|end|>' → logprob: -6.586151599884033
    7. 'print' → logprob: -6.711151599884033
    8. ' ' → logprob: -8.086152076721191
    9. '  ' → logprob: -8.461152076721191
    10. '    
' → logprob: -9.086152076721191

Token 676: ' wow' (ID: 41612)
  Prédit: 'wow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wow' → logprob: -0.018157200887799263
    2. ' wow' → logprob: -4.018157005310059
    3. '(w' → logprob: -12.893157005310059
    4. 'w' → logprob: -13.518157005310059
    5. ' ' → logprob: -13.518157005310059
    6. 'wo' → logprob: -14.518157005310059
    7. '   ' → logprob: -15.018157005310059
    8. 'Wow' → logprob: -15.518157005310059
    9. 'wonder' → logprob: -15.518157005310059
    10. '
' → logprob: -15.768157005310059

Token 677: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10979975014925003
    2. 'result' → logprob: -3.359799861907959
    3. 'if' → logprob: -3.484799861907959
    4. '#' → logprob: -4.109799861907959
    5. 'def' → logprob: -4.359799861907959
    6. 'basket' → logprob: -5.234799861907959
    7. 'for' → logprob: -6.359799861907959
    8. 'res' → logprob: -6.984799861907959
    9. 'answer' → logprob: -8.2347993850708
    10. 'IN' → logprob: -8.4847993850708

Token 678: 'B' (ID: 33)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.039197955280542374
    2. 'if' → logprob: -3.6641979217529297
    3. 'result' → logprob: -4.78919792175293
    4. '#' → logprob: -6.16419792175293
    5. 'basket' → logprob: -6.66419792175293
    6. 'def' → logprob: -7.41419792175293
    7. 'for' → logprob: -8.91419792175293
    8. 'answer' → logprob: -9.78919792175293
    9. 'cra' → logprob: -9.91419792175293
    10. 'res' → logprob: -9.91419792175293

Token 679: 'ASK' (ID: 15202)
  Prédit: 'ASK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ASK' → logprob: -0.03504161909222603
    2. 'asket' → logprob: -3.660041570663452
    3. 'B' → logprob: -4.910041809082031
    4. 'U' → logprob: -7.535041809082031
    5. 'basket' → logprob: -8.285041809082031
    6. 'BUFF' → logprob: -8.785041809082031
    7. 'UFF' → logprob: -9.785041809082031
    8. 'AS' → logprob: -9.910041809082031
    9. 'A' → logprob: -10.160041809082031
    10. 'ask' → logprob: -10.410041809082031

Token 680: 'ET' (ID: 2175)
  Prédit: 'ET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -2.816093228830141e-06
    2. 'ETS' → logprob: -14.12500286102295
    3. 'ЕТ' → logprob: -14.25000286102295
    4. 'ETF' → logprob: -14.87500286102295
    5. '=' → logprob: -15.12500286102295
    6. ' =' → logprob: -15.75000286102295
    7. 'E' → logprob: -16.125001907348633
    8. 'ETCH' → logprob: -16.375001907348633
    9. 'et' → logprob: -16.500001907348633
    10. 'SET' → logprob: -17.375001907348633

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759552717208862
    2. '=' → logprob: -0.8259552717208862
    3. ',' → logprob: -11.575955390930176
    4. '=[]' → logprob: -12.950955390930176
    5. ' ' → logprob: -14.075955390930176
    6. 's' → logprob: -14.325955390930176
    7. '   ' → logprob: -14.700955390930176
    8. '  ' → logprob: -14.700955390930176
    9. '={}' → logprob: -15.200955390930176
    10. '=input' → logprob: -15.575955390930176

Token 682: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.005789305083453655
    2. 'input' → logprob: -5.380789279937744
    3. ' [' → logprob: -7.630789279937744
    4. '[' → logprob: -7.630789279937744
    5. '[list' → logprob: -9.630789756774902
    6. '[]' → logprob: -9.755789756774902
    7. ' input' → logprob: -10.380789756774902
    8. '(input' → logprob: -11.630789756774902
    9. '[]
' → logprob: -11.755789756774902
    10. 'list' → logprob: -12.255789756774902

Token 683: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.794061770662665e-05
    2. '{}' → logprob: -10.00009822845459
    3. ' input' → logprob: -10.25009822845459
    4. '{' → logprob: -12.50009822845459
    5. ']' → logprob: -12.87509822845459
    6. '(input' → logprob: -13.00009822845459
    7. '
' → logprob: -13.50009822845459
    8. 'dd' → logprob: -14.00009822845459
    9. '[input' → logprob: -14.00009822845459
    10. '{})' → logprob: -14.25009822845459

Token 684: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.006478995084762573
    2. '()]' → logprob: -5.256478786468506
    3. '()' → logprob: -6.756478786468506
    4. 'IFIER' → logprob: -10.006479263305664
    5. 'ify' → logprob: -11.381479263305664
    6. '())' → logprob: -11.631479263305664
    7. 'ifiers' → logprob: -12.756479263305664
    8. '()]
' → logprob: -12.756479263305664
    9. 'f' → logprob: -12.881479263305664
    10. 'ifie' → logprob: -13.881479263305664

Token 685: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20309482514858246
    2. '(),' → logprob: -1.9530948400497437
    3. '()]' → logprob: -3.203094720840454
    4. '(),
' → logprob: -6.828094959259033
    5. '())' → logprob: -9.328094482421875
    6. '()],' → logprob: -9.703094482421875
    7. '(),"' → logprob: -10.828094482421875
    8. '()]
' → logprob: -11.078094482421875
    9. '()
' → logprob: -11.328094482421875
    10. '()),' → logprob: -11.703094482421875

Token 686: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024303654208779335
    2. ',
' → logprob: -4.274303436279297
    3. ']' → logprob: -5.149303436279297
    4. ' for' → logprob: -5.899303436279297
    5. 'for' → logprob: -7.024303436279297
    6. ')' → logprob: -8.024303436279297
    7. ',B' → logprob: -8.524303436279297
    8. '()]' → logprob: -10.274303436279297
    9. '()' → logprob: -10.774303436279297
    10. ')]' → logprob: -11.399303436279297

Token 687: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029728153720498085
    2. ' range' → logprob: -3.7797281742095947
    3. 'range' → logprob: -5.654727935791016
    4. ' _' → logprob: -6.404727935791016
    5. '_range' → logprob: -6.654727935791016
    6. '_in' → logprob: -11.904727935791016
    7. '__' → logprob: -12.654727935791016
    8. '_=' → logprob: -13.654727935791016
    9. ' ' → logprob: -13.904727935791016
    10. '_i' → logprob: -14.029727935791016

Token 688: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10091309994459152
    2. ' in' → logprob: -2.3509130477905273
    3. 'range' → logprob: -7.350913047790527
    4. '_' → logprob: -10.600913047790527
    5. ' range' → logprob: -11.225913047790527
    6. '3' → logprob: -11.350913047790527
    7. ' ' → logprob: -11.725913047790527
    8. '  ' → logprob: -13.350913047790527
    9. 'B' → logprob: -13.850913047790527
    10. '(' → logprob: -13.975913047790527

Token 689: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005558936391025782
    2. ' range' → logprob: -7.500555992126465
    3. '[' → logprob: -13.125555992126465
    4. '_' → logprob: -14.250555992126465
    5. '(range' → logprob: -16.87555503845215
    6. '['_' → logprob: -16.87555503845215
    7. ''_' → logprob: -17.00055503845215
    8. '"_' → logprob: -17.12555503845215
    9. '(' → logprob: -17.50055503845215
    10. '_range' → logprob: -17.62555503845215

Token 690: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. '3' → logprob: -12.250004768371582
    3. ' (' → logprob: -17.2500057220459
    4. ' ' → logprob: -21.7500057220459
    5. '(
' → logprob: -23.2500057220459
    6. '((' → logprob: -23.2500057220459
    7. '   ' → logprob: -24.6250057220459
    8. '```' → logprob: -25.0000057220459
    9. '	' → logprob: -25.7500057220459
    10. '("' → logprob: -26.0000057220459

Token 691: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '(' → logprob: -16.75
    4. '   ' → logprob: -17.375
    5. '2' → logprob: -18.875
    6. '  ' → logprob: -20.0
    7. '    ' → logprob: -20.625
    8. '       ' → logprob: -21.0
    9. 'len' → logprob: -21.125
    10. '
' → logprob: -21.25

Token 692: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4747299253940582
    2. ']' → logprob: -0.9747298955917358
    3. ')' → logprob: -7.474730014801025
    4. '()]' → logprob: -9.849729537963867
    5. '])' → logprob: -10.849729537963867
    6. '])]' → logprob: -11.974729537963867
    7. ']
' → logprob: -12.849729537963867
    8. ')])' → logprob: -13.224729537963867
    9. ' ]' → logprob: -14.349729537963867
    10. ']()' → logprob: -14.724729537963867

Token 693: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010068230039905757
    2. 'result' → logprob: -9.250101089477539
    3. 'res' → logprob: -12.875101089477539
    4. 'answer' → logprob: -14.375101089477539
    5. '
' → logprob: -14.500101089477539
    6. 'ans' → logprob: -14.625101089477539
    7. 'for' → logprob: -16.62510108947754
    8. 'output' → logprob: -17.12510108947754
    9. '```' → logprob: -17.25010108947754
    10. '#print' → logprob: -17.37510108947754

Token 694: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. '()' → logprob: -17.50002670288086
    4. '(f' → logprob: -18.12502670288086
    5. '(C' → logprob: -18.25002670288086
    6. '((' → logprob: -18.25002670288086
    7. 'c' → logprob: -18.37502670288086
    8. '(cr' → logprob: -18.75002670288086
    9. ' (' → logprob: -19.00002670288086
    10. 'cra' → logprob: -19.12502670288086

Token 695: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -5.512236498361744e-07
    2. 'RA' → logprob: -15.250000953674316
    3. '_ra' → logprob: -16.25
    4. '-ra' → logprob: -16.375
    5. 'cra' → logprob: -17.625
    6. 'r' → logprob: -17.875
    7. 'raz' → logprob: -18.25
    8. '.ra' → logprob: -18.75
    9. 'ozy' → logprob: -19.75
    10. 'razi' → logprob: -19.75

Token 696: 'zy' (ID: 3705)
  Prédit: 'ZY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ZY' → logprob: -0.0019488678080961108
    2. 'zy' → logprob: -6.251948833465576
    3. 'Z' → logprob: -11.001949310302734
    4. 'SY' → logprob: -13.251949310302734
    5. 'AZY' → logprob: -13.501949310302734
    6. 'ZZ' → logprob: -15.501949310302734
    7. '_' → logprob: -16.626949310302734
    8. 'PY' → logprob: -16.876949310302734
    9. '
' → logprob: -16.876949310302734
    10. 'Y' → logprob: -17.001949310302734

Token 697: '_cross' (ID: 85618)
  Prédit: '_cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cross' → logprob: -1.9361264946837764e-07
    2. '_c' → logprob: -15.875
    3. 'cross' → logprob: -18.375
    4. '_cr' → logprob: -19.125
    5. '_' → logprob: -19.5
    6. 'Cross' → logprob: -21.25
    7. ''_' → logprob: -21.375
    8. '_C' → logprob: -21.5
    9. ')_' → logprob: -22.375
    10. '(c' → logprob: -22.625

Token 698: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0007400614558719099
    2. 'cross' → logprob: -7.625740051269531
    3. '_cross' → logprob: -8.875740051269531
    4. 'ross' → logprob: -9.500740051269531
    5. 'zing' → logprob: -11.500740051269531
    6. 'oss' → logprob: -11.625740051269531
    7. 'xing' → logprob: -12.500740051269531
    8. 'ng' → logprob: -12.750740051269531
    9. 'ging' → logprob: -13.250740051269531
    10. ' crossing' → logprob: -13.750740051269531

Token 699: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01296739000827074
    2. '(len' → logprob: -4.387967586517334
    3. '(N' → logprob: -7.762967586517334
    4. '(B' → logprob: -10.887967109680176
    5. '3' → logprob: -12.137967109680176
    6. ')(' → logprob: -12.512967109680176
    7. ' (' → logprob: -12.762967109680176
    8. '((' → logprob: -14.512967109680176
    9. 'len' → logprob: -14.512967109680176
    10. ')' → logprob: -14.887967109680176

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00863631535321474
    2. ',B' → logprob: -4.758636474609375
    3. ' ,' → logprob: -10.758636474609375
    4. 'B' → logprob: -16.008636474609375
    5. ',b' → logprob: -16.133636474609375
    6. ',[' → logprob: -16.633636474609375
    7. ',K' → logprob: -17.383636474609375
    8. ',
' → logprob: -17.633636474609375
    9. ',C' → logprob: -17.633636474609375
    10. '   ' → logprob: -18.508636474609375

Token 701: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.306760805164231e-05
    2. ' B' → logprob: -11.25001335144043
    3. ')' → logprob: -19.00001335144043
    4. '   ' → logprob: -19.62501335144043
    5. '(B' → logprob: -20.12501335144043
    6. '[B' → logprob: -20.25001335144043
    7. '[' → logprob: -20.87501335144043
    8. '	B' → logprob: -21.12501335144043
    9. ' ' → logprob: -22.25001335144043
    10. 'BB' → logprob: -22.37501335144043

Token 702: 'ASK' (ID: 15202)
  Prédit: 'ASK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ASK' → logprob: 0.0
    2. 'B' → logprob: -17.875
    3. 'A' → logprob: -18.375
    4. 'asket' → logprob: -19.25
    5. 'AS' → logprob: -19.5
    6. 'AST' → logprob: -20.75
    7. 'ASE' → logprob: -21.125
    8. 'SK' → logprob: -21.125
    9. '[' → logprob: -21.875
    10. '#' → logprob: -23.625

Token 703: 'ET' (ID: 2175)
  Prédit: 'ET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -3.7697225252486533e-06
    2. 'T' → logprob: -12.500003814697266
    3. 'E' → logprob: -18.000003814697266
    4. 'et' → logprob: -18.125003814697266
    5. 'ЕТ' → logprob: -18.750003814697266
    6. '_ET' → logprob: -18.750003814697266
    7. 'SET' → logprob: -20.000003814697266
    8. 'ETF' → logprob: -20.125003814697266
    9. 'B' → logprob: -20.250003814697266
    10. 'ETS' → logprob: -20.750003814697266

Token 704: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005537479883059859
    2. ')' → logprob: -7.500553607940674
    3. '))
' → logprob: -14.500554084777832
    4. ')))' → logprob: -15.375554084777832
    5. '])' → logprob: -16.250553131103516
    6. '()))' → logprob: -18.000553131103516
    7. ')
' → logprob: -18.250553131103516
    8. ' ))' → logprob: -18.625553131103516
    9. '})' → logprob: -19.125553131103516
    10. '),' → logprob: -19.250553131103516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 702
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 273
Tokens correctement prédits (top 10): 514
Précision stricte (1ère position): 36.75%
Précision adaptée (1ère position): 38.89%
Précision (top 10): 73.22%
================================================================================
