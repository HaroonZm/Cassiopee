================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
hash = {}
bit = 0
while bit < (1 << n):
    red = ""
    blue = ""
    i = 0
    while i < n:
        if (bit & (1 << i)) > 0:
            red += s[i]
        else:
            blue += s[i]
        i += 1
    key = (red, blue)
    if key in hash:
        hash[key] += 1
    else:
        hash[key] = 1
    bit += 1

t = ""
i = n + n - 1
while i >= n:
    t += s[i]
    i -= 1
cnt = 0
bit = 0
while bit < (1 << n):
    red = ""
    blue = ""
    i = 0
    while i < n:
        if (bit & (1 << i)) > 0:
            red += t[i]
        else:
            blue += t[i]
        i += 1
    key = (blue, red)
    if key in hash:
        cnt += hash[key]
    bit += 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7856029868125916
    2. '.' → logprob: -1.4106030464172363
    3. 'um' → logprob: -2.1606030464172363
    4. ' =' → logprob: -2.6606030464172363
    5. 'u' → logprob: -4.035603046417236
    6. '=' → logprob: -4.160603046417236
    7. 't' → logprob: -4.285603046417236
    8. 'tr' → logprob: -4.410603046417236
    9. '[i' → logprob: -4.910603046417236
    10. '+' → logprob: -5.035603046417236

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.29172635078430176
    2. ' input' → logprob: -1.4167263507843018
    3. '""' → logprob: -5.166726112365723
    4. '''' → logprob: -6.791726112365723
    5. '0' → logprob: -7.041726112365723
    6. ' ' → logprob: -7.041726112365723
    7. '"' → logprob: -7.416726112365723
    8. ' ""' → logprob: -7.916726112365723
    9. ''' → logprob: -8.041726112365723
    10. ' ''' → logprob: -8.416726112365723

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002945847576484084
    2. ''' → logprob: -6.377945899963379
    3. ')' → logprob: -8.377945899963379
    4. '"' → logprob: -8.377945899963379
    5. '('' → logprob: -8.502945899963379
    6. '`' → logprob: -8.877945899963379
    7. '()' → logprob: -8.877945899963379
    8. '(
' → logprob: -9.127945899963379
    9. ' (' → logprob: -10.002945899963379
    10. '```' → logprob: -10.002945899963379

Token 9: 'hash' (ID: 16909)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7354779839515686
    2. 'for' → logprob: -1.6104779243469238
    3. 'i' → logprob: -1.6104779243469238
    4. 'f' → logprob: -2.985477924346924
    5. 'count' → logprob: -2.985477924346924
    6. 'c' → logprob: -4.860477924346924
    7. 'sum' → logprob: -6.110477924346924
    8. 'result' → logprob: -6.235477924346924
    9. 'd' → logprob: -6.610477924346924
    10. 't' → logprob: -6.735477924346924

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2838074266910553
    2. '(' → logprob: -2.0338075160980225
    3. 's' → logprob: -2.6588075160980225
    4. 'es' → logprob: -3.6588075160980225
    5. '_map' → logprob: -5.158807277679443
    6. '_s' → logprob: -5.533807277679443
    7. '[' → logprob: -6.158807277679443
    8. '(s' → logprob: -6.283807277679443
    9. '_value' → logprob: -6.408807277679443
    10. '_table' → logprob: -6.408807277679443

Token 11: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.4750702381134033
    2. '{}' → logprob: -0.9750702381134033
    3. ' ' → logprob: -7.475069999694824
    4. '{' → logprob: -9.225069999694824
    5. 'set' → logprob: -9.475069999694824
    6. '0' → logprob: -9.850069999694824
    7. 'dict' → logprob: -9.975069999694824
    8. '[' → logprob: -10.725069999694824
    9. ' {}\' → logprob: -10.725069999694824
    10. ' {}
' → logprob: -10.850069999694824

Token 12: 'bit' (ID: 6516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0348399356007576
    2. 'f' → logprob: -3.4098398685455322
    3. ' for' → logprob: -7.284840106964111
    4. 'i' → logprob: -8.284839630126953
    5. 't' → logprob: -9.159839630126953
    6. '=' → logprob: -10.034839630126953
    7. '[' → logprob: -11.159839630126953
    8. 'd' → logprob: -11.409839630126953
    9. 'a' → logprob: -11.534839630126953
    10. 'n' → logprob: -11.534839630126953

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.112764373421669
    2. 's' → logprob: -2.362764358520508
    3. ' =' → logprob: -5.487764358520508
    4. ' ' → logprob: -5.987764358520508
    5. 'mask' → logprob: -5.987764358520508
    6. '_mask' → logprob: -6.862764358520508
    7. '=' → logprob: -7.487764358520508
    8. '_s' → logprob: -7.987764358520508
    9. ')' → logprob: -8.487764358520508
    10. 'set' → logprob: -8.737764358520508

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26273590326309204
    2. ' [' → logprob: -2.1377358436584473
    3. '0' → logprob: -2.5127358436584473
    4. '[' → logprob: -4.012735843658447
    5. ' []' → logprob: -5.262735843658447
    6. '32' → logprob: -5.637735843658447
    7. ' {}' → logprob: -5.887735843658447
    8. '1' → logprob: -6.887735843658447
    9. '[]' → logprob: -7.887735843658447
    10. '20' → logprob: -8.387736320495605

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39679422974586487
    2. '[' → logprob: -1.1467941999435425
    3. '1' → logprob: -5.771794319152832
    4. '{}' → logprob: -6.021794319152832
    5. '[]' → logprob: -6.271794319152832
    6. '[n' → logprob: -6.521794319152832
    7. '[int' → logprob: -8.521794319152832
    8. 'n' → logprob: -8.771794319152832
    9. '32' → logprob: -9.021794319152832
    10. '{' → logprob: -9.271794319152832

Token 16: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5954545140266418
    2. ' ' → logprob: -1.845454454421997
    3. '<|end|>' → logprob: -2.345454454421997
    4. ' for' → logprob: -2.345454454421997
    5. '
' → logprob: -2.720454454421997
    6. 'x' → logprob: -4.720454692840576
    7. '.' → logprob: -5.845454692840576
    8. ')' → logprob: -5.970454692840576
    9. ';' → logprob: -6.220454692840576
    10. '<|end|>' → logprob: -6.345454692840576

Token 17: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043191928416490555
    2. ' for' → logprob: -3.168191909790039
    3. '
' → logprob: -10.168191909790039
    4. 'f' → logprob: -10.418191909790039
    5. ' ' → logprob: -10.668191909790039
    6. 's' → logprob: -10.793191909790039
    7. 'i' → logprob: -10.918191909790039
    8. '=' → logprob: -11.168191909790039
    9. '0' → logprob: -11.543191909790039
    10. ':' → logprob: -11.668191909790039

Token 18: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.040800534188747406
    2. ' ' → logprob: -3.5408005714416504
    3. ' n' → logprob: -5.29080057144165
    4. 'bit' → logprob: -5.91580057144165
    5. ' not' → logprob: -6.29080057144165
    6. '(bit' → logprob: -7.29080057144165
    7. ' (' → logprob: -8.290800094604492
    8. 'n' → logprob: -8.790800094604492
    9. '  ' → logprob: -9.165800094604492
    10. '(' → logprob: -9.415800094604492

Token 19: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31513339281082153
    2. '<' → logprob: -1.3151333332061768
    3. ' <=' → logprob: -7.940133571624756
    4. ' ' → logprob: -8.065133094787598
    5. '<<' → logprob: -8.565133094787598
    6. ' <<=' → logprob: -8.565133094787598
    7. '<=' → logprob: -9.065133094787598
    8. ' &' → logprob: -9.190133094787598
    9. ' <<' → logprob: -9.315133094787598
    10. '[' → logprob: -9.315133094787598

Token 20: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2018975168466568
    2. ' n' → logprob: -1.7018975019454956
    3. ' ' → logprob: -8.701897621154785
    4. 'len' → logprob: -8.826897621154785
    5. '1' → logprob: -9.826897621154785
    6. ' len' → logprob: -10.326897621154785
    7. '32' → logprob: -10.701897621154785
    8. '10' → logprob: -11.201897621154785
    9. '(n' → logprob: -11.326897621154785
    10. '(' → logprob: -11.451897621154785

Token 21: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2610810101032257
    2. '1' → logprob: -1.7610809803009033
    3. ' n' → logprob: -3.1360809803009033
    4. '(' → logprob: -4.761081218719482
    5. ' ' → logprob: -5.636081218719482
    6. ' (' → logprob: -7.011081218719482
    7. '2' → logprob: -7.386081218719482
    8. 'len' → logprob: -7.636081218719482
    9. '(n' → logprob: -9.761080741882324
    10. ' len' → logprob: -9.761080741882324

Token 22: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.694067656993866
    2. '<<' → logprob: -0.694067656993866
    3. '<' → logprob: -7.569067478179932
    4. '1' → logprob: -8.19406795501709
    5. ')' → logprob: -10.06906795501709
    6. ' <' → logprob: -10.44406795501709
    7. ')<<' → logprob: -11.56906795501709
    8. '&lt' → logprob: -11.81906795501709
    9. '<n' → logprob: -11.81906795501709
    10. ' ' → logprob: -11.94406795501709

Token 23: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01610826887190342
    2. ' n' → logprob: -4.14110803604126
    3. ' ' → logprob: -10.766108512878418
    4. 'len' → logprob: -11.016108512878418
    5. ')n' → logprob: -11.891108512878418
    6. '20' → logprob: -12.391108512878418
    7. '	n' → logprob: -12.641108512878418
    8. '   ' → logprob: -12.641108512878418
    9. '10' → logprob: -12.766108512878418
    10. '(n' → logprob: -12.891108512878418

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0076926290057599545
    2. ')' → logprob: -4.882692813873291
    3. ' ):' → logprob: -10.007692337036133
    4. '):
' → logprob: -10.882692337036133
    5. ':' → logprob: -11.132692337036133
    6. '):

' → logprob: -12.882692337036133
    7. ''):' → logprob: -13.382692337036133
    8. ' )' → logprob: -14.382692337036133
    9. ')):' → logprob: -14.507692337036133
    10. ' ' → logprob: -14.882692337036133

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.115301214158535
    2. '    ' → logprob: -2.7403011322021484
    3. '   ' → logprob: -3.7403011322021484
    4. ' {' → logprob: -5.365301132202148
    5. '     
' → logprob: -5.615301132202148
    6. ' 
' → logprob: -5.865301132202148
    7. ' :' → logprob: -5.990301132202148
    8. '  ' → logprob: -6.490301132202148
    9. ':' → logprob: -6.740301132202148
    10. '<|end|>' → logprob: -7.115301132202148

Token 26: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7674748301506042
    2. ' for' → logprob: -1.642474889755249
    3. ' if' → logprob: -2.517474889755249
    4. 'for' → logprob: -2.892474889755249
    5. ' i' → logprob: -3.017474889755249
    6. ' mask' → logprob: -3.767474889755249
    7. ' subset' → logprob: -3.767474889755249
    8. ' bit' → logprob: -4.01747465133667
    9. 'if' → logprob: -4.26747465133667
    10. 'i' → logprob: -4.51747465133667

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35120663046836853
    2. '_' → logprob: -2.1012065410614014
    3. '=' → logprob: -2.8512065410614014
    4. '_mask' → logprob: -2.8512065410614014
    5. '_count' → logprob: -3.8512065410614014
    6. '_bit' → logprob: -4.9762067794799805
    7. '_bits' → logprob: -5.1012067794799805
    8. 's' → logprob: -5.3512067794799805
    9. '_s' → logprob: -5.9762067794799805
    10. ' |=' → logprob: -6.1012067794799805

Token 28: ' ""
' (ID: 18061)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19658057391643524
    2. ' ' → logprob: -2.196580648422241
    3. ' []' → logprob: -4.321580410003662
    4. 'bit' → logprob: -4.446580410003662
    5. ' (' → logprob: -4.821580410003662
    6. ' bit' → logprob: -4.821580410003662
    7. 'bin' → logprob: -5.071580410003662
    8. '(' → logprob: -5.446580410003662
    9. '[]' → logprob: -5.446580410003662
    10. '   ' → logprob: -5.946580410003662

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4559665322303772
    2. '<|end|>' → logprob: -1.0809664726257324
    3. ' for' → logprob: -4.705966472625732
    4. 'for' → logprob: -4.955966472625732
    5. ' ' → logprob: -5.705966472625732
    6. '<|end|>' → logprob: -5.955966472625732
    7. '    
' → logprob: -6.955966472625732
    8. 'red' → logprob: -7.080966472625732
    9. '
' → logprob: -7.330966472625732
    10. '  ' → logprob: -7.580966472625732

Token 30: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.4371694028377533
    2. 'for' → logprob: -1.3121694326400757
    3. 'green' → logprob: -2.937169313430786
    4. 'black' → logprob: -3.562169313430786
    5. 'white' → logprob: -7.312169551849365
    6. '   ' → logprob: -7.437169551849365
    7. 'bit' → logprob: -7.562169551849365
    8. 'while' → logprob: -7.687169551849365
    9. ' for' → logprob: -8.312169075012207
    10. 'blu' → logprob: -8.562169075012207

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303298518061638
    2. '=' → logprob: -3.1680328845977783
    3. ' ' → logprob: -10.7930326461792
    4. '<|end|>' → logprob: -12.2930326461792
    5. '<|end|>' → logprob: -13.0430326461792
    6. '   ' → logprob: -13.5430326461792
    7. 's' → logprob: -13.6680326461792
    8. '=""' → logprob: -13.9180326461792
    9. ',' → logprob: -14.0430326461792
    10. '  ' → logprob: -14.4180326461792

Token 32: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.014326975680887699
    2. ' ""' → logprob: -4.264327049255371
    3. '''' → logprob: -9.764327049255371
    4. '"' → logprob: -9.889327049255371
    5. ' ' → logprob: -10.389327049255371
    6. '[]' → logprob: -10.889327049255371
    7. '0' → logprob: -13.014327049255371
    8. ' []' → logprob: -13.639327049255371
    9. ' ''' → logprob: -14.514327049255371
    10. '""""' → logprob: -14.889327049255371

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.665559709072113
    2. '
' → logprob: -0.915559709072113
    3. '<|end|>' → logprob: -2.790559768676758
    4. '    
' → logprob: -4.540559768676758
    5. ' 
' → logprob: -6.040559768676758
    6. ' ' → logprob: -6.040559768676758
    7. '  
' → logprob: -6.290559768676758
    8. '\n' → logprob: -6.790559768676758
    9. '  ' → logprob: -7.165559768676758
    10. 'if' → logprob: -7.415559768676758

Token 34: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2331174910068512
    2. 'for' → logprob: -1.8581174612045288
    3. ' for' → logprob: -3.3581175804138184
    4. ' ' → logprob: -5.358117580413818
    5. '	for' → logprob: -5.358117580413818
    6. 'if' → logprob: -5.858117580413818
    7. '    ' → logprob: -6.733117580413818
    8. '    
' → logprob: -7.233117580413818
    9. '  ' → logprob: -7.233117580413818
    10. ' if' → logprob: -7.483117580413818

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5604226589202881
    2. '=' → logprob: -0.9354226589202881
    3. 'f' → logprob: -3.435422658920288
    4. 'n' → logprob: -5.685422897338867
    5. ' ' → logprob: -7.435422897338867
    6. 's' → logprob: -8.935422897338867
    7. 'nd' → logprob: -9.060422897338867
    8. 'x' → logprob: -9.935422897338867
    9. 'd' → logprob: -10.560422897338867
    10. 'nt' → logprob: -10.560422897338867

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462403753772378
    2. ' ' → logprob: -5.379623889923096
    3. '   ' → logprob: -12.629624366760254
    4. ' bit' → logprob: -14.754624366760254
    5. '  ' → logprob: -16.629623413085938
    6. 'bit' → logprob: -17.004623413085938
    7. '1' → logprob: -17.817123413085938
    8. '۰' → logprob: -18.317123413085938
    9. '<|end|>' → logprob: -18.692123413085938
    10. '    ' → logprob: -18.817123413085938

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018220659694634378
    2. ' ' → logprob: -8.625182151794434
    3. 'bit' → logprob: -13.375182151794434
    4. ' bit' → logprob: -14.500182151794434
    5. '1' → logprob: -15.000182151794434
    6. '   ' → logprob: -16.00018310546875
    7. 'n' → logprob: -17.50018310546875
    8. '۰' → logprob: -18.00018310546875
    9. '  ' → logprob: -18.06268310546875
    10. '000' → logprob: -18.06268310546875

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014213353395462
    2. ' i' → logprob: -1.7014213800430298
    3. ' ' → logprob: -12.451421737670898
    4. '   ' → logprob: -13.076421737670898
    5. '	i' → logprob: -14.076421737670898
    6. '(i' → logprob: -14.826421737670898
    7. 'n' → logprob: -15.576421737670898
    8. '  ' → logprob: -15.826421737670898
    9. '    ' → logprob: -15.951421737670898
    10. 'True' → logprob: -16.4514217376709

Token 42: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.007168909069150686
    2. '<' → logprob: -5.007168769836426
    3. ' <=' → logprob: -7.882168769836426
    4. ' ' → logprob: -10.257168769836426
    5. '<n' → logprob: -10.382168769836426
    6. '<=' → logprob: -12.132168769836426
    7. '<|end|>' → logprob: -13.382168769836426
    8. '<len' → logprob: -14.382168769836426
    9. ' n' → logprob: -14.882168769836426
    10. ' ≤' → logprob: -15.632168769836426

Token 43: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003380846756044775
    2. ' n' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.625338554382324
    4. ' ' → logprob: -14.625338554382324
    5. 'len' → logprob: -14.625338554382324
    6. '	n' → logprob: -15.250338554382324
    7. '  ' → logprob: -15.625338554382324
    8. '(n' → logprob: -19.000337600708008
    9. '    ' → logprob: -19.250337600708008
    10. '<n' → logprob: -19.500337600708008

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038226354867219925
    2. ':
' → logprob: -3.288226366043091
    3. '   ' → logprob: -9.413226127624512
    4. '):
' → logprob: -9.913226127624512
    5. '):' → logprob: -10.788226127624512
    6. '**' → logprob: -11.663226127624512
    7. ':
' → logprob: -11.913226127624512
    8. ' :' → logprob: -12.663226127624512
    9. '       ' → logprob: -13.038226127624512
    10. '():
' → logprob: -13.288226127624512

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6656395196914673
    2. ' ' → logprob: -1.1656395196914673
    3. '<|end|>' → logprob: -2.4156394004821777
    4. '   ' → logprob: -3.1656394004821777
    5. '    ' → logprob: -3.9156394004821777
    6. ' if' → logprob: -4.915639400482178
    7. ' 
' → logprob: -5.040639400482178
    8. 'if' → logprob: -6.415639400482178
    9. '  ' → logprob: -6.540639400482178
    10. '        
' → logprob: -6.665639400482178

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9653041362762451
    2. ' ' → logprob: -1.0903041362762451
    3. '       ' → logprob: -1.5903041362762451
    4. 'if' (adapté à ' if') → logprob: -3.340304136276245
    5. '   ' → logprob: -4.215304374694824
    6. '<|end|>' → logprob: -4.340304374694824
    7. '    ' → logprob: -5.215304374694824
    8. ' 
' → logprob: -5.465304374694824
    9. '  ' → logprob: -6.965304374694824
    10. '        
' → logprob: -7.340304374694824

Token 47: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.49136167764663696
    2. ' bit' → logprob: -1.2413616180419922
    3. '(bit' → logprob: -2.491361618041992
    4. ' ((' → logprob: -4.491361618041992
    5. 'bit' → logprob: -5.491361618041992
    6. '((' → logprob: -7.241361618041992
    7. ' ' → logprob: -8.616361618041992
    8. ' (((' → logprob: -10.116361618041992
    9. '   ' → logprob: -10.116361618041992
    10. '(' → logprob: -10.366361618041992

Token 48: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.11923331767320633
    2. '(bit' → logprob: -2.6192333698272705
    3. ' bit' → logprob: -3.2442333698272705
    4. ' (' → logprob: -7.994233131408691
    5. '1' → logprob: -9.494233131408691
    6. '   ' → logprob: -10.369233131408691
    7. 'b' → logprob: -10.494233131408691
    8. '((' → logprob: -11.744233131408691
    9. 'bitr' → logprob: -11.744233131408691
    10. ')' → logprob: -11.869233131408691

Token 49: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5866511464118958
    2. ' &' → logprob: -0.8366511464118958
    3. '>>' → logprob: -4.58665132522583
    4. ')' → logprob: -8.086650848388672
    5. ' >>' → logprob: -9.711650848388672
    6. ')&' → logprob: -10.086650848388672
    7. '&amp' → logprob: -10.586650848388672
    8. '&
' → logprob: -11.836650848388672
    9. '&gt' → logprob: -12.211650848388672
    10. '>>&' → logprob: -12.836650848388672

Token 50: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47492849826812744
    2. '(' → logprob: -0.9749284982681274
    3. ')' → logprob: -7.599928379058838
    4. '1' → logprob: -7.974928379058838
    5. ' ' → logprob: -12.474928855895996
    6. ')(' → logprob: -14.099928855895996
    7. '0' → logprob: -14.474928855895996
    8. '(i' → logprob: -15.099928855895996
    9. '   ' → logprob: -15.224928855895996
    10. ' ' → logprob: -15.349928855895996

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03678349405527115
    2. '(' → logprob: -3.536783456802368
    3. ' (' → logprob: -5.536783695220947
    4. ' ' → logprob: -5.786783695220947
    5. '   ' → logprob: -14.161783218383789
    6. ')' → logprob: -15.036783218383789
    7. '{' → logprob: -16.28678321838379
    8. '```' → logprob: -16.91178321838379
    9. '  ' → logprob: -17.28678321838379
    10. '[' → logprob: -17.28678321838379

Token 52: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3751586675643921
    2. ' <<' → logprob: -1.375158667564392
    3. '<' → logprob: -2.8751587867736816
    4. ' <' → logprob: -6.625158786773682
    5. '   ' → logprob: -7.375158786773682
    6. ' ' → logprob: -7.750158786773682
    7. ')' → logprob: -7.875158786773682
    8. '>' → logprob: -8.250158309936523
    9. '1' → logprob: -8.375158309936523
    10. '    ' → logprob: -8.875158309936523

Token 53: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005536287208087742
    2. ' i' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.875554084777832
    4. '	i' → logprob: -15.875554084777832
    5. ')i' → logprob: -16.000553131103516
    6. ')' → logprob: -18.750553131103516
    7. ' ' → logprob: -19.125553131103516
    8. '    ' → logprob: -21.500553131103516
    9. '(i' → logprob: -21.625553131103516
    10. '  ' → logprob: -21.625553131103516

Token 54: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004434389993548393
    2. ')):' → logprob: -5.629434585571289
    3. ')' → logprob: -7.379434585571289
    4. ')):
' → logprob: -8.629434585571289
    5. ' ))' → logprob: -10.879434585571289
    6. ')):
' → logprob: -11.629434585571289
    7. ')))' → logprob: -13.254434585571289
    8. '):' → logprob: -15.129434585571289
    9. ':' → logprob: -15.254434585571289
    10. ' ' → logprob: -15.254434585571289

Token 55: ' >' (ID: 1424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002957496792078018
    2. ')==' → logprob: -6.502957344055176
    3. '):' → logprob: -6.877957344055176
    4. ':' → logprob: -9.002957344055176
    5. '==' → logprob: -9.127957344055176
    6. ' )' → logprob: -9.627957344055176
    7. '):
' → logprob: -10.127957344055176
    8. ' ==' → logprob: -10.252957344055176
    9. ')!=' → logprob: -10.502957344055176
    10. ')>' → logprob: -12.002957344055176

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687533140182495
    2. ' ' → logprob: -1.1368753910064697
    3. '<|end|>' → logprob: -13.26187515258789
    4. '>' → logprob: -14.26187515258789
    5. '=' → logprob: -14.38687515258789
    6. ')' → logprob: -15.26187515258789
    7. '  ' → logprob: -15.76187515258789
    8. ' ' → logprob: -15.76187515258789
    9. '<|end|>' → logprob: -15.88687515258789
    10. '   ' → logprob: -16.13687515258789

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. 'i' → logprob: -16.500911712646484
    4. '   ' → logprob: -17.750911712646484
    5. '  ' → logprob: -17.750911712646484
    6. '<|end|>' → logprob: -18.125911712646484
    7. '۰' → logprob: -18.250911712646484
    8. ')' → logprob: -18.250911712646484
    9. '>' → logprob: -18.625911712646484
    10. ' i' → logprob: -19.000911712646484

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011683570221066475
    2. ':
' → logprob: -4.511683464050293
    3. '):' → logprob: -7.636683464050293
    4. ')' → logprob: -9.886683464050293
    5. '):
' → logprob: -10.011683464050293
    6. ' :' → logprob: -10.761683464050293
    7. '<|end|>' → logprob: -11.136683464050293
    8. ' and' → logprob: -12.386683464050293
    9. ':
' → logprob: -12.761683464050293
    10. '       ' → logprob: -12.761683464050293

Token 59: '           ' (ID: 352)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.20263896882534027
    2. ' ' → logprob: -2.077638864517212
    3. '           ' → logprob: -3.577638864517212
    4. 'red' → logprob: -4.452639102935791
    5. '       ' → logprob: -4.702639102935791
    6. '
' → logprob: -5.827639102935791
    7. ' 
' → logprob: -6.202639102935791
    8. '<|end|>' → logprob: -6.452639102935791
    9. '            
' → logprob: -7.702639102935791
    10. '   ' → logprob: -8.327638626098633

Token 60: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.1394934356212616
    2. 'red' (adapté à ' red') → logprob: -2.264493465423584
    3. ' blue' → logprob: -3.764493465423584
    4. 'r' → logprob: -6.639493465423584
    5. 'blue' → logprob: -6.764493465423584
    6. ' ' → logprob: -8.264492988586426
    7. ' r' → logprob: -8.889492988586426
    8. '   ' → logprob: -9.389492988586426
    9. '           ' → logprob: -10.514492988586426
    10. 're' → logprob: -10.639492988586426

Token 61: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18051400780677795
    2. '+=' → logprob: -1.8055139780044556
    3. '+' → logprob: -7.930513858795166
    4. ' +' → logprob: -7.930513858795166
    5. '.append' → logprob: -11.180514335632324
    6. '+="' → logprob: -11.180514335632324
    7. '+='' → logprob: -11.555514335632324
    8. ' ' → logprob: -12.305514335632324
    9. '=' → logprob: -12.930514335632324
    10. ']+=' → logprob: -13.430514335632324

Token 62: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4287455379962921
    2. ' s' → logprob: -1.0537455081939697
    3. ' ' → logprob: -10.55374526977539
    4. ''s' → logprob: -12.05374526977539
    5. '"s' → logprob: -13.17874526977539
    6. '	s' → logprob: -13.42874526977539
    7. ' ' → logprob: -13.42874526977539
    8. '(s' → logprob: -13.42874526977539
    9. '   ' → logprob: -13.67874526977539
    10. '"' → logprob: -13.67874526977539

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.392824874026701e-05
    2. '[' → logprob: -10.50003433227539
    3. 'i' → logprob: -12.12503433227539
    4. ' ' → logprob: -14.75003433227539
    5. ' [' → logprob: -14.87503433227539
    6. ' i' → logprob: -16.50003433227539
    7. '[I' → logprob: -18.00003433227539
    8. '[
' → logprob: -18.12503433227539
    9. '(i' → logprob: -18.25003433227539
    10. '```' → logprob: -18.25003433227539

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029785369988530874
    2. ']
' → logprob: -5.877978324890137
    3. ')' → logprob: -9.377978324890137
    4. ' ]' → logprob: -10.377978324890137
    5. ')]' → logprob: -10.877978324890137
    6. '']' → logprob: -11.377978324890137
    7. ']
' → logprob: -11.627978324890137
    8. '"]' → logprob: -11.877978324890137
    9. ']

' → logprob: -12.002978324890137
    10. '       ' → logprob: -13.627978324890137

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02766280248761177
    2. ' else' → logprob: -3.902662754058838
    3. 'else' → logprob: -5.027662754058838
    4. '
' → logprob: -7.777662754058838
    5. '   ' → logprob: -10.902663230895996
    6. '\n' → logprob: -11.027663230895996
    7. '           ' → logprob: -11.277663230895996
    8. '        
' → logprob: -11.277663230895996
    9. '    
' → logprob: -11.402663230895996
    10. '	else' → logprob: -11.527663230895996

Token 66: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.37184029817581177
    2. 'else' (adapté à ' else') → logprob: -1.746840238571167
    3. '       ' → logprob: -1.996840238571167
    4. '   ' → logprob: -7.996840476989746
    5. '	else' → logprob: -10.121840476989746
    6. ' ' → logprob: -10.371840476989746
    7. '           ' → logprob: -12.121840476989746
    8. '  ' → logprob: -12.371840476989746
    9. '
' → logprob: -12.371840476989746
    10. 'elif' → logprob: -12.621840476989746

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04614080861210823
    2. '           ' → logprob: -3.7961409091949463
    3. ':
' → logprob: -3.7961409091949463
    4. '   ' → logprob: -9.671140670776367
    5. '       ' → logprob: -10.046140670776367
    6. ':
' → logprob: -11.296140670776367
    7. '               ' → logprob: -11.671140670776367
    8. '          ' → logprob: -11.671140670776367
    9. ' red' → logprob: -12.046140670776367
    10. ':

' → logprob: -12.171140670776367

Token 68: '           ' (ID: 352)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.6498289108276367
    2. '           ' → logprob: -0.7748289108276367
    3. 'blue' → logprob: -4.149828910827637
    4. '```' → logprob: -7.649828910827637
    5. '               ' → logprob: -8.274828910827637
    6. '   ' → logprob: -8.774828910827637
    7. '       ' → logprob: -9.024828910827637
    8. ' ' → logprob: -9.399828910827637
    9. '_blue' → logprob: -10.524828910827637
    10. '            ' → logprob: -10.524828910827637

Token 69: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.10022931545972824
    2. 'blue' (adapté à ' blue') → logprob: -2.350229263305664
    3. ' ' → logprob: -11.600229263305664
    4. '           ' → logprob: -11.850229263305664
    5. ' ' → logprob: -13.600229263305664
    6. '_blue' → logprob: -13.725229263305664
    7. '.blue' → logprob: -13.975229263305664
    8. ' bleu' → logprob: -14.725229263305664
    9. '   ' → logprob: -14.850229263305664
    10. ' blues' → logprob: -14.975229263305664

Token 70: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6330898404121399
    2. '+=' → logprob: -0.7580898404121399
    3. '+' → logprob: -8.258090019226074
    4. ' +' → logprob: -9.133090019226074
    5. ' ' → logprob: -10.133090019226074
    6. '+='' → logprob: -10.258090019226074
    7. '+="' → logprob: -10.508090019226074
    8. ']+=' → logprob: -11.758090019226074
    9. '   ' → logprob: -13.008090019226074
    10. '  ' → logprob: -13.258090019226074

Token 71: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47408220171928406
    2. ' s' → logprob: -0.9740822315216064
    3. ' ' → logprob: -12.724081993103027
    4. '(s' → logprob: -14.474081993103027
    5. ''s' → logprob: -14.974081993103027
    6. '	s' → logprob: -15.099081993103027
    7. '"' → logprob: -15.849081993103027
    8. '"s' → logprob: -15.974081993103027
    9. ' ' → logprob: -16.474082946777344
    10. '   ' → logprob: -16.599082946777344

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.992775888647884e-05
    2. '[' → logprob: -9.625069618225098
    3. '```' → logprob: -13.250069618225098
    4. '[j' → logprob: -14.500069618225098
    5. '[
' → logprob: -14.500069618225098
    6. ' [' → logprob: -14.625069618225098
    7. 'i' → logprob: -15.000069618225098
    8. '[I' → logprob: -16.500070571899414
    9. '`' → logprob: -16.875070571899414
    10. '   ' → logprob: -17.625070571899414

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0051325964741408825
    2. ')
' → logprob: -5.755132675170898
    3. '       ' → logprob: -6.255132675170898
    4. ')
' → logprob: -11.755132675170898
    5. ' )' → logprob: -12.005132675170898
    6. ']' → logprob: -12.380132675170898
    7. '）' → logprob: -12.755132675170898
    8. '   ' → logprob: -13.005132675170898
    9. '')' → logprob: -13.630132675170898
    10. '")' → logprob: -13.880132675170898

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07221509516239166
    2. '
' → logprob: -2.6972150802612305
    3. '   ' → logprob: -6.3222150802612305
    4. '```' → logprob: -8.32221508026123
    5. '        
' → logprob: -9.82221508026123
    6. '\n' → logprob: -10.44721508026123
    7. '
' → logprob: -10.44721508026123
    8. '``' → logprob: -10.82221508026123
    9. '	' → logprob: -11.07221508026123
    10. '<|end|>' → logprob: -11.19721508026123

Token 75: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6065784096717834
    2. 'i' (adapté à ' i') → logprob: -1.3565783500671387
    3. ' i' → logprob: -1.9815783500671387
    4. '       ' → logprob: -3.4815783500671387
    5. '
' → logprob: -3.9815783500671387
    6. '	i' → logprob: -5.106578350067139
    7. '\n' → logprob: -5.856578350067139
    8. '```' → logprob: -7.481578350067139
    9. '    
' → logprob: -9.106578826904297
    10. '        
' → logprob: -9.356578826904297

Token 76: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1345837563276291
    2. ' +=' → logprob: -2.1345837116241455
    3. '+' → logprob: -4.884583950042725
    4. '=' → logprob: -9.759583473205566
    5. ' +' → logprob: -12.884583473205566
    6. '++' → logprob: -13.134583473205566
    7. '+="' → logprob: -14.009583473205566
    8. '+='' → logprob: -14.634583473205566
    9. ' ' → logprob: -15.509583473205566
    10. '   ' → logprob: -15.884583473205566

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.00048828125
    4. '```' → logprob: -18.62548828125
    5. '  ' → logprob: -18.87548828125
    6. '１' → logprob: -19.56298828125
    7. '0' → logprob: -20.43798828125
    8. ' ' → logprob: -20.62548828125
    9. '۱' → logprob: -20.87548828125
    10. '+' → logprob: -21.00048828125

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.6250057220459
    5. '１' → logprob: -19.1250057220459
    6. '  ' → logprob: -19.4375057220459
    7. '0' → logprob: -19.5625057220459
    8. '۱' → logprob: -19.6875057220459
    9. '१' → logprob: -20.0625057220459
    10. '+' → logprob: -20.1250057220459

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10895128548145294
    2. '   ' → logprob: -2.3589513301849365
    3. '<|end|>' → logprob: -5.358951091766357
    4. '    
' → logprob: -5.858951091766357
    5. '```' → logprob: -8.358951568603516
    6. '
' → logprob: -8.358951568603516
    7. ' if' → logprob: -8.733951568603516
    8. '<|end|>' → logprob: -8.983951568603516
    9. '  
' → logprob: -9.358951568603516
    10. 'if' → logprob: -9.358951568603516

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021449966356158257
    2. '
' → logprob: -4.021450042724609
    3. ' if' → logprob: -6.521450042724609
    4. 'if' → logprob: -6.896450042724609
    5. '    
' → logprob: -7.646450042724609
    6. 'hash' → logprob: -8.89645004272461
    7. '```' → logprob: -9.52145004272461
    8. '#' → logprob: -10.39645004272461
    9. ' bit' → logprob: -11.02145004272461
    10. ' hash' → logprob: -11.39645004272461

Token 81: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007625557482242584
    2. '   ' → logprob: -5.257625579833984
    3. 'hash' → logprob: -6.757625579833984
    4. ' if' → logprob: -8.132625579833984
    5. 'red' → logprob: -8.382625579833984
    6. 'print' → logprob: -8.757625579833984
    7. 'rev' → logprob: -8.757625579833984
    8. 'reverse' → logprob: -9.007625579833984
    9. '#' → logprob: -9.507625579833984
    10. 'sorted' → logprob: -9.882625579833984

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021745413541794
    2. '=' → logprob: -2.350217342376709
    3. 's' → logprob: -11.600217819213867
    4. ' ' → logprob: -13.975217819213867
    5. ',' → logprob: -15.100217819213867
    6. ' =
' → logprob: -15.600217819213867
    7. ')' → logprob: -16.350217819213867
    8. ' =(' → logprob: -16.350217819213867
    9. ' =
' → logprob: -16.975217819213867
    10. ':' → logprob: -16.975217819213867

Token 83: ' (' (ID: 350)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.36054179072380066
    2. ' (' → logprob: -1.610541820526123
    3. 'red' → logprob: -3.235541820526123
    4. '(' → logprob: -3.610541820526123
    5. '(f' → logprob: -4.235541820526123
    6. ' red' → logprob: -4.735541820526123
    7. '(tuple' → logprob: -5.860541820526123
    8. 'tuple' → logprob: -5.985541820526123
    9. '(str' → logprob: -6.360541820526123
    10. '"' → logprob: -6.860541820526123

Token 84: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.007187723647803068
    2. ' red' → logprob: -5.507187843322754
    3. '(red' → logprob: -6.132187843322754
    4. 'tuple' → logprob: -8.382187843322754
    5. '   ' → logprob: -8.507187843322754
    6. '(' → logprob: -9.382187843322754
    7. 'blue' → logprob: -9.632187843322754
    8. 're' → logprob: -9.757187843322754
    9. ' (' → logprob: -10.007187843322754
    10. ' ' → logprob: -10.257187843322754

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4034345187828876e-05
    2. ' ,' → logprob: -11.12502384185791
    3. ',",' → logprob: -12.87502384185791
    4. '","' → logprob: -13.00002384185791
    5. '","+' → logprob: -14.25002384185791
    6. ',b' → logprob: -14.25002384185791
    7. '",' → logprob: -14.25002384185791
    8. ',"' → logprob: -15.12502384185791
    9. ')' → logprob: -15.25002384185791
    10. ',
' → logprob: -15.37502384185791

Token 86: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.47417378425598145
    2. 'blue' → logprob: -0.9741737842559814
    3. ' ' → logprob: -9.599173545837402
    4. ')' → logprob: -11.224173545837402
    5. 'blu' → logprob: -12.974173545837402
    6. ' bleu' → logprob: -13.349173545837402
    7. ' blues' → logprob: -13.474173545837402
    8. '   ' → logprob: -13.536673545837402
    9. '  ' → logprob: -13.724173545837402
    10. '.blue' → logprob: -14.099173545837402

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03371347859501839
    2. ')
' → logprob: -3.4087135791778564
    3. ')
' → logprob: -9.658713340759277
    4. ')

' → logprob: -13.283713340759277
    5. ' )' → logprob: -14.158713340759277
    6. '))' → logprob: -15.283713340759277
    7. '   ' → logprob: -15.533713340759277
    8. '),' → logprob: -15.783713340759277
    9. ')`' → logprob: -15.783713340759277
    10. '):' → logprob: -16.033714294433594

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0993267297744751
    2. ' if' → logprob: -2.7243266105651855
    3. '<|end|>' → logprob: -3.9743266105651855
    4. '
' → logprob: -4.9743266105651855
    5. '    
' → logprob: -6.5993266105651855
    6. '<|end|>' → logprob: -7.0993266105651855
    7. 'if' → logprob: -7.4743266105651855
    8. ' ' → logprob: -9.474327087402344
    9. '  
' → logprob: -9.724327087402344
    10. '```' → logprob: -9.724327087402344

Token 89: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43179911375045776
    2. 'if' (adapté à ' if') → logprob: -1.1817991733551025
    3. '   ' → logprob: -3.3067991733551025
    4. 'hash' → logprob: -5.306798934936523
    5. ' hash' → logprob: -6.431798934936523
    6. '
' → logprob: -7.681798934936523
    7. '    
' → logprob: -9.681798934936523
    8. ' ' → logprob: -9.806798934936523
    9. '```' → logprob: -9.931798934936523
    10. ')' → logprob: -10.306798934936523

Token 90: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.004191417712718248
    2. 'key' → logprob: -6.1291913986206055
    3. ' not' → logprob: -6.2541913986206055
    4. ' ' → logprob: -10.129191398620605
    5. 'not' → logprob: -10.379191398620605
    6. ' hash' → logprob: -11.879191398620605
    7. '(key' → logprob: -13.879191398620605
    8. 'hash' → logprob: -14.379191398620605
    9. '	key' → logprob: -14.629191398620605
    10. '   ' → logprob: -14.754191398620605

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5087651014328003
    2. ' not' → logprob: -1.0087651014328003
    3. 'in' → logprob: -3.63376522064209
    4. 'not' → logprob: -4.88376522064209
    5. ' ' → logprob: -9.75876522064209
    6. '<|end|>' → logprob: -10.63376522064209
    7. ')' → logprob: -11.38376522064209
    8. '	not' → logprob: -11.88376522064209
    9. '<|end|>' → logprob: -12.88376522064209
    10. '	in' → logprob: -14.13376522064209

Token 92: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.05490383505821228
    2. ' hash' → logprob: -2.929903745651245
    3. '	hash' → logprob: -11.429903984069824
    4. ' ' → logprob: -12.679903984069824
    5. '   ' → logprob: -12.679903984069824
    6. '(hash' → logprob: -13.679903984069824
    7. '_hash' → logprob: -13.929903984069824
    8. 'ash' → logprob: -14.304903984069824
    9. '
' → logprob: -15.304903984069824
    10. '.hash' → logprob: -15.554903984069824

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001996323699131608
    2. ':
' → logprob: -6.5019965171813965
    3. ' :' → logprob: -8.001996040344238
    4. '):' → logprob: -9.626996040344238
    5. ':return' → logprob: -10.626996040344238
    6. '=' → logprob: -11.751996040344238
    7. ')' → logprob: -12.001996040344238
    8. '.keys' → logprob: -12.126996040344238
    9. ']:' → logprob: -12.251996040344238
    10. '):
' → logprob: -12.251996040344238

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5881693363189697
    2. ':' → logprob: -0.8381693363189697
    3. ' =' → logprob: -5.588169097900391
    4. ' :' → logprob: -5.713169097900391
    5. '   ' → logprob: -5.838169097900391
    6. '=' → logprob: -7.463169097900391
    7. '    ' → logprob: -8.08816909790039
    8. '):' → logprob: -8.46316909790039
    9. ' ==' → logprob: -8.58816909790039
    10. ':
' → logprob: -8.71316909790039

Token 95: ' hash' (ID: 10691)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8088166117668152
    2. '   ' → logprob: -1.55881667137146
    3. 'print' → logprob: -1.80881667137146
    4. '       ' → logprob: -2.55881667137146
    5. ' break' → logprob: -2.55881667137146
    6. ' True' → logprob: -4.433816432952881
    7. 'break' → logprob: -5.683816432952881
    8. ' ' → logprob: -6.683816432952881
    9. ' hash' → logprob: -6.683816432952881
    10. 'True' → logprob: -6.808816432952881

Token 96: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0009005005122162402
    2. '[' → logprob: -7.2509002685546875
    3. 'True' → logprob: -9.125900268554688
    4. ' True' → logprob: -11.000900268554688
    5. '][' → logprob: -11.625900268554688
    6. 'true' → logprob: -11.625900268554688
    7. '```' → logprob: -12.000900268554688
    8. 'key' → logprob: -12.500900268554688
    9. ' ' → logprob: -12.500900268554688
    10. ']' → logprob: -12.625900268554688

Token 97: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1598619967699051
    2. '+=' → logprob: -2.4098620414733887
    3. ' =' → logprob: -3.1598620414733887
    4. '=' → logprob: -4.659862041473389
    5. '+' → logprob: -6.159862041473389
    6. ' +' → logprob: -6.534862041473389
    7. ')' → logprob: -7.409862041473389
    8. ']+=' → logprob: -7.784862041473389
    9. '<|end|>' → logprob: -7.784862041473389
    10. ' ' → logprob: -8.53486156463623

Token 98: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.315132200717926
    2. '+=' → logprob: -1.5651321411132812
    3. '=' → logprob: -3.4401321411132812
    4. ' =' → logprob: -3.8151321411132812
    5. '+' → logprob: -5.065132141113281
    6. ' +' → logprob: -7.315132141113281
    7. '   ' → logprob: -9.690132141113281
    8. ' ' → logprob: -9.940132141113281
    9. ' ==' → logprob: -11.565132141113281
    10. ')' → logprob: -12.065132141113281

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '   ' → logprob: -16.879619598388672
    4. ' ' → logprob: -18.879619598388672
    5. '```' → logprob: -20.004619598388672
    6. '0' → logprob: -20.879619598388672
    7. '2' → logprob: -21.129619598388672
    8. '１' → logprob: -21.442119598388672
    9. '  ' → logprob: -21.442119598388672
    10. '`' → logprob: -21.504619598388672

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.375431060791016
    4. '2' → logprob: -19.500431060791016
    5. '  ' → logprob: -19.875431060791016
    6. ' ' → logprob: -20.375431060791016
    7. '0' → logprob: -20.375431060791016
    8. '+' → logprob: -21.000431060791016
    9. ')' → logprob: -21.250431060791016
    10. '１' → logprob: -21.250431060791016

Token 101: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.27645811438560486
    2. ' else' → logprob: -1.7764581441879272
    3. '   ' → logprob: -2.6514580249786377
    4. '	else' → logprob: -6.526458263397217
    5. ' ' → logprob: -8.526457786560059
    6. '  ' → logprob: -10.401457786560059
    7. '<|end|>' → logprob: -10.901457786560059
    8. '       ' → logprob: -11.651457786560059
    9. '    
' → logprob: -11.776457786560059
    10. ')' → logprob: -12.526457786560059

Token 102: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1818309873342514
    2. '   ' → logprob: -2.181830883026123
    3. ' else' → logprob: -2.931830883026123
    4. '	else' → logprob: -9.056831359863281
    5. ' ' → logprob: -12.681831359863281
    6. '```' → logprob: -13.556831359863281
    7. '<|end|>' → logprob: -14.306831359863281
    8. '    
' → logprob: -14.681831359863281
    9. '_else' → logprob: -14.681831359863281
    10. '  ' → logprob: -14.806831359863281

Token 103: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.21846596896648407
    2. ' else' → logprob: -1.7184659242630005
    3. '   ' → logprob: -4.093465805053711
    4. '	else' → logprob: -8.468465805053711
    5. ' ' → logprob: -11.218465805053711
    6. '_else' → logprob: -14.093465805053711
    7. '    
' → logprob: -14.593465805053711
    8. 'e' → logprob: -14.843465805053711
    9. '<|end|>' → logprob: -15.093465805053711
    10. '```' → logprob: -15.093465805053711

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001119499676860869
    2. ':
' → logprob: -6.876119613647461
    3. ' :' → logprob: -10.376119613647461
    4. '       ' → logprob: -10.376119613647461
    5. '   ' → logprob: -11.501119613647461
    6. '<|end|>' → logprob: -11.751119613647461
    7. ' :
' → logprob: -13.126119613647461
    8. ':

' → logprob: -13.751119613647461
    9. '):' → logprob: -14.001119613647461
    10. '):
' → logprob: -14.501119613647461

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010256396606564522
    2. '   ' → logprob: -5.010256290435791
    3. ' hash' → logprob: -6.260256290435791
    4. ' ' → logprob: -7.135256290435791
    5. '    ' → logprob: -7.510256290435791
    6. '        
' → logprob: -9.76025676727295
    7. '	hash' → logprob: -10.51025676727295
    8. ' ' → logprob: -10.63525676727295
    9. ' 
' → logprob: -10.76025676727295
    10. 'hash' → logprob: -10.88525676727295

Token 106: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' (adapté à ' hash') → logprob: -0.16090159118175507
    2. ' hash' → logprob: -1.9109015464782715
    3. '   ' → logprob: -7.5359015464782715
    4. '	hash' → logprob: -9.03590202331543
    5. ' ' → logprob: -11.03590202331543
    6. '       ' → logprob: -12.53590202331543
    7. '(hash' → logprob: -13.03590202331543
    8. '_hash' → logprob: -13.91090202331543
    9. '1' → logprob: -14.53590202331543
    10. '  ' → logprob: -15.03590202331543

Token 107: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0022119891364127398
    2. '[' → logprob: -6.127212047576904
    3. '\[' → logprob: -10.627211570739746
    4. '```' → logprob: -13.877211570739746
    5. '[
' → logprob: -14.127211570739746
    6. '[...]' → logprob: -14.877211570739746
    7. ' [' → logprob: -15.627211570739746
    8. '[k' → logprob: -16.502212524414062
    9. '=' → logprob: -16.627212524414062
    10. ']' → logprob: -16.627212524414062

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00044127836008556187
    2. '=' → logprob: -7.875441074371338
    3. ']=' → logprob: -9.875441551208496
    4. ' =' → logprob: -12.000441551208496
    5. ' ]' → logprob: -13.000441551208496
    6. ')' → logprob: -14.375441551208496
    7. '']' → logprob: -15.250441551208496
    8. '>' → logprob: -15.375441551208496
    9. '"]' → logprob: -15.750441551208496
    10. '   ' → logprob: -16.25044059753418

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968132853507996
    2. ' =' → logprob: -2.8119680881500244
    3. '=
' → logprob: -15.186967849731445
    4. ' =
' → logprob: -16.436967849731445
    5. ' ' → logprob: -16.811967849731445
    6. '<|end|>' → logprob: -16.936967849731445
    7. ']' → logprob: -18.061967849731445
    8. ']=' → logprob: -18.686967849731445
    9. '=

' → logprob: -18.936967849731445
    10. ')' → logprob: -19.061967849731445

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17974978685379028
    2. ' ' → logprob: -1.8047497272491455
    3. '0' → logprob: -12.679749488830566
    4. '   ' → logprob: -13.304749488830566
    5. '  ' → logprob: -16.054750442504883
    6. '    ' → logprob: -16.179750442504883
    7. ' ' → logprob: -16.679750442504883
    8. '	' → logprob: -17.679750442504883
    9. ' 
' → logprob: -18.679750442504883
    10. '```' → logprob: -18.929750442504883

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.875204086303711
    4. '0' → logprob: -16.12520408630371
    5. '  ' → logprob: -19.50020408630371
    6. '```' → logprob: -20.25020408630371
    7. '       ' → logprob: -20.37520408630371
    8. '    ' → logprob: -20.75020408630371
    9. '１' → logprob: -21.00020408630371
    10. '`' → logprob: -21.50020408630371

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0050169555470347404
    2. 'bit' → logprob: -6.130016803741455
    3. ' bit' → logprob: -6.130016803741455
    4. '
' → logprob: -7.755016803741455
    5. '    
' → logprob: -8.505017280578613
    6. '```' → logprob: -12.505017280578613
    7. '  
' → logprob: -12.630017280578613
    8. ' ' → logprob: -12.880017280578613
    9. '  ' → logprob: -13.255017280578613
    10. '\n' → logprob: -13.505017280578613

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2931787967681885
    2. ' bit' → logprob: -2.0431787967681885
    3. '
' → logprob: -2.2931787967681885
    4. 'bit' → logprob: -3.9181787967681885
    5. '    
' → logprob: -5.793178558349609
    6. ' 
' → logprob: -8.54317855834961
    7. '```' → logprob: -9.04317855834961
    8. '
' → logprob: -9.66817855834961
    9. '  
' → logprob: -9.91817855834961
    10. '\n' → logprob: -10.04317855834961

Token 114: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.13101276755332947
    2. 'bit' (adapté à ' bit') → logprob: -2.1310126781463623
    3. '   ' → logprob: -5.506012916564941
    4. '
' → logprob: -12.006012916564941
    5. ' ' → logprob: -12.631012916564941
    6. 'bitr' → logprob: -13.506012916564941
    7. '    
' → logprob: -13.631012916564941
    8. '  ' → logprob: -14.006012916564941
    9. '```' → logprob: -14.256012916564941
    10. '(bit' → logprob: -15.131012916564941

Token 115: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011254130862653255
    2. '+=' → logprob: -4.51125431060791
    3. ' <<=' → logprob: -9.51125431060791
    4. '+' → logprob: -10.51125431060791
    5. '   ' → logprob: -10.51125431060791
    6. ' ' → logprob: -10.76125431060791
    7. ' |=' → logprob: -10.88625431060791
    8. '<|end|>' → logprob: -11.51125431060791
    9. ']+=' → logprob: -12.26125431060791
    10. ' ^=' → logprob: -12.51125431060791

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.875139236450195
    4. '```' → logprob: -19.500139236450195
    5. '  ' → logprob: -20.000139236450195
    6. '１' → logprob: -21.000139236450195
    7. '    ' → logprob: -21.500139236450195
    8. '۱' → logprob: -21.750139236450195
    9. '`' → logprob: -22.187639236450195
    10. ' ' → logprob: -22.312639236450195

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '```' → logprob: -21.000001907348633
    5. '１' → logprob: -22.000001907348633
    6. '  ' → logprob: -22.250001907348633
    7. '۱' → logprob: -23.812501907348633
    8. '       ' → logprob: -24.062501907348633
    9. '`' → logprob: -24.187501907348633
    10. '१' → logprob: -24.375001907348633

Token 118: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7335261106491089
    2. '#' → logprob: -1.7335261106491089
    3. 'print' → logprob: -1.9835261106491089
    4. '
' → logprob: -2.4835262298583984
    5. '\n' → logprob: -3.4835262298583984
    6. ')' → logprob: -3.8585262298583984
    7. '  
' → logprob: -4.108526229858398
    8. 'result' → logprob: -4.608526229858398
    9. ' for' → logprob: -4.983526229858398
    10. '<|end|>' → logprob: -5.233526229858398

Token 119: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3952454626560211
    2. 'max' → logprob: -1.7702454328536987
    3. 'result' → logprob: -2.7702455520629883
    4. 'print' → logprob: -3.2702455520629883
    5. 'count' → logprob: -4.020245552062988
    6. '#' → logprob: -5.270245552062988
    7. 'red' → logprob: -5.395245552062988
    8. 'res' → logprob: -5.770245552062988
    9. '\n' → logprob: -5.770245552062988
    10. 'r' → logprob: -5.770245552062988

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028921056538820267
    2. '=' → logprob: -3.653921127319336
    3. ' ' → logprob: -6.903921127319336
    4. 'arget' → logprob: -7.653921127319336
    5. 'r' → logprob: -7.903921127319336
    6. 'o' → logprob: -9.028921127319336
    7. 'est' → logprob: -9.278921127319336
    8. ',' → logprob: -9.403921127319336
    9. 'ime' → logprob: -9.653921127319336
    10. 'ext' → logprob: -9.653921127319336

Token 121: ' ""
' (ID: 18061)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005526154302060604
    2. ' int' → logprob: -5.755526065826416
    3. '{}' → logprob: -6.505526065826416
    4. '0' → logprob: -7.630526065826416
    5. 'hash' → logprob: -9.255526542663574
    6. '(int' → logprob: -9.755526542663574
    7. ' ' → logprob: -10.255526542663574
    8. 'max' → logprob: -10.380526542663574
    9. 'input' → logprob: -10.880526542663574
    10. 'sum' → logprob: -10.880526542663574

Token 122: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24263590574264526
    2. 'i' → logprob: -1.61763596534729
    3. 'max' → logprob: -4.742635726928711
    4. '0' → logprob: -6.492635726928711
    5. 'while' → logprob: -6.742635726928711
    6. 'count' → logprob: -6.867635726928711
    7. 'n' → logprob: -7.242635726928711
    8. ' for' → logprob: -7.492635726928711
    9. 'if' → logprob: -7.617635726928711
    10. 't' → logprob: -7.867635726928711

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18170665204524994
    2. '=' → logprob: -1.8067066669464111
    3. ' ' → logprob: -6.306706428527832
    4. ' +=' → logprob: -9.556706428527832
    5. '<|end|>' → logprob: -10.181706428527832
    6. ' =
' → logprob: -12.181706428527832
    7. '+=' → logprob: -12.306706428527832
    8. 's' → logprob: -12.306706428527832
    9. '<|end|>' → logprob: -12.931706428527832
    10. '0' → logprob: -13.306706428527832

Token 124: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02325386554002762
    2. ' ' → logprob: -3.773253917694092
    3. ' n' → logprob: -12.398253440856934
    4. 'n' → logprob: -12.523253440856934
    5. '1' → logprob: -14.398253440856934
    6. 't' → logprob: -17.39825439453125
    7. '2' → logprob: -17.77325439453125
    8. 's' → logprob: -17.77325439453125
    9. ' 
' → logprob: -17.77325439453125
    10. ' t' → logprob: -18.52325439453125

Token 125: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02416367083787918
    2. ' -' → logprob: -3.7741637229919434
    3. '<|end|>' → logprob: -7.399163722991943
    4. ' ' → logprob: -9.024163246154785
    5. '
' → logprob: -9.524163246154785
    6. '<|end|>' → logprob: -10.774163246154785
    7. '0' → logprob: -10.899163246154785
    8. '+' → logprob: -11.149163246154785
    9. 'while' → logprob: -11.149163246154785
    10. '  
' → logprob: -11.649163246154785

Token 126: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003660645103082061
    2. ' ' → logprob: -6.253660678863525
    3. '0' → logprob: -6.378660678863525
    4. '2' → logprob: -10.628660202026367
    5. 'n' → logprob: -12.878660202026367
    6. '-' → logprob: -13.628660202026367
    7. '+' → logprob: -13.753660202026367
    8. ' n' → logprob: -14.003660202026367
    9. '4' → logprob: -14.503660202026367
    10. '3' → logprob: -14.628660202026367

Token 127: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0403236486017704
    2. ' -' → logprob: -3.4153237342834473
    3. '<|end|>' → logprob: -5.165323734283447
    4. '
' → logprob: -7.540323734283447
    5. '0' → logprob: -8.915323257446289
    6. '<|end|>' → logprob: -9.290323257446289
    7. ' ' → logprob: -9.665323257446289
    8. ' 
' → logprob: -10.540323257446289
    9. '-
' → logprob: -11.290323257446289
    10. '#' → logprob: -11.415323257446289

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006189360748976469
    2. '2' → logprob: -5.131189346313477
    3. ' ' → logprob: -8.256189346313477
    4. '3' → logprob: -14.131189346313477
    5. '0' → logprob: -15.881189346313477
    6. '4' → logprob: -16.381189346313477
    7. '   ' → logprob: -16.756189346313477
    8. '6' → logprob: -17.256189346313477
    9. '  ' → logprob: -17.756189346313477
    10. '7' → logprob: -17.756189346313477

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008660420775413513
    2. '2' → logprob: -4.758660316467285
    3. ' ' → logprob: -10.008660316467285
    4. '3' → logprob: -14.633660316467285
    5. '4' → logprob: -16.1336612701416
    6. '0' → logprob: -16.1336612701416
    7. '   ' → logprob: -17.3836612701416
    8. '  ' → logprob: -17.3836612701416
    9. '```' → logprob: -17.3836612701416
    10. '-' → logprob: -18.0086612701416

Token 130: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16461347043514252
    2. '
' → logprob: -2.5396134853363037
    3. ' while' → logprob: -3.1646134853363037
    4. '<|end|>' → logprob: -3.5396134853363037
    5. 'w' → logprob: -8.664613723754883
    6. ')' → logprob: -8.664613723754883
    7. 'While' → logprob: -8.664613723754883
    8. '#' → logprob: -8.664613723754883
    9. ' 
' → logprob: -9.039613723754883
    10. '>' → logprob: -9.164613723754883

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20142298936843872
    2. ' i' → logprob: -1.701422929763794
    3. ' ' → logprob: -12.576422691345215
    4. '0' → logprob: -12.701422691345215
    5. '	i' → logprob: -13.576422691345215
    6. '   ' → logprob: -14.076422691345215
    7. '(i' → logprob: -14.701422691345215
    8. '  ' → logprob: -15.201422691345215
    9. 'True' → logprob: -16.20142364501953
    10. ' ' → logprob: -16.32642364501953

Token 133: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.005052660126239061
    2. ' >=' → logprob: -5.38005256652832
    3. '>' → logprob: -7.75505256652832
    4. ']>=' → logprob: -14.00505256652832
    5. '≥' → logprob: -14.13005256652832
    6. ' >' → logprob: -14.13005256652832
    7. ')>=' → logprob: -14.13005256652832
    8. '=' → logprob: -15.38005256652832
    9. ' ' → logprob: -16.00505256652832
    10. '0' → logprob: -16.25505256652832

Token 134: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889088988304138
    2. ' ' → logprob: -2.578890800476074
    3. '   ' → logprob: -14.703890800476074
    4. '1' → logprob: -15.078890800476074
    5. '
' → logprob: -15.953890800476074
    6. ' n' → logprob: -16.45389175415039
    7. '  ' → logprob: -17.07889175415039
    8. ' ' → logprob: -17.07889175415039
    9. 'n' → logprob: -17.39139175415039
    10. ' 
' → logprob: -17.57889175415039

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001179989194497466
    2. ':
' → logprob: -6.751180171966553
    3. ' :' → logprob: -11.876179695129395
    4. '):' → logprob: -13.501179695129395
    5. '   ' → logprob: -14.626179695129395
    6. '):
' → logprob: -15.126179695129395
    7. ' and' → logprob: -16.37618064880371
    8. ')' → logprob: -16.37618064880371
    9. '0' → logprob: -16.50118064880371
    10. ',' → logprob: -16.50118064880371

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6703276038169861
    2. ' t' → logprob: -1.2953276634216309
    3. 't' → logprob: -1.5453276634216309
    4. '	t' → logprob: -7.545327663421631
    5. '<|end|>' → logprob: -8.420327186584473
    6. ' ' → logprob: -8.420327186584473
    7. ' i' → logprob: -9.545327186584473
    8. '    
' → logprob: -9.670327186584473
    9. 'i' → logprob: -10.045327186584473
    10. ' 
' → logprob: -10.170327186584473

Token 137: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.10395649820566177
    2. ' t' → logprob: -2.353956460952759
    3. '   ' → logprob: -5.603956699371338
    4. '	t' → logprob: -10.35395622253418
    5. ' ' → logprob: -10.97895622253418
    6. '<|end|>' → logprob: -13.10395622253418
    7. 's' → logprob: -13.47895622253418
    8. '       ' → logprob: -13.60395622253418
    9. '`t' → logprob: -13.85395622253418
    10. '  ' → logprob: -13.85395622253418

Token 138: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11348147690296173
    2. ' +=' → logprob: -2.2384815216064453
    3. '+' → logprob: -7.738481521606445
    4. '=' → logprob: -8.738481521606445
    5. '+='' → logprob: -10.613481521606445
    6. ' +' → logprob: -11.113481521606445
    7. '[' → logprob: -11.613481521606445
    8. '+="' → logprob: -11.988481521606445
    9. '   ' → logprob: -12.613481521606445
    10. ']+=' → logprob: -13.488481521606445

Token 139: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013692846987396479
    2. ' s' → logprob: -6.626369476318359
    3. 'hash' → logprob: -11.12636947631836
    4. ' ' → logprob: -12.12636947631836
    5. 't' → logprob: -12.50136947631836
    6. 'blue' → logprob: -12.62636947631836
    7. ''s' → logprob: -13.00136947631836
    8. 'red' → logprob: -13.12636947631836
    9. '"s' → logprob: -13.12636947631836
    10. 'b' → logprob: -13.37636947631836

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00034392563975416124
    2. '[' → logprob: -8.125344276428223
    3. 'i' → logprob: -10.625344276428223
    4. '[
' → logprob: -11.125344276428223
    5. '[n' → logprob: -11.750344276428223
    6. ' i' → logprob: -15.875344276428223
    7. '(i' → logprob: -16.125343322753906
    8. ' [' → logprob: -16.125343322753906
    9. '[int' → logprob: -16.375343322753906
    10. '[(' → logprob: -16.750343322753906

Token 141: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009747825562953949
    2. ')' → logprob: -4.7597479820251465
    3. '])' → logprob: -7.7597479820251465
    4. ')]' → logprob: -7.7597479820251465
    5. ' ]' → logprob: -8.634747505187988
    6. ']
' → logprob: -9.509747505187988
    7. '   ' → logprob: -11.509747505187988
    8. ' )' → logprob: -12.259747505187988
    9. '}' → logprob: -12.634747505187988
    10. ' ' → logprob: -12.759747505187988

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004766291938722134
    2. 'i' → logprob: -5.629766464233398
    3. '
' → logprob: -7.254766464233398
    4. ' i' → logprob: -8.629766464233398
    5. '    
' → logprob: -9.004766464233398
    6. '[i' → logprob: -9.879766464233398
    7. '	i' → logprob: -10.504766464233398
    8. '<|end|>' → logprob: -10.629766464233398
    9. '       ' → logprob: -11.129766464233398
    10. '```' → logprob: -11.254766464233398

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.008650264702737331
    2. ' i' → logprob: -5.008650302886963
    3. '   ' → logprob: -6.258650302886963
    4. ' ' → logprob: -11.508649826049805
    5. '  ' → logprob: -12.383649826049805
    6. '	i' → logprob: -13.008649826049805
    7. '[i' → logprob: -13.883649826049805
    8. '
' → logprob: -15.008649826049805
    9. '    
' → logprob: -15.133649826049805
    10. '\' → logprob: -15.258649826049805

Token 144: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07696069777011871
    2. ' -=' → logprob: -3.076960802078247
    3. '-' → logprob: -3.576960802078247
    4. '   ' → logprob: -12.326960563659668
    5. '+=' → logprob: -12.701960563659668
    6. ' -' → logprob: -12.701960563659668
    7. '=' → logprob: -13.326960563659668
    8. ' ' → logprob: -14.201960563659668
    9. '```' → logprob: -15.076960563659668
    10. '    ' → logprob: -15.201960563659668

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -18.750009536743164
    4. '   ' → logprob: -19.562509536743164
    5. '<|end|>' → logprob: -20.375009536743164
    6. '2' → logprob: -20.375009536743164
    7. '１' → logprob: -20.625009536743164
    8. ' ' → logprob: -20.687509536743164
    9. '  ' → logprob: -21.375009536743164
    10. '
' → logprob: -21.500009536743164

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -19.3750057220459
    4. '```' → logprob: -19.6250057220459
    5. '   ' → logprob: -19.8750057220459
    6. '１' → logprob: -20.4375057220459
    7. '۱' → logprob: -21.1250057220459
    8. '
' → logprob: -21.3125057220459
    9. '  ' → logprob: -21.4375057220459
    10. '2' → logprob: -21.5625057220459

Token 147: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: 'cnt' (ID: 33160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2262752652168274
    2. '=' → logprob: -1.6012752056121826
    3. 's' → logprob: -7.851275444030762
    4. '[' → logprob: -8.476275444030762
    5. ' ' → logprob: -9.351275444030762
    6. '_' → logprob: -9.601275444030762
    7. ')' → logprob: -10.226275444030762
    8. 't' → logprob: -10.851275444030762
    9. ']' → logprob: -11.351275444030762
    10. '   ' → logprob: -11.726275444030762

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01892894133925438
    2. ' ' → logprob: -4.0189290046691895
    3. 'hash' → logprob: -7.5189290046691895
    4. ' hash' → logprob: -9.143928527832031
    5. '{}' → logprob: -9.143928527832031
    6. '{' → logprob: -11.643928527832031
    7. ' {}' → logprob: -12.143928527832031
    8. '{}
' → logprob: -13.393928527832031
    9. '(hash' → logprob: -14.018928527832031
    10. 'sum' → logprob: -14.018928527832031

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20828692615032196
    2. 'hash' → logprob: -1.7082868814468384
    3. '{}' → logprob: -5.083286762237549
    4. '{' → logprob: -7.958286762237549
    5. ' ' → logprob: -9.833287239074707
    6. ' hash' → logprob: -9.958287239074707
    7. 'sum' → logprob: -9.958287239074707
    8. '(hash' → logprob: -10.083287239074707
    9. 'len' → logprob: -10.458287239074707
    10. '{}
' → logprob: -10.833287239074707

Token 152: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0384687185287476
    2. 'i' → logprob: -1.1634687185287476
    3. 'while' → logprob: -1.4134687185287476
    4. 'bit' → logprob: -2.538468837738037
    5. '
' → logprob: -4.913468837738037
    6. ' for' → logprob: -6.413468837738037
    7. ' while' → logprob: -7.288468837738037
    8. ' bit' → logprob: -7.663468837738037
    9. 't' → logprob: -7.788468837738037
    10. ' i' → logprob: -7.913468837738037

Token 153: 'bit' (ID: 6516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19999249279499054
    2. 'while' → logprob: -2.0749924182891846
    3. 'i' → logprob: -3.3249924182891846
    4. 'bit' → logprob: -3.9499924182891846
    5. ' for' → logprob: -8.074992179870605
    6. ' while' → logprob: -9.949992179870605
    7. 'key' → logprob: -10.324992179870605
    8. 't' → logprob: -11.199992179870605
    9. ')' → logprob: -11.324992179870605
    10. ' bit' → logprob: -11.449992179870605

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13833113014698029
    2. '=' → logprob: -2.388331174850464
    3. ' ' → logprob: -4.138330936431885
    4. ' +=' → logprob: -4.138330936431885
    5. ' <' → logprob: -6.263330936431885
    6. ' <<=' → logprob: -7.013330936431885
    7. '+=' → logprob: -7.388330936431885
    8. '<|end|>' → logprob: -7.763330936431885
    9. ')' → logprob: -8.138331413269043
    10. '+' → logprob: -8.638331413269043

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287182688713074
    2. ' ' → logprob: -1.0537183284759521
    3. '(' → logprob: -11.678718566894531
    4. ' n' → logprob: -12.678718566894531
    5. ' (' → logprob: -12.803718566894531
    6. 'n' → logprob: -13.428718566894531
    7. '1' → logprob: -14.178718566894531
    8. ' bit' → logprob: -15.303718566894531
    9. '```' → logprob: -15.678718566894531
    10. 't' → logprob: -16.05371856689453

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.297462171758525e-05
    2. '(' → logprob: -10.750033378601074
    3. '1' → logprob: -12.250033378601074
    4. ' ' → logprob: -12.250033378601074
    5. 'n' → logprob: -13.500033378601074
    6. '000' → logprob: -15.750033378601074
    7. 't' → logprob: -16.375032424926758
    8. '```' → logprob: -16.500032424926758
    9. ' (' → logprob: -17.250032424926758
    10. '00' → logprob: -17.250032424926758

Token 157: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010570211336016655
    2. ' while' → logprob: -4.635570049285889
    3. '<|end|>' → logprob: -7.260570049285889
    4. '
' → logprob: -9.885570526123047
    5. '	while' → logprob: -11.010570526123047
    6. ' 
' → logprob: -11.010570526123047
    7. 'w' → logprob: -11.760570526123047
    8. 'While' → logprob: -12.260570526123047
    9. ')' → logprob: -12.260570526123047
    10. '  
' → logprob: -13.260570526123047

Token 159: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.0619816891849041
    2. 'bit' → logprob: -2.811981678009033
    3. '(bit' → logprob: -11.186982154846191
    4. ' ' → logprob: -16.436981201171875
    5. ' бит' → logprob: -16.936981201171875
    6. 'b' → logprob: -17.686981201171875
    7. 'Bit' → logprob: -18.186981201171875
    8. 'bitr' → logprob: -18.311981201171875
    9. '.bit' → logprob: -18.686981201171875
    10. '_bit' → logprob: -19.186981201171875

Token 160: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05489199236035347
    2. '<' → logprob: -2.929892063140869
    3. ' ' → logprob: -12.804891586303711
    4. '<n' → logprob: -12.804891586303711
    5. ' <=' → logprob: -13.679891586303711
    6. '(' → logprob: -13.929891586303711
    7. ' <
' → logprob: -14.304891586303711
    8. '[' → logprob: -15.054891586303711
    9. '<int' → logprob: -16.17989158630371
    10. '   ' → logprob: -16.17989158630371

Token 161: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029750952497124672
    2. ' (' → logprob: -3.5297510623931885
    3. '1' → logprob: -14.65475082397461
    4. '((' → logprob: -17.15475082397461
    5. ' ' → logprob: -17.40475082397461
    6. 'n' → logprob: -18.02975082397461
    7. '   ' → logprob: -19.02975082397461
    8. '(
' → logprob: -19.15475082397461
    9. '(n' → logprob: -19.65475082397461
    10. '```' → logprob: -20.02975082397461

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25198894739151
    2. '(' → logprob: -1.5019888877868652
    3. ' (' → logprob: -10.376989364624023
    4. ' ' → logprob: -10.501989364624023
    5. '   ' → logprob: -14.001989364624023
    6. ')' → logprob: -16.126989364624023
    7. '```' → logprob: -16.501989364624023
    8. ')(' → logprob: -16.751989364624023
    9. '(n' → logprob: -17.126989364624023
    10. 'n' → logprob: -17.376989364624023

Token 163: ' <<' (ID: 2256)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32095855474472046
    2. ' n' → logprob: -1.8209586143493652
    3. '<<' → logprob: -3.0709586143493652
    4. '<n' → logprob: -3.4459586143493652
    5. ' <<' → logprob: -4.195958614349365
    6. '(n' → logprob: -5.070958614349365
    7. ' (' → logprob: -5.570958614349365
    8. '(' → logprob: -6.070958614349365
    9. ' <' → logprob: -6.570958614349365
    10. '   ' → logprob: -6.695958614349365

Token 164: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008626751601696014
    2. ' n' → logprob: -4.758626937866211
    3. '(n' → logprob: -11.508626937866211
    4. '   ' → logprob: -14.133626937866211
    5. ' ' → logprob: -14.508626937866211
    6. '	n' → logprob: -15.258626937866211
    7. ' (' → logprob: -15.508626937866211
    8. ')n' → logprob: -15.883626937866211
    9. '```' → logprob: -16.13362693786621
    10. 't' → logprob: -16.25862693786621

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5762577056884766
    2. '):
' → logprob: -0.8262577056884766
    3. '):
' → logprob: -8.326257705688477
    4. ')' → logprob: -10.451257705688477
    5. '):

' → logprob: -10.576257705688477
    6. ' ):' → logprob: -12.076257705688477
    7. '   ' → logprob: -12.451257705688477
    8. ':' → logprob: -12.576257705688477
    9. 'n' → logprob: -12.701257705688477
    10. ' ):
' → logprob: -12.826257705688477

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005717403837479651
    2. '
' → logprob: -8.875572204589844
    3. '       ' → logprob: -9.250572204589844
    4. ' ' → logprob: -9.250572204589844
    5. '<|end|>' → logprob: -9.875572204589844
    6. '  ' → logprob: -10.000572204589844
    7. '```' → logprob: -10.625572204589844
    8. '    ' → logprob: -10.875572204589844
    9. '	if' → logprob: -11.375572204589844
    10. ':' → logprob: -11.375572204589844

Token 167: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.1943577378988266
    2. '   ' → logprob: -1.8193577527999878
    3. 'r' → logprob: -4.819357872009277
    4. 'i' → logprob: -5.694357872009277
    5. 'blue' → logprob: -6.819357872009277
    6. ' red' → logprob: -7.069357872009277
    7. '       ' → logprob: -8.194357872009277
    8. 'j' → logprob: -8.569357872009277
    9. 'key' → logprob: -8.694357872009277
    10. 'b' → logprob: -8.819357872009277

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01833406835794449
    2. '=' → logprob: -4.018333911895752
    3. 's' → logprob: -9.89333438873291
    4. ' ' → logprob: -10.26833438873291
    5. '<|end|>' → logprob: -10.39333438873291
    6. ',' → logprob: -10.89333438873291
    7. '=""' → logprob: -11.14333438873291
    8. '2' → logprob: -11.51833438873291
    9. '<|end|>' → logprob: -12.01833438873291
    10. '  ' → logprob: -12.76833438873291

Token 169: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0012245126999914646
    2. '"' → logprob: -6.751224517822266
    3. ' ""' → logprob: -10.126224517822266
    4. 't' → logprob: -11.751224517822266
    5. '''' → logprob: -12.001224517822266
    6. '"""' → logprob: -16.126224517822266
    7. ' ""
' → logprob: -16.876224517822266
    8. ''' → logprob: -17.251224517822266
    9. '("")' → logprob: -17.251224517822266
    10. ' ' → logprob: -17.376224517822266

Token 170: '   ' (ID: 271)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.640967607498169
    2. '   ' → logprob: -0.765967607498169
    3. ' blue' → logprob: -5.01596736907959
    4. '<|end|>' → logprob: -7.01596736907959
    5. ' ' → logprob: -8.26596736907959
    6. '  ' → logprob: -8.89096736907959
    7. '       ' → logprob: -9.39096736907959
    8. 'red' → logprob: -9.39096736907959
    9. 'b' → logprob: -9.64096736907959
    10. '_blue' → logprob: -10.26596736907959

Token 171: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.0036984162870794535
    2. ' blue' → logprob: -5.628698348999023
    3. '   ' → logprob: -10.003698348999023
    4. 'i' → logprob: -10.128698348999023
    5. 'for' → logprob: -12.503698348999023
    6. ' ' → logprob: -12.878698348999023
    7. 'b' → logprob: -13.253698348999023
    8. 'red' → logprob: -13.503698348999023
    9. '_blue' → logprob: -14.128698348999023
    10. ' i' → logprob: -14.628698348999023

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22566674649715424
    2. ' =' → logprob: -1.6006667613983154
    3. '"' → logprob: -8.975666999816895
    4. '   ' → logprob: -9.850666999816895
    5. '<|end|>' → logprob: -10.850666999816895
    6. ' ' → logprob: -11.350666999816895
    7. '=
' → logprob: -11.600666999816895
    8. ')' → logprob: -11.600666999816895
    9. '=""' → logprob: -12.475666999816895
    10. ' +=' → logprob: -12.850666999816895

Token 173: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.004098585341125727
    2. '"' → logprob: -5.504098415374756
    3. 't' → logprob: -11.504098892211914
    4. ' ""' → logprob: -12.504098892211914
    5. 's' → logprob: -12.754098892211914
    6. '''' → logprob: -12.879098892211914
    7. '"s' → logprob: -14.629098892211914
    8. '"""' → logprob: -15.754098892211914
    9. '[]' → logprob: -16.129098892211914
    10. '("")' → logprob: -16.504098892211914

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03604702651500702
    2. '<|end|>' → logprob: -3.7860469818115234
    3. '
' → logprob: -5.161046981811523
    4. '    
' → logprob: -5.536046981811523
    5. ' 
' → logprob: -6.911046981811523
    6. '  ' → logprob: -7.661046981811523
    7. '    ' → logprob: -8.286046981811523
    8. '  
' → logprob: -8.411046981811523
    9. '<|end|>' → logprob: -8.536046981811523
    10. 'i' → logprob: -8.786046981811523

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2185942530632019
    2. '   ' → logprob: -1.7185943126678467
    3. ' i' → logprob: -4.093594074249268
    4. '       ' → logprob: -8.343594551086426
    5. ' ' → logprob: -10.218594551086426
    6. '	i' → logprob: -10.343594551086426
    7. '  ' → logprob: -10.843594551086426
    8. '0' → logprob: -11.593594551086426
    9. '    ' → logprob: -11.718594551086426
    10. '    
' → logprob: -13.218594551086426

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233932733535767
    2. ' =' → logprob: -0.8983932733535767
    3. ' ' → logprob: -9.148393630981445
    4. 'n' → logprob: -9.523393630981445
    5. '0' → logprob: -9.898393630981445
    6. ' n' → logprob: -10.898393630981445
    7. '<' → logprob: -11.648393630981445
    8. ' <' → logprob: -12.148393630981445
    9. '<n' → logprob: -12.648393630981445
    10. '=n' → logprob: -14.023393630981445

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008644821122288704
    2. ' ' → logprob: -4.758645057678223
    3. 'n' → logprob: -10.633645057678223
    4. ' n' → logprob: -12.633645057678223
    5. '   ' → logprob: -13.696145057678223
    6. '1' → logprob: -15.133645057678223
    7. '(' → logprob: -15.446145057678223
    8. '(n' → logprob: -15.508645057678223
    9. '  ' → logprob: -16.008644104003906
    10. ' ' → logprob: -16.258644104003906

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0061048781499266624
    2. ' ' → logprob: -5.131104946136475
    3. 'n' → logprob: -8.756104469299316
    4. ' n' → logprob: -11.381104469299316
    5. '   ' → logprob: -12.631104469299316
    6. '1' → logprob: -13.943604469299316
    7. 'bit' → logprob: -14.506104469299316
    8. '(' → logprob: -14.568604469299316
    9. '(n' → logprob: -14.818604469299316
    10. '  ' → logprob: -15.131104469299316

Token 179: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00991037767380476
    2. '<|end|>' → logprob: -5.134910583496094
    3. '
' → logprob: -6.259910583496094
    4. '    
' → logprob: -6.509910583496094
    5. '<|end|>' → logprob: -8.884910583496094
    6. ' while' → logprob: -8.884910583496094
    7. '       ' → logprob: -9.759910583496094
    8. '	while' → logprob: -9.759910583496094
    9. 'while' → logprob: -10.009910583496094
    10. ' 
' → logprob: -10.884910583496094

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006013406440615654
    2. ' while' → logprob: -5.6310133934021
    3. 'while' → logprob: -6.1310133934021
    4. '
' → logprob: -8.881013870239258
    5. '<|end|>' → logprob: -10.506013870239258
    6. '	while' → logprob: -11.006013870239258
    7. '    
' → logprob: -11.131013870239258
    8. '       ' → logprob: -11.256013870239258
    9. ' ' → logprob: -11.631013870239258
    10. '```' → logprob: -11.881013870239258

Token 181: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.008200944401323795
    2. 'i' → logprob: -5.2582011222839355
    3. ' while' → logprob: -5.8832011222839355
    4. '   ' → logprob: -8.883200645446777
    5. ' i' → logprob: -10.633200645446777
    6. 'if' → logprob: -12.258200645446777
    7. ' ' → logprob: -12.633200645446777
    8. '```' → logprob: -13.133200645446777
    9. '	while' → logprob: -13.633200645446777
    10. '(i' → logprob: -14.008200645446777

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015023599844425917
    2. ' i' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.001502990722656
    4. '	i' → logprob: -18.376502990722656
    5. ' ' → logprob: -19.001502990722656
    6. '  ' → logprob: -21.376502990722656
    7. '(i' → logprob: -21.376502990722656
    8. '```' → logprob: -22.501502990722656
    9. ' ' → logprob: -22.751502990722656
    10. '{i' → logprob: -22.876502990722656

Token 183: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11303632706403732
    2. ' <' → logprob: -2.3630363941192627
    3. '<n' → logprob: -4.363036155700684
    4. 'n' → logprob: -12.113036155700684
    5. '<N' → logprob: -13.863036155700684
    6. '<len' → logprob: -14.863036155700684
    7. '<num' → logprob: -14.988036155700684
    8. '<int' → logprob: -15.238036155700684
    9. '<size' → logprob: -15.363036155700684
    10. ' ' → logprob: -15.613036155700684

Token 184: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004315036640036851
    2. ' n' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.625431060791016
    4. '	n' → logprob: -15.500431060791016
    5. ' ' → logprob: -15.625431060791016
    6. '_n' → logprob: -18.250431060791016
    7. '<n' → logprob: -18.375431060791016
    8. '  ' → logprob: -18.500431060791016
    9. '(n' → logprob: -18.875431060791016
    10. '
' → logprob: -19.875431060791016

Token 185: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14402936398983002
    2. ':' → logprob: -2.019029378890991
    3. '       ' → logprob: -7.019029140472412
    4. '   ' → logprob: -7.894029140472412
    5. '):
' → logprob: -9.64402961730957
    6. ':

' → logprob: -12.14402961730957
    7. '```' → logprob: -12.39402961730957
    8. ' :
' → logprob: -12.51902961730957
    9. '():
' → logprob: -12.89402961730957
    10. ':
' → logprob: -14.01902961730957

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12876904010772705
    2. ' if' → logprob: -2.5037689208984375
    3. 'if' → logprob: -3.2537689208984375
    4. '   ' → logprob: -7.8787689208984375
    5. '
' → logprob: -10.753768920898438
    6. '```' → logprob: -12.378768920898438
    7. '	if' → logprob: -12.503768920898438
    8. ' ' → logprob: -13.128768920898438
    9. '     ' → logprob: -13.503768920898438
    10. '      ' → logprob: -13.753768920898438

Token 187: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20209349691867828
    2. ' if' → logprob: -1.952093482017517
    3. '       ' → logprob: -3.2020936012268066
    4. '   ' → logprob: -8.077093124389648
    5. '           ' → logprob: -12.327093124389648
    6. '
' → logprob: -12.452093124389648
    7. '```' → logprob: -12.577093124389648
    8. ' ' → logprob: -12.702093124389648
    9. '     ' → logprob: -13.952093124389648
    10. '	if' → logprob: -14.702093124389648

Token 188: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10023525357246399
    2. '(bit' → logprob: -2.3502352237701416
    3. ' bit' → logprob: -10.850234985351562
    4. ' ' → logprob: -12.850234985351562
    5. 'bit' → logprob: -13.225234985351562
    6. '   ' → logprob: -13.350234985351562
    7. '(' → logprob: -13.350234985351562
    8. '  ' → logprob: -14.725234985351562
    9. '(bits' → logprob: -14.850234985351562
    10. '(Bit' → logprob: -15.225234985351562

Token 189: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2617182731628418
    2. '(bit' → logprob: -1.5117182731628418
    3. ' bit' → logprob: -4.636718273162842
    4. ' (' → logprob: -10.13671875
    5. '   ' → logprob: -12.51171875
    6. '(b' → logprob: -13.38671875
    7. ' бит' → logprob: -13.63671875
    8. '.bit' → logprob: -13.63671875
    9. '(' → logprob: -14.26171875
    10. 'bitr' → logprob: -14.38671875

Token 190: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.0002613358374219388
    2. '&' → logprob: -8.250261306762695
    3. ' ' → logprob: -17.625261306762695
    4. ' ' → logprob: -18.000261306762695
    5. ' &
' → logprob: -20.125261306762695
    6. '&nbsp' → logprob: -20.250261306762695
    7. ' bit' → logprob: -20.375261306762695
    8. '＆' → logprob: -20.750261306762695
    9. '&i' → logprob: -21.125261306762695
    10. '&amp' → logprob: -21.375261306762695

Token 191: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16022422909736633
    2. '(' → logprob: -1.910224199295044
    3. ' ' → logprob: -18.16022491455078
    4. '1' → logprob: -18.78522491455078
    5. '<|end|>' → logprob: -18.78522491455078
    6. ' ' → logprob: -19.53522491455078
    7. '   ' → logprob: -19.53522491455078
    8. ')' → logprob: -20.16022491455078
    9. '```' → logprob: -20.41022491455078
    10. '((' → logprob: -20.91022491455078

Token 192: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01827121526002884
    2. ' (' → logprob: -4.018271446228027
    3. '1' → logprob: -9.018271446228027
    4. ' ' → logprob: -16.39327049255371
    5. ')' → logprob: -16.76827049255371
    6. '   ' → logprob: -17.89327049255371
    7. '```' → logprob: -19.64327049255371
    8. '0' → logprob: -19.89327049255371
    9. '(i' → logprob: -20.01827049255371
    10. ')(' → logprob: -20.39327049255371

Token 193: ' <<' (ID: 2256)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9648823142051697
    2. ' <<' → logprob: -0.9648823142051697
    3. '<<' → logprob: -1.7148823738098145
    4. '(' → logprob: -3.3398823738098145
    5. '1' → logprob: -4.4648823738098145
    6. ')' → logprob: -5.2148823738098145
    7. ' ' → logprob: -5.8398823738098145
    8. '0' → logprob: -6.7148823738098145
    9. '```' → logprob: -7.5898823738098145
    10. '(i' → logprob: -8.339881896972656

Token 194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00462841521948576
    2. ' i' → logprob: -5.3796281814575195
    3. '   ' → logprob: -12.25462818145752
    4. ' ' → logprob: -13.37962818145752
    5. ')i' → logprob: -15.00462818145752
    6. '(i' → logprob: -15.12962818145752
    7. '	i' → logprob: -15.12962818145752
    8. ')' → logprob: -15.37962818145752
    9. '(' → logprob: -15.37962818145752
    10. ' (' → logprob: -15.50462818145752

Token 195: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')>' → logprob: -12.125009536743164
    3. ' )' → logprob: -12.375009536743164
    4. '):
' → logprob: -16.375009536743164
    5. '):' → logprob: -16.625009536743164
    6. '>' → logprob: -16.750009536743164
    7. '")' → logprob: -18.125009536743164
    8. '):

' → logprob: -18.625009536743164
    9. '))' → logprob: -18.750009536743164
    10. '`)' → logprob: -19.000009536743164

Token 196: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759555101394653
    2. '>' → logprob: -0.8259555101394653
    3. ' ' → logprob: -11.825955390930176
    4. ')' → logprob: -11.950955390930176
    5. ')>' → logprob: -13.825955390930176
    6. '   ' → logprob: -14.450955390930176
    7. ':' → logprob: -15.200955390930176
    8. '0' → logprob: -15.700955390930176
    9. ' bit' → logprob: -15.825955390930176
    10. '1' → logprob: -16.825956344604492

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048528365790844
    2. ' ' → logprob: -4.511048316955566
    3. '=' → logprob: -15.261048316955566
    4. '   ' → logprob: -15.386048316955566
    5. '```' → logprob: -17.198549270629883
    6. '<|end|>' → logprob: -17.198549270629883
    7. '1' → logprob: -17.261049270629883
    8. ' ' → logprob: -17.573549270629883
    9. '  ' → logprob: -17.761049270629883
    10. 'i' → logprob: -17.823549270629883

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015030752401798964
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.001502990722656
    4. '  ' → logprob: -16.501502990722656
    5. 'i' → logprob: -16.626502990722656
    6. '=' → logprob: -16.751502990722656
    7. '1' → logprob: -16.876502990722656
    8. '```' → logprob: -17.126502990722656
    9. '<|end|>' → logprob: -17.751502990722656
    10. '     ' → logprob: -17.876502990722656

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3217321038246155
    2. ':
' → logprob: -1.3217320442199707
    3. '):
' → logprob: -5.946732044219971
    4. '       ' → logprob: -6.321732044219971
    5. '           ' → logprob: -6.446732044219971
    6. ' red' → logprob: -6.946732044219971
    7. '   ' → logprob: -7.071732044219971
    8. '):' → logprob: -8.321732521057129
    9. 'red' → logprob: -8.696732521057129
    10. ':red' → logprob: -9.321732521057129

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6458737850189209
    2. 'red' → logprob: -1.395873785018921
    3. ' red' → logprob: -1.770873785018921
    4. '       ' → logprob: -3.020873785018921
    5. 't' → logprob: -5.2708740234375
    6. ' blue' → logprob: -6.5208740234375
    7. ' ' → logprob: -6.7708740234375
    8. '   ' → logprob: -7.7708740234375
    9. 'blue' → logprob: -8.0208740234375
    10. ' t' → logprob: -8.7708740234375

Token 201: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.9239640831947327
    2. ' red' → logprob: -1.173964023590088
    3. 't' → logprob: -1.298964023590088
    4. ' t' → logprob: -4.298964023590088
    5. '   ' → logprob: -5.548964023590088
    6. ' ' → logprob: -6.673964023590088
    7. ' blue' → logprob: -6.923964023590088
    8. 'r' → logprob: -7.548964023590088
    9. 'blue' → logprob: -7.923964023590088
    10. '  ' → logprob: -8.173964500427246

Token 202: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04568370059132576
    2. '+=' → logprob: -3.1706836223602295
    3. '+' → logprob: -6.545683860778809
    4. ' +' → logprob: -6.795683860778809
    5. '<|end|>' → logprob: -9.920683860778809
    6. ']+=' → logprob: -11.170683860778809
    7. '+='' → logprob: -11.170683860778809
    8. '+="' → logprob: -11.295683860778809
    9. 's' → logprob: -11.545683860778809
    10. ' ' → logprob: -11.545683860778809

Token 203: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03814798593521118
    2. ' t' → logprob: -3.2881479263305664
    3. 's' → logprob: -9.663147926330566
    4. ' s' → logprob: -10.413147926330566
    5. ' ' → logprob: -11.413147926330566
    6. '	t' → logprob: -14.038147926330566
    7. '   ' → logprob: -15.288147926330566
    8. 'b' → logprob: -15.788147926330566
    9. '  ' → logprob: -16.038148880004883
    10. ' ' → logprob: -16.163148880004883

Token 204: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7120533811976202e-05
    2. '[n' → logprob: -11.750017166137695
    3. '[s' → logprob: -12.250017166137695
    4. '[' → logprob: -12.625017166137695
    5. 'i' → logprob: -13.875017166137695
    6. 's' → logprob: -16.750017166137695
    7. '[j' → logprob: -17.125017166137695
    8. ' [' → logprob: -17.625017166137695
    9. '[t' → logprob: -18.125017166137695
    10. '[k' → logprob: -18.250017166137695

Token 205: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.386954665184021
    2. ']
' → logprob: -1.136954665184021
    3. '       ' → logprob: -9.636954307556152
    4. ']

' → logprob: -11.636954307556152
    5. ' ]' → logprob: -12.511954307556152
    6. ']
' → logprob: -13.011954307556152
    7. ' ]
' → logprob: -13.136954307556152
    8. '   ' → logprob: -13.886954307556152
    9. ' ' → logprob: -16.38695526123047
    10. ')' → logprob: -16.38695526123047

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010356683051213622
    2. 'else' → logprob: -7.126035690307617
    3. ' else' → logprob: -8.376035690307617
    4. '<|end|>' → logprob: -14.751035690307617
    5. ')' → logprob: -16.126035690307617
    6. '   ' → logprob: -16.376035690307617
    7. '```' → logprob: -16.751035690307617
    8. '      ' → logprob: -16.751035690307617
    9. '​' → logprob: -17.001035690307617
    10. '
' → logprob: -17.251035690307617

Token 207: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45603010058403015
    2. 'else' (adapté à ' else') → logprob: -1.2060301303863525
    3. ' else' → logprob: -2.7060301303863525
    4. '	else' → logprob: -11.831029891967773
    5. '<|end|>' → logprob: -12.456029891967773
    6. '   ' → logprob: -12.706029891967773
    7. ' ' → logprob: -13.581029891967773
    8. ')' → logprob: -14.206029891967773
    9. 'elif' → logprob: -14.331029891967773
    10. '}else' → logprob: -14.831029891967773

Token 208: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2841154932975769
    2. ':' → logprob: -1.7841155529022217
    3. ':
' → logprob: -2.5341155529022217
    4. '          ' → logprob: -11.0341157913208
    5. '```' → logprob: -12.1591157913208
    6. '       ' → logprob: -12.7841157913208
    7. '{
' → logprob: -13.1591157913208
    8. ':

' → logprob: -13.1591157913208
    9. '   ' → logprob: -13.5341157913208
    10. '<|end|>' → logprob: -13.5341157913208

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02641582302749157
    2. 'blue' → logprob: -3.7764158248901367
    3. ' blue' → logprob: -5.776415824890137
    4. ' ' → logprob: -10.776415824890137
    5. '          ' → logprob: -10.901415824890137
    6. '   ' → logprob: -12.151415824890137
    7. '       ' → logprob: -12.151415824890137
    8. '         ' → logprob: -12.401415824890137
    9. '_blue' → logprob: -13.026415824890137
    10. '               ' → logprob: -13.276415824890137

Token 210: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.3868723213672638
    2. ' blue' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.511872291564941
    4. '_blue' → logprob: -15.261872291564941
    5. '```' → logprob: -16.011873245239258
    6. '.blue' → logprob: -16.261873245239258
    7. '           ' → logprob: -16.386873245239258
    8. ' bleu' → logprob: -16.636873245239258
    9. 'Blue' → logprob: -16.886873245239258
    10. ' ' → logprob: -16.886873245239258

Token 211: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20147356390953064
    2. '+=' → logprob: -1.701473593711853
    3. '+' → logprob: -10.576473236083984
    4. ']+=' → logprob: -10.826473236083984
    5. '[' → logprob: -12.451473236083984
    6. ' +' → logprob: -12.826473236083984
    7. '+='' → logprob: -13.451473236083984
    8. '+="' → logprob: -13.451473236083984
    9. '          ' → logprob: -13.701473236083984
    10. ' ' → logprob: -13.826473236083984

Token 212: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06198056787252426
    2. ' t' → logprob: -2.8119804859161377
    3. 's' → logprob: -11.436980247497559
    4. '	t' → logprob: -13.686980247497559
    5. ' ' → logprob: -15.186980247497559
    6. ' s' → logprob: -15.311980247497559
    7. '`t' → logprob: -16.061981201171875
    8. '(t' → logprob: -16.186981201171875
    9. ')t' → logprob: -16.436981201171875
    10. ' т' → logprob: -17.186981201171875

Token 213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.215330409351736e-05
    2. '[' → logprob: -10.250041961669922
    3. '```' → logprob: -13.375041961669922
    4. 'i' → logprob: -13.500041961669922
    5. '(i' → logprob: -13.625041961669922
    6. ' [' → logprob: -13.750041961669922
    7. '[n' → logprob: -14.000041961669922
    8. '[
' → logprob: -15.750041961669922
    9. '`' → logprob: -16.625041961669922
    10. '[k' → logprob: -16.750041961669922

Token 214: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011013046838343143
    2. ']' → logprob: -5.011013031005859
    3. ')' → logprob: -5.886013031005859
    4. '   ' → logprob: -7.511013031005859
    5. ']
' → logprob: -7.761013031005859
    6. '<|end|>' → logprob: -8.76101303100586
    7. ')
' → logprob: -9.38601303100586
    8. '}' → logprob: -9.88601303100586
    9. ':
' → logprob: -10.01101303100586
    10. '#' → logprob: -10.01101303100586

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025068165268749
    2. '   ' → logprob: -6.627506732940674
    3. 'i' → logprob: -7.002506732940674
    4. ' i' → logprob: -9.002507209777832
    5. '
' → logprob: -9.127507209777832
    6. ' ' → logprob: -10.877507209777832
    7. '<|end|>' → logprob: -12.252507209777832
    8. '           ' → logprob: -12.877507209777832
    9. '```' → logprob: -12.877507209777832
    10. '	' → logprob: -13.377507209777832

Token 216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6980000138282776
    2. ' i' → logprob: -0.6980000138282776
    3. '   ' → logprob: -5.447999954223633
    4. '       ' → logprob: -7.697999954223633
    5. ' ' → logprob: -9.822999954223633
    6. '  ' → logprob: -11.947999954223633
    7. '           ' → logprob: -11.947999954223633
    8. '    ' → logprob: -12.322999954223633
    9. '	i' → logprob: -12.322999954223633
    10. '
' → logprob: -13.322999954223633

Token 217: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03805491328239441
    2. '+=' → logprob: -3.288054943084717
    3. ' ' → logprob: -12.288054466247559
    4. '    ' → logprob: -12.538054466247559
    5. '   ' → logprob: -12.538054466247559
    6. '=' → logprob: -14.038054466247559
    7. '  ' → logprob: -15.413054466247559
    8. ']+=' → logprob: -15.788054466247559
    9. '+' → logprob: -16.038055419921875
    10. ' =' → logprob: -16.288055419921875

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488296225667
    2. ' ' → logprob: -2.9298830032348633
    3. '```' → logprob: -14.929883003234863
    4. '   ' → logprob: -15.804883003234863
    5. ' ' → logprob: -17.117382049560547
    6. '0' → logprob: -17.179882049560547
    7. '<|end|>' → logprob: -17.429882049560547
    8. '	' → logprob: -17.992382049560547
    9. '１' → logprob: -18.304882049560547
    10. '۱' → logprob: -18.492382049560547

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -18.000059127807617
    4. '   ' → logprob: -19.937559127807617
    5. '１' → logprob: -20.062559127807617
    6. '۱' → logprob: -20.625059127807617
    7. '0' → logprob: -20.687559127807617
    8. '<|end|>' → logprob: -21.000059127807617
    9. '
' → logprob: -21.375059127807617
    10. '  ' → logprob: -21.500059127807617

Token 220: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02632097154855728
    2. ' key' → logprob: -4.026320934295654
    3. 'key' → logprob: -5.026320934295654
    4. '
' → logprob: -6.526320934295654
    5. '	key' → logprob: -9.776321411132812
    6. ' ' → logprob: -10.901321411132812
    7. '    
' → logprob: -11.401321411132812
    8. ',key' → logprob: -12.401321411132812
    9. 'token' → logprob: -12.526321411132812
    10. '  ' → logprob: -12.901321411132812

Token 221: '   ' (ID: 271)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.9792641997337341
    2. '   ' → logprob: -1.104264259338379
    3. ' key' → logprob: -1.229264259338379
    4. '
' → logprob: -8.229264259338379
    5. ' ' → logprob: -8.979264259338379
    6. '	key' → logprob: -10.104264259338379
    7. '  ' → logprob: -11.979264259338379
    8. 'k' → logprob: -13.729264259338379
    9. '       ' → logprob: -13.854264259338379
    10. '    
' → logprob: -13.979264259338379

Token 222: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.003352140076458454
    2. '   ' → logprob: -6.003352165222168
    3. ' key' → logprob: -7.128352165222168
    4. ' ' → logprob: -10.503352165222168
    5. 'reverse' → logprob: -10.503352165222168
    6. 'rev' → logprob: -11.878352165222168
    7. 'if' → logprob: -12.878352165222168
    8. '
' → logprob: -13.003352165222168
    9. 'r' → logprob: -13.253352165222168
    10. '	key' → logprob: -13.628352165222168

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003177952254191041
    2. '=' → logprob: -5.753178119659424
    3. ' =(' → logprob: -16.378177642822266
    4. ',' → logprob: -17.003177642822266
    5. ')' → logprob: -17.253177642822266
    6. ' ' → logprob: -18.503177642822266
    7. ' =
' → logprob: -19.003177642822266
    8. '[' → logprob: -19.003177642822266
    9. '(' → logprob: -19.128177642822266
    10. ' =)' → logprob: -19.128177642822266

Token 224: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0160243958234787
    2. ' (' → logprob: -4.641024589538574
    3. '(red' → logprob: -5.391024589538574
    4. '(key' → logprob: -7.266024589538574
    5. '("",' → logprob: -7.641024589538574
    6. '(b' → logprob: -9.016024589538574
    7. '('',' → logprob: -9.266024589538574
    8. '(t' → logprob: -9.641024589538574
    9. '(s' → logprob: -9.891024589538574
    10. '(bl' → logprob: -10.266024589538574

Token 225: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.022545941174030304
    2. ' blue' → logprob: -4.64754581451416
    3. 'red' → logprob: -4.89754581451416
    4. '(' → logprob: -5.39754581451416
    5. '(red' → logprob: -8.27254581451416
    6. ' (' → logprob: -9.39754581451416
    7. 'blu' → logprob: -9.39754581451416
    8. ' red' → logprob: -9.64754581451416
    9. ')' → logprob: -10.33504581451416
    10. '"' → logprob: -10.77254581451416

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. '[::-' → logprob: -11.000021934509277
    3. ' ,' → logprob: -12.250021934509277
    4. ',
' → logprob: -15.750021934509277
    5. 'reverse' → logprob: -15.875021934509277
    6. '[' → logprob: -16.87502098083496
    7. ')' → logprob: -17.25002098083496
    8. '.reverse' → logprob: -17.62502098083496
    9. ',)' → logprob: -18.12502098083496
    10. '),' → logprob: -18.12502098083496

Token 227: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.002805821830406785
    2. ' red' → logprob: -5.877805709838867
    3. '(red' → logprob: -15.377805709838867
    4. ')' → logprob: -15.627805709838867
    5. ' ' → logprob: -15.877805709838867
    6. 'blue' → logprob: -16.627805709838867
    7. 'r' → logprob: -17.002805709838867
    8. 'redi' → logprob: -17.377805709838867
    9. 'reds' → logprob: -17.377805709838867
    10. '   ' → logprob: -17.502805709838867

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01417080033570528
    2. ')
' → logprob: -4.2641706466674805
    3. '<|end|>' → logprob: -13.01417064666748
    4. ' )' → logprob: -13.76417064666748
    5. ']' → logprob: -14.26417064666748
    6. ')

' → logprob: -14.51417064666748
    7. '')' → logprob: -14.63917064666748
    8. '")' → logprob: -14.76417064666748
    9. ')
' → logprob: -14.76417064666748
    10. 'if' → logprob: -15.76417064666748

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12378230690956116
    2. '<|end|>' → logprob: -2.3737823963165283
    3. ' if' → logprob: -3.8737823963165283
    4. '
' → logprob: -6.748782157897949
    5. '<|end|>' → logprob: -7.123782157897949
    6. ' ' → logprob: -8.12378215789795
    7. '    ' → logprob: -9.62378215789795
    8. 'if' → logprob: -10.24878215789795
    9. '  ' → logprob: -10.37378215789795
    10. ')' → logprob: -10.49878215789795

Token 230: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1279095858335495
    2. ' if' → logprob: -2.1279096603393555
    3. '   ' → logprob: -7.3779096603393555
    4. 'cnt' → logprob: -8.127909660339355
    5. '
' → logprob: -10.002909660339355
    6. ' cnt' → logprob: -11.502909660339355
    7. '```' → logprob: -13.377909660339355
    8. '    
' → logprob: -14.002909660339355
    9. ' ' → logprob: -14.252909660339355
    10. '``' → logprob: -14.877909660339355

Token 231: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4740801155567169
    2. ' key' → logprob: -0.9740800857543945
    3. ' ' → logprob: -13.349080085754395
    4. '(key' → logprob: -13.724080085754395
    5. '_key' → logprob: -15.724080085754395
    6. '   ' → logprob: -16.09908103942871
    7. '
' → logprob: -16.34908103942871
    8. '	key' → logprob: -17.22408103942871
    9. 'Key' → logprob: -17.59908103942871
    10. ' (' → logprob: -18.22408103942871

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996700167655945
    2. 'in' → logprob: -2.694967031478882
    3. ' ' → logprob: -10.569967269897461
    4. '	in' → logprob: -13.194967269897461
    5. '   ' → logprob: -13.944967269897461
    6. ' i' → logprob: -14.194967269897461
    7. ')' → logprob: -14.444967269897461
    8. ' ' → logprob: -15.444967269897461
    9. '  ' → logprob: -15.569967269897461
    10. ' not' → logprob: -16.06996726989746

Token 233: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.05488871410489082
    2. ' hash' → logprob: -2.9298887252807617
    3. ' ' → logprob: -12.804888725280762
    4. '	hash' → logprob: -13.054888725280762
    5. '   ' → logprob: -14.179888725280762
    6. '(hash' → logprob: -14.804888725280762
    7. '
' → logprob: -15.554888725280762
    8. '_hash' → logprob: -15.929888725280762
    9. '  ' → logprob: -16.929887771606445
    10. 'h' → logprob: -17.304887771606445

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0614798329770565
    2. ':
' → logprob: -2.9364798069000244
    3. ' and' → logprob: -5.1864800453186035
    4. 'and' → logprob: -8.186479568481445
    5. '   ' → logprob: -8.811479568481445
    6. '       ' → logprob: -9.061479568481445
    7. '):
' → logprob: -9.311479568481445
    8. ' :' → logprob: -9.686479568481445
    9. '==' → logprob: -9.686479568481445
    10. '>' → logprob: -9.686479568481445

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027575582498684525
    2. '):
' → logprob: -9.875275611877441
    3. ':
' → logprob: -9.875275611877441
    4. '0' → logprob: -10.125275611877441
    5. 'cnt' → logprob: -10.125275611877441
    6. ' cnt' → logprob: -10.750275611877441
    7. '   ' → logprob: -11.250275611877441
    8. '<|end|>' → logprob: -11.250275611877441
    9. '
' → logprob: -11.875275611877441
    10. '           ' → logprob: -12.000275611877441

Token 236: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5192676186561584
    2. 'cnt' (adapté à ' cnt') → logprob: -1.2692675590515137
    3. ' cnt' → logprob: -2.1442675590515137
    4. '   ' → logprob: -5.019267559051514
    5. '	cnt' → logprob: -8.644268035888672
    6. '           ' → logprob: -10.894268035888672
    7. 'count' → logprob: -11.019268035888672
    8. '[cnt' → logprob: -12.144268035888672
    9. '(cnt' → logprob: -12.269268035888672
    10. '     ' → logprob: -12.394268035888672

Token 237: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01251753605902195
    2. '+=' → logprob: -4.38751745223999
    3. '   ' → logprob: -12.637517929077148
    4. ']+=' → logprob: -13.012517929077148
    5. '+' → logprob: -14.512517929077148
    6. '    ' → logprob: -14.762517929077148
    7. ')' → logprob: -15.262517929077148
    8. '```' → logprob: -15.512517929077148
    9. '=' → logprob: -15.637517929077148
    10. '	' → logprob: -15.637517929077148

Token 238: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.048592254519462585
    2. ' hash' → logprob: -3.0485923290252686
    3. '	hash' → logprob: -13.048592567443848
    4. '   ' → logprob: -13.673592567443848
    5. ' ' → logprob: -14.173592567443848
    6. '(hash' → logprob: -14.548592567443848
    7. '           ' → logprob: -16.29859161376953
    8. '       ' → logprob: -16.42359161376953
    9. '1' → logprob: -17.54859161376953
    10. '  ' → logprob: -17.79859161376953

Token 239: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. 'key' → logprob: -17.25
    3. '[' → logprob: -17.375
    4. '[token' → logprob: -19.5
    5. '(key' → logprob: -19.625
    6. ' [' → logprob: -20.5
    7. '```' → logprob: -21.0
    8. '[
' → logprob: -22.25
    9. '[k' → logprob: -22.375
    10. ' key' → logprob: -22.75

Token 240: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036853551864624023
    2. '<|end|>' → logprob: -5.878685474395752
    3. ' ]' → logprob: -7.378685474395752
    4. '<|end|>' → logprob: -9.003684997558594
    5. '}' → logprob: -9.378684997558594
    6. ')' → logprob: -11.003684997558594
    7. '   ' → logprob: -11.753684997558594
    8. ']
' → logprob: -12.253684997558594
    9. ')]' → logprob: -13.253684997558594
    10. ' ' → logprob: -13.253684997558594

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07822228968143463
    2. ' bit' → logprob: -2.9532222747802734
    3. '
' → logprob: -4.203222274780273
    4. 'bit' → logprob: -5.078222274780273
    5. '    
' → logprob: -6.703222274780273
    6. '  
' → logprob: -8.453222274780273
    7. ' 
' → logprob: -8.453222274780273
    8. ' ' → logprob: -9.078222274780273
    9. '[' → logprob: -10.453222274780273
    10. ')' → logprob: -10.578222274780273

Token 242: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.6336211562156677
    2. ' bit' → logprob: -0.8836211562156677
    3. '   ' → logprob: -2.8836212158203125
    4. ' ' → logprob: -10.008621215820312
    5. '    
' → logprob: -10.883621215820312
    6. '
' → logprob: -11.008621215820312
    7. ')' → logprob: -11.883621215820312
    8. '(bit' → logprob: -12.008621215820312
    9. '.bit' → logprob: -12.008621215820312
    10. '  ' → logprob: -12.758621215820312

Token 243: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20374077558517456
    2. ' +=' → logprob: -2.0787408351898193
    3. '+' → logprob: -2.8287408351898193
    4. '=' → logprob: -9.578741073608398
    5. ' +' → logprob: -10.328741073608398
    6. ' ' → logprob: -10.828741073608398
    7. '+
' → logprob: -12.078741073608398
    8. '++' → logprob: -12.453741073608398
    9. '+="' → logprob: -12.703741073608398
    10. ']+=' → logprob: -12.703741073608398

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004330532974563539
    2. ' ' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.250432968139648
    4. '```' → logprob: -15.500432968139648
    5. '(' → logprob: -15.625432968139648
    6. '`' → logprob: -17.25043296813965
    7. '+' → logprob: -17.43793296813965
    8. '       ' → logprob: -17.43793296813965
    9. '0' → logprob: -17.43793296813965
    10. '  ' → logprob: -17.62543296813965

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.0
    4. '0' → logprob: -18.75
    5. 'n' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. '(' → logprob: -19.625
    8. '１' → logprob: -20.0
    9. '2' → logprob: -21.0625
    10. '۱' → logprob: -21.1875

Token 246: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009187239338643849
    2. '
' → logprob: -7.000918865203857
    3. ' print' → logprob: -12.2509183883667
    4. '  
' → logprob: -14.0009183883667
    5. '    
' → logprob: -15.0009183883667
    6. ')
' → logprob: -15.0009183883667
    7. '
' → logprob: -15.3759183883667
    8. ' 
' → logprob: -15.5009183883667
    9. '#print' → logprob: -15.8759183883667
    10. ')' → logprob: -16.125919342041016

Token 247: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005589892389252782
    2. '
' → logprob: -7.500558853149414
    3. ' print' → logprob: -12.125558853149414
    4. '#print' → logprob: -16.125558853149414
    5. '```' → logprob: -16.250558853149414
    6. '
' → logprob: -16.375558853149414
    7. '.print' → logprob: -16.625558853149414
    8. '  
' → logprob: -16.750558853149414
    9. '(print' → logprob: -16.875558853149414
    10. '#' → logprob: -16.875558853149414

Token 248: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006720705423504114
    2. '(cnt' → logprob: -5.006720542907715
    3. '(
' → logprob: -13.381720542907715
    4. '(`' → logprob: -14.131720542907715
    5. '()' → logprob: -14.631720542907715
    6. '("("' → logprob: -14.631720542907715
    7. ' (' → logprob: -14.631720542907715
    8. '('' → logprob: -14.881720542907715
    9. '(

' → logprob: -14.881720542907715
    10. '(c' → logprob: -15.006720542907715

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. '+' → logprob: -15.250000953674316
    4. ')
' → logprob: -16.25
    5. ')`' → logprob: -16.75
    6. '))' → logprob: -17.375
    7. '**' → logprob: -17.5
    8. '}' → logprob: -18.125
    9. '```' → logprob: -18.125
    10. '*' → logprob: -18.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 247
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 218
Précision stricte (1ère position): 41.70%
Précision adaptée (1ère position): 48.18%
Précision (top 10): 88.26%
================================================================================
