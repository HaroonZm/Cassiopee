================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a_b_t = input().split()
a = int(a_b_t[0])
b = int(a_b_t[1])
t = int(a_b_t[2])
print(int(t//a)*b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: '_b' (ID: 1535)
  → Token d'amorce (pas de prédiction)

Token 2: '_t' (ID: 838)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8701937198638916
    2. '[' → logprob: -1.7451937198638916
    3. '.' → logprob: -1.8701937198638916
    4. 'a' → logprob: -2.4951937198638916
    5. '=' → logprob: -2.6201937198638916
    6. ')' → logprob: -3.2451937198638916
    7. '```' → logprob: -4.1201934814453125
    8. ' =' → logprob: -4.6201934814453125
    9. '(' → logprob: -5.1201934814453125
    10. ']' → logprob: -5.3701934814453125

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6510058641433716
    2. ' []' → logprob: -1.2760058641433716
    3. ' "' → logprob: -3.026005744934082
    4. ''' → logprob: -3.151005744934082
    5. '"' → logprob: -3.151005744934082
    6. ' {}' → logprob: -3.901005744934082
    7. ' '' → logprob: -4.401005744934082
    8. ' True' → logprob: -4.401005744934082
    9. '[' → logprob: -5.901005744934082
    10. ' [' → logprob: -5.901005744934082

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001143314759247005
    2. ''' → logprob: -7.251143455505371
    3. '('' → logprob: -8.251143455505371
    4. '(
' → logprob: -9.876143455505371
    5. '"' → logprob: -10.251143455505371
    6. '("("' → logprob: -10.876143455505371
    7. '.' → logprob: -11.001143455505371
    8. '()' → logprob: -11.376143455505371
    9. '_' → logprob: -11.876143455505371
    10. '[' → logprob: -12.251143455505371

Token 6: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6624281406402588
    2. '+' → logprob: -1.4124281406402588
    3. '.strip' → logprob: -2.412428140640259
    4. '_' → logprob: -3.037428140640259
    5. ' ' → logprob: -3.912428140640259
    6. '*' → logprob: -4.16242790222168
    7. '.split' → logprob: -4.28742790222168
    8. '[' → logprob: -4.41242790222168
    9. '(' → logprob: -4.78742790222168
    10. '**' → logprob: -5.66242790222168

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004212908912450075
    2. '()' → logprob: -5.504212856292725
    3. '('' → logprob: -9.379213333129883
    4. '(
' → logprob: -11.254213333129883
    5. '("("' → logprob: -11.254213333129883
    6. '(

' → logprob: -12.504213333129883
    7. '"' → logprob: -12.504213333129883
    8. '(`' → logprob: -12.754213333129883
    9. '`' → logprob: -12.879213333129883
    10. '((' → logprob: -13.254213333129883

Token 8: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7682241797447205
    2. 'for' → logprob: -0.8932241797447205
    3. '[' → logprob: -3.1432242393493652
    4. 'if' → logprob: -3.3932242393493652
    5. 'c' → logprob: -4.393224239349365
    6. 'x' → logprob: -4.643224239349365
    7. 'result' → logprob: -5.018224239349365
    8. 'n' → logprob: -5.268224239349365
    9. 'print' → logprob: -5.393224239349365
    10. '```' → logprob: -5.643224239349365

Token 9: ' =' (ID: 314)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12309256941080093
    2. '_' → logprob: -2.2480926513671875
    3. '[' → logprob: -4.6230926513671875
    4. '[_' → logprob: -8.373092651367188
    5. '_a' → logprob: -9.998092651367188
    6. ' _' → logprob: -10.123092651367188
    7. '_[' → logprob: -10.748092651367188
    8. '[]' → logprob: -11.123092651367188
    9. 'b' → logprob: -11.748092651367188
    10. '\[' → logprob: -12.498092651367188

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014515688642859459
    2. ' int' → logprob: -4.2645158767700195
    3. 'a' → logprob: -8.01451587677002
    4. ' a' → logprob: -11.51451587677002
    5. 'float' → logprob: -12.01451587677002
    6. '[int' → logprob: -12.63951587677002
    7. ' ' → logprob: -14.13951587677002
    8. '(int' → logprob: -14.38951587677002
    9. 'len' → logprob: -15.01451587677002
    10. 'list' → logprob: -15.26451587677002

Token 11: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0703827440738678
    2. '(a' → logprob: -2.695382833480835
    3. 'a' → logprob: -7.820382595062256
    4. '('' → logprob: -10.820383071899414
    5. '(
' → logprob: -13.070383071899414
    6. '_a' → logprob: -13.195383071899414
    7. '()' → logprob: -13.320383071899414
    8. '(input' → logprob: -13.320383071899414
    9. ' (' → logprob: -13.320383071899414
    10. '(b' → logprob: -13.445383071899414

Token 12: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00031746976310387254
    2. '[' → logprob: -8.500317573547363
    3. '_a' → logprob: -10.625317573547363
    4. '_' → logprob: -10.750317573547363
    5. ')' → logprob: -11.000317573547363
    6. ')_' → logprob: -11.250317573547363
    7. '_)' → logprob: -11.625317573547363
    8. '[_' → logprob: -11.750317573547363
    9. 'b' → logprob: -12.000317573547363
    10. ' _' → logprob: -12.500317573547363

Token 13: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.01199258305132389
    2. '_b' → logprob: -4.511992454528809
    3. '[' → logprob: -7.136992454528809
    4. '[_' → logprob: -9.511992454528809
    5. '_a' → logprob: -10.511992454528809
    6. '_' → logprob: -11.011992454528809
    7. ')_' → logprob: -11.261992454528809
    8. ')' → logprob: -12.136992454528809
    9. ' _' → logprob: -12.511992454528809
    10. '"_' → logprob: -13.011992454528809

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12701882421970367
    2. '[a' → logprob: -2.127018928527832
    3. ')' → logprob: -10.127018928527832
    4. '[b' → logprob: -10.502018928527832
    5. 'a' → logprob: -11.377018928527832
    6. '[
' → logprob: -11.877018928527832
    7. '```' → logprob: -14.002018928527832
    8. '(a' → logprob: -14.002018928527832
    9. ' [' → logprob: -14.877018928527832
    10. ')[' → logprob: -15.002018928527832

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5928495486150496e-05
    2. ''' → logprob: -11.500016212463379
    3. '1' → logprob: -12.250016212463379
    4. ' ' → logprob: -14.000016212463379
    5. '"' → logprob: -16.250015258789062
    6. '2' → logprob: -16.500015258789062
    7. ')' → logprob: -18.750015258789062
    8. '`' → logprob: -18.875015258789062
    9. '```' → logprob: -19.500015258789062
    10. '   ' → logprob: -19.625015258789062

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034451649989932775
    2. '])' → logprob: -6.003445148468018
    3. ']' → logprob: -7.128445148468018
    4. ')
' → logprob: -9.753445625305176
    5. ')]' → logprob: -10.503445625305176
    6. ')])' → logprob: -10.753445625305176
    7. ')a' → logprob: -11.378445625305176
    8. ' )' → logprob: -11.378445625305176
    9. 'a' → logprob: -12.128445625305176
    10. '`)' → logprob: -12.253445625305176

Token 17: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7526699900627136
    2. ' ' → logprob: -1.6276700496673584
    3. '<|end|>' → logprob: -2.1276700496673584
    4. '+' → logprob: -2.7526700496673584
    5. '```' → logprob: -2.7526700496673584
    6. ')' → logprob: -3.6276700496673584
    7. '*' → logprob: -4.502669811248779
    8. '_' → logprob: -4.627669811248779
    9. '  ' → logprob: -5.252669811248779
    10. 'b' → logprob: -5.252669811248779

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012845125049352646
    2. ' =' → logprob: -4.637845039367676
    3. '=' → logprob: -7.012845039367676
    4. '[' → logprob: -7.387845039367676
    5. ' _' → logprob: -7.637845039367676
    6. ')' → logprob: -7.762845039367676
    7. '_b' → logprob: -8.887845039367676
    8. '_a' → logprob: -9.012845039367676
    9. '_t' → logprob: -9.262845039367676
    10. ' ' → logprob: -9.637845039367676

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931519508361816
    2. ' int' → logprob: -0.6931519508361816
    3. ' a' → logprob: -13.068151473999023
    4. 'a' → logprob: -13.693151473999023
    5. '=int' → logprob: -14.318151473999023
    6. ' ' → logprob: -14.568151473999023
    7. '(int' → logprob: -15.318151473999023
    8. '	int' → logprob: -16.818151473999023
    9. '<int' → logprob: -16.943151473999023
    10. '  ' → logprob: -17.568151473999023

Token 20: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25199514627456665
    2. '(' → logprob: -1.5019950866699219
    3. '(b' → logprob: -9.876995086669922
    4. ' (' → logprob: -12.251995086669922
    5. '((' → logprob: -13.001995086669922
    6. '(f' → logprob: -13.376995086669922
    7. '('' → logprob: -14.001995086669922
    8. '(ab' → logprob: -14.251995086669922
    9. '(A' → logprob: -14.501995086669922
    10. '("("' → logprob: -14.626995086669922

Token 21: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020246754866093397
    2. '[' → logprob: -9.250202178955078
    3. '_a' → logprob: -10.125202178955078
    4. '_' → logprob: -10.250202178955078
    5. '[_' → logprob: -11.125202178955078
    6. ')' → logprob: -12.125202178955078
    7. ')_' → logprob: -13.000202178955078
    8. '_)' → logprob: -13.625202178955078
    9. ' _' → logprob: -13.750202178955078
    10. '_s' → logprob: -13.875202178955078

Token 22: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.2041798084974289
    2. '_b' → logprob: -1.7041797637939453
    3. '[' → logprob: -5.954179763793945
    4. '[_' → logprob: -9.204179763793945
    5. '_s' → logprob: -11.079179763793945
    6. '_f' → logprob: -11.204179763793945
    7. '_' → logprob: -11.329179763793945
    8. ' _' → logprob: -11.954179763793945
    9. '_[' → logprob: -12.204179763793945
    10. '[t' → logprob: -12.704179763793945

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.375000953674316
    3. ')' → logprob: -15.000000953674316
    4. '```' → logprob: -15.250000953674316
    5. ')[' → logprob: -16.375001907348633
    6. '1' → logprob: -16.750001907348633
    7. '[
' → logprob: -16.750001907348633
    8. '\[' → logprob: -17.500001907348633
    9. '	' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.500001907348633

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '])' → logprob: -13.125004768371582
    3. '0' → logprob: -13.375004768371582
    4. ' ' → logprob: -13.625004768371582
    5. '2' → logprob: -15.250004768371582
    6. '```' → logprob: -17.7500057220459
    7. ']' → logprob: -17.8750057220459
    8. '   ' → logprob: -18.2500057220459
    9. ')' → logprob: -18.6250057220459
    10. '  ' → logprob: -19.2500057220459

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011045700375689194
    2. '])' → logprob: -9.500110626220703
    3. ']' → logprob: -11.000110626220703
    4. ')]' → logprob: -12.625110626220703
    5. ')
' → logprob: -12.750110626220703
    6. '）' → logprob: -13.125110626220703
    7. '))' → logprob: -13.125110626220703
    8. ')])' → logprob: -13.125110626220703
    9. '[' → logprob: -13.250110626220703
    10. 'a' → logprob: -14.125110626220703

Token 26: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015906770713627338
    2. 'c' → logprob: -7.001590728759766
    3. 'a' → logprob: -8.001590728759766
    4. ' t' → logprob: -9.626590728759766
    5. '```' → logprob: -10.126590728759766
    6. '_' → logprob: -10.251590728759766
    7. '+' → logprob: -10.251590728759766
    8. '`t' → logprob: -10.501590728759766
    9. 'if' → logprob: -10.876590728759766
    10. '`' → logprob: -10.876590728759766

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3979074954986572
    2. '=' → logprob: -1.2729074954986572
    3. '_' → logprob: -3.1479074954986572
    4. ' ' → logprob: -5.522907257080078
    5. ')' → logprob: -7.272907257080078
    6. '[' → logprob: -8.897907257080078
    7. '.' → logprob: -8.897907257080078
    8. '=int' → logprob: -9.897907257080078
    9. '  ' → logprob: -9.897907257080078
    10. '0' → logprob: -10.022907257080078

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.048594411462545395
    2. 'int' → logprob: -3.0485944747924805
    3. ' ' → logprob: -12.04859447479248
    4. ' ' → logprob: -15.42359447479248
    5. '(int' → logprob: -15.42359447479248
    6. '=int' → logprob: -15.42359447479248
    7. '0' → logprob: -15.54859447479248
    8. ' a' → logprob: -15.67359447479248
    9. '[int' → logprob: -17.048593521118164
    10. ' 
' → logprob: -17.548593521118164

Token 29: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027740370482206345
    2. '(a' → logprob: -3.777740478515625
    3. '(t' → logprob: -6.652740478515625
    4. '('' → logprob: -6.652740478515625
    5. '()' → logprob: -7.152740478515625
    6. '(input' → logprob: -7.277740478515625
    7. '(
' → logprob: -9.527740478515625
    8. '("("' → logprob: -9.902740478515625
    9. '(b' → logprob: -10.027740478515625
    10. '((' → logprob: -10.402740478515625

Token 30: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.392824874026701e-05
    2. ')_' → logprob: -11.75003433227539
    3. ' _' → logprob: -11.87503433227539
    4. '_' → logprob: -12.00003433227539
    5. '_t' → logprob: -12.12503433227539
    6. ')' → logprob: -12.87503433227539
    7. '[' → logprob: -13.12503433227539
    8. '_a' → logprob: -13.62503433227539
    9. '[_' → logprob: -14.37503433227539
    10. 'b' → logprob: -15.25003433227539

Token 31: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00018196819291915745
    2. 't' → logprob: -8.625182151794434
    3. '_' → logprob: -13.875182151794434
    4. ' t' → logprob: -15.500182151794434
    5. ' _' → logprob: -15.750182151794434
    6. '_s' → logprob: -15.750182151794434
    7. '_b' → logprob: -15.750182151794434
    8. '[' → logprob: -15.750182151794434
    9. '```' → logprob: -16.125181198120117
    10. ')t' → logprob: -16.250181198120117

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2842308680992573e-05
    2. ')' → logprob: -11.000022888183594
    3. '])' → logprob: -12.500022888183594
    4. ']' → logprob: -13.625022888183594
    5. ')[' → logprob: -14.875022888183594
    6. ' [' → logprob: -15.250022888183594
    7. '][' → logprob: -16.375022888183594
    8. '   ' → logprob: -16.625022888183594
    9. '))' → logprob: -16.625022888183594
    10. '[
' → logprob: -16.625022888183594

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. '0' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.625004768371582
    4. '1' → logprob: -15.250004768371582
    5. '-' → logprob: -15.250004768371582
    6. '])' → logprob: -15.875004768371582
    7. '3' → logprob: -16.0000057220459
    8. '```' → logprob: -16.6875057220459
    9. ']' → logprob: -17.2500057220459
    10. '２' → logprob: -17.7500057220459

Token 34: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '))' → logprob: -14.750001907348633
    3. '])' → logprob: -14.750001907348633
    4. '')' → logprob: -15.125001907348633
    5. '`)' → logprob: -15.250001907348633
    6. '）' → logprob: -15.500001907348633
    7. ']' → logprob: -15.500001907348633
    8. ' )' → logprob: -16.250001907348633
    9. ')
' → logprob: -16.750001907348633
    10. '})' → logprob: -17.750001907348633

Token 35: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02556268870830536
    2. '\' → logprob: -3.9005627632141113
    3. 'n' → logprob: -6.275562763214111
    4. '' → logprob: -6.650562763214111
    5. ' ' → logprob: -7.775562763214111
    6. '  
' → logprob: -7.900562763214111
    7. ' 
' → logprob: -8.775562286376953
    8. ''\' → logprob: -9.150562286376953
    9. '`' → logprob: -9.275562286376953
    10. '\r' → logprob: -9.525562286376953

Token 36: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015562419139314443
    2. '('' → logprob: -9.625155448913574
    3. '("' → logprob: -10.500155448913574
    4. '(a' → logprob: -11.000155448913574
    5. '((' → logprob: -11.000155448913574
    6. '("("' → logprob: -11.000155448913574
    7. '()' → logprob: -11.750155448913574
    8. ' (' → logprob: -14.375155448913574
    9. '("""' → logprob: -14.875155448913574
    10. '(sum' → logprob: -14.875155448913574

Token 37: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13492651283740997
    2. '(a' → logprob: -2.1349265575408936
    3. '((' → logprob: -5.1349263191223145
    4. '(t' → logprob: -7.1349263191223145
    5. 'a' → logprob: -7.2599263191223145
    6. ' (' → logprob: -8.009926795959473
    7. ')' → logprob: -8.759926795959473
    8. '()' → logprob: -10.384926795959473
    9. '(
' → logprob: -11.509926795959473
    10. '(s' → logprob: -11.759926795959473

Token 38: '//' (ID: 393)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4267845153808594
    2. ' /' → logprob: -1.4267845153808594
    3. '/a' → logprob: -3.1767845153808594
    4. ' //' → logprob: -3.6767845153808594
    5. ')' → logprob: -3.6767845153808594
    6. '//' → logprob: -5.176784515380859
    7. '*' → logprob: -5.426784515380859
    8. ' )' → logprob: -5.926784515380859
    9. '/b' → logprob: -7.551784515380859
    10. '/(' → logprob: -7.801784515380859

Token 39: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.6537622034084052e-05
    2. ' a' → logprob: -10.75002670288086
    3. 'b' → logprob: -12.25002670288086
    4. '	a' → logprob: -16.37502670288086
    5. ')a' → logprob: -16.50002670288086
    6. '_a' → logprob: -16.75002670288086
    7. '4' → logprob: -17.87502670288086
    8. '(a' → logprob: -17.87502670288086
    9. '#a' → logprob: -18.25002670288086
    10. '/a' → logprob: -18.25002670288086

Token 40: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6982256770133972
    2. '*b' → logprob: -0.8232256770133972
    3. ' *' → logprob: -3.323225736618042
    4. '))' → logprob: -4.323225498199463
    5. '*a' → logprob: -4.948225498199463
    6. ')' → logprob: -6.073225498199463
    7. ')*' → logprob: -6.573225498199463
    8. '*t' → logprob: -6.698225498199463
    9. '*))' → logprob: -7.823225498199463
    10. '*f' → logprob: -7.948225498199463

Token 41: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004890497075393796
    2. ' b' → logprob: -7.625489234924316
    3. 'a' → logprob: -15.250489234924316
    4. '*b' → logprob: -15.250489234924316
    5. ')b' → logprob: -15.375489234924316
    6. '	b' → logprob: -15.875489234924316
    7. '_b' → logprob: -16.25048828125
    8. '100' → logprob: -16.87548828125
    9. 'int' → logprob: -17.37548828125
    10. '10' → logprob: -17.37548828125

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. '))' → logprob: -11.50001335144043
    3. '`)' → logprob: -13.00001335144043
    4. '')' → logprob: -15.37501335144043
    5. ' )' → logprob: -15.50001335144043
    6. ')`' → logprob: -16.00001335144043
    7. ')
' → logprob: -17.37501335144043
    8. ')))' → logprob: -17.37501335144043
    9. '#' → logprob: -17.50001335144043
    10. '")' → logprob: -17.87501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 40
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 75.00%
================================================================================
