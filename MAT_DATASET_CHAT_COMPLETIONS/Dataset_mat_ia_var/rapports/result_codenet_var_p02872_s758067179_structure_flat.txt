================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

DBG = True and False
MAXVISIT = 400

printn = lambda x: sys.stdout.write(x)
inn = lambda: int(input())
inl = lambda: list(map(int, input().split()))
inm = lambda: map(int, input().split())

ddprint = lambda x: (print(x), sys.stdout.flush()) if DBG else None

ddprint("start")

V, E = inm()
es = []
for i in range(V+1):
    es.append([])
dist = []
for i in range(V+1):
    dist.append([9999]*(V+1))
for i in range(V+1):
    dist[i][i] = 0
for i in range(E):
    a,b,c = inm()
    es[a].append((b,c))
    es[b].append((a,c))
    dist[a][b] = c
    dist[b][a] = c

if DBG:
    for i,z in enumerate(es):
        print(str(i)+' ' + str(z))

for k in range(1,V+1):
    for i in range(1,V+1):
        for j in range(1,V+1):
            dist[i][j] = min(dist[i][j], dist[i][k]+dist[k][j])
ddprint("WS done")

nxtndary = []
for i in range(V+1):
    nxtndary.append([0]*(V+1))
for i in range(1,V+1):
    for j in range(1,V+1):
        if j==i:
            continue
        found = False
        for z in es[i]:
            k = z[0]
            if dist[i][j] == z[1]+dist[k][j]:
                nxtndary[i][j] = k
                found = True
                break
        if not found:
            print("nxtndary ERR")
            exit()

F = inl()
if len(F)==1:
    prob = 1
    tt = F[0]
else:
    prob = 2
    tt = inn()

pendreq = []
workreq = []
lastnd = 1
distfromlast = 0
ufary = []
ufrank = []
for t in range(tt):

    if DBG and t>3400:
        exit()

    n = inn()
    if n==1:
        x = list(inm())
        new_id = x[0]
        dst = x[1]
        pendreq.append((new_id, dst))
    if prob==2:
        n2 = inn()
        for _ in range(n2):
            inn()
    def atdepot():
        return (lastnd==1 and distfromlast==0)
    def trigger():
        return (len(pendreq)>0)
    if atdepot():
        if trigger():
            vislist = set([x[1] for x in pendreq]) | set(workreq)
            vv = len(vislist)
            pendreq = []
            if vv==1:
                workreq = list(vislist)
            else:
                e = {}
                f = {}
                for x in vislist:
                    e[x] = []
                ufary = []
                ufrank = []
                for i in range(V+1):
                    ufary.append(i)
                    ufrank.append(0)
                def ufroot(i):
                    p = ufary[i]
                    if p==i:
                        return p
                    q = ufroot(p)
                    ufary[i] = q
                    return q
                def ufmerge(i,j):
                    ri = ufroot(i)
                    rj = ufroot(j)
                    if ri==rj:
                        return
                    if ufrank[ri]>ufrank[rj]:
                        ufary[rj] = ri
                    else:
                        ufary[ri] = rj
                        if ufrank[ri]==ufrank[rj]:
                            ufrank[rj] += 1
                for _ in range(vv-1):
                    mx = -1
                    mxi = None
                    mxj = None
                    for i in e:
                        for j in e:
                            if ufroot(i)==ufroot(j):
                                continue
                            df = dist[i][1] + dist[1][j] - dist[i][j]
                            if df>mx:
                                mx = df
                                mxi = i
                                mxj = j
                    i = mxi
                    j = mxj
                    e[i].append(j)
                    e[j].append(i)
                    ufmerge(i,j)
                    if len(e[i])==2:
                        f[i] = e[i]
                        del e[i]
                    if len(e[j])==2:
                        f[j] = e[j]
                        del e[j]
                ek = list(e.keys())
                p = ek[0]
                prev = p
                cur = e[p][0]
                workreq = [p,cur]
                for i in range(vv-2):
                    p = cur
                    cur = f[p][0]
                    if cur==prev:
                        cur = f[p][1]
                    prev = p
                    workreq.append(cur)
            if len(workreq)>0:
                nxtnd = None
                tgt = workreq[0] if len(workreq)>0 else 1
                nxtnd = nxtndary[lastnd][tgt]
                print(nxtnd)
                sys.stdout.flush()
                distfromlast += 1
                if distfromlast == dist[lastnd][nxtnd]:
                    distfromlast = 0
                    if len(workreq)>0 and nxtnd == workreq[0]:
                        del workreq[0]
                    lastnd = nxtnd
            else:
                print(-1)
                sys.stdout.flush()
        else:
            print(-1)
            sys.stdout.flush()
    else:
        nxtnd = None
        tgt = workreq[0] if len(workreq)>0 else 1
        nxtnd = nxtndary[lastnd][tgt]
        print(nxtnd)
        sys.stdout.flush()
        distfromlast += 1
        if distfromlast == dist[lastnd][nxtnd]:
            distfromlast = 0
            if len(workreq)>0 and nxtnd == workreq[0]:
                del workreq[0]
            lastnd = nxtnd
    if prob==2:
        v = input().strip()
        if v != 'OK':
            exit()
        n3 = inn()
        for _ in range(n3):
            inn()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'DBG' (ID: 68421)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03690023347735405
    2. '\n' → logprob: -3.661900281906128
    3. 'import' → logprob: -5.786900043487549
    4. '\' → logprob: -6.286900043487549
    5. 'newline' → logprob: -6.786900043487549
    6. '' → logprob: -7.161900043487549
    7. '```' → logprob: -7.411900043487549
    8. '<|end|>' → logprob: -7.411900043487549
    9. '[' → logprob: -7.661900043487549
    10. '
' → logprob: -7.786900043487549

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46735090017318726
    2. '_' → logprob: -1.092350959777832
    3. ' =' → logprob: -3.342350959777832
    4. '.' → logprob: -7.092350959777832
    5. '(' → logprob: -8.217350959777832
    6. ' ' → logprob: -8.467350959777832
    7. '[:]' → logprob: -8.592350959777832
    8. ')' → logprob: -9.092350959777832
    9. ':' → logprob: -9.217350959777832
    10. 'E' → logprob: -9.217350959777832

Token 5: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.11471382528543472
    2. 'True' → logprob: -2.8647139072418213
    3. ' False' → logprob: -3.3647139072418213
    4. 'False' → logprob: -4.364713668823242
    5. ' ' → logprob: -5.864713668823242
    6. '1' → logprob: -6.989713668823242
    7. '0' → logprob: -8.864713668823242
    8. ' []' → logprob: -9.489713668823242
    9. ' None' → logprob: -10.739713668823242
    10. '3' → logprob: -11.614713668823242

Token 6: ' and' (ID: 326)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0534660816192627
    2. '
' → logprob: -1.5534660816192627
    3. '\' → logprob: -1.6784660816192627
    4. '' → logprob: -1.9284660816192627
    5. '

' → logprob: -3.1784660816192627
    6. '#' → logprob: -4.178465843200684
    7. 'newline' → logprob: -4.178465843200684
    8. '```' → logprob: -4.303465843200684
    9. 'import' → logprob: -5.553465843200684
    10. ' ' → logprob: -5.678465843200684

Token 7: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.191827654838562
    2. ' sys' → logprob: -2.3168277740478516
    3. ' not' → logprob: -3.1918277740478516
    4. 'False' → logprob: -4.441827774047852
    5. ' ' → logprob: -4.566827774047852
    6. ' True' → logprob: -5.191827774047852
    7. ' "' → logprob: -6.316827774047852
    8. '"' → logprob: -6.566827774047852
    9. ''' → logprob: -6.941827774047852
    10. ' debug' → logprob: -7.441827774047852

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5717669129371643
    2. '#' → logprob: -1.8217668533325195
    3. '\n' → logprob: -1.9467668533325195
    4. '<|end|>' → logprob: -2.9467668533325195
    5. ' ' → logprob: -3.3217668533325195
    6. '' → logprob: -4.4467668533325195
    7. 'newline' → logprob: -5.0717668533325195
    8. '

' → logprob: -5.4467668533325195
    9. 'False' → logprob: -5.5717668533325195
    10. '```' → logprob: -6.0717668533325195

Token 9: 'MAX' (ID: 21911)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9828118681907654
    2. '
' → logprob: -1.1078119277954102
    3. '\n' → logprob: -1.6078119277954102
    4. '' → logprob: -3.35781192779541
    5. '

' → logprob: -3.98281192779541
    6. ' ' → logprob: -4.10781192779541
    7. '\' → logprob: -4.85781192779541
    8. 'newline' → logprob: -5.98281192779541
    9. '```' → logprob: -6.10781192779541
    10. '<|end|>' → logprob: -6.10781192779541

Token 10: 'VIS' (ID: 82553)
  Prédit: '_SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -1.0384511947631836
    2. '_' → logprob: -1.1634511947631836
    3. '_LENGTH' → logprob: -2.1634511947631836
    4. '_LINE' → logprob: -2.4134511947631836
    5. '_LEN' → logprob: -3.0384511947631836
    6. ' _' → logprob: -3.4134511947631836
    7. '_VALUE' → logprob: -4.413451194763184
    8. '_COUNT' → logprob: -4.663451194763184
    9. '_BUFFER' → logprob: -5.663451194763184
    10. '_DEPTH' → logprob: -5.663451194763184

Token 11: 'IT' (ID: 1468)
  Prédit: 'IT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -0.45074722170829773
    2. 'ITS' → logprob: -1.4507472515106201
    3. 'ITED' → logprob: -3.20074725151062
    4. 'IBILITY' → logprob: -3.45074725151062
    5. '_' → logprob: -3.95074725151062
    6. '=' → logprob: -4.575747013092041
    7. 'IB' → logprob: -4.950747013092041
    8. 'IBLE' → logprob: -5.950747013092041
    9. 'ION' → logprob: -6.075747013092041
    10. 'ITOR' → logprob: -6.075747013092041

Token 12: ' =' (ID: 314)
  Prédit: '_COUNT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_COUNT' → logprob: -0.13849034905433655
    2. 'S' → logprob: -3.6384904384613037
    3. ' =' → logprob: -3.6384904384613037
    4. '=' → logprob: -3.8884904384613037
    5. '_' → logprob: -4.013490200042725
    6. '_ED' → logprob: -4.888490200042725
    7. '_SIZE' → logprob: -5.138490200042725
    8. 'ED' → logprob: -5.263490200042725
    9. '_count' → logprob: -5.388490200042725
    10. '_NUM' → logprob: -6.638490200042725

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17593631148338318
    2. '100' → logprob: -2.175936222076416
    3. '10' → logprob: -3.175936222076416
    4. '1' → logprob: -6.675936222076416
    5. '5' → logprob: -6.800936222076416
    6. '20' → logprob: -6.925936222076416
    7. '3' → logprob: -7.550936222076416
    8. '50' → logprob: -8.300936698913574
    9. '255' → logprob: -8.300936698913574
    10. '2' → logprob: -8.425936698913574

Token 14: '400' (ID: 4812)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2597576677799225
    2. '10' → logprob: -1.7597576379776
    3. '5' → logprob: -4.8847575187683105
    4. ' ' → logprob: -4.8847575187683105
    5. '999' → logprob: -4.8847575187683105
    6. '1' → logprob: -5.2597575187683105
    7. '20' → logprob: -5.3847575187683105
    8. '3' → logprob: -5.3847575187683105
    9. '50' → logprob: -5.7597575187683105
    10. 'sys' → logprob: -6.2597575187683105

Token 15: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7644868493080139
    2. '_' → logprob: -1.2644867897033691
    3. ' ' → logprob: -2.014486789703369
    4. '' → logprob: -3.389486789703369
    5. ' 
' → logprob: -3.764486789703369
    6. '#' → logprob: -4.014486789703369
    7. '0' → logprob: -4.264486789703369
    8. '_
' → logprob: -4.889486789703369
    9. '\n' → logprob: -5.514486789703369
    10. '<|end|>' → logprob: -5.514486789703369

Token 16: 'print' (ID: 1598)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8342656493186951
    2. '
' → logprob: -1.0842657089233398
    3. '#' → logprob: -2.20926570892334
    4. ' ' → logprob: -2.95926570892334
    5. '\n' → logprob: -4.45926570892334
    6. ' 
' → logprob: -4.45926570892334
    7. '' → logprob: -4.95926570892334
    8. '\' → logprob: -4.95926570892334
    9. '=' → logprob: -5.45926570892334
    10. ',' → logprob: -5.45926570892334

Token 17: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.7159857786027715e-05
    2. '('' → logprob: -10.375046730041504
    3. ' (' → logprob: -11.625046730041504
    4. '("("' → logprob: -12.750046730041504
    5. '()' → logprob: -13.750046730041504
    6. '("")' → logprob: -14.625046730041504
    7. '(
' → logprob: -14.625046730041504
    8. '("""' → logprob: -14.875046730041504
    9. ' ' → logprob: -15.125046730041504
    10. '(`' → logprob: -15.250046730041504

Token 18: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4855676591396332
    2. '(' → logprob: -0.9855676889419556
    3. '(t' → logprob: -4.485567569732666
    4. '()' → logprob: -10.110568046569824
    5. ')t' → logprob: -10.860568046569824
    6. ' t' → logprob: -10.985568046569824
    7. '`t' → logprob: -11.610568046569824
    8. ')' → logprob: -11.860568046569824
    9. 'tn' → logprob: -11.860568046569824
    10. '_t' → logprob: -12.110568046569824

Token 19: ' lambda' (ID: 27871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10699643939733505
    2. 'lambda' → logprob: -2.356996536254883
    3. ' lambda' → logprob: -5.231996536254883
    4. '(lambda' → logprob: -7.356996536254883
    5. 'len' → logprob: -7.856996536254883
    6. ' print' → logprob: -8.606996536254883
    7. '(print' → logprob: -9.731996536254883
    8. '0' → logprob: -9.856996536254883
    9. 'int' → logprob: -10.106996536254883
    10. 'sys' → logprob: -11.106996536254883

Token 20: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3835003674030304
    2. ' s' → logprob: -1.508500337600708
    3. 'x' → logprob: -3.008500337600708
    4. ' ' → logprob: -4.008500576019287
    5. ' n' → logprob: -4.258500576019287
    6. 's' → logprob: -4.883500576019287
    7. ' f' → logprob: -6.633500576019287
    8. ' lambda' → logprob: -6.633500576019287
    9. ' (' → logprob: -7.383500576019287
    10. 'n' → logprob: -7.508500576019287

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03728768602013588
    2. ' x' → logprob: -4.162287712097168
    3. ' :' → logprob: -4.287287712097168
    4. ':x' → logprob: -5.162287712097168
    5. 'print' → logprob: -7.037287712097168
    6. 'x' → logprob: -7.787287712097168
    7. ' print' → logprob: -8.912287712097168
    8. '(x' → logprob: -10.037287712097168
    9. ',' → logprob: -10.162287712097168
    10. ',x' → logprob: -11.162287712097168

Token 22: ' sys' (ID: 12228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4654410779476166
    2. ' sys' → logprob: -1.715441107749939
    3. ' print' → logprob: -1.840441107749939
    4. 'sys' → logprob: -4.2154412269592285
    5. ' x' → logprob: -4.8404412269592285
    6. ' str' → logprob: -5.7154412269592285
    7. ' f' → logprob: -6.0904412269592285
    8. 'x' → logprob: -6.2154412269592285
    9. 'str' → logprob: -6.2154412269592285
    10. ' None' → logprob: -7.9654412269592285

Token 23: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.000157293034135364
    2. '.stderr' → logprob: -9.250157356262207
    3. '.' → logprob: -10.250157356262207
    4. '.stdin' → logprob: -11.375157356262207
    5. '.exit' → logprob: -11.500157356262207
    6. '.print' → logprob: -13.000157356262207
    7. '.write' → logprob: -14.625157356262207
    8. '.out' → logprob: -14.875157356262207
    9. '.argv' → logprob: -15.000157356262207
    10. '.setdefault' → logprob: -15.500157356262207

Token 24: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00030114251421764493
    2. '.' → logprob: -8.125301361083984
    3. '.flush' → logprob: -12.500301361083984
    4. 'write' → logprob: -14.750301361083984
    5. '.w' → logprob: -15.125301361083984
    6. '.readline' → logprob: -15.250301361083984
    7. ' .' → logprob: -15.625301361083984
    8. '.Write' → logprob: -16.125301361083984
    9. '.print' → logprob: -16.125301361083984
    10. ' write' → logprob: -17.250301361083984

Token 25: '(x' (ID: 4061)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0022398277651518583
    2. 'str' → logprob: -7.25223970413208
    3. '(f' → logprob: -7.25223970413208
    4. '(' → logprob: -7.75223970413208
    5. '(x' → logprob: -7.87723970413208
    6. ' str' → logprob: -12.002240180969238
    7. 'f' → logprob: -13.127240180969238
    8. '(chr' → logprob: -13.877240180969238
    9. '(bytes' → logprob: -14.252240180969238
    10. '=str' → logprob: -15.127240180969238

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002931558701675385
    2. '+' → logprob: -8.500292778015137
    3. ')+' → logprob: -10.375292778015137
    4. ' )' → logprob: -10.875292778015137
    5. '+)' → logprob: -11.375292778015137
    6. '[' → logprob: -11.625292778015137
    7. ' +' → logprob: -12.500292778015137
    8. '))' → logprob: -12.625292778015137
    9. ')
' → logprob: -13.750292778015137
    10. ')}}' → logprob: -14.000292778015137

Token 27: 'inn' (ID: 3148)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.362323522567749
    2. '.' → logprob: -1.737323522567749
    3. ')' → logprob: -2.737323522567749
    4. '\n' → logprob: -4.112323760986328
    5. '+' → logprob: -4.737323760986328
    6. '\' → logprob: -4.987323760986328
    7. '(
' → logprob: -4.987323760986328
    8. '\(' → logprob: -5.362323760986328
    9. '
' → logprob: -5.487323760986328
    10. '#' → logprob: -5.737323760986328

Token 28: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.28443118929862976
    2. 'put' → logprob: -1.4094312191009521
    3. 'et' → logprob: -7.284430980682373
    4. 'er' → logprob: -7.409430980682373
    5. 'it' → logprob: -7.659430980682373
    6. 'u' → logprob: -8.159431457519531
    7. 't' → logprob: -8.409431457519531
    8. 'e' → logprob: -8.659431457519531
    9. 'p' → logprob: -8.784431457519531
    10. '=input' → logprob: -8.909431457519531

Token 29: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25888076424598694
    2. 'put' → logprob: -1.8838807344436646
    3. 'input' → logprob: -2.633880853652954
    4. ' lambda' → logprob: -6.633880615234375
    5. ' sys' → logprob: -7.133880615234375
    6. ' put' → logprob: -7.258880615234375
    7. '=input' → logprob: -8.008880615234375
    8. ' ' → logprob: -8.133880615234375
    9. 'lambda' → logprob: -8.758880615234375
    10. 'puts' → logprob: -9.133880615234375

Token 30: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7053964138031006
    2. ':' → logprob: -1.4553964138031006
    3. ' input' → logprob: -1.7053964138031006
    4. ' :' → logprob: -2.5803964138031006
    5. 'input' → logprob: -5.58039665222168
    6. ' ' → logprob: -5.70539665222168
    7. ' s' → logprob: -5.95539665222168
    8. 'x' → logprob: -6.08039665222168
    9. 's' → logprob: -7.83039665222168
    10. ':int' → logprob: -8.33039665222168

Token 31: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6551124453544617
    2. 'input' → logprob: -0.7801124453544617
    3. ' sys' → logprob: -4.155112266540527
    4. 'sys' → logprob: -5.030112266540527
    5. 'int' → logprob: -10.655112266540527
    6. ' ' → logprob: -12.405112266540527
    7. 'str' → logprob: -13.030112266540527
    8. ' int' → logprob: -13.155112266540527
    9. 'raw' → logprob: -13.655112266540527
    10. '	input' → logprob: -13.655112266540527

Token 32: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5183123350143433
    2. '(' → logprob: -1.0183123350143433
    3. '(sys' → logprob: -3.143312454223633
    4. 'input' → logprob: -9.768312454223633
    5. '(
' → logprob: -11.018312454223633
    6. '(stdin' → logprob: -11.393312454223633
    7. ' (' → logprob: -11.643312454223633
    8. '(raw' → logprob: -11.643312454223633
    9. '((' → logprob: -11.893312454223633
    10. '()' → logprob: -12.268312454223633

Token 33: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009406239725649357
    2. '()))' → logprob: -4.884406089782715
    3. '()' → logprob: -6.384406089782715
    4. ' ())' → logprob: -9.384406089782715
    5. '().' → logprob: -11.634406089782715
    6. '(' → logprob: -12.634406089782715
    7. '())
' → logprob: -12.759406089782715
    8. ')' → logprob: -12.884406089782715
    9. '());' → logprob: -12.884406089782715
    10. '();)' → logprob: -13.384406089782715

Token 34: 'in' (ID: 258)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5243384838104248
    2. '<|end|>' → logprob: -2.149338483810425
    3. '(' → logprob: -2.649338483810425
    4. '\n' → logprob: -2.774338483810425
    5. ')' → logprob: -3.649338483810425
    6. '+' → logprob: -4.024338722229004
    7. ' ' → logprob: -4.024338722229004
    8. '

' → logprob: -4.274338722229004
    9. '\' → logprob: -4.524338722229004
    10. '#' → logprob: -4.649338722229004

Token 35: 'l' (ID: 75)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.252416729927063
    2. 'put' → logprob: -1.502416729927063
    3. 'p' → logprob: -8.127416610717773
    4. '()' → logprob: -9.752416610717773
    5. 'n' → logprob: -9.877416610717773
    6. 'puts' → logprob: -10.752416610717773
    7. 'pt' → logprob: -11.252416610717773
    8. 'ut' → logprob: -11.252416610717773
    9. 'it' → logprob: -12.377416610717773
    10. 'nt' → logprob: -12.752416610717773

Token 36: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.047164797782898
    2. 'ist' → logprob: -1.297164797782898
    3. 'ine' → logprob: -1.672164797782898
    4. '=' → logprob: -1.922164797782898
    5. ' =' → logprob: -3.2971649169921875
    6. 'n' → logprob: -7.5471649169921875
    7. 'st' → logprob: -7.5471649169921875
    8. 't' → logprob: -7.7971649169921875
    9. 'ambda' → logprob: -8.047164916992188
    10. 'is' → logprob: -8.172164916992188

Token 37: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6811351776123047
    2. 'lambda' → logprob: -1.6811351776123047
    3. ' list' → logprob: -2.4311351776123047
    4. '(lambda' → logprob: -2.6811351776123047
    5. 'ambda' → logprob: -2.9311351776123047
    6. 'list' → logprob: -3.0561351776123047
    7. '()' → logprob: -3.9311351776123047
    8. 'ist' → logprob: -4.806135177612305
    9. '().' → logprob: -5.181135177612305
    10. 's' → logprob: -5.681135177612305

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0044336779974401
    2. ':list' → logprob: -6.129433631896973
    3. ' list' → logprob: -7.004433631896973
    4. ' :' → logprob: -7.879433631896973
    5. '():' → logprob: -8.004433631896973
    6. ' lambda' → logprob: -8.379433631896973
    7. 'str' → logprob: -9.754433631896973
    8. 'list' → logprob: -9.879433631896973
    9. 'lambda' → logprob: -9.879433631896973
    10. ':str' → logprob: -9.879433631896973

Token 39: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7263060808181763
    2. 'input' → logprob: -0.9763060808181763
    3. ' list' → logprob: -2.4763059616088867
    4. 'list' → logprob: -2.9763059616088867
    5. '[input' → logprob: -5.851305961608887
    6. 'map' → logprob: -7.601305961608887
    7. '[' → logprob: -7.726305961608887
    8. ' map' → logprob: -7.851305961608887
    9. ' [' → logprob: -8.976305961608887
    10. ' sys' → logprob: -9.976305961608887

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00020866614067927003
    2. '(' → logprob: -8.500208854675293
    3. ' map' → logprob: -13.125208854675293
    4. '(input' → logprob: -13.875208854675293
    5. '(int' → logprob: -14.000208854675293
    6. '	map' → logprob: -14.375208854675293
    7. 'map' → logprob: -15.000208854675293
    8. ' (' → logprob: -16.000207901000977
    9. '()' → logprob: -16.875207901000977
    10. '(eval' → logprob: -16.875207901000977

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00023643692838959396
    2. 'int' → logprob: -8.625236511230469
    3. '(' → logprob: -11.000236511230469
    4. ' int' → logprob: -11.250236511230469
    5. '(str' → logprob: -11.250236511230469
    6. ',int' → logprob: -12.250236511230469
    7. '=int' → logprob: -12.750236511230469
    8. '<int' → logprob: -12.875236511230469
    9. '[int' → logprob: -13.000236511230469
    10. ' (' → logprob: -14.875236511230469

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6016601324081421
    2. ',input' → logprob: -0.9766601324081421
    3. '(input' → logprob: -2.9766602516174316
    4. 'input' → logprob: -4.101660251617432
    5. ' ,' → logprob: -5.726660251617432
    6. ')' → logprob: -6.351660251617432
    7. ' input' → logprob: -6.476660251617432
    8. '(' → logprob: -7.101660251617432
    9. ' (' → logprob: -8.351659774780273
    10. '))' → logprob: -9.101659774780273

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20144608616828918
    2. ' input' → logprob: -1.7014460563659668
    3. '(input' → logprob: -10.951446533203125
    4. ',input' → logprob: -12.576446533203125
    5. '	input' → logprob: -12.701446533203125
    6. ' ' → logprob: -12.826446533203125
    7. '=input' → logprob: -13.076446533203125
    8. '<input' → logprob: -13.076446533203125
    9. ')' → logprob: -14.826446533203125
    10. 'sys' → logprob: -15.076446533203125

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002997120900545269
    2. '()' → logprob: -8.250299453735352
    3. '.' → logprob: -11.500299453735352
    4. ' ().' → logprob: -11.500299453735352
    5. '(' → logprob: -12.000299453735352
    6. ')' → logprob: -12.250299453735352
    7. ' .' → logprob: -12.875299453735352
    8. '.split' → logprob: -13.500299453735352
    9. 'split' → logprob: -13.875299453735352
    10. ' ' → logprob: -14.750299453735352

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023627905175089836
    2. 'strip' → logprob: -3.773627996444702
    3. 'rstrip' → logprob: -7.898627758026123
    4. ' split' → logprob: -11.648628234863281
    5. '(split' → logprob: -14.148628234863281
    6. 'spl' → logprob: -14.273628234863281
    7. ' strip' → logprob: -15.023628234863281
    8. ')' → logprob: -15.148628234863281
    9. 'read' → logprob: -16.52362823486328
    10. 'plit' → logprob: -16.89862823486328

Token 46: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23085011541843414
    2. '))' → logprob: -1.605850100517273
    3. '()' → logprob: -5.4808502197265625
    4. '())' → logprob: -7.1058502197265625
    5. '()))
' → logprob: -8.230850219726562
    6. ')' → logprob: -9.355850219726562
    7. '(' → logprob: -10.105850219726562
    8. ')))' → logprob: -11.605850219726562
    9. '()));' → logprob: -11.855850219726562
    10. ' ))' → logprob: -12.105850219726562

Token 47: 'in' (ID: 258)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3259494304656982
    2. '
' → logprob: -1.5759494304656982
    3. 'def' → logprob: -1.5759494304656982
    4. '#' → logprob: -2.3259494304656982
    5. 'for' → logprob: -2.8259494304656982
    6. '<|end|>' → logprob: -3.2009494304656982
    7. '\' → logprob: -3.5759494304656982
    8. 'n' → logprob: -3.5759494304656982
    9. '```' → logprob: -4.075949668884277
    10. '' → logprob: -4.825949668884277

Token 48: 'm' (ID: 76)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.031185954809188843
    2. 'p' → logprob: -3.6561858654022217
    3. 's' → logprob: -5.656186103820801
    4. 'l' → logprob: -7.156186103820801
    5. 'put' → logprob: -7.906186103820801
    6. 'a' → logprob: -9.0311861038208
    7. 'n' → logprob: -10.5311861038208
    8. 'puts' → logprob: -11.0311861038208
    9. 'd' → logprob: -11.1561861038208
    10. 'e' → logprob: -11.4061861038208

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3357606530189514
    2. 'ap' → logprob: -1.7107605934143066
    3. '=' → logprob: -2.5857605934143066
    4. '=lambda' → logprob: -4.335760593414307
    5. 'a' → logprob: -4.960760593414307
    6. 'ult' → logprob: -5.210760593414307
    7. 'ulti' → logprob: -7.335760593414307
    8. 'ut' → logprob: -7.710760593414307
    9. 'u' → logprob: -7.710760593414307
    10. 'atrix' → logprob: -7.960760593414307

Token 50: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.063311219215393
    2. ' map' → logprob: -1.438311219215393
    3. ' lambda' → logprob: -1.438311219215393
    4. 'map' → logprob: -2.0633111000061035
    5. '(lambda' → logprob: -3.5633111000061035
    6. 'list' → logprob: -4.8133111000061035
    7. 'int' → logprob: -5.1883111000061035
    8. ' list' → logprob: -5.1883111000061035
    9. '(map' → logprob: -6.5633111000061035
    10. ' str' → logprob: -7.9383111000061035

Token 51: ':' (ID: 25)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1481703519821167
    2. ' list' → logprob: -1.2731703519821167
    3. ':' → logprob: -1.7731703519821167
    4. 'lambda' → logprob: -2.0231704711914062
    5. ' map' → logprob: -3.5231704711914062
    6. ' lambda' → logprob: -3.5231704711914062
    7. 'map' → logprob: -4.273170471191406
    8. ':list' → logprob: -4.898170471191406
    9. '(lambda' → logprob: -5.398170471191406
    10. 'int' → logprob: -5.523170471191406

Token 52: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8055227398872375
    2. 'map' → logprob: -1.4305226802825928
    3. '[input' → logprob: -2.0555226802825928
    4. 'input' → logprob: -2.9305226802825928
    5. 'list' → logprob: -3.0555226802825928
    6. ' input' → logprob: -3.0555226802825928
    7. ' list' → logprob: -3.9305226802825928
    8. ' [' → logprob: -4.805522918701172
    9. '[' → logprob: -5.680522918701172
    10. '[str' → logprob: -6.555522918701172

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.9040898880339228e-05
    2. 'int' → logprob: -10.875028610229492
    3. '(str' → logprob: -12.625028610229492
    4. '(' → logprob: -12.750028610229492
    5. '<int' → logprob: -13.375028610229492
    6. '=int' → logprob: -13.500028610229492
    7. '(lambda' → logprob: -15.000028610229492
    8. ' int' → logprob: -15.375028610229492
    9. '<|end|>' → logprob: -16.000028610229492
    10. '[int' → logprob: -16.125028610229492

Token 54: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10546141862869263
    2. ',' → logprob: -2.980461359024048
    3. ',input' → logprob: -3.230461359024048
    4. '(' → logprob: -5.105461597442627
    5. ' (' → logprob: -6.230461597442627
    6. ')' → logprob: -6.855461597442627
    7. 'input' → logprob: -7.730461597442627
    8. ' ,' → logprob: -9.230461120605469
    9. ' input' → logprob: -9.230461120605469
    10. '=input' → logprob: -10.230461120605469

Token 55: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759603977203369
    2. ' input' → logprob: -0.8259603977203369
    3. ' ' → logprob: -11.325960159301758
    4. ')' → logprob: -12.950960159301758
    5. '(input' → logprob: -12.950960159301758
    6. '	input' → logprob: -13.450960159301758
    7. ',input' → logprob: -14.075960159301758
    8. '=input' → logprob: -14.200960159301758
    9. '  ' → logprob: -15.325960159301758
    10. ' )' → logprob: -15.575960159301758

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.666993507067673e-05
    2. '()' → logprob: -10.375036239624023
    3. ' ().' → logprob: -12.500036239624023
    4. '.' → logprob: -13.625036239624023
    5. '(' → logprob: -15.750036239624023
    6. '.split' → logprob: -16.000036239624023
    7. ' .' → logprob: -16.250036239624023
    8. ' ' → logprob: -17.125036239624023
    9. ')' → logprob: -17.500036239624023
    10. ').' → logprob: -17.875036239624023

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.8351892473874614e-05
    2. ' split' → logprob: -10.250048637390137
    3. 'strip' → logprob: -11.375048637390137
    4. ')' → logprob: -14.625048637390137
    5. '(split' → logprob: -14.625048637390137
    6. 'plit' → logprob: -15.125048637390137
    7. 'spl' → logprob: -15.875048637390137
    8. 'rstrip' → logprob: -16.25004768371582
    9. '.split' → logprob: -16.87504768371582
    10. '_split' → logprob: -17.75004768371582

Token 58: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6005265116691589
    2. ')' → logprob: -0.8505265116691589
    3. '()' → logprob: -3.9755265712738037
    4. '))' → logprob: -5.350526332855225
    5. '()))' → logprob: -7.350526332855225
    6. '())
' → logprob: -9.225526809692383
    7. ')
' → logprob: -11.850526809692383
    8. '()
' → logprob: -12.100526809692383
    9. ')))' → logprob: -12.600526809692383
    10. ' ())' → logprob: -12.850526809692383

Token 59: 'dd' (ID: 1183)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0721357986330986
    2. '#' → logprob: -3.9471356868743896
    3. 'for' → logprob: -3.9471356868743896
    4. 'n' → logprob: -5.322135925292969
    5. 'd' → logprob: -5.322135925292969
    6. '\' → logprob: -5.697135925292969
    7. ' ' → logprob: -5.697135925292969
    8. ')' → logprob: -6.572135925292969
    9. 'D' → logprob: -6.947135925292969
    10. 'a' → logprob: -7.072135925292969

Token 60: 'print' (ID: 1598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3011845350265503
    2. ' =' → logprob: -1.4261845350265503
    3. 'ict' → logprob: -1.8011845350265503
    4. 'i' → logprob: -2.05118465423584
    5. '{' → logprob: -3.80118465423584
    6. '={' → logprob: -4.05118465423584
    7. '[' → logprob: -4.05118465423584
    8. 'e' → logprob: -4.17618465423584
    9. ' ' → logprob: -4.30118465423584
    10. 'ic' → logprob: -4.55118465423584

Token 61: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010771531378850341
    2. 'f' → logprob: -10.250107765197754
    3. '('' → logprob: -11.375107765197754
    4. '()' → logprob: -11.500107765197754
    5. '("' → logprob: -12.000107765197754
    6. '(f' → logprob: -12.125107765197754
    7. '(Debug' → logprob: -12.500107765197754
    8. '(`' → logprob: -12.750107765197754
    9. 'v' → logprob: -12.750107765197754
    10. ' (' → logprob: -12.875107765197754

Token 62: ' lambda' (ID: 27871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8699215054512024
    2. 'print' → logprob: -1.2449214458465576
    3. 'lambda' → logprob: -1.3699214458465576
    4. ' lambda' → logprob: -3.7449214458465576
    5. '(' → logprob: -5.244921684265137
    6. '(print' → logprob: -5.494921684265137
    7. ' print' → logprob: -5.744921684265137
    8. ' (' → logprob: -5.994921684265137
    9. ' ' → logprob: -9.619921684265137
    10. 'debug' → logprob: -9.744921684265137

Token 63: ' x' (ID: 1215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7827462553977966
    2. 'lambda' → logprob: -1.6577463150024414
    3. '(lambda' → logprob: -2.1577463150024414
    4. ':' → logprob: -2.1577463150024414
    5. '(' → logprob: -3.0327463150024414
    6. '*' → logprob: -4.032746315002441
    7. 'x' → logprob: -4.532746315002441
    8. ' ' → logprob: -4.782746315002441
    9. ' lambda' → logprob: -4.907746315002441
    10. 'debug' → logprob: -5.157746315002441

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029034199193120003
    2. '(x' → logprob: -4.27903413772583
    3. '(' → logprob: -4.52903413772583
    4. ' :' → logprob: -6.27903413772583
    5. '(print' → logprob: -7.02903413772583
    6. 'print' → logprob: -7.77903413772583
    7. ':x' → logprob: -8.529034614562988
    8. '=' → logprob: -9.654034614562988
    9. '(sys' → logprob: -9.779034614562988
    10. ',' → logprob: -9.779034614562988

Token 65: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09243110567331314
    2. ' print' → logprob: -3.34243106842041
    3. 'sys' → logprob: -3.96743106842041
    4. ' sys' → logprob: -4.46743106842041
    5. '(print' → logprob: -4.96743106842041
    6. 'None' → logprob: -5.09243106842041
    7. '(sys' → logprob: -5.34243106842041
    8. ' None' → logprob: -5.96743106842041
    9. 'x' → logprob: -7.46743106842041
    10. ' (' → logprob: -7.71743106842041

Token 66: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02853383682668209
    2. 'sys' → logprob: -4.028533935546875
    3. ' print' → logprob: -5.028533935546875
    4. ' sys' → logprob: -6.278533935546875
    5. 'None' → logprob: -6.778533935546875
    6. '(print' → logprob: -7.778533935546875
    7. ' None' → logprob: -8.778533935546875
    8. '(sys' → logprob: -9.278533935546875
    9. ' ' → logprob: -10.903533935546875
    10. 'x' → logprob: -11.403533935546875

Token 67: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004562207497656345
    2. '(' → logprob: -6.3795623779296875
    3. '(f' → logprob: -6.5045623779296875
    4. ')' → logprob: -7.8795623779296875
    5. '()' → logprob: -8.379562377929688
    6. '(*' → logprob: -9.004562377929688
    7. '((' → logprob: -9.004562377929688
    8. ')(' → logprob: -9.129562377929688
    9. ' if' → logprob: -9.504562377929688
    10. '([' → logprob: -9.629562377929688

Token 68: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001830410328693688
    2. ' )' → logprob: -9.12518310546875
    3. ',' → logprob: -10.00018310546875
    4. '))' → logprob: -11.00018310546875
    5. ' if' → logprob: -12.12518310546875
    6. ',)' → logprob: -13.00018310546875
    7. 'if' → logprob: -13.37518310546875
    8. ' ,' → logprob: -14.50018310546875
    9. '")' → logprob: -14.87518310546875
    10. '),' → logprob: -15.00018310546875

Token 69: ' sys' (ID: 12228)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4574050307273865
    2. 'None' → logprob: -2.3324050903320312
    3. ' x' → logprob: -2.4574050903320312
    4. ' None' → logprob: -2.4574050903320312
    5. 'exit' → logprob: -3.4574050903320312
    6. 'sys' → logprob: -4.082405090332031
    7. ' sys' → logprob: -4.457405090332031
    8. 'False' → logprob: -4.457405090332031
    9. ')' → logprob: -4.832405090332031
    10. 'print' → logprob: -5.207405090332031

Token 70: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.000356199947418645
    2. '.stderr' → logprob: -8.000356674194336
    3. 'stdout' → logprob: -10.875356674194336
    4. '.exit' → logprob: -13.500356674194336
    5. '.stdin' → logprob: -16.000356674194336
    6. '.' → logprob: -16.375356674194336
    7. '```' → logprob: -16.625356674194336
    8. '.std' → logprob: -17.000356674194336
    9. 'out' → logprob: -17.500356674194336
    10. '_stdout' → logprob: -17.750356674194336

Token 71: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.0015324745327234268
    2. '.' → logprob: -6.501532554626465
    3. '.write' → logprob: -10.876532554626465
    4. 'flush' → logprob: -12.251532554626465
    5. ' .' → logprob: -12.376532554626465
    6. '.Flush' → logprob: -14.376532554626465
    7. ').' → logprob: -14.626532554626465
    8. ' flush' → logprob: -14.876532554626465
    9. '_flush' → logprob: -15.001532554626465
    10. '.readline' → logprob: -15.126532554626465

Token 72: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003315192414447665
    2. '())[' → logprob: -6.253314971923828
    3. '()' → logprob: -7.003314971923828
    4. ')' → logprob: -7.878314971923828
    5. '()[' → logprob: -9.628314971923828
    6. ' ())' → logprob: -11.003314971923828
    7. '())
' → logprob: -11.753314971923828
    8. '();)' → logprob: -13.003314971923828
    9. '());' → logprob: -13.128314971923828
    10. '(),' → logprob: -13.628314971923828

Token 73: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7744364142417908
    2. 'if' → logprob: -1.6494364738464355
    3. ' if' → logprob: -1.8994364738464355
    4. '<|end|>' → logprob: -2.3994364738464355
    5. ')' → logprob: -2.6494364738464355
    6. '\n' → logprob: -4.8994364738464355
    7. ';' → logprob: -5.5244364738464355
    8. 'print' → logprob: -5.5244364738464355
    9. '#' → logprob: -5.6494364738464355
    10. '
' → logprob: -5.7744364738464355

Token 74: ' DBG' (ID: 100080)
  Prédit: 'DBG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DBG' → logprob: -0.3137730658054352
    2. ' DBG' → logprob: -1.3137730360031128
    3. '(DB' → logprob: -8.063773155212402
    4. '	DBG' → logprob: -9.438773155212402
    5. 'DB' → logprob: -9.688773155212402
    6. 'Dbg' → logprob: -11.063773155212402
    7. '_DBG' → logprob: -11.313773155212402
    8. ' ' → logprob: -11.813773155212402
    9. ' dbg' → logprob: -12.438773155212402
    10. 'dbg' → logprob: -12.563773155212402

Token 75: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00045033416245132685
    2. 'else' → logprob: -7.875450134277344
    3. ' and' → logprob: -9.625450134277344
    4. ' ' → logprob: -12.500450134277344
    5. 'and' → logprob: -15.375450134277344
    6. '  ' → logprob: -15.875450134277344
    7. '	else' → logprob: -16.500450134277344
    8. '    ' → logprob: -17.500450134277344
    9. ' ' → logprob: -17.500450134277344
    10. ' elif' → logprob: -17.750450134277344

Token 76: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.07040262222290039
    2. 'None' → logprob: -2.6954026222229004
    3. ' lambda' → logprob: -8.445402145385742
    4. '...' → logprob: -9.070402145385742
    5. '(None' → logprob: -9.945402145385742
    6. ' ' → logprob: -10.570402145385742
    7. '0' → logprob: -10.820402145385742
    8. ' ...' → logprob: -11.445402145385742
    9. 'lambda' → logprob: -11.445402145385742
    10. ' pass' → logprob: -11.820402145385742

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'dd' (ID: 1183)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5006627440452576
    2. ' ' → logprob: -2.1256628036499023
    3. 'def' → logprob: -2.5006628036499023
    4. '(' → logprob: -3.0006628036499023
    5. 'd' → logprob: -3.5006628036499023
    6. ')' → logprob: -4.000662803649902
    7. ' 
' → logprob: -4.000662803649902
    8. '
' → logprob: -4.250662803649902
    9. '<|end|>' → logprob: -4.625662803649902
    10. '\' → logprob: -5.125662803649902

Token 79: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8670179997570813e-05
    2. 'p' → logprob: -11.750019073486328
    3. '.' → logprob: -12.250019073486328
    4. '.print' → logprob: -12.750019073486328
    5. '_print' → logprob: -13.125019073486328
    6. 'pr' → logprob: -14.500019073486328
    7. 'printf' → logprob: -15.875019073486328
    8. 'prints' → logprob: -16.500019073486328
    9. 'println' → logprob: -16.500019073486328
    10. ' print' → logprob: -17.250019073486328

Token 80: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008000272326171398
    2. '<|end|>' → logprob: -4.883000373840332
    3. ' (' → logprob: -9.133000373840332
    4. '(
' → logprob: -9.508000373840332
    5. '((' → logprob: -9.633000373840332
    6. '('' → logprob: -10.508000373840332
    7. '(None' → logprob: -10.758000373840332
    8. '<|end|>' → logprob: -11.258000373840332
    9. '(True' → logprob: -11.383000373840332
    10. '("("' → logprob: -11.383000373840332

Token 81: 'start' (ID: 5236)
  Prédit: 'Debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Debug' → logprob: -1.1353423595428467
    2. 'Start' → logprob: -1.5103423595428467
    3. 'Starting' → logprob: -1.7603423595428467
    4. 'Hello' → logprob: -2.2603423595428467
    5. 'start' → logprob: -2.8853423595428467
    6. 'Ready' → logprob: -4.260342597961426
    7. 'DEBUG' → logprob: -4.510342597961426
    8. '")' → logprob: -4.635342597961426
    9. 'Test' → logprob: -4.635342597961426
    10. 'Code' → logprob: -4.760342597961426

Token 82: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0008651299867779016
    2. ')' → logprob: -7.3758649826049805
    3. ')")' → logprob: -8.62586498260498
    4. '!")' → logprob: -10.25086498260498
    5. '")
' → logprob: -11.75086498260498
    6. '()' → logprob: -12.12586498260498
    7. '...' → logprob: -12.37586498260498
    8. '")

' → logprob: -14.25086498260498
    9. ' ")' → logprob: -14.37586498260498
    10. '"' → logprob: -14.37586498260498

Token 83: 'V' (ID: 53)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0600663423538208
    2. '#' → logprob: -1.4350663423538208
    3. 'def' → logprob: -1.6850663423538208
    4. 'n' → logprob: -2.5600662231445312
    5. ' ' → logprob: -2.6850662231445312
    6. 'a' → logprob: -4.435066223144531
    7. 'x' → logprob: -4.560066223144531
    8. 'i' → logprob: -4.560066223144531
    9. 'd' → logprob: -4.935066223144531
    10. 's' → logprob: -5.060066223144531

Token 84: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5404383540153503
    2. '=' → logprob: -0.9154383540153503
    3. 'is' → logprob: -4.790438175201416
    4. ',' → logprob: -5.165438175201416
    5. 'IS' → logprob: -6.790438175201416
    6. 'isit' → logprob: -7.540438175201416
    7. '=int' → logprob: -8.040438652038574
    8. 'ALUE' → logprob: -8.290438652038574
    9. 'I' → logprob: -8.915438652038574
    10. 'E' → logprob: -9.290438652038574

Token 85: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.01705726608633995
    2. ' E' → logprob: -4.267057418823242
    3. 'N' → logprob: -7.267057418823242
    4. ' ' → logprob: -7.892057418823242
    5. 'Q' → logprob: -8.267057418823242
    6. 'n' → logprob: -8.267057418823242
    7. 'e' → logprob: -8.392057418823242
    8. 'W' → logprob: -9.017057418823242
    9. 'M' → logprob: -9.142057418823242
    10. '<|end|>' → logprob: -9.267057418823242

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868820369243622
    2. '=' → logprob: -1.1368820667266846
    3. ',' → logprob: -11.761881828308105
    4. '=input' → logprob: -13.761881828308105
    5. '=int' → logprob: -15.011881828308105
    6. ' ' → logprob: -15.136881828308105
    7. '＝' → logprob: -15.261881828308105
    8. '=

' → logprob: -15.761881828308105
    9. '=end' → logprob: -15.886881828308105
    10. ')' → logprob: -16.011882781982422

Token 87: ' inm' (ID: 25357)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3204302191734314
    2. ' inm' → logprob: -1.6954302787780762
    3. ' in' → logprob: -2.445430278778076
    4. ' map' → logprob: -6.195430278778076
    5. ' ' → logprob: -7.445430278778076
    6. 'map' → logprob: -7.820430278778076
    7. ' ' → logprob: -8.570429801940918
    8. 'inn' → logprob: -8.695429801940918
    9. ' list' → logprob: -9.507929801940918
    10. ' imm' → logprob: -9.945429801940918

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -10.375060081481934
    3. '()
' → logprob: -11.125060081481934
    4. ' ()' → logprob: -11.625060081481934
    5. '();' → logprob: -13.125060081481934
    6. '()

' → logprob: -14.125060081481934
    7. '(),' → logprob: -14.750060081481934
    8. '())' → logprob: -15.375060081481934
    9. '()\' → logprob: -15.375060081481934
    10. '()]' → logprob: -15.500060081481934

Token 89: 'es' (ID: 268)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08823850750923157
    2. '\n' → logprob: -2.963238477706909
    3. '<|end|>' → logprob: -3.588238477706909
    4. ' 
' → logprob: -6.088238716125488
    5. '
' → logprob: -6.963238716125488
    6. '' → logprob: -7.463238716125488
    7. ' ' → logprob: -8.088238716125488
    8. '  
' → logprob: -8.588238716125488
    9. 'newline' → logprob: -8.588238716125488
    10. '

' → logprob: -8.588238716125488

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5300070643424988
    2. '=' → logprob: -1.5300071239471436
    3. 't' → logprob: -1.6550071239471436
    4. 'ts' → logprob: -6.4050068855285645
    5. '=[]' → logprob: -7.4050068855285645
    6. 'et' → logprob: -8.155007362365723
    7. '=[' → logprob: -8.280007362365723
    8. '```' → logprob: -8.780007362365723
    9. 'g' → logprob: -9.405007362365723
    10. 'd' → logprob: -9.655007362365723

Token 91: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12337859719991684
    2. '[]' → logprob: -2.2483785152435303
    3. '[list' → logprob: -5.498378753662109
    4. ' [' → logprob: -5.873378753662109
    5. '[in' → logprob: -6.623378753662109
    6. ' []' → logprob: -6.873378753662109
    7. '[int' → logprob: -8.49837875366211
    8. '[(' → logprob: -8.87337875366211
    9. '[i' → logprob: -9.12337875366211
    10. '[line' → logprob: -9.62337875366211

Token 92: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026679806411266327
    2. ' for' → logprob: -3.651679754257202
    3. '<|end|>' → logprob: -8.651679992675781
    4. '
' → logprob: -9.276679992675781
    5. '\n' → logprob: -9.401679992675781
    6. ' 
' → logprob: -11.651679992675781
    7. '[' → logprob: -11.901679992675781
    8. '	for' → logprob: -13.151679992675781
    9. ' ' → logprob: -13.151679992675781
    10. 'range' → logprob: -13.776679992675781

Token 93: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20198537409305573
    2. '_' → logprob: -1.7019853591918945
    3. ' ' → logprob: -7.8269853591918945
    4. ' i' → logprob: -8.701985359191895
    5. ' ' → logprob: -12.451985359191895
    6. '_i' → logprob: -13.326985359191895
    7. 'i' → logprob: -13.826985359191895
    8. ' ‌' → logprob: -16.32698631286621
    9. ' _
' → logprob: -16.32698631286621
    10. ' ​' → logprob: -17.32698631286621

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12932559847831726
    2. 'in' → logprob: -2.1293256282806396
    3. ' ' → logprob: -6.2543253898620605
    4. '_' → logprob: -8.004325866699219
    5. 'n' → logprob: -9.254325866699219
    6. ' _' → logprob: -11.629325866699219
    7. '	in' → logprob: -11.629325866699219
    8. '  ' → logprob: -11.879325866699219
    9. 'range' → logprob: -12.379325866699219
    10. ' n' → logprob: -12.629325866699219

Token 95: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3870272934436798
    2. ' range' → logprob: -1.1370272636413574
    3. ' ' → logprob: -9.512027740478516
    4. '	range' → logprob: -9.637027740478516
    5. 'rang' → logprob: -12.762027740478516
    6. '  ' → logprob: -13.012027740478516
    7. ' xrange' → logprob: -13.262027740478516
    8. 'ran' → logprob: -13.387027740478516
    9. '(range' → logprob: -13.387027740478516
    10. 'in' → logprob: -13.387027740478516

Token 96: '(V' (ID: 16949)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.010730377398431301
    2. '(' → logprob: -4.635730266571045
    3. '(V' → logprob: -7.135730266571045
    4. ' (' → logprob: -8.885730743408203
    5. ' E' → logprob: -10.885730743408203
    6. 'E' → logprob: -11.510730743408203
    7. '(
' → logprob: -12.885730743408203
    8. ' ' → logprob: -13.260730743408203
    9. '	E' → logprob: -13.885730743408203
    10. '(int' → logprob: -14.135730743408203

Token 97: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005246329586952925
    2. '):
' → logprob: -5.380246162414551
    3. ' ):' → logprob: -7.755246162414551
    4. ')' → logprob: -8.88024616241455
    5. '+' → logprob: -10.13024616241455
    6. '-' → logprob: -12.00524616241455
    7. ':' → logprob: -12.63024616241455
    8. '):
' → logprob: -12.75524616241455
    9. ' ):
' → logprob: -13.13024616241455
    10. ' ' → logprob: -14.25524616241455

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044767096638679504
    2. ' ' → logprob: -3.294767141342163
    3. 'E' → logprob: -5.419766902923584
    4. ' E' → logprob: -6.294766902923584
    5. '2' → logprob: -9.419767379760742
    6. ')' → logprob: -9.919767379760742
    7. '5' → logprob: -9.919767379760742
    8. '0' → logprob: -10.044767379760742
    9. '+' → logprob: -10.294767379760742
    10. '6' → logprob: -10.419767379760742

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013860702747479081
    2. ' ):' → logprob: -7.3763861656188965
    3. '):
' → logprob: -7.5013861656188965
    4. ')' → logprob: -9.251385688781738
    5. ':' → logprob: -9.251385688781738
    6. ',' → logprob: -12.376385688781738
    7. '+' → logprob: -13.126385688781738
    8. '():' → logprob: -13.626385688781738
    9. ']:' → logprob: -13.751385688781738
    10. '):
' → logprob: -13.876385688781738

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2559211254119873
    2. ' es' → logprob: -2.1309211254119873
    3. 'es' → logprob: -2.2559211254119873
    4. '	es' → logprob: -7.005921363830566
    5. ' ' → logprob: -7.130921363830566
    6. '  ' → logprob: -9.005921363830566
    7. '   ' → logprob: -9.380921363830566
    8. '<|end|>' → logprob: -9.380921363830566
    9. '    ' → logprob: -9.880921363830566
    10. ' ' → logprob: -10.505921363830566

Token 101: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.2422488033771515
    2. ' es' → logprob: -1.742248773574829
    3. '   ' → logprob: -3.242248773574829
    4. '	es' → logprob: -7.492249011993408
    5. ' ' → logprob: -8.74224853515625
    6. '  ' → logprob: -10.74224853515625
    7. 's' → logprob: -10.80474853515625
    8. '[]' → logprob: -10.86724853515625
    9. 'e' → logprob: -11.05474853515625
    10. '    ' → logprob: -11.17974853515625

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013286912580952048
    2. '.' → logprob: -6.626328468322754
    3. '.app' → logprob: -13.501328468322754
    4. 'append' → logprob: -14.501328468322754
    5. '.Append' → logprob: -15.501328468322754
    6. ' .' → logprob: -15.626328468322754
    7. '.ap' → logprob: -16.12632942199707
    8. '<|end|>' → logprob: -16.37632942199707
    9. '.setdefault' → logprob: -16.50132942199707
    10. '.extend' → logprob: -16.50132942199707

Token 103: '([])
' (ID: 91082)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.0037049429956823587
    2. '[]' → logprob: -5.753705024719238
    3. '(' → logprob: -7.628705024719238
    4. '([])
' → logprob: -10.128705024719238
    5. '([' → logprob: -15.003705024719238
    6. '([],' → logprob: -15.253705024719238
    7. ' []' → logprob: -15.628705024719238
    8. '(set' → logprob: -16.878704071044922
    9. '({' → logprob: -16.878704071044922
    10. '((' → logprob: -17.128704071044922

Token 104: 'dist' (ID: 24126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.265458881855011
    2. '<|end|>' → logprob: -2.015458822250366
    3. ' for' → logprob: -2.390458822250366
    4. 'visited' → logprob: -5.765459060668945
    5. 'edges' → logprob: -6.515459060668945
    6. 'es' → logprob: -7.015459060668945
    7. 'print' → logprob: -8.640459060668945
    8. '```' → logprob: -8.765459060668945
    9. 'distance' → logprob: -8.890459060668945
    10. ' 
' → logprob: -8.890459060668945

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010002202354371548
    2. '=' → logprob: -4.635002136230469
    3. '[' → logprob: -8.885002136230469
    4. '=[' → logprob: -10.385002136230469
    5. 's' → logprob: -11.010002136230469
    6. ' =[' → logprob: -11.385002136230469
    7. ' ' → logprob: -11.510002136230469
    8. 'ances' → logprob: -12.135002136230469
    9. '[]' → logprob: -12.385002136230469
    10. ',' → logprob: -12.510002136230469

Token 106: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03871387615799904
    2. '[-' → logprob: -3.5387139320373535
    3. '[V' → logprob: -5.5387139320373535
    4. ' [' → logprob: -5.9137139320373535
    5. '[int' → logprob: -6.2887139320373535
    6. ' [-' → logprob: -9.163713455200195
    7. '[max' → logprob: -9.163713455200195
    8. '[i' → logprob: -9.288713455200195
    9. '[MAX' → logprob: -10.413713455200195
    10. '[in' → logprob: -10.788713455200195

Token 107: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011558275582501665
    2. 'INF' → logprob: -9.750115394592285
    3. ' for' → logprob: -10.125115394592285
    4. '[' → logprob: -12.125115394592285
    5. 'inf' → logprob: -13.000115394592285
    6. 'dist' → logprob: -13.125115394592285
    7. 'distance' → logprob: -14.250115394592285
    8. '[]' → logprob: -14.500115394592285
    9. '0' → logprob: -14.500115394592285
    10. 'from' → logprob: -14.625115394592285

Token 108: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.539200484752655
    2. 'i' → logprob: -1.4142005443572998
    3. ' i' → logprob: -1.9142005443572998
    4. ' _' → logprob: -4.039200305938721
    5. ' in' → logprob: -5.539200305938721
    6. '_i' → logprob: -5.539200305938721
    7. 'in' → logprob: -8.164200782775879
    8. ' ' → logprob: -8.289200782775879
    9. 'v' → logprob: -10.039200782775879
    10. 'range' → logprob: -10.039200782775879

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602766215801239
    2. 'in' → logprob: -1.9102766513824463
    3. ' ' → logprob: -10.535276412963867
    4. 'range' → logprob: -10.910276412963867
    5. ' range' → logprob: -12.910276412963867
    6. 'n' → logprob: -13.660276412963867
    7. '<|end|>' → logprob: -13.785276412963867
    8. '  ' → logprob: -14.535276412963867
    9. '_' → logprob: -14.660276412963867
    10. '	in' → logprob: -14.785276412963867

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048651184886693954
    2. ' range' → logprob: -3.0486512184143066
    3. '(range' → logprob: -9.798650741577148
    4. ' ' → logprob: -13.173650741577148
    5. '	range' → logprob: -13.298650741577148
    6. '   ' → logprob: -13.673650741577148
    7. 'ange' → logprob: -14.173650741577148
    8. '  ' → logprob: -14.173650741577148
    9. 'in' → logprob: -14.548650741577148
    10. 'rang' → logprob: -14.923650741577148

Token 111: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0012453512754291296
    2. '(' → logprob: -6.751245498657227
    3. '(E' → logprob: -10.376245498657227
    4. '((' → logprob: -10.751245498657227
    5. '(range' → logprob: -12.501245498657227
    6. 'V' → logprob: -12.626245498657227
    7. '(
' → logprob: -12.876245498657227
    8. '(D' → logprob: -13.001245498657227
    9. '(i' → logprob: -13.626245498657227
    10. 'range' → logprob: -13.626245498657227

Token 112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002585978072602302
    2. ' +' → logprob: -9.125258445739746
    3. '):' → logprob: -9.625258445739746
    4. '):
' → logprob: -9.750258445739746
    5. ')' → logprob: -11.875258445739746
    6. '+
' → logprob: -12.375258445739746
    7. '1' → logprob: -12.875258445739746
    8. ':' → logprob: -13.687758445739746
    9. '   ' → logprob: -13.812758445739746
    10. '):

' → logprob: -14.062758445739746

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7888184528565034e-05
    2. ' ' → logprob: -10.8750581741333
    3. '   ' → logprob: -11.3750581741333
    4. '2' → logprob: -11.6250581741333
    5. '(' → logprob: -12.3750581741333
    6. ')' → logprob: -12.6875581741333
    7. 'range' → logprob: -13.0625581741333
    8. '+' → logprob: -13.3750581741333
    9. '10' → logprob: -14.5625581741333
    10. '0' → logprob: -14.6250581741333

Token 114: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4780765473842621
    2. '):' → logprob: -0.9780765771865845
    3. ':' → logprob: -5.728076457977295
    4. ':
' → logprob: -8.103076934814453
    5. ')' → logprob: -8.603076934814453
    6. '):
' → logprob: -9.103076934814453
    7. ' ):
' → logprob: -10.103076934814453
    8. '():
' → logprob: -10.603076934814453
    9. ' ):' → logprob: -10.728076934814453
    10. ',' → logprob: -10.978076934814453

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020639756694436073
    2. 'dist' → logprob: -4.145639896392822
    3. ' dist' → logprob: -5.395639896392822
    4. '	dist' → logprob: -10.020639419555664
    5. '_dist' → logprob: -12.895639419555664
    6. 'Dist' → logprob: -12.895639419555664
    7. '(dist' → logprob: -13.020639419555664
    8. '  ' → logprob: -13.270639419555664
    9. '       ' → logprob: -13.770639419555664
    10. ' ' → logprob: -14.020639419555664

Token 116: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.018865302205085754
    2. ' dist' → logprob: -4.01886510848999
    3. '   ' → logprob: -7.26886510848999
    4. '	dist' → logprob: -11.518865585327148
    5. ' ' → logprob: -12.393865585327148
    6. '  ' → logprob: -13.518865585327148
    7. 'd' → logprob: -14.393865585327148
    8. 'es' → logprob: -15.018865585327148
    9. '```' → logprob: -15.643865585327148
    10. 'Dist' → logprob: -15.643865585327148

Token 117: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015397422248497605
    2. '.' → logprob: -6.501539707183838
    3. ' .' → logprob: -10.251540184020996
    4. '.app' → logprob: -14.626540184020996
    5. '.extend' → logprob: -14.626540184020996
    6. 'append' → logprob: -14.751540184020996
    7. '=' → logprob: -15.001540184020996
    8. '.ap' → logprob: -15.251540184020996
    9. '.=' → logprob: -16.87653923034668
    10. ' =' → logprob: -17.12653923034668

Token 118: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.0594537258148193
    2. '(float' → logprob: -1.0594537258148193
    3. '(' → logprob: -1.4344537258148193
    4. '([]' → logprob: -3.4344537258148193
    5. '(-' → logprob: -3.9344537258148193
    6. '([-' → logprob: -4.809453964233398
    7. '(None' → logprob: -6.184453964233398
    8. 'float' → logprob: -6.309453964233398
    9. '(int' → logprob: -6.684453964233398
    10. '(sys' → logprob: -6.809453964233398

Token 119: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0095536708831787
    2. 'float' → logprob: -1.1345536708831787
    3. '-' → logprob: -2.0095536708831787
    4. '0' → logprob: -2.7595536708831787
    5. '999' → logprob: -3.0095536708831787
    6. '100' → logprob: -3.3845536708831787
    7. 'False' → logprob: -4.634553909301758
    8. '1' → logprob: -4.759553909301758
    9. 'int' → logprob: -4.884553909301758
    10. '987' → logprob: -6.009553909301758

Token 120: '9' (ID: 24)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.00987307634204626
    2. '99' → logprob: -4.634872913360596
    3. '9' → logprob: -9.134873390197754
    4. '998' → logprob: -12.759873390197754
    5. '_' → logprob: -12.884873390197754
    6. ']' → logprob: -13.259873390197754
    7. '997' → logprob: -14.759873390197754
    8. '])' → logprob: -14.884873390197754
    9. '987' → logprob: -15.009873390197754
    10. '995' → logprob: -16.009872436523438

Token 121: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04404393956065178
    2. ']*' → logprob: -3.919044017791748
    3. ' ]' → logprob: -4.794044017791748
    4. '9' → logprob: -4.919044017791748
    5. ' for' → logprob: -5.544044017791748
    6. '])' → logprob: -6.669044017791748
    7. '999' → logprob: -6.794044017791748
    8. ',' → logprob: -7.294044017791748
    9. ']+' → logprob: -8.66904354095459
    10. ']*(' → logprob: -8.91904354095459

Token 122: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.009222825057804585
    2. '(V' → logprob: -4.759222984313965
    3. ' V' → logprob: -7.884222984313965
    4. '   ' → logprob: -9.259222984313965
    5. ' (' → logprob: -9.634222984313965
    6. ' ' → logprob: -10.884222984313965
    7. '(' → logprob: -11.134222984313965
    8. '	V' → logprob: -12.259222984313965
    9. '1' → logprob: -12.384222984313965
    10. '100' → logprob: -12.634222984313965

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.514650183613412e-05
    2. ' +' → logprob: -9.875055313110352
    3. '+
' → logprob: -12.625055313110352
    4. '1' → logprob: -16.00005531311035
    5. '()+' → logprob: -17.25005531311035
    6. '+i' → logprob: -17.25005531311035
    7. '+)' → logprob: -17.37505531311035
    8. '＋' → logprob: -17.75005531311035
    9. ')+' → logprob: -17.87505531311035
    10. '+

' → logprob: -18.25005531311035

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '2' → logprob: -12.375012397766113
    3. ' ' → logprob: -12.375012397766113
    4. '+' → logprob: -13.625012397766113
    5. '6' → logprob: -14.625012397766113
    6. '```' → logprob: -14.750012397766113
    7. '   ' → logprob: -15.062512397766113
    8. '0' → logprob: -15.250012397766113
    9. '...' → logprob: -16.00001335144043
    10. ')' → logprob: -16.31251335144043

Token 125: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0022599254734814167
    2. ')' → logprob: -6.127259731292725
    3. '))
' → logprob: -9.877260208129883
    4. ' ))' → logprob: -11.002260208129883
    5. ')))' → logprob: -12.502260208129883
    6. '));' → logprob: -14.627260208129883
    7. ')
' → logprob: -14.752260208129883
    8. '))

' → logprob: -14.752260208129883
    9. '+' → logprob: -14.752260208129883
    10. '   ' → logprob: -14.877260208129883

Token 126: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3871139883995056
    2. 'dist' → logprob: -2.1371140480041504
    3. '<|end|>' → logprob: -2.1371140480041504
    4. ' for' → logprob: -2.6371140480041504
    5. ')' → logprob: -5.51211404800415
    6. ' ' → logprob: -6.76211404800415
    7. '#' → logprob: -6.88711404800415
    8. 'es' → logprob: -6.88711404800415
    9. ' 
' → logprob: -7.26211404800415
    10. 'd' → logprob: -7.38711404800415

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6412497162818909
    2. ' i' → logprob: -0.7662497162818909
    3. '_' → logprob: -6.641249656677246
    4. ' j' → logprob: -6.766249656677246
    5. ' u' → logprob: -6.891249656677246
    6. 'j' → logprob: -7.141249656677246
    7. 'u' → logprob: -7.141249656677246
    8. ' _' → logprob: -7.391249656677246
    9. 'e' → logprob: -7.516249656677246
    10. ' v' → logprob: -7.641249656677246

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09023534506559372
    2. 'in' → logprob: -2.4652352333068848
    3. 'range' → logprob: -7.340235233306885
    4. ' range' → logprob: -7.715235233306885
    5. ' ' → logprob: -8.840235710144043
    6. '_' → logprob: -11.090235710144043
    7. '  ' → logprob: -11.465235710144043
    8. 'n' → logprob: -11.965235710144043
    9. '   ' → logprob: -12.090235710144043
    10. ' _' → logprob: -12.590235710144043

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16037075221538544
    2. ' range' → logprob: -1.9103707075119019
    3. 'in' → logprob: -9.285370826721191
    4. ' in' → logprob: -10.785370826721191
    5. ' ' → logprob: -11.910370826721191
    6. 'r' → logprob: -11.910370826721191
    7. 'E' → logprob: -12.535370826721191
    8. 'rang' → logprob: -12.910370826721191
    9. 'ran' → logprob: -13.410370826721191
    10. '  ' → logprob: -13.410370826721191

Token 130: '(V' (ID: 16949)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.06145147234201431
    2. ' range' → logprob: -3.1864514350891113
    3. 'range' → logprob: -4.311451435089111
    4. '(' → logprob: -6.061451435089111
    5. '(range' → logprob: -6.311451435089111
    6. 'E' → logprob: -7.936451435089111
    7. ' E' → logprob: -8.68645191192627
    8. ' (' → logprob: -8.93645191192627
    9. ' in' → logprob: -10.81145191192627
    10. 'Range' → logprob: -10.93645191192627

Token 131: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02308601699769497
    2. '):' → logprob: -3.8980860710144043
    3. '):
' → logprob: -6.273086071014404
    4. 'E' → logprob: -8.148085594177246
    5. ' +' → logprob: -9.273085594177246
    6. '1' → logprob: -9.648085594177246
    7. '+
' → logprob: -9.648085594177246
    8. ')' → logprob: -9.898085594177246
    9. ':' → logprob: -11.523085594177246
    10. '   ' → logprob: -11.648085594177246

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025742328725755215
    2. 'E' → logprob: -6.002574443817139
    3. ' ' → logprob: -10.12757396697998
    4. 'i' → logprob: -11.12757396697998
    5. ')' → logprob: -11.37757396697998
    6. '0' → logprob: -11.62757396697998
    7. '2' → logprob: -11.75257396697998
    8. ' E' → logprob: -12.25257396697998
    9. '
' → logprob: -13.50257396697998
    10. '```' → logprob: -13.81507396697998

Token 133: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048647549003362656
    2. '):' → logprob: -3.04864764213562
    3. '):
' → logprob: -10.6736478805542
    4. '):

' → logprob: -11.6736478805542
    5. '   ' → logprob: -11.7986478805542
    6. ':' → logprob: -11.7986478805542
    7. ':
' → logprob: -12.5486478805542
    8. ' ):
' → logprob: -12.5486478805542
    9. ')' → logprob: -12.7986478805542
    10. '[' → logprob: -13.5486478805542

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009088276885449886
    2. 'dist' → logprob: -5.009088039398193
    3. ' dist' → logprob: -6.384088039398193
    4. '	dist' → logprob: -7.384088039398193
    5. ' for' → logprob: -10.634088516235352
    6. 'Dist' → logprob: -11.384088516235352
    7. '(dist' → logprob: -11.634088516235352
    8. 'for' → logprob: -12.009088516235352
    9. '_dist' → logprob: -12.759088516235352
    10. '   ' → logprob: -13.134088516235352

Token 135: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.035225432366132736
    2. ' dist' → logprob: -3.7852253913879395
    3. 'for' → logprob: -5.0352253913879395
    4. '   ' → logprob: -5.4102253913879395
    5. ' for' → logprob: -7.0352253913879395
    6. '	dist' → logprob: -10.785225868225098
    7. ' ' → logprob: -10.910225868225098
    8. '  ' → logprob: -11.910225868225098
    9. 'print' → logprob: -13.660225868225098
    10. '    ' → logprob: -13.910225868225098

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018542143516242504
    2. '[' → logprob: -8.625185012817383
    3. '[I' → logprob: -13.000185012817383
    4. '```' → logprob: -14.000185012817383
    5. '.append' → logprob: -14.125185012817383
    6. '][' → logprob: -14.625185012817383
    7. ' [' → logprob: -14.750185012817383
    8. '\[' → logprob: -15.125185012817383
    9. ')[' → logprob: -15.625185012817383
    10. 'i' → logprob: -16.000185012817383

Token 137: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16263823211193085
    2. '[i' → logprob: -1.9126381874084473
    3. '[' → logprob: -6.662638187408447
    4. ')[' → logprob: -6.912638187408447
    5. ']' → logprob: -10.162638664245605
    6. ' ][' → logprob: -10.412638664245605
    7. '[I' → logprob: -10.537638664245605
    8. ')' → logprob: -11.287638664245605
    9. ' [' → logprob: -11.787638664245605
    10. '   ' → logprob: -12.162638664245605

Token 138: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.008129963040119e-06
    2. ' i' → logprob: -12.500003814697266
    3. ']' → logprob: -16.125003814697266
    4. '   ' → logprob: -17.125003814697266
    5. ' ' → logprob: -17.375003814697266
    6. '	i' → logprob: -17.750003814697266
    7. '0' → logprob: -17.875003814697266
    8. '_i' → logprob: -18.875003814697266
    9. ')' → logprob: -19.125003814697266
    10. '[i' → logprob: -19.625003814697266

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021526420023292303
    2. ']=' → logprob: -6.377152442932129
    3. '=' → logprob: -7.877152442932129
    4. ' ]' → logprob: -9.752152442932129
    5. ' =' → logprob: -11.377152442932129
    6. ')' → logprob: -14.002152442932129
    7. '[' → logprob: -16.002153396606445
    8. ' ' → logprob: -16.627153396606445
    9. ' ' → logprob: -17.002153396606445
    10. '   ' → logprob: -17.002153396606445

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '0' → logprob: -18.004077911376953
    4. ' ' → logprob: -18.629077911376953
    5. '＝' → logprob: -18.754077911376953
    6. '[' → logprob: -19.379077911376953
    7. '=int' → logprob: -19.629077911376953
    8. ']=' → logprob: -19.754077911376953
    9. '=}' → logprob: -19.754077911376953
    10. ']' → logprob: -19.879077911376953

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.87500762939453
    4. '۰' → logprob: -18.25000762939453
    5. '000' → logprob: -18.25000762939453
    6. ' ' → logprob: -18.75000762939453
    7. '  ' → logprob: -18.81250762939453
    8. '00' → logprob: -19.18750762939453
    9. '```' → logprob: -19.31250762939453
    10. '０' → logprob: -19.87500762939453

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '000' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '00' → logprob: -18.750001907348633
    6. '۰' → logprob: -18.750001907348633
    7. '  ' → logprob: -19.437501907348633
    8. '1' → logprob: -19.562501907348633
    9. ' ' → logprob: -19.687501907348633
    10. '٠' → logprob: -20.000001907348633

Token 143: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017038393765687943
    2. ' for' → logprob: -4.517038345336914
    3. '
' → logprob: -5.767038345336914
    4. '<|end|>' → logprob: -5.892038345336914
    5. '<|end|>' → logprob: -10.892038345336914
    6. ' 
' → logprob: -11.392038345336914
    7. '  
' → logprob: -11.517038345336914
    8. '```' → logprob: -11.892038345336914
    9. 'E' → logprob: -12.017038345336914
    10. '.' → logprob: -12.392038345336914

Token 144: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.702754474943504e-05
    2. ' for' → logprob: -10.25003719329834
    3. '
' → logprob: -14.37503719329834
    4. '```' → logprob: -14.37503719329834
    5. 'while' → logprob: -16.125036239624023
    6. 'print' → logprob: -16.500036239624023
    7. 'edges' → logprob: -16.750036239624023
    8. '	for' → logprob: -16.875036239624023
    9. '#' → logprob: -17.250036239624023
    10. '<|end|>' → logprob: -17.250036239624023

Token 145: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5038402676582336
    2. '_' → logprob: -1.0038402080535889
    3. ' i' → logprob: -4.003840446472168
    4. 'i' → logprob: -5.378840446472168
    5. '_i' → logprob: -5.753840446472168
    6. ' j' → logprob: -6.128840446472168
    7. ' ' → logprob: -7.628840446472168
    8. '_j' → logprob: -8.253840446472168
    9. 'j' → logprob: -8.753840446472168
    10. ' in' → logprob: -9.253840446472168

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4287939965724945
    2. 'in' → logprob: -1.053794026374817
    3. '_' → logprob: -9.803793907165527
    4. ' ' → logprob: -11.053793907165527
    5. 'range' → logprob: -11.178793907165527
    6. 'import' → logprob: -13.803793907165527
    7. '  ' → logprob: -13.928793907165527
    8. '   ' → logprob: -14.053793907165527
    9. 'to' → logprob: -14.178793907165527
    10. ' _' → logprob: -14.428793907165527

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975187823176384
    2. ' range' → logprob: -3.529751777648926
    3. 'in' → logprob: -14.029751777648926
    4. ' ' → logprob: -15.529751777648926
    5. '(range' → logprob: -16.154752731323242
    6. ' in' → logprob: -16.154752731323242
    7. '	range' → logprob: -16.404752731323242
    8. '  ' → logprob: -17.279752731323242
    9. 'E' → logprob: -18.029752731323242
    10. 'r' → logprob: -18.154752731323242

Token 148: '(E' (ID: 20882)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21341393887996674
    2. 'range' → logprob: -1.713413953781128
    3. '(E' → logprob: -4.588413715362549
    4. '(range' → logprob: -6.463413715362549
    5. '(' → logprob: -9.338414192199707
    6. ' in' → logprob: -10.213414192199707
    7. 'E' → logprob: -10.213414192199707
    8. ' E' → logprob: -10.838414192199707
    9. 'in' → logprob: -11.213414192199707
    10. ' (' → logprob: -12.713414192199707

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0069506303407251835
    2. '):
' → logprob: -5.006950855255127
    3. ' ):' → logprob: -8.506950378417969
    4. ')' → logprob: -10.881950378417969
    5. ':' → logprob: -11.756950378417969
    6. '):
' → logprob: -12.506950378417969
    7. '   ' → logprob: -14.131950378417969
    8. '():' → logprob: -14.381950378417969
    9. ' ):
' → logprob: -14.756950378417969
    10. ' ' → logprob: -15.381950378417969

Token 150: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0940113216638565
    2. '   ' → logprob: -2.9690113067626953
    3. 'a' → logprob: -3.4690113067626953
    4. ' u' → logprob: -5.219011306762695
    5. 's' → logprob: -6.969011306762695
    6. '	u' → logprob: -7.344011306762695
    7. ' a' → logprob: -9.594011306762695
    8. ' ' → logprob: -10.219011306762695
    9. 'v' → logprob: -10.969011306762695
    10. 'A' → logprob: -10.969011306762695

Token 151: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4942936301231384
    2. 'u' → logprob: -1.1192936897277832
    3. 's' → logprob: -3.119293689727783
    4. 'v' → logprob: -4.619293689727783
    5. 'f' → logprob: -4.869293689727783
    6. 'from' → logprob: -7.744293689727783
    7. 'frm' → logprob: -7.994293689727783
    8. 'x' → logprob: -8.119293212890625
    9. 'fr' → logprob: -8.744293212890625
    10. 'A' → logprob: -8.994293212890625

Token 152: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01832037977874279
    2. ',b' → logprob: -4.143320560455322
    3. ' ,' → logprob: -6.768320560455322
    4. 'b' → logprob: -6.893320560455322
    5. ' b' → logprob: -9.143320083618164
    6. ',v' → logprob: -13.018320083618164
    7. '_,' → logprob: -13.518320083618164
    8. ',B' → logprob: -13.768320083618164
    9. ',n' → logprob: -13.893320083618164
    10. 's' → logprob: -14.268320083618164

Token 153: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.7321906685829163
    2. ',' → logprob: -1.3571906089782715
    3. ',w' → logprob: -1.3571906089782715
    4. '=' → logprob: -6.6071906089782715
    5. ' =' → logprob: -6.8571906089782715
    6. ',v' → logprob: -7.8571906089782715
    7. ',d' → logprob: -7.8571906089782715
    8. ' ,' → logprob: -8.10719108581543
    9. ',l' → logprob: -8.60719108581543
    10. ',k' → logprob: -8.73219108581543

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018577374517917633
    2. ' =' → logprob: -4.018577575683594
    3. '=in' → logprob: -7.768577575683594
    4. '=input' → logprob: -13.143577575683594
    5. ',' → logprob: -14.143577575683594
    6. 'in' → logprob: -14.518577575683594
    7. '=

' → logprob: -14.768577575683594
    8. '＝' → logprob: -15.268577575683594
    9. '=line' → logprob: -15.643577575683594
    10. '=int' → logprob: -16.143577575683594

Token 155: ' inm' (ID: 25357)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0026273811236023903
    2. ' inm' → logprob: -6.002627372741699
    3. 'm' → logprob: -8.8776273727417
    4. ' in' → logprob: -12.0026273727417
    5. 'map' → logprob: -12.7526273727417
    6. 'im' → logprob: -13.7526273727417
    7. 'imm' → logprob: -13.8776273727417
    8. '	in' → logprob: -15.1276273727417
    9. 'list' → logprob: -15.5026273727417
    10. ' map' → logprob: -15.8776273727417

Token 156: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.333223139634356e-05
    2. '()
' → logprob: -10.375033378601074
    3. ')' → logprob: -14.375033378601074
    4. '(' → logprob: -14.625033378601074
    5. '())' → logprob: -15.125033378601074
    6. '();' → logprob: -15.375033378601074
    7. '()

' → logprob: -15.750033378601074
    8. '()]' → logprob: -16.000032424926758
    9. ' ()' → logprob: -16.125032424926758
    10. '()`' → logprob: -16.875032424926758

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047630956396460533
    2. 'dist' → logprob: -7.875476360321045
    3. ' es' → logprob: -10.000475883483887
    4. 'es' → logprob: -10.625475883483887
    5. ' dist' → logprob: -11.000475883483887
    6. '	dist' → logprob: -12.375475883483887
    7. '	es' → logprob: -13.625475883483887
    8. '    
' → logprob: -13.875475883483887
    9. '   ' → logprob: -14.250475883483887
    10. '  ' → logprob: -14.375475883483887

Token 158: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.001749434508383274
    2. ' es' → logprob: -6.751749515533447
    3. 'dist' → logprob: -7.501749515533447
    4. '   ' → logprob: -10.876749038696289
    5. '	es' → logprob: -12.501749038696289
    6. '-es' → logprob: -13.876749038696289
    7. ' dist' → logprob: -14.251749038696289
    8. '    
' → logprob: -14.501749038696289
    9. 'ed' → logprob: -14.626749038696289
    10. '_es' → logprob: -15.001749038696289

Token 159: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0003386806638445705
    2. '[b' → logprob: -8.000338554382324
    3. '[' → logprob: -13.375338554382324
    4. '[i' → logprob: -14.250338554382324
    5. 'a' → logprob: -14.875338554382324
    6. '[c' → logprob: -15.375338554382324
    7. ' [' → logprob: -15.375338554382324
    8. '   ' → logprob: -16.50033950805664
    9. '.append' → logprob: -17.37533950805664
    10. '```' → logprob: -17.62533950805664

Token 160: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0038599353283643723
    2. '.append' → logprob: -5.628859996795654
    3. ').' → logprob: -8.628859519958496
    4. ']' → logprob: -10.253859519958496
    5. '.' → logprob: -10.628859519958496
    6. ' ].' → logprob: -11.628859519958496
    7. '   ' → logprob: -12.003859519958496
    8. 'append' → logprob: -13.378859519958496
    9. '[' → logprob: -13.878859519958496
    10. ' .' → logprob: -14.003859519958496

Token 161: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.816093228830141e-06
    2. '.append' → logprob: -13.00000286102295
    3. ' append' → logprob: -14.50000286102295
    4. '_append' → logprob: -18.250001907348633
    5. 'Append' → logprob: -18.875001907348633
    6. '	append' → logprob: -18.875001907348633
    7. 'appen' → logprob: -19.000001907348633
    8. 'app' → logprob: -20.125001907348633
    9. '```' → logprob: -23.125001907348633
    10. ' ' → logprob: -23.500001907348633

Token 162: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0016625623684376478
    2. '(' → logprob: -6.501662731170654
    3. '(b' → logprob: -8.751662254333496
    4. '([' → logprob: -14.001662254333496
    5. '(c' → logprob: -14.251662254333496
    6. '(a' → logprob: -14.626662254333496
    7. '(
' → logprob: -17.501663208007812
    8. 'b' → logprob: -17.626663208007812
    9. '(i' → logprob: -17.876663208007812
    10. ' ((' → logprob: -18.001663208007812

Token 163: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.698698704596609e-05
    2. ' b' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.125097274780273
    4. ' ' → logprob: -17.125097274780273
    5. '  ' → logprob: -18.000097274780273
    6. '(b' → logprob: -18.125097274780273
    7. ')b' → logprob: -18.625097274780273
    8. '    ' → logprob: -18.750097274780273
    9. '	b' → logprob: -18.875097274780273
    10. ',b' → logprob: -19.500097274780273

Token 164: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31487658619880676
    2. ',c' → logprob: -1.3148765563964844
    3. ' ,' → logprob: -6.439876556396484
    4. 'c' → logprob: -11.689876556396484
    5. ',
' → logprob: -12.439876556396484
    6. '   ' → logprob: -13.564876556396484
    7. ' c' → logprob: -13.814876556396484
    8. ' ' → logprob: -14.939876556396484
    9. '	c' → logprob: -15.064876556396484
    10. '	' → logprob: -15.314876556396484

Token 165: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005134254228323698
    2. '))
' → logprob: -5.505134105682373
    3. ')' → logprob: -7.005134105682373
    4. ' ))' → logprob: -9.255134582519531
    5. ',' → logprob: -11.130134582519531
    6. ' ' → logprob: -11.380134582519531
    7. ')
' → logprob: -11.505134582519531
    8. '));' → logprob: -12.630134582519531
    9. ')))' → logprob: -12.630134582519531
    10. '   ' → logprob: -12.755134582519531

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0707535445690155
    2. 'dist' → logprob: -2.695753574371338
    3. ' dist' → logprob: -7.570753574371338
    4. '	dist' → logprob: -9.69575309753418
    5. 'for' → logprob: -10.44575309753418
    6. '<|end|>' → logprob: -10.57075309753418
    7. 'if' → logprob: -10.69575309753418
    8. '```' → logprob: -11.07075309753418
    9. '    
' → logprob: -11.57075309753418
    10. '[' → logprob: -11.57075309753418

Token 167: ' es' (ID: 878)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0030190644320100546
    2. 'es' (adapté à ' es') → logprob: -5.878018856048584
    3. '   ' → logprob: -9.378019332885742
    4. '#' → logprob: -9.628019332885742
    5. 'if' → logprob: -10.628019332885742
    6. 'c' → logprob: -11.378019332885742
    7. ' dist' → logprob: -11.628019332885742
    8. '	dist' → logprob: -12.503019332885742
    9. '  ' → logprob: -12.753019332885742
    10. ' ' → logprob: -12.753019332885742

Token 168: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0028191357851028442
    2. '[a' → logprob: -6.127819061279297
    3. 'b' → logprob: -7.752819061279297
    4. '][' → logprob: -9.377819061279297
    5. '[c' → logprob: -10.377819061279297
    6. ')[' → logprob: -10.502819061279297
    7. '[' → logprob: -10.752819061279297
    8. 'a' → logprob: -11.752819061279297
    9. '```' → logprob: -12.002819061279297
    10. '}[' → logprob: -12.627819061279297

Token 169: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002338144404347986
    2. ').' → logprob: -8.50023365020752
    3. '.' → logprob: -11.37523365020752
    4. ']' → logprob: -11.37523365020752
    5. '.append' → logprob: -12.75023365020752
    6. ' ].' → logprob: -13.12523365020752
    7. '][' → logprob: -13.75023365020752
    8. '[' → logprob: -14.37523365020752
    9. '}.' → logprob: -15.25023365020752
    10. ',' → logprob: -16.000234603881836

Token 170: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.2200749754119897e-06
    2. '.append' → logprob: -14.000001907348633
    3. 'appen' → logprob: -14.125001907348633
    4. ' append' → logprob: -14.750001907348633
    5. '	append' → logprob: -17.000001907348633
    6. 'app' → logprob: -17.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.125001907348633
    10. 'add' → logprob: -19.500001907348633

Token 171: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014059022068977356
    2. '(a' → logprob: -4.514059066772461
    3. ' (' → logprob: -5.889059066772461
    4. '(' → logprob: -8.514059066772461
    5. '(b' → logprob: -10.639059066772461
    6. ' ' → logprob: -12.014059066772461
    7. ' ((' → logprob: -12.764059066772461
    8. '   ' → logprob: -13.639059066772461
    9. '<|end|>' → logprob: -14.514059066772461
    10. '(c' → logprob: -15.014059066772461

Token 172: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014820865355432034
    2. '(a' → logprob: -4.2648210525512695
    3. ' a' → logprob: -7.5148210525512695
    4. ' (' → logprob: -10.01482105255127
    5. ',a' → logprob: -10.13982105255127
    6. 'c' → logprob: -11.13982105255127
    7. ',' → logprob: -12.88982105255127
    8. ')a' → logprob: -13.01482105255127
    9. '   ' → logprob: -13.38982105255127
    10. '[a' → logprob: -13.76482105255127

Token 173: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.009794455952942371
    2. ',' → logprob: -4.634794235229492
    3. ' ,' → logprob: -10.259794235229492
    4. 'c' → logprob: -13.009794235229492
    5. ',
' → logprob: -14.384794235229492
    6. ',b' → logprob: -15.134794235229492
    7. ',

' → logprob: -16.759794235229492
    8. '	c' → logprob: -17.259794235229492
    9. ',C' → logprob: -17.259794235229492
    10. ' c' → logprob: -17.384794235229492

Token 174: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0487201102077961
    2. ')' → logprob: -3.048720121383667
    3. '))
' → logprob: -9.298720359802246
    4. ')
' → logprob: -11.173720359802246
    5. ' ))' → logprob: -11.298720359802246
    6. ')))' → logprob: -12.298720359802246
    7. ' )' → logprob: -12.798720359802246
    8. '),' → logprob: -13.048720359802246
    9. '   ' → logprob: -13.548720359802246
    10. ',' → logprob: -13.673720359802246

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14606954157352448
    2. 'for' → logprob: -2.8960695266723633
    3. 'dist' → logprob: -3.1460695266723633
    4. '<|end|>' → logprob: -3.7710695266723633
    5. 'print' → logprob: -5.146069526672363
    6. ' for' → logprob: -5.396069526672363
    7. '#' → logprob: -6.521069526672363
    8. ')' → logprob: -7.271069526672363
    9. '```' → logprob: -7.271069526672363
    10. '...' → logprob: -7.646069526672363

Token 176: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.005134846083819866
    2. '   ' → logprob: -5.6301350593566895
    3. 'if' → logprob: -6.5051350593566895
    4. ' dist' → logprob: -10.630134582519531
    5. '```' → logprob: -12.755134582519531
    6. '	dist' → logprob: -12.755134582519531
    7. ' if' → logprob: -13.005134582519531
    8. '  ' → logprob: -14.130134582519531
    9. 'd' → logprob: -14.255134582519531
    10. '    
' → logprob: -14.505134582519531

Token 177: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.610702363715973e-06
    2. 'a' → logprob: -11.625009536743164
    3. '[b' → logprob: -15.250009536743164
    4. '[' → logprob: -15.375009536743164
    5. '[i' → logprob: -17.625009536743164
    6. '[c' → logprob: -17.625009536743164
    7. '[A' → logprob: -18.000009536743164
    8. '```' → logprob: -18.250009536743164
    9. '[u' → logprob: -18.500009536743164
    10. '[int' → logprob: -18.625009536743164

Token 178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.79811754100956e-05
    2. ']' → logprob: -11.000038146972656
    3. '[b' → logprob: -11.250038146972656
    4. ' ][' → logprob: -12.500038146972656
    5. ')[' → logprob: -13.750038146972656
    6. '[' → logprob: -14.375038146972656
    7. ')][' → logprob: -14.500038146972656
    8. ']][' → logprob: -14.750038146972656
    9. 'b' → logprob: -14.875038146972656
    10. '   ' → logprob: -15.125038146972656

Token 179: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -16.0
    3. '][' → logprob: -16.0
    4. ']' → logprob: -16.125
    5. ' b' → logprob: -16.875
    6. '[b' → logprob: -17.25
    7. '	b' → logprob: -17.5
    8. ' ' → logprob: -18.5
    9. ')b' → logprob: -18.875
    10. '   ' → logprob: -19.125

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22588568925857544
    2. '=' → logprob: -2.3508856296539307
    3. ')' → logprob: -2.6008856296539307
    4. ']=' → logprob: -3.6008856296539307
    5. ' =' → logprob: -5.72588586807251
    6. ')=' → logprob: -6.47588586807251
    7. ' ]' → logprob: -8.350885391235352
    8. '=c' → logprob: -9.100885391235352
    9. ' )' → logprob: -9.350885391235352
    10. 'c' → logprob: -9.475885391235352

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023924946784973
    2. ' =' → logprob: -1.9102392196655273
    3. '=c' → logprob: -11.160239219665527
    4. 'c' → logprob: -14.285239219665527
    5. '[' → logprob: -16.035240173339844
    6. '=cut' → logprob: -16.910240173339844
    7. '=C' → logprob: -17.035240173339844
    8. '=
' → logprob: -17.535240173339844
    9. ')' → logprob: -17.660240173339844
    10. ' ' → logprob: -17.785240173339844

Token 182: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005536287208087742
    2. ' c' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.500554084777832
    4. '	c' → logprob: -15.750554084777832
    5. ' ' → logprob: -16.875553131103516
    6. 'min' → logprob: -17.750553131103516
    7. '<|end|>' → logprob: -17.750553131103516
    8. '  ' → logprob: -18.250553131103516
    9. '
' → logprob: -19.125553131103516
    10. ')c' → logprob: -19.250553131103516

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14899468421936035
    2. 'dist' → logprob: -2.0239946842193604
    3. ' dist' → logprob: -5.398994445800781
    4. '
' → logprob: -7.398994445800781
    5. '	dist' → logprob: -7.523994445800781
    6. '<|end|>' → logprob: -7.898994445800781
    7. '    
' → logprob: -8.898994445800781
    8. '(dist' → logprob: -10.398994445800781
    9. '.dist' → logprob: -10.648994445800781
    10. '  ' → logprob: -10.773994445800781

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1603962481021881
    2. 'dist' → logprob: -1.9103962182998657
    3. ' dist' → logprob: -9.035396575927734
    4. '	dist' → logprob: -11.035396575927734
    5. '```' → logprob: -11.035396575927734
    6. '
' → logprob: -12.160396575927734
    7. '.dist' → logprob: -12.410396575927734
    8. '(dist' → logprob: -13.035396575927734
    9. 'Dist' → logprob: -13.535396575927734
    10. '    
' → logprob: -13.785396575927734

Token 185: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -13.000003814697266
    3. ' dist' → logprob: -13.250003814697266
    4. '	dist' → logprob: -18.250003814697266
    5. '.dist' → logprob: -21.375003814697266
    6. '_dist' → logprob: -21.750003814697266
    7. '(dist' → logprob: -21.750003814697266
    8. 'Dist' → logprob: -21.750003814697266
    9. '```' → logprob: -22.125003814697266
    10. 'c' → logprob: -22.500003814697266

Token 186: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.3120038501219824e-05
    2. '][' → logprob: -10.625053405761719
    3. 'b' → logprob: -11.125053405761719
    4. '[' → logprob: -12.375053405761719
    5. '[a' → logprob: -12.375053405761719
    6. '}[' → logprob: -13.125053405761719
    7. '[c' → logprob: -13.250053405761719
    8. '```' → logprob: -14.125053405761719
    9. '[i' → logprob: -14.750053405761719
    10. ')[' → logprob: -15.500053405761719

Token 187: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007700824644416571
    2. '[a' → logprob: -7.500770092010498
    3. ']' → logprob: -9.50076961517334
    4. '[b' → logprob: -9.75076961517334
    5. '[c' → logprob: -10.00076961517334
    6. ')[' → logprob: -11.37576961517334
    7. ' ][' → logprob: -11.50076961517334
    8. '   ' → logprob: -12.12576961517334
    9. '[' → logprob: -12.25076961517334
    10. '}[' → logprob: -13.50076961517334

Token 188: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.865583706414327e-05
    2. ' a' → logprob: -9.62509822845459
    3. 'c' → logprob: -10.37509822845459
    4. '   ' → logprob: -14.12509822845459
    5. '[a' → logprob: -14.50009822845459
    6. '	a' → logprob: -17.250099182128906
    7. ' c' → logprob: -17.375099182128906
    8. ' ' → logprob: -18.000099182128906
    9. ']' → logprob: -18.375099182128906
    10. '[' → logprob: -18.625099182128906

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14732007682323456
    2. '=' → logprob: -2.772320032119751
    3. ')' → logprob: -3.397320032119751
    4. ' =' → logprob: -3.522320032119751
    5. ' ]' → logprob: -4.64732027053833
    6. ' )' → logprob: -6.77232027053833
    7. ']=' → logprob: -7.39732027053833
    8. '])' → logprob: -10.022319793701172
    9. ')]' → logprob: -10.522319793701172
    10. ')=' → logprob: -11.272319793701172

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889298349618912
    2. ' =' → logprob: -2.578892946243286
    3. '=c' → logprob: -12.703892707824707
    4. ')' → logprob: -15.828892707824707
    5. ' ' → logprob: -16.953893661499023
    6. ']' → logprob: -17.453893661499023
    7. '＝' → logprob: -17.453893661499023
    8. 'c' → logprob: -17.703893661499023
    9. '=
' → logprob: -17.703893661499023
    10. ')=' → logprob: -17.703893661499023

Token 191: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006267757853493094
    2. ' c' → logprob: -7.375626564025879
    3. '   ' → logprob: -15.500626564025879
    4. '	c' → logprob: -17.125627517700195
    5. ' ' → logprob: -18.750627517700195
    6. ')c' → logprob: -19.000627517700195
    7. '<|end|>' → logprob: -19.250627517700195
    8. '```' → logprob: -20.125627517700195
    9. '*c' → logprob: -20.875627517700195
    10. '  ' → logprob: -20.875627517700195

Token 192: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027682865038514137
    2. ' for' → logprob: -9.125276565551758
    3. '
' → logprob: -9.250276565551758
    4. '<|end|>' → logprob: -10.500276565551758
    5. '#' → logprob: -11.000276565551758
    6. 'while' → logprob: -11.750276565551758
    7. 'import' → logprob: -12.625276565551758
    8. 'from' → logprob: -12.625276565551758
    9. '```' → logprob: -12.750276565551758
    10. 'print' → logprob: -13.000276565551758

Token 193: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016587569552939385
    2. ' for' → logprob: -9.125165939331055
    3. 'import' → logprob: -11.375165939331055
    4. 'from' → logprob: -11.625165939331055
    5. 'while' → logprob: -11.875165939331055
    6. 'dp' → logprob: -12.125165939331055
    7. '#' → logprob: -12.250165939331055
    8. 'i' → logprob: -13.125165939331055
    9. 'def' → logprob: -13.125165939331055
    10. '```' → logprob: -13.125165939331055

Token 194: ' DBG' (ID: 100080)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.06470680981874466
    2. 'V' → logprob: -4.064706802368164
    3. ' DBG' → logprob: -4.064706802368164
    4. ' not' → logprob: -4.439706802368164
    5. ' __' → logprob: -5.064706802368164
    6. ' ' → logprob: -5.564706802368164
    7. ' MAX' → logprob: -5.814706802368164
    8. ' True' → logprob: -7.314706802368164
    9. 'not' → logprob: -7.439706802368164
    10. '__' → logprob: -7.689706802368164

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014545287936925888
    2. ' :' → logprob: -4.264545440673828
    3. ':
' → logprob: -8.139545440673828
    4. ' ==' → logprob: -9.639545440673828
    5. '==' → logprob: -11.264545440673828
    6. ' and' → logprob: -12.264545440673828
    7. ' :
' → logprob: -12.639545440673828
    8. 'print' → logprob: -14.264545440673828
    9. ':

' → logprob: -14.514545440673828
    10. ' print' → logprob: -15.264545440673828

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032993439584970474
    2. ' print' → logprob: -3.6579935550689697
    3. ' for' → logprob: -5.532993316650391
    4. '	print' → logprob: -7.032993316650391
    5. 'print' → logprob: -7.157993316650391
    6. ' sys' → logprob: -7.907993316650391
    7. 'for' → logprob: -9.15799331665039
    8. '   ' → logprob: -9.15799331665039
    9. '	sys' → logprob: -9.40799331665039
    10. '    ' → logprob: -9.65799331665039

Token 197: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6757217645645142
    2. 'for' (adapté à ' for') → logprob: -0.9257217645645142
    3. 'dd' → logprob: -2.4257216453552246
    4. ' for' → logprob: -5.550721645355225
    5. '   ' → logprob: -6.425721645355225
    6. ' print' → logprob: -7.425721645355225
    7. ' dd' → logprob: -7.800721645355225
    8. 'sys' → logprob: -11.550722122192383
    9. 'import' → logprob: -11.675722122192383
    10. '```' → logprob: -12.300722122192383

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002793826162815094
    2. ' i' → logprob: -6.002793788909912
    3. 'x' → logprob: -9.00279426574707
    4. 'v' → logprob: -9.50279426574707
    5. 'u' → logprob: -10.75279426574707
    6. 'e' → logprob: -11.00279426574707
    7. 'row' → logprob: -11.12779426574707
    8. 'k' → logprob: -11.12779426574707
    9. 'a' → logprob: -11.50279426574707
    10. '_i' → logprob: -11.50279426574707

Token 199: ',z' (ID: 54920)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016513582319021225
    2. 'in' → logprob: -4.141513347625732
    3. ',' → logprob: -8.01651382446289
    4. ' ' → logprob: -9.76651382446289
    5. '   ' → logprob: -9.76651382446289
    6. '  ' → logprob: -12.26651382446289
    7. ' ,' → logprob: -12.39151382446289
    8. '0' → logprob: -12.51651382446289
    9. 'range' → logprob: -12.76651382446289
    10. 'n' → logprob: -13.01651382446289

Token 200: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5800278782844543
    2. ' in' → logprob: -0.8300278782844543
    3. ',' → logprob: -5.830028057098389
    4. ' ' → logprob: -7.830028057098389
    5. ',in' → logprob: -8.33002758026123
    6. 'n' → logprob: -8.58002758026123
    7. '   ' → logprob: -8.95502758026123
    8. ',n' → logprob: -9.45502758026123
    9. '  ' → logprob: -10.45502758026123
    10. ' ,' → logprob: -10.95502758026123

Token 201: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3888179659843445
    2. ' enumerate' → logprob: -1.1388180255889893
    3. 'es' → logprob: -6.26381778717041
    4. 'en' → logprob: -10.63881778717041
    5. ' es' → logprob: -11.51381778717041
    6. '(en' → logprob: -12.63881778717041
    7. 'range' → logprob: -13.01381778717041
    8. ' ' → logprob: -14.51381778717041
    9. 'enum' → logprob: -15.26381778717041
    10. ' en' → logprob: -15.38881778717041

Token 202: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.01835397630929947
    2. '(dist' → logprob: -4.0183539390563965
    3. 'es' → logprob: -8.643354415893555
    4. 'dist' → logprob: -10.893354415893555
    5. '(en' → logprob: -12.768354415893555
    6. '(ed' → logprob: -13.143354415893555
    7. '(range' → logprob: -13.518354415893555
    8. ' es' → logprob: -14.393354415893555
    9. '(e' → logprob: -14.893354415893555
    10. '(est' → logprob: -15.143354415893555

Token 203: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02980232611298561
    2. '):
' → logprob: -3.5298023223876953
    3. ':' → logprob: -10.529802322387695
    4. ' ):' → logprob: -11.029802322387695
    5. ')' → logprob: -12.029802322387695
    6. '):
' → logprob: -14.404802322387695
    7. ' ):
' → logprob: -14.404802322387695
    8. '[' → logprob: -14.529802322387695
    9. ':
' → logprob: -14.779802322387695
    10. '   ' → logprob: -15.029802322387695

Token 204: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5357380509376526
    2. '       ' → logprob: -0.9107380509376526
    3. ' print' → logprob: -4.785737991333008
    4. 'print' → logprob: -5.535737991333008
    5. '	print' → logprob: -9.660737991333008
    6. 'dbg' → logprob: -10.410737991333008
    7. ' dbg' → logprob: -10.410737991333008
    8. 'db' → logprob: -10.785737991333008
    9. '    
' → logprob: -11.410737991333008
    10. '   ' → logprob: -11.410737991333008

Token 205: ' print' (ID: 2123)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.8497569561004639
    2. 'print' (adapté à ' print') → logprob: -1.0997569561004639
    3. '   ' → logprob: -1.4747569561004639
    4. ' dd' → logprob: -4.974757194519043
    5. ' print' → logprob: -5.724757194519043
    6. 'db' → logprob: -8.849757194519043
    7. 'dbg' → logprob: -8.849757194519043
    8. '       ' → logprob: -9.599757194519043
    9. 'for' → logprob: -10.099757194519043
    10. ' ' → logprob: -10.224757194519043

Token 206: '(str' (ID: 7946)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.48297280073165894
    2. '(f' → logprob: -0.9829728007316589
    3. '((' → logprob: -5.482972621917725
    4. '(' → logprob: -6.107972621917725
    5. '("' → logprob: -6.357972621917725
    6. '('' → logprob: -8.107973098754883
    7. 'f' → logprob: -8.607973098754883
    8. ' (' → logprob: -8.982973098754883
    9. '(re' → logprob: -10.107973098754883
    10. '(z' → logprob: -10.857973098754883

Token 207: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00024596223374828696
    2. 'i' → logprob: -9.125246047973633
    3. '(z' → logprob: -9.625246047973633
    4. '((' → logprob: -10.000246047973633
    5. '(' → logprob: -11.500246047973633
    6. '(f' → logprob: -11.875246047973633
    7. '("' → logprob: -13.000246047973633
    8. '(es' → logprob: -13.750246047973633
    9. 'z' → logprob: -14.000246047973633
    10. '[i' → logprob: -14.375246047973633

Token 208: ')+'' (ID: 93078)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10887955874204636
    2. ',' → logprob: -2.483879566192627
    3. ')+' → logprob: -4.108879566192627
    4. ',z' → logprob: -6.233879566192627
    5. ' ,' → logprob: -7.733879566192627
    6. ')+"' → logprob: -7.733879566192627
    7. ' )' → logprob: -8.483879089355469
    8. '+' → logprob: -8.983879089355469
    9. ',"' → logprob: -9.983879089355469
    10. ',len' → logprob: -10.858879089355469

Token 209: ' '' (ID: 461)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.45485883951187134
    2. '":' → logprob: -1.4548587799072266
    3. ':' → logprob: -2.8298587799072266
    4. '':'' → logprob: -3.2048587799072266
    5. ''' → logprob: -4.579858779907227
    6. '":"' → logprob: -4.704858779907227
    7. '"' → logprob: -4.829858779907227
    8. ' :' → logprob: -6.579858779907227
    9. '":"+' → logprob: -7.204858779907227
    10. '':[' → logprob: -7.579858779907227

Token 210: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005575587856583297
    2. ' +' → logprob: -8.125557899475098
    3. ',' → logprob: -8.875557899475098
    4. ',z' → logprob: -9.375557899475098
    5. ')' → logprob: -11.625557899475098
    6. '+x' → logprob: -12.000557899475098
    7. '+":' → logprob: -12.500557899475098
    8. '+j' → logprob: -13.250557899475098
    9. '+k' → logprob: -13.250557899475098
    10. '+t' → logprob: -13.500557899475098

Token 211: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.02700510062277317
    2. ''' → logprob: -3.777005195617676
    3. ' str' → logprob: -5.777005195617676
    4. '"' → logprob: -8.402005195617676
    5. 'repr' → logprob: -8.652005195617676
    6. '','.' → logprob: -9.152005195617676
    7. '',' → logprob: -9.402005195617676
    8. ''s' → logprob: -10.402005195617676
    9. ' '' → logprob: -11.152005195617676
    10. '(str' → logprob: -12.027005195617676

Token 212: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.00016146517009474337
    2. 'z' → logprob: -8.750161170959473
    3. '(' → logprob: -13.875161170959473
    4. ' (' → logprob: -14.125161170959473
    5. '(list' → logprob: -14.625161170959473
    6. '(len' → logprob: -14.875161170959473
    7. '[z' → logprob: -16.37516212463379
    8. ':z' → logprob: -16.37516212463379
    9. '	z' → logprob: -16.75016212463379
    10. '(es' → logprob: -16.75016212463379

Token 213: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16026505827903748
    2. ')' → logprob: -1.9102650880813599
    3. '),' → logprob: -11.16026496887207
    4. ' ))' → logprob: -11.66026496887207
    5. '))
' → logprob: -12.41026496887207
    6. ')))' → logprob: -12.66026496887207
    7. '));' → logprob: -13.03526496887207
    8. ' )' → logprob: -13.28526496887207
    9. '   ' → logprob: -13.28526496887207
    10. ' ' → logprob: -13.78526496887207

Token 214: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.868328920158092e-05
    2. ' for' → logprob: -10.875028610229492
    3. '#' → logprob: -13.000028610229492
    4. 'import' → logprob: -13.750028610229492
    5. 'while' → logprob: -13.750028610229492
    6. 'print' → logprob: -13.875028610229492
    7. '```' → logprob: -14.125028610229492
    8. 'from' → logprob: -14.375028610229492
    9. 'if' → logprob: -14.625028610229492
    10. ')' → logprob: -14.625028610229492

Token 215: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7029975652694702
    2. 'i' → logprob: -1.5779975652694702
    3. ' k' → logprob: -1.5779975652694702
    4. ' i' → logprob: -2.5779976844787598
    5. 'v' → logprob: -4.95299768447876
    6. ' v' → logprob: -5.07799768447876
    7. 'u' → logprob: -7.07799768447876
    8. ' u' → logprob: -8.077997207641602
    9. 'x' → logprob: -8.577997207641602
    10. 'j' → logprob: -8.702997207641602

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1426844596862793
    2. 'in' → logprob: -2.0176844596862793
    3. 'range' → logprob: -12.767684936523438
    4. ' ' → logprob: -13.142684936523438
    5. '	in' → logprob: -13.517684936523438
    6. '   ' → logprob: -14.392684936523438
    7. 'In' → logprob: -14.517684936523438
    8. '  ' → logprob: -14.892684936523438
    9. 'import' → logprob: -15.017684936523438
    10. '1' → logprob: -15.142684936523438

Token 217: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024783893022686243
    2. ' range' → logprob: -6.00247859954834
    3. 'in' → logprob: -13.37747859954834
    4. '(range' → logprob: -14.25247859954834
    5. '   ' → logprob: -14.87747859954834
    6. ' ' → logprob: -16.502477645874023
    7. '	range' → logprob: -16.877477645874023
    8. '  ' → logprob: -17.127477645874023
    9. '(' → logprob: -17.252477645874023
    10. '```' → logprob: -18.627477645874023

Token 218: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31334516406059265
    2. '(V' → logprob: -1.313345193862915
    3. '1' → logprob: -9.438344955444336
    4. '(len' → logprob: -13.688344955444336
    5. ' ' → logprob: -13.938344955444336
    6. '   ' → logprob: -14.438344955444336
    7. '((' → logprob: -14.813344955444336
    8. ' (' → logprob: -14.938344955444336
    9. 'V' → logprob: -15.688344955444336
    10. '(
' → logprob: -16.313344955444336

Token 219: '1' (ID: 16)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.07926153391599655
    2. '1' → logprob: -2.579261541366577
    3. '(V' → logprob: -7.954261302947998
    4. '   ' → logprob: -11.454261779785156
    5. ' V' → logprob: -12.079261779785156
    6. '	V' → logprob: -13.579261779785156
    7. ' ' → logprob: -14.204261779785156
    8. '0' → logprob: -14.454261779785156
    9. 'len' → logprob: -14.579261779785156
    10. '(' → logprob: -14.579261779785156

Token 220: ',V' (ID: 81155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01058944035321474
    2. ',V' → logprob: -4.635589599609375
    3. ' ,' → logprob: -7.135589599609375
    4. '   ' → logprob: -10.760589599609375
    5. '(V' → logprob: -12.135589599609375
    6. ' ' → logprob: -13.135589599609375
    7. 'V' → logprob: -13.260589599609375
    8. 'to' → logprob: -13.385589599609375
    9. ',len' → logprob: -13.510589599609375
    10. ',v' → logprob: -14.510589599609375

Token 221: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.1424973713001236e-05
    2. ' +' → logprob: -10.375031471252441
    3. '):
' → logprob: -16.625030517578125
    4. '+
' → logprob: -16.875030517578125
    5. '   ' → logprob: -17.875030517578125
    6. '```' → logprob: -18.000030517578125
    7. '
' → logprob: -18.500030517578125
    8. '1' → logprob: -19.125030517578125
    9. '()+' → logprob: -19.125030517578125
    10. '＋' → logprob: -19.500030517578125

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.437517166137695
    4. '
' → logprob: -16.312517166137695
    5. '   ' → logprob: -16.625017166137695
    6. '+' → logprob: -16.625017166137695
    7. '2' → logprob: -16.625017166137695
    8. '):
' → logprob: -16.937517166137695
    9. ')' → logprob: -17.187517166137695
    10. '１' → logprob: -18.250017166137695

Token 223: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11117628961801529
    2. '):' → logprob: -2.4861762523651123
    3. '):
' → logprob: -4.111176490783691
    4. ':
' → logprob: -5.236176490783691
    5. '   ' → logprob: -8.236176490783691
    6. ' :' → logprob: -12.361176490783691
    7. ')' → logprob: -12.736176490783691
    8. '>:' → logprob: -12.986176490783691
    9. '}:' → logprob: -13.111176490783691
    10. ']:' → logprob: -13.361176490783691

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2157551348209381
    2. ' for' → logprob: -2.2157552242279053
    3. 'for' → logprob: -2.4657552242279053
    4. '	for' → logprob: -10.215755462646484
    5. '   ' → logprob: -11.965755462646484
    6. '    
' → logprob: -12.715755462646484
    7. ' ' → logprob: -12.965755462646484
    8. '
' → logprob: -13.965755462646484
    9. ',' → logprob: -14.340755462646484
    10. '  ' → logprob: -14.965755462646484

Token 225: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014328587567433715
    2. ' for' → logprob: -6.7514328956604
    3. '   ' → logprob: -8.251432418823242
    4. '	for' → logprob: -13.501432418823242
    5. ' ' → logprob: -15.126432418823242
    6. '  ' → logprob: -16.501432418823242
    7. '```' → logprob: -19.626432418823242
    8. 'print' → logprob: -19.751432418823242
    9. '    
' → logprob: -19.876432418823242
    10. '
' → logprob: -20.251432418823242

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21207091212272644
    2. 'j' → logprob: -1.7120709419250488
    3. ' i' → logprob: -4.962070941925049
    4. ' j' → logprob: -5.837070941925049
    5. 'v' → logprob: -7.337070941925049
    6. ' v' → logprob: -10.58707046508789
    7. '1' → logprob: -12.96207046508789
    8. 'u' → logprob: -13.08707046508789
    9. '   ' → logprob: -13.83707046508789
    10. ' ' → logprob: -14.08707046508789

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04309739172458649
    2. 'in' → logprob: -3.168097496032715
    3. '   ' → logprob: -9.918097496032715
    4. ' ' → logprob: -10.668097496032715
    5. '1' → logprob: -11.793097496032715
    6. 'range' → logprob: -12.043097496032715
    7. '=' → logprob: -12.793097496032715
    8. '(' → logprob: -13.168097496032715
    9. ' =' → logprob: -13.293097496032715
    10. ',' → logprob: -13.918097496032715

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08511693775653839
    2. '(' → logprob: -3.0851168632507324
    3. ' range' → logprob: -3.3351168632507324
    4. '1' → logprob: -8.83511734008789
    5. '(range' → logprob: -9.46011734008789
    6. ' (' → logprob: -11.58511734008789
    7. ' ' → logprob: -11.71011734008789
    8. '   ' → logprob: -11.83511734008789
    9. ' in' → logprob: -12.21011734008789
    10. 'in' → logprob: -12.21011734008789

Token 229: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025752498186193407
    2. '1' → logprob: -8.62525749206543
    3. ' (' → logprob: -10.37525749206543
    4. 'range' → logprob: -10.37525749206543
    5. ' ' → logprob: -11.87525749206543
    6. ' range' → logprob: -12.12525749206543
    7. '(V' → logprob: -13.62525749206543
    8. '   ' → logprob: -13.75025749206543
    9. ',' → logprob: -15.00025749206543
    10. '(range' → logprob: -16.12525749206543

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.500012397766113
    3. 'k' → logprob: -14.500012397766113
    4. '(' → logprob: -14.750012397766113
    5. '   ' → logprob: -14.750012397766113
    6. 'V' → logprob: -15.000012397766113
    7. 'for' → logprob: -16.125011444091797
    8. '(V' → logprob: -16.375011444091797
    9. 'range' → logprob: -16.875011444091797
    10. '0' → logprob: -17.375011444091797

Token 231: ',V' (ID: 81155)
  Prédit: ',V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.0077193742617964745
    2. ',' → logprob: -4.88271951675415
    3. ' ,' → logprob: -9.132719039916992
    4. ',v' → logprob: -13.132719039916992
    5. '(V' → logprob: -14.007719039916992
    6. '   ' → logprob: -14.257719039916992
    7. 'V' → logprob: -14.882719039916992
    8. ',k' → logprob: -15.257719039916992
    9. ',Q' → logprob: -16.132719039916992
    10. ',j' → logprob: -16.507719039916992

Token 232: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.7292167184641585e-05
    2. ' +' → logprob: -10.500057220458984
    3. ',' → logprob: -11.375057220458984
    4. '1' → logprob: -12.000057220458984
    5. '+k' → logprob: -12.750057220458984
    6. '   ' → logprob: -13.125057220458984
    7. ',V' → logprob: -13.125057220458984
    8. 'for' → logprob: -13.500057220458984
    9. '+
' → logprob: -14.500057220458984
    10. '(V' → logprob: -14.750057220458984

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001561009994475171
    2. 'k' → logprob: -9.25015640258789
    3. ' ' → logprob: -10.50015640258789
    4. '+' → logprob: -10.62515640258789
    5. '   ' → logprob: -12.62515640258789
    6. '(' → logprob: -13.50015640258789
    7. '(V' → logprob: -13.87515640258789
    8. '
' → logprob: -14.62515640258789
    9. '(k' → logprob: -14.87515640258789
    10. '```' → logprob: -15.00015640258789

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5507791638374329
    2. ':' → logprob: -1.175779104232788
    3. '):
' → logprob: -2.175779104232788
    4. ':
' → logprob: -7.300779342651367
    5. ',' → logprob: -7.800779342651367
    6. '   ' → logprob: -8.675779342651367
    7. ')' → logprob: -9.550779342651367
    8. '       ' → logprob: -11.175779342651367
    9. '):

' → logprob: -11.550779342651367
    10. '):
' → logprob: -11.675779342651367

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013536323967855424
    2. ' for' → logprob: -9.50013542175293
    3. '   ' → logprob: -10.37513542175293
    4. 'for' → logprob: -11.12513542175293
    5. '	' → logprob: -12.00013542175293
    6. '	   ' → logprob: -12.25013542175293
    7. '           ' → logprob: -13.50013542175293
    8. '    ' → logprob: -14.87513542175293
    9. '      ' → logprob: -14.87513542175293
    10. '     ' → logprob: -15.00013542175293

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17534705996513367
    2. ' for' → logprob: -1.925347089767456
    3. '       ' → logprob: -4.675346851348877
    4. '   ' → logprob: -5.175346851348877
    5. '	for' → logprob: -10.675347328186035
    6. ' ' → logprob: -12.050347328186035
    7. '           ' → logprob: -13.425347328186035
    8. '    ' → logprob: -14.425347328186035
    9. '  ' → logprob: -14.675347328186035
    10. '	' → logprob: -15.425347328186035

Token 237: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07889220863580704
    2. ' j' → logprob: -2.578892230987549
    3. '   ' → logprob: -14.07889175415039
    4. '	j' → logprob: -14.57889175415039
    5. '<|end|>' → logprob: -14.70389175415039
    6. ' ' → logprob: -15.07889175415039
    7. '_j' → logprob: -15.95389175415039
    8. 'k' → logprob: -16.32889175415039
    9. '$j' → logprob: -16.32889175415039
    10. '```' → logprob: -16.82889175415039

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867899790406227
    2. 'in' → logprob: -3.0486791133880615
    3. '(' → logprob: -10.04867935180664
    4. '1' → logprob: -11.17367935180664
    5. ' ' → logprob: -11.54867935180664
    6. '   ' → logprob: -12.04867935180664
    7. '=' → logprob: -12.42367935180664
    8. '+' → logprob: -13.04867935180664
    9. '       ' → logprob: -13.17367935180664
    10. ' (' → logprob: -13.42367935180664

Token 239: ' range' (ID: 3352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21471545100212097
    2. 'range' → logprob: -1.7147154808044434
    3. ' range' → logprob: -4.339715480804443
    4. '(range' → logprob: -9.339715003967285
    5. ' (' → logprob: -10.089715003967285
    6. '1' → logprob: -10.714715003967285
    7. '(V' → logprob: -10.964715003967285
    8. '   ' → logprob: -13.464715003967285
    9. ' ' → logprob: -13.839715003967285
    10. 'in' → logprob: -14.089715003967285

Token 240: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -13.12500286102295
    3. '1' → logprob: -14.00000286102295
    4. 'range' → logprob: -17.625003814697266
    5. '   ' → logprob: -18.125003814697266
    6. ' ' → logprob: -18.125003814697266
    7. ' range' → logprob: -19.000003814697266
    8. ',' → logprob: -20.000003814697266
    9. ')' → logprob: -20.125003814697266
    10. '
' → logprob: -20.500003814697266

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.375014305114746
    4. 'k' → logprob: -15.875014305114746
    5. 'V' → logprob: -16.00001335144043
    6. '(' → logprob: -16.00001335144043
    7. '
' → logprob: -16.25001335144043
    8. ')' → logprob: -17.31251335144043
    9. '(V' → logprob: -17.62501335144043
    10. 'range' → logprob: -17.75001335144043

Token 242: ',V' (ID: 81155)
  Prédit: ',V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.0016097202897071838
    2. '(V' → logprob: -7.001609802246094
    3. ',' → logprob: -7.501609802246094
    4. ' ,' → logprob: -9.001609802246094
    5. ',v' → logprob: -11.751609802246094
    6. 'V' → logprob: -12.126609802246094
    7. '+' → logprob: -12.876609802246094
    8. ',(' → logprob: -13.126609802246094
    9. '   ' → logprob: -14.001609802246094
    10. ',
' → logprob: -14.376609802246094

Token 243: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.375001907348633
    3. '1' → logprob: -14.500001907348633
    4. '```' → logprob: -16.375001907348633
    5. ')+' → logprob: -18.000001907348633
    6. '()+' → logprob: -18.125001907348633
    7. '+
' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '+j' → logprob: -18.500001907348633
    10. 'import' → logprob: -19.000001907348633

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006354739889502525
    2. '+' → logprob: -7.375635623931885
    3. ' ' → logprob: -12.125635147094727
    4. '```' → logprob: -13.375635147094727
    5. 'j' → logprob: -14.250635147094727
    6. '   ' → logprob: -15.250635147094727
    7. '``' → logprob: -15.875635147094727
    8. ' +' → logprob: -16.125635147094727
    9. '++' → logprob: -16.250635147094727
    10. '
' → logprob: -16.375635147094727

Token 245: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0970538780093193
    2. '):' → logprob: -2.4720537662506104
    3. ':' → logprob: -5.2220540046691895
    4. ':
' → logprob: -6.4720540046691895
    5. '               ' → logprob: -7.5970540046691895
    6. '           ' → logprob: -7.7220540046691895
    7. '):
' → logprob: -9.472053527832031
    8. ')' → logprob: -10.472053527832031
    9. 'if' → logprob: -10.847053527832031
    10. '():
' → logprob: -11.347053527832031

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041199540719389915
    2. '               ' → logprob: -5.629119873046875
    3. ':' → logprob: -8.754119873046875
    4. '       ' → logprob: -9.129119873046875
    5. '	       ' → logprob: -9.754119873046875
    6. '		' → logprob: -10.254119873046875
    7. '<|end|>' → logprob: -10.754119873046875
    8. '          ' → logprob: -11.129119873046875
    9. '                               ' → logprob: -11.129119873046875
    10. '            ' → logprob: -11.379119873046875

Token 247: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.8238958716392517
    2. 'if' → logprob: -1.5738959312438965
    3. '               ' → logprob: -1.6988959312438965
    4. ' if' → logprob: -1.9488959312438965
    5. ' dist' → logprob: -3.5738959312438965
    6. '           ' → logprob: -7.5738959312438965
    7. '   ' → logprob: -9.198895454406738
    8. '	dist' → logprob: -10.698895454406738
    9. '	if' → logprob: -12.073895454406738
    10. '                   ' → logprob: -12.573895454406738

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[I' → logprob: -12.375004768371582
    3. '```' → logprob: -15.000004768371582
    4. '[' → logprob: -15.250004768371582
    5. ' [' → logprob: -15.625004768371582
    6. '[j' → logprob: -16.5000057220459
    7. '           ' → logprob: -17.0000057220459
    8. 'i' → logprob: -17.7500057220459
    9. '][' → logprob: -17.7500057220459
    10. '[a' → logprob: -18.5000057220459

Token 249: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017694240668788552
    2. '[j' → logprob: -6.376769542694092
    3. ' ][' → logprob: -10.126769065856934
    4. ']' → logprob: -11.376769065856934
    5. '[' → logprob: -12.501769065856934
    6. '[i' → logprob: -12.876769065856934
    7. '[k' → logprob: -13.251769065856934
    8. '"][' → logprob: -13.251769065856934
    9. ']][' → logprob: -13.501769065856934
    10. '```' → logprob: -13.751769065856934

Token 250: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00861528143286705
    2. 'k' → logprob: -4.758615493774414
    3. ' j' → logprob: -14.758615493774414
    4. ']' → logprob: -15.633615493774414
    5. '[j' → logprob: -16.883615493774414
    6. '   ' → logprob: -17.383615493774414
    7. '	j' → logprob: -17.508615493774414
    8. '][' → logprob: -18.008615493774414
    9. '```' → logprob: -18.383615493774414
    10. ' ' → logprob: -18.633615493774414

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005244191270321608
    2. ']=' → logprob: -5.630244255065918
    3. '>' → logprob: -6.755244255065918
    4. ' ]' → logprob: -8.380244255065918
    5. '=' → logprob: -8.755244255065918
    6. ']>' → logprob: -9.880244255065918
    7. ')' → logprob: -11.255244255065918
    8. ' =' → logprob: -11.755244255065918
    9. ' >' → logprob: -12.130244255065918
    10. 'if' → logprob: -12.130244255065918

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010082771768793464
    2. ' =' → logprob: -7.0010085105896
    3. '=min' → logprob: -9.251008033752441
    4. '>' → logprob: -14.251008033752441
    5. '<=' → logprob: -16.501008987426758
    6. 'min' → logprob: -16.626008987426758
    7. '=max' → logprob: -16.751008987426758
    8. '.=' → logprob: -18.001008987426758
    9. '```' → logprob: -18.376008987426758
    10. '+=' → logprob: -18.626008987426758

Token 253: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015023599844425917
    2. ' min' → logprob: -6.501502513885498
    3. '	min' → logprob: -17.376502990722656
    4. 'max' → logprob: -19.001502990722656
    5. '[min' → logprob: -19.251502990722656
    6. '```' → logprob: -19.251502990722656
    7. '(min' → logprob: -19.751502990722656
    8. '   ' → logprob: -19.751502990722656
    9. 'mini' → logprob: -21.126502990722656
    10. '=min' → logprob: -21.126502990722656

Token 254: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. 'dist' → logprob: -17.250045776367188
    4. '(
' → logprob: -18.000045776367188
    5. '	dist' → logprob: -18.875045776367188
    6. ' (' → logprob: -19.000045776367188
    7. '(distance' → logprob: -20.375045776367188
    8. ' dist' → logprob: -21.875045776367188
    9. '(dis' → logprob: -22.000045776367188
    10. '(d' → logprob: -22.250045776367188

Token 255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '][' → logprob: -13.37500286102295
    3. ')[' → logprob: -15.37500286102295
    4. '```' → logprob: -15.37500286102295
    5. 'i' → logprob: -15.87500286102295
    6. '[' → logprob: -15.87500286102295
    7. '[I' → logprob: -15.87500286102295
    8. ' [' → logprob: -16.375001907348633
    9. '[j' → logprob: -16.750001907348633
    10. ' ' → logprob: -18.000001907348633

Token 256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006298751104623079
    2. '[i' → logprob: -7.625629901885986
    3. '[j' → logprob: -9.000629425048828
    4. ']' → logprob: -11.375629425048828
    5. ' ][' → logprob: -12.625629425048828
    6. ')[' → logprob: -13.875629425048828
    7. ']][' → logprob: -14.500629425048828
    8. 'i' → logprob: -15.000629425048828
    9. '```' → logprob: -15.250629425048828
    10. '[' → logprob: -15.250629425048828

Token 257: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4804750084877014
    2. 'j' → logprob: -0.9804750084877014
    3. '][' → logprob: -5.230474948883057
    4. '[j' → logprob: -7.355474948883057
    5. '[k' → logprob: -8.480475425720215
    6. ']' → logprob: -9.480475425720215
    7. '
' → logprob: -9.980475425720215
    8. 'i' → logprob: -11.230475425720215
    9. '[' → logprob: -11.230475425720215
    10. '```' → logprob: -11.730475425720215

Token 258: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038600547704845667
    2. ' ,' → logprob: -5.878859996795654
    3. '],' → logprob: -6.878859996795654
    4. 'dist' → logprob: -11.003860473632812
    5. ',
' → logprob: -12.503860473632812
    6. '),' → logprob: -13.253860473632812
    7. ',d' → logprob: -14.253860473632812
    8. '   ' → logprob: -15.003860473632812
    9. ' dist' → logprob: -15.003860473632812
    10. '},' → logprob: -15.003860473632812

Token 259: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004080658778548241
    2. ' dist' → logprob: -5.504080772399902
    3. '               ' → logprob: -14.254080772399902
    4. '           ' → logprob: -14.379080772399902
    5. '   ' → logprob: -14.379080772399902
    6. '	dist' → logprob: -15.504080772399902
    7. '(dist' → logprob: -16.504079818725586
    8. '                   ' → logprob: -17.004079818725586
    9. '       ' → logprob: -17.129079818725586
    10. '              ' → logprob: -17.504079818725586

Token 260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.25
    3. '[' → logprob: -16.5
    4. '```' → logprob: -17.25
    5. '
' → logprob: -17.875
    6. '[I' → logprob: -18.375
    7. '[
' → logprob: -18.75
    8. '[j' → logprob: -19.5
    9. '   ' → logprob: -20.125
    10. '[k' → logprob: -20.25

Token 261: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017225458286702633
    2. '[i' → logprob: -6.37672233581543
    3. ' ][' → logprob: -11.75172233581543
    4. '[' → logprob: -11.87672233581543
    5. ']' → logprob: -13.75172233581543
    6. '}[' → logprob: -14.25172233581543
    7. '[I' → logprob: -14.25172233581543
    8. '```' → logprob: -14.37672233581543
    9. ')[' → logprob: -14.87672233581543
    10. '[j' → logprob: -15.00172233581543

Token 262: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.36574100604048e-06
    2. '[k' → logprob: -12.375004768371582
    3. ' k' → logprob: -18.375003814697266
    4. '][' → logprob: -19.750003814697266
    5. '
' → logprob: -19.875003814697266
    6. 'i' → logprob: -20.500003814697266
    7. ']' → logprob: -20.625003814697266
    8. '   ' → logprob: -20.875003814697266
    9. '	k' → logprob: -20.875003814697266
    10. '```' → logprob: -21.125003814697266

Token 263: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029760096222162247
    2. ']+' → logprob: -3.5297601222991943
    3. ' ]' → logprob: -11.904760360717773
    4. '][' → logprob: -12.904760360717773
    5. '[' → logprob: -16.279760360717773
    6. '[j' → logprob: -16.404760360717773
    7. ']
' → logprob: -16.779760360717773
    8. '])' → logprob: -17.529760360717773
    9. ']+=' → logprob: -18.529760360717773
    10. '],' → logprob: -18.779760360717773

Token 264: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009114635176956654
    2. ' dist' → logprob: -7.000911235809326
    3. '	dist' → logprob: -17.250911712646484
    4. '(dist' → logprob: -17.625911712646484
    5. '
' → logprob: -18.625911712646484
    6. '   ' → logprob: -19.250911712646484
    7. ' ' → logprob: -19.375911712646484
    8. '.dist' → logprob: -19.375911712646484
    9. '_dist' → logprob: -20.000911712646484
    10. 'Dist' → logprob: -20.125911712646484

Token 265: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00023238400171976537
    2. '[i' → logprob: -8.375232696533203
    3. '][' → logprob: -13.875232696533203
    4. 'k' → logprob: -14.125232696533203
    5. '
' → logprob: -16.375232696533203
    6. '```' → logprob: -17.500232696533203
    7. '[' → logprob: -17.875232696533203
    8. '}[' → logprob: -18.250232696533203
    9. '[
' → logprob: -18.750232696533203
    10. ' [' → logprob: -18.875232696533203

Token 266: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.60414821645827e-06
    2. ']' → logprob: -12.625004768371582
    3. '[j' → logprob: -14.125004768371582
    4. ' ][' → logprob: -14.625004768371582
    5. '[i' → logprob: -17.875003814697266
    6. '[k' → logprob: -18.375003814697266
    7. ''][' → logprob: -18.500003814697266
    8. '[' → logprob: -18.625003814697266
    9. ']][' → logprob: -19.125003814697266
    10. '"][' → logprob: -19.500003814697266

Token 267: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.750000953674316
    3. 'i' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. '[j' → logprob: -17.375
    6. '```' → logprob: -18.875
    7. ']' → logprob: -19.0
    8. ' ' → logprob: -19.125
    9. 'k' → logprob: -19.25
    10. '	j' → logprob: -19.375

Token 268: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013440960901789367
    2. ')
' → logprob: -9.375134468078613
    3. '))' → logprob: -10.000134468078613
    4. ' )' → logprob: -12.875134468078613
    5. '])' → logprob: -13.750134468078613
    6. '})' → logprob: -16.125133514404297
    7. ')))' → logprob: -16.375133514404297
    8. '）' → logprob: -16.625133514404297
    9. ')])' → logprob: -17.125133514404297
    10. ')`' → logprob: -17.125133514404297

Token 269: 'dd' (ID: 1183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3418427109718323
    2. 'max' → logprob: -1.9668426513671875
    3. '<|end|>' → logprob: -2.7168426513671875
    4. 'print' → logprob: -3.8418426513671875
    5. 'answer' → logprob: -4.2168426513671875
    6. 'result' → logprob: -4.8418426513671875
    7. 'min' → logprob: -5.0918426513671875
    8. 'total' → logprob: -5.2168426513671875
    9. '
' → logprob: -5.2168426513671875
    10. 'sum' → logprob: -5.7168426513671875

Token 270: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '_print' → logprob: -14.500001907348633
    3. 'for' → logprob: -14.625001907348633
    4. 'ist' → logprob: -15.625001907348633
    5. '.print' → logprob: -16.000001907348633
    6. '.' → logprob: -16.625001907348633
    7. 'dist' → logprob: -17.000001907348633
    8. ' print' → logprob: -17.000001907348633
    9. 'printf' → logprob: -17.125001907348633
    10. '(print' → logprob: -17.500001907348633

Token 271: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6707646250724792
    2. '("")' → logprob: -1.420764684677124
    3. '(dist' → logprob: -1.670764684677124
    4. '(' → logprob: -3.045764684677124
    5. '()' → logprob: -4.920764446258545
    6. '("("' → logprob: -6.670764446258545
    7. '(("' → logprob: -7.045764446258545
    8. '('' → logprob: -7.420764446258545
    9. '((' → logprob: -7.795764446258545
    10. '("\' → logprob: -7.920764446258545

Token 272: 'WS' (ID: 10447)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.6614300012588501
    2. 'end' → logprob: -1.03643000125885
    3. 'finish' → logprob: -3.1614298820495605
    4. ' done' → logprob: -3.2864298820495605
    5. 'finished' → logprob: -4.1614298820495605
    6. 'ok' → logprob: -4.5364298820495605
    7. ' end' → logprob: -4.7864298820495605
    8. '")' → logprob: -5.1614298820495605
    9. ' finish' → logprob: -7.0364298820495605
    10. 'fin' → logprob: -7.1614298820495605

Token 273: ' done' (ID: 4167)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.5279121994972229
    2. 't' → logprob: -1.6529121398925781
    3. 'T' → logprob: -2.777912139892578
    4. '")' → logprob: -3.652912139892578
    5. 'RT' → logprob: -3.652912139892578
    6. 'TP' → logprob: -4.027912139892578
    7. '終了' → logprob: -4.652912139892578
    8. 'start' → logprob: -4.777912139892578
    9. '終' → logprob: -4.777912139892578
    10. 'DONE' → logprob: -5.027912139892578

Token 274: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003488129877950996
    2. ')")' → logprob: -8.125349044799805
    3. ')' → logprob: -10.000349044799805
    4. '")
' → logprob: -12.125349044799805
    5. '}")' → logprob: -14.750349044799805
    6. '\")' → logprob: -14.875349044799805
    7. '!")' → logprob: -15.125349044799805
    8. '")
' → logprob: -16.000349044799805
    9. '");' → logprob: -16.375349044799805
    10. '")

' → logprob: -16.500349044799805

Token 275: 'n' (ID: 77)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31869786977767944
    2. 'res' → logprob: -2.443697929382324
    3. 'answer' → logprob: -3.318697929382324
    4. 'mx' → logprob: -3.443697929382324
    5. 'ret' → logprob: -3.943697929382324
    6. 'q' → logprob: -4.443697929382324
    7. 'min' → logprob: -4.818697929382324
    8. 'for' → logprob: -4.818697929382324
    9. 'mn' → logprob: -5.068697929382324
    10. 'Q' → logprob: -5.318697929382324

Token 276: 'xt' (ID: 711)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.698323369026184
    2. 'ext' → logprob: -1.823323369026184
    3. 'ode' → logprob: -2.0733232498168945
    4. ' =' → logprob: -2.0733232498168945
    5. 'o' → logprob: -2.3233232498168945
    6. 'um' → logprob: -2.3233232498168945
    7. '=' → logprob: -2.8233232498168945
    8. 'odes' → logprob: -3.0733232498168945
    9. 'ow' → logprob: -3.4483232498168945
    10. 'n' → logprob: -3.9483232498168945

Token 277: 'nd' (ID: 301)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.792154848575592
    2. ' =' → logprob: -0.792154848575592
    3. 'o' → logprob: -4.667154788970947
    4. ',' → logprob: -4.667154788970947
    5. 'um' → logprob: -4.792154788970947
    6. 'xt' → logprob: -5.167154788970947
    7. 't' → logprob: -5.167154788970947
    8. 'e' → logprob: -5.292154788970947
    9. 'ext' → logprob: -5.292154788970947
    10. 'ow' → logprob: -5.542154788970947

Token 278: 'ary' (ID: 815)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6507735848426819
    2. ' =' → logprob: -0.9007735848426819
    3. 'e' → logprob: -4.025773525238037
    4. '_' → logprob: -4.400773525238037
    5. 'd' → logprob: -4.525773525238037
    6. '(' → logprob: -5.775773525238037
    7. 'ext' → logprob: -5.775773525238037
    8. 's' → logprob: -6.025773525238037
    9. 'n' → logprob: -6.150773525238037
    10. 'w' → logprob: -6.275773525238037

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8658515810966492
    2. '=' → logprob: -1.365851640701294
    3. 'n' → logprob: -2.240851640701294
    4. ' ' → logprob: -2.490851640701294
    5. 'd' → logprob: -3.490851640701294
    6. 'max' → logprob: -4.240851402282715
    7. 'for' → logprob: -4.240851402282715
    8. 'def' → logprob: -4.740851402282715
    9. '  ' → logprob: -5.115851402282715
    10. '[' → logprob: -5.240851402282715

Token 280: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6345416307449341
    2. '[]' → logprob: -1.634541630744934
    3. '[V' → logprob: -2.1345415115356445
    4. '[n' → logprob: -3.1345415115356445
    5. '[[' → logprob: -3.5095415115356445
    6. '[int' → logprob: -4.3845415115356445
    7. 'lambda' → logprob: -4.6345415115356445
    8. '{}' → logprob: -4.8845415115356445
    9. '[-' → logprob: -4.8845415115356445
    10. '[max' → logprob: -5.2595415115356445

Token 281: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029836446046829224
    2. '[' → logprob: -6.502983570098877
    3. '[]' → logprob: -8.002984046936035
    4. ' =' → logprob: -8.252984046936035
    5. ' for' → logprob: -8.377984046936035
    6. '=' → logprob: -8.377984046936035
    7. 'max' → logprob: -9.627984046936035
    8. 'n' → logprob: -9.752984046936035
    9. '[n' → logprob: -10.002984046936035
    10. 'visited' → logprob: -10.502984046936035

Token 282: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18783321976661682
    2. ' i' → logprob: -1.9378331899642944
    3. '_' → logprob: -4.187833309173584
    4. 'x' → logprob: -5.812833309173584
    5. 'k' → logprob: -6.562833309173584
    6. 'nd' → logprob: -6.937833309173584
    7. ' _' → logprob: -6.937833309173584
    8. '_i' → logprob: -6.937833309173584
    9. ' nd' → logprob: -7.687833309173584
    10. 'v' → logprob: -7.687833309173584

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28151655197143555
    2. 'in' → logprob: -1.4065165519714355
    3. ' ' → logprob: -8.531517028808594
    4. 'n' → logprob: -9.281517028808594
    5. ',' → logprob: -11.031517028808594
    6. 'range' → logprob: -11.156517028808594
    7. ')' → logprob: -11.906517028808594
    8. '   ' → logprob: -11.906517028808594
    9. '  ' → logprob: -11.906517028808594
    10. '	in' → logprob: -12.531517028808594

Token 284: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005885370774194598
    2. ' range' → logprob: -7.500588417053223
    3. 'in' → logprob: -10.625588417053223
    4. '(range' → logprob: -11.625588417053223
    5. 'es' → logprob: -14.125588417053223
    6. 'dist' → logprob: -15.375588417053223
    7. '   ' → logprob: -15.625588417053223
    8. ' ' → logprob: -15.625588417053223
    9. 'n' → logprob: -15.750588417053223
    10. '(' → logprob: -15.875588417053223

Token 285: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.3491189181804657
    2. '(' → logprob: -1.224118947982788
    3. '(len' → logprob: -7.474118709564209
    4. '(n' → logprob: -10.224119186401367
    5. '((' → logprob: -10.224119186401367
    6. ' (' → logprob: -11.599119186401367
    7. '(i' → logprob: -12.474119186401367
    8. '(
' → logprob: -12.849119186401367
    9. '(N' → logprob: -12.849119186401367
    10. '1' → logprob: -13.099119186401367

Token 286: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.024604277219623e-05
    2. ' +' → logprob: -10.750040054321289
    3. '):
' → logprob: -11.625040054321289
    4. '1' → logprob: -12.375040054321289
    5. '+
' → logprob: -12.750040054321289
    6. '):' → logprob: -14.000040054321289
    7. '[' → logprob: -14.625040054321289
    8. '-' → logprob: -15.250040054321289
    9. '   ' → logprob: -15.500040054321289
    10. '(' → logprob: -16.25004005432129

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018911674851551652
    2. '2' → logprob: -8.750188827514648
    3. ' ' → logprob: -10.875188827514648
    4. '(' → logprob: -12.375188827514648
    5. '+' → logprob: -12.375188827514648
    6. '
' → logprob: -15.187688827514648
    7. '(V' → logprob: -15.375188827514648
    8. '11' → logprob: -15.437688827514648
    9. '```' → logprob: -15.500188827514648
    10. '   ' → logprob: -15.500188827514648

Token 288: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22551517188549042
    2. '):' → logprob: -1.6005151271820068
    3. '):
' → logprob: -9.850515365600586
    4. ':' → logprob: -10.600515365600586
    5. '():
' → logprob: -11.975515365600586
    6. ')' → logprob: -12.350515365600586
    7. ']:
' → logprob: -12.850515365600586
    8. ']:' → logprob: -13.100515365600586
    9. '):

' → logprob: -13.225515365600586
    10. '+' → logprob: -13.600515365600586

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002228525234386325
    2. 'n' → logprob: -6.127228736877441
    3. ' nxt' → logprob: -10.252228736877441
    4. '	n' → logprob: -12.252228736877441
    5. '   ' → logprob: -14.127228736877441
    6. ' n' → logprob: -14.377228736877441
    7. '(n' → logprob: -14.627228736877441
    8. ',n' → logprob: -14.877228736877441
    9. '[n' → logprob: -15.127228736877441
    10. '       ' → logprob: -15.127228736877441

Token 290: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009431391954421997
    2. '   ' → logprob: -5.2594313621521
    3. ' nxt' → logprob: -5.5094313621521
    4. 'tmp' → logprob: -10.009431838989258
    5. ' n' → logprob: -10.384431838989258
    6. 'next' → logprob: -11.009431838989258
    7. ' ' → logprob: -11.259431838989258
    8. '	n' → logprob: -11.759431838989258
    9. '  ' → logprob: -12.634431838989258
    10. 'temp' → logprob: -12.821931838989258

Token 291: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0003704933915287256
    2. 'ndry' → logprob: -8.250370025634766
    3. 'n' → logprob: -9.625370025634766
    4. '_nd' → logprob: -11.500370025634766
    5. 'ndar' → logprob: -11.750370025634766
    6. ' nd' → logprob: -12.125370025634766
    7. 'нд' → logprob: -12.750370025634766
    8. 'ndrome' → logprob: -12.750370025634766
    9. 'nder' → logprob: -13.125370025634766
    10. 'ndag' → logprob: -13.250370025634766

Token 292: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -5.438573680294212e-06
    2. 'array' → logprob: -13.125005722045898
    3. 'ry' → logprob: -13.625005722045898
    4. 'nd' → logprob: -14.375005722045898
    5. 'n' → logprob: -14.750005722045898
    6. 'ay' → logprob: -14.875005722045898
    7. 'ory' → logprob: -15.000005722045898
    8. 'd' → logprob: -15.875005722045898
    9. ' ary' → logprob: -16.3750057220459
    10. 'rray' → logprob: -16.5000057220459

Token 293: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039382368326187134
    2. '.append' → logprob: -3.2893824577331543
    3. '.=' → logprob: -7.289382457733154
    4. '.' → logprob: -7.789382457733154
    5. '=[]' → logprob: -8.539381980895996
    6. ' =' → logprob: -10.289381980895996
    7. '+=' → logprob: -12.539381980895996
    8. 'append' → logprob: -12.539381980895996
    9. '=.' → logprob: -13.039381980895996
    10. '.extend' → logprob: -13.414381980895996

Token 294: '([' (ID: 5194)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.009584312327206135
    2. '([' → logprob: -5.009584426879883
    3. '({' → logprob: -6.509584426879883
    4. '(' → logprob: -7.634584426879883
    5. '([-' → logprob: -7.634584426879883
    6. '(-' → logprob: -8.259584426879883
    7. '[]' → logprob: -9.759584426879883
    8. '([])
' → logprob: -10.134584426879883
    9. '(set' → logprob: -10.759584426879883
    10. '((' → logprob: -11.634584426879883

Token 295: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5431697964668274
    2. '0' → logprob: -1.6681697368621826
    3. 'False' → logprob: -2.1681697368621826
    4. '999' → logprob: -2.1681697368621826
    5. 'None' → logprob: -7.543169975280762
    6. 'float' → logprob: -8.293169975280762
    7. '(' → logprob: -8.668169975280762
    8. '(-' → logprob: -9.168169975280762
    9. ' -' → logprob: -9.293169975280762
    10. 'True' → logprob: -9.293169975280762

Token 296: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.004926804453134537
    2. ']' → logprob: -5.379926681518555
    3. ']*' → logprob: -8.254926681518555
    4. '(V' → logprob: -10.754926681518555
    5. ']+' → logprob: -11.754926681518555
    6. ' for' → logprob: -11.879926681518555
    7. '*(' → logprob: -12.254926681518555
    8. 'for' → logprob: -12.879926681518555
    9. '](' → logprob: -13.254926681518555
    10. '])' → logprob: -14.754926681518555

Token 297: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0020429599098861217
    2. '(V' → logprob: -6.252042770385742
    3. ' V' → logprob: -9.877042770385742
    4. '   ' → logprob: -10.127042770385742
    5. ' ' → logprob: -12.002042770385742
    6. '  ' → logprob: -13.127042770385742
    7. 'i' → logprob: -13.127042770385742
    8. ' (' → logprob: -13.377042770385742
    9. '	V' → logprob: -13.502042770385742
    10. 'max' → logprob: -13.627042770385742

Token 298: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.5577775128767826e-06
    2. ' +' → logprob: -12.875005722045898
    3. '1' → logprob: -13.000005722045898
    4. '+
' → logprob: -14.625005722045898
    5. '```' → logprob: -16.6250057220459
    6. ')+' → logprob: -17.3750057220459
    7. '+i' → logprob: -17.3750057220459
    8. '[' → logprob: -17.6250057220459
    9. '-' → logprob: -17.8125057220459
    10. '＋' → logprob: -18.3125057220459

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.875005722045898
    3. '+' → logprob: -13.750005722045898
    4. '2' → logprob: -14.125005722045898
    5. '6' → logprob: -14.250005722045898
    6. 'V' → logprob: -14.500005722045898
    7. '(V' → logprob: -16.6250057220459
    8. '   ' → logprob: -17.1250057220459
    9. '```' → logprob: -17.5000057220459
    10. ')' → logprob: -17.7500057220459

Token 300: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000915039679966867
    2. '))' → logprob: -7.000915050506592
    3. ')
' → logprob: -12.875914573669434
    4. ' )' → logprob: -14.625914573669434
    5. ')))' → logprob: -15.750914573669434
    6. ')`' → logprob: -16.62591552734375
    7. '])' → logprob: -16.75091552734375
    8. ')#' → logprob: -17.12591552734375
    9. '),' → logprob: -17.37591552734375
    10. ')}' → logprob: -17.62591552734375

Token 301: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3902033970225602e-05
    2. ' for' → logprob: -11.375014305114746
    3. '<|end|>' → logprob: -13.750014305114746
    4. '
' → logprob: -14.500014305114746
    5. 'n' → logprob: -14.875014305114746
    6. '```' → logprob: -15.750014305114746
    7. ')' → logprob: -16.12501335144043
    8. 'next' → logprob: -16.25001335144043
    9. '   ' → logprob: -17.37501335144043
    10. '	for' → logprob: -17.87501335144043

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27548032999038696
    2. ' i' → logprob: -1.9004802703857422
    3. 'k' → logprob: -2.650480270385742
    4. ' k' → logprob: -4.525480270385742
    5. 'j' → logprob: -5.775480270385742
    6. 'u' → logprob: -6.650480270385742
    7. 'v' → logprob: -6.775480270385742
    8. ' j' → logprob: -6.900480270385742
    9. 'x' → logprob: -7.025480270385742
    10. 'a' → logprob: -7.525480270385742

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07893606275320053
    2. 'in' → logprob: -2.5789361000061035
    3. 'range' → logprob: -10.703935623168945
    4. '(' → logprob: -11.578935623168945
    5. '1' → logprob: -12.203935623168945
    6. ' ' → logprob: -12.328935623168945
    7. ' range' → logprob: -13.328935623168945
    8. '   ' → logprob: -13.953935623168945
    9. 'n' → logprob: -13.953935623168945
    10. ',' → logprob: -15.078935623168945

Token 304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12702186405658722
    2. ' range' → logprob: -2.1270217895507812
    3. '(range' → logprob: -10.377021789550781
    4. '(' → logprob: -10.502021789550781
    5. 'in' → logprob: -11.127021789550781
    6. ' in' → logprob: -12.002021789550781
    7. ' ' → logprob: -12.252021789550781
    8. '[' → logprob: -13.127021789550781
    9. '1' → logprob: -13.377021789550781
    10. 'n' → logprob: -14.189521789550781

Token 305: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043805985478684306
    2. '(V' → logprob: -7.750438213348389
    3. 'range' → logprob: -12.75043773651123
    4. '1' → logprob: -14.00043773651123
    5. '(len' → logprob: -14.00043773651123
    6. ' (' → logprob: -14.25043773651123
    7. '(range' → logprob: -14.50043773651123
    8. '(n' → logprob: -14.75043773651123
    9. ' range' → logprob: -14.87543773651123
    10. ' ' → logprob: -15.62543773651123

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049251217395067215
    2. 'V' → logprob: -3.0492513179779053
    3. '(V' → logprob: -8.049251556396484
    4. 'len' → logprob: -8.799251556396484
    5. '(' → logprob: -9.674251556396484
    6. '2' → logprob: -10.174251556396484
    7. '0' → logprob: -10.299251556396484
    8. ' ' → logprob: -11.049251556396484
    9. 'range' → logprob: -11.799251556396484
    10. ' V' → logprob: -12.486751556396484

Token 307: ',V' (ID: 81155)
  Prédit: ',V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.06229043006896973
    2. ',' → logprob: -2.8122904300689697
    3. ' ,' → logprob: -8.06229019165039
    4. ',len' → logprob: -13.43729019165039
    5. '(V' → logprob: -13.93729019165039
    6. ',v' → logprob: -14.06229019165039
    7. ',Q' → logprob: -14.06229019165039
    8. ',i' → logprob: -14.31229019165039
    9. 'V' → logprob: -14.81229019165039
    10. '   ' → logprob: -15.43729019165039

Token 308: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.511406809295295e-06
    2. ' +' → logprob: -12.750006675720215
    3. '+
' → logprob: -13.625006675720215
    4. '1' → logprob: -13.750006675720215
    5. ')+' → logprob: -15.000006675720215
    6. '   ' → logprob: -15.375006675720215
    7. '[' → logprob: -15.500006675720215
    8. '```' → logprob: -16.1250057220459
    9. '+[' → logprob: -16.6250057220459
    10. '()+' → logprob: -16.6250057220459

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016146517009474337
    2. '+' → logprob: -9.000161170959473
    3. ' ' → logprob: -10.625161170959473
    4. 'V' → logprob: -11.500161170959473
    5. '2' → logprob: -13.875161170959473
    6. 'i' → logprob: -14.250161170959473
    7. '(V' → logprob: -14.375161170959473
    8. '   ' → logprob: -14.625161170959473
    9. '(' → logprob: -15.375161170959473
    10. '```' → logprob: -15.375161170959473

Token 310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22593265771865845
    2. '):' → logprob: -2.1009325981140137
    3. ':' → logprob: -2.8509325981140137
    4. ':
' → logprob: -3.9759325981140137
    5. '   ' → logprob: -5.725932598114014
    6. ')' → logprob: -10.725933074951172
    7. '):
' → logprob: -10.725933074951172
    8. 'for' → logprob: -11.600933074951172
    9. ' ' → logprob: -12.100933074951172
    10. ',' → logprob: -12.975933074951172

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007253176998347044
    2. 'for' → logprob: -5.132253170013428
    3. ' for' → logprob: -6.632253170013428
    4. '	for' → logprob: -12.507253646850586
    5. '       ' → logprob: -13.257253646850586
    6. ' ' → logprob: -14.382253646850586
    7. '   ' → logprob: -15.132253646850586
    8. 'n' → logprob: -16.382253646850586
    9. '  ' → logprob: -16.757253646850586
    10. '```' → logprob: -17.382253646850586

Token 312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027481194585561752
    2. 'min' → logprob: -4.4024810791015625
    3. '   ' → logprob: -5.6524810791015625
    4. 'mind' → logprob: -5.7774810791015625
    5. 'dist' → logprob: -6.2774810791015625
    6. 'best' → logprob: -6.7774810791015625
    7. 'dd' → logprob: -7.0274810791015625
    8. 'n' → logprob: -7.4024810791015625
    9. 'm' → logprob: -7.6524810791015625
    10. 'mn' → logprob: -7.9024810791015625

Token 313: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02349574863910675
    2. ' j' → logprob: -3.773495674133301
    3. 'k' → logprob: -8.7734956741333
    4. 'v' → logprob: -10.5234956741333
    5. '   ' → logprob: -10.6484956741333
    6. 'x' → logprob: -11.6484956741333
    7. ' ' → logprob: -12.2734956741333
    8. '	j' → logprob: -12.6484956741333
    9. 'd' → logprob: -12.7734956741333
    10. ' k' → logprob: -12.7734956741333

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08927597850561142
    2. 'in' → logprob: -2.464276075363159
    3. 'range' → logprob: -8.464276313781738
    4. '   ' → logprob: -9.464276313781738
    5. ' ' → logprob: -10.589276313781738
    6. ' range' → logprob: -11.964276313781738
    7. '(' → logprob: -12.089276313781738
    8. '  ' → logprob: -13.214276313781738
    9. 'for' → logprob: -13.839276313781738
    10. 'n' → logprob: -13.839276313781738

Token 315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0144045390188694
    2. ' range' → logprob: -4.264404773712158
    3. '(' → logprob: -8.514404296875
    4. '(range' → logprob: -10.139404296875
    5. ' (' → logprob: -14.889404296875
    6. ' ' → logprob: -14.889404296875
    7. '	range' → logprob: -16.264404296875
    8. '   ' → logprob: -16.389404296875
    9. '  ' → logprob: -17.014404296875
    10. '
' → logprob: -17.014404296875

Token 316: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012797261297237128
    2. 'range' → logprob: -9.875127792358398
    3. ' (' → logprob: -10.125127792358398
    4. ' range' → logprob: -10.375127792358398
    5. '(range' → logprob: -12.625127792358398
    6. '(i' → logprob: -14.125127792358398
    7. '   ' → logprob: -14.500127792358398
    8. ' ' → logprob: -14.875127792358398
    9. '1' → logprob: -15.750127792358398
    10. '(
' → logprob: -15.875127792358398

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004137053620070219
    2. 'range' → logprob: -6.12913703918457
    3. '(' → logprob: -6.50413703918457
    4. 'i' → logprob: -8.87913703918457
    5. ' ' → logprob: -9.37913703918457
    6. ' range' → logprob: -9.62913703918457
    7. '(V' → logprob: -10.00413703918457
    8. 'V' → logprob: -10.00413703918457
    9. '   ' → logprob: -10.37913703918457
    10. '(i' → logprob: -10.50413703918457

Token 318: ',V' (ID: 81155)
  Prédit: ',V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.015458086505532265
    2. ',' → logprob: -4.265458106994629
    3. '(V' → logprob: -6.890458106994629
    4. ' ,' → logprob: -8.765458106994629
    5. ',(' → logprob: -9.515458106994629
    6. ',i' → logprob: -10.640458106994629
    7. ',j' → logprob: -12.390458106994629
    8. '(' → logprob: -12.390458106994629
    9. '   ' → logprob: -12.765458106994629
    10. '
' → logprob: -12.890458106994629

Token 319: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012903837487101555
    2. '(' → logprob: -4.387903690338135
    3. '(V' → logprob: -8.762904167175293
    4. '1' → logprob: -9.012904167175293
    5. '(j' → logprob: -10.762904167175293
    6. '   ' → logprob: -11.012904167175293
    7. '(i' → logprob: -11.137904167175293
    8. '+j' → logprob: -11.262904167175293
    9. '()+' → logprob: -11.387904167175293
    10. 'range' → logprob: -11.387904167175293

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02385130524635315
    2. '(V' → logprob: -4.14885139465332
    3. 'range' → logprob: -5.14885139465332
    4. '+' → logprob: -7.14885139465332
    5. 'V' → logprob: -7.52385139465332
    6. 'j' → logprob: -8.02385139465332
    7. '(' → logprob: -9.02385139465332
    8. ' range' → logprob: -9.27385139465332
    9. ' ' → logprob: -9.64885139465332
    10. '(range' → logprob: -11.02385139465332

Token 321: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14591503143310547
    2. '):' → logprob: -2.0209150314331055
    3. '       ' → logprob: -5.8959150314331055
    4. ':' → logprob: -8.145915031433105
    5. '   ' → logprob: -9.520915031433105
    6. ':
' → logprob: -9.895915031433105
    7. '):
' → logprob: -10.520915031433105
    8. 'if' → logprob: -11.895915031433105
    9. '):

' → logprob: -12.020915031433105
    10. ')' → logprob: -12.270915031433105

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007290935609489679
    2. ' if' → logprob: -5.132290840148926
    3. 'if' → logprob: -6.757290840148926
    4. 'n' → logprob: -9.132290840148926
    5. '   ' → logprob: -10.382290840148926
    6. '           ' → logprob: -10.632290840148926
    7. ' n' → logprob: -11.007290840148926
    8. ' nxt' → logprob: -12.382290840148926
    9. '```' → logprob: -12.757290840148926
    10. 'dist' → logprob: -13.382290840148926

Token 323: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12154607474803925
    2. '   ' → logprob: -2.7465460300445557
    3. '       ' → logprob: -3.7465460300445557
    4. 'n' → logprob: -3.8715460300445557
    5. 'for' → logprob: -5.871546268463135
    6. 'min' → logprob: -6.371546268463135
    7. '           ' → logprob: -7.871546268463135
    8. ' if' → logprob: -8.121545791625977
    9. 'best' → logprob: -8.871545791625977
    10. 'dist' → logprob: -9.246545791625977

Token 324: ' j' (ID: 441)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26507139205932617
    2. 'i' → logprob: -1.5150713920593262
    3. ' dist' → logprob: -4.765071392059326
    4. ' i' → logprob: -5.765071392059326
    5. '   ' → logprob: -7.390071392059326
    6. 'j' → logprob: -7.515071392059326
    7. '(i' → logprob: -9.515071868896484
    8. '(dist' → logprob: -10.140071868896484
    9. 'abs' → logprob: -10.640071868896484
    10. '	dist' → logprob: -11.015071868896484

Token 325: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.149576187133789
    2. '!=' → logprob: -1.149576187133789
    3. ' ==' → logprob: -1.899576187133789
    4. ' !=' → logprob: -2.024576187133789
    5. ' in' → logprob: -2.649576187133789
    6. 'in' → logprob: -5.524576187133789
    7. ' not' → logprob: -5.649576187133789
    8. ']==' → logprob: -6.399576187133789
    9. ']' → logprob: -6.649576187133789
    10. ']!=' → logprob: -6.899576187133789

Token 326: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003931384126190096
    2. ' i' → logprob: -7.875392913818359
    3. ' ' → logprob: -11.75039291381836
    4. '1' → logprob: -13.25039291381836
    5. '   ' → logprob: -13.62539291381836
    6. '	i' → logprob: -14.12539291381836
    7. '0' → logprob: -14.25039291381836
    8. '  ' → logprob: -15.37539291381836
    9. 'j' → logprob: -16.75039291381836
    10. '    ' → logprob: -16.93789291381836

Token 327: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7779011130332947
    2. ':
' → logprob: -0.9029011130332947
    3. 'continue' → logprob: -2.6529011726379395
    4. '           ' → logprob: -3.4029011726379395
    5. '       ' → logprob: -4.7779011726379395
    6. ' continue' → logprob: -4.9029011726379395
    7. ' or' → logprob: -5.0279011726379395
    8. '   ' → logprob: -5.7779011726379395
    9. ':n' → logprob: -6.1529011726379395
    10. '	continue' → logprob: -6.7779011726379395

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04891810193657875
    2. ' continue' → logprob: -3.6739180088043213
    3. 'continue' → logprob: -4.1739182472229
    4. 'n' → logprob: -6.0489182472229
    5. ' nxt' → logprob: -6.1739182472229
    6. ':' → logprob: -7.4239182472229
    7. ' or' → logprob: -7.5489182472229
    8. ':
' → logprob: -8.048917770385742
    9. '   ' → logprob: -8.173917770385742
    10. '       ' → logprob: -8.423917770385742

Token 329: ' continue' (ID: 4901)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012240137904882431
    2. '       ' → logprob: -5.637239933013916
    3. '           ' → logprob: -5.762239933013916
    4. ' nxt' → logprob: -6.137239933013916
    5. 'continue' (adapté à ' continue') → logprob: -6.512239933013916
    6. ' continue' → logprob: -6.887239933013916
    7. '   ' → logprob: -7.887239933013916
    8. ' n' → logprob: -8.637240409851074
    9. '               ' → logprob: -8.887240409851074
    10. ' ' → logprob: -9.762240409851074

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.24179228907451e-05
    2. '        
' → logprob: -10.750061988830566
    3. 'n' → logprob: -11.125061988830566
    4. '           ' → logprob: -12.125061988830566
    5. ' for' → logprob: -12.125061988830566
    6. '   ' → logprob: -12.625061988830566
    7. '
' → logprob: -13.125061988830566
    8. 'for' → logprob: -13.625061988830566
    9. ',' → logprob: -13.875061988830566
    10. ' nxt' → logprob: -14.000061988830566

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007912635803222656
    2. '   ' → logprob: -5.757912635803223
    3. 'n' → logprob: -6.132912635803223
    4. 'for' → logprob: -6.882912635803223
    5. ' for' → logprob: -7.132912635803223
    6. 'dist' → logprob: -8.257912635803223
    7. ' nxt' → logprob: -8.382912635803223
    8. '           ' → logprob: -9.507912635803223
    9. 'next' → logprob: -10.257912635803223
    10. 'if' → logprob: -10.507912635803223

Token 332: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3581054210662842
    2. 'min' → logprob: -1.8581054210662842
    3. 'mind' → logprob: -2.983105421066284
    4. 'if' → logprob: -3.358105421066284
    5. 'n' → logprob: -3.483105421066284
    6. 'best' → logprob: -4.983105659484863
    7. 'mn' → logprob: -5.233105659484863
    8. 'dist' → logprob: -5.608105659484863
    9. 'm' → logprob: -6.108105659484863
    10. '   ' → logprob: -6.483105659484863

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1527104377746582
    2. '=' → logprob: -2.027710437774658
    3. '=False' → logprob: -4.652710437774658
    4. '=True' → logprob: -8.4027099609375
    5. 'flag' → logprob: -10.0277099609375
    6. 'found' → logprob: -10.1527099609375
    7. '_=' → logprob: -10.6527099609375
    8. '_flag' → logprob: -11.0277099609375
    9. 'for' → logprob: -11.2777099609375
    10. ' ' → logprob: -11.5277099609375

Token 334: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000930163892917335
    2. '999' → logprob: -7.500930309295654
    3. ' False' → logprob: -8.375929832458496
    4. '0' → logprob: -8.875929832458496
    5. '-' → logprob: -12.375929832458496
    6. 'None' → logprob: -13.625929832458496
    7. 'True' → logprob: -14.625929832458496
    8. 'false' → logprob: -15.250929832458496
    9. '   ' → logprob: -15.500929832458496
    10. ' ' → logprob: -15.500929832458496

Token 335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016974377213045955
    2. ' for' → logprob: -7.001697540283203
    3. '<|end|>' → logprob: -8.001697540283203
    4. '        
' → logprob: -8.251697540283203
    5. '
' → logprob: -9.251697540283203
    6. '	' → logprob: -11.126697540283203
    7. ' 
' → logprob: -11.251697540283203
    8. 'for' → logprob: -11.501697540283203
    9. ',' → logprob: -11.751697540283203
    10. '	for' → logprob: -12.001697540283203

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003532367292791605
    2. '<|end|>' → logprob: -5.753532409667969
    3. '	' → logprob: -9.003532409667969
    4. ' for' → logprob: -9.253532409667969
    5. '   ' → logprob: -9.503532409667969
    6. ' ' → logprob: -10.628532409667969
    7. '<|end|>' → logprob: -11.753532409667969
    8. '	   ' → logprob: -12.378532409667969
    9. '        
' → logprob: -12.503532409667969
    10. '```' → logprob: -12.628532409667969

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001812033005990088
    2. '       ' → logprob: -6.501811981201172
    3. 'min' → logprob: -8.626811981201172
    4. '   ' → logprob: -9.626811981201172
    5. ' for' → logprob: -10.001811981201172
    6. 'best' → logprob: -12.376811981201172
    7. 'minimum' → logprob: -12.876811981201172
    8. 'mind' → logprob: -13.001811981201172
    9. 'dist' → logprob: -13.126811981201172
    10. 'dd' → logprob: -13.876811981201172

Token 338: ' z' (ID: 579)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3920519351959229
    2. 'nx' → logprob: -2.017051935195923
    3. 'x' → logprob: -2.142051935195923
    4. 'n' → logprob: -2.517051935195923
    5. 'v' → logprob: -2.642051935195923
    6. 'to' → logprob: -3.267051935195923
    7. 'k' → logprob: -3.392051935195923
    8. '(n' → logprob: -3.392051935195923
    9. '(v' → logprob: -3.892051935195923
    10. 't' → logprob: -3.892051935195923

Token 339: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1626410484313965
    2. ',b' → logprob: -1.4126410484313965
    3. ' in' → logprob: -1.5376410484313965
    4. ',' → logprob: -2.0376410484313965
    5. ',v' → logprob: -2.9126410484313965
    6. ',a' → logprob: -4.1626410484313965
    7. ',n' → logprob: -4.7876410484313965
    8. 'b' → logprob: -5.5376410484313965
    9. ',e' → logprob: -5.7876410484313965
    10. ',c' → logprob: -5.9126410484313965

Token 340: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0020045305136591196
    2. 'range' → logprob: -6.752004623413086
    3. ' es' → logprob: -7.127004623413086
    4. ' range' → logprob: -10.627004623413086
    5. '(es' → logprob: -12.127004623413086
    6. '	es' → logprob: -14.877004623413086
    7. '[' → logprob: -15.002004623413086
    8. ' ' → logprob: -15.627004623413086
    9. '   ' → logprob: -16.627004623413086
    10. '(' → logprob: -17.002004623413086

Token 341: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.966313281329349e-05
    2. '[j' → logprob: -10.125049591064453
    3. 'i' → logprob: -12.000049591064453
    4. '   ' → logprob: -13.875049591064453
    5. '[' → logprob: -14.250049591064453
    6. '       ' → logprob: -15.000049591064453
    7. '
' → logprob: -15.625049591064453
    8. '

' → logprob: -15.750049591064453
    9. ' [' → logprob: -16.000049591064453
    10. '           ' → logprob: -16.125049591064453

Token 342: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.38732367753982544
    2. ']:
' → logprob: -1.1373236179351807
    3. ']:
' → logprob: -8.512323379516602
    4. ']:

' → logprob: -9.387323379516602
    5. ']' → logprob: -9.762323379516602
    6. '       ' → logprob: -9.762323379516602
    7. '[' → logprob: -11.137323379516602
    8. ' ]' → logprob: -12.262323379516602
    9. ']:


' → logprob: -12.387323379516602
    10. ':' → logprob: -12.512323379516602

Token 343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005336135509423912
    2. ' if' → logprob: -8.250534057617188
    3. '	       ' → logprob: -8.500534057617188
    4. ',' → logprob: -10.875534057617188
    5. ':' → logprob: -11.250534057617188
    6. '<|end|>' → logprob: -11.625534057617188
    7. '       ' → logprob: -12.125534057617188
    8. 'if' → logprob: -12.125534057617188
    9. '[' → logprob: -12.875534057617188
    10. '          ' → logprob: -13.125534057617188

Token 344: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020756404846906662
    2. 'if' → logprob: -4.520756244659424
    3. ' if' → logprob: -4.645756244659424
    4. '	       ' → logprob: -10.895756721496582
    5. '               ' → logprob: -11.770756721496582
    6. ',' → logprob: -11.770756721496582
    7. 'v' → logprob: -12.270756721496582
    8. '   ' → logprob: -12.520756721496582
    9. '            
' → logprob: -12.895756721496582
    10. '	if' → logprob: -12.895756721496582

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2612997889518738
    2. '=' → logprob: -1.6362998485565186
    3. ',j' → logprob: -4.3862996101379395
    4. ',' → logprob: -5.1362996101379395
    5. ',k' → logprob: -5.2612996101379395
    6. ',v' → logprob: -5.8862996101379395
    7. 'k' → logprob: -6.1362996101379395
    8. '=j' → logprob: -6.2612996101379395
    9. '0' → logprob: -7.1362996101379395
    10. '=k' → logprob: -7.5112996101379395

Token 346: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0014340397901833057
    2. '0' → logprob: -7.126433849334717
    3. ' z' → logprob: -7.376433849334717
    4. '   ' → logprob: -13.626434326171875
    5. ' ' → logprob: -13.876434326171875
    6. 'j' → logprob: -14.626434326171875
    7. '	z' → logprob: -14.626434326171875
    8. '[' → logprob: -15.626434326171875
    9. '1' → logprob: -16.626434326171875
    10. '[z' → logprob: -16.751434326171875

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024727347772568464
    2. '0' → logprob: -8.37524700164795
    3. '(' → logprob: -12.37524700164795
    4. ' ' → logprob: -12.50024700164795
    5. '   ' → logprob: -13.62524700164795
    6. ' [' → logprob: -13.75024700164795
    7. '```' → logprob: -14.00024700164795
    8. '=' → logprob: -14.12524700164795
    9. ',' → logprob: -14.25024700164795
    10. '][' → logprob: -14.37524700164795

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. '1' → logprob: -12.375005722045898
    3. ' ' → logprob: -14.000005722045898
    4. '
' → logprob: -14.687505722045898
    5. '   ' → logprob: -15.625005722045898
    6. '۰' → logprob: -16.5000057220459
    7. '```' → logprob: -16.5625057220459
    8. 'a' → logprob: -17.9375057220459
    9. '00' → logprob: -18.0625057220459
    10. '٠' → logprob: -18.1250057220459

Token 349: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4771181344985962
    2. ']' → logprob: -1.4771181344985962
    3. ']
' → logprob: -2.1021180152893066
    4. '
' → logprob: -3.8521180152893066
    5. '       ' → logprob: -6.352118015289307
    6. ')' → logprob: -6.727118015289307
    7. ',' → logprob: -6.977118015289307
    8. ';' → logprob: -7.102118015289307
    9. ')
' → logprob: -7.852118015289307
    10. '<|end|>' → logprob: -7.852118015289307

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045807508286088705
    2. 'if' → logprob: -8.250457763671875
    3. ' if' → logprob: -8.625457763671875
    4. '       ' → logprob: -11.625457763671875
    5. '   ' → logprob: -13.500457763671875
    6. ',' → logprob: -13.500457763671875
    7. '            
' → logprob: -13.625457763671875
    8. '               ' → logprob: -13.875457763671875
    9. '<|end|>' → logprob: -13.875457763671875
    10. '	       ' → logprob: -14.125457763671875

Token 351: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003884894831571728
    2. '           ' → logprob: -7.8753886222839355
    3. ' if' → logprob: -12.250388145446777
    4. '       ' → logprob: -13.250388145446777
    5. '#' → logprob: -14.000388145446777
    6. '   ' → logprob: -14.750388145446777
    7. '               ' → logprob: -15.500388145446777
    8. '            
' → logprob: -16.250389099121094
    9. '                   ' → logprob: -16.625389099121094
    10. 'for' → logprob: -17.000389099121094

Token 352: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001052338513545692
    2. ' dist' → logprob: -6.876052379608154
    3. '(dist' → logprob: -11.751051902770996
    4. '   ' → logprob: -12.126051902770996
    5. '	dist' → logprob: -12.626051902770996
    6. 'abs' → logprob: -13.501051902770996
    7. 'k' → logprob: -14.751051902770996
    8. ' ' → logprob: -14.751051902770996
    9. '  ' → logprob: -15.251051902770996
    10. 'd' → logprob: -15.501051902770996

Token 353: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.047134305234067e-05
    2. '[k' → logprob: -10.875030517578125
    3. '[j' → logprob: -11.875030517578125
    4. 'i' → logprob: -12.375030517578125
    5. '[' → logprob: -16.125030517578125
    6. '[z' → logprob: -17.000030517578125
    7. ' [' → logprob: -17.625030517578125
    8. '```' → logprob: -17.750030517578125
    9. '][' → logprob: -17.875030517578125
    10. ' i' → logprob: -18.000030517578125

Token 354: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05613822862505913
    2. '[k' → logprob: -2.931138277053833
    3. '[j' → logprob: -6.931138038635254
    4. '[i' → logprob: -8.931138038635254
    5. 'k' → logprob: -9.306138038635254
    6. ']' → logprob: -10.806138038635254
    7. '[' → logprob: -11.181138038635254
    8. ' ][' → logprob: -11.806138038635254
    9. '[z' → logprob: -12.681138038635254
    10. 'j' → logprob: -13.431138038635254

Token 355: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015197417233139277
    2. 'j' → logprob: -6.501519680023193
    3. ']' → logprob: -11.876520156860352
    4. ' k' → logprob: -12.626520156860352
    5. '][' → logprob: -13.001520156860352
    6. '[k' → logprob: -13.251520156860352
    7. 'z' → logprob: -14.126520156860352
    8. 'i' → logprob: -14.626520156860352
    9. '
' → logprob: -14.751520156860352
    10. ' ' → logprob: -14.751520156860352

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31348615884780884
    2. ']==' → logprob: -1.313486099243164
    3. ']+' → logprob: -8.438486099243164
    4. ']>=' → logprob: -12.938486099243164
    5. '']==' → logprob: -13.438486099243164
    6. ']>' → logprob: -13.563486099243164
    7. ' ]' → logprob: -13.938486099243164
    8. '==' → logprob: -14.563486099243164
    9. ']=='' → logprob: -15.313486099243164
    10. ']!=' → logprob: -15.438486099243164

Token 357: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0021985520143061876
    2. ' ==' → logprob: -6.127198696136475
    3. '=' → logprob: -11.877198219299316
    4. ']==' → logprob: -13.002198219299316
    5. '==(' → logprob: -13.127198219299316
    6. '==
' → logprob: -13.502198219299316
    7. '===' → logprob: -14.627198219299316
    8. '```' → logprob: -15.502198219299316
    9. ')==' → logprob: -16.502199172973633
    10. '>' → logprob: -16.627199172973633

Token 358: ' z' (ID: 579)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005612457636743784
    2. 'z' → logprob: -5.505612373352051
    3. ' dist' → logprob: -6.630612373352051
    4. 'c' → logprob: -8.88061237335205
    5. 'k' → logprob: -11.13061237335205
    6. '(dist' → logprob: -11.13061237335205
    7. ' z' → logprob: -11.38061237335205
    8. '   ' → logprob: -11.75561237335205
    9. 'es' → logprob: -12.00561237335205
    10. '	dist' → logprob: -12.50561237335205

Token 359: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8444881536415778e-05
    2. '1' → logprob: -10.500028610229492
    3. ' [' → logprob: -15.375028610229492
    4. '][' → logprob: -15.750028610229492
    5. '[
' → logprob: -16.750028610229492
    6. '
' → logprob: -17.000028610229492
    7. '   ' → logprob: -17.000028610229492
    8. ' ' → logprob: -17.125028610229492
    9. ''s' → logprob: -17.812528610229492
    10. '(' → logprob: -18.062528610229492

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001307142956648022
    2. '[' → logprob: -9.000130653381348
    3. '
' → logprob: -12.125130653381348
    4. '```' → logprob: -14.750130653381348
    5. '   ' → logprob: -15.250130653381348
    6. '' → logprob: -15.375130653381348
    7. '][' → logprob: -16.250131607055664
    8. '

' → logprob: -16.500131607055664
    9. '۱' → logprob: -16.687631607055664
    10. '{' → logprob: -16.812631607055664

Token 361: ']+' (ID: 15344)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741385877132416
    2. '+' → logprob: -0.974138617515564
    3. ']+' → logprob: -10.474138259887695
    4. '+k' → logprob: -11.474138259887695
    5. ']' → logprob: -11.724138259887695
    6. ' plus' → logprob: -11.724138259887695
    7. ' ' → logprob: -13.099138259887695
    8. ' ' → logprob: -13.599138259887695
    9. ' +
' → logprob: -14.474138259887695
    10. '+
' → logprob: -14.599138259887695

Token 362: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2664456789934775e-06
    2. ' dist' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.875001907348633
    4. '(dist' → logprob: -19.625001907348633
    5. '	dist' → logprob: -19.750001907348633
    6. '  ' → logprob: -20.875001907348633
    7. ' ' → logprob: -21.125001907348633
    8. 'd' → logprob: -22.250001907348633
    9. '.dist' → logprob: -22.500001907348633
    10. '+' → logprob: -22.625001907348633

Token 363: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.003178306156769395
    2. 'k' → logprob: -5.753178119659424
    3. '[z' → logprob: -15.253178596496582
    4. '(k' → logprob: -16.628177642822266
    5. '[' → logprob: -16.753177642822266
    6. '{k' → logprob: -17.003177642822266
    7. '	k' → logprob: -17.253177642822266
    8. ' k' → logprob: -17.753177642822266
    9. '[j' → logprob: -18.253177642822266
    10. ' [' → logprob: -18.878177642822266

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4741593599319458
    2. '[j' → logprob: -0.9741593599319458
    3. '[k' → logprob: -10.224159240722656
    4. ' ][' → logprob: -10.724159240722656
    5. '[i' → logprob: -11.349159240722656
    6. '[' → logprob: -12.349159240722656
    7. ']' → logprob: -12.349159240722656
    8. ' ' → logprob: -13.724159240722656
    9. '   ' → logprob: -14.099159240722656
    10. ' [' → logprob: -14.224159240722656

Token 365: 'j' (ID: 73)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.014181602746248245
    2. 'j' → logprob: -4.264181613922119
    3. '][' → logprob: -11.264181137084961
    4. ' j' → logprob: -12.389181137084961
    5. '	j' → logprob: -14.764181137084961
    6. ' [' → logprob: -15.514181137084961
    7. '[' → logprob: -15.514181137084961
    8. '   ' → logprob: -15.889181137084961
    9. ',j' → logprob: -16.38918113708496
    10. '```' → logprob: -16.38918113708496

Token 366: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03934592381119728
    2. ':
' → logprob: -3.5393459796905518
    3. ']:' → logprob: -5.164345741271973
    4. '):' → logprob: -6.164345741271973
    5. ']:
' → logprob: -7.664345741271973
    6. '):
' → logprob: -7.914345741271973
    7. '[' → logprob: -8.164345741271973
    8. '               ' → logprob: -8.289345741271973
    9. '           ' → logprob: -9.164345741271973
    10. '[i' → logprob: -9.539345741271973

Token 367: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002083881525322795
    2. '           ' → logprob: -6.627083778381348
    3. 'n' → logprob: -8.752083778381348
    4. '                   ' → logprob: -8.877083778381348
    5. ':
' → logprob: -9.002083778381348
    6. ' found' → logprob: -9.502083778381348
    7. ':' → logprob: -10.127083778381348
    8. '[' → logprob: -10.377083778381348
    9. '                
' → logprob: -10.502083778381348
    10. 'found' → logprob: -10.877083778381348

Token 368: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038919247686862946
    2. '               ' → logprob: -3.66391921043396
    3. '                   ' → logprob: -4.538919448852539
    4. ' nxt' → logprob: -6.413919448852539
    5. ' n' → logprob: -8.913919448852539
    6. '                       ' → logprob: -10.538919448852539
    7. '           ' → logprob: -10.913919448852539
    8. '	n' → logprob: -11.288919448852539
    9. '   ' → logprob: -11.788919448852539
    10. ' ' → logprob: -13.038919448852539

Token 369: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -8.895480277715251e-06
    2. 'ndry' → logprob: -12.125008583068848
    3. 'n' → logprob: -14.125008583068848
    4. 'нд' → logprob: -14.250008583068848
    5. '[i' → logprob: -14.625008583068848
    6. '[' → logprob: -15.000008583068848
    7. 'nt' → logprob: -15.000008583068848
    8. ' nd' → logprob: -15.125008583068848
    9. '_nd' → logprob: -15.750008583068848
    10. 'ndag' → logprob: -16.125009536743164

Token 370: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -2.2200749754119897e-06
    2. ' ary' → logprob: -13.750001907348633
    3. '[' → logprob: -14.500001907348633
    4. 'array' → logprob: -14.750001907348633
    5. 'ar' → logprob: -16.750001907348633
    6. 'a' → logprob: -17.625001907348633
    7. 'arry' → logprob: -17.750001907348633
    8. 'd' → logprob: -18.250001907348633
    9. 'arya' → logprob: -18.375001907348633
    10. 'n' → logprob: -18.375001907348633

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[j' → logprob: -13.75000286102295
    3. ' [' → logprob: -14.37500286102295
    4. '           ' → logprob: -15.12500286102295
    5. '][' → logprob: -15.62500286102295
    6. '[I' → logprob: -15.62500286102295
    7. '   ' → logprob: -16.000001907348633
    8. '       ' → logprob: -17.000001907348633
    9. '```' → logprob: -17.125001907348633
    10. '               ' → logprob: -17.125001907348633

Token 372: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.787507714354433e-05
    2. '[j' → logprob: -10.75004768371582
    3. ']' → logprob: -11.00004768371582
    4. '[k' → logprob: -12.37504768371582
    5. ' ][' → logprob: -12.50004768371582
    6. '[i' → logprob: -15.12504768371582
    7. '           ' → logprob: -15.25004768371582
    8. ']][' → logprob: -15.37504768371582
    9. '"][' → logprob: -15.50004768371582
    10. '   ' → logprob: -15.62504768371582

Token 373: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25193288922309875
    2. 'k' → logprob: -1.5019328594207764
    3. ' j' → logprob: -13.251933097839355
    4. 'z' → logprob: -13.376933097839355
    5. ' k' → logprob: -15.001933097839355
    6. ']' → logprob: -17.25193214416504
    7. ' ' → logprob: -17.75193214416504
    8. 'jk' → logprob: -17.75193214416504
    9. '	j' → logprob: -18.00193214416504
    10. '   ' → logprob: -18.00193214416504

Token 374: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26393836736679077
    2. ' =' → logprob: -2.0139384269714355
    3. '=' → logprob: -2.6389384269714355
    4. ']=' → logprob: -3.6389384269714355
    5. ' ]' → logprob: -7.2639384269714355
    6. '=k' → logprob: -9.263937950134277
    7. ')' → logprob: -13.388937950134277
    8. 'k' → logprob: -14.263937950134277
    9. ')=' → logprob: -14.388937950134277
    10. ' ' → logprob: -15.013937950134277

Token 375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2526378929615021
    2. ' =' → logprob: -1.5026378631591797
    3. '=k' → logprob: -7.25263786315918
    4. '=z' → logprob: -16.62763786315918
    5. ',k' → logprob: -16.87763786315918
    6. ' ' → logprob: -17.37763786315918
    7. 'k' → logprob: -17.62763786315918
    8. '=i' → logprob: -17.75263786315918
    9. ',' → logprob: -18.12763786315918
    10. '=j' → logprob: -18.12763786315918

Token 376: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.8889261304575484e-06
    2. ' k' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.500003814697266
    4. 'z' → logprob: -17.500003814697266
    5. ' ' → logprob: -19.000003814697266
    6. '  ' → logprob: -20.375003814697266
    7. '	k' → logprob: -20.875003814697266
    8. '           ' → logprob: -21.000003814697266
    9. '                   ' → logprob: -21.125003814697266
    10. '               ' → logprob: -21.375003814697266

Token 377: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009307271800935268
    2. '<|end|>' → logprob: -4.759307384490967
    3. '                
' → logprob: -8.759306907653809
    4. '                   ' → logprob: -8.884306907653809
    5. '
' → logprob: -9.009306907653809
    6. '                ' → logprob: -9.384306907653809
    7. '			' → logprob: -10.134306907653809
    8. '<|end|>' → logprob: -10.509306907653809
    9. ',' → logprob: -10.634306907653809
    10. '              ' → logprob: -11.134306907653809

Token 378: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.635164754698053e-05
    2. 'break' → logprob: -10.125066757202148
    3. '                   ' → logprob: -11.375066757202148
    4. '                ' → logprob: -13.250066757202148
    5. 'found' → logprob: -13.250066757202148
    6. '              ' → logprob: -13.500066757202148
    7. '           ' → logprob: -13.500066757202148
    8. '                       ' → logprob: -13.500066757202148
    9. '```' → logprob: -13.750066757202148
    10. '			' → logprob: -13.750066757202148

Token 379: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.7451433539390564
    2. '               ' → logprob: -1.1201434135437012
    3. ' found' → logprob: -1.7451434135437012
    4. 'break' → logprob: -3.995143413543701
    5. ' break' → logprob: -5.120143413543701
    6. '
' → logprob: -10.745142936706543
    7. '	found' → logprob: -11.120142936706543
    8. 'Found' → logprob: -11.120142936706543
    9. '           ' → logprob: -11.245142936706543
    10. '       ' → logprob: -11.620142936706543

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31366702914237976
    2. '=' → logprob: -1.3136670589447021
    3. '=True' → logprob: -7.813666820526123
    4. '=
' → logprob: -14.563667297363281
    5. ' =
' → logprob: -15.188667297363281
    6. '=False' → logprob: -16.18866729736328
    7. 'True' → logprob: -16.81366729736328
    8. '[' → logprob: -16.93866729736328
    9. '(True' → logprob: -17.18866729736328
    10. ' ' → logprob: -17.56366729736328

Token 381: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -18.626502990722656
    4. '=True' → logprob: -19.001502990722656
    5. 'true' → logprob: -21.126502990722656
    6. '1' → logprob: -22.501502990722656
    7. '.True' → logprob: -22.501502990722656
    8. '   ' → logprob: -23.001502990722656
    9. 'TRUE' → logprob: -23.501502990722656
    10. 'False' → logprob: -23.626502990722656

Token 382: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.8087270038668066e-05
    2. '<|end|>' → logprob: -10.875027656555176
    3. '		       ' → logprob: -12.500027656555176
    4. '			' → logprob: -13.750027656555176
    5. '                   ' → logprob: -14.125027656555176
    6. '       ' → logprob: -14.125027656555176
    7. '           ' → logprob: -14.375027656555176
    8. '	           ' → logprob: -14.875027656555176
    9. '                       ' → logprob: -15.000027656555176
    10. '```' → logprob: -15.500027656555176

Token 383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003607296966947615
    2. '		       ' → logprob: -8.750360488891602
    3. '       ' → logprob: -9.375360488891602
    4. '			' → logprob: -10.000360488891602
    5. '	           ' → logprob: -10.875360488891602
    6. 'if' → logprob: -11.125360488891602
    7. '	' → logprob: -11.625360488891602
    8. '	       ' → logprob: -12.375360488891602
    9. ' if' → logprob: -12.875360488891602
    10. '	if' → logprob: -12.875360488891602

Token 384: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01437151525169611
    2. 'break' (adapté à ' break') → logprob: -4.264371395111084
    3. ' break' → logprob: -8.764371871948242
    4. '			' → logprob: -10.389371871948242
    5. '	break' → logprob: -11.889371871948242
    6. '		       ' → logprob: -12.764371871948242
    7. '       ' → logprob: -12.889371871948242
    8. '```' → logprob: -13.014371871948242
    9. '           ' → logprob: -13.389371871948242
    10. '                   ' → logprob: -13.639371871948242

Token 385: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.038148440420627594
    2. 'not' → logprob: -3.2881484031677246
    3. ' found' → logprob: -9.413148880004883
    4. 'found' → logprob: -11.288148880004883
    5. ' DBG' → logprob: -12.413148880004883
    6. '	not' → logprob: -12.913148880004883
    7. 'DBG' → logprob: -13.288148880004883
    8. '!' → logprob: -14.163148880004883
    9. ' ' → logprob: -14.288148880004883
    10. '   ' → logprob: -14.413148880004883

Token 389: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.693148672580719
    2. 'found' → logprob: -0.693148672580719
    3. '	found' → logprob: -14.068148612976074
    4. '(found' → logprob: -14.443148612976074
    5. '_found' → logprob: -15.943148612976074
    6. 'Found' → logprob: -16.94314956665039
    7. ' ' → logprob: -18.44314956665039
    8. ' Found' → logprob: -19.56814956665039
    9. ' ' → logprob: -19.81814956665039
    10. 'FOUND' → logprob: -20.56814956665039

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29208120703697205
    2. ':
' → logprob: -1.4170812368392944
    3. '           ' → logprob: -4.542081356048584
    4. ' and' → logprob: -9.792080879211426
    5. ' :
' → logprob: -9.917080879211426
    6. ' :' → logprob: -10.292080879211426
    7. '       ' → logprob: -11.042080879211426
    8. '               ' → logprob: -11.292080879211426
    9. ',' → logprob: -11.917080879211426
    10. '          ' → logprob: -12.042080879211426

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04566001147031784
    2. 'n' → logprob: -3.4206600189208984
    3. ' nxt' → logprob: -5.170660018920898
    4. ' n' → logprob: -6.045660018920898
    5. ' pass' → logprob: -6.045660018920898
    6. '   ' → logprob: -7.795660018920898
    7. '               ' → logprob: -8.170660018920898
    8. 'pass' → logprob: -8.420660018920898
    9. '       ' → logprob: -8.670660018920898
    10. '	       ' → logprob: -9.795660018920898

Token 392: ' print' (ID: 2123)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10487594455480576
    2. ' nxt' → logprob: -2.9798760414123535
    3. 'pass' → logprob: -3.6048760414123535
    4. ' pass' → logprob: -3.9798760414123535
    5. 'print' (adapté à ' print') → logprob: -6.4798760414123535
    6. '   ' → logprob: -8.604875564575195
    7. ' n' → logprob: -8.729875564575195
    8. 'break' → logprob: -8.729875564575195
    9. 'sys' → logprob: -8.854875564575195
    10. 'raise' → logprob: -9.229875564575195

Token 393: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4844920337200165
    2. '(-' → logprob: -1.1094920635223389
    3. '("?' → logprob: -3.359492063522339
    4. '(i' → logprob: -5.10949182510376
    5. '('' → logprob: -5.23449182510376
    6. '("-' → logprob: -6.10949182510376
    7. '(' → logprob: -6.10949182510376
    8. '(j' → logprob: -6.23449182510376
    9. '('?' → logprob: -7.60949182510376
    10. '("")' → logprob: -7.60949182510376

Token 394: 'n' (ID: 77)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8293551206588745
    2. '-' → logprob: -0.9543551206588745
    3. 'i' → logprob: -2.204355239868164
    4. '"No' → logprob: -3.704355239868164
    5. '"?' → logprob: -4.579355239868164
    6. ''' → logprob: -4.704355239868164
    7. 'im' → logprob: -5.329355239868164
    8. '-i' → logprob: -5.954355239868164
    9. 'Impossible' → logprob: -6.204355239868164
    10. 'j' → logprob: -6.454355239868164

Token 395: 'xt' (ID: 711)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.22073982656002045
    2. 'xt' → logprob: -2.4707398414611816
    3. 'ext' → logprob: -2.5957398414611816
    4. 'ot' → logprob: -3.3457398414611816
    5. 'error' → logprob: -6.845739841461182
    6. 'x' → logprob: -7.345739841461182
    7. ' error' → logprob: -8.470739364624023
    8. 'othing' → logprob: -8.470739364624023
    9. 'one' → logprob: -8.720739364624023
    10. 'e' → logprob: -8.720739364624023

Token 396: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0014060672838240862
    2. '")' → logprob: -8.126405715942383
    3. ' nd' → logprob: -8.501405715942383
    4. 'n' → logprob: -8.626405715942383
    5. '_nd' → logprob: -8.626405715942383
    6. 'error' → logprob: -8.876405715942383
    7. '[i' → logprob: -9.876405715942383
    8. 'not' → logprob: -9.876405715942383
    9. 'end' → logprob: -10.376405715942383
    10. 'und' → logprob: -10.501405715942383

Token 397: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.0001254693343071267
    2. 'array' → logprob: -9.625125885009766
    3. 'a' → logprob: -11.625125885009766
    4. 'ar' → logprob: -11.750125885009766
    5. '"' → logprob: -12.000125885009766
    6. 'arry' → logprob: -12.250125885009766
    7. 'ay' → logprob: -12.500125885009766
    8. 'arr' → logprob: -13.000125885009766
    9. '[' → logprob: -13.125125885009766
    10. ' ary' → logprob: -13.375125885009766

Token 398: ' ERR' (ID: 23093)
  Prédit: ' error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' error' → logprob: -0.8726110458374023
    2. '[i' → logprob: -0.9976110458374023
    3. ' not' → logprob: -3.3726110458374023
    4. ' failure' → logprob: -3.3726110458374023
    5. 'error' → logprob: -3.6226110458374023
    6. '")' → logprob: -3.7476110458374023
    7. '[' → logprob: -4.247611045837402
    8. ' fail' → logprob: -4.247611045837402
    9. 'fail' → logprob: -4.247611045837402
    10. 'not' → logprob: -4.872611045837402

Token 399: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007600823417305946
    2. '!")' → logprob: -5.882600784301758
    3. ')")' → logprob: -6.132600784301758
    4. ':' → logprob: -6.632600784301758
    5. '")
' → logprob: -7.632600784301758
    6. ')' → logprob: -7.882600784301758
    7. '!' → logprob: -8.757600784301758
    8. 'or' → logprob: -10.007600784301758
    9. '[i' → logprob: -10.132600784301758
    10. '");' → logprob: -10.882600784301758

Token 400: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.20752225816249847
    2. ' exit' → logprob: -1.7075222730636597
    3. 'sys' → logprob: -6.082522392272949
    4. 'break' → logprob: -6.707522392272949
    5. ' break' → logprob: -7.457522392272949
    6. '	exit' → logprob: -7.707522392272949
    7. ' sys' → logprob: -7.957522392272949
    8. 'quit' → logprob: -7.957522392272949
    9. '           ' → logprob: -8.33252239227295
    10. 'import' → logprob: -8.83252239227295

Token 402: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04105331376194954
    2. '(' → logprob: -3.666053295135498
    3. '()
' → logprob: -4.291053295135498
    4. '()\' → logprob: -7.416053295135498
    5. '()

' → logprob: -8.291053771972656
    6. '0' → logprob: -10.541053771972656
    7. '(
' → logprob: -10.916053771972656
    8. '<|end|>' → logprob: -11.416053771972656
    9. '```' → logprob: -11.666053771972656
    10. '(n' → logprob: -12.416053771972656

Token 403: 'F' (ID: 37)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5999383926391602
    2. 'for' → logprob: -1.8499383926391602
    3. '#' → logprob: -1.9749383926391602
    4. 'n' → logprob: -3.22493839263916
    5. '<|end|>' → logprob: -3.72493839263916
    6. 'max' → logprob: -3.97493839263916
    7. ')' → logprob: -4.22493839263916
    8. 'def' → logprob: -5.09993839263916
    9. 'next' → logprob: -5.09993839263916
    10. 'visited' → logprob: -5.59993839263916

Token 404: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.016402659937739372
    2. 'o' → logprob: -4.641402721405029
    3. 'OR' → logprob: -5.891402721405029
    4. 'O' → logprob: -6.641402721405029
    5. 'for' → logprob: -7.641402721405029
    6. '#' → logprob: -8.141402244567871
    7. 'r' → logprob: -8.266402244567871
    8. '[' → logprob: -8.391402244567871
    9. 'R' → logprob: -9.016402244567871
    10. '=' → logprob: -9.016402244567871

Token 405: ' in' (ID: 306)
  Prédit: '[V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[V' → logprob: -0.6435166597366333
    2. '[' → logprob: -1.0185166597366333
    3. '[[' → logprob: -3.6435165405273438
    4. '[MAX' → logprob: -3.7685165405273438
    5. '[]' → logprob: -4.018516540527344
    6. ' [' → logprob: -4.268516540527344
    7. '{}' → logprob: -5.643516540527344
    8. 'V' → logprob: -5.643516540527344
    9. 'MAX' → logprob: -5.768516540527344
    10. '[-' → logprob: -5.768516540527344

Token 406: 'l' (ID: 75)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40464839339256287
    2. 'n' → logprob: -1.4046484231948853
    3. 'f' → logprob: -3.2796483039855957
    4. 'N' → logprob: -3.4046483039855957
    5. 'F' → logprob: -4.779648303985596
    6. 'nt' → logprob: -6.654648303985596
    7. '(' → logprob: -6.654648303985596
    8. '())' → logprob: -7.279648303985596
    9. '_' → logprob: -7.654648303985596
    10. '[' → logprob: -8.279648780822754

Token 407: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03259832412004471
    2. '(' → logprob: -3.6575982570648193
    3. '()
' → logprob: -6.657598495483398
    4. ' ()' → logprob: -6.657598495483398
    5. '(V' → logprob: -6.782598495483398
    6. '(M' → logprob: -7.407598495483398
    7. '()[' → logprob: -7.407598495483398
    8. '[' → logprob: -8.157598495483398
    9. '(MAX' → logprob: -8.782598495483398
    10. '(len' → logprob: -8.907598495483398

Token 408: 'if' (ID: 366)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.0718638896942139
    2. 'for' → logprob: -1.1968638896942139
    3. 'ans' → logprob: -2.196863889694214
    4. 'dp' → logprob: -3.321863889694214
    5. 'K' → logprob: -3.446863889694214
    6. 'F' → logprob: -3.696863889694214
    7. 'res' → logprob: -4.196864128112793
    8. 'M' → logprob: -4.321864128112793
    9. 'R' → logprob: -4.571864128112793
    10. 'q' → logprob: -4.696864128112793

Token 409: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2972407937049866
    2. 'len' → logprob: -1.7972407341003418
    3. ' F' → logprob: -3.422240734100342
    4. ' not' → logprob: -3.672240734100342
    5. 'F' → logprob: -4.172240734100342
    6. ' DBG' → logprob: -4.797240734100342
    7. 'DBG' → logprob: -5.547240734100342
    8. '(len' → logprob: -5.547240734100342
    9. 'not' → logprob: -7.172240734100342
    10. ' ' → logprob: -7.297240734100342

Token 410: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -1.6166903151315637e-05
    2. '(' → logprob: -11.125016212463379
    3. 'F' → logprob: -14.125016212463379
    4. '(
' → logprob: -15.625016212463379
    5. ' (' → logprob: -16.000015258789062
    6. '==' → logprob: -16.125015258789062
    7. '()' → logprob: -16.625015258789062
    8. ')' → logprob: -17.250015258789062
    9. '(f' → logprob: -17.375015258789062
    10. '<F' → logprob: -17.750015258789062

Token 411: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004802126437425613
    2. ')==' → logprob: -6.254802227020264
    3. ')<' → logprob: -6.629802227020264
    4. ' )' → logprob: -7.379802227020264
    5. ')!=' → logprob: -7.379802227020264
    6. '()' → logprob: -9.754801750183105
    7. '==' → logprob: -9.754801750183105
    8. '[' → logprob: -9.879801750183105
    9. ')>' → logprob: -10.379801750183105
    10. '())' → logprob: -10.879801750183105

Token 412: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005858993157744408
    2. '1' → logprob: -5.880858898162842
    3. ' ' → logprob: -5.880858898162842
    4. 'V' → logprob: -9.005859375
    5. '2' → logprob: -9.130859375
    6. '3' → logprob: -11.630859375
    7. ' V' → logprob: -12.130859375
    8. '4' → logprob: -13.005859375
    9. '  ' → logprob: -13.568359375
    10. 'F' → logprob: -13.568359375

Token 413: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.593282163143158
    2. ' or' → logprob: -1.4682822227478027
    3. 'and' → logprob: -2.2182822227478027
    4. ':' → logprob: -2.7182822227478027
    5. ':
' → logprob: -3.9682822227478027
    6. 'or' → logprob: -4.093282222747803
    7. '   ' → logprob: -6.343282222747803
    8. ' ' → logprob: -6.468282222747803
    9. ':return' → logprob: -6.843282222747803
    10. '==' → logprob: -6.968282222747803

Token 414: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24718856811523438
    2. '   ' → logprob: -1.7471885681152344
    3. ' print' → logprob: -3.7471885681152344
    4. ' ' → logprob: -4.872188568115234
    5. 'n' → logprob: -5.747188568115234
    6. 'F' → logprob: -5.872188568115234
    7. '0' → logprob: -6.997188568115234
    8. 'inn' → logprob: -7.122188568115234
    9. '1' → logprob: -7.247188568115234
    10. '  ' → logprob: -7.372188568115234

Token 415: ' prob' (ID: 4921)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025678180158138275
    2. '0' → logprob: -4.2756781578063965
    3. ' print' → logprob: -5.2756781578063965
    4. '   ' → logprob: -5.4006781578063965
    5. '
' → logprob: -6.9006781578063965
    6. '1' → logprob: -8.150678634643555
    7. '  ' → logprob: -9.525678634643555
    8. 'n' → logprob: -9.775678634643555
    9. 'F' → logprob: -9.900678634643555
    10. ' ' → logprob: -9.900678634643555

Token 416: ' =' (ID: 314)
  Prédit: 'lem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lem' → logprob: -0.004479254595935345
    2. 'em' → logprob: -5.50447940826416
    3. 'LEM' → logprob: -8.25447940826416
    4. '=' → logprob: -10.12947940826416
    5. 'lems' → logprob: -10.37947940826416
    6. 'm' → logprob: -10.62947940826416
    7. ' =' → logprob: -11.12947940826416
    8. 'le' → logprob: -12.50447940826416
    9. 'l' → logprob: -12.75447940826416
    10. 'blem' → logprob: -12.87947940826416

Token 417: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21394218504428864
    2. 'dist' → logprob: -2.338942289352417
    3. 'F' → logprob: -3.338942289352417
    4. ' ' → logprob: -4.213942050933838
    5. '1' → logprob: -4.213942050933838
    6. 'abs' → logprob: -4.838942050933838
    7. '"' → logprob: -5.338942050933838
    8. '100' → logprob: -5.463942050933838
    9. 'len' → logprob: -6.088942050933838
    10. ' dist' → logprob: -6.213942050933838

Token 418: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3197636604309082
    2. 'dist' → logprob: -2.069763660430908
    3. 'F' → logprob: -2.444763660430908
    4. '"' → logprob: -3.944763660430908
    5. '1' → logprob: -4.194763660430908
    6. 'print' → logprob: -5.569763660430908
    7. 'abs' → logprob: -5.694763660430908
    8. '100' → logprob: -6.069763660430908
    9. 'len' → logprob: -6.194763660430908
    10. '-' → logprob: -6.194763660430908

Token 419: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10336557775735855
    2. ' else' → logprob: -2.478365659713745
    3. '
' → logprob: -4.478365421295166
    4. 'elif' → logprob: -6.853365421295166
    5. '    
' → logprob: -7.103365421295166
    6. ' 
' → logprob: -8.478365898132324
    7. '.' → logprob: -8.478365898132324
    8. '0' → logprob: -8.853365898132324
    9. '   ' → logprob: -9.603365898132324
    10. '  
' → logprob: -9.853365898132324

Token 420: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05157329514622688
    2. ' else' → logprob: -3.0515732765197754
    3. '
' → logprob: -6.176573276519775
    4. 'elif' → logprob: -7.926573276519775
    5. '0' → logprob: -8.801573753356934
    6. '.' → logprob: -9.051573753356934
    7. '    
' → logprob: -9.551573753356934
    8. '/' → logprob: -10.301573753356934
    9. '' → logprob: -11.051573753356934
    10. '_else' → logprob: -11.301573753356934

Token 421: ' tt' (ID: 34181)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6764118075370789
    2. 'else' → logprob: -0.8014118075370789
    3. 'elif' → logprob: -4.1764116287231445
    4. 'exit' → logprob: -5.3014116287231445
    5. 'sys' → logprob: -5.5514116287231445
    6. 'prob' → logprob: -5.8014116287231445
    7. 'n' → logprob: -5.9264116287231445
    8. 'for' → logprob: -6.0514116287231445
    9. 'pass' → logprob: -6.3014116287231445
    10. 'F' → logprob: -6.5514116287231445

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07466952502727509
    2. ' =' → logprob: -3.324669599533081
    3. 'ime' → logprob: -3.699669599533081
    4. 'r' → logprob: -5.699669361114502
    5. '+=' → logprob: -6.324669361114502
    6. '=[]' → logprob: -7.324669361114502
    7. '=
' → logprob: -7.324669361114502
    8. '=len' → logprob: -7.449669361114502
    9. '=int' → logprob: -7.699669361114502
    10. '=[]
' → logprob: -7.699669361114502

Token 423: ' F' (ID: 454)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.655536949634552
    2. 'F' → logprob: -0.780536949634552
    3. 'dist' → logprob: -4.530537128448486
    4. ' ' → logprob: -5.280537128448486
    5. ' F' → logprob: -6.155537128448486
    6. 'len' → logprob: -6.530537128448486
    7. '1' → logprob: -7.030537128448486
    8. '[' → logprob: -7.655537128448486
    9. ' dist' → logprob: -8.280536651611328
    10. '-' → logprob: -8.530536651611328

Token 424: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02732240967452526
    2. 'else' → logprob: -3.902322292327881
    3. ' else' → logprob: -6.027322292327881
    4. '[:]' → logprob: -6.652322292327881
    5. '
' → logprob: -6.777322292327881
    6. 'elif' → logprob: -7.652322292327881
    7. '[-' → logprob: -7.902322292327881
    8. '[:' → logprob: -8.402322769165039
    9. '0' → logprob: -8.777322769165039
    10. '[]' → logprob: -9.652322769165039

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003609680861700326
    2. '-' → logprob: -8.000361442565918
    3. '[' → logprob: -11.500361442565918
    4. ' ' → logprob: -11.625361442565918
    5. '   ' → logprob: -12.875361442565918
    6. ']' → logprob: -13.750361442565918
    7. '1' → logprob: -14.625361442565918
    8. '(' → logprob: -14.750361442565918
    9. ' -' → logprob: -15.187861442565918
    10. '#' → logprob: -15.250361442565918

Token 426: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2119508534669876
    2. ')' → logprob: -2.2119507789611816
    3. '<|end|>' → logprob: -3.3369507789611816
    4. '-' → logprob: -3.5869507789611816
    5. ' -' → logprob: -5.336950778961182
    6. ' ]' → logprob: -5.336950778961182
    7. '   ' → logprob: -5.836950778961182
    8. ' )' → logprob: -6.711950778961182
    9. ']+' → logprob: -6.836950778961182
    10. '+' → logprob: -7.086950778961182

Token 427: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05554118752479553
    2. ' else' → logprob: -2.9305412769317627
    3. '   ' → logprob: -8.180541038513184
    4. 'elif' → logprob: -8.180541038513184
    5. '_else' → logprob: -11.555541038513184
    6. '
' → logprob: -11.680541038513184
    7. '    
' → logprob: -11.930541038513184
    8. 'print' → logprob: -12.055541038513184
    9. 'n' → logprob: -12.180541038513184
    10. ' next' → logprob: -12.180541038513184

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6366681456565857
    2. ':
' → logprob: -0.7616681456565857
    3. '   ' → logprob: -5.8866682052612305
    4. ' :
' → logprob: -7.1366682052612305
    5. ' :' → logprob: -7.7616682052612305
    6. ':

' → logprob: -10.38666820526123
    7. '{' → logprob: -12.38666820526123
    8. '
' → logprob: -12.38666820526123
    9. ' ' → logprob: -12.51166820526123
    10. '  ' → logprob: -12.76166820526123

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07552111893892288
    2. 'prob' → logprob: -2.825521230697632
    3. ' prob' → logprob: -4.450520992279053
    4. 'n' → logprob: -8.325521469116211
    5. 'tt' → logprob: -8.575521469116211
    6. ' tt' → logprob: -8.700521469116211
    7. 'pro' → logprob: -8.825521469116211
    8. 'p' → logprob: -9.200521469116211
    9. ' ' → logprob: -9.575521469116211
    10. ' n' → logprob: -9.638021469116211

Token 430: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -0.04933406040072441
    2. '   ' → logprob: -4.2993340492248535
    3. 'tt' → logprob: -4.9243340492248535
    4. 'dp' → logprob: -5.6743340492248535
    5. 'F' → logprob: -5.6743340492248535
    6. 'n' → logprob: -5.7993340492248535
    7. 'l' → logprob: -6.4243340492248535
    8. 'p' → logprob: -6.7993340492248535
    9. 'ans' → logprob: -6.9243340492248535
    10. 'prev' → logprob: -7.4243340492248535

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11298862844705582
    2. '=' → logprob: -2.2379887104034424
    3. ',' → logprob: -8.862988471984863
    4. '[' → logprob: -11.862988471984863
    5. ' ' → logprob: -12.737988471984863
    6. ' ,' → logprob: -13.112988471984863
    7. '   ' → logprob: -13.237988471984863
    8. '=[]' → logprob: -13.362988471984863
    9. '.' → logprob: -13.737988471984863
    10. 'import' → logprob: -13.862988471984863

Token 432: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5419508814811707
    2. '0' → logprob: -2.0419509410858154
    3. 'F' → logprob: -2.0419509410858154
    4. ' ' → logprob: -2.2919509410858154
    5. ' F' → logprob: -3.5419509410858154
    6. 'len' → logprob: -4.416950702667236
    7. ' len' → logprob: -6.166950702667236
    8. '[' → logprob: -6.291950702667236
    9. '[F' → logprob: -6.291950702667236
    10. '(F' → logprob: -6.416950702667236

Token 433: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6942912936210632
    2. 'F' → logprob: -1.194291353225708
    3. '0' → logprob: -2.069291353225708
    4. 'len' → logprob: -3.069291353225708
    5. 'float' → logprob: -5.444291114807129
    6. '(F' → logprob: -5.694291114807129
    7. ' ' → logprob: -6.194291114807129
    8. '[F' → logprob: -6.319291114807129
    9. '(' → logprob: -6.444291114807129
    10. '[' → logprob: -6.444291114807129

Token 434: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09334276616573334
    2. 'tt' → logprob: -3.9683427810668945
    3. 'p' → logprob: -4.8433427810668945
    4. 'path' → logprob: -5.0933427810668945
    5. 'pt' → logprob: -5.3433427810668945
    6. 'F' → logprob: -5.4683427810668945
    7. 't' → logprob: -5.5933427810668945
    8. 'prob' → logprob: -5.5933427810668945
    9. 'idx' → logprob: -5.9683427810668945
    10. 'for' → logprob: -5.9683427810668945

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4214986264705658
    2. 'tt' → logprob: -2.0464985370635986
    3. 'F' → logprob: -2.7964985370635986
    4. 't' → logprob: -4.171498775482178
    5. 'L' → logprob: -4.296498775482178
    6. 'path' → logprob: -4.671498775482178
    7. 'T' → logprob: -5.046498775482178
    8. 'seq' → logprob: -5.046498775482178
    9. 'TT' → logprob: -5.296498775482178
    10. 'p' → logprob: -5.421498775482178

Token 436: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' (adapté à ' tt') → logprob: -0.27741768956184387
    2. 't' → logprob: -3.2774176597595215
    3. 'F' → logprob: -3.7774176597595215
    4. 'ts' → logprob: -4.2774176597595215
    5. 'T' → logprob: -4.4024176597595215
    6. 'ss' → logprob: -4.5274176597595215
    7. 'S' → logprob: -4.6524176597595215
    8. 's' → logprob: -4.7774176597595215
    9. 'st' → logprob: -4.7774176597595215
    10. 'ff' → logprob: -5.0274176597595215

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763054490089417
    2. ' =' → logprob: -0.8263054490089417
    3. ',' → logprob: -8.326305389404297
    4. '=[]' → logprob: -10.701305389404297
    5. '=len' → logprob: -10.826305389404297
    6. '=[' → logprob: -11.326305389404297
    7. '[' → logprob: -12.076305389404297
    8. '=[]
' → logprob: -12.076305389404297
    9. 's' → logprob: -12.201305389404297
    10. '=list' → logprob: -12.326305389404297

Token 438: ' inn' (ID: 5315)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.003502907231450081
    2. ' F' → logprob: -6.25350284576416
    3. '0' → logprob: -7.75350284576416
    4. '[]' → logprob: -8.50350284576416
    5. 'max' → logprob: -8.62850284576416
    6. ' ' → logprob: -8.87850284576416
    7. 'min' → logprob: -9.62850284576416
    8. ' [' → logprob: -9.62850284576416
    9. 'in' → logprob: -9.75350284576416
    10. ' (' → logprob: -10.12850284576416

Token 439: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2007883671903983e-05
    2. '()
' → logprob: -10.875021934509277
    3. '())' → logprob: -13.625021934509277
    4. '()]' → logprob: -14.250021934509277
    5. '()<' → logprob: -15.250021934509277
    6. '()

' → logprob: -15.375021934509277
    7. '()}' → logprob: -16.125022888183594
    8. '(' → logprob: -16.250022888183594
    9. '()`' → logprob: -16.375022888183594
    10. '()\' → logprob: -16.625022888183594

Token 440: 'pend' (ID: 5293)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8368998765945435
    2. 'ans' → logprob: -2.336899757385254
    3. 'dp' → logprob: -2.336899757385254
    4. 'for' → logprob: -2.586899757385254
    5. 'res' → logprob: -3.086899757385254
    6. 'path' → logprob: -3.336899757385254
    7. 'pos' → logprob: -3.586899757385254
    8. 'ret' → logprob: -3.586899757385254
    9. 'cur' → logprob: -3.586899757385254
    10. 'F' → logprob: -3.711899757385254

Token 441: 'req' (ID: 5331)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36402904987335205
    2. '=' → logprob: -1.364029049873352
    3. '_' → logprob: -3.7390289306640625
    4. 's' → logprob: -4.7390289306640625
    5. 't' → logprob: -5.9890289306640625
    6. '=[]' → logprob: -5.9890289306640625
    7. ',' → logprob: -6.2390289306640625
    8. '[' → logprob: -6.6140289306640625
    9. '_idx' → logprob: -6.9890289306640625
    10. '.' → logprob: -7.1140289306640625

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4157412052154541
    2. '=' → logprob: -1.165741205215454
    3. '=[]' → logprob: -4.040740966796875
    4. 's' → logprob: -5.540740966796875
    5. 'd' → logprob: -6.415740966796875
    6. '=[' → logprob: -7.165740966796875
    7. 'u' → logprob: -7.290740966796875
    8. ',' → logprob: -7.540740966796875
    9. '[' → logprob: -7.790740966796875
    10. 't' → logprob: -7.915740966796875

Token 443: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9632574319839478
    2. '[]' → logprob: -1.0882574319839478
    3. '[' → logprob: -1.9632574319839478
    4. 'inn' → logprob: -3.213257312774658
    5. '{}' → logprob: -3.588257312774658
    6. 'in' → logprob: -3.838257312774658
    7. '1' → logprob: -5.463257312774658
    8. 'F' → logprob: -5.463257312774658
    9. '[n' → logprob: -5.463257312774658
    10. '[F' → logprob: -5.588257312774658

Token 444: 'work' (ID: 1596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017602989450097084
    2. 'F' → logprob: -5.767602920532227
    3. 'pend' → logprob: -6.142602920532227
    4. '[]' → logprob: -6.642602920532227
    5. 'cur' → logprob: -6.642602920532227
    6. 'dp' → logprob: -7.517602920532227
    7. 'f' → logprob: -7.892602920532227
    8. 'prev' → logprob: -8.017602920532227
    9. 'tmp' → logprob: -8.142602920532227
    10. 'p' → logprob: -8.142602920532227

Token 445: 'req' (ID: 5331)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2635587155818939
    2. '=' → logprob: -1.5135587453842163
    3. '=[]' → logprob: -4.513558864593506
    4. '=[]
' → logprob: -8.388558387756348
    5. 's' → logprob: -9.763558387756348
    6. 'ed' → logprob: -10.013558387756348
    7. '[]' → logprob: -10.263558387756348
    8. '_' → logprob: -10.638558387756348
    9. '=[]
' → logprob: -10.888558387756348
    10. 'd' → logprob: -10.888558387756348

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06831131875514984
    2. ' =' → logprob: -2.8183112144470215
    3. '=[]' → logprob: -5.0683112144470215
    4. '=[]
' → logprob: -11.06831169128418
    5. '={}' → logprob: -12.56831169128418
    6. '=[]
' → logprob: -12.94331169128418
    7. '=[' → logprob: -13.06831169128418
    8. '[]' → logprob: -13.19331169128418
    9. ',' → logprob: -13.44331169128418
    10. '=[],' → logprob: -14.19331169128418

Token 447: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005313565954566002
    2. ' []' → logprob: -6.005313396453857
    3. '[' → logprob: -6.380313396453857
    4. '[]
' → logprob: -7.130313396453857
    5. '0' → logprob: -8.880313873291016
    6. '{}' → logprob: -10.005313873291016
    7. 'in' → logprob: -10.130313873291016
    8. '[F' → logprob: -10.755313873291016
    9. '[[' → logprob: -11.255313873291016
    10. '[in' → logprob: -11.380313873291016

Token 448: 'last' (ID: 6684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008689741604030132
    2. 'F' → logprob: -5.758689880371094
    3. 'f' → logprob: -6.758689880371094
    4. 'pend' → logprob: -7.258689880371094
    5. 'dp' → logprob: -7.508689880371094
    6. 'cur' → logprob: -8.133689880371094
    7. ' for' → logprob: -8.633689880371094
    8. 'cnt' → logprob: -8.883689880371094
    9. '[' → logprob: -9.008689880371094
    10. '[]' → logprob: -9.008689880371094

Token 449: 'nd' (ID: 301)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5444251894950867
    2. '=' → logprob: -1.6694252490997314
    3. 'req' → logprob: -1.9194252490997314
    4. '=[]' → logprob: -3.7944252490997314
    5. '_req' → logprob: -4.169425010681152
    6. 'idx' → logprob: -4.544425010681152
    7. 'pos' → logprob: -5.044425010681152
    8. '_' → logprob: -5.169425010681152
    9. 'time' → logprob: -6.544425010681152
    10. 'visited' → logprob: -6.544425010681152

Token 450: ' =' (ID: 314)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.2623765170574188
    2. 'ex' → logprob: -2.512376546859741
    3. '=' → logprob: -2.762376546859741
    4. ' =' → logprob: -2.762376546859741
    5. 'ay' → logprob: -4.137376308441162
    6. 'ar' → logprob: -6.137376308441162
    7. 'x' → logprob: -6.637376308441162
    8. 'array' → logprob: -6.887376308441162
    9. 'node' → logprob: -7.887376308441162
    10. '=[]' → logprob: -8.13737678527832

Token 451: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44698432087898254
    2. 'F' → logprob: -1.6969842910766602
    3. '-' → logprob: -1.9469842910766602
    4. 'tt' → logprob: -3.69698429107666
    5. '[]' → logprob: -6.07198429107666
    6. 'None' → logprob: -6.19698429107666
    7. '[' → logprob: -6.44698429107666
    8. '1' → logprob: -6.69698429107666
    9. ' -' → logprob: -7.32198429107666
    10. ' ' → logprob: -7.94698429107666

Token 452: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3568987250328064
    2. '-' → logprob: -1.4818987846374512
    3. 'F' → logprob: -3.606898784637451
    4. '[' → logprob: -3.856898784637451
    5. '[-' → logprob: -4.731898784637451
    6. '[]' → logprob: -4.981898784637451
    7. 'tt' → logprob: -5.231898784637451
    8. '1' → logprob: -6.856898784637451
    9. 'None' → logprob: -7.231898784637451
    10. '{}' → logprob: -7.606898784637451

Token 453: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32361096143722534
    2. '<|end|>' → logprob: -1.4486110210418701
    3. 'for' → logprob: -3.32361102104187
    4. ' for' → logprob: -7.198610782623291
    5. 'current' → logprob: -7.698610782623291
    6. '```' → logprob: -7.823610782623291
    7. '<|end|>' → logprob: -7.823610782623291
    8. 'while' → logprob: -7.948610782623291
    9. 'prev' → logprob: -8.19861125946045
    10. '0' → logprob: -8.32361125946045

Token 454: 'dist' (ID: 24126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022208696231245995
    2. 'cur' → logprob: -4.8972086906433105
    3. 'F' → logprob: -6.0222086906433105
    4. 'pend' → logprob: -6.0222086906433105
    5. 'idx' → logprob: -6.8972086906433105
    6. 'curr' → logprob: -6.8972086906433105
    7. 'last' → logprob: -7.2722086906433105
    8. 'pos' → logprob: -7.6472086906433105
    9. 'path' → logprob: -8.147209167480469
    10. 'total' → logprob: -8.147209167480469

Token 455: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: 'last' (ID: 6684)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40122660994529724
    2. ' =' → logprob: -1.2762266397476196
    3. '[' → logprob: -3.52622652053833
    4. 'last' → logprob: -4.40122652053833
    5. '1' → logprob: -5.77622652053833
    6. '[last' → logprob: -5.90122652053833
    7. '=[' → logprob: -6.40122652053833
    8. '[start' → logprob: -8.276226997375488
    9. 'to' → logprob: -8.401226997375488
    10. ' ' → logprob: -8.526226997375488

Token 457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02086171880364418
    2. ' =' → logprob: -3.8958616256713867
    3. '[' → logprob: -8.270861625671387
    4. '=[' → logprob: -10.020861625671387
    5. '=[]' → logprob: -11.395861625671387
    6. ' =[' → logprob: -12.895861625671387
    7. ',' → logprob: -13.270861625671387
    8. '_' → logprob: -14.770861625671387
    9. '=[[' → logprob: -14.770861625671387
    10. '=
' → logprob: -14.770861625671387

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06861290335655212
    2. '[' → logprob: -2.818612813949585
    3. 'dist' → logprob: -5.568613052368164
    4. '999' → logprob: -6.818613052368164
    5. ' [' → logprob: -7.443613052368164
    6. ' ' → logprob: -7.568613052368164
    7. '[]' → logprob: -9.193613052368164
    8. '[[' → logprob: -9.443613052368164
    9. '[in' → logprob: -9.568613052368164
    10. '[]
' → logprob: -9.568613052368164

Token 459: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035560958087444305
    2. '0' → logprob: -3.6605608463287354
    3. 'dist' → logprob: -5.0355610847473145
    4. '999' → logprob: -6.2855610847473145
    5. '[-' → logprob: -8.410560607910156
    6. '[[' → logprob: -8.535560607910156
    7. ' [' → logprob: -8.785560607910156
    8. '[]' → logprob: -9.660560607910156
    9. '[n' → logprob: -9.910560607910156
    10. '[]
' → logprob: -10.660560607910156

Token 460: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25387290120124817
    2. 'cur' → logprob: -2.753872871398926
    3. 'idx' → logprob: -3.003872871398926
    4. 'pos' → logprob: -4.253872871398926
    5. 'i' → logprob: -4.378872871398926
    6. 'curr' → logprob: -4.503872871398926
    7. 'current' → logprob: -4.628872871398926
    8. 'while' → logprob: -5.003872871398926
    9. 'dist' → logprob: -5.253872871398926
    10. ' for' → logprob: -5.253872871398926

Token 461: 'uf' (ID: 1427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04641532525420189
    2. 'while' → logprob: -4.296415328979492
    3. 'F' → logprob: -5.546415328979492
    4. 'pend' → logprob: -5.796415328979492
    5. 'idx' → logprob: -5.796415328979492
    6. 'prob' → logprob: -6.421415328979492
    7. 'cur' → logprob: -6.546415328979492
    8. 'tt' → logprob: -6.796415328979492
    9. 'i' → logprob: -6.921415328979492
    10. 'if' → logprob: -7.046415328979492

Token 462: 'ary' (ID: 815)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16353335976600647
    2. '=' → logprob: -1.913533329963684
    3. '=[]' → logprob: -5.7885332107543945
    4. '=[]
' → logprob: -9.538533210754395
    5. 'parent' → logprob: -10.163533210754395
    6. '=[' → logprob: -10.538533210754395
    7. ',' → logprob: -11.413533210754395
    8. '_parent' → logprob: -11.538533210754395
    9. 'id' → logprob: -11.913533210754395
    10. '=[
' → logprob: -12.163533210754395

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3150598108768463
    2. ' =' → logprob: -1.315059781074524
    3. '=[]' → logprob: -6.440059661865234
    4. '=[' → logprob: -8.565059661865234
    5. '=[[' → logprob: -13.315059661865234
    6. '={}' → logprob: -13.440059661865234
    7. '=[]
' → logprob: -13.440059661865234
    8. '[' → logprob: -13.565059661865234
    9. ',' → logprob: -13.815059661865234
    10. ' =[' → logprob: -14.940059661865234

Token 464: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10456623882055283
    2. '[-' → logprob: -2.6045663356781006
    3. '[list' → logprob: -3.8545663356781006
    4. '[parent' → logprob: -6.7295660972595215
    5. 'list' → logprob: -6.8545660972595215
    6. ' [' → logprob: -6.8545660972595215
    7. '[i' → logprob: -8.60456657409668
    8. '[]' → logprob: -9.10456657409668
    9. '[u' → logprob: -9.10456657409668
    10. '{}' → logprob: -9.72956657409668

Token 465: 'uf' (ID: 1427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05965008959174156
    2. 'parent' → logprob: -2.934650182723999
    3. 'par' → logprob: -5.93464994430542
    4. 'uf' → logprob: -7.05964994430542
    5. 'from' → logprob: -8.059650421142578
    6. 'rank' → logprob: -8.559650421142578
    7. 'parents' → logprob: -8.934650421142578
    8. ' for' → logprob: -9.184650421142578
    9. '[parent' → logprob: -9.184650421142578
    10. 'import' → logprob: -9.309650421142578

Token 466: 'rank' (ID: 30162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7189706563949585
    2. '=' → logprob: -0.8439706563949585
    3. '=[]' → logprob: -3.093970775604248
    4. 'ary' → logprob: -4.218970775604248
    5. 'parent' → logprob: -4.593970775604248
    6. '=[]
' → logprob: -5.218970775604248
    7. 'ar' → logprob: -5.593970775604248
    8. 'par' → logprob: -7.718970775604248
    9. '_parent' → logprob: -7.968970775604248
    10. '[]' → logprob: -8.21897029876709

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38788050413131714
    2. ' =' → logprob: -1.137880563735962
    3. '=[]' → logprob: -7.012880325317383
    4. '=[]
' → logprob: -9.387880325317383
    5. '=[' → logprob: -11.262880325317383
    6. '[]' → logprob: -13.012880325317383
    7. '   ' → logprob: -13.387880325317383
    8. ' =[' → logprob: -13.387880325317383
    9. ' ' → logprob: -13.512880325317383
    10. '[' → logprob: -13.637880325317383

Token 468: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08068235218524933
    2. '[]' → logprob: -2.5806822776794434
    3. '[]
' → logprob: -6.330682277679443
    4. '[]

' → logprob: -11.830682754516602
    5. '[](' → logprob: -13.580682754516602
    6. ' []' → logprob: -14.830682754516602
    7. '[]}' → logprob: -14.955682754516602
    8. ' [' → logprob: -15.205682754516602
    9. '[:]' → logprob: -16.3306827545166
    10. '[-' → logprob: -16.4556827545166

Token 469: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009504065383225679
    2. 'def' → logprob: -7.500950336456299
    3. 'parent' → logprob: -8.500950813293457
    4. 'uf' → logprob: -8.625950813293457
    5. ' for' → logprob: -11.375950813293457
    6. 'parents' → logprob: -14.375950813293457
    7. '```' → logprob: -14.625950813293457
    8. '[parent' → logprob: -14.875950813293457
    9. 'ufs' → logprob: -15.250950813293457
    10. '
' → logprob: -15.375950813293457

Token 470: ' t' (ID: 260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0857086256146431
    2. '_' → logprob: -3.0857086181640625
    3. ' i' → logprob: -3.3357086181640625
    4. ' _' → logprob: -7.3357086181640625
    5. '_i' → logprob: -8.585708618164062
    6. '	i' → logprob: -12.335708618164062
    7. ' ' → logprob: -12.710708618164062
    8. 'x' → logprob: -13.460708618164062
    9. '_=' → logprob: -13.960708618164062
    10. 'u' → logprob: -14.710708618164062

Token 471: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02640433795750141
    2. 'in' → logprob: -3.65140438079834
    3. '_' → logprob: -10.40140438079834
    4. 'i' → logprob: -10.90140438079834
    5. ' ' → logprob: -11.02640438079834
    6. ' _' → logprob: -11.77640438079834
    7. ' i' → logprob: -12.15140438079834
    8. 'n' → logprob: -12.40140438079834
    9. 'o' → logprob: -12.40140438079834
    10. 't' → logprob: -12.65140438079834

Token 472: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011057964526116848
    2. ' range' → logprob: -4.5110578536987305
    3. '(range' → logprob: -12.13605785369873
    4. '_' → logprob: -12.76105785369873
    5. 'in' → logprob: -14.26105785369873
    6. '[' → logprob: -14.38605785369873
    7. '_range' → logprob: -15.51105785369873
    8. ' ' → logprob: -15.88605785369873
    9. '	range' → logprob: -16.261058807373047
    10. '[V' → logprob: -17.261058807373047

Token 473: '(tt' (ID: 90971)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.020563960075378418
    2. '(' → logprob: -4.270564079284668
    3. '(MAX' → logprob: -5.145564079284668
    4. '(len' → logprob: -7.770564079284668
    5. '(prob' → logprob: -10.020564079284668
    6. '(max' → logprob: -10.270564079284668
    7. 'V' → logprob: -11.395564079284668
    8. '((' → logprob: -11.520564079284668
    9. '(F' → logprob: -11.645564079284668
    10. '100' → logprob: -12.270564079284668

Token 474: '):

' (ID: 15626)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6503813862800598
    2. '+' → logprob: -0.9003813862800598
    3. '):' → logprob: -2.650381326675415
    4. ' +' → logprob: -7.025381565093994
    5. ':' → logprob: -9.775381088256836
    6. '   ' → logprob: -9.900381088256836
    7. ':
' → logprob: -10.650381088256836
    8. '):
' → logprob: -10.775381088256836
    9. ' ):
' → logprob: -10.775381088256836
    10. ')' → logprob: -10.900381088256836

Token 475: '   ' (ID: 271)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.08261310309171677
    2. '   ' → logprob: -2.832612991333008
    3. ' uf' → logprob: -3.957612991333008
    4. ' ' → logprob: -8.332612991333008
    5. 'for' → logprob: -8.957612991333008
    6. 'def' → logprob: -9.332612991333008
    7. 'ufs' → logprob: -9.332612991333008
    8. 'if' → logprob: -9.457612991333008
    9. 'pend' → logprob: -9.707612991333008
    10. 'uff' → logprob: -9.707612991333008

Token 476: ' if' (ID: 538)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.1929415464401245
    2. '   ' → logprob: -2.442941665649414
    3. 'pend' → logprob: -3.317941665649414
    4. ' uf' → logprob: -3.317941665649414
    5. 'if' (adapté à ' if') → logprob: -5.817941665649414
    6. 'for' → logprob: -6.067941665649414
    7. ' pend' → logprob: -6.442941665649414
    8. ' for' → logprob: -6.442941665649414
    9. ' if' → logprob: -6.567941665649414
    10. ' ' → logprob: -7.317941665649414

Token 477: ' DBG' (ID: 100080)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.3695955276489258
    2. 'len' → logprob: -1.4945955276489258
    3. 't' → logprob: -1.7445955276489258
    4. 'DBG' → logprob: -2.244595527648926
    5. 'F' → logprob: -2.869595527648926
    6. ' t' → logprob: -3.119595527648926
    7. ' DBG' → logprob: -3.119595527648926
    8. ' len' → logprob: -3.744595527648926
    9. 'not' → logprob: -4.119595527648926
    10. ' prob' → logprob: -4.244595527648926

Token 478: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05214907228946686
    2. ' :' → logprob: -3.5521490573883057
    3. ':
' → logprob: -4.677149295806885
    4. ' ==' → logprob: -5.177149295806885
    5. '   ' → logprob: -5.427149295806885
    6. ' :
' → logprob: -6.552149295806885
    7. '[' → logprob: -7.552149295806885
    8. '==' → logprob: -8.052148818969727
    9. '       ' → logprob: -8.177148818969727
    10. ' and' → logprob: -8.802148818969727

Token 479: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7908756732940674
    2. ' t' → logprob: -1.7908756732940674
    3. 'False' → logprob: -1.9158756732940674
    4. ' False' → logprob: -2.2908756732940674
    5. 'prob' → logprob: -3.1658756732940674
    6. 'last' → logprob: -3.9158756732940674
    7. 'len' → logprob: -4.290875434875488
    8. ' last' → logprob: -4.915875434875488
    9. 'pend' → logprob: -5.040875434875488
    10. 'not' → logprob: -5.165875434875488

Token 480: '>' (ID: 29)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6178734302520752
    2. '==' → logprob: -1.3678734302520752
    3. ' <' → logprob: -2.617873430252075
    4. '<' → logprob: -2.742873430252075
    5. ' >=' → logprob: -3.742873430252075
    6. '<|end|>' → logprob: -4.367873191833496
    7. '%' → logprob: -4.867873191833496
    8. ' >' → logprob: -4.992873191833496
    9. '>=' → logprob: -5.367873191833496
    10. ' %' → logprob: -5.492873191833496

Token 481: '340' (ID: 23527)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45744839310646057
    2. ' ' → logprob: -1.0824483633041382
    3. '10' → logprob: -4.832448482513428
    4. '=' → logprob: -5.082448482513428
    5. '1' → logprob: -5.457448482513428
    6. '100' → logprob: -5.957448482513428
    7. '20' → logprob: -6.082448482513428
    8. '5' → logprob: -6.457448482513428
    9. '50' → logprob: -7.457448482513428
    10. 'MAX' → logprob: -7.582448482513428

Token 482: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0537077821791172
    2. ':
' → logprob: -3.4287078380584717
    3. '       ' → logprob: -4.178707599639893
    4. '   ' → logprob: -5.803707599639893
    5. ' and' → logprob: -6.678707599639893
    6. ' :' → logprob: -9.80370807647705
    7. '==' → logprob: -10.30370807647705
    8. '           ' → logprob: -10.42870807647705
    9. '	' → logprob: -10.55370807647705
    10. 'and' → logprob: -10.80370807647705

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04816519096493721
    2. ':
' → logprob: -3.2981650829315186
    3. '       ' → logprob: -5.423165321350098
    4. '   ' → logprob: -5.548165321350098
    5. ' and' → logprob: -6.673165321350098
    6. '==' → logprob: -8.548165321350098
    7. ' :' → logprob: -8.923165321350098
    8. '	' → logprob: -10.173165321350098
    9. 'and' → logprob: -10.548165321350098
    10. ' :
' → logprob: -11.173165321350098

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03110565058887005
    2. '<|end|>' → logprob: -4.4061055183410645
    3. '	' → logprob: -5.2811055183410645
    4. '   ' → logprob: -5.9061055183410645
    5. '        
' → logprob: -6.1561055183410645
    6. '[' → logprob: -6.4061055183410645
    7. ':' → logprob: -6.4061055183410645
    8. ' ' → logprob: -7.1561055183410645
    9. '    ' → logprob: -7.1561055183410645
    10. '\t' → logprob: -7.4061055183410645

Token 485: ' exit' (ID: 10654)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1325184404850006
    2. ' pass' → logprob: -3.0075185298919678
    3. '    ' → logprob: -3.7575185298919678
    4. 'break' → logprob: -3.7575185298919678
    5. '   ' → logprob: -4.257518291473389
    6. ' print' → logprob: -4.882518291473389
    7. 'pass' → logprob: -7.007518291473389
    8. 'print' → logprob: -7.382518291473389
    9. ' continue' → logprob: -7.382518291473389
    10. '       ' → logprob: -7.507518291473389

Token 486: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5011661648750305
    2. '<|end|>' → logprob: -1.2511661052703857
    3. '(' → logprob: -2.8761661052703857
    4. '()
' → logprob: -3.8761661052703857
    5. '
' → logprob: -4.501166343688965
    6. '   ' → logprob: -4.751166343688965
    7. '(
' → logprob: -5.501166343688965
    8. '<|end|>' → logprob: -6.251166343688965
    9. ')' → logprob: -6.626166343688965
    10. '    
' → logprob: -7.376166343688965

Token 487: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1636067628860474
    2. '   ' → logprob: -1.4136067628860474
    3. ' if' → logprob: -2.038606643676758
    4. 'pend' → logprob: -2.913606643676758
    5. 'pass' → logprob: -3.538606643676758
    6. 'while' → logprob: -3.663606643676758
    7. 'u' → logprob: -3.788606643676758
    8. 'for' → logprob: -4.038606643676758
    9. '#' → logprob: -4.038606643676758
    10. ' while' → logprob: -4.163606643676758

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2627352476119995
    2. '=' → logprob: -1.8877352476119995
    3. 'xt' → logprob: -3.637735366821289
    4. 'ow' → logprob: -4.137735366821289
    5. ',' → logprob: -4.512735366821289
    6. 'x' → logprob: -5.637735366821289
    7. 'w' → logprob: -5.762735366821289
    8. 'ext' → logprob: -6.012735366821289
    9. 'um' → logprob: -6.512735366821289
    10. 't' → logprob: -6.512735366821289

Token 490: ' inn' (ID: 5315)
  Prédit: 'inn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inn' → logprob: -0.001881996402516961
    2. ' inn' → logprob: -6.501882076263428
    3. 'in' → logprob: -8.62688159942627
    4. '  ' → logprob: -9.87688159942627
    5. 'ink' → logprob: -10.25188159942627
    6. ' ' → logprob: -10.62688159942627
    7. 'inp' → logprob: -10.87688159942627
    8. 'int' → logprob: -11.12688159942627
    9. 'innt' → logprob: -11.12688159942627
    10. '   ' → logprob: -11.81438159942627

Token 491: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004390134708955884
    2. '()
' → logprob: -7.875439167022705
    3. ' ()' → logprob: -10.500438690185547
    4. '(' → logprob: -11.250438690185547
    5. '())' → logprob: -12.625438690185547
    6. '()\' → logprob: -12.625438690185547
    7. '()

' → logprob: -13.125438690185547
    8. '()<' → logprob: -13.375438690185547
    9. ')' → logprob: -13.500438690185547
    10. '()>' → logprob: -13.625438690185547

Token 492: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9593451023101807
    2. 'f' → logprob: -2.0843451023101807
    3. 'm' → logprob: -2.5843451023101807
    4. 's' → logprob: -2.5843451023101807
    5. 'l' → logprob: -2.8343451023101807
    6. 'for' → logprob: -2.9593451023101807
    7. 'arr' → logprob: -3.0843451023101807
    8. 'u' → logprob: -3.2093451023101807
    9. 'nd' → logprob: -3.4593451023101807
    10. 'a' → logprob: -3.4593451023101807

Token 494: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06098053604364395
    2. ' n' → logprob: -3.0609805583953857
    3. 'DBG' → logprob: -5.310980319976807
    4. 'prob' → logprob: -5.935980319976807
    5. 'len' → logprob: -6.685980319976807
    6. ' DBG' → logprob: -6.685980319976807
    7. 'not' → logprob: -7.310980319976807
    8. 't' → logprob: -7.560980319976807
    9. ' not' → logprob: -8.060980796813965
    10. ' len' → logprob: -8.685980796813965

Token 495: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47955772280693054
    2. '==' → logprob: -1.104557752609253
    3. '>' → logprob: -3.729557752609253
    4. ' >' → logprob: -4.479557514190674
    5. ' <' → logprob: -5.104557514190674
    6. '<' → logprob: -5.729557514190674
    7. '=' → logprob: -6.729557514190674
    8. ':' → logprob: -7.229557514190674
    9. '   ' → logprob: -7.354557514190674
    10. ' !=' → logprob: -7.729557514190674

Token 496: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00726620526984334
    2. '-' → logprob: -5.382266044616699
    3. '1' → logprob: -6.382266044616699
    4. ' ' → logprob: -7.132266044616699
    5. ' -' → logprob: -10.5697660446167
    6. '2' → logprob: -10.7572660446167
    7. '   ' → logprob: -10.8197660446167
    8. '999' → logprob: -11.1322660446167
    9. '```' → logprob: -11.9447660446167
    10. '3' → logprob: -12.3197660446167

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6958793997764587
    2. ':
' → logprob: -0.6958793997764587
    3. '       ' → logprob: -6.0708794593811035
    4. '   ' → logprob: -8.445878982543945
    5. '<|end|>' → logprob: -9.945878982543945
    6. ' and' → logprob: -10.445878982543945
    7. ':

' → logprob: -10.695878982543945
    8. ',' → logprob: -10.820878982543945
    9. ':return' → logprob: -10.820878982543945
    10. '):
' → logprob: -10.945878982543945

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10878855735063553
    2. '<|end|>' → logprob: -2.60878849029541
    3. '	' → logprob: -5.23378849029541
    4. '	   ' → logprob: -5.35878849029541
    5. '   ' → logprob: -5.35878849029541
    6. 'n' → logprob: -6.10878849029541
    7. '<|end|>' → logprob: -6.23378849029541
    8. ':
' → logprob: -6.48378849029541
    9. '
' → logprob: -7.10878849029541
    10. '        
' → logprob: -7.23378849029541

Token 499: ' x' (ID: 1215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1605148315429688
    2. 'work' → logprob: -1.7855148315429688
    3. 'pend' → logprob: -3.0355148315429688
    4. 'a' → logprob: -3.1605148315429688
    5. '   ' → logprob: -3.1605148315429688
    6. 'x' (adapté à ' x') → logprob: -3.1605148315429688
    7. '       ' → logprob: -3.2855148315429688
    8. 'continue' → logprob: -3.6605148315429688
    9. 'inn' → logprob: -3.6605148315429688
    10. 'last' → logprob: -3.7855148315429688

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3490884602069855
    2. '=' → logprob: -1.224088430404663
    3. ',' → logprob: -8.099088668823242
    4. '=int' → logprob: -8.974088668823242
    5. '=input' → logprob: -10.099088668823242
    6. '   ' → logprob: -10.349088668823242
    7. ' ' → logprob: -10.974088668823242
    8. '==' → logprob: -11.224088668823242
    9. '[' → logprob: -11.349088668823242
    10. ' ==' → logprob: -11.599088668823242

Token 501: ' list' (ID: 1562)
  Prédit: 'inn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inn' → logprob: -0.021177129819989204
    2. ' inn' → logprob: -3.896177053451538
    3. 'in' → logprob: -8.271177291870117
    4. 'inp' → logprob: -9.271177291870117
    5. ' in' → logprob: -9.771177291870117
    6. 'int' → logprob: -10.021177291870117
    7. 'innt' → logprob: -10.146177291870117
    8. ' ' → logprob: -10.521177291870117
    9. '0' → logprob: -10.708677291870117
    10. '1' → logprob: -11.021177291870117

Token 502: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.5773822665214539
    2. '(map' → logprob: -0.9523822665214539
    3. 'in' → logprob: -3.0773823261260986
    4. '()' → logprob: -5.5773820877075195
    5. '(' → logprob: -6.8273820877075195
    6. '=' → logprob: -7.7023820877075195
    7. '=in' → logprob: -8.20238208770752
    8. ' =' → logprob: -8.45238208770752
    9. '(range' → logprob: -8.57738208770752
    10. '()
' → logprob: -9.07738208770752

Token 503: 'm' (ID: 76)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.089236855506897
    2. '())' → logprob: -1.214236855506897
    3. '(map' → logprob: -2.2142367362976074
    4. 'put' → logprob: -2.5892367362976074
    5. 'in' → logprob: -3.0892367362976074
    6. '(input' → logprob: -3.4642367362976074
    7. '())
' → logprob: -3.4642367362976074
    8. '()' → logprob: -3.7142367362976074
    9. '())[' → logprob: -4.089236736297607
    10. 'n' → logprob: -4.464236736297607

Token 504: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.000895619392395
    2. '())[' → logprob: -1.000895619392395
    3. '())
' → logprob: -1.375895619392395
    4. ')' → logprob: -5.2508955001831055
    5. '()' → logprob: -5.5008955001831055
    6. ')[' → logprob: -7.6258955001831055
    7. ')
' → logprob: -7.6258955001831055
    8. '(' → logprob: -7.7508955001831055
    9. '());' → logprob: -7.7508955001831055
    10. '()).' → logprob: -8.125895500183105

Token 505: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22790059447288513
    2. '   ' → logprob: -3.102900505065918
    3. '[' → logprob: -3.477900505065918
    4. '
' → logprob: -3.477900505065918
    5. 'x' → logprob: -4.477900505065918
    6. ' x' → logprob: -4.852900505065918
    7. ' if' → logprob: -4.977900505065918
    8. '[n' → logprob: -5.102900505065918
    9. 'else' → logprob: -5.102900505065918
    10. '        
' → logprob: -5.227900505065918

Token 507: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3542833924293518
    2. '=' → logprob: -2.354283332824707
    3. '_node' → logprob: -2.854283332824707
    4. 'x' → logprob: -3.479283332824707
    5. '_' → logprob: -3.604283332824707
    6. 'node' → logprob: -3.979283332824707
    7. '[' → logprob: -4.604283332824707
    8. ')' → logprob: -5.104283332824707
    9. '.append' → logprob: -5.104283332824707
    10. '_x' → logprob: -5.354283332824707

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38814324140548706
    2. ' =' → logprob: -1.1381433010101318
    3. '=x' → logprob: -7.138143062591553
    4. '=len' → logprob: -8.763143539428711
    5. ',' → logprob: -9.513143539428711
    6. '_' → logprob: -9.888143539428711
    7. 'x' → logprob: -9.888143539428711
    8. '_=' → logprob: -10.138143539428711
    9. '=int' → logprob: -10.263143539428711
    10. 's' → logprob: -11.138143539428711

Token 509: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17655758559703827
    2. ' x' → logprob: -2.0515575408935547
    3. 'len' → logprob: -4.051557540893555
    4. ' len' → logprob: -5.051557540893555
    5. 'n' → logprob: -6.051557540893555
    6. ' n' → logprob: -6.176557540893555
    7. ' uf' → logprob: -6.301557540893555
    8. 'uf' → logprob: -7.176557540893555
    9. '1' → logprob: -7.801557540893555
    10. ' ' → logprob: -7.926557540893555

Token 510: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002465582510922104
    2. '()[' → logprob: -9.00024700164795
    3. '.append' → logprob: -9.75024700164795
    4. '[-' → logprob: -10.62524700164795
    5. '[len' → logprob: -12.00024700164795
    6. '(' → logprob: -12.12524700164795
    7. '
' → logprob: -12.37524700164795
    8. '.pop' → logprob: -12.50024700164795
    9. ' [' → logprob: -12.62524700164795
    10. '```' → logprob: -12.87524700164795

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001863750658230856
    2. ' ' → logprob: -9.3751859664917
    3. '-' → logprob: -9.8751859664917
    4. '
' → logprob: -10.8751859664917
    5. '1' → logprob: -11.5001859664917
    6. '   ' → logprob: -11.8751859664917
    7. ' -' → logprob: -12.9376859664917
    8. '[' → logprob: -13.5001859664917
    9. '...' → logprob: -13.7501859664917
    10. '][' → logprob: -13.9376859664917

Token 512: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: ' dst' (ID: 23480)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8856415748596191
    2. 'new' → logprob: -1.5106415748596191
    3. ' if' → logprob: -2.635641574859619
    4. 'if' → logprob: -3.260641574859619
    5. 'x' → logprob: -3.760641574859619
    6. ' uf' → logprob: -3.760641574859619
    7. 'uf' → logprob: -4.010641574859619
    8. 'n' → logprob: -4.260641574859619
    9. 'dist' → logprob: -4.260641574859619
    10. 'work' → logprob: -4.385641574859619

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28192138671875
    2. '=' → logprob: -1.40692138671875
    3. ',' → logprob: -7.40692138671875
    4. ' ' → logprob: -10.90692138671875
    5. 'from' → logprob: -10.90692138671875
    6. '   ' → logprob: -11.40692138671875
    7. '[' → logprob: -11.40692138671875
    8. '=x' → logprob: -11.40692138671875
    9. '_' → logprob: -11.65692138671875
    10. 's' → logprob: -11.65692138671875

Token 516: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11283881217241287
    2. ' x' → logprob: -2.2378387451171875
    3. '0' → logprob: -11.737838745117188
    4. ' ' → logprob: -13.237838745117188
    5. 'int' → logprob: -13.612838745117188
    6. 'in' → logprob: -14.362838745117188
    7. '1' → logprob: -14.487838745117188
    8. '	x' → logprob: -14.487838745117188
    9. '(x' → logprob: -14.612838745117188
    10. '   ' → logprob: -14.862838745117188

Token 517: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.167648876318708e-05
    2. '[
' → logprob: -11.375041961669922
    3. '=' → logprob: -11.875041961669922
    4. ' [' → logprob: -12.125041961669922
    5. '[-' → logprob: -12.250041961669922
    6. '   ' → logprob: -12.875041961669922
    7. '1' → logprob: -13.000041961669922
    8. ' =' → logprob: -13.375041961669922
    9. '       ' → logprob: -13.625041961669922
    10. '()[' → logprob: -14.125041961669922

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. '2' → logprob: -9.875060081481934
    3. ' ' → logprob: -12.750060081481934
    4. '3' → logprob: -13.125060081481934
    5. '[' → logprob: -14.062560081481934
    6. '   ' → logprob: -14.375060081481934
    7. '-' → logprob: -15.312560081481934
    8. '0' → logprob: -15.375060081481934
    9. '4' → logprob: -15.375060081481934
    10. '```' → logprob: -15.625060081481934

Token 519: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7725558876991272
    2. ']' → logprob: -0.8975558876991272
    3. '<|end|>' → logprob: -2.5225558280944824
    4. ')
' → logprob: -4.272555828094482
    5. '       ' → logprob: -4.522555828094482
    6. '<|end|>' → logprob: -4.647555828094482
    7. ']
' → logprob: -4.772555828094482
    8. '   ' → logprob: -6.147555828094482
    9. ')]' → logprob: -6.147555828094482
    10. ' ]' → logprob: -7.772555828094482

Token 520: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: ' pend' (ID: 27278)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38712072372436523
    2. 'uf' → logprob: -2.3871207237243652
    3. '   ' → logprob: -2.6371207237243652
    4. '       ' → logprob: -2.6371207237243652
    5. 'dist' → logprob: -3.1371207237243652
    6. 'for' → logprob: -4.137120723724365
    7. 'new' → logprob: -5.512120723724365
    8. ' if' → logprob: -5.762120723724365
    9. '           ' → logprob: -6.262120723724365
    10. '#' → logprob: -6.262120723724365

Token 522: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0002382249804213643
    2. '.append' → logprob: -9.375238418579102
    3. '_req' → logprob: -10.250238418579102
    4. ' =' → logprob: -10.500238418579102
    5. 'append' → logprob: -11.250238418579102
    6. 'id' → logprob: -11.375238418579102
    7. '=req' → logprob: -11.500238418579102
    8. '_id' → logprob: -11.500238418579102
    9. '=' → logprob: -12.000238418579102
    10. 'idx' → logprob: -12.250238418579102

Token 523: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001302374730585143
    2. '.' → logprob: -9.000130653381348
    3. 'append' → logprob: -13.250130653381348
    4. '.app' → logprob: -13.500130653381348
    5. ' .' → logprob: -13.625130653381348
    6. '=' → logprob: -13.750130653381348
    7. '.extend' → logprob: -15.125130653381348
    8. '.ap' → logprob: -15.250130653381348
    9. '.setdefault' → logprob: -16.00012969970703
    10. ' =' → logprob: -16.12512969970703

Token 524: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014348485507071018
    2. '(new' → logprob: -4.26434850692749
    3. '(' → logprob: -8.639348030090332
    4. '([' → logprob: -12.264348030090332
    5. '(x' → logprob: -13.139348030090332
    6. 'new' → logprob: -14.264348030090332
    7. '(((' → logprob: -15.514348030090332
    8. '(('' → logprob: -16.13934898376465
    9. '(("' → logprob: -16.26434898376465
    10. '(tuple' → logprob: -16.63934898376465

Token 525: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.014179493300616741
    2. ' new' → logprob: -4.264179706573486
    3. 'x' → logprob: -12.014179229736328
    4. 'n' → logprob: -13.139179229736328
    5. ')' → logprob: -13.264179229736328
    6. '   ' → logprob: -13.514179229736328
    7. ')new' → logprob: -13.639179229736328
    8. '	new' → logprob: -14.014179229736328
    9. ' x' → logprob: -14.389179229736328
    10. ' ' → logprob: -15.014179229736328

Token 526: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.2664456789934775e-06
    2. 'id' → logprob: -15.375000953674316
    3. '_ids' → logprob: -16.000001907348633
    4. ')' → logprob: -16.125001907348633
    5. 'new' → logprob: -16.125001907348633
    6. 'nd' → logprob: -16.312501907348633
    7. ',' → logprob: -16.625001907348633
    8. '_' → logprob: -16.875001907348633
    9. '   ' → logprob: -16.875001907348633
    10. 'd' → logprob: -17.000001907348633

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07896722853183746
    2. ',d' → logprob: -2.578967332839966
    3. ' ,' → logprob: -9.703967094421387
    4. ',
' → logprob: -12.203967094421387
    5. ',c' → logprob: -13.578967094421387
    6. ')' → logprob: -13.828967094421387
    7. ',n' → logprob: -14.078967094421387
    8. '	dst' → logprob: -14.078967094421387
    9. ',p' → logprob: -14.328967094421387
    10. ',x' → logprob: -14.453967094421387

Token 528: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.021346811205148697
    2. ' dst' → logprob: -4.0213470458984375
    3. 'dist' → logprob: -5.7713470458984375
    4. ' dist' → logprob: -10.396347045898438
    5. 'dest' → logprob: -10.646347045898438
    6. '
' → logprob: -12.396347045898438
    7. '   ' → logprob: -13.021347045898438
    8. ' ' → logprob: -13.021347045898438
    9. 'ds' → logprob: -13.271347045898438
    10. '(dst' → logprob: -13.271347045898438

Token 529: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01913338340818882
    2. ',' → logprob: -4.144133567810059
    3. '))
' → logprob: -5.894133567810059
    4. ')' → logprob: -8.269133567810059
    5. ' ))' → logprob: -10.644133567810059
    6. ')))' → logprob: -10.894133567810059
    7. ',))
' → logprob: -11.144133567810059
    8. '       ' → logprob: -11.769133567810059
    9. '   ' → logprob: -12.394133567810059
    10. '));' → logprob: -12.644133567810059

Token 530: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' prob' (ID: 4921)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03153565153479576
    2. 'n' → logprob: -3.5315356254577637
    3. ' DBG' → logprob: -7.531535625457764
    4. ' ' → logprob: -7.656535625457764
    5. 'DBG' → logprob: -8.281536102294922
    6. ' False' → logprob: -8.656536102294922
    7. 'False' → logprob: -9.281536102294922
    8. ' not' → logprob: -9.531536102294922
    9. '0' → logprob: -10.219036102294922
    10. '1' → logprob: -10.469036102294922

Token 533: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.576032817363739
    2. ' ==' → logprob: -0.826032817363739
    3. '=' → logprob: -9.701032638549805
    4. '[' → logprob: -11.701032638549805
    5. ' =' → logprob: -11.826032638549805
    6. '==
' → logprob: -12.701032638549805
    7. '()==' → logprob: -12.701032638549805
    8. ']==' → logprob: -13.326032638549805
    9. '===' → logprob: -13.326032638549805
    10. '<|end|>' → logprob: -13.576032638549805

Token 534: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3935413956642151
    2. '2' → logprob: -1.1435413360595703
    3. ' ' → logprob: -5.01854133605957
    4. '3' → logprob: -11.51854133605957
    5. '   ' → logprob: -11.51854133605957
    6. '```' → logprob: -12.39354133605957
    7. '  ' → logprob: -12.45604133605957
    8. '
' → logprob: -13.70604133605957
    9. '=' → logprob: -14.01854133605957
    10. '0' → logprob: -14.45604133605957

Token 535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6647182703018188
    2. ':
' → logprob: -0.9147182703018188
    3. ' and' → logprob: -2.5397181510925293
    4. '==' → logprob: -5.914718151092529
    5. '       ' → logprob: -6.789718151092529
    6. '   ' → logprob: -7.039718151092529
    7. 'and' → logprob: -7.414718151092529
    8. ' ==' → logprob: -7.914718151092529
    9. '=' → logprob: -9.414718627929688
    10. ' :
' → logprob: -9.539718627929688

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012571809813380241
    2. '   ' → logprob: -5.387571811676025
    3. 'else' → logprob: -5.762571811676025
    4. ' else' → logprob: -6.012571811676025
    5. 'elif' → logprob: -6.762571811676025
    6. ':' → logprob: -7.887571811676025
    7. '	' → logprob: -8.512571334838867
    8. ' elif' → logprob: -8.637571334838867
    9. ':
' → logprob: -8.887571334838867
    10. '```' → logprob: -9.637571334838867

Token 537: ' n' (ID: 297)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.388548493385315
    2. '       ' → logprob: -1.388548493385315
    3. 'else' → logprob: -1.388548493385315
    4. 'x' → logprob: -2.7635483741760254
    5. 'elif' → logprob: -2.8885483741760254
    6. ' else' → logprob: -3.7635483741760254
    7. '   ' → logprob: -3.8885483741760254
    8. ' y' → logprob: -4.138548374176025
    9. 'w' → logprob: -4.513548374176025
    10. '           ' → logprob: -4.763548374176025

Token 538: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15695518255233765
    2. ' =' → logprob: -2.1569552421569824
    3. '==' → logprob: -3.6569552421569824
    4. ' ==' → logprob: -5.656955242156982
    5. ',' → logprob: -8.656954765319824
    6. ' ' → logprob: -10.031954765319824
    7. '=int' → logprob: -11.406954765319824
    8. 'elif' → logprob: -11.656954765319824
    9. '===' → logprob: -12.031954765319824
    10. '   ' → logprob: -12.156954765319824

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977897822856903
    2. '=' → logprob: -1.8047789335250854
    3. '   ' → logprob: -10.929779052734375
    4. ' ' → logprob: -11.804779052734375
    5. ',' → logprob: -13.179779052734375
    6. ' ==' → logprob: -13.304779052734375
    7. '==' → logprob: -13.554779052734375
    8. '=int' → logprob: -13.679779052734375
    9. '  ' → logprob: -14.304779052734375
    10. '    ' → logprob: -14.429779052734375

Token 540: ' inn' (ID: 5315)
  Prédit: 'inn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inn' → logprob: -0.002706084866076708
    2. 'int' → logprob: -6.627706050872803
    3. ' inn' → logprob: -7.127706050872803
    4. 'in' → logprob: -8.002706527709961
    5. 'innt' → logprob: -9.127706527709961
    6. 'inp' → logprob: -9.502706527709961
    7. ' in' → logprob: -11.377706527709961
    8. ' ' → logprob: -11.627706527709961
    9. 'sys' → logprob: -11.877706527709961
    10. ' int' → logprob: -12.127706527709961

Token 541: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7419060468673706
    2. 'x' → logprob: -1.8669060468673706
    3. 'work' → logprob: -2.24190616607666
    4. 'n' → logprob: -2.61690616607666
    5. 'new' → logprob: -3.11690616607666
    6. 'for' (adapté à ' for') → logprob: -3.49190616607666
    7. '       ' → logprob: -3.61690616607666
    8. ' if' → logprob: -3.99190616607666
    9. 'dist' → logprob: -4.86690616607666
    10. 'w' → logprob: -5.36690616607666

Token 544: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5175688862800598
    2. 'i' → logprob: -1.142568826675415
    3. '_i' → logprob: -3.392568826675415
    4. 'x' → logprob: -3.517568826675415
    5. 'z' → logprob: -5.392569065093994
    6. 'k' → logprob: -5.642569065093994
    7. 'q' → logprob: -6.267569065093994
    8. 'u' → logprob: -6.767569065093994
    9. '__' → logprob: -6.767569065093994
    10. '_x' → logprob: -6.767569065093994

Token 545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004125061444938183
    2. 'in' → logprob: -5.504125118255615
    3. ' ' → logprob: -10.254124641418457
    4. 'range' → logprob: -12.129124641418457
    5. 's' → logprob: -13.629124641418457
    6. 'n' → logprob: -14.254124641418457
    7. '  ' → logprob: -14.254124641418457
    8. '2' → logprob: -14.629124641418457
    9. '_' → logprob: -14.754124641418457
    10. '
' → logprob: -14.879124641418457

Token 546: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016049383208155632
    2. ' range' → logprob: -4.141049385070801
    3. 'in' → logprob: -11.5160493850708
    4. '_' → logprob: -13.3910493850708
    5. 'n' → logprob: -13.5160493850708
    6. 'rang' → logprob: -14.5160493850708
    7. 'r' → logprob: -14.6410493850708
    8. '(range' → logprob: -14.8910493850708
    9. 'ran' → logprob: -15.0160493850708
    10. ' in' → logprob: -15.6410493850708

Token 547: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023384422063827515
    2. 'n' → logprob: -3.7733843326568604
    3. '(' → logprob: -9.273384094238281
    4. ' (' → logprob: -10.773384094238281
    5. ' n' → logprob: -10.898384094238281
    6. '	n' → logprob: -12.648384094238281
    7. '   ' → logprob: -13.398384094238281
    8. ' ' → logprob: -15.773384094238281
    9. '(
' → logprob: -15.898384094238281
    10. '  ' → logprob: -16.39838409423828

Token 548: '2' (ID: 17)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.672111988067627
    2. '):
' → logprob: -0.922111988067627
    3. '2' → logprob: -2.422111988067627
    4. ')' → logprob: -7.047111988067627
    5. '+' → logprob: -7.297111988067627
    6. '*' → logprob: -8.297111511230469
    7. '   ' → logprob: -8.672111511230469
    8. ' ):' → logprob: -8.672111511230469
    9. 'n' → logprob: -9.172111511230469
    10. '-' → logprob: -9.297111511230469

Token 549: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5181970000267029
    2. '):
' → logprob: -1.2681970596313477
    3. '<|end|>' → logprob: -3.0181970596313477
    4. ':' → logprob: -3.1431970596313477
    5. '       ' → logprob: -4.768197059631348
    6. '<|end|>' → logprob: -5.018197059631348
    7. ',' → logprob: -5.393197059631348
    8. ':
' → logprob: -5.643197059631348
    9. ')' → logprob: -5.768197059631348
    10. '   ' → logprob: -6.143197059631348

Token 550: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04794284701347351
    2. '       ' → logprob: -3.797942876815796
    3. '<|end|>' → logprob: -4.797942638397217
    4. ' x' → logprob: -5.422942638397217
    5. 'x' → logprob: -5.797942638397217
    6. '   ' → logprob: -6.172942638397217
    7. ',' → logprob: -6.672942638397217
    8. 'n' → logprob: -7.110442638397217
    9. '<|end|>' → logprob: -7.485442638397217
    10. ':
' → logprob: -7.922942638397217

Token 551: ' inn' (ID: 5315)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5496497750282288
    2. ' x' → logprob: -2.924649715423584
    3. 'u' → logprob: -3.049649715423584
    4. 'q' → logprob: -3.549649715423584
    5. 'y' → logprob: -3.799649715423584
    6. 'v' → logprob: -3.799649715423584
    7. ' uf' → logprob: -4.174649715423584
    8. 'p' → logprob: -4.174649715423584
    9. 'a' → logprob: -4.299649715423584
    10. 'work' → logprob: -4.299649715423584

Token 552: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012177363969385624
    2. '()
' → logprob: -6.751217842102051
    3. '())' → logprob: -10.62621784210205
    4. '()>' → logprob: -12.00121784210205
    5. '<|end|>' → logprob: -12.50121784210205
    6. '()<' → logprob: -12.87621784210205
    7. '()==' → logprob: -13.25121784210205
    8. '()]' → logprob: -13.50121784210205
    9. '()\' → logprob: -13.62621784210205
    10. '()

' → logprob: -13.75121784210205

Token 553: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ' at' (ID: 540)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.977651059627533
    2. ' add' → logprob: -2.1026511192321777
    3. ' update' → logprob: -2.4776511192321777
    4. ' dfs' → logprob: -2.4776511192321777
    5. ' solve' → logprob: -2.7276511192321777
    6. ' bfs' → logprob: -2.9776511192321777
    7. ' pend' → logprob: -3.4776511192321777
    8. ' remove' → logprob: -3.7276511192321777
    9. ' calculate' → logprob: -3.9776511192321777
    10. ' next' → logprob: -3.9776511192321777

Token 556: 'de' (ID: 613)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7559082508087158
    2. '(nd' → logprob: -2.005908250808716
    3. '(x' → logprob: -2.255908250808716
    4. '(t' → logprob: -2.755908250808716
    5. '(n' → logprob: -2.880908250808716
    6. 'dist' → logprob: -4.130908012390137
    7. '(node' → logprob: -4.130908012390137
    8. '():' → logprob: -4.255908012390137
    9. '(i' → logprob: -4.505908012390137
    10. 't' → logprob: -4.630908012390137

Token 557: 'pot' (ID: 18147)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.090760431718081e-05
    2. 'st' → logprob: -10.750090599060059
    3. 'fault' → logprob: -11.625090599060059
    4. 'ff' → logprob: -12.250090599060059
    5. '```' → logprob: -12.375090599060059
    6. '()' → logprob: -12.375090599060059
    7. 'pth' → logprob: -12.500090599060059
    8. 'fine' → logprob: -12.750090599060059
    9. '(f' → logprob: -12.875090599060059
    10. 'fy' → logprob: -13.000090599060059

Token 558: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.012677746824920177
    2. '(n' → logprob: -5.0126776695251465
    3. '(t' → logprob: -5.7626776695251465
    4. ' ():' → logprob: -7.2626776695251465
    5. '(' → logprob: -7.5126776695251465
    6. '()' → logprob: -8.012678146362305
    7. '(x' → logprob: -8.262678146362305
    8. '():
' → logprob: -8.387678146362305
    9. '(p' → logprob: -8.637678146362305
    10. '(i' → logprob: -9.137678146362305

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05124276131391525
    2. '<|end|>' → logprob: -3.4262428283691406
    3. ':' → logprob: -5.301242828369141
    4. '   ' → logprob: -5.551242828369141
    5. ':
' → logprob: -5.676242828369141
    6. '
' → logprob: -6.676242828369141
    7. ' return' → logprob: -7.176242828369141
    8. '<|end|>' → logprob: -7.426242828369141
    9. '(' → logprob: -7.551242828369141
    10. ':return' → logprob: -8.05124282836914

Token 560: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12214487046003342
    2. '   ' → logprob: -2.372144937515259
    3. ' return' → logprob: -4.12214469909668
    4. '<|end|>' → logprob: -5.74714469909668
    5. 'return' (adapté à ' return') → logprob: -6.62214469909668
    6. '    ' → logprob: -8.37214469909668
    7. ' ' → logprob: -8.49714469909668
    8. '	return' → logprob: -8.87214469909668
    9. '     ' → logprob: -9.49714469909668
    10. '      ' → logprob: -9.74714469909668

Token 561: ' (' (ID: 350)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.2085842490196228
    2. 'last' → logprob: -1.8335843086242676
    3. ' dist' → logprob: -3.9585843086242676
    4. 'dist' → logprob: -5.958584308624268
    5. '(last' → logprob: -5.958584308624268
    6. 't' → logprob: -7.083584308624268
    7. ' t' → logprob: -7.083584308624268
    8. ' (' → logprob: -7.208584308624268
    9. ' pend' → logprob: -7.458584308624268
    10. ' True' → logprob: -7.833584308624268

Token 562: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.04327549412846565
    2. ' last' → logprob: -3.9182755947113037
    3. 'dist' → logprob: -4.543275356292725
    4. 'len' → logprob: -5.418275356292725
    5. 'pend' → logprob: -5.543275356292725
    6. ' pend' → logprob: -6.168275356292725
    7. ' dist' → logprob: -7.168275356292725
    8. 'n' → logprob: -9.043275833129883
    9. 't' → logprob: -9.168275833129883
    10. '(last' → logprob: -9.168275833129883

Token 563: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.14385780692100525
    2. '_nd' → logprob: -2.018857717514038
    3. '_' → logprob: -7.393857955932617
    4. ' nd' → logprob: -8.143857955932617
    5. '==' → logprob: -9.518857955932617
    6. ' ==' → logprob: -9.768857955932617
    7. '_node' → logprob: -10.018857955932617
    8. '_n' → logprob: -10.768857955932617
    9. ' _' → logprob: -11.393857955932617
    10. 'nds' → logprob: -11.643857955932617

Token 564: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09094777703285217
    2. ' ==' → logprob: -2.4659478664398193
    3. ')==' → logprob: -6.34094762802124
    4. ')' → logprob: -8.465948104858398
    5. ']==' → logprob: -11.090948104858398
    6. '==
' → logprob: -11.840948104858398
    7. '()==' → logprob: -12.465948104858398
    8. '[' → logprob: -12.840948104858398
    9. ' ' → logprob: -14.715948104858398
    10. '==(' → logprob: -14.715948104858398

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004376597702503204
    2. '0' → logprob: -6.129376411437988
    3. ' ' → logprob: -6.129376411437988
    4. '   ' → logprob: -12.254376411437988
    5. ')' → logprob: -13.379376411437988
    6. '  ' → logprob: -14.379376411437988
    7. 'new' → logprob: -14.629376411437988
    8. '    ' → logprob: -14.754376411437988
    9. '
' → logprob: -14.754376411437988
    10. '\
' → logprob: -14.879376411437988

Token 566: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011955826543271542
    2. ' and' → logprob: -4.511955738067627
    3. 'and' → logprob: -7.386955738067627
    4. ' )' → logprob: -9.011956214904785
    5. ' or' → logprob: -9.136956214904785
    6. '<|end|>' → logprob: -11.011956214904785
    7. ')
' → logprob: -11.136956214904785
    8. '),' → logprob: -11.761956214904785
    9. ')==' → logprob: -12.636956214904785
    10. 'or' → logprob: -12.761956214904785

Token 567: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.060934778302907944
    2. 'len' → logprob: -3.5609347820281982
    3. 'pend' → logprob: -3.8109347820281982
    4. 'not' → logprob: -5.685934543609619
    5. '(dist' → logprob: -6.310934543609619
    6. ' pend' → logprob: -6.685934543609619
    7. ' dist' → logprob: -6.810934543609619
    8. '(len' → logprob: -8.810935020446777
    9. 'last' → logprob: -8.810935020446777
    10. 'n' → logprob: -9.060935020446777

Token 568: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -4.320199877838604e-07
    2. '[from' → logprob: -15.25
    3. ')' → logprob: -16.625
    4. ' from' → logprob: -17.0
    5. '_from' → logprob: -17.875
    6. '.from' → logprob: -18.25
    7. '==' → logprob: -18.5
    8. '```' → logprob: -18.625
    9. '
' → logprob: -19.25
    10. '(from' → logprob: -19.375

Token 569: 'last' (ID: 6684)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0574379526078701
    2. '==' → logprob: -3.1824378967285156
    3. 'last' → logprob: -5.057437896728516
    4. '=' → logprob: -5.932437896728516
    5. ' ' → logprob: -6.432437896728516
    6. '1' → logprob: -6.432437896728516
    7. ' ==' → logprob: -6.682437896728516
    8. '[' → logprob: -7.932437896728516
    9. ' last' → logprob: -8.932437896728516
    10. '<=' → logprob: -9.182437896728516

Token 570: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02249639667570591
    2. ' ==' → logprob: -3.897496461868286
    3. '<=' → logprob: -6.397496223449707
    4. ')==' → logprob: -9.272496223449707
    5. '>=' → logprob: -9.772496223449707
    6. ')' → logprob: -9.897496223449707
    7. ' <=' → logprob: -10.022496223449707
    8. '[' → logprob: -11.272496223449707
    9. ']==' → logprob: -11.647496223449707
    10. '()==' → logprob: -12.397496223449707

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. ')' → logprob: -15.250296592712402
    4. '   ' → logprob: -16.625295639038086
    5. '  ' → logprob: -17.125295639038086
    6. '=' → logprob: -17.125295639038086
    7. ' ' → logprob: -17.250295639038086
    8. '<|end|>' → logprob: -17.375295639038086
    9. '
' → logprob: -17.875295639038086
    10. '```' → logprob: -18.000295639038086

Token 572: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4285862057004124e-05
    2. ')
' → logprob: -11.00003433227539
    3. ' and' → logprob: -12.00003433227539
    4. '),' → logprob: -12.37503433227539
    5. ' )' → logprob: -13.00003433227539
    6. '))' → logprob: -13.62503433227539
    7. '       ' → logprob: -13.75003433227539
    8. ')==' → logprob: -14.37503433227539
    9. '   ' → logprob: -14.50003433227539
    10. '())' → logprob: -15.50003433227539

Token 573: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4473476707935333
    2. '<|end|>' → logprob: -1.197347640991211
    3. '   ' → logprob: -3.197347640991211
    4. '    
' → logprob: -5.572347640991211
    5. ' ' → logprob: -6.197347640991211
    6. ')' → logprob: -6.447347640991211
    7. '

' → logprob: -6.822347640991211
    8. '<|end|>' → logprob: -6.822347640991211
    9. '    ' → logprob: -6.947347640991211
    10. ':' → logprob: -7.197347640991211

Token 574: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' trigger' (ID: 14699)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.929799199104309
    2. ' at' → logprob: -2.5547990798950195
    3. 'move' → logprob: -2.8047990798950195
    4. ' move' → logprob: -2.9922990798950195
    5. 'update' → logprob: -3.1797990798950195
    6. 'work' → logprob: -3.2422990798950195
    7. 'go' → logprob: -3.6797990798950195
    8. ' update' → logprob: -4.0547990798950195
    9. 'upd' → logprob: -4.1172990798950195
    10. 'pend' → logprob: -4.1172990798950195

Token 576: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004755943373311311
    2. '():
' → logprob: -8.000475883483887
    3. ' ():' → logprob: -9.125475883483887
    4. '()' → logprob: -11.875475883483887
    5. '_' → logprob: -12.000475883483887
    6. '(' → logprob: -12.375475883483887
    7. 'def' → logprob: -13.000475883483887
    8. '(n' → logprob: -14.000475883483887
    9. '(p' → logprob: -14.125475883483887
    10. '(prev' → logprob: -14.250475883483887

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01089796144515276
    2. '<|end|>' → logprob: -4.760898113250732
    3. '   ' → logprob: -7.510898113250732
    4. '(' → logprob: -7.885898113250732
    5. '        
' → logprob: -8.510897636413574
    6. '<|end|>' → logprob: -8.635897636413574
    7. '    ' → logprob: -8.760897636413574
    8. '()' → logprob: -9.010897636413574
    9. '
' → logprob: -9.385897636413574
    10. ' return' → logprob: -9.510897636413574

Token 578: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14897967875003815
    2. 'if' → logprob: -2.898979663848877
    3. ' if' → logprob: -3.773979663848877
    4. 'return' (adapté à ' return') → logprob: -3.898979663848877
    5. 'for' → logprob: -5.148979663848877
    6. '   ' → logprob: -5.148979663848877
    7. 'print' → logprob: -5.273979663848877
    8. ' return' → logprob: -5.773979663848877
    9. ' for' → logprob: -5.773979663848877
    10. 'while' → logprob: -6.148979663848877

Token 579: ' (' (ID: 350)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.4645981788635254
    2. ' pend' → logprob: -1.7145981788635254
    3. ' not' → logprob: -1.8395981788635254
    4. ' (' → logprob: -1.8395981788635254
    5. ' last' → logprob: -2.0895981788635254
    6. '(not' → logprob: -3.3395981788635254
    7. '(dist' → logprob: -3.5895981788635254
    8. ' len' → logprob: -4.339598178863525
    9. 'not' → logprob: -4.589598178863525
    10. '(last' → logprob: -4.714598178863525

Token 580: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0672317743301392
    2. 'pend' → logprob: -1.5672317743301392
    3. 'not' → logprob: -1.8172317743301392
    4. 'dist' → logprob: -2.0672316551208496
    5. 'last' → logprob: -2.4422316551208496
    6. 'prob' → logprob: -3.5672316551208496
    7. 'at' → logprob: -4.06723165512085
    8. 'n' → logprob: -5.06723165512085
    9. '(not' → logprob: -5.31723165512085
    10. '(dist' → logprob: -5.81723165512085

Token 581: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0011521248379722238
    2. '(' → logprob: -7.501152038574219
    3. '(work' → logprob: -7.876152038574219
    4. 'pend' → logprob: -8.751152038574219
    5. 'work' → logprob: -11.001152038574219
    6. '(
' → logprob: -11.126152038574219
    7. ')' → logprob: -12.251152038574219
    8. ' (' → logprob: -12.251152038574219
    9. 'p' → logprob: -12.876152038574219
    10. '
' → logprob: -13.376152038574219

Token 582: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -9.901345038088039e-05
    2. 'en' → logprob: -11.375099182128906
    3. 'eng' → logprob: -11.500099182128906
    4. 'pend' → logprob: -11.625099182128906
    5. 'e' → logprob: -11.750099182128906
    6. 'endl' → logprob: -11.875099182128906
    7. ')' → logprob: -12.000099182128906
    8. '(end' → logprob: -12.000099182128906
    9. 'endr' → logprob: -12.500099182128906
    10. '[end' → logprob: -12.625099182128906

Token 583: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -1.7432603272027336e-06
    2. '_req' → logprob: -14.750001907348633
    3. '(req' → logprob: -14.875001907348633
    4. ')' → logprob: -15.125001907348633
    5. ' req' → logprob: -15.875001907348633
    6. 'eq' → logprob: -15.875001907348633
    7. '	req' → logprob: -16.375001907348633
    8. 'rep' → logprob: -16.375001907348633
    9. '=req' → logprob: -16.875001907348633
    10. 'rev' → logprob: -17.250001907348633

Token 584: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.4750150740146637
    2. ')' → logprob: -0.9750150442123413
    3. ')==' → logprob: -8.225014686584473
    4. ')!=' → logprob: -8.600014686584473
    5. ' )' → logprob: -8.975014686584473
    6. '[-' → logprob: -9.225014686584473
    7. ')>=' → logprob: -9.350014686584473
    8. '()>' → logprob: -10.225014686584473
    9. '>' → logprob: -10.350014686584473
    10. '[' → logprob: -10.850014686584473

Token 585: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001088543445803225
    2. ' ' → logprob: -7.126088619232178
    3. '1' → logprob: -9.25108814239502
    4. ')' → logprob: -9.50108814239502
    5. '=' → logprob: -10.50108814239502
    6. '>' → logprob: -11.68858814239502
    7. '2' → logprob: -11.68858814239502
    8. '   ' → logprob: -11.75108814239502
    9. '(' → logprob: -11.93858814239502
    10. '  ' → logprob: -12.18858814239502

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12218664586544037
    2. ' and' → logprob: -2.2471866607666016
    3. '<|end|>' → logprob: -5.497186660766602
    4. 'and' → logprob: -6.122186660766602
    5. ' or' → logprob: -6.247186660766602
    6. ' )' → logprob: -6.997186660766602
    7. '<|end|>' → logprob: -9.872186660766602
    8. 'or' → logprob: -10.622186660766602
    9. '),' → logprob: -11.122186660766602
    10. ')
' → logprob: -11.622186660766602

Token 587: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.2553932666778564
    2. ' trigger' → logprob: -1.5053932666778564
    3. 'at' → logprob: -1.6303932666778564
    4. 'trigger' → logprob: -2.0053932666778564
    5. 'not' → logprob: -3.2553932666778564
    6. ' not' → logprob: -3.2553932666778564
    7. ' pend' → logprob: -4.130393028259277
    8. '(trigger' → logprob: -4.505393028259277
    9. 'DBG' → logprob: -4.755393028259277
    10. ' DBG' → logprob: -4.880393028259277

Token 590: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -8.554343366995454e-05
    2. 'd' → logprob: -9.875085830688477
    3. '_de' → logprob: -11.125085830688477
    4. '_' → logprob: -11.625085830688477
    5. 'dep' → logprob: -12.375085830688477
    6. ' de' → logprob: -13.125085830688477
    7. ' ' → logprob: -13.625085830688477
    8. ')' → logprob: -14.375085830688477
    9. 'def' → logprob: -14.750085830688477
    10. '  ' → logprob: -15.250085830688477

Token 591: 'pot' (ID: 18147)
  Prédit: 'pot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.0007312587113119662
    2. 'ep' → logprob: -8.000731468200684
    3. 'p' → logprob: -9.000731468200684
    4. 'po' → logprob: -9.625731468200684
    5. 'ot' → logprob: -9.750731468200684
    6. 'de' → logprob: -9.750731468200684
    7. 'pod' → logprob: -10.375731468200684
    8. 'opt' → logprob: -11.250731468200684
    9. 'pet' → logprob: -11.375731468200684
    10. 'opot' → logprob: -11.500731468200684

Token 592: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8918284177780151
    2. '():' → logprob: -1.3918284177780151
    3. ' and' → logprob: -1.5168284177780151
    4. 'and' → logprob: -2.5168285369873047
    5. '()==' → logprob: -3.5168285369873047
    6. ':' → logprob: -4.891828536987305
    7. '==' → logprob: -5.641828536987305
    8. '():
' → logprob: -8.141828536987305
    9. ' ==' → logprob: -8.891828536987305
    10. '   ' → logprob: -10.516828536987305

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009602374397218227
    2. '<|end|>' → logprob: -5.8846025466918945
    3. '   ' → logprob: -6.2596025466918945
    4. ':' → logprob: -6.2596025466918945
    5. '           ' → logprob: -7.2596025466918945
    6. ' and' → logprob: -7.2596025466918945
    7. ':
' → logprob: -8.009602546691895
    8. '	' → logprob: -8.384602546691895
    9. ' if' → logprob: -9.009602546691895
    10. '               ' → logprob: -9.384602546691895

Token 594: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4725399911403656
    2. 'while' → logprob: -1.847540020942688
    3. 'pend' → logprob: -2.8475399017333984
    4. 'for' → logprob: -3.0975399017333984
    5. '       ' → logprob: -3.2225399017333984
    6. 'dist' → logprob: -3.5975399017333984
    7. '           ' → logprob: -4.472539901733398
    8. 'work' → logprob: -4.597539901733398
    9. 'dd' → logprob: -4.847539901733398
    10. 'uf' → logprob: -5.597539901733398

Token 595: ' trigger' (ID: 14699)
  Prédit: 'trigger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trigger' → logprob: -0.46408382058143616
    2. ' trigger' → logprob: -1.0890837907791138
    3. 'len' → logprob: -3.7140839099884033
    4. ' len' → logprob: -4.714083671569824
    5. '(trigger' → logprob: -7.089083671569824
    6. '	trigger' → logprob: -8.589083671569824
    7. '(len' → logprob: -9.089083671569824
    8. '   ' → logprob: -9.214083671569824
    9. 'not' → logprob: -10.089083671569824
    10. ' ' → logprob: -10.089083671569824

Token 596: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004844154173042625
    2. '():
' → logprob: -7.875484466552734
    3. '()' → logprob: -10.125484466552734
    4. '()==' → logprob: -10.125484466552734
    5. '()>' → logprob: -11.125484466552734
    6. ' ():' → logprob: -12.250484466552734
    7. ':' → logprob: -12.875484466552734
    8. '():
' → logprob: -14.375484466552734
    9. '():

' → logprob: -15.000484466552734
    10. '()">' → logprob: -15.125484466552734

Token 597: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043977539986371994
    2. ':' → logprob: -4.043977737426758
    3. '       ' → logprob: -4.668977737426758
    4. ':
' → logprob: -4.918977737426758
    5. '```' → logprob: -5.793977737426758
    6. '<|end|>' → logprob: -6.043977737426758
    7. '            
' → logprob: -7.543977737426758
    8. '#' → logprob: -7.793977737426758
    9. ',' → logprob: -8.043977737426758
    10. '	       ' → logprob: -8.043977737426758

Token 598: ' vis' (ID: 1909)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.2603920698165894
    2. 'last' → logprob: -1.3853920698165894
    3. ' new' → logprob: -2.510392189025879
    4. '           ' → logprob: -2.510392189025879
    5. 'dist' → logprob: -2.635392189025879
    6. 'x' → logprob: -2.635392189025879
    7. ' last' → logprob: -2.885392189025879
    8. 'pend' → logprob: -3.760392189025879
    9. 'nd' → logprob: -3.885392189025879
    10. 'print' → logprob: -5.010392189025879

Token 599: 'list' (ID: 2641)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.34952399134635925
    2. 'it' → logprob: -1.5995240211486816
    3. '=' → logprob: -2.9745240211486816
    4. ' =' → logprob: -3.3495240211486816
    5. 'iting' → logprob: -6.349524021148682
    6. 'its' → logprob: -6.599524021148682
    7. '[i' → logprob: -6.974524021148682
    8. '[' → logprob: -7.474524021148682
    9. '=[]
' → logprob: -7.599524021148682
    10. '=[' → logprob: -7.849524021148682

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31751054525375366
    2. '=' → logprob: -1.9425106048583984
    3. '[' → logprob: -2.5675106048583984
    4. '.append' → logprob: -3.3175106048583984
    5. '=[]' → logprob: -5.317510604858398
    6. '<|end|>' → logprob: -5.317510604858398
    7. '=[' → logprob: -5.567510604858398
    8. '[:]' → logprob: -7.317510604858398
    9. ' =[' → logprob: -8.442510604858398
    10. '.extend' → logprob: -8.817510604858398

Token 601: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0766874551773071
    2. '[]
' → logprob: -1.0766874551773071
    3. '[]' → logprob: -1.4516874551773071
    4. 'set' → logprob: -3.4516873359680176
    5. '[n' → logprob: -4.201687335968018
    6. '[p' → logprob: -4.326687335968018
    7. 'pend' → logprob: -4.326687335968018
    8. '{}' → logprob: -5.701687335968018
    9. '{' → logprob: -6.451687335968018
    10. '[list' → logprob: -6.951687335968018

Token 602: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20348073542118073
    2. '()
' → logprob: -1.8284807205200195
    3. '(p' → logprob: -3.8284807205200195
    4. '([' → logprob: -6.5784807205200195
    5. '(' → logprob: -9.57848072052002
    6. '()

' → logprob: -9.95348072052002
    7. '(range' → logprob: -10.07848072052002
    8. '(n' → logprob: -10.45348072052002
    9. '()\' → logprob: -10.45348072052002
    10. '([])
' → logprob: -10.70348072052002

Token 603: 'x' (ID: 87)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.23425990343093872
    2. '1' → logprob: -1.609259843826294
    3. 'new' → logprob: -4.859260082244873
    4. ' last' → logprob: -8.234259605407715
    5. 't' → logprob: -9.234259605407715
    6. 'i' → logprob: -9.234259605407715
    7. '(last' → logprob: -9.484259605407715
    8. '0' → logprob: -9.484259605407715
    9. '(' → logprob: -9.609259605407715
    10. 'next' → logprob: -9.734259605407715

Token 604: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014278567396104336
    2. '])' → logprob: -4.889278411865234
    3. ' for' → logprob: -6.139278411865234
    4. '])
' → logprob: -6.514278411865234
    5. '(' → logprob: -7.014278411865234
    6. 'for' → logprob: -7.639278411865234
    7. '[-' → logprob: -7.889278411865234
    8. '0' → logprob: -8.014278411865234
    9. ']' → logprob: -8.889278411865234
    10. '][' → logprob: -9.514278411865234

Token 605: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00731317326426506
    2. '1' → logprob: -5.132313251495361
    3. 'i' → logprob: -7.132313251495361
    4. '2' → logprob: -8.632312774658203
    5. '[' → logprob: -9.132312774658203
    6. '-' → logprob: -9.257312774658203
    7. 'new' → logprob: -10.507312774658203
    8. 'for' → logprob: -10.507312774658203
    9. ' ' → logprob: -10.507312774658203
    10. 'n' → logprob: -10.819812774658203

Token 606: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4973379671573639
    2. '])' → logprob: -1.9973379373550415
    3. '[' → logprob: -2.122338056564331
    4. 'for' → logprob: -2.872338056564331
    5. '][' → logprob: -3.497338056564331
    6. ']])' → logprob: -3.997338056564331
    7. ']' → logprob: -4.372337818145752
    8. ']))' → logprob: -5.122337818145752
    9. ')])' → logprob: -5.247337818145752
    10. '])]' → logprob: -5.372337818145752

Token 607: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6750032305717468
    2. '])' → logprob: -0.8000032305717468
    3. 'for' → logprob: -3.3000032901763916
    4. ' ])' → logprob: -6.5500030517578125
    5. '[' → logprob: -6.9250030517578125
    6. ']' → logprob: -7.8000030517578125
    7. '])
' → logprob: -7.9250030517578125
    8. '       ' → logprob: -8.425003051757812
    9. '	for' → logprob: -8.675003051757812
    10. '           ' → logprob: -8.800003051757812

Token 608: ' x' (ID: 1215)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.001764905289746821
    2. ' pend' → logprob: -6.75176477432251
    3. 'x' → logprob: -7.87676477432251
    4. 'pending' → logprob: -9.251765251159668
    5. 'p' → logprob: -10.251765251159668
    6. 'pen' → logprob: -11.126765251159668
    7. '
' → logprob: -11.376765251159668
    8. '   ' → logprob: -11.876765251159668
    9. '(x' → logprob: -12.126765251159668
    10. ' ' → logprob: -12.126765251159668

Token 609: ' in' (ID: 306)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.1398930698633194
    2. 'in' → logprob: -2.514893054962158
    3. ' in' → logprob: -3.264893054962158
    4. ' pend' → logprob: -4.639893054962158
    5. 'x' → logprob: -7.139893054962158
    6. 'pending' → logprob: -7.639893054962158
    7. ']' → logprob: -9.639893531799316
    8. 'pen' → logprob: -9.889893531799316
    9. 'n' → logprob: -10.139893531799316
    10. ')' → logprob: -10.264893531799316

Token 610: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.00025788258062675595
    2. 'pending' → logprob: -9.00025749206543
    3. ' pend' → logprob: -9.12525749206543
    4. 'pen' → logprob: -11.50025749206543
    5. '
' → logprob: -11.87525749206543
    6. 'pent' → logprob: -13.50025749206543
    7. '   ' → logprob: -14.25025749206543
    8. 'pendency' → logprob: -14.25025749206543
    9. '```' → logprob: -14.68775749206543
    10. 'pendent' → logprob: -14.81275749206543

Token 611: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -6.2729995988775045e-06
    2. 'eq' → logprob: -12.375006675720215
    3. ' req' → logprob: -14.375006675720215
    4. 'q' → logprob: -14.875006675720215
    5. '	req' → logprob: -14.875006675720215
    6. '(req' → logprob: -15.875006675720215
    7. '_req' → logprob: -16.3750057220459
    8. 'rec' → logprob: -16.6250057220459
    9. 'r' → logprob: -16.7500057220459
    10. 'reg' → logprob: -17.1250057220459

Token 612: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03071482665836811
    2. '])
' → logprob: -3.530714750289917
    3. '           ' → logprob: -7.905714988708496
    4. ' ])' → logprob: -7.905714988708496
    5. '       ' → logprob: -9.405714988708496
    6. '               ' → logprob: -10.905714988708496
    7. ' ])
' → logprob: -11.030714988708496
    8. '                   ' → logprob: -11.030714988708496
    9. '          ' → logprob: -11.155714988708496
    10. '         ' → logprob: -11.405714988708496

Token 613: ' |' (ID: 1022)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13590526580810547
    2. '<|end|>' → logprob: -2.1359052658081055
    3. '               ' → logprob: -5.8859052658081055
    4. '<|end|>' → logprob: -6.8859052658081055
    5. '            
' → logprob: -7.0109052658081055
    6. ')' → logprob: -7.1359052658081055
    7. '		' → logprob: -7.8859052658081055
    8. ',' → logprob: -7.8859052658081055
    9. '            ' → logprob: -8.385905265808105
    10. '                   ' → logprob: -8.385905265808105

Token 614: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.01694931648671627
    2. ' set' → logprob: -4.51694917678833
    3. '{' → logprob: -5.39194917678833
    4. '   ' → logprob: -7.39194917678833
    5. '{x' → logprob: -8.141949653625488
    6. '       ' → logprob: -9.141949653625488
    7. '  ' → logprob: -10.016949653625488
    8. '     ' → logprob: -10.016949653625488
    9. '    ' → logprob: -10.266949653625488
    10. '      ' → logprob: -10.391949653625488

Token 615: '(work' (ID: 61786)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.007479310967028141
    2. '(x' → logprob: -5.382479190826416
    3. '({' → logprob: -7.007479190826416
    4. '(p' → logprob: -7.382479190826416
    5. '(dist' → logprob: -7.507479190826416
    6. '(range' → logprob: -8.632479667663574
    7. '(n' → logprob: -9.007479667663574
    8. '(' → logprob: -9.007479667663574
    9. '(
' → logprob: -9.257479667663574
    10. '(work' → logprob: -10.007479667663574

Token 616: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.00037621514638885856
    2. '[' → logprob: -8.000375747680664
    3. '_req' → logprob: -11.375375747680664
    4. '```' → logprob: -12.625375747680664
    5. '[
' → logprob: -12.875375747680664
    6. '[-' → logprob: -12.875375747680664
    7. '[x' → logprob: -13.000375747680664
    8. ')' → logprob: -13.250375747680664
    9. ' req' → logprob: -13.500375747680664
    10. '[n' → logprob: -13.500375747680664

Token 617: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01974497362971306
    2. ')
' → logprob: -4.394744873046875
    3. '])' → logprob: -5.519744873046875
    4. '       ' → logprob: -6.519744873046875
    5. ' )' → logprob: -7.519744873046875
    6. '())' → logprob: -8.269744873046875
    7. '<|end|>' → logprob: -8.519744873046875
    8. ')])' → logprob: -8.894744873046875
    9. '           ' → logprob: -9.519744873046875
    10. '   ' → logprob: -9.519744873046875

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04474100098013878
    2. '<|end|>' → logprob: -3.169740915298462
    3. '            
' → logprob: -7.169741153717041
    4. '               ' → logprob: -8.669740676879883
    5. '<|end|>' → logprob: -9.044740676879883
    6. '            ' → logprob: -9.169740676879883
    7. '
' → logprob: -9.794740676879883
    8. '		' → logprob: -9.919740676879883
    9. ')' → logprob: -10.044740676879883
    10. '          ' → logprob: -10.294740676879883

Token 619: ' vv' (ID: 107521)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10425716638565063
    2. '<|end|>' → logprob: -2.479257106781006
    3. '            ' → logprob: -5.854257106781006
    4. '               ' → logprob: -6.604257106781006
    5. ' if' → logprob: -6.729257106781006
    6. '            
' → logprob: -6.979257106781006
    7. 'vis' → logprob: -7.104257106781006
    8. 'continue' → logprob: -7.354257106781006
    9. ' for' → logprob: -7.479257106781006
    10. ' continue' → logprob: -7.479257106781006

Token 620: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28641459345817566
    2. ' =' → logprob: -1.411414623260498
    3. '.add' → logprob: -6.161414623260498
    4. '.update' → logprob: -7.786414623260498
    5. '   ' → logprob: -8.41141414642334
    6. '=[' → logprob: -8.41141414642334
    7. '.' → logprob: -8.53641414642334
    8. 'isted' → logprob: -8.66141414642334
    9. 'ist' → logprob: -8.78641414642334
    10. '=set' → logprob: -8.78641414642334

Token 621: ' len' (ID: 4631)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.529615581035614
    2. '999' → logprob: -1.2796156406402588
    3. 'dist' → logprob: -3.029615640640259
    4. '[' → logprob: -4.27961540222168
    5. 'sorted' → logprob: -4.27961540222168
    6. 'max' → logprob: -4.27961540222168
    7. '0' → logprob: -4.77961540222168
    8. '[]
' → logprob: -4.90461540222168
    9. '-' → logprob: -5.27961540222168
    10. '[min' → logprob: -5.40461540222168

Token 622: '(vis' (ID: 183220)
  Prédit: '(vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vis' → logprob: -0.00231012306176126
    2. '(' → logprob: -6.127310276031494
    3. '(v' → logprob: -9.502309799194336
    4. '(work' → logprob: -10.377309799194336
    5. ' (' → logprob: -11.752309799194336
    6. '(
' → logprob: -11.877309799194336
    7. '(n' → logprob: -14.252309799194336
    8. '(dist' → logprob: -14.502309799194336
    9. '(es' → logprob: -14.752309799194336
    10. '(visitor' → logprob: -14.877309799194336

Token 623: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3620907664299011
    2. 'ist' → logprob: -1.612090826034546
    3. 'is' → logprob: -2.487090826034546
    4. 'isted' → logprob: -4.487090587615967
    5. '(vis' → logprob: -5.737090587615967
    6. 'vis' → logprob: -6.487090587615967
    7. '(v' → logprob: -6.862090587615967
    8. 'ited' → logprob: -7.112090587615967
    9. 'isit' → logprob: -7.112090587615967
    10. '(list' → logprob: -7.987090587615967

Token 624: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02965931035578251
    2. ')
' → logprob: -3.9046592712402344
    3. '<|end|>' → logprob: -4.904659271240234
    4. ')+' → logprob: -7.154659271240234
    5. '+' → logprob: -8.029659271240234
    6. '<|end|>' → logprob: -8.654659271240234
    7. ' )' → logprob: -9.029659271240234
    8. ')-' → logprob: -10.029659271240234
    9. ' +' → logprob: -10.029659271240234
    10. ')>' → logprob: -10.529659271240234

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0072279698215425014
    2. '<|end|>' → logprob: -5.757227897644043
    3. ' if' → logprob: -6.257227897644043
    4. 'if' → logprob: -7.382227897644043
    5. ' for' → logprob: -8.382227897644043
    6. ')' → logprob: -8.507227897644043
    7. ',' → logprob: -9.132227897644043
    8. 'for' → logprob: -9.257227897644043
    9. '       ' → logprob: -9.757227897644043
    10. 'v' → logprob: -9.757227897644043

Token 626: ' pend' (ID: 27278)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9988153576850891
    2. '           ' → logprob: -1.7488152980804443
    3. 'print' → logprob: -2.7488152980804443
    4. 'vis' → logprob: -2.9988152980804443
    5. 'v' → logprob: -3.2488152980804443
    6. 'max' → logprob: -3.7488152980804443
    7. 'dist' → logprob: -3.7488152980804443
    8. 'next' → logprob: -3.8738152980804443
    9. 'dp' → logprob: -3.8738152980804443
    10. 'nd' → logprob: -4.248815536499023

Token 627: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0008209457155317068
    2. '=' → logprob: -8.625821113586426
    3. ' =' → logprob: -9.250821113586426
    4. '.append' → logprob: -9.625821113586426
    5. 'q' → logprob: -9.875821113586426
    6. '=[]' → logprob: -10.000821113586426
    7. 'idx' → logprob: -10.375821113586426
    8. '_req' → logprob: -10.375821113586426
    9. '```' → logprob: -10.625821113586426
    10. '[' → logprob: -10.625821113586426

Token 628: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.4957962930202484
    2. '.clear' → logprob: -1.3707963228225708
    3. ' =' → logprob: -2.6207962036132812
    4. '=' → logprob: -3.2457962036132812
    5. '.pop' → logprob: -4.120796203613281
    6. '[:]' → logprob: -6.495796203613281
    7. '=[]' → logprob: -6.620796203613281
    8. ',' → logprob: -6.745796203613281
    9. '.remove' → logprob: -6.995796203613281
    10. 'sort' → logprob: -7.120796203613281

Token 629: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.034068524837493896
    2. '[]
' → logprob: -3.4090685844421387
    3. 'pend' → logprob: -9.40906810760498
    4. '[])' → logprob: -9.53406810760498
    5. '[]}' → logprob: -9.53406810760498
    6. '[]

' → logprob: -9.53406810760498
    7. '[]>' → logprob: -10.40906810760498
    8. '[' → logprob: -10.65906810760498
    9. 'sorted' → logprob: -10.90906810760498
    10. '[(' → logprob: -11.15906810760498

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015486016869544983
    2. '<|end|>' → logprob: -4.640486240386963
    3. 'if' → logprob: -6.765486240386963
    4. 'vis' → logprob: -6.890486240386963
    5. 'work' → logprob: -7.765486240386963
    6. 'continue' → logprob: -7.765486240386963
    7. '...' → logprob: -8.140485763549805
    8. '            
' → logprob: -8.265485763549805
    9. '       ' → logprob: -8.265485763549805
    10. 'visit' → logprob: -8.640485763549805

Token 631: ' if' (ID: 538)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.06022053211927414
    2. '           ' → logprob: -4.435220718383789
    3. 'vis' → logprob: -4.435220718383789
    4. 'if' (adapté à ' if') → logprob: -5.060220718383789
    5. 'print' → logprob: -5.560220718383789
    6. '#' → logprob: -5.560220718383789
    7. 'continue' → logprob: -5.810220718383789
    8. 'for' → logprob: -5.935220718383789
    9. 'visited' → logprob: -5.935220718383789
    10. 'dist' → logprob: -6.310220718383789

Token 632: ' vv' (ID: 107521)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.2322315126657486
    2. 'DBG' → logprob: -2.107231616973877
    3. ' vv' → logprob: -3.232231616973877
    4. 'len' → logprob: -4.357231616973877
    5. ' DBG' → logprob: -4.732231616973877
    6. 'dbg' → logprob: -4.732231616973877
    7. 'prob' → logprob: -4.732231616973877
    8. 'DEBUG' → logprob: -6.857231616973877
    9. 'not' → logprob: -6.982231616973877
    10. 'work' → logprob: -7.107231616973877

Token 633: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5328088998794556
    2. ' >' → logprob: -1.4078088998794556
    3. '==' → logprob: -2.282808780670166
    4. ' ==' → logprob: -3.907808780670166
    5. '<=' → logprob: -4.282808780670166
    6. '<' → logprob: -4.782808780670166
    7. ' <' → logprob: -5.032808780670166
    8. '>=' → logprob: -5.157808780670166
    9. ' <=' → logprob: -5.282808780670166
    10. ' >=' → logprob: -6.282808780670166

Token 634: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09097814559936523
    2. '1' → logprob: -2.4659781455993652
    3. ' ' → logprob: -7.090978145599365
    4. 'MAX' → logprob: -8.215978622436523
    5. 'V' → logprob: -8.340978622436523
    6. '2' → logprob: -8.715978622436523
    7. 'v' → logprob: -9.465978622436523
    8. 'len' → logprob: -9.590978622436523
    9. '400' → logprob: -10.215978622436523
    10. '(' → logprob: -10.215978622436523

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4299607574939728
    2. ':
' → logprob: -1.0549607276916504
    3. ' and' → logprob: -7.55496072769165
    4. '               ' → logprob: -8.054961204528809
    5. ':

' → logprob: -9.054961204528809
    6. '):
' → logprob: -9.554961204528809
    7. '           ' → logprob: -9.804961204528809
    8. ' or' → logprob: -10.054961204528809
    9. ',' → logprob: -10.304961204528809
    10. '):' → logprob: -10.429961204528809

Token 636: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033081816509366035
    2. '   ' → logprob: -6.503308296203613
    3. '                   ' → logprob: -7.628308296203613
    4. 'continue' → logprob: -8.503308296203613
    5. '           ' → logprob: -8.628308296203613
    6. 'v' → logprob: -9.253308296203613
    7. '#' → logprob: -9.253308296203613
    8. '       ' → logprob: -9.378308296203613
    9. '                
' → logprob: -9.878308296203613
    10. 'dist' → logprob: -9.878308296203613

Token 637: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -0.4803988039493561
    2. 'print' → logprob: -2.3553988933563232
    3. '               ' → logprob: -2.8553988933563232
    4. 'dist' → logprob: -3.1053988933563232
    5. 'tt' → logprob: -3.2303988933563232
    6. 'dd' → logprob: -3.7303988933563232
    7. '   ' → logprob: -3.7303988933563232
    8. 'last' → logprob: -4.355398654937744
    9. ' work' → logprob: -4.730398654937744
    10. '           ' → logprob: -4.730398654937744

Token 638: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -3.0590548703912646e-05
    2. '_req' → logprob: -11.250030517578125
    3. '[' → logprob: -12.375030517578125
    4. 'rep' → logprob: -13.375030517578125
    5. '```' → logprob: -13.375030517578125
    6. '_' → logprob: -13.875030517578125
    7. '=req' → logprob: -13.875030517578125
    8. '=' → logprob: -14.000030517578125
    9. 'id' → logprob: -14.000030517578125
    10. '=[]' → logprob: -14.375030517578125

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05758178234100342
    2. ' =' → logprob: -3.807581901550293
    3. '+=' → logprob: -3.932581901550293
    4. '.append' → logprob: -4.557581901550293
    5. '=[]' → logprob: -6.307581901550293
    6. '.extend' → logprob: -7.682581901550293
    7. '=[' → logprob: -7.932581901550293
    8. '[' → logprob: -8.432581901550293
    9. ' +=' → logprob: -8.557581901550293
    10. '.clear' → logprob: -8.557581901550293

Token 640: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6961855292320251
    2. 'list' → logprob: -1.44618558883667
    3. '[]' → logprob: -2.57118558883667
    4. '[' → logprob: -2.57118558883667
    5. '[n' → logprob: -3.32118558883667
    6. '[v' → logprob: -3.44618558883667
    7. '[next' → logprob: -4.07118558883667
    8. '[x' → logprob: -4.44618558883667
    9. '[p' → logprob: -4.94618558883667
    10. 'vis' → logprob: -6.07118558883667

Token 641: '(vis' (ID: 183220)
  Prédit: '(vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vis' → logprob: -0.0012773767812177539
    2. '(' → logprob: -7.376277446746826
    3. '(p' → logprob: -7.501277446746826
    4. '(v' → logprob: -10.626276969909668
    5. '(
' → logprob: -10.751276969909668
    6. '(set' → logprob: -10.876276969909668
    7. '(range' → logprob: -11.876276969909668
    8. '([' → logprob: -12.001276969909668
    9. 'vis' → logprob: -12.376276969909668
    10. '(n' → logprob: -12.876276969909668

Token 642: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12852701544761658
    2. '[' → logprob: -2.6285269260406494
    3. 'ist' → logprob: -4.0035271644592285
    4. 'vis' → logprob: -4.2535271644592285
    5. '(vis' → logprob: -4.5035271644592285
    6. 'req' → logprob: -6.1285271644592285
    7. '[v' → logprob: -7.6285271644592285
    8. 'work' → logprob: -7.7535271644592285
    9. 'pend' → logprob: -8.00352668762207
    10. 'lists' → logprob: -8.12852668762207

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0161929652094841
    2. ')
' → logprob: -4.26619291305542
    3. '())' → logprob: -6.39119291305542
    4. '())
' → logprob: -9.266193389892578
    5. '()' → logprob: -9.766193389892578
    6. ')[' → logprob: -9.891193389892578
    7. '           ' → logprob: -10.016193389892578
    8. '               ' → logprob: -10.266193389892578
    9. '[' → logprob: -11.391193389892578
    10. '                   ' → logprob: -11.766193389892578

Token 644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14400118589401245
    2. '               ' → logprob: -3.1440012454986572
    3. 'else' → logprob: -3.2690012454986572
    4. '<|end|>' → logprob: -3.5190012454986572
    5. ' else' → logprob: -3.8940012454986572
    6. 'elif' → logprob: -7.394001007080078
    7. '                   ' → logprob: -7.644001007080078
    8. '<|end|>' → logprob: -8.019001007080078
    9. '[' → logprob: -8.394001007080078
    10. ',' → logprob: -8.894001007080078

Token 645: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1444389522075653
    2. 'else' (adapté à ' else') → logprob: -2.0194389820098877
    3. ' else' → logprob: -6.519438743591309
    4. 'elif' → logprob: -8.519438743591309
    5. '       ' → logprob: -10.019438743591309
    6. '               ' → logprob: -10.644438743591309
    7. '<|end|>' → logprob: -11.894438743591309
    8. '	       ' → logprob: -13.144438743591309
    9. ',' → logprob: -13.144438743591309
    10. '   ' → logprob: -13.269438743591309

Token 646: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5109093189239502
    2. ':' → logprob: -1.0109093189239502
    3. '           ' → logprob: -3.63590931892395
    4. '               ' → logprob: -5.010909080505371
    5. ':

' → logprob: -5.885909080505371
    6. ' :
' → logprob: -8.760909080505371
    7. ' :' → logprob: -9.760909080505371
    8. ' if' → logprob: -10.885909080505371
    9. ':
' → logprob: -10.885909080505371
    10. '   ' → logprob: -11.135909080505371

Token 647: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002465548226609826
    2. '   ' → logprob: -6.627465724945068
    3. '           ' → logprob: -7.502465724945068
    4. 'import' → logprob: -8.12746524810791
    5. '#' → logprob: -9.12746524810791
    6. '                   ' → logprob: -10.12746524810791
    7. '                
' → logprob: -10.50246524810791
    8. 'if' → logprob: -11.62746524810791
    9. '	           ' → logprob: -11.62746524810791
    10. 'from' → logprob: -11.62746524810791

Token 648: ' e' (ID: 319)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.6121048927307129
    2. 'import' → logprob: -1.737104892730713
    3. '               ' → logprob: -1.862104892730713
    4. '           ' → logprob: -3.737104892730713
    5. '   ' → logprob: -3.862104892730713
    6. '#' → logprob: -4.362104892730713
    7. 'dd' → logprob: -4.362104892730713
    8. 'from' → logprob: -4.987104892730713
    9. 'print' → logprob: -5.112104892730713
    10. ' work' → logprob: -5.112104892730713

Token 649: ' =' (ID: 314)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.05534201115369797
    2. '           ' → logprob: -4.180342197418213
    3. 'lif' → logprob: -4.805342197418213
    4. '       ' → logprob: -4.805342197418213
    5. 'ls' → logprob: -5.055342197418213
    6. 'l' → logprob: -5.680342197418213
    7. 'work' → logprob: -5.930342197418213
    8. 'lf' → logprob: -6.555342197418213
    9. 'elif' → logprob: -6.680342197418213
    10. 'if' → logprob: -7.305342197418213

Token 650: ' {}
' (ID: 11421)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '999' → logprob: -0.3471536934375763
    2. '[' → logprob: -2.097153663635254
    3. '[v' → logprob: -2.972153663635254
    4. '[[' → logprob: -4.097153663635254
    5. '0' → logprob: -4.597153663635254
    6. ' [' → logprob: -4.722153663635254
    7. 'sys' → logprob: -4.847153663635254
    8. '1' → logprob: -4.972153663635254
    9. '[]
' → logprob: -4.972153663635254
    10. 'vv' → logprob: -5.097153663635254

Token 651: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5329965353012085
    2. 'for' → logprob: -1.2829965353012085
    3. ' for' → logprob: -2.532996654510498
    4. '<|end|>' → logprob: -3.532996654510498
    5. '{' → logprob: -4.657996654510498
    6. '               ' → logprob: -5.282996654510498
    7. '	       ' → logprob: -6.032996654510498
    8. '```' → logprob: -6.157996654510498
    9. '		' → logprob: -6.782996654510498
    10. '[' → logprob: -6.782996654510498

Token 652: ' f' (ID: 285)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00282924622297287
    2. '               ' → logprob: -6.752829074859619
    3. '           ' → logprob: -8.002829551696777
    4. ' for' → logprob: -8.252829551696777
    5. 'import' → logprob: -8.502829551696777
    6. 'from' → logprob: -8.627829551696777
    7. 'keys' → logprob: -8.877829551696777
    8. '                   ' → logprob: -9.502829551696777
    9. 'dd' → logprob: -9.502829551696777
    10. '   ' → logprob: -9.502829551696777

Token 653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05596679821610451
    2. '=' → logprob: -3.055966854095459
    3. '={}' → logprob: -5.430966854095459
    4. 'or' → logprob: -7.430966854095459
    5. '={}
' → logprob: -7.680966854095459
    6. '<|end|>' → logprob: -7.680966854095459
    7. 'for' → logprob: -8.0559663772583
    8. '{' → logprob: -8.6809663772583
    9. ' ={' → logprob: -8.8059663772583
    10. '={' → logprob: -9.1809663772583

Token 654: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.055483218282461166
    2. '{' → logprob: -3.930483102798462
    3. '{}
' → logprob: -3.930483102798462
    4. '[' → logprob: -5.180483341217041
    5. '[]' → logprob: -5.430483341217041
    6. 'lambda' → logprob: -5.930483341217041
    7. '[]
' → logprob: -7.180483341217041
    8. '{})' → logprob: -8.805482864379883
    9. '(lambda' → logprob: -8.930482864379883
    10. 'set' → logprob: -9.055482864379883

Token 655: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021447166800498962
    2. '<|end|>' → logprob: -4.39644718170166
    3. 'for' → logprob: -5.64644718170166
    4. ' for' → logprob: -5.64644718170166
    5. '           ' → logprob: -7.27144718170166
    6. '                ' → logprob: -7.64644718170166
    7. '                   ' → logprob: -8.27144718170166
    8. '       ' → logprob: -9.77144718170166
    9. '[]' → logprob: -10.14644718170166
    10. '              ' → logprob: -10.27144718170166

Token 656: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.37072429060935974
    2. '               ' → logprob: -1.2457243204116821
    3. 'parent' → logprob: -4.495724201202393
    4. ' for' → logprob: -5.620724201202393
    5. 'uf' → logprob: -6.120724201202393
    6. '           ' → logprob: -6.870724201202393
    7. 'import' → logprob: -7.745724201202393
    8. 'def' → logprob: -8.12072467803955
    9. 'cnt' → logprob: -8.24572467803955
    10. 'parents' → logprob: -8.24572467803955

Token 657: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5949798822402954
    2. 'x' → logprob: -1.0949798822402954
    3. 'v' → logprob: -2.719979763031006
    4. 'z' → logprob: -4.219979763031006
    5. 'k' → logprob: -4.469979763031006
    6. 'u' → logprob: -5.094979763031006
    7. 'j' → logprob: -5.719979763031006
    8. 'node' → logprob: -5.969979763031006
    9. 'w' → logprob: -6.219979763031006
    10. 'a' → logprob: -6.594979763031006

Token 658: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026517879217863083
    2. 'in' → logprob: -3.651517868041992
    3. ',v' → logprob: -9.401517868041992
    4. ',' → logprob: -10.401517868041992
    5. 'i' → logprob: -10.651517868041992
    6. ' ' → logprob: -11.276517868041992
    7. '   ' → logprob: -11.526517868041992
    8. 'v' → logprob: -11.776517868041992
    9. ' i' → logprob: -11.776517868041992
    10. '           ' → logprob: -12.839017868041992

Token 659: ' vis' (ID: 1909)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6239475607872009
    2. 'vis' → logprob: -0.8739475607872009
    3. 'work' → logprob: -3.2489476203918457
    4. 'es' → logprob: -5.623947620391846
    5. ' range' → logprob: -6.248947620391846
    6. '(vis' → logprob: -6.498947620391846
    7. 'in' → logprob: -8.623947143554688
    8. 'list' → logprob: -8.873947143554688
    9. ' vis' → logprob: -9.123947143554688
    10. 'visited' → logprob: -9.373947143554688

Token 660: 'list' (ID: 2641)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12263692915439606
    2. 'vis' → logprob: -2.7476370334625244
    3. 'list' → logprob: -3.2476370334625244
    4. 'ist' → logprob: -4.872636795043945
    5. 'work' → logprob: -6.122636795043945
    6. 'range' → logprob: -7.372636795043945
    7. '(vis' → logprob: -7.497636795043945
    8. '
' → logprob: -8.247636795043945
    9. 'v' → logprob: -8.372636795043945
    10. ' vis' → logprob: -8.747636795043945

Token 661: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09017282724380493
    2. ':' → logprob: -2.59017276763916
    3. '   ' → logprob: -5.34017276763916
    4. '                   ' → logprob: -5.46517276763916
    5. ',' → logprob: -8.09017276763916
    6. '                           ' → logprob: -8.21517276763916
    7. '                       ' → logprob: -8.21517276763916
    8. ' in' → logprob: -8.34017276763916
    9. '           ' → logprob: -8.59017276763916
    10. '):
' → logprob: -8.59017276763916

Token 662: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04389689862728119
    2. ' for' → logprob: -4.293896675109863
    3. '   ' → logprob: -5.168896675109863
    4. '                           ' → logprob: -5.543896675109863
    5. '```' → logprob: -5.668896675109863
    6. '               ' → logprob: -5.918896675109863
    7. 'for' → logprob: -6.293896675109863
    8. '           ' → logprob: -6.418896675109863
    9. '                       ' → logprob: -6.418896675109863
    10. '<|end|>' → logprob: -6.543896675109863

Token 663: ' e' (ID: 319)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40004679560661316
    2. ' for' → logprob: -1.5250468254089355
    3. '                   ' → logprob: -2.7750468254089355
    4. '                       ' → logprob: -4.1500468254089355
    5. 'f' → logprob: -4.6500468254089355
    6. '   ' → logprob: -4.7750468254089355
    7. ' f' → logprob: -5.0250468254089355
    8. '               ' → logprob: -5.7750468254089355
    9. 'e' (adapté à ' e') → logprob: -6.2750468254089355
    10. '       ' → logprob: -6.2750468254089355

Token 664: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0006923011387698352
    2. '[(' → logprob: -8.250692367553711
    3. '[' → logprob: -8.875692367553711
    4. ' =' → logprob: -8.875692367553711
    5. '.setdefault' → logprob: -10.000692367553711
    6. '=' → logprob: -10.875692367553711
    7. '[e' → logprob: -11.000692367553711
    8. '[int' → logprob: -12.000692367553711
    9. '[f' → logprob: -12.000692367553711
    10. '={}' → logprob: -12.125692367553711

Token 665: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030112028121948242
    2. ']=' → logprob: -3.5301120281219482
    3. ']={' → logprob: -8.530112266540527
    4. '][' → logprob: -9.780112266540527
    5. '=' → logprob: -10.530112266540527
    6. '][]' → logprob: -11.280112266540527
    7. '=[]' → logprob: -11.280112266540527
    8. '   ' → logprob: -11.655112266540527
    9. '<|end|>' → logprob: -11.655112266540527
    10. '],' → logprob: -12.030112266540527

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005404746159911156
    2. ' =' → logprob: -5.880404949188232
    3. '=[]' → logprob: -6.755404949188232
    4. '=[' → logprob: -7.380404949188232
    5. ']' → logprob: -7.880404949188232
    6. ']=' → logprob: -8.130404472351074
    7. '=[]
' → logprob: -9.130404472351074
    8. ',' → logprob: -12.005404472351074
    9. '=set' → logprob: -12.255404472351074
    10. '=list' → logprob: -13.130404472351074

Token 667: ' []
' (ID: 8911)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '999' → logprob: -0.20836108922958374
    2. '0' → logprob: -2.7083611488342285
    3. '[' → logprob: -3.0833611488342285
    4. '[]
' → logprob: -4.2083611488342285
    5. 'float' → logprob: -4.4583611488342285
    6. '[]' → logprob: -4.7083611488342285
    7. 'dist' → logprob: -4.8333611488342285
    8. 'max' → logprob: -5.2083611488342285
    9. '{' → logprob: -5.5833611488342285
    10. 'MAX' → logprob: -6.2083611488342285

Token 668: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17236045002937317
    2. ' for' → logprob: -2.797360420227051
    3. '<|end|>' → logprob: -3.047360420227051
    4. 'for' → logprob: -3.297360420227051
    5. '               ' → logprob: -5.047360420227051
    6. '           ' → logprob: -6.047360420227051
    7. '```' → logprob: -6.297360420227051
    8. '[' → logprob: -7.297360420227051
    9. '       ' → logprob: -8.04736042022705
    10. '                       ' → logprob: -8.04736042022705

Token 669: ' uf' (ID: 35772)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6923899054527283
    2. 'for' → logprob: -0.9423899054527283
    3. '           ' → logprob: -2.942389965057373
    4. '<|end|>' → logprob: -3.567389965057373
    5. '               ' → logprob: -4.192389965057373
    6. 'f' → logprob: -5.692389965057373
    7. '                   ' → logprob: -5.817389965057373
    8. ' f' → logprob: -6.442389965057373
    9. '       ' → logprob: -6.567389965057373
    10. '	for' → logprob: -6.817389965057373

Token 670: 'ary' (ID: 815)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07240837812423706
    2. 'ary' → logprob: -3.697408437728882
    3. '=' → logprob: -4.197408199310303
    4. '.append' → logprob: -4.572408199310303
    5. '=[]
' → logprob: -5.322408199310303
    6. '   ' → logprob: -5.447408199310303
    7. 'parent' → logprob: -6.447408199310303
    8. '=[]' → logprob: -6.572408199310303
    9. ' ' → logprob: -6.697408199310303
    10. 'rank' → logprob: -7.072408199310303

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5815516114234924
    2. ' =' → logprob: -0.8315516114234924
    3. '=[' → logprob: -5.456551551818848
    4. '.append' → logprob: -6.706551551818848
    5. '   ' → logprob: -10.081551551818848
    6. '=[]
' → logprob: -10.581551551818848
    7. '=[]' → logprob: -11.956551551818848
    8. ' =[' → logprob: -11.956551551818848
    9. ' ' → logprob: -12.206551551818848
    10. '.extend' → logprob: -12.331551551818848

Token 672: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4741989076137543
    2. '[-' → logprob: -1.2241989374160767
    3. '[list' → logprob: -2.974198818206787
    4. 'list' → logprob: -3.599198818206787
    5. '[x' → logprob: -5.849198818206787
    6. '{' → logprob: -7.599198818206787
    7. '{}' → logprob: -7.974198818206787
    8. ' [' → logprob: -8.599199295043945
    9. '[]
' → logprob: -8.599199295043945
    10. '[u' → logprob: -8.599199295043945

Token 673: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0949847623705864
    2. 'for' → logprob: -2.469984769821167
    3. '0' → logprob: -6.344984531402588
    4. '               ' → logprob: -6.719984531402588
    5. '[]' → logprob: -7.219984531402588
    6. '[u' → logprob: -7.469984531402588
    7. ' [' → logprob: -7.969984531402588
    8. 'uf' → logprob: -8.094985008239746
    9. ' for' → logprob: -8.094985008239746
    10. '                   ' → logprob: -8.219985008239746

Token 674: ' u' (ID: 337)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.466486394405365
    2. 'for' → logprob: -1.2164864540100098
    3. '[' → logprob: -3.2164864540100098
    4. '               ' → logprob: -3.3414864540100098
    5. '0' → logprob: -7.71648645401001
    6. '[-' → logprob: -8.341485977172852
    7. ' for' → logprob: -8.966485977172852
    8. 'ufs' → logprob: -9.716485977172852
    9. '   ' → logprob: -10.341485977172852
    10. '                   ' → logprob: -10.716485977172852

Token 675: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.002697759075090289
    2. 'f' → logprob: -6.002697944641113
    3. 'fn' → logprob: -9.377697944641113
    4. 'far' → logprob: -10.252697944641113
    5. 'fl' → logprob: -11.002697944641113
    6. 'frag' → logprob: -11.127697944641113
    7. 'fk' → logprob: -11.627697944641113
    8. 'fork' → logprob: -11.627697944641113
    9. 'fname' → logprob: -12.252697944641113
    10. 'farm' → logprob: -12.627697944641113

Token 676: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -7.3458322731312364e-06
    2. 'nk' → logprob: -12.500007629394531
    3. '
' → logprob: -14.500007629394531
    4. 'rank' → logprob: -14.625007629394531
    5. ' ank' → logprob: -14.750007629394531
    6. 'anks' → logprob: -14.875007629394531
    7. 'a' → logprob: -15.125007629394531
    8. 'ark' → logprob: -15.375007629394531
    9. 'ANK' → logprob: -15.625007629394531
    10. 'ink' → logprob: -16.00000762939453

Token 677: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07004191726446152
    2. ' =' → logprob: -2.6950418949127197
    3. '=[]' → logprob: -9.32004165649414
    4. '=[]
' → logprob: -11.82004165649414
    5. '=[' → logprob: -12.57004165649414
    6. '.append' → logprob: -13.07004165649414
    7. '   ' → logprob: -13.82004165649414
    8. '[' → logprob: -14.32004165649414
    9. ' ' → logprob: -15.19504165649414
    10. '[:]' → logprob: -15.19504165649414

Token 678: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0065581100061535835
    2. '[]
' → logprob: -5.381557941436768
    3. '[' → logprob: -6.256557941436768
    4. ' []' → logprob: -12.131558418273926
    5. '[]

' → logprob: -12.256558418273926
    6. '[]}' → logprob: -12.506558418273926
    7. '[])' → logprob: -13.631558418273926
    8. '0' → logprob: -13.881558418273926
    9. '[]>' → logprob: -14.881558418273926
    10. '[:]' → logprob: -14.881558418273926

Token 679: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3413286805152893
    2. 'for' → logprob: -1.4663286209106445
    3. ' for' → logprob: -3.3413286209106445
    4. '               ' → logprob: -4.4663286209106445
    5. ' [' → logprob: -4.8413286209106445
    6. '[]' → logprob: -7.0913286209106445
    7. '   ' → logprob: -7.4663286209106445
    8. '                   ' → logprob: -7.7163286209106445
    9. '(' → logprob: -8.091328620910645
    10. '0' → logprob: -8.216328620910645

Token 680: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07729464024305344
    2. '               ' → logprob: -2.7022945880889893
    3. ' for' → logprob: -4.952294826507568
    4. '           ' → logprob: -8.45229434967041
    5. '   ' → logprob: -10.82729434967041
    6. 'uf' → logprob: -11.07729434967041
    7. '                   ' → logprob: -12.32729434967041
    8. '       ' → logprob: -12.70229434967041
    9. 'def' → logprob: -12.95229434967041
    10. '	for' → logprob: -13.20229434967041

Token 681: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2428678274154663
    2. 'i' → logprob: -1.7428678274154663
    3. 'x' → logprob: -3.242867946624756
    4. '_i' → logprob: -7.367867946624756
    5. 'range' → logprob: -7.992867946624756
    6. '_x' → logprob: -8.492867469787598
    7. ' i' → logprob: -8.867867469787598
    8. ' _' → logprob: -8.867867469787598
    9. '_=' → logprob: -10.492867469787598
    10. '__' → logprob: -10.867867469787598

Token 682: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16083958745002747
    2. 'in' → logprob: -1.910839557647705
    3. 'n' → logprob: -8.660840034484863
    4. '   ' → logprob: -9.285840034484863
    5. ',' → logprob: -9.410840034484863
    6. ' ' → logprob: -10.285840034484863
    7. 'x' → logprob: -10.410840034484863
    8. ',v' → logprob: -10.410840034484863
    9. '=' → logprob: -11.035840034484863
    10. 'import' → logprob: -11.160840034484863

Token 683: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011143672280013561
    2. ' range' → logprob: -4.511143684387207
    3. 'in' → logprob: -10.636143684387207
    4. '_' → logprob: -10.761143684387207
    5. '   ' → logprob: -10.886143684387207
    6. ' ' → logprob: -11.261143684387207
    7. '
' → logprob: -11.511143684387207
    8. '  ' → logprob: -13.136143684387207
    9. ' in' → logprob: -13.386143684387207
    10. 'v' → logprob: -13.636143684387207

Token 684: '(V' (ID: 16949)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.16948722302913666
    2. '(v' → logprob: -2.294487237930298
    3. '(V' → logprob: -4.044486999511719
    4. 'len' → logprob: -4.169486999511719
    5. 'V' → logprob: -4.919486999511719
    6. 'VV' → logprob: -5.669486999511719
    7. '(len' → logprob: -6.294486999511719
    8. ' vv' → logprob: -6.294486999511719
    9. '100' → logprob: -6.544486999511719
    10. '(' → logprob: -6.669486999511719

Token 685: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.77022064034827e-05
    2. ' +' → logprob: -9.750097274780273
    3. '):
' → logprob: -10.250097274780273
    4. '+
' → logprob: -13.125097274780273
    5. '1' → logprob: -15.125097274780273
    6. '+[' → logprob: -15.125097274780273
    7. '
' → logprob: -15.500097274780273
    8. '[' → logprob: -15.500097274780273
    9. '0' → logprob: -15.750097274780273
    10. '   ' → logprob: -15.750097274780273

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040636269841343164
    2. '+' → logprob: -8.375406265258789
    3. '(' → logprob: -9.250406265258789
    4. '(V' → logprob: -10.250406265258789
    5. 'V' → logprob: -11.125406265258789
    6. '2' → logprob: -11.375406265258789
    7. '(max' → logprob: -12.875406265258789
    8. ' ' → logprob: -12.875406265258789
    9. '(len' → logprob: -13.000406265258789
    10. '100' → logprob: -13.562906265258789

Token 687: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002848982810974121
    2. '):' → logprob: -6.127849102020264
    3. ')' → logprob: -7.502849102020264
    4. ':
' → logprob: -9.752848625183105
    5. '   ' → logprob: -10.502848625183105
    6. ']:
' → logprob: -11.502848625183105
    7. '):
' → logprob: -12.502848625183105
    8. ':' → logprob: -12.877848625183105
    9. ')
' → logprob: -13.377848625183105
    10. '():
' → logprob: -13.877848625183105

Token 688: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2755507230758667
    2. '   ' → logprob: -1.6505507230758667
    3. '           ' → logprob: -3.5255508422851562
    4. '       ' → logprob: -4.275550842285156
    5. 'uf' → logprob: -6.025550842285156
    6. '               ' → logprob: -6.275550842285156
    7. '    ' → logprob: -8.775550842285156
    8. ' uf' → logprob: -9.025550842285156
    9. '	   ' → logprob: -9.400550842285156
    10. '     ' → logprob: -9.525550842285156

Token 689: ' uf' (ID: 35772)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04463372752070427
    2. 'uf' (adapté à ' uf') → logprob: -3.294633626937866
    3. '   ' → logprob: -5.419633865356445
    4. '               ' → logprob: -7.044633865356445
    5. '                       ' → logprob: -7.669633865356445
    6. ' uf' → logprob: -8.044633865356445
    7. '       ' → logprob: -8.419633865356445
    8. '           ' → logprob: -9.169633865356445
    9. 'ufa' → logprob: -9.669633865356445
    10. 'ufi' → logprob: -11.294633865356445

Token 690: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.0018277422059327364
    2. 'ar' → logprob: -7.126827716827393
    3. 'f' → logprob: -7.376827716827393
    4. 'ry' → logprob: -9.25182819366455
    5. 'arry' → logprob: -9.50182819366455
    6. 'fy' → logprob: -10.25182819366455
    7. 'aray' → logprob: -10.50182819366455
    8. 'ray' → logprob: -10.62682819366455
    9. 'array' → logprob: -10.62682819366455
    10. '.append' → logprob: -11.00182819366455

Token 691: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01656845584511757
    2. '=' → logprob: -4.141568660736084
    3. '.' → logprob: -8.391568183898926
    4. '   ' → logprob: -9.266568183898926
    5. '=i' → logprob: -9.516568183898926
    6. ' =' → logprob: -9.641568183898926
    7. '=-' → logprob: -10.266568183898926
    8. 'append' → logprob: -11.391568183898926
    9. ' .' → logprob: -11.641568183898926
    10. '=None' → logprob: -12.141568183898926

Token 692: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05076266825199127
    2. '-' → logprob: -3.05076265335083
    3. '-i' → logprob: -6.55076265335083
    4. ' i' → logprob: -7.67576265335083
    5. '0' → logprob: -9.425763130187988
    6. '(i' → logprob: -9.425763130187988
    7. ' -' → logprob: -9.550763130187988
    8. ' ' → logprob: -11.050763130187988
    9. '   ' → logprob: -11.675763130187988
    10. '[i' → logprob: -12.425763130187988

Token 693: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0004785744531545788
    2. ')' → logprob: -7.875478744506836
    3. ')
' → logprob: -9.250478744506836
    4. ' )
' → logprob: -13.750478744506836
    5. '   ' → logprob: -14.750478744506836
    6. ')

' → logprob: -14.875478744506836
    7. '       ' → logprob: -16.000478744506836
    8. ')`
' → logprob: -16.125478744506836
    9. '0' → logprob: -16.250478744506836
    10. '               ' → logprob: -16.375478744506836

Token 694: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5564822554588318
    2. 'uf' → logprob: -0.9314822554588318
    3. '   ' → logprob: -3.9314823150634766
    4. '                   ' → logprob: -4.806482315063477
    5. '           ' → logprob: -6.056482315063477
    6. 'uff' → logprob: -7.056482315063477
    7. '       ' → logprob: -7.681482315063477
    8. 'uft' → logprob: -7.681482315063477
    9. ' uf' → logprob: -8.181482315063477
    10. ' u' → logprob: -8.806482315063477

Token 695: ' u' (ID: 337)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.00018041854491457343
    2. '   ' → logprob: -10.0001802444458
    3. 'uff' → logprob: -10.1251802444458
    4. ' u' → logprob: -11.2501802444458
    5. ' ' → logprob: -11.3751802444458
    6. '       ' → logprob: -11.8751802444458
    7. '    
' → logprob: -12.1251802444458
    8. '                                ' → logprob: -12.1251802444458
    9. '
' → logprob: -12.2501802444458
    10. 'for' → logprob: -12.3751802444458

Token 696: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -1.5213274309644476e-05
    2. 'rank' → logprob: -11.500015258789062
    3. 'f' → logprob: -12.625015258789062
    4. 'fl' → logprob: -14.375015258789062
    5. ' frank' → logprob: -15.125015258789062
    6. '
' → logprob: -15.250015258789062
    7. 'Frank' → logprob: -15.625015258789062
    8. 'fork' → logprob: -16.250015258789062
    9. 'for' → logprob: -16.625015258789062
    10. 'frm' → logprob: -16.875015258789062

Token 697: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -0.0005767432739958167
    2. 'nk' → logprob: -7.500576972961426
    3. ' ank' → logprob: -11.500576972961426
    4. 'rank' → logprob: -13.250576972961426
    5. 'anks' → logprob: -13.250576972961426
    6. '[' → logprob: -13.375576972961426
    7. '
' → logprob: -13.875576972961426
    8. 'k' → logprob: -14.125576972961426
    9. 'ANK' → logprob: -14.125576972961426
    10. 'an' → logprob: -14.250576972961426

Token 698: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023313960060477257
    2. '=' → logprob: -3.8983139991760254
    3. ' =' → logprob: -6.023313999176025
    4. '.' → logprob: -9.023313522338867
    5. '[' → logprob: -9.398313522338867
    6. '[i' → logprob: -9.773313522338867
    7. ' .' → logprob: -10.648313522338867
    8. '   ' → logprob: -10.773313522338867
    9. 'append' → logprob: -11.023313522338867
    10. '=[' → logprob: -11.273313522338867

Token 699: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.600714161526412e-05
    2. ' ' → logprob: -10.250076293945312
    3. '1' → logprob: -10.625076293945312
    4. '(' → logprob: -11.625076293945312
    5. '   ' → logprob: -12.125076293945312
    6. '-' → logprob: -14.125076293945312
    7. '  ' → logprob: -14.875076293945312
    8. '
' → logprob: -15.812576293945312
    9. '[' → logprob: -16.062576293945312
    10. '    ' → logprob: -16.062576293945312

Token 700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005492364522069693
    2. '1' → logprob: -5.255492210388184
    3. ' ' → logprob: -8.380492210388184
    4. '-' → logprob: -10.880492210388184
    5. '   ' → logprob: -12.255492210388184
    6. '
' → logprob: -13.880492210388184
    7. '  ' → logprob: -13.880492210388184
    8. 'i' → logprob: -14.755492210388184
    9. '```' → logprob: -14.817992210388184
    10. ' -' → logprob: -15.130492210388184

Token 701: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005120380781590939
    2. ')
' → logprob: -5.380120277404785
    3. '<|end|>' → logprob: -8.005120277404785
    4. '
' → logprob: -10.130120277404785
    5. '               ' → logprob: -10.255120277404785
    6. 'def' → logprob: -10.755120277404785
    7. '       ' → logprob: -10.880120277404785
    8. '   ' → logprob: -11.505120277404785
    9. '```' → logprob: -12.005120277404785
    10. 'for' → logprob: -12.255120277404785

Token 702: '               ' (ID: 506)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07078620046377182
    2. ' def' → logprob: -3.445786237716675
    3. '<|end|>' → logprob: -3.570786237716675
    4. '   ' → logprob: -5.445785999298096
    5. '
' → logprob: -6.195785999298096
    6. '```' → logprob: -6.945785999298096
    7. '           ' → logprob: -7.570785999298096
    8. '       ' → logprob: -8.445786476135254
    9. '	def' → logprob: -9.570786476135254
    10. '<|end|>' → logprob: -10.070786476135254

Token 703: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0636453926563263
    2. '           ' → logprob: -3.563645362854004
    3. '   ' → logprob: -3.938645362854004
    4. '               ' → logprob: -4.563645362854004
    5. '       ' → logprob: -6.188645362854004
    6. ' def' → logprob: -6.688645362854004
    7. '	def' → logprob: -9.563645362854004
    8. '                   ' → logprob: -10.438645362854004
    9. '<|end|>' → logprob: -12.063645362854004
    10. '#' → logprob: -12.563645362854004

Token 704: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.24272923171520233
    2. 'find' → logprob: -1.8677291870117188
    3. ' uf' → logprob: -3.2427291870117188
    4. ' find' → logprob: -4.492729187011719
    5. 'un' → logprob: -6.367729187011719
    6. 'ufs' → logprob: -6.367729187011719
    7. 'f' → logprob: -6.492729187011719
    8. 'u' → logprob: -6.742729187011719
    9. 'root' → logprob: -6.867729187011719
    10. 'def' → logprob: -7.117729187011719

Token 705: 'root' (ID: 5488)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.727931022644043
    2. '_find' → logprob: -1.227931022644043
    3. 'ind' → logprob: -1.727931022644043
    4. 'nd' → logprob: -3.227931022644043
    5. 'parent' → logprob: -6.477931022644043
    6. 'par' → logprob: -6.977931022644043
    7. 'n' → logprob: -7.102931022644043
    8. '_parent' → logprob: -7.727931022644043
    9. '
' → logprob: -8.227931022644043
    10. 'def' → logprob: -8.227931022644043

Token 706: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07674090564250946
    2. '(u' → logprob: -3.3267409801483154
    3. '(a' → logprob: -3.7017409801483154
    4. '(i' → logprob: -5.076740741729736
    5. '(v' → logprob: -5.451740741729736
    6. '(n' → logprob: -6.201740741729736
    7. '(p' → logprob: -8.201741218566895
    8. '(t' → logprob: -8.951741218566895
    9. '(k' → logprob: -9.076741218566895
    10. '(' → logprob: -9.701741218566895

Token 707: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1433326154947281
    2. '):
' → logprob: -2.0183327198028564
    3. ' ):' → logprob: -8.518332481384277
    4. '(i' → logprob: -8.643332481384277
    5. '):
' → logprob: -9.018332481384277
    6. ' ):
' → logprob: -9.893332481384277
    7. '   ' → logprob: -10.018332481384277
    8. ':' → logprob: -10.893332481384277
    9. ')' → logprob: -11.143332481384277
    10. '():
' → logprob: -11.268332481384277

Token 708: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0547453947365284
    2. '       ' → logprob: -3.3047454357147217
    3. ' while' → logprob: -4.679745197296143
    4. 'while' → logprob: -5.304745197296143
    5. '	while' → logprob: -7.804745197296143
    6. '
' → logprob: -8.0547456741333
    7. '    ' → logprob: -8.3047456741333
    8. '<|end|>' → logprob: -8.4297456741333
    9. ':' → logprob: -8.5547456741333
    10. ' if' → logprob: -8.6797456741333

Token 709: ' p' (ID: 275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20755916833877563
    2. 'if' → logprob: -2.457559108734131
    3. '   ' → logprob: -2.707559108734131
    4. '       ' → logprob: -3.957559108734131
    5. ' while' → logprob: -4.207559108734131
    6. ' if' → logprob: -7.707559108734131
    7. '	while' → logprob: -8.332559585571289
    8. '           ' → logprob: -8.832559585571289
    9. '                   ' → logprob: -8.957559585571289
    10. '               ' → logprob: -9.957559585571289

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04556252062320709
    2. ' =' → logprob: -3.170562505722046
    3. '=i' → logprob: -6.420562744140625
    4. '[i' → logprob: -8.795562744140625
    5. 'f' → logprob: -9.170562744140625
    6. '=[]
' → logprob: -9.295562744140625
    7. '=[]' → logprob: -9.545562744140625
    8. '   ' → logprob: -9.670562744140625
    9. '=int' → logprob: -9.920562744140625
    10. '[' → logprob: -10.045562744140625

Token 711: ' uf' (ID: 35772)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023666786029934883
    2. 'uf' → logprob: -3.7736668586730957
    3. ' i' → logprob: -7.898666858673096
    4. ' uf' → logprob: -11.398666381835938
    5. '   ' → logprob: -11.523666381835938
    6. '
' → logprob: -12.023666381835938
    7. ' ' → logprob: -12.898666381835938
    8. '[i' → logprob: -13.023666381835938
    9. '  ' → logprob: -13.273666381835938
    10. 'u' → logprob: -13.398666381835938

Token 712: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.1466287225484848
    2. '[i' → logprob: -2.0216286182403564
    3. 'ar' → logprob: -6.3966288566589355
    4. 'i' → logprob: -7.0216288566589355
    5. 'ry' → logprob: -7.5216288566589355
    6. 'aray' → logprob: -9.021628379821777
    7. 'arity' → logprob: -9.271628379821777
    8. '[' → logprob: -9.396628379821777
    9. '
' → logprob: -9.396628379821777
    10. ' i' → logprob: -9.771628379821777

Token 713: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[p' → logprob: -12.500007629394531
    3. '[' → logprob: -13.125007629394531
    4. 'i' → logprob: -14.750007629394531
    5. '[int' → logprob: -14.875007629394531
    6. '[
' → logprob: -15.250007629394531
    7. '[]
' → logprob: -15.375007629394531
    8. '
' → logprob: -15.625007629394531
    9. ',i' → logprob: -16.00000762939453
    10. 'p' → logprob: -16.50000762939453

Token 714: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7076286673545837
    2. 'while' → logprob: -0.7076286673545837
    3. ' while' → logprob: -5.7076287269592285
    4. '[i' → logprob: -6.2076287269592285
    5. ')
' → logprob: -6.4576287269592285
    6. '	while' → logprob: -6.7076287269592285
    7. '<|end|>' → logprob: -6.7076287269592285
    8. ']' → logprob: -6.8326287269592285
    9. ']
' → logprob: -7.2076287269592285
    10. '   ' → logprob: -7.3326287269592285

Token 715: '                   ' (ID: 699)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16907267272472382
    2. '                   ' → logprob: -2.0440726280212402
    3. ' while' → logprob: -4.91907262802124
    4. '       ' → logprob: -5.04407262802124
    5. '           ' → logprob: -5.16907262802124
    6. '   ' → logprob: -5.54407262802124
    7. '               ' → logprob: -6.29407262802124
    8. '	while' → logprob: -7.66907262802124
    9. '
' → logprob: -9.044073104858398
    10. '```' → logprob: -9.044073104858398

Token 716: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3197132647037506
    2. '                   ' → logprob: -2.0697133541107178
    3. 'if' (adapté à ' if') → logprob: -2.3197133541107178
    4. '   ' → logprob: -3.0697133541107178
    5. ' while' → logprob: -6.694713115692139
    6. '       ' → logprob: -6.944713115692139
    7. '           ' → logprob: -8.194713592529297
    8. '	while' → logprob: -9.319713592529297
    9. ' if' → logprob: -9.819713592529297
    10. '               ' → logprob: -9.819713592529297

Token 717: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009635079186409712
    2. ' p' → logprob: -7.3759636878967285
    3. 'i' → logprob: -8.00096321105957
    4. ' i' → logprob: -13.50096321105957
    5. '   ' → logprob: -15.75096321105957
    6. '	p' → logprob: -16.12596321105957
    7. ' ' → logprob: -18.00096321105957
    8. '(p' → logprob: -18.00096321105957
    9. '
' → logprob: -18.37596321105957
    10. '  ' → logprob: -18.87596321105957

Token 718: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029782192781567574
    2. '==' → logprob: -3.529782295227051
    3. ' !=' → logprob: -10.40478229522705
    4. ' ==' → logprob: -14.65478229522705
    5. '!==' → logprob: -15.40478229522705
    6. '==
' → logprob: -15.77978229522705
    7. 'i' → logprob: -15.90478229522705
    8. '=' → logprob: -16.154781341552734
    9. 'is' → logprob: -16.404781341552734
    10. 'p' → logprob: -16.529781341552734

Token 719: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.5776860184123507e-06
    2. ' i' → logprob: -12.87500286102295
    3. '	i' → logprob: -17.875001907348633
    4. '
' → logprob: -18.250001907348633
    5. ' ' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '  ' → logprob: -20.250001907348633
    8. '
' → logprob: -20.250001907348633
    9. '<|end|>' → logprob: -20.625001907348633
    10. ')i' → logprob: -20.875001907348633

Token 720: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.011809633113443851
    2. ':' → logprob: -4.511809825897217
    3. '                       ' → logprob: -7.761809825897217
    4. '):
' → logprob: -8.386809349060059
    5. '       ' → logprob: -10.011809349060059
    6. ':return' → logprob: -10.636809349060059
    7. ':
' → logprob: -10.886809349060059
    8. '                   ' → logprob: -11.886809349060059
    9. ':

' → logprob: -12.511809349060059
    10. '():
' → logprob: -12.886809349060059

Token 721: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4152562618255615
    2. '                   ' → logprob: -1.4152562618255615
    3. '       ' → logprob: -2.6652562618255615
    4. '   ' → logprob: -4.415256500244141
    5. '               ' → logprob: -4.915256500244141
    6. ' return' → logprob: -5.665256500244141
    7. '           ' → logprob: -6.665256500244141
    8. 'return' → logprob: -7.290256500244141
    9. ':
' → logprob: -8.16525650024414
    10. '<|end|>' → logprob: -8.29025650024414

Token 722: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0037637362256646156
    2. ' return' → logprob: -6.003763675689697
    3. '                       ' → logprob: -7.253763675689697
    4. '                   ' → logprob: -7.628763675689697
    5. '   ' → logprob: -9.878764152526855
    6. '               ' → logprob: -11.003764152526855
    7. '	return' → logprob: -11.253764152526855
    8. '       ' → logprob: -12.378764152526855
    9. ' ' → logprob: -12.628764152526855
    10. '           ' → logprob: -12.878764152526855

Token 723: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.0484450437361374e-05
    2. ' i' → logprob: -10.125040054321289
    3. 'p' → logprob: -15.000040054321289
    4. '	i' → logprob: -18.50004005432129
    5. ' ' → logprob: -20.00004005432129
    6. '   ' → logprob: -20.37504005432129
    7. '(i' → logprob: -20.37504005432129
    8. '[i' → logprob: -20.50004005432129
    9. 'uf' → logprob: -21.50004005432129
    10. ',i' → logprob: -21.50004005432129

Token 724: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028999339789152145
    2. '                   ' → logprob: -3.6539993286132812
    3. '               ' → logprob: -6.653999328613281
    4. 'else' → logprob: -7.403999328613281
    5. ' else' → logprob: -8.403999328613281
    6. '<|end|>' → logprob: -8.903999328613281
    7. '           ' → logprob: -9.528999328613281
    8. '   ' → logprob: -9.778999328613281
    9. '
' → logprob: -9.903999328613281
    10. ',
' → logprob: -10.278999328613281

Token 725: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4621686041355133
    2. '
' → logprob: -1.462168574333191
    3. '               ' → logprob: -2.0871686935424805
    4. '           ' → logprob: -5.3371686935424805
    5. 'else' → logprob: -5.7121686935424805
    6. ' else' → logprob: -6.9621686935424805
    7. '       ' → logprob: -6.9621686935424805
    8. '   ' → logprob: -7.0871686935424805
    9. '<|end|>' → logprob: -7.0871686935424805
    10. 'while' → logprob: -7.7121686935424805

Token 726: ' q' (ID: 2335)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09651930630207062
    2. 'p' → logprob: -3.3465192317962646
    3. 'uf' → logprob: -3.3465192317962646
    4. '               ' → logprob: -5.221519470214844
    5. 'else' → logprob: -5.971519470214844
    6. ' uf' → logprob: -6.096519470214844
    7. '           ' → logprob: -6.346519470214844
    8. 'ur' → logprob: -6.346519470214844
    9. '       ' → logprob: -6.471519470214844
    10. 'u' → logprob: -7.096519470214844

Token 727: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014165041036903858
    2. ' =' → logprob: -4.264164924621582
    3. '=sys' → logprob: -15.014164924621582
    4. '=p' → logprob: -15.389164924621582
    5. '=q' → logprob: -15.389164924621582
    6. '    ' → logprob: -15.514164924621582
    7. '   ' → logprob: -15.514164924621582
    8. '	' → logprob: -15.889164924621582
    9. '=i' → logprob: -16.3891658782959
    10. '=
' → logprob: -16.3891658782959

Token 728: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0005535095697268844
    2. ' uf' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.250553131103516
    4. 'ufs' → logprob: -17.375553131103516
    5. ' ' → logprob: -17.750553131103516
    6. '           ' → logprob: -17.875553131103516
    7. '  ' → logprob: -18.125553131103516
    8. '               ' → logprob: -18.125553131103516
    9. '       ' → logprob: -18.625553131103516
    10. '.uf' → logprob: -18.750553131103516

Token 729: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0003134168218821287
    2. 'ary' → logprob: -8.750313758850098
    3. '[root' → logprob: -9.750313758850098
    4. 'ar' → logprob: -10.750313758850098
    5. 'parent' → logprob: -11.750313758850098
    6. '
' → logprob: -11.875313758850098
    7. 'array' → logprob: -11.875313758850098
    8. '(root' → logprob: -12.000313758850098
    9. 'arry' → logprob: -12.250313758850098
    10. '[' → logprob: -12.375313758850098

Token 730: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -10.500029563903809
    3. '(
' → logprob: -13.375029563903809
    4. 'p' → logprob: -15.125029563903809
    5. ' (' → logprob: -15.375029563903809
    6. '(q' → logprob: -16.250030517578125
    7. '	p' → logprob: -17.000030517578125
    8. '[p' → logprob: -18.000030517578125
    9. '(i' → logprob: -18.250030517578125
    10. '(P' → logprob: -18.500030517578125

Token 731: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3314524292945862
    2. ')
' → logprob: -1.3314523696899414
    3. '(p' → logprob: -4.331452369689941
    4. 'p' → logprob: -5.831452369689941
    5. ')p' → logprob: -6.706452369689941
    6. ' p' → logprob: -8.206452369689941
    7. ')
' → logprob: -8.831452369689941
    8. ' )
' → logprob: -8.956452369689941
    9. ' )' → logprob: -9.206452369689941
    10. '[p' → logprob: -10.831452369689941

Token 732: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00022976152831688523
    2. '               ' → logprob: -9.125229835510254
    3. 'uf' → logprob: -9.750229835510254
    4. '           ' → logprob: -10.500229835510254
    5. '   ' → logprob: -11.750229835510254
    6. '				' → logprob: -12.000229835510254
    7. '       ' → logprob: -12.250229835510254
    8. '                       ' → logprob: -13.000229835510254
    9. '		           ' → logprob: -13.125229835510254
    10. '```' → logprob: -13.125229835510254

Token 733: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.00045021495316177607
    2. '                   ' → logprob: -7.750450134277344
    3. '               ' → logprob: -11.000450134277344
    4. ' uf' → logprob: -13.500450134277344
    5. 'ufs' → logprob: -14.875450134277344
    6. '   ' → logprob: -15.375450134277344
    7. '           ' → logprob: -15.375450134277344
    8. 'ufi' → logprob: -15.500450134277344
    9. 'ufa' → logprob: -16.000450134277344
    10. '                       ' → logprob: -16.250450134277344

Token 734: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -7.896309739408025e-07
    2. 'ar' → logprob: -15.000000953674316
    3. 'aray' → logprob: -15.625000953674316
    4. 'arity' → logprob: -16.25
    5. 'arly' → logprob: -16.625
    6. 'arry' → logprob: -17.125
    7. 'aryl' → logprob: -17.125
    8. ' ary' → logprob: -17.375
    9. 'q' → logprob: -18.375
    10. 'array' → logprob: -18.625

Token 735: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. 'i' → logprob: -12.875005722045898
    3. '[' → logprob: -13.000005722045898
    4. '```' → logprob: -15.625005722045898
    5. '[
' → logprob: -16.6250057220459
    6. '[u' → logprob: -16.8750057220459
    7. '<|end|>' → logprob: -17.2500057220459
    8. '`' → logprob: -17.3750057220459
    9. '[I' → logprob: -17.5000057220459
    10. '(i' → logprob: -17.7500057220459

Token 736: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.1759103238582611
    2. ']' → logprob: -2.175910234451294
    3. '=' → logprob: -3.050910234451294
    4. '[i' → logprob: -8.050909996032715
    5. '[q' → logprob: -9.050909996032715
    6. '[' → logprob: -11.050909996032715
    7. '=q' → logprob: -11.300909996032715
    8. '=i' → logprob: -11.800909996032715
    9. ')=' → logprob: -12.300909996032715
    10. ' =' → logprob: -12.425909996032715

Token 737: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. 'i' → logprob: -13.75000286102295
    3. '[' → logprob: -14.25000286102295
    4. '=' → logprob: -14.62500286102295
    5. '[p' → logprob: -15.00000286102295
    6. '[q' → logprob: -15.37500286102295
    7. '```' → logprob: -16.000003814697266
    8. '[u' → logprob: -16.500003814697266
    9. 'p' → logprob: -17.750003814697266
    10. '[:]' → logprob: -17.750003814697266

Token 738: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.836499985889532e-05
    2. ' q' → logprob: -9.7500581741333
    3. '	q' → logprob: -19.125059127807617
    4. ' ' → logprob: -20.750059127807617
    5. '   ' → logprob: -21.000059127807617
    6. '[q' → logprob: -22.000059127807617
    7. '(q' → logprob: -22.750059127807617
    8. '    ' → logprob: -23.125059127807617
    9. '  ' → logprob: -24.125059127807617
    10. ''q' → logprob: -24.250059127807617

Token 739: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003981516230851412
    2. '               ' → logprob: -7.003981590270996
    3. 'return' → logprob: -7.128981590270996
    4. '   ' → logprob: -7.253981590270996
    5. '           ' → logprob: -7.378981590270996
    6. '
' → logprob: -8.503981590270996
    7. '       ' → logprob: -8.753981590270996
    8. '<|end|>' → logprob: -8.753981590270996
    9. '	return' → logprob: -9.128981590270996
    10. '				' → logprob: -9.253981590270996

Token 740: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008086125366389751
    2. '<|end|>' → logprob: -5.383086204528809
    3. '               ' → logprob: -6.383086204528809
    4. '           ' → logprob: -7.758086204528809
    5. '                    
' → logprob: -8.383086204528809
    6. ' 
' → logprob: -8.383086204528809
    7. 'return' → logprob: -9.258086204528809
    8. '   ' → logprob: -9.383086204528809
    9. '
' → logprob: -9.758086204528809
    10. '                    ' → logprob: -9.883086204528809

Token 741: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01790139079093933
    2. 'return' (adapté à ' return') → logprob: -4.142901420593262
    3. 'q' → logprob: -6.517901420593262
    4. '               ' → logprob: -9.267901420593262
    5. '				' → logprob: -9.517901420593262
    6. '   ' → logprob: -9.642901420593262
    7. '           ' → logprob: -10.142901420593262
    8. ' return' → logprob: -10.642901420593262
    9. '	return' → logprob: -11.017901420593262
    10. '                       ' → logprob: -11.017901420593262

Token 742: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.842555426876061e-06
    2. ' q' → logprob: -12.250004768371582
    3. '	q' → logprob: -21.2500057220459
    4. 'qq' → logprob: -24.5000057220459
    5. '[q' → logprob: -25.2500057220459
    6. '
' → logprob: -25.7500057220459
    7. '   ' → logprob: -25.8750057220459
    8. '(q' → logprob: -26.0000057220459
    9. ',q' → logprob: -26.1250057220459
    10. 'qid' → logprob: -26.2500057220459

Token 743: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 744: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13014572858810425
    2. '<|end|>' → logprob: -3.505145788192749
    3. '```' → logprob: -4.13014554977417
    4. 'def' → logprob: -4.13014554977417
    5. '                   ' → logprob: -4.38014554977417
    6. '       ' → logprob: -4.63014554977417
    7. '   ' → logprob: -4.75514554977417
    8. ')' → logprob: -5.00514554977417
    9. '           ' → logprob: -5.13014554977417
    10. ' 
' → logprob: -5.88014554977417

Token 745: ' def' (ID: 1056)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0657561793923378
    2. 'def' (adapté à ' def') → logprob: -3.19075608253479
    3. 'for' → logprob: -4.440756320953369
    4. ' for' → logprob: -5.565756320953369
    5. '                   ' → logprob: -6.815756320953369
    6. '			' → logprob: -7.190756320953369
    7. '       ' → logprob: -7.440756320953369
    8. 'while' → logprob: -7.440756320953369
    9. '<|end|>' → logprob: -7.565756320953369
    10. ')' → logprob: -7.565756320953369

Token 746: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.03640734404325485
    2. 'un' → logprob: -4.286407470703125
    3. 'union' → logprob: -4.536407470703125
    4. 'ufs' → logprob: -5.411407470703125
    5. 'u' → logprob: -6.286407470703125
    6. 'uff' → logprob: -6.973907470703125
    7. 'ufu' → logprob: -7.286407470703125
    8. 'uft' → logprob: -7.473907470703125
    9. 'fun' → logprob: -8.098907470703125
    10. ' uf' → logprob: -8.598907470703125

Token 747: 'merge' (ID: 25492)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.5968779921531677
    2. 'root' → logprob: -0.8468779921531677
    3. 'parent' → logprob: -4.0968780517578125
    4. 'rank' → logprob: -6.3468780517578125
    5. 'merge' → logprob: -6.4718780517578125
    6. 'combine' → logprob: -8.846878051757812
    7. 'link' → logprob: -8.971878051757812
    8. 'join' → logprob: -9.096878051757812
    9. '_union' → logprob: -9.471878051757812
    10. 'ary' → logprob: -9.596878051757812

Token 748: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06422621756792068
    2. '(p' → logprob: -3.1892261505126953
    3. '(x' → logprob: -4.564226150512695
    4. '(u' → logprob: -4.814226150512695
    5. '(i' → logprob: -6.064226150512695
    6. '(' → logprob: -9.189226150512695
    7. '(o' → logprob: -11.939226150512695
    8. '(root' → logprob: -12.064226150512695
    9. '(ai' → logprob: -12.189226150512695
    10. '(pa' → logprob: -12.314226150512695

Token 749: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07030796259641647
    2. ',j' → logprob: -2.820307970046997
    3. ',q' → logprob: -4.945307731628418
    4. ' ,' → logprob: -6.945307731628418
    5. ',p' → logprob: -9.195307731628418
    6. ',i' → logprob: -9.695307731628418
    7. ',k' → logprob: -10.320307731628418
    8. 'j' → logprob: -11.695307731628418
    9. ',b' → logprob: -12.320307731628418
    10. '<|end|>' → logprob: -12.820307731628418

Token 750: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.142824187874794
    2. '):
' → logprob: -2.017824172973633
    3. '):
' → logprob: -9.017824172973633
    4. '):

' → logprob: -11.767824172973633
    5. ' ):' → logprob: -12.017824172973633
    6. ')' → logprob: -12.142824172973633
    7. ',' → logprob: -12.642824172973633
    8. '   ' → logprob: -13.392824172973633
    9. ':' → logprob: -13.642824172973633
    10. ' ):
' → logprob: -13.892824172973633

Token 751: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7281200885772705
    2. '                   ' → logprob: -1.2281200885772705
    3. '<|end|>' → logprob: -2.1031200885772705
    4. '       ' → logprob: -3.8531200885772705
    5. '	               ' → logprob: -4.228119850158691
    6. '               ' → logprob: -4.603119850158691
    7. ' ' → logprob: -4.728119850158691
    8. 'i' → logprob: -5.228119850158691
    9. '		           ' → logprob: -5.603119850158691
    10. '    ' → logprob: -5.853119850158691

Token 752: ' ri' (ID: 10274)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.0058138407766819
    2. 'if' → logprob: -5.630814075469971
    3. 'p' → logprob: -6.255814075469971
    4. 'ri' (adapté à ' ri') → logprob: -8.380813598632812
    5. '   ' → logprob: -11.380813598632812
    6. '```' → logprob: -11.505813598632812
    7. ' pi' → logprob: -11.630813598632812
    8. '                   ' → logprob: -11.755813598632812
    9. 'pu' → logprob: -12.505813598632812
    10. 'i' → logprob: -12.630813598632812

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038055144250392914
    2. ' =' → logprob: -3.288055181503296
    3. '=i' → logprob: -11.663055419921875
    4. ' ' → logprob: -14.038055419921875
    5. ',' → logprob: -14.163055419921875
    6. '=
' → logprob: -14.288055419921875
    7. '<|end|>' → logprob: -14.288055419921875
    8. '=int' → logprob: -14.663055419921875
    9. 'i' → logprob: -14.913055419921875
    10. '   ' → logprob: -15.788055419921875

Token 754: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.17975656688213348
    2. ' uf' → logprob: -1.80475652217865
    3. ' ' → logprob: -13.304756164550781
    4. '   ' → logprob: -13.554756164550781
    5. 'max' → logprob: -13.804756164550781
    6. '.uf' → logprob: -14.054756164550781
    7. 'ufs' → logprob: -14.179756164550781
    8. ' max' → logprob: -14.179756164550781
    9. 'ufi' → logprob: -14.429756164550781
    10. '  ' → logprob: -14.679756164550781

Token 755: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00026777281891554594
    2. 'merge' → logprob: -8.50026798248291
    3. 'i' → logprob: -10.87526798248291
    4. '[i' → logprob: -11.12526798248291
    5. 'rank' → logprob: -11.50026798248291
    6. '[root' → logprob: -12.62526798248291
    7. '
' → logprob: -12.87526798248291
    8. '```' → logprob: -13.25026798248291
    9. '_root' → logprob: -13.37526798248291
    10. ')' → logprob: -14.25026798248291

Token 756: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.24310302757658e-05
    2. 'i' → logprob: -10.125072479248047
    3. '(j' → logprob: -10.500072479248047
    4. '(' → logprob: -12.500072479248047
    5. ' (' → logprob: -14.500072479248047
    6. 'j' → logprob: -16.250072479248047
    7. ' i' → logprob: -16.250072479248047
    8. '[i' → logprob: -17.125072479248047
    9. '(u' → logprob: -17.250072479248047
    10. '(
' → logprob: -17.625072479248047

Token 757: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029911087825894356
    2. ')' → logprob: -3.5299110412597656
    3. ')
' → logprob: -9.154911041259766
    4. '                   ' → logprob: -10.654911041259766
    5. ',' → logprob: -12.029911041259766
    6. '),' → logprob: -12.154911041259766
    7. ' )
' → logprob: -12.279911041259766
    8. ');' → logprob: -12.404911041259766
    9. 'j' → logprob: -12.904911041259766
    10. 'if' → logprob: -12.904911041259766

Token 758: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39098963141441345
    2. ' if' → logprob: -1.5159896612167358
    3. 'if' → logprob: -3.7659895420074463
    4. '                    
' → logprob: -4.140989780426025
    5. ' 
' → logprob: -4.515989780426025
    6. ' =' → logprob: -4.640989780426025
    7. '                    ' → logprob: -4.890989780426025
    8. '               ' → logprob: -5.015989780426025
    9. ',' → logprob: -5.265989780426025
    10. '<|end|>' → logprob: -5.640989780426025

Token 759: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -6.704273118884885e-07
    2. ' r' → logprob: -15.250000953674316
    3. '	r' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '
' → logprob: -17.0
    6. '                   ' → logprob: -17.875
    7. '       ' → logprob: -18.625
    8. '           ' → logprob: -18.625
    9. '                       ' → logprob: -18.75
    10. '[r' → logprob: -18.875

Token 760: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00075769261457026
    2. '=' → logprob: -8.000757217407227
    3. '<|end|>' → logprob: -8.250757217407227
    4. '=j' → logprob: -9.625757217407227
    5. ' =' → logprob: -10.000757217407227
    6. ',j' → logprob: -11.000757217407227
    7. 'f' → logprob: -12.250757217407227
    8. '[j' → logprob: -12.250757217407227
    9. ' ' → logprob: -12.375757217407227
    10. ' j' → logprob: -12.375757217407227

Token 761: ' =' (ID: 314)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.2290874570608139
    2. '=' → logprob: -2.1040873527526855
    3. '[j' → logprob: -2.7290873527526855
    4. ' =' → logprob: -4.8540873527526855
    5. '==' → logprob: -5.8540873527526855
    6. '(r' → logprob: -5.8540873527526855
    7. '=j' → logprob: -6.4790873527526855
    8. '(' → logprob: -7.3540873527526855
    9. 'j' → logprob: -7.8540873527526855
    10. '(i' → logprob: -8.229087829589844

Token 762: ' uf' (ID: 35772)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20614595711231232
    2. 'uf' → logprob: -1.831146001815796
    3. 'jf' → logprob: -3.706146001815796
    4. 'uj' → logprob: -6.956145763397217
    5. ' j' → logprob: -8.206146240234375
    6. ' uf' → logprob: -9.081146240234375
    7. '(j' → logprob: -10.206146240234375
    8. '[j' → logprob: -10.831146240234375
    9. '```' → logprob: -11.456146240234375
    10. '(' → logprob: -11.956146240234375

Token 763: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.005328032188117504
    2. 'j' → logprob: -5.255328178405762
    3. '(j' → logprob: -10.380328178405762
    4. '(root' → logprob: -11.380328178405762
    5. '[j' → logprob: -11.380328178405762
    6. '```' → logprob: -11.380328178405762
    7. ' j' → logprob: -11.880328178405762
    8. 'r' → logprob: -12.505328178405762
    9. '   ' → logprob: -12.755328178405762
    10. ',j' → logprob: -13.255328178405762

Token 764: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.007639163173735142
    2. 'j' → logprob: -4.882638931274414
    3. '[j' → logprob: -11.507638931274414
    4. ' j' → logprob: -11.757638931274414
    5. '(' → logprob: -12.382638931274414
    6. '	j' → logprob: -12.882638931274414
    7. ':j' → logprob: -13.132638931274414
    8. ',j' → logprob: -13.257638931274414
    9. ';j' → logprob: -14.007638931274414
    10. ' (' → logprob: -14.007638931274414

Token 765: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1272263526916504
    2. ')' → logprob: -2.1272263526916504
    3. '):
' → logprob: -8.502225875854492
    4. ')
' → logprob: -9.502225875854492
    5. 'if' → logprob: -12.002225875854492
    6. '):' → logprob: -12.377225875854492
    7. '                   ' → logprob: -12.752225875854492
    8. '   ' → logprob: -13.752225875854492
    9. 'def' → logprob: -14.002225875854492
    10. ')return' → logprob: -14.002225875854492

Token 766: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018738143146038055
    2. '               ' → logprob: -4.893738269805908
    3. '   ' → logprob: -5.643738269805908
    4. '       ' → logprob: -6.518738269805908
    5. '                       ' → logprob: -6.893738269805908
    6. '           ' → logprob: -7.018738269805908
    7. '                    ' → logprob: -7.518738269805908
    8. '<|end|>' → logprob: -7.518738269805908
    9. ' ' → logprob: -8.01873779296875
    10. '    ' → logprob: -8.14373779296875

Token 767: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5816565155982971
    2. '                   ' → logprob: -0.8316565155982971
    3. ' if' → logprob: -5.206656455993652
    4. '   ' → logprob: -8.706656455993652
    5. '           ' → logprob: -10.581656455993652
    6. '```' → logprob: -11.581656455993652
    7. '               ' → logprob: -11.706656455993652
    8. '       ' → logprob: -12.081656455993652
    9. '	if' → logprob: -12.206656455993652
    10. '                       ' → logprob: -15.206656455993652

Token 768: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -2.9040898880339228e-05
    2. ' ri' → logprob: -10.500028610229492
    3. 'ru' → logprob: -13.750028610229492
    4. 'uf' → logprob: -15.625028610229492
    5. '   ' → logprob: -16.625028610229492
    6. '
' → logprob: -17.250028610229492
    7. 'rif' → logprob: -17.375028610229492
    8. 'rig' → logprob: -17.750028610229492
    9. 'ric' → logprob: -17.750028610229492
    10. 'rf' → logprob: -18.125028610229492

Token 769: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02823523059487343
    2. '!=' → logprob: -3.6532351970672607
    3. ' ==' → logprob: -6.27823543548584
    4. ' !=' → logprob: -10.02823543548584
    5. '==
' → logprob: -12.02823543548584
    6. '=' → logprob: -12.65323543548584
    7. ']==' → logprob: -13.77823543548584
    8. '==-' → logprob: -14.15323543548584
    9. '<' → logprob: -15.02823543548584
    10. '[' → logprob: -15.27823543548584

Token 770: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.919942486798391e-05
    2. ' r' → logprob: -9.750059127807617
    3. ' ' → logprob: -14.750059127807617
    4. '   ' → logprob: -15.000059127807617
    5. '	r' → logprob: -16.500059127807617
    6. 'j' → logprob: -16.875059127807617
    7. '  ' → logprob: -17.250059127807617
    8. 'rij' → logprob: -17.375059127807617
    9. '
' → logprob: -17.750059127807617
    10. '```' → logprob: -18.250059127807617

Token 771: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005213391850702465
    2. 'root' → logprob: -8.250521659851074
    3. 'oot' → logprob: -8.375521659851074
    4. '```' → logprob: -11.250521659851074
    5. '   ' → logprob: -12.750521659851074
    6. ' ' → logprob: -13.125521659851074
    7. ' j' → logprob: -13.125521659851074
    8. 'r' → logprob: -13.250521659851074
    9. 'i' → logprob: -13.500521659851074
    10. '       ' → logprob: -14.000521659851074

Token 772: ':
' (ID: 734)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.9115914702415466
    2. ':
' → logprob: -1.1615915298461914
    3. ':' → logprob: -1.6615915298461914
    4. '                       ' → logprob: -2.5365915298461914
    5. ' return' → logprob: -4.911591529846191
    6. '                   ' → logprob: -6.161591529846191
    7. 'return' → logprob: -6.286591529846191
    8. '       ' → logprob: -6.536591529846191
    9. '   ' → logprob: -6.661591529846191
    10. '                           ' → logprob: -7.536591529846191

Token 773: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6908414959907532
    2. '                           ' → logprob: -2.1908414363861084
    3. ':
' → logprob: -2.3158414363861084
    4. ':' → logprob: -2.6908414363861084
    5. '                   ' → logprob: -2.8158414363861084
    6. '       ' → logprob: -2.9408414363861084
    7. '<|end|>' → logprob: -2.9408414363861084
    8. '   ' → logprob: -4.1908416748046875
    9. '           ' → logprob: -4.6908416748046875
    10. '               ' → logprob: -4.6908416748046875

Token 774: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1966255158185959
    2. ' return' → logprob: -2.4466254711151123
    3. '                       ' → logprob: -2.4466254711151123
    4. '                   ' → logprob: -6.196625709533691
    5. '	return' → logprob: -6.446625709533691
    6. '   ' → logprob: -6.696625709533691
    7. '                           ' → logprob: -8.446625709533691
    8. '           ' → logprob: -9.196625709533691
    9. '       ' → logprob: -9.321625709533691
    10. '               ' → logprob: -10.571625709533691

Token 775: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02357061579823494
    2. '
' → logprob: -4.023570537567139
    3. ' False' → logprob: -5.898570537567139
    4. 'None' → logprob: -6.148570537567139
    5. '0' → logprob: -7.773570537567139
    6. '(False' → logprob: -9.898571014404297
    7. 'True' → logprob: -11.148571014404297
    8. '                   ' → logprob: -11.648571014404297
    9. ' None' → logprob: -11.898571014404297
    10. '<|end|>' → logprob: -12.023571014404297

Token 776: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039402540773153305
    2. '```' → logprob: -3.539402484893799
    3. '               ' → logprob: -5.039402484893799
    4. '           ' → logprob: -6.539402484893799
    5. '       ' → logprob: -7.539402484893799
    6. '   ' → logprob: -7.539402484893799
    7. ' if' → logprob: -8.289402961730957
    8. '``' → logprob: -9.414402961730957
    9. 'if' → logprob: -9.539402961730957
    10. '<|end|>' → logprob: -9.664402961730957

Token 777: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32039767503738403
    2. '                   ' → logprob: -1.3203976154327393
    3. ' if' → logprob: -5.570397853851318
    4. '               ' → logprob: -6.570397853851318
    5. '   ' → logprob: -7.070397853851318
    6. '```' → logprob: -7.195397853851318
    7. '           ' → logprob: -8.94539737701416
    8. '       ' → logprob: -9.07039737701416
    9. '	if' → logprob: -10.94539737701416
    10. 'elif' → logprob: -11.82039737701416

Token 778: ' u' (ID: 337)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0006806228775531054
    2. ' u' → logprob: -7.375680446624756
    3. 'u' → logprob: -11.125680923461914
    4. '
' → logprob: -11.375680923461914
    5. 'uff' → logprob: -11.375680923461914
    6. ' uf' → logprob: -12.000680923461914
    7. 'ufs' → logprob: -13.125680923461914
    8. '.uf' → logprob: -13.250680923461914
    9. '   ' → logprob: -13.875680923461914
    10. '

' → logprob: -14.000680923461914

Token 779: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.00013321757433004677
    2. 'rank' → logprob: -9.250133514404297
    3. 'f' → logprob: -10.500133514404297
    4. 'fl' → logprob: -13.500133514404297
    5. 'frm' → logprob: -14.000133514404297
    6. 'fn' → logprob: -14.000133514404297
    7. ' frank' → logprob: -14.375133514404297
    8. 'fork' → logprob: -14.375133514404297
    9. '[' → logprob: -14.750133514404297
    10. 'krank' → logprob: -14.875133514404297

Token 780: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -0.002490641549229622
    2. 'rank' → logprob: -6.002490520477295
    3. 'nk' → logprob: -11.502490997314453
    4. 'rk' → logprob: -14.127490997314453
    5. 'ark' → logprob: -14.502490997314453
    6. 'anks' → logprob: -15.002490997314453
    7. ' ank' → logprob: -15.002490997314453
    8. '[' → logprob: -15.252490997314453
    9. '
' → logprob: -15.252490997314453
    10. '_rank' → logprob: -15.377490997314453

Token 781: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022072356659919024
    2. '[i' → logprob: -6.127207279205322
    3. 'ri' → logprob: -11.627206802368164
    4. ' ri' → logprob: -12.002206802368164
    5. 'i' → logprob: -12.127206802368164
    6. '>' → logprob: -15.002206802368164
    7. '==' → logprob: -15.002206802368164
    8. '[int' → logprob: -15.502206802368164
    9. '[r' → logprob: -15.627206802368164
    10. 'Ri' → logprob: -16.127206802368164

Token 782: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. 'i' → logprob: -14.875001907348633
    4. '
' → logprob: -17.000001907348633
    5. ' ri' → logprob: -17.250001907348633
    6. 'r' → logprob: -18.125001907348633
    7. 'ra' → logprob: -18.500001907348633
    8. 'ti' → logprob: -19.125001907348633
    9. '-ri' → logprob: -19.125001907348633
    10. 'rij' → logprob: -19.375001907348633

Token 783: ']>' (ID: 54651)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09471306204795837
    2. ' <' → logprob: -2.969712972640991
    3. '>' → logprob: -3.344712972640991
    4. '<i' → logprob: -6.46971321105957
    5. ' >' → logprob: -6.71971321105957
    6. ']<' → logprob: -8.34471321105957
    7. '[' → logprob: -9.09471321105957
    8. '<p' → logprob: -9.34471321105957
    9. '[i' → logprob: -9.46971321105957
    10. ']' → logprob: -9.71971321105957

Token 784: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0007119550718925893
    2. ' u' → logprob: -7.375711917877197
    3. 'uff' → logprob: -10.250712394714355
    4. 'u' → logprob: -11.000712394714355
    5. 'ur' → logprob: -11.125712394714355
    6. ' uf' → logprob: -11.375712394714355
    7. 'ufs' → logprob: -13.625712394714355
    8. ' uff' → logprob: -13.875712394714355
    9. 'ug' → logprob: -14.000712394714355
    10. 'ufer' → logprob: -14.500712394714355

Token 785: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.011341936886310577
    2. 'r' → logprob: -4.5113420486450195
    3. 'ank' → logprob: -9.13634204864502
    4. 'fr' → logprob: -9.13634204864502
    5. 'rr' → logprob: -10.38634204864502
    6. 'pr' → logprob: -11.76134204864502
    7. '
' → logprob: -11.76134204864502
    8. 'n' → logprob: -12.13634204864502
    9. 'rf' → logprob: -12.13634204864502
    10. '-r' → logprob: -12.51134204864502

Token 786: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.060365608893335e-05
    2. 'r' → logprob: -10.250041007995605
    3. '[' → logprob: -12.375041007995605
    4. '[j' → logprob: -13.875041007995605
    5. ' r' → logprob: -17.12504005432129
    6. '(r' → logprob: -17.25004005432129
    7. '	r' → logprob: -18.50004005432129
    8. '[i' → logprob: -19.00004005432129
    9. '   ' → logprob: -19.50004005432129
    10. ',r' → logprob: -19.87504005432129

Token 787: 'j' (ID: 73)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3486477732658386
    2. 'j' → logprob: -1.2236478328704834
    3. '```' → logprob: -9.973648071289062
    4. 'jr' → logprob: -10.223648071289062
    5. '[r' → logprob: -10.723648071289062
    6. '[j' → logprob: -10.973648071289062
    7. 'jj' → logprob: -11.348648071289062
    8. '
' → logprob: -11.473648071289062
    9. '   ' → logprob: -11.848648071289062
    10. ' r' → logprob: -12.098648071289062

Token 788: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5793538093566895
    2. ']:' → logprob: -0.8293538093566895
    3. ']' → logprob: -6.3293538093566895
    4. '   ' → logprob: -7.4543538093566895
    5. '       ' → logprob: -8.579353332519531
    6. ':' → logprob: -8.579353332519531
    7. ' ]' → logprob: -9.079353332519531
    8. ']:
' → logprob: -9.329353332519531
    9. ':
' → logprob: -9.704353332519531
    10. '    ' → logprob: -9.704353332519531

Token 789: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 790: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.0002614550176076591
    2. ' uf' → logprob: -8.375261306762695
    3. '                   ' → logprob: -10.500261306762695
    4. 'ufs' → logprob: -13.625261306762695
    5. 'ufi' → logprob: -14.875261306762695
    6. '               ' → logprob: -15.125261306762695
    7. '
' → logprob: -15.250261306762695
    8. '                       ' → logprob: -15.375261306762695
    9. 'ur' → logprob: -16.000261306762695
    10. 'ufa' → logprob: -16.000261306762695

Token 791: 'ary' (ID: 815)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.166936457157135
    2. 'root' → logprob: -2.2919363975524902
    3. 'ary' → logprob: -3.2919363975524902
    4. 'ar' → logprob: -4.91693639755249
    5. 'ank' → logprob: -5.16693639755249
    6. 'r' → logprob: -7.41693639755249
    7. 'ry' → logprob: -7.54193639755249
    8. '[' → logprob: -7.54193639755249
    9. 'arry' → logprob: -8.416936874389648
    10. '[root' → logprob: -8.791936874389648

Token 792: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0007662679417990148
    2. '[j' → logprob: -7.625766277313232
    3. '[' → logprob: -8.375765800476074
    4. 'r' → logprob: -10.000765800476074
    5. '[i' → logprob: -14.250765800476074
    6. '```' → logprob: -14.500765800476074
    7. '(r' → logprob: -14.750765800476074
    8. ',r' → logprob: -15.500765800476074
    9. '	r' → logprob: -16.00076675415039
    10. '   ' → logprob: -16.12576675415039

Token 793: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02103601023554802
    2. 'root' → logprob: -4.146036148071289
    3. 'i' → logprob: -5.396036148071289
    4. '
' → logprob: -9.896036148071289
    5. '1' → logprob: -10.021036148071289
    6. '[root' → logprob: -10.021036148071289
    7. ' ' → logprob: -10.271036148071289
    8. '[j' → logprob: -10.521036148071289
    9. 'oot' → logprob: -10.521036148071289
    10. '[' → logprob: -10.646036148071289

Token 794: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252369225025177
    2. ' =' → logprob: -1.5023691654205322
    3. '[' → logprob: -7.877369403839111
    4. ']' → logprob: -10.752368927001953
    5. '=p' → logprob: -11.502368927001953
    6. '=q' → logprob: -11.752368927001953
    7. ']=' → logprob: -11.877368927001953
    8. '=s' → logprob: -13.252368927001953
    9. '[i' → logprob: -13.377368927001953
    10. ' ' → logprob: -13.377368927001953

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004764626733958721
    2. ' =' → logprob: -5.379764556884766
    3. '[' → logprob: -8.879764556884766
    4. '=q' → logprob: -13.129764556884766
    5. '=p' → logprob: -13.629764556884766
    6. '=i' → logprob: -14.129764556884766
    7. '[i' → logprob: -15.004764556884766
    8. '=r' → logprob: -15.629764556884766
    9. '=s' → logprob: -15.754764556884766
    10. '=
' → logprob: -16.254764556884766

Token 796: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -9.088346359931165e-07
    2. ' ri' → logprob: -14.000000953674316
    3. 'ru' → logprob: -18.875
    4. 'rii' → logprob: -19.0
    5. 'rir' → logprob: -19.375
    6. '   ' → logprob: -19.375
    7. 'ric' → logprob: -20.0
    8. 'ra' → logprob: -20.25
    9. 'r' → logprob: -20.25
    10. 'rig' → logprob: -20.375

Token 797: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4897337555885315
    2. '                   ' → logprob: -0.9897337555885315
    3. 'else' → logprob: -5.114733695983887
    4. '<|end|>' → logprob: -5.114733695983887
    5. '               ' → logprob: -6.614733695983887
    6. '
' → logprob: -7.114733695983887
    7. '                        
' → logprob: -7.864733695983887
    8. '           ' → logprob: -8.239733695983887
    9. '       ' → logprob: -8.364733695983887
    10. '   ' → logprob: -8.864733695983887

Token 798: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6563766002655029
    2. 'else' → logprob: -1.281376600265503
    3. '                       ' → logprob: -1.781376600265503
    4. ' else' → logprob: -4.531376838684082
    5. '
' → logprob: -4.781376838684082
    6. '<|end|>' → logprob: -4.781376838684082
    7. '                        
' → logprob: -5.531376838684082
    8. '               ' → logprob: -6.531376838684082
    9. '                    
' → logprob: -7.531376838684082
    10. '```' → logprob: -8.156376838684082

Token 799: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20494093000888824
    2. '                   ' → logprob: -1.704940915107727
    3. ' else' → logprob: -6.3299407958984375
    4. '               ' → logprob: -6.9549407958984375
    5. 'elif' → logprob: -7.2049407958984375
    6. '                       ' → logprob: -10.954940795898438
    7. '   ' → logprob: -11.329940795898438
    8. '           ' → logprob: -12.204940795898438
    9. ' elif' → logprob: -12.954940795898438
    10. '```' → logprob: -13.079940795898438

Token 800: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2900010943412781
    2. '                       ' → logprob: -1.4150011539459229
    3. ':' → logprob: -4.915000915527344
    4. '                   ' → logprob: -7.915000915527344
    5. '       ' → logprob: -8.040000915527344
    6. '{
' → logprob: -8.665000915527344
    7. ' if' → logprob: -9.040000915527344
    8. ' :
' → logprob: -9.415000915527344
    9. '   ' → logprob: -9.540000915527344
    10. '                        ' → logprob: -10.165000915527344

Token 801: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.025618692860007286
    2. 'if' → logprob: -3.7756187915802
    3. ' if' → logprob: -7.650618553161621
    4. '```' → logprob: -8.025618553161621
    5. ':
' → logprob: -8.275618553161621
    6. '                   ' → logprob: -8.275618553161621
    7. '       ' → logprob: -8.525618553161621
    8. '{
' → logprob: -8.775618553161621
    9. ':' → logprob: -8.775618553161621
    10. '                           ' → logprob: -9.025618553161621

Token 802: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.000847267743665725
    2. '                       ' → logprob: -7.125847339630127
    3. 'ufi' → logprob: -11.125846862792969
    4. '                           ' → logprob: -12.000846862792969
    5. 'ufs' → logprob: -12.000846862792969
    6. ' uf' → logprob: -12.500846862792969
    7. 'ufa' → logprob: -13.000846862792969
    8. 'urf' → logprob: -13.125846862792969
    9. '                   ' → logprob: -13.500846862792969
    10. '                               ' → logprob: -13.625846862792969

Token 803: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.1156335398554802
    2. 'rank' → logprob: -2.240633487701416
    3. 'ank' → logprob: -6.115633487701416
    4. 'ar' → logprob: -7.865633487701416
    5. 'ray' → logprob: -9.740633964538574
    6. 'ry' → logprob: -9.990633964538574
    7. 'ay' → logprob: -10.990633964538574
    8. 'root' → logprob: -11.115633964538574
    9. 'r' → logprob: -11.115633964538574
    10. '[' → logprob: -11.240633964538574

Token 804: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.810037742368877e-05
    2. '[i' → logprob: -10.375038146972656
    3. '[r' → logprob: -12.625038146972656
    4. 'ri' → logprob: -12.875038146972656
    5. '   ' → logprob: -14.250038146972656
    6. '[j' → logprob: -15.750038146972656
    7. '       ' → logprob: -16.875038146972656
    8. '```' → logprob: -17.250038146972656
    9. 'r' → logprob: -17.375038146972656
    10. '[ii' → logprob: -17.750038146972656

Token 805: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -2.2200749754119897e-06
    2. 'r' → logprob: -13.250001907348633
    3. ' ri' → logprob: -14.875001907348633
    4. 'ric' → logprob: -18.375001907348633
    5. 'ru' → logprob: -18.375001907348633
    6. 'ra' → logprob: -18.375001907348633
    7. 'rij' → logprob: -18.625001907348633
    8. 'rii' → logprob: -18.875001907348633
    9. 'rf' → logprob: -19.875001907348633
    10. 'rl' → logprob: -20.125001907348633

Token 806: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8169865608215332
    2. '=' → logprob: -1.0669865608215332
    3. ' =' → logprob: -1.6919865608215332
    4. ']=' → logprob: -3.566986560821533
    5. '=j' → logprob: -6.816986560821533
    6. '[j' → logprob: -7.566986560821533
    7. ' ]' → logprob: -9.441986083984375
    8. '   ' → logprob: -10.441986083984375
    9. '[' → logprob: -10.566986083984375
    10. '=r' → logprob: -10.941986083984375

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05894165113568306
    2. ' =' → logprob: -3.058941602706909
    3. '=r' → logprob: -4.683941841125488
    4. '=j' → logprob: -7.308941841125488
    5. '[r' → logprob: -8.183941841125488
    6. '[j' → logprob: -9.558941841125488
    7. ']=' → logprob: -11.058941841125488
    8. '=
' → logprob: -12.058941841125488
    9. ']' → logprob: -12.558941841125488
    10. '=n' → logprob: -12.808941841125488

Token 808: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.704273118884885e-07
    2. ' r' → logprob: -14.500000953674316
    3. '	r' → logprob: -17.375
    4. '   ' → logprob: -18.25
    5. '_r' → logprob: -19.625
    6. '                   ' → logprob: -20.0
    7. '[r' → logprob: -20.25
    8. 'j' → logprob: -20.375
    9. '                       ' → logprob: -20.875
    10. '       ' → logprob: -21.125

Token 809: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003377270477358252
    2. 'r' → logprob: -8.000337600708008
    3. '[j' → logprob: -14.250337600708008
    4. ' j' → logprob: -14.750337600708008
    5. '   ' → logprob: -15.000337600708008
    6. '	j' → logprob: -15.375337600708008
    7. '
' → logprob: -15.500337600708008
    8. '```' → logprob: -16.125337600708008
    9. 'nj' → logprob: -16.250337600708008
    10. 'vj' → logprob: -16.500337600708008

Token 810: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002860073291230947
    2. '                   ' → logprob: -8.500286102294922
    3. 'if' → logprob: -10.250286102294922
    4. '               ' → logprob: -11.250286102294922
    5. ',' → logprob: -11.750286102294922
    6. '<|end|>' → logprob: -12.500286102294922
    7. '                           ' → logprob: -12.625286102294922
    8. '       ' → logprob: -12.625286102294922
    9. '           ' → logprob: -12.875286102294922
    10. ' if' → logprob: -12.875286102294922

Token 811: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0024135883431881666
    2. '```' → logprob: -6.502413749694824
    3. '                   ' → logprob: -7.752413749694824
    4. '               ' → logprob: -8.627413749694824
    5. '<|end|>' → logprob: -9.002413749694824
    6. 'if' → logprob: -10.127413749694824
    7. '                           ' → logprob: -10.252413749694824
    8. ' if' → logprob: -10.502413749694824
    9. '       ' → logprob: -10.502413749694824
    10. '                        ' → logprob: -11.627413749694824

Token 812: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03502677008509636
    2. '                       ' → logprob: -4.035026550292969
    3. '```' → logprob: -4.660026550292969
    4. '                           ' → logprob: -5.910026550292969
    5. 'iff' → logprob: -6.035026550292969
    6. '@if' → logprob: -7.410026550292969
    7. '                   ' → logprob: -7.660026550292969
    8. '                               ' → logprob: -8.285026550292969
    9. 'iffs' → logprob: -9.285026550292969
    10. 'uf' → logprob: -9.410026550292969

Token 813: ' u' (ID: 337)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -5.438573680294212e-06
    2. 'uff' → logprob: -13.250005722045898
    3. ' u' → logprob: -13.375005722045898
    4. ' uf' → logprob: -13.750005722045898
    5. 'ur' → logprob: -15.500005722045898
    6. 'u' → logprob: -15.750005722045898
    7. 'ut' → logprob: -16.2500057220459
    8. '.uf' → logprob: -16.3750057220459
    9. '   ' → logprob: -16.6250057220459
    10. '
' → logprob: -16.6250057220459

Token 814: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.00037466554204002023
    2. 'uf' → logprob: -8.625374794006348
    3. 'f' → logprob: -9.625374794006348
    4. 'fur' → logprob: -10.250374794006348
    5. 'rank' → logprob: -10.875374794006348
    6. 'af' → logprob: -11.250374794006348
    7. 'for' → logprob: -11.250374794006348
    8. 'ff' → logprob: -11.625374794006348
    9. '[' → logprob: -11.875374794006348
    10. 'from' → logprob: -12.750374794006348

Token 815: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -2.1008713702030946e-06
    2. 'rank' → logprob: -13.500001907348633
    3. ' ank' → logprob: -14.500001907348633
    4. 'ANK' → logprob: -17.125001907348633
    5. 'nk' → logprob: -17.125001907348633
    6. 'anks' → logprob: -17.375001907348633
    7. 'Rank' → logprob: -17.750001907348633
    8. '_rank' → logprob: -18.375001907348633
    9. 'анк' → logprob: -18.500001907348633
    10. '[' → logprob: -19.250001907348633

Token 816: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[r' → logprob: -17.375
    3. '[i' → logprob: -18.125
    4. '[
' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '   ' → logprob: -20.125
    7. ' [' → logprob: -21.25
    8. '==' → logprob: -21.25
    9. '[js' → logprob: -21.625
    10. '[j' → logprob: -21.75

Token 817: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.07891236990690231
    2. 'r' → logprob: -2.5789122581481934
    3. 'rij' → logprob: -11.078912734985352
    4. '[' → logprob: -12.453912734985352
    5. '[r' → logprob: -13.453912734985352
    6. '
' → logprob: -14.828912734985352
    7. 'rii' → logprob: -15.703912734985352
    8. 'rk' → logprob: -15.828912734985352
    9. 'ru' → logprob: -15.953912734985352
    10. 'j' → logprob: -16.07891273498535

Token 818: ']==' (ID: 34128)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038229912519454956
    2. '==' → logprob: -3.2882299423217773
    3. ']==' → logprob: -8.788229942321777
    4. ' ==' → logprob: -11.288229942321777
    5. '[i' → logprob: -11.663229942321777
    6. '==
' → logprob: -12.163229942321777
    7. '[r' → logprob: -12.663229942321777
    8. '[
' → logprob: -13.413229942321777
    9. ']' → logprob: -13.538229942321777
    10. '===' → logprob: -13.788229942321777

Token 819: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -8.435139898210764e-05
    2. 'uff' → logprob: -9.750083923339844
    3. '
' → logprob: -12.125083923339844
    4. '   ' → logprob: -12.125083923339844
    5. '.uf' → logprob: -12.500083923339844
    6. '[' → logprob: -12.875083923339844
    7. 'ut' → logprob: -13.250083923339844
    8. 'ufig' → logprob: -14.250083923339844
    9. ' ' → logprob: -14.250083923339844
    10. 'r' → logprob: -14.625083923339844

Token 820: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -8.327856630785391e-05
    2. 'r' → logprob: -9.625082969665527
    3. 'ank' → logprob: -11.250082969665527
    4. 'fr' → logprob: -13.500082969665527
    5. '_rank' → logprob: -13.625082969665527
    6. 'Rank' → logprob: -14.250082969665527
    7. ' rank' → logprob: -15.625082969665527
    8. '[r' → logprob: -16.000083923339844
    9. 'j' → logprob: -16.125083923339844
    10. '.rank' → logprob: -16.250083923339844

Token 821: '[r' (ID: 33265)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05491816624999046
    2. '[r' → logprob: -2.929918050765991
    3. '[' → logprob: -11.67991828918457
    4. ' r' → logprob: -11.80491828918457
    5. '[j' → logprob: -11.80491828918457
    6. '   ' → logprob: -12.67991828918457
    7. '(r' → logprob: -12.92991828918457
    8. '	r' → logprob: -13.30491828918457
    9. '
' → logprob: -13.55491828918457
    10. '```' → logprob: -13.55491828918457

Token 822: 'j' (ID: 73)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.6776029699249193e-05
    2. 'j' → logprob: -10.75002670288086
    3. 'ri' → logprob: -12.62502670288086
    4. '   ' → logprob: -14.12502670288086
    5. '[r' → logprob: -14.62502670288086
    6. ' r' → logprob: -15.62502670288086
    7. ' ' → logprob: -16.00002670288086
    8. '
' → logprob: -16.37502670288086
    9. '```' → logprob: -16.62502670288086
    10. '	r' → logprob: -17.00002670288086

Token 823: ']:
' (ID: 22152)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.28323236107826233
    2. ']:
' → logprob: -1.65823233127594
    3. '[r' → logprob: -3.4082324504852295
    4. ']:' → logprob: -4.28323221206665
    5. '[' → logprob: -5.65823221206665
    6. ':
' → logprob: -6.28323221206665
    7. ':' → logprob: -6.78323221206665
    8. '][' → logprob: -7.53323221206665
    9. 'r' → logprob: -7.65823221206665
    10. ']' → logprob: -7.90823221206665

Token 824: '                           ' (ID: 1686)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.3378531336784363
    2. '                           ' → logprob: -1.587853193283081
    3. '                       ' → logprob: -2.712853193283081
    4. '                               ' → logprob: -5.712852954864502
    5. '[' → logprob: -6.087852954864502
    6. 'uff' → logprob: -6.337852954864502
    7. ' uf' → logprob: -6.337852954864502
    8. 'ufs' → logprob: -6.462852954864502
    9. '```' → logprob: -7.337852954864502
    10. '                        ' → logprob: -7.462852954864502

Token 825: ' u' (ID: 337)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -3.416665640543215e-05
    2. '                           ' → logprob: -10.87503433227539
    3. '                               ' → logprob: -12.50003433227539
    4. '                       ' → logprob: -13.12503433227539
    5. 'uff' → logprob: -13.12503433227539
    6. 'ur' → logprob: -13.50003433227539
    7. '                                       ' → logprob: -13.75003433227539
    8. '                   ' → logprob: -13.87503433227539
    9. ' uf' → logprob: -14.37503433227539
    10. '               ' → logprob: -14.50003433227539

Token 826: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -1.0802738870552275e-05
    2. 'rank' → logprob: -11.62501049041748
    3. 'fl' → logprob: -13.75001049041748
    4. 'pr' → logprob: -15.25001049041748
    5. 'for' → logprob: -16.375011444091797
    6. 'fn' → logprob: -16.500011444091797
    7. 'ford' → logprob: -16.500011444091797
    8. '
' → logprob: -17.000011444091797
    9. 'af' → logprob: -17.125011444091797
    10. 'f' → logprob: -17.625011444091797

Token 827: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -1.9361264946837764e-07
    2. ' ank' → logprob: -16.5
    3. 'rank' → logprob: -16.875
    4. 'an' → logprob: -18.5
    5. 'ANK' → logprob: -18.625
    6. 'ark' → logprob: -18.625
    7. 'анк' → logprob: -18.875
    8. 'anks' → logprob: -19.0
    9. 'nk' → logprob: -19.625
    10. 'Rank' → logprob: -19.75

Token 828: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0005249153473414481
    2. '[' → logprob: -8.250524520874023
    3. '[j' → logprob: -8.250524520874023
    4. '   ' → logprob: -13.125524520874023
    5. '[i' → logprob: -16.000524520874023
    6. '[u' → logprob: -16.500524520874023
    7. '[q' → logprob: -16.750524520874023
    8. 'r' → logprob: -16.875524520874023
    9. '[
' → logprob: -17.125524520874023
    10. '       ' → logprob: -17.250524520874023

Token 829: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04094301164150238
    2. '[' → logprob: -3.290942907333374
    3. 'j' → logprob: -5.915943145751953
    4. 'r' → logprob: -9.165943145751953
    5. 'ri' → logprob: -9.915943145751953
    6. '[i' → logprob: -10.540943145751953
    7. ']' → logprob: -12.790943145751953
    8. 'o' → logprob: -13.040943145751953
    9. 'oi' → logprob: -13.165943145751953
    10. '][' → logprob: -13.290943145751953

Token 830: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00019829542725346982
    2. ' +=' → logprob: -9.000198364257812
    3. ']+=' → logprob: -9.500198364257812
    4. '+' → logprob: -18.375198364257812
    5. '   ' → logprob: -18.375198364257812
    6. '+='' → logprob: -18.375198364257812
    7. '+="' → logprob: -18.500198364257812
    8. '=' → logprob: -19.125198364257812
    9. '+=(' → logprob: -19.625198364257812
    10. '[' → logprob: -20.000198364257812

Token 831: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.822646693966817e-06
    2. ' +=' → logprob: -12.250007629394531
    3. ']+=' → logprob: -12.750007629394531
    4. '=' → logprob: -17.37500762939453
    5. '   ' → logprob: -19.62500762939453
    6. '+='' → logprob: -20.50000762939453
    7. '+=(' → logprob: -20.87500762939453
    8. '+' → logprob: -21.25000762939453
    9. '```' → logprob: -21.50000762939453
    10. '+="' → logprob: -21.62500762939453

Token 832: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '```' → logprob: -18.500003814697266
    5. '[' → logprob: -19.750003814697266
    6. '+' → logprob: -19.875003814697266
    7. '１' → logprob: -20.437503814697266
    8. '  ' → logprob: -20.500003814697266
    9. '-' → logprob: -20.500003814697266
    10. '	' → logprob: -21.062503814697266

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -19.000001907348633
    5. '-' → logprob: -20.375001907348633
    6. '  ' → logprob: -20.500001907348633
    7. '
' → logprob: -20.500001907348633
    8. '       ' → logprob: -21.000001907348633
    9. '+' → logprob: -21.125001907348633
    10. '           ' → logprob: -21.375001907348633

Token 834: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9362356662750244
    2. '<|end|>' → logprob: -1.3112356662750244
    3. '               ' → logprob: -1.6862356662750244
    4. '                           ' → logprob: -3.3112356662750244
    5. ')' → logprob: -3.9362356662750244
    6. '            ' → logprob: -4.436235427856445
    7. '       ' → logprob: -4.436235427856445
    8. '                   ' → logprob: -4.561235427856445
    9. 'return' → logprob: -4.811235427856445
    10. '                ' → logprob: -4.936235427856445

Token 835: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6844901442527771
    2. '           ' → logprob: -0.9344901442527771
    3. 'for' → logprob: -2.809490203857422
    4. '                   ' → logprob: -4.559490203857422
    5. ' for' → logprob: -4.809490203857422
    6. '                           ' → logprob: -5.309490203857422
    7. 'n' → logprob: -5.934490203857422
    8. ')' → logprob: -6.184490203857422
    9. '                       ' → logprob: -6.684490203857422
    10. '                            
' → logprob: -6.684490203857422

Token 836: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2550923526287079
    2. ' for' → logprob: -2.1300923824310303
    3. '           ' → logprob: -2.3800923824310303
    4. '               ' → logprob: -4.505092144012451
    5. 'from' → logprob: -7.255092144012451
    6. 'import' → logprob: -7.255092144012451
    7. '   ' → logprob: -7.880092144012451
    8. 'visited' → logprob: -9.13009262084961
    9. 'while' → logprob: -9.50509262084961
    10. 'queue' → logprob: -9.63009262084961

Token 837: ' _' (ID: 1175)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048650842159986496
    2. 'i' → logprob: -3.4236507415771484
    3. 'v' → logprob: -4.923650741577148
    4. ' x' → logprob: -5.548650741577148
    5. 'k' → logprob: -6.923650741577148
    6. 'z' → logprob: -7.298650741577148
    7. 'a' → logprob: -7.548650741577148
    8. 'u' → logprob: -7.798650741577148
    9. ' i' → logprob: -8.298650741577148
    10. 'e' → logprob: -8.798650741577148

Token 838: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00215930282138288
    2. 'in' → logprob: -7.002159118652344
    3. 'x' → logprob: -7.377159118652344
    4. ',' → logprob: -8.252159118652344
    5. 'i' → logprob: -9.377159118652344
    6. 'v' → logprob: -10.252159118652344
    7. ' ' → logprob: -10.252159118652344
    8. '   ' → logprob: -10.502159118652344
    9. ' ,' → logprob: -10.502159118652344
    10. 'vis' → logprob: -10.627159118652344

Token 839: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026948828250169754
    2. 'vis' → logprob: -4.401948928833008
    3. ' range' → logprob: -4.901948928833008
    4. 'work' → logprob: -5.526948928833008
    5. 'es' → logprob: -6.151948928833008
    6. 'in' → logprob: -7.776948928833008
    7. 'e' → logprob: -8.901948928833008
    8. '(range' → logprob: -10.526948928833008
    9. '[' → logprob: -10.651948928833008
    10. 'pend' → logprob: -11.026948928833008

Token 840: '(v' (ID: 6932)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.08860711753368378
    2. '(v' → logprob: -2.9636070728302
    3. '(V' → logprob: -4.588607311248779
    4. 'V' → logprob: -4.713607311248779
    5. ' vv' → logprob: -5.338607311248779
    6. 'len' → logprob: -5.338607311248779
    7. '1' → logprob: -6.463607311248779
    8. 'VV' → logprob: -6.713607311248779
    9. 'v' → logprob: -8.213606834411621
    10. '   ' → logprob: -8.463606834411621

Token 841: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002613358374219388
    2. 'is' → logprob: -8.750261306762695
    3. 'vis' → logprob: -10.750261306762695
    4. 'V' → logprob: -11.125261306762695
    5. '2' → logprob: -11.437761306762695
    6. '1' → logprob: -11.812761306762695
    7. 'len' → logprob: -12.312761306762695
    8. '[v' → logprob: -12.375261306762695
    9. '(v' → logprob: -12.437761306762695
    10. ')' → logprob: -13.250261306762695

Token 842: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0380832701921463
    2. '):
' → logprob: -3.78808331489563
    3. '):' → logprob: -4.413083076477051
    4. ' -' → logprob: -6.038083076477051
    5. '   ' → logprob: -10.16308307647705
    6. '*' → logprob: -10.16308307647705
    7. '(v' → logprob: -10.91308307647705
    8. '           ' → logprob: -11.03808307647705
    9. '):
' → logprob: -11.03808307647705
    10. '       ' → logprob: -11.16308307647705

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '2' → logprob: -17.125001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '```' → logprob: -18.750001907348633
    6. '
' → logprob: -18.875001907348633
    7. 'for' → logprob: -19.125001907348633
    8. '           ' → logprob: -19.625001907348633
    9. ')' → logprob: -20.500001907348633
    10. '       ' → logprob: -20.750001907348633

Token 844: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.308035284280777
    2. '           ' → logprob: -2.183035373687744
    3. ':' → logprob: -2.308035373687744
    4. '):
' → logprob: -3.683035373687744
    5. '                   ' → logprob: -4.433035373687744
    6. '   ' → logprob: -5.183035373687744
    7. ',' → logprob: -5.808035373687744
    8. '):' → logprob: -5.808035373687744
    9. '               ' → logprob: -6.058035373687744
    10. '       ' → logprob: -6.933035373687744

Token 845: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1985691487789154
    2. '                   ' → logprob: -2.0735690593719482
    3. '           ' → logprob: -3.1985690593719482
    4. 'a' → logprob: -5.573569297790527
    5. '               ' → logprob: -5.573569297790527
    6. 'x' → logprob: -6.073569297790527
    7. ' x' → logprob: -7.073569297790527
    8. 'u' → logprob: -7.448569297790527
    9. '       ' → logprob: -7.573569297790527
    10. ' a' → logprob: -7.698569297790527

Token 846: ' mx' (ID: 28004)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9683729410171509
    2. 'u' → logprob: -1.7183729410171509
    3. 'x' → logprob: -1.8433729410171509
    4. '   ' → logprob: -1.9683729410171509
    5. 'i' → logprob: -2.7183728218078613
    6. '                   ' → logprob: -4.593372821807861
    7. 'ui' → logprob: -4.968372821807861
    8. '           ' → logprob: -5.093372821807861
    9. 'l' → logprob: -5.093372821807861
    10. '               ' → logprob: -5.718372821807861

Token 847: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6511397957801819
    2. ' =' → logprob: -1.901139736175537
    3. '<|end|>' → logprob: -2.151139736175537
    4. 'for' → logprob: -2.401139736175537
    5. '   ' → logprob: -4.401139736175537
    6. '=' → logprob: -4.401139736175537
    7. 'max' → logprob: -4.526139736175537
    8. ' for' → logprob: -4.651139736175537
    9. 'x' → logprob: -5.276139736175537
    10. '...' → logprob: -5.401139736175537

Token 848: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01829555630683899
    2. '999' → logprob: -4.268295764923096
    3. '0' → logprob: -5.893295764923096
    4. ' -' → logprob: -7.893295764923096
    5. 'None' → logprob: -8.143295288085938
    6. '(' → logprob: -8.893295288085938
    7. 'float' → logprob: -9.143295288085938
    8. '(-' → logprob: -9.143295288085938
    9. '-(' → logprob: -9.518295288085938
    10. ' ' → logprob: -9.643295288085938

Token 849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11321274191141129
    2. '999' → logprob: -2.238212823867798
    3. 'sys' → logprob: -9.238212585449219
    4. '100' → logprob: -9.488212585449219
    5. '99' → logprob: -9.738212585449219
    6. 'float' → logprob: -10.238212585449219
    7. '10' → logprob: -10.488212585449219
    8. '2' → logprob: -11.113212585449219
    9. '987' → logprob: -11.113212585449219
    10. 'int' → logprob: -11.488212585449219

Token 850: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 851: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: ' m' (ID: 284)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.162281334400177
    2. 'mi' → logprob: -2.2872812747955322
    3. 'm' (adapté à ' m') → logprob: -4.412281513214111
    4. 'mj' → logprob: -4.662281513214111
    5. 'u' → logprob: -5.662281513214111
    6. 'x' → logprob: -6.037281513214111
    7. 'ma' → logprob: -6.287281513214111
    8. 'ms' → logprob: -6.537281513214111
    9. 'mv' → logprob: -6.787281513214111
    10. 'max' → logprob: -6.787281513214111

Token 853: 'xi' (ID: 22180)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4990245997905731
    2. 'x' → logprob: -1.4990246295928955
    3. 'xi' → logprob: -3.3740246295928955
    4. 'vi' → logprob: -4.124024391174316
    5. 'ni' → logprob: -4.249024391174316
    6. 'mi' → logprob: -4.374024391174316
    7. 'ii' → logprob: -4.499024391174316
    8. 'a' → logprob: -4.499024391174316
    9. 'in' → logprob: -4.499024391174316
    10. 'u' → logprob: -4.874024391174316

Token 854: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07754122465848923
    2. '=' → logprob: -2.7025411128997803
    3. ',' → logprob: -5.202541351318359
    4. '<|end|>' → logprob: -7.702541351318359
    5. 'x' → logprob: -7.827541351318359
    6. 'idx' → logprob: -8.95254135131836
    7. 'k' → logprob: -8.95254135131836
    8. '=-' → logprob: -8.95254135131836
    9. ',k' → logprob: -9.57754135131836
    10. ' ' → logprob: -9.57754135131836

Token 855: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036182431504130363
    2. 'None' → logprob: -6.378618240356445
    3. '0' → logprob: -6.878618240356445
    4. '(-' → logprob: -7.503618240356445
    5. '(' → logprob: -9.503618240356445
    6. '-m' → logprob: -9.503618240356445
    7. 'm' → logprob: -9.878618240356445
    8. '(None' → logprob: -10.378618240356445
    9. '[]' → logprob: -11.253618240356445
    10. '()' → logprob: -11.253618240356445

Token 856: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06830564886331558
    2. ',' → logprob: -3.443305730819702
    3. 'for' → logprob: -4.318305492401123
    4. '<|end|>' → logprob: -4.693305492401123
    5. ' for' → logprob: -5.193305492401123
    6. '           ' → logprob: -6.443305492401123
    7. 'm' → logprob: -6.943305492401123
    8. ',m' → logprob: -7.068305492401123
    9. '               ' → logprob: -7.318305492401123
    10. '   ' → logprob: -7.568305492401123

Token 857: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06565973162651062
    2. 'for' → logprob: -3.690659761428833
    3. 'm' → logprob: -4.315659523010254
    4. ',' → logprob: -5.190659523010254
    5. '           ' → logprob: -5.440659523010254
    6. '               ' → logprob: -5.690659523010254
    7. ' for' → logprob: -6.190659523010254
    8. '       ' → logprob: -6.190659523010254
    9. 'i' → logprob: -6.315659523010254
    10. '   ' → logprob: -6.690659523010254

Token 858: ' mx' (ID: 28004)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12832413613796234
    2. 'mi' → logprob: -2.753324031829834
    3. '                   ' → logprob: -4.003324031829834
    4. 'mx' (adapté à ' mx') → logprob: -4.503324031829834
    5. 'm' → logprob: -4.628324031829834
    6. '   ' → logprob: -5.378324031829834
    7. 'mj' → logprob: -5.378324031829834
    8. 'mv' → logprob: -5.878324031829834
    9. 'ms' → logprob: -6.253324031829834
    10. 'mst' → logprob: -7.128324031829834

Token 859: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5160086154937744
    2. 'v' → logprob: -2.6410086154937744
    3. 'x' → logprob: -2.7660086154937744
    4. 'cost' → logprob: -3.5160086154937744
    5. ',' → logprob: -3.7660086154937744
    6. 'd' → logprob: -3.8910086154937744
    7. '=' → logprob: -4.141008377075195
    8. 'dist' → logprob: -4.391008377075195
    9. 'from' → logprob: -4.391008377075195
    10. ' =' → logprob: -4.391008377075195

Token 860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23482270538806915
    2. ' =' → logprob: -1.6098227500915527
    3. '=None' → logprob: -4.984822750091553
    4. ',' → logprob: -6.109822750091553
    5. 'None' → logprob: -8.859822273254395
    6. '   ' → logprob: -10.109822273254395
    7. '                   ' → logprob: -10.734822273254395
    8. ',j' → logprob: -10.859822273254395
    9. '<|end|>' → logprob: -10.984822273254395
    10. '=
' → logprob: -11.484822273254395

Token 861: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.3120038501219824e-05
    2. ' None' → logprob: -9.875053405761719
    3. '-' → logprob: -13.750053405761719
    4. '(None' → logprob: -15.625053405761719
    5. '=None' → logprob: -15.625053405761719
    6. '   ' → logprob: -16.12505340576172
    7. 'none' → logprob: -16.25005340576172
    8. '0' → logprob: -16.50005340576172
    9. '_None' → logprob: -16.50005340576172
    10. '  ' → logprob: -18.25005340576172

Token 862: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005337643437087536
    2. '<|end|>' → logprob: -5.630337715148926
    3. '           ' → logprob: -7.255337715148926
    4. '               ' → logprob: -8.005337715148926
    5. 'for' → logprob: -8.130337715148926
    6. ' for' → logprob: -8.380337715148926
    7. '   ' → logprob: -9.505337715148926
    8. '       ' → logprob: -10.130337715148926
    9. '<|end|>' → logprob: -11.130337715148926
    10. ' ' → logprob: -11.505337715148926

Token 863: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01595553569495678
    2. ' for' → logprob: -5.140955448150635
    3. '           ' → logprob: -5.640955448150635
    4. 'for' → logprob: -5.765955448150635
    5. '               ' → logprob: -6.015955448150635
    6. '       ' → logprob: -8.140955924987793
    7. '                       ' → logprob: -8.890955924987793
    8. '   ' → logprob: -9.390955924987793
    9. '		           ' → logprob: -9.640955924987793
    10. '                    ' → logprob: -10.015955924987793

Token 864: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00046546570956707
    2. '                   ' → logprob: -8.125465393066406
    3. ' for' → logprob: -9.375465393066406
    4. '               ' → logprob: -9.875465393066406
    5. '           ' → logprob: -10.500465393066406
    6. '   ' → logprob: -12.625465393066406
    7. 'import' → logprob: -14.875465393066406
    8. 'max' → logprob: -15.000465393066406
    9. '                    ' → logprob: -15.500465393066406
    10. 'min' → logprob: -15.500465393066406

Token 865: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07962719351053238
    2. 'x' → logprob: -2.579627275466919
    3. 'xi' → logprob: -8.57962703704834
    4. 'a' → logprob: -8.82962703704834
    5. '_i' → logprob: -9.70462703704834
    6. 'ii' → logprob: -9.70462703704834
    7. ' i' → logprob: -9.82962703704834
    8. 'k' → logprob: -9.82962703704834
    9. 'u' → logprob: -10.32962703704834
    10. 'vi' → logprob: -10.82962703704834

Token 866: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.001619003596715629
    2. ' in' → logprob: -6.5016188621521
    3. '1' → logprob: -10.376619338989258
    4. ',v' → logprob: -10.876619338989258
    5. 'vis' → logprob: -11.001619338989258
    6. 'x' → logprob: -11.251619338989258
    7. ',' → logprob: -11.251619338989258
    8. 'n' → logprob: -12.001619338989258
    9. '```' → logprob: -12.626619338989258
    10. 'i' → logprob: -13.001619338989258

Token 867: ' e' (ID: 319)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.009568843059241772
    2. 'range' → logprob: -5.009568691253662
    3. ' vis' → logprob: -6.634568691253662
    4. ' range' → logprob: -7.509568691253662
    5. 'e' → logprob: -7.759568691253662
    6. 'list' → logprob: -8.00956916809082
    7. 'work' → logprob: -8.75956916809082
    8. '(vis' → logprob: -9.75956916809082
    9. 'es' → logprob: -12.50956916809082
    10. '(e' → logprob: -13.25956916809082

Token 868: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.037432149052619934
    2. 'in' → logprob: -3.6624321937561035
    3. ':' → logprob: -5.2874321937561035
    4. '.keys' → logprob: -6.1624321937561035
    5. 'x' → logprob: -6.5374321937561035
    6. '[x' → logprob: -7.1624321937561035
    7. '<|end|>' → logprob: -7.6624321937561035
    8. ':
' → logprob: -8.037431716918945
    9. 's' → logprob: -9.037431716918945
    10. ' ' → logprob: -9.412431716918945

Token 869: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0144239142537117
    2. ' for' → logprob: -5.139423847198486
    3. '       ' → logprob: -5.264423847198486
    4. '<|end|>' → logprob: -6.514423847198486
    5. '                   ' → logprob: -6.764423847198486
    6. 'for' → logprob: -8.514424324035645
    7. '               ' → logprob: -8.639424324035645
    8. '           ' → logprob: -9.264424324035645
    9. ',' → logprob: -9.889424324035645
    10. '	                   ' → logprob: -10.639424324035645

Token 870: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5834399461746216
    2. 'for' (adapté à ' for') → logprob: -0.8334399461746216
    3. '                       ' → logprob: -5.833439826965332
    4. '   ' → logprob: -5.958439826965332
    5. ' ' → logprob: -6.458439826965332
    6. '       ' → logprob: -9.083439826965332
    7. 'if' → logprob: -9.583439826965332
    8. '                   ' → logprob: -9.833439826965332
    9. '	for' → logprob: -10.333439826965332
    10. '  ' → logprob: -10.583439826965332

Token 871: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.35837464465294e-05
    2. ' j' → logprob: -10.375043869018555
    3. '   ' → logprob: -12.250043869018555
    4. 'k' → logprob: -12.250043869018555
    5. 'jj' → logprob: -14.750043869018555
    6. '	j' → logprob: -14.875043869018555
    7. ' ' → logprob: -15.125043869018555
    8. 'v' → logprob: -15.125043869018555
    9. '
' → logprob: -15.500043869018555
    10. 'x' → logprob: -15.875043869018555

Token 872: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04866117238998413
    2. 'in' → logprob: -3.048661231994629
    3. 'e' → logprob: -11.048661231994629
    4. ' ' → logprob: -11.298661231994629
    5. '   ' → logprob: -11.673661231994629
    6. 'i' → logprob: -12.173661231994629
    7. '  ' → logprob: -12.423661231994629
    8. '                       ' → logprob: -12.673661231994629
    9. '                   ' → logprob: -13.048661231994629
    10. 's' → logprob: -13.298661231994629

Token 873: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018110143020749092
    2. ' e' → logprob: -4.143110275268555
    3. 'vis' → logprob: -6.768110275268555
    4. 'es' → logprob: -8.143110275268555
    5. '[e' → logprob: -8.518110275268555
    6. 'range' → logprob: -8.643110275268555
    7. ' range' → logprob: -9.518110275268555
    8. ' vis' → logprob: -9.768110275268555
    9. 'work' → logprob: -9.893110275268555
    10. '[' → logprob: -11.143110275268555

Token 874: ':
' (ID: 734)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.539801688631997e-05
    2. '[x' → logprob: -9.750065803527832
    3. ' in' → logprob: -12.500065803527832
    4. 'i' → logprob: -14.250065803527832
    5. '[j' → logprob: -14.625065803527832
    6. '```' → logprob: -14.625065803527832
    7. '[' → logprob: -15.000065803527832
    8. 'x' → logprob: -15.375065803527832
    9. ':i' → logprob: -15.500065803527832
    10. 'e' → logprob: -15.625065803527832

Token 875: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.022081483155488968
    2. '                               ' → logprob: -4.14708137512207
    3. '                       ' → logprob: -6.27208137512207
    4. '<|end|>' → logprob: -6.52208137512207
    5. '                            ' → logprob: -7.02208137512207
    6. ' ' → logprob: -7.02208137512207
    7. ' if' → logprob: -8.52208137512207
    8. '	                       ' → logprob: -8.77208137512207
    9. '                        ' → logprob: -9.39708137512207
    10. '                            
' → logprob: -9.89708137512207

Token 876: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6278804540634155
    2. '                               ' → logprob: -0.8778804540634155
    3. ' if' → logprob: -3.252880573272705
    4. '                           ' → logprob: -4.752880573272705
    5. '   ' → logprob: -6.002880573272705
    6. ' ' → logprob: -8.252880096435547
    7. '                             ' → logprob: -9.377880096435547
    8. 'r' → logprob: -9.502880096435547
    9. '                       ' → logprob: -9.627880096435547
    10. 'x' → logprob: -10.002880096435547

Token 877: ' uf' (ID: 35772)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006635877070948482
    2. 'uf' → logprob: -7.750663757324219
    3. ' i' → logprob: -8.875663757324219
    4. 'e' → logprob: -10.625663757324219
    5. '(i' → logprob: -10.625663757324219
    6. 'j' → logprob: -11.000663757324219
    7. 'dist' → logprob: -11.625663757324219
    8. '   ' → logprob: -11.625663757324219
    9. '
' → logprob: -13.250663757324219
    10. 'u' → logprob: -13.750663757324219

Token 878: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.4672766625881195
    2. 'ary' → logprob: -1.717276692390442
    3. '[i' → logprob: -2.3422765731811523
    4. 'i' → logprob: -2.7172765731811523
    5. 'merge' → logprob: -3.7172765731811523
    6. 'ar' → logprob: -5.342276573181152
    7. 'ari' → logprob: -7.592276573181152
    8. '[root' → logprob: -8.217276573181152
    9. 'array' → logprob: -8.342276573181152
    10. 'aryl' → logprob: -8.467276573181152

Token 879: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1994775377388578e-05
    2. '(j' → logprob: -11.375012397766113
    3. 'i' → logprob: -15.500012397766113
    4. '[i' → logprob: -15.500012397766113
    5. 'j' → logprob: -17.375011444091797
    6. '(' → logprob: -18.625011444091797
    7. '(
' → logprob: -18.875011444091797
    8. '```' → logprob: -19.125011444091797
    9. ',i' → logprob: -20.000011444091797
    10. '=i' → logprob: -20.000011444091797

Token 880: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32705506682395935
    2. '!=' → logprob: -1.7020550966262817
    3. ')==' → logprob: -3.452054977416992
    4. ')!=' → logprob: -3.452054977416992
    5. ')' → logprob: -3.827054977416992
    6. ']==' → logprob: -5.077054977416992
    7. '()!=' → logprob: -6.577054977416992
    8. ']!=' → logprob: -6.702054977416992
    9. ' !=' → logprob: -6.827054977416992
    10. ' ==' → logprob: -7.077054977416992

Token 881: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0010487660765647888
    2. ' uf' → logprob: -6.876048564910889
    3. '                           ' → logprob: -12.501049041748047
    4. '                   ' → logprob: -13.001049041748047
    5. '                               ' → logprob: -13.126049041748047
    6. '               ' → logprob: -13.251049041748047
    7. '   ' → logprob: -13.251049041748047
    8. '                       ' → logprob: -14.001049041748047
    9. '                                   ' → logprob: -14.876049041748047
    10. '                                       ' → logprob: -15.001049041748047

Token 882: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.5577775128767826e-06
    2. 'r' → logprob: -13.375005722045898
    3. '
' → logprob: -14.250005722045898
    4. 'None' → logprob: -14.500005722045898
    5. 'j' → logprob: -14.625005722045898
    6. 'uf' → logprob: -14.750005722045898
    7. 'i' → logprob: -15.250005722045898
    8. '[root' → logprob: -15.375005722045898
    9. '(root' → logprob: -15.625005722045898
    10. '   ' → logprob: -15.625005722045898

Token 883: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0060139987617731094
    2. 'j' → logprob: -5.131013870239258
    3. '(i' → logprob: -10.006013870239258
    4. '[j' → logprob: -10.506013870239258
    5. '(' → logprob: -13.006013870239258
    6. '                           ' → logprob: -13.256013870239258
    7. '```' → logprob: -13.381013870239258
    8. '                   ' → logprob: -13.506013870239258
    9. '	j' → logprob: -14.006013870239258
    10. ' (' → logprob: -14.131013870239258

Token 884: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16976583003997803
    2. ' or' → logprob: -3.0447659492492676
    3. '):
' → logprob: -3.5447659492492676
    4. '                               ' → logprob: -3.6697659492492676
    5. ')' → logprob: -4.044765949249268
    6. ':
' → logprob: -4.419765949249268
    7. ':' → logprob: -4.919765949249268
    8. '                           ' → logprob: -5.044765949249268
    9. 'and' → logprob: -5.544765949249268
    10. '):' → logprob: -5.794765949249268

Token 885: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.00023250321100931615
    2. ' and' → logprob: -9.375232696533203
    3. '                           ' → logprob: -9.500232696533203
    4. ' continue' → logprob: -11.250232696533203
    5. '                       ' → logprob: -12.000232696533203
    6. ':' → logprob: -12.000232696533203
    7. '               ' → logprob: -12.125232696533203
    8. '							' → logprob: -12.250232696533203
    9. '                                ' → logprob: -12.375232696533203
    10. '```' → logprob: -12.375232696533203

Token 886: ' continue' (ID: 4901)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06140764057636261
    2. 'continue' (adapté à ' continue') → logprob: -3.1864075660705566
    3. ' continue' → logprob: -4.311407566070557
    4. '                                   ' → logprob: -5.561407566070557
    5. '	continue' → logprob: -8.436408042907715
    6. '                           ' → logprob: -8.436408042907715
    7. '   ' → logprob: -8.561408042907715
    8. '               ' → logprob: -9.061408042907715
    9. '                   ' → logprob: -9.811408042907715
    10. '                                       ' → logprob: -9.936408042907715

Token 887: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5073264837265015
    2. '                               ' → logprob: -1.0073264837265015
    3. ' and' → logprob: -3.757326602935791
    4. ' if' → logprob: -6.257326602935791
    5. '                            ' → logprob: -6.632326602935791
    6. '                                   ' → logprob: -6.882326602935791
    7. '                       ' → logprob: -7.007326602935791
    8. '<|end|>' → logprob: -7.632326602935791
    9. '                             ' → logprob: -7.882326602935791
    10. ':
' → logprob: -7.882326602935791

Token 888: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.09303640574216843
    2. ' and' → logprob: -2.718036413192749
    3. '                           ' → logprob: -3.843036413192749
    4. '```' → logprob: -7.46803617477417
    5. '                                   ' → logprob: -8.468036651611328
    6. ' if' → logprob: -9.093036651611328
    7. '                            ' → logprob: -9.343036651611328
    8. 'and' → logprob: -9.468036651611328
    9. '                       ' → logprob: -9.593036651611328
    10. ' or' → logprob: -9.718036651611328

Token 889: ' df' (ID: 13742)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.8863404989242554
    2. '                           ' → logprob: -1.1363404989242554
    3. 'if' → logprob: -1.7613404989242554
    4. ' if' → logprob: -3.011340618133545
    5. 'dist' → logprob: -3.636340618133545
    6. 'cost' → logprob: -5.636340618133545
    7. 'd' → logprob: -5.761340618133545
    8. '                                   ' → logprob: -6.011340618133545
    9. ' dist' → logprob: -6.511340618133545
    10. '```' → logprob: -6.636340618133545

Token 890: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04006611183285713
    2. '=' → logprob: -3.6650660037994385
    3. 'ij' → logprob: -5.165066242218018
    4. 'i' → logprob: -5.415066242218018
    5. 'if' → logprob: -7.540066242218018
    6. 'ist' → logprob: -7.665066242218018
    7. 'val' → logprob: -7.790066242218018
    8. 'f' → logprob: -7.915066242218018
    9. 'iff' → logprob: -8.54006576538086
    10. 'is' → logprob: -8.66506576538086

Token 891: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004728091415017843
    2. '-dist' → logprob: -5.879728317260742
    3. '-' → logprob: -7.504728317260742
    4. ' dist' → logprob: -7.879728317260742
    5. 'max' → logprob: -8.129728317260742
    6. 'min' → logprob: -8.754728317260742
    7. '(dist' → logprob: -9.004728317260742
    8. 'dd' → logprob: -9.379728317260742
    9. 'abs' → logprob: -9.379728317260742
    10. 'e' → logprob: -9.629728317260742

Token 892: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3438327843905427e-05
    2. 'i' → logprob: -10.87502384185791
    3. '[' → logprob: -13.50002384185791
    4. '[j' → logprob: -14.50002384185791
    5. '[int' → logprob: -14.87502384185791
    6. '[x' → logprob: -14.87502384185791
    7. 'from' → logprob: -15.25002384185791
    8. '[u' → logprob: -15.87502384185791
    9. 's' → logprob: -16.000022888183594
    10. 'n' → logprob: -16.375022888183594

Token 893: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5259798765182495
    2. '[j' → logprob: -0.9009798765182495
    3. '[i' → logprob: -6.650979995727539
    4. '[' → logprob: -6.900979995727539
    5. '[k' → logprob: -8.400979995727539
    6. ']' → logprob: -9.400979995727539
    7. '[x' → logprob: -10.525979995727539
    8. 'j' → logprob: -10.775979995727539
    9. '```' → logprob: -10.900979995727539
    10. '[m' → logprob: -11.150979995727539

Token 894: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5776860184123507e-06
    2. ' j' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '
' → logprob: -15.00000286102295
    5. '```' → logprob: -15.75000286102295
    6. '
' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.000001907348633
    8. 'k' → logprob: -17.500001907348633
    9. '	j' → logprob: -17.500001907348633
    10. '  ' → logprob: -17.625001907348633

Token 895: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04622936248779297
    2. ']+' → logprob: -3.296229362487793
    3. '][' → logprob: -4.921229362487793
    4. '[j' → logprob: -8.171229362487793
    5. ']<' → logprob: -8.546229362487793
    6. 'j' → logprob: -8.671229362487793
    7. ']-' → logprob: -10.046229362487793
    8. ']>' → logprob: -10.546229362487793
    9. '1' → logprob: -10.921229362487793
    10. '+j' → logprob: -10.921229362487793

Token 896: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05812642723321915
    2. ' +' → logprob: -3.683126449584961
    3. '+j' → logprob: -3.683126449584961
    4. ']+' → logprob: -5.808126449584961
    5. ']' → logprob: -6.933126449584961
    6. '[j' → logprob: -7.308126449584961
    7. '[' → logprob: -7.558126449584961
    8. '+d' → logprob: -8.183126449584961
    9. '+k' → logprob: -8.308126449584961
    10. '[df' → logprob: -8.933126449584961

Token 897: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.240481914370321e-05
    2. ' dist' → logprob: -9.875052452087402
    3. '   ' → logprob: -16.000051498413086
    4. '                           ' → logprob: -16.000051498413086
    5. '	dist' → logprob: -16.000051498413086
    6. '                   ' → logprob: -16.125051498413086
    7. '1' → logprob: -16.250051498413086
    8. '(dist' → logprob: -16.375051498413086
    9. '               ' → logprob: -17.000051498413086
    10. '           ' → logprob: -17.000051498413086

Token 898: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0022619483061134815
    2. 'j' → logprob: -6.752262115478516
    3. '[i' → logprob: -7.252262115478516
    4. '[k' → logprob: -8.252262115478516
    5. '[' → logprob: -9.877262115478516
    6. '```' → logprob: -10.627262115478516
    7. '][' → logprob: -11.502262115478516
    8. '[x' → logprob: -12.002262115478516
    9. 'i' → logprob: -12.502262115478516
    10. '   ' → logprob: -12.877262115478516

Token 899: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00047297184937633574
    2. 'k' → logprob: -8.750473022460938
    3. '[j' → logprob: -9.000473022460938
    4. 'i' → logprob: -9.375473022460938
    5. '1' → logprob: -9.500473022460938
    6. 'x' → logprob: -11.875473022460938
    7. ' j' → logprob: -12.750473022460938
    8. 'last' → logprob: -12.750473022460938
    9. '[' → logprob: -12.875473022460938
    10. '
' → logprob: -13.125473022460938

Token 900: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02676999382674694
    2. '[j' → logprob: -3.6517698764801025
    3. '[k' → logprob: -9.026769638061523
    4. '[' → logprob: -9.526769638061523
    5. ''][' → logprob: -9.901769638061523
    6. ']' → logprob: -10.151769638061523
    7. '[i' → logprob: -10.151769638061523
    8. 'j' → logprob: -10.276769638061523
    9. '"][' → logprob: -10.401769638061523
    10. '   ' → logprob: -11.776769638061523

Token 901: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001443035143893212
    2. 'i' → logprob: -9.000144004821777
    3. ' j' → logprob: -11.500144004821777
    4. '   ' → logprob: -12.125144004821777
    5. 'k' → logprob: -13.750144004821777
    6. '```' → logprob: -14.625144004821777
    7. ' ' → logprob: -14.750144004821777
    8. '  ' → logprob: -14.875144004821777
    9. ']' → logprob: -15.000144004821777
    10. '[j' → logprob: -15.250144004821777

Token 902: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35280683636665344
    2. ']+' → logprob: -1.852806806564331
    3. '+' → logprob: -2.102806806564331
    4. '<|end|>' → logprob: -5.10280704498291
    5. ']>' → logprob: -5.22780704498291
    6. ' +' → logprob: -6.10280704498291
    7. ' ]' → logprob: -6.22780704498291
    8. ']>=' → logprob: -6.97780704498291
    9. ']<=' → logprob: -7.47780704498291
    10. ']-' → logprob: -8.35280704498291

Token 903: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3895593285560608
    2. ' +' → logprob: -1.639559268951416
    3. '                           ' → logprob: -2.389559268951416
    4. '<|end|>' → logprob: -3.514559268951416
    5. '                               ' → logprob: -6.514559268951416
    6. ' ' → logprob: -7.014559268951416
    7. '                            ' → logprob: -7.014559268951416
    8. '-' → logprob: -7.639559268951416
    9. '<|end|>' → logprob: -8.139559745788574
    10. ' -' → logprob: -8.264559745788574

Token 904: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0008280907059088349
    2. ' dist' → logprob: -7.500828266143799
    3. '(dist' → logprob: -8.37582778930664
    4. '2' → logprob: -11.25082778930664
    5. '   ' → logprob: -11.75082778930664
    6. '	dist' → logprob: -12.62582778930664
    7. '           ' → logprob: -12.62582778930664
    8. 'min' → logprob: -12.75082778930664
    9. 'dd' → logprob: -13.12582778930664
    10. '               ' → logprob: -13.50082778930664

Token 905: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.066919301403686e-05
    2. 'i' → logprob: -9.750090599060059
    3. '[j' → logprob: -10.500090599060059
    4. '[' → logprob: -12.500090599060059
    5. '```' → logprob: -15.375090599060059
    6. '   ' → logprob: -15.500090599060059
    7. '[k' → logprob: -16.125091552734375
    8. ' [' → logprob: -16.250091552734375
    9. '[x' → logprob: -16.750091552734375
    10. '[m' → logprob: -17.375091552734375

Token 906: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00031425125780515373
    2. '[' → logprob: -8.250314712524414
    3. ']' → logprob: -10.750314712524414
    4. ''][' → logprob: -11.625314712524414
    5. ' ][' → logprob: -11.750314712524414
    6. '"][' → logprob: -11.875314712524414
    7. ']][' → logprob: -13.125314712524414
    8. '[i' → logprob: -14.375314712524414
    9. '][]' → logprob: -14.812814712524414
    10. '-' → logprob: -14.937814712524414

Token 907: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.618001053633634e-05
    2. 'k' → logprob: -10.625025749206543
    3. ' j' → logprob: -13.875025749206543
    4. '[j' → logprob: -15.000025749206543
    5. '1' → logprob: -15.125025749206543
    6. ']' → logprob: -15.875025749206543
    7. 'x' → logprob: -16.12502670288086
    8. '0' → logprob: -16.50002670288086
    9. '   ' → logprob: -17.25002670288086
    10. '	j' → logprob: -17.50002670288086

Token 908: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18955513834953308
    2. ']>' → logprob: -2.4395551681518555
    3. '<|end|>' → logprob: -2.6895551681518555
    4. '                           ' → logprob: -5.0645551681518555
    5. ' ]' → logprob: -5.8145551681518555
    6. '+' → logprob: -6.0645551681518555
    7. ']>=' → logprob: -6.5645551681518555
    8. '<|end|>' → logprob: -7.1895551681518555
    9. '>' → logprob: -7.4395551681518555
    10. ']+' → logprob: -7.8145551681518555

Token 909: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.040949415415525436
    2. '<|end|>' → logprob: -3.5409493446350098
    3. '                               ' → logprob: -5.41594934463501
    4. ' if' → logprob: -6.54094934463501
    5. '                            ' → logprob: -6.66594934463501
    6. ' ' → logprob: -7.29094934463501
    7. ' and' → logprob: -7.29094934463501
    8. '<|end|>' → logprob: -7.54094934463501
    9. '                       ' → logprob: -7.79094934463501
    10. '           ' → logprob: -8.415949821472168

Token 910: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02093176729977131
    2. 'if' (adapté à ' if') → logprob: -4.520931720733643
    3. ' if' → logprob: -5.270931720733643
    4. '                               ' → logprob: -5.520931720733643
    5. '                            ' → logprob: -8.7709321975708
    6. '<|end|>' → logprob: -9.6459321975708
    7. '                       ' → logprob: -9.7709321975708
    8. '           ' → logprob: -9.8959321975708
    9. '   ' → logprob: -10.0209321975708
    10. ' ' → logprob: -10.0209321975708

Token 911: ' df' (ID: 13742)
  Prédit: 'df'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.007324297912418842
    2. ' df' → logprob: -5.00732421875
    3. 'mx' → logprob: -8.00732421875
    4. '(df' → logprob: -8.25732421875
    5. '	df' → logprob: -12.50732421875
    6. ' mx' → logprob: -12.88232421875
    7. '(' → logprob: -12.88232421875
    8. '   ' → logprob: -13.38232421875
    9. '(mx' → logprob: -13.88232421875
    10. ' (' → logprob: -14.00732421875

Token 912: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03807179257273674
    2. ' >' → logprob: -3.288071870803833
    3. '<' → logprob: -11.413071632385254
    4. '>
' → logprob: -12.163071632385254
    5. '>=' → logprob: -12.663071632385254
    6. '[' → logprob: -13.413071632385254
    7. '>x' → logprob: -14.038071632385254
    8. '>

' → logprob: -14.163071632385254
    9. ' <' → logprob: -14.288071632385254
    10. ' ' → logprob: -14.413071632385254

Token 913: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.00011355629976605996
    2. ' mx' → logprob: -9.250113487243652
    3. 'max' → logprob: -11.000113487243652
    4. '                           ' → logprob: -15.500113487243652
    5. '0' → logprob: -16.12511444091797
    6. '                       ' → logprob: -16.50011444091797
    7. '(mx' → logprob: -16.75011444091797
    8. '                   ' → logprob: -16.87511444091797
    9. 'mv' → logprob: -17.25011444091797
    10. '.mx' → logprob: -17.50011444091797

Token 914: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14994201064109802
    2. ':' → logprob: -2.399941921234131
    3. '                               ' → logprob: -3.399941921234131
    4. '                           ' → logprob: -5.399941921234131
    5. ' and' → logprob: -5.399941921234131
    6. '               ' → logprob: -6.899941921234131
    7. 'mx' → logprob: -6.899941921234131
    8. '                       ' → logprob: -6.899941921234131
    9. ' :
' → logprob: -7.399941921234131
    10. '+' → logprob: -8.024942398071289

Token 915: '                               ' (ID: 2419)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7016273140907288
    2. '                               ' → logprob: -0.7016273140907288
    3. '                       ' → logprob: -5.451627254486084
    4. '```' → logprob: -6.951627254486084
    5. '                            ' → logprob: -7.701627254486084
    6. '<|end|>' → logprob: -7.826627254486084
    7. '                                   ' → logprob: -7.826627254486084
    8. '                             ' → logprob: -8.326627731323242
    9. '               ' → logprob: -8.326627731323242
    10. ' ' → logprob: -8.451627731323242

Token 916: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' (adapté à ' mx') → logprob: -0.0005753128207288682
    2. ' mx' → logprob: -8.000575065612793
    3. '                               ' → logprob: -8.500575065612793
    4. '                           ' → logprob: -11.000575065612793
    5. 'm' → logprob: -11.375575065612793
    6. 'df' → logprob: -12.625575065612793
    7. '(mx' → logprob: -13.125575065612793
    8. '                                   ' → logprob: -14.250575065612793
    9. 'max' → logprob: -14.875575065612793
    10. '                             ' → logprob: -15.125575065612793

Token 917: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0041463072411715984
    2. ' =' → logprob: -5.504146099090576
    3. ',' → logprob: -10.504146575927734
    4. '=df' → logprob: -11.129146575927734
    5. '=i' → logprob: -11.379146575927734
    6. '=j' → logprob: -13.129146575927734
    7. '=
' → logprob: -13.379146575927734
    8. '=m' → logprob: -13.504146575927734
    9. '=-' → logprob: -13.504146575927734
    10. '=max' → logprob: -13.629146575927734

Token 918: ' df' (ID: 13742)
  Prédit: 'df'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -9.014684110297821e-06
    2. ' df' → logprob: -11.625008583068848
    3. '	df' → logprob: -17.250009536743164
    4. '   ' → logprob: -17.500009536743164
    5. '(df' → logprob: -18.375009536743164
    6. 'dfs' → logprob: -19.000009536743164
    7. '[df' → logprob: -20.000009536743164
    8. 'd' → logprob: -20.375009536743164
    9. ' ' → logprob: -20.500009536743164
    10. '_df' → logprob: -20.500009536743164

Token 919: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8280249238014221
    2. '                               ' → logprob: -1.4530248641967773
    3. '                           ' → logprob: -1.4530248641967773
    4. '<|end|>' → logprob: -2.5780248641967773
    5. '                            ' → logprob: -6.203024864196777
    6. ',
' → logprob: -6.203024864196777
    7. '                            
' → logprob: -6.828024864196777
    8. '                                   ' → logprob: -6.828024864196777
    9. '                                
' → logprob: -6.828024864196777
    10. '.' → logprob: -6.953024864196777

Token 920: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5824413299560547
    2. ',' → logprob: -0.9574413299560547
    3. '                           ' → logprob: -3.9574413299560547
    4. '<|end|>' → logprob: -3.9574413299560547
    5. ' ' → logprob: -5.582441329956055
    6. '               ' → logprob: -6.082441329956055
    7. ')' → logprob: -6.332441329956055
    8. '                       ' → logprob: -6.457441329956055
    9. ' ,' → logprob: -6.582441329956055
    10. '                                ' → logprob: -7.082441329956055

Token 921: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020306356600485742
    2. ' i' → logprob: -9.000203132629395
    3. 'm' (adapté à ' m') → logprob: -9.500203132629395
    4. '   ' → logprob: -13.750203132629395
    5. 'mx' → logprob: -13.750203132629395
    6. '                           ' → logprob: -13.875203132629395
    7. '(i' → logprob: -14.000203132629395
    8. '	i' → logprob: -15.250203132629395
    9. '                               ' → logprob: -15.500203132629395
    10. 'ij' → logprob: -16.500202178955078

Token 922: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.001660781679674983
    2. 'i' → logprob: -6.7516608238220215
    3. 'x' → logprob: -7.6266608238220215
    4. 'n' → logprob: -14.501660346984863
    5. '=' → logprob: -14.501660346984863
    6. 'j' → logprob: -14.751660346984863
    7. 'a' → logprob: -15.501660346984863
    8. 'm' → logprob: -15.626660346984863
    9. '
' → logprob: -15.751660346984863
    10. '   ' → logprob: -16.12666130065918

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12139520049095154
    2. ' =' → logprob: -2.6213951110839844
    3. '=i' → logprob: -3.2463951110839844
    4. 'i' → logprob: -5.996395111083984
    5. ',' → logprob: -8.871395111083984
    6. ',i' → logprob: -9.746395111083984
    7. ' i' → logprob: -11.746395111083984
    8. '=j' → logprob: -13.496395111083984
    9. '<|end|>' → logprob: -13.621395111083984
    10. 'j' → logprob: -14.371395111083984

Token 924: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.856408536899835e-05
    2. ' i' → logprob: -10.500028610229492
    3. '(i' → logprob: -13.875028610229492
    4. 'j' → logprob: -17.625028610229492
    5. '	i' → logprob: -17.625028610229492
    6. ' (' → logprob: -18.000028610229492
    7. '{i' → logprob: -18.875028610229492
    8. '   ' → logprob: -19.000028610229492
    9. '[i' → logprob: -19.375028610229492
    10. ')i' → logprob: -20.000028610229492

Token 925: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4393056631088257
    2. '<|end|>' → logprob: -1.0643056631088257
    3. ',' → logprob: -5.189305782318115
    4. '                           ' → logprob: -6.939305782318115
    5. ',j' → logprob: -7.064305782318115
    6. '                                
' → logprob: -7.689305782318115
    7. '							' → logprob: -7.814305782318115
    8. '                                ' → logprob: -7.939305782318115
    9. '<|end|>' → logprob: -8.064305305480957
    10. ')' → logprob: -8.439305305480957

Token 926: '                               ' (ID: 2419)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 927: ' mx' (ID: 28004)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.8232690460281447e-05
    2. 'mj' → logprob: -10.125048637390137
    3. 'm' → logprob: -12.375048637390137
    4. 'mx' (adapté à ' mx') → logprob: -12.875048637390137
    5. ' j' → logprob: -14.375048637390137
    6. '   ' → logprob: -15.000048637390137
    7. 'jx' → logprob: -15.500048637390137
    8. '                           ' → logprob: -16.00004768371582
    9. '                       ' → logprob: -16.50004768371582
    10. '$j' → logprob: -17.00004768371582

Token 928: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00017016702622640878
    2. '<|end|>' → logprob: -8.87516975402832
    3. '=' → logprob: -11.12516975402832
    4. '=j' → logprob: -11.62516975402832
    5. ' j' → logprob: -13.12516975402832
    6. ' =' → logprob: -13.62516975402832
    7. '```' → logprob: -14.50016975402832
    8. '[j' → logprob: -14.87516975402832
    9. 'x' → logprob: -15.00016975402832
    10. '   ' → logprob: -15.12516975402832

Token 929: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.812595009803772
    2. ' =' → logprob: -0.812595009803772
    3. 'j' → logprob: -2.6875948905944824
    4. ' j' → logprob: -3.5625948905944824
    5. '=j' → logprob: -4.312594890594482
    6. '                               ' → logprob: -7.187594890594482
    7. ',j' → logprob: -7.312594890594482
    8. ',' → logprob: -7.312594890594482
    9. '<|end|>' → logprob: -8.31259536743164
    10. '                           ' → logprob: -8.43759536743164

Token 930: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.506661833962426e-05
    2. ' j' → logprob: -9.37508487701416
    3. '	j' → logprob: -16.125085830688477
    4. '   ' → logprob: -17.125085830688477
    5. '$j' → logprob: -18.250085830688477
    6. '[j' → logprob: -20.750085830688477
    7. '                   ' → logprob: -20.875085830688477
    8. ',j' → logprob: -21.125085830688477
    9. '_j' → logprob: -21.125085830688477
    10. ':j' → logprob: -21.250085830688477

Token 931: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 932: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2085590958595276
    2. '                   ' → logprob: -1.7085590362548828
    3. '                               ' → logprob: -5.083559036254883
    4. '                           ' → logprob: -7.583559036254883
    5. '           ' → logprob: -8.708559036254883
    6. '                       ' → logprob: -8.958559036254883
    7. '```' → logprob: -10.583559036254883
    8. '                ' → logprob: -11.083559036254883
    9. '                                
' → logprob: -11.458559036254883
    10. ')' → logprob: -11.458559036254883

Token 933: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0268645286560059
    2. '                   ' → logprob: -1.0268645286560059
    3. 'uf' → logprob: -1.2768645286560059
    4. ' uf' → logprob: -5.776864528656006
    5. '                           ' → logprob: -7.276864528656006
    6. 'if' → logprob: -8.151865005493164
    7. '                       ' → logprob: -8.151865005493164
    8. '                               ' → logprob: -8.651865005493164
    9. '           ' → logprob: -9.026865005493164
    10. '   ' → logprob: -10.276865005493164

Token 934: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.034813690930604935
    2. 'm' → logprob: -4.28481388092041
    3. ' =' → logprob: -4.90981388092041
    4. '=' → logprob: -5.15981388092041
    5. ',' → logprob: -5.28481388092041
    6. 'n' → logprob: -6.53481388092041
    7. 'mp' → logprob: -9.03481388092041
    8. '=m' → logprob: -9.28481388092041
    9. ',m' → logprob: -9.40981388092041
    10. '   ' → logprob: -9.65981388092041

Token 935: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00020652047533076257
    2. ' m' → logprob: -8.75020694732666
    3. 'mx' → logprob: -10.00020694732666
    4. '	m' → logprob: -13.87520694732666
    5. ' mx' → logprob: -14.87520694732666
    6. '   ' → logprob: -14.87520694732666
    7. ' ' → logprob: -15.12520694732666
    8. '  ' → logprob: -15.87520694732666
    9. 'n' → logprob: -16.125205993652344
    10. 'e' → logprob: -16.500205993652344

Token 936: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.0004969134461134672
    2. 'n' → logprob: -7.750496864318848
    3. 'i' → logprob: -10.500496864318848
    4. 'm' → logprob: -11.375496864318848
    5. '=' → logprob: -11.500496864318848
    6. 'x' → logprob: -12.125496864318848
    7. '   ' → logprob: -12.500496864318848
    8. '
' → logprob: -14.250496864318848
    9. 'nx' → logprob: -14.500496864318848
    10. ' =' → logprob: -14.500496864318848

Token 937: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009747094009071589
    2. 'j' → logprob: -7.125974655151367
    3. '               ' → logprob: -9.875974655151367
    4. '   ' → logprob: -10.125974655151367
    5. '           ' → logprob: -10.625974655151367
    6. ',j' → logprob: -11.250974655151367
    7. '                       ' → logprob: -11.375974655151367
    8. '                           ' → logprob: -12.875974655151367
    9. ';j' → logprob: -12.875974655151367
    10. ' j' → logprob: -13.000974655151367

Token 938: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003533559152856469
    2. '```' → logprob: -6.378533363342285
    3. '               ' → logprob: -7.878533363342285
    4. '                           ' → logprob: -8.003533363342285
    5. '           ' → logprob: -8.128533363342285
    6. 'j' → logprob: -8.628533363342285
    7. 'for' → logprob: -9.003533363342285
    8. '   ' → logprob: -9.253533363342285
    9. '                    
' → logprob: -9.378533363342285
    10. '<|end|>' → logprob: -9.878533363342285

Token 939: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -8.2994620242971e-06
    2. '                   ' → logprob: -12.000008583068848
    3. 'if' → logprob: -13.750008583068848
    4. ' j' → logprob: -14.500008583068848
    5. '               ' → logprob: -15.750008583068848
    6. 'jf' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.75000762939453
    8. '                       ' → logprob: -17.25000762939453
    9. 'for' → logprob: -17.62500762939453
    10. '                           ' → logprob: -17.87500762939453

Token 940: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4793797433376312
    2. '=' → logprob: -0.9793797731399536
    3. 'mx' → logprob: -6.604379653930664
    4. ',' → logprob: -6.604379653930664
    5. '<|end|>' → logprob: -6.854379653930664
    6. '=j' → logprob: -7.104379653930664
    7. ' mx' → logprob: -9.104379653930664
    8. '(mx' → logprob: -9.104379653930664
    9. ',j' → logprob: -9.354379653930664
    10. '[j' → logprob: -10.229379653930664

Token 941: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.0007102862582542002
    2. ' mx' → logprob: -7.250710487365723
    3. 'mj' → logprob: -15.875710487365723
    4. '(mx' → logprob: -15.875710487365723
    5. '.mx' → logprob: -17.500709533691406
    6. '   ' → logprob: -17.875709533691406
    7. ' ' → logprob: -18.375709533691406
    8. 'm' → logprob: -18.625709533691406
    9. 'MX' → logprob: -19.000709533691406
    10. 'max' → logprob: -19.125709533691406

Token 942: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0017396744806319475
    2. 'x' → logprob: -6.376739501953125
    3. 'i' → logprob: -10.876739501953125
    4. 'mj' → logprob: -11.501739501953125
    5. 'jx' → logprob: -12.126739501953125
    6. 'xi' → logprob: -13.501739501953125
    7. 'mx' → logprob: -14.251739501953125
    8. 'jax' → logprob: -15.126739501953125
    9. 'sj' → logprob: -15.376739501953125
    10. 'ij' → logprob: -16.126739501953125

Token 943: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006619804538786411
    2. 'uf' → logprob: -5.631619930267334
    3. ' uf' → logprob: -6.506619930267334
    4. '               ' → logprob: -6.631619930267334
    5. '           ' → logprob: -9.756619453430176
    6. '                    
' → logprob: -10.631619453430176
    7. 'if' → logprob: -10.881619453430176
    8. '   ' → logprob: -11.256619453430176
    9. ',' → logprob: -11.506619453430176
    10. '                       ' → logprob: -11.631619453430176

Token 944: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1460369974374771
    2. 'uf' → logprob: -2.3960371017456055
    3. '               ' → logprob: -3.6460371017456055
    4. ' uf' → logprob: -4.3960371017456055
    5. '```' → logprob: -5.2710371017456055
    6. '           ' → logprob: -7.6460371017456055
    7. '   ' → logprob: -8.146037101745605
    8. '                       ' → logprob: -9.146037101745605
    9. '``' → logprob: -9.271037101745605
    10. '                    
' → logprob: -10.146037101745605

Token 945: ' e' (ID: 319)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.017018470913171768
    2. ' uf' → logprob: -4.6420183181762695
    3. '               ' → logprob: -5.6420183181762695
    4. 'if' → logprob: -6.0170183181762695
    5. '                   ' → logprob: -7.1420183181762695
    6. 'for' → logprob: -8.76701831817627
    7. '   ' → logprob: -8.89201831817627
    8. 'df' → logprob: -11.01701831817627
    9. '           ' → logprob: -11.01701831817627
    10. 'u' → logprob: -11.39201831817627

Token 946: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013357517309486866
    2. '[m' → logprob: -9.125133514404297
    3. '[j' → logprob: -10.625133514404297
    4. '[e' → logprob: -16.000133514404297
    5. 'i' → logprob: -16.625133514404297
    6. '.setdefault' → logprob: -17.125133514404297
    7. '[' → logprob: -17.500133514404297
    8. 'm' → logprob: -17.750133514404297
    9. '
' → logprob: -18.750133514404297
    10. '[x' → logprob: -19.750133514404297

Token 947: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.246537173457909e-06
    2. '.append' → logprob: -13.000003814697266
    3. ']' → logprob: -13.750003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '[i' → logprob: -16.000003814697266
    6. ''].' → logprob: -16.000003814697266
    7. ' ].' → logprob: -16.125003814697266
    8. '           ' → logprob: -16.500003814697266
    9. '"].' → logprob: -16.875003814697266
    10. '                   ' → logprob: -16.875003814697266

Token 948: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. '.append' → logprob: -13.875001907348633
    3. 'remove' → logprob: -15.500001907348633
    4. ' append' → logprob: -15.625001907348633
    5. 'pop' → logprob: -17.625001907348633
    6. 'app' → logprob: -17.625001907348633
    7. 'appen' → logprob: -19.000001907348633
    8. 'insert' → logprob: -19.625001907348633
    9. '	append' → logprob: -19.625001907348633
    10. '_append' → logprob: -19.750001907348633

Token 949: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.38700544834136963
    2. 'j' → logprob: -1.1370054483413696
    3. '((' → logprob: -9.137005805969238
    4. '(' → logprob: -11.137005805969238
    5. '(mx' → logprob: -12.512005805969238
    6. ' j' → logprob: -13.012005805969238
    7. '(m' → logprob: -13.137005805969238
    8. '[j' → logprob: -13.887005805969238
    9. '(i' → logprob: -14.137005805969238
    10. '	j' → logprob: -14.262005805969238

Token 950: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22569984197616577
    2. ')' → logprob: -1.6006999015808105
    3. ')
' → logprob: -8.725699424743652
    4. '                   ' → logprob: -9.350699424743652
    5. ' )
' → logprob: -10.725699424743652
    6. ' )' → logprob: -12.475699424743652
    7. ')

' → logprob: -12.725699424743652
    8. '               ' → logprob: -13.850699424743652
    9. '())
' → logprob: -13.850699424743652
    10. '                       ' → logprob: -13.975699424743652

Token 951: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004598631348926574
    2. 'e' → logprob: -7.875459671020508
    3. '               ' → logprob: -10.000459671020508
    4. '           ' → logprob: -11.250459671020508
    5. '```' → logprob: -12.000459671020508
    6. 'es' → logprob: -13.250459671020508
    7. ',' → logprob: -13.375459671020508
    8. ' and' → logprob: -13.375459671020508
    9. ' e' → logprob: -13.625459671020508
    10. '   ' → logprob: -13.750459671020508

Token 952: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.004165537189692259
    2. '                   ' → logprob: -5.5041656494140625
    3. '   ' → logprob: -10.254165649414062
    4. 'i' → logprob: -10.629165649414062
    5. ' e' → logprob: -11.254165649414062
    6. '               ' → logprob: -12.379165649414062
    7. '	e' → logprob: -13.254165649414062
    8. '                       ' → logprob: -14.004165649414062
    9. '           ' → logprob: -14.254165649414062
    10. 'ei' → logprob: -14.254165649414062

Token 953: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05792553350329399
    2. '[j' → logprob: -2.9329254627227783
    3. '].' → logprob: -6.807925701141357
    4. '][' → logprob: -6.932925701141357
    5. ']' → logprob: -8.0579252243042
    6. '[' → logprob: -9.0579252243042
    7. '[m' → logprob: -9.0579252243042
    8. '[e' → logprob: -9.1829252243042
    9. 'i' → logprob: -9.5579252243042
    10. '[x' → logprob: -9.8079252243042

Token 954: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.3438327843905427e-05
    2. ').' → logprob: -11.25002384185791
    3. '.append' → logprob: -12.25002384185791
    4. ']' → logprob: -12.62502384185791
    5. '[i' → logprob: -13.87502384185791
    6. '.' → logprob: -14.62502384185791
    7. ' ].' → logprob: -15.37502384185791
    8. '   ' → logprob: -16.000022888183594
    9. ''].' → logprob: -16.250022888183594
    10. '           ' → logprob: -16.375022888183594

Token 955: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.246537173457909e-06
    2. '.append' → logprob: -12.750003814697266
    3. 'app' → logprob: -13.875003814697266
    4. ' append' → logprob: -15.375003814697266
    5. 'i' → logprob: -16.125003814697266
    6. 'Append' → logprob: -17.250003814697266
    7. 'add' → logprob: -17.375003814697266
    8. 'appen' → logprob: -17.500003814697266
    9. '(i' → logprob: -18.000003814697266
    10. '_append' → logprob: -18.250003814697266

Token 956: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00015908108616713434
    2. 'i' → logprob: -8.75015926361084
    3. '(' → logprob: -14.75015926361084
    4. '```' → logprob: -16.875158309936523
    5. '[i' → logprob: -17.250158309936523
    6. '(I' → logprob: -17.875158309936523
    7. '   ' → logprob: -18.375158309936523
    8. '(
' → logprob: -18.375158309936523
    9. ' (' → logprob: -19.125158309936523
    10. ' i' → logprob: -19.250158309936523

Token 957: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006439301068894565
    2. '<|end|>' → logprob: -7.375643730163574
    3. ')
' → logprob: -11.250643730163574
    4. ')return' → logprob: -13.500643730163574
    5. '                   ' → logprob: -14.250643730163574
    6. '<|end|>' → logprob: -14.875643730163574
    7. '```' → logprob: -15.000643730163574
    8. ')#' → logprob: -15.375643730163574
    9. '),' → logprob: -15.375643730163574
    10. ' )' → logprob: -15.625643730163574

Token 958: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.00016480287013109773
    2. '               ' → logprob: -9.250164985656738
    3. '                   ' → logprob: -10.125164985656738
    4. ' uf' → logprob: -10.500164985656738
    5. '   ' → logprob: -14.875164985656738
    6. '                       ' → logprob: -16.000164031982422
    7. '           ' → logprob: -16.000164031982422
    8. '                           ' → logprob: -16.625164031982422
    9. '```' → logprob: -16.625164031982422
    10. 'if' → logprob: -16.750164031982422

Token 960: 'merge' (ID: 25492)
  Prédit: 'merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -4.723352049040841e-06
    2. 'root' → logprob: -12.375004768371582
    3. '.merge' → logprob: -15.750004768371582
    4. 'union' → logprob: -16.250003814697266
    5. '```' → logprob: -16.875003814697266
    6. ' merge' → logprob: -17.000003814697266
    7. 'i' → logprob: -17.500003814697266
    8. '_merge' → logprob: -17.875003814697266
    9. '
' → logprob: -18.000003814697266
    10. 'ary' → logprob: -18.125003814697266

Token 961: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. '(m' → logprob: -16.375
    4. ' (' → logprob: -18.5
    5. '(
' → logprob: -18.75
    6. '(I' → logprob: -19.5
    7. 'i' → logprob: -20.375
    8. '(ii' → logprob: -20.875
    9. '[i' → logprob: -21.125
    10. '(max' → logprob: -21.25

Token 962: ',j' (ID: 22712)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4138386845588684
    2. ',i' → logprob: -1.6638386249542236
    3. ',' → logprob: -1.9138386249542236
    4. 'i' → logprob: -6.788838863372803
    5. ',j' → logprob: -7.163838863372803
    6. ' ,' → logprob: -10.913838386535645
    7. 'j' → logprob: -11.163838386535645
    8. ' i' → logprob: -11.538838386535645
    9. '(j' → logprob: -11.788838386535645
    10. '(' → logprob: -11.913838386535645

Token 963: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003769303730223328
    2. '<|end|>' → logprob: -8.00037670135498
    3. '())' → logprob: -11.12537670135498
    4. ')
' → logprob: -11.37537670135498
    5. ')return' → logprob: -12.00037670135498
    6. '()' → logprob: -12.37537670135498
    7. '<|end|>' → logprob: -13.25037670135498
    8. '```' → logprob: -14.50037670135498
    9. '')' → logprob: -14.62537670135498
    10. '")' → logprob: -14.75037670135498

Token 964: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9179641604423523
    2. 'work' → logprob: -1.417964220046997
    3. 'for' → logprob: -1.667964220046997
    4. '<|end|>' → logprob: -3.167964220046997
    5. 'print' → logprob: -3.792964220046997
    6. 'while' → logprob: -4.042963981628418
    7. 'if' → logprob: -4.292963981628418
    8. '   ' → logprob: -4.667963981628418
    9. '               ' → logprob: -4.667963981628418
    10. '                   ' → logprob: -4.917963981628418

Token 965: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 966: ' len' (ID: 4631)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.9243751764297485
    2. 'len' → logprob: -1.0493751764297485
    3. 'DBG' → logprob: -2.674375057220459
    4. 'uf' → logprob: -2.924375057220459
    5. ' mx' → logprob: -3.424375057220459
    6. ' len' → logprob: -4.299375057220459
    7. 'not' → logprob: -4.299375057220459
    8. 'prob' → logprob: -4.799375057220459
    9. 'False' → logprob: -4.924375057220459
    10. 'i' → logprob: -5.049375057220459

Token 967: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.033200453966856
    2. 'work' → logprob: -4.408200263977051
    3. '(work' → logprob: -4.783200263977051
    4. 'e' → logprob: -5.533200263977051
    5. '(p' → logprob: -5.533200263977051
    6. '(vis' → logprob: -6.408200263977051
    7. '(es' → logprob: -7.158200263977051
    8. '(' → logprob: -7.283200263977051
    9. 'es' → logprob: -7.533200263977051
    10. '(v' → logprob: -8.40820026397705

Token 968: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005554605275392532
    2. '[m' → logprob: -5.380554676055908
    3. '[e' → logprob: -7.505554676055908
    4. '[j' → logprob: -8.00555419921875
    5. '[' → logprob: -11.00555419921875
    6. 'i' → logprob: -11.88055419921875
    7. ')' → logprob: -12.25555419921875
    8. '[x' → logprob: -12.38055419921875
    9. '[v' → logprob: -12.38055419921875
    10. 'e' → logprob: -12.50555419921875

Token 969: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.464347173576243e-05
    2. '])' → logprob: -11.00003433227539
    3. '[j' → logprob: -12.50003433227539
    4. '[' → logprob: -12.62503433227539
    5. '][' → logprob: -12.75003433227539
    6. ']' → logprob: -12.87503433227539
    7. ')' → logprob: -13.00003433227539
    8. ']==' → logprob: -13.87503433227539
    9. ']>' → logprob: -14.37503433227539
    10. '[e' → logprob: -15.50003433227539

Token 970: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1616486310958862
    2. '==' → logprob: -1.5366486310958862
    3. '>=' → logprob: -1.6616486310958862
    4. ' <' → logprob: -1.9116486310958862
    5. ' ==' → logprob: -2.911648750305176
    6. ' >=' → logprob: -3.036648750305176
    7. '<|end|>' → logprob: -4.036648750305176
    8. '>' → logprob: -4.536648750305176
    9. ' >' → logprob: -6.411648750305176
    10. '<=' → logprob: -7.786648750305176

Token 971: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18829882144927979
    2. '3' → logprob: -2.3132987022399902
    3. '1' → logprob: -3.6882987022399902
    4. 'MAX' → logprob: -3.8132987022399902
    5. '4' → logprob: -4.31329870223999
    6. '0' → logprob: -4.93829870223999
    7. '5' → logprob: -6.43829870223999
    8. '20' → logprob: -7.81329870223999
    9. '10' → logprob: -7.93829870223999
    10. '11' → logprob: -7.93829870223999

Token 972: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11786217987537384
    2. ':
' → logprob: -2.4928622245788574
    3. ' and' → logprob: -3.9928622245788574
    4. '       ' → logprob: -6.117862224578857
    5. 'and' → logprob: -6.367862224578857
    6. '           ' → logprob: -6.992862224578857
    7. '                       ' → logprob: -6.992862224578857
    8. '<|end|>' → logprob: -6.992862224578857
    9. '               ' → logprob: -7.492862224578857
    10. '                           ' → logprob: -7.742862224578857

Token 973: '                       ' (ID: 968)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.684429943561554
    2. 'continue' → logprob: -1.4344298839569092
    3. '                       ' → logprob: -1.9344298839569092
    4. '                               ' → logprob: -2.809429883956909
    5. '                   ' → logprob: -3.684429883956909
    6. '                           ' → logprob: -4.934430122375488
    7. '       ' → logprob: -4.934430122375488
    8. '               ' → logprob: -5.309430122375488
    9. '	continue' → logprob: -6.184430122375488
    10. '   ' → logprob: -6.434430122375488

Token 974: ' f' (ID: 285)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2772556245326996
    2. 'e' → logprob: -2.1522555351257324
    3. 'continue' → logprob: -3.5272555351257324
    4. '                   ' → logprob: -3.6522555351257324
    5. 'print' → logprob: -3.9022555351257324
    6. 'del' → logprob: -4.527255535125732
    7. ' break' → logprob: -4.652255535125732
    8. 'work' → logprob: -5.152255535125732
    9. 'exit' → logprob: -5.152255535125732
    10. '   ' → logprob: -5.402255535125732

Token 975: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008588159107603133
    2. '[j' → logprob: -7.625858783721924
    3. ' =' → logprob: -9.375859260559082
    4. '=' → logprob: -9.750859260559082
    5. '[e' → logprob: -10.375859260559082
    6. 'e' → logprob: -10.500859260559082
    7. 'i' → logprob: -10.625859260559082
    8. '[' → logprob: -10.750859260559082
    9. 'None' → logprob: -10.750859260559082
    10. 'print' → logprob: -10.750859260559082

Token 976: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.867260217666626
    2. ']+=' → logprob: -0.992260217666626
    3. '+=' → logprob: -1.992260217666626
    4. ']=' → logprob: -3.367260217666626
    5. '=' → logprob: -3.492260217666626
    6. ']==' → logprob: -5.867259979248047
    7. ' +=' → logprob: -6.367259979248047
    8. '.append' → logprob: -6.867259979248047
    9. ' =' → logprob: -7.242259979248047
    10. '].' → logprob: -7.367259979248047

Token 977: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018934087827801704
    2. ' =' → logprob: -4.26893424987793
    3. '+=' → logprob: -5.76893424987793
    4. '.append' → logprob: -7.01893424987793
    5. '=True' → logprob: -7.39393424987793
    6. '=False' → logprob: -10.26893424987793
    7. ' +=' → logprob: -10.76893424987793
    8. '=-' → logprob: -10.76893424987793
    9. ',' → logprob: -11.39393424987793
    10. '=[]' → logprob: -11.64393424987793

Token 978: ' e' (ID: 319)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7684271931648254
    2. '1' → logprob: -1.6434271335601807
    3. 'i' → logprob: -2.0184271335601807
    4. 'j' → logprob: -2.2684271335601807
    5. 'e' → logprob: -3.2684271335601807
    6. 'False' → logprob: -3.6434271335601807
    7. '0' → logprob: -4.76842737197876
    8. '2' → logprob: -4.76842737197876
    9. 'f' → logprob: -5.01842737197876
    10. 'len' → logprob: -5.39342737197876

Token 979: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001750030554831028
    2. 'i' → logprob: -6.3767499923706055
    3. '[j' → logprob: -11.001749992370605
    4. '{i' → logprob: -11.126749992370605
    5. 'e' → logprob: -12.376749992370605
    6. 'j' → logprob: -12.751749992370605
    7. '<|end|>' → logprob: -12.876749992370605
    8. '[e' → logprob: -13.501749992370605
    9. '(i' → logprob: -13.626749992370605
    10. '[' → logprob: -13.876749992370605

Token 980: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040795039385557175
    2. '][:' → logprob: -3.915795087814331
    3. ']+' → logprob: -4.415794849395752
    4. '][-' → logprob: -5.540794849395752
    5. ']
' → logprob: -6.915794849395752
    6. '<|end|>' → logprob: -7.165794849395752
    7. '][' → logprob: -7.415794849395752
    8. '[:' → logprob: -7.415794849395752
    9. '[' → logprob: -8.41579532623291
    10. '[:]' → logprob: -8.66579532623291

Token 981: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0034734364598989487
    2. '                       ' → logprob: -6.128473281860352
    3. '               ' → logprob: -7.253473281860352
    4. '<|end|>' → logprob: -7.878473281860352
    5. '           ' → logprob: -9.503473281860352
    6. '```' → logprob: -10.003473281860352
    7. '   ' → logprob: -10.878473281860352
    8. '       ' → logprob: -11.253473281860352
    9. 'if' → logprob: -11.378473281860352
    10. 'else' → logprob: -12.003473281860352

Token 982: ' del' (ID: 1083)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2968830466270447
    2. '                   ' → logprob: -1.9218831062316895
    3. 'del' (adapté à ' del') → logprob: -2.9218831062316895
    4. 'e' → logprob: -3.6718831062316895
    5. 'f' → logprob: -4.2968831062316895
    6. 'if' → logprob: -5.6718831062316895
    7. ' del' → logprob: -5.7968831062316895
    8. '       ' → logprob: -6.1718831062316895
    9. '               ' → logprob: -6.1718831062316895
    10. '   ' → logprob: -6.7968831062316895

Token 983: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5782499313354492
    2. ' e' → logprob: -0.8282499313354492
    3. '(e' → logprob: -6.953249931335449
    4. 'i' → logprob: -7.203249931335449
    5. '(i' → logprob: -8.20324993133545
    6. '[i' → logprob: -8.95324993133545
    7. '[e' → logprob: -9.45324993133545
    8. ' i' → logprob: -9.82824993133545
    9. '   ' → logprob: -11.20324993133545
    10. '(' → logprob: -11.45324993133545

Token 984: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9504606825648807e-05
    2. '[j' → logprob: -11.125019073486328
    3. '[' → logprob: -12.875019073486328
    4. 'i' → logprob: -13.625019073486328
    5. '[e' → logprob: -14.375019073486328
    6. '[f' → logprob: -16.250019073486328
    7. 'e' → logprob: -16.875019073486328
    8. '```' → logprob: -17.375019073486328
    9. '[m' → logprob: -17.625019073486328
    10. '[x' → logprob: -17.875019073486328

Token 985: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030740845948457718
    2. '<|end|>' → logprob: -3.530740737915039
    3. ')' → logprob: -8.155740737915039
    4. ']
' → logprob: -8.155740737915039
    5. '                   ' → logprob: -9.030740737915039
    6. '<|end|>' → logprob: -9.405740737915039
    7. '])' → logprob: -10.155740737915039
    8. '                       ' → logprob: -10.280740737915039
    9. '']' → logprob: -10.530740737915039
    10. '               ' → logprob: -11.030740737915039

Token 986: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02052098512649536
    2. '               ' → logprob: -4.52052116394043
    3. '<|end|>' → logprob: -5.02052116394043
    4. '           ' → logprob: -6.64552116394043
    5. '```' → logprob: -7.52052116394043
    6. '       ' → logprob: -8.02052116394043
    7. '<|end|>' → logprob: -8.89552116394043
    8. '                ' → logprob: -9.64552116394043
    9. '                    ' → logprob: -9.77052116394043
    10. '                       ' → logprob: -9.77052116394043

Token 987: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03500824794173241
    2. '               ' → logprob: -3.785008192062378
    3. '<|end|>' → logprob: -5.285008430480957
    4. '           ' → logprob: -5.910008430480957
    5. '   ' → logprob: -6.660008430480957
    6. '...' → logprob: -7.035008430480957
    7. '       ' → logprob: -7.410008430480957
    8. '                ' → logprob: -8.160008430480957
    9. '```' → logprob: -8.535008430480957
    10. '.' → logprob: -9.035008430480957

Token 988: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47452855110168457
    2. ' len' → logprob: -0.9745285511016846
    3. '(len' → logprob: -8.224528312683105
    4. ' j' → logprob: -9.349528312683105
    5. 'j' → logprob: -9.724528312683105
    6. '   ' → logprob: -11.724528312683105
    7. ' ' → logprob: -12.099528312683105
    8. ' (' → logprob: -12.474528312683105
    9. '	len' → logprob: -12.974528312683105
    10. '  ' → logprob: -13.287028312683105

Token 989: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.023618122562766075
    2. '(f' → logprob: -3.773618221282959
    3. '(j' → logprob: -8.0236177444458
    4. '(i' → logprob: -10.6486177444458
    5. 'e' → logprob: -11.5236177444458
    6. '(' → logprob: -12.3986177444458
    7. 'f' → logprob: -13.1486177444458
    8. '[e' → logprob: -13.5236177444458
    9. '(m' → logprob: -13.7736177444458
    10. '(x' → logprob: -14.7736177444458

Token 990: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007283978629857302
    2. '[i' → logprob: -7.250728607177734
    3. 'j' → logprob: -11.875728607177734
    4. '[f' → logprob: -12.875728607177734
    5. '[m' → logprob: -13.000728607177734
    6. '[e' → logprob: -13.000728607177734
    7. '[' → logprob: -13.375728607177734
    8. '
' → logprob: -14.500728607177734
    9. '

' → logprob: -15.125728607177734
    10. '[x' → logprob: -15.125728607177734

Token 991: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1025192141532898
    2. '[j' → logprob: -2.3525192737579346
    3. ']==' → logprob: -7.1025190353393555
    4. ')' → logprob: -7.3525190353393555
    5. '[i' → logprob: -7.4775190353393555
    6. ')==' → logprob: -8.602519035339355
    7. ']' → logprob: -10.102519035339355
    8. '[e' → logprob: -11.227519035339355
    9. '][' → logprob: -11.352519035339355
    10. '   ' → logprob: -11.727519035339355

Token 992: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00027111053350381553
    2. ' ==' → logprob: -8.25027084350586
    3. ')==' → logprob: -12.75027084350586
    4. ']==' → logprob: -12.75027084350586
    5. '()==' → logprob: -12.87527084350586
    6. '[' → logprob: -15.00027084350586
    7. '!=' → logprob: -15.12527084350586
    8. '<' → logprob: -15.37527084350586
    9. '==
' → logprob: -15.37527084350586
    10. '=' → logprob: -15.87527084350586

Token 993: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004583135014399886
    2. ' ' → logprob: -7.750458240509033
    3. '   ' → logprob: -11.125458717346191
    4. '1' → logprob: -13.187958717346191
    5. '  ' → logprob: -13.375458717346191
    6. '=' → logprob: -13.437958717346191
    7. '```' → logprob: -14.000458717346191
    8. '           ' → logprob: -14.312958717346191
    9. '[' → logprob: -14.375458717346191
    10. '    ' → logprob: -14.562958717346191

Token 994: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2646889388561249
    2. '=' → logprob: -1.7646889686584473
    3. ':' → logprob: -4.139688968658447
    4. ':
' → logprob: -4.139688968658447
    5. '                       ' → logprob: -4.764688968658447
    6. '==' → logprob: -4.764688968658447
    7. ' ==' → logprob: -5.764688968658447
    8. '               ' → logprob: -5.764688968658447
    9. '           ' → logprob: -6.014688968658447
    10. '                   ' → logprob: -6.764688968658447

Token 995: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016295980894938111
    2. '           ' → logprob: -7.751629829406738
    3. '                   ' → logprob: -8.001629829406738
    4. '               ' → logprob: -8.376629829406738
    5. '       ' → logprob: -8.626629829406738
    6. ' f' → logprob: -8.626629829406738
    7. '                           ' → logprob: -9.376629829406738
    8. '   ' → logprob: -9.501629829406738
    9. '```' → logprob: -9.751629829406738
    10. ' ' → logprob: -11.501629829406738

Token 996: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.25322607159614563
    2. ' f' → logprob: -1.5032260417938232
    3. ' del' → logprob: -7.503226280212402
    4. '           ' → logprob: -7.878226280212402
    5. '               ' → logprob: -8.628226280212402
    6. 'del' → logprob: -9.253226280212402
    7. '   ' → logprob: -10.253226280212402
    8. '       ' → logprob: -10.378226280212402
    9. '                   ' → logprob: -11.378226280212402
    10. '	f' → logprob: -12.378226280212402

Token 997: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5213274309644476e-05
    2. 'j' → logprob: -11.125015258789062
    3. '```' → logprob: -15.750015258789062
    4. '.pop' → logprob: -16.000015258789062
    5. '   ' → logprob: -17.000015258789062
    6. '	j' → logprob: -17.375015258789062
    7. '[' → logprob: -17.625015258789062
    8. '[i' → logprob: -17.625015258789062
    9. '[js' → logprob: -18.250015258789062
    10. '
' → logprob: -18.375015258789062

Token 998: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04691683128476143
    2. '=' → logprob: -3.1719167232513428
    3. ']=' → logprob: -5.796916961669922
    4. ' =' → logprob: -7.046916961669922
    5. ' ]' → logprob: -14.296916961669922
    6. ')' → logprob: -14.296916961669922
    7. '   ' → logprob: -14.921916961669922
    8. '[' → logprob: -14.921916961669922
    9. ']==' → logprob: -14.921916961669922
    10. '][' → logprob: -15.921916961669922

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692862749099731
    2. ' =' → logprob: -2.1269285678863525
    3. '=f' → logprob: -15.501928329467773
    4. '=j' → logprob: -16.376928329467773
    5. ')' → logprob: -16.626928329467773
    6. ']' → logprob: -16.876928329467773
    7. '=e' → logprob: -17.376928329467773
    8. '   ' → logprob: -17.376928329467773
    9. ']=' → logprob: -17.626928329467773
    10. '+=' → logprob: -17.876928329467773

Token 1000: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0019360085716471076
    2. ' e' → logprob: -6.251935958862305
    3. '   ' → logprob: -12.876935958862305
    4. '	e' → logprob: -13.376935958862305
    5. '[e' → logprob: -13.751935958862305
    6. ' ' → logprob: -14.126935958862305
    7. 'f' → logprob: -15.501935958862305
    8. '(e' → logprob: -15.501935958862305
    9. '  ' → logprob: -15.751935958862305
    10. '[' → logprob: -16.251935958862305

Token 1001: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.008617646060883999
    2. 'j' → logprob: -4.758617877960205
    3. '```' → logprob: -14.008617401123047
    4. '[i' → logprob: -14.258617401123047
    5. '	j' → logprob: -14.508617401123047
    6. '{' → logprob: -14.758617401123047
    7. '   ' → logprob: -15.883617401123047
    8. '(j' → logprob: -16.008617401123047
    9. '[' → logprob: -16.883617401123047
    10. '$j' → logprob: -16.883617401123047

Token 1002: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1003: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1004: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.04692388325929642
    2. '                   ' → logprob: -3.546923875808716
    3. '                       ' → logprob: -4.546924114227295
    4. ' del' → logprob: -5.296924114227295
    5. '                           ' → logprob: -6.671924114227295
    6. '	del' → logprob: -9.921923637390137
    7. '               ' → logprob: -10.046923637390137
    8. '           ' → logprob: -11.171923637390137
    9. '                               ' → logprob: -12.171923637390137
    10. '
' → logprob: -12.296923637390137

Token 1005: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029761025682091713
    2. ' e' → logprob: -3.5297610759735107
    3. 'j' → logprob: -11.52976131439209
    4. ' j' → logprob: -15.27976131439209
    5. '(e' → logprob: -15.77976131439209
    6. '[j' → logprob: -15.90476131439209
    7. '	e' → logprob: -15.90476131439209
    8. '   ' → logprob: -16.779760360717773
    9. '[e' → logprob: -16.904760360717773
    10. 'i' → logprob: -16.904760360717773

Token 1006: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.7053759519476444e-05
    2. 'j' → logprob: -9.875057220458984
    3. '[i' → logprob: -12.125057220458984
    4. '{' → logprob: -16.625057220458984
    5. '(j' → logprob: -16.875057220458984
    6. '[' → logprob: -17.750057220458984
    7. '```' → logprob: -18.125057220458984
    8. '	j' → logprob: -18.250057220458984
    9. ' j' → logprob: -18.375057220458984
    10. '   ' → logprob: -19.375057220458984

Token 1007: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15179163217544556
    2. '<|end|>' → logprob: -2.026791572570801
    3. ']' → logprob: -6.276791572570801
    4. '               ' → logprob: -6.401791572570801
    5. '```' → logprob: -6.401791572570801
    6. '}' → logprob: -6.526791572570801
    7. '                   ' → logprob: -7.276791572570801
    8. '<|end|>' → logprob: -7.526791572570801
    9. '           ' → logprob: -7.901791572570801
    10. '       ' → logprob: -8.2767915725708

Token 1008: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18072417378425598
    2. '               ' → logprob: -2.0557241439819336
    3. 'for' → logprob: -3.9307241439819336
    4. '                   ' → logprob: -5.055724143981934
    5. 'if' → logprob: -5.680724143981934
    6. 'continue' → logprob: -5.680724143981934
    7. '<|end|>' → logprob: -6.305724143981934
    8. 'else' → logprob: -7.305724143981934
    9. '```' → logprob: -7.305724143981934
    10. 'elif' → logprob: -7.930724143981934

Token 1009: ' ek' (ID: 6033)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9993180632591248
    2. 'work' → logprob: -1.6243181228637695
    3. 'if' → logprob: -2.3743181228637695
    4. 'nd' → logprob: -2.6243181228637695
    5. '           ' → logprob: -3.3743181228637695
    6. '               ' → logprob: -3.3743181228637695
    7. 'n' → logprob: -3.8743181228637695
    8. 'next' → logprob: -4.4993181228637695
    9. 'last' → logprob: -4.6243181228637695
    10. 'idx' → logprob: -4.6243181228637695

Token 1010: ' =' (ID: 314)
  Prédit: 'eys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eys' → logprob: -0.36521223187446594
    2. ' =' → logprob: -1.6152122020721436
    3. '=' → logprob: -3.1152122020721436
    4. 'ey' → logprob: -3.4902122020721436
    5. 'y' → logprob: -4.490212440490723
    6. 's' → logprob: -5.115212440490723
    7. 'for' → logprob: -5.490212440490723
    8. 'keys' → logprob: -5.615212440490723
    9. '=e' → logprob: -6.740212440490723
    10. 'x' → logprob: -6.865212440490723

Token 1011: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0029982624109834433
    2. 'f' → logprob: -6.252998352050781
    3. 'next' → logprob: -7.002998352050781
    4. ' list' → logprob: -9.627998352050781
    5. 'set' → logprob: -10.502998352050781
    6. '(list' → logprob: -10.877998352050781
    7. '[list' → logprob: -11.252998352050781
    8. 'e' → logprob: -11.627998352050781
    9. '[f' → logprob: -12.127998352050781
    10. 'sorted' → logprob: -12.252998352050781

Token 1012: '(e' (ID: 3454)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.006730883847922087
    2. '(e' → logprob: -5.006731033325195
    3. 'f' → logprob: -11.881731033325195
    4. '(sorted' → logprob: -12.006731033325195
    5. '(filter' → logprob: -14.006731033325195
    6. '(' → logprob: -14.506731033325195
    7. '((' → logprob: -15.131731033325195
    8. '(set' → logprob: -15.256731033325195
    9. '(k' → logprob: -16.131731033325195
    10. '(map' → logprob: -16.256731033325195

Token 1013: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.003681313246488571
    2. 'keys' → logprob: -5.628681182861328
    3. '(keys' → logprob: -9.503681182861328
    4. '	keys' → logprob: -13.003681182861328
    5. ')' → logprob: -14.003681182861328
    6. ')[' → logprob: -14.003681182861328
    7. '_keys' → logprob: -14.628681182861328
    8. ' keys' → logprob: -14.878681182861328
    9. '```' → logprob: -15.003681182861328
    10. '(f' → logprob: -15.253681182861328

Token 1014: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02402135170996189
    2. '()' → logprob: -4.274021148681641
    3. '())[' → logprob: -4.649021148681641
    4. '())
' → logprob: -8.89902114868164
    5. ')' → logprob: -9.52402114868164
    6. '()[' → logprob: -11.77402114868164
    7. ' ())' → logprob: -11.89902114868164
    8. '()
' → logprob: -12.39902114868164
    9. '();)' → logprob: -13.27402114868164
    10. '()]' → logprob: -13.39902114868164

Token 1015: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.340613454580307
    2. 'for' → logprob: -2.09061336517334
    3. '[' → logprob: -3.34061336517334
    4. 'i' → logprob: -3.96561336517334
    5. 'x' → logprob: -3.96561336517334
    6. 'f' → logprob: -3.96561336517334
    7. 'v' → logprob: -4.09061336517334
    8. '               ' → logprob: -4.71561336517334
    9. 'ek' → logprob: -4.84061336517334
    10. 'k' → logprob: -4.96561336517334

Token 1016: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34790781140327454
    2. 'x' → logprob: -2.597907781600952
    3. 'i' → logprob: -3.347907781600952
    4. 'for' → logprob: -3.347907781600952
    5. 'k' → logprob: -3.597907781600952
    6. 'f' → logprob: -3.972907781600952
    7. 'v' → logprob: -4.347908020019531
    8. 'u' → logprob: -4.347908020019531
    9. '               ' → logprob: -4.472908020019531
    10. 'a' → logprob: -4.472908020019531

Token 1017: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4548192620277405
    2. 'p' → logprob: -1.5798192024230957
    3. '=' → logprob: -2.2048192024230957
    4. '0' → logprob: -3.7048192024230957
    5. 'op' → logprob: -5.079819202423096
    6. '=p' → logprob: -5.079819202423096
    7. 'v' → logprob: -6.204819202423096
    8. 'r' → logprob: -6.579819202423096
    9. '1' → logprob: -6.704819202423096
    10. 'k' → logprob: -7.329819202423096

Token 1018: ' ek' (ID: 6033)
  Prédit: 'ek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ek' → logprob: -0.0015950803644955158
    2. '[' → logprob: -6.8765950202941895
    3. 'f' → logprob: -7.6265950202941895
    4. ' ek' → logprob: -11.001595497131348
    5. 'ef' → logprob: -11.376595497131348
    6. 'e' → logprob: -11.501595497131348
    7. '[]
' → logprob: -11.626595497131348
    8. '0' → logprob: -12.126595497131348
    9. '[e' → logprob: -12.501595497131348
    10. '[f' → logprob: -12.501595497131348

Token 1019: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5127151608467102
    2. ' =' → logprob: -1.2627151012420654
    3. 'p' → logprob: -3.0127151012420654
    4. '=' → logprob: -3.1377151012420654
    5. '0' → logprob: -3.8877151012420654
    6. '.pop' → logprob: -6.5127153396606445
    7. 'op' → logprob: -6.8877153396606445
    8. '.append' → logprob: -7.0127153396606445
    9. 'pop' → logprob: -7.6377153396606445
    10. '=[' → logprob: -8.012715339660645

Token 1020: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '[' → logprob: -16.125
    4. '1' → logprob: -16.125
    5. '
' → logprob: -17.75
    6. 'p' → logprob: -17.875
    7. '```' → logprob: -18.25
    8. '(' → logprob: -18.5
    9. '   ' → logprob: -18.625
    10. ']' → logprob: -18.8125

Token 1021: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4456917345523834
    2. ']
' → logprob: -1.070691704750061
    3. '()]' → logprob: -4.4456915855407715
    4. '
' → logprob: -6.6956915855407715
    5. '()
' → logprob: -7.1956915855407715
    6. '()]
' → logprob: -7.1956915855407715
    7. ']()
' → logprob: -7.5706915855407715
    8. '()' → logprob: -7.8206915855407715
    9. '               ' → logprob: -8.19569206237793
    10. ']()' → logprob: -8.57069206237793

Token 1022: '               ' (ID: 506)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25548043847084045
    2. 'cur' → logprob: -2.6304805278778076
    3. 'for' → logprob: -3.6304805278778076
    4. '```' → logprob: -3.7554805278778076
    5. 'path' → logprob: -4.1304802894592285
    6. 'p' → logprob: -4.1304802894592285
    7. 'curr' → logprob: -4.3804802894592285
    8. 'v' → logprob: -4.5054802894592285
    9. 'print' → logprob: -4.5054802894592285
    10. 'n' → logprob: -5.0054802894592285

Token 1023: ' prev' (ID: 10258)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29027801752090454
    2. 'cur' → logprob: -1.9152779579162598
    3. 'c' → logprob: -3.6652779579162598
    4. 'last' → logprob: -4.16527795791626
    5. 'q' → logprob: -4.66527795791626
    6. 'lst' → logprob: -5.04027795791626
    7. 'curr' → logprob: -5.04027795791626
    8. 'now' → logprob: -5.16527795791626
    9. 'path' → logprob: -5.41527795791626
    10. 'v' → logprob: -5.91527795791626

Token 1024: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00613248348236084
    2. ' =' → logprob: -5.13113260269165
    3. ',' → logprob: -9.381132125854492
    4. '=-' → logprob: -9.881132125854492
    5. '=None' → logprob: -10.506132125854492
    6. 'p' → logprob: -10.631132125854492
    7. 'prev' → logprob: -12.131132125854492
    8. '=p' → logprob: -12.631132125854492
    9. 'n' → logprob: -12.881132125854492
    10. 'v' → logprob: -13.756132125854492

Token 1025: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6687596440315247
    2. 'None' → logprob: -1.1687595844268799
    3. '-' → logprob: -1.9187595844268799
    4. 'f' → logprob: -3.66875958442688
    5. 'ek' → logprob: -6.668759822845459
    6. '1' → logprob: -6.668759822845459
    7. 'e' → logprob: -7.043759822845459
    8. '-p' → logprob: -8.5437593460083
    9. '-f' → logprob: -8.9187593460083
    10. '(' → logprob: -9.0437593460083

Token 1026: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18350228667259216
    2. 'while' → logprob: -2.808502197265625
    3. ' =' → logprob: -3.433502197265625
    4. '
' → logprob: -3.933502197265625
    5. '<|end|>' → logprob: -4.058502197265625
    6. '=' → logprob: -4.933502197265625
    7. '                   ' → logprob: -5.183502197265625
    8. ',' → logprob: -5.808502197265625
    9. 'for' → logprob: -5.808502197265625
    10. '                
' → logprob: -5.808502197265625

Token 1027: '               ' (ID: 506)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.15874211490154266
    2. 'curr' → logprob: -2.0337421894073486
    3. 'while' → logprob: -5.0337419509887695
    4. 'for' → logprob: -6.1587419509887695
    5. 'current' → logprob: -6.2837419509887695
    6. 'c' → logprob: -6.7837419509887695
    7. '```' → logprob: -6.7837419509887695
    8. 'p' → logprob: -7.2837419509887695
    9. 'now' → logprob: -7.2837419509887695
    10. 'n' → logprob: -7.9087419509887695

Token 1028: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.43389689922332764
    2. 'curr' → logprob: -1.4338968992233276
    3. 'n' → logprob: -3.558897018432617
    4. 'while' → logprob: -3.808897018432617
    5. 'c' → logprob: -3.808897018432617
    6. 'now' → logprob: -3.933897018432617
    7. 'next' → logprob: -5.308897018432617
    8. 'nx' → logprob: -6.058897018432617
    9. 'current' → logprob: -6.183897018432617
    10. 'q' → logprob: -6.433897018432617

Token 1029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931777596473694
    2. ' =' → logprob: -0.6931777596473694
    3. '=p' → logprob: -11.443178176879883
    4. ',' → logprob: -11.818178176879883
    5. 'p' → logprob: -13.068178176879883
    6. 's' → logprob: -13.318178176879883
    7. '   ' → logprob: -13.443178176879883
    8. ' ' → logprob: -13.943178176879883
    9. '=
' → logprob: -14.193178176879883
    10. '=list' → logprob: -14.318178176879883

Token 1030: ' e' (ID: 319)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006303446367383003
    2. 'e' → logprob: -5.131303310394287
    3. 'p' → logprob: -8.006303787231445
    4. ' f' → logprob: -10.506303787231445
    5. 'list' → logprob: -13.131303787231445
    6. 'next' → logprob: -13.506303787231445
    7. '1' → logprob: -13.756303787231445
    8. 'ek' → logprob: -13.881303787231445
    9. '   ' → logprob: -14.131303787231445
    10. '0' → logprob: -14.256303787231445

Token 1031: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.39540010690689087
    2. 'p' → logprob: -1.145400047302246
    3. '[' → logprob: -4.770400047302246
    4. '[cur' → logprob: -11.895400047302246
    5. '[k' → logprob: -13.270400047302246
    6. ' p' → logprob: -13.270400047302246
    7. '[e' → logprob: -13.395400047302246
    8. 'ek' → logprob: -13.770400047302246
    9. '[next' → logprob: -13.895400047302246
    10. ' [' → logprob: -15.020400047302246

Token 1032: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7462189793586731
    2. '[cur' → logprob: -1.2462189197540283
    3. '[p' → logprob: -1.8712189197540283
    4. '][' → logprob: -2.4962189197540283
    5. 'p' → logprob: -7.371219158172607
    6. 'cur' → logprob: -7.496219158172607
    7. '[f' → logprob: -8.62121868133545
    8. '[e' → logprob: -8.62121868133545
    9. '(cur' → logprob: -9.74621868133545
    10. '()[' → logprob: -10.12121868133545

Token 1033: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '
' → logprob: -16.000001907348633
    5. '[' → logprob: -17.000001907348633
    6. '(' → logprob: -17.625001907348633
    7. 'p' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.687501907348633
    9. '-' → logprob: -18.875001907348633
    10. '00' → logprob: -19.125001907348633

Token 1034: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6535094976425171
    2. '               ' → logprob: -1.903509497642517
    3. '
' → logprob: -2.4035096168518066
    4. '<|end|>' → logprob: -2.4035096168518066
    5. ']
' → logprob: -2.5285096168518066
    6. '```' → logprob: -4.528509616851807
    7. '][' → logprob: -4.653509616851807
    8. '                   ' → logprob: -4.778509616851807
    9. '[' → logprob: -4.778509616851807
    10. '<|end|>' → logprob: -5.278509616851807

Token 1035: '               ' (ID: 506)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4680923819541931
    2. 'print' → logprob: -1.218092441558838
    3. '```' → logprob: -2.718092441558838
    4. 'work' → logprob: -5.093092441558838
    5. '                
' → logprob: -6.968092441558838
    6. 'path' → logprob: -7.343092441558838
    7. '               ' → logprob: -7.593092441558838
    8. 'n' → logprob: -7.718092441558838
    9. 'res' → logprob: -7.718092441558838
    10. ' while' → logprob: -7.718092441558838

Token 1036: ' work' (ID: 1101)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19390957057476044
    2. 'print' → logprob: -2.6939096450805664
    3. 'work' (adapté à ' work') → logprob: -3.1939096450805664
    4. '               ' → logprob: -3.8189096450805664
    5. 'res' → logprob: -4.318909645080566
    6. 'out' → logprob: -5.193909645080566
    7. 'ans' → logprob: -5.443909645080566
    8. 'dd' → logprob: -5.443909645080566
    9. 'n' → logprob: -5.443909645080566
    10. 'ret' → logprob: -6.068909645080566

Token 1037: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.00028851060778833926
    2. '_req' → logprob: -9.000288963317871
    3. '=' → logprob: -9.375288963317871
    4. ' =' → logprob: -11.000288963317871
    5. 'list' → logprob: -11.000288963317871
    6. '```' → logprob: -11.500288963317871
    7. '=[]' → logprob: -11.875288963317871
    8. '=req' → logprob: -11.875288963317871
    9. '   ' → logprob: -12.875288963317871
    10. '=[]
' → logprob: -13.000288963317871

Token 1038: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05745292827486992
    2. ' =' → logprob: -2.932452917098999
    3. '.append' → logprob: -6.307453155517578
    4. '=[]' → logprob: -7.307453155517578
    5. '=[' → logprob: -10.182453155517578
    6. '+=' → logprob: -10.807453155517578
    7. '[:]' → logprob: -12.057453155517578
    8. '.extend' → logprob: -12.932453155517578
    9. '=[]
' → logprob: -13.057453155517578
    10. '.' → logprob: -13.557453155517578

Token 1039: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.38866665959358215
    2. '[f' → logprob: -1.1386666297912598
    3. '[]
' → logprob: -7.26366662979126
    4. '[e' → logprob: -7.76366662979126
    5. '[' → logprob: -8.013667106628418
    6. '[cur' → logprob: -8.263667106628418
    7. '[]' → logprob: -10.513667106628418
    8. '[j' → logprob: -11.263667106628418
    9. '[i' → logprob: -11.388667106628418
    10. ' [' → logprob: -11.888667106628418

Token 1040: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0053333705291152
    2. 'prev' → logprob: -5.255333423614502
    3. 'cur' → logprob: -9.255332946777344
    4. ' p' → logprob: -12.630332946777344
    5. '   ' → logprob: -15.380332946777344
    6. ' prev' → logprob: -15.630332946777344
    7. 'pre' → logprob: -16.255332946777344
    8. '	p' → logprob: -17.130332946777344
    9. 'e' → logprob: -17.630332946777344
    10. 'ek' → logprob: -17.755332946777344

Token 1041: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5636910200119019
    2. ']
' → logprob: -1.3136910200119019
    3. ',' → logprob: -1.9386910200119019
    4. ']+' → logprob: -4.063691139221191
    5. ',p' → logprob: -7.813691139221191
    6. '[cur' → logprob: -8.563691139221191
    7. 'cur' → logprob: -8.938691139221191
    8. '(cur' → logprob: -9.188691139221191
    9. ']
' → logprob: -10.188691139221191
    10. ']

' → logprob: -10.313691139221191

Token 1042: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00317783304490149
    2. ' cur' → logprob: -5.753177642822266
    3. '	cur' → logprob: -17.253177642822266
    4. '[cur' → logprob: -18.878177642822266
    5. 'Cur' → logprob: -19.128177642822266
    6. '(cur' → logprob: -19.128177642822266
    7. '
' → logprob: -19.503177642822266
    8. '-cur' → logprob: -20.128177642822266
    9. '```' → logprob: -20.253177642822266
    10. '.cur' → logprob: -21.128177642822266

Token 1043: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16297098994255066
    2. ']
' → logprob: -1.912971019744873
    3. ',' → logprob: -6.037971019744873
    4. ' ]' → logprob: -8.537970542907715
    5. ',p' → logprob: -9.537970542907715
    6. ' ]
' → logprob: -11.162970542907715
    7. '               ' → logprob: -11.162970542907715
    8. ']

' → logprob: -11.162970542907715
    9. ']
' → logprob: -11.662970542907715
    10. '<|end|>' → logprob: -12.537970542907715

Token 1044: '               ' (ID: 506)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008350973948836327
    2. '```' → logprob: -5.383350849151611
    3. 'for' → logprob: -6.008350849151611
    4. '
' → logprob: -7.883350849151611
    5. ' while' → logprob: -8.00835132598877
    6. 'prev' → logprob: -8.50835132598877
    7. '``' → logprob: -8.88335132598877
    8. 'work' → logprob: -10.25835132598877
    9. '                
' → logprob: -10.50835132598877
    10. '                   ' → logprob: -10.88335132598877

Token 1045: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.000422570708906278
    2. 'for' (adapté à ' for') → logprob: -8.125422477722168
    3. '               ' → logprob: -9.875422477722168
    4. 'last' → logprob: -11.250422477722168
    5. 'cur' → logprob: -11.375422477722168
    6. 'prev' → logprob: -11.875422477722168
    7. 'work' → logprob: -11.875422477722168
    8. '                   ' → logprob: -12.125422477722168
    9. 'done' → logprob: -12.125422477722168
    10. '           ' → logprob: -12.375422477722168

Token 1046: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016897005261853337
    2. 'i' → logprob: -7.376689910888672
    3. ' _' → logprob: -7.626689910888672
    4. '_i' → logprob: -8.376689910888672
    5. 'k' → logprob: -8.501689910888672
    6. '_k' → logprob: -9.751689910888672
    7. '_z' → logprob: -10.751689910888672
    8. '_cur' → logprob: -11.251689910888672
    9. 'z' → logprob: -11.626689910888672
    10. '__' → logprob: -11.626689910888672

Token 1047: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4287944436073303
    2. 'in' → logprob: -1.0537943840026855
    3. '1' → logprob: -11.053794860839844
    4. 'In' → logprob: -11.053794860839844
    5. '_' → logprob: -11.428794860839844
    6. '(' → logprob: -11.928794860839844
    7. '[' → logprob: -12.053794860839844
    8. '_in' → logprob: -12.178794860839844
    9. ' ' → logprob: -12.428794860839844
    10. 'range' → logprob: -12.553794860839844

Token 1048: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005319139454513788
    2. ' range' → logprob: -5.255319118499756
    3. 'e' → logprob: -9.505319595336914
    4. 'in' → logprob: -12.755319595336914
    5. '[' → logprob: -12.880319595336914
    6. '(range' → logprob: -13.505319595336914
    7. '   ' → logprob: -14.380319595336914
    8. 'r' → logprob: -14.505319595336914
    9. '2' → logprob: -14.755319595336914
    10. 'es' → logprob: -15.005319595336914

Token 1049: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2020832747220993
    2. '2' → logprob: -1.7020832300186157
    3. '(len' → logprob: -7.452083110809326
    4. 'len' → logprob: -9.577083587646484
    5. '   ' → logprob: -11.827083587646484
    6. 'vv' → logprob: -12.452083587646484
    7. '(v' → logprob: -12.827083587646484
    8. '(V' → logprob: -12.952083587646484
    9. ' ' → logprob: -13.577083587646484
    10. '1' → logprob: -14.202083587646484

Token 1050: 'v' (ID: 85)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2340729534626007
    2. '(' → logprob: -1.6090729236602783
    3. '1' → logprob: -4.859073162078857
    4. '[' → logprob: -7.609073162078857
    5. ' ' → logprob: -9.2340726852417
    6. '   ' → logprob: -9.7340726852417
    7. '+' → logprob: -10.1090726852417
    8. 'len' → logprob: -10.3590726852417
    9. '
' → logprob: -10.4840726852417
    10. '(len' → logprob: -10.6090726852417

Token 1051: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0030217990279197693
    2. '2' → logprob: -6.378021717071533
    3. ' -' → logprob: -7.003021717071533
    4. '(' → logprob: -9.128022193908691
    5. '):
' → logprob: -9.253022193908691
    6. '[' → logprob: -9.503022193908691
    7. '   ' → logprob: -10.253022193908691
    8. '```' → logprob: -10.628022193908691
    9. '):' → logprob: -11.128022193908691
    10. '1' → logprob: -11.628022193908691

Token 1052: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011796683247666806
    2. '1' → logprob: -9.625118255615234
    3. '3' → logprob: -10.625118255615234
    4. '-' → logprob: -11.750118255615234
    5. ' ' → logprob: -12.000118255615234
    6. '   ' → logprob: -12.125118255615234
    7. 'len' → logprob: -13.125118255615234
    8. '0' → logprob: -13.250118255615234
    9. '```' → logprob: -13.375118255615234
    10. '(' → logprob: -14.250118255615234

Token 1053: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024491308256983757
    2. '):' → logprob: -4.524491310119629
    3. ':
' → logprob: -4.774491310119629
    4. ':' → logprob: -5.649491310119629
    5. '   ' → logprob: -7.149491310119629
    6. '):
' → logprob: -8.774491310119629
    7. '```' → logprob: -9.149491310119629
    8. ']:
' → logprob: -9.274491310119629
    9. ')' → logprob: -9.649491310119629
    10. '       ' → logprob: -9.899491310119629

Token 1054: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03376879543066025
    2. '   ' → logprob: -3.908768892288208
    3. '```' → logprob: -5.158768653869629
    4. '                   ' → logprob: -5.783768653869629
    5. '       ' → logprob: -6.408768653869629
    6. '               ' → logprob: -6.783768653869629
    7. 'cur' → logprob: -7.408768653869629
    8. '``' → logprob: -8.158768653869629
    9. ' cur' → logprob: -9.158768653869629
    10. 'next' → logprob: -9.283768653869629

Token 1055: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05881296843290329
    2. 'nx' → logprob: -3.5588128566741943
    3. '       ' → logprob: -4.683813095092773
    4. '   ' → logprob: -5.433813095092773
    5. 'next' → logprob: -5.683813095092773
    6. 'work' → logprob: -5.933813095092773
    7. 'nv' → logprob: -6.433813095092773
    8. 'nn' → logprob: -6.558813095092773
    9. 'np' → logprob: -6.558813095092773
    10. '           ' → logprob: -6.808813095092773

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029864691197872162
    2. ' =' → logprob: -3.52986478805542
    3. 'rev' → logprob: -10.029864311218262
    4. ',' → logprob: -10.779864311218262
    5. '=p' → logprob: -10.904864311218262
    6. 'cur' → logprob: -11.279864311218262
    7. '=
' → logprob: -12.404864311218262
    8. 'prev' → logprob: -12.654864311218262
    9. 'r' → logprob: -13.029864311218262
    10. 'p' → logprob: -13.279864311218262

Token 1057: ' cur' (ID: 4396)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.33094874024391174
    2. 'e' → logprob: -1.7059487104415894
    3. 'work' → logprob: -2.955948829650879
    4. 'cur' → logprob: -3.205948829650879
    5. ' f' → logprob: -5.455948829650879
    6. ' e' → logprob: -6.455948829650879
    7. ' work' → logprob: -7.080948829650879
    8. ' cur' → logprob: -7.955948829650879
    9. '   ' → logprob: -8.955948829650879
    10. ' ' → logprob: -9.580948829650879

Token 1058: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5270660519599915
    2. '=' → logprob: -0.9020660519599915
    3. '                   ' → logprob: -5.652066230773926
    4. '=p' → logprob: -8.527066230773926
    5. '   ' → logprob: -10.152066230773926
    6. 'p' → logprob: -10.777066230773926
    7. '=e' → logprob: -10.902066230773926
    8. '[' → logprob: -11.027066230773926
    9. ']' → logprob: -11.152066230773926
    10. '                       ' → logprob: -11.277066230773926

Token 1059: '                   ' (ID: 699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6959881782531738
    2. '=' → logprob: -0.8209881782531738
    3. '                   ' → logprob: -2.945988178253174
    4. '```' → logprob: -5.070988178253174
    5. '``' → logprob: -7.070988178253174
    6. '`' → logprob: -7.820988178253174
    7. ',' → logprob: -7.945988178253174
    8. '   ' → logprob: -8.320987701416016
    9. '               ' → logprob: -8.695987701416016
    10. '           ' → logprob: -9.320987701416016

Token 1060: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.09053058922290802
    2. 'n' → logprob: -2.5905306339263916
    3. 'nx' → logprob: -5.4655303955078125
    4. 'q' → logprob: -6.2155303955078125
    5. 'for' → logprob: -6.7155303955078125
    6. 'f' → logprob: -7.0905303955078125
    7. 'nn' → logprob: -7.5905303955078125
    8. 'next' → logprob: -7.9655303955078125
    9. 'nbr' → logprob: -8.090530395507812
    10. 'neighbors' → logprob: -8.090530395507812

Token 1061: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002806656062602997
    2. ' =' → logprob: -5.877806663513184
    3. '=e' → logprob: -14.377806663513184
    4. '   ' → logprob: -16.002805709838867
    5. '=f' → logprob: -16.002805709838867
    6. '=
' → logprob: -16.127805709838867
    7. 'n' → logprob: -16.127805709838867
    8. '=n' → logprob: -16.252805709838867
    9. '=p' → logprob: -16.377805709838867
    10. '=list' → logprob: -16.877805709838867

Token 1062: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0077819605357944965
    2. ' f' → logprob: -4.882781982421875
    3. 'e' → logprob: -10.132781982421875
    4. '[f' → logprob: -10.257781982421875
    5. '(f' → logprob: -10.632781982421875
    6. '[' → logprob: -10.757781982421875
    7. 'next' → logprob: -11.257781982421875
    8. ' [' → logprob: -11.507781982421875
    9. '	f' → logprob: -12.007781982421875
    10. ' ' → logprob: -12.132781982421875

Token 1063: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.04865390434861183
    2. '[cur' → logprob: -3.0486538410186768
    3. '[' → logprob: -10.048653602600098
    4. 'p' → logprob: -10.798653602600098
    5. 'cur' → logprob: -13.923653602600098
    6. '[curr' → logprob: -14.173653602600098
    7. '[c' → logprob: -15.173653602600098
    8. 'prev' → logprob: -15.798653602600098
    9. '[current' → logprob: -16.048654556274414
    10. '[pos' → logprob: -16.048654556274414

Token 1064: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005254387855529785
    2. '[' → logprob: -5.25525426864624
    3. '[cur' → logprob: -11.005254745483398
    4. '0' → logprob: -13.880254745483398
    5. '1' → logprob: -14.630254745483398
    6. '"][' → logprob: -14.630254745483398
    7. ''][' → logprob: -14.755254745483398
    8. '   ' → logprob: -15.005254745483398
    9. '[i' → logprob: -15.380254745483398
    10. ' ][' → logprob: -15.380254745483398

Token 1065: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09161335974931717
    2. '1' → logprob: -3.216613292694092
    3. 'prev' → logprob: -3.216613292694092
    4. 'cur' → logprob: -5.966613292694092
    5. 'work' → logprob: -6.216613292694092
    6. 'p' → logprob: -6.466613292694092
    7. '(' → logprob: -7.341613292694092
    8. '(prev' → logprob: -8.09161376953125
    9. 'f' → logprob: -9.46661376953125
    10. '(cur' → logprob: -10.09161376953125

Token 1066: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009336133953183889
    2. '()]' → logprob: -7.375933647155762
    3. ']
' → logprob: -8.125933647155762
    4. ' ]' → logprob: -12.375933647155762
    5. ']()' → logprob: -12.750933647155762
    6. ')]' → logprob: -14.125933647155762
    7. '()' → logprob: -14.125933647155762
    8. '<|end|>' → logprob: -14.250933647155762
    9. '                   ' → logprob: -15.000933647155762
    10. '`]' → logprob: -15.625933647155762

Token 1067: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.4133249521255493
    2. '<|end|>' → logprob: -1.6633249521255493
    3. '       ' → logprob: -1.7883249521255493
    4. '```' → logprob: -2.0383248329162598
    5. '               ' → logprob: -2.5383248329162598
    6. '           ' → logprob: -3.0383248329162598
    7. '   ' → logprob: -3.1633248329162598
    8. '[' → logprob: -3.6633248329162598
    9. '``' → logprob: -3.6633248329162598
    10. 'print' → logprob: -4.03832483291626

Token 1068: ' if' (ID: 538)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0001793457195162773
    2. '                   ' → logprob: -9.375179290771484
    3. '               ' → logprob: -9.875179290771484
    4. '   ' → logprob: -10.625179290771484
    5. ' work' → logprob: -11.375179290771484
    6. '       ' → logprob: -12.625179290771484
    7. '           ' → logprob: -12.750179290771484
    8. '                       ' → logprob: -14.625179290771484
    9. '	work' → logprob: -15.125179290771484
    10. ' ' → logprob: -16.000179290771484

Token 1069: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.07227154821157455
    2. ' cur' → logprob: -2.6972715854644775
    3. 'work' → logprob: -7.072271347045898
    4. '(cur' → logprob: -7.072271347045898
    5. 'p' → logprob: -8.447271347045898
    6. ' work' → logprob: -8.572271347045898
    7. ' p' → logprob: -8.947271347045898
    8. 'not' → logprob: -10.197271347045898
    9. 'len' → logprob: -11.072271347045898
    10. ' not' → logprob: -11.197271347045898

Token 1070: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11463558673858643
    2. ' ==' → logprob: -2.239635467529297
    3. '!=' → logprob: -6.989635467529297
    4. '[' → logprob: -8.489635467529297
    5. ' !=' → logprob: -8.614635467529297
    6. '==-' → logprob: -8.614635467529297
    7. ']==' → logprob: -9.364635467529297
    8. ')' → logprob: -9.864635467529297
    9. ' not' → logprob: -10.364635467529297
    10. '<|end|>' → logprob: -10.614635467529297

Token 1071: 'prev' (ID: 15969)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.020567698404192924
    2. 'prev' → logprob: -4.645567893981934
    3. 'p' → logprob: -5.020567893981934
    4. '1' → logprob: -5.520567893981934
    5. ' work' → logprob: -10.395567893981934
    6. ' ' → logprob: -10.395567893981934
    7. '   ' → logprob: -10.645567893981934
    8. '       ' → logprob: -11.520567893981934
    9. 'start' → logprob: -11.645567893981934
    10. '  ' → logprob: -12.145567893981934

Token 1072: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1281413733959198
    2. ':' → logprob: -2.128141403198242
    3. ' or' → logprob: -7.753141403198242
    4. '                       ' → logprob: -8.003141403198242
    5. ' and' → logprob: -8.753141403198242
    6. '       ' → logprob: -9.503141403198242
    7. ':return' → logprob: -9.753141403198242
    8. '):
' → logprob: -10.878141403198242
    9. '<|end|>' → logprob: -11.003141403198242
    10. '                           ' → logprob: -11.128141403198242

Token 1073: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007027103565633297
    2. ':
' → logprob: -6.0070271492004395
    3. '<|end|>' → logprob: -6.3820271492004395
    4. '```' → logprob: -7.5070271492004395
    5. '                   ' → logprob: -7.7570271492004395
    6. '       ' → logprob: -7.8820271492004395
    7. 'continue' → logprob: -8.132026672363281
    8. '                           ' → logprob: -8.382026672363281
    9. '                        
' → logprob: -9.132026672363281
    10. ' continue' → logprob: -9.132026672363281

Token 1074: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.5672814249992371
    2. 'f' → logprob: -0.9422814249992371
    3. 'work' → logprob: -3.942281484603882
    4. 'p' → logprob: -4.442281246185303
    5. '0' → logprob: -4.817281246185303
    6. ' cur' → logprob: -6.442281246185303
    7. '1' → logprob: -7.067281246185303
    8. ' f' → logprob: -7.192281246185303
    9. 'prev' → logprob: -8.317281723022461
    10. ' p' → logprob: -8.817281723022461

Token 1075: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2230946272611618
    2. ' =' → logprob: -1.8480945825576782
    3. '=f' → logprob: -4.598094463348389
    4. '=p' → logprob: -4.598094463348389
    5. 'f' → logprob: -5.098094463348389
    6. ' f' → logprob: -5.973094463348389
    7. ',' → logprob: -6.098094463348389
    8. 'p' → logprob: -6.098094463348389
    9. ')' → logprob: -6.223094463348389
    10. 'else' → logprob: -6.348094463348389

Token 1076: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017036291537806392
    2. ' f' → logprob: -6.37670373916626
    3. '	f' → logprob: -14.376703262329102
    4. '   ' → logprob: -14.876703262329102
    5. ' ' → logprob: -14.876703262329102
    6. '  ' → logprob: -16.5017032623291
    7. '    ' → logprob: -17.8767032623291
    8. '       ' → logprob: -18.0017032623291
    9. ' ' → logprob: -18.0017032623291
    10. '     ' → logprob: -18.0017032623291

Token 1077: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.06236659735441208
    2. 'p' → logprob: -2.812366485595703
    3. '[' → logprob: -8.312366485595703
    4. '[cur' → logprob: -8.812366485595703
    5. ' p' → logprob: -13.062366485595703
    6. 'cur' → logprob: -13.687366485595703
    7. '[P' → logprob: -14.937366485595703
    8. '```' → logprob: -15.062366485595703
    9. '[q' → logprob: -16.312366485595703
    10. '_p' → logprob: -16.687366485595703

Token 1078: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024557266384363174
    2. '][' → logprob: -3.77455735206604
    3. '1' → logprob: -6.649557113647461
    4. '[p' → logprob: -12.899557113647461
    5. ']' → logprob: -13.024557113647461
    6. ' [' → logprob: -13.399557113647461
    7. ')[' → logprob: -13.399557113647461
    8. '0' → logprob: -13.524557113647461
    9. '>[' → logprob: -13.649557113647461
    10. 'p' → logprob: -13.774557113647461

Token 1079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013267839094623923
    2. '0' → logprob: -6.626326560974121
    3. '[' → logprob: -14.376326560974121
    4. 'i' → logprob: -16.126327514648438
    5. '-' → logprob: -16.626327514648438
    6. ' ' → logprob: -16.876327514648438
    7. '#' → logprob: -17.251327514648438
    8. '```' → logprob: -17.251327514648438
    9. '   ' → logprob: -18.251327514648438
    10. '
' → logprob: -18.876327514648438

Token 1080: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035831741988658905
    2. '<|end|>' → logprob: -3.4108316898345947
    3. ']
' → logprob: -6.785831928253174
    4. '                       ' → logprob: -8.160831451416016
    5. '```' → logprob: -8.660831451416016
    6. '']' → logprob: -9.160831451416016
    7. '                   ' → logprob: -9.285831451416016
    8. ')' → logprob: -9.535831451416016
    9. '}' → logprob: -9.660831451416016
    10. '<|end|>' → logprob: -10.035831451416016

Token 1081: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1082: ' prev' (ID: 10258)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.03374401479959488
    2. ' work' → logprob: -4.158743858337402
    3. '       ' → logprob: -4.283743858337402
    4. '```' → logprob: -6.283743858337402
    5. 'print' → logprob: -7.533743858337402
    6. '   ' → logprob: -7.908743858337402
    7. '               ' → logprob: -7.908743858337402
    8. '           ' → logprob: -8.658743858337402
    9. '                   ' → logprob: -8.908743858337402
    10. '``' → logprob: -9.158743858337402

Token 1083: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0110534792765975
    2. ' =' → logprob: -4.511053562164307
    3. ',' → logprob: -12.386053085327148
    4. '=p' → logprob: -13.386053085327148
    5. '=
' → logprob: -17.63605308532715
    6. ')' → logprob: -18.01105308532715
    7. '   ' → logprob: -19.01105308532715
    8. ',p' → logprob: -19.13605308532715
    9. '＝' → logprob: -19.26105308532715
    10. '==' → logprob: -19.38605308532715

Token 1084: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.280175097752362e-05
    2. 'cur' → logprob: -9.500082969665527
    3. ' p' → logprob: -11.750082969665527
    4. ' cur' → logprob: -18.25008201599121
    5. '	p' → logprob: -22.00008201599121
    6. '   ' → logprob: -22.62508201599121
    7. ' ' → logprob: -22.87508201599121
    8. 'prev' → logprob: -23.50008201599121
    9. '[cur' → logprob: -24.00008201599121
    10. 'pc' → logprob: -24.62508201599121

Token 1085: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11086412519216537
    2. '```' → logprob: -3.3608641624450684
    3. '               ' → logprob: -3.4858641624450684
    4. '<|end|>' → logprob: -3.9858641624450684
    5. '   ' → logprob: -4.985864162445068
    6. '           ' → logprob: -5.235864162445068
    7. '       ' → logprob: -5.735864162445068
    8. '                       ' → logprob: -6.235864162445068
    9. '``' → logprob: -7.485864162445068
    10. ')' → logprob: -7.860864162445068

Token 1086: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2790457308292389
    2. '               ' → logprob: -2.904045820236206
    3. '```' → logprob: -3.029045820236206
    4. '<|end|>' → logprob: -3.154045820236206
    5. 'work' → logprob: -3.654045820236206
    6. '       ' → logprob: -3.779045820236206
    7. '   ' → logprob: -4.029045581817627
    8. '           ' → logprob: -5.029045581817627
    9. '                       ' → logprob: -5.154045581817627
    10. '[' → logprob: -5.279045581817627

Token 1087: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -6.869017852295656e-06
    2. ' work' → logprob: -12.000006675720215
    3. '                   ' → logprob: -14.875006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '               ' → logprob: -16.37500762939453
    6. '                       ' → logprob: -17.62500762939453
    7. '           ' → logprob: -18.37500762939453
    8. ' ' → logprob: -18.87500762939453
    9. '	work' → logprob: -18.87500762939453
    10. '       ' → logprob: -19.12500762939453

Token 1088: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -4.60414821645827e-06
    2. '_req' → logprob: -12.750004768371582
    3. 'cur' → logprob: -14.500004768371582
    4. 'nd' → logprob: -15.375004768371582
    5. ' req' → logprob: -15.625004768371582
    6. 'work' → logprob: -15.625004768371582
    7. '	req' → logprob: -16.500003814697266
    8. 'rec' → logprob: -16.625003814697266
    9. 'res' → logprob: -16.625003814697266
    10. 'reg' → logprob: -16.750003814697266

Token 1089: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.837811088189483e-05
    2. '.' → logprob: -9.750068664550781
    3. '.app' → logprob: -12.125068664550781
    4. ' .' → logprob: -12.625068664550781
    5. '.ap' → logprob: -14.000068664550781
    6. 'append' → logprob: -15.500068664550781
    7. '.Append' → logprob: -17.25006866455078
    8. '   ' → logprob: -17.37506866455078
    9. '.extend' → logprob: -17.50006866455078
    10. '=' → logprob: -18.00006866455078

Token 1090: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -7.896309739408025e-07
    2. 'cur' → logprob: -14.250000953674316
    3. '(' → logprob: -18.125
    4. '(curr' → logprob: -19.625
    5. '[cur' → logprob: -20.125
    6. '(c' → logprob: -20.625
    7. '(current' → logprob: -21.75
    8. ' cur' → logprob: -21.875
    9. '	cur' → logprob: -21.875
    10. '(
' → logprob: -23.0

Token 1091: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013333676906768233
    2. ')
' → logprob: -9.000133514404297
    3. '                   ' → logprob: -12.250133514404297
    4. '               ' → logprob: -13.125133514404297
    5. '       ' → logprob: -13.750133514404297
    6. '<|end|>' → logprob: -14.625133514404297
    7. '           ' → logprob: -14.750133514404297
    8. ']' → logprob: -14.875133514404297
    9. '   ' → logprob: -15.375133514404297
    10. ' )' → logprob: -16.125133514404297

Token 1092: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1093: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16511134803295135
    2. 'last' → logprob: -2.1651113033294678
    3. '   ' → logprob: -3.9151113033294678
    4. '           ' → logprob: -5.040111541748047
    5. 'print' → logprob: -6.040111541748047
    6. 'continue' → logprob: -6.540111541748047
    7. '       ' → logprob: -6.915111541748047
    8. 'if' (adapté à ' if') → logprob: -7.040111541748047
    9. ' last' → logprob: -7.040111541748047
    10. ' dist' → logprob: -7.290111541748047

Token 1094: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.40328848361968994
    2. 'DBG' → logprob: -1.65328848361969
    3. 'work' → logprob: -2.2782883644104004
    4. 'not' → logprob: -4.2782883644104
    5. 'prob' → logprob: -5.1532883644104
    6. 'DEBUG' → logprob: -5.1532883644104
    7. 'dbg' → logprob: -5.5282883644104
    8. 'dist' → logprob: -6.5282883644104
    9. 'False' → logprob: -6.9032883644104
    10. ' DBG' → logprob: -7.0282883644104

Token 1095: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -11.125019073486328
    3. '(vis' → logprob: -13.875019073486328
    4. 'work' → logprob: -14.000019073486328
    5. '(w' → logprob: -14.250019073486328
    6. '(word' → logprob: -15.000019073486328
    7. '(p' → logprob: -15.125019073486328
    8. ' (' → logprob: -15.125019073486328
    9. '(
' → logprob: -15.250019073486328
    10. '(prob' → logprob: -16.375019073486328

Token 1096: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.005963406525552273
    2. '(req' → logprob: -5.380963325500488
    3. 'work' → logprob: -7.380963325500488
    4. '_req' → logprob: -8.380963325500488
    5. '(work' → logprob: -8.880963325500488
    6. ')' → logprob: -8.880963325500488
    7. '>' → logprob: -10.255963325500488
    8. '==' → logprob: -10.505963325500488
    9. '[' → logprob: -10.755963325500488
    10. ']' → logprob: -11.005963325500488

Token 1097: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.924017071723938
    2. ')==' → logprob: -1.424017071723938
    3. ')' → logprob: -1.799017071723938
    4. '==' → logprob: -2.0490169525146484
    5. '>' → logprob: -3.0490169525146484
    6. ')<' → logprob: -4.799016952514648
    7. ' ==' → logprob: -5.424016952514648
    8. ']==' → logprob: -6.674016952514648
    9. '()>' → logprob: -6.799016952514648
    10. ' >' → logprob: -6.924016952514648

Token 1098: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07845035195350647
    2. '1' → logprob: -2.7034504413604736
    3. '2' → logprob: -6.2034502029418945
    4. '100' → logprob: -6.5784502029418945
    5. '10' → logprob: -6.9534502029418945
    6. ' ' → logprob: -7.3284502029418945
    7. '3' → logprob: -7.5784502029418945
    8. '20' → logprob: -7.8284502029418945
    9. '400' → logprob: -7.8284502029418945
    10. '5' → logprob: -8.203450202941895

Token 1099: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.943394660949707
    2. ':' → logprob: -1.193394660949707
    3. ' and' → logprob: -1.443394660949707
    4. '               ' → logprob: -2.693394660949707
    5. '           ' → logprob: -6.193394660949707
    6. 'and' → logprob: -6.818394660949707
    7. '       ' → logprob: -9.568394660949707
    8. '==' → logprob: -9.568394660949707
    9. '):
' → logprob: -9.818394660949707
    10. ':return' → logprob: -9.818394660949707

Token 1100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0048785158433020115
    2. '<|end|>' → logprob: -6.629878520965576
    3. '```' → logprob: -7.504878520965576
    4. '           ' → logprob: -7.629878520965576
    5. '                   ' → logprob: -7.879878520965576
    6. ':
' → logprob: -7.879878520965576
    7. '       ' → logprob: -7.879878520965576
    8. '                               ' → logprob: -8.379878044128418
    9. '
' → logprob: -9.004878044128418
    10. '			' → logprob: -9.129878044128418

Token 1101: ' nxt' (ID: 160200)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17750972509384155
    2. 'last' → logprob: -2.3025097846984863
    3. '               ' → logprob: -3.4275097846984863
    4. 'print' → logprob: -3.9275097846984863
    5. 'dd' → logprob: -5.552509784698486
    6. '   ' → logprob: -6.177509784698486
    7. '                   ' → logprob: -6.552509784698486
    8. ' dist' → logprob: -6.677509784698486
    9. ' last' → logprob: -7.052509784698486
    10. 'work' → logprob: -8.552509307861328

Token 1102: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00014215784904081374
    2. '_nd' → logprob: -10.000142097473145
    3. 'nt' → logprob: -11.000142097473145
    4. ' =' → logprob: -11.000142097473145
    5. 'work' → logprob: -11.125142097473145
    6. '[' → logprob: -11.750142097473145
    7. '_' → logprob: -12.125142097473145
    8. 'node' → logprob: -12.125142097473145
    9. 'n' → logprob: -12.750142097473145
    10. 'end' → logprob: -12.875142097473145

Token 1103: ' =' (ID: 314)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.00019245444855187088
    2. 'uary' → logprob: -9.000192642211914
    3. '[' → logprob: -10.875192642211914
    4. 'arity' → logprob: -11.000192642211914
    5. 'work' → logprob: -11.625192642211914
    6. 'ery' → logprob: -12.750192642211914
    7. '[i' → logprob: -13.000192642211914
    8. '   ' → logprob: -13.250192642211914
    9. '_work' → logprob: -13.375192642211914
    10. ' =' → logprob: -13.375192642211914

Token 1104: ' None' (ID: 4662)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.001847962848842144
    2. ' work' → logprob: -6.376847743988037
    3. 'n' → logprob: -9.126848220825195
    4. '   ' → logprob: -10.501848220825195
    5. 'es' → logprob: -13.376848220825195
    6. ' n' → logprob: -13.626848220825195
    7. '       ' → logprob: -14.251848220825195
    8. '	work' → logprob: -14.376848220825195
    9. '1' → logprob: -14.501848220825195
    10. 'w' → logprob: -14.626848220825195

Token 1105: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30795565247535706
    2. '<|end|>' → logprob: -1.5579556226730347
    3. '=' → logprob: -4.182955741882324
    4. ')' → logprob: -4.432955741882324
    5. '                   ' → logprob: -6.057955741882324
    6. '			' → logprob: -6.057955741882324
    7. '.' → logprob: -6.182955741882324
    8. ' =' → logprob: -6.182955741882324
    9. '(n' → logprob: -6.307955741882324
    10. '           ' → logprob: -6.307955741882324

Token 1106: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3906116485595703
    2. '<|end|>' → logprob: -1.3906116485595703
    3. ')' → logprob: -4.01561164855957
    4. '```' → logprob: -4.39061164855957
    5. '                   ' → logprob: -4.64061164855957
    6. '           ' → logprob: -5.01561164855957
    7. '       ' → logprob: -5.76561164855957
    8. 'n' → logprob: -6.01561164855957
    9. '=' → logprob: -6.01561164855957
    10. '.' → logprob: -6.51561164855957

Token 1107: ' tgt' (ID: 109597)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44075801968574524
    2. 'for' → logprob: -2.065757989883423
    3. '               ' → logprob: -2.815757989883423
    4. ' nxt' → logprob: -2.815757989883423
    5. 'if' → logprob: -3.315757989883423
    6. ' for' → logprob: -3.440757989883423
    7. 'work' → logprob: -4.190758228302002
    8. ' if' → logprob: -5.190758228302002
    9. 'while' → logprob: -5.440758228302002
    10. 'next' → logprob: -5.690758228302002

Token 1108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763739943504333
    2. '=' → logprob: -0.8263739943504333
    3. '=n' → logprob: -8.451374053955078
    4. '=None' → logprob: -8.826374053955078
    5. '   ' → logprob: -11.326374053955078
    6. 'idx' → logprob: -11.326374053955078
    7. '_idx' → logprob: -11.951374053955078
    8. '=[]' → logprob: -11.951374053955078
    9. '=_' → logprob: -12.951374053955078
    10. 's' → logprob: -13.076374053955078

Token 1109: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0007164848502725363
    2. ' work' → logprob: -7.250716686248779
    3. '0' → logprob: -12.625716209411621
    4. '               ' → logprob: -14.500716209411621
    5. '(work' → logprob: -14.500716209411621
    6. '   ' → logprob: -14.625716209411621
    7. 'None' → logprob: -15.000716209411621
    8. '           ' → logprob: -15.000716209411621
    9. '	work' → logprob: -15.500716209411621
    10. 'in' → logprob: -15.750716209411621

Token 1110: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0006469102227129042
    2. '_req' → logprob: -7.375647068023682
    3. 'idx' → logprob: -12.500646591186523
    4. '[' → logprob: -13.125646591186523
    5. ' =' → logprob: -13.250646591186523
    6. 'require' → logprob: -13.750646591186523
    7. '=' → logprob: -13.875646591186523
    8. 'res' → logprob: -14.000646591186523
    9. 'Req' → logprob: -14.125646591186523
    10. 'work' → logprob: -14.125646591186523

Token 1111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015432257205247879
    2. '.pop' → logprob: -4.515432357788086
    3. '[n' → logprob: -5.640432357788086
    4. '[len' → logprob: -7.515432357788086
    5. '[-' → logprob: -8.265432357788086
    6. '               ' → logprob: -11.640432357788086
    7. '[
' → logprob: -13.390432357788086
    8. '.index' → logprob: -13.515432357788086
    9. '   ' → logprob: -13.640432357788086
    10. '           ' → logprob: -13.890432357788086

Token 1112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006102138431742787
    2. '1' → logprob: -7.5006103515625
    3. ' ' → logprob: -10.6256103515625
    4. '   ' → logprob: -11.3756103515625
    5. '```' → logprob: -12.5631103515625
    6. '           ' → logprob: -13.0631103515625
    7. '[' → logprob: -13.3756103515625
    8. '+' → logprob: -13.6881103515625
    9. '                   ' → logprob: -13.7506103515625
    10. '               ' → logprob: -13.8131103515625

Token 1113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1017460897564888
    2. ']
' → logprob: -2.351746082305908
    3. '+' → logprob: -7.476746082305908
    4. '<|end|>' → logprob: -7.601746082305908
    5. ']

' → logprob: -9.351746559143066
    6. '[' → logprob: -9.476746559143066
    7. ' ]' → logprob: -9.726746559143066
    8. ']+' → logprob: -9.976746559143066
    9. '               ' → logprob: -9.976746559143066
    10. '][' → logprob: -10.726746559143066

Token 1114: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1115: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.24846100807189941
    2. 'last' → logprob: -2.1234610080718994
    3. 'n' → logprob: -2.7484610080718994
    4. 'work' → logprob: -4.12346076965332
    5. 't' → logprob: -4.24846076965332
    6. 'dist' → logprob: -6.12346076965332
    7. ' len' → logprob: -7.12346076965332
    8. 'DBG' → logprob: -7.74846076965332
    9. 'not' → logprob: -7.87346076965332
    10. ' nxt' → logprob: -7.99846076965332

Token 1116: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -0.0031893588602542877
    2. 'work' → logprob: -5.753189563751221
    3. '(' → logprob: -12.253189086914062
    4. ' work' → logprob: -12.503189086914062
    5. ' (' → logprob: -12.878189086914062
    6. '(
' → logprob: -15.003189086914062
    7. '	work' → logprob: -15.878189086914062
    8. '(word' → logprob: -17.003189086914062
    9. '(space' → logprob: -17.128189086914062
    10. '```' → logprob: -17.128189086914062

Token 1117: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.2555244565010071
    2. '_req' → logprob: -1.5055243968963623
    3. 'work' → logprob: -6.505524635314941
    4. '>' → logprob: -7.255524635314941
    5. '_work' → logprob: -7.755524635314941
    6. '_request' → logprob: -8.255524635314941
    7. 'Req' → logprob: -8.880524635314941
    8. ')' → logprob: -9.255524635314941
    9. '[' → logprob: -9.380524635314941
    10. '(req' → logprob: -9.505524635314941

Token 1118: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.02051350846886635
    2. ')' → logprob: -4.020513534545898
    3. ')<' → logprob: -6.145513534545898
    4. '>' → logprob: -9.020513534545898
    5. ')==' → logprob: -10.020513534545898
    6. ')!=' → logprob: -11.145513534545898
    7. ')>
' → logprob: -11.520513534545898
    8. ']>' → logprob: -11.645513534545898
    9. ' )' → logprob: -11.770513534545898
    10. ')
' → logprob: -13.395513534545898

Token 1119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18186001479625702
    2. '>' → logprob: -1.8068599700927734
    3. ' ' → logprob: -7.056859970092773
    4. '()>' → logprob: -7.681859970092773
    5. ' >' → logprob: -7.681859970092773
    6. '```' → logprob: -8.806859970092773
    7. '>
' → logprob: -10.056859970092773
    8. ')>' → logprob: -10.181859970092773
    9. '
' → logprob: -10.431859970092773
    10. '1' → logprob: -11.181859970092773

Token 1120: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3506249189376831
    2. 'else' → logprob: -1.350624918937683
    3. '<|end|>' → logprob: -3.7256250381469727
    4. '
' → logprob: -4.600625038146973
    5. '               ' → logprob: -6.600625038146973
    6. '```' → logprob: -8.100625038146973
    7. '<|end|>' → logprob: -8.975625038146973
    8. '                               ' → logprob: -9.475625038146973
    9. '                        
' → logprob: -9.850625038146973
    10. '                
' → logprob: -9.850625038146973

Token 1121: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07595576345920563
    2. '1' → logprob: -3.200955867767334
    3. ' None' → logprob: -3.950955867767334
    4. '0' → logprob: -4.575955867767334
    5. 'work' → logprob: -6.450955867767334
    6. ' ' → logprob: -7.700955867767334
    7. '-' → logprob: -8.200955390930176
    8. '   ' → logprob: -8.325955390930176
    9. '               ' → logprob: -9.450955390930176
    10. ' work' → logprob: -10.200955390930176

Token 1122: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.009396318346261978
    2. '1' → logprob: -4.884396553039551
    3. '0' → logprob: -6.759396553039551
    4. 'work' → logprob: -8.00939655303955
    5. '-' → logprob: -8.50939655303955
    6. ' None' → logprob: -9.75939655303955
    7. 'last' → logprob: -11.88439655303955
    8. '(None' → logprob: -11.88439655303955
    9. '   ' → logprob: -12.13439655303955
    10. 'none' → logprob: -12.25939655303955

Token 1123: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.500116765499115
    2. '<|end|>' → logprob: -1.5001168251037598
    3. '               ' → logprob: -1.8751168251037598
    4. 'n' → logprob: -5.75011682510376
    5. ')' → logprob: -5.87511682510376
    6. '(n' → logprob: -6.37511682510376
    7. '                
' → logprob: -6.62511682510376
    8. '```' → logprob: -6.87511682510376
    9. ')
' → logprob: -7.50011682510376
    10. '' → logprob: -7.62511682510376

Token 1124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6693965792655945
    2. ')' → logprob: -1.5443966388702393
    3. '<|end|>' → logprob: -1.7943966388702393
    4. 'n' → logprob: -3.7943966388702393
    5. '```' → logprob: -4.29439640045166
    6. '           ' → logprob: -4.79439640045166
    7. '                   ' → logprob: -4.79439640045166
    8. '                               ' → logprob: -5.04439640045166
    9. '(n' → logprob: -5.04439640045166
    10. '       ' → logprob: -5.29439640045166

Token 1125: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8597216606140137
    2. 'print' → logprob: -2.2347216606140137
    3. ' nxt' → logprob: -2.3597216606140137
    4. 't' → logprob: -2.9847216606140137
    5. ' last' → logprob: -2.9847216606140137
    6. ' for' → logprob: -3.1097216606140137
    7. 'dist' → logprob: -3.1097216606140137
    8. '               ' → logprob: -3.2347216606140137
    9. ' print' → logprob: -3.4847216606140137
    10. ' dist' → logprob: -3.7347216606140137

Token 1126: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.46913644671440125
    2. ' =' → logprob: -1.0941364765167236
    3. '=' → logprob: -3.7191364765167236
    4. 't' → logprob: -5.0941362380981445
    5. 'xt' → logprob: -5.9691362380981445
    6. 'n' → logprob: -6.5941362380981445
    7. 'nt' → logprob: -6.9691362380981445
    8. '_nd' → logprob: -6.9691362380981445
    9. 'node' → logprob: -7.5941362380981445
    10. '   ' → logprob: -8.094136238098145

Token 1127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252361536026001
    2. '=' → logprob: -1.502361536026001
    3. '=n' → logprob: -7.752361297607422
    4. '=t' → logprob: -14.002361297607422
    5. '   ' → logprob: -14.502361297607422
    6. ' ' → logprob: -15.002361297607422
    7. 'n' → logprob: -16.002361297607422
    8. ',' → logprob: -16.252361297607422
    9. 't' → logprob: -16.377361297607422
    10. '＝' → logprob: -16.502361297607422

Token 1128: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0061539351008832455
    2. ' nxt' → logprob: -5.1311540603637695
    3. 'work' → logprob: -9.25615406036377
    4. 'next' → logprob: -10.50615406036377
    5. '   ' → logprob: -10.75615406036377
    6. ' ' → logprob: -11.00615406036377
    7. 't' → logprob: -11.50615406036377
    8. 'es' → logprob: -11.50615406036377
    9. 'nx' → logprob: -11.75615406036377
    10. '	n' → logprob: -11.88115406036377

Token 1129: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.38872987031936646
    2. 'd' → logprob: -1.1387298107147217
    3. 'ary' → logprob: -6.763730049133301
    4. 'od' → logprob: -7.513730049133301
    5. '[' → logprob: -9.7637300491333
    6. 'ndry' → logprob: -10.6387300491333
    7. '_nd' → logprob: -11.2637300491333
    8. '[d' → logprob: -11.3887300491333
    9. 'node' → logprob: -11.7637300491333
    10. 'rd' → logprob: -12.1387300491333

Token 1130: 'ary' (ID: 815)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.03756626322865486
    2. '[' → logprob: -3.9125661849975586
    3. '[n' → logprob: -4.162566184997559
    4. '[i' → logprob: -7.787566184997559
    5. '[T' → logprob: -9.037566184997559
    6. 't' → logprob: -9.287566184997559
    7. '[target' → logprob: -9.412566184997559
    8. '   ' → logprob: -9.787566184997559
    9. '[next' → logprob: -9.787566184997559
    10. '[p' → logprob: -9.912566184997559

Token 1131: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.0008263026247732341
    2. '[t' → logprob: -7.875826358795166
    3. '[' → logprob: -8.000825881958008
    4. '[n' → logprob: -9.625825881958008
    5. ' [' → logprob: -11.250825881958008
    6. '[now' → logprob: -11.625825881958008
    7. '               ' → logprob: -12.250825881958008
    8. '[first' → logprob: -12.375825881958008
    9. '   ' → logprob: -13.375825881958008
    10. '[tmp' → logprob: -13.500825881958008

Token 1132: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.011557376943528652
    2. 't' → logprob: -5.636557579040527
    3. '[t' → logprob: -5.886557579040527
    4. 'nt' → logprob: -6.261557579040527
    5. '[' → logprob: -6.886557579040527
    6. '][' → logprob: -7.136557579040527
    7. '```' → logprob: -7.886557579040527
    8. ']' → logprob: -8.136557579040527
    9. '
' → logprob: -9.386557579040527
    10. 'n' → logprob: -9.511557579040527

Token 1133: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00408932426944375
    2. '[t' → logprob: -5.62908935546875
    3. '[' → logprob: -8.25408935546875
    4. '[n' → logprob: -9.00408935546875
    5. '[target' → logprob: -10.12908935546875
    6. ' ][' → logprob: -11.00408935546875
    7. ']' → logprob: -11.25408935546875
    8. '               ' → logprob: -11.87908935546875
    9. '[T' → logprob: -11.87908935546875
    10. '[tmp' → logprob: -12.62908935546875

Token 1134: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.8889261304575484e-06
    2. ' tgt' → logprob: -12.875003814697266
    3. '
' → logprob: -15.000003814697266
    4. 'tg' → logprob: -15.125003814697266
    5. '`t' → logprob: -16.125003814697266
    6. 'work' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.375003814697266
    8. 'target' → logprob: -16.500003814697266
    9. '	t' → logprob: -17.000003814697266
    10. '[t' → logprob: -17.250003814697266

Token 1135: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.059439271688461304
    2. 'g' → logprob: -3.309439182281494
    3. 't' → logprob: -3.934439182281494
    4. ' tgt' → logprob: -6.809439182281494
    5. 'arget' → logprob: -8.684439659118652
    6. 'tg' → logprob: -9.184439659118652
    7. '   ' → logprob: -9.684439659118652
    8. 'get' → logprob: -10.184439659118652
    9. '       ' → logprob: -11.309439659118652
    10. 'r' → logprob: -11.309439659118652

Token 1136: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000596043246332556
    2. ']
' → logprob: -8.750596046447754
    3. ' ]' → logprob: -8.875596046447754
    4. '[' → logprob: -9.625596046447754
    5. '][' → logprob: -9.875596046447754
    6. '])' → logprob: -10.125596046447754
    7. '[t' → logprob: -10.250596046447754
    8. '<|end|>' → logprob: -10.250596046447754
    9. '[n' → logprob: -11.500596046447754
    10. ']+' → logprob: -11.625596046447754

Token 1137: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1591004580259323
    2. '<|end|>' → logprob: -2.6591005325317383
    3. '               ' → logprob: -3.5341005325317383
    4. 'n' → logprob: -5.284100532531738
    5. '```' → logprob: -5.409100532531738
    6. '                               ' → logprob: -5.534100532531738
    7. '(n' → logprob: -5.659100532531738
    8. '\n' → logprob: -5.659100532531738
    9. '                   ' → logprob: -5.784100532531738
    10. '           ' → logprob: -5.909100532531738

Token 1138: ' print' (ID: 2123)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.28952667117118835
    2. 'last' → logprob: -1.4145267009735107
    3. '```' → logprob: -5.914526462554932
    4. 'n' → logprob: -6.664526462554932
    5. '
' → logprob: -7.039526462554932
    6. ' last' → logprob: -7.539526462554932
    7. '`' → logprob: -7.664526462554932
    8. '\n' → logprob: -7.914526462554932
    9. ' 
' → logprob: -8.16452693939209
    10. ' dist' → logprob: -8.66452693939209

Token 1139: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3517255485057831
    2. '(' → logprob: -1.9767255783081055
    3. '("' → logprob: -2.4767255783081055
    4. '('' → logprob: -2.7267255783081055
    5. '(f' → logprob: -5.3517255783081055
    6. '()' → logprob: -6.1017255783081055
    7. '("("' → logprob: -6.9767255783081055
    8. '("")' → logprob: -8.226725578308105
    9. '(""' → logprob: -9.351725578308105
    10. '(next' → logprob: -9.476725578308105

Token 1140: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -7.3458322731312364e-06
    2. 't' → logprob: -12.250007629394531
    3. 'ext' → logprob: -13.875007629394531
    4. '(' → logprob: -14.250007629394531
    5. 'ct' → logprob: -15.375007629394531
    6. '"' → logprob: -15.750007629394531
    7. 'x' → logprob: -15.750007629394531
    8. '```' → logprob: -15.875007629394531
    9. '(t' → logprob: -16.50000762939453
    10. ')' → logprob: -17.00000762939453

Token 1141: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0001037815964082256
    2. 'n' → logprob: -9.750103950500488
    3. ')' → logprob: -10.500103950500488
    4. '(nd' → logprob: -11.500103950500488
    5. '_nd' → logprob: -13.375103950500488
    6. 'nt' → logprob: -13.500103950500488
    7. 'node' → logprob: -13.875103950500488
    8. ' nd' → logprob: -14.250103950500488
    9. ')
' → logprob: -14.500103950500488
    10. '```' → logprob: -14.625103950500488

Token 1142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011915886716451496
    2. ')
' → logprob: -9.12511920928955
    3. '<|end|>' → logprob: -12.50011920928955
    4. ' )' → logprob: -13.37511920928955
    5. '())' → logprob: -13.62511920928955
    6. ',' → logprob: -14.00011920928955
    7. '')' → logprob: -14.25011920928955
    8. '()' → logprob: -14.62511920928955
    9. '+' → logprob: -14.87511920928955
    10. '))' → logprob: -15.25011920928955

Token 1143: '               ' (ID: 506)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6762257814407349
    2. '<|end|>' → logprob: -0.8012257814407349
    3. '```' → logprob: -4.426225662231445
    4. ')' → logprob: -4.801225662231445
    5. '
' → logprob: -5.051225662231445
    6. '\' → logprob: -5.301225662231445
    7. ''\' → logprob: -5.926225662231445
    8. '"\' → logprob: -6.051225662231445
    9. '``' → logprob: -7.051225662231445
    10. '  
' → logprob: -7.051225662231445

Token 1144: ' sys' (ID: 12228)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.05698864907026291
    2. '<|end|>' → logprob: -2.9319887161254883
    3. '
' → logprob: -6.681988716125488
    4. '```' → logprob: -8.181988716125488
    5. ')' → logprob: -9.056988716125488
    6. '\' → logprob: -9.181988716125488
    7. '\
' → logprob: -9.556988716125488
    8. ' 
' → logprob: -10.306988716125488
    9. '  
' → logprob: -10.306988716125488
    10. '"\' → logprob: -10.431988716125488

Token 1145: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.00023965541913639754
    2. 'stdout' → logprob: -8.375239372253418
    3. '.exit' → logprob: -12.500239372253418
    4. '(stdout' → logprob: -13.500239372253418
    5. '.stderr' → logprob: -13.625239372253418
    6. '.stdin' → logprob: -13.875239372253418
    7. '.flush' → logprob: -14.000239372253418
    8. '_stdout' → logprob: -14.250239372253418
    9. '```' → logprob: -15.500239372253418
    10. '.std' → logprob: -16.625240325927734

Token 1146: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -5.049755782238208e-05
    2. '.write' → logprob: -10.37505054473877
    3. '.' → logprob: -11.25005054473877
    4. '.stdout' → logprob: -12.50005054473877
    5. 'flush' → logprob: -13.50005054473877
    6. ' .' → logprob: -13.87505054473877
    7. '_flush' → logprob: -17.000049591064453
    8. '.Flush' → logprob: -17.875049591064453
    9. ' flush' → logprob: -18.000049591064453
    10. '​.' → logprob: -18.750049591064453

Token 1147: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1148: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1149: ' dist' (ID: 3601)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.11870065331459045
    2. '<|end|>' → logprob: -3.3687007427215576
    3. 'n' → logprob: -3.7437007427215576
    4. 'elif' → logprob: -4.7437005043029785
    5. 't' → logprob: -4.8687005043029785
    6. 'if' → logprob: -4.8687005043029785
    7. 'next' → logprob: -4.9937005043029785
    8. '```' → logprob: -5.1187005043029785
    9. '
' → logprob: -5.7437005043029785
    10. ' last' → logprob: -6.2437005043029785

Token 1150: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -7.465036105713807e-06
    2. '_from' → logprob: -12.625007629394531
    3. '[from' → logprob: -12.625007629394531
    4. '[' → logprob: -15.125007629394531
    5. 'From' → logprob: -15.375007629394531
    6. '=' → logprob: -16.75000762939453
    7. 'of' → logprob: -16.87500762939453
    8. '+=' → logprob: -16.87500762939453
    9. '	from' → logprob: -16.87500762939453
    10. 'for' → logprob: -16.87500762939453

Token 1151: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0013378625735640526
    2. ' last' → logprob: -6.626338005065918
    3. '_last' → logprob: -12.251338005065918
    4. 'next' → logprob: -13.001338005065918
    5. 'n' → logprob: -13.876338005065918
    6. ' ' → logprob: -14.126338005065918
    7. 'l' → logprob: -14.251338005065918
    8. ' nxt' → logprob: -14.251338005065918
    9. '1' → logprob: -14.376338005065918
    10. 'dist' → logprob: -15.001338005065918

Token 1152: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6973696351051331
    2. '+=' → logprob: -0.6973696351051331
    3. '=' → logprob: -6.072369575500488
    4. ' =' → logprob: -6.322369575500488
    5. '+' → logprob: -9.697369575500488
    6. '   ' → logprob: -11.072369575500488
    7. '    ' → logprob: -11.947369575500488
    8. '        ' → logprob: -12.322369575500488
    9. ']+=' → logprob: -12.322369575500488
    10. '	' → logprob: -12.822369575500488

Token 1153: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06345207989215851
    2. '1' → logprob: -2.8134520053863525
    3. ' dist' → logprob: -6.563452243804932
    4. ' ' → logprob: -10.438451766967773
    5. 'dd' → logprob: -10.938451766967773
    6. '(dist' → logprob: -11.938451766967773
    7. 'd' → logprob: -12.938451766967773
    8. 'dst' → logprob: -12.938451766967773
    9. '+' → logprob: -13.063451766967773
    10. 'int' → logprob: -13.188451766967773

Token 1154: '1' (ID: 16)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005284038372337818
    2. '1' → logprob: -5.255283832550049
    3. ' dist' → logprob: -10.755284309387207
    4. 'dd' → logprob: -11.130284309387207
    5. '(dist' → logprob: -12.005284309387207
    6. 'int' → logprob: -13.755284309387207
    7. '	dist' → logprob: -13.880284309387207
    8. 'dst' → logprob: -14.005284309387207
    9. 'd' → logprob: -14.005284309387207
    10. ' ' → logprob: -14.130284309387207

Token 1155: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1156: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1157: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7725302577018738
    2. 'continue' → logprob: -1.1475303173065186
    3. '<|end|>' → logprob: -1.8975303173065186
    4. 'else' → logprob: -3.1475303173065186
    5. '   ' → logprob: -4.5225300788879395
    6. '```' → logprob: -5.2725300788879395
    7. 'if' (adapté à ' if') → logprob: -5.7725300788879395
    8. ')' → logprob: -6.5225300788879395
    9. '...' → logprob: -6.6475300788879395
    10. '       ' → logprob: -6.8975300788879395

Token 1158: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3274917006492615
    2. 'n' → logprob: -1.3274917602539062
    3. ' nxt' → logprob: -4.577491760253906
    4. ' dist' → logprob: -6.202491760253906
    5. 't' → logprob: -7.077491760253906
    6. 'last' → logprob: -8.202491760253906
    7. 'next' → logprob: -8.577491760253906
    8. 'work' → logprob: -9.077491760253906
    9. '(dist' → logprob: -9.077491760253906
    10. '   ' → logprob: -9.327491760253906

Token 1159: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -2.339278580620885e-06
    2. '[from' → logprob: -13.625001907348633
    3. '==' → logprob: -14.250001907348633
    4. ' from' → logprob: -16.125001907348633
    5. '[' → logprob: -16.250001907348633
    6. '_from' → logprob: -16.500001907348633
    7. '```' → logprob: -17.000001907348633
    8. '
' → logprob: -17.125001907348633
    9. '	from' → logprob: -17.625001907348633
    10. 'for' → logprob: -17.750001907348633

Token 1160: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.5451681974809617e-05
    2. '_last' → logprob: -12.250015258789062
    3. ' last' → logprob: -12.375015258789062
    4. 'from' → logprob: -12.500015258789062
    5. 't' → logprob: -14.375015258789062
    6. 'Last' → logprob: -14.500015258789062
    7. 'dist' → logprob: -15.000015258789062
    8. '```' → logprob: -15.375015258789062
    9. 'n' → logprob: -15.750015258789062
    10. 'lasti' → logprob: -15.875015258789062

Token 1161: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12801572680473328
    2. ' ==' → logprob: -2.3780157566070557
    3. '>=' → logprob: -3.7530157566070557
    4. ' >=' → logprob: -6.378015518188477
    5. '+' → logprob: -7.253015518188477
    6. '<' → logprob: -7.378015518188477
    7. '*' → logprob: -8.253015518188477
    8. '>' → logprob: -8.753015518188477
    9. '<n' → logprob: -8.878015518188477
    10. '[' → logprob: -9.503015518188477

Token 1162: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0003421375877223909
    2. 'MAX' → logprob: -8.87534236907959
    3. ' dist' → logprob: -8.87534236907959
    4. 'len' → logprob: -10.75034236907959
    5. '1' → logprob: -11.12534236907959
    6. 'max' → logprob: -11.37534236907959
    7. 'n' → logprob: -12.37534236907959
    8. '   ' → logprob: -13.37534236907959
    9. '(dist' → logprob: -13.62534236907959
    10. 'print' → logprob: -14.12534236907959

Token 1163: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.44611623883247375
    2. 'from' → logprob: -1.6961162090301514
    3. '[t' → logprob: -2.1961162090301514
    4. '[n' → logprob: -2.8211162090301514
    5. '[from' → logprob: -5.4461164474487305
    6. '[next' → logprob: -7.1961164474487305
    7. '[' → logprob: -8.32111644744873
    8. '[target' → logprob: -9.19611644744873
    9. '[now' → logprob: -9.69611644744873
    10. '   ' → logprob: -9.82111644744873

Token 1164: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -6.034592388459714e-06
    2. 'nt' → logprob: -13.000005722045898
    3. '[' → logprob: -13.875005722045898
    4. '   ' → logprob: -14.250005722045898
    5. '```' → logprob: -14.625005722045898
    6. 'ng' → logprob: -15.000005722045898
    7. ' nd' → logprob: -15.375005722045898
    8. '  ' → logprob: -15.500005722045898
    9. 'n' → logprob: -16.0000057220459
    10. 'd' → logprob: -16.3750057220459

Token 1165: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002559753193054348
    2. '[n' → logprob: -8.375255584716797
    3. '[t' → logprob: -11.375255584716797
    4. 'n' → logprob: -12.250255584716797
    5. ']' → logprob: -12.625255584716797
    6. 't' → logprob: -13.250255584716797
    7. '   ' → logprob: -13.875255584716797
    8. ' ][' → logprob: -13.875255584716797
    9. '       ' → logprob: -15.000255584716797
    10. '[' → logprob: -15.125255584716797

Token 1166: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015431918436661363
    2. 't' → logprob: -6.501543045043945
    3. ' nxt' → logprob: -10.251543045043945
    4. 'next' → logprob: -12.626543045043945
    5. '
' → logprob: -14.376543045043945
    6. '   ' → logprob: -14.751543045043945
    7. '[n' → logprob: -15.001543045043945
    8. '```' → logprob: -15.376543045043945
    9. 'target' → logprob: -15.501543045043945
    10. 'nt' → logprob: -16.501543045043945

Token 1167: 'xt' (ID: 711)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03380659967660904
    2. 'n' → logprob: -3.408806562423706
    3. 'xt' → logprob: -10.408806800842285
    4. '][' → logprob: -10.408806800842285
    5. '```' → logprob: -10.783806800842285
    6. 'nt' → logprob: -11.283806800842285
    7. '`t' → logprob: -11.408806800842285
    8. '[t' → logprob: -11.658806800842285
    9. '[n' → logprob: -12.158806800842285
    10. 'tg' → logprob: -12.283806800842285

Token 1168: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00025287605240009725
    2. 'n' → logprob: -8.500252723693848
    3. '][' → logprob: -11.125252723693848
    4. '
' → logprob: -12.000252723693848
    5. '```' → logprob: -12.125252723693848
    6. '+' → logprob: -12.375252723693848
    7. '   ' → logprob: -12.625252723693848
    8. '[n' → logprob: -12.625252723693848
    9. 'nt' → logprob: -12.750252723693848
    10. '[' → logprob: -13.500252723693848

Token 1169: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.06299997866153717
    2. ']:' → logprob: -2.812999963760376
    3. ']' → logprob: -7.063000202178955
    4. ']+' → logprob: -10.187999725341797
    5. ']:
' → logprob: -10.187999725341797
    6. ']:

' → logprob: -11.187999725341797
    7. '[' → logprob: -11.312999725341797
    8. '[t' → logprob: -11.562999725341797
    9. '[next' → logprob: -11.687999725341797
    10. '       ' → logprob: -11.687999725341797

Token 1170: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14373236894607544
    2. ':
' → logprob: -2.1437323093414307
    3. '               ' → logprob: -5.26873254776001
    4. '                       ' → logprob: -5.26873254776001
    5. ':' → logprob: -5.76873254776001
    6. '```' → logprob: -6.76873254776001
    7. '           ' → logprob: -7.51873254776001
    8. '   ' → logprob: -7.64373254776001
    9. '       ' → logprob: -8.143732070922852
    10. '                           ' → logprob: -8.643732070922852

Token 1171: ' dist' (ID: 3601)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00020687808864749968
    2. '   ' → logprob: -9.25020694732666
    3. ' last' → logprob: -9.50020694732666
    4. '                   ' → logprob: -10.50020694732666
    5. '       ' → logprob: -12.37520694732666
    6. '               ' → logprob: -13.25020694732666
    7. '	last' → logprob: -13.50020694732666
    8. '                       ' → logprob: -14.62520694732666
    9. '           ' → logprob: -15.50020694732666
    10. ' ' → logprob: -15.87520694732666

Token 1172: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -14.500000953674316
    3. '	from' → logprob: -17.625
    4. ' =' → logprob: -17.75
    5. ' from' → logprob: -17.75
    6. '_from' → logprob: -18.25
    7. 'From' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. 'for' → logprob: -20.5
    10. '.from' → logprob: -20.5

Token 1173: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -3.7697225252486533e-06
    2. '_last' → logprob: -13.125003814697266
    3. ' last' → logprob: -13.500003814697266
    4. '	last' → logprob: -15.875003814697266
    5. 'lasti' → logprob: -16.125003814697266
    6. 'Last' → logprob: -17.250003814697266
    7. 'next' → logprob: -17.875003814697266
    8. ' ' → logprob: -18.125003814697266
    9. '1' → logprob: -18.125003814697266
    10. '
' → logprob: -18.250003814697266

Token 1174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003812217037193477
    2. ' =' → logprob: -7.875380992889404
    3. '+=' → logprob: -14.500381469726562
    4. '   ' → logprob: -15.000381469726562
    5. '==' → logprob: -15.625381469726562
    6. '=
' → logprob: -16.500381469726562
    7. '.=' → logprob: -17.500381469726562
    8. ',' → logprob: -18.250381469726562
    9. '       ' → logprob: -18.625381469726562
    10. '           ' → logprob: -19.125381469726562

Token 1175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '                   ' → logprob: -17.375
    4. '   ' → logprob: -18.125
    5. '                       ' → logprob: -19.5
    6. '               ' → logprob: -19.625
    7. '```' → logprob: -20.5
    8. '۰' → logprob: -21.125
    9. '           ' → logprob: -21.25
    10. '                           ' → logprob: -21.5

Token 1176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.0
    4. '۰' → logprob: -19.375
    5. '<|end|>' → logprob: -20.125
    6. '   ' → logprob: -20.5
    7. '000' → logprob: -21.25
    8. '00' → logprob: -21.5
    9. '=' → logprob: -22.0
    10. '０' → logprob: -22.375

Token 1177: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009196366183459759
    2. '               ' → logprob: -5.0091962814331055
    3. '   ' → logprob: -6.7591962814331055
    4. '           ' → logprob: -6.7591962814331055
    5. '       ' → logprob: -9.759196281433105
    6. 'last' → logprob: -9.884196281433105
    7. '                       ' → logprob: -10.634196281433105
    8. '                           ' → logprob: -11.259196281433105
    9. '                  ' → logprob: -12.884196281433105
    10. '
' → logprob: -13.884196281433105

Token 1178: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009586794301867485
    2. '               ' → logprob: -4.759586811065674
    3. 'last' → logprob: -7.634586811065674
    4. '   ' → logprob: -8.384586334228516
    5. '           ' → logprob: -8.384586334228516
    6. '                       ' → logprob: -11.134586334228516
    7. '       ' → logprob: -11.884586334228516
    8. '                           ' → logprob: -12.134586334228516
    9. '                  ' → logprob: -13.509586334228516
    10. 'if' → logprob: -14.759586334228516

Token 1179: ' if' (ID: 538)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0001882823125924915
    2. '   ' → logprob: -8.750187873840332
    3. '                   ' → logprob: -10.500187873840332
    4. ' last' → logprob: -13.125187873840332
    5. '               ' → logprob: -15.875187873840332
    6. '	last' → logprob: -16.62518882751465
    7. '           ' → logprob: -17.12518882751465
    8. ' ' → logprob: -19.37518882751465
    9. '       ' → logprob: -19.62518882751465
    10. '  ' → logprob: -20.00018882751465

Token 1180: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009399627335369587
    2. 'last' → logprob: -5.5093994140625
    3. ' nxt' → logprob: -5.8843994140625
    4. 'next' → logprob: -6.5093994140625
    5. 't' → logprob: -7.0093994140625
    6. '   ' → logprob: -9.2593994140625
    7. 'work' → logprob: -12.0093994140625
    8. ' last' → logprob: -12.0093994140625
    9. 'not' → logprob: -12.5093994140625
    10. '  ' → logprob: -12.6343994140625

Token 1181: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -0.029836921021342278
    2. 'work' → logprob: -3.529836893081665
    3. '(n' → logprob: -9.404836654663086
    4. 'n' → logprob: -13.654836654663086
    5. '(' → logprob: -14.154836654663086
    6. '(t' → logprob: -14.654836654663086
    7. 'print' → logprob: -15.029836654663086
    8. '(next' → logprob: -15.154836654663086
    9. '(print' → logprob: -15.654836654663086
    10. '	work' → logprob: -15.654836654663086

Token 1182: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0022466040682047606
    2. '_req' → logprob: -6.127246379852295
    3. '[' → logprob: -10.877246856689453
    4. '_' → logprob: -11.502246856689453
    5. 'nd' → logprob: -11.877246856689453
    6. ' req' → logprob: -12.752246856689453
    7. '_request' → logprob: -12.752246856689453
    8. '   ' → logprob: -13.127246856689453
    9. '[n' → logprob: -13.377246856689453
    10. 'work' → logprob: -13.502246856689453

Token 1183: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.15176652371883392
    2. ')' → logprob: -2.026766538619995
    3. '>' → logprob: -5.276766300201416
    4. ')==' → logprob: -5.776766300201416
    5. '[' → logprob: -8.526766777038574
    6. ')>
' → logprob: -9.151766777038574
    7. ']>' → logprob: -9.276766777038574
    8. '[next' → logprob: -9.276766777038574
    9. '>[' → logprob: -10.151766777038574
    10. ' >' → logprob: -10.276766777038574

Token 1184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004661403596401215
    2. '1' → logprob: -5.379661560058594
    3. ' ' → logprob: -11.379661560058594
    4. '```' → logprob: -11.379661560058594
    5. '>' → logprob: -11.629661560058594
    6. '   ' → logprob: -11.879661560058594
    7. '``' → logprob: -13.754661560058594
    8. '       ' → logprob: -15.254661560058594
    9. '           ' → logprob: -15.504661560058594
    10. '=' → logprob: -15.504661560058594

Token 1185: ' and' (ID: 326)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.29125848412513733
    2. ':
' → logprob: -1.916258454322815
    3. ' and' → logprob: -2.4162585735321045
    4. ':' → logprob: -5.041258335113525
    5. 'and' → logprob: -5.541258335113525
    6. '                   ' → logprob: -5.666258335113525
    7. '==' → logprob: -6.291258335113525
    8. '```' → logprob: -8.416258811950684
    9. ' ==' → logprob: -9.541258811950684
    10. '                           ' → logprob: -9.916258811950684

Token 1186: ' nxt' (ID: 160200)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.5855200290679932
    2. 'n' → logprob: -0.8355200290679932
    3. 't' → logprob: -5.210519790649414
    4. 'last' → logprob: -6.585519790649414
    5. 'next' → logprob: -6.960519790649414
    6. ' nxt' → logprob: -7.335519790649414
    7. ' work' → logprob: -7.835519790649414
    8. '   ' → logprob: -8.585519790649414
    9. '       ' → logprob: -8.710519790649414
    10. 'len' → logprob: -8.835519790649414

Token 1187: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -12.750020027160645
    3. 'nt' → logprob: -12.750020027160645
    4. '```' → logprob: -12.750020027160645
    5. '
' → logprob: -12.875020027160645
    6. '   ' → logprob: -13.000020027160645
    7. 'n' → logprob: -13.250020027160645
    8. 'node' → logprob: -13.625020027160645
    9. ' nd' → logprob: -13.875020027160645
    10. '_nd' → logprob: -14.625020027160645

Token 1188: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02578773722052574
    2. ' ==' → logprob: -3.775787830352783
    3. ']==' → logprob: -6.025787830352783
    4. '==
' → logprob: -10.275787353515625
    5. ')==' → logprob: -10.275787353515625
    6. '[' → logprob: -10.900787353515625
    7. '()==' → logprob: -11.650787353515625
    8. '']==' → logprob: -12.025787353515625
    9. ']' → logprob: -12.275787353515625
    10. '```' → logprob: -12.400787353515625

Token 1189: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -1.2664456789934775e-06
    2. ' work' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '       ' → logprob: -17.125001907348633
    5. 't' → logprob: -18.625001907348633
    6. '           ' → logprob: -19.500001907348633
    7. '	work' → logprob: -19.500001907348633
    8. '  ' → logprob: -19.750001907348633
    9. '               ' → logprob: -19.750001907348633
    10. '
' → logprob: -20.250001907348633

Token 1190: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.013556746765971184
    2. 'work' → logprob: -4.388556957244873
    3. 'q' → logprob: -7.513556957244873
    4. '_req' → logprob: -8.138556480407715
    5. 'ork' → logprob: -9.513556480407715
    6. 'nd' → logprob: -10.638556480407715
    7. '[' → logprob: -10.763556480407715
    8. 'Req' → logprob: -11.013556480407715
    9. '   ' → logprob: -11.513556480407715
    10. '
' → logprob: -11.638556480407715

Token 1191: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00048644188791513443
    2. '[len' → logprob: -8.000486373901367
    3. '.index' → logprob: -10.250486373901367
    4. '               ' → logprob: -10.375486373901367
    5. '[n' → logprob: -10.750486373901367
    6. '                   ' → logprob: -10.750486373901367
    7. '[-' → logprob: -11.375486373901367
    8. '           ' → logprob: -11.500486373901367
    9. 'index' → logprob: -12.000486373901367
    10. '                       ' → logprob: -12.875486373901367

Token 1192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012868782505393028
    2. '[' → logprob: -9.500128746032715
    3. '                   ' → logprob: -11.375128746032715
    4. '               ' → logprob: -11.750128746032715
    5. '                       ' → logprob: -12.125128746032715
    6. '                           ' → logprob: -12.125128746032715
    7. '           ' → logprob: -12.125128746032715
    8. '                               ' → logprob: -12.250128746032715
    9. '   ' → logprob: -12.375128746032715
    10. '                                   ' → logprob: -12.750128746032715

Token 1193: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.08476313948631287
    2. ':
' → logprob: -3.2097630500793457
    3. '():
' → logprob: -3.7097630500793457
    4. ']:' → logprob: -5.084763050079346
    5. '):
' → logprob: -5.459763050079346
    6. ':' → logprob: -5.584763050079346
    7. '       ' → logprob: -6.959763050079346
    8. '[' → logprob: -7.709763050079346
    9. '```' → logprob: -8.959763526916504
    10. ']' → logprob: -9.209763526916504

Token 1194: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1062372550368309
    2. '```' → logprob: -2.4812371730804443
    3. '                   ' → logprob: -5.106237411499023
    4. '       ' → logprob: -5.356237411499023
    5. '<|end|>' → logprob: -6.231237411499023
    6. '``' → logprob: -6.981237411499023
    7. '   ' → logprob: -7.106237411499023
    8. '               ' → logprob: -7.356237411499023
    9. '                           ' → logprob: -7.481237411499023
    10. '                        
' → logprob: -7.731237411499023

Token 1195: ' del' (ID: 1083)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11921416968107224
    2. ' work' → logprob: -2.8692140579223633
    3. '   ' → logprob: -3.6192140579223633
    4. '           ' → logprob: -4.619214057922363
    5. 'work' → logprob: -5.244214057922363
    6. '                   ' → logprob: -5.869214057922363
    7. '```' → logprob: -5.994214057922363
    8. '                       ' → logprob: -6.244214057922363
    9. '               ' → logprob: -6.494214057922363
    10. '                               ' → logprob: -6.619214057922363

Token 1196: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.00026205103495158255
    2. ' work' → logprob: -8.250262260437012
    3. '(work' → logprob: -14.250262260437012
    4. '	work' → logprob: -17.500261306762695
    5. '               ' → logprob: -19.750261306762695
    6. '           ' → logprob: -19.875261306762695
    7. '.work' → logprob: -20.625261306762695
    8. '   ' → logprob: -20.625261306762695
    9. '                   ' → logprob: -21.000261306762695
    10. '       ' → logprob: -21.250261306762695

Token 1197: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.00012451570364646614
    2. '_req' → logprob: -9.00012493133545
    3. 'eq' → logprob: -15.25012493133545
    4. '	req' → logprob: -15.37512493133545
    5. 'Req' → logprob: -15.62512493133545
    6. 'q' → logprob: -16.125123977661133
    7. 'reg' → logprob: -17.000123977661133
    8. ' req' → logprob: -17.250123977661133
    9. '(req' → logprob: -17.375123977661133
    10. '.req' → logprob: -17.500123977661133

Token 1198: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012797261297237128
    2. '0' → logprob: -9.875127792358398
    3. '(' → logprob: -10.000127792358398
    4. '                       ' → logprob: -10.875127792358398
    5. ' [' → logprob: -13.000127792358398
    6. ':' → logprob: -13.000127792358398
    7. '[:' → logprob: -13.500127792358398
    8. '       ' → logprob: -13.750127792358398
    9. '```' → logprob: -13.750127792358398
    10. '               ' → logprob: -14.500127792358398

Token 1199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ':' → logprob: -13.250003814697266
    3. '```' → logprob: -14.625003814697266
    4. '[' → logprob: -15.000003814697266
    5. '
' → logprob: -15.125003814697266
    6. ' ' → logprob: -15.250003814697266
    7. '   ' → logprob: -15.375003814697266
    8. 'work' → logprob: -16.125003814697266
    9. '...' → logprob: -17.250003814697266
    10. '  ' → logprob: -17.500003814697266

Token 1200: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1201: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1202: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.7056060433387756
    2. '<|end|>' → logprob: -1.3306059837341309
    3. '               ' → logprob: -2.580605983734131
    4. '                   ' → logprob: -3.080605983734131
    5. '           ' → logprob: -3.455605983734131
    6. '       ' → logprob: -3.580605983734131
    7. 'else' → logprob: -3.830605983734131
    8. 'elif' → logprob: -4.330605983734131
    9. 'continue' → logprob: -5.080605983734131
    10. '   ' → logprob: -5.705605983734131

Token 1203: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -6.110668618930504e-05
    2. '=' → logprob: -10.12506103515625
    3. ' =' → logprob: -11.00006103515625
    4. 'nds' → logprob: -13.75006103515625
    5. '   ' → logprob: -14.50006103515625
    6. '_nd' → logprob: -14.87506103515625
    7. 'n' → logprob: -15.25006103515625
    8. '```' → logprob: -15.25006103515625
    9. '  ' → logprob: -15.37506103515625
    10. 'nt' → logprob: -15.37506103515625

Token 1204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=n' → logprob: -17.273244857788086
    4. '   ' → logprob: -17.773244857788086
    5. '+=' → logprob: -18.023244857788086
    6. ' +=' → logprob: -18.398244857788086
    7. '.=' → logprob: -19.148244857788086
    8. '＝' → logprob: -19.398244857788086
    9. '	' → logprob: -19.898244857788086
    10. '    ' → logprob: -20.023244857788086

Token 1205: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12694290280342102
    2. ' nxt' → logprob: -2.1269428730010986
    3. 'next' → logprob: -11.50194263458252
    4. ' nex' → logprob: -13.62694263458252
    5. '	n' → logprob: -13.87694263458252
    6. ' next' → logprob: -13.87694263458252
    7. '   ' → logprob: -15.00194263458252
    8. ' n' → logprob: -15.00194263458252
    9. '_n' → logprob: -15.12694263458252
    10. '(n' → logprob: -15.75194263458252

Token 1206: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00037967207026667893
    2. 'od' → logprob: -8.12537956237793
    3. 'd' → logprob: -9.50037956237793
    4. 'cd' → logprob: -12.75037956237793
    5. '_nd' → logprob: -13.37537956237793
    6. ' nd' → logprob: -14.00037956237793
    7. 'ct' → logprob: -14.12537956237793
    8. '```' → logprob: -14.12537956237793
    9. 'д' → logprob: -14.37537956237793
    10. '[' → logprob: -14.87537956237793

Token 1207: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1208: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1209: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8208903670310974
    2. 'else' (adapté à ' else') → logprob: -1.4458904266357422
    3. '<|end|>' → logprob: -1.4458904266357422
    4. '   ' → logprob: -2.820890426635742
    5. '```' → logprob: -4.945890426635742
    6. '       ' → logprob: -5.070890426635742
    7. 'continue' → logprob: -5.320890426635742
    8. 'if' → logprob: -5.945890426635742
    9. 'n' → logprob: -6.820890426635742
    10. '...' → logprob: -7.195890426635742

Token 1210: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003487939015030861
    2. '       ' → logprob: -6.753488063812256
    3. ':
' → logprob: -7.128488063812256
    4. '           ' → logprob: -7.253488063812256
    5. '   ' → logprob: -8.253487586975098
    6. '                   ' → logprob: -8.503487586975098
    7. ':' → logprob: -9.378487586975098
    8. '	           ' → logprob: -9.753487586975098
    9. ' pass' → logprob: -9.878487586975098
    10. '		       ' → logprob: -10.628487586975098

Token 1211: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019936053082346916
    2. '           ' → logprob: -4.3949360847473145
    3. '       ' → logprob: -6.0199360847473145
    4. '   ' → logprob: -6.7699360847473145
    5. ' pass' → logprob: -7.1449360847473145
    6. '	           ' → logprob: -7.1449360847473145
    7. '                   ' → logprob: -7.7699360847473145
    8. 'pass' → logprob: -7.7699360847473145
    9. '```' → logprob: -7.8949360847473145
    10. 'print' → logprob: -8.144935607910156

Token 1212: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.026323866099119186
    2. ' print' → logprob: -4.0263237953186035
    3. '               ' → logprob: -4.9013237953186035
    4. 'pass' → logprob: -8.276324272155762
    5. ' pass' → logprob: -8.776324272155762
    6. 'dist' → logprob: -8.901324272155762
    7. 'break' → logprob: -10.026324272155762
    8. '           ' → logprob: -10.276324272155762
    9. 'n' → logprob: -10.901324272155762
    10. ' dist' → logprob: -11.276324272155762

Token 1213: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015249362215399742
    2. '(-' → logprob: -5.140249252319336
    3. '("' → logprob: -5.265249252319336
    4. '()' → logprob: -5.765249252319336
    5. '(last' → logprob: -7.140249252319336
    6. '("")' → logprob: -9.640249252319336
    7. '('' → logprob: -10.015249252319336
    8. '(n' → logprob: -10.265249252319336
    9. '()
' → logprob: -10.765249252319336
    10. '("-' → logprob: -11.640249252319336

Token 1214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -11.375021934509277
    3. '2' → logprob: -12.000021934509277
    4. '   ' → logprob: -13.625021934509277
    5. '
' → logprob: -13.750021934509277
    6. '-' → logprob: -14.375021934509277
    7. ' -' → logprob: -15.375021934509277
    8. '  ' → logprob: -15.437521934509277
    9. '100' → logprob: -15.500021934509277
    10. '0' → logprob: -15.812521934509277

Token 1215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ')
' → logprob: -10.375032424926758
    3. '<|end|>' → logprob: -14.375032424926758
    4. ' )' → logprob: -16.000032424926758
    5. '())' → logprob: -16.625032424926758
    6. '           ' → logprob: -16.875032424926758
    7. ')return' → logprob: -17.750032424926758
    8. '")' → logprob: -17.750032424926758
    9. ')}}' → logprob: -17.875032424926758
    10. ')}' → logprob: -18.000032424926758

Token 1216: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1217: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.14349496364593506
    2. ' sys' → logprob: -2.0184950828552246
    3. 'flush' → logprob: -8.393494606018066
    4. 'exit' → logprob: -8.643494606018066
    5. '	sys' → logprob: -9.143494606018066
    6. '```' → logprob: -10.143494606018066
    7. ' flush' → logprob: -10.143494606018066
    8. '               ' → logprob: -10.268494606018066
    9. 'continue' → logprob: -10.518494606018066
    10. '           ' → logprob: -10.768494606018066

Token 1218: '.stdout' (ID: 59462)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.6669192910194397
    2. '.stdout' → logprob: -1.166919231414795
    3. 'td' → logprob: -1.916919231414795
    4. 'stdout' → logprob: -4.041919231414795
    5. 'xit' → logprob: -5.791919231414795
    6. 'exit' → logprob: -5.916919231414795
    7. 'sys' → logprob: -6.166919231414795
    8. '.stderr' → logprob: -6.791919231414795
    9. 'd' → logprob: -7.666919231414795
    10. 't' → logprob: -8.666919708251953

Token 1219: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.048651184886693954
    2. 'flush' → logprob: -3.0486512184143066
    3. '.write' → logprob: -9.923650741577148
    4. '_flush' → logprob: -11.548650741577148
    5. 'write' → logprob: -12.798650741577148
    6. ' flush' → logprob: -14.048650741577148
    7. 'lush' → logprob: -14.298650741577148
    8. '.Flush' → logprob: -15.298650741577148
    9. '```' → logprob: -15.673650741577148
    10. '().' → logprob: -15.798650741577148

Token 1220: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1221: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006912153214216232
    2. 'else' (adapté à ' else') → logprob: -5.1319122314453125
    3. 'elif' → logprob: -7.8819122314453125
    4. '<|end|>' → logprob: -8.006912231445312
    5. '       ' → logprob: -8.506912231445312
    6. ' else' → logprob: -10.131912231445312
    7. '	else' → logprob: -11.631912231445312
    8. 'continue' → logprob: -11.631912231445312
    9. '           ' → logprob: -12.756912231445312
    10. '	elif' → logprob: -13.006912231445312

Token 1223: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49319711327552795
    2. ':
' → logprob: -0.9931970834732056
    3. ':' → logprob: -3.993197202682495
    4. '       ' → logprob: -8.493197441101074
    5. '               ' → logprob: -8.618197441101074
    6. '		' → logprob: -11.118197441101074
    7. '   ' → logprob: -11.368197441101074
    8. '                   ' → logprob: -11.368197441101074
    9. '	       ' → logprob: -11.368197441101074
    10. '          ' → logprob: -11.618197441101074

Token 1224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.387779176235199
    2. 'print' → logprob: -1.1377792358398438
    3. '               ' → logprob: -7.887779235839844
    4. '       ' → logprob: -8.262779235839844
    5. ' print' → logprob: -8.387779235839844
    6. '   ' → logprob: -10.137779235839844
    7. '```' → logprob: -12.512779235839844
    8. 'pass' → logprob: -13.387779235839844
    9. '                   ' → logprob: -14.512779235839844
    10. '		' → logprob: -14.637779235839844

Token 1225: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00091050990158692
    2. ' print' → logprob: -7.50091028213501
    3. '           ' → logprob: -8.000910758972168
    4. 'pass' → logprob: -11.125910758972168
    5. '               ' → logprob: -12.375910758972168
    6. '   ' → logprob: -14.000910758972168
    7. '       ' → logprob: -14.125910758972168
    8. 'dd' → logprob: -15.125910758972168
    9. '                   ' → logprob: -15.625910758972168
    10. 'continue' → logprob: -15.625910758972168

Token 1226: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -8.554343366995454e-05
    2. '(' → logprob: -9.375085830688477
    3. '("-' → logprob: -14.875085830688477
    4. '("' → logprob: -15.500085830688477
    5. '-' → logprob: -16.000085830688477
    6. '()' → logprob: -17.375085830688477
    7. '('' → logprob: -18.125085830688477
    8. '(
' → logprob: -18.625085830688477
    9. '('-' → logprob: -18.625085830688477
    10. ' (-' → logprob: -18.625085830688477

Token 1227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06198751926422119
    2. '-' → logprob: -2.8119874000549316
    3. ' -' → logprob: -11.06198787689209
    4. ' ' → logprob: -14.18698787689209
    5. '2' → logprob: -14.56198787689209
    6. '(-' → logprob: -14.68698787689209
    7. '   ' → logprob: -14.87448787689209
    8. '```' → logprob: -15.43698787689209
    9. '\-' → logprob: -15.56198787689209
    10. '
' → logprob: -15.74948787689209

Token 1228: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048630282282829285
    2. ')' → logprob: -3.0486302375793457
    3. ')
' → logprob: -10.548630714416504
    4. '           ' → logprob: -11.298630714416504
    5. '               ' → logprob: -13.423630714416504
    6. '())
' → logprob: -14.048630714416504
    7. '       ' → logprob: -14.548630714416504
    8. ' )
' → logprob: -14.548630714416504
    9. '")
' → logprob: -15.798630714416504
    10. '<|end|>' → logprob: -15.798630714416504

Token 1229: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1230: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.024086760357022285
    2. ' sys' → logprob: -3.8990867137908936
    3. '(sys' → logprob: -6.649086952209473
    4. '```' → logprob: -7.024086952209473
    5. '=sys' → logprob: -7.524086952209473
    6. '	sys' → logprob: -7.649086952209473
    7. '<|end|>' → logprob: -9.024086952209473
    8. '.sys' → logprob: -9.774086952209473
    9. '``' → logprob: -10.149086952209473
    10. '
' → logprob: -10.274086952209473

Token 1231: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -2.7610454708337784e-05
    2. '.stderr' → logprob: -11.250027656555176
    3. '.stdin' → logprob: -11.625027656555176
    4. 'stdout' → logprob: -12.375027656555176
    5. '.std' → logprob: -14.000027656555176
    6. '.exit' → logprob: -15.125027656555176
    7. '.argv' → logprob: -16.87502670288086
    8. '.' → logprob: -16.87502670288086
    9. '```' → logprob: -17.00002670288086
    10. ' .' → logprob: -17.25002670288086

Token 1232: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.0005586316110566258
    2. 'flush' → logprob: -7.500558853149414
    3. '.write' → logprob: -12.125558853149414
    4. '_flush' → logprob: -16.000558853149414
    5. '.stdout' → logprob: -16.500558853149414
    6. ' flush' → logprob: -17.125558853149414
    7. 'stdout' → logprob: -17.750558853149414
    8. '.Flush' → logprob: -17.875558853149414
    9. '```' → logprob: -18.000558853149414
    10. ' .' → logprob: -18.000558853149414

Token 1233: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1234: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7889924049377441
    2. '<|end|>' → logprob: -1.4139924049377441
    3. 'elif' → logprob: -1.5389924049377441
    4. '   ' → logprob: -3.413992404937744
    5. '\n' → logprob: -3.663992404937744
    6. 'continue' → logprob: -4.663992404937744
    7. '
' → logprob: -4.913992404937744
    8. '```' → logprob: -5.163992404937744
    9. ')' → logprob: -7.288992404937744
    10. '    
' → logprob: -7.288992404937744

Token 1235: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03187772259116173
    2. 'elif' → logprob: -3.5318777561187744
    3. '   ' → logprob: -6.906877517700195
    4. '
' → logprob: -8.531877517700195
    5. '<|end|>' → logprob: -8.531877517700195
    6. '```' → logprob: -8.531877517700195
    7. ' else' → logprob: -8.906877517700195
    8. 'if' → logprob: -9.156877517700195
    9. 'continue' → logprob: -9.406877517700195
    10. '       ' → logprob: -9.406877517700195

Token 1236: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6998571753501892
    2. ':' → logprob: -0.9498571753501892
    3. ':
' → logprob: -2.199857234954834
    4. '   ' → logprob: -5.324857234954834
    5. '	' → logprob: -8.074856758117676
    6. '           ' → logprob: -8.574856758117676
    7. '{' → logprob: -9.449856758117676
    8. '	   ' → logprob: -9.949856758117676
    9. '     ' → logprob: -10.199856758117676
    10. '    ' → logprob: -10.324856758117676

Token 1237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030652955174446106
    2. 'print' → logprob: -6.25306510925293
    3. '```' → logprob: -7.75306510925293
    4. '	' → logprob: -8.00306510925293
    5. '           ' → logprob: -8.37806510925293
    6. '   ' → logprob: -9.87806510925293
    7. '               ' → logprob: -11.12806510925293
    8. 'n' → logprob: -11.37806510925293
    9. '``' → logprob: -11.62806510925293
    10. '        
' → logprob: -11.75306510925293

Token 1238: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17272259294986725
    2. 'if' → logprob: -2.422722578048706
    3. '       ' → logprob: -3.672722578048706
    4. 'x' → logprob: -3.672722578048706
    5. 'print' → logprob: -4.797722816467285
    6. 'dist' → logprob: -5.547722816467285
    7. 't' → logprob: -6.672722816467285
    8. '   ' → logprob: -6.797722816467285
    9. '           ' → logprob: -6.797722816467285
    10. ' nxt' → logprob: -7.547722816467285

Token 1239: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -6.392202976712724e-06
    2. 'n' → logprob: -12.750006675720215
    3. '_nd' → logprob: -13.250006675720215
    4. 'nt' → logprob: -13.875006675720215
    5. ' =' → logprob: -16.0000057220459
    6. 'if' → logprob: -16.5000057220459
    7. 'nds' → logprob: -16.5000057220459
    8. '=' → logprob: -16.6250057220459
    9. 'ndo' → logprob: -17.2500057220459
    10. '_' → logprob: -17.2500057220459

Token 1240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1035550907254219
    2. '=' → logprob: -2.478555202484131
    3. 'nd' → logprob: -5.228555202484131
    4. '_' → logprob: -5.478555202484131
    5. '_nd' → logprob: -6.478555202484131
    6. '=[' → logprob: -7.228555202484131
    7. '_=' → logprob: -7.603555202484131
    8. '   ' → logprob: -7.853555202484131
    9. 'd' → logprob: -8.103554725646973
    10. 'n' → logprob: -8.478554725646973

Token 1241: ' None' (ID: 4662)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07893561571836472
    2. ' nxt' → logprob: -2.5789356231689453
    3. '	n' → logprob: -11.203935623168945
    4. ' n' → logprob: -11.328935623168945
    5. '   ' → logprob: -11.703935623168945
    6. ' ' → logprob: -12.953935623168945
    7. ' nex' → logprob: -13.203935623168945
    8. '(n' → logprob: -13.703935623168945
    9. 'next' → logprob: -13.828935623168945
    10. '[n' → logprob: -13.828935623168945

Token 1242: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8431029915809631
    2. '<|end|>' → logprob: -2.4681029319763184
    3. 'es' → logprob: -2.5931029319763184
    4. ' n' → logprob: -2.7181029319763184
    5. ' nxt' → logprob: -3.0931029319763184
    6. '=' → logprob: -3.0931029319763184
    7. 'n' → logprob: -3.2181029319763184
    8. ')' → logprob: -3.3431029319763184
    9. '(' → logprob: -3.7181029319763184
    10. '(n' → logprob: -3.8431029319763184

Token 1243: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5878498554229736
    2. 'for' → logprob: -1.4628498554229736
    3. ' =' → logprob: -2.5878498554229736
    4. ' for' → logprob: -3.0878498554229736
    5. 'if' → logprob: -3.7128498554229736
    6. 'n' → logprob: -3.9628498554229736
    7. 't' → logprob: -4.4628496170043945
    8. '       ' → logprob: -4.9628496170043945
    9. ' if' → logprob: -4.9628496170043945
    10. ' nxt' → logprob: -4.9628496170043945

Token 1244: ' tgt' (ID: 109597)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12002266198396683
    2. 'n' → logprob: -2.995022773742676
    3. 'if' → logprob: -3.245022773742676
    4. 'es' → logprob: -4.120022773742676
    5. ' for' → logprob: -6.120022773742676
    6. '       ' → logprob: -6.870022773742676
    7. 'dist' → logprob: -7.245022773742676
    8. 'next' → logprob: -7.495022773742676
    9. 'print' → logprob: -7.495022773742676
    10. 'while' → logprob: -7.620022773742676

Token 1245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700612843036652
    2. '=' → logprob: -2.1270060539245605
    3. '=n' → logprob: -9.502006530761719
    4. '       ' → logprob: -14.002006530761719
    5. 'n' → logprob: -14.752006530761719
    6. ' ' → logprob: -15.252006530761719
    7. ')' → logprob: -15.377006530761719
    8. '[n' → logprob: -15.502006530761719
    9. '        ' → logprob: -15.627006530761719
    10. '=None' → logprob: -15.752006530761719

Token 1246: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0006298751104623079
    2. ' work' → logprob: -7.375629901885986
    3. 'n' → logprob: -13.125629425048828
    4. '   ' → logprob: -15.000629425048828
    5. '	work' → logprob: -15.250629425048828
    6. '(work' → logprob: -15.625629425048828
    7. '       ' → logprob: -16.375629425048828
    8. 'w' → logprob: -16.500629425048828
    9. 'wrk' → logprob: -16.625629425048828
    10. 'working' → logprob: -16.875629425048828

Token 1247: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0006872945814393461
    2. 'nd' → logprob: -8.000687599182129
    3. 'work' → logprob: -8.500687599182129
    4. '_req' → logprob: -9.000687599182129
    5. '[' → logprob: -11.875687599182129
    6. 'from' → logprob: -12.875687599182129
    7. '_nd' → logprob: -13.250687599182129
    8. ' req' → logprob: -13.375687599182129
    9. 'rd' → logprob: -13.625687599182129
    10. 'reg' → logprob: -13.750687599182129

Token 1248: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -14.375001907348633
    3. '       ' → logprob: -14.625001907348633
    4. '[-' → logprob: -16.000001907348633
    5. '[len' → logprob: -16.250001907348633
    6. '```' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '[n' → logprob: -17.125001907348633
    9. '           ' → logprob: -17.375001907348633
    10. '[next' → logprob: -17.750001907348633

Token 1249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041220002458430827
    2. '[' → logprob: -8.000411987304688
    3. ' ' → logprob: -9.500411987304688
    4. '   ' → logprob: -14.125411987304688
    5. '```' → logprob: -14.750411987304688
    6. ' [' → logprob: -16.000411987304688
    7. '(' → logprob: -16.125411987304688
    8. '  ' → logprob: -16.250411987304688
    9. 'dist' → logprob: -16.625411987304688
    10. ' ' → logprob: -17.125411987304688

Token 1250: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008253206498920918
    2. ']
' → logprob: -5.38325309753418
    3. ' if' → logprob: -6.38325309753418
    4. 'if' → logprob: -6.38325309753418
    5. '][' → logprob: -9.63325309753418
    6. ' ]' → logprob: -9.63325309753418
    7. '```' → logprob: -10.25825309753418
    8. '[' → logprob: -10.63325309753418
    9. '       ' → logprob: -10.75825309753418
    10. '[n' → logprob: -11.38325309753418

Token 1251: ' if' (ID: 538)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.9476725459098816
    2. '<|end|>' → logprob: -1.0726726055145264
    3. '[' → logprob: -1.6976726055145264
    4. '       ' → logprob: -3.5726726055145264
    5. ']' → logprob: -3.6976726055145264
    6. '[next' → logprob: -4.197672367095947
    7. '[
' → logprob: -5.947672367095947
    8. '```' → logprob: -6.072672367095947
    9. '][' → logprob: -6.322672367095947
    10. 'n' → logprob: -6.322672367095947

Token 1252: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519426941871643
    2. ' len' → logprob: -1.5019426345825195
    3. '(len' → logprob: -11.25194263458252
    4. '<len' → logprob: -15.87694263458252
    5. 'work' → logprob: -16.251943588256836
    6. '	len' → logprob: -16.376943588256836
    7. 'dist' → logprob: -16.501943588256836
    8. 'length' → logprob: -16.751943588256836
    9. ' ' → logprob: -16.751943588256836
    10. ' ' → logprob: -17.001943588256836

Token 1253: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -0.001930420519784093
    2. 'work' → logprob: -6.251930236816406
    3. '(t' → logprob: -15.001930236816406
    4. '(' → logprob: -15.001930236816406
    5. '(n' → logprob: -15.251930236816406
    6. ' work' → logprob: -15.376930236816406
    7. ' (' → logprob: -15.501930236816406
    8. '_work' → logprob: -15.501930236816406
    9. '	work' → logprob: -15.626930236816406
    10. 't' → logprob: -16.751930236816406

Token 1254: 'req' (ID: 5331)
  Prédit: '_req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_req' → logprob: -0.6777727603912354
    2. 'req' → logprob: -0.8027727603912354
    3. '_work' → logprob: -3.9277727603912354
    4. '>' → logprob: -4.427772521972656
    5. 'work' → logprob: -4.927772521972656
    6. '_' → logprob: -5.802772521972656
    7. ')>' → logprob: -6.927772521972656
    8. ')' → logprob: -8.177772521972656
    9. '_request' → logprob: -8.302772521972656
    10. '   ' → logprob: -8.677772521972656

Token 1255: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.15692268311977386
    2. ']>' → logprob: -2.2819225788116455
    3. '>' → logprob: -3.1569225788116455
    4. ')' → logprob: -7.781922817230225
    5. ']' → logprob: -10.281922340393066
    6. '```' → logprob: -10.281922340393066
    7. '()>' → logprob: -10.656922340393066
    8. '}>' → logprob: -10.906922340393066
    9. '   ' → logprob: -10.906922340393066
    10. '[' → logprob: -11.406922340393066

Token 1256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '>' → logprob: -15.000003814697266
    4. 'work' → logprob: -15.625003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '
' → logprob: -18.375003814697266
    7. '  ' → logprob: -18.500003814697266
    8. '```' → logprob: -19.000003814697266
    9. ' work' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.125003814697266

Token 1257: ' else' (ID: 1203)
  Prédit: ' nxt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.4215746521949768
    2. '       ' → logprob: -1.421574592590332
    3. ' if' → logprob: -3.171574592590332
    4. 'if' → logprob: -4.671574592590332
    5. '[n' → logprob: -4.796574592590332
    6. '
' → logprob: -4.921574592590332
    7. '   ' → logprob: -5.046574592590332
    8. '        
' → logprob: -5.296574592590332
    9. '[t' → logprob: -5.796574592590332
    10. 'n' → logprob: -5.796574592590332

Token 1258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031937702442519367
    2. 'last' → logprob: -8.125319480895996
    3. ' ' → logprob: -11.375319480895996
    4. 't' → logprob: -11.875319480895996
    5. '-' → logprob: -13.250319480895996
    6. 'next' → logprob: -13.500319480895996
    7. 'n' → logprob: -14.125319480895996
    8. 'work' → logprob: -15.125319480895996
    9. ' last' → logprob: -15.875319480895996
    10. '0' → logprob: -16.37531852722168

Token 1259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010596063220873475
    2. 'last' → logprob: -6.876059532165527
    3. '-' → logprob: -11.251059532165527
    4. ' ' → logprob: -11.751059532165527
    5. 'next' → logprob: -13.626059532165527
    6. 't' → logprob: -13.876059532165527
    7. ' last' → logprob: -14.501059532165527
    8. '(' → logprob: -14.563559532165527
    9. '```' → logprob: -14.626059532165527
    10. '0' → logprob: -15.001059532165527

Token 1260: '
' (ID: 198)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5487645268440247
    2. '[' → logprob: -2.04876446723938
    3. '       ' → logprob: -2.04876446723938
    4. '```' → logprob: -3.04876446723938
    5. 'n' → logprob: -3.54876446723938
    6. '
' → logprob: -3.79876446723938
    7. ' nxt' → logprob: -3.92376446723938
    8. '<|end|>' → logprob: -4.423764705657959
    9. '[next' → logprob: -5.048764705657959
    10. '(n' → logprob: -5.173764705657959

Token 1261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06653879582881927
    2. ' nxt' → logprob: -3.1915388107299805
    3. 'n' → logprob: -5.1915388107299805
    4. '[' → logprob: -5.1915388107299805
    5. '```' → logprob: -5.5665388107299805
    6. ' n' → logprob: -5.6915388107299805
    7. 'print' → logprob: -6.5665388107299805
    8. '        ' → logprob: -7.4415388107299805
    9. '(n' → logprob: -7.4415388107299805
    10. '[n' → logprob: -7.9415388107299805

Token 1262: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002337708603590727
    2. '       ' → logprob: -6.12733793258667
    3. ' nxt' → logprob: -9.752337455749512
    4. 'for' → logprob: -10.127337455749512
    5. 'print' → logprob: -11.127337455749512
    6. '               ' → logprob: -11.502337455749512
    7. 'if' → logprob: -11.752337455749512
    8. '           ' → logprob: -12.127337455749512
    9. '   ' → logprob: -12.627337455749512
    10. 'next' → logprob: -12.877337455749512

Token 1263: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -3.4121114822482923e-06
    2. 'n' → logprob: -12.875003814697266
    3. '_nd' → logprob: -14.250003814697266
    4. 'nt' → logprob: -16.125003814697266
    5. ' nd' → logprob: -17.375003814697266
    6. ' =' → logprob: -17.375003814697266
    7. 'nds' → logprob: -18.375003814697266
    8. '=' → logprob: -18.875003814697266
    9. '_n' → logprob: -18.875003814697266
    10. 'nde' → logprob: -19.375003814697266

Token 1264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1874098926782608
    2. '=' → logprob: -1.8124098777770996
    3. '[n' → logprob: -5.4374098777771
    4. '=n' → logprob: -6.5624098777771
    5. '[' → logprob: -7.5624098777771
    6. '=[' → logprob: -7.8124098777771
    7. '   ' → logprob: -8.312410354614258
    8. '][' → logprob: -8.937410354614258
    9. ']' → logprob: -9.687410354614258
    10. '[next' → logprob: -9.937410354614258

Token 1265: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048619501292705536
    2. ' nxt' → logprob: -3.048619508743286
    3. ' n' → logprob: -11.923619270324707
    4. '   ' → logprob: -12.173619270324707
    5. '(n' → logprob: -12.423619270324707
    6. '       ' → logprob: -12.798619270324707
    7. ''n' → logprob: -13.173619270324707
    8. '	n' → logprob: -13.173619270324707
    9. '[n' → logprob: -13.548619270324707
    10. 't' → logprob: -13.548619270324707

Token 1266: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0001600347168277949
    2. '_nd' → logprob: -9.250160217285156
    3. 'n' → logprob: -9.875160217285156
    4. 'nt' → logprob: -11.750160217285156
    5. '_n' → logprob: -14.000160217285156
    6. ' nd' → logprob: -14.250160217285156
    7. '   ' → logprob: -15.000160217285156
    8. '  ' → logprob: -15.125160217285156
    9. 'd' → logprob: -15.125160217285156
    10. '_' → logprob: -15.250160217285156

Token 1267: 'ary' (ID: 815)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.07605066895484924
    2. '[next' → logprob: -2.8260507583618164
    3. 'ary' → logprob: -4.701050758361816
    4. '[n' → logprob: -6.451050758361816
    5. '[' → logprob: -6.826050758361816
    6. '[i' → logprob: -7.576050758361816
    7. '[now' → logprob: -7.701050758361816
    8. 'nd' → logprob: -7.826050758361816
    9. 'n' → logprob: -9.076050758361816
    10. '[current' → logprob: -9.451050758361816

Token 1268: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -2.2603901015827432e-05
    2. '[' → logprob: -11.000022888183594
    3. 'last' → logprob: -12.375022888183594
    4. ' [' → logprob: -14.125022888183594
    5. '   ' → logprob: -14.250022888183594
    6. ' ' → logprob: -17.125022888183594
    7. '```' → logprob: -17.125022888183594
    8. '[now' → logprob: -17.125022888183594
    9. '  ' → logprob: -17.500022888183594
    10. '[next' → logprob: -17.750022888183594

Token 1269: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -4.930552313453518e-05
    2. '[' → logprob: -10.375049591064453
    3. 'nt' → logprob: -12.625049591064453
    4. '   ' → logprob: -12.750049591064453
    5. ' nd' → logprob: -12.875049591064453
    6. '  ' → logprob: -12.875049591064453
    7. '```' → logprob: -13.000049591064453
    8. ' ' → logprob: -13.375049591064453
    9. '
' → logprob: -14.000049591064453
    10. 'd' → logprob: -15.125049591064453

Token 1270: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004884536610916257
    2. '[t' → logprob: -8.00048828125
    3. '       ' → logprob: -9.25048828125
    4. ' ][' → logprob: -10.37548828125
    5. '           ' → logprob: -11.75048828125
    6. '   ' → logprob: -12.62548828125
    7. ']' → logprob: -12.87548828125
    8. ''][' → logprob: -13.12548828125
    9. '[n' → logprob: -13.37548828125
    10. '"][' → logprob: -13.62548828125

Token 1271: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.15310683415737e-05
    2. ' tgt' → logprob: -10.750021934509277
    3. '`t' → logprob: -18.25002098083496
    4. '	t' → logprob: -18.25002098083496
    5. 'tg' → logprob: -19.87502098083496
    6. ' t' → logprob: -20.25002098083496
    7. ')t' → logprob: -20.50002098083496
    8. '[t' → logprob: -21.00002098083496
    9. 'T' → logprob: -21.25002098083496
    10. 'target' → logprob: -21.37502098083496

Token 1272: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.0016567325219511986
    2. 't' → logprob: -6.501656532287598
    3. 'g' → logprob: -9.001656532287598
    4. ' tgt' → logprob: -10.501656532287598
    5. 'xt' → logprob: -13.376656532287598
    6. 'arget' → logprob: -14.001656532287598
    7. '   ' → logprob: -15.626656532287598
    8. 'gtk' → logprob: -16.251657485961914
    9. '[t' → logprob: -16.501657485961914
    10. '#' → logprob: -16.501657485961914

Token 1273: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6505553722381592
    2. ']' → logprob: -0.9005553722381592
    3. '       ' → logprob: -2.900555372238159
    4. ')
' → logprob: -5.150555610656738
    5. ')' → logprob: -5.400555610656738
    6. '[' → logprob: -6.025555610656738
    7. '[n' → logprob: -6.400555610656738
    8. '[next' → logprob: -7.275555610656738
    9. '   ' → logprob: -8.275555610656738
    10. '```' → logprob: -8.775555610656738

Token 1274: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8951684832572937
    2. '[' → logprob: -1.7701685428619385
    3. '<|end|>' → logprob: -1.7701685428619385
    4. '```' → logprob: -1.8951685428619385
    5. '(n' → logprob: -3.3951685428619385
    6. ')' → logprob: -4.895168304443359
    7. '[]' → logprob: -4.895168304443359
    8. '[
' → logprob: -4.895168304443359
    9. '#' → logprob: -5.020168304443359
    10. '       ' → logprob: -5.145168304443359

Token 1275: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07889551669359207
    2. ' print' → logprob: -2.5788955688476562
    3. '       ' → logprob: -13.328895568847656
    4. ' n' → logprob: -14.078895568847656
    5. '```' → logprob: -14.078895568847656
    6. 'n' → logprob: -14.703895568847656
    7. 'dist' → logprob: -14.703895568847656
    8. 'sys' → logprob: -15.453895568847656
    9. ' sys' → logprob: -15.703895568847656
    10. '.print' → logprob: -15.828895568847656

Token 1276: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5066428184509277
    2. '(' → logprob: -1.0066428184509277
    3. '('' → logprob: -3.7566428184509277
    4. '("' → logprob: -4.756642818450928
    5. ' (' → logprob: -9.881643295288086
    6. ' nxt' → logprob: -11.256643295288086
    7. '(next' → logprob: -11.506643295288086
    8. '"' → logprob: -12.256643295288086
    9. ''' → logprob: -13.506643295288086
    10. '(
' → logprob: -13.631643295288086

Token 1277: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0004997743526473641
    2. ' nxt' → logprob: -7.625499725341797
    3. 'x' → logprob: -12.750499725341797
    4. 't' → logprob: -12.750499725341797
    5. 'ext' → logprob: -12.875499725341797
    6. 'n' → logprob: -13.625499725341797
    7. ' xt' → logprob: -14.000499725341797
    8. 'xta' → logprob: -15.000499725341797
    9. '   ' → logprob: -15.125499725341797
    10. ' ' → logprob: -15.500499725341797

Token 1278: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -3.03521392197581e-05
    2. '_nd' → logprob: -10.500030517578125
    3. ' nd' → logprob: -13.625030517578125
    4. '(nd' → logprob: -14.375030517578125
    5. 'd' → logprob: -14.500030517578125
    6. 'xt' → logprob: -15.500030517578125
    7. 'n' → logprob: -16.250030517578125
    8. '.nd' → logprob: -17.125030517578125
    9. 'st' → logprob: -17.375030517578125
    10. '[' → logprob: -18.000030517578125

Token 1279: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08953356742858887
    2. ')
' → logprob: -2.464533567428589
    3. '<|end|>' → logprob: -7.964533805847168
    4. '       ' → logprob: -9.339533805847168
    5. '())' → logprob: -9.714533805847168
    6. '```' → logprob: -10.589533805847168
    7. '())
' → logprob: -10.839533805847168
    8. '()' → logprob: -10.839533805847168
    9. '   ' → logprob: -12.464533805847168
    10. '<|end|>' → logprob: -12.589533805847168

Token 1280: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1281: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.04226067662239075
    2. '\n' → logprob: -3.9172606468200684
    3. '
' → logprob: -4.792260646820068
    4. '```' → logprob: -4.917260646820068
    5. '<|end|>' → logprob: -5.542260646820068
    6. ' 
' → logprob: -7.667260646820068
    7. '[' → logprob: -8.917261123657227
    8. '​
' → logprob: -9.042261123657227
    9. '  
' → logprob: -9.042261123657227
    10. ' ' → logprob: -9.292261123657227

Token 1282: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.0003391574718989432
    2. 'stdout' → logprob: -8.25033950805664
    3. 'out' → logprob: -10.50033950805664
    4. '.stdin' → logprob: -11.12533950805664
    5. '.stderr' → logprob: -11.25033950805664
    6. '.out' → logprob: -11.50033950805664
    7. '.std' → logprob: -12.25033950805664
    8. '```' → logprob: -13.00033950805664
    9. ' .' → logprob: -13.50033950805664
    10. '(stdout' → logprob: -13.75033950805664

Token 1283: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.011090735904872417
    2. 'flush' → logprob: -4.5110907554626465
    3. '_flush' → logprob: -10.136090278625488
    4. '.write' → logprob: -13.136090278625488
    5. 'Flush' → logprob: -14.636090278625488
    6. '.Flush' → logprob: -14.886090278625488
    7. ' flush' → logprob: -15.886090278625488
    8. ' .' → logprob: -16.261091232299805
    9. '       ' → logprob: -16.511091232299805
    10. '```' → logprob: -16.511091232299805

Token 1284: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1285: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11482840031385422
    2. '       ' → logprob: -2.36482834815979
    3. '
' → logprob: -5.364828586578369
    4. '<|end|>' → logprob: -5.864828586578369
    5. ' dist' → logprob: -6.614828586578369
    6. '               ' → logprob: -6.739828586578369
    7. '           ' → logprob: -6.989828586578369
    8. '	dist' → logprob: -7.114828586578369
    9. '```' → logprob: -7.239828586578369
    10. '        
' → logprob: -7.739828586578369

Token 1286: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -2.7848862373502925e-05
    2. '           ' → logprob: -10.750027656555176
    3. '   ' → logprob: -12.875027656555176
    4. '       ' → logprob: -13.625027656555176
    5. '```' → logprob: -13.875027656555176
    6. '               ' → logprob: -14.250027656555176
    7. '	dist' → logprob: -14.250027656555176
    8. '                   ' → logprob: -15.125027656555176
    9. ' dist' → logprob: -15.875027656555176
    10. '``' → logprob: -17.125028610229492

Token 1287: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: 0.0
    2. '[from' → logprob: -18.625
    3. '_from' → logprob: -18.75
    4. ' from' → logprob: -20.125
    5. '	from' → logprob: -20.875
    6. 'From' → logprob: -21.0
    7. '.from' → logprob: -21.25
    8. '   ' → logprob: -21.25
    9. '=' → logprob: -21.375
    10. '```' → logprob: -22.0

Token 1288: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -6.988221684878226e-06
    2. '_last' → logprob: -12.000006675720215
    3. ' last' → logprob: -14.375006675720215
    4. 'from' → logprob: -15.625006675720215
    5. 'Last' → logprob: -18.75000762939453
    6. 'lasti' → logprob: -20.12500762939453
    7. ' ' → logprob: -20.25000762939453
    8. '(last' → logprob: -20.37500762939453
    9. 'l' → logprob: -20.50000762939453
    10. 'las' → logprob: -20.50000762939453

Token 1289: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12693797051906586
    2. ' +=' → logprob: -2.1269378662109375
    3. ']+=' → logprob: -11.876937866210938
    4. '=' → logprob: -13.501937866210938
    5. '+' → logprob: -13.876937866210938
    6. '+='' → logprob: -14.876937866210938
    7. '```' → logprob: -16.001937866210938
    8. '+="' → logprob: -16.626937866210938
    9. '-=' → logprob: -16.876937866210938
    10. '    ' → logprob: -17.001937866210938

Token 1290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -18.75023078918457
    4. '```' → logprob: -19.75023078918457
    5. '+' → logprob: -19.87523078918457
    6. ' ' → logprob: -20.62523078918457
    7. '       ' → logprob: -20.87523078918457
    8. '１' → logprob: -21.12523078918457
    9. ' +' → logprob: -21.37523078918457
    10. '`' → logprob: -21.75023078918457

Token 1291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'dist' → logprob: -18.625001907348633
    4. '```' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '`' → logprob: -20.125001907348633
    7. '+' → logprob: -21.000001907348633
    8. '１' → logprob: -21.250001907348633
    9. '
' → logprob: -21.500001907348633
    10. '' → logprob: -21.625001907348633

Token 1292: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04718421399593353
    2. '```' → logprob: -3.5471842288970947
    3. '<|end|>' → logprob: -4.297183990478516
    4. ' if' → logprob: -6.797183990478516
    5. 'if' → logprob: -7.172183990478516
    6. '``' → logprob: -7.422183990478516
    7. '   ' → logprob: -8.297183990478516
    8. '        
' → logprob: -8.547183990478516
    9. '<|end|>' → logprob: -8.797183990478516
    10. '               ' → logprob: -9.047183990478516

Token 1293: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.31882259249687195
    2. '       ' → logprob: -1.4438226222991943
    3. '``' → logprob: -3.9438226222991943
    4. 'if' → logprob: -4.443822383880615
    5. ' if' → logprob: -6.068822383880615
    6. '        
' → logprob: -6.318822383880615
    7. '
' → logprob: -7.443822383880615
    8. ' 
' → logprob: -8.443822860717773
    9. '   ' → logprob: -8.943822860717773
    10. '           ' → logprob: -9.068822860717773

Token 1294: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.9292415749514475e-05
    2. '       ' → logprob: -10.500039100646973
    3. '```' → logprob: -11.750039100646973
    4. ' if' → logprob: -12.500039100646973
    5. '``' → logprob: -16.50004005432129
    6. 'If' → logprob: -16.75004005432129
    7. '           ' → logprob: -17.75004005432129
    8. '   ' → logprob: -18.00004005432129
    9. '
' → logprob: -18.75004005432129
    10. '	if' → logprob: -19.00004005432129

Token 1295: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006715967319905758
    2. ' dist' → logprob: -5.006715774536133
    3. '(dist' → logprob: -14.631715774536133
    4. '	dist' → logprob: -16.256715774536133
    5. '   ' → logprob: -16.756715774536133
    6. '  ' → logprob: -19.631715774536133
    7. '_dist' → logprob: -19.631715774536133
    8. '       ' → logprob: -19.756715774536133
    9. '.dist' → logprob: -20.006715774536133
    10. '    ' → logprob: -20.256715774536133

Token 1296: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -2.47495681833243e-05
    2. '[from' → logprob: -10.625024795532227
    3. '_from' → logprob: -15.500024795532227
    4. '[' → logprob: -16.375024795532227
    5. ' from' → logprob: -17.000024795532227
    6. 'From' → logprob: -17.500024795532227
    7. '```' → logprob: -17.875024795532227
    8. 'for' → logprob: -17.875024795532227
    9. '[
' → logprob: -18.000024795532227
    10. '.from' → logprob: -18.250024795532227

Token 1297: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -2.5776860184123507e-06
    2. '_last' → logprob: -13.25000286102295
    3. ' last' → logprob: -14.62500286102295
    4. '(last' → logprob: -16.500001907348633
    5. 'Last' → logprob: -17.000001907348633
    6. '[last' → logprob: -17.250001907348633
    7. '	last' → logprob: -17.750001907348633
    8. '
' → logprob: -18.000001907348633
    9. 'lasti' → logprob: -18.000001907348633
    10. 'first' → logprob: -18.750001907348633

Token 1298: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519378066062927
    2. '==' → logprob: -1.5019378662109375
    3. '```' → logprob: -12.501937866210938
    4. '>=' → logprob: -13.501937866210938
    5. '==
' → logprob: -13.501937866210938
    6. '=' → logprob: -13.751937866210938
    7. ' >=' → logprob: -14.751937866210938
    8. '==(' → logprob: -15.751937866210938
    9. ' =' → logprob: -15.876937866210938
    10. ' ' → logprob: -16.001937866210938

Token 1299: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12692831456661224
    2. ' dist' → logprob: -2.1269283294677734
    3. '(dist' → logprob: -16.126928329467773
    4. '	dist' → logprob: -16.376928329467773
    5. '_dist' → logprob: -18.251928329467773
    6. '.dist' → logprob: -18.876928329467773
    7. 'Dist' → logprob: -19.001928329467773
    8. 'd' → logprob: -19.376928329467773
    9. ' ' → logprob: -19.376928329467773
    10. '1' → logprob: -19.376928329467773

Token 1300: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -4.572941179503687e-05
    2. 'last' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.125045776367188
    4. '[next' → logprob: -16.750045776367188
    5. '[' → logprob: -17.375045776367188
    6. '```' → logprob: -17.500045776367188
    7. '[now' → logprob: -18.000045776367188
    8. '(last' → logprob: -18.125045776367188
    9. '[
' → logprob: -18.500045776367188
    10. ' ' → logprob: -18.625045776367188

Token 1301: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.12052557617425919
    2. '[last' → logprob: -2.245525598526001
    3. '[' → logprob: -5.120525360107422
    4. '][' → logprob: -7.495525360107422
    5. 'last' → logprob: -7.870525360107422
    6. '[next' → logprob: -8.620525360107422
    7. 'from' → logprob: -8.870525360107422
    8. 'n' → logprob: -9.620525360107422
    9. 'nt' → logprob: -9.995525360107422
    10. '```' → logprob: -9.995525360107422

Token 1302: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002728985855355859
    2. '[n' → logprob: -8.625272750854492
    3. '       ' → logprob: -9.750272750854492
    4. '   ' → logprob: -10.750272750854492
    5. '           ' → logprob: -12.000272750854492
    6. '[next' → logprob: -13.750272750854492
    7. ']' → logprob: -14.000272750854492
    8. ''][' → logprob: -14.000272750854492
    9. '```' → logprob: -14.125272750854492
    10. '"][' → logprob: -14.250272750854492

Token 1303: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.000003814697266
    3. ' nxt' → logprob: -14.250003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '
' → logprob: -15.875003814697266
    6. 'next' → logprob: -16.125003814697266
    7. '``' → logprob: -16.875003814697266
    8. '(n' → logprob: -17.125003814697266
    9. '[n' → logprob: -17.500003814697266
    10. 'n't' → logprob: -18.125003814697266

Token 1304: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.8312570318812504e-05
    2. 'x' → logprob: -11.125018119812012
    3. 'ext' → logprob: -13.500018119812012
    4. 't' → logprob: -14.125018119812012
    5. '   ' → logprob: -14.375018119812012
    6. '```' → logprob: -15.250018119812012
    7. 'txt' → logprob: -16.000019073486328
    8. 'n' → logprob: -16.500019073486328
    9. ' nxt' → logprob: -16.500019073486328
    10. 'xta' → logprob: -16.875019073486328

Token 1305: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.10176008939743042
    2. 'd' → logprob: -2.601760149002075
    3. 'xt' → logprob: -4.351759910583496
    4. 'n' → logprob: -4.726759910583496
    5. 'д' → logprob: -8.601759910583496
    6. '[' → logprob: -9.476759910583496
    7. '][' → logprob: -9.601759910583496
    8. 't' → logprob: -9.726759910583496
    9. 'ext' → logprob: -9.726759910583496
    10. '```' → logprob: -9.851759910583496

Token 1306: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.002644740976393223
    2. ']:' → logprob: -6.0026445388793945
    3. ':
' → logprob: -9.627644538879395
    4. ']:

' → logprob: -9.877644538879395
    5. '       ' → logprob: -10.627644538879395
    6. ']:
' → logprob: -11.502644538879395
    7. '']:
' → logprob: -11.877644538879395
    8. '"]:
' → logprob: -12.752644538879395
    9. ']]:
' → logprob: -13.502644538879395
    10. '```' → logprob: -13.627644538879395

Token 1307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47125542163848877
    2. '       ' → logprob: -1.0962554216384888
    3. '```' → logprob: -3.471255302429199
    4. '=' → logprob: -4.971255302429199
    5. '   ' → logprob: -6.596255302429199
    6. '``' → logprob: -7.596255302429199
    7. ':
' → logprob: -7.721255302429199
    8. ' =' → logprob: -7.846255302429199
    9. '               ' → logprob: -7.846255302429199
    10. ':' → logprob: -8.3462553024292

Token 1308: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.49684572219848633
    2. ' dist' → logprob: -0.9968457221984863
    3. '       ' → logprob: -4.621845722198486
    4. '```' → logprob: -4.621845722198486
    5. '           ' → logprob: -5.996845722198486
    6. '   ' → logprob: -8.871845245361328
    7. '``' → logprob: -8.996845245361328
    8. '	dist' → logprob: -9.996845245361328
    9. '               ' → logprob: -10.996845245361328
    10. '_dist' → logprob: -11.621845245361328

Token 1309: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5048530030981055e-06
    2. '=' → logprob: -14.625001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '           ' → logprob: -15.125001907348633
    5. '               ' → logprob: -15.750001907348633
    6. 'of' → logprob: -16.500001907348633
    7. '       ' → logprob: -16.750001907348633
    8. ' =' → logprob: -16.750001907348633
    9. 'for' → logprob: -17.875001907348633
    10. ' from' → logprob: -18.125001907348633

Token 1310: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -2.5776860184123507e-06
    2. ' last' → logprob: -13.50000286102295
    3. '_last' → logprob: -14.12500286102295
    4. '
' → logprob: -15.87500286102295
    5. 'Last' → logprob: -16.125001907348633
    6. '	last' → logprob: -16.875001907348633
    7. '(last' → logprob: -17.000001907348633
    8. 'next' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.500001907348633
    10. 'first' → logprob: -17.875001907348633

Token 1311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197015196084976
    2. ' =' → logprob: -2.8119702339172363
    3. '           ' → logprob: -13.061969757080078
    4. '               ' → logprob: -15.686969757080078
    5. '   ' → logprob: -16.436969757080078
    6. '       ' → logprob: -16.936969757080078
    7. '```' → logprob: -17.186969757080078
    8. '                   ' → logprob: -18.311969757080078
    9. '            ' → logprob: -18.686969757080078
    10. ' ' → logprob: -19.061969757080078

Token 1312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '           ' → logprob: -18.000036239624023
    4. '   ' → logprob: -18.750036239624023
    5. '```' → logprob: -19.875036239624023
    6. '       ' → logprob: -20.250036239624023
    7. '               ' → logprob: -21.625036239624023
    8. '=' → logprob: -22.250036239624023
    9. '00' → logprob: -22.500036239624023
    10. '۰' → logprob: -22.500036239624023

Token 1313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -20.25
    5. '<|end|>' → logprob: -20.375
    6. '=' → logprob: -21.125
    7. '           ' → logprob: -21.25
    8. '       ' → logprob: -21.625
    9. '[' → logprob: -21.75
    10. '
' → logprob: -21.75

Token 1314: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.038482069969177246
    2. '           ' → logprob: -4.413482189178467
    3. '
' → logprob: -4.788482189178467
    4. '``' → logprob: -5.038482189178467
    5. '       ' → logprob: -5.538482189178467
    6. '            
' → logprob: -6.288482189178467
    7. '\n' → logprob: -6.663482189178467
    8. '   ' → logprob: -7.163482189178467
    9. '<|end|>' → logprob: -7.413482189178467
    10. '        
' → logprob: -7.413482189178467

Token 1315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7230287790298462
    2. '```' → logprob: -0.7230287790298462
    3. '       ' → logprob: -4.473028659820557
    4. '               ' → logprob: -4.723028659820557
    5. '
' → logprob: -5.348028659820557
    6. '``' → logprob: -6.598028659820557
    7. '   ' → logprob: -6.973028659820557
    8. 'if' → logprob: -7.723028659820557
    9. '            
' → logprob: -7.723028659820557
    10. '                   ' → logprob: -7.848028659820557

Token 1316: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011253333650529385
    2. '           ' → logprob: -7.251125335693359
    3. '               ' → logprob: -8.00112533569336
    4. '```' → logprob: -9.62612533569336
    5. ' if' → logprob: -11.62612533569336
    6. '                   ' → logprob: -12.75112533569336
    7. 'last' → logprob: -13.75112533569336
    8. '``' → logprob: -14.50112533569336
    9. '       ' → logprob: -15.00112533569336
    10. '   ' → logprob: -15.87612533569336

Token 1317: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029760440811514854
    2. 'len' → logprob: -3.5297603607177734
    3. '(len' → logprob: -11.529760360717773
    4. '[len' → logprob: -16.279760360717773
    5. '	len' → logprob: -16.904760360717773
    6. ' length' → logprob: -17.904760360717773
    7. ' work' → logprob: -18.154760360717773
    8. '<len' → logprob: -18.779760360717773
    9. '           ' → logprob: -18.904760360717773
    10. '            ' → logprob: -18.904760360717773

Token 1318: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -1.6240566083070007e-06
    2. 'work' → logprob: -13.500001907348633
    3. ' (' → logprob: -15.625001907348633
    4. ' work' → logprob: -17.000001907348633
    5. '(' → logprob: -17.500001907348633
    6. '	work' → logprob: -18.875001907348633
    7. '(w' → logprob: -19.125001907348633
    8. '(write' → logprob: -19.375001907348633
    9. '(worker' → logprob: -20.250001907348633
    10. '/work' → logprob: -20.625001907348633

Token 1319: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0036139667499810457
    2. '_req' → logprob: -5.6286139488220215
    3. '[' → logprob: -12.12861442565918
    4. 'work' → logprob: -12.37861442565918
    5. 'Req' → logprob: -14.50361442565918
    6. '(req' → logprob: -14.50361442565918
    7. '_request' → logprob: -14.62861442565918
    8. '>' → logprob: -15.25361442565918
    9. '   ' → logprob: -15.25361442565918
    10. '_' → logprob: -15.37861442565918

Token 1320: ')>' (ID: 37292)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.001611866056919098
    2. ')>' → logprob: -6.626611709594727
    3. ']>' → logprob: -8.376611709594727
    4. '[' → logprob: -10.501611709594727
    5. '()>' → logprob: -11.501611709594727
    6. ' >' → logprob: -11.626611709594727
    7. '```' → logprob: -13.001611709594727
    8. '}>' → logprob: -13.376611709594727
    9. 'and' → logprob: -13.501611709594727
    10. '   ' → logprob: -13.876611709594727

Token 1321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018577903392724693
    2. '>' → logprob: -8.6251859664917
    3. 'work' → logprob: -12.5001859664917
    4. '```' → logprob: -13.7501859664917
    5. '``' → logprob: -14.3751859664917
    6. '
' → logprob: -14.7501859664917
    7. ' ' → logprob: -15.6251859664917
    8. '   ' → logprob: -15.6251859664917
    9. '(work' → logprob: -16.500185012817383
    10. '=' → logprob: -16.875185012817383

Token 1322: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6891719102859497
    2. 'and' → logprob: -0.9391719102859497
    3. '               ' → logprob: -2.43917179107666
    4. '           ' → logprob: -3.93917179107666
    5. '```' → logprob: -8.06417179107666
    6. '                   ' → logprob: -11.06417179107666
    7. '              ' → logprob: -12.06417179107666
    8. '   ' → logprob: -12.06417179107666
    9. '``' → logprob: -12.43917179107666
    10. '	and' → logprob: -12.56417179107666

Token 1323: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.014183600433170795
    2. 'n' → logprob: -4.264183521270752
    3. ' next' → logprob: -12.01418399810791
    4. 'next' → logprob: -12.01418399810791
    5. '   ' → logprob: -12.51418399810791
    6. '       ' → logprob: -13.51418399810791
    7. ' nex' → logprob: -13.63918399810791
    8. ' n' → logprob: -14.76418399810791
    9. '(n' → logprob: -15.38918399810791
    10. '    ' → logprob: -15.63918399810791

Token 1324: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.002482434967532754
    2. 'work' → logprob: -6.8774824142456055
    3. 'n' → logprob: -7.3774824142456055
    4. 'nt' → logprob: -8.502482414245605
    5. '  ' → logprob: -8.627482414245605
    6. '   ' → logprob: -9.252482414245605
    7. 'req' → logprob: -9.252482414245605
    8. '_nd' → logprob: -10.252482414245605
    9. '[' → logprob: -10.377482414245605
    10. '       ' → logprob: -10.377482414245605

Token 1325: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3133714199066162
    2. '==' → logprob: -1.3133714199066162
    3. '```' → logprob: -9.188371658325195
    4. '==
' → logprob: -12.813371658325195
    5. ']==' → logprob: -13.563371658325195
    6. '()==' → logprob: -13.688371658325195
    7. '==-' → logprob: -14.813371658325195
    8. ')==' → logprob: -14.813371658325195
    9. '``' → logprob: -15.063371658325195
    10. ' ==
' → logprob: -15.188371658325195

Token 1326: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.04858794063329697
    2. ' work' → logprob: -3.0485880374908447
    3. '	work' → logprob: -15.423587799072266
    4. '
' → logprob: -16.173587799072266
    5. '(work' → logprob: -16.298587799072266
    6. '```' → logprob: -16.298587799072266
    7. '   ' → logprob: -17.423587799072266
    8. '       ' → logprob: -18.173587799072266
    9. 'Work' → logprob: -18.423587799072266
    10. '_work' → logprob: -18.923587799072266

Token 1327: 'req' (ID: 5331)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.03373168408870697
    2. 'ork' → logprob: -3.408731698989868
    3. '_work' → logprob: -10.033731460571289
    4. 'req' → logprob: -11.283731460571289
    5. '	work' → logprob: -12.158731460571289
    6. 'wrk' → logprob: -12.158731460571289
    7. 'rk' → logprob: -12.783731460571289
    8. 'w' → logprob: -12.783731460571289
    9. ' work' → logprob: -12.908731460571289
    10. '```' → logprob: -13.658731460571289

Token 1328: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '```' → logprob: -12.375006675720215
    3. '0' → logprob: -13.000006675720215
    4. '   ' → logprob: -15.625006675720215
    5. '[
' → logprob: -16.37500762939453
    6. '][' → logprob: -17.37500762939453
    7. '
' → logprob: -17.50000762939453
    8. '[-' → logprob: -18.12500762939453
    9. 'work' → logprob: -18.12500762939453
    10. ' [' → logprob: -18.12500762939453

Token 1329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.50001335144043
    3. ' ' → logprob: -13.37501335144043
    4. '   ' → logprob: -13.75001335144043
    5. '
' → logprob: -14.87501335144043
    6. '       ' → logprob: -15.87501335144043
    7. '```' → logprob: -15.87501335144043
    8. '           ' → logprob: -17.25001335144043
    9. 'work' → logprob: -17.37501335144043
    10. '  ' → logprob: -17.50001335144043

Token 1330: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.002843271940946579
    2. '               ' → logprob: -6.502843379974365
    3. ':' → logprob: -7.127843379974365
    4. ']:
' → logprob: -8.252842903137207
    5. '():
' → logprob: -8.877842903137207
    6. '):
' → logprob: -9.377842903137207
    7. '       ' → logprob: -10.252842903137207
    8. '           ' → logprob: -12.377842903137207
    9. ':

' → logprob: -12.627842903137207
    10. ' :
' → logprob: -12.877842903137207

Token 1331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003643191885203123
    2. '```' → logprob: -6.003643035888672
    3. 'del' → logprob: -7.378643035888672
    4. '                       ' → logprob: -8.128643035888672
    5. ' del' → logprob: -8.753643035888672
    6. '``' → logprob: -10.503643035888672
    7. '              ' → logprob: -11.253643035888672
    8. '           ' → logprob: -11.503643035888672
    9. '   ' → logprob: -11.628643035888672
    10. '                   ' → logprob: -11.628643035888672

Token 1332: ' del' (ID: 1083)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04718136787414551
    2. ' del' → logprob: -3.4221813678741455
    3. 'del' (adapté à ' del') → logprob: -4.547181129455566
    4. '```' → logprob: -6.422181129455566
    5. '               ' → logprob: -7.047181129455566
    6. '                  ' → logprob: -9.047181129455566
    7. '                       ' → logprob: -9.297181129455566
    8. '``' → logprob: -9.672181129455566
    9. '	del' → logprob: -11.047181129455566
    10. '           ' → logprob: -11.297181129455566

Token 1333: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.2014150768518448
    2. ' work' → logprob: -1.7014150619506836
    3. '(work' → logprob: -13.576415061950684
    4. '	work' → logprob: -14.576415061950684
    5. '_work' → logprob: -16.701416015625
    6. '.work' → logprob: -18.076416015625
    7. '[' → logprob: -18.326416015625
    8. '/work' → logprob: -18.451416015625
    9. '```' → logprob: -18.826416015625
    10. 'Work' → logprob: -19.951416015625

Token 1334: 'req' (ID: 5331)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0014921268448233604
    2. 'req' → logprob: -6.751492023468018
    3. '[' → logprob: -8.126492500305176
    4. '_work' → logprob: -11.501492500305176
    5. ' work' → logprob: -11.751492500305176
    6. '_req' → logprob: -11.876492500305176
    7. 'nd' → logprob: -15.251492500305176
    8. '	work' → logprob: -15.751492500305176
    9. '.work' → logprob: -16.37649154663086
    10. '       ' → logprob: -16.37649154663086

Token 1335: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '0' → logprob: -12.500004768371582
    3. '```' → logprob: -14.875004768371582
    4. '       ' → logprob: -15.000004768371582
    5. '   ' → logprob: -16.000003814697266
    6. '[-' → logprob: -16.125003814697266
    7. '           ' → logprob: -17.875003814697266
    8. '
' → logprob: -18.000003814697266
    9. '[
' → logprob: -18.500003814697266
    10. '(' → logprob: -19.125003814697266

Token 1336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.000017166137695
    3. ' ' → logprob: -15.750017166137695
    4. '```' → logprob: -15.750017166137695
    5. '
' → logprob: -16.750017166137695
    6. '   ' → logprob: -17.125017166137695
    7. '-' → logprob: -17.750017166137695
    8. '{' → logprob: -18.000017166137695
    9. 'work' → logprob: -18.375017166137695
    10. '``' → logprob: -18.625017166137695

Token 1337: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07694613188505173
    2. ']
' → logprob: -3.2019460201263428
    3. '[' → logprob: -4.076946258544922
    4. '               ' → logprob: -4.701946258544922
    5. '       ' → logprob: -5.701946258544922
    6. ']' → logprob: -6.076946258544922
    7. '                   ' → logprob: -7.576946258544922
    8. '```' → logprob: -7.826946258544922
    9. '
' → logprob: -8.326946258544922
    10. '[]
' → logprob: -8.701946258544922

Token 1338: '           ' (ID: 352)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2524716556072235
    2. '           ' → logprob: -1.502471685409546
    3. '   ' → logprob: -8.627471923828125
    4. '               ' → logprob: -9.127471923828125
    5. ' last' → logprob: -9.127471923828125
    6. '       ' → logprob: -9.252471923828125
    7. '
' → logprob: -11.252471923828125
    8. '```' → logprob: -11.252471923828125
    9. '                   ' → logprob: -11.377471923828125
    10. '[last' → logprob: -12.252471923828125

Token 1339: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.00043162284418940544
    2. ' last' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.500432014465332
    4. '           ' → logprob: -14.625432014465332
    5. '	last' → logprob: -17.125431060791016
    6. '[last' → logprob: -18.125431060791016
    7. 'Last' → logprob: -18.625431060791016
    8. '_last' → logprob: -20.000431060791016
    9. '```' → logprob: -20.125431060791016
    10. '       ' → logprob: -20.250431060791016

Token 1340: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -6.704273118884885e-07
    2. ' nd' → logprob: -15.250000953674316
    3. '_nd' → logprob: -15.250000953674316
    4. '```' → logprob: -16.875
    5. '   ' → logprob: -17.125
    6. 'nt' → logprob: -17.25
    7. 'n' → logprob: -17.875
    8. 'node' → logprob: -17.875
    9. '=' → logprob: -18.0
    10. 'nds' → logprob: -18.375

Token 1341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. '=n' → logprob: -14.910224914550781
    4. '   ' → logprob: -18.28522491455078
    5. ' ' → logprob: -20.03522491455078
    6. '=
' → logprob: -20.16022491455078
    7. '=end' → logprob: -20.28522491455078
    8. '+=' → logprob: -20.41022491455078
    9. ' +=' → logprob: -20.53522491455078
    10. '＝' → logprob: -20.53522491455078

Token 1342: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048591457307338715
    2. ' nxt' → logprob: -3.048591375350952
    3. 'next' → logprob: -12.798591613769531
    4. ' nex' → logprob: -14.673591613769531
    5. '```' → logprob: -15.298591613769531
    6. '_n' → logprob: -15.423591613769531
    7. ' next' → logprob: -15.923591613769531
    8. '	n' → logprob: -16.67359161376953
    9. ' n' → logprob: -16.67359161376953
    10. '(n' → logprob: -16.79859161376953

Token 1343: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.001293927663937211
    2. 'd' → logprob: -6.876294136047363
    3. 'od' → logprob: -9.751294136047363
    4. '_nd' → logprob: -9.876294136047363
    5. '```' → logprob: -10.376294136047363
    6. 'n' → logprob: -10.626294136047363
    7. ' nd' → logprob: -11.001294136047363
    8. 'cd' → logprob: -11.001294136047363
    9. '[' → logprob: -11.626294136047363
    10. '   ' → logprob: -11.751294136047363

Token 1344: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1345: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1346: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1347: ' prob' (ID: 4921)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.3346421718597412
    2. ' DBG' → logprob: -1.7096421718597412
    3. ' prob' → logprob: -1.8346421718597412
    4. ' work' → logprob: -2.584642171859741
    5. ' pend' → logprob: -2.709642171859741
    6. ' len' → logprob: -2.834642171859741
    7. 'DBG' → logprob: -2.834642171859741
    8. 'prob' → logprob: -3.209642171859741
    9. 'not' → logprob: -3.959642171859741
    10. 'len' → logprob: -4.20964241027832

Token 1348: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1090935692191124
    2. ' ==' → logprob: -2.35909366607666
    3. '!=' → logprob: -6.23409366607666
    4. '   ' → logprob: -6.35909366607666
    5. '<' → logprob: -6.60909366607666
    6. ' +=' → logprob: -6.98409366607666
    7. '+=' → logprob: -6.98409366607666
    8. ' !=' → logprob: -7.35909366607666
    9. ' <' → logprob: -7.60909366607666
    10. '[' → logprob: -8.23409366607666

Token 1349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011108300648629665
    2. '1' → logprob: -4.5111083984375
    3. ' ' → logprob: -10.3861083984375
    4. '   ' → logprob: -11.1361083984375
    5. '```' → logprob: -12.2611083984375
    6. 'None' → logprob: -12.3861083984375
    7. '==' → logprob: -12.8861083984375
    8. '0' → logprob: -14.0111083984375
    9. '  ' → logprob: -14.1361083984375
    10. '=' → logprob: -15.0111083984375

Token 1350: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10637681931257248
    2. ':
' → logprob: -2.981376886367798
    3. ':' → logprob: -3.481376886367798
    4. ' and' → logprob: -5.356376647949219
    5. '==' → logprob: -5.356376647949219
    6. '   ' → logprob: -5.606376647949219
    7. '=' → logprob: -6.106376647949219
    8. ' ==' → logprob: -6.856376647949219
    9. '           ' → logprob: -7.106376647949219
    10. '>' → logprob: -7.356376647949219

Token 1351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.273621405242011e-05
    2. '           ' → logprob: -11.250032424926758
    3. '   ' → logprob: -11.375032424926758
    4. ' for' → logprob: -13.125032424926758
    5. '	   ' → logprob: -13.625032424926758
    6. ' n' → logprob: -13.625032424926758
    7. 'n' → logprob: -14.000032424926758
    8. '```' → logprob: -14.500032424926758
    9. '	       ' → logprob: -14.750032424926758
    10. '	' → logprob: -14.750032424926758

Token 1352: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10942091047763824
    2. ' for' → logprob: -3.3594210147857666
    3. 'for' → logprob: -3.3594210147857666
    4. '_' → logprob: -4.2344207763671875
    5. '   ' → logprob: -4.2344207763671875
    6. ' _' → logprob: -6.4844207763671875
    7. 'n' → logprob: -7.3594207763671875
    8. '           ' → logprob: -7.4844207763671875
    9. 'inn' → logprob: -7.6094207763671875
    10. 'in' → logprob: -8.234420776367188

Token 1353: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5186364650726318
    2. 'v' → logprob: -1.8936364650726318
    3. ' =' → logprob: -2.143636465072632
    4. '=' → logprob: -3.018636465072632
    5. 'for' → logprob: -3.018636465072632
    6. 'alue' → logprob: -3.768636465072632
    7. '   ' → logprob: -5.393636703491211
    8. '       ' → logprob: -6.518636703491211
    9. 'ar' → logprob: -6.768636703491211
    10. '=in' → logprob: -7.018636703491211

Token 1354: ' input' (ID: 3422)
  Prédit: 'inn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inn' → logprob: -0.008516700938344002
    2. 'in' → logprob: -5.133516788482666
    3. 'int' → logprob: -6.508516788482666
    4. ' inn' → logprob: -8.383516311645508
    5. 'list' → logprob: -8.383516311645508
    6. 'inp' → logprob: -8.633516311645508
    7. '[]' → logprob: -9.258516311645508
    8. 'input' → logprob: -9.508516311645508
    9. '   ' → logprob: -10.008516311645508
    10. '0' → logprob: -10.383516311645508

Token 1355: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00429587671533227
    2. '()
' → logprob: -6.254295825958252
    3. '<|end|>' → logprob: -6.254295825958252
    4. '().' → logprob: -8.62929630279541
    5. '()\' → logprob: -9.37929630279541
    6. '())' → logprob: -10.25429630279541
    7. '()[' → logprob: -10.50429630279541
    8. '<|end|>' → logprob: -10.50429630279541
    9. '();' → logprob: -10.87929630279541
    10. '()<' → logprob: -11.00429630279541

Token 1356: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1643778383731842
    2. 'split' → logprob: -2.5393779277801514
    3. '<|end|>' → logprob: -2.9143779277801514
    4. 'rstrip' → logprob: -4.039377689361572
    5. ' ' → logprob: -8.41437816619873
    6. '()' → logprob: -9.16437816619873
    7. ' strip' → logprob: -9.28937816619873
    8. '  ' → logprob: -9.66437816619873
    9. 'replace' → logprob: -9.91437816619873
    10. '.strip' → logprob: -10.03937816619873

Token 1357: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1358: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1359: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1360: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004057383164763451
    2. 'not' → logprob: -6.12905740737915
    3. 'len' → logprob: -6.62905740737915
    4. ' v' → logprob: -8.254056930541992
    5. 'False' → logprob: -8.754056930541992
    6. ' not' → logprob: -9.379056930541992
    7. 'DBG' → logprob: -11.129056930541992
    8. '   ' → logprob: -12.254056930541992
    9. '  ' → logprob: -12.254056930541992
    10. 'int' → logprob: -12.754056930541992

Token 1361: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010118571110069752
    2. ' ==' → logprob: -5.13511848449707
    3. '!=' → logprob: -5.88511848449707
    4. '()==' → logprob: -7.26011848449707
    5. '=='' → logprob: -7.88511848449707
    6. ' !=' → logprob: -9.38511848449707
    7. '!='' → logprob: -9.63511848449707
    8. '=="' → logprob: -9.76011848449707
    9. '==
' → logprob: -10.88511848449707
    10. '=' → logprob: -11.13511848449707

Token 1362: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6505605578422546
    2. ''' → logprob: -1.7755606174468994
    3. ''-' → logprob: -2.1505606174468994
    4. '"-' → logprob: -2.2755606174468994
    5. '""' → logprob: -3.4005606174468994
    6. '''' → logprob: -3.6505606174468994
    7. 'str' → logprob: -4.90056037902832
    8. ''n' → logprob: -5.15056037902832
    9. ''ok' → logprob: -5.65056037902832
    10. '"":' → logprob: -5.77556037902832

Token 1363: 'OK' (ID: 5175)
  Prédit: 'OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.30204957723617554
    2. 'ok' → logprob: -1.5520496368408203
    3. '-' → logprob: -3.8020496368408203
    4. ''' → logprob: -5.80204963684082
    5. '-ok' → logprob: -6.17704963684082
    6. '0' → logprob: -6.42704963684082
    7. 'END' → logprob: -6.67704963684082
    8. 'continue' → logprob: -6.67704963684082
    9. 'correct' → logprob: -6.67704963684082
    10. '1' → logprob: -6.92704963684082

Token 1364: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.671746015548706
    2. '':
' → logprob: -0.796746015548706
    3. ''' → logprob: -3.421746015548706
    4. ''):
' → logprob: -5.921746253967285
    5. '')' → logprob: -6.546746253967285
    6. ''):' → logprob: -7.046746253967285
    7. '':
' → logprob: -8.171746253967285
    8. '\n' → logprob: -8.546746253967285
    9. '<|end|>' → logprob: -9.921746253967285
    10. '":' → logprob: -9.921746253967285

Token 1365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028525494039058685
    2. ':
' → logprob: -4.653525352478027
    3. ':' → logprob: -4.903525352478027
    4. '       ' → logprob: -5.278525352478027
    5. '               ' → logprob: -6.778525352478027
    6. 'continue' → logprob: -6.778525352478027
    7. '():
' → logprob: -7.028525352478027
    8. ' continue' → logprob: -7.653525352478027
    9. '   ' → logprob: -7.778525352478027
    10. '<|end|>' → logprob: -7.778525352478027

Token 1366: ' exit' (ID: 10654)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4269736111164093
    2. 'exit' (adapté à ' exit') → logprob: -1.176973581314087
    3. 'break' → logprob: -3.426973581314087
    4. '       ' → logprob: -5.676973819732666
    5. ' exit' → logprob: -6.551973819732666
    6. '	exit' → logprob: -7.551973819732666
    7. '   ' → logprob: -7.676973819732666
    8. ' break' → logprob: -8.051973342895508
    9. 'sys' → logprob: -8.176973342895508
    10. '               ' → logprob: -8.801973342895508

Token 1367: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1368: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1369: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5991725325584412
    2. '<|end|>' → logprob: -0.8491725325584412
    3. '
' → logprob: -4.599172592163086
    4. ':' → logprob: -5.099172592163086
    5. '(' → logprob: -6.474172592163086
    6. ',' → logprob: -7.099172592163086
    7. '#' → logprob: -7.224172592163086
    8. '<|end|>' → logprob: -7.349172592163086
    9. '=' → logprob: -7.474172592163086
    10. '```' → logprob: -7.474172592163086

Token 1370: '3' (ID: 18)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08896750211715698
    2. ' =' → logprob: -2.4639675617218018
    3. '   ' → logprob: -11.463967323303223
    4. '       ' → logprob: -11.713967323303223
    5. '=int' → logprob: -12.963967323303223
    6. '    ' → logprob: -13.463967323303223
    7. '           ' → logprob: -13.588967323303223
    8. '()' → logprob: -13.713967323303223
    9. '	' → logprob: -14.463967323303223
    10. '        ' → logprob: -14.713967323303223

Token 1372: ' inn' (ID: 5315)
  Prédit: 'inn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inn' → logprob: -0.0003963569179177284
    2. 'int' → logprob: -8.375396728515625
    3. 'inp' → logprob: -9.625396728515625
    4. ' inn' → logprob: -9.875396728515625
    5. 'in' → logprob: -11.000396728515625
    6. '   ' → logprob: -12.125396728515625
    7. ' ' → logprob: -12.375396728515625
    8. '  ' → logprob: -12.625396728515625
    9. '0' → logprob: -12.875396728515625
    10. 'innt' → logprob: -13.000396728515625

Token 1373: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005934486165642738
    2. '<|end|>' → logprob: -6.005934715270996
    3. '       ' → logprob: -6.130934715270996
    4. '()
' → logprob: -6.755934715270996
    5. '<|end|>' → logprob: -10.380934715270996
    6. '()>' → logprob: -10.630934715270996
    7. '();' → logprob: -11.130934715270996
    8. '()\' → logprob: -12.130934715270996
    9. '())' → logprob: -12.255934715270996
    10. '(),' → logprob: -12.255934715270996

Token 1374: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0895193815231323
    2. '<|end|>' → logprob: -1.0895193815231323
    3. '       ' → logprob: -1.3395193815231323
    4. 'for' → logprob: -4.214519500732422
    5. '```' → logprob: -4.339519500732422
    6. 'if' → logprob: -4.589519500732422
    7. 'continue' → logprob: -5.589519500732422
    8. 'n' → logprob: -5.714519500732422
    9. 'v' → logprob: -5.964519500732422
    10. '[' → logprob: -5.964519500732422

Token 1375: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0154030229896307
    2. '_' → logprob: -4.390402793884277
    3. 'n' → logprob: -7.390402793884277
    4. 'pass' → logprob: -7.515402793884277
    5. 'if' → logprob: -7.765402793884277
    6. ' for' → logprob: -8.265402793884277
    7. '       ' → logprob: -8.640402793884277
    8. '[' → logprob: -8.765402793884277
    9. '   ' → logprob: -9.640402793884277
    10. 'in' → logprob: -9.640402793884277

Token 1376: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5048530030981055e-06
    2. ' _' → logprob: -13.750001907348633
    3. '_=' → logprob: -15.625001907348633
    4. '_i' → logprob: -16.000001907348633
    5. '_in' → logprob: -17.875001907348633
    6. 'i' → logprob: -18.250001907348633
    7. '_
' → logprob: -19.000001907348633
    8. '_
' → logprob: -19.125001907348633
    9. '__' → logprob: -19.250001907348633
    10. ' in' → logprob: -19.250001907348633

Token 1377: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10564505308866501
    2. '_' → logprob: -2.355644941329956
    3. 'in' → logprob: -5.230645179748535
    4. ' _' → logprob: -10.230645179748535
    5. 'range' → logprob: -10.730645179748535
    6. 's' → logprob: -11.480645179748535
    7. ' ' → logprob: -13.605645179748535
    8. 'i' → logprob: -14.730645179748535
    9. ' range' → logprob: -14.855645179748535
    10. '...' → logprob: -15.230645179748535

Token 1378: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2526134252548218
    2. '_' → logprob: -1.5026134252548218
    3. ' range' → logprob: -7.502613544464111
    4. 'in' → logprob: -9.002613067626953
    5. '_range' → logprob: -11.877613067626953
    6. ' in' → logprob: -13.377613067626953
    7. '_in' → logprob: -15.752613067626953
    8. '...' → logprob: -16.127613067626953
    9. '_=' → logprob: -16.127613067626953
    10. ' _' → logprob: -16.502613067626953

Token 1379: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03830093517899513
    2. '(n' → logprob: -3.2883009910583496
    3. ' n' → logprob: -8.788300514221191
    4. '2' → logprob: -10.913300514221191
    5. '(' → logprob: -11.038300514221191
    6. '3' → logprob: -11.288300514221191
    7. '1' → logprob: -11.538300514221191
    8. '   ' → logprob: -11.663300514221191
    9. '	n' → logprob: -11.788300514221191
    10. '       ' → logprob: -11.788300514221191

Token 1380: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011012927629053593
    2. '(n' → logprob: -4.636013031005859
    3. 'n' → logprob: -7.011013031005859
    4. '(' → logprob: -8.13601303100586
    5. '2' → logprob: -10.13601303100586
    6. '1' → logprob: -12.38601303100586
    7. 'v' → logprob: -12.63601303100586
    8. '_' → logprob: -12.88601303100586
    9. '   ' → logprob: -13.01101303100586
    10. '(v' → logprob: -13.13601303100586

Token 1381: '):
' (ID: 1883)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6267662048339844
    2. '           ' → logprob: -1.6267662048339844
    3. ':
' → logprob: -2.2517662048339844
    4. '       ' → logprob: -2.5017662048339844
    5. '):
' → logprob: -3.3767662048339844
    6. ':' → logprob: -3.8767662048339844
    7. '()' → logprob: -4.376766204833984
    8. '():' → logprob: -5.626766204833984
    9. '<|end|>' → logprob: -6.251766204833984
    10. '(' → logprob: -6.751766204833984

Token 1382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012985502369701862
    2. '       ' → logprob: -4.762985706329346
    3. '   ' → logprob: -6.137985706329346
    4. '	       ' → logprob: -6.387985706329346
    5. '	   ' → logprob: -8.637985229492188
    6. '		' → logprob: -8.887985229492188
    7. '<|end|>' → logprob: -10.012985229492188
    8. '	' → logprob: -10.137985229492188
    9. '		   ' → logprob: -10.262985229492188
    10. ' ' → logprob: -11.137985229492188

Token 1383: ' inn' (ID: 5315)
  Prédit: 'inn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inn' (adapté à ' inn') → logprob: -0.18546894192695618
    2. '_' → logprob: -2.185468912124634
    3. '           ' → logprob: -3.560468912124634
    4. '       ' → logprob: -4.060469150543213
    5. '   ' → logprob: -4.810469150543213
    6. 'inp' → logprob: -7.060469150543213
    7. '_in' → logprob: -7.810469150543213
    8. '	' → logprob: -7.935469150543213
    9. '___' → logprob: -8.560468673706055
    10. ' inn' → logprob: -8.560468673706055

Token 1384: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0492977537214756
    2. '<|end|>' → logprob: -3.04929780960083
    3. ')' → logprob: -8.049297332763672
    4. '()
' → logprob: -8.674297332763672
    5. '())' → logprob: -9.924297332763672
    6. '<|end|>' → logprob: -10.049297332763672
    7. '();' → logprob: -10.799297332763672
    8. '()]' → logprob: -11.174297332763672
    9. '(' → logprob: -11.299297332763672
    10. '[]' → logprob: -11.549297332763672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1382
Tokens correctement prédits (1ère position, stricte): 587
Tokens correctement prédits (1ère position, avec adaptation): 648
Tokens correctement prédits (top 10): 1125
Précision stricte (1ère position): 42.47%
Précision adaptée (1ère position): 46.89%
Précision (top 10): 81.40%
================================================================================
