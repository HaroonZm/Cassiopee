================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate as acc
from math import ceil as c

def fetch(): return int(input())
def flist(): return list(map(int, input().split(' ')))

n = fetch()
xs = flist()

if n == 1:
    print(xs[0]); quit()

class FenwickMagic:
    __slots__ = ['_n', '_d']
    def __init__(self, q): self._n, self._d = q, [0]*(q+3)
    def puff(self, z):
        _r=0;z+=1
        while z>0:_r+=self._d[z];z&=z-1
        return _r
    def poke(self, z, v=1):
        z+=1
        while z<=self._n+2:self._d[z]+=v;z+=z&-z
    def clear(self): self._d = [0]*(self._n+3)

F = FenwickMagic(n+1)
bot,top = -9**18, 2**31
while top-bot>1:
    Q = (bot + top)//2
    mutant = [(99 if k>=Q else -13) for k in xs]
    Msum = [0]+list(acc(mutant))
    F.clear()
    order = {}
    for j,v in enumerate(sorted(Msum)):
        order.setdefault(v, j)
    stat=0
    for v in Msum:
        stat+=F.puff(order[v]) + (v>=0)
        F.poke(order[v])
    if stat>=c((n*(n+1)/2)/2):
        bot=Q
    else:
        top=Q
print(bot)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6990911960601807
    2. ' acc' → logprob: -1.4490911960601807
    3. '_acc' → logprob: -2.1990911960601807
    4. '_' → logprob: -2.6990911960601807
    5. ' accumulate' → logprob: -2.9490911960601807
    6. ' Acc' → logprob: -5.074090957641602
    7. ' _' → logprob: -5.074090957641602
    8. ' a' → logprob: -5.574090957641602
    9. ' accu' → logprob: -5.949090957641602
    10. 'a' → logprob: -6.074090957641602

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011947521707043052
    2. '.' → logprob: -7.001194953918457
    3. ',' → logprob: -8.876194953918457
    4. '(
' → logprob: -9.751194953918457
    5. '\(' → logprob: -10.251194953918457
    6. ' (' → logprob: -11.126194953918457
    7. '```' → logprob: -11.876194953918457
    8. 'a' → logprob: -12.001194953918457
    9. ''' → logprob: -12.876194953918457
    10. '(

' → logprob: -13.626194953918457

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033302835654467344
    2. '(
' → logprob: -6.378330230712891
    3. ',' → logprob: -7.253330230712891
    4. '.' → logprob: -7.753330230712891
    5. '\(' → logprob: -8.00333023071289
    6. '(

' → logprob: -10.75333023071289
    7. '\' → logprob: -10.87833023071289
    8. 'a' → logprob: -10.87833023071289
    9. '#' → logprob: -11.00333023071289
    10. '\n' → logprob: -11.37833023071289

Token 8: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7685339450836182
    2. ' operator' → logprob: -1.3935339450836182
    3. ' functools' → logprob: -1.8935339450836182
    4. 'math' → logprob: -2.643533945083618
    5. 'operator' → logprob: -3.393533945083618
    6. ' collections' → logprob: -4.518533706665039
    7. 'collections' → logprob: -4.768533706665039
    8. 'fun' → logprob: -5.018533706665039
    9. ' itertools' → logprob: -5.393533706665039
    10. ' ' → logprob: -7.768533706665039

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3873116374015808
    2. ' import' → logprob: -1.1373116970062256
    3. ' ' → logprob: -8.387311935424805
    4. '	import' → logprob: -9.512311935424805
    5. '<|end|>' → logprob: -10.012311935424805
    6. '_import' → logprob: -10.137311935424805
    7. ' sqrt' → logprob: -11.512311935424805
    8. ' ' → logprob: -11.637311935424805
    9. '```' → logprob: -12.387311935424805
    10. '<|end|>' → logprob: -12.512311935424805

Token 10: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.37768369913101196
    2. ' sqrt' → logprob: -2.127683639526367
    3. ' inf' → logprob: -3.127683639526367
    4. ' factorial' → logprob: -3.252683639526367
    5. ' ceil' → logprob: -3.502683639526367
    6. 'ceil' → logprob: -3.627683639526367
    7. ' gcd' → logprob: -3.877683639526367
    8. 'inf' → logprob: -4.627683639526367
    9. 'log' → logprob: -5.127683639526367
    10. 'factor' → logprob: -5.252683639526367

Token 11: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022057807072997093
    2. '(
' → logprob: -4.147058010101318
    3. '\n' → logprob: -5.772058010101318
    4. '\' → logprob: -7.022058010101318
    5. '
' → logprob: -7.147058010101318
    6. ',' → logprob: -7.647058010101318
    7. '\(' → logprob: -8.77205753326416
    8. 'def' → logprob: -9.39705753326416
    9. '(

' → logprob: -9.39705753326416
    10. 'newline' → logprob: -9.77205753326416

Token 12: ' c' (ID: 274)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.9407798647880554
    2. 'c' → logprob: -1.0657799243927002
    3. ' ceil' → logprob: -1.6907799243927002
    4. ' c' → logprob: -2.9407799243927
    5. 'cl' → logprob: -4.190779685974121
    6. 'cel' → logprob: -4.440779685974121
    7. 'ce' → logprob: -8.190779685974121
    8. ' ' → logprob: -8.440779685974121
    9. '   ' → logprob: -9.190779685974121
    10. ' cl' → logprob: -9.440779685974121

Token 13: '

' (ID: 279)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.7928146123886108
    2. 'u' → logprob: -1.7928146123886108
    3. 'h' → logprob: -2.1678147315979004
    4. ',' → logprob: -2.2928147315979004
    5. 'o' → logprob: -2.4178147315979004
    6. '(' → logprob: -2.6678147315979004
    7. ')' → logprob: -2.9178147315979004
    8. 'm' → logprob: -3.1678147315979004
    9. '_' → logprob: -3.7928147315979004
    10. 'l' → logprob: -3.9178147315979004

Token 14: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007838593795895576
    2. '_' → logprob: -6.007838726043701
    3. ',' → logprob: -7.007838726043701
    4. 'u' → logprob: -7.757838726043701
    5. '(
' → logprob: -8.007838249206543
    6. 's' → logprob: -8.007838249206543
    7. 'def' → logprob: -8.132838249206543
    8. '[' → logprob: -8.132838249206543
    9. 'o' → logprob: -8.382838249206543
    10. ')' → logprob: -8.507838249206543

Token 15: ' fetch' (ID: 12011)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004090035799890757
    2. ' calculate' → logprob: -6.629089832305908
    3. ' space' → logprob: -7.129089832305908
    4. ' process' → logprob: -8.004090309143066
    5. ' factorial' → logprob: -8.254090309143066
    6. ' my' → logprob: -8.379090309143066
    7. ' add' → logprob: -8.879090309143066
    8. ' factor' → logprob: -9.129090309143066
    9. ' compute' → logprob: -9.504090309143066
    10. ' f' → logprob: -9.629090309143066

Token 16: '():' (ID: 9442)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.047032393515110016
    2. '_data' → logprob: -3.172032356262207
    3. '(' → logprob: -6.172032356262207
    4. '_items' → logprob: -7.547032356262207
    5. '_user' → logprob: -8.297032356262207
    6. 'data' → logprob: -8.797032356262207
    7. '_page' → logprob: -9.172032356262207
    8. '_item' → logprob: -9.547032356262207
    9. '_users' → logprob: -9.547032356262207
    10. '_list' → logprob: -10.047032356262207

Token 17: ' return' (ID: 622)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.182436227798462
    2. ' ' → logprob: -1.182436227798462
    3. '   ' → logprob: -1.807436227798462
    4. '<|end|>' → logprob: -2.307436227798462
    5. '\n' → logprob: -4.057435989379883
    6. '(' → logprob: -4.057435989379883
    7. '    ' → logprob: -4.182435989379883
    8. ''' → logprob: -4.182435989379883
    9. ' return' → logprob: -4.682435989379883
    10. ' (' → logprob: -4.807435989379883

Token 18: ' int' (ID: 677)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12127578258514404
    2. ' ' → logprob: -2.7462759017944336
    3. '[]' → logprob: -3.6212759017944336
    4. ' [' → logprob: -4.246275901794434
    5. ' None' → logprob: -6.371275901794434
    6. ' next' → logprob: -6.996275901794434
    7. ' list' → logprob: -7.121275901794434
    8. '[' → logprob: -7.121275901794434
    9. ' ''' → logprob: -7.621275901794434
    10. '  ' → logprob: -7.746275901794434

Token 19: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018930815160274506
    2. '(input' → logprob: -4.018930912017822
    3. 'input' → logprob: -7.643930912017822
    4. '()' → logprob: -9.143930435180664
    5. '('' → logprob: -10.018930435180664
    6. ' (' → logprob: -10.643930435180664
    7. ' ' → logprob: -10.893930435180664
    8. '(
' → logprob: -11.893930435180664
    9. '32' → logprob: -11.893930435180664
    10. '((' → logprob: -11.893930435180664

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11782752722501755
    2. '()' → logprob: -2.4928274154663086
    3. '()))' → logprob: -3.9928274154663086
    4. '(' → logprob: -4.867827415466309
    5. '(()' → logprob: -6.992827415466309
    6. '('' → logprob: -7.367827415466309
    7. '().' → logprob: -8.742827415466309
    8. '());' → logprob: -9.117827415466309
    9. '()),' → logprob: -9.242827415466309
    10. '(""))' → logprob: -9.617827415466309

Token 21: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8901187777519226
    2. '(' → logprob: -1.2651188373565674
    3. '
' → logprob: -2.1401188373565674
    4. 'def' → logprob: -2.6401188373565674
    5. '(
' → logprob: -3.2651188373565674
    6. '\' → logprob: -3.6401188373565674
    7. ')' → logprob: -4.515118598937988
    8. '()' → logprob: -5.140118598937988
    9. '_' → logprob: -5.515118598937988
    10. '*' → logprob: -5.640118598937988

Token 22: ' fl' (ID: 1548)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3827686607837677
    2. ' process' → logprob: -1.6327686309814453
    3. ' solve' → logprob: -3.2577686309814453
    4. 'process' → logprob: -4.007768630981445
    5. ' fetch' → logprob: -4.757768630981445
    6. ' calculate' → logprob: -4.882768630981445
    7. ' save' → logprob: -5.007768630981445
    8. 'solve' → logprob: -5.382768630981445
    9. ' ceil' → logprob: -5.632768630981445
    10. 'main' → logprob: -5.757768630981445

Token 23: 'ist' (ID: 421)
  Prédit: 'oor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oor' → logprob: -0.5367373824119568
    2. 'o' → logprob: -0.9117373824119568
    3. 'ush' → logprob: -4.786737442016602
    4. 'at' → logprob: -5.536737442016602
    5. 'oo' → logprob: -7.661737442016602
    6. 'a' → logprob: -8.536737442016602
    7. 'oop' → logprob: -8.786737442016602
    8. 'or' → logprob: -9.286737442016602
    9. '_' → logprob: -9.661737442016602
    10. '```' → logprob: -9.786737442016602

Token 24: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3061903417110443
    2. '(' → logprob: -1.4311903715133667
    3. '()' → logprob: -4.181190490722656
    4. '(lst' → logprob: -5.556190490722656
    5. '(list' → logprob: -6.556190490722656
    6. '([]' → logprob: -6.681190490722656
    7. ' ():' → logprob: -7.181190490722656
    8. '(x' → logprob: -7.681190490722656
    9. '(a' → logprob: -8.056190490722656
    10. '(range' → logprob: -8.806190490722656

Token 25: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.005499599035829306
    2. 'list' → logprob: -5.755499362945557
    3. ' return' → logprob: -6.255499362945557
    4. ' map' → logprob: -8.130499839782715
    5. 'return' → logprob: -10.505499839782715
    6. ' []' → logprob: -10.880499839782715
    7. ' ' → logprob: -11.005499839782715
    8. ' [' → logprob: -11.380499839782715
    9. '[]' → logprob: -11.630499839782715
    10. '(list' → logprob: -12.005499839782715

Token 26: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10065530240535736
    2. ' list' → logprob: -2.3506553173065186
    3. '[list' → logprob: -8.100655555725098
    4. '[' → logprob: -9.600655555725098
    5. 'map' → logprob: -9.725655555725098
    6. ' [' → logprob: -11.725655555725098
    7. '	list' → logprob: -12.975655555725098
    8. ' map' → logprob: -12.975655555725098
    9. '(list' → logprob: -13.475655555725098
    10. '[int' → logprob: -13.975655555725098

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005018008523620665
    2. '(' → logprob: -7.75050163269043
    3. '(int' → logprob: -10.37550163269043
    4. '(input' → logprob: -10.62550163269043
    5. '(range' → logprob: -12.12550163269043
    6. '(eval' → logprob: -12.37550163269043
    7. '()' → logprob: -12.62550163269043
    8. ' (' → logprob: -14.37550163269043
    9. 'map' → logprob: -14.50050163269043
    10. '((' → logprob: -15.00050163269043

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014013770967721939
    2. 'int' → logprob: -4.389013767242432
    3. '(' → logprob: -6.639013767242432
    4. '<int' → logprob: -9.38901424407959
    5. '<|end|>' → logprob: -10.01401424407959
    6. '=int' → logprob: -10.76401424407959
    7. '[int' → logprob: -11.01401424407959
    8. ',int' → logprob: -11.51401424407959
    9. ']int' → logprob: -11.88901424407959
    10. ' int' → logprob: -13.01401424407959

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6905113458633423
    2. ',input' → logprob: -0.8155113458633423
    3. ',' → logprob: -2.9405112266540527
    4. '(' → logprob: -6.065511226654053
    5. 'input' → logprob: -7.440511226654053
    6. ' ,' → logprob: -8.440511703491211
    7. ',(' → logprob: -9.565511703491211
    8. '<|end|>' → logprob: -9.565511703491211
    9. ' (' → logprob: -10.065511703491211
    10. ' input' → logprob: -10.190511703491211

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17978645861148834
    2. ' input' → logprob: -1.8047864437103271
    3. '(input' → logprob: -10.804786682128906
    4. '	input' → logprob: -11.929786682128906
    5. ',input' → logprob: -11.929786682128906
    6. '=input' → logprob: -12.804786682128906
    7. ' ' → logprob: -12.804786682128906
    8. '<input' → logprob: -13.929786682128906
    9. ')' → logprob: -14.304786682128906
    10. '```' → logprob: -15.429786682128906

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.070975071750581e-05
    2. '()' → logprob: -10.625030517578125
    3. ' ().' → logprob: -12.750030517578125
    4. '(' → logprob: -13.250030517578125
    5. ')' → logprob: -14.250030517578125
    6. '.split' → logprob: -15.125030517578125
    7. '.' → logprob: -15.750030517578125
    8. 'split' → logprob: -16.125030517578125
    9. ' ' → logprob: -16.375030517578125
    10. '()))' → logprob: -16.500030517578125

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003501242317724973
    2. 'strip' → logprob: -8.000349998474121
    3. 'rstrip' → logprob: -11.250349998474121
    4. ' split' → logprob: -14.125349998474121
    5. 'read' → logprob: -14.250349998474121
    6. 'spl' → logprob: -15.000349998474121
    7. '(split' → logprob: -16.750350952148438
    8. 's' → logprob: -18.125350952148438
    9. '.split' → logprob: -19.375350952148438
    10. ')' → logprob: -20.000350952148438

Token 33: '('' (ID: 706)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05510354042053223
    2. '))' → logprob: -3.0551035404205322
    3. '()' → logprob: -5.430103302001953
    4. '())' → logprob: -6.430103302001953
    5. ')))' → logprob: -8.555103302001953
    6. '())))' → logprob: -8.555103302001953
    7. ')' → logprob: -9.930103302001953
    8. '()))
' → logprob: -9.930103302001953
    9. '(' → logprob: -11.805103302001953
    10. '()));' → logprob: -12.805103302001953

Token 34: ' '' (ID: 461)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.008775289170444012
    2. ')))' → logprob: -5.258775234222412
    3. ')' → logprob: -6.383775234222412
    4. ''))' → logprob: -6.883775234222412
    5. '')' → logprob: -7.883775234222412
    6. ''' → logprob: -7.883775234222412
    7. '')))
' → logprob: -11.00877571105957
    8. '())))' → logprob: -11.00877571105957
    9. ' '' → logprob: -11.13377571105957
    10. '()' → logprob: -11.88377571105957

Token 35: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.016350938007235527
    2. ')' → logprob: -4.141350746154785
    3. '')))' → logprob: -9.016350746154785
    4. '))' → logprob: -9.516350746154785
    5. ')))
' → logprob: -9.766350746154785
    6. '))))' → logprob: -10.016350746154785
    7. ')));' → logprob: -12.016350746154785
    8. ')))

' → logprob: -12.516350746154785
    9. '())))' → logprob: -12.516350746154785
    10. ' ' → logprob: -12.891350746154785

Token 36: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8817211389541626
    2. 'n' → logprob: -0.8817211389541626
    3. 'def' → logprob: -2.131721019744873
    4. 'a' → logprob: -4.131721019744873
    5. 't' → logprob: -4.631721019744873
    6. '
' → logprob: -5.756721019744873
    7. '\' → logprob: -5.881721019744873
    8. 's' → logprob: -5.881721019744873
    9. 'r' → logprob: -5.881721019744873
    10. 'N' → logprob: -6.131721019744873

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24885766208171844
    2. '=' → logprob: -1.7488576173782349
    3. ' ' → logprob: -3.3738577365875244
    4. ')' → logprob: -5.123857498168945
    5. '<|end|>' → logprob: -5.748857498168945
    6. ',' → logprob: -6.748857498168945
    7. '.' → logprob: -7.498857498168945
    8. '  ' → logprob: -8.248857498168945
    9. ' )' → logprob: -8.248857498168945
    10. ' =)' → logprob: -8.748857498168945

Token 38: ' fetch' (ID: 12011)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.2814628481864929
    2. ' fetch' → logprob: -1.4064629077911377
    3. 'f' → logprob: -8.406462669372559
    4. 'fl' → logprob: -10.656462669372559
    5. ' f' → logprob: -11.156462669372559
    6. 'int' → logprob: -11.531462669372559
    7. '10' → logprob: -11.906462669372559
    8. 'c' → logprob: -12.031462669372559
    9. ' ' → logprob: -12.531462669372559
    10. 'n' → logprob: -12.531462669372559

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014883324911352247
    2. '(' → logprob: -9.62514877319336
    3. '()
' → logprob: -9.62514877319336
    4. ' ()' → logprob: -11.87514877319336
    5. '())' → logprob: -12.12514877319336
    6. '()

' → logprob: -13.75014877319336
    7. '()>' → logprob: -14.12514877319336
    8. ')' → logprob: -14.50014877319336
    9. '()<' → logprob: -14.75014877319336
    10. '();' → logprob: -15.12514877319336

Token 40: 'xs' (ID: 33335)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5272105932235718
    2. 'arr' → logprob: -1.2772105932235718
    3. 'lst' → logprob: -2.7772107124328613
    4. 'l' → logprob: -4.152210712432861
    5. 's' → logprob: -4.527210712432861
    6. 'd' → logprob: -4.902210712432861
    7. 'data' → logprob: -4.902210712432861
    8. 'k' → logprob: -5.152210712432861
    9. 'x' → logprob: -5.902210712432861
    10. 'A' → logprob: -5.902210712432861

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0890982523560524
    2. '=' → logprob: -2.4640982151031494
    3. ',' → logprob: -8.83909797668457
    4. '.' → logprob: -13.21409797668457
    5. 's' → logprob: -13.21409797668457
    6. ')' → logprob: -13.21409797668457
    7. ' ,' → logprob: -13.21409797668457
    8. ' =[' → logprob: -13.58909797668457
    9. ' =
' → logprob: -13.71409797668457
    10. '[' → logprob: -13.71409797668457

Token 42: ' fl' (ID: 1548)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.1129276230931282
    2. ' fl' → logprob: -2.2379276752471924
    3. '	fl' → logprob: -10.362927436828613
    4. '[' → logprob: -11.612927436828613
    5. '[]' → logprob: -11.675427436828613
    6. 'f' → logprob: -11.675427436828613
    7. 'list' → logprob: -11.925427436828613
    8. ' ' → logprob: -12.612927436828613
    9. ' [' → logprob: -12.737927436828613
    10. 'flen' → logprob: -12.862927436828613

Token 43: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -2.5776860184123507e-06
    2. 'st' → logprob: -13.75000286102295
    3. 'list' → logprob: -15.50000286102295
    4. '(' → logprob: -15.62500286102295
    5. '```' → logprob: -15.62500286102295
    6. 'ист' → logprob: -15.75000286102295
    7. 'ists' → logprob: -15.87500286102295
    8. 'is' → logprob: -16.375001907348633
    9. '   ' → logprob: -16.750001907348633
    10. ' ist' → logprob: -16.750001907348633

Token 44: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011998742120340466
    2. '(' → logprob: -6.751199722290039
    3. '()
' → logprob: -11.001199722290039
    4. '())' → logprob: -12.501199722290039
    5. '()

' → logprob: -12.751199722290039
    6. '()]' → logprob: -13.751199722290039
    7. '()`' → logprob: -13.876199722290039
    8. ' ()' → logprob: -14.126199722290039
    9. '();' → logprob: -14.501199722290039
    10. '(
' → logprob: -14.876199722290039

Token 45: 'if' (ID: 366)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6559211611747742
    2. 'dp' → logprob: -1.905921220779419
    3. 'xs' → logprob: -2.905921220779419
    4. 'm' → logprob: -3.155921220779419
    5. 'd' → logprob: -3.780921220779419
    6. '
' → logprob: -4.28092098236084
    7. 'p' → logprob: -4.40592098236084
    8. '_' → logprob: -4.40592098236084
    9. 'c' → logprob: -4.53092098236084
    10. 'k' → logprob: -4.53092098236084

Token 46: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.015605632215738297
    2. 'n' → logprob: -4.890605449676514
    3. ' xs' → logprob: -5.890605449676514
    4. ' len' → logprob: -6.265605449676514
    5. ' ' → logprob: -6.515605449676514
    6. ' c' → logprob: -6.765605449676514
    7. ' not' → logprob: -8.265605926513672
    8. ' sum' → logprob: -8.890605926513672
    9. ' x' → logprob: -9.765605926513672
    10. 'len' → logprob: -10.015605926513672

Token 47: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.533563494682312
    2. '>' → logprob: -2.1585636138916016
    3. ' <' → logprob: -2.5335636138916016
    4. ' %' → logprob: -2.6585636138916016
    5. '%' → logprob: -3.1585636138916016
    6. ' ' → logprob: -3.4085636138916016
    7. ' <=' → logprob: -3.6585636138916016
    8. ' ==' → logprob: -4.033563613891602
    9. '<' → logprob: -4.408563613891602
    10. '==' → logprob: -5.033563613891602

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023349830880761147
    2. ' ' → logprob: -3.8983497619628906
    3. '0' → logprob: -5.898349761962891
    4. '2' → logprob: -9.89834976196289
    5. '3' → logprob: -12.39834976196289
    6. '  ' → logprob: -13.46084976196289
    7. '4' → logprob: -14.64834976196289
    8. '5' → logprob: -14.71084976196289
    9. '7' → logprob: -14.96084976196289
    10. '   ' → logprob: -15.27334976196289

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00640815868973732
    2. '0' → logprob: -5.756408214569092
    3. ' ' → logprob: -5.756408214569092
    4. '2' → logprob: -10.006407737731934
    5. '3' → logprob: -12.256407737731934
    6. '  ' → logprob: -12.631407737731934
    7. '5' → logprob: -13.631407737731934
    8. '4' → logprob: -13.693907737731934
    9. 'c' → logprob: -13.818907737731934
    10. '7' → logprob: -13.881407737731934

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014728360110893846
    2. ':
' → logprob: -8.875146865844727
    3. ' :' → logprob: -12.125146865844727
    4. ':return' → logprob: -13.625146865844727
    5. ':**' → logprob: -14.875146865844727
    6. ' and' → logprob: -16.000146865844727
    7. ':

' → logprob: -16.375146865844727
    8. '):' → logprob: -16.500146865844727
    9. ':\' → logprob: -17.375146865844727
    10. ',' → logprob: -17.625146865844727

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1599133014678955
    2. '\n' → logprob: -1.2849133014678955
    3. 'print' → logprob: -1.6599133014678955
    4. ' print' → logprob: -2.1599133014678955
    5. '
' → logprob: -2.5349133014678955
    6. ' 
' → logprob: -4.659913063049316
    7. '\' → logprob: -5.034913063049316
    8. ':' → logprob: -6.034913063049316
    9. ':
' → logprob: -6.409913063049316
    10. '    
' → logprob: -6.534913063049316

Token 52: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007032568100839853
    2. ' print' → logprob: -7.75070333480835
    3. '0' → logprob: -8.875702857971191
    4. 'return' → logprob: -9.250702857971191
    5. 'pr' → logprob: -11.125702857971191
    6. 'prin' → logprob: -11.875702857971191
    7. 'xs' → logprob: -12.375702857971191
    8. '   ' → logprob: -12.500702857971191
    9. '1' → logprob: -13.375702857971191
    10. 'pri' → logprob: -13.500702857971191

Token 53: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.062073227018117905
    2. '(' → logprob: -2.812073230743408
    3. 'xs' → logprob: -9.81207275390625
    4. '(x' → logprob: -10.68707275390625
    5. '((' → logprob: -12.06207275390625
    6. '('' → logprob: -12.18707275390625
    7. '(max' → logprob: -12.31207275390625
    8. '("("' → logprob: -12.93707275390625
    9. '(abs' → logprob: -13.06207275390625
    10. ' (' → logprob: -13.68707275390625

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.625000953674316
    3. ')' → logprob: -15.750000953674316
    4. '[-' → logprob: -16.125
    5. '[
' → logprob: -17.875
    6. '```' → logprob: -17.875
    7. ' [' → logprob: -18.75
    8. '   ' → logprob: -19.25
    9. ')
' → logprob: -19.375
    10. '1' → logprob: -19.625

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -18.3750057220459
    4. '   ' → logprob: -18.4375057220459
    5. '-' → logprob: -18.5625057220459
    6. '1' → logprob: -18.8125057220459
    7. '０' → logprob: -19.0625057220459
    8. '```' → logprob: -19.4375057220459
    9. '٠' → logprob: -20.0000057220459
    10. ']' → logprob: -20.1250057220459

Token 56: ']);' (ID: 34389)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001137947037932463
    2. ')
' → logprob: -9.625113487243652
    3. '])' → logprob: -10.375113487243652
    4. '))' → logprob: -11.750113487243652
    5. ' )' → logprob: -12.500113487243652
    6. '})' → logprob: -12.750113487243652
    7. '）' → logprob: -14.625113487243652
    8. '`)' → logprob: -15.125113487243652
    9. ']' → logprob: -15.625113487243652
    10. ')
' → logprob: -15.875113487243652

Token 57: ' quit' (ID: 27737)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.05607658252120018
    2. '
' → logprob: -4.306076526641846
    3. ' 
' → logprob: -4.306076526641846
    4. 'else' → logprob: -4.806076526641846
    5. ' else' → logprob: -5.306076526641846
    6. '' → logprob: -5.806076526641846
    7. 'exit' → logprob: -6.306076526641846
    8. '\' → logprob: -6.431076526641846
    9. '```' → logprob: -6.431076526641846
    10. '  
' → logprob: -6.431076526641846

Token 58: '()

' (ID: 5874)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.48882848024368286
    2. '
' → logprob: -1.113828420639038
    3. 'n' → logprob: -3.988828420639038
    4. '\' → logprob: -4.988828659057617
    5. '' → logprob: -4.988828659057617
    6. 'x' → logprob: -5.238828659057617
    7. ' 
' → logprob: -5.488828659057617
    8. '```' → logprob: -6.113828659057617
    9. '

' → logprob: -6.238828659057617
    10. '0' → logprob: -6.488828659057617

Token 59: 'class' (ID: 1444)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5707275867462158
    2. '_' → logprob: -2.070727586746216
    3. 'p' → logprob: -2.570727586746216
    4. 'prefix' → logprob: -2.695727586746216
    5. 'c' → logprob: -3.695727586746216
    6. 'cs' → logprob: -4.320727348327637
    7. '```' → logprob: -4.445727348327637
    8. 'ps' → logprob: -4.570727348327637
    9. '_
' → logprob: -4.570727348327637
    10. 'psum' → logprob: -4.570727348327637

Token 60: ' Fen' (ID: 48230)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.4740290343761444
    2. ' Fen' → logprob: -2.224029064178467
    3. ' Stack' → logprob: -2.599029064178467
    4. ' Segment' → logprob: -2.599029064178467
    5. ' Prefix' → logprob: -3.224029064178467
    6. ' Seg' → logprob: -4.474029064178467
    7. ' Solver' → logprob: -4.599029064178467
    8. ' Acc' → logprob: -4.724029064178467
    9. ' Tree' → logprob: -5.099029064178467
    10. ' Factor' → logprob: -5.224029064178467

Token 61: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.022235501557588577
    2. 'wick' → logprob: -4.39723539352417
    3. '   ' → logprob: -5.39723539352417
    4. '```' → logprob: -6.27223539352417
    5. '  ' → logprob: -7.39723539352417
    6. ' ' → logprob: -7.64723539352417
    7. ' w' → logprob: -8.522235870361328
    8. '``' → logprob: -8.522235870361328
    9. '\' → logprob: -8.772235870361328
    10. '	w' → logprob: -8.897235870361328

Token 62: 'Magic' (ID: 58130)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0002807623823173344
    2. ':' → logprob: -9.125280380249023
    3. '(Tree' → logprob: -9.125280380249023
    4. 'T' → logprob: -11.375280380249023
    5. ' Tree' → logprob: -11.625280380249023
    6. '_T' → logprob: -11.750280380249023
    7. '	Tree' → logprob: -11.750280380249023
    8. '<Tree' → logprob: -11.875280380249023
    9. '```' → logprob: -11.875280380249023
    10. '(T' → logprob: -12.750280380249023

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006396461394615471
    2. '():' → logprob: -7.50063943862915
    3. ' :' → logprob: -10.500639915466309
    4. '(object' → logprob: -10.875639915466309
    5. ':
' → logprob: -11.125639915466309
    6. '(' → logprob: -12.000639915466309
    7. ':**' → logprob: -12.250639915466309
    8. '):' → logprob: -12.625639915466309
    9. '>:' → logprob: -13.250639915466309
    10. '(Tree' → logprob: -13.750639915466309

Token 64: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9551076889038086
    2. '
' → logprob: -1.0801076889038086
    3. '   ' → logprob: -2.0801076889038086
    4. ':
' → logprob: -2.7051076889038086
    5. '    
' → logprob: -3.8301076889038086
    6. ' 
' → logprob: -4.080107688903809
    7. '  
' → logprob: -4.705107688903809
    8. '<|end|>' → logprob: -5.080107688903809
    9. ' def' → logprob: -5.205107688903809
    10. 'def' → logprob: -5.330107688903809

Token 65: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22898516058921814
    2. 'def' → logprob: -1.6039851903915405
    3. '   ' → logprob: -5.72898530960083
    4. '	def' → logprob: -8.228984832763672
    5. ' ' → logprob: -11.103984832763672
    6. '__' (adapté à ' __') → logprob: -11.603984832763672
    7. ' __' → logprob: -11.603984832763672
    8. '    ' → logprob: -12.103984832763672
    9. '    
' → logprob: -12.603984832763672
    10. '  ' → logprob: -13.353984832763672

Token 66: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5526099801063538
    2. 'slots' → logprob: -1.177609920501709
    3. 'size' → logprob: -2.302609920501709
    4. 'data' → logprob: -5.302609920501709
    5. 'tree' → logprob: -5.802609920501709
    6. 'sz' → logprob: -6.677609920501709
    7. 'n' → logprob: -6.802609920501709
    8. 'bits' → logprob: -6.927609920501709
    9. 'SIZE' → logprob: -7.177609920501709
    10. '_init' → logprob: -7.302609920501709

Token 67: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.941161776310764e-05
    2. '=' → logprob: -11.000039100646973
    3. ' =' → logprob: -11.000039100646973
    4. '___' → logprob: -12.875039100646973
    5. '_' → logprob: -13.250039100646973
    6. '____' → logprob: -14.375039100646973
    7. '=['' → logprob: -14.625039100646973
    8. '__[' → logprob: -15.375039100646973
    9. '__,' → logprob: -15.500039100646973
    10. '__["' → logprob: -16.50004005432129

Token 68: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006542971823364496
    2. ' =' → logprob: -7.500654220581055
    3. '=' → logprob: -9.375654220581055
    4. '___' → logprob: -11.875654220581055
    5. '=['' → logprob: -12.625654220581055
    6. '__[' → logprob: -13.000654220581055
    7. '_' → logprob: -13.125654220581055
    8. '____' → logprob: -13.875654220581055
    9. '__,' → logprob: -15.125654220581055
    10. '__["' → logprob: -15.125654220581055

Token 69: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.4906221628189087
    2. '['_' → logprob: -1.2406221628189087
    3. ''' → logprob: -3.490622043609619
    4. ''_' → logprob: -3.615622043609619
    5. ' ['' → logprob: -4.615622043609619
    6. '('_' → logprob: -4.740622043609619
    7. '["' → logprob: -5.240622043609619
    8. ''s' → logprob: -5.365622043609619
    9. '["_' → logprob: -5.615622043609619
    10. '__' → logprob: -6.365622043609619

Token 70: '_' (ID: 62)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.19872377812862396
    2. 'n' → logprob: -2.823723793029785
    3. 'data' → logprob: -3.323723793029785
    4. 'size' → logprob: -3.948723793029785
    5. 'fen' → logprob: -4.198723793029785
    6. 'bit' → logprob: -4.823723793029785
    7. 'arr' → logprob: -4.948723793029785
    8. 't' → logprob: -4.948723793029785
    9. '_tree' → logprob: -4.948723793029785
    10. 's' → logprob: -5.323723793029785

Token 71: 'n' (ID: 77)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.5471125245094299
    2. 'n' → logprob: -1.6721124649047852
    3. 'size' → logprob: -2.547112464904785
    4. 'data' → logprob: -2.797112464904785
    5. 'arr' → logprob: -3.797112464904785
    6. 'fen' → logprob: -3.922112464904785
    7. 's' → logprob: -4.172112464904785
    8. 'N' → logprob: -5.172112464904785
    9. 'bit' → logprob: -5.422112464904785
    10. 't' → logprob: -5.547112464904785

Token 72: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0004691610229201615
    2. '','' → logprob: -7.750469207763672
    3. ',' → logprob: -10.375469207763672
    4. ''' → logprob: -12.375469207763672
    5. '_',' → logprob: -13.750469207763672
    6. ' ',' → logprob: -13.875469207763672
    7. '_' → logprob: -15.000469207763672
    8. '`,' → logprob: -15.375469207763672
    9. '',"' → logprob: -15.625469207763672
    10. '']' → logprob: -15.875469207763672

Token 73: ' '_' (ID: 20523)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.46409088373184204
    2. '_data' → logprob: -2.2140908241271973
    3. '_t' → logprob: -2.3390908241271973
    4. ''_' → logprob: -3.4640908241271973
    5. '_' → logprob: -3.7140908241271973
    6. '_f' → logprob: -4.214090824127197
    7. '_s' → logprob: -4.339090824127197
    8. ' _' → logprob: -4.339090824127197
    9. ' '' → logprob: -4.839090824127197
    10. '_vals' → logprob: -4.964090824127197

Token 74: 'd' (ID: 67)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.1733003407716751
    2. 'data' → logprob: -2.923300266265869
    3. 'fen' → logprob: -3.048300266265869
    4. 'bit' → logprob: -3.548300266265869
    5. 'arr' → logprob: -4.798300266265869
    6. 'ft' → logprob: -5.423300266265869
    7. 's' → logprob: -5.673300266265869
    8. 'dat' → logprob: -5.673300266265869
    9. 'f' → logprob: -6.173300266265869
    10. 't' → logprob: -6.298300266265869

Token 75: '']
' (ID: 9756)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.46529829502105713
    2. '']' → logprob: -1.0902982950210571
    3. '']]' → logprob: -4.590298175811768
    4. '',' → logprob: -4.840298175811768
    5. 'e' → logprob: -4.965298175811768
    6. '']}' → logprob: -5.590298175811768
    7. 'a' → logprob: -5.715298175811768
    8. 'at' → logprob: -6.590298175811768
    9. ' ']' → logprob: -7.590298175811768
    10. '_' → logprob: -8.090298652648926

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013074465095996857
    2. '

' → logprob: -4.8880743980407715
    3. ',' → logprob: -6.3880743980407715
    4. '    
' → logprob: -6.3880743980407715
    5. '
' → logprob: -7.2630743980407715
    6. 'def' → logprob: -7.7630743980407715
    7. '
    
' → logprob: -8.13807487487793
    8. '   ' → logprob: -8.88807487487793
    9. ' def' → logprob: -9.51307487487793
    10. '	def' → logprob: -9.63807487487793

Token 77: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0032349901739507914
    2. 'def' (adapté à ' def') → logprob: -6.25323486328125
    3. ' def' → logprob: -7.00323486328125
    4. '	def' → logprob: -8.87823486328125
    5. '    
' → logprob: -9.62823486328125
    6. '

' → logprob: -10.00323486328125
    7. '
' → logprob: -10.12823486328125
    8. ':' → logprob: -10.62823486328125
    9. '   ' → logprob: -11.00323486328125
    10. '	
' → logprob: -11.25323486328125

Token 78: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.030429601669311523
    2. ' def' → logprob: -4.155429840087891
    3. '__' → logprob: -4.780429840087891
    4. '_init' → logprob: -5.780429840087891
    5. ' init' → logprob: -6.780429840087891
    6. ' _' → logprob: -7.030429840087891
    7. '_' → logprob: -8.40542984008789
    8. ' ' → logprob: -8.65542984008789
    9. 'def' → logprob: -8.90542984008789
    10. ' ' → logprob: -9.15542984008789

Token 79: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.000283265660982579
    2. 'nit' → logprob: -8.500283241271973
    3. 'slots' → logprob: -10.125283241271973
    4. 'ini' → logprob: -11.250283241271973
    5. '_init' → logprob: -11.625283241271973
    6. 'n' → logprob: -11.875283241271973
    7. 'in' → logprob: -12.875283241271973
    8. ' init' → logprob: -13.000283241271973
    9. 'i' → logprob: -13.375283241271973
    10. 'innit' → logprob: -14.125283241271973

Token 80: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0016261448618024588
    2. '__' → logprob: -6.751626014709473
    3. '(self' → logprob: -7.876626014709473
    4. '_(' → logprob: -10.001626014709473
    5. '(' → logprob: -11.251626014709473
    6. '__(
' → logprob: -11.626626014709473
    7. '__((' → logprob: -12.501626014709473
    8. '__('' → logprob: -13.001626014709473
    9. 'self' → logprob: -14.126626014709473
    10. '_' → logprob: -14.251626014709473

Token 81: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.031468313187360764
    2. '(self' → logprob: -3.531468391418457
    3. ' self' → logprob: -6.656468391418457
    4. 's' → logprob: -8.031468391418457
    5. '(' → logprob: -10.406468391418457
    6. '<|end|>' → logprob: -10.781468391418457
    7. 't' → logprob: -11.656468391418457
    8. ' (' → logprob: -12.156468391418457
    9. ' ' → logprob: -12.281468391418457
    10. '	self' → logprob: -12.281468391418457

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013623425737023354
    2. '(self' → logprob: -4.763623237609863
    3. ' ,' → logprob: -5.388623237609863
    4. 'self' → logprob: -8.763623237609863
    5. ',self' → logprob: -9.013623237609863
    6. ' (' → logprob: -9.513623237609863
    7. '(n' → logprob: -10.388623237609863
    8. ',n' → logprob: -10.513623237609863
    9. ' self' → logprob: -11.513623237609863
    10. '(' → logprob: -12.263623237609863

Token 83: ' q' (ID: 2335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09441578388214111
    2. ' self' → logprob: -3.0944156646728516
    3. 'n' → logprob: -3.2194156646728516
    4. ' n' → logprob: -5.344415664672852
    5. '   ' → logprob: -10.719415664672852
    6. '       ' → logprob: -11.844415664672852
    7. 'size' → logprob: -12.469415664672852
    8. 's' → logprob: -13.219415664672852
    9. '	self' → logprob: -13.219415664672852
    10. '(self' → logprob: -14.094415664672852

Token 84: '):' (ID: 3127)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.5541108846664429
    2. '_n' → logprob: -2.0541110038757324
    3. 'ty' → logprob: -2.1791110038757324
    4. '=' → logprob: -2.4291110038757324
    5. 'ual' → logprob: -2.5541110038757324
    6. '   ' → logprob: -2.8041110038757324
    7. ':' → logprob: -3.0541110038757324
    8. ',' → logprob: -3.3041110038757324
    9. '):' → logprob: -3.3041110038757324
    10. '_' → logprob: -3.8041110038757324

Token 85: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.284385621547699
    2. '<|end|>' → logprob: -1.9093856811523438
    3. '        ' → logprob: -3.6593856811523438
    4. '
' → logprob: -3.6593856811523438
    5. ' 
' → logprob: -4.159385681152344
    6. '        
' → logprob: -4.784385681152344
    7. '(n' → logprob: -5.659385681152344
    8. '    ' → logprob: -5.784385681152344
    9. 'self' → logprob: -6.034385681152344
    10. '<|end|>' → logprob: -6.159385681152344

Token 86: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00015205175441224128
    2. ' .' → logprob: -9.875151634216309
    3. '_n' → logprob: -10.250151634216309
    4. '.' → logprob: -10.375151634216309
    5. '.n' → logprob: -11.375151634216309
    6. '=' → logprob: -12.125151634216309
    7. ' =' → logprob: -12.250151634216309
    8. ')._' → logprob: -13.125151634216309
    9. '.__' → logprob: -13.250151634216309
    10. ']._' → logprob: -13.750151634216309

Token 87: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009455301333218813
    2. 'd' → logprob: -7.000945568084717
    3. '=' → logprob: -11.000945091247559
    4. '_n' → logprob: -11.500945091247559
    5. '_d' → logprob: -12.875945091247559
    6. 'init' → logprob: -13.750945091247559
    7. '=n' → logprob: -14.375945091247559
    8. ' =' → logprob: -14.500945091247559
    9. 'q' → logprob: -14.750945091247559
    10. ' n' → logprob: -14.875945091247559

Token 88: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197282433509827
    2. '=' → logprob: -1.5019727945327759
    3. '=q' → logprob: -10.376973152160645
    4. '<|end|>' → logprob: -12.501973152160645
    5. ' ' → logprob: -12.876973152160645
    6. '=int' → logprob: -13.001973152160645
    7. ',' → logprob: -13.251973152160645
    8. '=}' → logprob: -14.751973152160645
    9. '=n' → logprob: -15.126973152160645
    10. '=len' → logprob: -15.876973152160645

Token 89: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6969020962715149
    2. 'self' → logprob: -0.6969020962715149
    3. ' ' → logprob: -6.946902275085449
    4. ' =' → logprob: -7.321902275085449
    5. 's' → logprob: -7.821902275085449
    6. '<|end|>' → logprob: -7.946902275085449
    7. '=self' → logprob: -8.07190227508545
    8. '_self' → logprob: -8.07190227508545
    9. ' q' → logprob: -8.32190227508545
    10. ' s' → logprob: -9.32190227508545

Token 90: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.015140647068619728
    2. '.' → logprob: -4.765140533447266
    3. '_d' → logprob: -6.265140533447266
    4. ' =' → logprob: -6.640140533447266
    5. '_' → logprob: -6.890140533447266
    6. '=' → logprob: -7.265140533447266
    7. ' .' → logprob: -8.265140533447266
    8. '.q' → logprob: -8.515140533447266
    9. '.d' → logprob: -8.890140533447266
    10. '_q' → logprob: -9.015140533447266

Token 91: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015733062755316496
    2. 'n' → logprob: -6.876573085784912
    3. 'q' → logprob: -8.00157356262207
    4. 'init' → logprob: -10.00157356262207
    5. 'f' → logprob: -10.37657356262207
    6. '=' → logprob: -10.37657356262207
    7. '_d' → logprob: -10.62657356262207
    8. '_init' → logprob: -12.25157356262207
    9. ' d' → logprob: -12.31407356262207
    10. 's' → logprob: -12.37657356262207

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931544542312622
    2. ' =' → logprob: -0.6931544542312622
    3. ' ' → logprob: -12.318154335021973
    4. '=q' → logprob: -14.068154335021973
    5. '<|end|>' → logprob: -14.318154335021973
    6. '  ' → logprob: -14.943154335021973
    7. '=

' → logprob: -15.943154335021973
    8. ',' → logprob: -15.943154335021973
    9. '   ' → logprob: -16.31815528869629
    10. ' =[' → logprob: -16.44315528869629

Token 93: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.11325977742671967
    2. 'q' → logprob: -2.238259792327881
    3. '(q' → logprob: -8.488259315490723
    4. ' (' → logprob: -8.863259315490723
    5. '[q' → logprob: -9.863259315490723
    6. ' c' → logprob: -11.113259315490723
    7. ' [' → logprob: -11.488259315490723
    8. ' ' → logprob: -12.613259315490723
    9. '	q' → logprob: -12.988259315490723
    10. 'c' → logprob: -13.113259315490723

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010558422654867172
    2. ',[' → logprob: -5.510558605194092
    3. '[' → logprob: -6.010558605194092
    4. ' ,' → logprob: -6.135558605194092
    5. ' [' → logprob: -7.760558605194092
    6. '+' → logprob: -7.885558605194092
    7. '[q' → logprob: -7.885558605194092
    8. ' ,[' → logprob: -8.135558128356934
    9. ' +' → logprob: -9.010558128356934
    10. '   ' → logprob: -10.260558128356934

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8115190863609314
    2. ' [' → logprob: -1.0615191459655762
    3. '[q' → logprob: -1.5615191459655762
    4. ' q' → logprob: -11.436518669128418
    5. '[a' → logprob: -11.686518669128418
    6. '[d' → logprob: -12.311518669128418
    7. 'q' → logprob: -12.436518669128418
    8. '[int' → logprob: -12.436518669128418
    9. '[f' → logprob: -12.436518669128418
    10. ' ' → logprob: -12.436518669128418

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014170088805258274
    2. ' ' → logprob: -4.264170169830322
    3. ' [' → logprob: -13.889169692993164
    4. 'None' → logprob: -14.076669692993164
    5. '[' → logprob: -14.201669692993164
    6. '  ' → logprob: -14.764169692993164
    7. '   ' → logprob: -14.826669692993164
    8. ']' → logprob: -14.889169692993164
    9. '۰' → logprob: -15.264169692993164
    10. ' ' → logprob: -15.326669692993164

Token 97: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5839552283287048
    2. ']*(' → logprob: -0.8339552283287048
    3. ']*' → logprob: -4.83395528793335
    4. ']+' → logprob: -10.833954811096191
    5. ' ]' → logprob: -13.458954811096191
    6. '*(' → logprob: -13.583954811096191
    7. '()]' → logprob: -13.833954811096191
    8. ')' → logprob: -14.333954811096191
    9. '   ' → logprob: -14.458954811096191
    10. ']<<' → logprob: -14.458954811096191

Token 98: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.0948158382670954e-05
    2. ' q' → logprob: -10.500030517578125
    3. '(q' → logprob: -12.750030517578125
    4. '   ' → logprob: -15.625030517578125
    5. 'self' → logprob: -16.625030517578125
    6. '	q' → logprob: -17.500030517578125
    7. '  ' → logprob: -17.500030517578125
    8. '1' → logprob: -17.875030517578125
    9. '[q' → logprob: -18.375030517578125
    10. '(' → logprob: -18.750030517578125

Token 99: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024084746837615967
    2. ' +' → logprob: -8.62524127960205
    3. '+)' → logprob: -10.37524127960205
    4. '+n' → logprob: -11.50024127960205
    5. ')' → logprob: -11.75024127960205
    6. '+c' → logprob: -12.00024127960205
    7. ')+' → logprob: -13.12524127960205
    8. '*' → logprob: -13.62524127960205
    9. '()+' → logprob: -14.00024127960205
    10. '+self' → logprob: -15.00024127960205

Token 100: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.12127808178775e-05
    2. '2' → logprob: -10.125051498413086
    3. ' ' → logprob: -11.500051498413086
    4. '5' → logprob: -14.875051498413086
    5. '10' → logprob: -15.375051498413086
    6. '3' → logprob: -16.125051498413086
    7. '0' → logprob: -16.625051498413086
    8. '7' → logprob: -16.875051498413086
    9. '   ' → logprob: -17.062551498413086
    10. '4' → logprob: -17.687551498413086

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.431207682704553e-05
    2. ' )' → logprob: -10.750054359436035
    3. '<|end|>' → logprob: -11.000054359436035
    4. ')
' → logprob: -11.375054359436035
    5. '<|end|>' → logprob: -14.375054359436035
    6. '   ' → logprob: -14.750054359436035
    7. ')

' → logprob: -14.875054359436035
    8. '))' → logprob: -14.875054359436035
    9. '```' → logprob: -14.875054359436035
    10. ')}' → logprob: -15.250054359436035

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35204267501831055
    2. '    
' → logprob: -1.9770426750183105
    3. '
' → logprob: -2.1020426750183105
    4. 'def' → logprob: -4.4770426750183105
    5. ' 
' → logprob: -5.1020426750183105
    6. '	def' → logprob: -5.6020426750183105
    7. '	
' → logprob: -5.7270426750183105
    8. ' def' → logprob: -5.7270426750183105
    9. '<|end|>' → logprob: -5.9770426750183105
    10. '   
' → logprob: -6.1020426750183105

Token 103: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0565627813339233
    2. '   ' → logprob: -1.4315627813339233
    3. '
' → logprob: -1.6815627813339233
    4. '    
' → logprob: -1.8065627813339233
    5. ' def' → logprob: -3.056562900543213
    6. ' 
' → logprob: -4.931562900543213
    7. '  
' → logprob: -5.681562900543213
    8. '   
' → logprob: -6.431562900543213
    9. '	def' → logprob: -6.681562900543213
    10. '	
' → logprob: -7.181562900543213

Token 104: ' puff' (ID: 90733)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.6655393838882446
    2. ' add' → logprob: -1.4155393838882446
    3. '_update' → logprob: -2.290539264678955
    4. 'update' → logprob: -3.165539264678955
    5. '_add' → logprob: -3.540539264678955
    6. 'add' → logprob: -4.040539264678955
    7. ' _' → logprob: -4.290539264678955
    8. ' build' → logprob: -5.165539264678955
    9. ' upd' → logprob: -5.290539264678955
    10. 'upd' → logprob: -5.415539264678955

Token 105: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18269170820713043
    2. '(' → logprob: -1.8076916933059692
    3. 'self' → logprob: -6.93269157409668
    4. ' ' → logprob: -7.55769157409668
    5. '<|end|>' → logprob: -8.05769157409668
    6. ' (' → logprob: -8.30769157409668
    7. '(i' → logprob: -8.80769157409668
    8. '   ' → logprob: -9.05769157409668
    9. '(s' → logprob: -9.18269157409668
    10. '(
' → logprob: -9.43269157409668

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013028570683673024
    2. ' ,' → logprob: -6.751302719116211
    3. ',i' → logprob: -9.501302719116211
    4. ',index' → logprob: -10.751302719116211
    5. ',x' → logprob: -11.251302719116211
    6. 'self' → logprob: -11.751302719116211
    7. ',n' → logprob: -12.751302719116211
    8. ',j' → logprob: -13.251302719116211
    9. 'index' → logprob: -13.376302719116211
    10. 'idx' → logprob: -13.376302719116211

Token 107: ' z' (ID: 579)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48046934604644775
    2. ' i' → logprob: -1.2304693460464478
    3. 'k' → logprob: -3.730469226837158
    4. 'x' → logprob: -3.855469226837158
    5. 'p' → logprob: -4.730469226837158
    6. 'idx' → logprob: -4.980469226837158
    7. ' k' → logprob: -5.230469226837158
    8. ' x' → logprob: -5.230469226837158
    9. ' p' → logprob: -5.480469226837158
    10. ' idx' → logprob: -5.855469226837158

Token 108: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011063147336244583
    2. ' ,' → logprob: -5.136063098907471
    3. '):' → logprob: -5.511063098907471
    4. 'r' → logprob: -8.011063575744629
    5. 'x' → logprob: -9.011063575744629
    6. ',i' → logprob: -9.261063575744629
    7. ',x' → logprob: -9.386063575744629
    8. '):
' → logprob: -9.761063575744629
    9. '   ' → logprob: -9.886063575744629
    10. 'f' → logprob: -10.261063575744629

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011190002784132957
    2. ' i' → logprob: -4.636189937591553
    3. '   ' → logprob: -7.261189937591553
    4. ' for' → logprob: -8.386190414428711
    5. '    ' → logprob: -8.761190414428711
    6. ' x' → logprob: -8.886190414428711
    7. 'i' → logprob: -10.261190414428711
    8. ' ' → logprob: -10.511190414428711
    9. ' while' → logprob: -11.136190414428711
    10. ' z' → logprob: -11.261190414428711

Token 110: ' _' (ID: 1175)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.761223554611206
    2. ' i' → logprob: -0.761223554611206
    3. ' z' → logprob: -3.011223554611206
    4. ' x' → logprob: -5.511223793029785
    5. ' while' → logprob: -5.886223793029785
    6. 'i' → logprob: -6.011223793029785
    7. '   ' → logprob: -6.511223793029785
    8. 'z' → logprob: -6.761223793029785
    9. '    ' → logprob: -7.011223793029785
    10. '        ' → logprob: -7.386223793029785

Token 111: 'r' (ID: 81)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36977338790893555
    2. 'z' → logprob: -1.7447733879089355
    3. 'n' → logprob: -2.8697733879089355
    4. ' =' → logprob: -3.8697733879089355
    5. 'd' → logprob: -3.9947733879089355
    6. '=' → logprob: -4.2447733879089355
    7. '   ' → logprob: -4.6197733879089355
    8. 'idx' → logprob: -5.2447733879089355
    9. 'p' → logprob: -6.2447733879089355
    10. ' +=' → logprob: -6.9947733879089355

Token 112: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33701008558273315
    2. '=' → logprob: -1.462010145187378
    3. '=i' → logprob: -4.212009906768799
    4. ',' → logprob: -4.462009906768799
    5. 'i' → logprob: -4.837009906768799
    6. '   ' → logprob: -5.087009906768799
    7. ' ' → logprob: -5.587009906768799
    8. 'z' → logprob: -6.837009906768799
    9. '=s' → logprob: -7.212009906768799
    10. '=z' → logprob: -7.212009906768799

Token 113: '0' (ID: 15)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.08747085928916931
    2. ' z' → logprob: -2.712470769882202
    3. 'self' → logprob: -4.462471008300781
    4. ' self' → logprob: -5.712471008300781
    5. '   ' → logprob: -6.962471008300781
    6. '       ' → logprob: -7.087471008300781
    7. '_z' → logprob: -8.212471008300781
    8. ' ' → logprob: -9.212471008300781
    9. '1' → logprob: -9.337471008300781
    10. '0' → logprob: -9.962471008300781

Token 114: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2893950343132019
    2. ';' → logprob: -1.9143950939178467
    3. '
' → logprob: -2.9143950939178467
    4. ',' → logprob: -3.5393950939178467
    5. ' while' → logprob: -5.789394855499268
    6. ' ;' → logprob: -6.164394855499268
    7. ' z' → logprob: -6.539394855499268
    8. ';i' → logprob: -6.664394855499268
    9. '   ' → logprob: -6.789394855499268
    10. '	' → logprob: -6.914394855499268

Token 115: 'z' (ID: 89)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6535773873329163
    2. '       ' → logprob: -1.5285773277282715
    3. ' i' → logprob: -1.7785773277282715
    4. ' z' → logprob: -3.1535773277282715
    5. ' _' → logprob: -4.9035773277282715
    6. ' x' → logprob: -5.0285773277282715
    7. ' for' → logprob: -5.1535773277282715
    8. 'while' → logprob: -5.1535773277282715
    9. 'i' → logprob: -5.4035773277282715
    10. ' p' → logprob: -5.7785773277282715

Token 116: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05582893639802933
    2. ' +=' → logprob: -3.1808290481567383
    3. '|' → logprob: -4.430829048156738
    4. ' |=' → logprob: -7.930829048156738
    5. '   ' → logprob: -9.305829048156738
    6. ']+=' → logprob: -9.680829048156738
    7. 'while' → logprob: -9.805829048156738
    8. '=' → logprob: -9.805829048156738
    9. ' ' → logprob: -10.180829048156738
    10. ' =' → logprob: -10.805829048156738

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026777281891554594
    2. ' ' → logprob: -8.25026798248291
    3. '0' → logprob: -12.75026798248291
    4. 'z' → logprob: -13.50026798248291
    5. '2' → logprob: -15.00026798248291
    6. '   ' → logprob: -15.43776798248291
    7. '
' → logprob: -15.62526798248291
    8. '+' → logprob: -15.68776798248291
    9. ' z' → logprob: -15.81276798248291
    10. 'self' → logprob: -16.187767028808594

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12716169655323029
    2. '
' → logprob: -2.627161741256714
    3. ' while' → logprob: -3.627161741256714
    4. ';' → logprob: -4.127161502838135
    5. ' 
' → logprob: -6.752161502838135
    6. 'while' → logprob: -7.377161502838135
    7. '        ' → logprob: -7.627161502838135
    8. ' ' → logprob: -7.877161502838135
    9. ' ;' → logprob: -8.377161979675293
    10. '        
' → logprob: -8.377161979675293

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06159114092588425
    2. ' while' → logprob: -3.186591148376465
    3. 'while' → logprob: -4.311591148376465
    4. ';' → logprob: -6.061591148376465
    5. '
' → logprob: -6.061591148376465
    6. '	while' → logprob: -8.561591148376465
    7. '   ' → logprob: -10.811591148376465
    8. 'While' → logprob: -10.936591148376465
    9. '        
' → logprob: -11.186591148376465
    10. ' 
' → logprob: -11.561591148376465

Token 120: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45172634720802307
    2. 'while' (adapté à ' while') → logprob: -1.3267263174057007
    3. ' while' → logprob: -2.3267264366149902
    4. '	while' → logprob: -8.076725959777832
    5. '
' → logprob: -8.951725959777832
    6. '   ' → logprob: -10.326725959777832
    7. 'While' → logprob: -11.076725959777832
    8. 'n' → logprob: -12.076725959777832
    9. ' ' → logprob: -12.701725959777832
    10. 'r' → logprob: -13.076725959777832

Token 121: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.14271825551986694
    2. 'z' → logprob: -2.0177183151245117
    3. ' ' → logprob: -11.017718315124512
    4. '_z' → logprob: -11.267718315124512
    5. '	z' → logprob: -12.267718315124512
    6. '(z' → logprob: -12.642718315124512
    7. '_' → logprob: -13.767718315124512
    8. ' ' → logprob: -13.767718315124512
    9. ' _' → logprob: -14.142718315124512
    10. '   ' → logprob: -14.267718315124512

Token 122: '>' (ID: 29)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.36798638105392456
    2. ' <=' → logprob: -1.2429864406585693
    3. '<' → logprob: -4.36798620223999
    4. ' <' → logprob: -5.11798620223999
    5. '<n' → logprob: -7.99298620223999
    6. '<len' → logprob: -8.742986679077148
    7. '<_' → logprob: -9.617986679077148
    8. ' <<=' → logprob: -10.492986679077148
    9. '<size' → logprob: -10.742986679077148
    10. '<<' → logprob: -11.242986679077148

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00173158326651901
    2. ' ' → logprob: -6.3767313957214355
    3. 'n' → logprob: -11.126731872558594
    4. '<|end|>' → logprob: -12.251731872558594
    5. '<=' → logprob: -12.501731872558594
    6. '=' → logprob: -13.251731872558594
    7. 'z' → logprob: -14.001731872558594
    8. ' n' → logprob: -14.751731872558594
    9. '1' → logprob: -14.751731872558594
    10. '<' → logprob: -15.001731872558594

Token 124: ':_' (ID: 54242)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25310686230659485
    2. ':' → logprob: -1.5031068325042725
    3. ' and' → logprob: -7.503107070922852
    4. '           ' → logprob: -7.753107070922852
    5. '       ' → logprob: -9.503107070922852
    6. ' :
' → logprob: -10.378107070922852
    7. ':

' → logprob: -10.753107070922852
    8. ' :' → logprob: -11.378107070922852
    9. ':_' → logprob: -11.378107070922852
    10. ':
' → logprob: -11.628107070922852

Token 125: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015460425987839699
    2. 'd' → logprob: -4.89046049118042
    3. '_r' → logprob: -4.89046049118042
    4. 'z' → logprob: -8.140460014343262
    5. '_d' → logprob: -12.140460014343262
    6. ' r' → logprob: -13.015460014343262
    7. '	r' → logprob: -13.390460014343262
    8. '   ' → logprob: -13.890460014343262
    9. '-r' → logprob: -14.265460014343262
    10. '```' → logprob: -15.015460014343262

Token 126: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2307928502559662
    2. ' +=' → logprob: -1.6057928800582886
    3. ' ^=' → logprob: -5.855792999267578
    4. '^' → logprob: -6.230792999267578
    5. ',_' → logprob: -8.605792999267578
    6. '+=(' → logprob: -8.730792999267578
    7. '+' → logprob: -9.730792999267578
    8. ' ^' → logprob: -10.105792999267578
    9. ',' → logprob: -10.355792999267578
    10. ' ,' → logprob: -11.355792999267578

Token 127: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002043748099822551
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -14.625204086303711
    4. '[self' → logprob: -15.875204086303711
    5. '=self' → logprob: -16.25020408630371
    6. '_self' → logprob: -16.87520408630371
    7. '	self' → logprob: -17.12520408630371
    8. '*self' → logprob: -17.50020408630371
    9. '
' → logprob: -18.50020408630371
    10. '$self' → logprob: -19.50020408630371

Token 128: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.214019307051785e-05
    2. '_d' → logprob: -11.125032424926758
    3. '_r' → logprob: -12.500032424926758
    4. ']._' → logprob: -12.875032424926758
    5. '_' → logprob: -13.000032424926758
    6. '.' → logprob: -13.125032424926758
    7. '   ' → logprob: -13.625032424926758
    8. 'self' → logprob: -13.875032424926758
    9. ')._' → logprob: -14.375032424926758
    10. ' .' → logprob: -14.875032424926758

Token 129: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.906711546937004e-05
    2. 'r' → logprob: -10.000048637390137
    3. '_d' → logprob: -13.500048637390137
    4. 'n' → logprob: -13.625048637390137
    5. ' d' → logprob: -15.250048637390137
    6. '_r' → logprob: -15.875048637390137
    7. '
' → logprob: -16.312549591064453
    8. '```' → logprob: -16.437549591064453
    9. '   ' → logprob: -16.875049591064453
    10. '_' → logprob: -16.937549591064453

Token 130: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -1.6240566083070007e-06
    2. 'z' → logprob: -13.375001907348633
    3. '[' → logprob: -18.375001907348633
    4. ' [' → logprob: -18.750001907348633
    5. '[_' → logprob: -19.500001907348633
    6. ' z' → logprob: -19.625001907348633
    7. '(z' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '	z' → logprob: -20.000001907348633
    10. '[
' → logprob: -20.125001907348633

Token 131: '];' (ID: 11464)
  Prédit: '];'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '];' → logprob: -0.12045054882764816
    2. ']' → logprob: -2.245450496673584
    3. '-' → logprob: -4.995450496673584
    4. ']
' → logprob: -7.370450496673584
    5. '],' → logprob: -9.245450973510742
    6. ' ];' → logprob: -9.870450973510742
    7. ']-' → logprob: -11.245450973510742
    8. ' -' → logprob: -11.745450973510742
    9. ']
' → logprob: -11.745450973510742
    10. ']);' → logprob: -11.995450973510742

Token 132: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03817494958639145
    2. ' z' → logprob: -3.288174867630005
    3. '       ' → logprob: -9.413174629211426
    4. '           ' → logprob: -10.663174629211426
    5. '	z' → logprob: -10.788174629211426
    6. '   ' → logprob: -12.163174629211426
    7. '_z' → logprob: -13.913174629211426
    8. ' ' → logprob: -15.163174629211426
    9. ',z' → logprob: -15.288174629211426
    10. '
' → logprob: -15.413174629211426

Token 133: '&' (ID: 5)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.011469351127743721
    2. '-' → logprob: -4.88646936416626
    3. '&' → logprob: -6.26146936416626
    4. '>>' → logprob: -6.88646936416626
    5. '^' → logprob: -7.38646936416626
    6. ' -=' → logprob: -8.136468887329102
    7. ' ^=' → logprob: -12.386468887329102
    8. '+=' → logprob: -12.886468887329102
    9. '=' → logprob: -13.136468887329102
    10. ' >>=' → logprob: -13.636468887329102

Token 134: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6101354956626892
    2. '=-' → logprob: -1.360135555267334
    3. '=z' → logprob: -1.610135555267334
    4. '=(-' → logprob: -9.235135078430176
    5. '-=' → logprob: -10.110135078430176
    6. '=_' → logprob: -10.985135078430176
    7. '=e' → logprob: -11.485135078430176
    8. '=x' → logprob: -11.985135078430176
    9. '=b' → logprob: -12.110135078430176
    10. '=u' → logprob: -12.235135078430176

Token 135: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.019250690937042236
    2. ' z' → logprob: -4.144250869750977
    3. '(z' → logprob: -5.769250869750977
    4. ' (' → logprob: -10.269250869750977
    5. '	z' → logprob: -10.394250869750977
    6. ' ' → logprob: -11.894250869750977
    7. '(' → logprob: -12.144250869750977
    8. '-' → logprob: -13.144250869750977
    9. ' ' → logprob: -13.269250869750977
    10. '_z' → logprob: -13.519250869750977

Token 136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011493504978716373
    2. 'z' → logprob: -4.511493682861328
    3. '-z' → logprob: -7.886493682861328
    4. ' -' → logprob: -10.761493682861328
    5. ' z' → logprob: -10.761493682861328
    6. '~-' → logprob: -11.636493682861328
    7. '(z' → logprob: -11.886493682861328
    8. '=z' → logprob: -12.636493682861328
    9. '_z' → logprob: -13.136493682861328
    10. '	z' → logprob: -13.761493682861328

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.875008583068848
    3. 'z' → logprob: -14.750008583068848
    4. '```' → logprob: -15.125008583068848
    5. '<|end|>' → logprob: -15.875008583068848
    6. '
' → logprob: -16.18750762939453
    7. '0' → logprob: -16.43750762939453
    8. '"""' → logprob: -17.25000762939453
    9. '...' → logprob: -17.56250762939453
    10. '-' → logprob: -17.75000762939453

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5104538202285767
    2. '       ' → logprob: -1.0104538202285767
    3. '   ' → logprob: -4.135453701019287
    4. '        
' → logprob: -5.260453701019287
    5. '    
' → logprob: -5.635453701019287
    6. 'def' → logprob: -6.260453701019287
    7. ';' → logprob: -6.260453701019287
    8. '<|end|>' → logprob: -6.385453701019287
    9. ' 
' → logprob: -6.510453701019287
    10. '
' → logprob: -7.385453701019287

Token 139: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1983993649482727
    2. '   ' → logprob: -1.948399305343628
    3. '    
' → logprob: -3.948399305343628
    4. 'def' → logprob: -4.698399543762207
    5. '       ' → logprob: -6.073399543762207
    6. '<|end|>' → logprob: -6.323399543762207
    7. '        
' → logprob: -6.573399543762207
    8. ' def' → logprob: -6.823399543762207
    9. ' 
' → logprob: -7.073399543762207
    10. '  
' → logprob: -7.698399543762207

Token 140: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7761871814727783
    2. '   ' → logprob: -1.4011871814727783
    3. '
' → logprob: -1.6511871814727783
    4. '    
' → logprob: -3.4011871814727783
    5. ' 
' → logprob: -3.7761871814727783
    6. '       ' → logprob: -4.151186943054199
    7. ' def' → logprob: -4.276186943054199
    8. ' return' → logprob: -5.401186943054199
    9. 'return' (adapté à ' return') → logprob: -5.651186943054199
    10. '        
' → logprob: -6.026186943054199

Token 141: ' _' (ID: 1175)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -6.861651490908116e-05
    2. ' _' → logprob: -9.750068664550781
    3. '_f' → logprob: -11.500068664550781
    4. '_s' → logprob: -17.50006866455078
    5. '_rm' → logprob: -17.75006866455078
    6. '_t' → logprob: -18.12506866455078
    7. '_b' → logprob: -18.12506866455078
    8. '_a' → logprob: -18.25006866455078
    9. '_' → logprob: -18.62506866455078
    10. '_token' → logprob: -19.00006866455078

Token 142: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.4391956685576588e-05
    2. '_r' → logprob: -10.625024795532227
    3. ' r' → logprob: -17.500024795532227
    4. '	r' → logprob: -17.625024795532227
    5. '-r' → logprob: -17.750024795532227
    6. '.r' → logprob: -19.125024795532227
    7. 'р' → logprob: -19.125024795532227
    8. '­r' → logprob: -19.375024795532227
    9. '[r' → logprob: -19.750024795532227
    10. 'd' → logprob: -19.812524795532227

Token 143: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7714754939079285
    2. '   ' → logprob: -0.7714754939079285
    3. 'def' → logprob: -2.7714755535125732
    4. '    
' → logprob: -4.896475315093994
    5. ' def' → logprob: -5.521475315093994
    6. ' 
' → logprob: -7.521475315093994
    7. '        
' → logprob: -8.396475791931152
    8. '<|end|>' → logprob: -8.646475791931152
    9. '  
' → logprob: -8.896475791931152
    10. '   
' → logprob: -10.021475791931152

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022763056680560112
    2. 'def' → logprob: -4.147763252258301
    3. ' def' → logprob: -5.022763252258301
    4. '
' → logprob: -9.7727632522583
    5. '    
' → logprob: -10.2727632522583
    6. '	def' → logprob: -10.7727632522583
    7. '<|end|>' → logprob: -13.3977632522583
    8. ' 
' → logprob: -13.6477632522583
    9. '  
' → logprob: -14.2727632522583
    10. ';' → logprob: -14.2727632522583

Token 145: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8658201098442078
    2. '
' → logprob: -0.9908201098442078
    3. 'def' (adapté à ' def') → logprob: -1.9908201694488525
    4. '   ' → logprob: -2.7408201694488525
    5. ' 
' → logprob: -5.365819931030273
    6. '    
' → logprob: -6.490819931030273
    7. '	def' → logprob: -8.490819931030273
    8. ' ' → logprob: -8.990819931030273
    9. '  
' → logprob: -9.115819931030273
    10. '   
' → logprob: -9.490819931030273

Token 146: ' poke' (ID: 102821)
  Prédit: ' puff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puff' → logprob: -0.9179489016532898
    2. 'p' → logprob: -2.6679489612579346
    3. 'push' → logprob: -2.7304489612579346
    4. 's' → logprob: -2.7304489612579346
    5. 'q' → logprob: -3.9179489612579346
    6. ' def' → logprob: -4.0429487228393555
    7. ' push' → logprob: -4.1054487228393555
    8. 'v' → logprob: -4.2929487228393555
    9. 'g' → logprob: -4.3554487228393555
    10. 'f' → logprob: -4.4179487228393555

Token 147: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. ' (' → logprob: -14.625004768371582
    4. '(s' → logprob: -14.750004768371582
    5. 'self' → logprob: -16.375003814697266
    6. '(
' → logprob: -17.250003814697266
    7. ' self' → logprob: -18.875003814697266
    8. '(sel' → logprob: -19.375003814697266
    9. '(this' → logprob: -19.625003814697266
    10. '   ' → logprob: -19.625003814697266

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.980854959692806e-05
    2. 'self' → logprob: -10.375069618225098
    3. ' ,' → logprob: -10.375069618225098
    4. ',self' → logprob: -12.125069618225098
    5. ',z' → logprob: -14.000069618225098
    6. '(self' → logprob: -14.625069618225098
    7. ',s' → logprob: -14.750069618225098
    8. '   ' → logprob: -16.375070571899414
    9. '_,' → logprob: -17.375070571899414
    10. ' self' → logprob: -18.250070571899414

Token 149: ' z' (ID: 579)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5487709641456604
    2. ' self' → logprob: -1.0487709045410156
    3. ' z' → logprob: -3.1737709045410156
    4. 'z' → logprob: -3.6737709045410156
    5. '   ' → logprob: -6.173770904541016
    6. 's' → logprob: -7.548770904541016
    7. ' s' → logprob: -7.798770904541016
    8. 'q' → logprob: -8.173770904541016
    9. ' ' → logprob: -8.423770904541016
    10. ' q' → logprob: -8.673770904541016

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01581321656703949
    2. '):' → logprob: -4.51581335067749
    3. ' ,' → logprob: -6.14081335067749
    4. ',z' → logprob: -6.14081335067749
    5. '):
' → logprob: -9.015812873840332
    6. '   ' → logprob: -9.390812873840332
    7. '       ' → logprob: -10.015812873840332
    8. ',y' → logprob: -10.140812873840332
    9. 'self' → logprob: -10.265812873840332
    10. ',value' → logprob: -10.390812873840332

Token 151: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.844356894493103
    2. ' v' → logprob: -0.969356894493103
    3. ' w' → logprob: -3.4693570137023926
    4. 'x' → logprob: -3.7193570137023926
    5. ' x' → logprob: -3.7193570137023926
    6. 'w' → logprob: -3.8443570137023926
    7. ' k' → logprob: -3.8443570137023926
    8. 'k' → logprob: -4.469357013702393
    9. ' y' → logprob: -4.844357013702393
    10. ' d' → logprob: -4.969357013702393

Token 152: '=' (ID: 28)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760381817817688
    2. '):' → logprob: -0.8260381817817688
    3. '):
' → logprob: -9.701038360595703
    4. ' ):' → logprob: -10.826038360595703
    5. ' ):
' → logprob: -11.576038360595703
    6. ')' → logprob: -12.826038360595703
    7. ':' → logprob: -13.076038360595703
    8. '   ' → logprob: -13.451038360595703
    9. '):

' → logprob: -13.701038360595703
    10. '       ' → logprob: -14.951038360595703

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009473071550019085
    2. ' ' → logprob: -7.00094747543335
    3. '0' → logprob: -10.625946998596191
    4. '+' → logprob: -12.125946998596191
    5. 'None' → logprob: -12.875946998596191
    6. ' None' → logprob: -13.000946998596191
    7. ' +' → logprob: -15.125946998596191
    8. ')' → logprob: -15.625946998596191
    9. 'lambda' → logprob: -15.750946998596191
    10. '   ' → logprob: -15.750946998596191

Token 154: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12745852768421173
    2. '):' → logprob: -2.1274585723876953
    3. '):
' → logprob: -7.627458572387695
    4. ' ):
' → logprob: -11.127458572387695
    5. ')' → logprob: -11.377458572387695
    6. '   ' → logprob: -11.877458572387695
    7. '):

' → logprob: -12.127458572387695
    8. ':' → logprob: -13.002458572387695
    9. ' ):' → logprob: -13.377458572387695
    10. '       ' → logprob: -14.377458572387695

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06406064331531525
    2. ' z' → logprob: -3.564060688018799
    3. '   ' → logprob: -3.689060688018799
    4. '	z' → logprob: -5.689060688018799
    5. '    ' → logprob: -6.189060688018799
    6. '
' → logprob: -6.814060688018799
    7. ' while' → logprob: -8.06406021118164
    8. '    
' → logprob: -8.43906021118164
    9. '' → logprob: -8.56406021118164
    10. 'z' → logprob: -8.81406021118164

Token 156: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.18790829181671143
    2. ' while' → logprob: -2.062908172607422
    3. 'z' (adapté à ' z') → logprob: -3.937908172607422
    4. '       ' → logprob: -3.937908172607422
    5. '   ' → logprob: -5.937908172607422
    6. 'while' → logprob: -6.687908172607422
    7. '	z' → logprob: -7.562908172607422
    8. '    ' → logprob: -8.187908172607422
    9. '        ' → logprob: -8.812908172607422
    10. '	while' → logprob: -8.937908172607422

Token 157: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01657010056078434
    2. ' +=' → logprob: -4.141570091247559
    3. '       ' → logprob: -8.641570091247559
    4. '=' → logprob: -9.016570091247559
    5. '   ' → logprob: -9.016570091247559
    6. ']+=' → logprob: -10.016570091247559
    7. '    ' → logprob: -11.141570091247559
    8. ' =' → logprob: -11.391570091247559
    9. '+' → logprob: -11.516570091247559
    10. '>' → logprob: -11.641570091247559

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.875001907348633
    4. '2' → logprob: -17.000001907348633
    5. '0' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. '```' → logprob: -18.750001907348633
    8. '+' → logprob: -19.000001907348633
    9. '
' → logprob: -19.312501907348633
    10. 'def' → logprob: -19.812501907348633

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07906351238489151
    2. ' while' → logprob: -2.9540634155273438
    3. '
' → logprob: -3.9540634155273438
    4. 'while' → logprob: -5.454063415527344
    5. '	while' → logprob: -8.329063415527344
    6. ';' → logprob: -9.829063415527344
    7. ' 
' → logprob: -10.454063415527344
    8. '   ' → logprob: -10.704063415527344
    9. '        
' → logprob: -11.329063415527344
    10. '	' → logprob: -11.704063415527344

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012422526255249977
    2. ' while' → logprob: -4.637422561645508
    3. '
' → logprob: -6.137422561645508
    4. 'while' → logprob: -8.262422561645508
    5. '	while' → logprob: -9.262422561645508
    6. ';' → logprob: -9.512422561645508
    7. ' 
' → logprob: -11.012422561645508
    8. '        
' → logprob: -11.262422561645508
    9. '<|end|>' → logprob: -11.262422561645508
    10. '```' → logprob: -12.387422561645508

Token 161: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006413132417947054
    2. ' while' → logprob: -5.256412982940674
    3. '       ' → logprob: -6.756412982940674
    4. '
' → logprob: -11.631413459777832
    5. '	while' → logprob: -12.381413459777832
    6. 'w' → logprob: -14.131413459777832
    7. '   ' → logprob: -14.756413459777832
    8. 'n' → logprob: -14.756413459777832
    9. 'While' → logprob: -15.256413459777832
    10. '```' → logprob: -15.631413459777832

Token 162: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6931517124176025
    2. ' z' → logprob: -0.6931517124176025
    3. '   ' → logprob: -13.193151473999023
    4. '	z' → logprob: -13.818151473999023
    5. 'self' → logprob: -14.568151473999023
    6. ' ' → logprob: -14.693151473999023
    7. 'len' → logprob: -15.943151473999023
    8. '(z' → logprob: -16.068151473999023
    9. '_z' → logprob: -16.193151473999023
    10. '    ' → logprob: -16.443151473999023

Token 163: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3325730264186859
    2. '<' → logprob: -1.3325730562210083
    3. ' <=' → logprob: -4.207572937011719
    4. ' <' → logprob: -5.832572937011719
    5. '<len' → logprob: -7.082572937011719
    6. '<n' → logprob: -7.707572937011719
    7. '<size' → logprob: -11.332572937011719
    8. '<_' → logprob: -12.707572937011719
    9. '<this' → logprob: -13.582572937011719
    10. 'self' → logprob: -13.707572937011719

Token 164: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.870950215263292e-05
    2. ' self' → logprob: -10.000048637390137
    3. '(self' → logprob: -13.750048637390137
    4. '   ' → logprob: -13.875048637390137
    5. '_self' → logprob: -14.125048637390137
    6. '
' → logprob: -14.875048637390137
    7. '	self' → logprob: -16.125049591064453
    8. '=self' → logprob: -16.875049591064453
    9. 'n' → logprob: -18.000049591064453
    10. 'len' → logprob: -18.250049591064453

Token 165: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.003739983309060335
    2. '_n' → logprob: -5.628739833831787
    3. '_' → logprob: -9.878740310668945
    4. ' _' → logprob: -10.628740310668945
    5. '_x' → logprob: -11.128740310668945
    6. '_m' → logprob: -11.753740310668945
    7. '_self' → logprob: -11.878740310668945
    8. '_r' → logprob: -12.128740310668945
    9. '_l' → logprob: -12.378740310668945
    10. '_t' → logprob: -12.503740310668945

Token 166: 'n' (ID: 77)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.3213025744771585e-05
    2. '_d' → logprob: -11.125033378601074
    3. '_r' → logprob: -12.000033378601074
    4. '_q' → logprob: -12.000033378601074
    5. 'n' → logprob: -12.375033378601074
    6. '_x' → logprob: -14.500033378601074
    7. '_a' → logprob: -15.375033378601074
    8. ' _' → logprob: -15.875033378601074
    9. '_m' → logprob: -15.875033378601074
    10. '_p' → logprob: -16.000032424926758

Token 167: '+' (ID: 10)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2690187096595764
    2. ':' → logprob: -1.6440186500549316
    3. ':self' → logprob: -4.144018650054932
    4. ':z' → logprob: -4.644018650054932
    5. ' :
' → logprob: -4.769018650054932
    6. ' :' → logprob: -5.019018650054932
    7. ':
' → logprob: -6.894018650054932
    8. ':_' → logprob: -7.644018650054932
    9. ':n' → logprob: -8.76901912689209
    10. ' and' → logprob: -9.26901912689209

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002754949266090989
    2. '1' → logprob: -6.377755165100098
    3. '3' → logprob: -6.877755165100098
    4. '4' → logprob: -11.877755165100098
    5. '5' → logprob: -12.252755165100098
    6. ' ' → logprob: -12.502755165100098
    7. '   ' → logprob: -13.502755165100098
    8. '10' → logprob: -13.502755165100098
    9. '
' → logprob: -13.877755165100098
    10. '+' → logprob: -14.440255165100098

Token 169: ':self' (ID: 28173)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06845884025096893
    2. ':' → logprob: -2.9434587955474854
    3. ':self' → logprob: -4.3184590339660645
    4. ':_' → logprob: -9.693458557128906
    5. ' :
' → logprob: -10.068458557128906
    6. ':
' → logprob: -11.193458557128906
    7. '           ' → logprob: -11.318458557128906
    8. ' :' → logprob: -12.068458557128906
    9. ' and' → logprob: -12.443458557128906
    10. ':return' → logprob: -12.443458557128906

Token 170: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.3822154111694545e-05
    2. '       ' → logprob: -10.875043869018555
    3. '   ' → logprob: -11.750043869018555
    4. '.' → logprob: -12.625043869018555
    5. 'self' → logprob: -12.750043869018555
    6. '_d' → logprob: -12.875043869018555
    7. '_p' → logprob: -13.000043869018555
    8. '_' → logprob: -13.125043869018555
    9. ' _' → logprob: -14.000043869018555
    10. ' .' → logprob: -14.750043869018555

Token 171: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001721934968372807
    2. '_d' → logprob: -8.75017261505127
    3. 'poke' → logprob: -12.50017261505127
    4. 'n' → logprob: -12.75017261505127
    5. 'pok' → logprob: -13.75017261505127
    6. 'p' → logprob: -13.75017261505127
    7. 'r' → logprob: -13.87517261505127
    8. '   ' → logprob: -14.25017261505127
    9. ' d' → logprob: -14.62517261505127
    10. '
' → logprob: -15.00017261505127

Token 172: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. 'z' → logprob: -15.250001907348633
    4. '[v' → logprob: -16.875001907348633
    5. '[x' → logprob: -17.750001907348633
    6. '[q' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.375001907348633
    8. '```' → logprob: -18.375001907348633
    9. '[s' → logprob: -18.625001907348633
    10. ' z' → logprob: -18.625001907348633

Token 173: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008719881996512413
    2. ']+=' → logprob: -5.1337199211120605
    3. ' +=' → logprob: -5.8837199211120605
    4. '+=(' → logprob: -13.633719444274902
    5. '   ' → logprob: -14.508719444274902
    6. '    ' → logprob: -15.008719444274902
    7. '
' → logprob: -16.00872039794922
    8. '	' → logprob: -16.00872039794922
    9. '       ' → logprob: -16.00872039794922
    10. ' ' → logprob: -16.13372039794922

Token 174: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.306760805164231e-05
    2. ' v' → logprob: -11.25001335144043
    3. '	v' → logprob: -19.75001335144043
    4. '   ' → logprob: -20.62501335144043
    5. '$v' → logprob: -21.75001335144043
    6. 'vq' → logprob: -22.12501335144043
    7. '1' → logprob: -22.25001335144043
    8. '*v' → logprob: -22.25001335144043
    9. '_v' → logprob: -22.62501335144043
    10. '-v' → logprob: -23.00001335144043

Token 175: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.03844168782234192
    2. ',z' → logprob: -4.4134416580200195
    3. 'z' → logprob: -4.6634416580200195
    4. ' z' → logprob: -4.9134416580200195
    5. '
' → logprob: -5.1634416580200195
    6. '           ' → logprob: -6.5384416580200195
    7. ' ;' → logprob: -7.0384416580200195
    8. '       ' → logprob: -8.28844165802002
    9. ',' → logprob: -8.53844165802002
    10. '	z' → logprob: -9.16344165802002

Token 176: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06199199706315994
    2. ' z' → logprob: -2.8119919300079346
    3. '	z' → logprob: -11.561991691589355
    4. '   ' → logprob: -11.811991691589355
    5. '       ' → logprob: -12.436991691589355
    6. '           ' → logprob: -12.686991691589355
    7. ',z' → logprob: -15.686991691589355
    8. '    ' → logprob: -16.561992645263672
    9. ' ' → logprob: -16.811992645263672
    10. '  ' → logprob: -17.186992645263672

Token 177: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16034913063049316
    2. '|' → logprob: -1.9103491306304932
    3. '<<' → logprob: -9.285348892211914
    4. '+=(' → logprob: -10.785348892211914
    5. ' +=' → logprob: -11.910348892211914
    6. ']+=' → logprob: -12.910348892211914
    7. '&' → logprob: -14.910348892211914
    8. '+="' → logprob: -15.035348892211914
    9. '+='' → logprob: -15.035348892211914
    10. '=z' → logprob: -15.035348892211914

Token 178: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004305495880544186
    2. ' z' → logprob: -5.504305362701416
    3. '(z' → logprob: -8.504305839538574
    4. '	z' → logprob: -11.754305839538574
    5. ' (' → logprob: -11.879305839538574
    6. ' ' → logprob: -12.504305839538574
    7. '   ' → logprob: -12.879305839538574
    8. '(' → logprob: -13.379305839538574
    9. '_z' → logprob: -14.379305839538574
    10. '  ' → logprob: -14.629305839538574

Token 179: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.038235072046518326
    2. 'z' → logprob: -4.038235187530518
    3. ' &' → logprob: -4.163235187530518
    4. ' z' → logprob: -6.038235187530518
    5. '(z' → logprob: -6.788235187530518
    6. '&amp' → logprob: -8.53823471069336
    7. '-z' → logprob: -8.66323471069336
    8. '	z' → logprob: -9.16323471069336
    9. '_z' → logprob: -9.66323471069336
    10. '&_' → logprob: -9.78823471069336

Token 180: '-' (ID: 12)
  Prédit: '-z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.0784657821059227
    2. ' -' → logprob: -2.828465700149536
    3. '(-' → logprob: -4.328465938568115
    4. 'z' → logprob: -5.953465938568115
    5. ' (-' → logprob: -8.203465461730957
    6. ' z' → logprob: -8.703465461730957
    7. '-' → logprob: -9.578465461730957
    8. ' ' → logprob: -10.703465461730957
    9. '   ' → logprob: -11.203465461730957
    10. '  ' → logprob: -11.828465461730957

Token 181: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -4.60414821645827e-06
    2. ' z' → logprob: -12.875004768371582
    3. '	z' → logprob: -13.250004768371582
    4. '-z' → logprob: -16.500003814697266
    5. ''z' → logprob: -18.375003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '_z' → logprob: -18.500003814697266
    8. '[z' → logprob: -19.000003814697266
    9. '.z' → logprob: -19.375003814697266
    10. '(z' → logprob: -19.375003814697266

Token 182: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43450820446014404
    2. '<|end|>' → logprob: -1.684508204460144
    3. 'z' → logprob: -2.8095083236694336
    4. '()' → logprob: -3.5595083236694336
    5. '_' → logprob: -3.8095083236694336
    6. 'def' → logprob: -4.559508323669434
    7. '```' → logprob: -5.184508323669434
    8. ';' → logprob: -5.559508323669434
    9. '<|end|>' → logprob: -5.559508323669434
    10. '_z' → logprob: -5.809508323669434

Token 183: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18359626829624176
    2. '
' → logprob: -2.30859637260437
    3. '<|end|>' → logprob: -4.308596134185791
    4. 'f' → logprob: -4.433596134185791
    5. 'fen' → logprob: -4.808596134185791
    6. '#' → logprob: -4.933596134185791
    7. 's' → logprob: -5.558596134185791
    8. '   ' → logprob: -5.808596134185791
    9. ')' → logprob: -5.933596134185791
    10. 'm' → logprob: -6.433596134185791

Token 184: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' clear' (ID: 5364)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -1.0278301239013672
    2. 'p' → logprob: -2.402830123901367
    3. ' pop' → logprob: -2.965330123901367
    4. 'query' → logprob: -2.965330123901367
    5. ' query' → logprob: -2.965330123901367
    6. ' puff' → logprob: -3.840330123901367
    7. '__' → logprob: -4.215330123901367
    8. ' poke' → logprob: -4.402830123901367
    9. ' def' → logprob: -4.652830123901367
    10. 'peek' → logprob: -4.652830123901367

Token 186: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002879057079553604
    2. '(' → logprob: -5.8778791427612305
    3. 'self' → logprob: -9.75287914276123
    4. ' (' → logprob: -11.37787914276123
    5. '()' → logprob: -13.62787914276123
    6. '(s' → logprob: -13.87787914276123
    7. '(this' → logprob: -14.25287914276123
    8. '   ' → logprob: -14.75287914276123
    9. ' self' → logprob: -14.75287914276123
    10. '(
' → logprob: -14.75287914276123

Token 187: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15100809931755066
    2. ',' → logprob: -2.526008129119873
    3. 'self' → logprob: -3.151008129119873
    4. '):
' → logprob: -4.151008129119873
    5. ')' → logprob: -7.026008129119873
    6. '(self' → logprob: -8.401007652282715
    7. ' ,' → logprob: -8.776007652282715
    8. ' ):' → logprob: -9.026007652282715
    9. '_self' → logprob: -10.401007652282715
    10. ',self' → logprob: -10.526007652282715

Token 188: ' self' (ID: 1051)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7770884037017822
    2. '       ' → logprob: -0.9020884037017822
    3. ' self' → logprob: -2.5270884037017822
    4. 'for' → logprob: -3.6520884037017822
    5. 'self' → logprob: -3.6520884037017822
    6. '   ' → logprob: -6.152088165283203
    7. '	for' → logprob: -8.402088165283203
    8. '	self' → logprob: -9.152088165283203
    9. '    ' → logprob: -9.527088165283203
    10. ' ' → logprob: -9.902088165283203

Token 189: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0011666493955999613
    2. '_' → logprob: -6.876166820526123
    3. '_d' → logprob: -9.876166343688965
    4. '.__' → logprob: -10.251166343688965
    5. '_.' → logprob: -10.751166343688965
    6. '   ' → logprob: -11.876166343688965
    7. '.' → logprob: -12.001166343688965
    8. 'class' → logprob: -12.376166343688965
    9. 'def' → logprob: -13.126166343688965
    10. ' .' → logprob: -13.876166343688965

Token 190: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002075933152809739
    2. 'n' → logprob: -8.625207901000977
    3. '_d' → logprob: -10.875207901000977
    4. 'clear' → logprob: -12.500207901000977
    5. 'r' → logprob: -12.875207901000977
    6. 'init' → logprob: -14.750207901000977
    7. 'for' → logprob: -15.375207901000977
    8. 'class' → logprob: -15.437707901000977
    9. 'def' → logprob: -16.062707901000977
    10. ' d' → logprob: -16.062707901000977

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043768756091594696
    2. '[:]' → logprob: -3.5437686443328857
    3. ' =' → logprob: -4.793768882751465
    4. '=[' → logprob: -5.543768882751465
    5. '.clear' → logprob: -6.668768882751465
    6. '[:' → logprob: -8.293768882751465
    7. '[' → logprob: -9.418768882751465
    8. ' =[' → logprob: -9.793768882751465
    9. '=[]' → logprob: -10.418768882751465
    10. '.=' → logprob: -11.418768882751465

Token 192: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014084660506341606
    2. ' [' → logprob: -8.875141143798828
    3. '0' → logprob: -14.875141143798828
    4. 'self' → logprob: -15.000141143798828
    5. '[self' → logprob: -15.125141143798828
    6. '   ' → logprob: -18.125141143798828
    7. ' ' → logprob: -18.125141143798828
    8. '([' → logprob: -18.750141143798828
    9. '{' → logprob: -19.500141143798828
    10. '[(' → logprob: -19.875141143798828

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '000' → logprob: -17.250001907348633
    5. '00' → logprob: -17.625001907348633
    6. '۰' → logprob: -18.750001907348633
    7. '  ' → logprob: -18.875001907348633
    8. ']' → logprob: -19.000001907348633
    9. '    ' → logprob: -19.125001907348633
    10. '
' → logprob: -19.375001907348633

Token 194: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.062126100063323975
    2. ']*' → logprob: -3.0621261596679688
    3. ']' → logprob: -4.312126159667969
    4. '](' → logprob: -10.437126159667969
    5. ']+' → logprob: -11.687126159667969
    6. '0' → logprob: -13.062126159667969
    7. '*(' → logprob: -13.562126159667969
    8. ']()' → logprob: -15.187126159667969
    9. 'for' → logprob: -15.312126159667969
    10. 'self' → logprob: -15.312126159667969

Token 195: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018649426056072116
    2. 'len' → logprob: -8.875186920166016
    3. ' self' → logprob: -10.500186920166016
    4. '(self' → logprob: -11.000186920166016
    5. '0' → logprob: -13.875186920166016
    6. '_self' → logprob: -14.125186920166016
    7. '__' → logprob: -15.250186920166016
    8. '(len' → logprob: -16.000186920166016
    9. '   ' → logprob: -16.500186920166016
    10. '	self' → logprob: -16.875186920166016

Token 196: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.14273861050605774
    2. '_n' → logprob: -2.0177385807037354
    3. '.n' → logprob: -11.142738342285156
    4. '   ' → logprob: -11.392738342285156
    5. '_a' → logprob: -12.142738342285156
    6. ' _' → logprob: -12.392738342285156
    7. 'self' → logprob: -12.642738342285156
    8. '_' → logprob: -12.767738342285156
    9. '_self' → logprob: -12.767738342285156
    10. '```' → logprob: -12.892738342285156

Token 197: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.659005157416686e-05
    2. '_n' → logprob: -9.625066757202148
    3. 'a' → logprob: -15.125066757202148
    4. '3' → logprob: -16.75006675720215
    5. '.n' → logprob: -17.12506675720215
    6. 'd' → logprob: -17.12506675720215
    7. '	n' → logprob: -17.37506675720215
    8. 'н' → logprob: -17.62506675720215
    9. '_' → logprob: -17.75006675720215
    10. '```' → logprob: -17.87506675720215

Token 198: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.306760805164231e-05
    2. ' +' → logprob: -11.75001335144043
    3. ')' → logprob: -12.87501335144043
    4. '   ' → logprob: -13.62501335144043
    5. ')+' → logprob: -14.87501335144043
    6. '()+' → logprob: -15.12501335144043
    7. '```' → logprob: -15.25001335144043
    8. '+
' → logprob: -15.75001335144043
    9. '3' → logprob: -16.25001335144043
    10. ',' → logprob: -16.75001335144043

Token 199: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -15.500001907348633
    4. '4' → logprob: -16.312501907348633
    5. '0' → logprob: -16.312501907348633
    6. '   ' → logprob: -16.562501907348633
    7. '2' → logprob: -16.687501907348633
    8. 'self' → logprob: -16.687501907348633
    9. '1' → logprob: -17.312501907348633
    10. '-' → logprob: -17.750001907348633

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. ')
' → logprob: -10.87502670288086
    3. '<|end|>' → logprob: -12.75002670288086
    4. ' )' → logprob: -13.62502670288086
    5. '   ' → logprob: -14.12502670288086
    6. ')

' → logprob: -14.25002670288086
    7. '')' → logprob: -14.25002670288086
    8. '```' → logprob: -15.12502670288086
    9. '`)' → logprob: -15.62502670288086
    10. '())' → logprob: -15.75002670288086

Token 201: 'F' (ID: 37)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5975866317749023
    2. 'def' → logprob: -2.5975866317749023
    3. 'f' → logprob: -2.7225866317749023
    4. 'fen' → logprob: -2.7225866317749023
    5. 'dp' → logprob: -2.7225866317749023
    6. 'p' → logprob: -3.0975866317749023
    7. 'a' → logprob: -3.2225866317749023
    8. 'res' → logprob: -3.5975866317749023
    9. 'q' → logprob: -3.7225866317749023
    10. 'c' → logprob: -3.7225866317749023

Token 202: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.812221109867096
    2. 'en' → logprob: -0.812221109867096
    3. 'w' → logprob: -2.437221050262451
    4. 't' → logprob: -5.312221050262451
    5. 'i' → logprob: -5.437221050262451
    6. 'l' → logprob: -5.687221050262451
    7. 'x' → logprob: -6.062221050262451
    8. 'W' → logprob: -6.187221050262451
    9. 'u' → logprob: -6.687221050262451
    10. 'n' → logprob: -6.812221050262451

Token 203: ' Fen' (ID: 48230)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.0011780819622799754
    2. ' Fen' → logprob: -6.75117826461792
    3. 'fen' → logprob: -12.501177787780762
    4. 'F' → logprob: -12.751177787780762
    5. 'n' → logprob: -14.001177787780762
    6. ' fen' → logprob: -15.501177787780762
    7. ' n' → logprob: -18.001178741455078
    8. 'len' → logprob: -18.001178741455078
    9. 'Fel' → logprob: -18.001178741455078
    10. 'Fe' → logprob: -18.751178741455078

Token 204: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.01366388238966465
    2. 'w' → logprob: -4.6386637687683105
    3. 'wic' → logprob: -6.6386637687683105
    4. 'wi' → logprob: -7.5136637687683105
    5. 'wit' → logprob: -7.7636637687683105
    6. 'W' → logprob: -8.138664245605469
    7. '_w' → logprob: -8.263664245605469
    8. 'ick' → logprob: -8.888664245605469
    9. '\' → logprob: -9.263664245605469
    10. '

' → logprob: -9.388664245605469

Token 205: 'Magic' (ID: 58130)
  Prédit: 'Magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Magic' → logprob: -3.8889261304575484e-06
    2. 'magic' → logprob: -13.625003814697266
    3. '_magic' → logprob: -14.125003814697266
    4. 'Fen' → logprob: -14.250003814697266
    5. ' Magic' → logprob: -14.625003814697266
    6. 'Mag' → logprob: -15.250003814697266
    7. 'F' → logprob: -15.500003814697266
    8. '(' → logprob: -16.875003814697266
    9. '[' → logprob: -17.000003814697266
    10. '_MAGIC' → logprob: -17.000003814697266

Token 206: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.289473822107539e-05
    2. '(' → logprob: -9.750062942504883
    3. ' (' → logprob: -12.500062942504883
    4. '(
' → logprob: -15.000062942504883
    5. ')(' → logprob: -15.625062942504883
    6. '(f' → logprob: -15.875062942504883
    7. 'n' → logprob: -16.625062942504883
    8. '(s' → logprob: -16.750062942504883
    9. '((' → logprob: -17.000062942504883
    10. '(x' → logprob: -17.000062942504883

Token 207: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ')
' → logprob: -10.000053405761719
    3. ' )' → logprob: -12.000053405761719
    4. ')`' → logprob: -14.500053405761719
    5. '))' → logprob: -15.375053405761719
    6. ')

' → logprob: -15.875053405761719
    7. '+' → logprob: -15.875053405761719
    8. ')
' → logprob: -16.12505340576172
    9. ')n' → logprob: -16.37505340576172
    10. '),' → logprob: -16.87505340576172

Token 208: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7646613717079163
    2. '1' → logprob: -1.0146613121032715
    3. '3' → logprob: -2.6396613121032715
    4. '5' → logprob: -2.7646613121032715
    5. '10' → logprob: -4.0146613121032715
    6. '4' → logprob: -4.2646613121032715
    7. '7' → logprob: -6.0146613121032715
    8. '6' → logprob: -6.6396613121032715
    9. '20' → logprob: -8.13966178894043
    10. '100' → logprob: -8.38966178894043

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001443035143893212
    2. ')
' → logprob: -8.875144004821777
    3. ' )' → logprob: -12.500144004821777
    4. ')

' → logprob: -15.625144004821777
    5. ')
' → logprob: -16.250144958496094
    6. ')`' → logprob: -16.250144958496094
    7. '))' → logprob: -16.375144958496094
    8. '0' → logprob: -17.375144958496094
    9. '6' → logprob: -17.500144958496094
    10. '),' → logprob: -17.875144958496094

Token 210: 'bot' (ID: 13669)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.1846771240234375
    2. 'for' → logprob: -2.3096771240234375
    3. 'p' → logprob: -2.4346771240234375
    4. 'dp' → logprob: -2.5596771240234375
    5. 'res' → logprob: -3.0596771240234375
    6. 'r' → logprob: -3.3096771240234375
    7. 'c' → logprob: -3.4346771240234375
    8. 'l' → logprob: -3.8096771240234375
    9. 'ans' → logprob: -3.8096771240234375
    10. 'L' → logprob: -4.0596771240234375

Token 211: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15287138521671295
    2. '=' → logprob: -2.0278713703155518
    3. ',' → logprob: -5.527871608734131
    4. 's' → logprob: -5.652871608734131
    5. '=[]' → logprob: -7.402871608734131
    6. 'k' → logprob: -8.277871131896973
    7. '_' → logprob: -8.652871131896973
    8. '=[' → logprob: -9.277871131896973
    9. 'm' → logprob: -9.277871131896973
    10. 'idx' → logprob: -9.652871131896973

Token 212: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.02653679810464382
    2. ' top' → logprob: -4.27653694152832
    3. 'mid' → logprob: -5.02653694152832
    4. 'bot' → logprob: -5.77653694152832
    5. 'up' → logprob: -7.52653694152832
    6. ' mid' → logprob: -8.65153694152832
    7. 'tot' → logprob: -9.27653694152832
    8. 't' → logprob: -9.40153694152832
    9. 'ans' → logprob: -9.46403694152832
    10. 'res' → logprob: -9.58903694152832

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3521835207939148
    2. ' =' → logprob: -1.2271835803985596
    3. ',' → logprob: -5.7271833419799805
    4. '=int' → logprob: -8.72718334197998
    5. '=n' → logprob: -9.60218334197998
    6. ',n' → logprob: -10.10218334197998
    7. ',b' → logprob: -10.72718334197998
    8. ',c' → logprob: -10.85218334197998
    9. '=f' → logprob: -11.47718334197998
    10. '=b' → logprob: -11.72718334197998

Token 214: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01877627521753311
    2. '1' → logprob: -4.3937764167785645
    3. 'n' → logprob: -6.2687764167785645
    4. '-' → logprob: -6.6437764167785645
    5. 'min' → logprob: -6.6437764167785645
    6. ' ' → logprob: -7.3937764167785645
    7. 'max' → logprob: -8.143775939941406
    8. '[' → logprob: -8.768775939941406
    9. 'xs' → logprob: -8.768775939941406
    10. '(' → logprob: -9.268775939941406

Token 215: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04521963745355606
    2. '10' → logprob: -3.420219659805298
    3. 'max' → logprob: -6.170219421386719
    4. 'n' → logprob: -6.420219421386719
    5. 'min' → logprob: -6.545219421386719
    6. '100' → logprob: -6.670219421386719
    7. '(' → logprob: -6.670219421386719
    8. 'float' → logprob: -7.045219421386719
    9. '0' → logprob: -7.295219421386719
    10. '2' → logprob: -7.420219421386719

Token 216: '**' (ID: 410)
  Prédit: '223'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '223' → logprob: -1.0556590557098389
    2. '999' → logprob: -1.3056590557098389
    3. '10' → logprob: -1.4306590557098389
    4. '000' → logprob: -2.555659055709839
    5. '007' → logprob: -4.055659294128418
    6. '99' → logprob: -4.305659294128418
    7. '100' → logprob: -4.430659294128418
    8. '0' → logprob: -5.805659294128418
    9. '876' → logprob: -5.805659294128418
    10. '_' → logprob: -6.180659294128418

Token 217: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.36275535821914673
    2. '18' → logprob: -1.862755298614502
    3. '9' → logprob: -2.612755298614502
    4. '10' → logprob: -3.112755298614502
    5. '12' → logprob: -3.862755298614502
    6. '99' → logprob: -4.987755298614502
    7. '999' → logprob: -7.237755298614502
    8. '20' → logprob: -7.237755298614502
    9. '16' → logprob: -7.612755298614502
    10. '14' → logprob: -7.737755298614502

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049111973494291306
    2. '-' → logprob: -3.79911208152771
    3. ' ,' → logprob: -4.174111843109131
    4. ',-' → logprob: -5.424111843109131
    5. '000' → logprob: -6.924111843109131
    6. ' -' → logprob: -7.549111843109131
    7. '0' → logprob: -7.799111843109131
    8. '9' → logprob: -7.799111843109131
    9. ',n' → logprob: -7.799111843109131
    10. '7' → logprob: -8.299112319946289

Token 219: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0004960790392942727
    2. '10' → logprob: -7.625495910644531
    3. ' ' → logprob: -12.125495910644531
    4. '+' → logprob: -13.500495910644531
    5. '0' → logprob: -14.875495910644531
    6. '(' → logprob: -15.250495910644531
    7. '-' → logprob: -15.375495910644531
    8. 'int' → logprob: -16.12549591064453
    9. '999' → logprob: -16.75049591064453
    10. '19' → logprob: -16.81299591064453

Token 220: '2' (ID: 17)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00258065527305007
    2. '10' → logprob: -6.002580642700195
    3. ' ' → logprob: -9.627580642700195
    4. '+' → logprob: -11.377580642700195
    5. '0' → logprob: -11.752580642700195
    6. '-' → logprob: -12.252580642700195
    7. '1' → logprob: -13.440080642700195
    8. 'int' → logprob: -13.440080642700195
    9. '18' → logprob: -13.627580642700195
    10. '(' → logprob: -13.690080642700195

Token 221: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019092224538326263
    2. '1' → logprob: -4.019092082977295
    3. '*' → logprob: -8.144092559814453
    4. '2' → logprob: -9.019092559814453
    5. '**' → logprob: -9.269092559814453
    6. '3' → logprob: -9.769092559814453
    7. '10' → logprob: -9.769092559814453
    8. '4' → logprob: -9.769092559814453
    9. '8' → logprob: -9.769092559814453
    10. '9' → logprob: -9.894092559814453

Token 222: '31' (ID: 2911)
  Prédit: '63'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -0.5297256708145142
    2. '60' → logprob: -1.4047256708145142
    3. '62' → logprob: -1.9047256708145142
    4. '61' → logprob: -4.529725551605225
    5. '64' → logprob: -6.029725551605225
    6. '31' → logprob: -6.404725551605225
    7. '50' → logprob: -7.279725551605225
    8. '40' → logprob: -7.529725551605225
    9. '59' → logprob: -7.904725551605225
    10. '55' → logprob: -9.029726028442383

Token 223: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3167508840560913
    2. '+' → logprob: -2.691751003265381
    3. 'for' → logprob: -2.691751003265381
    4. 'while' → logprob: -2.941751003265381
    5. ' -' → logprob: -4.066751003265381
    6. 'max' → logprob: -4.191751003265381
    7. 'ans' → logprob: -4.441751003265381
    8. '
' → logprob: -4.691751003265381
    9. 'def' → logprob: -5.316751003265381
    10. 'bot' → logprob: -5.316751003265381

Token 224: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7214575409889221
    2. 'while' → logprob: -1.4714574813842773
    3. 'def' → logprob: -2.8464574813842773
    4. ' while' → logprob: -2.8464574813842773
    5. ' for' → logprob: -3.0964574813842773
    6. 'mid' → logprob: -3.2214574813842773
    7. 'top' → logprob: -3.5964574813842773
    8. 'res' → logprob: -4.721457481384277
    9. 'ans' → logprob: -4.971457481384277
    10. 'bot' → logprob: -5.221457481384277

Token 225: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.467526912689209
    2. ' top' → logprob: -1.342526912689209
    3. ' bot' → logprob: -2.842526912689209
    4. 'bot' → logprob: -3.092526912689209
    5. ' True' → logprob: -5.342526912689209
    6. 'True' → logprob: -6.092526912689209
    7. '(top' → logprob: -7.842526912689209
    8. ' abs' → logprob: -8.092527389526367
    9. '(bot' → logprob: -8.842527389526367
    10. ' (' → logprob: -8.842527389526367

Token 226: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.12247007340192795
    2. '-' → logprob: -2.8724701404571533
    3. '-top' → logprob: -2.9974701404571533
    4. ' -' → logprob: -5.372469902038574
    5. '>' → logprob: -5.872469902038574
    6. '-bottom' → logprob: -6.747469902038574
    7. '>-' → logprob: -9.372469902038574
    8. '-mid' → logprob: -10.622469902038574
    9. '-middle' → logprob: -11.622469902038574
    10. ' >' → logprob: -11.622469902038574

Token 227: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -2.6656825866666622e-05
    2. 'ottom' → logprob: -11.87502670288086
    3. 'o' → logprob: -12.37502670288086
    4. '0' → logprob: -12.50002670288086
    5. 't' → logprob: -13.50002670288086
    6. '>' → logprob: -13.50002670288086
    7. '```' → logprob: -13.50002670288086
    8. 'ots' → logprob: -13.75002670288086
    9. 'in' → logprob: -13.75002670288086
    10. '=' → logprob: -13.87502670288086

Token 228: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007608040235936642
    2. ' >' → logprob: -4.882607936859131
    3. 'c' → logprob: -14.382608413696289
    4. ' ' → logprob: -15.007608413696289
    5. ':' → logprob: -15.507608413696289
    6. '()>' → logprob: -15.507608413696289
    7. 'and' → logprob: -15.757608413696289
    8. '1' → logprob: -15.757608413696289
    9. ')>' → logprob: -16.63260841369629
    10. '.' → logprob: -17.13260841369629

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '2' → logprob: -11.125022888183594
    3. ' ' → logprob: -13.000022888183594
    4. '3' → logprob: -13.625022888183594
    5. '0' → logprob: -14.250022888183594
    6. '100' → logprob: -14.500022888183594
    7. '50' → logprob: -14.625022888183594
    8. '30' → logprob: -14.750022888183594
    9. '4' → logprob: -15.000022888183594
    10. '10' → logprob: -15.000022888183594

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3513534665107727
    2. ':
' → logprob: -1.226353406906128
    3. '   ' → logprob: -6.601353645324707
    4. ' :
' → logprob: -6.851353645324707
    5. ' :' → logprob: -8.101353645324707
    6. ' mid' → logprob: -9.351353645324707
    7. '):
' → logprob: -10.851353645324707
    8. ':
' → logprob: -11.601353645324707
    9. ':

' → logprob: -11.726353645324707
    10. ',' → logprob: -11.726353645324707

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31537580490112305
    2. 'mid' → logprob: -1.815375804901123
    3. ' mid' → logprob: -2.315375804901123
    4. 'm' → logprob: -5.315375804901123
    5. ' ' → logprob: -6.940375804901123
    6. '	m' → logprob: -6.940375804901123
    7. ' m' → logprob: -7.190375804901123
    8. 'mi' → logprob: -7.815375804901123
    9. ' med' → logprob: -8.315376281738281
    10. 'med' → logprob: -8.565376281738281

Token 232: ' Q' (ID: 1486)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.042500969022512436
    2. 'med' → logprob: -4.042500972747803
    3. 'm' → logprob: -4.167500972747803
    4. '   ' → logprob: -5.792500972747803
    5. 'mi' → logprob: -5.917500972747803
    6. 'md' → logprob: -6.792500972747803
    7. ' mid' → logprob: -6.792500972747803
    8. 'c' → logprob: -9.917500495910645
    9. ' med' → logprob: -10.042500495910645
    10. 'middle' → logprob: -10.167500495910645

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31443002820014954
    2. ' =' → logprob: -1.3144299983978271
    3. '=M' → logprob: -7.189430236816406
    4. 'mid' → logprob: -8.689430236816406
    5. '=(' → logprob: -9.689430236816406
    6. ',' → logprob: -10.564430236816406
    7. '=int' → logprob: -10.689430236816406
    8. ' ' → logprob: -10.814430236816406
    9. '=m' → logprob: -10.939430236816406
    10. 'M' → logprob: -11.564430236816406

Token 234: ' (' (ID: 350)
  Prédit: '(bot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bot' → logprob: -0.019263433292508125
    2. 'c' → logprob: -4.51926326751709
    3. '(c' → logprob: -5.51926326751709
    4. ' (' → logprob: -6.14426326751709
    5. 'bot' → logprob: -6.51926326751709
    6. '(top' → logprob: -8.89426326751709
    7. '(' → logprob: -8.89426326751709
    8. ' bot' → logprob: -9.64426326751709
    9. '(mid' → logprob: -9.76926326751709
    10. ' c' → logprob: -9.76926326751709

Token 235: 'bot' (ID: 13669)
  Prédit: 'bot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' → logprob: -0.3133052587509155
    2. 'top' → logprob: -1.3133052587509155
    3. ' bot' → logprob: -10.438304901123047
    4. '(bot' → logprob: -11.813304901123047
    5. ' top' → logprob: -12.438304901123047
    6. 'bottom' → logprob: -14.688304901123047
    7. '(top' → logprob: -14.813304901123047
    8. '_bot' → logprob: -15.063304901123047
    9. 'Bot' → logprob: -15.063304901123047
    10. '[top' → logprob: -15.438304901123047

Token 236: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007099286303855479
    2. ' +' → logprob: -7.2507100105285645
    3. '＋' → logprob: -20.125709533691406
    4. ' ' → logprob: -20.500709533691406
    5. '+
' → logprob: -20.500709533691406
    6. '```' → logprob: -20.500709533691406
    7. '
' → logprob: -20.875709533691406
    8. 'top' → logprob: -21.375709533691406
    9. ')' → logprob: -21.500709533691406
    10. '[top' → logprob: -22.375709533691406

Token 237: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -5.836499985889532e-05
    2. ' top' → logprob: -9.7500581741333
    3. '(top' → logprob: -18.375059127807617
    4. '   ' → logprob: -18.750059127807617
    5. '
' → logprob: -19.250059127807617
    6. ' ' → logprob: -19.500059127807617
    7. '[top' → logprob: -20.125059127807617
    8. '	top' → logprob: -21.125059127807617
    9. '  ' → logprob: -21.250059127807617
    10. ' топ' → logprob: -22.750059127807617

Token 238: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1605156511068344
    2. ')//' → logprob: -2.160515546798706
    3. ')>>' → logprob: -3.410515546798706
    4. ' )' → logprob: -12.160515785217285
    5. ')#' → logprob: -15.785515785217285
    6. ')
' → logprob: -16.28551483154297
    7. ')<<' → logprob: -16.41051483154297
    8. '>>' → logprob: -16.66051483154297
    9. '//' → logprob: -17.78551483154297
    10. '   ' → logprob: -18.66051483154297

Token 239: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۲' → logprob: -17.625003814697266
    4. '```' → logprob: -18.000003814697266
    5. '२' → logprob: -18.625003814697266
    6. '٢' → logprob: -18.875003814697266
    7. '২' → logprob: -19.250003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '２' → logprob: -19.500003814697266
    10. '=' → logprob: -20.187503814697266

Token 240: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9060800075531006
    2. 'F' → logprob: -1.2810800075531006
    3. ' F' → logprob: -2.0310800075531006
    4. '   ' → logprob: -2.2810800075531006
    5. 'mid' → logprob: -3.4060800075531006
    6. 'm' → logprob: -3.9060800075531006
    7. ' mid' → logprob: -4.03108024597168
    8. '    
' → logprob: -5.78108024597168
    9. 'M' → logprob: -6.28108024597168
    10. 'Fen' → logprob: -7.28108024597168

Token 241: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.05003868788480759
    2. '   ' → logprob: -3.1750385761260986
    3. ' F' → logprob: -6.050038814544678
    4. 's' → logprob: -7.300038814544678
    5. 'D' → logprob: -7.550038814544678
    6. 'M' → logprob: -7.800038814544678
    7. 'x' → logprob: -8.30003833770752
    8. 'G' → logprob: -8.30003833770752
    9. 'C' → logprob: -8.42503833770752
    10. 'c' → logprob: -8.55003833770752

Token 242: ' mutant' (ID: 107323)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.042673349380493164
    2. 'ok' → logprob: -4.542673110961914
    3. 'c' → logprob: -6.292673110961914
    4. 'def' → logprob: -6.417673110961914
    5. 's' → logprob: -6.417673110961914
    6. 'cur' → logprob: -6.667673110961914
    7. 'S' → logprob: -6.667673110961914
    8. 'M' → logprob: -6.667673110961914
    9. 'L' → logprob: -7.042673110961914
    10. 'm' → logprob: -7.167673110961914

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21485143899917603
    2. '=' → logprob: -2.2148513793945312
    3. 's' → logprob: -2.5898513793945312
    4. ',' → logprob: -5.589851379394531
    5. 'F' → logprob: -7.214851379394531
    6. '_count' → logprob: -7.339851379394531
    7. 'count' → logprob: -7.589851379394531
    8. '_idx' → logprob: -8.777351379394531
    9. 'sum' → logprob: -8.777351379394531
    10. '_ok' → logprob: -8.964851379394531

Token 244: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3421156406402588
    2. '[F' → logprob: -2.217115640640259
    3. '0' → logprob: -2.342115640640259
    4. 'Fen' → logprob: -3.842115640640259
    5. 'F' → logprob: -4.34211540222168
    6. '[x' → logprob: -4.46711540222168
    7. '[]
' → logprob: -4.59211540222168
    8. '[n' → logprob: -4.71711540222168
    9. 'False' → logprob: -5.21711540222168
    10. '[-' → logprob: -6.21711540222168

Token 245: '99' (ID: 2058)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09120777249336243
    2. '1' → logprob: -3.59120774269104
    3. '0' → logprob: -4.466207981109619
    4. 'xi' → logprob: -5.216207981109619
    5. 'Q' → logprob: -5.341207981109619
    6. 'a' → logprob: -5.466207981109619
    7. 'v' → logprob: -5.591207981109619
    8. 'q' → logprob: -5.591207981109619
    9. '-' → logprob: -5.716207981109619
    10. '(' → logprob: -5.841207981109619

Token 246: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8003048896789551
    2. '-' → logprob: -2.300304889678955
    3. ' -' → logprob: -2.425304889678955
    4. ' for' → logprob: -3.050304889678955
    5. '(x' → logprob: -3.175304889678955
    6. '-x' → logprob: -3.550304889678955
    7. 'Q' → logprob: -3.675304889678955
    8. 'for' → logprob: -3.800304889678955
    9. '+' → logprob: -3.800304889678955
    10. 'i' → logprob: -3.925304889678955

Token 247: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010778740979731083
    2. ' x' → logprob: -5.385778903961182
    3. '(x' → logprob: -6.260778903961182
    4. 'i' → logprob: -6.510778903961182
    5. 'a' → logprob: -7.385778903961182
    6. 'xx' → logprob: -7.510778903961182
    7. 'q' → logprob: -8.260778427124023
    8. 'v' → logprob: -8.510778427124023
    9. 'y' → logprob: -8.635778427124023
    10. 'xi' → logprob: -9.385778427124023

Token 248: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4314446747303009
    2. '<' → logprob: -2.3064446449279785
    3. '>=' → logprob: -2.6814446449279785
    4. '>x' → logprob: -2.6814446449279785
    5. '<=' → logprob: -3.4314446449279785
    6. ' >' → logprob: -3.4314446449279785
    7. '<x' → logprob: -4.0564446449279785
    8. ' <' → logprob: -4.6814446449279785
    9. '-' → logprob: -4.8064446449279785
    10. '-k' → logprob: -6.0564446449279785

Token 249: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.043344441801309586
    2. '0' → logprob: -3.418344497680664
    3. 'n' → logprob: -5.543344497680664
    4. ' Q' → logprob: -6.918344497680664
    5. 'i' → logprob: -7.043344497680664
    6. 'x' → logprob: -7.668344497680664
    7. 'k' → logprob: -7.668344497680664
    8. '1' → logprob: -7.793344497680664
    9. 'len' → logprob: -7.793344497680664
    10. '2' → logprob: -8.043344497680664

Token 250: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06198841333389282
    2. ' else' → logprob: -2.811988353729248
    3. '   ' → logprob: -11.686988830566406
    4. ' ' → logprob: -11.811988830566406
    5. '  ' → logprob: -13.186988830566406
    6. '-' → logprob: -14.186988830566406
    7. '    ' → logprob: -14.811988830566406
    8. '
' → logprob: -14.811988830566406
    9. '           ' → logprob: -15.186988830566406
    10. '        ' → logprob: -15.686988830566406

Token 251: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35986265540122986
    2. '-' → logprob: -1.8598626852035522
    3. '1' → logprob: -3.3598625659942627
    4. 'k' → logprob: -3.3598625659942627
    5. ' ' → logprob: -3.7348625659942627
    6. 'x' → logprob: -3.8598625659942627
    7. 'xs' → logprob: -4.609862804412842
    8. ' -' → logprob: -4.984862804412842
    9. '99' → logprob: -5.109862804412842
    10. ' xs' → logprob: -6.609862804412842

Token 252: '13' (ID: 1311)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '99' → logprob: -0.47495561838150024
    2. '1' → logprob: -1.3499555587768555
    3. 'k' → logprob: -2.8499555587768555
    4. '9' → logprob: -3.9749555587768555
    5. '100' → logprob: -4.8499555587768555
    6. '(' → logprob: -5.2249555587768555
    7. '10' → logprob: -5.5999555587768555
    8. '999' → logprob: -5.8499555587768555
    9. '3' → logprob: -5.9749555587768555
    10. '2' → logprob: -5.9749555587768555

Token 253: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.336963027715683
    2. 'for' → logprob: -1.8369630575180054
    3. ')' → logprob: -2.586962938308716
    4. '*k' → logprob: -3.461962938308716
    5. 'k' → logprob: -4.586963176727295
    6. ' if' → logprob: -6.586963176727295
    7. ' *' → logprob: -6.586963176727295
    8. '0' → logprob: -6.836963176727295
    9. '*' → logprob: -6.836963176727295
    10. ' k' → logprob: -7.086963176727295

Token 254: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1427289843559265
    2. 'for' → logprob: -2.0177290439605713
    3. '+' → logprob: -11.017728805541992
    4. ' ' → logprob: -11.517728805541992
    5. '   ' → logprob: -11.892728805541992
    6. ' in' → logprob: -12.142728805541992
    7. ' if' → logprob: -12.392728805541992
    8. '-' → logprob: -12.767728805541992
    9. 'if' → logprob: -13.517728805541992
    10. '
' → logprob: -13.517728805541992

Token 255: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06203412264585495
    2. ' k' → logprob: -2.8120341300964355
    3. 'x' → logprob: -9.937033653259277
    4. ' ' → logprob: -11.687033653259277
    5. '_k' → logprob: -12.937033653259277
    6. ' x' → logprob: -13.062033653259277
    7. '
' → logprob: -13.937033653259277
    8. 'v' → logprob: -14.312033653259277
    9. 'kx' → logprob: -14.312033653259277
    10. '_' → logprob: -14.687033653259277

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016069678589701653
    2. 'in' → logprob: -4.1410698890686035
    3. ' ' → logprob: -11.266069412231445
    4. ',' → logprob: -11.391069412231445
    5. 's' → logprob: -12.016069412231445
    6. 'k' → logprob: -13.391069412231445
    7. 'x' → logprob: -14.641069412231445
    8. ' xs' → logprob: -15.203569412231445
    9. '  ' → logprob: -15.266069412231445
    10. ' ,' → logprob: -15.328569412231445

Token 257: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.01608763076364994
    2. ' xs' → logprob: -4.141087532043457
    3. '(xs' → logprob: -10.891087532043457
    4. '
' → logprob: -11.391087532043457
    5. 'range' → logprob: -11.641087532043457
    6. ' ' → logprob: -12.016087532043457
    7. '   ' → logprob: -13.891087532043457
    8. ' range' → logprob: -13.891087532043457
    9. ']' → logprob: -14.078587532043457
    10. 's' → logprob: -14.328587532043457

Token 258: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004576680716127157
    2. ']
' → logprob: -5.504576683044434
    3. ' ]' → logprob: -7.754576683044434
    4. '   ' → logprob: -9.879576683044434
    5. ']
' → logprob: -12.004576683044434
    6. ' ]
' → logprob: -12.129576683044434
    7. ']

' → logprob: -12.504576683044434
    8. '];' → logprob: -13.379576683044434
    9. ')]' → logprob: -15.004576683044434
    10. ')' → logprob: -15.379576683044434

Token 259: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7631101608276367
    2. '   ' → logprob: -1.3881101608276367
    3. '
' → logprob: -1.7631101608276367
    4. ' F' → logprob: -2.2631101608276367
    5. '    
' → logprob: -6.638110160827637
    6. ' ' → logprob: -7.138110160827637
    7. ' 
' → logprob: -7.388110160827637
    8. 's' → logprob: -7.575610160827637
    9. 'p' → logprob: -7.575610160827637
    10. 'sum' → logprob: -7.575610160827637

Token 260: ' M' (ID: 391)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.04673505946993828
    2. 's' → logprob: -4.7967352867126465
    3. 'prefix' → logprob: -5.0467352867126465
    4. 'p' → logprob: -5.1717352867126465
    5. 'S' → logprob: -5.5467352867126465
    6. 'pref' → logprob: -6.2967352867126465
    7. '   ' → logprob: -6.4217352867126465
    8. 'ps' → logprob: -6.4217352867126465
    9. 'c' → logprob: -6.5467352867126465
    10. 'acc' → logprob: -6.6717352867126465

Token 261: 'sum' (ID: 12298)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.5276199579238892
    2. ' =' → logprob: -1.4026199579238892
    3. '.clear' → logprob: -2.5276198387145996
    4. '._' → logprob: -3.0276198387145996
    5. '=' → logprob: -4.4026198387146
    6. 'F' → logprob: -5.4026198387146
    7. ' .' → logprob: -5.7776198387146
    8. '.' → logprob: -5.7776198387146
    9. 'ut' → logprob: -6.9026198387146
    10. '.s' → logprob: -7.1526198387146

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2816241383552551
    2. '=' → logprob: -1.4066240787506104
    3. 's' → logprob: -7.9066243171691895
    4. '=[' → logprob: -9.781623840332031
    5. ',' → logprob: -10.531623840332031
    6. '=[]' → logprob: -12.156623840332031
    7. ' =[' → logprob: -12.406623840332031
    8. '=m' → logprob: -13.031623840332031
    9. '=sum' → logprob: -13.531623840332031
    10. '=[]
' → logprob: -13.656623840332031

Token 263: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5645264983177185
    2. '0' → logprob: -1.6895265579223633
    3. 'acc' → logprob: -2.4395265579223633
    4. '[' → logprob: -2.5645265579223633
    5. 'sum' → logprob: -2.9395265579223633
    6. ' list' → logprob: -4.564526557922363
    7. '[F' → logprob: -4.814526557922363
    8. ' [' → logprob: -6.439526557922363
    9. '[-' → logprob: -6.564526557922363
    10. '[]
' → logprob: -6.814526557922363

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031949470285326242
    2. '*' → logprob: -5.878194808959961
    3. 'x' → logprob: -8.503194808959961
    4. '-' → logprob: -10.128194808959961
    5. ' ' → logprob: -10.253194808959961
    6. 'k' → logprob: -10.503194808959961
    7. 'm' → logprob: -10.628194808959961
    8. 'xs' → logprob: -11.753194808959961
    9. ']' → logprob: -12.378194808959961
    10. 'mut' → logprob: -12.378194808959961

Token 265: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010498964227735996
    2. ']+' → logprob: -4.635499000549316
    3. ',' → logprob: -7.510499000549316
    4. ']
' → logprob: -8.635499000549316
    5. ']+=' → logprob: -12.260499000549316
    6. '0' → logprob: -12.885499000549316
    7. ']
' → logprob: -13.010499000549316
    8. ']

' → logprob: -13.385499000549316
    9. ',*' → logprob: -13.635499000549316
    10. ',
' → logprob: -13.760499000549316

Token 266: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00010282796574756503
    2. ' list' → logprob: -9.250102996826172
    3. 'lst' → logprob: -12.125102996826172
    4. '[' → logprob: -14.250102996826172
    5. 'xs' → logprob: -15.500102996826172
    6. 'ls' → logprob: -16.125102996826172
    7. '   ' → logprob: -16.625102996826172
    8. 'List' → logprob: -16.875102996826172
    9. '[list' → logprob: -17.375102996826172
    10. 'x' → logprob: -17.875102996826172

Token 267: '(acc' (ID: 82668)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00020580526324920356
    2. '(acc' → logprob: -8.500205993652344
    3. ' acc' → logprob: -13.125205993652344
    4. '	acc' → logprob: -15.750205993652344
    5. '(' → logprob: -16.500205993652344
    6. ' ' → logprob: -16.875205993652344
    7. '   ' → logprob: -17.500205993652344
    8. 'map' → logprob: -18.250205993652344
    9. '  ' → logprob: -19.250205993652344
    10. '_acc' → logprob: -19.375205993652344

Token 268: '(mut' (ID: 160748)
  Prédit: '(mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mut' → logprob: -5.512236498361744e-07
    2. 'mut' → logprob: -15.375000953674316
    3. ' (' → logprob: -16.375
    4. '(' → logprob: -17.0
    5. ' mutant' → logprob: -17.75
    6. '(m' → logprob: -18.0
    7. ')(' → logprob: -18.125
    8. '(mod' → logprob: -18.25
    9. '(mu' → logprob: -18.625
    10. '_mut' → logprob: -18.75

Token 269: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00010402000043541193
    2. '[' → logprob: -10.500103950500488
    3. '   ' → logprob: -11.125103950500488
    4. 'nant' → logprob: -11.500103950500488
    5. ' mutant' → logprob: -11.750103950500488
    6. 'enant' → logprob: -11.750103950500488
    7. ')' → logprob: -12.000103950500488
    8. 'ent' → logprob: -12.250103950500488
    9. 'int' → logprob: -12.625103950500488
    10. '
' → logprob: -13.000103950500488

Token 270: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008353583980351686
    2. '))
' → logprob: -7.250835418701172
    3. ' ))' → logprob: -9.375835418701172
    4. ',' → logprob: -11.625835418701172
    5. '()))' → logprob: -11.625835418701172
    6. ')))' → logprob: -11.875835418701172
    7. '))

' → logprob: -11.875835418701172
    8. '));' → logprob: -13.375835418701172
    9. ' ' → logprob: -13.750835418701172
    10. '))}
' → logprob: -13.875835418701172

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04116668552160263
    2. 'F' → logprob: -4.16616678237915
    3. '
' → logprob: -4.41616678237915
    4. ' F' → logprob: -5.04116678237915
    5. '    
' → logprob: -5.79116678237915
    6. ')' → logprob: -7.04116678237915
    7. ',' → logprob: -8.103666305541992
    8. 's' → logprob: -9.166166305541992
    9. '```' → logprob: -9.166166305541992
    10. '#' → logprob: -9.291166305541992

Token 272: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.27093181014060974
    2. 'ok' → logprob: -3.0209317207336426
    3. 'fen' → logprob: -3.2709317207336426
    4. 'dp' → logprob: -4.395931720733643
    5. 'valid' → logprob: -4.520931720733643
    6. '   ' → logprob: -4.645931720733643
    7. 'good' → logprob: -4.895931720733643
    8. 'Fen' → logprob: -4.895931720733643
    9. 'L' → logprob: -5.270931720733643
    10. ' F' → logprob: -5.520931720733643

Token 273: '.clear' (ID: 13562)
  Prédit: '.clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.005244191270321608
    2. '.p' → logprob: -5.255244255065918
    3. ' .' → logprob: -12.505244255065918
    4. '.' → logprob: -12.880244255065918
    5. '._' → logprob: -13.005244255065918
    6. 'clear' → logprob: -14.630244255065918
    7. '.peek' → logprob: -15.130244255065918
    8. '=' → logprob: -15.880244255065918
    9. '.Clear' → logprob: -15.880244255065918
    10. '=p' → logprob: -16.2552433013916

Token 274: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31334832310676575
    2. '()
' → logprob: -1.3133482933044434
    3. '()
' → logprob: -10.063348770141602
    4. '()

' → logprob: -10.313348770141602
    5. '();' → logprob: -11.688348770141602
    6. '()`' → logprob: -14.313348770141602
    7. ' ()
' → logprob: -14.438348770141602
    8. '()\' → logprob: -14.563348770141602
    9. ' ()' → logprob: -15.313348770141602
    10. '(' → logprob: -16.0633487701416

Token 275: '   ' (ID: 271)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.8268503546714783
    2. '   ' → logprob: -0.9518503546714783
    3. ' ok' → logprob: -3.576850414276123
    4. 'valid' → logprob: -3.701850414276123
    5. 'max' → logprob: -4.076850414276123
    6. 'cur' → logprob: -4.326850414276123
    7. 'good' → logprob: -4.826850414276123
    8. 'bad' → logprob: -5.326850414276123
    9. 'l' → logprob: -5.451850414276123
    10. ' valid' → logprob: -5.451850414276123

Token 276: ' order' (ID: 2569)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.5335696935653687
    2. 'cur' → logprob: -2.783569812774658
    3. 'valid' → logprob: -2.908569812774658
    4. 'best' → logprob: -3.658569812774658
    5. 'max' → logprob: -3.908569812774658
    6. 'F' → logprob: -4.158569812774658
    7. 'good' → logprob: -4.158569812774658
    8. 'bad' → logprob: -4.533569812774658
    9. 'mx' → logprob: -4.533569812774658
    10. 'pos' → logprob: -4.533569812774658

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38738566637039185
    2. '=' → logprob: -1.137385606765747
    3. '=[]' → logprob: -8.637385368347168
    4. 'ed' → logprob: -10.012385368347168
    5. 's' → logprob: -10.137385368347168
    6. '   ' → logprob: -10.512385368347168
    7. 'r' → logprob: -10.887385368347168
    8. 'd' → logprob: -10.887385368347168
    9. '=[]
' → logprob: -11.012385368347168
    10. 'idx' → logprob: -11.262385368347168

Token 278: ' {}
' (ID: 11421)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.02110394649207592
    2. '[' → logprob: -4.521103858947754
    3. '[]' → logprob: -5.146103858947754
    4. 'list' → logprob: -5.771103858947754
    5. '[(' → logprob: -7.771103858947754
    6. 'range' → logprob: -7.771103858947754
    7. '[]
' → logprob: -9.521103858947754
    8. '(sorted' → logprob: -10.021103858947754
    9. '[list' → logprob: -10.521103858947754
    10. '[]

' → logprob: -11.021103858947754

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47716620564460754
    2. ' for' → logprob: -1.6021661758422852
    3. 'for' → logprob: -3.227166175842285
    4. 'idx' → logprob: -3.477166175842285
    5. 'i' → logprob: -3.602166175842285
    6. ' i' → logprob: -3.727166175842285
    7. ' idx' → logprob: -3.977166175842285
    8. ' last' → logprob: -5.977166175842285
    9. ' order' → logprob: -6.227166175842285
    10. 'cur' → logprob: -6.352166175842285

Token 280: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4513764381408691
    2. 'cur' → logprob: -1.5763764381408691
    3. 'idx' → logprob: -2.201376438140869
    4. 'c' → logprob: -3.201376438140869
    5. 'pos' → logprob: -3.201376438140869
    6. 'cnt' → logprob: -3.201376438140869
    7. 'rank' → logprob: -3.826376438140869
    8. 'i' → logprob: -3.951376438140869
    9. 'r' → logprob: -4.076376438140869
    10. 'inv' → logprob: -4.076376438140869

Token 281: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06905289739370346
    2. ' i' → logprob: -3.1940529346466064
    3. 'k' → logprob: -4.694052696228027
    4. 'j' → logprob: -5.194052696228027
    5. 'x' → logprob: -5.694052696228027
    6. 'idx' → logprob: -6.194052696228027
    7. 'v' → logprob: -6.819052696228027
    8. 'r' → logprob: -6.944052696228027
    9. '(i' → logprob: -7.694052696228027
    10. 'y' → logprob: -7.944052696228027

Token 282: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5033730864524841
    2. ' in' → logprob: -1.128373146057129
    3. 'in' → logprob: -2.878373146057129
    4. ',k' → logprob: -4.878373146057129
    5. ',x' → logprob: -6.503373146057129
    6. ',n' → logprob: -6.503373146057129
    7. ',j' → logprob: -6.628373146057129
    8. ',i' → logprob: -7.003373146057129
    9. ' ,' → logprob: -7.128373146057129
    10. ',m' → logprob: -8.378373146057129

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25219711661338806
    2. 'in' → logprob: -1.5021971464157104
    3. ',' → logprob: -8.502197265625
    4. 'enumer' → logprob: -10.002197265625
    5. ',in' → logprob: -12.127197265625
    6. ' ' → logprob: -12.377197265625
    7. ' enumerate' → logprob: -12.877197265625
    8. ',j' → logprob: -13.252197265625
    9. ' ,' → logprob: -13.627197265625
    10. ',v' → logprob: -14.752197265625

Token 284: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0032927326392382383
    2. ' enumerate' → logprob: -5.753292560577393
    3. 'sorted' → logprob: -9.75329303741455
    4. 'M' → logprob: -10.37829303741455
    5. '
' → logprob: -12.12829303741455
    6. 'en' → logprob: -12.37829303741455
    7. 'enum' → logprob: -12.62829303741455
    8. 'range' → logprob: -13.00329303741455
    9. ' ' → logprob: -13.25329303741455
    10. 'F' → logprob: -13.37829303741455

Token 285: '(sorted' (ID: 92488)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02189161628484726
    2. '(M' → logprob: -4.0218915939331055
    3. ' M' → logprob: -5.7718915939331055
    4. 'enumer' → logprob: -8.146891593933105
    5. 'range' → logprob: -9.896891593933105
    6. ' enumerate' → logprob: -10.146891593933105
    7. '(range' → logprob: -10.146891593933105
    8. '(' → logprob: -10.271891593933105
    9. '[M' → logprob: -10.646891593933105
    10. ')' → logprob: -10.896891593933105

Token 286: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.4037226140499115
    2. '(range' → logprob: -1.7787226438522339
    3. '(set' → logprob: -2.1537225246429443
    4. '((' → logprob: -3.6537225246429443
    5. '(en' → logprob: -4.903722763061523
    6. 'M' → logprob: -5.528722763061523
    7. '([(' → logprob: -5.653722763061523
    8. '(((' → logprob: -5.778722763061523
    9. '(list' → logprob: -7.278722763061523
    10. 'set' → logprob: -7.403722763061523

Token 287: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12287689000368118
    2. 's' → logprob: -2.4978768825531006
    3. 'range' → logprob: -4.49787712097168
    4. 'xs' → logprob: -4.87287712097168
    5. 'mut' → logprob: -5.24787712097168
    6. ')' → logprob: -5.74787712097168
    7. 'ut' → logprob: -6.87287712097168
    8. '(mut' → logprob: -6.87287712097168
    9. '_sum' → logprob: -7.24787712097168
    10. '(xs' → logprob: -7.74787712097168

Token 288: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -1.2108076810836792
    2. '):
' → logprob: -1.3358076810836792
    3. ')):' → logprob: -1.3358076810836792
    4. '):' → logprob: -1.8358076810836792
    5. '()):
' → logprob: -5.335807800292969
    6. ',' → logprob: -6.210807800292969
    7. ')' → logprob: -6.335807800292969
    8. '))' → logprob: -6.460807800292969
    9. ')):
' → logprob: -6.460807800292969
    10. '()' → logprob: -6.585807800292969

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039239220321178436
    2. '   ' → logprob: -3.7892391681671143
    3. ' order' → logprob: -4.789239406585693
    4. 'order' → logprob: -5.539239406585693
    5. ' F' → logprob: -6.164239406585693
    6. 'F' → logprob: -6.539239406585693
    7. '
' → logprob: -11.164238929748535
    8. '    ' → logprob: -11.664238929748535
    9. ',' → logprob: -11.914238929748535
    10. '           ' → logprob: -12.414238929748535

Token 290: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.44631853699684143
    2. ' order' → logprob: -1.446318507194519
    3. '   ' → logprob: -2.1963186264038086
    4. '       ' → logprob: -4.321318626403809
    5. '	order' → logprob: -9.821318626403809
    6. ' ' → logprob: -11.071318626403809
    7. '  ' → logprob: -11.821318626403809
    8. 'if' → logprob: -12.446318626403809
    9. '           ' → logprob: -12.696318626403809
    10. ' if' → logprob: -12.946318626403809

Token 291: '.setdefault' (ID: 113053)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00016718693950679153
    2. '[j' → logprob: -9.250166893005371
    3. '[M' → logprob: -10.250166893005371
    4. '[' → logprob: -10.500166893005371
    5. 'v' → logprob: -13.000166893005371
    6. '[V' → logprob: -13.750166893005371
    7. '.setdefault' → logprob: -13.750166893005371
    8. '[F' → logprob: -14.000166893005371
    9. ' [' → logprob: -14.375166893005371
    10. '[m' → logprob: -14.750166893005371

Token 292: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0001266613689949736
    2. 'v' → logprob: -9.250126838684082
    3. '(' → logprob: -10.625126838684082
    4. '
' → logprob: -13.125126838684082
    5. '(
' → logprob: -13.500126838684082
    6. '   ' → logprob: -13.750126838684082
    7. ' (' → logprob: -14.500126838684082
    8. '(j' → logprob: -15.375126838684082
    9. '(abs' → logprob: -15.500126838684082
    10. '((' → logprob: -15.750126838684082

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2850262522697449
    2. ',j' → logprob: -1.4100263118743896
    3. ' ,' → logprob: -6.0350260734558105
    4. ',min' → logprob: -6.9100260734558105
    5. ',len' → logprob: -8.285026550292969
    6. ',)' → logprob: -10.285026550292969
    7. '=' → logprob: -10.535026550292969
    8. ',n' → logprob: -10.535026550292969
    9. '   ' → logprob: -10.535026550292969
    10. ',max' → logprob: -11.160026550292969

Token 294: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.039480358362197876
    2. '0' → logprob: -3.914480447769165
    3. '[]' → logprob: -4.289480209350586
    4. 'len' → logprob: -5.539480209350586
    5. '[])' → logprob: -7.664480209350586
    6. 'order' → logprob: -8.539480209350586
    7. 'set' → logprob: -9.539480209350586
    8. ' j' → logprob: -9.664480209350586
    9. ' []).' → logprob: -9.914480209350586
    10. '-' → logprob: -10.039480209350586

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013047587708570063
    2. ')
' → logprob: -9.750130653381348
    3. ');' → logprob: -10.250130653381348
    4. ' )' → logprob: -11.250130653381348
    5. ',' → logprob: -12.500130653381348
    6. ')}' → logprob: -12.625130653381348
    7. ')set' → logprob: -13.000130653381348
    8. ')=' → logprob: -13.500130653381348
    9. ')return' → logprob: -13.625130653381348
    10. ')+' → logprob: -13.750130653381348

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01956075429916382
    2. 'for' → logprob: -4.394560813903809
    3. ' for' → logprob: -6.019560813903809
    4. '    
' → logprob: -6.269560813903809
    5. 'F' → logprob: -7.144560813903809
    6. '
' → logprob: -7.769560813903809
    7. 'idx' → logprob: -8.144560813903809
    8. 'pos' → logprob: -8.269560813903809
    9. 'indices' → logprob: -9.269560813903809
    10. 'prev' → logprob: -9.644560813903809

Token 297: ' stat' (ID: 1085)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.179745078086853
    2. 'cur' → logprob: -2.1797451972961426
    3. 'ans' → logprob: -2.9297451972961426
    4. 's' → logprob: -3.3047451972961426
    5. 'inv' → logprob: -3.5547451972961426
    6. 'res' → logprob: -3.5547451972961426
    7. '   ' → logprob: -3.6797451972961426
    8. 'c' → logprob: -3.9297451972961426
    9. 'acc' → logprob: -3.9297451972961426
    10. 'last' → logprob: -4.179745197296143

Token 298: '=' (ID: 28)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9136325716972351
    2. '=' → logprob: -1.1636326313018799
    3. ' =' → logprob: -1.4136326313018799
    4. 'us' → logprob: -3.91363263130188
    5. 'e' → logprob: -4.663632392883301
    6. 'istics' → logprob: -5.288632392883301
    7. 'es' → logprob: -5.663632392883301
    8. '=[]' → logprob: -6.038632392883301
    9. 'ic' → logprob: -7.663632392883301
    10. '=[' → logprob: -7.913632392883301

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004273315134923905
    2. ' ' → logprob: -8.75042724609375
    3. 'Fen' → logprob: -8.75042724609375
    4. '[' → logprob: -9.75042724609375
    5. '[F' → logprob: -10.75042724609375
    6. 'F' → logprob: -11.62542724609375
    7. '1' → logprob: -11.87542724609375
    8. ' Fen' → logprob: -12.87542724609375
    9. '[]' → logprob: -13.00042724609375
    10. 'len' → logprob: -13.50042724609375

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008789466228336096
    2. '    
' → logprob: -7.875878810882568
    3. ' for' → logprob: -8.375879287719727
    4. '
' → logprob: -8.500879287719727
    5. '<|end|>' → logprob: -10.625879287719727
    6. 'for' → logprob: -10.750879287719727
    7. ',' → logprob: -12.500879287719727
    8. '0' → logprob: -13.000879287719727
    9. '#' → logprob: -13.438379287719727
    10. '1' → logprob: -13.938379287719727

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09958875924348831
    2. '<|end|>' → logprob: -3.3495888710021973
    3. ' for' → logprob: -3.5995888710021973
    4. 'for' → logprob: -4.474588871002197
    5. 'count' → logprob: -4.724588871002197
    6. '
' → logprob: -6.099588871002197
    7. '    
' → logprob: -6.099588871002197
    8. 'valid' → logprob: -6.724588871002197
    9. 's' → logprob: -7.099588871002197
    10. '0' → logprob: -7.099588871002197

Token 302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015230225399136543
    2. 'F' → logprob: -4.765230178833008
    3. ' for' → logprob: -6.765230178833008
    4. '   ' → logprob: -7.015230178833008
    5. 'count' → logprob: -7.140230178833008
    6. 'print' → logprob: -7.515230178833008
    7. 'ans' → logprob: -7.890230178833008
    8. 'answer' → logprob: -8.140230178833008
    9. 'max' → logprob: -8.265230178833008
    10. 'valid' → logprob: -8.265230178833008

Token 303: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0493061542510986
    2. 'i' → logprob: -1.7993061542510986
    3. 'v' → logprob: -2.0493061542510986
    4. 'k' → logprob: -2.2993061542510986
    5. 'j' → logprob: -2.2993061542510986
    6. 'm' → logprob: -3.0493061542510986
    7. 's' → logprob: -3.2993061542510986
    8. 'val' → logprob: -4.9243059158325195
    9. 'r' → logprob: -4.9243059158325195
    10. 'y' → logprob: -5.0493059158325195

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04871204495429993
    2. 'in' → logprob: -3.0487120151519775
    3. ',' → logprob: -9.798711776733398
    4. 's' → logprob: -11.548711776733398
    5. ' M' → logprob: -11.673711776733398
    6. ' ' → logprob: -11.673711776733398
    7. 'In' → logprob: -12.048711776733398
    8. '=' → logprob: -12.298711776733398
    9. '   ' → logprob: -12.423711776733398
    10. 'v' → logprob: -12.923711776733398

Token 305: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014299019239842892
    2. ' M' → logprob: -4.264298915863037
    3. 'order' → logprob: -9.264299392700195
    4. 'range' → logprob: -11.514299392700195
    5. '[M' → logprob: -11.514299392700195
    6. ' order' → logprob: -12.014299392700195
    7. ' ' → logprob: -12.514299392700195
    8. '(M' → logprob: -12.764299392700195
    9. ' range' → logprob: -13.264299392700195
    10. '   ' → logprob: -13.264299392700195

Token 306: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.013599550351500511
    2. 'M' → logprob: -4.763599395751953
    3. 'range' → logprob: -6.138599395751953
    4. 'order' → logprob: -6.513599395751953
    5. 'S' → logprob: -7.388599395751953
    6. 'stat' → logprob: -8.513599395751953
    7. '[' → logprob: -8.638599395751953
    8. '(sum' → logprob: -9.638599395751953
    9. ' sum' → logprob: -10.013599395751953
    10. ' M' → logprob: -10.263599395751953

Token 307: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.030122090131044388
    2. ':' → logprob: -3.5301220417022705
    3. ' :
' → logprob: -8.155121803283691
    4. '   ' → logprob: -10.280121803283691
    5. ' :' → logprob: -10.905121803283691
    6. ':
' → logprob: -11.530121803283691
    7. '=' → logprob: -12.155121803283691
    8. '[::-' → logprob: -12.280121803283691
    9. '):
' → logprob: -12.780121803283691
    10. ':

' → logprob: -12.780121803283691

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.492120155598968e-05
    2. '
' → logprob: -10.750064849853516
    3. ',' → logprob: -11.750064849853516
    4. '   ' → logprob: -11.875064849853516
    5. ' stat' → logprob: -12.500064849853516
    6. '<|end|>' → logprob: -12.750064849853516
    7. ' s' → logprob: -13.000064849853516
    8. '	   ' → logprob: -13.125064849853516
    9. '#' → logprob: -13.375064849853516
    10. '>' → logprob: -13.375064849853516

Token 309: ' stat' (ID: 1085)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6262298822402954
    2. 'x' → logprob: -2.251229763031006
    3. 'idx' → logprob: -2.376229763031006
    4. 'p' → logprob: -3.126229763031006
    5. 'stat' (adapté à ' stat') → logprob: -3.251229763031006
    6. ' i' → logprob: -3.376229763031006
    7. '   ' → logprob: -3.501229763031006
    8. ' stat' → logprob: -3.876229763031006
    9. ' idx' → logprob: -4.001229763031006
    10. 'k' → logprob: -4.126229763031006

Token 310: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3142980635166168
    2. ' +=' → logprob: -1.3142980337142944
    3. '=' → logprob: -7.439298152923584
    4. '-=' → logprob: -8.439297676086426
    5. ' =' → logprob: -9.189297676086426
    6. ' -=' → logprob: -9.814297676086426
    7. ']+=' → logprob: -11.064297676086426
    8. '>' → logprob: -11.689297676086426
    9. '>=' → logprob: -11.689297676086426
    10. '<=' → logprob: -11.689297676086426

Token 311: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0010451936395838857
    2. '1' → logprob: -7.126045227050781
    3. 'v' → logprob: -8.876045227050781
    4. ' F' → logprob: -9.876045227050781
    5. 'stat' → logprob: -11.251045227050781
    6. 'Q' → logprob: -11.751045227050781
    7. 'int' → logprob: -11.751045227050781
    8. '(' → logprob: -11.876045227050781
    9. '(F' → logprob: -12.501045227050781
    10. '-' → logprob: -12.876045227050781

Token 312: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.4060561776859686e-05
    2. 'poke' → logprob: -10.875043869018555
    3. 'p' → logprob: -11.000043869018555
    4. '.' → logprob: -12.750043869018555
    5. ' .' → logprob: -13.125043869018555
    6. '```' → logprob: -13.125043869018555
    7. '`.' → logprob: -14.250043869018555
    8. ').' → logprob: -15.750043869018555
    9. '<p' → logprob: -16.375043869018555
    10. '   ' → logprob: -16.625043869018555

Token 313: 'uff' (ID: 1972)
  Prédit: 'oke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oke' → logprob: -0.0052694459445774555
    2. 'uff' → logprob: -5.380269527435303
    3. 'ok' → logprob: -8.380269050598145
    4. 'poke' → logprob: -8.755269050598145
    5. 'o' → logprob: -9.505269050598145
    6. 'f' → logprob: -10.005269050598145
    7. 'p' → logprob: -10.380269050598145
    8. 'ock' → logprob: -11.130269050598145
    9. '[' → logprob: -11.380269050598145
    10. '

' → logprob: -11.630269050598145

Token 314: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.750001907348633
    3. 'order' → logprob: -14.125001907348633
    4. '(ord' → logprob: -14.750001907348633
    5. '((' → logprob: -18.125001907348633
    6. ' order' → logprob: -19.000001907348633
    7. '(len' → logprob: -19.375001907348633
    8. '(
' → logprob: -19.875001907348633
    9. ' (' → logprob: -20.000001907348633
    10. '(Order' → logprob: -20.750001907348633

Token 315: '[v' (ID: 36561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10043127089738846
    2. '[v' → logprob: -2.350431203842163
    3. '.get' → logprob: -8.475431442260742
    4. '(order' → logprob: -12.100431442260742
    5. '.setdefault' → logprob: -13.225431442260742
    6. 'order' → logprob: -13.350431442260742
    7. 'v' → logprob: -13.350431442260742
    8. '(v' → logprob: -13.350431442260742
    9. ' [' → logprob: -13.725431442260742
    10. '[val' → logprob: -14.600431442260742

Token 316: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7558451294898987
    2. '-' → logprob: -1.005845069885254
    3. ']-' → logprob: -2.505845069885254
    4. ']+' → logprob: -3.505845069885254
    5. '])
' → logprob: -3.880845069885254
    6. ' -' → logprob: -4.130845069885254
    7. ']' → logprob: -4.505845069885254
    8. '[v' → logprob: -6.380845069885254
    9. '])+' → logprob: -6.630845069885254
    10. '])-' → logprob: -6.630845069885254

Token 317: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05470273271203041
    2. ' F' → logprob: -3.1797027587890625
    3. '
' → logprob: -5.4297027587890625
    4. 'F' → logprob: -5.8047027587890625
    5. '    
' → logprob: -6.8047027587890625
    6. ';' → logprob: -7.1797027587890625
    7. ',' → logprob: -7.5547027587890625
    8. '       ' → logprob: -7.6797027587890625
    9. '+' → logprob: -8.054702758789062
    10. ' 
' → logprob: -8.429702758789062

Token 318: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0043097687885165215
    2. ' ' → logprob: -6.37930965423584
    3. 'F' → logprob: -6.87930965423584
    4. '0' → logprob: -6.87930965423584
    5. 'v' → logprob: -8.50430965423584
    6. 'stat' → logprob: -9.25430965423584
    7. '(' → logprob: -9.62930965423584
    8. 'order' → logprob: -9.87930965423584
    9. ' F' → logprob: -10.37930965423584
    10. 'len' → logprob: -11.62930965423584

Token 319: 'v' (ID: 85)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27221620082855225
    2. '0' → logprob: -2.022216320037842
    3. 'v' → logprob: -3.397216320037842
    4. 'F' → logprob: -3.772216320037842
    5. 'order' → logprob: -4.022216320037842
    6. ' ' → logprob: -5.147216320037842
    7. '(v' → logprob: -5.147216320037842
    8. '(' → logprob: -5.522216320037842
    9. '(order' → logprob: -5.647216320037842
    10. '-' → logprob: -6.022216320037842

Token 320: '>=' (ID: 20974)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5923672914505005
    2. '>=' → logprob: -2.217367172241211
    3. ' <' → logprob: -2.467367172241211
    4. ' ==' → logprob: -2.592367172241211
    5. ' <=' → logprob: -2.717367172241211
    6. '==' → logprob: -3.342367172241211
    7. '<=' → logprob: -3.842367172241211
    8. '<' → logprob: -4.092367172241211
    9. ' >' → logprob: -4.592367172241211
    10. '>' → logprob: -4.717367172241211

Token 321: '0' (ID: 15)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0001713590754661709
    2. ' Q' → logprob: -9.000171661376953
    3. 'order' → logprob: -10.500171661376953
    4. '0' → logprob: -11.250171661376953
    5. ' ' → logprob: -13.000171661376953
    6. '   ' → logprob: -13.625171661376953
    7. 'c' → logprob: -14.375171661376953
    8. '	Q' → logprob: -14.500171661376953
    9. ' order' → logprob: -14.625171661376953
    10. 'bot' → logprob: -15.000171661376953

Token 322: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0450204536318779
    2. ')' → logprob: -3.545020341873169
    3. ' )
' → logprob: -4.420020580291748
    4. ');' → logprob: -6.420020580291748
    5. '   ' → logprob: -7.045020580291748
    6. ' )' → logprob: -8.04502010345459
    7. ')
' → logprob: -9.79502010345459
    8. ');
' → logprob: -9.92002010345459
    9. '       ' → logprob: -9.92002010345459
    10. ' );' → logprob: -10.04502010345459

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2031363546848297
    2. ' F' → logprob: -2.078136444091797
    3. '       ' → logprob: -3.578136444091797
    4. 'F' → logprob: -3.828136444091797
    5. '
' → logprob: -4.828136444091797
    6. ' ' → logprob: -8.078136444091797
    7. '```' → logprob: -8.703136444091797
    8. ',' → logprob: -8.828136444091797
    9. '  ' → logprob: -8.953136444091797
    10. '    
' → logprob: -9.953136444091797

Token 324: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.002110170666128397
    2. ' F' → logprob: -6.252110004425049
    3. '   ' → logprob: -8.627110481262207
    4. '       ' → logprob: -13.752110481262207
    5. ' ' → logprob: -14.252110481262207
    6. '
' → logprob: -15.377110481262207
    7. '  ' → logprob: -15.377110481262207
    8. '	F' → logprob: -17.00210952758789
    9. '    
' → logprob: -17.12710952758789
    10. '```' → logprob: -17.37710952758789

Token 325: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.000000953674316
    3. 'poke' → logprob: -15.375000953674316
    4. ' .' → logprob: -16.375
    5. ').' → logprob: -19.375
    6. '.pose' → logprob: -19.75
    7. '```' → logprob: -19.875
    8. 'p' → logprob: -20.375
    9. '..' → logprob: -20.625
    10. '.push' → logprob: -21.0

Token 326: 'oke' (ID: 4718)
  Prédit: 'oke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oke' → logprob: -0.002417511073872447
    2. 'ke' → logprob: -6.12741756439209
    3. 'poke' → logprob: -9.12741756439209
    4. 'ok' → logprob: -9.37741756439209
    5. 'o' → logprob: -11.87741756439209
    6. '```' → logprob: -12.37741756439209
    7. 'ake' → logprob: -12.50241756439209
    8. 'e' → logprob: -13.00241756439209
    9. '   ' → logprob: -13.62741756439209
    10. '[' → logprob: -13.75241756439209

Token 327: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -8.2994620242971e-06
    2. 'order' → logprob: -11.750008583068848
    3. '(' → logprob: -15.875008583068848
    4. '(ord' → logprob: -16.25000762939453
    5. ' order' → logprob: -17.50000762939453
    6. ' (' → logprob: -17.75000762939453
    7. '	order' → logprob: -18.87500762939453
    8. '$order' → logprob: -18.87500762939453
    9. '(
' → logprob: -19.37500762939453
    10. '((' → logprob: -19.50000762939453

Token 328: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.7968066206085496e-05
    2. '[' → logprob: -10.500027656555176
    3. 'v' → logprob: -15.375027656555176
    4. ' [' → logprob: -16.625028610229492
    5. '[val' → logprob: -17.625028610229492
    6. '(v' → logprob: -17.750028610229492
    7. '   ' → logprob: -18.500028610229492
    8. '[value' → logprob: -19.250028610229492
    9. '[
' → logprob: -19.625028610229492
    10. '<v' → logprob: -19.750028610229492

Token 329: '])
' (ID: 5169)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.3663626305060461e-05
    2. 'v' → logprob: -11.87501335144043
    3. '(v' → logprob: -12.50001335144043
    4. '[' → logprob: -13.00001335144043
    5. ' [' → logprob: -15.25001335144043
    6. '])' → logprob: -16.12501335144043
    7. '[val' → logprob: -16.87501335144043
    8. '   ' → logprob: -17.12501335144043
    9. '][' → logprob: -17.25001335144043
    10. ']' → logprob: -17.75001335144043

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.194110756041482e-05
    2. ' if' → logprob: -10.250061988830566
    3. '
' → logprob: -11.500061988830566
    4. 'if' → logprob: -11.500061988830566
    5. ')' → logprob: -12.375061988830566
    6. '    
' → logprob: -13.625061988830566
    7. ',' → logprob: -15.375061988830566
    8. '<|end|>' → logprob: -16.12506103515625
    9. ' ' → logprob: -16.25006103515625
    10. '        
' → logprob: -16.37506103515625

Token 331: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013607434928417206
    2. 'if' (adapté à ' if') → logprob: -4.888607501983643
    3. ' if' → logprob: -5.263607501983643
    4. '
' → logprob: -7.138607501983643
    5. '```' → logprob: -12.888607025146484
    6. '    
' → logprob: -13.138607025146484
    7. ')' → logprob: -13.513607025146484
    8. '
' → logprob: -13.638607025146484
    9. 'stat' → logprob: -14.013607025146484
    10. 'If' → logprob: -14.138607025146484

Token 332: ' stat' (ID: 1085)
  Prédit: ' stat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stat' → logprob: -0.004128030501306057
    2. 'stat' → logprob: -5.5041279792785645
    3. '(stat' → logprob: -10.129128456115723
    4. ' ' → logprob: -12.754128456115723
    5. '	stat' → logprob: -13.004128456115723
    6. ' bot' → logprob: -13.629128456115723
    7. '   ' → logprob: -14.254128456115723
    8. '  ' → logprob: -14.504128456115723
    9. ' ' → logprob: -14.754128456115723
    10. ' n' → logprob: -14.754128456115723

Token 333: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.47958865761756897
    2. ' >=' → logprob: -0.9795886278152466
    3. ' <' → logprob: -5.854588508605957
    4. '<' → logprob: -6.104588508605957
    5. '>' → logprob: -8.479588508605957
    6. ' >' → logprob: -8.729588508605957
    7. '<n' → logprob: -11.479588508605957
    8. ' ' → logprob: -12.104588508605957
    9. '<c' → logprob: -12.854588508605957
    10. ')>=' → logprob: -12.979588508605957

Token 334: 'c' (ID: 66)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07469075918197632
    2. '(n' → logprob: -3.574690818786621
    3. 'bot' → logprob: -3.824690818786621
    4. 'Q' → logprob: -4.949690818786621
    5. '0' → logprob: -4.949690818786621
    6. ' n' → logprob: -6.074690818786621
    7. '((' → logprob: -6.824690818786621
    8. 'top' → logprob: -6.949690818786621
    9. '(bot' → logprob: -6.949690818786621
    10. 'c' → logprob: -6.949690818786621

Token 335: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17256340384483337
    2. '((' → logprob: -1.9225634336471558
    3. 'n' → logprob: -4.672563552856445
    4. '(stat' → logprob: -6.922563552856445
    5. '(((' → logprob: -7.047563552856445
    6. '(' → logprob: -7.422563552856445
    7. ' (' → logprob: -8.797563552856445
    8. '(len' → logprob: -9.172563552856445
    9. 'stat' → logprob: -9.922563552856445
    10. ' n' → logprob: -10.172563552856445

Token 336: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0197275560349226
    2. '(n' → logprob: -4.39472770690918
    3. ' n' → logprob: -5.01972770690918
    4. '   ' → logprob: -8.26972770690918
    5. ' ' → logprob: -9.14472770690918
    6. ' (' → logprob: -9.26972770690918
    7. '  ' → logprob: -10.26972770690918
    8. '((' → logprob: -10.64472770690918
    9. '    ' → logprob: -11.01972770690918
    10. 'len' → logprob: -11.01972770690918

Token 337: '*(' (ID: 14793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42670750617980957
    2. '(n' → logprob: -1.1767075061798096
    3. '*(' → logprob: -4.4267072677612305
    4. '   ' → logprob: -4.6767072677612305
    5. 'n' → logprob: -4.9267072677612305
    6. '/' → logprob: -6.1767072677612305
    7. '2' → logprob: -6.1767072677612305
    8. ' +' → logprob: -6.3017072677612305
    9. '*' → logprob: -7.0517072677612305
    10. ' (' → logprob: -7.0517072677612305

Token 338: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001905319862999022
    2. '(n' → logprob: -6.62690544128418
    3. ' n' → logprob: -8.37690544128418
    4. '   ' → logprob: -8.75190544128418
    5. '+' → logprob: -9.12690544128418
    6. '1' → logprob: -10.37690544128418
    7. '
' → logprob: -11.75190544128418
    8. ' ' → logprob: -11.87690544128418
    9. ' (' → logprob: -12.00190544128418
    10. '```' → logprob: -12.50190544128418

Token 339: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0986032783985138
    2. '2' → logprob: -2.4736032485961914
    3. '1' → logprob: -4.973603248596191
    4. ' +' → logprob: -6.598603248596191
    5. '   ' → logprob: -8.098603248596191
    6. '```' → logprob: -8.348603248596191
    7. ' ' → logprob: -8.598603248596191
    8. ')/' → logprob: -8.973603248596191
    9. ')+' → logprob: -9.098603248596191
    10. '3' → logprob: -9.973603248596191

Token 340: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31391432881355286
    2. '1' → logprob: -1.3139142990112305
    3. ' ' → logprob: -8.18891429901123
    4. '3' → logprob: -8.81391429901123
    5. '   ' → logprob: -8.93891429901123
    6. '```' → logprob: -10.68891429901123
    7. '4' → logprob: -11.06391429901123
    8. '+' → logprob: -11.18891429901123
    9. '  ' → logprob: -11.56391429901123
    10. '``' → logprob: -11.81391429901123

Token 341: ')/' (ID: 11876)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.09103593230247498
    2. ')' → logprob: -2.716035842895508
    3. ')/' → logprob: -4.216035842895508
    4. ' )' → logprob: -5.716035842895508
    5. '())' → logprob: -6.591035842895508
    6. '//' → logprob: -7.341035842895508
    7. '()' → logprob: -7.966035842895508
    8. ')>>' → logprob: -9.341035842895508
    9. ')+' → logprob: -9.466035842895508
    10. '   ' → logprob: -9.591035842895508

Token 342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022910907864570618
    2. ' ' → logprob: -6.127291202545166
    3. '   ' → logprob: -9.877290725708008
    4. '4' → logprob: -10.877290725708008
    5. '  ' → logprob: -11.377290725708008
    6. '    ' → logprob: -12.002290725708008
    7. '3' → logprob: -12.252290725708008
    8. '
' → logprob: -12.627290725708008
    9. '     ' → logprob: -13.127290725708008
    10. '       ' → logprob: -13.752290725708008

Token 343: ')/' (ID: 11876)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6678974628448486
    2. ')/' → logprob: -1.5428974628448486
    3. ')+' → logprob: -2.0428974628448486
    4. ')' → logprob: -3.0428974628448486
    5. '),' → logprob: -3.1678974628448486
    6. ' +' → logprob: -3.2928974628448486
    7. ')//' → logprob: -5.0428972244262695
    8. ',' → logprob: -5.7928972244262695
    9. ' )' → logprob: -6.1678972244262695
    10. ')):
' → logprob: -6.9178972244262695

Token 344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000865487614646554
    2. ' ' → logprob: -7.125865459442139
    3. '3' → logprob: -11.125865936279297
    4. '   ' → logprob: -11.625865936279297
    5. '
' → logprob: -12.125865936279297
    6. '  ' → logprob: -12.250865936279297
    7. '(' → logprob: -12.375865936279297
    8. '4' → logprob: -12.500865936279297
    9. '1' → logprob: -12.500865936279297
    10. '10' → logprob: -13.375865936279297

Token 345: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.253640741109848
    2. '):' → logprob: -1.5036407709121704
    3. '):
' → logprob: -7.378640651702881
    4. '   ' → logprob: -7.878640651702881
    5. ')' → logprob: -8.253641128540039
    6. ' ):
' → logprob: -8.253641128540039
    7. '+' → logprob: -9.253641128540039
    8. ' ):' → logprob: -9.878641128540039
    9. ')+' → logprob: -11.628641128540039
    10. '):

' → logprob: -12.003641128540039

Token 346: '       ' (ID: 309)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.8474132418632507
    2. ' bot' → logprob: -1.7224133014678955
    3. '   ' → logprob: -1.9724133014678955
    4. 'bot' → logprob: -2.0974133014678955
    5. '       ' → logprob: -2.3474133014678955
    6. 'top' → logprob: -3.3474133014678955
    7. '
' → logprob: -10.097413063049316
    8. '	top' → logprob: -10.222413063049316
    9. '    ' → logprob: -10.597413063049316
    10. '(bot' → logprob: -11.472413063049316

Token 347: ' bot' (ID: 11257)
  Prédit: 'bot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' (adapté à ' bot') → logprob: -0.30636945366859436
    2. ' bot' → logprob: -2.0563695430755615
    3. 'top' → logprob: -2.4313695430755615
    4. ' top' → logprob: -3.0563695430755615
    5. '   ' → logprob: -6.931369304656982
    6. 'bottom' → logprob: -12.43136978149414
    7. '
' → logprob: -12.68136978149414
    8. ' ' → logprob: -13.05636978149414
    9. '	top' → logprob: -13.55636978149414
    10. '  ' → logprob: -13.68136978149414

Token 348: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ',' → logprob: -16.811967849731445
    4. '=}' → logprob: -18.811967849731445
    5. '=cut' → logprob: -19.061967849731445
    6. '＝' → logprob: -19.186967849731445
    7. '+=' → logprob: -19.311967849731445
    8. '.=' → logprob: -19.436967849731445
    9. ' ' → logprob: -19.686967849731445
    10. ')' → logprob: -19.686967849731445

Token 349: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -6.2729995988775045e-06
    2. ' Q' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.7500057220459
    4. '	Q' → logprob: -18.5000057220459
    5. '       ' → logprob: -21.5000057220459
    6. '           ' → logprob: -21.7500057220459
    7. '
' → logprob: -21.8750057220459
    8. '(Q' → logprob: -22.0000057220459
    9. '```' → logprob: -23.0000057220459
    10. '<Q' → logprob: -23.2500057220459

Token 350: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03857440501451492
    2. 'else' → logprob: -3.288574457168579
    3. ' else' → logprob: -7.53857421875
    4. '	else' → logprob: -15.03857421875
    5. '
' → logprob: -15.41357421875
    6. '```' → logprob: -16.66357421875
    7. '  ' → logprob: -17.78857421875
    8. '       ' → logprob: -17.91357421875
    9. '    
' → logprob: -18.28857421875
    10. '<|end|>' → logprob: -19.03857421875

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12697996199131012
    2. 'else' → logprob: -2.1269800662994385
    3. ' else' → logprob: -9.87697982788086
    4. '```' → logprob: -15.12697982788086
    5. '	else' → logprob: -15.62697982788086
    6. '
' → logprob: -16.62697982788086
    7. '       ' → logprob: -18.00197982788086
    8. '  ' → logprob: -19.37697982788086
    9. '_else' → logprob: -19.62697982788086
    10. 'elif' → logprob: -19.75197982788086

Token 352: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.029948225244879723
    2. '   ' → logprob: -3.5299482345581055
    3. ' else' → logprob: -8.529948234558105
    4. '	else' → logprob: -15.279948234558105
    5. '
' → logprob: -17.27994728088379
    6. '```' → logprob: -17.52994728088379
    7. ' ' → logprob: -19.15494728088379
    8. 'elif' → logprob: -19.40494728088379
    9. '       ' → logprob: -19.65494728088379
    10. '  ' → logprob: -19.77994728088379

Token 353: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43065112829208374
    2. ' top' → logprob: -1.5556511878967285
    3. '   ' → logprob: -2.0556511878967285
    4. 'top' → logprob: -5.4306511878967285
    5. ':' → logprob: -5.6806511878967285
    6. ':
' → logprob: -6.4306511878967285
    7. '	top' → logprob: -7.8056511878967285
    8. '[top' → logprob: -8.05565071105957
    9. '
' → logprob: -8.80565071105957
    10. '    ' → logprob: -8.93065071105957

Token 354: '       ' (ID: 309)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.20540857315063477
    2. '   ' → logprob: -1.7054085731506348
    3. ' top' → logprob: -5.705408573150635
    4. '       ' → logprob: -7.455408573150635
    5. '	top' → logprob: -9.455408096313477
    6. '[top' → logprob: -13.330408096313477
    7. '(top' → logprob: -14.955408096313477
    8. '  ' → logprob: -15.580408096313477
    9. '   ' → logprob: -15.580408096313477
    10. ' ' → logprob: -15.955408096313477

Token 355: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -1.5048530030981055e-06
    2. ' top' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '
' → logprob: -21.500001907348633
    5. '  ' → logprob: -22.375001907348633
    6. '	top' → logprob: -22.375001907348633
    7. 'bot' → logprob: -22.500001907348633
    8. 'Top' → logprob: -24.000001907348633
    9. '    ' → logprob: -24.375001907348633
    10. ' ' → logprob: -24.875001907348633

Token 356: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007105246186256409
    2. ' =' → logprob: -7.250710487365723
    3. '=
' → logprob: -15.250710487365723
    4. '=b' → logprob: -15.750710487365723
    5. '+=' → logprob: -16.25071144104004
    6. '=

' → logprob: -16.75071144104004
    7. '=B' → logprob: -17.25071144104004
    8. 'bot' → logprob: -17.62571144104004
    9. ' bot' → logprob: -18.00071144104004
    10. '-=' → logprob: -18.12571144104004

Token 357: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.5048530030981055e-06
    2. ' Q' → logprob: -13.500001907348633
    3. '	Q' → logprob: -18.375001907348633
    4. 'bot' → logprob: -18.875001907348633
    5. '   ' → logprob: -21.125001907348633
    6. 'Bot' → logprob: -22.375001907348633
    7. '_Q' → logprob: -23.250001907348633
    8. '```' → logprob: -23.375001907348633
    9. '<Q' → logprob: -23.375001907348633
    10. ' ' → logprob: -24.000001907348633

Token 358: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005359567701816559
    2. '
' → logprob: -5.255359649658203
    3. ')' → logprob: -9.380359649658203
    4. ')
' → logprob: -10.880359649658203
    5. ' print' → logprob: -11.255359649658203
    6. '<|end|>' → logprob: -13.005359649658203
    7. '```' → logprob: -13.755359649658203
    8. '    
' → logprob: -13.755359649658203
    9. ';' → logprob: -14.005359649658203
    10. '  
' → logprob: -14.130359649658203

Token 359: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005436192732304335
    2. ')' → logprob: -8.500543594360352
    3. '<|end|>' → logprob: -8.500543594360352
    4. ' print' → logprob: -9.125543594360352
    5. '
' → logprob: -11.500543594360352
    6. '```' → logprob: -11.750543594360352
    7. '(print' → logprob: -13.125543594360352
    8. '.' → logprob: -13.375543594360352
    9. ';' → logprob: -13.875543594360352
    10. '#' → logprob: -14.125543594360352

Token 360: '(bot' (ID: 108870)
  Prédit: '(bot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bot' → logprob: -3.128163257315464e-07
    2. 'bot' → logprob: -16.0
    3. '(f' → logprob: -16.625
    4. '(' → logprob: -17.0
    5. '(bin' → logprob: -18.25
    6. '(b' → logprob: -18.875
    7. '(bus' → logprob: -19.375
    8. '(robot' → logprob: -19.875
    9. ' bot' → logprob: -20.0
    10. '(Q' → logprob: -20.0

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.250017166137695
    3. '')' → logprob: -13.500017166137695
    4. ' )' → logprob: -13.625017166137695
    5. '`)' → logprob: -15.000017166137695
    6. '```' → logprob: -15.625017166137695
    7. ')`' → logprob: -15.625017166137695
    8. '))' → logprob: -16.000017166137695
    9. '")' → logprob: -16.250017166137695
    10. '#' → logprob: -16.375017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 160
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 295
Précision stricte (1ère position): 44.57%
Précision adaptée (1ère position): 47.63%
Précision (top 10): 82.17%
================================================================================
