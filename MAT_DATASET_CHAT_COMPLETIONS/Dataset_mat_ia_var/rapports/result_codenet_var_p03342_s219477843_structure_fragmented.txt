================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import copy
from heapq import heappush, heappop, heapify
from functools import cmp_to_key
from bisect import bisect_left, bisect_right
from collections import defaultdict, deque, Counter

input = sys.stdin.readline
getS = lambda: input().strip()
getN = lambda: int(input())
getList = lambda: list(map(int, input().split()))
getZList = lambda: [int(x) - 1 for x in input().split()]

INF = float("inf")
MOD = 10**9 + 7
divide = lambda x: pow(x, MOD-2, MOD)

def read_n():
    return getN()

def read_list():
    return getList()

def initial_xo():
    return 0

def initial_su():
    return 0

def initial_ans():
    return 0

def initial_l():
    return 0

def initial_r():
    return 0

def initial_forward():
    return True

def r_equals_n(r, n):
    return r == n

def print_ans_and_return(ans):
    print(ans)
    return

def xo_su_equal(xo, su):
    return xo == su

def increase_ans_segment(ans, l, r):
    return ans + r - l + 1

def increase_ans_segment_no_eq(ans, l, r):
    return ans + r - l

def xor_val(a, b):
    return a ^ b

def add_val(a, b):
    return a + b

def sub_val(a, b):
    return a - b

def increase_r(r):
    return r + 1

def increase_l(l):
    return l + 1

def process_forward(xo, su, ans, l, r, lis):
    xo = xor_val(xo, lis[r])
    su = add_val(su, lis[r])
    if xo_su_equal(xo, su):
        ans = increase_ans_segment(ans, l, r)
        r = increase_r(r)
        return xo, su, ans, l, r, True
    else:
        return xo, su, ans, l, r, False

def process_backward(xo, su, ans, l, r, lis):
    xo = xor_val(xo, lis[l])
    su = sub_val(su, lis[l])
    if xo_su_equal(xo, su):
        ans = increase_ans_segment_no_eq(ans, l, r)
        r = increase_r(r)
        l = increase_l(l)
        return xo, su, ans, l, r, True
    else:
        l = increase_l(l)
        return xo, su, ans, l, r, False

def solve_single_case():
    n = read_n()
    lis = read_list()
    xo = initial_xo()
    su = initial_su()
    ans = initial_ans()
    l = initial_l()
    r = initial_r()
    forward = initial_forward()
    while True:
        if r_equals_n(r, n):
            print_ans_and_return(ans)
            return
        if forward:
            xo, su, ans, l, r, forward = process_forward(xo, su, ans, l, r, lis)
        else:
            xo, su, ans, l, r, forward = process_backward(xo, su, ans, l, r, lis)

def main_loop():
    n = read_n()
    for _ in range(n):
        solve_single_case()
    return

if __name__ == "__main__":
    solve_single_case()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27518370747566223
    2. '\n' → logprob: -2.77518367767334
    3. 'import' → logprob: -3.02518367767334
    4. '<|end|>' → logprob: -3.27518367767334
    5. '\' → logprob: -3.40018367767334
    6. '
' → logprob: -3.65018367767334
    7. '```' → logprob: -4.40018367767334
    8. '

' → logprob: -5.27518367767334
    9. '<|end|>' → logprob: -5.27518367767334
    10. ',' → logprob: -5.90018367767334

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8090347051620483
    2. '\n' → logprob: -1.5590347051620483
    3. 'import' → logprob: -2.309034824371338
    4. '
' → logprob: -2.434034824371338
    5. '```' → logprob: -3.059034824371338
    6. '\' → logprob: -3.309034824371338
    7. '

' → logprob: -3.309034824371338
    8. '<|end|>' → logprob: -4.059034824371338
    9. ',' → logprob: -5.059034824371338
    10. '' → logprob: -5.934034824371338

Token 7: ' copy' (ID: 5150)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.4993312358856201
    2. ' os' → logprob: -0.9993312358856201
    3. 'random' → logprob: -4.124331474304199
    4. ' random' → logprob: -4.999331474304199
    5. 're' → logprob: -7.249331474304199
    6. ' re' → logprob: -7.749331474304199
    7. ' numpy' → logprob: -9.1243314743042
    8. 'collections' → logprob: -9.2493314743042
    9. 'time' → logprob: -9.3743314743042
    10. 'numpy' → logprob: -9.4993314743042

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9408970475196838
    2. '.' → logprob: -1.565896987915039
    3. '<|end|>' → logprob: -1.940896987915039
    4. 'import' → logprob: -2.315896987915039
    5. '\n' → logprob: -2.690896987915039
    6. '

' → logprob: -3.440896987915039
    7. '\' → logprob: -4.190896987915039
    8. ',' → logprob: -4.565896987915039
    9. '```' → logprob: -4.565896987915039
    10. '<|end|>' → logprob: -4.690896987915039

Token 9: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.438079833984375
    2. '.' → logprob: -1.563079833984375
    3. 'import' → logprob: -1.938079833984375
    4. '\' → logprob: -2.188079833984375
    5. '\n' → logprob: -2.188079833984375
    6. ',' → logprob: -2.938079833984375
    7. '#' → logprob: -3.438079833984375
    8. '```' → logprob: -3.938079833984375
    9. 'def' → logprob: -4.188079833984375
    10. '<|end|>' → logprob: -4.188079833984375

Token 10: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.41957926750183105
    2. 'collections' → logprob: -1.169579267501831
    3. ' typing' → logprob: -4.04457950592041
    4. ' os' → logprob: -5.54457950592041
    5. ' itertools' → logprob: -5.66957950592041
    6. 'typing' → logprob: -6.04457950592041
    7. 'os' → logprob: -6.41957950592041
    8. ' datetime' → logprob: -7.04457950592041
    9. ' functools' → logprob: -7.54457950592041
    10. ' math' → logprob: -7.66957950592041

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'import' → logprob: -15.000000953674316
    3. 'queue' → logprob: -16.25
    4. ' queue' → logprob: -16.875
    5. ' import' → logprob: -17.125
    6. '.' → logprob: -18.125
    7. 'space' → logprob: -19.75
    8. 'n' → logprob: -20.125
    9. ' ' → logprob: -20.5
    10. 'i' → logprob: -20.75

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011168066412210464
    2. 'import' → logprob: -4.511168003082275
    3. ' ' → logprob: -9.136168479919434
    4. ' space' → logprob: -13.136168479919434
    5. '	import' → logprob: -13.136168479919434
    6. '<|end|>' → logprob: -13.261168479919434
    7. '.' → logprob: -13.386168479919434
    8. ' im' → logprob: -14.011168479919434
    9. 'space' → logprob: -14.136168479919434
    10. '_import' → logprob: -14.261168479919434

Token 13: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5780738592147827
    2. ' he' → logprob: -0.8280738592147827
    3. 'heap' → logprob: -6.578073978424072
    4. ' n' → logprob: -7.828073978424072
    5. 'n' → logprob: -8.953073501586914
    6. 'nl' → logprob: -9.703073501586914
    7. 'import' → logprob: -9.703073501586914
    8. ' ' → logprob: -9.953073501586914
    9. ' heap' → logprob: -10.703073501586914
    10. 'merge' → logprob: -12.203073501586914

Token 14: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.024035196751356125
    2. 'ap' → logprob: -3.7740352153778076
    3. 'a' → logprob: -7.1490349769592285
    4. 'aq' → logprob: -13.024035453796387
    5. 'apl' → logprob: -14.524035453796387
    6. 'q' → logprob: -15.149035453796387
    7. 'appa' → logprob: -15.399035453796387
    8. 'ап' → logprob: -15.524035453796387
    9. 'appen' → logprob: -16.02403450012207
    10. 'aps' → logprob: -17.02403450012207

Token 15: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00015038289711810648
    2. 'op' → logprob: -8.875150680541992
    3. 'us' → logprob: -11.875150680541992
    4. 'u' → logprob: -12.750150680541992
    5. 'o' → logprob: -14.500150680541992
    6. '```' → logprob: -17.500150680541992
    7. 'opleft' → logprob: -18.500150680541992
    8. '[' → logprob: -18.500150680541992
    9. 'osh' → logprob: -18.750150680541992
    10. '   ' → logprob: -19.000150680541992

Token 16: ',' (ID: 11)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.3498190641403198
    2. ',' → logprob: -1.3498190641403198
    3. '(' → logprob: -3.9748191833496094
    4. ' ' → logprob: -4.599819183349609
    5. 'import' → logprob: -5.349819183349609
    6. ' he' → logprob: -7.349819183349609
    7. ' and' → logprob: -7.599819183349609
    8. ' ,' → logprob: -7.974819183349609
    9. '_he' → logprob: -8.97481918334961
    10. '```' → logprob: -9.09981918334961

Token 17: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6327487230300903
    2. ' he' → logprob: -0.7577487230300903
    3. 'heap' → logprob: -8.8827486038208
    4. ' heap' → logprob: -12.7577486038208
    5. '```' → logprob: -13.0077486038208
    6. '.he' → logprob: -13.7577486038208
    7. 'hea' → logprob: -14.3827486038208
    8. '_he' → logprob: -14.3827486038208
    9. 'h' → logprob: -14.5077486038208
    10. ' ' → logprob: -14.7577486038208

Token 18: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.5048530030981055e-06
    2. 'ap' → logprob: -13.500001907348633
    3. '_app' → logprob: -18.625001907348633
    4. 'appen' → logprob: -19.250001907348633
    5. 'pp' → logprob: -19.375001907348633
    6. 'APP' → logprob: -19.500001907348633
    7. ' app' → logprob: -19.500001907348633
    8. 'App' → logprob: -19.875001907348633
    9. 'a' → logprob: -20.000001907348633
    10. 'appt' → logprob: -20.500001907348633

Token 19: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.20143595337867737
    2. 'op' → logprob: -1.701435923576355
    3. 'o' → logprob: -10.951436042785645
    4. 'u' → logprob: -12.826436042785645
    5. 'us' → logprob: -13.201436042785645
    6. 'ut' → logprob: -16.326435089111328
    7. 'osh' → logprob: -16.326435089111328
    8. '   ' → logprob: -16.951435089111328
    9. 'opp' → logprob: -16.951435089111328
    10. 'l' → logprob: -16.951435089111328

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7596165537834167
    2. '

' → logprob: -1.3846166133880615
    3. '\n' → logprob: -1.8846166133880615
    4. '\' → logprob: -3.0096166133880615
    5. 'def' → logprob: -3.8846166133880615
    6. '' → logprob: -4.134616374969482
    7. '(' → logprob: -4.509616374969482
    8. '```' → logprob: -5.259616374969482
    9. 'newline' → logprob: -5.384616374969482
    10. 'n' → logprob: -5.634616374969482

Token 21: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.025468673557043076
    2. 'he' → logprob: -4.275468826293945
    3. ' heap' → logprob: -4.525468826293945
    4. ' he' → logprob: -8.025468826293945
    5. 'merge' → logprob: -10.150468826293945
    6. 'n' → logprob: -10.775468826293945
    7. 'nl' → logprob: -11.400468826293945
    8. '.heap' → logprob: -12.275468826293945
    9. ' n' → logprob: -12.775468826293945
    10. '```' → logprob: -12.900468826293945

Token 22: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0895296260714531
    2. 'replace' → logprob: -2.464529514312744
    3. 'q' → logprob: -8.339529991149902
    4. 'push' → logprob: -9.089529991149902
    5. 'ush' → logprob: -9.464529991149902
    6. 'lify' → logprob: -9.589529991149902
    7. 'queue' → logprob: -11.089529991149902
    8. 'merge' → logprob: -11.964529991149902
    9. 's' → logprob: -11.964529991149902
    10. 'fy' → logprob: -12.089529991149902

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6505547761917114
    2. '

' → logprob: -0.7755547761917114
    3. '\n' → logprob: -4.650554656982422
    4. '' → logprob: -6.275554656982422
    5. '


' → logprob: -6.400554656982422
    6. '
' → logprob: -6.900554656982422
    7. 'n' → logprob: -7.400554656982422
    8. ' 

' → logprob: -7.400554656982422
    9. '\' → logprob: -7.525554656982422
    10. '```' → logprob: -8.150554656982422

Token 24: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.95461106300354
    2. '

' → logprob: -0.95461106300354
    3. 'def' → logprob: -2.32961106300354
    4. '\n' → logprob: -3.07961106300354
    5. '```' → logprob: -3.82961106300354
    6. '' → logprob: -4.329610824584961
    7. 'import' → logprob: -4.329610824584961
    8. '#' → logprob: -4.704610824584961
    9. ' 

' → logprob: -5.079610824584961
    10. '\' → logprob: -5.454610824584961

Token 25: ' functools' (ID: 142636)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.07218814641237259
    2. ' collections' → logprob: -2.697188138961792
    3. ' itertools' → logprob: -6.822188377380371
    4. 'queue' → logprob: -7.322188377380371
    5. ' queue' → logprob: -8.822188377380371
    6. '_' → logprob: -9.572188377380371
    7. ' ' → logprob: -9.822188377380371
    8. 'it' → logprob: -10.072188377380371
    9. '_queue' → logprob: -10.322188377380371
    10. ' functools' → logprob: -10.822188377380371

Token 26: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3183048665523529
    2. 'import' → logprob: -1.3183048963546753
    3. '.' → logprob: -5.693305015563965
    4. '_' → logprob: -7.693305015563965
    5. '_import' → logprob: -7.693305015563965
    6. ' ' → logprob: -7.818305015563965
    7. '	import' → logprob: -9.068305015563965
    8. '<|end|>' → logprob: -9.068305015563965
    9. '.import' → logprob: -10.318305015563965
    10. ' impor' → logprob: -11.193305015563965

Token 27: ' cmp' (ID: 57822)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4753466844558716
    2. ' l' → logprob: -0.9753466844558716
    3. 'reduce' → logprob: -7.225346565246582
    4. ' reduce' → logprob: -8.725346565246582
    5. ' wraps' → logprob: -8.975346565246582
    6. 'partial' → logprob: -9.600346565246582
    7. 'cmp' → logprob: -9.725346565246582
    8. 'wrap' → logprob: -9.725346565246582
    9. ' partial' → logprob: -10.475346565246582
    10. ' cmp' → logprob: -11.225346565246582

Token 28: '_to' (ID: 5089)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.04615207761526108
    2. 'u' → logprob: -4.046152114868164
    3. 'utor' → logprob: -5.046152114868164
    4. 'ute' → logprob: -5.421152114868164
    5. 'atch' → logprob: -5.546152114868164
    6. 'utable' → logprob: -6.546152114868164
    7. '_ut' → logprob: -6.671152114868164
    8. '_' → logprob: -7.046152114868164
    9. 'uter' → logprob: -7.171152114868164
    10. 'ush' → logprob: -7.171152114868164

Token 29: '_key' (ID: 6724)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0004586711002048105
    2. 'k' → logprob: -8.250458717346191
    3. '_key' → logprob: -9.375458717346191
    4. 'Key' → logprob: -9.750458717346191
    5. '-key' → logprob: -11.250458717346191
    6. '```' → logprob: -11.625458717346191
    7. 'ker' → logprob: -11.875458717346191
    8. 'ken' → logprob: -12.250458717346191
    9. 'ks' → logprob: -12.500458717346191
    10. 'x' → logprob: -13.250458717346191

Token 30: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.512947142124176
    2. '
' → logprob: -1.0129470825195312
    3. 'def' → logprob: -3.6379470825195312
    4. '\n' → logprob: -6.262947082519531
    5. ' 

' → logprob: -6.387947082519531
    6. 'import' → logprob: -6.512947082519531
    7. '' → logprob: -6.637947082519531
    8. '


' → logprob: -6.637947082519531
    9. '<|end|>' → logprob: -7.137947082519531
    10. '\' → logprob: -7.512947082519531

Token 31: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27030426263809204
    2. '

' → logprob: -1.7703042030334473
    3. 'd' → logprob: -3.7703042030334473
    4. '' → logprob: -4.020304203033447
    5. 'def' → logprob: -4.645304203033447
    6. '#' → logprob: -5.020304203033447
    7. '
' → logprob: -6.020304203033447
    8. 'import' → logprob: -7.020304203033447
    9. 'n' → logprob: -7.145304203033447
    10. '\' → logprob: -7.145304203033447

Token 32: ' bis' (ID: 7204)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7036998867988586
    2. ' collections' → logprob: -1.2036998271942139
    3. ' itertools' → logprob: -1.8286998271942139
    4. 'operator' → logprob: -3.953699827194214
    5. 'collections' → logprob: -4.328700065612793
    6. ' typing' → logprob: -4.578700065612793
    7. ' fractions' → logprob: -6.828700065612793
    8. ' bis' → logprob: -8.953700065612793
    9. 'typing' → logprob: -8.953700065612793
    10. '_operator' → logprob: -8.953700065612793

Token 33: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.319370302458992e-06
    2. 'e' → logprob: -12.625005722045898
    3. 'ec' → logprob: -13.500005722045898
    4. 'ected' → logprob: -15.125005722045898
    5. 'ecta' → logprob: -16.1250057220459
    6. 'ectl' → logprob: -16.1250057220459
    7. 'ector' → logprob: -17.1250057220459
    8. 't' → logprob: -17.2500057220459
    9. 'ectin' → logprob: -17.5000057220459
    10. 'ects' → logprob: -17.6250057220459

Token 34: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.28432875871658325
    2. 'import' → logprob: -1.4093286991119385
    3. ' ' → logprob: -6.534328937530518
    4. '_import' → logprob: -7.409328937530518
    5. '<|end|>' → logprob: -7.409328937530518
    6. '_' → logprob: -8.03432846069336
    7. '	import' → logprob: -9.03432846069336
    8. ' im' → logprob: -11.65932846069336
    9. ' ' → logprob: -11.78432846069336
    10. ' importar' → logprob: -11.90932846069336

Token 35: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.030169282108545303
    2. ' ins' → logprob: -3.5301692485809326
    3. 'bis' → logprob: -7.905169486999512
    4. 'ins' → logprob: -10.405169486999512
    5. ' ' → logprob: -11.030169486999512
    6. ' b' → logprob: -13.905169486999512
    7. ' in' → logprob: -14.030169486999512
    8. '	b' → logprob: -14.030169486999512
    9. '_ins' → logprob: -15.780169486999512
    10. ' bi' → logprob: -15.905169486999512

Token 36: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.334533878136426e-05
    2. 'e' → logprob: -10.125042915344238
    3. 'ec' → logprob: -13.250042915344238
    4. 'ected' → logprob: -14.000042915344238
    5. 'ectl' → logprob: -15.875042915344238
    6. 'ects' → logprob: -16.125043869018555
    7. '6' → logprob: -16.500043869018555
    8. 'ection' → logprob: -16.750043869018555
    9. 'ecta' → logprob: -17.000043869018555
    10. 'ectin' → logprob: -17.125043869018555

Token 37: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.11700128763914108
    2. '_' → logprob: -2.7420012950897217
    3. '_right' → logprob: -3.1170012950897217
    4. '<|end|>' → logprob: -6.617001056671143
    5. ',' → logprob: -9.7420015335083
    6. '_ins' → logprob: -10.3670015335083
    7. '.b' → logprob: -10.6170015335083
    8. 'left' → logprob: -10.7420015335083
    9. '_LEFT' → logprob: -10.7420015335083
    10. ' ' → logprob: -10.7420015335083

Token 38: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5018751621246338
    2. 'import' → logprob: -1.5018751621246338
    3. '

' → logprob: -2.126875162124634
    4. ',' → logprob: -3.876875162124634
    5. '\n' → logprob: -4.876874923706055
    6. '' → logprob: -5.376874923706055
    7. ' 

' → logprob: -5.626874923706055
    8. ' 
' → logprob: -6.001874923706055
    9. '<|end|>' → logprob: -6.001874923706055
    10. 'def' → logprob: -6.376874923706055

Token 39: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.28148993849754333
    2. ' bis' → logprob: -1.4064899682998657
    3. 'ins' → logprob: -8.781490325927734
    4. 'b' → logprob: -8.906490325927734
    5. ' ins' → logprob: -10.406490325927734
    6. '	b' → logprob: -11.531490325927734
    7. ' b' → logprob: -13.281490325927734
    8. '```' → logprob: -13.531490325927734
    9. ''b' → logprob: -13.593990325927734
    10. ' ' → logprob: -13.656490325927734

Token 40: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0005016815848648548
    2. 'sect' → logprob: -8.00050163269043
    3. 'e' → logprob: -9.00050163269043
    4. 'ec' → logprob: -11.37550163269043
    5. 'ected' → logprob: -11.75050163269043
    6. 'ext' → logprob: -11.87550163269043
    7. '```' → logprob: -12.25050163269043
    8. 'ct' → logprob: -12.37550163269043
    9. 'ects' → logprob: -13.50050163269043
    10. '_right' → logprob: -13.75050163269043

Token 41: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.2019454389810562
    2. '_' → logprob: -1.701945424079895
    3. '_

' → logprob: -8.951945304870605
    4. '__' → logprob: -9.576945304870605
    5. '<|end|>' → logprob: -9.826945304870605
    6. '_
' → logprob: -9.951945304870605
    7. '_left' → logprob: -10.076945304870605
    8. 'right' → logprob: -10.201945304870605
    9. '_RIGHT' → logprob: -10.576945304870605
    10. '_r' → logprob: -10.826945304870605

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28591832518577576
    2. '
' → logprob: -1.4109183549880981
    3. '<|end|>' → logprob: -6.035918235778809
    4. '\n' → logprob: -7.785918235778809
    5. '```' → logprob: -7.785918235778809
    6. '


' → logprob: -8.160918235778809
    7. '#' → logprob: -8.410918235778809
    8. '' → logprob: -8.535918235778809
    9. '
' → logprob: -8.660918235778809
    10. 'import' → logprob: -8.660918235778809

Token 43: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5344790816307068
    2. '
' → logprob: -0.9094790816307068
    3. '#' → logprob: -5.284479141235352
    4. '' → logprob: -6.409479141235352
    5. '
' → logprob: -7.034479141235352
    6. 'import' → logprob: -7.284479141235352
    7. '```' → logprob: -7.284479141235352
    8. 'def' → logprob: -8.034479141235352
    9. '<|end|>' → logprob: -8.034479141235352
    10. '


' → logprob: -8.159479141235352

Token 44: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.2753104269504547
    2. ' collections' → logprob: -1.5253103971481323
    3. ' itertools' → logprob: -3.775310516357422
    4. 'it' → logprob: -9.025310516357422
    5. 'operator' → logprob: -10.900310516357422
    6. 'random' → logprob: -11.775310516357422
    7. ' operator' → logprob: -12.275310516357422
    8. 'math' → logprob: -12.525310516357422
    9. ' fractions' → logprob: -12.525310516357422
    10. 'typing' → logprob: -12.775310516357422

Token 45: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.024245241656899452
    2. ' import' → logprob: -3.899245262145996
    3. '<|end|>' → logprob: -6.149245262145996
    4. 'abc' → logprob: -7.274245262145996
    5. '```' → logprob: -7.899245262145996
    6. '.' → logprob: -8.024245262145996
    7. ' ' → logprob: -10.024245262145996
    8. '	import' → logprob: -11.274245262145996
    9. ' defaultdict' → logprob: -11.399245262145996
    10. 'from' → logprob: -11.524245262145996

Token 46: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5762543082237244
    2. ' deque' → logprob: -0.8262543082237244
    3. 'deque' → logprob: -8.201253890991211
    4. ' de' → logprob: -10.951253890991211
    5. ' named' → logprob: -11.701253890991211
    6. ' abc' → logprob: -12.076253890991211
    7. ' ' → logprob: -12.701253890991211
    8. ' default' → logprob: -12.951253890991211
    9. ' Counter' → logprob: -13.826253890991211
    10. ' ' → logprob: -14.076253890991211

Token 47: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13106024265289307
    2. '
' → logprob: -2.1310601234436035
    3. 'import' → logprob: -6.3810601234436035
    4. '


' → logprob: -7.5060601234436035
    5. 'class' → logprob: -7.7560601234436035
    6. ' 

' → logprob: -8.131060600280762
    7. '```' → logprob: -8.381060600280762
    8. '
' → logprob: -8.631060600280762
    9. 'def' → logprob: -8.631060600280762
    10. ',' → logprob: -8.881060600280762

Token 48: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.38851723074913025
    2. 'deque' → logprob: -1.1385172605514526
    3. ' Counter' → logprob: -7.138517379760742
    4. 'Counter' → logprob: -7.138517379760742
    5. 'Ordered' → logprob: -10.888517379760742
    6. 'de' → logprob: -10.888517379760742
    7. 'Deque' → logprob: -11.388517379760742
    8. ' Ordered' → logprob: -12.138517379760742
    9. 'named' → logprob: -13.888517379760742
    10. ' named' → logprob: -14.013517379760742

Token 49: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.24168109893798828
    2. '
' → logprob: -1.6166810989379883
    3. '<|end|>' → logprob: -4.491681098937988
    4. 'import' → logprob: -5.991681098937988
    5. ' 

' → logprob: -7.616681098937988
    6. '


' → logprob: -7.741681098937988
    7. 'def' → logprob: -7.866681098937988
    8. 'class' → logprob: -8.491681098937988
    9. '```' → logprob: -8.616681098937988
    10. '<|end|>' → logprob: -8.741681098937988

Token 50: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.12432145327329636
    2. ' Counter' → logprob: -2.624321460723877
    3. 'Ordered' → logprob: -3.499321460723877
    4. 'named' → logprob: -4.624321460723877
    5. ' named' → logprob: -5.624321460723877
    6. ' Ordered' → logprob: -7.374321460723877
    7. 'Chain' → logprob: -9.249320983886719
    8. 'deque' → logprob: -10.624320983886719
    9. ' deque' → logprob: -11.874320983886719
    10. ' Chain' → logprob: -11.999320983886719

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8169313669204712
    2. '

' → logprob: -1.1919313669204712
    3. '<|end|>' → logprob: -1.4419313669204712
    4. '\n' → logprob: -5.066931247711182
    5. 'import' → logprob: -6.191931247711182
    6. ',' → logprob: -6.566931247711182
    7. '<|end|>' → logprob: -6.691931247711182
    8. 'def' → logprob: -6.691931247711182
    9. ' 

' → logprob: -6.941931247711182
    10. '```' → logprob: -7.066931247711182

Token 52: 'input' (ID: 2586)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20056681334972382
    2. 'def' → logprob: -2.3255667686462402
    3. '
' → logprob: -3.2005667686462402
    4. '#' → logprob: -4.20056676864624
    5. '\' → logprob: -4.20056676864624
    6. 'class' → logprob: -5.57556676864624
    7. 'n' → logprob: -6.07556676864624
    8. '\n' → logprob: -6.57556676864624
    9. '' → logprob: -6.82556676864624
    10. '```' → logprob: -7.07556676864624

Token 53: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026753442944027483
    2. '()' → logprob: -8.87526798248291
    3. '.' → logprob: -9.62526798248291
    4. '<|end|>' → logprob: -11.00026798248291
    5. ' (' → logprob: -11.62526798248291
    6. '```' → logprob: -11.75026798248291
    7. '("("' → logprob: -12.12526798248291
    8. ')' → logprob: -12.62526798248291
    9. '(
' → logprob: -13.12526798248291
    10. '(.)' → logprob: -13.37526798248291

Token 54: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3661026358604431
    2. 'input' → logprob: -2.116102695465088
    3. 'sys' → logprob: -2.116102695465088
    4. ' input' → logprob: -2.741102695465088
    5. ' lambda' → logprob: -7.241102695465088
    6. 'lambda' → logprob: -8.11610221862793
    7. '	sys' → logprob: -10.99110221862793
    8. '=sys' → logprob: -11.36610221862793
    9. '(sys' → logprob: -12.11610221862793
    10. 'raw' → logprob: -12.36610221862793

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3933054208755493
    2. '.' → logprob: -1.5183054208755493
    3. '.readline' → logprob: -2.2683053016662598
    4. '.stdout' → logprob: -7.14330530166626
    5. ' .' → logprob: -7.14330530166626
    6. '.setdefault' → logprob: -7.89330530166626
    7. '.input' → logprob: -8.143305778503418
    8. '.argv' → logprob: -8.893305778503418
    9. '.std' → logprob: -9.893305778503418
    10. '.get' → logprob: -10.268305778503418

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004316180013120174
    2. 'read' → logprob: -5.879316329956055
    3. '.read' → logprob: -6.504316329956055
    4. 'buffer' → logprob: -11.879316329956055
    5. '_read' → logprob: -13.004316329956055
    6. ' readline' → logprob: -13.754316329956055
    7. '.readlines' → logprob: -13.754316329956055
    8. '.' → logprob: -14.254316329956055
    9. '.buffer' → logprob: -14.879316329956055
    10. '.Read' → logprob: -15.129316329956055

Token 57: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7033118605613708
    2. '
' → logprob: -0.9533118605613708
    3. '

' → logprob: -2.5783119201660156
    4. '(' → logprob: -4.328311920166016
    5. '()' → logprob: -4.703311920166016
    6. '\n' → logprob: -4.953311920166016
    7. '(
' → logprob: -5.453311920166016
    8. '\' → logprob: -5.578311920166016
    9. '()

' → logprob: -6.578311920166016
    10. '()
' → logprob: -7.203311920166016

Token 58: 'get' (ID: 522)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2644144296646118
    2. '
' → logprob: -2.0144143104553223
    3. '

' → logprob: -2.3894143104553223
    4. 'class' → logprob: -5.764414310455322
    5. '\n' → logprob: -6.389414310455322
    6. '\' → logprob: -7.514414310455322
    7. '#' → logprob: -7.639414310455322
    8. '```' → logprob: -8.26441478729248
    9. '
' → logprob: -8.51441478729248
    10. '' → logprob: -9.01441478729248

Token 59: 'S' (ID: 50)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.18624579906463623
    2. 's' → logprob: -2.936245918273926
    3. 'input' → logprob: -2.936245918273926
    4. 'line' → logprob: -3.936245918273926
    5. '_input' → logprob: -4.311245918273926
    6. 'ter' → logprob: -4.436245918273926
    7. 'size' → logprob: -4.561245918273926
    8. '_line' → logprob: -6.186245918273926
    9. 'data' → logprob: -6.936245918273926
    10. 'char' → logprob: -7.686245918273926

Token 60: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5776805877685547
    2. 'tring' → logprob: -0.8276805877685547
    3. '()' → logprob: -7.202680587768555
    4. 'tri' → logprob: -7.827680587768555
    5. 't' → logprob: -8.327680587768555
    6. 'r' → logprob: -9.452680587768555
    7. '(tr' → logprob: -9.577680587768555
    8. 'trin' → logprob: -10.077680587768555
    9. 'ize' → logprob: -10.327680587768555
    10. '```' → logprob: -10.702680587768555

Token 61: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04880582541227341
    2. 'input' → logprob: -3.2988057136535645
    3. 'str' → logprob: -4.7988057136535645
    4. ' lambda' → logprob: -6.0488057136535645
    5. 'list' → logprob: -9.673806190490723
    6. '(lambda' → logprob: -10.548806190490723
    7. ' input' → logprob: -12.173806190490723
    8. 'sys' → logprob: -12.423806190490723
    9. 'int' → logprob: -13.048806190490723
    10. ' str' → logprob: -13.423806190490723

Token 62: ':' (ID: 25)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6756694316864014
    2. 'input' → logprob: -1.8006694316864014
    3. ':' → logprob: -1.9256694316864014
    4. ' input' → logprob: -2.5506694316864014
    5. ' str' → logprob: -2.9256694316864014
    6. 's' → logprob: -3.8006694316864014
    7. ' s' → logprob: -4.0506696701049805
    8. ':str' → logprob: -5.6756696701049805
    9. ' sys' → logprob: -6.5506696701049805
    10. ' :' → logprob: -7.0506696701049805

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10097894817590714
    2. ' input' → logprob: -2.3509788513183594
    3. 'sys' → logprob: -7.350978851318359
    4. ' sys' → logprob: -9.22597885131836
    5. 'list' → logprob: -11.22597885131836
    6. 'str' → logprob: -11.35097885131836
    7. 'int' → logprob: -12.60097885131836
    8. ' list' → logprob: -13.60097885131836
    9. ' str' → logprob: -15.22597885131836
    10. '(input' → logprob: -15.22597885131836

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002477677771821618
    2. '()' → logprob: -6.002477645874023
    3. ' ().' → logprob: -13.627477645874023
    4. '(' → logprob: -14.877477645874023
    5. '()<' → logprob: -16.377477645874023
    6. '()
' → logprob: -16.627477645874023
    7. '()

' → logprob: -16.627477645874023
    8. '.rstrip' → logprob: -17.002477645874023
    9. '()\' → logprob: -17.127477645874023
    10. '()[' → logprob: -17.502477645874023

Token 65: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014163628220558167
    2. 'rstrip' → logprob: -4.264163494110107
    3. 'split' → logprob: -16.514163970947266
    4. ' strip' → logprob: -17.764163970947266
    5. 'str' → logprob: -19.264163970947266
    6. 'decode' → logprob: -19.639163970947266
    7. '_strip' → logprob: -20.139163970947266
    8. 'rst' → logprob: -21.139163970947266
    9. 'rs' → logprob: -21.139163970947266
    10. '(strip' → logprob: -21.639163970947266

Token 66: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013378625735640526
    2. '()
' → logprob: -7.126338005065918
    3. '(' → logprob: -7.626338005065918
    4. '(
' → logprob: -11.376338005065918
    5. '()\' → logprob: -11.376338005065918
    6. '()

' → logprob: -11.876338005065918
    7. '().' → logprob: -12.001338005065918
    8. '#' → logprob: -13.626338005065918
    9. ')' → logprob: -13.626338005065918
    10. '()<' → logprob: -13.876338005065918

Token 67: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.28370746970176697
    2. 'def' → logprob: -1.6587074995040894
    3. '
' → logprob: -2.9087073802948
    4. 'g' → logprob: -7.783707618713379
    5. '()' → logprob: -8.033707618713379
    6. '

' → logprob: -8.658707618713379
    7. '#' → logprob: -9.158707618713379
    8. '
' → logprob: -9.408707618713379
    9. '(
' → logprob: -9.408707618713379
    10. '()
' → logprob: -9.408707618713379

Token 68: 'N' (ID: 45)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.003835828974843025
    2. 'N' → logprob: -5.753835678100586
    3. 'S' → logprob: -8.253835678100586
    4. 'i' → logprob: -8.753835678100586
    5. 'int' → logprob: -9.003835678100586
    6. 'A' → logprob: -10.253835678100586
    7. 'T' → logprob: -10.378835678100586
    8. 'F' → logprob: -11.378835678100586
    9. 'L' → logprob: -11.503835678100586
    10. 'Int' → logprob: -11.878835678100586

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43943920731544495
    2. '=' → logprob: -1.0644391775131226
    3. '()' → logprob: -5.189439296722412
    4. '(' → logprob: -5.439439296722412
    5. '=lambda' → logprob: -7.814439296722412
    6. ' ' → logprob: -9.064438819885254
    7. ')' → logprob: -9.814438819885254
    8. 's' → logprob: -10.689438819885254
    9. '=int' → logprob: -10.939438819885254
    10. '  ' → logprob: -11.064438819885254

Token 70: ' lambda' (ID: 27871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6014931797981262
    2. '(int' → logprob: -1.4764931201934814
    3. ' (' → logprob: -1.9764931201934814
    4. '(' → logprob: -2.9764931201934814
    5. 'int' → logprob: -4.1014933586120605
    6. 'lambda' → logprob: -4.7264933586120605
    7. ' lambda' → logprob: -4.8514933586120605
    8. ' int' → logprob: -7.8514933586120605
    9. ' ()' → logprob: -9.101492881774902
    10. '()' → logprob: -9.226492881774902

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5418459177017212
    2. 'int' → logprob: -1.5418459177017212
    3. ' int' → logprob: -2.1668457984924316
    4. ' :' → logprob: -3.1668457984924316
    5. ':int' → logprob: -3.1668457984924316
    6. '():' → logprob: -5.291845798492432
    7. ' lambda' → logprob: -8.91684627532959
    8. ' ():' → logprob: -9.29184627532959
    9. 'lambda' → logprob: -9.41684627532959
    10. ' ' → logprob: -9.91684627532959

Token 72: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029753267765045166
    2. ' int' → logprob: -3.5297532081604004
    3. '(int' → logprob: -13.154753684997559
    4. ' ' → logprob: -14.404753684997559
    5. '	int' → logprob: -15.404753684997559
    6. '=int' → logprob: -17.529752731323242
    7. 'i' → logprob: -17.654752731323242
    8. 'map' → logprob: -17.904752731323242
    9. ':int' → logprob: -17.904752731323242
    10. ' map' → logprob: -18.029752731323242

Token 73: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008637258782982826
    2. '(' → logprob: -4.758637428283691
    3. 'input' → logprob: -10.883637428283691
    4. '(
' → logprob: -13.008637428283691
    5. ' (' → logprob: -13.758637428283691
    6. ' input' → logprob: -15.008637428283691
    7. '(get' → logprob: -15.883637428283691
    8. '(

' → logprob: -16.133636474609375
    9. ',input' → logprob: -17.258636474609375
    10. ' ' → logprob: -17.383636474609375

Token 74: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01700100675225258
    2. '()' → logprob: -4.267001152038574
    3. '().' → logprob: -5.892001152038574
    4. ')' → logprob: -10.142001152038574
    5. ' ())' → logprob: -11.267001152038574
    6. '()]' → logprob: -12.017001152038574
    7. '()))' → logprob: -12.642001152038574
    8. '();)' → logprob: -12.767001152038574
    9. '()[' → logprob: -13.767001152038574
    10. '()
' → logprob: -13.892001152038574

Token 75: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03408118709921837
    2. 'def' → logprob: -3.409081220626831
    3. '
' → logprob: -8.15908145904541
    4. '_get' → logprob: -10.65908145904541
    5. ' get' → logprob: -11.03408145904541
    6. '\' → logprob: -11.15908145904541
    7. '```' → logprob: -11.78408145904541
    8. '(get' → logprob: -11.78408145904541
    9. '\n' → logprob: -12.03408145904541
    10. 'n' → logprob: -12.15908145904541

Token 76: 'List' (ID: 950)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04228867590427399
    2. 'List' → logprob: -3.4172887802124023
    3. 'A' → logprob: -5.792288780212402
    4. 'M' → logprob: -6.292288780212402
    5. 'Lst' → logprob: -6.292288780212402
    6. 'Ls' → logprob: -6.792288780212402
    7. 'S' → logprob: -8.542288780212402
    8. 'list' → logprob: -9.167288780212402
    9. 'LI' → logprob: -9.292288780212402
    10. 'Arr' → logprob: -9.292288780212402

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03594847396016121
    2. '=' → logprob: -3.4109485149383545
    3. '(' → logprob: -6.660948276519775
    4. '=lambda' → logprob: -7.535948276519775
    5. '(lambda' → logprob: -7.660948276519775
    6. ' ' → logprob: -12.160948753356934
    7. '＝' → logprob: -12.785948753356934
    8. ')' → logprob: -13.285948753356934
    9. 'lambda' → logprob: -13.410948753356934
    10. '()' → logprob: -13.910948753356934

Token 78: ' lambda' (ID: 27871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03292088210582733
    2. 'lambda' → logprob: -3.7829208374023438
    3. ' lambda' → logprob: -5.282920837402344
    4. '(' → logprob: -5.782920837402344
    5. ' (' → logprob: -6.657920837402344
    6. 'list' → logprob: -9.532920837402344
    7. '=lambda' → logprob: -9.532920837402344
    8. ' ' → logprob: -11.157920837402344
    9. '(list' → logprob: -11.157920837402344
    10. ' list' → logprob: -11.907920837402344

Token 79: ':' (ID: 25)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6576809287071228
    2. 'list' → logprob: -0.7826809287071228
    3. ':' → logprob: -4.157680988311768
    4. ':list' → logprob: -5.157680988311768
    5. '(list' → logprob: -5.782680988311768
    6. ' :' → logprob: -9.28268051147461
    7. ' ' → logprob: -9.90768051147461
    8. 'map' → logprob: -9.90768051147461
    9. ' map' → logprob: -10.15768051147461
    10. '=list' → logprob: -10.90768051147461

Token 80: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.038579341024160385
    2. ' list' → logprob: -3.288579225540161
    3. 'map' → logprob: -7.53857946395874
    4. ' map' → logprob: -12.163578987121582
    5. '[list' → logprob: -15.913578987121582
    6. '	list' → logprob: -16.0385799407959
    7. '(list' → logprob: -16.5385799407959
    8. '[' → logprob: -17.5385799407959
    9. ':list' → logprob: -17.5385799407959
    10. ' ' → logprob: -17.9135799407959

Token 81: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01821034960448742
    2. '(' → logprob: -4.018210411071777
    3. '(input' → logprob: -10.518210411071777
    4. '(int' → logprob: -10.893210411071777
    5. '()' → logprob: -12.143210411071777
    6. '(list' → logprob: -12.393210411071777
    7. 'map' → logprob: -13.768210411071777
    8. '(eval' → logprob: -13.893210411071777
    9. '(range' → logprob: -14.018210411071777
    10. '(m' → logprob: -14.643210411071777

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000561969296541065
    2. 'int' → logprob: -7.7505621910095215
    3. '(' → logprob: -9.125561714172363
    4. ',int' → logprob: -12.000561714172363
    5. '<int' → logprob: -12.125561714172363
    6. '=int' → logprob: -13.000561714172363
    7. '[int' → logprob: -13.250561714172363
    8. ' int' → logprob: -13.250561714172363
    9. '(
' → logprob: -13.625561714172363
    10. 'list' → logprob: -13.750561714172363

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14414836466312408
    2. ',input' → logprob: -2.019148349761963
    3. '(input' → logprob: -6.894148349761963
    4. 'input' → logprob: -8.269148826599121
    5. ' ,' → logprob: -8.894148826599121
    6. '(' → logprob: -10.269148826599121
    7. ',int' → logprob: -11.519148826599121
    8. ',(' → logprob: -11.894148826599121
    9. ' input' → logprob: -12.269148826599121
    10. ')' → logprob: -12.894148826599121

Token 84: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693114578723907
    2. ' input' → logprob: -2.1269311904907227
    3. ',input' → logprob: -14.251931190490723
    4. '	input' → logprob: -14.376931190490723
    5. ' ' → logprob: -14.376931190490723
    6. ')' → logprob: -14.501931190490723
    7. '(input' → logprob: -15.001931190490723
    8. '<input' → logprob: -16.001930236816406
    9. '
' → logprob: -16.251930236816406
    10. '    ' → logprob: -16.751930236816406

Token 85: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.7689099018462e-05
    2. '()' → logprob: -9.37508773803711
    3. '()))' → logprob: -14.00008773803711
    4. ')' → logprob: -14.62508773803711
    5. ' ().' → logprob: -14.87508773803711
    6. '(' → logprob: -15.00008773803711
    7. '())' → logprob: -15.12508773803711
    8. '.' → logprob: -16.00008773803711
    9. ' ' → logprob: -16.00008773803711
    10. '().__' → logprob: -16.00008773803711

Token 86: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.38916367292404175
    2. 'strip' → logprob: -1.1391637325286865
    3. 'rstrip' → logprob: -6.264163494110107
    4. 'read' → logprob: -8.264163970947266
    5. ')' → logprob: -9.014163970947266
    6. '))' → logprob: -13.264163970947266
    7. 'spl' → logprob: -13.514163970947266
    8. ' strip' → logprob: -13.639163970947266
    9. ' split' → logprob: -14.014163970947266
    10. 'decode' → logprob: -14.514163970947266

Token 87: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13816417753696442
    2. '))' → logprob: -2.1381642818450928
    3. '()' → logprob: -4.638164043426514
    4. '()))
' → logprob: -7.138164043426514
    5. '())' → logprob: -7.513164043426514
    6. '(' → logprob: -9.388164520263672
    7. ')' → logprob: -10.263164520263672
    8. '))
' → logprob: -11.638164520263672
    9. '()))

' → logprob: -12.013164520263672
    10. ' ))' → logprob: -12.263164520263672

Token 88: 'get' (ID: 522)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0550069734454155
    2. '
' → logprob: -3.680006980895996
    3. '#' → logprob: -4.430006980895996
    4. '\' → logprob: -5.555006980895996
    5. 'n' → logprob: -5.805006980895996
    6. '\n' → logprob: -5.930006980895996
    7. '' → logprob: -6.555006980895996
    8. 'for' → logprob: -7.430006980895996
    9. '

' → logprob: -7.430006980895996
    10. 'get' → logprob: -7.555006980895996

Token 89: 'Z' (ID: 57)
  Prédit: 'Str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Str' → logprob: -0.818169116973877
    2. 'List' → logprob: -1.193169116973877
    3. 'S' → logprob: -2.943169116973877
    4. 'Arr' → logprob: -3.068169116973877
    5. 'A' → logprob: -3.193169116973877
    6. 'Ans' → logprob: -3.818169116973877
    7. 'M' → logprob: -4.443169116973877
    8. 'Map' → logprob: -4.443169116973877
    9. 'Char' → logprob: -4.818169116973877
    10. 'Int' → logprob: -5.068169116973877

Token 90: 'List' (ID: 950)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3747718334197998
    2. 'List' → logprob: -1.9997718334197998
    3. '=' → logprob: -2.1247718334198
    4. '_list' → logprob: -3.2497718334198
    5. 'list' → logprob: -4.999772071838379
    6. '=lambda' → logprob: -5.124772071838379
    7. 'ip' → logprob: -6.749772071838379
    8. ' ' → logprob: -7.249772071838379
    9. '2' → logprob: -7.624772071838379
    10. 'ero' → logprob: -7.749772071838379

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004248281475156546
    2. '=' → logprob: -5.504248142242432
    3. '=lambda' → logprob: -8.75424861907959
    4. '(lambda' → logprob: -12.00424861907959
    5. ' ' → logprob: -12.50424861907959
    6. '(' → logprob: -13.50424861907959
    7. 'lambda' → logprob: -15.00424861907959
    8. '＝' → logprob: -16.254247665405273
    9. ' (=' → logprob: -16.754247665405273
    10. ' lambda' → logprob: -17.004247665405273

Token 92: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2301630973815918
    2. 'lambda' → logprob: -1.9801630973815918
    3. '(lambda' → logprob: -2.730163097381592
    4. '=lambda' → logprob: -6.105163097381592
    5. 'ambda' → logprob: -9.23016357421875
    6. ' =' → logprob: -12.23016357421875
    7. ' lamb' → logprob: -12.85516357421875
    8. '_lambda' → logprob: -12.98016357421875
    9. ' λ' → logprob: -14.73016357421875
    10. '.lambda' → logprob: -14.85516357421875

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3814356029033661
    2. ' :' → logprob: -1.2564356327056885
    3. ':list' → logprob: -4.006435394287109
    4. 'list' → logprob: -5.381435394287109
    5. '(lambda' → logprob: -5.756435394287109
    6. ' list' → logprob: -6.006435394287109
    7. '():' → logprob: -6.631435394287109
    8. ' lambda' → logprob: -7.131435394287109
    9. '(list' → logprob: -7.256435394287109
    10. 'lambda' → logprob: -7.381435394287109

Token 94: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009114259853959084
    2. ' list' → logprob: -5.1341142654418945
    3. 'lambda' → logprob: -5.8841142654418945
    4. ' lambda' → logprob: -8.759114265441895
    5. '[list' → logprob: -9.259114265441895
    6. 'map' → logprob: -10.134114265441895
    7. '[' → logprob: -10.759114265441895
    8. ' [' → logprob: -11.009114265441895
    9. 'get' → logprob: -11.509114265441895
    10. 'lam' → logprob: -11.634114265441895

Token 95: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02313995733857155
    2. '0' → logprob: -4.523139953613281
    3. 'i' → logprob: -4.523139953613281
    4. 'x' → logprob: -7.273139953613281
    5. 'a' → logprob: -8.648139953613281
    6. '*' → logprob: -9.523139953613281
    7. 'n' → logprob: -10.398139953613281
    8. ' ' → logprob: -10.648139953613281
    9. ' int' → logprob: -10.773139953613281
    10. '-' → logprob: -11.023139953613281

Token 96: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.031597916036844254
    2. '(i' → logprob: -3.531597852706909
    3. '(' → logprob: -7.406598091125488
    4. '(s' → logprob: -7.656598091125488
    5. '(c' → logprob: -8.281598091125488
    6. '(a' → logprob: -8.281598091125488
    7. '(_)' → logprob: -8.906598091125488
    8. '(_' → logprob: -9.531598091125488
    9. '(z' → logprob: -11.906598091125488
    10. '(ch' → logprob: -11.906598091125488

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14416715502738953
    2. ')-' → logprob: -2.644167184829712
    3. ')+' → logprob: -4.019166946411133
    4. '()' → logprob: -4.019166946411133
    5. '(x' → logprob: -4.519166946411133
    6. '-' → logprob: -4.769166946411133
    7. '())' → logprob: -6.144166946411133
    8. '()-' → logprob: -6.144166946411133
    9. '(input' → logprob: -6.644166946411133
    10. ' )' → logprob: -6.894166946411133

Token 98: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4090377688407898
    2. ' for' → logprob: -2.0340378284454346
    3. '()' → logprob: -2.2840378284454346
    4. 'for' → logprob: -3.0340378284454346
    5. '()-' → logprob: -4.0340375900268555
    6. '(x' → logprob: -4.1590375900268555
    7. ' -' → logprob: -4.6590375900268555
    8. '(input' → logprob: -5.0340375900268555
    9. '+' → logprob: -5.7840375900268555
    10. ')' → logprob: -7.6590375900268555

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01251271367073059
    2. ' ' → logprob: -4.387512683868408
    3. '<|end|>' → logprob: -12.762513160705566
    4. 'int' → logprob: -16.63751220703125
    5. '  ' → logprob: -17.01251220703125
    6. ' for' → logprob: -17.13751220703125
    7. '0' → logprob: -17.51251220703125
    8. 'x' → logprob: -17.51251220703125
    9. '<|end|>' → logprob: -17.63751220703125
    10. 'input' → logprob: -18.13751220703125

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'int' → logprob: -17.25002098083496
    4. 'for' → logprob: -18.00002098083496
    5. 'x' → logprob: -18.50002098083496
    6. '0' → logprob: -18.50002098083496
    7. 'input' → logprob: -19.62502098083496
    8. '   ' → logprob: -20.12502098083496
    9. '  ' → logprob: -20.37502098083496
    10. ' for' → logprob: -20.62502098083496

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31447896361351013
    2. ' for' → logprob: -1.3144789934158325
    3. '(x' → logprob: -6.939478874206543
    4. 'x' → logprob: -8.439478874206543
    5. ')' → logprob: -11.564478874206543
    6. '	for' → logprob: -11.689478874206543
    7. ' ' → logprob: -11.814478874206543
    8. ' x' → logprob: -12.439478874206543
    9. 'in' → logprob: -13.689478874206543
    10. '(' → logprob: -14.939478874206543

Token 102: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1275199055671692
    2. 'x' → logprob: -2.1275198459625244
    3. ' input' → logprob: -7.7525200843811035
    4. 'input' → logprob: -8.752519607543945
    5. '(x' → logprob: -12.877519607543945
    6. ' ' → logprob: -14.377519607543945
    7. 'get' → logprob: -15.627519607543945
    8. '_' → logprob: -16.502519607543945
    9. '<x' → logprob: -16.627519607543945
    10. 'range' → logprob: -16.752519607543945

Token 103: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.029933186247944832
    2. ' in' → logprob: -3.529933214187622
    3. 'input' → logprob: -9.154932975769043
    4. 'x' → logprob: -10.904932975769043
    5. 'import' → logprob: -10.904932975769043
    6. '(' → logprob: -11.279932975769043
    7. '(x' → logprob: -12.154932975769043
    8. '(input' → logprob: -12.654932975769043
    9. 'n' → logprob: -12.904932975769043
    10. 'inp' → logprob: -13.029932975769043

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269678920507431
    2. ' input' → logprob: -2.1269679069519043
    3. 'get' → logprob: -10.251967430114746
    4. ' get' → logprob: -13.001967430114746
    5. '(input' → logprob: -14.001967430114746
    6. ' ' → logprob: -14.501967430114746
    7. 'range' → logprob: -15.251967430114746
    8. '<input' → logprob: -15.876967430114746
    9. '
' → logprob: -16.501968383789062
    10. 'output' → logprob: -16.501968383789062

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004329341172706336
    2. '()' → logprob: -7.750432968139648
    3. '().__' → logprob: -13.625432968139648
    4. '()]' → logprob: -14.250432968139648
    5. '(' → logprob: -15.875432968139648
    6. '()[' → logprob: -16.25043296813965
    7. '()].' → logprob: -17.00043296813965
    8. ' ().' → logprob: -17.12543296813965
    9. 'split' → logprob: -17.25043296813965
    10. '())' → logprob: -17.37543296813965

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019908512476831675
    2. 'strip' → logprob: -6.251990795135498
    3. 'rstrip' → logprob: -9.876991271972656
    4. ' split' → logprob: -11.501991271972656
    5. 'spl' → logprob: -14.876991271972656
    6. 'read' → logprob: -15.626991271972656
    7. '(split' → logprob: -15.751991271972656
    8. ' strip' → logprob: -16.501991271972656
    9. 'decode' → logprob: -17.876991271972656
    10. '.split' → logprob: -18.626991271972656

Token 107: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6611985564231873
    2. '()' → logprob: -0.9111985564231873
    3. '()]' → logprob: -2.536198616027832
    4. ')' → logprob: -6.036198616027832
    5. '(' → logprob: -9.911198616027832
    6. ')]' → logprob: -10.036198616027832
    7. '();)' → logprob: -11.536198616027832
    8. '()
' → logprob: -11.661198616027832
    9. ' ())' → logprob: -11.661198616027832
    10. ']()' → logprob: -11.661198616027832

Token 108: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012523093027994037
    2. ')]' → logprob: -9.25012493133545
    3. '])' → logprob: -11.75012493133545
    4. ']' → logprob: -12.00012493133545
    5. ' )' → logprob: -12.50012493133545
    6. '）' → logprob: -13.00012493133545
    7. ')
' → logprob: -13.00012493133545
    8. '))' → logprob: -13.25012493133545
    9. ')])' → logprob: -13.25012493133545
    10. '())' → logprob: -13.62512493133545

Token 109: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012076440267264843
    2. 'class' → logprob: -4.637076377868652
    3. 'n' → logprob: -7.137076377868652
    4. 'N' → logprob: -7.512076377868652
    5. 'd' → logprob: -7.637076377868652
    6. '#' → logprob: -9.012076377868652
    7. 'for' → logprob: -9.762076377868652
    8. 'D' → logprob: -10.012076377868652
    9. 'dp' → logprob: -10.637076377868652
    10. 'T' → logprob: -10.887076377868652

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015426605939865
    2. '=' → logprob: -1.701542615890503
    3. ' ' → logprob: -9.326542854309082
    4. '=int' → logprob: -11.451542854309082
    5. ')' → logprob: -11.701542854309082
    6. '<|end|>' → logprob: -12.451542854309082
    7. ',' → logprob: -12.576542854309082
    8. '_' → logprob: -12.701542854309082
    9. '=float' → logprob: -12.951542854309082
    10. ' =
' → logprob: -12.951542854309082

Token 111: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3956213891506195
    2. 'float' → logprob: -1.645621418952942
    3. ' float' → logprob: -2.6456212997436523
    4. ' ' → logprob: -2.7706212997436523
    5. '1' → logprob: -8.770621299743652
    6. 'int' → logprob: -10.020621299743652
    7. '100' → logprob: -10.395621299743652
    8. ' int' → logprob: -11.770621299743652
    9. 'math' → logprob: -11.770621299743652
    10. '2' → logprob: -12.645621299743652

Token 112: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00041637211688794196
    2. '(' → logprob: -8.25041675567627
    3. ''' → logprob: -9.62541675567627
    4. ''in' → logprob: -9.62541675567627
    5. '("' → logprob: -12.25041675567627
    6. ''t' → logprob: -13.00041675567627
    7. ''a' → logprob: -13.12541675567627
    8. '('+' → logprob: -13.12541675567627
    9. '('-' → logprob: -13.37541675567627
    10. ''s' → logprob: -14.12541675567627

Token 113: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5695050358772278
    2. ''in' → logprob: -1.194504976272583
    3. ''' → logprob: -2.319504976272583
    4. '"' → logprob: -3.444504976272583
    5. 'in' → logprob: -7.944505214691162
    6. ''ex' → logprob: -8.819504737854004
    7. 'info' → logprob: -9.319504737854004
    8. ''ins' → logprob: -9.444504737854004
    9. '"in' → logprob: -9.444504737854004
    10. ''inc' → logprob: -9.694504737854004

Token 114: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31533700227737427
    2. ')' → logprob: -1.3153369426727295
    3. ')")' → logprob: -6.190337181091309
    4. ' )' → logprob: -12.190337181091309
    5. ')"' → logprob: -12.315337181091309
    6. '"' → logprob: -12.565337181091309
    7. ' ")' → logprob: -12.690337181091309
    8. '")
' → logprob: -13.190337181091309
    9. '()' → logprob: -13.315337181091309
    10. '')' → logprob: -13.940337181091309

Token 115: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03734246641397476
    2. 'class' → logprob: -3.5373425483703613
    3. 'n' → logprob: -5.662342548370361
    4. '
' → logprob: -6.412342548370361
    5. '\' → logprob: -6.912342548370361
    6. '#' → logprob: -7.787342548370361
    7. '\n' → logprob: -8.162342071533203
    8. '

' → logprob: -8.162342071533203
    9. 'd' → logprob: -9.287342071533203
    10. '```' → logprob: -9.662342071533203

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22644056379795074
    2. '=' → logprob: -1.7264405488967896
    3. ' ' → logprob: -3.726440668106079
    4. '<|end|>' → logprob: -8.4764404296875
    5. '_' → logprob: -8.6014404296875
    6. ')' → logprob: -8.9764404296875
    7. ',' → logprob: -10.2264404296875
    8. ' )' → logprob: -10.3514404296875
    9. ' =
' → logprob: -11.3514404296875
    10. ' ,' → logprob: -11.6014404296875

Token 117: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48692190647125244
    2. '10' → logprob: -0.9869219064712524
    3. '100' → logprob: -4.361921787261963
    4. '998' → logprob: -12.111922264099121
    5. '1' → logprob: -12.861922264099121
    6. 'int' → logprob: -14.861922264099121
    7. ' int' → logprob: -15.736922264099121
    8. ' ' → logprob: -16.111921310424805
    9. '999' → logprob: -16.736921310424805
    10. 'pow' → logprob: -17.111921310424805

Token 118: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005261152982711792
    2. '100' → logprob: -5.255260944366455
    3. '998' → logprob: -10.880261421203613
    4. '1' → logprob: -12.130261421203613
    5. ' ' → logprob: -12.755261421203613
    6. 'int' → logprob: -15.755261421203613
    7. '(' → logprob: -17.755260467529297
    8. 'pow' → logprob: -17.880260467529297
    9. '```' → logprob: -18.380260467529297
    10. '999' → logprob: -18.505260467529297

Token 119: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00721494946628809
    2. '09' → logprob: -5.6322150230407715
    3. '**' → logprob: -5.6322150230407715
    4. '000' → logprob: -11.382214546203613
    5. '00' → logprob: -12.007214546203613
    6. '0' → logprob: -12.632214546203613
    7. ' ' → logprob: -13.007214546203613
    8. '009' → logprob: -13.382214546203613
    9. '+' → logprob: -13.507214546203613
    10. '7' → logprob: -14.507214546203613

Token 120: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.5
    3. ' ' → logprob: -21.0
    4. '```' → logprob: -21.125
    5. '９' → logprob: -22.375
    6. '+' → logprob: -22.625
    7. '10' → logprob: -23.25
    8. '19' → logprob: -24.75
    9. '
' → logprob: -24.875
    10. '   ' → logprob: -25.25

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006472678505815566
    2. ' +' → logprob: -7.625647068023682
    3. '7' → logprob: -8.75064754486084
    4. '+
' → logprob: -15.00064754486084
    5. '＋' → logprob: -15.12564754486084
    6. ' plus' → logprob: -16.125646591186523
    7. ' ' → logprob: -16.375646591186523
    8. 'plus' → logprob: -17.125646591186523
    9. '```' → logprob: -18.250646591186523
    10. ' ' → logprob: -18.250646591186523

Token 122: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.25
    3. ' ' → logprob: -18.0
    4. '07' → logprob: -20.125
    5. '9' → logprob: -21.25
    6. '```' → logprob: -21.25
    7. '

' → logprob: -21.875
    8. '' → logprob: -22.125
    9. '７' → logprob: -22.125
    10. '   ' → logprob: -22.5

Token 123: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.625
    3. '```' → logprob: -20.625
    4. ' ' → logprob: -20.75
    5. '

' → logprob: -22.0
    6. '７' → logprob: -22.25
    7. '   ' → logprob: -22.375
    8. '07' → logprob: -22.375
    9. '' → logprob: -22.75
    10. '9' → logprob: -23.0

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1610787808895111
    2. 'def' → logprob: -2.036078691482544
    3. '

' → logprob: -4.661078929901123
    4. '<|end|>' → logprob: -5.411078929901123
    5. '\n' → logprob: -6.161078929901123
    6. '#' → logprob: -7.161078929901123
    7. '
' → logprob: -8.286078453063965
    8. '\' → logprob: -8.286078453063965
    9. '' → logprob: -8.411078453063965
    10. '```' → logprob: -8.786078453063965

Token 125: 'divide' (ID: 128988)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006632120814174414
    2. 'class' → logprob: -5.131632328033447
    3. '
' → logprob: -8.006631851196289
    4. '

' → logprob: -8.381631851196289
    5. '#' → logprob: -9.881631851196289
    6. '\' → logprob: -10.381631851196289
    7. '\n' → logprob: -11.506631851196289
    8. '<|end|>' → logprob: -11.756631851196289
    9. '' → logprob: -12.131631851196289
    10. '  
' → logprob: -12.631631851196289

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2204987108707428
    2. '=' → logprob: -1.7204986810684204
    3. 'd' → logprob: -5.470498561859131
    4. 'r' → logprob: -5.595498561859131
    5. '_' → logprob: -5.595498561859131
    6. 'by' → logprob: -5.720498561859131
    7. ' ' → logprob: -6.345498561859131
    8. '_by' → logprob: -7.345498561859131
    9. ',' → logprob: -7.595498561859131
    10. 'def' → logprob: -8.595499038696289

Token 127: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6417380571365356
    2. ' lambda' → logprob: -0.7667380571365356
    3. '/' → logprob: -5.641737937927246
    4. '(lambda' → logprob: -5.766737937927246
    5. 'MOD' → logprob: -7.141737937927246
    6. ' /' → logprob: -7.391737937927246
    7. '=lambda' → logprob: -8.391737937927246
    8. ' ' → logprob: -8.766737937927246
    9. ' MOD' → logprob: -9.141737937927246
    10. '10' → logprob: -9.391737937927246

Token 128: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23044972121715546
    2. ' a' → logprob: -2.480449676513672
    3. 'x' → logprob: -2.605449676513672
    4. 'a' → logprob: -3.105449676513672
    5. ' lambda' → logprob: -5.855449676513672
    6. 'lambda' → logprob: -7.730449676513672
    7. ' n' → logprob: -9.980449676513672
    8. ' ' → logprob: -10.230449676513672
    9. 'n' → logprob: -10.480449676513672
    10. ':' → logprob: -11.730449676513672

Token 129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39479556679725647
    2. ',' → logprob: -1.144795536994934
    3. 'x' → logprob: -5.3947954177856445
    4. ' :' → logprob: -6.0197954177856445
    5. ' x' → logprob: -7.3947954177856445
    6. ' ,' → logprob: -8.894795417785645
    7. ',x' → logprob: -9.394795417785645
    8. ':x' → logprob: -10.769795417785645
    9. ',y' → logprob: -11.394795417785645
    10. ',n' → logprob: -11.519795417785645

Token 130: ' pow' (ID: 9779)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43680909276008606
    2. ' x' → logprob: -1.0618090629577637
    3. 'pow' → logprob: -5.686809062957764
    4. '(x' → logprob: -6.186809062957764
    5. ' (' → logprob: -6.936809062957764
    6. ' pow' → logprob: -7.561809062957764
    7. '1' → logprob: -8.061809539794922
    8. '(' → logprob: -8.186809539794922
    9. ' ' → logprob: -8.936809539794922
    10. 'int' → logprob: -9.061809539794922

Token 131: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5234125852584839
    2. '(x' → logprob: -0.8984125852584839
    3. '(
' → logprob: -8.273412704467773
    4. '(pow' → logprob: -11.773412704467773
    5. '(div' → logprob: -11.898412704467773
    6. 'x' → logprob: -12.023412704467773
    7. '<|end|>' → logprob: -13.023412704467773
    8. 'div' → logprob: -13.398412704467773
    9. ',' → logprob: -13.398412704467773
    10. '(

' → logprob: -14.023412704467773

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011989162303507328
    2. '(M' → logprob: -5.261989116668701
    3. ',M' → logprob: -5.761989116668701
    4. 'MOD' → logprob: -6.261989116668701
    5. '2' → logprob: -7.011989116668701
    6. '(' → logprob: -8.26198959350586
    7. ' ,' → logprob: -8.51198959350586
    8. ',-' → logprob: -9.26198959350586
    9. ' MOD' → logprob: -9.76198959350586
    10. ')' → logprob: -10.01198959350586

Token 133: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.002913288539275527
    2. ' MOD' → logprob: -6.002913475036621
    3. '-' → logprob: -8.002913475036621
    4. ' ' → logprob: -9.752913475036621
    5. ' -' → logprob: -10.377913475036621
    6. '_MOD' → logprob: -11.752913475036621
    7. '.MOD' → logprob: -12.877913475036621
    8. '   ' → logprob: -13.127913475036621
    9. '2' → logprob: -14.752913475036621
    10. '  ' → logprob: -15.127913475036621

Token 134: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00029625516617670655
    2. ' -' → logprob: -8.125296592712402
    3. '−' → logprob: -16.250295639038086
    4. '–' → logprob: -17.375295639038086
    5. '```' → logprob: -19.750295639038086
    6. ' ' → logprob: -19.875295639038086
    7. '2' → logprob: -20.250295639038086
    8. '{-' → logprob: -20.625295639038086
    9. ' ' → logprob: -21.000295639038086
    10. '_MINUS' → logprob: -21.375295639038086

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.312501907348633
    4. '-' → logprob: -16.812501907348633
    5. '' → logprob: -17.375001907348633
    6. '

' → logprob: -17.437501907348633
    7. '۲' → logprob: -17.562501907348633
    8. '1' → logprob: -17.625001907348633
    9. '
' → logprob: -17.875001907348633
    10. '{' → logprob: -18.000001907348633

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007619995623826981
    2. ' ,' → logprob: -4.882619857788086
    3. ')' → logprob: -11.632619857788086
    4. ',b' → logprob: -14.132619857788086
    5. ',n' → logprob: -14.132619857788086
    6. ',module' → logprob: -14.257619857788086
    7. ',
' → logprob: -14.757619857788086
    8. ',input' → logprob: -15.132619857788086
    9. ',m' → logprob: -15.507619857788086
    10. ',x' → logprob: -15.507619857788086

Token 137: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0005530327325686812
    2. ' MOD' → logprob: -7.500553131103516
    3. '_MOD' → logprob: -17.250553131103516
    4. '.MOD' → logprob: -18.750553131103516
    5. ' ' → logprob: -19.000553131103516
    6. ')' → logprob: -19.125553131103516
    7. '   ' → logprob: -19.250553131103516
    8. 'MO' → logprob: -19.250553131103516
    9. '10' → logprob: -19.500553131103516
    10. 'MODULE' → logprob: -21.000553131103516

Token 138: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.125001907348633
    4. ',' → logprob: -17.250001907348633
    5. '),' → logprob: -17.375001907348633
    6. '))' → logprob: -17.500001907348633
    7. ')

' → logprob: -17.500001907348633
    8. ' ' → logprob: -17.750001907348633
    9. ')#' → logprob: -18.750001907348633
    10. '}' → logprob: -18.875001907348633

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013052113354206085
    2. 'class' → logprob: -4.388051986694336
    3. '#' → logprob: -7.763051986694336
    4. '\' → logprob: -10.513051986694336
    5. 'n' → logprob: -10.888051986694336
    6. 'd' → logprob: -11.013051986694336
    7. ' def' → logprob: -11.388051986694336
    8. ')' → logprob: -11.888051986694336
    9. '(' → logprob: -12.388051986694336
    10. '@' → logprob: -12.388051986694336

Token 140: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01985202170908451
    2. ' solve' → logprob: -4.019852161407471
    3. ' dfs' → logprob: -6.894852161407471
    4. 'main' → logprob: -8.019851684570312
    5. 'solve' → logprob: -9.144851684570312
    6. ' ' → logprob: -9.394851684570312
    7. ' bfs' → logprob: -10.269851684570312
    8. ' binary' → logprob: -10.269851684570312
    9. '_main' → logprob: -11.269851684570312
    10. ' solution' → logprob: -11.269851684570312

Token 141: '_n' (ID: 2170)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.027896663174033165
    2. '_line' → logprob: -4.402896881103516
    3. '()' → logprob: -4.527896881103516
    4. '_input' → logprob: -6.152896881103516
    5. '_list' → logprob: -7.402896881103516
    6. 'line' → logprob: -7.652896881103516
    7. '_' → logprob: -8.152896881103516
    8. '_data' → logprob: -8.402896881103516
    9. '():
' → logprob: -8.652896881103516
    10. '_lines' → logprob: -8.902896881103516

Token 142: '():
' (ID: 8595)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7775832414627075
    2. '()' → logprob: -1.6525832414627075
    3. 'ame' → logprob: -2.277583122253418
    4. 'umber' → logprob: -2.777583122253418
    5. 'ext' → logprob: -3.027583122253418
    6. 'ums' → logprob: -3.402583122253418
    7. '_' → logprob: -3.652583122253418
    8. 'umbers' → logprob: -3.777583122253418
    9. '_lines' → logprob: -3.902583122253418
    10. '_numbers' → logprob: -5.027583122253418

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1948237419128418
    2. ' n' → logprob: -2.569823741912842
    3. '(n' → logprob: -3.444823741912842
    4. '()' → logprob: -3.819823741912842
    5. 'n' → logprob: -3.944823741912842
    6. '(' → logprob: -4.944823741912842
    7. ' ()' → logprob: -5.069823741912842
    8. ' ' → logprob: -5.319823741912842
    9. ' return' → logprob: -6.319823741912842
    10. '():' → logprob: -6.694823741912842

Token 144: ' return' (ID: 622)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6000378727912903
    2. 'n' → logprob: -1.1000378131866455
    3. ' return' → logprob: -2.3500378131866455
    4. 'return' (adapté à ' return') → logprob: -3.8500378131866455
    5. '   ' → logprob: -6.725038051605225
    6. 'N' → logprob: -8.475037574768066
    7. ' ' → logprob: -9.600037574768066
    8. ' N' → logprob: -9.600037574768066
    9. ' pass' → logprob: -10.725037574768066
    10. 'l' → logprob: -10.850037574768066

Token 145: ' get' (ID: 717)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2793479859828949
    2. 'get' → logprob: -1.9043480157852173
    3. '[int' → logprob: -3.2793478965759277
    4. '[get' → logprob: -3.4043478965759277
    5. ' int' → logprob: -4.154347896575928
    6. ' get' → logprob: -5.279347896575928
    7. '[]' → logprob: -6.154347896575928
    8. 'list' → logprob: -7.654347896575928
    9. ' [' → logprob: -8.404348373413086
    10. '[' → logprob: -9.529348373413086

Token 146: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3874152898788452
    2. 'List' → logprob: -1.1374152898788452
    3. 'Int' → logprob: -8.387414932250977
    4. 'Line' → logprob: -8.887414932250977
    5. 'S' → logprob: -9.262414932250977
    6. 'L' → logprob: -9.512414932250977
    7. 'int' → logprob: -12.637414932250977
    8. '()' → logprob: -13.137414932250977
    9. 'Num' → logprob: -14.262414932250977
    10. '(' → logprob: -14.262414932250977

Token 147: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00033796546631492674
    2. '()
' → logprob: -8.250337600708008
    3. '(' → logprob: -9.750337600708008
    4. '()

' → logprob: -11.875337600708008
    5. '()+' → logprob: -12.875337600708008
    6. ' ()' → logprob: -13.250337600708008
    7. '().' → logprob: -13.750337600708008
    8. '(
' → logprob: -13.750337600708008
    9. '()]' → logprob: -14.000337600708008
    10. '()<' → logprob: -14.250337600708008

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34043920040130615
    2. '<|end|>' → logprob: -1.8404392004013062
    3. '
' → logprob: -2.3404393196105957
    4. '<|end|>' → logprob: -4.340439319610596
    5. ':' → logprob: -4.590439319610596
    6. '

' → logprob: -5.965439319610596
    7. '\n' → logprob: -6.465439319610596
    8. ' def' → logprob: -6.590439319610596
    9. ':def' → logprob: -6.715439319610596
    10. ')' → logprob: -7.090439319610596

Token 149: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.058102358132600784
    2. 'read' → logprob: -3.0581023693084717
    3. ' get' → logprob: -5.183102130889893
    4. ' main' → logprob: -5.933102130889893
    5. ' solve' → logprob: -7.808102130889893
    6. 'get' → logprob: -7.933102130889893
    7. 'main' → logprob: -9.05810260772705
    8. 'solve' → logprob: -9.68310260772705
    9. '_' → logprob: -9.80810260772705
    10. '_read' → logprob: -10.05810260772705

Token 150: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.07942824810743332
    2. '_' → logprob: -2.704428195953369
    3. '_n' → logprob: -5.954428195953369
    4. '_s' → logprob: -5.954428195953369
    5. '_l' → logprob: -6.704428195953369
    6. 'List' → logprob: -6.829428195953369
    7. '()' → logprob: -7.829428195953369
    8. '_array' → logprob: -8.079428672790527
    9. '_string' → logprob: -8.329428672790527
    10. '_line' → logprob: -8.329428672790527

Token 151: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00020246754866093397
    2. '():
' → logprob: -8.750202178955078
    3. ' ():' → logprob: -10.125202178955078
    4. '()' → logprob: -12.500202178955078
    5. '():

' → logprob: -16.375202178955078
    6. '():
' → logprob: -16.625202178955078
    7. '(' → logprob: -17.000202178955078
    8. ' ()' → logprob: -18.500202178955078
    9. '().' → logprob: -18.875202178955078
    10. '();' → logprob: -18.875202178955078

Token 152: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2392403483390808
    2. '():
' → logprob: -2.3642404079437256
    3. '   ' → logprob: -2.7392404079437256
    4. '()' → logprob: -3.8642404079437256
    5. 'return' → logprob: -4.1142401695251465
    6. ' return' → logprob: -4.9892401695251465
    7. ':' → logprob: -5.3642401695251465
    8. 'get' → logprob: -5.7392401695251465
    9. ':return' → logprob: -7.2392401695251465
    10. ':
' → logprob: -7.6142401695251465

Token 153: ' return' (ID: 622)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7333436608314514
    2. '   ' → logprob: -1.2333436012268066
    3. 'return' (adapté à ' return') → logprob: -1.4833436012268066
    4. ' return' → logprob: -6.733343601226807
    5. ' get' → logprob: -8.108344078063965
    6. ' ' → logprob: -12.108344078063965
    7. '    ' → logprob: -13.608344078063965
    8. '	return' → logprob: -13.608344078063965
    9. '	get' → logprob: -13.733344078063965
    10. '  ' → logprob: -13.858344078063965

Token 154: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0001234428636962548
    2. ' get' → logprob: -9.000123023986816
    3. '(get' → logprob: -17.000123977661133
    4. '[get' → logprob: -18.750123977661133
    5. 'list' → logprob: -19.000123977661133
    6. '	get' → logprob: -19.375123977661133
    7. '   ' → logprob: -19.625123977661133
    8. ' ' → logprob: -20.000123977661133
    9. 'copy' → logprob: -21.000123977661133
    10. '  ' → logprob: -21.000123977661133

Token 155: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: 0.0
    2. 'S' → logprob: -19.75
    3. ' List' → logprob: -20.125
    4. 'N' → logprob: -20.75
    5. 'L' → logprob: -21.625
    6. '_list' → logprob: -22.25
    7. '_List' → logprob: -22.375
    8. '	List' → logprob: -22.625
    9. 'Lis' → logprob: -22.75
    10. '(List' → logprob: -22.875

Token 156: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012154294381616637
    2. '(' → logprob: -9.875121116638184
    3. '()
' → logprob: -10.125121116638184
    4. '()

' → logprob: -11.625121116638184
    5. '<|end|>' → logprob: -12.125121116638184
    6. '()<' → logprob: -12.625121116638184
    7. '()]' → logprob: -12.875121116638184
    8. ' ()' → logprob: -13.250121116638184
    9. '()[' → logprob: -13.500121116638184
    10. '()`' → logprob: -14.000121116638184

Token 157: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013949580490589142
    2. '<|end|>' → logprob: -4.388949394226074
    3. '
' → logprob: -6.763949394226074
    4. '<|end|>' → logprob: -8.638949394226074
    5. '#' → logprob: -9.763949394226074
    6. '```' → logprob: -10.888949394226074
    7. '\' → logprob: -12.263949394226074
    8. 'class' → logprob: -12.763949394226074
    9. '

' → logprob: -12.888949394226074
    10. '  
' → logprob: -12.888949394226074

Token 158: ' initial' (ID: 4871)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.16438259184360504
    2. 'read' → logprob: -1.9143825769424438
    3. ' main' → logprob: -5.789382457733154
    4. 'main' → logprob: -7.539382457733154
    5. ' copy' → logprob: -7.914382457733154
    6. 'copy' → logprob: -9.164382934570312
    7. ' solve' → logprob: -10.164382934570312
    8. 'solve' → logprob: -10.914382934570312
    9. ' get' → logprob: -11.414382934570312
    10. '	read' → logprob: -12.664382934570312

Token 159: '_x' (ID: 7054)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.10444993525743484
    2. '_' → logprob: -2.354449987411499
    3. '_state' → logprob: -5.85444974899292
    4. 'ized' → logprob: -7.85444974899292
    5. 'ization' → logprob: -8.479450225830078
    6. '_value' → logprob: -8.979450225830078
    7. '_array' → logprob: -9.229450225830078
    8. '_data' → logprob: -9.479450225830078
    9. '_list' → logprob: -9.479450225830078
    10. 'izer' → logprob: -9.854450225830078

Token 160: 'o' (ID: 78)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6936459541320801
    2. 'or' → logprob: -2.19364595413208
    3. '():
' → logprob: -2.31864595413208
    4. '()' → logprob: -2.56864595413208
    5. '=' → logprob: -2.81864595413208
    6. '():

' → logprob: -3.19364595413208
    7. '():' → logprob: -3.44364595413208
    8. '_' → logprob: -4.06864595413208
    9. '()

' → logprob: -4.56864595413208
    10. 'yz' → logprob: -4.69364595413208

Token 161: '():
' (ID: 8595)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002574057725723833
    2. 'ring' → logprob: -9.25025749206543
    3. 'rs' → logprob: -9.87525749206543
    4. 'R' → logprob: -10.87525749206543
    5. 'rx' → logprob: -11.00025749206543
    6. 'red' → logprob: -11.75025749206543
    7. 'rex' → logprob: -11.75025749206543
    8. 'rcode' → logprob: -12.12525749206543
    9. 'rf' → logprob: -12.25025749206543
    10. 'res' → logprob: -12.37525749206543

Token 162: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4414512813091278
    2. '=' → logprob: -2.31645131111145
    3. 'return' → logprob: -2.31645131111145
    4. ' =' → logprob: -2.69145131111145
    5. '   ' → logprob: -2.94145131111145
    6. ' return' → logprob: -3.94145131111145
    7. ' ' → logprob: -4.191451072692871
    8. 'get' → logprob: -6.066451072692871
    9. '[]' → logprob: -7.191451072692871
    10. ' get' → logprob: -7.691451072692871

Token 163: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.047254934906959534
    2. 'x' → logprob: -3.672255039215088
    3. ' return' → logprob: -5.047255039215088
    4. '0' → logprob: -5.547255039215088
    5. 'n' → logprob: -5.922255039215088
    6. '   ' → logprob: -6.047255039215088
    7. 'xo' → logprob: -6.922255039215088
    8. 's' → logprob: -7.547255039215088
    9. 'global' → logprob: -7.547255039215088
    10. 'res' → logprob: -7.797255039215088

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007098127622157335
    2. ' ' → logprob: -5.007098197937012
    3. '[]' → logprob: -8.007098197937012
    4. '{}' → logprob: -10.757098197937012
    5. '[' → logprob: -11.632098197937012
    6. ' []' → logprob: -11.632098197937012
    7. '{' → logprob: -13.507098197937012
    8. '  ' → logprob: -13.507098197937012
    9. '   ' → logprob: -13.882098197937012
    10. '(' → logprob: -14.007098197937012

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016251911874860525
    2. '[]' → logprob: -6.501625061035156
    3. '{}' → logprob: -10.001625061035156
    4. '[' → logprob: -10.126625061035156
    5. 'default' → logprob: -11.251625061035156
    6. 'get' → logprob: -11.751625061035156
    7. '{' → logprob: -12.751625061035156
    8. ' ' → logprob: -12.876625061035156
    9. '[]}' → logprob: -13.126625061035156
    10. '[]
' → logprob: -13.251625061035156

Token 166: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09534960240125656
    2. '<|end|>' → logprob: -2.4703495502471924
    3. '
' → logprob: -5.2203497886657715
    4. '<|end|>' → logprob: -7.9703497886657715
    5. 'x' → logprob: -8.845349311828613
    6. '

' → logprob: -8.970349311828613
    7. '#' → logprob: -9.470349311828613
    8. '_' → logprob: -9.595349311828613
    9. '  
' → logprob: -9.970349311828613
    10. ' def' → logprob: -10.095349311828613

Token 167: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008229722734540701
    2. '
' → logprob: -8.125823020935059
    3. '#' → logprob: -8.500823020935059
    4. 'x' → logprob: -9.250823020935059
    5. '<|end|>' → logprob: -9.500823020935059
    6. '_' → logprob: -10.125823020935059
    7. 'class' → logprob: -10.875823020935059
    8. '<|end|>' → logprob: -11.125823020935059
    9. ')' → logprob: -11.375823020935059
    10. ' ' → logprob: -11.875823020935059

Token 168: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.33479976654052734
    2. ' main' → logprob: -2.0847997665405273
    3. 'initial' → logprob: -2.8347997665405273
    4. ' solve' → logprob: -2.8347997665405273
    5. 'main' → logprob: -4.834799766540527
    6. 'solve' → logprob: -5.084799766540527
    7. 'xor' → logprob: -5.459799766540527
    8. ' combine' → logprob: -5.584799766540527
    9. ' process' → logprob: -5.709799766540527
    10. ' xor' → logprob: -5.959799766540527

Token 169: '_s' (ID: 1278)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.7687626481056213
    2. '_' → logprob: -1.6437625885009766
    3. '_dp' → logprob: -3.0187625885009766
    4. '_count' → logprob: -3.2687625885009766
    5. '_y' → logprob: -3.5187625885009766
    6. '_val' → logprob: -3.7687625885009766
    7. '_cnt' → logprob: -4.143762588500977
    8. '_mask' → logprob: -4.143762588500977
    9. '_x' → logprob: -4.143762588500977
    10. '_list' → logprob: -4.268762588500977

Token 170: 'u' (ID: 84)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.12348649650812149
    2. 't' → logprob: -2.6234865188598633
    3. '():' → logprob: -3.9984865188598633
    4. '()' → logprob: -4.498486518859863
    5. 'et' → logprob: -4.998486518859863
    6. 'core' → logprob: -5.498486518859863
    7. '():
' → logprob: -7.248486518859863
    8. 'tring' → logprob: -7.873486518859863
    9. 'eq' → logprob: -7.873486518859863
    10. '=' → logprob: -7.998486518859863

Token 171: '():
' (ID: 8595)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8624639324116288e-06
    2. 'mm' → logprob: -14.875001907348633
    3. 'b' → logprob: -15.000001907348633
    4. 'ms' → logprob: -15.500001907348633
    5. 'mula' → logprob: -15.500001907348633
    6. '```' → logprob: -15.875001907348633
    7. 'м' → logprob: -16.125001907348633
    8. '
' → logprob: -16.250001907348633
    9. '()' → logprob: -16.250001907348633
    10. 'mma' → logprob: -16.500001907348633

Token 172: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12726520001888275
    2. '   ' → logprob: -2.127265214920044
    3. ' ' → logprob: -8.252264976501465
    4. 'return' → logprob: -9.752264976501465
    5. '=' → logprob: -11.752264976501465
    6. ' return' → logprob: -12.627264976501465
    7. '  ' → logprob: -12.752264976501465
    8. 'def' → logprob: -13.627264976501465
    9. '1' → logprob: -14.252264976501465
    10. '(' → logprob: -14.377264976501465

Token 173: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.376848902320489e-05
    2. ' ' → logprob: -9.375093460083008
    3. 'return' (adapté à ' return') → logprob: -11.875093460083008
    4. '   ' → logprob: -13.375093460083008
    5. 'INF' → logprob: -15.750093460083008
    6. ' return' → logprob: -16.250093460083008
    7. 'def' → logprob: -16.625093460083008
    8. '  ' → logprob: -16.750093460083008
    9. '1' → logprob: -17.625093460083008
    10. '=' → logprob: -17.625093460083008

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.44312788406387e-05
    2. ' ' → logprob: -9.875054359436035
    3. '[]' → logprob: -12.875054359436035
    4. '(' → logprob: -16.50005531311035
    5. '[]
' → logprob: -16.75005531311035
    6. '[' → logprob: -17.25005531311035
    7. '  ' → logprob: -17.75005531311035
    8. '   ' → logprob: -18.25005531311035
    9. 'set' → logprob: -18.62505531311035
    10. ' []' → logprob: -18.75005531311035

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. '[]' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.875006675720215
    4. '[' → logprob: -15.875006675720215
    5. 'set' → logprob: -17.25000762939453
    6. '{}' → logprob: -17.25000762939453
    7. '(' → logprob: -17.62500762939453
    8. '[]
' → logprob: -17.87500762939453
    9. '"' → logprob: -18.50000762939453
    10. 'default' → logprob: -18.87500762939453

Token 176: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0341704785823822
    2. '
' → logprob: -4.034170627593994
    3. '<|end|>' → logprob: -4.159170627593994
    4. '

' → logprob: -9.409170150756836
    5. '#' → logprob: -9.784170150756836
    6. '<|end|>' → logprob: -9.909170150756836
    7. '\' → logprob: -10.784170150756836
    8. '```' → logprob: -11.034170150756836
    9. '  
' → logprob: -11.534170150756836
    10. 'ndef' → logprob: -12.409170150756836

Token 177: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005007279687561095
    2. '
' → logprob: -8.500500679016113
    3. 'class' → logprob: -8.500500679016113
    4. '<|end|>' → logprob: -9.625500679016113
    5. '#' → logprob: -11.875500679016113
    6. 'x' → logprob: -12.625500679016113
    7. '<|end|>' → logprob: -12.875500679016113
    8. ')' → logprob: -13.000500679016113
    9. '

' → logprob: -13.125500679016113
    10. 'ndef' → logprob: -13.125500679016113

Token 178: ' initial' (ID: 4871)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combine' → logprob: -1.3627349138259888
    2. 'process' → logprob: -1.8627349138259888
    3. 'solve' → logprob: -1.9877349138259888
    4. 'merge' → logprob: -2.362734794616699
    5. 'initial' → logprob: -2.862734794616699
    6. 'main' → logprob: -3.237734794616699
    7. 'dfs' → logprob: -3.612734794616699
    8. ' solve' → logprob: -3.612734794616699
    9. ' process' → logprob: -3.612734794616699
    10. ' initial' → logprob: -3.737734794616699

Token 179: '_ans' (ID: 146254)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0747348070144653
    2. '_' → logprob: -1.8247348070144653
    3. '()' → logprob: -1.9497348070144653
    4. '_m' → logprob: -2.699734687805176
    5. '_t' → logprob: -2.824734687805176
    6. '_c' → logprob: -2.949734687805176
    7. '_list' → logprob: -3.949734687805176
    8. '_l' → logprob: -4.074734687805176
    9. '_v' → logprob: -4.199734687805176
    10. '_count' → logprob: -4.324734687805176

Token 180: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009374279179610312
    2. '():
' → logprob: -7.125937461853027
    3. '()' → logprob: -9.250937461853027
    4. ' ():' → logprob: -10.250937461853027
    5. 'def' → logprob: -14.250937461853027
    6. '():
' → logprob: -15.125937461853027
    7. ' ()' → logprob: -15.625937461853027
    8. '_' → logprob: -15.750937461853027
    9. '():

' → logprob: -15.875937461853027
    10. '(' → logprob: -16.12593650817871

Token 181: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3315430283546448
    2. 'INF' → logprob: -1.45654296875
    3. ' INF' → logprob: -3.95654296875
    4. 'None' → logprob: -4.33154296875
    5. ' None' → logprob: -5.70654296875
    6. 'inf' → logprob: -5.83154296875
    7. '-' → logprob: -6.08154296875
    8. '[]' → logprob: -6.20654296875
    9. ' ' → logprob: -6.45654296875
    10. '=' → logprob: -6.95654296875

Token 182: ' return' (ID: 622)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.5935238599777222
    2. '0' → logprob: -0.8435238599777222
    3. '-' → logprob: -4.718523979187012
    4. '-INF' → logprob: -6.093523979187012
    5. 'None' → logprob: -6.218523979187012
    6. '-inf' → logprob: -6.468523979187012
    7. 'inf' → logprob: -6.968523979187012
    8. 'float' → logprob: -7.093523979187012
    9. ' INF' → logprob: -7.843523979187012
    10. '[]' → logprob: -8.093523979187012

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3704002797603607
    2. ' ' → logprob: -1.370400309562683
    3. ' None' → logprob: -3.7454001903533936
    4. 'None' → logprob: -3.7454001903533936
    5. '[]' → logprob: -5.495400428771973
    6. ' []' → logprob: -6.620400428771973
    7. '-' → logprob: -6.995400428771973
    8. ' -' → logprob: -7.495400428771973
    9. 'INF' → logprob: -7.870400428771973
    10. ' INF' → logprob: -8.495400428771973

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37144243717193604
    2. '[]' → logprob: -1.871442437171936
    3. '-' → logprob: -2.2464423179626465
    4. 'INF' → logprob: -3.4964423179626465
    5. 'None' → logprob: -4.8714423179626465
    6. '-INF' → logprob: -5.1214423179626465
    7. '-inf' → logprob: -5.9964423179626465
    8. 'float' → logprob: -6.2464423179626465
    9. 'inf' → logprob: -7.2464423179626465
    10. '""' → logprob: -7.4964423179626465

Token 185: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2680361568927765
    2. '<|end|>' → logprob: -1.518036127090454
    3. '
' → logprob: -4.268036365509033
    4. '<|end|>' → logprob: -7.143036365509033
    5. '#' → logprob: -7.893036365509033
    6. '\' → logprob: -8.893035888671875
    7. '_' → logprob: -8.893035888671875
    8. '\n' → logprob: -9.268035888671875
    9. ' def' → logprob: -9.268035888671875
    10. '

' → logprob: -9.768035888671875

Token 186: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004027865652460605
    2. '
' → logprob: -8.250402450561523
    3. 'class' → logprob: -10.000402450561523
    4. 'd' → logprob: -10.250402450561523
    5. '\' → logprob: -10.625402450561523
    6. '#' → logprob: -11.750402450561523
    7. '

' → logprob: -12.375402450561523
    8. '' → logprob: -12.625402450561523
    9. '\n' → logprob: -12.625402450561523
    10. 'n' → logprob: -12.750402450561523

Token 187: ' initial' (ID: 4871)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.3687049448490143
    2. ' main' → logprob: -1.243704915046692
    3. 'solve' → logprob: -4.368704795837402
    4. 'main' → logprob: -5.993704795837402
    5. ' dfs' → logprob: -6.118704795837402
    6. ' initial' → logprob: -6.618704795837402
    7. ' merge' → logprob: -8.118704795837402
    8. ' process' → logprob: -8.243704795837402
    9. ' solution' → logprob: -8.368704795837402
    10. 'dfs' → logprob: -8.993704795837402

Token 188: '_l' (ID: 1478)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.6188331842422485
    2. '_state' → logprob: -2.743833065032959
    3. '_count' → logprob: -2.993833065032959
    4. '_map' → logprob: -3.118833065032959
    5. '_' → logprob: -3.243833065032959
    6. '_stack' → logprob: -3.493833065032959
    7. '_val' → logprob: -3.743833065032959
    8. '_sum' → logprob: -3.868833065032959
    9. '_x' → logprob: -4.118833065032959
    10. '_cnt' → logprob: -4.493833065032959

Token 189: '():
' (ID: 8595)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.021629756316542625
    2. 'ist' → logprob: -4.271629810333252
    3. '()' → logprob: -5.646629810333252
    4. 'e' → logprob: -6.521629810333252
    5. 'en' → logprob: -6.896629810333252
    6. 'ef' → logprob: -7.771629810333252
    7. 'ast' → logprob: -8.396629333496094
    8. 'ength' → logprob: -9.271629333496094
    9. 'r' → logprob: -9.396629333496094
    10. 'st' → logprob: -9.521629333496094

Token 190: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13341867923736572
    2. '():' → logprob: -2.133418560028076
    3. '():
' → logprob: -5.633418560028076
    4. '()' → logprob: -6.258418560028076
    5. 'return' → logprob: -8.258419036865234
    6. 'def' → logprob: -8.383419036865234
    7. '   ' → logprob: -8.758419036865234
    8. '):' → logprob: -9.633419036865234
    9. ' ' → logprob: -9.883419036865234
    10. '()
' → logprob: -10.133419036865234

Token 191: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01281640212982893
    2. 'return' (adapté à ' return') → logprob: -4.512816429138184
    3. 'INF' → logprob: -7.637816429138184
    4. '-' → logprob: -7.887816429138184
    5. ' ' → logprob: -8.137816429138184
    6. 'def' → logprob: -8.387816429138184
    7. '[]' → logprob: -8.637816429138184
    8. ' return' → logprob: -9.387816429138184
    9. 'inf' → logprob: -10.387816429138184
    10. 'float' → logprob: -10.387816429138184

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1068757176399231
    2. '-' → logprob: -2.3568756580352783
    3. '[]' → logprob: -5.106875896453857
    4. ' ' → logprob: -8.7318754196167
    5. '-INF' → logprob: -8.9818754196167
    6. ' -' → logprob: -9.6068754196167
    7. 'INF' → logprob: -9.8568754196167
    8. 'float' → logprob: -9.9818754196167
    9. '-inf' → logprob: -10.1068754196167
    10. 'None' → logprob: -10.2318754196167

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1117406040430069
    2. '-' → logprob: -2.3617405891418457
    3. '[]' → logprob: -4.736740589141846
    4. '-INF' → logprob: -6.236740589141846
    5. 'INF' → logprob: -8.111741065979004
    6. '-inf' → logprob: -8.361741065979004
    7. 'None' → logprob: -9.611741065979004
    8. 'float' → logprob: -10.486741065979004
    9. '{}' → logprob: -10.611741065979004
    10. ' ' → logprob: -10.861741065979004

Token 194: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00030388421146199107
    2. '<|end|>' → logprob: -8.125304222106934
    3. '<|end|>' → logprob: -12.375304222106934
    4. '
' → logprob: -13.875304222106934
    5. '```' → logprob: -14.000304222106934
    6. ' def' → logprob: -14.250304222106934
    7. 'ndef' → logprob: -15.000304222106934
    8. '\' → logprob: -15.500304222106934
    9. '_def' → logprob: -15.875304222106934
    10. '#' → logprob: -15.875304222106934

Token 196: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3870876729488373
    2. ' initial' → logprob: -1.1370877027511597
    3. '_initial' → logprob: -9.13708782196045
    4. '(initial' → logprob: -9.76208782196045
    5. '	initial' → logprob: -11.13708782196045
    6. 'n' → logprob: -11.13708782196045
    7. 'def' → logprob: -12.63708782196045
    8. 'read' → logprob: -12.76208782196045
    9. 'Initial' → logprob: -13.13708782196045
    10. 'l' → logprob: -13.13708782196045

Token 197: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0010986573761329055
    2. 'r' → logprob: -7.7510986328125
    3. '_h' → logprob: -8.7510986328125
    4. '_l' → logprob: -8.8760986328125
    5. '_s' → logprob: -9.5010986328125
    6. '_' → logprob: -9.7510986328125
    7. '_u' → logprob: -10.2510986328125
    8. '_t' → logprob: -10.6260986328125
    9. '_d' → logprob: -10.7510986328125
    10. '_m' → logprob: -10.7510986328125

Token 198: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.698698704596609e-05
    2. '():
' → logprob: -9.500097274780273
    3. '()' → logprob: -10.875097274780273
    4. ' ():' → logprob: -12.750097274780273
    5. '():
' → logprob: -16.875097274780273
    6. 'def' → logprob: -17.125097274780273
    7. '(' → logprob: -17.250097274780273
    8. ':' → logprob: -17.375097274780273
    9. '():

' → logprob: -17.750097274780273
    10. '):' → logprob: -17.750097274780273

Token 199: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00201595202088356
    2. '   ' → logprob: -6.252016067504883
    3. ' ' → logprob: -9.752016067504883
    4. 'return' → logprob: -10.502016067504883
    5. '()' → logprob: -14.127016067504883
    6. 'def' → logprob: -14.752016067504883
    7. '  ' → logprob: -15.002016067504883
    8. '(' → logprob: -15.252016067504883
    9. ' return' → logprob: -16.877016067504883
    10. '    ' → logprob: -18.502016067504883

Token 200: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03815578669309616
    2. 'return' (adapté à ' return') → logprob: -3.2881557941436768
    3. '   ' → logprob: -9.538155555725098
    4. ' ' → logprob: -10.913155555725098
    5. ' return' → logprob: -11.288155555725098
    6. 'def' → logprob: -11.413155555725098
    7. '  ' → logprob: -15.288155555725098
    8. '	return' → logprob: -15.663155555725098
    9. '()' → logprob: -17.413156509399414
    10. '(' → logprob: -17.663156509399414

Token 201: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12692926824092865
    2. '0' → logprob: -2.12692928314209
    3. '  ' → logprob: -14.00192928314209
    4. ' ' → logprob: -15.75192928314209
    5. '(' → logprob: -16.501928329467773
    6. '   ' → logprob: -17.001928329467773
    7. ')' → logprob: -17.126928329467773
    8. ' -' → logprob: -17.376928329467773
    9. ' (' → logprob: -17.751928329467773
    10. 'r' → logprob: -17.876928329467773

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000565541791729629
    2. '-' → logprob: -7.500565528869629
    3. ' ' → logprob: -11.875565528869629
    4. 'INF' → logprob: -13.000565528869629
    5. 'n' → logprob: -13.625565528869629
    6. ' -' → logprob: -14.500565528869629
    7. 'float' → logprob: -14.875565528869629
    8. '(' → logprob: -15.125565528869629
    9. '1' → logprob: -15.750565528869629
    10. 'len' → logprob: -15.875565528869629

Token 203: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8475632667541504
    2. '
' → logprob: -1.2225632667541504
    3. '<|end|>' → logprob: -1.4725632667541504
    4. ':' → logprob: -3.3475632667541504
    5. '#' → logprob: -5.34756326675415
    6. '

' → logprob: -5.72256326675415
    7. ':def' → logprob: -6.59756326675415
    8. '<|end|>' → logprob: -6.84756326675415
    9. '\n' → logprob: -7.47256326675415
    10. ' def' → logprob: -7.97256326675415

Token 204: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014013137842994183
    2. 'class' → logprob: -9.000140190124512
    3. '#' → logprob: -12.000140190124512
    4. '
' → logprob: -12.250140190124512
    5. '\' → logprob: -13.250140190124512
    6. 'd' → logprob: -13.500140190124512
    7. 'a' → logprob: -15.000140190124512
    8. '

' → logprob: -15.000140190124512
    9. 'n' → logprob: -15.250140190124512
    10. '```' → logprob: -15.625140190124512

Token 205: ' initial' (ID: 4871)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21296046674251556
    2. ' initial' → logprob: -2.3379604816436768
    3. ' solve' → logprob: -2.7129604816436768
    4. 'main' → logprob: -4.337960243225098
    5. 'solve' → logprob: -5.462960243225098
    6. ' process' → logprob: -5.712960243225098
    7. 'initial' → logprob: -5.712960243225098
    8. ' solution' → logprob: -6.462960243225098
    9. ' merge' → logprob: -7.587960243225098
    10. 'process' → logprob: -7.837960243225098

Token 206: '_forward' (ID: 75888)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.6078838109970093
    2. '_l' → logprob: -1.7328838109970093
    3. '_m' → logprob: -1.9828838109970093
    4. '_' → logprob: -2.107883930206299
    5. '_x' → logprob: -2.732883930206299
    6. '_p' → logprob: -2.857883930206299
    7. '_a' → logprob: -2.857883930206299
    8. '_d' → logprob: -3.482883930206299
    9. '_i' → logprob: -3.482883930206299
    10. '_v' → logprob: -3.857883930206299

Token 207: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16287264227867126
    2. '():
' → logprob: -1.9128726720809937
    3. '()' → logprob: -7.287872791290283
    4. '_direction' → logprob: -7.287872791290283
    5. ' ():' → logprob: -8.037872314453125
    6. '():
' → logprob: -8.662872314453125
    7. '_' → logprob: -9.162872314453125
    8. '():

' → logprob: -9.662872314453125
    9. '_index' → logprob: -9.787872314453125
    10. 's' → logprob: -9.912872314453125

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9589531421661377
    2. 'True' → logprob: -1.0839531421661377
    3. ' True' → logprob: -1.4589531421661377
    4. 'False' → logprob: -3.5839531421661377
    5. '0' → logprob: -4.583952903747559
    6. ' False' → logprob: -5.583952903747559
    7. 'return' → logprob: -6.083952903747559
    8. ' return' → logprob: -7.333952903747559
    9. '[]' → logprob: -7.708952903747559
    10. ' ' → logprob: -7.958952903747559

Token 209: ' return' (ID: 622)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.05815646052360535
    2. 'False' → logprob: -3.3081564903259277
    3. '0' → logprob: -4.183156490325928
    4. 'lambda' → logprob: -6.058156490325928
    5. ' True' → logprob: -6.308156490325928
    6. '[]' → logprob: -8.05815601348877
    7. ' ' → logprob: -10.30815601348877
    8. ' False' → logprob: -10.43315601348877
    9. 'return' (adapté à ' return') → logprob: -10.55815601348877
    10. 'def' → logprob: -10.80815601348877

Token 210: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.08481351286172867
    2. 'False' → logprob: -2.8348135948181152
    3. '0' → logprob: -3.9598135948181152
    4. '[]' → logprob: -5.834813594818115
    5. ' True' → logprob: -7.709813594818115
    6. 'None' → logprob: -9.209813117980957
    7. '1' → logprob: -11.334813117980957
    8. ' False' → logprob: -11.834813117980957
    9. '{}' → logprob: -12.209813117980957
    10. ' ' → logprob: -12.209813117980957

Token 211: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008668933995068073
    2. '
' → logprob: -5.883668899536133
    3. 'd' → logprob: -6.258668899536133
    4. '\' → logprob: -6.383668899536133
    5. '\n' → logprob: -6.633668899536133
    6. '#' → logprob: -8.008668899536133
    7. 'a' → logprob: -8.508668899536133
    8. 'n' → logprob: -9.883668899536133
    9. '<|end|>' → logprob: -10.258668899536133
    10. 'de' → logprob: -10.258668899536133

Token 213: ' r' (ID: 428)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.15017308294773102
    2. 'initial' → logprob: -2.0251731872558594
    3. ' main' → logprob: -5.150173187255859
    4. 'main' → logprob: -6.775173187255859
    5. ' solve' → logprob: -8.65017318725586
    6. 'solve' → logprob: -9.65017318725586
    7. 'True' → logprob: -10.65017318725586
    8. ' True' → logprob: -11.02517318725586
    9. 'None' → logprob: -11.15017318725586
    10. ' process' → logprob: -11.15017318725586

Token 214: '_equals' (ID: 165870)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.326039582490921
    2. 'ead' → logprob: -2.3260395526885986
    3. 'ever' → logprob: -2.7010395526885986
    4. 'ef' → logprob: -3.0760395526885986
    5. 'eturn' → logprob: -3.4510395526885986
    6. 'e' → logprob: -4.076039791107178
    7. 'un' → logprob: -4.576039791107178
    8. 'ec' → logprob: -6.326039791107178
    9. 'ight' → logprob: -7.076039791107178
    10. 'edef' → logprob: -7.451039791107178

Token 215: '_n' (ID: 2170)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7845067381858826
    2. '(initial' → logprob: -1.7845067977905273
    3. '(' → logprob: -2.1595067977905273
    4. 'def' → logprob: -2.5345067977905273
    5. '(r' → logprob: -2.7845067977905273
    6. '(l' → logprob: -3.1595067977905273
    7. '_r' → logprob: -3.5345067977905273
    8. 'initial' → logprob: -4.534506797790527
    9. '(a' → logprob: -4.534506797790527
    10. ' (' → logprob: -5.284506797790527

Token 216: '(r' (ID: 4729)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007902468554675579
    2. '()' → logprob: -5.0079026222229
    3. '():
' → logprob: -7.2579026222229
    4. 'u' → logprob: -8.507902145385742
    5. ' ():' → logprob: -9.507902145385742
    6. '(' → logprob: -9.632902145385742
    7. '_' → logprob: -10.132902145385742
    8. ':' → logprob: -10.632902145385742
    9. 'def' → logprob: -10.757902145385742
    10. 'ame' → logprob: -11.632902145385742

Token 217: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18754221498966217
    2. ')' → logprob: -2.062542200088501
    3. '):
' → logprob: -3.437542200088501
    4. ' ==' → logprob: -5.31254243850708
    5. '==' → logprob: -5.56254243850708
    6. ')==' → logprob: -6.43754243850708
    7. ' ):' → logprob: -7.31254243850708
    8. '=' → logprob: -8.812541961669922
    9. ' )' → logprob: -9.062541961669922
    10. '>=' → logprob: -9.562541961669922

Token 218: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011062094010412693
    2. ' n' → logprob: -4.511062145233154
    3. 'N' → logprob: -12.136061668395996
    4. 'r' → logprob: -12.636061668395996
    5. '   ' → logprob: -12.761061668395996
    6. ' ' → logprob: -14.011061668395996
    7. 'l' → logprob: -14.886061668395996
    8. ')' → logprob: -15.261061668395996
    9. '	n' → logprob: -15.261061668395996
    10. '):
' → logprob: -15.886061668395996

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008484598365612328
    2. '):
' → logprob: -7.375848293304443
    3. ')' → logprob: -8.500848770141602
    4. ':' → logprob: -11.500848770141602
    5. ' ):' → logprob: -12.125848770141602
    6. ',' → logprob: -13.500848770141602
    7. '}:' → logprob: -15.000848770141602
    8. '   ' → logprob: -15.250848770141602
    9. '():' → logprob: -15.500848770141602
    10. '=' → logprob: -15.875848770141602

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2163352519273758
    2. ' return' → logprob: -1.7163352966308594
    3. 'return' → logprob: -4.216335296630859
    4. '	return' → logprob: -9.84133529663086
    5. ':return' → logprob: -13.21633529663086
    6. ' r' → logprob: -14.21633529663086
    7. ' ' → logprob: -14.34133529663086
    8. '{return' → logprob: -14.46633529663086
    9. '```' → logprob: -14.46633529663086
    10. '    ' → logprob: -14.84133529663086

Token 221: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004283415153622627
    2. '   ' → logprob: -5.504283428192139
    3. ' return' → logprob: -8.50428295135498
    4. 'r' → logprob: -13.25428295135498
    5. '	return' → logprob: -15.00428295135498
    6. '
' → logprob: -15.75428295135498
    7. '{return' → logprob: -17.129283905029297
    8. '```' → logprob: -17.879283905029297
    9. '    
' → logprob: -18.129283905029297
    10. 'def' → logprob: -19.129283905029297

Token 222: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3868772089481354
    2. ' r' → logprob: -1.136877179145813
    3. '(r' → logprob: -12.386877059936523
    4. '	r' → logprob: -13.636877059936523
    5. ' ' → logprob: -14.636877059936523
    6. 'False' → logprob: -16.261877059936523
    7. '   ' → logprob: -16.261877059936523
    8. 'True' → logprob: -16.386877059936523
    9. ' True' → logprob: -17.136877059936523
    10. '_r' → logprob: -17.636877059936523

Token 223: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7001376748085022
    2. ' ==' → logprob: -0.7001376748085022
    3. '>=' → logprob: -5.325137615203857
    4. ' >=' → logprob: -6.200137615203857
    5. '=' → logprob: -9.825138092041016
    6. '<=' → logprob: -12.325138092041016
    7. ' ' → logprob: -13.450138092041016
    8. ' <=' → logprob: -13.700138092041016
    9. ' ' → logprob: -13.825138092041016
    10. ')' → logprob: -13.825138092041016

Token 224: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024758970830589533
    2. ' n' → logprob: -6.002475738525391
    3. '	n' → logprob: -16.00247573852539
    4. '<|end|>' → logprob: -16.75247573852539
    5. ' ' → logprob: -17.25247573852539
    6. '0' → logprob: -18.12747573852539
    7. '   ' → logprob: -18.87747573852539
    8. '_n' → logprob: -19.12747573852539
    9. '
' → logprob: -19.12747573852539
    10. '(n' → logprob: -19.87747573852539

Token 225: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1013687402009964
    2. '<|end|>' → logprob: -2.4763686656951904
    3. '
' → logprob: -4.4763689041137695
    4. '

' → logprob: -8.47636890411377
    5. '<|end|>' → logprob: -8.47636890411377
    6. ')' → logprob: -8.85136890411377
    7. '\' → logprob: -9.35136890411377
    8. '#' → logprob: -9.72636890411377
    9. '```' → logprob: -10.10136890411377
    10. '\n' → logprob: -10.35136890411377

Token 227: ' print' (ID: 2123)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07456796616315842
    2. 'r' → logprob: -3.324568033218384
    3. ' l' → logprob: -3.574568033218384
    4. 'initial' → logprob: -5.074567794799805
    5. ' initial' → logprob: -7.574567794799805
    6. ' r' → logprob: -8.074567794799805
    7. 'main' → logprob: -8.824567794799805
    8. 's' → logprob: -9.199567794799805
    9. 'n' → logprob: -9.324567794799805
    10. '__' → logprob: -9.449567794799805

Token 228: '_ans' (ID: 146254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07562380284070969
    2. '()' → logprob: -2.7006237506866455
    3. '_' → logprob: -6.450623989105225
    4. '("")' → logprob: -6.950623989105225
    5. '(ans' → logprob: -7.700623989105225
    6. '("' → logprob: -7.825623989105225
    7. '('' → logprob: -8.075623512268066
    8. '(*' → logprob: -8.075623512268066
    9. '_ans' → logprob: -8.450623512268066
    10. '("("' → logprob: -8.450623512268066

Token 229: '_and' (ID: 18645)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24773770570755005
    2. '(' → logprob: -2.1227376461029053
    3. '()' → logprob: -2.6227376461029053
    4. '(ans' → logprob: -3.7477376461029053
    5. '(_' → logprob: -6.497737884521484
    6. '("("' → logprob: -7.122737884521484
    7. '(*' → logprob: -8.122737884521484
    8. '(()' → logprob: -8.497737884521484
    9. '("")' → logprob: -9.122737884521484
    10. ' ():' → logprob: -9.372737884521484

Token 230: '_return' (ID: 29287)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.4196862280368805
    2. 'flush' → logprob: -1.419686198234558
    3. '_exit' → logprob: -2.5446863174438477
    4. '_flush' → logprob: -4.169686317443848
    5. 'return' → logprob: -5.419686317443848
    6. 'clear' → logprob: -7.169686317443848
    7. 'sys' → logprob: -7.794686317443848
    8. '_return' → logprob: -8.169686317443848
    9. '_clear' → logprob: -8.294686317443848
    10. 'quit' → logprob: -8.544686317443848

Token 231: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002143716439604759
    2. '(' → logprob: -6.502143859863281
    3. '(answer' → logprob: -8.002143859863281
    4. '():' → logprob: -9.127143859863281
    5. '(a' → logprob: -9.502143859863281
    6. '(value' → logprob: -10.002143859863281
    7. '(result' → logprob: -10.502143859863281
    8. ' (' → logprob: -11.127143859863281
    9. '(def' → logprob: -11.252143859863281
    10. '()' → logprob: -12.627143859863281

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4702123701572418
    2. '):
' → logprob: -1.2202123403549194
    3. ',' → logprob: -3.345212459564209
    4. '(ans' → logprob: -3.595212459564209
    5. ')' → logprob: -4.095212459564209
    6. '(' → logprob: -8.47021198272705
    7. ' ):' → logprob: -8.84521198272705
    8. '):

' → logprob: -9.47021198272705
    9. '   ' → logprob: -9.47021198272705
    10. ' ):
' → logprob: -10.47021198272705

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015126005746424198
    2. ' print' → logprob: -6.87651252746582
    3. 'print' → logprob: -7.87651252746582
    4. '(ans' → logprob: -9.50151252746582
    5. ' return' → logprob: -12.00151252746582
    6. '(print' → logprob: -12.37651252746582
    7. '	print' → logprob: -12.50151252746582
    8. '   ' → logprob: -12.87651252746582
    9. 'def' → logprob: -13.12651252746582
    10. '(' → logprob: -13.25151252746582

Token 234: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001182052365038544
    2. '   ' → logprob: -9.250118255615234
    3. ' print' → logprob: -10.750118255615234
    4. 'return' → logprob: -14.750118255615234
    5. 'ans' → logprob: -16.625118255615234
    6. '	print' → logprob: -17.000118255615234
    7. 'def' → logprob: -17.125118255615234
    8. '```' → logprob: -17.625118255615234
    9. '(print' → logprob: -18.875118255615234
    10. 'sys' → logprob: -19.375118255615234

Token 235: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.660315895918757e-05
    2. '(' → logprob: -9.500076293945312
    3. 'ans' → logprob: -13.625076293945312
    4. '()' → logprob: -14.750076293945312
    5. '(
' → logprob: -16.625076293945312
    6. '(answer' → logprob: -16.750076293945312
    7. '(abs' → logprob: -17.125076293945312
    8. '	ans' → logprob: -17.250076293945312
    9. ' (' → logprob: -18.000076293945312
    10. '_ans' → logprob: -18.250076293945312

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ')
' → logprob: -11.000017166137695
    3. ')return' → logprob: -14.750017166137695
    4. ' )' → logprob: -15.125017166137695
    5. ')`' → logprob: -16.375017166137695
    6. '))' → logprob: -17.625017166137695
    7. '),' → logprob: -17.875017166137695
    8. '()' → logprob: -18.125017166137695
    9. ')

' → logprob: -18.125017166137695
    10. '())' → logprob: -18.375017166137695

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03258125111460686
    2. 'return' → logprob: -3.532581329345703
    3. ' return' → logprob: -7.032581329345703
    4. '<|end|>' → logprob: -7.407581329345703
    5. 'def' → logprob: -7.532581329345703
    6. '
' → logprob: -7.907581329345703
    7. '	return' → logprob: -8.407581329345703
    8. '    
' → logprob: -8.907581329345703
    9. '```' → logprob: -10.657581329345703
    10. ':return' → logprob: -11.532581329345703

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.75
    3. ' return' → logprob: -16.375
    4. 'exit' → logprob: -18.375
    5. '	return' → logprob: -20.25
    6. '    
' → logprob: -20.5
    7. '
' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. 'ret' → logprob: -22.0
    10. '{return' → logprob: -22.125

Token 239: '

' (ID: 279)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7527205348014832
    2. '<|end|>' → logprob: -0.7527205348014832
    3. 'None' → logprob: -3.252720594406128
    4. ' ' → logprob: -4.002720355987549
    5. '<|end|>' → logprob: -7.877720355987549
    6. ' ans' → logprob: -8.377720832824707
    7. '
' → logprob: -9.252720832824707
    8. ' 
' → logprob: -9.752720832824707
    9. '  
' → logprob: -10.627720832824707
    10. 'ans' → logprob: -10.877720832824707

Token 240: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7133641196996905e-05
    2. 'class' → logprob: -10.62502670288086
    3. '#' → logprob: -13.00002670288086
    4. ' def' → logprob: -16.50002670288086
    5. 'ndef' → logprob: -16.87502670288086
    6. 'n' → logprob: -16.87502670288086
    7. 'd' → logprob: -16.87502670288086
    8. 'for' → logprob: -17.12502670288086
    9. '```' → logprob: -17.25002670288086
    10. 'from' → logprob: -17.37502670288086

Token 241: ' xo' (ID: 46871)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3149222731590271
    2. ' initial' → logprob: -2.564922332763672
    3. ' solve' → logprob: -2.689922332763672
    4. ' def' → logprob: -3.314922332763672
    5. ' read' → logprob: -3.939922332763672
    6. ' print' → logprob: -4.314922332763672
    7. ' process' → logprob: -4.439922332763672
    8. ' calculate' → logprob: -5.064922332763672
    9. ' get' → logprob: -5.439922332763672
    10. 'def' → logprob: -5.564922332763672

Token 242: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7296168804168701
    2. '()' → logprob: -1.7296168804168701
    3. '=' → logprob: -2.72961688041687
    4. ')' → logprob: -2.97961688041687
    5. ' ^=' → logprob: -3.10461688041687
    6. '_x' → logprob: -3.35461688041687
    7. '(' → logprob: -3.35461688041687
    8. '(x' → logprob: -3.47961688041687
    9. ' =' → logprob: -3.47961688041687
    10. 'xor' → logprob: -4.604617118835449

Token 243: 'u' (ID: 84)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.23236306011676788
    2. 't' → logprob: -2.732362985610962
    3. 'et' → logprob: -3.357362985610962
    4. 'olve' → logprob: -3.482362985610962
    5. 'u' → logprob: -4.107363224029541
    6. 'wap' → logprob: -4.732363224029541
    7. '_' → logprob: -5.107363224029541
    8. 'e' → logprob: -5.232363224029541
    9. 'eq' → logprob: -5.357363224029541
    10. 'core' → logprob: -5.607363224029541

Token 244: '_equal' (ID: 27882)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12144260853528976
    2. '(_' → logprob: -3.2464425563812256
    3. '():' → logprob: -3.4964425563812256
    4. '(a' → logprob: -4.246442794799805
    5. '(' → logprob: -4.371442794799805
    6. '(s' → logprob: -4.371442794799805
    7. '_' → logprob: -6.496442794799805
    8. ',' → logprob: -7.621442794799805
    9. '(i' → logprob: -7.996442794799805
    10. '(X' → logprob: -8.246442794799805

Token 245: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7303467988967896
    2. '(x' → logprob: -0.9803467988967896
    3. '(' → logprob: -2.2303466796875
    4. '():' → logprob: -4.2303466796875
    5. '(s' → logprob: -4.3553466796875
    6. '(_' → logprob: -5.9803466796875
    7. ':' → logprob: -6.6053466796875
    8. '(_)' → logprob: -7.3553466796875
    9. '(l' → logprob: -7.4803466796875
    10. '()' → logprob: -7.4803466796875

Token 246: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.13701915740966797
    2. ',' → logprob: -2.137019157409668
    3. '_,' → logprob: -5.512019157409668
    4. '_o' → logprob: -6.512019157409668
    5. '_' → logprob: -6.637019157409668
    6. '_s' → logprob: -7.262019157409668
    7. ')' → logprob: -7.637019157409668
    8. '=' → logprob: -7.762019157409668
    9. 'or' → logprob: -8.387019157409668
    10. ',s' → logprob: -8.512019157409668

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0788131132721901
    2. '_s' → logprob: -2.703813076019287
    3. '_,' → logprob: -5.203813076019287
    4. ' ,' → logprob: -6.578813076019287
    5. ',s' → logprob: -7.453813076019287
    6. '):' → logprob: -8.078813552856445
    7. 's' → logprob: -8.203813552856445
    8. ',_' → logprob: -8.328813552856445
    9. '_' → logprob: -8.578813552856445
    10. '_equal' → logprob: -9.828813552856445

Token 248: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.1604834645986557
    2. ' su' → logprob: -1.910483479499817
    3. 's' → logprob: -8.535483360290527
    4. ' ' → logprob: -11.160483360290527
    5. '   ' → logprob: -11.410483360290527
    6. '	s' → logprob: -12.222983360290527
    7. ')' → logprob: -12.285483360290527
    8. ' ' → logprob: -12.410483360290527
    9. '  ' → logprob: -12.785483360290527
    10. '    ' → logprob: -12.910483360290527

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019926358945667744
    2. '):
' → logprob: -6.876992702484131
    3. ')' → logprob: -8.126992225646973
    4. ',' → logprob: -8.126992225646973
    5. ' ):' → logprob: -8.126992225646973
    6. '_equal' → logprob: -10.751992225646973
    7. '=' → logprob: -11.001992225646973
    8. '_' → logprob: -11.751992225646973
    9. ':' → logprob: -11.876992225646973
    10. ')==' → logprob: -13.001992225646973

Token 250: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1451599895954132
    2. '   ' → logprob: -2.270159959793091
    3. ':
' → logprob: -4.14516019821167
    4. '(x' → logprob: -4.39516019821167
    5. '():' → logprob: -7.02016019821167
    6. '):' → logprob: -7.27016019821167
    7. ':return' → logprob: -7.64516019821167
    8. '(' → logprob: -7.77016019821167
    9. '):
' → logprob: -7.89516019821167
    10. ',' → logprob: -8.020159721374512

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06449783593416214
    2. ' return' → logprob: -3.689497947692871
    3. '   ' → logprob: -3.814497947692871
    4. 'xo' → logprob: -4.189497947692871
    5. ' xo' → logprob: -8.689497947692871
    6. ' ' → logprob: -10.814497947692871
    7. '	return' → logprob: -10.939497947692871
    8. '(x' → logprob: -10.939497947692871
    9. 'xor' → logprob: -11.189497947692871
    10. 'x' → logprob: -11.814497947692871

Token 252: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.006735976319760084
    2. ' xo' → logprob: -5.006735801696777
    3. '(x' → logprob: -11.256735801696777
    4. 'xor' → logprob: -12.131735801696777
    5. ' ' → logprob: -13.756735801696777
    6. 'x' → logprob: -15.256735801696777
    7. '0' → logprob: -15.256735801696777
    8. '   ' → logprob: -15.631735801696777
    9. 'oxo' → logprob: -16.381736755371094
    10. '(' → logprob: -16.631736755371094

Token 253: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03231189772486687
    2. ' ==' → logprob: -3.5323119163513184
    3. '^' → logprob: -6.032311916351318
    4. '=' → logprob: -9.28231143951416
    5. ' ^' → logprob: -9.78231143951416
    6. '!=' → logprob: -12.90731143951416
    7. '()==' → logprob: -13.65731143951416
    8. ' ' → logprob: -13.90731143951416
    9. ' ^=' → logprob: -14.03231143951416
    10. ' ' → logprob: -14.53231143951416

Token 254: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.03365273401141167
    2. ' su' → logprob: -3.4086527824401855
    3. '0' → logprob: -12.283652305603027
    4. ' ' → logprob: -14.033652305603027
    5. '
' → logprob: -14.408652305603027
    6. ' ' → logprob: -15.533652305603027
    7. 's' → logprob: -16.033653259277344
    8. '1' → logprob: -16.158653259277344
    9. 'sup' → logprob: -16.533653259277344
    10. 'sur' → logprob: -16.658653259277344

Token 255: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37149810791015625
    2. '<|end|>' → logprob: -1.3714981079101562
    3. '
' → logprob: -3.4964981079101562
    4. ')' → logprob: -4.996498107910156
    5. '<|end|>' → logprob: -5.496498107910156
    6. ':' → logprob: -5.621498107910156
    7. '_' → logprob: -5.621498107910156
    8. '\n' → logprob: -6.121498107910156
    9. ',' → logprob: -6.746498107910156
    10. '#' → logprob: -6.746498107910156

Token 256: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002277054125443101
    2. '#' → logprob: -7.25227689743042
    3. '<|end|>' → logprob: -7.50227689743042
    4. ')' → logprob: -7.87727689743042
    5. ':' → logprob: -8.252277374267578
    6. '
' → logprob: -9.377277374267578
    7. '\' → logprob: -10.127277374267578
    8. 'x' → logprob: -10.252277374267578
    9. ':def' → logprob: -10.377277374267578
    10. ' def' → logprob: -10.377277374267578

Token 257: ' increase' (ID: 7064)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xo' → logprob: -1.605148196220398
    2. 'initial' → logprob: -1.730148196220398
    3. 'main' → logprob: -1.855148196220398
    4. ' main' → logprob: -2.2301483154296875
    5. ' initial' → logprob: -2.3551483154296875
    6. ' xo' → logprob: -2.7301483154296875
    7. 'su' → logprob: -2.8551483154296875
    8. ' su' → logprob: -3.6051483154296875
    9. 'r' → logprob: -3.7301483154296875
    10. 'xor' → logprob: -3.9801483154296875

Token 258: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.059931036084890366
    2. '(' → logprob: -3.3099310398101807
    3. '_l' → logprob: -4.809930801391602
    4. '(x' → logprob: -5.934930801391602
    5. '_x' → logprob: -6.184930801391602
    6. '()' → logprob: -6.184930801391602
    7. '(_)' → logprob: -6.434930801391602
    8. '_r' → logprob: -6.684930801391602
    9. '_(' → logprob: -7.059930801391602
    10. '(_' → logprob: -7.434930801391602

Token 259: '_segment' (ID: 71041)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002426313702017069
    2. '(' → logprob: -6.1274261474609375
    3. '():' → logprob: -8.502426147460938
    4. '(answer' → logprob: -10.502426147460938
    5. '(a' → logprob: -12.627426147460938
    6. ' (' → logprob: -12.627426147460938
    7. '(prev' → logprob: -14.002426147460938
    8. '(amount' → logprob: -14.627426147460938
    9. '(arr' → logprob: -15.127426147460938
    10. '(_' → logprob: -15.252426147460938

Token 260: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0742955431342125
    2. '():' → logprob: -3.0742955207824707
    3. '(' → logprob: -3.6992955207824707
    4. '()' → logprob: -8.699295997619629
    5. ' (' → logprob: -9.324295997619629
    6. '(_' → logprob: -9.824295997619629
    7. '(arr' → logprob: -9.949295997619629
    8. '(answer' → logprob: -9.949295997619629
    9. '(s' → logprob: -10.449295997619629
    10. '(prev' → logprob: -10.574295997619629

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004501331131905317
    2. '):' → logprob: -5.5045013427734375
    3. ' ,' → logprob: -7.8795013427734375
    4. ',
' → logprob: -11.254501342773438
    5. '):
' → logprob: -11.379501342773438
    6. ')' → logprob: -11.754501342773438
    7. '   ' → logprob: -13.254501342773438
    8. ' ' → logprob: -13.504501342773438
    9. ' ):' → logprob: -13.629501342773438
    10. '+' → logprob: -13.754501342773438

Token 262: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1378448009490967
    2. ' segment' → logprob: -1.1378448009490967
    3. 'segment' → logprob: -2.0128448009490967
    4. 'l' → logprob: -2.1378448009490967
    5. ' val' → logprob: -3.8878448009490967
    6. ' seg' → logprob: -4.012845039367676
    7. ' ' → logprob: -4.512845039367676
    8. ' x' → logprob: -4.637845039367676
    9. ' value' → logprob: -4.887845039367676
    10. 'seg' → logprob: -5.012845039367676

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005822263658046722
    2. ' ,' → logprob: -5.38082218170166
    3. '):' → logprob: -7.13082218170166
    4. '+' → logprob: -8.63082218170166
    5. ' +' → logprob: -9.13082218170166
    6. ')' → logprob: -9.63082218170166
    7. '):
' → logprob: -11.00582218170166
    8. '+,' → logprob: -12.38082218170166
    9. ' ' → logprob: -12.50582218170166
    10. ',
' → logprob: -12.75582218170166

Token 264: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04308197647333145
    2. ' r' → logprob: -3.1680819988250732
    3. ' ' → logprob: -10.168082237243652
    4. '   ' → logprob: -10.668082237243652
    5. '```' → logprob: -12.418082237243652
    6. '_' → logprob: -13.043082237243652
    7. ')' → logprob: -13.043082237243652
    8. '  ' → logprob: -13.293082237243652
    9. '
' → logprob: -13.543082237243652
    10. 'l' → logprob: -13.668082237243652

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34947019815444946
    2. ',' → logprob: -1.2244701385498047
    3. '):
' → logprob: -7.849470138549805
    4. ')' → logprob: -7.849470138549805
    5. '+' → logprob: -8.474470138549805
    6. ' ):' → logprob: -11.224470138549805
    7. ' ,' → logprob: -12.099470138549805
    8. '   ' → logprob: -12.349470138549805
    9. '+,' → logprob: -12.974470138549805
    10. ' ' → logprob: -13.474470138549805

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005715019651688635
    2. 'return' → logprob: -7.7505717277526855
    3. ' return' → logprob: -8.875571250915527
    4. '	return' → logprob: -14.750571250915527
    5. '    
' → logprob: -15.250571250915527
    6. '```' → logprob: -15.625571250915527
    7. '   ' → logprob: -15.750571250915527
    8. '       ' → logprob: -17.500572204589844
    9. ' ans' → logprob: -17.625572204589844
    10. 'ans' → logprob: -17.625572204589844

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0492381677031517
    2. '   ' → logprob: -3.5492382049560547
    3. 'ans' → logprob: -4.049238204956055
    4. ' return' → logprob: -6.299238204956055
    5. ' ans' → logprob: -11.049238204956055
    6. 'for' → logprob: -13.174238204956055
    7. '(ans' → logprob: -13.174238204956055
    8. '	return' → logprob: -13.299238204956055
    9. '	ans' → logprob: -13.549238204956055
    10. 'if' → logprob: -14.174238204956055

Token 268: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.31512460112571716
    2. 'ans' → logprob: -1.3151246309280396
    3. '(ans' → logprob: -6.31512451171875
    4. '	ans' → logprob: -10.31512451171875
    5. '1' → logprob: -11.56512451171875
    6. ' ' → logprob: -12.94012451171875
    7. 'r' → logprob: -13.31512451171875
    8. '0' → logprob: -13.44012451171875
    9. '_ans' → logprob: -13.44012451171875
    10. ' (' → logprob: -13.69012451171875

Token 269: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741688668727875
    2. ' +' → logprob: -0.9741688966751099
    3. '<|end|>' → logprob: -10.34916877746582
    4. '+
' → logprob: -10.59916877746582
    5. ' +
' → logprob: -10.84916877746582
    6. '+r' → logprob: -12.72416877746582
    7. ' +=' → logprob: -12.72416877746582
    8. '+(' → logprob: -12.97416877746582
    9. '+=' → logprob: -13.59916877746582
    10. ',' → logprob: -13.97416877746582

Token 270: ' r' (ID: 428)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.32079166173934937
    2. '1' → logprob: -1.9457917213439941
    3. ' (' → logprob: -2.320791721343994
    4. 'r' → logprob: -3.695791721343994
    5. ' r' → logprob: -5.820791721343994
    6. ' ' → logprob: -6.445791721343994
    7. '(' → logprob: -6.570791721343994
    8. '(abs' → logprob: -6.945791721343994
    9. 'abs' → logprob: -7.320791721343994
    10. '(max' → logprob: -7.945791721343994

Token 271: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04236363619565964
    2. '-' → logprob: -3.2923636436462402
    3. '<|end|>' → logprob: -5.91736364364624
    4. '-l' → logprob: -6.79236364364624
    5. '-token' → logprob: -8.667363166809082
    6. '<|end|>' → logprob: -8.792363166809082
    7. '-length' → logprob: -9.917363166809082
    8. '-r' → logprob: -10.542363166809082
    9. ')' → logprob: -11.542363166809082
    10. 'def' → logprob: -11.667363166809082

Token 272: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.721228368813172e-05
    2. ' l' → logprob: -9.375086784362793
    3. '(l' → logprob: -13.500086784362793
    4. '   ' → logprob: -14.875086784362793
    5. '(' → logprob: -15.125086784362793
    6. '1' → logprob: -15.625086784362793
    7. '	l' → logprob: -15.750086784362793
    8. ' (' → logprob: -16.12508773803711
    9. '  ' → logprob: -18.62508773803711
    10. ' ' → logprob: -19.00008773803711

Token 273: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007104054093360901
    2. ' ' → logprob: -7.250710487365723
    3. '0' → logprob: -14.500710487365723
    4. '<|end|>' → logprob: -18.375709533691406
    5. '```' → logprob: -18.500709533691406
    6. '
' → logprob: -19.000709533691406
    7. '   ' → logprob: -19.375709533691406
    8. '  ' → logprob: -20.375709533691406
    9. '2' → logprob: -20.500709533691406
    10. ' ' → logprob: -20.750709533691406

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -14.87501049041748
    4. '```' → logprob: -18.375011444091797
    5. '
' → logprob: -21.625011444091797
    6. '   ' → logprob: -21.750011444091797
    7. '`' → logprob: -23.250011444091797
    8. '``' → logprob: -23.375011444091797
    9. '  ' → logprob: -23.500011444091797
    10. '-' → logprob: -23.750011444091797

Token 276: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.526154100894928
    2. '<|end|>' → logprob: -0.901154100894928
    3. '<|end|>' → logprob: -6.526154041290283
    4. '
' → logprob: -7.026154041290283
    5. '\n' → logprob: -8.526154518127441
    6. '```' → logprob: -9.401154518127441
    7. '\' → logprob: -9.401154518127441
    8. '#' → logprob: -9.401154518127441
    9. '...' → logprob: -10.026154518127441
    10. ')' → logprob: -10.026154518127441

Token 277: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013095269969198853
    2. '
' → logprob: -9.750130653381348
    3. 'class' → logprob: -10.125130653381348
    4. '<|end|>' → logprob: -11.000130653381348
    5. '#' → logprob: -12.375130653381348
    6. '```' → logprob: -12.750130653381348
    7. '\' → logprob: -13.000130653381348
    8. ')' → logprob: -13.500130653381348
    9. '  
' → logprob: -13.875130653381348
    10. ' def' → logprob: -14.250130653381348

Token 278: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.9468523263931274
    2. ' increase' → logprob: -1.3218523263931274
    3. ' initial' → logprob: -1.6968523263931274
    4. 'def' → logprob: -2.946852207183838
    5. 'initial' → logprob: -3.321852207183838
    6. ' def' → logprob: -3.446852207183838
    7. ' add' → logprob: -4.196852207183838
    8. ' main' → logprob: -5.071852207183838
    9. ' get' → logprob: -5.571852207183838
    10. ' xo' → logprob: -6.071852207183838

Token 279: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.002323318039998412
    2. '_' → logprob: -7.127323150634766
    3. '_answer' → logprob: -7.752323150634766
    4. '_answers' → logprob: -7.877323150634766
    5. '_an' → logprob: -8.752323150634766
    6. '_s' → logprob: -9.127323150634766
    7. ' _' → logprob: -9.127323150634766
    8. '_a' → logprob: -9.877323150634766
    9. '```' → logprob: -11.002323150634766
    10. '_ant' → logprob: -11.002323150634766

Token 280: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.029612433165311813
    2. '_' → logprob: -4.1546125411987305
    3. '(ans' → logprob: -5.1546125411987305
    4. '_segments' → logprob: -5.9046125411987305
    5. '_ans' → logprob: -6.2796125411987305
    6. '(' → logprob: -6.7796125411987305
    7. '(segment' → logprob: -7.9046125411987305
    8. '_seg' → logprob: -8.02961254119873
    9. 'segment' → logprob: -8.15461254119873
    10. '<|end|>' → logprob: -8.27961254119873

Token 281: '_no' (ID: 13575)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.017930185422301292
    2. '(' → logprob: -4.142930030822754
    3. '_' → logprob: -6.642930030822754
    4. '_ans' → logprob: -8.142930030822754
    5. ' (' → logprob: -9.892930030822754
    6. '(answer' → logprob: -9.892930030822754
    7. ',' → logprob: -10.142930030822754
    8. '```' → logprob: -10.267930030822754
    9. '_(' → logprob: -10.517930030822754
    10. '(_' → logprob: -10.892930030822754

Token 282: '_eq' (ID: 28373)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8569343686103821
    2. 'change' → logprob: -1.9819343090057373
    3. '_overlap' → logprob: -2.3569343090057373
    4. '_change' → logprob: -2.8569343090057373
    5. 'def' → logprob: -2.9819343090057373
    6. 'w' → logprob: -3.4819343090057373
    7. 'r' → logprob: -3.8569343090057373
    8. 'ne' → logprob: -3.9819343090057373
    9. 'de' → logprob: -4.106934547424316
    10. '_' → logprob: -4.231934547424316

Token 283: '(ans' (ID: 70054)
  Prédit: 'ual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ual' → logprob: -0.001019590417854488
    2. '(x' → logprob: -8.376019477844238
    3. 'al' → logprob: -8.376019477844238
    4. '(u' → logprob: -8.501019477844238
    5. 'u' → logprob: -9.001019477844238
    6. '_equal' → logprob: -9.126019477844238
    7. '(' → logprob: -10.876019477844238
    8. 'ality' → logprob: -11.501019477844238
    9. 'uala' → logprob: -11.626019477844238
    10. 'als' → logprob: -11.751019477844238

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019388488726690412
    2. ' ,' → logprob: -8.87519359588623
    3. ')' → logprob: -10.00019359588623
    4. ',
' → logprob: -13.50019359588623
    5. '(ans' → logprob: -13.50019359588623
    6. '_,' → logprob: -13.87519359588623
    7. '):' → logprob: -14.12519359588623
    8. ' ans' → logprob: -14.25019359588623
    9. ',l' → logprob: -14.75019359588623
    10. '   ' → logprob: -15.12519359588623

Token 285: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.31475746631622314
    2. 'l' → logprob: -1.3147574663162231
    3. ')' → logprob: -7.939757347106934
    4. 'r' → logprob: -8.189757347106934
    5. ' ans' → logprob: -8.939757347106934
    6. 'ans' → logprob: -9.064757347106934
    7. ' r' → logprob: -9.064757347106934
    8. ',' → logprob: -9.189757347106934
    9. 'x' → logprob: -10.314757347106934
    10. '   ' → logprob: -10.377257347106934

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002681304467841983
    2. ' ,' → logprob: -9.12526798248291
    3. ',r' → logprob: -9.50026798248291
    4. ')' → logprob: -9.75026798248291
    5. ',
' → logprob: -12.25026798248291
    6. '):' → logprob: -12.25026798248291
    7. ',l' → logprob: -12.62526798248291
    8. '):
' → logprob: -12.87526798248291
    9. 'def' → logprob: -13.37526798248291
    10. '   ' → logprob: -13.37526798248291

Token 287: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.062036700546741486
    2. ' r' → logprob: -2.8120367527008057
    3. '   ' → logprob: -10.187036514282227
    4. ')' → logprob: -11.562036514282227
    5. ' ' → logprob: -11.687036514282227
    6. '    ' → logprob: -13.062036514282227
    7. ',' → logprob: -13.874536514282227
    8. ' ' → logprob: -13.999536514282227
    9. '  ' → logprob: -14.062036514282227
    10. '+' → logprob: -14.124536514282227

Token 288: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03742928057909012
    2. '):
' → logprob: -3.4124293327331543
    3. ')' → logprob: -5.662429332733154
    4. '   ' → logprob: -8.537428855895996
    5. ',' → logprob: -9.412428855895996
    6. '):
' → logprob: -11.412428855895996
    7. '):

' → logprob: -12.162428855895996
    8. ' ):' → logprob: -13.162428855895996
    9. ':' → logprob: -13.287428855895996
    10. '+' → logprob: -13.662428855895996

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0708191841840744
    2. ' return' → logprob: -2.695819139480591
    3. 'return' → logprob: -7.44581937789917
    4. ' ans' → logprob: -8.445818901062012
    5. '	return' → logprob: -10.695818901062012
    6. ' =' → logprob: -10.695818901062012
    7. '(ans' → logprob: -11.070818901062012
    8. '=' → logprob: -12.195818901062012
    9. ')' → logprob: -12.445818901062012
    10. ',' → logprob: -12.695818901062012

Token 290: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13216014206409454
    2. ' return' → logprob: -2.132160186767578
    3. '   ' → logprob: -5.257160186767578
    4. '	return' → logprob: -12.632160186767578
    5. 'ans' → logprob: -13.507160186767578
    6. ' ans' → logprob: -13.632160186767578
    7. 'def' → logprob: -14.007160186767578
    8. 'eturn' → logprob: -14.632160186767578
    9. 'if' → logprob: -14.882160186767578
    10. '```' → logprob: -15.382160186767578

Token 291: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16030657291412354
    2. 'ans' → logprob: -1.9103065729141235
    3. '(ans' → logprob: -9.785306930541992
    4. '	ans' → logprob: -11.785306930541992
    5. ' ' → logprob: -12.535306930541992
    6. ' ' → logprob: -12.535306930541992
    7. '0' → logprob: -12.660306930541992
    8. '   ' → logprob: -13.535306930541992
    9. ' max' → logprob: -13.785306930541992
    10. '_ans' → logprob: -14.285306930541992

Token 292: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2713202238082886
    2. ' r' → logprob: -1.5213202238082886
    3. '(r' → logprob: -4.271320343017578
    4. '1' → logprob: -5.771320343017578
    5. ' (' → logprob: -6.396320343017578
    6. ' ' → logprob: -8.646320343017578
    7. '2' → logprob: -9.521320343017578
    8. '(' → logprob: -9.771320343017578
    9. '   ' → logprob: -9.771320343017578
    10. '0' → logprob: -10.021320343017578

Token 294: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0045954380184412
    2. ' +' → logprob: -6.1295952796936035
    3. '+' → logprob: -6.8795952796936035
    4. '-' → logprob: -7.1295952796936035
    5. '<|end|>' → logprob: -7.7545952796936035
    6. '-l' → logprob: -9.629595756530762
    7. ')' → logprob: -10.254595756530762
    8. ' ' → logprob: -10.879595756530762
    9. ' -
' → logprob: -12.004595756530762
    10. ',' → logprob: -12.254595756530762

Token 295: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0031794982496649027
    2. ' l' → logprob: -5.753179550170898
    3. '1' → logprob: -14.128179550170898
    4. '	l' → logprob: -14.378179550170898
    5. '(l' → logprob: -15.628179550170898
    6. ' ' → logprob: -16.3781795501709
    7. '(' → logprob: -16.6281795501709
    8. '_l' → logprob: -16.8781795501709
    9. '   ' → logprob: -17.1281795501709
    10. ' (' → logprob: -17.3781795501709

Token 296: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6107152700424194
    2. '<|end|>' → logprob: -1.9857152700424194
    3. '
' → logprob: -2.110715389251709
    4. '_' → logprob: -2.610715389251709
    5. ')' → logprob: -3.110715389251709
    6. '\n' → logprob: -3.485715389251709
    7. '(' → logprob: -4.110715389251709
    8. '\' → logprob: -4.235715389251709
    9. ':' → logprob: -5.235715389251709
    10. '#' → logprob: -5.985715389251709

Token 298: ' xor' (ID: 106402)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.8080737590789795
    2. ' increase' → logprob: -1.5580737590789795
    3. ' main' → logprob: -2.4330737590789795
    4. ' def' → logprob: -2.5580737590789795
    5. 'def' → logprob: -3.5580737590789795
    6. 'increase' → logprob: -3.8080737590789795
    7. ' add' → logprob: -3.9330737590789795
    8. ' solve' → logprob: -3.9330737590789795
    9. ' xo' → logprob: -4.058073997497559
    10. ' r' → logprob: -4.558073997497559

Token 299: '_val' (ID: 13694)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2031402587890625
    2. '_' → logprob: -2.0781402587890625
    3. '(x' → logprob: -3.3281402587890625
    4. ')' → logprob: -5.4531402587890625
    5. '_s' → logprob: -5.4531402587890625
    6. '<|end|>' → logprob: -5.8281402587890625
    7. ' (' → logprob: -6.3281402587890625
    8. '(a' → logprob: -6.5781402587890625
    9. 'xor' → logprob: -6.5781402587890625
    10. '=' → logprob: -7.0781402587890625

Token 300: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8654442429542542
    2. ' ^' → logprob: -1.3654441833496094
    3. '(x' → logprob: -2.2404441833496094
    4. '(' → logprob: -2.3654441833496094
    5. ' ^=' → logprob: -2.3654441833496094
    6. ' =' → logprob: -4.615444183349609
    7. '^' → logprob: -4.865444183349609
    8. '(s' → logprob: -5.740444183349609
    9. ' (' → logprob: -6.115444183349609
    10. '=' → logprob: -6.740444183349609

Token 301: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6779130697250366
    2. ',' → logprob: -0.9279130697250366
    3. ')' → logprob: -3.552913188934326
    4. '[a' → logprob: -3.802913188934326
    5. '[r' → logprob: -3.927913188934326
    6. ' ^' → logprob: -4.552913188934326
    7. '^' → logprob: -5.302913188934326
    8. ' ,' → logprob: -5.802913188934326
    9. '<|end|>' → logprob: -6.677913188934326
    10. ',a' → logprob: -7.052913188934326

Token 302: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09277264028787613
    2. ' b' → logprob: -2.4677727222442627
    3. ')' → logprob: -6.467772483825684
    4. 'a' → logprob: -6.717772483825684
    5. '0' → logprob: -8.092772483825684
    6. 'x' → logprob: -8.717772483825684
    7. ' a' → logprob: -8.842772483825684
    8. ' ' → logprob: -8.967772483825684
    9. '1' → logprob: -9.217772483825684
    10. 'l' → logprob: -10.467772483825684

Token 303: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007221927400678396
    2. '):
' → logprob: -5.007221698760986
    3. ')' → logprob: -7.757221698760986
    4. ',' → logprob: -10.257222175598145
    5. ' ):' → logprob: -10.632222175598145
    6. ':' → logprob: -11.882222175598145
    7. '=' → logprob: -12.007222175598145
    8. '):
' → logprob: -13.132222175598145
    9. ')=' → logprob: -13.882222175598145
    10. '   ' → logprob: -14.257222175598145

Token 304: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09651422500610352
    2. ' a' → logprob: -2.4715142250061035
    3. '   ' → logprob: -6.0965142250061035
    4. ' =' → logprob: -6.5965142250061035
    5. ' return' → logprob: -6.9715142250061035
    6. ' ^=' → logprob: -6.9715142250061035
    7. ' ^' → logprob: -7.7215142250061035
    8. '<|end|>' → logprob: -7.8465142250061035
    9. ' ' → logprob: -7.9715142250061035
    10. '^' → logprob: -8.346513748168945

Token 305: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3193134069442749
    2. ' a' → logprob: -1.319313406944275
    3. ' return' → logprob: -5.3193135261535645
    4. '<|end|>' → logprob: -7.5693135261535645
    5. 'return' (adapté à ' return') → logprob: -8.069313049316406
    6. ' ' → logprob: -9.194313049316406
    7. '	a' → logprob: -9.819313049316406
    8. '_a' → logprob: -10.319313049316406
    9. '   ' → logprob: -10.444313049316406
    10. '0' → logprob: -11.319313049316406

Token 306: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011703446507453918
    2. ' a' → logprob: -6.7511701583862305
    3. '	a' → logprob: -16.001171112060547
    4. '(a' → logprob: -16.751171112060547
    5. ' ' → logprob: -17.501171112060547
    6. '   ' → logprob: -18.876171112060547
    7. ' (' → logprob: -19.501171112060547
    8. '[a' → logprob: -19.751171112060547
    9. ' ' → logprob: -20.001171112060547
    10. '(' → logprob: -20.126171112060547

Token 307: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.20143692195415497
    2. ' ^' → logprob: -1.7014368772506714
    3. ' ' → logprob: -11.076436996459961
    4. ' ' → logprob: -11.826436996459961
    5. ' ^=' → logprob: -15.826436996459961
    6. '^

' → logprob: -16.57643699645996
    7. '	' → logprob: -16.82643699645996
    8. '^{' → logprob: -16.95143699645996
    9. 'ˆ' → logprob: -16.95143699645996
    10. ' ^
' → logprob: -17.07643699645996

Token 308: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004307884373702109
    2. ' b' → logprob: -7.750430583953857
    3. '<|end|>' → logprob: -17.625431060791016
    4. ' ' → logprob: -17.750431060791016
    5. '   ' → logprob: -20.000431060791016
    6. '  ' → logprob: -20.875431060791016
    7. '	b' → logprob: -21.000431060791016
    8. ')b' → logprob: -22.750431060791016
    9. '_b' → logprob: -23.375431060791016
    10. '
' → logprob: -23.625431060791016

Token 309: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.269848108291626
    2. '_' → logprob: -2.394848108291626
    3. '<|end|>' → logprob: -2.519848108291626
    4. ':' → logprob: -3.519848108291626
    5. ')' → logprob: -3.894848108291626
    6. '#' → logprob: -5.644847869873047
    7. '[' → logprob: -6.394847869873047
    8. ',' → logprob: -6.519847869873047
    9. '<|end|>' → logprob: -6.894847869873047
    10. '\n' → logprob: -7.269847869873047

Token 311: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8925986289978027
    2. 'xor' → logprob: -1.6425986289978027
    3. ' xor' → logprob: -1.8925986289978027
    4. ' add' → logprob: -3.5175986289978027
    5. 'main' → logprob: -3.6425986289978027
    6. 'sum' → logprob: -4.142598628997803
    7. ' initial' → logprob: -4.392598628997803
    8. ' get' → logprob: -4.392598628997803
    9. ' sum' → logprob: -4.392598628997803
    10. ' max' → logprob: -4.642598628997803

Token 312: '_val' (ID: 13694)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.007693694904446602
    2. '(' → logprob: -4.882693767547607
    3. ' (' → logprob: -9.75769329071045
    4. '<|end|>' → logprob: -11.25769329071045
    5. '(x' → logprob: -12.63269329071045
    6. 'a' → logprob: -13.13269329071045
    7. '<|end|>' → logprob: -13.13269329071045
    8. ',' → logprob: -13.13269329071045
    9. '(s' → logprob: -14.00769329071045
    10. ')' → logprob: -14.00769329071045

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026458101347088814
    2. ' ,' → logprob: -6.002645969390869
    3. ',b' → logprob: -9.002645492553711
    4. '+' → logprob: -10.877645492553711
    5. '+,' → logprob: -11.002645492553711
    6. ' +' → logprob: -12.252645492553711
    7. ',a' → logprob: -12.877645492553711
    8. ')' → logprob: -13.377645492553711
    9. '<|end|>' → logprob: -14.377645492553711
    10. ',
' → logprob: -14.877645492553711

Token 315: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196970492601395
    2. ' b' → logprob: -2.811969757080078
    3. ')b' → logprob: -14.561969757080078
    4. 'a' → logprob: -14.811969757080078
    5. ' ' → logprob: -15.186969757080078
    6. ')' → logprob: -15.311969757080078
    7. '<|end|>' → logprob: -16.186969757080078
    8. '   ' → logprob: -16.311969757080078
    9. '	b' → logprob: -16.436969757080078
    10. ',' → logprob: -16.561969757080078

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0621911883354187
    2. '):
' → logprob: -2.8121912479400635
    3. ')' → logprob: -8.812191009521484
    4. ' ):' → logprob: -9.937191009521484
    5. '):
' → logprob: -11.062191009521484
    6. ':' → logprob: -12.312191009521484
    7. ',' → logprob: -13.062191009521484
    8. '):

' → logprob: -13.312191009521484
    9. ' ):
' → logprob: -13.562191009521484
    10. '   ' → logprob: -15.437191009521484

Token 317: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43218478560447693
    2. '   ' → logprob: -1.4321848154067993
    3. 'return' → logprob: -2.8071846961975098
    4. ' return' → logprob: -3.0571846961975098
    5. ' a' → logprob: -5.43218469619751
    6. '(a' → logprob: -8.932185173034668
    7. ' ' → logprob: -9.057185173034668
    8. '	return' → logprob: -9.932185173034668
    9. '  ' → logprob: -10.307185173034668
    10. ' (' → logprob: -11.057185173034668

Token 318: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05061761662364006
    2. 'return' (adapté à ' return') → logprob: -3.3006176948547363
    3. '(a' → logprob: -5.050617694854736
    4. '   ' → logprob: -5.675617694854736
    5. ' return' → logprob: -6.175617694854736
    6. ' a' → logprob: -7.675617694854736
    7. ' (' → logprob: -9.300617218017578
    8. '(' → logprob: -10.800617218017578
    9. '  ' → logprob: -12.550617218017578
    10. ' ' → logprob: -13.300617218017578

Token 319: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04330174997448921
    2. '(a' → logprob: -3.168301820755005
    3. ' (' → logprob: -8.543301582336426
    4. ' a' → logprob: -9.168301582336426
    5. '(' → logprob: -13.668301582336426
    6. ' ' → logprob: -14.168301582336426
    7. '   ' → logprob: -14.168301582336426
    8. '	a' → logprob: -14.418301582336426
    9. '_a' → logprob: -16.793302536010742
    10. '((' → logprob: -16.793302536010742

Token 320: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06201619654893875
    2. ' +' → logprob: -2.812016248703003
    3. '+b' → logprob: -10.562016487121582
    4. '+
' → logprob: -10.812016487121582
    5. ' +
' → logprob: -13.312016487121582
    6. ' ' → logprob: -15.062016487121582
    7. ' ' → logprob: -15.687016487121582
    8. '+=' → logprob: -16.437015533447266
    9. ' plus' → logprob: -17.062015533447266
    10. '＋' → logprob: -17.187015533447266

Token 321: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. '	b' → logprob: -21.01104736328125
    4. ' ' → logprob: -21.76104736328125
    5. '<|end|>' → logprob: -22.26104736328125
    6. ')b' → logprob: -22.63604736328125
    7. '   ' → logprob: -23.88604736328125
    8. '_b' → logprob: -24.38604736328125
    9. ' ' → logprob: -24.51104736328125
    10. '  ' → logprob: -24.63604736328125

Token 322: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007343433680944145
    2. 'class' → logprob: -8.000734329223633
    3. '#' → logprob: -8.625734329223633
    4. '<|end|>' → logprob: -9.000734329223633
    5. '```' → logprob: -10.250734329223633
    6. '<|end|>' → logprob: -11.125734329223633
    7. '
' → logprob: -11.500734329223633
    8. '\' → logprob: -11.875734329223633
    9. '.' → logprob: -12.500734329223633
    10. ')' → logprob: -12.625734329223633

Token 324: ' sub' (ID: 1543)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -1.052048683166504
    2. ' xor' → logprob: -2.052048683166504
    3. ' max' → logprob: -2.427048683166504
    4. ' add' → logprob: -2.927048683166504
    5. 'xor' → logprob: -3.052048683166504
    6. ' check' → logprob: -3.427048683166504
    7. ' main' → logprob: -3.802048683166504
    8. ' multiply' → logprob: -4.052048683166504
    9. 'max' → logprob: -4.177048683166504
    10. 'initial' → logprob: -4.177048683166504

Token 325: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00048417699872516096
    2. 'stract' → logprob: -7.875483989715576
    3. '_' → logprob: -9.875484466552734
    4. 'tract' → logprob: -10.250484466552734
    5. 'Val' → logprob: -12.625484466552734
    6. '_VAL' → logprob: -12.625484466552734
    7. 'val' → logprob: -13.125484466552734
    8. '```' → logprob: -13.125484466552734
    9. 'tracted' → logprob: -13.250484466552734
    10. 'straction' → logprob: -14.500484466552734

Token 326: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.281360924243927
    2. '(' → logprob: -1.4063608646392822
    3. '<|end|>' → logprob: -9.156360626220703
    4. ' (' → logprob: -10.281360626220703
    5. ')' → logprob: -10.531360626220703
    6. '(
' → logprob: -10.906360626220703
    7. 'a' → logprob: -11.906360626220703
    8. '<|end|>' → logprob: -12.906360626220703
    9. '(lambda' → logprob: -13.156360626220703
    10. '```' → logprob: -13.156360626220703

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008810861967504025
    2. ' ,' → logprob: -5.008810997009277
    3. '(a' → logprob: -7.008810997009277
    4. ',b' → logprob: -7.383810997009277
    5. ',a' → logprob: -8.258810997009277
    6. ')' → logprob: -9.008810997009277
    7. 'a' → logprob: -9.633810997009277
    8. '<|end|>' → logprob: -10.008810997009277
    9. '(' → logprob: -11.133810997009277
    10. ')(' → logprob: -11.508810997009277

Token 328: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006716674659401178
    2. ' b' → logprob: -5.006716728210449
    3. 'a' → logprob: -13.75671672821045
    4. ' ' → logprob: -16.131715774536133
    5. ')' → logprob: -16.381715774536133
    6. ' a' → logprob: -16.881715774536133
    7. ')b' → logprob: -17.756715774536133
    8. ',' → logprob: -18.131715774536133
    9. '(b' → logprob: -18.256715774536133
    10. ',b' → logprob: -18.881715774536133

Token 329: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3326592743396759
    2. '):' → logprob: -1.3326592445373535
    3. '):
' → logprob: -3.9576592445373535
    4. '):
' → logprob: -10.207659721374512
    5. '):

' → logprob: -10.957659721374512
    6. ')**' → logprob: -11.207659721374512
    7. ')
' → logprob: -11.457659721374512
    8. ')=' → logprob: -11.707659721374512
    9. ',' → logprob: -12.582659721374512
    10. '),' → logprob: -13.207659721374512

Token 330: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2085956633090973
    2. '   ' → logprob: -2.4585957527160645
    3. ' a' → logprob: -2.5835957527160645
    4. 'return' → logprob: -3.9585957527160645
    5. 'a' → logprob: -4.8335957527160645
    6. ' ' → logprob: -9.208595275878906
    7. '	return' → logprob: -10.708595275878906
    8. ' =' → logprob: -11.458595275878906
    9. ')' → logprob: -11.583595275878906
    10. '    ' → logprob: -11.583595275878906

Token 331: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.751928806304932
    3. 'return' (adapté à ' return') → logprob: -7.501928806304932
    4. ' return' → logprob: -8.501928329467773
    5. '   ' → logprob: -12.751928329467773
    6. '=' → logprob: -17.126928329467773
    7. ' ' → logprob: -17.876928329467773
    8. ')' → logprob: -18.001928329467773
    9. '	a' → logprob: -18.376928329467773
    10. '  ' → logprob: -19.251928329467773

Token 332: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '_a' → logprob: -18.126928329467773
    4. '	a' → logprob: -18.251928329467773
    5. '(a' → logprob: -18.376928329467773
    6. ''a' → logprob: -20.751928329467773
    7. '  ' → logprob: -20.876928329467773
    8. ' ' → logprob: -21.001928329467773
    9. '   ' → logprob: -21.001928329467773
    10. '```' → logprob: -21.376928329467773

Token 333: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760116577148438
    2. '-' → logprob: -0.8260116577148438
    3. '+' → logprob: -10.326011657714844
    4. '-b' → logprob: -10.826011657714844
    5. ' ' → logprob: -12.326011657714844
    6. ' +' → logprob: -12.576011657714844
    7. ' -
' → logprob: -12.576011657714844
    8. ')' → logprob: -12.701011657714844
    9. '-
' → logprob: -13.201011657714844
    10. 'b' → logprob: -13.826011657714844

Token 334: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029754308983683586
    2. ' b' → logprob: -3.529754400253296
    3. '1' → logprob: -12.904754638671875
    4. ')b' → logprob: -14.529754638671875
    5. ')' → logprob: -14.654754638671875
    6. ' ' → logprob: -15.404754638671875
    7. '<|end|>' → logprob: -15.529754638671875
    8. '_b' → logprob: -18.779754638671875
    9. '	b' → logprob: -18.904754638671875
    10. '>b' → logprob: -19.279754638671875

Token 335: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08510741591453552
    2. '<|end|>' → logprob: -2.5851073265075684
    3. ')' → logprob: -5.460107326507568
    4. '<|end|>' → logprob: -7.585107326507568
    5. '
' → logprob: -7.960107326507568
    6. '```' → logprob: -7.960107326507568
    7. '#' → logprob: -7.960107326507568
    8. '.' → logprob: -9.585107803344727
    9. '[' → logprob: -9.835107803344727
    10. ':' → logprob: -10.460107803344727

Token 336: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013960687210783362
    2. 'class' → logprob: -6.751396179199219
    3. '#' → logprob: -8.501396179199219
    4. '```' → logprob: -11.751396179199219
    5. 'import' → logprob: -12.876396179199219
    6. 'from' → logprob: -13.376396179199219
    7. '<|end|>' → logprob: -13.751396179199219
    8. '<|end|>' → logprob: -13.876396179199219
    9. '\' → logprob: -14.001396179199219
    10. ' def' → logprob: -14.126396179199219

Token 337: ' increase' (ID: 7064)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.27883297204971313
    2. ' main' → logprob: -2.5288329124450684
    3. 'max' → logprob: -3.2788329124450684
    4. 'solve' → logprob: -3.2788329124450684
    5. 'process' → logprob: -3.5288329124450684
    6. 'xor' → logprob: -4.153832912445068
    7. 'merge' → logprob: -5.153832912445068
    8. ' solve' → logprob: -5.528832912445068
    9. 'count' → logprob: -5.778832912445068
    10. 'pow' → logprob: -5.903832912445068

Token 338: '_r' (ID: 3442)
  Prédit: '_ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.017531774938106537
    2. '_val' → logprob: -4.142531871795654
    3. '_' → logprob: -7.517531871795654
    4. '_answer' → logprob: -8.017531394958496
    5. '_an' → logprob: -8.892531394958496
    6. '_s' → logprob: -9.392531394958496
    7. '(ans' → logprob: -9.642531394958496
    8. '_answers' → logprob: -10.017531394958496
    9. '_a' → logprob: -10.267531394958496
    10. '_def' → logprob: -11.142531394958496

Token 339: '(r' (ID: 4729)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5036405324935913
    2. '(r' → logprob: -1.0036405324935913
    3. '(' → logprob: -4.378640651702881
    4. '():' → logprob: -4.503640651702881
    5. '_' → logprob: -6.253640651702881
    6. '_ans' → logprob: -7.128640651702881
    7. '()' → logprob: -7.503640651702881
    8. '_r' → logprob: -8.128640174865723
    9. '(prev' → logprob: -8.128640174865723
    10. '(a' → logprob: -8.378640174865723

Token 340: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01163986325263977
    2. '):' → logprob: -5.5116400718688965
    3. ',r' → logprob: -5.6366400718688965
    4. '):
' → logprob: -6.0116400718688965
    5. '+' → logprob: -7.0116400718688965
    6. ' ,' → logprob: -8.636639595031738
    7. '   ' → logprob: -8.761639595031738
    8. ',
' → logprob: -8.886639595031738
    9. '+r' → logprob: -10.136639595031738
    10. 'r' → logprob: -10.511639595031738

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03233209624886513
    2. 'return' → logprob: -3.532332181930542
    3. ' return' → logprob: -6.282331943511963
    4. 'r' → logprob: -7.282331943511963
    5. ' r' → logprob: -11.407332420349121
    6. '	return' → logprob: -11.532332420349121
    7. '    ' → logprob: -15.282332420349121
    8. ' ' → logprob: -15.657332420349121
    9. '    
' → logprob: -16.032331466674805
    10. '	r' → logprob: -16.157331466674805

Token 342: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0965098887681961
    2. 'r' → logprob: -2.5965099334716797
    3. '   ' → logprob: -4.09650993347168
    4. ' return' → logprob: -7.09650993347168
    5. ' r' → logprob: -11.97150993347168
    6. '	return' → logprob: -14.47150993347168
    7. ' ' → logprob: -15.59650993347168
    8. '  ' → logprob: -16.34650993347168
    9. '    ' → logprob: -17.34650993347168
    10. '1' → logprob: -17.72150993347168

Token 343: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.623244553338736e-05
    2. ' r' → logprob: -9.625065803527832
    3. '   ' → logprob: -15.750065803527832
    4. ' ' → logprob: -19.12506675720215
    5. '	r' → logprob: -19.37506675720215
    6. '_r' → logprob: -19.87506675720215
    7. '  ' → logprob: -20.50006675720215
    8. '1' → logprob: -22.62506675720215
    9. '```' → logprob: -22.75006675720215
    10. '`' → logprob: -22.87506675720215

Token 344: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02325025200843811
    2. ' +' → logprob: -3.7732503414154053
    3. '+r' → logprob: -12.398250579833984
    4. '+
' → logprob: -15.023250579833984
    5. '()+' → logprob: -15.273250579833984
    6. ' plus' → logprob: -16.898250579833984
    7. '+=' → logprob: -17.773250579833984
    8. '1' → logprob: -18.273250579833984
    9. 'plus' → logprob: -18.523250579833984
    10. ' +
' → logprob: -18.648250579833984

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -17.00006675720215
    4. '   ' → logprob: -18.12506675720215
    5. '```' → logprob: -18.25006675720215
    6. '  ' → logprob: -20.25006675720215
    7. '0' → logprob: -21.25006675720215
    8. '[' → logprob: -22.12506675720215
    9. '	' → logprob: -22.25006675720215
    10. '<|end|>' → logprob: -22.37506675720215

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -19.25
    4. '<|end|>' → logprob: -20.25
    5. '-' → logprob: -21.75
    6. '   ' → logprob: -22.125
    7. '１' → logprob: -22.875
    8. '0' → logprob: -23.125
    9. 'def' → logprob: -23.375
    10. '[' → logprob: -23.375

Token 347: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. '<|end|>' → logprob: -12.750006675720215
    3. ' def' → logprob: -13.625006675720215
    4. '#' → logprob: -14.750006675720215
    5. '```' → logprob: -15.000006675720215
    6. ')' → logprob: -15.375006675720215
    7. 'r' → logprob: -15.375006675720215
    8. '.' → logprob: -15.750006675720215
    9. '<|end|>' → logprob: -15.750006675720215
    10. '   ' → logprob: -16.2500057220459

Token 349: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.0013427316443994641
    2. 'initial' → logprob: -7.1263427734375
    3. 'l' → logprob: -7.8763427734375
    4. 'def' → logprob: -10.0013427734375
    5. 'de' → logprob: -10.3763427734375
    6. ' increase' → logprob: -10.5013427734375
    7. 'in' → logprob: -10.7513427734375
    8. 'main' → logprob: -11.5013427734375
    9. 'increment' → logprob: -11.5013427734375
    10. 'r' → logprob: -11.7513427734375

Token 350: '_l' (ID: 1478)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.2205437421798706
    2. '_l' → logprob: -2.09554386138916
    3. 'r' → logprob: -2.84554386138916
    4. 'l' → logprob: -4.09554386138916
    5. '(r' → logprob: -9.59554386138916
    6. '(l' → logprob: -9.59554386138916
    7. '(' → logprob: -11.59554386138916
    8. '_' → logprob: -12.59554386138916
    9. ' l' → logprob: -12.59554386138916
    10. ')' → logprob: -13.34554386138916

Token 351: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00971774011850357
    2. '(' → logprob: -4.88471794128418
    3. '(r' → logprob: -6.25971794128418
    4. 'l' → logprob: -9.38471794128418
    5. '<|end|>' → logprob: -9.75971794128418
    6. '(
' → logprob: -10.75971794128418
    7. ')' → logprob: -11.50971794128418
    8. ',l' → logprob: -12.38471794128418
    9. '_l' → logprob: -12.50971794128418
    10. ' (' → logprob: -12.75971794128418

Token 352: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6944800019264221
    2. '):
' → logprob: -0.9444800019264221
    3. ')' → logprob: -2.1944799423217773
    4. '(l' → logprob: -9.069479942321777
    5. '):

' → logprob: -9.319479942321777
    6. '   ' → logprob: -9.569479942321777
    7. 'l' → logprob: -10.444479942321777
    8. ')
' → logprob: -11.319479942321777
    9. '):
' → logprob: -11.694479942321777
    10. '(' → logprob: -12.069479942321777

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.429855078458786
    2. ' return' → logprob: -1.1798551082611084
    3. 'return' → logprob: -3.1798551082611084
    4. '	return' → logprob: -8.429855346679688
    5. ' l' → logprob: -9.179855346679688
    6. 'l' → logprob: -9.679855346679688
    7. '    ' → logprob: -9.679855346679688
    8. ' ' → logprob: -11.429855346679688
    9. ')' → logprob: -11.804855346679688
    10. '  ' → logprob: -12.054855346679688

Token 354: ' return' (ID: 622)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06524458527565002
    2. 'return' (adapté à ' return') → logprob: -3.315244674682617
    3. ' l' → logprob: -3.815244674682617
    4. ' return' → logprob: -5.565244674682617
    5. '   ' → logprob: -6.940244674682617
    6. '	l' → logprob: -12.065244674682617
    7. '(l' → logprob: -14.315244674682617
    8. '	return' → logprob: -14.815244674682617
    9. '    ' → logprob: -15.065244674682617
    10. ' ' → logprob: -15.815244674682617

Token 355: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.023247458040714264
    2. ' l' → logprob: -3.773247480392456
    3. '   ' → logprob: -13.648247718811035
    4. '	l' → logprob: -14.273247718811035
    5. ' ' → logprob: -16.52324676513672
    6. ' ' → logprob: -17.27324676513672
    7. '(l' → logprob: -17.52324676513672
    8. '  ' → logprob: -17.89824676513672
    9. '0' → logprob: -18.27324676513672
    10. '1' → logprob: -18.77324676513672

Token 356: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2520124912261963
    2. ' +' → logprob: -1.5020124912261963
    3. '+
' → logprob: -10.252012252807617
    4. '<|end|>' → logprob: -10.752012252807617
    5. ' +
' → logprob: -10.877012252807617
    6. ' ' → logprob: -12.502012252807617
    7. 'def' → logprob: -14.252012252807617
    8. ')' → logprob: -14.252012252807617
    9. '+++' → logprob: -14.377012252807617
    10. '-' → logprob: -15.127012252807617

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '<|end|>' → logprob: -20.125001907348633
    6. 'def' → logprob: -20.250001907348633
    7. '0' → logprob: -20.625001907348633
    8. '  ' → logprob: -22.625001907348633
    9. '[' → logprob: -24.000001907348633
    10. '１' → logprob: -24.000001907348633

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -21.0
    5. '<|end|>' → logprob: -21.75
    6. 'def' → logprob: -21.75
    7. '0' → logprob: -22.375
    8. '-' → logprob: -23.0
    9. '  ' → logprob: -23.5
    10. '
' → logprob: -23.625

Token 359: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026436151936650276
    2. '<|end|>' → logprob: -3.7764360904693604
    3. ')' → logprob: -6.9014363288879395
    4. 'r' → logprob: -7.7764363288879395
    5. '```' → logprob: -7.7764363288879395
    6. '#' → logprob: -7.9014363288879395
    7. 'a' → logprob: -8.526435852050781
    8. '
' → logprob: -8.901435852050781
    9. '.' → logprob: -9.026435852050781
    10. '[' → logprob: -9.026435852050781

Token 360: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.77627644513268e-06
    2. '```' → logprob: -12.375008583068848
    3. '#' → logprob: -13.000008583068848
    4. '\' → logprob: -14.625008583068848
    5. 'class' → logprob: -14.750008583068848
    6. '.' → logprob: -15.375008583068848
    7. ' def' → logprob: -15.625008583068848
    8. '(def' → logprob: -16.375009536743164
    9. 'for' → logprob: -16.375009536743164
    10. 'import' → logprob: -16.500009536743164

Token 361: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.030232317745685577
    2. ' main' → logprob: -4.0302324295043945
    3. 'solve' → logprob: -5.5302324295043945
    4. 'move' → logprob: -5.7802324295043945
    5. 'initial' → logprob: -6.9052324295043945
    6. 'increase' → logprob: -7.0302324295043945
    7. 'process' → logprob: -7.1552324295043945
    8. 'mo' → logprob: -7.2802324295043945
    9. 'de' → logprob: -8.655232429504395
    10. 'update' → logprob: -9.280232429504395

Token 362: '_forward' (ID: 75888)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.5503212213516235
    2. '_' → logprob: -1.5503212213516235
    3. '_query' → logprob: -2.425321102142334
    4. '(' → logprob: -3.050321102142334
    5. '_array' → logprob: -4.050321102142334
    6. '_(' → logprob: -4.050321102142334
    7. '_data' → logprob: -5.050321102142334
    8. '_input' → logprob: -5.550321102142334
    9. '_segments' → logprob: -5.675321102142334
    10. '(_' → logprob: -5.675321102142334

Token 363: '(x' (ID: 4061)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0503377765417099
    2. '(' → logprob: -3.550337791442871
    3. '():' → logprob: -4.550337791442871
    4. '(l' → logprob: -4.675337791442871
    5. '(for' → logprob: -8.175337791442871
    6. '_forward' → logprob: -9.425337791442871
    7. '()' → logprob: -10.800337791442871
    8. '(f' → logprob: -11.175337791442871
    9. '(line' → logprob: -11.175337791442871
    10. '(s' → logprob: -11.300337791442871

Token 364: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.18026427924633026
    2. 'r' → logprob: -2.3052642345428467
    3. '):
' → logprob: -4.180264472961426
    4. ',' → logprob: -4.305264472961426
    5. '):' → logprob: -4.305264472961426
    6. '[' → logprob: -5.555264472961426
    7. '_r' → logprob: -5.930264472961426
    8. '_' → logprob: -5.930264472961426
    9. ')' → logprob: -6.055264472961426
    10. 'or' → logprob: -6.180264472961426

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020818933262489736
    2. '_,' → logprob: -9.375207901000977
    3. ',r' → logprob: -10.125207901000977
    4. 'r' → logprob: -10.250207901000977
    5. ' ,' → logprob: -10.500207901000977
    6. '_r' → logprob: -11.750207901000977
    7. ',
' → logprob: -12.375207901000977
    8. '):' → logprob: -13.125207901000977
    9. '   ' → logprob: -13.750207901000977
    10. 's' → logprob: -14.000207901000977

Token 366: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.005992908496409655
    2. ' su' → logprob: -5.130992889404297
    3. 's' → logprob: -10.755992889404297
    4. ')' → logprob: -10.880992889404297
    5. 'r' → logprob: -11.380992889404297
    6. 'sub' → logprob: -12.755992889404297
    7. 'x' → logprob: -13.755992889404297
    8. '   ' → logprob: -13.755992889404297
    9. 'increase' → logprob: -14.005992889404297
    10. ' r' → logprob: -14.255992889404297

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031389365904033184
    2. '):' → logprob: -8.125313758850098
    3. '):
' → logprob: -11.500313758850098
    4. ' ,' → logprob: -12.250313758850098
    5. ',
' → logprob: -13.250313758850098
    6. ')' → logprob: -14.625313758850098
    7. '_,' → logprob: -14.750313758850098
    8. '),' → logprob: -16.875314712524414
    9. '   ' → logprob: -17.000314712524414
    10. ' ' → logprob: -17.625314712524414

Token 368: ' ans' (ID: 3345)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11000480502843857
    2. 'l' → logprob: -3.1100049018859863
    3. 'a' → logprob: -3.6100049018859863
    4. 'val' → logprob: -4.735004901885986
    5. ' r' → logprob: -4.860004901885986
    6. 'ans' → logprob: -5.110004901885986
    7. 'x' → logprob: -5.735004901885986
    8. ' l' → logprob: -5.985004901885986
    9. ' a' → logprob: -7.610004901885986
    10. ' val' → logprob: -7.610004901885986

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011848729336634278
    2. '):' → logprob: -6.751184940338135
    3. ',r' → logprob: -12.376184463500977
    4. ' ,' → logprob: -12.501184463500977
    5. '):
' → logprob: -12.876184463500977
    6. '   ' → logprob: -14.126184463500977
    7. ',l' → logprob: -14.126184463500977
    8. ',x' → logprob: -15.001184463500977
    9. ')' → logprob: -15.126184463500977
    10. '_,' → logprob: -15.126184463500977

Token 370: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4757460951805115
    2. 'r' → logprob: -0.9757460951805115
    3. ' l' → logprob: -6.850746154785156
    4. ' r' → logprob: -8.475746154785156
    5. 'a' → logprob: -8.725746154785156
    6. 'x' → logprob: -9.600746154785156
    7. '   ' → logprob: -10.225746154785156
    8. 'arr' → logprob: -10.600746154785156
    9. 'n' → logprob: -10.975746154785156
    10. ')' → logprob: -11.100746154785156

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. '):' → logprob: -10.125056266784668
    3. ',r' → logprob: -11.500056266784668
    4. ' ,' → logprob: -13.000056266784668
    5. ',
' → logprob: -13.125056266784668
    6. '):
' → logprob: -14.250056266784668
    7. ')' → logprob: -15.875056266784668
    8. '=' → logprob: -15.875056266784668
    9. '   ' → logprob: -16.25005531311035
    10. ',l' → logprob: -16.50005531311035

Token 372: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005238975863903761
    2. ' r' → logprob: -5.255239009857178
    3. ')' → logprob: -13.13023853302002
    4. '   ' → logprob: -14.38023853302002
    5. '<|end|>' → logprob: -14.38023853302002
    6. ',' → logprob: -14.63023853302002
    7. ' ' → logprob: -14.63023853302002
    8. '	r' → logprob: -15.75523853302002
    9. ',r' → logprob: -15.88023853302002
    10. 'increase' → logprob: -16.130239486694336

Token 373: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03971422091126442
    2. ',' → logprob: -3.2897143363952637
    3. '):
' → logprob: -6.414714336395264
    4. ')' → logprob: -10.539713859558105
    5. '   ' → logprob: -12.664713859558105
    6. ' ):' → logprob: -13.414713859558105
    7. ':' → logprob: -13.914713859558105
    8. '):
' → logprob: -14.539713859558105
    9. '):

' → logprob: -15.039713859558105
    10. ',
' → logprob: -15.164713859558105

Token 374: ' lis' (ID: 20784)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.46846920251846313
    2. 'a' → logprob: -1.5934691429138184
    3. 'val' → logprob: -2.3434691429138184
    4. 'x' → logprob: -3.7184691429138184
    5. 'vals' → logprob: -4.343469142913818
    6. 'data' → logprob: -4.968469142913818
    7. 'v' → logprob: -5.343469142913818
    8. 'segment' → logprob: -5.718469142913818
    9. 'A' → logprob: -5.968469142913818
    10. 'lst' → logprob: -5.968469142913818

Token 375: '):
' (ID: 1883)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05020638555288315
    2. '):' → logprob: -3.550206422805786
    3. '):
' → logprob: -3.925206422805786
    4. ')' → logprob: -7.925206184387207
    5. ',' → logprob: -9.675206184387207
    6. '[t' → logprob: -11.175206184387207
    7. '[' → logprob: -11.300206184387207
    8. '_t' → logprob: -11.300206184387207
    9. 'T' → logprob: -11.300206184387207
    10. '):

' → logprob: -11.550206184387207

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35825589299201965
    2. ':' → logprob: -1.2332558631896973
    3. ':
' → logprob: -5.108255863189697
    4. ',' → logprob: -6.733255863189697
    5. '    
' → logprob: -7.108255863189697
    6. '):' → logprob: -7.858255863189697
    7. '```' → logprob: -8.108256340026855
    8. ':return' → logprob: -8.233256340026855
    9. '  
' → logprob: -9.233256340026855
    10. ' :' → logprob: -9.483256340026855

Token 377: ' xo' (ID: 46871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09421129524707794
    2. 'xo' (adapté à ' xo') → logprob: -2.4692113399505615
    3. ' xo' → logprob: -5.594211101531982
    4. 'if' → logprob: -7.969211101531982
    5. 'new' → logprob: -8.09421157836914
    6. ' new' → logprob: -8.46921157836914
    7. '    
' → logprob: -8.71921157836914
    8. ' if' → logprob: -8.96921157836914
    9. 'xor' → logprob: -9.96921157836914
    10. 'x' → logprob: -10.09421157836914

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7479634284973145
    2. ' =' → logprob: -1.2479634284973145
    3. ' ^=' → logprob: -1.4979634284973145
    4. '_val' → logprob: -4.9979634284973145
    5. '_' → logprob: -5.3729634284973145
    6. '^' → logprob: -6.6229634284973145
    7. ' ^' → logprob: -6.8729634284973145
    8. ',' → logprob: -7.1229634284973145
    9. '_=' → logprob: -7.7479634284973145
    10. '_new' → logprob: -7.7479634284973145

Token 379: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.00044032474397681653
    2. ' xor' → logprob: -8.12544059753418
    3. 'xo' → logprob: -9.50044059753418
    4. 'x' → logprob: -9.62544059753418
    5. '   ' → logprob: -13.37544059753418
    6. ' xo' → logprob: -14.87544059753418
    7. '```' → logprob: -15.37544059753418
    8. ' ' → logprob: -15.62544059753418
    9. '(x' → logprob: -15.75044059753418
    10. '
' → logprob: -15.87544059753418

Token 380: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00026336227892898023
    2. 'val' → logprob: -8.875263214111328
    3. '_' → logprob: -9.625263214111328
    4. 'xor' → logprob: -11.125263214111328
    5. ')' → logprob: -12.000263214111328
    6. '```' → logprob: -12.750263214111328
    7. 'Val' → logprob: -12.750263214111328
    8. '`' → logprob: -13.000263214111328
    9. '_va' → logprob: -13.125263214111328
    10. ' _' → logprob: -13.250263214111328

Token 381: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00038300611777231097
    2. '(' → logprob: -7.875382900238037
    3. ' (' → logprob: -13.750383377075195
    4. '(l' → logprob: -14.000383377075195
    5. '(
' → logprob: -14.625383377075195
    6. 'x' → logprob: -15.000383377075195
    7. 'xo' → logprob: -16.625383377075195
    8. '(a' → logprob: -17.125383377075195
    9. ',' → logprob: -17.125383377075195
    10. '(s' → logprob: -17.625383377075195

Token 382: 'o' (ID: 78)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.8554401993751526
    2. 's' → logprob: -1.9804401397705078
    3. 'val' → logprob: -2.105440139770508
    4. 'o' → logprob: -2.480440139770508
    5. ',' → logprob: -2.480440139770508
    6. ')' → logprob: -2.605440139770508
    7. '(x' → logprob: -4.355440139770508
    8. 'su' → logprob: -4.605440139770508
    9. '(s' → logprob: -5.105440139770508
    10. 'x' → logprob: -5.230440139770508

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ' ,' → logprob: -11.375022888183594
    3. ',
' → logprob: -12.000022888183594
    4. ',l' → logprob: -12.500022888183594
    5. ',

' → logprob: -14.875022888183594
    6. '[' → logprob: -15.375022888183594
    7. ',
' → logprob: -16.500022888183594
    8. ',list' → logprob: -16.625022888183594
    9. ',get' → logprob: -16.625022888183594
    10. 's' → logprob: -16.750022888183594

Token 384: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.0012336840154603124
    2. ' lis' → logprob: -6.7512335777282715
    3. '   ' → logprob: -10.62623405456543
    4. 'li' → logprob: -11.25123405456543
    5. 'list' → logprob: -12.12623405456543
    6. 'lic' → logprob: -12.50123405456543
    7. '
' → logprob: -13.25123405456543
    8. '```' → logprob: -13.25123405456543
    9. 'ls' → logprob: -13.37623405456543
    10. ' ' → logprob: -13.37623405456543

Token 385: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0001375089050270617
    2. 'r' → logprob: -9.125137329101562
    3. '[' → logprob: -10.500137329101562
    4. '[
' → logprob: -14.750137329101562
    5. '	r' → logprob: -15.625137329101562
    6. '(r' → logprob: -16.375137329101562
    7. '```' → logprob: -16.375137329101562
    8. ')[' → logprob: -16.500137329101562
    9. ')' → logprob: -16.625137329101562
    10. ' r' → logprob: -17.125137329101562

Token 386: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05021999403834343
    2. '[r' → logprob: -3.050220012664795
    3. '[' → logprob: -7.175220012664795
    4. '])
' → logprob: -7.300220012664795
    5. ']' → logprob: -9.175219535827637
    6. ' ])' → logprob: -10.550219535827637
    7. '][' → logprob: -11.675219535827637
    8. '[
' → logprob: -11.675219535827637
    9. ')' → logprob: -11.675219535827637
    10. '])

' → logprob: -12.050219535827637

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4658834934234619
    2. 'su' → logprob: -1.340883493423462
    3. ' su' → logprob: -2.215883493423462
    4. '    
' → logprob: -7.215883255004883
    5. '    ' → logprob: -7.965883255004883
    6. 'return' → logprob: -8.590883255004883
    7. ' return' → logprob: -8.840883255004883
    8. '
' → logprob: -9.090883255004883
    9. ',' → logprob: -9.840883255004883
    10. '	s' → logprob: -10.590883255004883

Token 388: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -0.11533615738153458
    2. '   ' → logprob: -2.7403361797332764
    3. ' su' → logprob: -3.1153361797332764
    4. '    
' → logprob: -12.365336418151855
    5. '
' → logprob: -12.365336418151855
    6. ' ' → logprob: -12.865336418151855
    7. '    ' → logprob: -13.115336418151855
    8. '  ' → logprob: -13.990336418151855
    9. 'ans' → logprob: -13.990336418151855
    10. 'return' → logprob: -14.365336418151855

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2525174021720886
    2. ' =' → logprob: -1.5025174617767334
    3. ' +=' → logprob: -7.752517223358154
    4. '+=' → logprob: -8.752517700195312
    5. ' ' → logprob: -15.627517700195312
    6. '+' → logprob: -15.627517700195312
    7. '＝' → logprob: -17.752517700195312
    8. ' +' → logprob: -18.002517700195312
    9. ')' → logprob: -18.127517700195312
    10. ',' → logprob: -19.002517700195312

Token 390: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.20161555707454681
    2. 'add' → logprob: -1.701615571975708
    3. 'su' → logprob: -8.826615333557129
    4. ' su' → logprob: -9.951615333557129
    5. ' sub' → logprob: -12.326615333557129
    6. 'sub' → logprob: -13.201615333557129
    7. ' ' → logprob: -14.326615333557129
    8. '	add' → logprob: -14.576615333557129
    9. '  ' → logprob: -16.076616287231445
    10. 'addi' → logprob: -16.701616287231445

Token 391: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.098748053773306e-05
    2. 'val' → logprob: -9.75006103515625
    3. '_' → logprob: -13.25006103515625
    4. '```' → logprob: -15.37506103515625
    5. 'Val' → logprob: -15.87506103515625
    6. '(val' → logprob: -16.37506103515625
    7. '(s' → logprob: -16.50006103515625
    8. 's' → logprob: -16.62506103515625
    9. 'su' → logprob: -16.62506103515625
    10. '_s' → logprob: -16.62506103515625

Token 392: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.8624639324116288e-06
    2. 'su' → logprob: -14.125001907348633
    3. 's' → logprob: -14.500001907348633
    4. ' ' → logprob: -15.375001907348633
    5. ' (' → logprob: -15.375001907348633
    6. '(' → logprob: -16.375001907348633
    7. ' su' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '  ' → logprob: -18.250001907348633
    10. ')' → logprob: -19.625001907348633

Token 393: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00013083349040243775
    2. 'su' → logprob: -9.000130653381348
    3. '(u' → logprob: -13.000130653381348
    4. ' su' → logprob: -13.125130653381348
    5. '	u' → logprob: -14.500130653381348
    6. ')' → logprob: -14.750130653381348
    7. '(s' → logprob: -14.875130653381348
    8. ' u' → logprob: -14.875130653381348
    9. 's' → logprob: -15.125130653381348
    10. 'у' → logprob: -15.125130653381348

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016305516473948956
    2. '(s' → logprob: -6.751630783081055
    3. ',l' → logprob: -8.501630783081055
    4. ',s' → logprob: -8.626630783081055
    5. '(l' → logprob: -9.751630783081055
    6. ' ,' → logprob: -11.376630783081055
    7. '(' → logprob: -12.376630783081055
    8. ',
' → logprob: -14.126630783081055
    9. ',x' → logprob: -14.126630783081055
    10. '(x' → logprob: -14.501630783081055

Token 395: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.005248818546533585
    2. ' lis' → logprob: -5.2552490234375
    3. 'li' → logprob: -11.7552490234375
    4. ' ' → logprob: -13.6302490234375
    5. 'l' → logprob: -13.8802490234375
    6. 'ls' → logprob: -14.2552490234375
    7. ')' → logprob: -14.2552490234375
    8. 'list' → logprob: -14.2552490234375
    9. '1' → logprob: -14.7552490234375
    10. 'lic' → logprob: -14.8802490234375

Token 396: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.375005722045898
    3. 'r' → logprob: -14.500005722045898
    4. '[
' → logprob: -15.000005722045898
    5. ' [' → logprob: -16.7500057220459
    6. '(r' → logprob: -16.8750057220459
    7. '```' → logprob: -17.1250057220459
    8. ')' → logprob: -17.2500057220459
    9. '   ' → logprob: -17.5000057220459
    10. '[l' → logprob: -17.5000057220459

Token 397: '])
' (ID: 5169)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.4741578698158264
    2. '])' → logprob: -0.9741578698158264
    3. '])
' → logprob: -10.34915828704834
    4. '[' → logprob: -10.47415828704834
    5. ']' → logprob: -11.59915828704834
    6. ')' → logprob: -11.84915828704834
    7. '[
' → logprob: -13.97415828704834
    8. '(r' → logprob: -13.97415828704834
    9. '])

' → logprob: -14.22415828704834
    10. 'r' → logprob: -14.72415828704834

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007241101702675223
    2. '<|end|>' → logprob: -8.000723838806152
    3. '    
' → logprob: -9.125723838806152
    4. '	return' → logprob: -9.250723838806152
    5. ',' → logprob: -9.375723838806152
    6. ' return' → logprob: -10.375723838806152
    7. 'return' → logprob: -11.000723838806152
    8. '
' → logprob: -11.250723838806152
    9. ',
' → logprob: -11.500723838806152
    10. '    ' → logprob: -12.000723838806152

Token 399: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06940362602472305
    2. 'ans' → logprob: -3.194403648376465
    3. 'r' → logprob: -3.944403648376465
    4. 'return' → logprob: -5.694403648376465
    5. ' ans' → logprob: -6.069403648376465
    6. ' return' → logprob: -7.569403648376465
    7. ' r' → logprob: -7.819403648376465
    8. '	ans' → logprob: -10.069403648376465
    9. 'answer' → logprob: -11.569403648376465
    10. '(ans' → logprob: -11.694403648376465

Token 400: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.17990416288375854
    2. ' xo' → logprob: -1.8049042224884033
    3. 'xor' → logprob: -9.679903984069824
    4. ' ' → logprob: -9.804903984069824
    5. '(x' → logprob: -11.429903984069824
    6. ' xor' → logprob: -11.929903984069824
    7. ' not' → logprob: -12.054903984069824
    8. '   ' → logprob: -12.429903984069824
    9. ' x' → logprob: -12.679903984069824
    10. ' r' → logprob: -12.804903984069824

Token 401: '_s' (ID: 1278)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10603431612253189
    2. '==' → logprob: -2.356034278869629
    3. ' !=' → logprob: -5.856034278869629
    4. ' ^' → logprob: -6.481034278869629
    5. ' ' → logprob: -7.606034278869629
    6. 's' → logprob: -8.606034278869629
    7. '!=' → logprob: -8.606034278869629
    8. '=' → logprob: -9.356034278869629
    9. '<|end|>' → logprob: -9.356034278869629
    10. '_s' → logprob: -9.356034278869629

Token 402: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0008573854574933648
    2. '_equal' → logprob: -8.50085735321045
    3. 'e' → logprob: -8.62585735321045
    4. 'equal' → logprob: -9.00085735321045
    5. 'su' → logprob: -9.12585735321045
    6. 'ue' → logprob: -9.62585735321045
    7. 'o' → logprob: -10.87585735321045
    8. 'tu' → logprob: -11.12585735321045
    9. '```' → logprob: -11.50085735321045
    10. '_eq' → logprob: -11.75085735321045

Token 403: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -7.3458322731312364e-06
    2. 'equal' → logprob: -12.375007629394531
    3. '_' → logprob: -13.625007629394531
    4. '_eq' → logprob: -14.125007629394531
    5. '_equ' → logprob: -14.875007629394531
    6. '_equals' → logprob: -14.875007629394531
    7. '_EQUAL' → logprob: -15.750007629394531
    8. ' _' → logprob: -16.50000762939453
    9. 'Equal' → logprob: -16.62500762939453
    10. '_e' → logprob: -16.75000762939453

Token 404: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004087659064680338
    2. '(' → logprob: -5.504087448120117
    3. ' (' → logprob: -11.754087448120117
    4. '(
' → logprob: -13.754087448120117
    5. '(o' → logprob: -15.754087448120117
    6. ' ' → logprob: -18.004087448120117
    7. '(q' → logprob: -18.129087448120117
    8. '(

' → logprob: -18.254087448120117
    9. '(s' → logprob: -18.504087448120117
    10. '(y' → logprob: -19.129087448120117

Token 405: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -9.996708104154095e-05
    2. ',' → logprob: -10.500100135803223
    3. ')' → logprob: -10.875100135803223
    4. 'su' → logprob: -11.625100135803223
    5. ')o' → logprob: -11.875100135803223
    6. 'u' → logprob: -12.250100135803223
    7. 'os' → logprob: -12.875100135803223
    8. '   ' → logprob: -13.000100135803223
    9. '(o' → logprob: -13.125100135803223
    10. 's' → logprob: -13.125100135803223

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044651966891251504
    2. ' ,' → logprob: -7.750446319580078
    3. ',s' → logprob: -11.875446319580078
    4. 'su' → logprob: -12.125446319580078
    5. ',
' → logprob: -13.250446319580078
    6. '   ' → logprob: -14.125446319580078
    7. ')' → logprob: -14.750446319580078
    8. ' ' → logprob: -16.250446319580078
    9. ' su' → logprob: -16.500446319580078
    10. ',

' → logprob: -16.875446319580078

Token 407: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.001941130612976849
    2. ' su' → logprob: -6.251941204071045
    3. 's' → logprob: -12.501940727233887
    4. 'sub' → logprob: -12.876940727233887
    5. ')' → logprob: -13.376940727233887
    6. 'sur' → logprob: -13.501940727233887
    7. '
' → logprob: -14.251940727233887
    8. ' ' → logprob: -14.376940727233887
    9. 'si' → logprob: -15.001940727233887
    10. '   ' → logprob: -15.001940727233887

Token 408: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07903861254453659
    2. '):
' → logprob: -2.579038619995117
    3. ')' → logprob: -9.204038619995117
    4. '   ' → logprob: -11.079038619995117
    5. ':' → logprob: -11.704038619995117
    6. ' and' → logprob: -12.204038619995117
    7. '):
' → logprob: -12.579038619995117
    8. ' ):' → logprob: -12.704038619995117
    9. ',' → logprob: -12.829038619995117
    10. '():' → logprob: -13.454038619995117

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006091519608162344
    2. ':' → logprob: -8.125609397888184
    3. '   ' → logprob: -8.500609397888184
    4. ',' → logprob: -10.375609397888184
    5. ')' → logprob: -11.125609397888184
    6. 'ans' → logprob: -11.250609397888184
    7. '):' → logprob: -11.500609397888184
    8. '	' → logprob: -12.250609397888184
    9. '      ' → logprob: -12.375609397888184
    10. '     ' → logprob: -12.500609397888184

Token 410: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2763470709323883
    2. '       ' → logprob: -1.526347041130066
    3. '   ' → logprob: -4.0263471603393555
    4. ' ans' → logprob: -5.4013471603393555
    5. 'return' → logprob: -6.6513471603393555
    6. '	ans' → logprob: -8.276347160339355
    7. ' return' → logprob: -9.276347160339355
    8. '(ans' → logprob: -9.776347160339355
    9. 'answer' → logprob: -10.526347160339355
    10. '           ' → logprob: -11.026347160339355

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693408131599426
    2. '=' → logprob: -2.126934051513672
    3. ' +=' → logprob: -12.376934051513672
    4. '+=' → logprob: -14.126934051513672
    5. ',' → logprob: -14.251934051513672
    6. ' ' → logprob: -15.251934051513672
    7. ')' → logprob: -16.001934051513672
    8. '＝' → logprob: -17.001934051513672
    9. ' =)' → logprob: -17.501934051513672
    10. ')=' → logprob: -17.876934051513672

Token 412: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.005240156780928373
    2. ' increase' → logprob: -5.255239963531494
    3. '   ' → logprob: -12.505240440368652
    4. 'in' → logprob: -13.005240440368652
    5. 'increment' → logprob: -15.005240440368652
    6. '       ' → logprob: -18.130239486694336
    7. '  ' → logprob: -18.255239486694336
    8. '    ' → logprob: -18.380239486694336
    9. ' ' → logprob: -18.630239486694336
    10. 'Increase' → logprob: -18.755239486694336

Token 413: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00015943869948387146
    2. 'ans' → logprob: -8.75015926361084
    3. '_answer' → logprob: -14.37515926361084
    4. 'Ans' → logprob: -15.75015926361084
    5. '_r' → logprob: -16.125160217285156
    6. 'r' → logprob: -16.750160217285156
    7. '	ans' → logprob: -17.250160217285156
    8. '(ans' → logprob: -17.500160217285156
    9. '_seg' → logprob: -18.500160217285156
    10. '_ann' → logprob: -18.750160217285156

Token 414: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -3.15441757265944e-05
    2. 'segment' → logprob: -10.375031471252441
    3. 'Segment' → logprob: -16.875032424926758
    4. '```' → logprob: -17.125032424926758
    5. '_seg' → logprob: -17.500032424926758
    6. '_answer' → logprob: -17.875032424926758
    7. '_increment' → logprob: -18.625032424926758
    8. '_segments' → logprob: -18.750032424926758
    9. '_ans' → logprob: -18.750032424926758
    10. '(segment' → logprob: -19.000032424926758

Token 415: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007332704844884574
    2. '_no' → logprob: -7.250733375549316
    3. '(' → logprob: -11.125733375549316
    4. '(no' → logprob: -12.125733375549316
    5. '(
' → logprob: -14.000733375549316
    6. '_ans' → logprob: -14.250733375549316
    7. 'No' → logprob: -14.750733375549316
    8. 'no' → logprob: -15.000733375549316
    9. '```' → logprob: -15.125733375549316
    10. '(answer' → logprob: -15.125733375549316

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01652354747056961
    2. '(ans' → logprob: -4.141523361206055
    3. '(' → logprob: -8.641523361206055
    4. ')' → logprob: -9.266523361206055
    5. ' ,' → logprob: -10.016523361206055
    6. ',no' → logprob: -10.266523361206055
    7. 'No' → logprob: -10.391523361206055
    8. '(no' → logprob: -10.641523361206055
    9. '_no' → logprob: -11.516523361206055
    10. '```' → logprob: -11.641523361206055

Token 417: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3152737021446228
    2. ' l' → logprob: -1.3152737617492676
    3. '0' → logprob: -7.190273761749268
    4. 'r' → logprob: -7.190273761749268
    5. 'initial' → logprob: -8.94027328491211
    6. ' ' → logprob: -9.56527328491211
    7. ' r' → logprob: -9.56527328491211
    8. ')' → logprob: -9.94027328491211
    9. '1' → logprob: -10.06527328491211
    10. ' initial' → logprob: -10.06527328491211

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003233440453186631
    2. ',r' → logprob: -5.753233432769775
    3. ' ,' → logprob: -9.878233909606934
    4. 'r' → logprob: -13.128233909606934
    5. ',
' → logprob: -13.128233909606934
    6. ')' → logprob: -15.753233909606934
    7. ',n' → logprob: -17.003232955932617
    8. '(r' → logprob: -17.128232955932617
    9. 'def' → logprob: -17.253232955932617
    10. 'import' → logprob: -17.253232955932617

Token 419: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.881560041918419e-05
    2. ' r' → logprob: -10.500039100646973
    3. 'increase' → logprob: -11.500039100646973
    4. '   ' → logprob: -14.875039100646973
    5. '
' → logprob: -16.000038146972656
    6. '	r' → logprob: -16.625038146972656
    7. 'process' → logprob: -16.625038146972656
    8. ' increase' → logprob: -16.812538146972656
    9. '_r' → logprob: -16.812538146972656
    10. ' ' → logprob: -16.812538146972656

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020540240220725536
    2. ')
' → logprob: -6.252054214477539
    3. '   ' → logprob: -9.002054214477539
    4. ')return' → logprob: -13.502054214477539
    5. ' )' → logprob: -14.877054214477539
    6. '       ' → logprob: -15.377054214477539
    7. ')
' → logprob: -16.37705421447754
    8. ')

' → logprob: -16.37705421447754
    9. ' ' → logprob: -17.75205421447754
    10. ',' → logprob: -18.12705421447754

Token 421: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037955286097712815
    2. ' return' → logprob: -8.75037956237793
    3. 'return' → logprob: -8.87537956237793
    4. '	return' → logprob: -10.12537956237793
    5. '    ' → logprob: -11.25037956237793
    6. '    
' → logprob: -11.75037956237793
    7. '       ' → logprob: -11.75037956237793
    8. '<|end|>' → logprob: -11.87537956237793
    9. ',' → logprob: -13.62537956237793
    10. '  ' → logprob: -14.00037956237793

Token 422: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9420801997184753
    2. '       ' → logprob: -1.3170802593231201
    3. 'r' (adapté à ' r') → logprob: -1.9420802593231201
    4. 'l' → logprob: -2.31708025932312
    5. 'return' → logprob: -2.56708025932312
    6. 'forward' → logprob: -3.81708025932312
    7. 'print' → logprob: -6.817080020904541
    8. 'def' → logprob: -9.5670804977417
    9. ' forward' → logprob: -9.9420804977417
    10. 'increase' → logprob: -10.0670804977417

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01585252583026886
    2. ' =' → logprob: -4.390852451324463
    3. '+=' → logprob: -5.765852451324463
    4. ' +=' → logprob: -8.515852928161621
    5. '+' → logprob: -13.265852928161621
    6. ',' → logprob: -14.015852928161621
    7. 'return' → logprob: -14.390852928161621
    8. ')' → logprob: -15.265852928161621
    9. '```' → logprob: -15.890852928161621
    10. '=in' → logprob: -16.015851974487305

Token 424: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.0019308974733576179
    2. ' increase' → logprob: -6.2519307136535645
    3. 'increment' → logprob: -13.251931190490723
    4. 'r' → logprob: -15.001931190490723
    5. 'in' → logprob: -16.251930236816406
    6. ' ' → logprob: -16.376930236816406
    7. '  ' → logprob: -17.626930236816406
    8. '   ' → logprob: -17.876930236816406
    9. 'raise' → logprob: -18.626930236816406
    10. 'Increase' → logprob: -18.876930236816406

Token 425: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.12693145871162415
    2. 'r' → logprob: -2.1269314289093018
    3. '(r' → logprob: -12.751931190490723
    4. '	r' → logprob: -15.376931190490723
    5. '_' → logprob: -16.25193214416504
    6. '-r' → logprob: -17.50193214416504
    7. '```' → logprob: -17.62693214416504
    8. '(' → logprob: -17.75193214416504
    9. ' r' → logprob: -17.75193214416504
    10. 'R' → logprob: -17.87693214416504

Token 426: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -5.9153885558771435e-06
    2. 'r' → logprob: -12.625005722045898
    3. '(' → logprob: -13.000005722045898
    4. ' (' → logprob: -15.125005722045898
    5. '(
' → logprob: -18.2500057220459
    6. ' r' → logprob: -18.7500057220459
    7. ')' → logprob: -19.0000057220459
    8. ' ' → logprob: -20.3750057220459
    9. '	r' → logprob: -20.6250057220459
    10. '()' → logprob: -21.3750057220459

Token 427: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47964349389076233
    2. ')
' → logprob: -0.9796434640884399
    3. '   ' → logprob: -5.22964334487915
    4. '       ' → logprob: -9.604643821716309
    5. ')return' → logprob: -9.729643821716309
    6. ')

' → logprob: -10.854643821716309
    7. ')
' → logprob: -10.979643821716309
    8. ',' → logprob: -11.479643821716309
    9. '())
' → logprob: -12.104643821716309
    10. ' )
' → logprob: -12.729643821716309

Token 428: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000285530521068722
    2. '<|end|>' → logprob: -9.125285148620605
    3. '	return' → logprob: -9.250285148620605
    4. 'return' → logprob: -10.375285148620605
    5. ' return' → logprob: -10.750285148620605
    6. '    
' → logprob: -12.125285148620605
    7. '
' → logprob: -12.125285148620605
    8. '       ' → logprob: -12.625285148620605
    9. ' ' → logprob: -13.000285148620605
    10. '    ' → logprob: -13.125285148620605

Token 429: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23176048696041107
    2. 'return' (adapté à ' return') → logprob: -1.6067605018615723
    3. '       ' → logprob: -5.731760501861572
    4. ' return' → logprob: -6.231760501861572
    5. 'l' → logprob: -6.981760501861572
    6. 'else' → logprob: -8.731760025024414
    7. '	return' → logprob: -11.856760025024414
    8. ' ' → logprob: -12.106760025024414
    9. ' else' → logprob: -12.606760025024414
    10. ' l' → logprob: -12.731760025024414

Token 430: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.006205004174262285
    2. '(x' → logprob: -5.381205081939697
    3. ' xo' → logprob: -7.131205081939697
    4. 'True' → logprob: -7.506205081939697
    5. '(True' → logprob: -9.381204605102539
    6. 'xor' → logprob: -10.131204605102539
    7. 'forward' → logprob: -10.506204605102539
    8. 'process' → logprob: -10.631204605102539
    9. 'x' → logprob: -11.631204605102539
    10. ' (' → logprob: -11.756204605102539

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1279553291387856e-05
    2. ',
' → logprob: -12.125011444091797
    3. ' ,' → logprob: -12.500011444091797
    4. '<|end|>' → logprob: -14.250011444091797
    5. '‌,' → logprob: -14.500011444091797
    6. ',s' → logprob: -14.750011444091797
    7. ',

' → logprob: -16.750011444091797
    8. ',\
' → logprob: -16.875011444091797
    9. ',",' → logprob: -17.125011444091797
    10. '‍,' → logprob: -17.125011444091797

Token 432: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -6.2729995988775045e-06
    2. ' su' → logprob: -12.000006675720215
    3. 's' → logprob: -19.6250057220459
    4. '   ' → logprob: -20.7500057220459
    5. 'sub' → logprob: -21.1250057220459
    6. ' ' → logprob: -21.1250057220459
    7. 'Su' → logprob: -21.5000057220459
    8. 'si' → logprob: -21.6250057220459
    9. 'sur' → logprob: -21.8750057220459
    10. 'sup' → logprob: -22.1250057220459

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ' ans' → logprob: -17.250003814697266
    4. 'ans' → logprob: -17.500003814697266
    5. ',
' → logprob: -17.625003814697266
    6. ',r' → logprob: -18.500003814697266
    7. '<|end|>' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.375003814697266
    9. ',s' → logprob: -19.625003814697266
    10. '	ans' → logprob: -19.625003814697266

Token 434: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.4974866644479334e-05
    2. ' ans' → logprob: -11.125015258789062
    3. 'r' → logprob: -16.500015258789062
    4. '(ans' → logprob: -16.750015258789062
    5. '	ans' → logprob: -17.875015258789062
    6. '   ' → logprob: -18.375015258789062
    7. ' ' → logprob: -19.375015258789062
    8. 'True' → logprob: -19.500015258789062
    9. 'ann' → logprob: -19.750015258789062
    10. 'False' → logprob: -20.125015258789062

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001490716531407088
    2. ',r' → logprob: -9.12514877319336
    3. '<|end|>' → logprob: -10.62514877319336
    4. ' ,' → logprob: -11.50014877319336
    5. ',
' → logprob: -12.87514877319336
    6. ',l' → logprob: -13.25014877319336
    7. ',None' → logprob: -15.12514877319336
    8. ',n' → logprob: -15.75014877319336
    9. '   ' → logprob: -15.75014877319336
    10. ',\
' → logprob: -16.00014877319336

Token 436: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005707867676392198
    2. 'r' → logprob: -7.500570774078369
    3. ' l' → logprob: -11.000571250915527
    4. '	l' → logprob: -14.875571250915527
    5. 'True' → logprob: -15.000571250915527
    6. 'False' → logprob: -15.875571250915527
    7. 'ltr' → logprob: -16.25057029724121
    8. '   ' → logprob: -16.50057029724121
    9. ' ' → logprob: -16.87557029724121
    10. 'lr' → logprob: -17.25057029724121

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009370702900923789
    2. ',r' → logprob: -7.125936985015869
    3. 'r' → logprob: -9.000937461853027
    4. ' ,' → logprob: -12.125937461853027
    5. '   ' → logprob: -13.500937461853027
    6. ' r' → logprob: -13.875937461853027
    7. ',
' → logprob: -14.000937461853027
    8. '	r' → logprob: -15.375937461853027
    9. '	' → logprob: -15.500937461853027
    10. ' ' → logprob: -15.625937461853027

Token 438: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003818140830844641
    2. ' r' → logprob: -7.875381946563721
    3. '   ' → logprob: -13.625381469726562
    4. ' ' → logprob: -15.375381469726562
    5. '  ' → logprob: -16.500381469726562
    6. 'increase' → logprob: -16.500381469726562
    7. '    ' → logprob: -16.625381469726562
    8. '(r' → logprob: -17.750381469726562
    9. ',' → logprob: -17.875381469726562
    10. '	r' → logprob: -18.000381469726562

Token 439: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.031157969729975e-05
    2. '<|end|>' → logprob: -10.250090599060059
    3. 'else' → logprob: -10.625090599060059
    4. '    
' → logprob: -11.750090599060059
    5. ',' → logprob: -12.125090599060059
    6. '    ' → logprob: -12.875090599060059
    7. 'def' → logprob: -13.125090599060059
    8. '  ' → logprob: -13.250090599060059
    9. 'return' → logprob: -13.250090599060059
    10. '
' → logprob: -13.250090599060059

Token 440: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.016752632334828377
    2. ' True' → logprob: -4.14175271987915
    3. 'False' → logprob: -7.26675271987915
    4. 'forward' → logprob: -11.641752243041992
    5. ' False' → logprob: -12.516752243041992
    6. '(True' → logprob: -13.266752243041992
    7. '1' → logprob: -13.516752243041992
    8. 'process' → logprob: -13.766752243041992
    9. 'None' → logprob: -13.891752243041992
    10. ' ' → logprob: -14.391752243041992

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006901554297655821
    2. '<|end|>' → logprob: -7.37568998336792
    3. 'else' → logprob: -10.750690460205078
    4. ' else' → logprob: -11.250690460205078
    5. '    
' → logprob: -11.625690460205078
    6. '	else' → logprob: -12.125690460205078
    7. '<|end|>' → logprob: -12.250690460205078
    8. '    ' → logprob: -13.250690460205078
    9. '
' → logprob: -13.500690460205078
    10. '  ' → logprob: -13.750690460205078

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016381312161684036
    2. ' else' → logprob: -4.89138126373291
    3. 'else' → logprob: -5.01638126373291
    4. '	else' → logprob: -6.26638126373291
    5. '    
' → logprob: -9.64138126373291
    6. '<|end|>' → logprob: -9.89138126373291
    7. '	elif' → logprob: -10.89138126373291
    8. 'elif' → logprob: -11.01638126373291
    9. '```' → logprob: -12.14138126373291
    10. '.' → logprob: -12.26638126373291

Token 443: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7061234712600708
    2. '   ' → logprob: -0.8311234712600708
    3. ' else' → logprob: -2.7061233520507812
    4. 'return' → logprob: -5.956123352050781
    5. 'xo' → logprob: -7.581123352050781
    6. ' xo' → logprob: -7.831123352050781
    7. 'elif' → logprob: -8.831123352050781
    8. '	else' → logprob: -9.081123352050781
    9. ' ' → logprob: -9.331123352050781
    10. ' return' → logprob: -9.456123352050781

Token 444: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.500423789024353
    2. ':' → logprob: -1.000423789024353
    3. '       ' → logprob: -3.7504239082336426
    4. '   ' → logprob: -6.625423908233643
    5. ',' → logprob: -7.000423908233643
    6. ':return' → logprob: -8.750423431396484
    7. ':
' → logprob: -10.625423431396484
    8. ':

' → logprob: -11.250423431396484
    9. ' :
' → logprob: -11.250423431396484
    10. '):
' → logprob: -11.750423431396484

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013053566217422485
    2. '   ' → logprob: -6.75130558013916
    3. 'return' → logprob: -9.12630558013916
    4. 'r' → logprob: -11.75130558013916
    5. ' return' → logprob: -11.75130558013916
    6. 'x' → logprob: -12.62630558013916
    7. 'ans' → logprob: -13.37630558013916
    8. 'xo' → logprob: -13.50130558013916
    9. '     ' → logprob: -14.12630558013916
    10. '    ' → logprob: -14.37630558013916

Token 446: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3641549348831177
    2. 'ans' → logprob: -1.2391549348831177
    3. '   ' → logprob: -4.364154815673828
    4. 'r' → logprob: -6.614154815673828
    5. ' return' → logprob: -6.739154815673828
    6. '       ' → logprob: -9.364154815673828
    7. 'xo' → logprob: -9.614154815673828
    8. ' ' → logprob: -9.864154815673828
    9. ' ans' → logprob: -10.114154815673828
    10. '  ' → logprob: -11.239154815673828

Token 447: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.0008565509924665093
    2. ' xo' → logprob: -7.125856399536133
    3. 'None' → logprob: -10.500856399536133
    4. 'xor' → logprob: -10.875856399536133
    5. 'False' → logprob: -13.000856399536133
    6. '(x' → logprob: -13.875856399536133
    7. '   ' → logprob: -14.000856399536133
    8. 'x' → logprob: -14.125856399536133
    9. ' None' → logprob: -15.125856399536133
    10. ' ' → logprob: -15.250856399536133

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ',s' → logprob: -12.625004768371582
    3. ' ,' → logprob: -13.750004768371582
    4. '<|end|>' → logprob: -15.250004768371582
    5. ',
' → logprob: -16.0000057220459
    6. '‌,' → logprob: -16.5000057220459
    7. 's' → logprob: -17.7500057220459
    8. '‍,' → logprob: -18.2500057220459
    9. '_,' → logprob: -18.5000057220459
    10. ',
' → logprob: -18.7500057220459

Token 449: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.5759427547454834
    2. ' su' → logprob: -0.8259427547454834
    3. 's' → logprob: -13.075942993164062
    4. ' ' → logprob: -14.700942993164062
    5. 'sub' → logprob: -15.950942993164062
    6. ' sus' → logprob: -16.075942993164062
    7. '
' → logprob: -16.575942993164062
    8. '	s' → logprob: -16.700942993164062
    9. 'sup' → logprob: -16.700942993164062
    10. ' ' → logprob: -17.325942993164062

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. 'ans' → logprob: -17.875001907348633
    7. ',None' → logprob: -18.625001907348633
    8. '_,' → logprob: -19.000001907348633
    9. 'def' → logprob: -19.250001907348633
    10. '(ans' → logprob: -19.625001907348633

Token 451: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1160349458805285e-05
    2. ' ans' → logprob: -11.625011444091797
    3. '   ' → logprob: -14.125011444091797
    4. 'r' → logprob: -14.625011444091797
    5. 'False' → logprob: -15.000011444091797
    6. '	ans' → logprob: -15.125011444091797
    7. ' ' → logprob: -16.250011444091797
    8. '(ans' → logprob: -16.750011444091797
    9. '  ' → logprob: -16.875011444091797
    10. ',' → logprob: -17.500011444091797

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.043078898685053e-05
    2. ',l' → logprob: -9.375090599060059
    3. 'l' → logprob: -12.250090599060059
    4. 'False' → logprob: -15.000090599060059
    5. ' ,' → logprob: -15.250090599060059
    6. 'None' → logprob: -16.750089645385742
    7. '```' → logprob: -17.125089645385742
    8. ',None' → logprob: -18.000089645385742
    9. 'false' → logprob: -18.250089645385742
    10. '0' → logprob: -18.750089645385742

Token 453: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.754368223482743e-05
    2. ' l' → logprob: -9.625067710876465
    3. '	l' → logprob: -14.375067710876465
    4. '   ' → logprob: -14.750067710876465
    5. 'False' → logprob: -15.375067710876465
    6. ' ' → logprob: -17.12506675720215
    7. '  ' → logprob: -17.37506675720215
    8. 'r' → logprob: -17.37506675720215
    9. 'None' → logprob: -17.75006675720215
    10. '    ' → logprob: -17.75006675720215

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012252279557287693
    2. ',r' → logprob: -6.751224994659424
    3. 'r' → logprob: -10.751225471496582
    4. ' ,' → logprob: -10.876225471496582
    5. '   ' → logprob: -12.001225471496582
    6. '+' → logprob: -12.876225471496582
    7. '```' → logprob: -13.251225471496582
    8. ',
' → logprob: -14.251225471496582
    9. ' r' → logprob: -14.501225471496582
    10. '<|end|>' → logprob: -14.626225471496582

Token 455: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001955537445610389
    2. 'increase' → logprob: -8.750195503234863
    3. ' r' → logprob: -10.875195503234863
    4. 'False' → logprob: -11.500195503234863
    5. 'True' → logprob: -12.500195503234863
    6. '   ' → logprob: -13.750195503234863
    7. '	r' → logprob: -14.750195503234863
    8. ' ' → logprob: -15.000195503234863
    9. 'increment' → logprob: -15.250195503234863
    10. ',r' → logprob: -15.375195503234863

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034903085324913263
    2. 'False' → logprob: -6.003490447998047
    3. 'def' → logprob: -7.503490447998047
    4. 'True' → logprob: -8.628490447998047
    5. '<|end|>' → logprob: -8.753490447998047
    6. '   ' → logprob: -11.003490447998047
    7. '=False' → logprob: -11.128490447998047
    8. ',
' → logprob: -11.253490447998047
    9. '
' → logprob: -11.378490447998047
    10. ' ,' → logprob: -11.878490447998047

Token 457: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.107425062713446e-06
    2. ' False' → logprob: -11.875006675720215
    3. 'True' → logprob: -16.25000762939453
    4. '(False' → logprob: -16.62500762939453
    5. '=False' → logprob: -19.00000762939453
    6. '
' → logprob: -19.75000762939453
    7. '   ' → logprob: -20.12500762939453
    8. 'false' → logprob: -20.87500762939453
    9. '[' → logprob: -21.25000762939453
    10. 'F' → logprob: -21.25000762939453

Token 458: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6940811276435852
    2. '<|end|>' → logprob: -0.6940811276435852
    3. '
' → logprob: -8.19408130645752
    4. ')' → logprob: -8.19408130645752
    5. '<|end|>' → logprob: -9.56908130645752
    6. '_' → logprob: -9.69408130645752
    7. '#' → logprob: -10.06908130645752
    8. '```' → logprob: -10.19408130645752
    9. ':' → logprob: -10.31908130645752
    10. '  
' → logprob: -10.81908130645752

Token 459: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015364410355687141
    2. '<|end|>' → logprob: -4.390364646911621
    3. '```' → logprob: -6.765364646911621
    4. ')' → logprob: -7.265364646911621
    5. 'x' → logprob: -8.265364646911621
    6. '#' → logprob: -8.640364646911621
    7. ':' → logprob: -9.265364646911621
    8. '
' → logprob: -9.390364646911621
    9. '...' → logprob: -10.265364646911621
    10. ',' → logprob: -10.390364646911621

Token 460: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.029833218082785606
    2. ' process' → logprob: -3.5298333168029785
    3. 'reverse' → logprob: -10.90483283996582
    4. 'initial' → logprob: -11.02983283996582
    5. 'def' → logprob: -11.40483283996582
    6. 'rocess' → logprob: -11.77983283996582
    7. 'increase' → logprob: -12.02983283996582
    8. '_process' → logprob: -12.52983283996582
    9. '(process' → logprob: -12.77983283996582
    10. 'back' → logprob: -13.15483283996582

Token 461: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.027978500351309776
    2. '_forward' → logprob: -4.027978420257568
    3. '_reverse' → logprob: -5.152978420257568
    4. '_back' → logprob: -5.527978420257568
    5. '_return' → logprob: -12.777978897094727
    6. '_' → logprob: -12.902978897094727
    7. '_inverse' → logprob: -12.902978897094727
    8. '_not' → logprob: -13.152978897094727
    9. '   ' → logprob: -13.277978897094727
    10. 'back' → logprob: -13.777978897094727

Token 462: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004141449462622404
    2. '(' → logprob: -5.504141330718994
    3. '(_' → logprob: -10.629141807556152
    4. '(l' → logprob: -11.254141807556152
    5. '_' → logprob: -11.254141807556152
    6. ' (' → logprob: -13.004141807556152
    7. '():' → logprob: -13.129141807556152
    8. '(s' → logprob: -13.379141807556152
    9. '()' → logprob: -13.504141807556152
    10. '(r' → logprob: -14.004141807556152

Token 463: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0001158211671281606
    2. '_o' → logprob: -10.000115394592285
    3. 'or' → logprob: -10.125115394592285
    4. '_' → logprob: -12.250115394592285
    5. '(o' → logprob: -12.250115394592285
    6. '```' → logprob: -12.875115394592285
    7. '	o' → logprob: -13.125115394592285
    8. 'о' → logprob: -13.500115394592285
    9. ''o' → logprob: -13.625115394592285
    10. ' o' → logprob: -13.875115394592285

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012797261297237128
    2. ' ,' → logprob: -9.250127792358398
    3. '_,' → logprob: -11.375127792358398
    4. '(x' → logprob: -11.375127792358398
    5. ',x' → logprob: -12.375127792358398
    6. 's' → logprob: -13.625127792358398
    7. ',
' → logprob: -14.125127792358398
    8. ',s' → logprob: -14.125127792358398
    9. '   ' → logprob: -14.750127792358398
    10. '_s' → logprob: -15.125127792358398

Token 465: ' su' (ID: 593)
  Prédit: ' su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.42880991101264954
    2. 'su' → logprob: -1.0538098812103271
    3. 's' → logprob: -9.178810119628906
    4. 'sub' → logprob: -13.178810119628906
    5. ' ' → logprob: -13.928810119628906
    6. '   ' → logprob: -14.678810119628906
    7. 'def' → logprob: -14.803810119628906
    8. ')' → logprob: -15.303810119628906
    9. 'sup' → logprob: -15.428810119628906
    10. 'si' → logprob: -15.678810119628906

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.824579784530215e-05
    2. ' ,' → logprob: -9.8750581741333
    3. ',x' → logprob: -12.3750581741333
    4. '   ' → logprob: -14.1250581741333
    5. '_,' → logprob: -14.5000581741333
    6. ',
' → logprob: -14.5000581741333
    7. ',l' → logprob: -16.125059127807617
    8. ' ' → logprob: -16.375059127807617
    9. '):' → logprob: -16.625059127807617
    10. '(x' → logprob: -16.625059127807617

Token 467: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10035018622875214
    2. ' ans' → logprob: -2.3503501415252686
    3. 'xo' → logprob: -9.350350379943848
    4. '(ans' → logprob: -11.100350379943848
    5. '	ans' → logprob: -11.475350379943848
    6. '   ' → logprob: -11.475350379943848
    7. ' ' → logprob: -11.725350379943848
    8. ' xo' → logprob: -12.100350379943848
    9. '    ' → logprob: -13.100350379943848
    10. 'x' → logprob: -14.350350379943848

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ' ,' → logprob: -12.000012397766113
    3. ',l' → logprob: -12.125012397766113
    4. '   ' → logprob: -14.750012397766113
    5. ',
' → logprob: -15.750012397766113
    6. ',x' → logprob: -15.875012397766113
    7. '_,' → logprob: -16.62501335144043
    8. 'def' → logprob: -16.75001335144043
    9. ',r' → logprob: -18.00001335144043
    10. '):' → logprob: -18.12501335144043

Token 469: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5233484506607056
    2. ' l' → logprob: -0.8983484506607056
    3. '   ' → logprob: -9.648348808288574
    4. 'r' → logprob: -10.023348808288574
    5. ' ' → logprob: -10.523348808288574
    6. '    ' → logprob: -11.023348808288574
    7. '	l' → logprob: -11.148348808288574
    8. ',' → logprob: -11.648348808288574
    9. ')' → logprob: -11.773348808288574
    10. 'x' → logprob: -11.773348808288574

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.659005157416686e-05
    2. ' ,' → logprob: -10.000066757202148
    3. ',r' → logprob: -11.250066757202148
    4. ',
' → logprob: -12.500066757202148
    5. '   ' → logprob: -13.125066757202148
    6. 'def' → logprob: -14.250066757202148
    7. ',l' → logprob: -15.125066757202148
    8. '):
' → logprob: -15.250066757202148
    9. '):' → logprob: -15.500066757202148
    10. ' ' → logprob: -15.750066757202148

Token 471: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008625093847513199
    2. ' r' → logprob: -4.758625030517578
    3. '   ' → logprob: -12.258625030517578
    4. 's' → logprob: -12.883625030517578
    5. ' ' → logprob: -13.508625030517578
    6. ')' → logprob: -14.758625030517578
    7. '  ' → logprob: -15.008625030517578
    8. '    ' → logprob: -15.258625030517578
    9. 'def' → logprob: -15.258625030517578
    10. '```' → logprob: -16.008625030517578

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008399999933317304
    2. '):' → logprob: -7.625840187072754
    3. '   ' → logprob: -8.500840187072754
    4. '):
' → logprob: -8.875840187072754
    5. ' ,' → logprob: -12.625840187072754
    6. ',
' → logprob: -12.875840187072754
    7. ')' → logprob: -13.750840187072754
    8. ',x' → logprob: -14.000840187072754
    9. ' ):' → logprob: -15.875840187072754
    10. '):

' → logprob: -16.000839233398438

Token 473: ' lis' (ID: 20784)
  Prédit: ' lis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.20529808104038239
    2. 'lis' → logprob: -1.7052980661392212
    3. '   ' → logprob: -5.955297946929932
    4. 'xo' → logprob: -7.830297946929932
    5. ' ' → logprob: -7.955297946929932
    6. ' xo' → logprob: -8.58029842376709
    7. '    ' → logprob: -9.58029842376709
    8. ')' → logprob: -10.08029842376709
    9. '  ' → logprob: -10.33029842376709
    10. 'li' → logprob: -10.58029842376709

Token 474: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38709700107574463
    2. '):
' → logprob: -1.1370970010757446
    3. ')' → logprob: -9.012097358703613
    4. '   ' → logprob: -9.512097358703613
    5. '):
' → logprob: -10.762097358703613
    6. ',' → logprob: -12.762097358703613
    7. '):

' → logprob: -12.887097358703613
    8. ' ):' → logprob: -13.512097358703613
    9. ':' → logprob: -14.262097358703613
    10. ' ' → logprob: -15.262097358703613

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0548117570579052
    2. 'xo' → logprob: -3.054811716079712
    3. ' xo' → logprob: -5.304811954498291
    4. 'su' → logprob: -7.554811954498291
    5. ' ' → logprob: -8.054811477661133
    6. ' su' → logprob: -9.054811477661133
    7. 'xor' → logprob: -9.804811477661133
    8. 'x' → logprob: -9.929811477661133
    9. '```' → logprob: -9.929811477661133
    10. '   ' → logprob: -10.679811477661133

Token 476: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' (adapté à ' xo') → logprob: -0.5863596796989441
    2. '   ' → logprob: -0.8363596796989441
    3. ' xo' → logprob: -4.83635950088501
    4. ' ' → logprob: -7.08635950088501
    5. 'xor' → logprob: -7.33635950088501
    6. 'if' → logprob: -7.83635950088501
    7. 'while' → logprob: -8.461359977722168
    8. 'su' → logprob: -9.211359977722168
    9. '  ' → logprob: -9.461359977722168
    10. 'x' → logprob: -10.711359977722168

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11327308416366577
    2. '=' → logprob: -2.2382731437683105
    3. ',' → logprob: -7.7382731437683105
    4. '_' → logprob: -12.488272666931152
    5. '_val' → logprob: -12.613272666931152
    6. ' ,' → logprob: -13.238272666931152
    7. ' ' → logprob: -13.738272666931152
    8. ',x' → logprob: -14.238272666931152
    9. 'x' → logprob: -14.488272666931152
    10. '   ' → logprob: -14.863272666931152

Token 478: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.026929223909974098
    2. ' xor' → logprob: -3.6519291400909424
    3. 'sub' → logprob: -7.5269293785095215
    4. ' sub' → logprob: -10.151928901672363
    5. 'x' → logprob: -11.151928901672363
    6. 'xo' → logprob: -11.401928901672363
    7. ' ' → logprob: -11.526928901672363
    8. '^' → logprob: -12.401928901672363
    9. 'add' → logprob: -12.776928901672363
    10. ' xo' → logprob: -13.151928901672363

Token 479: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00031258241506293416
    2. '_' → logprob: -8.125312805175781
    3. ' _' → logprob: -11.250312805175781
    4. '_VAL' → logprob: -13.500312805175781
    5. 'val' → logprob: -14.625312805175781
    6. 'Val' → logprob: -14.750312805175781
    7. '<|end|>' → logprob: -15.125312805175781
    8. ',' → logprob: -15.250312805175781
    9. ' ' → logprob: -16.12531280517578
    10. ')' → logprob: -16.62531280517578

Token 480: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4972352087497711
    2. 'xo' → logprob: -0.9972351789474487
    3. 'x' → logprob: -3.9972352981567383
    4. '(s' → logprob: -5.747235298156738
    5. 'su' → logprob: -6.872235298156738
    6. ' xo' → logprob: -8.997235298156738
    7. 'xor' → logprob: -9.872235298156738
    8. 's' → logprob: -10.247235298156738
    9. 'xu' → logprob: -10.497235298156738
    10. '(' → logprob: -10.622235298156738

Token 481: 'o' (ID: 78)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.10176052153110504
    2. 'xo' → logprob: -2.8517606258392334
    3. '(s' → logprob: -4.351760387420654
    4. 'val' → logprob: -4.601760387420654
    5. '_val' → logprob: -4.976760387420654
    6. ',' → logprob: -6.226760387420654
    7. 'o' → logprob: -6.601760387420654
    8. 'x' → logprob: -6.726760387420654
    9. 's' → logprob: -7.101760387420654
    10. ' su' → logprob: -7.351760387420654

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',
' → logprob: -12.750007629394531
    4. 'xor' → logprob: -14.750007629394531
    5. '[' → logprob: -16.12500762939453
    6. ')' → logprob: -16.50000762939453
    7. ',

' → logprob: -16.75000762939453
    8. ',l' → logprob: -16.75000762939453
    9. '(' → logprob: -16.87500762939453
    10. '<|end|>' → logprob: -17.12500762939453

Token 483: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.1801658272743225
    2. ' lis' → logprob: -1.8051657676696777
    3. 'xor' → logprob: -8.680166244506836
    4. 'li' → logprob: -9.305166244506836
    5. 'sub' → logprob: -10.305166244506836
    6. 'list' → logprob: -10.930166244506836
    7. ' ' → logprob: -11.305166244506836
    8. 'ls' → logprob: -11.430166244506836
    9. 'x' → logprob: -11.680166244506836
    10. 'xo' → logprob: -11.930166244506836

Token 484: '[l' (ID: 38286)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.019151048734784126
    2. 'r' → logprob: -4.019151210784912
    3. '[' → logprob: -7.394151210784912
    4. ']' → logprob: -9.019150733947754
    5. '[l' → logprob: -9.144150733947754
    6. ')' → logprob: -10.144150733947754
    7. '   ' → logprob: -10.519150733947754
    8. '(r' → logprob: -11.394150733947754
    9. '][' → logprob: -11.644150733947754
    10. ',' → logprob: -11.894150733947754

Token 485: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2257806807756424
    2. '])
' → logprob: -1.600780725479126
    3. '+' → logprob: -9.100780487060547
    4. '   ' → logprob: -9.100780487060547
    5. ']' → logprob: -10.100780487060547
    6. '])
' → logprob: -10.225780487060547
    7. ' ])' → logprob: -10.975780487060547
    8. ')' → logprob: -11.100780487060547
    9. ' ])
' → logprob: -11.850780487060547
    10. ' ' → logprob: -11.975780487060547

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019013047218322754
    2. 'su' → logprob: -4.144012928009033
    3. ' su' → logprob: -6.394012928009033
    4. '
' → logprob: -7.019012928009033
    5. '    
' → logprob: -8.519013404846191
    6. '```' → logprob: -9.644013404846191
    7. ',' → logprob: -9.769013404846191
    8. '    ' → logprob: -10.019013404846191
    9. ' ' → logprob: -12.144013404846191
    10. ')' → logprob: -12.269013404846191

Token 487: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -0.002482553943991661
    2. '   ' → logprob: -6.0024824142456055
    3. ' su' → logprob: -12.002482414245605
    4. ' ' → logprob: -14.877482414245605
    5. '  ' → logprob: -15.752482414245605
    6. 'sub' → logprob: -15.752482414245605
    7. '
' → logprob: -17.752483367919922
    8. 's' → logprob: -18.002483367919922
    9. '	s' → logprob: -18.377483367919922
    10. '```' → logprob: -18.377483367919922

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407954931259155
    2. ' =' → logprob: -0.9740795493125916
    3. '+=' → logprob: -13.974079132080078
    4. ' +=' → logprob: -14.349079132080078
    5. '   ' → logprob: -15.099079132080078
    6. ' ' → logprob: -15.099079132080078
    7. ',' → logprob: -15.849079132080078
    8. '<|end|>' → logprob: -16.224079132080078
    9. '+' → logprob: -16.474079132080078
    10. '=
' → logprob: -16.849079132080078

Token 489: ' sub' (ID: 1543)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0015214069280773401
    2. ' add' → logprob: -6.501521587371826
    3. 'sub' → logprob: -10.876521110534668
    4. ' sub' → logprob: -16.626522064208984
    5. '	add' → logprob: -16.876522064208984
    6. ' ' → logprob: -17.251522064208984
    7. 'subtract' → logprob: -18.251522064208984
    8. ')add' → logprob: -18.501522064208984
    9. '(add' → logprob: -18.626522064208984
    10. '   ' → logprob: -19.376522064208984

Token 490: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.054500666621607e-06
    2. 'val' → logprob: -12.75000286102295
    3. 'su' → logprob: -18.500003814697266
    4. '_' → logprob: -19.000003814697266
    5. 'Val' → logprob: -19.000003814697266
    6. '_VAL' → logprob: -19.000003814697266
    7. '```' → logprob: -19.750003814697266
    8. '(val' → logprob: -20.125003814697266
    9. '(_' → logprob: -20.125003814697266
    10. ' _' → logprob: -20.375003814697266

Token 491: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012511172099038959
    2. 'su' → logprob: -9.00012493133545
    3. 's' → logprob: -13.37512493133545
    4. '(' → logprob: -18.625125885009766
    5. 'Su' → logprob: -19.000125885009766
    6. ' su' → logprob: -19.250125885009766
    7. ')' → logprob: -19.625125885009766
    8. '   ' → logprob: -20.000125885009766
    9. 'val' → logprob: -20.000125885009766
    10. 'x' → logprob: -20.125125885009766

Token 492: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.537180211627856e-05
    2. '(u' → logprob: -10.375045776367188
    3. 'su' → logprob: -11.625045776367188
    4. '(s' → logprob: -12.500045776367188
    5. '	u' → logprob: -14.625045776367188
    6. 'uo' → logprob: -15.750045776367188
    7. 'o' → logprob: -15.750045776367188
    8. ' u' → logprob: -16.250045776367188
    9. ')' → logprob: -16.250045776367188
    10. 'у' → logprob: -16.375045776367188

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017553119687363505
    2. ',s' → logprob: -8.875175476074219
    3. '(s' → logprob: -10.375175476074219
    4. 'su' → logprob: -13.000175476074219
    5. ' ,' → logprob: -13.875175476074219
    6. ')' → logprob: -14.500175476074219
    7. '(' → logprob: -15.125175476074219
    8. 's' → logprob: -15.500175476074219
    9. ',
' → logprob: -16.62517547607422
    10. ' ' → logprob: -16.75017547607422

Token 494: ' lis' (ID: 20784)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.07892537117004395
    2. 'lis' → logprob: -2.578925371170044
    3. ' su' → logprob: -10.953925132751465
    4. ' lis' → logprob: -11.578925132751465
    5. 'li' → logprob: -12.203925132751465
    6. 'lus' → logprob: -13.578925132751465
    7. 'ls' → logprob: -13.828925132751465
    8. 'sis' → logprob: -14.953925132751465
    9. 's' → logprob: -15.203925132751465
    10. 'lu' → logprob: -15.578925132751465

Token 495: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0030753985047340393
    2. ',' → logprob: -6.12807559967041
    3. '[s' → logprob: -7.62807559967041
    4. '[' → logprob: -8.87807559967041
    5. ',l' → logprob: -8.87807559967041
    6. 'su' → logprob: -9.62807559967041
    7. 'l' → logprob: -10.75307559967041
    8. '(l' → logprob: -11.25307559967041
    9. '[r' → logprob: -11.37807559967041
    10. '[u' → logprob: -12.87807559967041

Token 496: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14594274759292603
    2. ')
' → logprob: -2.0209426879882812
    3. '])' → logprob: -6.020942687988281
    4. '])
' → logprob: -7.270942687988281
    5. ')]' → logprob: -10.020942687988281
    6. '),' → logprob: -10.645942687988281
    7. ')

' → logprob: -11.520942687988281
    8. ')
' → logprob: -11.520942687988281
    9. '   ' → logprob: -11.895942687988281
    10. ',' → logprob: -11.895942687988281

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7954958821064793e-05
    2. ' l' → logprob: -11.125018119812012
    3. '    ' → logprob: -13.500018119812012
    4. 'l' → logprob: -13.750018119812012
    5. '```' → logprob: -15.000018119812012
    6. '       ' → logprob: -15.750018119812012
    7. '<|end|>' → logprob: -17.500017166137695
    8. '  ' → logprob: -17.500017166137695
    9. '	l' → logprob: -17.750017166137695
    10. '   ' → logprob: -17.875017166137695

Token 498: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5618480443954468
    2. '   ' → logprob: -1.0618480443954468
    3. 'if' (adapté à ' if') → logprob: -2.5618481636047363
    4. ' l' → logprob: -5.436848163604736
    5. ' if' → logprob: -6.686848163604736
    6. 'ans' → logprob: -7.061848163604736
    7. '       ' → logprob: -8.561847686767578
    8. '	l' → logprob: -9.811847686767578
    9. '```' → logprob: -10.311847686767578
    10. '    ' → logprob: -10.561847686767578

Token 499: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.012563803233206272
    2. ' xo' → logprob: -4.387563705444336
    3. 'xor' → logprob: -10.262563705444336
    4. 'not' → logprob: -11.887563705444336
    5. ' ' → logprob: -12.387563705444336
    6. ' not' → logprob: -12.512563705444336
    7. '   ' → logprob: -12.887563705444336
    8. '(x' → logprob: -14.512563705444336
    9. '
' → logprob: -15.012563705444336
    10. '  ' → logprob: -15.387563705444336

Token 500: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -8.613945101387799e-05
    2. '_' → logprob: -9.750085830688477
    3. ' _' → logprob: -11.125085830688477
    4. 's' → logprob: -11.875085830688477
    5. '_equals' → logprob: -13.250085830688477
    6. ' ==' → logprob: -13.875085830688477
    7. '<|end|>' → logprob: -14.000085830688477
    8. '==' → logprob: -14.125085830688477
    9. ',' → logprob: -14.250085830688477
    10. '_equal' → logprob: -15.000085830688477

Token 501: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005426562391221523
    2. '_equal' → logprob: -5.380426406860352
    3. 'equal' → logprob: -8.505426406860352
    4. 'su' → logprob: -8.880426406860352
    5. '_equals' → logprob: -9.255426406860352
    6. '_u' → logprob: -9.505426406860352
    7. '_s' → logprob: -9.755426406860352
    8. 'e' → logprob: -9.755426406860352
    9. 'o' → logprob: -10.255426406860352
    10. '_' → logprob: -10.505426406860352

Token 502: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0009145628428086638
    2. 'equal' → logprob: -7.000914573669434
    3. '_EQUAL' → logprob: -14.125914573669434
    4. 'Equal' → logprob: -14.250914573669434
    5. '_equals' → logprob: -14.250914573669434
    6. ' equal' → logprob: -15.375914573669434
    7. '==' → logprob: -15.750914573669434
    8. 'qual' → logprob: -15.875914573669434
    9. '_eq' → logprob: -16.375913619995117
    10. '_s' → logprob: -16.625913619995117

Token 503: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4617256056226324e-05
    2. '(' → logprob: -11.750014305114746
    3. '(s' → logprob: -12.125014305114746
    4. ' (' → logprob: -14.375014305114746
    5. 'x' → logprob: -14.875014305114746
    6. '(
' → logprob: -15.875014305114746
    7. ')' → logprob: -17.375015258789062
    8. ' ' → logprob: -18.000015258789062
    9. '   ' → logprob: -19.375015258789062
    10. '```' → logprob: -19.625015258789062

Token 504: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.027801362797617912
    2. 'su' → logprob: -4.652801513671875
    3. ',' → logprob: -4.777801513671875
    4. 'xo' → logprob: -4.902801513671875
    5. '(x' → logprob: -7.277801513671875
    6. 'u' → logprob: -7.777801513671875
    7. '_,' → logprob: -8.527801513671875
    8. 'x' → logprob: -9.152801513671875
    9. 's' → logprob: -9.402801513671875
    10. 'oo' → logprob: -9.402801513671875

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ' ,' → logprob: -9.500106811523438
    3. '(x' → logprob: -11.375106811523438
    4. ',x' → logprob: -11.375106811523438
    5. ',
' → logprob: -12.375106811523438
    6. ',s' → logprob: -12.625106811523438
    7. '(s' → logprob: -14.250106811523438
    8. ')' → logprob: -14.750106811523438
    9. '),' → logprob: -16.125106811523438
    10. ' ' → logprob: -16.250106811523438

Token 506: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0025341638829559088
    2. ' su' → logprob: -6.00253438949585
    3. 'sub' → logprob: -10.627533912658691
    4. 's' → logprob: -11.002533912658691
    5. '
' → logprob: -12.002533912658691
    6. ' ' → logprob: -13.252533912658691
    7. '(s' → logprob: -13.502533912658691
    8. ')' → logprob: -13.752533912658691
    9. 'sur' → logprob: -13.877533912658691
    10. '   ' → logprob: -14.127533912658691

Token 507: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014846005477011204
    2. '):' → logprob: -5.014845848083496
    3. '):
' → logprob: -5.014845848083496
    4. '(x' → logprob: -7.014845848083496
    5. '   ' → logprob: -7.639845848083496
    6. ',
' → logprob: -11.014845848083496
    7. ')' → logprob: -11.639845848083496
    8. ' ,' → logprob: -11.764845848083496
    9. '       ' → logprob: -11.889845848083496
    10. '(' → logprob: -12.014845848083496

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0802738870552275e-05
    2. '<|end|>' → logprob: -12.75001049041748
    3. '   ' → logprob: -13.25001049041748
    4. ',' → logprob: -13.87501049041748
    5. '```' → logprob: -13.87501049041748
    6. '	' → logprob: -14.50001049041748
    7. '      ' → logprob: -14.87501049041748
    8. 'return' → logprob: -15.00001049041748
    9. '        
' → logprob: -15.00001049041748
    10. ')' → logprob: -15.25001049041748

Token 509: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5556849241256714
    2. '       ' → logprob: -1.4306849241256714
    3. ' ans' → logprob: -1.6806849241256714
    4. '   ' → logprob: -7.930685043334961
    5. '	ans' → logprob: -7.930685043334961
    6. '(ans' → logprob: -9.555685043334961
    7. 'answer' → logprob: -10.305685043334961
    8. '           ' → logprob: -10.680685043334961
    9. '        ' → logprob: -11.305685043334961
    10. '_ans' → logprob: -11.555685043334961

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20160317420959473
    2. '=' → logprob: -1.7016031742095947
    3. ',' → logprob: -8.576602935791016
    4. ' ' → logprob: -14.451602935791016
    5. ' ,' → logprob: -15.076602935791016
    6. ')' → logprob: -15.576602935791016
    7. '<|end|>' → logprob: -15.951602935791016
    8. ' =
' → logprob: -16.701602935791016
    9. '=in' → logprob: -16.701602935791016
    10. '   ' → logprob: -16.826602935791016

Token 511: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.25193139910697937
    2. ' increase' → logprob: -1.5019314289093018
    3. 'in' → logprob: -13.126931190490723
    4. ' increasing' → logprob: -16.25193214416504
    5. 'increment' → logprob: -16.50193214416504
    6. ' decrease' → logprob: -17.37693214416504
    7. '   ' → logprob: -17.50193214416504
    8. '       ' → logprob: -17.50193214416504
    9. '        ' → logprob: -17.75193214416504
    10. ' increased' → logprob: -18.12693214416504

Token 512: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.8550976164988242e-05
    2. '_answer' → logprob: -12.000018119812012
    3. '_' → logprob: -12.125018119812012
    4. 'ans' → logprob: -12.750018119812012
    5. ''_' → logprob: -14.250018119812012
    6. '_val' → logprob: -14.500018119812012
    7. '_s' → logprob: -14.625018119812012
    8. '_answers' → logprob: -15.000018119812012
    9. '```' → logprob: -15.125018119812012
    10. '_an' → logprob: -15.500018119812012

Token 513: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.00197395752184093
    2. '_ans' → logprob: -6.376974105834961
    3. 'segment' → logprob: -8.626974105834961
    4. 'ans' → logprob: -9.501974105834961
    5. '_seg' → logprob: -11.501974105834961
    6. '_answer' → logprob: -12.376974105834961
    7. '(ans' → logprob: -13.501974105834961
    8. 'Segment' → logprob: -13.626974105834961
    9. ' ans' → logprob: -15.251974105834961
    10. '_segments' → logprob: -15.626974105834961

Token 514: '_no' (ID: 13575)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00014239625306800008
    2. 'ans' → logprob: -8.875142097473145
    3. ' ans' → logprob: -13.250142097473145
    4. '(answer' → logprob: -14.750142097473145
    5. '_ans' → logprob: -15.625142097473145
    6. '	ans' → logprob: -15.750142097473145
    7. '(
' → logprob: -17.62514305114746
    8. '```' → logprob: -17.75014305114746
    9. 'No' → logprob: -17.87514305114746
    10. 'no' → logprob: -18.37514305114746

Token 515: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.08389382064342499
    2. '_ans' → logprob: -2.5838937759399414
    3. '(ans' → logprob: -5.333893775939941
    4. '_equ' → logprob: -10.083893775939941
    5. 'ans' → logprob: -10.333893775939941
    6. '_equal' → logprob: -10.833893775939941
    7. '_no' → logprob: -10.833893775939941
    8. 'eq' → logprob: -10.958893775939941
    9. '_val' → logprob: -11.458893775939941
    10. '_' → logprob: -12.333893775939941

Token 516: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. '(answer' → logprob: -15.125
    3. 'ans' → logprob: -16.25
    4. '	ans' → logprob: -17.0
    5. ' ans' → logprob: -18.5
    6. '(
' → logprob: -18.75
    7. '```' → logprob: -19.0
    8. ' (' → logprob: -19.125
    9. '(' → logprob: -19.25
    10. '(acc' → logprob: -19.5

Token 517: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02360566519200802
    2. ',' → logprob: -3.7736055850982666
    3. ')' → logprob: -8.398605346679688
    4. 'ans' → logprob: -9.148605346679688
    5. ' ans' → logprob: -11.023605346679688
    6. ' (' → logprob: -12.648605346679688
    7. '	ans' → logprob: -12.773605346679688
    8. '),' → logprob: -12.898605346679688
    9. '```' → logprob: -13.773605346679688
    10. '(answer' → logprob: -14.148605346679688

Token 518: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5760270357131958
    2. ' ans' → logprob: -0.8260270357131958
    3. '(ans' → logprob: -9.701026916503906
    4. 'l' → logprob: -11.201026916503906
    5. ' l' → logprob: -11.826026916503906
    6. '	ans' → logprob: -12.701026916503906
    7. 'r' → logprob: -14.076026916503906
    8. '_ans' → logprob: -14.576026916503906
    9. 'answer' → logprob: -15.076026916503906
    10. '```' → logprob: -15.326026916503906

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006467910134233534
    2. '+' → logprob: -7.875646591186523
    3. ' +' → logprob: -8.500646591186523
    4. ' ,' → logprob: -10.500646591186523
    5. ',r' → logprob: -11.125646591186523
    6. ',
' → logprob: -12.250646591186523
    7. ')' → logprob: -12.250646591186523
    8. '   ' → logprob: -12.375646591186523
    9. '+,' → logprob: -13.250646591186523
    10. 'def' → logprob: -13.750646591186523

Token 520: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003600901924073696
    2. ' r' → logprob: -5.62860107421875
    3. '   ' → logprob: -15.37860107421875
    4. ' ' → logprob: -15.87860107421875
    5. 'sub' → logprob: -17.00360107421875
    6. '    ' → logprob: -17.00360107421875
    7. ',' → logprob: -17.25360107421875
    8. '  ' → logprob: -17.37860107421875
    9. '	r' → logprob: -17.37860107421875
    10. '```' → logprob: -17.50360107421875

Token 521: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03016534633934498
    2. '       ' → logprob: -3.780165433883667
    3. ')' → logprob: -5.405165195465088
    4. ')
' → logprob: -6.780165195465088
    5. '),' → logprob: -7.530165195465088
    6. '   ' → logprob: -8.030165672302246
    7. '+' → logprob: -9.155165672302246
    8. ' ,' → logprob: -9.280165672302246
    9. ',
' → logprob: -10.155165672302246
    10. 'def' → logprob: -10.405165672302246

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4021237802808173e-05
    2. '   ' → logprob: -12.125014305114746
    3. '	' → logprob: -12.500014305114746
    4. ',' → logprob: -13.625014305114746
    5. '	   ' → logprob: -14.000014305114746
    6. '<|end|>' → logprob: -14.125014305114746
    7. '
' → logprob: -15.125014305114746
    8. '           ' → logprob: -15.125014305114746
    9. '```' → logprob: -15.125014305114746
    10. '(' → logprob: -16.12501335144043

Token 523: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17541110515594482
    2. ' l' → logprob: -2.6754112243652344
    3. 'l' → logprob: -3.0504112243652344
    4. 'r' (adapté à ' r') → logprob: -3.4254112243652344
    5. ' r' → logprob: -5.050411224365234
    6. ' return' → logprob: -6.300411224365234
    7. '   ' → logprob: -6.300411224365234
    8. 'return' → logprob: -6.300411224365234
    9. '           ' → logprob: -10.050411224365234
    10. ' ' → logprob: -10.425411224365234

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05414627119898796
    2. ' =' → logprob: -3.4291462898254395
    3. ',' → logprob: -3.9291462898254395
    4. '+=' → logprob: -8.554145812988281
    5. ' +=' → logprob: -8.679145812988281
    6. ')' → logprob: -8.929145812988281
    7. ' ,' → logprob: -9.804145812988281
    8. '+' → logprob: -10.304145812988281
    9. ' ' → logprob: -11.179145812988281
    10. '   ' → logprob: -11.929145812988281

Token 525: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.00965020153671503
    2. 'r' → logprob: -5.134650230407715
    3. ' increase' → logprob: -5.759650230407715
    4. 'de' → logprob: -8.009650230407715
    5. 'in' → logprob: -9.509650230407715
    6. 'initial' → logprob: -9.884650230407715
    7. 'l' → logprob: -9.884650230407715
    8. ' r' → logprob: -11.134650230407715
    9. ' decrease' → logprob: -11.759650230407715
    10. 'sub' → logprob: -12.259650230407715

Token 526: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.5242198705673218
    2. 'r' → logprob: -0.8992198705673218
    3. '_l' → logprob: -7.149219989776611
    4. 'l' → logprob: -8.149219512939453
    5. '
' → logprob: -13.024219512939453
    6. 'R' → logprob: -13.024219512939453
    7. '_s' → logprob: -13.524219512939453
    8. 'increase' → logprob: -13.524219512939453
    9. '_in' → logprob: -13.649219512939453
    10. '_' → logprob: -13.774219512939453

Token 527: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0010628211311995983
    2. 'r' → logprob: -6.876062870025635
    3. '(' → logprob: -10.751062393188477
    4. ' r' → logprob: -12.376062393188477
    5. ')' → logprob: -13.251062393188477
    6. ' (' → logprob: -13.251062393188477
    7. '(
' → logprob: -15.001062393188477
    8. '	r' → logprob: -15.126062393188477
    9. '[r' → logprob: -16.751062393188477
    10. '   ' → logprob: -17.126062393188477

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042768914136104286
    2. ')
' → logprob: -8.00042724609375
    3. ' )' → logprob: -10.87542724609375
    4. 'r' → logprob: -11.00042724609375
    5. '())' → logprob: -11.12542724609375
    6. '(r' → logprob: -11.37542724609375
    7. '<|end|>' → logprob: -11.87542724609375
    8. '()' → logprob: -12.12542724609375
    9. ')return' → logprob: -12.12542724609375
    10. ' ' → logprob: -13.12542724609375

Token 529: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1113057136535645
    2. '       ' → logprob: -1.3613057136535645
    3. ',' → logprob: -1.8613057136535645
    4. ')' → logprob: -2.4863057136535645
    5. '	return' → logprob: -2.7363057136535645
    6. 'return' → logprob: -3.4863057136535645
    7. ' return' → logprob: -3.8613057136535645
    8. '<|end|>' → logprob: -3.9863057136535645
    9. '	' → logprob: -4.1113057136535645
    10. ' ' → logprob: -4.3613057136535645

Token 530: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5773788690567017
    2. 'return' → logprob: -0.8273788690567017
    3. ' return' → logprob: -6.702378749847412
    4. '   ' → logprob: -8.57737922668457
    5. 'l' (adapté à ' l') → logprob: -11.57737922668457
    6. '
' → logprob: -12.70237922668457
    7. '	return' → logprob: -12.95237922668457
    8. ' ' → logprob: -13.07737922668457
    9. '           ' → logprob: -13.70237922668457
    10. '     ' → logprob: -14.07737922668457

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27021920680999756
    2. ' =' → logprob: -1.5202192068099976
    3. ' +=' → logprob: -4.645219326019287
    4. '+=' → logprob: -5.145219326019287
    5. ',' → logprob: -6.145219326019287
    6. '+' → logprob: -7.770219326019287
    7. ' +' → logprob: -9.770218849182129
    8. ' ' → logprob: -10.770218849182129
    9. ')' → logprob: -11.020218849182129
    10. ' ,' → logprob: -11.020218849182129

Token 532: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.00317783304490149
    2. ' increase' → logprob: -5.753177642822266
    3. 'initial' → logprob: -16.003177642822266
    4. 'increment' → logprob: -18.003177642822266
    5. 'in' → logprob: -18.128177642822266
    6. '   ' → logprob: -18.753177642822266
    7. ' ' → logprob: -19.128177642822266
    8. 'Increase' → logprob: -19.128177642822266
    9. '  ' → logprob: -19.628177642822266
    10. '    ' → logprob: -20.128177642822266

Token 533: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.5928495486150496e-05
    2. 'l' → logprob: -11.125016212463379
    3. '(l' → logprob: -13.750016212463379
    4. '_r' → logprob: -17.625015258789062
    5. '	l' → logprob: -18.250015258789062
    6. '
' → logprob: -19.000015258789062
    7. '(' → logprob: -19.125015258789062
    8. '[l' → logprob: -19.625015258789062
    9. '_' → logprob: -19.750015258789062
    10. 'L' → logprob: -20.125015258789062

Token 534: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0206720617134124e-05
    2. 'l' → logprob: -11.62501049041748
    3. '(' → logprob: -13.87501049041748
    4. '	l' → logprob: -16.125009536743164
    5. ' l' → logprob: -17.000009536743164
    6. ' (' → logprob: -17.750009536743164
    7. '(
' → logprob: -18.125009536743164
    8. '(L' → logprob: -20.250009536743164
    9. ',l' → logprob: -20.375009536743164
    10. '()' → logprob: -21.625009536743164

Token 535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011074470356106758
    2. ')
' → logprob: -4.511074542999268
    3. '   ' → logprob: -11.76107406616211
    4. ')return' → logprob: -12.01107406616211
    5. ')

' → logprob: -12.26107406616211
    6. ' )' → logprob: -13.26107406616211
    7. '<|end|>' → logprob: -13.26107406616211
    8. '()' → logprob: -13.76107406616211
    9. ')
' → logprob: -14.26107406616211
    10. '())' → logprob: -14.38607406616211

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006936301477253437
    2. '   ' → logprob: -5.631936073303223
    3. '<|end|>' → logprob: -5.756936073303223
    4. 'return' → logprob: -9.881936073303223
    5. '	return' → logprob: -10.756936073303223
    6. ' return' → logprob: -10.756936073303223
    7. ',' → logprob: -10.756936073303223
    8. '	' → logprob: -11.381936073303223
    9. ' ' → logprob: -11.756936073303223
    10. '        
' → logprob: -12.131936073303223

Token 537: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024881421122699976
    2. 'return' (adapté à ' return') → logprob: -6.002488136291504
    3. ' return' → logprob: -11.502488136291504
    4. '   ' → logprob: -13.127488136291504
    5. '           ' → logprob: -16.25248908996582
    6. '      ' → logprob: -16.75248908996582
    7. '	return' → logprob: -17.00248908996582
    8. ' ' → logprob: -17.12748908996582
    9. '     ' → logprob: -17.37748908996582
    10. '```' → logprob: -17.50248908996582

Token 538: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.00043233807082287967
    2. ' xo' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.875432014465332
    4. 'xor' → logprob: -14.375432014465332
    5. 'oxo' → logprob: -16.75043296813965
    6. '(x' → logprob: -16.75043296813965
    7. ' ' → logprob: -17.12543296813965
    8. '  ' → logprob: -18.12543296813965
    9. '       ' → logprob: -18.50043296813965
    10. '    ' → logprob: -19.00043296813965

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. '<|end|>' → logprob: -13.125005722045898
    3. ' ,' → logprob: -13.250005722045898
    4. ',s' → logprob: -13.500005722045898
    5. ',
' → logprob: -15.125005722045898
    6. '```' → logprob: -16.7500057220459
    7. '‌,' → logprob: -17.3750057220459
    8. 'su' → logprob: -17.8750057220459
    9. ' su' → logprob: -17.8750057220459
    10. 's' → logprob: -18.1250057220459

Token 540: ' su' (ID: 593)
  Prédit: ' su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.0019289902411401272
    2. 'su' → logprob: -6.251928806304932
    3. 's' → logprob: -15.12692928314209
    4. ' ' → logprob: -16.876928329467773
    5. ' sus' → logprob: -17.626928329467773
    6. ' sul' → logprob: -17.876928329467773
    7. ' су' → logprob: -18.251928329467773
    8. 'Su' → logprob: -18.501928329467773
    9. '```' → logprob: -19.001928329467773
    10. ' si' → logprob: -19.626928329467773

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -16.000001907348633
    4. ',
' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. ' ans' → logprob: -17.125001907348633
    7. '`,' → logprob: -17.625001907348633
    8. '‌,' → logprob: -18.125001907348633
    9. '‍,' → logprob: -18.875001907348633
    10. ',int' → logprob: -19.125001907348633

Token 542: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06197485327720642
    2. 'ans' → logprob: -2.8119747638702393
    3. '(ans' → logprob: -12.18697452545166
    4. '	ans' → logprob: -13.18697452545166
    5. '_ans' → logprob: -15.68697452545166
    6. 'Ans' → logprob: -16.936975479125977
    7. 'answer' → logprob: -18.186975479125977
    8. ' ' → logprob: -18.186975479125977
    9. '```' → logprob: -18.311975479125977
    10. ',' → logprob: -19.186975479125977

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ',l' → logprob: -11.250019073486328
    3. ' ,' → logprob: -12.125019073486328
    4. '<|end|>' → logprob: -16.875019073486328
    5. '```' → logprob: -17.125019073486328
    6. '   ' → logprob: -17.250019073486328
    7. ',
' → logprob: -17.625019073486328
    8. ',r' → logprob: -17.750019073486328
    9. '	' → logprob: -17.875019073486328
    10. ' l' → logprob: -18.125019073486328

Token 544: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00017970333283301443
    2. ' l' → logprob: -8.625179290771484
    3. '	l' → logprob: -16.125179290771484
    4. '   ' → logprob: -18.750179290771484
    5. '<|end|>' → logprob: -18.750179290771484
    6. ' ' → logprob: -19.375179290771484
    7. '```' → logprob: -19.375179290771484
    8. 'r' → logprob: -19.375179290771484
    9. ',l' → logprob: -20.375179290771484
    10. '
' → logprob: -20.500179290771484

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.32523515378125e-05
    2. ',r' → logprob: -10.000062942504883
    3. 'r' → logprob: -11.625062942504883
    4. ' ,' → logprob: -11.750062942504883
    5. ',
' → logprob: -15.250062942504883
    6. ' r' → logprob: -15.625062942504883
    7. '```' → logprob: -15.875062942504883
    8. '   ' → logprob: -16.125062942504883
    9. '<|end|>' → logprob: -16.625062942504883
    10. ',\
' → logprob: -17.625062942504883

Token 546: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020377879263833165
    2. ' r' → logprob: -8.500204086303711
    3. ' ' → logprob: -16.25020408630371
    4. '   ' → logprob: -16.87520408630371
    5. '    ' → logprob: -18.00020408630371
    6. '  ' → logprob: -18.12520408630371
    7. '
' → logprob: -18.25020408630371
    8. '	r' → logprob: -18.25020408630371
    9. '```' → logprob: -18.87520408630371
    10. '<|end|>' → logprob: -19.00020408630371

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.360996485454962e-05
    2. 'False' → logprob: -10.0000638961792
    3. 'True' → logprob: -11.8750638961792
    4. '   ' → logprob: -11.8750638961792
    5. ' ,' → logprob: -12.7500638961792
    6. ' False' → logprob: -15.2500638961792
    7. '(False' → logprob: -15.3750638961792
    8. '(True' → logprob: -15.7500638961792
    9. ' True' → logprob: -15.8750638961792
    10. '	' → logprob: -16.125062942504883

Token 548: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6334869861602783
    2. 'True' → logprob: -0.7584869861602783
    3. ' True' → logprob: -7.508486747741699
    4. ' False' → logprob: -8.0084867477417
    5. '(True' → logprob: -13.1334867477417
    6. '(False' → logprob: -13.7584867477417
    7. '   ' → logprob: -14.2584867477417
    8. '0' → logprob: -14.3834867477417
    9. '1' → logprob: -15.1334867477417
    10. 'false' → logprob: -15.3209867477417

Token 549: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2607320547103882
    2. '<|end|>' → logprob: -1.5107320547103882
    3. 'else' → logprob: -5.260732173919678
    4. ' else' → logprob: -6.760732173919678
    5. '	else' → logprob: -7.010732173919678
    6. '```' → logprob: -7.135732173919678
    7. '
' → logprob: -8.51073169708252
    8. '<|end|>' → logprob: -8.76073169708252
    9. '    
' → logprob: -9.51073169708252
    10. '...' → logprob: -10.63573169708252

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6796974539756775
    2. '```' → logprob: -0.9296974539756775
    3. 'else' → logprob: -2.8046975135803223
    4. '<|end|>' → logprob: -3.6796975135803223
    5. '    
' → logprob: -5.429697513580322
    6. '
' → logprob: -6.054697513580322
    7. ' else' → logprob: -6.054697513580322
    8. '``' → logprob: -6.804697513580322
    9. '\n' → logprob: -6.929697513580322
    10. '	else' → logprob: -8.054697036743164

Token 551: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.025019528344273567
    2. '   ' → logprob: -4.275019645690918
    3. ' else' → logprob: -4.650019645690918
    4. '	else' → logprob: -6.775019645690918
    5. '<|end|>' → logprob: -10.275019645690918
    6. '
' → logprob: -10.650019645690918
    7. ' ' → logprob: -11.525019645690918
    8. '```' → logprob: -12.275019645690918
    9. 'x' → logprob: -12.650019645690918
    10. ' ' → logprob: -13.150019645690918

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49931061267852783
    2. ':
' → logprob: -1.2493106126785278
    3. '       ' → logprob: -2.2493104934692383
    4. '   ' → logprob: -7.874310493469238
    5. ',' → logprob: -8.374310493469238
    6. ':return' → logprob: -8.999310493469238
    7. '):
' → logprob: -10.624310493469238
    8. ',
' → logprob: -10.749310493469238
    9. '<|end|>' → logprob: -11.124310493469238
    10. '```' → logprob: -11.374310493469238

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.47757811343763e-05
    2. '   ' → logprob: -10.625044822692871
    3. '      ' → logprob: -12.500044822692871
    4. ' return' → logprob: -13.000044822692871
    5. '```' → logprob: -13.000044822692871
    6. '        
' → logprob: -13.125044822692871
    7. '
' → logprob: -13.500044822692871
    8. '        ' → logprob: -13.625044822692871
    9. 'return' → logprob: -13.750044822692871
    10. '(' → logprob: -13.875044822692871

Token 554: ' l' (ID: 305)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22138938307762146
    2. ' return' → logprob: -1.7213894128799438
    3. '       ' → logprob: -4.346389293670654
    4. '   ' → logprob: -5.096389293670654
    5. 'xo' → logprob: -7.971389293670654
    6. '           ' → logprob: -8.471389770507812
    7. ' xo' → logprob: -9.096389770507812
    8. ' ' → logprob: -10.971389770507812
    9. '	return' → logprob: -12.346389770507812
    10. '               ' → logprob: -12.971389770507812

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18616554141044617
    2. ' =' → logprob: -1.8111655712127686
    3. ',' → logprob: -5.1861653327941895
    4. ' +=' → logprob: -7.8111653327941895
    5. '+=' → logprob: -8.061165809631348
    6. ' ,' → logprob: -10.061165809631348
    7. '+' → logprob: -10.936165809631348
    8. ' ' → logprob: -11.561165809631348
    9. ')' → logprob: -11.936165809631348
    10. '<|end|>' → logprob: -12.686165809631348

Token 556: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.07891369611024857
    2. ' increase' → logprob: -2.578913688659668
    3. 'l' → logprob: -10.703913688659668
    4. ' l' → logprob: -14.203913688659668
    5. 'in' → logprob: -14.578913688659668
    6. 'increment' → logprob: -16.203914642333984
    7. ' ' → logprob: -16.703914642333984
    8. '    ' → logprob: -17.078914642333984
    9. '   ' → logprob: -17.828914642333984
    10. 'Increase' → logprob: -17.953914642333984

Token 557: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00408516637980938
    2. 'l' → logprob: -5.504085063934326
    3. '(l' → logprob: -12.004085540771484
    4. '	l' → logprob: -15.254085540771484
    5. ' l' → logprob: -16.129085540771484
    6. '_' → logprob: -16.754085540771484
    7. '(' → logprob: -16.879085540771484
    8. 'L' → logprob: -16.879085540771484
    9. '1' → logprob: -17.129085540771484
    10. '```' → logprob: -17.629085540771484

Token 558: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00014728360110893846
    2. '(' → logprob: -9.250146865844727
    3. 'l' → logprob: -10.000146865844727
    4. '(
' → logprob: -12.250146865844727
    5. '	l' → logprob: -15.250146865844727
    6. ' l' → logprob: -15.625146865844727
    7. ' (' → logprob: -15.875146865844727
    8. '<|end|>' → logprob: -16.000146865844727
    9. ',l' → logprob: -16.375146865844727
    10. ')' → logprob: -16.625146865844727

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006769483909010887
    2. ')
' → logprob: -5.00676965713501
    3. '   ' → logprob: -10.631769180297852
    4. ')return' → logprob: -11.131769180297852
    5. '<|end|>' → logprob: -11.631769180297852
    6. ' )' → logprob: -13.256769180297852
    7. ',' → logprob: -13.381769180297852
    8. ')

' → logprob: -13.506769180297852
    9. '),' → logprob: -15.006769180297852
    10. ')
' → logprob: -15.256769180297852

Token 560: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009741133544594049
    2. ',' → logprob: -7.375974178314209
    3. ' return' → logprob: -9.25097370147705
    4. '	return' → logprob: -9.25097370147705
    5. 'return' → logprob: -9.62597370147705
    6. '       ' → logprob: -10.00097370147705
    7. '```' → logprob: -10.75097370147705
    8. '<|end|>' → logprob: -11.75097370147705
    9. '    
' → logprob: -12.50097370147705
    10. ',
' → logprob: -13.00097370147705

Token 561: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7291921973228455
    2. 'return' (adapté à ' return') → logprob: -0.7291921973228455
    3. ' return' → logprob: -3.3541922569274902
    4. '   ' → logprob: -7.72919225692749
    5. 'r' → logprob: -11.479191780090332
    6. ' ' → logprob: -12.104191780090332
    7. '	return' → logprob: -12.854191780090332
    8. '           ' → logprob: -13.229191780090332
    9. '     ' → logprob: -13.854191780090332
    10. 'False' → logprob: -14.104191780090332

Token 562: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.0032112228218466043
    2. ' xo' → logprob: -5.75321102142334
    3. '(x' → logprob: -10.75321102142334
    4. 'xor' → logprob: -11.62821102142334
    5. '   ' → logprob: -13.12821102142334
    6. ' ' → logprob: -14.37821102142334
    7. 'oxo' → logprob: -15.25321102142334
    8. '  ' → logprob: -16.003211975097656
    9. 'None' → logprob: -16.753211975097656
    10. '(' → logprob: -17.003211975097656

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014764121442567557
    2. ',s' → logprob: -8.875147819519043
    3. ' ,' → logprob: -11.875147819519043
    4. '_,' → logprob: -15.625147819519043
    5. '```' → logprob: -15.750147819519043
    6. '_s' → logprob: -15.875147819519043
    7. 's' → logprob: -16.250146865844727
    8. ',
' → logprob: -16.500146865844727
    9. '<|end|>' → logprob: -16.750146865844727
    10. 'su' → logprob: -17.125146865844727

Token 564: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.10020839422941208
    2. ' su' → logprob: -2.350208282470703
    3. 's' → logprob: -13.725208282470703
    4. 'sub' → logprob: -14.350208282470703
    5. '
' → logprob: -17.100208282470703
    6. 'sup' → logprob: -18.100208282470703
    7. ' ' → logprob: -18.225208282470703
    8. '	s' → logprob: -18.475208282470703
    9. 'sur' → logprob: -18.725208282470703
    10. 'Su' → logprob: -18.725208282470703

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.978233846486546e-05
    2. 'ans' → logprob: -10.625049591064453
    3. ' ans' → logprob: -10.875049591064453
    4. ' ,' → logprob: -12.125049591064453
    5. '(ans' → logprob: -15.000049591064453
    6. '	ans' → logprob: -15.125049591064453
    7. '_ans' → logprob: -15.500049591064453
    8. ',l' → logprob: -16.000049591064453
    9. '```' → logprob: -16.750049591064453
    10. ',
' → logprob: -16.875049591064453

Token 566: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007104054093360901
    2. ' ans' → logprob: -7.250710487365723
    3. '	ans' → logprob: -15.000710487365723
    4. '   ' → logprob: -16.250709533691406
    5. '(ans' → logprob: -17.000709533691406
    6. ' ' → logprob: -17.875709533691406
    7. 'answer' → logprob: -18.750709533691406
    8. 'ann' → logprob: -18.750709533691406
    9. '    ' → logprob: -19.250709533691406
    10. '
' → logprob: -19.375709533691406

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025234611239284277
    2. ',l' → logprob: -6.002523422241211
    3. ' ,' → logprob: -10.127523422241211
    4. '   ' → logprob: -12.627523422241211
    5. ',
' → logprob: -13.627523422241211
    6. '[' → logprob: -14.627523422241211
    7. ' l' → logprob: -15.002523422241211
    8. '<|end|>' → logprob: -15.002523422241211
    9. '	' → logprob: -15.127523422241211
    10. ' ' → logprob: -15.377523422241211

Token 568: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6941437721252441
    2. 'False' → logprob: -0.6941437721252441
    3. ' False' → logprob: -7.319143772125244
    4. ' l' → logprob: -8.069143295288086
    5. '   ' → logprob: -11.694143295288086
    6. 'r' → logprob: -11.819143295288086
    7. '    ' → logprob: -13.694143295288086
    8. '	l' → logprob: -13.944143295288086
    9. 'True' → logprob: -14.569143295288086
    10. '       ' → logprob: -14.819143295288086

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007685538846999407
    2. ',r' → logprob: -4.882685661315918
    3. 'r' → logprob: -9.882685661315918
    4. ' ,' → logprob: -11.132685661315918
    5. '```' → logprob: -11.757685661315918
    6. ' r' → logprob: -13.757685661315918
    7. '<|end|>' → logprob: -13.882685661315918
    8. ',
' → logprob: -13.882685661315918
    9. '	' → logprob: -14.507685661315918
    10. '	r' → logprob: -14.882685661315918

Token 570: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.011373155459296e-05
    2. ' r' → logprob: -10.750030517578125
    3. 'False' → logprob: -11.750030517578125
    4. 'True' → logprob: -14.250030517578125
    5. '	r' → logprob: -17.250030517578125
    6. '   ' → logprob: -18.500030517578125
    7. '```' → logprob: -19.000030517578125
    8. ',r' → logprob: -19.125030517578125
    9. ',' → logprob: -19.375030517578125
    10. ' ' → logprob: -19.500030517578125

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018905308097600937
    2. 'False' → logprob: -4.018905162811279
    3. 'True' → logprob: -7.893905162811279
    4. '(False' → logprob: -8.893905639648438
    5. '<|end|>' → logprob: -9.268905639648438
    6. ' False' → logprob: -10.143905639648438
    7. ',None' → logprob: -10.268905639648438
    8. ' ,' → logprob: -10.643905639648438
    9. '(True' → logprob: -10.893905639648438
    10. ',
' → logprob: -11.393905639648438

Token 572: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.3782830137643032e-05
    2. 'True' → logprob: -11.62501335144043
    3. ' False' → logprob: -12.25001335144043
    4. '(False' → logprob: -17.00001335144043
    5. '
' → logprob: -19.50001335144043
    6. '   ' → logprob: -19.87501335144043
    7. '=False' → logprob: -20.12501335144043
    8. '.False' → logprob: -20.25001335144043
    9. '0' → logprob: -20.62501335144043
    10. 'false' → logprob: -20.87501335144043

Token 573: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.045823566731997e-05
    2. '<|end|>' → logprob: -11.375020027160645
    3. '```' → logprob: -12.375020027160645
    4. 'for' → logprob: -13.625020027160645
    5. ')' → logprob: -14.125020027160645
    6. 'if' → logprob: -14.625020027160645
    7. '
' → logprob: -14.750020027160645
    8. 'while' → logprob: -14.750020027160645
    9. '#' → logprob: -14.750020027160645
    10. '.' → logprob: -15.250020027160645

Token 574: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033650966361165047
    2. '<|end|>' → logprob: -6.0033650398254395
    3. '```' → logprob: -7.5033650398254395
    4. '#' → logprob: -8.878365516662598
    5. '
' → logprob: -9.378365516662598
    6. ')' → logprob: -10.253365516662598
    7. 'for' → logprob: -11.128365516662598
    8. '<|end|>' → logprob: -11.378365516662598
    9. 'n' → logprob: -12.128365516662598
    10. ':' → logprob: -12.128365516662598

Token 575: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5063985586166382
    2. ' main' → logprob: -1.5063985586166382
    3. 'def' → logprob: -2.0063986778259277
    4. 'process' → logprob: -4.006398677825928
    5. 'initial' → logprob: -4.506398677825928
    6. ' process' → logprob: -5.506398677825928
    7. 'solve' → logprob: -5.881398677825928
    8. ' initial' → logprob: -6.131398677825928
    9. ' def' → logprob: -7.006398677825928
    10. ' solve' → logprob: -7.631398677825928

Token 576: '_single' (ID: 46053)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.036650657653808594
    2. '(' → logprob: -4.036650657653809
    3. '(l' → logprob: -4.161650657653809
    4. '(n' → logprob: -6.661650657653809
    5. '(x' → logprob: -7.286650657653809
    6. '():
' → logprob: -8.036650657653809
    7. '(lst' → logprob: -9.536650657653809
    8. '(ls' → logprob: -9.536650657653809
    9. '(:' → logprob: -10.036650657653809
    10. ' ():' → logprob: -10.161650657653809

Token 577: '_case' (ID: 43667)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021471546962857246
    2. '():' → logprob: -4.3964715003967285
    3. '(l' → logprob: -5.3964715003967285
    4. '(_' → logprob: -6.2714715003967285
    5. '_' → logprob: -7.2714715003967285
    6. '(n' → logprob: -7.6464715003967285
    7. '(x' → logprob: -7.8964715003967285
    8. '_(' → logprob: -8.021471977233887
    9. '(r' → logprob: -8.896471977233887
    10. '(list' → logprob: -9.646471977233887

Token 578: '():
' (ID: 8595)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.31290826201438904
    2. '(' → logprob: -1.8129082918167114
    3. '():' → logprob: -2.312908172607422
    4. '(n' → logprob: -6.312908172607422
    5. '(ls' → logprob: -6.312908172607422
    6. '(lst' → logprob: -6.687908172607422
    7. '(:' → logprob: -7.937908172607422
    8. '(li' → logprob: -7.937908172607422
    9. '(list' → logprob: -8.437908172607422
    10. '(get' → logprob: -8.812908172607422

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03433198109269142
    2. 'n' → logprob: -3.534332036972046
    3. '(n' → logprob: -6.409331798553467
    4. '```' → logprob: -6.534331798553467
    5. '(l' → logprob: -7.909331798553467
    6. 'def' → logprob: -8.159332275390625
    7. '()' → logprob: -8.659332275390625
    8. '(' → logprob: -8.784332275390625
    9. ' lis' → logprob: -9.034332275390625
    10. ' n' → logprob: -9.159332275390625

Token 580: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3869832456111908
    2. '   ' → logprob: -1.1369832754135132
    3. 'N' → logprob: -10.136982917785645
    4. '
' → logprob: -10.636982917785645
    5. ' n' → logprob: -10.636982917785645
    6. '	n' → logprob: -11.511982917785645
    7. 'def' → logprob: -12.136982917785645
    8. '_n' → logprob: -12.636982917785645
    9. '    
' → logprob: -12.636982917785645
    10. '```' → logprob: -13.511982917785645

Token 581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.701242983341217
    2. ' =' → logprob: -0.701242983341217
    3. ',' → logprob: -4.826242923736572
    4. '=int' → logprob: -10.95124340057373
    5. '   ' → logprob: -11.20124340057373
    6. ' ,' → logprob: -12.20124340057373
    7. ' ' → logprob: -12.82624340057373
    8. ' =
' → logprob: -12.82624340057373
    9. '=
' → logprob: -13.95124340057373
    10. '=input' → logprob: -14.07624340057373

Token 582: ' read' (ID: 1729)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.004095854703336954
    2. ' get' → logprob: -5.504096031188965
    3. 'read' → logprob: -11.254096031188965
    4. '   ' → logprob: -13.004096031188965
    5. 'int' → logprob: -13.629096031188965
    6. '=get' → logprob: -14.879096031188965
    7. ' read' → logprob: -15.004096031188965
    8. 'n' → logprob: -16.12909507751465
    9. '	get' → logprob: -17.25409507751465
    10. '(get' → logprob: -17.37909507751465

Token 583: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017852524761110544
    2. '_n' → logprob: -6.5017852783203125
    3. '()
' → logprob: -8.626785278320312
    4. '_' → logprob: -10.001785278320312
    5. 'n' → logprob: -10.251785278320312
    6. 'N' → logprob: -11.376785278320312
    7. ' ()' → logprob: -12.001785278320312
    8. '())' → logprob: -13.751785278320312
    9. '(' → logprob: -14.001785278320312
    10. '()]' → logprob: -14.251785278320312

Token 584: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000297685619443655
    2. '()
' → logprob: -8.125297546386719
    3. ' ()' → logprob: -14.875297546386719
    4. '()<' → logprob: -15.375297546386719
    5. '()
' → logprob: -15.500297546386719
    6. '())' → logprob: -16.00029754638672
    7. '()\' → logprob: -16.12529754638672
    8. '()

' → logprob: -16.12529754638672
    9. '();' → logprob: -16.25029754638672
    10. ')' → logprob: -16.25029754638672

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001345592550933361
    2. ' lis' → logprob: -7.626345634460449
    3. 'lis' → logprob: -7.876345634460449
    4. '```' → logprob: -8.37634563446045
    5. '	l' → logprob: -9.37634563446045
    6. '    ' → logprob: -10.00134563446045
    7. '  ' → logprob: -10.25134563446045
    8. '    
' → logprob: -10.62634563446045
    9. 'n' → logprob: -10.87634563446045
    10. '   ' → logprob: -11.62634563446045

Token 586: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' (adapté à ' lis') → logprob: -0.20222361385822296
    2. '   ' → logprob: -1.7022236585617065
    3. ' lis' → logprob: -7.577223777770996
    4. '```' → logprob: -10.202223777770996
    5. 'lst' → logprob: -10.202223777770996
    6. 'l' → logprob: -10.452223777770996
    7. '  ' → logprob: -10.452223777770996
    8. 'lus' → logprob: -10.577223777770996
    9. 'list' → logprob: -10.827223777770996
    10. ' ' → logprob: -10.952223777770996

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144803822040558
    2. '=' → logprob: -1.7014480829238892
    3. '   ' → logprob: -11.326448440551758
    4. '(' → logprob: -11.326448440551758
    5. ' =
' → logprob: -13.201448440551758
    6. ',' → logprob: -13.326448440551758
    7. '	' → logprob: -13.576448440551758
    8. '[' → logprob: -13.576448440551758
    9. ' ' → logprob: -13.826448440551758
    10. '    ' → logprob: -14.076448440551758

Token 588: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1495676338672638
    2. 'get' → logprob: -2.1495676040649414
    3. ' read' → logprob: -3.8995676040649414
    4. ' get' → logprob: -6.149567604064941
    5. '   ' → logprob: -16.524568557739258
    6. 'list' → logprob: -16.774568557739258
    7. '[get' → logprob: -17.524568557739258
    8. '	read' → logprob: -17.899568557739258
    9. '[' → logprob: -18.774568557739258
    10. '(read' → logprob: -19.149568557739258

Token 589: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001468067930545658
    2. '()' → logprob: -9.375146865844727
    3. '_' → logprob: -10.000146865844727
    4. 'List' → logprob: -11.125146865844727
    5. ')' → logprob: -14.500146865844727
    6. '()
' → logprob: -14.875146865844727
    7. 'list' → logprob: -15.375146865844727
    8. '_List' → logprob: -15.375146865844727
    9. '(' → logprob: -16.125146865844727
    10. '())' → logprob: -16.750146865844727

Token 590: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05129927396774292
    2. '
' → logprob: -3.5512993335723877
    3. '    
' → logprob: -4.426299095153809
    4. '<|end|>' → logprob: -4.926299095153809
    5. '()' → logprob: -7.301299095153809
    6. '<|end|>' → logprob: -7.676299095153809
    7. '(n' → logprob: -8.676299095153809
    8. '	
' → logprob: -9.176299095153809
    9. '(' → logprob: -9.301299095153809
    10. ',' → logprob: -9.426299095153809

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03470442071557045
    2. '
' → logprob: -3.5347044467926025
    3. '    
' → logprob: -5.409704208374023
    4. '```' → logprob: -8.034704208374023
    5. '<|end|>' → logprob: -10.534704208374023
    6. 'n' → logprob: -11.159704208374023
    7. '    ' → logprob: -11.409704208374023
    8. 'l' → logprob: -11.409704208374023
    9. '   
' → logprob: -11.659704208374023
    10. '``' → logprob: -11.659704208374023

Token 592: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' (adapté à ' xo') → logprob: -0.006700330879539251
    2. 'ans' → logprob: -5.75670051574707
    3. ' xo' → logprob: -6.13170051574707
    4. '   ' → logprob: -6.75670051574707
    5. '
' → logprob: -9.75670051574707
    6. 'l' → logprob: -10.13170051574707
    7. 'xor' → logprob: -10.25670051574707
    8. ' ' → logprob: -11.00670051574707
    9. '    
' → logprob: -11.25670051574707
    10. '```' → logprob: -12.13170051574707

Token 593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4008805751800537
    2. ' =' → logprob: -1.1508805751800537
    3. ',' → logprob: -4.275880813598633
    4. ' ,' → logprob: -12.275880813598633
    5. ',s' → logprob: -12.650880813598633
    6. '=s' → logprob: -13.400880813598633
    7. ' ' → logprob: -14.275880813598633
    8. '=
' → logprob: -15.400880813598633
    9. ',n' → logprob: -15.650880813598633
    10. '<|end|>' → logprob: -15.900880813598633

Token 594: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.07564425468444824
    2. '0' → logprob: -2.7006442546844482
    3. ' initial' → logprob: -5.200644493103027
    4. ' ' → logprob: -8.700644493103027
    5. '	initial' → logprob: -12.075644493103027
    6. '(initial' → logprob: -12.575644493103027
    7. '   ' → logprob: -13.950644493103027
    8. '.initial' → logprob: -14.325644493103027
    9. '<|end|>' → logprob: -14.575644493103027
    10. '_initial' → logprob: -14.575644493103027

Token 595: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.37897032499313354
    2. 'xo' → logprob: -1.2539703845977783
    3. 'x' → logprob: -4.128970146179199
    4. '_' → logprob: -5.378970146179199
    5. '_s' → logprob: -5.628970146179199
    6. '0' → logprob: -5.753970146179199
    7. 'xor' → logprob: -6.628970146179199
    8. 's' → logprob: -7.503970146179199
    9. 'val' → logprob: -9.0039701461792
    10. '=' → logprob: -9.5039701461792

Token 596: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0028916557785123587
    2. '0' → logprob: -6.002891540527344
    3. 'val' → logprob: -8.502891540527344
    4. 'xo' → logprob: -9.502891540527344
    5. '_val' → logprob: -10.252891540527344
    6. '_' → logprob: -10.627891540527344
    7. ' ' → logprob: -10.752891540527344
    8. '_o' → logprob: -11.627891540527344
    9. ')' → logprob: -11.877891540527344
    10. '()' → logprob: -12.127891540527344

Token 597: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 598: '   ' (ID: 271)
  Prédit: ' su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.11785772442817688
    2. '   ' → logprob: -2.2428576946258545
    3. 'su' → logprob: -5.617857933044434
    4. '	s' → logprob: -7.492857933044434
    5. '    ' → logprob: -7.617857933044434
    6. ' ans' → logprob: -8.492857933044434
    7. ' ' → logprob: -10.617857933044434
    8. ' s' → logprob: -10.867857933044434
    9. ' sus' → logprob: -11.367857933044434
    10. 's' → logprob: -11.492857933044434

Token 599: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: 0.0
    2. ' su' → logprob: -17.0
    3. 'ans' → logprob: -18.5
    4. '   ' → logprob: -19.25
    5. '
' → logprob: -22.125
    6. ' ' → logprob: -22.25
    7. 'si' → logprob: -22.875
    8. '  ' → logprob: -22.875
    9. '```' → logprob: -22.875
    10. 's' → logprob: -23.5

Token 600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759560465812683
    2. ' =' → logprob: -0.8259560465812683
    3. ',' → logprob: -11.075956344604492
    4. '<|end|>' → logprob: -15.200956344604492
    5. ')' → logprob: -15.575956344604492
    6. ' ' → logprob: -15.825956344604492
    7. '=
' → logprob: -16.075956344604492
    8. ' =
' → logprob: -16.200956344604492
    9. '   ' → logprob: -16.575956344604492
    10. ' ,' → logprob: -16.700956344604492

Token 601: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0028111785650253296
    2. ' initial' → logprob: -5.877810955047607
    3. '(initial' → logprob: -12.877811431884766
    4. '	initial' → logprob: -13.377811431884766
    5. '0' → logprob: -13.502811431884766
    6. '<|end|>' → logprob: -14.627811431884766
    7. ' ' → logprob: -16.002811431884766
    8. '_initial' → logprob: -16.002811431884766
    9. '.initial' → logprob: -16.502811431884766
    10. 'INITIAL' → logprob: -17.627811431884766

Token 602: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05812665447592735
    2. 'initial' → logprob: -3.55812668800354
    3. 'su' → logprob: -4.058126449584961
    4. 's' → logprob: -4.808126449584961
    5. '_initial' → logprob: -6.558126449584961
    6. '(initial' → logprob: -7.058126449584961
    7. '0' → logprob: -9.308126449584961
    8. '_' → logprob: -9.433126449584961
    9. ' ' → logprob: -10.558126449584961
    10. ' initial' → logprob: -10.808126449584961

Token 603: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.664371848164592e-05
    2. '   ' → logprob: -11.750016212463379
    3. '_u' → logprob: -13.250016212463379
    4. ' ' → logprob: -13.500016212463379
    5. '	u' → logprob: -13.750016212463379
    6. '_' → logprob: -14.500016212463379
    7. '  
' → logprob: -14.500016212463379
    8. '    
' → logprob: -14.625016212463379
    9. 'o' → logprob: -15.125016212463379
    10. '  ' → logprob: -15.250016212463379

Token 604: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12817932665348053
    2. '<|end|>' → logprob: -2.5031793117523193
    3. ',' → logprob: -4.378179550170898
    4. '
' → logprob: -4.503179550170898
    5. '()' → logprob: -4.628179550170898
    6. '    
' → logprob: -6.128179550170898
    7. '<|end|>' → logprob: -7.253179550170898
    8. ')' → logprob: -7.253179550170898
    9. '()
' → logprob: -7.503179550170898
    10. '(
' → logprob: -8.253179550170898

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010719887213781476
    2. 'ans' → logprob: -7.126071929931641
    3. ' ans' → logprob: -8.25107192993164
    4. '```' → logprob: -12.87607192993164
    5. '	ans' → logprob: -13.25107192993164
    6. '
' → logprob: -14.25107192993164
    7. '(ans' → logprob: -14.37607192993164
    8. '_ans' → logprob: -15.25107192993164
    9. '    
' → logprob: -15.87607192993164
    10. ',' → logprob: -16.12607192993164

Token 606: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -9.233804303221405e-05
    2. '   ' → logprob: -9.625092506408691
    3. ' ans' → logprob: -11.375092506408691
    4. '
' → logprob: -12.375092506408691
    5. 'initial' → logprob: -12.875092506408691
    6. 'l' → logprob: -13.000092506408691
    7. 'print' → logprob: -13.500092506408691
    8. '	ans' → logprob: -13.750092506408691
    9. 'answer' → logprob: -14.000092506408691
    10. '    
' → logprob: -14.250092506408691

Token 607: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313300222158432
    2. '=' → logprob: -1.3133002519607544
    3. ',' → logprob: -10.188300132751465
    4. ' ' → logprob: -15.563300132751465
    5. ')' → logprob: -15.813300132751465
    6. '<|end|>' → logprob: -15.938300132751465
    7. ' =
' → logprob: -16.18830108642578
    8. '＝' → logprob: -16.56330108642578
    9. ' =)' → logprob: -17.06330108642578
    10. ' ,' → logprob: -17.18830108642578

Token 608: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.005984846968203783
    2. '0' → logprob: -5.755984783172607
    3. ' initial' → logprob: -5.880984783172607
    4. ' ' → logprob: -11.755985260009766
    5. '	initial' → logprob: -13.005985260009766
    6. '(initial' → logprob: -14.005985260009766
    7. '   ' → logprob: -15.630985260009766
    8. '.initial' → logprob: -16.630985260009766
    9. '_initial' → logprob: -17.880985260009766
    10. '  ' → logprob: -18.380985260009766

Token 609: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0002690840628929436
    2. 'ans' → logprob: -8.250268936157227
    3. '_' → logprob: -12.750268936157227
    4. '0' → logprob: -12.875268936157227
    5. '_answer' → logprob: -14.000268936157227
    6. '(ans' → logprob: -14.375268936157227
    7. 'Ans' → logprob: -15.250268936157227
    8. '_s' → logprob: -15.500268936157227
    9. '_a' → logprob: -16.250268936157227
    10. '_
' → logprob: -16.375268936157227

Token 610: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00739660719409585
    2. '    
' → logprob: -6.257396697998047
    3. '<|end|>' → logprob: -6.257396697998047
    4. '
' → logprob: -6.507396697998047
    5. '	l' → logprob: -7.257396697998047
    6. '()' → logprob: -7.882396697998047
    7. ',' → logprob: -8.007396697998047
    8. '	
' → logprob: -8.632396697998047
    9. '()
' → logprob: -9.257396697998047
    10. '(l' → logprob: -9.382396697998047

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7446117997169495
    2. '	l' → logprob: -0.7446117997169495
    3. 'l' → logprob: -3.4946117401123047
    4. ' l' → logprob: -3.9946117401123047
    5. '```' → logprob: -6.744611740112305
    6. '\t' → logprob: -9.369611740112305
    7. '	n' → logprob: -10.744611740112305
    8. '   ' → logprob: -10.994611740112305
    9. '	t' → logprob: -11.119611740112305
    10. ',l' → logprob: -11.244611740112305

Token 612: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.5690089639974758e-05
    2. ' l' → logprob: -12.000015258789062
    3. 'r' → logprob: -12.125015258789062
    4. '   ' → logprob: -12.750015258789062
    5. 'for' → logprob: -14.750015258789062
    6. '```' → logprob: -15.500015258789062
    7. '
' → logprob: -16.250015258789062
    8. ' ' → logprob: -16.375015258789062
    9. 'n' → logprob: -16.625015258789062
    10. 'L' → logprob: -16.750015258789062

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4788326621055603
    2. '=' → logprob: -0.9788326621055603
    3. ',' → logprob: -5.353832721710205
    4. '   ' → logprob: -11.853832244873047
    5. ' ,' → logprob: -12.478832244873047
    6. '	' → logprob: -13.978832244873047
    7. ' ' → logprob: -14.478832244873047
    8. '=
' → logprob: -14.728832244873047
    9. ' =
' → logprob: -15.228832244873047
    10. '＝' → logprob: -15.353832244873047

Token 614: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11686660349369049
    2. 'initial' → logprob: -2.2418665885925293
    3. ' ' → logprob: -5.866866588592529
    4. ' initial' → logprob: -6.741866588592529
    5. '   ' → logprob: -11.366867065429688
    6. '	initial' → logprob: -12.366867065429688
    7. '(initial' → logprob: -12.366867065429688
    8. '  ' → logprob: -13.616867065429688
    9. '.initial' → logprob: -14.429367065429688
    10. '_initial' → logprob: -14.991867065429688

Token 615: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.21546928584575653
    2. 'l' → logprob: -2.8404693603515625
    3. '_' → logprob: -2.9654693603515625
    4. '()' → logprob: -3.2154693603515625
    5. '(' → logprob: -3.5904693603515625
    6. '0' → logprob: -4.2154693603515625
    7. '(l' → logprob: -6.9654693603515625
    8. ')' → logprob: -9.090469360351562
    9. '()
' → logprob: -9.215469360351562
    10. '(
' → logprob: -9.840469360351562

Token 616: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5767455101013184
    2. '()
' → logprob: -0.8267455101013184
    3. '   ' → logprob: -7.201745510101318
    4. '()\' → logprob: -10.451745986938477
    5. '
' → logprob: -11.326745986938477
    6. '()
' → logprob: -12.076745986938477
    7. ' ()' → logprob: -13.201745986938477
    8. '(
' → logprob: -13.326745986938477
    9. '()

' → logprob: -13.576745986938477
    10. '    
' → logprob: -13.576745986938477

Token 617: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.913960874080658
    2. '   ' → logprob: -0.913960874080658
    3. '	r' → logprob: -1.6639609336853027
    4. ' r' → logprob: -4.788960933685303
    5. '```' → logprob: -8.038960456848145
    6. '\t' → logprob: -10.413960456848145
    7. '    
' → logprob: -11.288960456848145
    8. ' ' → logprob: -11.413960456848145
    9. '    ' → logprob: -12.163960456848145
    10. ' ' → logprob: -12.163960456848145

Token 618: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.500001907348633
    3. ' r' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.250001907348633
    5. 'def' → logprob: -18.625001907348633
    6. '```' → logprob: -18.750001907348633
    7. '=' → logprob: -20.125001907348633
    8. '	r' → logprob: -20.250001907348633
    9. '
' → logprob: -20.500001907348633
    10. ' ' → logprob: -21.750001907348633

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868767023086548
    2. ' =' → logprob: -1.1368767023086548
    3. '   ' → logprob: -13.011877059936523
    4. '(' → logprob: -14.261877059936523
    5. ',' → logprob: -14.261877059936523
    6. ')' → logprob: -14.761877059936523
    7. '()' → logprob: -14.761877059936523
    8. ' ' → logprob: -14.761877059936523
    9. '=l' → logprob: -15.261877059936523
    10. '=
' → logprob: -15.886877059936523

Token 620: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.026814911514520645
    2. '0' → logprob: -3.6518149375915527
    3. ' initial' → logprob: -7.651814937591553
    4. ' ' → logprob: -10.651814460754395
    5. 'l' → logprob: -11.276814460754395
    6. '(initial' → logprob: -13.651814460754395
    7. 'r' → logprob: -14.401814460754395
    8. '	initial' → logprob: -14.526814460754395
    9. '1' → logprob: -15.276814460754395
    10. '   ' → logprob: -15.776814460754395

Token 621: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.011828836984932423
    2. 'r' → logprob: -4.511828899383545
    3. '(' → logprob: -8.136828422546387
    4. '_' → logprob: -8.261828422546387
    5. '(r' → logprob: -9.386828422546387
    6. '()' → logprob: -9.511828422546387
    7. '0' → logprob: -10.011828422546387
    8. '=' → logprob: -11.761828422546387
    9. ' ' → logprob: -12.261828422546387
    10. 'R' → logprob: -12.386828422546387

Token 622: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.721274197101593
    2. '   ' → logprob: -0.971274197101593
    3. '<|end|>' → logprob: -2.2212741374969482
    4. '    
' → logprob: -3.8462741374969482
    5. '<|end|>' → logprob: -5.971274375915527
    6. '  
' → logprob: -6.846274375915527
    7. '	
' → logprob: -7.096274375915527
    8. ' 
' → logprob: -8.721274375915527
    9. '```' → logprob: -8.721274375915527
    10. '   
' → logprob: -9.846274375915527

Token 623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01666952110826969
    2. '<|end|>' → logprob: -5.141669750213623
    3. '```' → logprob: -5.391669750213623
    4. ' while' → logprob: -5.641669750213623
    5. '	while' → logprob: -6.641669750213623
    6. 'while' → logprob: -7.391669750213623
    7. '    
' → logprob: -8.266669273376465
    8. '
' → logprob: -8.516669273376465
    9. '<|end|>' → logprob: -9.641669273376465
    10. '[' → logprob: -10.391669273376465

Token 624: ' forward' (ID: 6687)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3298540413379669
    2. 'forward' (adapté à ' forward') → logprob: -1.3298540115356445
    3. '   ' → logprob: -4.2048540115356445
    4. ' while' → logprob: -7.3298540115356445
    5. ' forward' → logprob: -7.7048540115356445
    6. '```' → logprob: -8.204854011535645
    7. 'r' → logprob: -9.704854011535645
    8. 'for' → logprob: -9.954854011535645
    9. 'f' → logprob: -11.204854011535645
    10. '_forward' → logprob: -11.954854011535645

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45701882243156433
    2. '=' → logprob: -1.0820188522338867
    3. ',' → logprob: -3.9570188522338867
    4. '_' → logprob: -4.832018852233887
    5. '=True' → logprob: -7.582018852233887
    6. '_=' → logprob: -10.207018852233887
    7. '_process' → logprob: -10.332018852233887
    8. ')' → logprob: -10.457018852233887
    9. '_forward' → logprob: -10.707018852233887
    10. '   ' → logprob: -10.707018852233887

Token 626: ' initial' (ID: 4871)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03956068307161331
    2. ' True' → logprob: -3.2895607948303223
    3. 'initial' → logprob: -6.539560794830322
    4. ' initial' → logprob: -9.539560317993164
    5. '(True' → logprob: -14.289560317993164
    6. '   ' → logprob: -14.789560317993164
    7. '=True' → logprob: -16.914560317993164
    8. 'False' → logprob: -17.039560317993164
    9. 'true' → logprob: -17.289560317993164
    10. ' ' → logprob: -17.914560317993164

Token 627: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.00043138445471413434
    2. 'forward' → logprob: -7.750431537628174
    3. '_' → logprob: -14.750431060791016
    4. 'r' → logprob: -16.750431060791016
    5. '_true' → logprob: -16.750431060791016
    6. 'Forward' → logprob: -17.000431060791016
    7. ' forward' → logprob: -17.000431060791016
    8. '_backward' → logprob: -17.000431060791016
    9. '```' → logprob: -17.125431060791016
    10. '_FORWARD' → logprob: -17.500431060791016

Token 628: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09818786382675171
    2. '   ' → logprob: -2.8481879234313965
    3. '<|end|>' → logprob: -3.5981879234313965
    4. '    
' → logprob: -6.2231879234313965
    5. '```' → logprob: -6.3481879234313965
    6. ':
' → logprob: -7.0981879234313965
    7. '  
' → logprob: -7.2231879234313965
    8. ':' → logprob: -7.2231879234313965
    9. '<|end|>' → logprob: -7.2231879234313965
    10. '\n' → logprob: -7.9731879234313965

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1370578110218048
    2. '
' → logprob: -2.1370577812194824
    3. '<|end|>' → logprob: -5.387057781219482
    4. '    
' → logprob: -5.637057781219482
    5. '```' → logprob: -7.137057781219482
    6. ' while' → logprob: -8.13705825805664
    7. 'while' → logprob: -8.63705825805664
    8. '	while' → logprob: -8.63705825805664
    9. '\n' → logprob: -9.01205825805664
    10. '  
' → logprob: -9.76205825805664

Token 630: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05052853748202324
    2. ' while' → logprob: -3.5505285263061523
    3. '   ' → logprob: -3.9255285263061523
    4. '	while' → logprob: -7.425528526306152
    5. '```' → logprob: -8.425528526306152
    6. '
' → logprob: -11.925528526306152
    7. '    
' → logprob: -13.050528526306152
    8. 'for' → logprob: -13.050528526306152
    9. 'While' → logprob: -13.300528526306152
    10. '    ' → logprob: -13.800528526306152

Token 631: ' True' (ID: 6432)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11516502499580383
    2. ' r' → logprob: -2.2401649951934814
    3. 'True' → logprob: -7.2401652336120605
    4. 'l' → logprob: -7.6151652336120605
    5. ' not' → logprob: -7.8651652336120605
    6. 'not' → logprob: -8.365164756774902
    7. '(r' → logprob: -8.740164756774902
    8. 'forward' → logprob: -8.990164756774902
    9. ' True' → logprob: -9.365164756774902
    10. ' l' → logprob: -9.615164756774902

Token 632: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034363733138889074
    2. ':
' → logprob: -5.75343656539917
    3. '       ' → logprob: -8.753436088562012
    4. '<|end|>' → logprob: -10.628436088562012
    5. '   ' → logprob: -10.753436088562012
    6. ',' → logprob: -11.128436088562012
    7. '():' → logprob: -11.378436088562012
    8. ' :' → logprob: -11.878436088562012
    9. '.' → logprob: -12.003436088562012
    10. '):' → logprob: -12.128436088562012

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011893989285454154
    2. ' if' → logprob: -7.251189231872559
    3. '   ' → logprob: -8.251189231872559
    4. '    ' → logprob: -9.376189231872559
    5. '	' → logprob: -10.126189231872559
    6. 'if' → logprob: -10.501189231872559
    7. '<|end|>' → logprob: -11.126189231872559
    8. '```' → logprob: -11.251189231872559
    9. '           ' → logprob: -12.126189231872559
    10. ' ' → logprob: -12.501189231872559

Token 634: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7322168350219727
    2. 'if' (adapté à ' if') → logprob: -1.2322168350219727
    3. '       ' → logprob: -1.4822168350219727
    4. '   ' → logprob: -8.232216835021973
    5. '           ' → logprob: -9.357216835021973
    6. '    ' → logprob: -11.357216835021973
    7. '	if' → logprob: -12.482216835021973
    8. '        ' → logprob: -13.107216835021973
    9. 'try' → logprob: -13.357216835021973
    10. 'while' → logprob: -13.357216835021973

Token 635: ' r' (ID: 428)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.16080132126808167
    2. 'forward' → logprob: -1.9108012914657593
    3. 'r' → logprob: -7.910801410675049
    4. ' r' → logprob: -8.78580093383789
    5. ' not' → logprob: -10.41080093383789
    6. '   ' → logprob: -11.16080093383789
    7. 'l' → logprob: -12.03580093383789
    8. ' l' → logprob: -12.78580093383789
    9. 'not' → logprob: -13.03580093383789
    10. '    ' → logprob: -14.41080093383789

Token 636: '_equals' (ID: 165870)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.45914581418037415
    2. ' ==' → logprob: -1.0841457843780518
    3. ' >=' → logprob: -4.334146022796631
    4. '<' → logprob: -4.709146022796631
    5. '==' → logprob: -5.209146022796631
    6. ' <=' → logprob: -7.084146022796631
    7. '<|end|>' → logprob: -7.709146022796631
    8. ' !=' → logprob: -8.209145545959473
    9. '>=' → logprob: -8.709145545959473
    10. '   ' → logprob: -8.709145545959473

Token 637: '_n' (ID: 2170)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -11.375027656555176
    3. 'r' → logprob: -11.750027656555176
    4. ' (' → logprob: -12.125027656555176
    5. ' r' → logprob: -13.625027656555176
    6. ')' → logprob: -14.625027656555176
    7. ',' → logprob: -15.000027656555176
    8. '   ' → logprob: -15.750027656555176
    9. '(
' → logprob: -15.875027656555176
    10. ' ' → logprob: -17.12502670288086

Token 638: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -8.756989700486884e-05
    2. '(' → logprob: -9.37508773803711
    3. ' (' → logprob: -13.62508773803711
    4. ')' → logprob: -14.25008773803711
    5. '(
' → logprob: -14.50008773803711
    6. ',' → logprob: -15.37508773803711
    7. '   ' → logprob: -17.37508773803711
    8. '(R' → logprob: -18.25008773803711
    9. 'r' → logprob: -18.50008773803711
    10. ' ' → logprob: -18.50008773803711

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01054096408188343
    2. ',n' → logprob: -4.635540962219238
    3. ',r' → logprob: -7.885540962219238
    4. '(n' → logprob: -8.385540962219238
    5. ' ,' → logprob: -9.385540962219238
    6. '(r' → logprob: -10.260540962219238
    7. ')' → logprob: -10.385540962219238
    8. ',
' → logprob: -11.260540962219238
    9. '(' → logprob: -12.260540962219238
    10. 'n' → logprob: -12.510540962219238

Token 640: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019473218126222491
    2. ' n' → logprob: -6.251947402954102
    3. '	n' → logprob: -11.751947402954102
    4. '   ' → logprob: -12.126947402954102
    5. ')n' → logprob: -13.001947402954102
    6. ')' → logprob: -13.501947402954102
    7. '       ' → logprob: -14.001947402954102
    8. '(n' → logprob: -14.251947402954102
    9. '[n' → logprob: -15.626947402954102
    10. ' ' → logprob: -16.8769474029541

Token 641: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023397700861096382
    2. '):
' → logprob: -4.023397922515869
    3. ')' → logprob: -5.273397922515869
    4. ':' → logprob: -9.273397445678711
    5. '       ' → logprob: -12.523397445678711
    6. ')==' → logprob: -12.773397445678711
    7. ' and' → logprob: -13.273397445678711
    8. '):

' → logprob: -13.398397445678711
    9. '):
' → logprob: -14.023397445678711
    10. '   ' → logprob: -14.148397445678711

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.833878508885391e-05
    2. ' break' → logprob: -11.625038146972656
    3. '
' → logprob: -12.500038146972656
    4. 'break' → logprob: -12.500038146972656
    5. '               ' → logprob: -12.625038146972656
    6. '       ' → logprob: -12.750038146972656
    7. '```' → logprob: -12.875038146972656
    8. '          ' → logprob: -12.875038146972656
    9. '		' → logprob: -13.375038146972656
    10. ',' → logprob: -13.375038146972656

Token 643: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14522361755371094
    2. '       ' → logprob: -2.645223617553711
    3. 'break' → logprob: -2.770223617553711
    4. '	break' → logprob: -7.520223617553711
    5. ' break' → logprob: -7.770223617553711
    6. '               ' → logprob: -8.645223617553711
    7. '   ' → logprob: -9.395223617553711
    8. '		' → logprob: -9.395223617553711
    9. 'if' → logprob: -9.395223617553711
    10. '	       ' → logprob: -9.770223617553711

Token 644: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.024061042815446854
    2. '(ans' → logprob: -3.7740609645843506
    3. '(' → logprob: -7.89906120300293
    4. '()' → logprob: -8.27406120300293
    5. '(_' → logprob: -9.14906120300293
    6. '_(' → logprob: -10.52406120300293
    7. 'ans' → logprob: -10.64906120300293
    8. '("_' → logprob: -12.02406120300293
    9. 'Ans' → logprob: -12.27406120300293
    10. ' (' → logprob: -12.64906120300293

Token 645: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0017107593594118953
    2. '(ans' → logprob: -6.501710891723633
    3. '_(' → logprob: -9.376710891723633
    4. '(and' → logprob: -10.001710891723633
    5. '(' → logprob: -10.126710891723633
    6. 'and' → logprob: -10.626710891723633
    7. '(_' → logprob: -11.751710891723633
    8. '()' → logprob: -13.626710891723633
    9. '_ans' → logprob: -14.126710891723633
    10. '_' → logprob: -14.251710891723633

Token 646: '_return' (ID: 29287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011125517077744007
    2. 'eturn' → logprob: -4.511125564575195
    3. 'turn' → logprob: -9.761125564575195
    4. '_return' → logprob: -10.886125564575195
    5. ' return' → logprob: -14.261125564575195
    6. '(return' → logprob: -15.136125564575195
    7. 'urn' → logprob: -15.386125564575195
    8. 'Return' → logprob: -16.261125564575195
    9. '{return' → logprob: -16.761125564575195
    10. ')return' → logprob: -17.511125564575195

Token 647: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.8624639324116288e-06
    2. 'ans' → logprob: -13.250001907348633
    3. '(answer' → logprob: -19.125001907348633
    4. '(' → logprob: -20.000001907348633
    5. '	ans' → logprob: -20.125001907348633
    6. '(
' → logprob: -22.125001907348633
    7. ' ans' → logprob: -22.375001907348633
    8. ' (' → logprob: -22.375001907348633
    9. '```' → logprob: -22.500001907348633
    10. '_ans' → logprob: -23.000001907348633

Token 648: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16032090783119202
    2. ')
' → logprob: -1.9103208780288696
    3. '       ' → logprob: -9.535321235656738
    4. ')
' → logprob: -11.535321235656738
    5. '()' → logprob: -12.785321235656738
    6. '())' → logprob: -12.910321235656738
    7. ')`
' → logprob: -13.035321235656738
    8. '())
' → logprob: -13.410321235656738
    9. ')return' → logprob: -13.535321235656738
    10. '           ' → logprob: -13.535321235656738

Token 649: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022271649911999702
    2. '<|end|>' → logprob: -4.147271633148193
    3. '        
' → logprob: -5.772271633148193
    4. '\n' → logprob: -7.147271633148193
    5. '	' → logprob: -7.647271633148193
    6. '    
' → logprob: -8.397272109985352
    7. '
' → logprob: -8.522272109985352
    8. '   ' → logprob: -8.772272109985352
    9. '  
' → logprob: -8.897272109985352
    10. ')' → logprob: -9.022272109985352

Token 650: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25272631645202637
    2. 'break' → logprob: -1.5027263164520264
    3. ' break' → logprob: -7.3777265548706055
    4. 'return' (adapté à ' return') → logprob: -9.002726554870605
    5. '               ' → logprob: -11.002726554870605
    6. '       ' → logprob: -11.002726554870605
    7. '		' → logprob: -12.127726554870605
    8. '	break' → logprob: -12.627726554870605
    9. '                   ' → logprob: -13.252726554870605
    10. 'b' → logprob: -13.377726554870605

Token 651: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18090961873531342
    2. '        
' → logprob: -2.4309096336364746
    3. '
' → logprob: -2.6809096336364746
    4. '  
' → logprob: -5.680909633636475
    5. '<|end|>' → logprob: -6.055909633636475
    6. '\n' → logprob: -6.930909633636475
    7. ' 
' → logprob: -7.430909633636475
    8. '    
' → logprob: -7.555909633636475
    9. '		
' → logprob: -7.930909633636475
    10. '       
' → logprob: -9.055909156799316

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024606462568044662
    2. '```' → logprob: -3.899606466293335
    3. '	' → logprob: -6.149606227874756
    4. '<|end|>' → logprob: -7.149606227874756
    5. '   ' → logprob: -7.899606227874756
    6. '        
' → logprob: -8.149606704711914
    7. '``' → logprob: -10.524606704711914
    8. 'if' → logprob: -10.524606704711914
    9. '		
' → logprob: -10.774606704711914
    10. '    
' → logprob: -10.899606704711914

Token 653: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40202662348747253
    2. 'if' (adapté à ' if') → logprob: -1.652026653289795
    3. ' if' → logprob: -2.027026653289795
    4. '	' → logprob: -5.652026653289795
    5. '   ' → logprob: -6.777026653289795
    6. '	if' → logprob: -7.152026653289795
    7. '    ' → logprob: -7.277026653289795
    8. '        ' → logprob: -8.402026176452637
    9. 'x' → logprob: -8.902026176452637
    10. '        
' → logprob: -9.277026176452637

Token 654: ' forward' (ID: 6687)
  Prédit: ' forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.014163863845169544
    2. 'forward' → logprob: -4.264163970947266
    3. ' not' → logprob: -15.014163970947266
    4. 'not' → logprob: -18.639163970947266
    5. 'Forward' → logprob: -18.889163970947266
    6. '_forward' → logprob: -19.264163970947266
    7. '   ' → logprob: -19.889163970947266
    8. '.forward' → logprob: -20.139163970947266
    9. '    ' → logprob: -21.139163970947266
    10. ' forwards' → logprob: -21.389163970947266

Token 655: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018555807182565331
    2. '==' → logprob: -6.626855373382568
    3. ' ==' → logprob: -8.126855850219727
    4. ' :' → logprob: -8.876855850219727
    5. ':
' → logprob: -9.626855850219727
    6. '):' → logprob: -11.251855850219727
    7. '=' → logprob: -11.751855850219727
    8. '():' → logprob: -13.001855850219727
    9. ' and' → logprob: -13.126855850219727
    10. '[' → logprob: -14.001855850219727

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009294279851019382
    2. ':
' → logprob: -5.134294509887695
    3. 'xo' → logprob: -6.384294509887695
    4. ',' → logprob: -7.509294509887695
    5. ':' → logprob: -7.634294509887695
    6. ' xo' → logprob: -8.634294509887695
    7. '(x' → logprob: -8.634294509887695
    8. '       ' → logprob: -9.384294509887695
    9. '
' → logprob: -10.009294509887695
    10. ' =' → logprob: -10.634294509887695

Token 657: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' (adapté à ' xo') → logprob: -0.0009710140293464065
    2. ' xo' → logprob: -7.250970840454102
    3. '       ' → logprob: -8.625970840454102
    4. '           ' → logprob: -9.750970840454102
    5. '(x' → logprob: -11.000970840454102
    6. 'xor' → logprob: -12.875970840454102
    7. '   ' → logprob: -13.250970840454102
    8. 'xy' → logprob: -14.500970840454102
    9. '               ' → logprob: -14.625970840454102
    10. 'result' → logprob: -15.000970840454102

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -14.000001907348633
    3. ',s' → logprob: -14.750001907348633
    4. '<|end|>' → logprob: -15.125001907348633
    5. '=' → logprob: -15.250001907348633
    6. '‌,' → logprob: -16.750001907348633
    7. ',user' → logprob: -17.375001907348633
    8. ',
' → logprob: -17.500001907348633
    9. '_,' → logprob: -17.750001907348633
    10. '‍,' → logprob: -18.375001907348633

Token 659: ' su' (ID: 593)
  Prédit: ' su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.049487460404634476
    2. 'su' → logprob: -3.049487352371216
    3. '<|end|>' → logprob: -7.049487590789795
    4. 's' → logprob: -10.424487113952637
    5. ' су' → logprob: -14.049487113952637
    6. 'Su' → logprob: -15.424487113952637
    7. ' suw' → logprob: -15.674487113952637
    8. '```' → logprob: -15.799487113952637
    9. ' ' → logprob: -15.924487113952637
    10. '<|end|>' → logprob: -16.174488067626953

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -14.75000286102295
    4. '=' → logprob: -16.000003814697266
    5. ' =' → logprob: -18.375003814697266
    6. '           ' → logprob: -18.500003814697266
    7. '_,' → logprob: -18.750003814697266
    8. '<|end|>' → logprob: -19.500003814697266
    9. '‌,' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.375003814697266

Token 661: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.13388703338569e-06
    2. ' ans' → logprob: -11.625009536743164
    3. '	ans' → logprob: -16.000009536743164
    4. '(ans' → logprob: -17.625009536743164
    5. 'ann' → logprob: -20.000009536743164
    6. '   ' → logprob: -20.000009536743164
    7. '_ans' → logprob: -20.375009536743164
    8. '
' → logprob: -20.500009536743164
    9. 'answer' → logprob: -20.500009536743164
    10. '```' → logprob: -20.625009536743164

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ' ,' → logprob: -16.125
    3. ',l' → logprob: -18.25
    4. '<|end|>' → logprob: -18.375
    5. '_,' → logprob: -18.625
    6. '=' → logprob: -19.0
    7. ',r' → logprob: -19.375
    8. '‌,' → logprob: -20.5
    9. 'r' → logprob: -20.625
    10. ',
' → logprob: -21.0

Token 663: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.935296834039036e-06
    2. ' l' → logprob: -12.75000286102295
    3. '	l' → logprob: -18.750003814697266
    4. '_l' → logprob: -20.500003814697266
    5. ',l' → logprob: -20.875003814697266
    6. 'ltr' → logprob: -21.750003814697266
    7. '   ' → logprob: -22.875003814697266
    8. 'lx' → logprob: -22.875003814697266
    9. '[l' → logprob: -23.625003814697266
    10. ',' → logprob: -23.625003814697266

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ',r' → logprob: -11.750014305114746
    3. ' ,' → logprob: -12.125014305114746
    4. 'r' → logprob: -15.250014305114746
    5. '=' → logprob: -15.500014305114746
    6. '<|end|>' → logprob: -17.12501335144043
    7. '```' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.62501335144043
    9. '‌,' → logprob: -17.75001335144043
    10. ',
' → logprob: -17.87501335144043

Token 665: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.014684110297821e-06
    2. ' r' → logprob: -11.625008583068848
    3. ' ' → logprob: -18.250009536743164
    4. '   ' → logprob: -18.375009536743164
    5. ',r' → logprob: -18.625009536743164
    6. ',' → logprob: -18.875009536743164
    7. '	r' → logprob: -19.000009536743164
    8. '```' → logprob: -19.625009536743164
    9. '
' → logprob: -20.250009536743164
    10. '...' → logprob: -20.375009536743164

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063124471344053745
    2. '=' → logprob: -5.131312370300293
    3. ' =' → logprob: -7.881312370300293
    4. ' ,' → logprob: -12.631312370300293
    5. '           ' → logprob: -13.756312370300293
    6. '<|end|>' → logprob: -14.131312370300293
    7. ')' → logprob: -15.506312370300293
    8. '   ' → logprob: -16.63131332397461
    9. '          ' → logprob: -17.00631332397461
    10. '       ' → logprob: -17.00631332397461

Token 667: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.07888978719711304
    2. ' forward' → logprob: -2.578889846801758
    3. '   ' → logprob: -17.578889846801758
    4. '_forward' → logprob: -17.703889846801758
    5. '    ' → logprob: -18.703889846801758
    6. '
' → logprob: -18.953889846801758
    7. '.forward' → logprob: -19.203889846801758
    8. '           ' → logprob: -19.578889846801758
    9. '       ' → logprob: -19.578889846801758
    10. ' ' → logprob: -19.828889846801758

Token 668: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048631198704242706
    2. ' =' → logprob: -3.048631191253662
    3. ',' → logprob: -10.04863166809082
    4. ' ' → logprob: -15.29863166809082
    5. '=True' → logprob: -15.92363166809082
    6. '=}' → logprob: -16.92363166809082
    7. '<|end|>' → logprob: -17.29863166809082
    8. '＝' → logprob: -17.92363166809082
    9. '=

' → logprob: -18.29863166809082
    10. '   ' → logprob: -18.42363166809082

Token 669: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.06196768581867218
    2. ' process' → logprob: -2.811967611312866
    3. '	process' → logprob: -19.061967849731445
    4. 'proces' → logprob: -19.311967849731445
    5. '(process' → logprob: -20.186967849731445
    6. ' proces' → logprob: -20.311967849731445
    7. '.process' → logprob: -20.936967849731445
    8. '_process' → logprob: -21.811967849731445
    9. '   ' → logprob: -22.686967849731445
    10. 'rocess' → logprob: -22.811967849731445

Token 670: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -1.7432603272027336e-06
    2. 'forward' → logprob: -13.500001907348633
    3. '_backward' → logprob: -15.500001907348633
    4. '_for' → logprob: -15.750001907348633
    5. '_' → logprob: -17.875001907348633
    6. '_FORWARD' → logprob: -19.875001907348633
    7. '_f' → logprob: -20.000001907348633
    8. ' _' → logprob: -20.125001907348633
    9. ' forward' → logprob: -20.125001907348633
    10. 'r' → logprob: -20.125001907348633

Token 671: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -14.500059127807617
    4. 'x' → logprob: -16.000059127807617
    5. '(
' → logprob: -17.250059127807617
    6. 'xo' → logprob: -18.125059127807617
    7. '(xs' → logprob: -19.625059127807617
    8. ' ' → logprob: -19.875059127807617
    9. '```' → logprob: -20.125059127807617
    10. ',x' → logprob: -20.500059127807617

Token 672: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0012527309590950608
    2. ',' → logprob: -6.8762526512146
    3. ')' → logprob: -8.876253128051758
    4. ',o' → logprob: -10.001253128051758
    5. 'or' → logprob: -12.001253128051758
    6. ' o' → logprob: -12.251253128051758
    7. 'r' → logprob: -12.501253128051758
    8. ',r' → logprob: -12.876253128051758
    9. 'os' → logprob: -12.876253128051758
    10. ' ,' → logprob: -13.001253128051758

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ' ,' → logprob: -10.750036239624023
    3. ',s' → logprob: -11.250036239624023
    4. ',
' → logprob: -14.250036239624023
    5. 'su' → logprob: -15.250036239624023
    6. '<|end|>' → logprob: -15.625036239624023
    7. ')' → logprob: -15.875036239624023
    8. ' su' → logprob: -17.000036239624023
    9. '_,' → logprob: -17.625036239624023
    10. '   ' → logprob: -17.625036239624023

Token 674: ' su' (ID: 593)
  Prédit: ' su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.17976464331150055
    2. 'su' → logprob: -1.8047646284103394
    3. 's' → logprob: -11.054764747619629
    4. 'Su' → logprob: -13.929764747619629
    5. ' ' → logprob: -14.929764747619629
    6. '-su' → logprob: -15.054764747619629
    7. ' supr' → logprob: -15.054764747619629
    8. ')' → logprob: -15.304764747619629
    9. ' sul' → logprob: -15.554764747619629
    10. '```' → logprob: -15.679764747619629

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ',l' → logprob: -11.125032424926758
    3. ' ,' → logprob: -11.500032424926758
    4. ',r' → logprob: -11.875032424926758
    5. ',
' → logprob: -14.875032424926758
    6. ')' → logprob: -15.500032424926758
    7. '<|end|>' → logprob: -15.875032424926758
    8. '   ' → logprob: -17.250032424926758
    9. 'r' → logprob: -17.375032424926758
    10. '```' → logprob: -17.500032424926758

Token 676: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.742448022123426e-05
    2. 'r' → logprob: -10.250067710876465
    3. ' ans' → logprob: -10.375067710876465
    4. '   ' → logprob: -14.875067710876465
    5. 'l' → logprob: -16.00006675720215
    6. '	ans' → logprob: -16.37506675720215
    7. '
' → logprob: -16.62506675720215
    8. '(ans' → logprob: -16.87506675720215
    9. '```' → logprob: -17.00006675720215
    10. ' ' → logprob: -17.37506675720215

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.941161776310764e-05
    2. ',l' → logprob: -10.375039100646973
    3. ' ,' → logprob: -11.750039100646973
    4. ',
' → logprob: -15.625039100646973
    5. ',r' → logprob: -17.75004005432129
    6. ')' → logprob: -18.37504005432129
    7. '   ' → logprob: -18.50004005432129
    8. '```' → logprob: -19.62504005432129
    9. 'l' → logprob: -20.00004005432129
    10. ',
' → logprob: -20.25004005432129

Token 678: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006715728435665369
    2. ' l' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.381715774536133
    4. ' ' → logprob: -16.506715774536133
    5. '	l' → logprob: -16.631715774536133
    6. ',l' → logprob: -17.756715774536133
    7. 'r' → logprob: -18.256715774536133
    8. '<|end|>' → logprob: -18.506715774536133
    9. ')' → logprob: -18.756715774536133
    10. '_l' → logprob: -18.881715774536133

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009585086372680962
    2. ',r' → logprob: -7.000958442687988
    3. ' ,' → logprob: -10.000958442687988
    4. 'r' → logprob: -14.125958442687988
    5. ',
' → logprob: -15.000958442687988
    6. ' r' → logprob: -15.000958442687988
    7. '```' → logprob: -16.750959396362305
    8. ')' → logprob: -16.875959396362305
    9. '   ' → logprob: -17.500959396362305
    10. ',\
' → logprob: -18.125959396362305

Token 680: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.836499985889532e-05
    2. ' r' → logprob: -9.7500581741333
    3. ' ' → logprob: -19.500059127807617
    4. '<|end|>' → logprob: -20.500059127807617
    5. '	r' → logprob: -20.875059127807617
    6. '   ' → logprob: -21.250059127807617
    7. ')' → logprob: -21.625059127807617
    8. '  ' → logprob: -23.250059127807617
    9. 'rtype' → logprob: -23.500059127807617
    10. '
' → logprob: -23.500059127807617

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.62502670288086
    3. ',l' → logprob: -13.62502670288086
    4. '   ' → logprob: -14.75002670288086
    5. '```' → logprob: -15.00002670288086
    6. ',
' → logprob: -15.75002670288086
    7. '`,' → logprob: -15.87502670288086
    8. ')' → logprob: -16.12502670288086
    9. ',list' → logprob: -16.75002670288086
    10. '[' → logprob: -17.25002670288086

Token 682: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.004080420359969139
    2. ' lis' → logprob: -5.504080295562744
    3. 'list' → logprob: -14.254080772399902
    4. 'lic' → logprob: -14.879080772399902
    5. 'li' → logprob: -15.004080772399902
    6. 'Lis' → logprob: -15.004080772399902
    7. 'l' → logprob: -16.254079818725586
    8. 'ls' → logprob: -16.629079818725586
    9. 'lit' → logprob: -16.879079818725586
    10. 'lus' → logprob: -17.004079818725586

Token 683: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.722539834911004e-05
    2. ')
' → logprob: -9.250097274780273
    3. '       ' → logprob: -14.625097274780273
    4. '   ' → logprob: -14.625097274780273
    5. ' )' → logprob: -16.250097274780273
    6. '))' → logprob: -18.125097274780273
    7. '           ' → logprob: -18.125097274780273
    8. ')return' → logprob: -18.375097274780273
    9. ')

' → logprob: -18.500097274780273
    10. ')
' → logprob: -18.500097274780273

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026705421041697264
    2. 'else' → logprob: -6.752670764923096
    3. '```' → logprob: -6.877670764923096
    4. '<|end|>' → logprob: -8.252670288085938
    5. ' else' → logprob: -8.877670288085938
    6. '	' → logprob: -10.502670288085938
    7. '   ' → logprob: -11.502670288085938
    8. 'elif' → logprob: -11.627670288085938
    9. '	else' → logprob: -11.752670288085938
    10. '<|end|>' → logprob: -13.627670288085938

Token 685: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2694319188594818
    2. '       ' → logprob: -2.0194318294525146
    3. ' else' → logprob: -2.2694318294525146
    4. '   ' → logprob: -10.144432067871094
    5. '	else' → logprob: -10.769432067871094
    6. '           ' → logprob: -11.644432067871094
    7. 'elif' → logprob: -12.019432067871094
    8. '```' → logprob: -12.894432067871094
    9. '        ' → logprob: -13.144432067871094
    10. '<|end|>' → logprob: -13.894432067871094

Token 686: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18153944611549377
    2. ':
' → logprob: -1.8065394163131714
    3. ',' → logprob: -6.681539535522461
    4. '           ' → logprob: -8.431539535522461
    5. '       ' → logprob: -9.681539535522461
    6. '<|end|>' → logprob: -9.806539535522461
    7. '[' → logprob: -10.181539535522461
    8. '(
' → logprob: -10.306539535522461
    9. '{' → logprob: -10.556539535522461
    10. '(' → logprob: -11.056539535522461

Token 687: '           ' (ID: 352)
  Prédit: ' xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xo' → logprob: -0.03532451391220093
    2. 'xo' → logprob: -4.285324573516846
    3. '   ' → logprob: -4.410324573516846
    4. '           ' → logprob: -5.160324573516846
    5. ' ' → logprob: -6.535324573516846
    6. '```' → logprob: -7.660324573516846
    7. '       ' → logprob: -7.910324573516846
    8. ' ' → logprob: -8.910324096679688
    9. ' x' → logprob: -9.535324096679688
    10. 'x' → logprob: -9.660324096679688

Token 688: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' (adapté à ' xo') → logprob: -0.06487184017896652
    2. ' xo' → logprob: -2.8148717880249023
    3. '   ' → logprob: -6.189871788024902
    4. '           ' → logprob: -7.314871788024902
    5. '       ' → logprob: -8.939871788024902
    6. 'xor' → logprob: -10.189871788024902
    7. '               ' → logprob: -12.189871788024902
    8. ' ' → logprob: -12.689871788024902
    9. '    ' → logprob: -13.189871788024902
    10. 'oxo' → logprob: -14.064871788024902

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ',s' → logprob: -13.625001907348633
    3. ' ,' → logprob: -16.000001907348633
    4. ',
' → logprob: -17.250001907348633
    5. '=' → logprob: -18.125001907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. 's' → logprob: -18.750001907348633
    8. '‌,' → logprob: -18.875001907348633
    9. '```' → logprob: -19.375001907348633
    10. '‍,' → logprob: -19.875001907348633

Token 690: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.25193196535110474
    2. ' su' → logprob: -1.50193190574646
    3. 's' → logprob: -13.001932144165039
    4. 'Su' → logprob: -16.37693214416504
    5. '   ' → logprob: -16.62693214416504
    6. '	s' → logprob: -16.75193214416504
    7. ' ' → logprob: -17.00193214416504
    8. ',' → logprob: -17.25193214416504
    9. '    ' → logprob: -17.25193214416504
    10. ' sul' → logprob: -17.25193214416504

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -15.500015258789062
    4. '=' → logprob: -15.750015258789062
    5. ',
' → logprob: -18.125015258789062
    6. ',s' → logprob: -18.500015258789062
    7. '_,' → logprob: -18.750015258789062
    8. ' =' → logprob: -19.250015258789062
    9. '‌,' → logprob: -19.500015258789062
    10. '```' → logprob: -19.750015258789062

Token 692: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5798543691635132
    2. 'su' → logprob: -0.8298543691635132
    3. ' ans' → logprob: -5.579854488372803
    4. ' su' → logprob: -8.954854011535645
    5. '   ' → logprob: -13.954854011535645
    6. ' ' → logprob: -14.204854011535645
    7. '(ans' → logprob: -14.579854011535645
    8. 's' → logprob: -14.704854011535645
    9. 'sub' → logprob: -14.829854011535645
    10. '	ans' → logprob: -14.829854011535645

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -12.500003814697266
    3. '=' → logprob: -16.750003814697266
    4. '```' → logprob: -17.625003814697266
    5. ' ans' → logprob: -18.250003814697266
    6. ',
' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.875003814697266
    8. ',x' → logprob: -19.125003814697266
    9. '           ' → logprob: -19.375003814697266
    10. '`,' → logprob: -19.500003814697266

Token 694: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001147483242675662
    2. 'l' → logprob: -7.001147270202637
    3. ' ans' → logprob: -8.376147270202637
    4. ' l' → logprob: -12.626147270202637
    5. '   ' → logprob: -14.251147270202637
    6. ' ' → logprob: -14.501147270202637
    7. '  ' → logprob: -14.876147270202637
    8. 'print' → logprob: -15.376147270202637
    9. '	ans' → logprob: -15.751147270202637
    10. '    ' → logprob: -15.876147270202637

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -12.12501049041748
    3. '=' → logprob: -12.75001049041748
    4. ',r' → logprob: -13.25001049041748
    5. '<|end|>' → logprob: -15.50001049041748
    6. '```' → logprob: -17.125011444091797
    7. '           ' → logprob: -17.250011444091797
    8. '	' → logprob: -17.500011444091797
    9. '   ' → logprob: -17.750011444091797
    10. '[' → logprob: -17.750011444091797

Token 696: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012510710395872593
    2. ' r' → logprob: -4.387510776519775
    3. '   ' → logprob: -15.262510299682617
    4. '       ' → logprob: -15.887510299682617
    5. '           ' → logprob: -16.262510299682617
    6. ' ' → logprob: -16.262510299682617
    7. ',' → logprob: -16.762510299682617
    8. '```' → logprob: -16.762510299682617
    9. '     ' → logprob: -17.137510299682617
    10. '    ' → logprob: -17.262510299682617

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.64970643306151e-05
    2. '=' → logprob: -9.375086784362793
    3. ' =' → logprob: -14.125086784362793
    4. ' ,' → logprob: -14.250086784362793
    5. '   ' → logprob: -17.500085830688477
    6. '```' → logprob: -17.500085830688477
    7. ',
' → logprob: -17.625085830688477
    8. '<|end|>' → logprob: -18.375085830688477
    9. ')' → logprob: -19.000085830688477
    10. '_,' → logprob: -19.062585830688477

Token 698: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.026812594383955002
    2. ' forward' → logprob: -3.7768125534057617
    3. 'False' → logprob: -5.651812553405762
    4. ' False' → logprob: -10.151812553405762
    5. '   ' → logprob: -12.151812553405762
    6. 'false' → logprob: -13.526812553405762
    7. 'back' → logprob: -13.776812553405762
    8. '       ' → logprob: -14.526812553405762
    9. 'process' → logprob: -14.651812553405762
    10. ' ' → logprob: -14.901812553405762

Token 699: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010066172108054161
    2. ',' → logprob: -4.885066032409668
    3. ' =' → logprob: -6.010066032409668
    4. 'process' → logprob: -13.510066032409668
    5. '   ' → logprob: -14.760066032409668
    6. '(process' → logprob: -14.760066032409668
    7. ' process' → logprob: -15.010066032409668
    8. ')' → logprob: -15.760066032409668
    9. '<|end|>' → logprob: -16.135066986083984
    10. '=

' → logprob: -16.510066986083984

Token 700: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.47407716512680054
    2. ' process' → logprob: -0.9740771651268005
    3. '	process' → logprob: -16.349077224731445
    4. '(process' → logprob: -16.599077224731445
    5. ' proces' → logprob: -17.849077224731445
    6. 'proces' → logprob: -18.224077224731445
    7. '_process' → logprob: -19.474077224731445
    8. '.process' → logprob: -19.974077224731445
    9. '   ' → logprob: -20.849077224731445
    10. 'rocess' → logprob: -20.974077224731445

Token 701: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -3.173704271830502e-06
    2. '_forward' → logprob: -12.87500286102295
    3. '_' → logprob: -15.37500286102295
    4. '_back' → logprob: -15.62500286102295
    5. '.backward' → logprob: -16.375003814697266
    6. '```' → logprob: -16.875003814697266
    7. 'back' → logprob: -17.125003814697266
    8. 'Backward' → logprob: -17.625003814697266
    9. ' backward' → logprob: -18.000003814697266
    10. '_backup' → logprob: -18.250003814697266

Token 702: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -11.375014305114746
    3. ' (' → logprob: -13.000014305114746
    4. '(
' → logprob: -15.125014305114746
    5. 'xo' → logprob: -15.125014305114746
    6. '(o' → logprob: -16.750015258789062
    7. '(s' → logprob: -17.000015258789062
    8. ' xo' → logprob: -17.250015258789062
    9. '```' → logprob: -17.250015258789062
    10. '(xs' → logprob: -17.750015258789062

Token 703: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.007406315300613642
    2. ',' → logprob: -5.007406234741211
    3. ',o' → logprob: -8.757406234741211
    4. '_o' → logprob: -9.007406234741211
    5. '(x' → logprob: -9.132406234741211
    6. '(o' → logprob: -9.257406234741211
    7. '_,' → logprob: -9.882406234741211
    8. '_' → logprob: -10.132406234741211
    9. 'xo' → logprob: -10.257406234741211
    10. ')' → logprob: -10.257406234741211

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010568885772954673
    2. ' ,' → logprob: -9.750105857849121
    3. ',s' → logprob: -10.875105857849121
    4. ')' → logprob: -12.125105857849121
    5. ',
' → logprob: -12.375105857849121
    6. '<|end|>' → logprob: -12.375105857849121
    7. 'su' → logprob: -13.000105857849121
    8. ',x' → logprob: -13.125105857849121
    9. ',y' → logprob: -13.125105857849121
    10. 's' → logprob: -13.250105857849121

Token 705: ' su' (ID: 593)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00027206414961256087
    2. ' ans' → logprob: -8.250271797180176
    3. 'l' → logprob: -11.500271797180176
    4. '(ans' → logprob: -15.250271797180176
    5. '	ans' → logprob: -16.000272750854492
    6. 'xo' → logprob: -16.750272750854492
    7. 'su' → logprob: -16.875272750854492
    8. ' l' → logprob: -17.250272750854492
    9. '```' → logprob: -17.250272750854492
    10. ' ' → logprob: -17.500272750854492

Token 706: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ' ans' → logprob: -15.375001907348633
    4. 'ans' → logprob: -15.750001907348633
    5. ')' → logprob: -15.875001907348633
    6. '```' → logprob: -16.500001907348633
    7. '(ans' → logprob: -16.875001907348633
    8. ',
' → logprob: -17.125001907348633
    9. '<|end|>' → logprob: -17.500001907348633
    10. '	ans' → logprob: -19.125001907348633

Token 707: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000958031858317554
    2. ' ans' → logprob: -7.00095796585083
    3. 'l' → logprob: -10.000958442687988
    4. ' l' → logprob: -14.000958442687988
    5. '	ans' → logprob: -15.500958442687988
    6. '(ans' → logprob: -16.500957489013672
    7. ' ' → logprob: -17.125957489013672
    8. 'answer' → logprob: -17.250957489013672
    9. '   ' → logprob: -17.375957489013672
    10. '```' → logprob: -17.500957489013672

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ',l' → logprob: -10.375032424926758
    3. ' ,' → logprob: -14.500032424926758
    4. ',x' → logprob: -16.375032424926758
    5. '```' → logprob: -17.250032424926758
    6. ')' → logprob: -18.500032424926758
    7. ',r' → logprob: -18.750032424926758
    8. '(l' → logprob: -18.875032424926758
    9. ',ll' → logprob: -19.000032424926758
    10. ',
' → logprob: -19.125032424926758

Token 709: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0044876812025904655
    2. ' l' → logprob: -6.00448751449585
    3. 'lis' → logprob: -6.25448751449585
    4. 'r' → logprob: -10.129487991333008
    5. 'ans' → logprob: -10.879487991333008
    6. ' lis' → logprob: -11.254487991333008
    7. '```' → logprob: -12.754487991333008
    8. '	l' → logprob: -13.004487991333008
    9. '   ' → logprob: -13.129487991333008
    10. ' ' → logprob: -13.254487991333008

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003666818141937256
    2. ',r' → logprob: -5.628666877746582
    3. 'r' → logprob: -10.378666877746582
    4. ')' → logprob: -11.003666877746582
    5. ' ,' → logprob: -11.128666877746582
    6. '```' → logprob: -13.128666877746582
    7. ' r' → logprob: -14.503666877746582
    8. ',
' → logprob: -14.878666877746582
    9. ',l' → logprob: -15.003666877746582
    10. '           ' → logprob: -15.628666877746582

Token 711: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.656383680412546e-05
    2. ' r' → logprob: -10.000046730041504
    3. 'l' → logprob: -14.000046730041504
    4. '```' → logprob: -15.375046730041504
    5. '   ' → logprob: -16.625045776367188
    6. ' ' → logprob: -16.875045776367188
    7. 'lis' → logprob: -17.250045776367188
    8. '	r' → logprob: -17.875045776367188
    9. 'rans' → logprob: -17.875045776367188
    10. 'ans' → logprob: -18.125045776367188

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ',l' → logprob: -13.000003814697266
    3. ' ,' → logprob: -14.000003814697266
    4. '```' → logprob: -15.000003814697266
    5. ',list' → logprob: -16.375003814697266
    6. ')' → logprob: -16.750003814697266
    7. ',
' → logprob: -17.000003814697266
    8. '`,' → logprob: -17.875003814697266
    9. '<|end|>' → logprob: -17.875003814697266
    10. ',List' → logprob: -17.875003814697266

Token 713: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.008642109110951424
    2. ' lis' → logprob: -4.758642196655273
    3. ' ' → logprob: -12.133642196655273
    4. 'list' → logprob: -12.508642196655273
    5. 'lus' → logprob: -12.883642196655273
    6. 'l' → logprob: -12.883642196655273
    7. ',' → logprob: -13.258642196655273
    8. 'lic' → logprob: -13.258642196655273
    9. '   ' → logprob: -13.633642196655273
    10. 'Lis' → logprob: -13.633642196655273

Token 714: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016301481809932739
    2. ')
' → logprob: -8.875163078308105
    3. ',' → logprob: -10.750163078308105
    4. '   ' → logprob: -14.500163078308105
    5. ')

' → logprob: -15.125163078308105
    6. ' )' → logprob: -15.625163078308105
    7. '       ' → logprob: -16.00016212463379
    8. ')}' → logprob: -16.12516212463379
    9. '))' → logprob: -16.37516212463379
    10. ')`' → logprob: -16.37516212463379

Token 715: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5041109323501587
    2. 'for' → logprob: -1.3791109323501587
    3. 'def' → logprob: -2.504110813140869
    4. 'n' → logprob: -3.754110813140869
    5. 'while' → logprob: -4.004110813140869
    6. '<|end|>' → logprob: -4.254110813140869
    7. 't' → logprob: -5.879110813140869
    8. '#' → logprob: -6.004110813140869
    9. '```' → logprob: -7.254110813140869
    10. ' if' → logprob: -8.754111289978027

Token 716: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20572923123836517
    2. 'main' → logprob: -1.7057292461395264
    3. '__' → logprob: -5.830729007720947
    4. ' solve' → logprob: -7.705729007720947
    5. 'solve' → logprob: -7.705729007720947
    6. 'read' → logprob: -8.455729484558105
    7. ' read' → logprob: -8.830729484558105
    8. ' __' → logprob: -9.580729484558105
    9. '_main' → logprob: -10.830729484558105
    10. 'run' → logprob: -12.080729484558105

Token 717: '_loop' (ID: 40621)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011117222311440855
    2. '():
' → logprob: -9.12511157989502
    3. '()' → logprob: -13.50011157989502
    4. '():
' → logprob: -14.50011157989502
    5. ' ():' → logprob: -15.37511157989502
    6. '_' → logprob: -15.87511157989502
    7. '():

' → logprob: -17.125110626220703
    8. '(' → logprob: -17.125110626220703
    9. ':' → logprob: -18.875110626220703
    10. '().' → logprob: -19.500110626220703

Token 718: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.698698704596609e-05
    2. '():
' → logprob: -9.250097274780273
    3. ' ():' → logprob: -14.625097274780273
    4. '()' → logprob: -15.250097274780273
    5. '():
' → logprob: -16.500097274780273
    6. ':' → logprob: -18.500097274780273
    7. '():

' → logprob: -18.500097274780273
    8. '(' → logprob: -18.750097274780273
    9. '(":' → logprob: -20.625097274780273
    10. '();' → logprob: -20.625097274780273

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06275952607393265
    2. 't' → logprob: -2.8127596378326416
    3. ' t' → logprob: -8.062759399414062
    4. 'while' → logprob: -8.437759399414062
    5. 'def' → logprob: -9.187759399414062
    6. 'q' → logprob: -9.562759399414062
    7. 'for' → logprob: -10.437759399414062
    8. ' while' → logprob: -10.687759399414062
    9. 'n' → logprob: -11.062759399414062
    10. 'T' → logprob: -11.937759399414062

Token 720: ' n' (ID: 297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004397124983370304
    2. 'T' → logprob: -5.504396915435791
    3. 'for' → logprob: -8.75439739227295
    4. 'q' → logprob: -9.25439739227295
    5. '   ' → logprob: -9.75439739227295
    6. ' t' → logprob: -12.00439739227295
    7. 'tc' → logprob: -14.50439739227295
    8. 'def' → logprob: -15.12939739227295
    9. 'Q' → logprob: -16.379396438598633
    10. ' T' → logprob: -16.504396438598633

Token 721: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20150046050548553
    2. ' =' → logprob: -1.701500415802002
    3. '=int' → logprob: -9.95150089263916
    4. '_cases' → logprob: -11.20150089263916
    5. '=get' → logprob: -11.45150089263916
    6. 't' → logprob: -12.57650089263916
    7. 'um' → logprob: -12.70150089263916
    8. '   ' → logprob: -13.20150089263916
    9. '_tests' → logprob: -13.70150089263916
    10. 'cases' → logprob: -13.82650089263916

Token 722: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.4927079379558563
    2. 'get' → logprob: -0.9927079677581787
    3. 'int' → logprob: -3.9927079677581787
    4. ' read' → logprob: -12.117708206176758
    5. ' get' → logprob: -12.867708206176758
    6. ' int' → logprob: -14.992708206176758
    7. '
' → logprob: -16.742708206176758
    8. '  ' → logprob: -17.242708206176758
    9. '(read' → logprob: -17.242708206176758
    10. '1' → logprob: -17.367708206176758

Token 723: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.005263760685920715
    2. 'n' → logprob: -5.505263805389404
    3. '()' → logprob: -7.755263805389404
    4. 'N' → logprob: -8.130263328552246
    5. 'int' → logprob: -8.755263328552246
    6. '_list' → logprob: -8.880263328552246
    7. '_' → logprob: -9.630263328552246
    8. 'list' → logprob: -10.005263328552246
    9. '())' → logprob: -11.880263328552246
    10. ')' → logprob: -11.880263328552246

Token 724: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2879878282546997
    2. 'def' → logprob: -2.03798770904541
    3. '<|end|>' → logprob: -2.78798770904541
    4. 'for' → logprob: -3.28798770904541
    5. 't' → logprob: -4.41298770904541
    6. 'while' → logprob: -5.78798770904541
    7. '()' → logprob: -6.66298770904541
    8. ' for' → logprob: -7.03798770904541
    9. 'n' → logprob: -7.16298770904541
    10. '
' → logprob: -7.16298770904541

Token 725: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012758307857438922
    2. ' for' → logprob: -6.751276016235352
    3. '   ' → logprob: -9.376276016235352
    4. '	for' → logprob: -11.126276016235352
    5. '
' → logprob: -12.501276016235352
    6. '<|end|>' → logprob: -14.001276016235352
    7. 'while' → logprob: -14.251276016235352
    8. 't' → logprob: -14.501276016235352
    9. 'def' → logprob: -15.876276016235352
    10. '    
' → logprob: -16.00127601623535

Token 726: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.125
    3. 'while' → logprob: -16.125
    4. '   ' → logprob: -19.125
    5. '
' → logprob: -19.5
    6. '	for' → logprob: -20.625
    7. 'f' → logprob: -21.25
    8. 'fo' → logprob: -22.625
    9. '    
' → logprob: -22.875
    10. 'lis' → logprob: -23.0

Token 727: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1269419640302658
    2. ' _' → logprob: -2.1269419193267822
    3. '_i' → logprob: -11.376941680908203
    4. ' i' → logprob: -13.626941680908203
    5. '_case' → logprob: -14.751941680908203
    6. ' ' → logprob: -15.001941680908203
    7. '_t' → logprob: -16.251941680908203
    8. ' ' → logprob: -16.251941680908203
    9. '_=' → logprob: -16.376941680908203
    10. ' _
' → logprob: -17.001941680908203

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198785454034805
    2. 'in' → logprob: -2.81198787689209
    3. ' ' → logprob: -11.81198787689209
    4. '_in' → logprob: -12.68698787689209
    5. '_' → logprob: -12.93698787689209
    6. 'range' → logprob: -12.93698787689209
    7. '	in' → logprob: -13.18698787689209
    8. ' _' → logprob: -14.43698787689209
    9. 'n' → logprob: -14.81198787689209
    10. '
' → logprob: -15.18698787689209

Token 729: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '	range' → logprob: -18.625158309936523
    4. '(range' → logprob: -19.250158309936523
    5. 'rang' → logprob: -19.750158309936523
    6. '_' → logprob: -20.250158309936523
    7. '_range' → logprob: -20.750158309936523
    8. 'r' → logprob: -21.000158309936523
    9. 'n' → logprob: -21.125158309936523
    10. '[' → logprob: -21.750158309936523

Token 730: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0056278700940310955
    2. '(' → logprob: -5.255627632141113
    3. ' (' → logprob: -8.755627632141113
    4. 'n' → logprob: -8.880627632141113
    5. ' n' → logprob: -9.255627632141113
    6. '(
' → logprob: -13.380627632141113
    7. '(range' → logprob: -16.13062858581543
    8. 'range' → logprob: -17.25562858581543
    9. '	n' → logprob: -17.50562858581543
    10. '(int' → logprob: -17.50562858581543

Token 731: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2841157615184784
    2. '():' → logprob: -1.9091157913208008
    3. '):
' → logprob: -3.034115791320801
    4. '():
' → logprob: -3.159115791320801
    5. ':' → logprob: -5.784115791320801
    6. '()' → logprob: -5.784115791320801
    7. ')' → logprob: -6.784115791320801
    8. '   ' → logprob: -8.1591157913208
    9. '()):
' → logprob: -8.2841157913208
    10. ':
' → logprob: -8.6591157913208

Token 732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38789698481559753
    2. 'solve' → logprob: -1.38789701461792
    3. '   ' → logprob: -2.63789701461792
    4. ' solve' → logprob: -8.012896537780762
    5. '.solve' → logprob: -10.637896537780762
    6. 'def' → logprob: -11.387896537780762
    7. '
' → logprob: -11.762896537780762
    8. '<|end|>' → logprob: -12.387896537780762
    9. '```' → logprob: -12.387896537780762
    10. '	s' → logprob: -12.512896537780762

Token 733: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.002507047727704048
    2. '   ' → logprob: -6.127507209777832
    3. '       ' → logprob: -8.252507209777832
    4. ' solve' → logprob: -9.752507209777832
    5. '.solve' → logprob: -12.752507209777832
    6. 'def' → logprob: -16.377506256103516
    7. '           ' → logprob: -17.002506256103516
    8. '	s' → logprob: -17.502506256103516
    9. '
' → logprob: -17.502506256103516
    10. '```' → logprob: -17.627506256103516

Token 734: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. 'single' → logprob: -16.125
    4. '_s' → logprob: -16.375
    5. '_SINGLE' → logprob: -16.75
    6. 'Single' → logprob: -17.875
    7. '(single' → logprob: -18.75
    8. '_multiple' → logprob: -19.125
    9. '__' → logprob: -19.625
    10. '_double' → logprob: -19.75

Token 735: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.250001907348633
    3. '_cases' → logprob: -14.375001907348633
    4. '_code' → logprob: -15.000001907348633
    5. '_single' → logprob: -15.875001907348633
    6. '_c' → logprob: -16.625001907348633
    7. '_line' → logprob: -17.625001907348633
    8. 'case' → logprob: -18.250001907348633
    9. '_answer' → logprob: -18.625001907348633
    10. '_task' → logprob: -19.000001907348633

Token 736: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00978630781173706
    2. '()
' → logprob: -4.634786128997803
    3. '<|end|>' → logprob: -11.759786605834961
    4. '()

' → logprob: -12.134786605834961
    5. '()\' → logprob: -12.134786605834961
    6. '()`' → logprob: -12.759786605834961
    7. '()<' → logprob: -13.759786605834961
    8. '()%' → logprob: -13.884786605834961
    9. '```' → logprob: -13.884786605834961
    10. '();' → logprob: -13.884786605834961

Token 737: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0020233318209648132
    2. 'main' → logprob: -6.252023220062256
    3. '<|end|>' → logprob: -9.877023696899414
    4. '```' → logprob: -10.877023696899414
    5. ' if' → logprob: -11.627023696899414
    6. '
' → logprob: -11.627023696899414
    7. '#' → logprob: -12.502023696899414
    8. 'for' → logprob: -14.252023696899414
    9. '(main' → logprob: -14.627023696899414
    10. '#if' → logprob: -14.877023696899414

Token 738: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004774241708219051
    2. 'main' → logprob: -5.37977409362793
    3. '<|end|>' → logprob: -9.25477409362793
    4. '
' → logprob: -10.50477409362793
    5. '```' → logprob: -11.50477409362793
    6. ' if' → logprob: -11.75477409362793
    7. '\n' → logprob: -12.00477409362793
    8. '#' → logprob: -13.25477409362793
    9. '\' → logprob: -13.87977409362793
    10. 'for' → logprob: -14.50477409362793

Token 739: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006640645442530513
    2. 'main' → logprob: -7.625664234161377
    3. ' if' → logprob: -9.750663757324219
    4. '<|end|>' → logprob: -9.750663757324219
    5. '```' → logprob: -10.375663757324219
    6. '#' → logprob: -10.875663757324219
    7. 'for' → logprob: -13.625663757324219
    8. '
' → logprob: -13.750663757324219
    9. 'print' → logprob: -14.125663757324219
    10. '#if' → logprob: -14.375663757324219

Token 740: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006992113194428384
    2. 'main' → logprob: -7.375699043273926
    3. ' if' → logprob: -10.250699043273926
    4. '```' → logprob: -10.625699043273926
    5. '#' → logprob: -11.750699043273926
    6. '<|end|>' → logprob: -12.875699043273926
    7. 'def' → logprob: -14.375699043273926
    8. '\n' → logprob: -15.250699043273926
    9. 'solve' → logprob: -15.375699043273926
    10. '
' → logprob: -15.375699043273926

Token 741: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003188286442309618
    2. '__' → logprob: -5.753188133239746
    3. '_name' → logprob: -12.378188133239746
    4. 'name' → logprob: -12.378188133239746
    5. ' ' → logprob: -13.878188133239746
    6. '_' → logprob: -15.253188133239746
    7. ' ' → logprob: -15.378188133239746
    8. 'Name' → logprob: -15.503188133239746
    9. '___' → logprob: -15.753188133239746
    10. ' "__' → logprob: -15.753188133239746

Token 742: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007218453683890402
    2. ' ==' → logprob: -8.00072193145752
    3. ' __' → logprob: -8.62572193145752
    4. '==' → logprob: -9.00072193145752
    5. 'name' → logprob: -10.75072193145752
    6. '__[' → logprob: -11.25072193145752
    7. '[' → logprob: -11.50072193145752
    8. '__.__' → logprob: -12.12572193145752
    9. '_' → logprob: -12.25072193145752
    10. 'if' → logprob: -12.75072193145752

Token 743: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2007883671903983e-05
    2. '==' → logprob: -11.000021934509277
    3. '__.__' → logprob: -12.750021934509277
    4. ' ==' → logprob: -13.875021934509277
    5. '___' → logprob: -14.750021934509277
    6. '=="' → logprob: -15.250021934509277
    7. '____' → logprob: -15.625021934509277
    8. '__('' → logprob: -15.875021934509277
    9. '_' → logprob: -16.250022888183594
    10. '__.' → logprob: -16.375022888183594

Token 744: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2660785913467407
    2. '==' → logprob: -2.141078472137451
    3. ' ==' → logprob: -2.266078472137451
    4. '=="' → logprob: -4.516078472137451
    5. '=='' → logprob: -7.016078472137451
    6. '_' → logprob: -7.891078472137451
    7. '"' → logprob: -10.01607894897461
    8. '___' → logprob: -10.14107894897461
    9. '=' → logprob: -11.14107894897461
    10. '____' → logprob: -11.51607894897461

Token 745: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004087305162101984
    2. ''' → logprob: -5.504087448120117
    3. '__' → logprob: -11.879087448120117
    4. ' "__' → logprob: -13.629087448120117
    5. '"user' → logprob: -15.879087448120117
    6. ''"' → logprob: -16.004087448120117
    7. '"name' → logprob: -16.004087448120117
    8. '"class' → logprob: -17.129087448120117
    9. '("__' → logprob: -17.379087448120117
    10. '"<?' → logprob: -17.754087448120117

Token 746: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006779080722481012
    2. '__' → logprob: -5.006779193878174
    3. 'name' → logprob: -10.131778717041016
    4. '"' → logprob: -10.756778717041016
    5. ''' → logprob: -14.631778717041016
    6. '__":
' → logprob: -14.756778717041016
    7. '_main' → logprob: -15.006778717041016
    8. 'built' → logprob: -15.381778717041016
    9. 'python' → logprob: -15.506778717041016
    10. ' main' → logprob: -15.506778717041016

Token 747: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011849927715957165
    2. '__' → logprob: -4.511849880218506
    3. '__':
' → logprob: -7.136849880218506
    4. '__:' → logprob: -12.136850357055664
    5. '__
' → logprob: -14.386850357055664
    6. '():
' → logprob: -15.386850357055664
    7. '_' → logprob: -15.511850357055664
    8. '__
' → logprob: -16.261850357055664
    9. '__["' → logprob: -16.636850357055664
    10. '__.' → logprob: -16.886850357055664

Token 748: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20433568954467773
    2. '	main' → logprob: -1.7043356895446777
    3. '   ' → logprob: -6.204335689544678
    4. ' main' → logprob: -7.079335689544678
    5. '_main' → logprob: -10.329336166381836
    6. '\t' → logprob: -12.329336166381836
    7. '```' → logprob: -12.704336166381836
    8. 'import' → logprob: -13.079336166381836
    9. '	Main' → logprob: -13.079336166381836
    10. '(main' → logprob: -13.079336166381836

Token 749: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. 't' → logprob: -20.625
    4. '	main' → logprob: -21.0
    5. '   ' → logprob: -21.25
    6. '(main' → logprob: -22.5
    7. 'm' → logprob: -23.625
    8. 'T' → logprob: -23.875
    9. '_main' → logprob: -25.0
    10. 'ma' → logprob: -25.125

Token 750: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0005189551156945527
    2. '_' → logprob: -7.750518798828125
    3. '()' → logprob: -9.625518798828125
    4. '_main' → logprob: -11.625518798828125
    5. '(' → logprob: -12.875518798828125
    6. '_s' → logprob: -12.875518798828125
    7. '_SINGLE' → logprob: -13.000518798828125
    8. '_multiple' → logprob: -13.375518798828125
    9. 'Single' → logprob: -14.375518798828125
    10. '_all' → logprob: -14.500518798828125

Token 751: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.004144642036408186
    2. '_' → logprob: -6.004144668579102
    3. '_loop' → logprob: -6.629144668579102
    4. '_single' → logprob: -8.504144668579102
    5. 'case' → logprob: -10.004144668579102
    6. '_cases' → logprob: -10.254144668579102
    7. '()' → logprob: -10.754144668579102
    8. '_code' → logprob: -12.254144668579102
    9. '<|end|>' → logprob: -12.379144668579102
    10. '_c' → logprob: -12.754144668579102

Token 752: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016098834748845547
    2. '()
' → logprob: -8.750161170959473
    3. ' ()' → logprob: -13.500161170959473
    4. '(' → logprob: -15.500161170959473
    5. '()\' → logprob: -15.625161170959473
    6. '();' → logprob: -15.750161170959473
    7. '#' → logprob: -16.000160217285156
    8. '()<' → logprob: -16.125160217285156
    9. '()`' → logprob: -16.875160217285156
    10. '())' → logprob: -17.000160217285156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 750
Tokens correctement prédits (1ère position, stricte): 306
Tokens correctement prédits (1ère position, avec adaptation): 335
Tokens correctement prédits (top 10): 649
Précision stricte (1ère position): 40.80%
Précision adaptée (1ère position): 44.67%
Précision (top 10): 86.53%
================================================================================
