================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 10**9 + 7

def read_input():
    n = int(input())
    a = list(map(int, input().split()))
    return n, a

def init_arrays(n):
    sum_arr = [0 for _ in range(n+1)]
    dp = [0 for _ in range(n+1)]
    fac = [1 for _ in range(n+1)]
    finv = [1 for _ in range(n+1)]
    inv = [1 for _ in range(n+1)]
    return sum_arr, dp, fac, finv, inv

def compute_fac_inv(n, fac, inv, finv):
    compute_factorials(n, fac)
    compute_inv_array(n, inv)
    compute_factorial_inverses(n, inv, finv)

def compute_factorials(n, fac):
    for i in range(2, n+1):
        fac[i] = fac[i-1]*i % MOD

def compute_inv_array(n, inv):
    for i in range(2, n+1):
        inv[i] = MOD - inv[MOD % i] * (MOD // i) % MOD

def compute_factorial_inverses(n, inv, finv):
    for i in range(2, n+1):
        finv[i] = finv[i-1] * inv[i] % MOD

def fill_sum_array(n, sum_arr, inv):
    for i in range(1, n+1):
        sum_arr[i] = (sum_arr[i-1] + inv[i]) % MOD
    sum_arr[0] = 1

def fill_dp_array(n, dp, sum_arr):
    for i in range(1, n+1):
        dp[i] = (sum_arr[i] + sum_arr[n+1-i] - 1) % MOD

def compute_final_answer(n, dp, a, fac):
    ans = 0
    for i in range(1, n+1):
        ans = (ans + dp[i]*a[i-1]) % MOD
    return (ans * fac[n]) % MOD

def main():
    n, a = read_input()
    sum_arr, dp, fac, finv, inv = init_arrays(n)
    compute_fac_inv(n, fac, inv, finv)
    fill_sum_array(n, sum_arr, inv)
    fill_dp_array(n, dp, sum_arr)
    answer = compute_final_answer(n, dp, a, fac)
    print(answer)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12835821509361267
    2. '10' → logprob: -2.1283581256866455
    3. ' ' → logprob: -6.628358364105225
    4. '```' → logprob: -10.003357887268066
    5. '1' → logprob: -10.378357887268066
    6. '`' → logprob: -11.128357887268066
    7. '(' → logprob: -11.628357887268066
    8. '998' → logprob: -12.378357887268066
    9. '123' → logprob: -14.128357887268066
    10. '``' → logprob: -14.753357887268066

Token 4: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7644798159599304
    2. '**' → logprob: -0.7644798159599304
    3. '000' → logprob: -2.764479875564575
    4. '_' → logprob: -6.014479637145996
    5. ' **' → logprob: -6.389479637145996
    6. '^' → logprob: -6.889479637145996
    7. '6' → logprob: -8.264479637145996
    8. '00' → logprob: -9.014479637145996
    9. '```' → logprob: -9.889479637145996
    10. '*' → logprob: -10.014479637145996

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9385402993066236e-05
    2. '09' → logprob: -10.875019073486328
    3. '```' → logprob: -15.250019073486328
    4. ' ' → logprob: -16.625019073486328
    5. '**' → logprob: -19.750019073486328
    6. '``' → logprob: -20.000019073486328
    7. '   ' → logprob: -21.000019073486328
    8. '​' → logprob: -21.500019073486328
    9. '+' → logprob: -21.500019073486328
    10. ' ' → logprob: -21.625019073486328

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014084660506341606
    2. ' +' → logprob: -8.875141143798828
    3. '+
' → logprob: -14.875141143798828
    4. '7' → logprob: -15.125141143798828
    5. '```' → logprob: -16.000141143798828
    6. '+

' → logprob: -16.500141143798828
    7. '＋' → logprob: -16.750141143798828
    8. '"+"' → logprob: -17.500141143798828
    9. 'plus' → logprob: -18.375141143798828
    10. '\' → logprob: -18.500141143798828

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '+' → logprob: -15.12500286102295
    4. '```' → logprob: -17.250003814697266
    5. '37' → logprob: -19.375003814697266
    6. ' ' → logprob: -19.500003814697266
    7. '07' → logprob: -19.562503814697266
    8. '   ' → logprob: -19.812503814697266
    9. '9' → logprob: -19.937503814697266
    10. '_' → logprob: -20.562503814697266

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.25
    3. '```' → logprob: -17.875
    4. ' ' → logprob: -18.0
    5. '37' → logprob: -20.25
    6. '07' → logprob: -20.625
    7. '9' → logprob: -21.25
    8. '``' → logprob: -21.375
    9. '' → logprob: -21.875
    10. '   ' → logprob: -22.3125

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2106584310531616
    2. '```' → logprob: -1.5856584310531616
    3. '*' → logprob: -1.7106584310531616
    4. '\' → logprob: -2.585658550262451
    5. '#' → logprob: -3.210658550262451
    6. '
' → logprob: -3.335658550262451
    7. '`' → logprob: -3.335658550262451
    8. ')' → logprob: -3.460658550262451
    9. '_' → logprob: -4.085658550262451
    10. ',' → logprob: -4.210658550262451

Token 10: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6569611430168152
    2. '\n' → logprob: -2.03196120262146
    3. '`' → logprob: -2.15696120262146
    4. '\' → logprob: -2.28196120262146
    5. '
' → logprob: -3.03196120262146
    6. '*' → logprob: -3.53196120262146
    7. ',' → logprob: -4.406960964202881
    8. '=' → logprob: -4.531960964202881
    9. '#' → logprob: -5.031960964202881
    10. '``' → logprob: -5.406960964202881

Token 11: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016731605865061283
    2. ' factorial' → logprob: -7.001673221588135
    3. ' space' → logprob: -9.001672744750977
    4. ' add' → logprob: -9.001672744750977
    5. ' pow' → logprob: -9.376672744750977
    6. ' f' → logprob: -9.376672744750977
    7. ' mod' → logprob: -9.501672744750977
    8. ' calculate' → logprob: -10.001672744750977
    9. ' dfs' → logprob: -10.626672744750977
    10. ' factor' → logprob: -10.876672744750977

Token 12: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4921605587005615
    2. '_' → logprob: -1.6171605587005615
    3. '_line' → logprob: -1.7421605587005615
    4. '_input' → logprob: -4.617160797119141
    5. '_token' → logprob: -6.742160797119141
    6. '_data' → logprob: -7.617160797119141
    7. '_string' → logprob: -7.742160797119141
    8. '()' → logprob: -7.867160797119141
    9. '(_' → logprob: -8.36716079711914
    10. '_user' → logprob: -8.36716079711914

Token 13: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6836898326873779
    2. '(' → logprob: -0.8086898326873779
    3. '(:' → logprob: -3.308689832687378
    4. ':' → logprob: -5.183690071105957
    5. '_' → logprob: -6.058690071105957
    6. '(_:' → logprob: -6.433690071105957
    7. '```' → logprob: -6.808690071105957
    8. '):' → logprob: -7.308690071105957
    9. '_:' → logprob: -7.433690071105957
    10. '(_' → logprob: -7.808690071105957

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2427789717912674
    2. ' return' → logprob: -1.992779016494751
    3. '    
' → logprob: -3.867779016494751
    4. '```' → logprob: -4.367778778076172
    5. ' 
' → logprob: -4.742778778076172
    6. '    ' → logprob: -4.867778778076172
    7. 'return' → logprob: -5.117778778076172
    8. '\' → logprob: -5.117778778076172
    9. '<|end|>' → logprob: -5.117778778076172
    10. '\n' → logprob: -5.367778778076172

Token 15: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5507552623748779
    2. 'return' → logprob: -1.050755262374878
    3. '   ' → logprob: -2.925755262374878
    4. 'n' (adapté à ' n') → logprob: -5.050755500793457
    5. 'input' → logprob: -6.050755500793457
    6. 'x' → logprob: -6.175755500793457
    7. ' input' → logprob: -6.300755500793457
    8. ' data' → logprob: -6.425755500793457
    9. ' ' → logprob: -6.425755500793457
    10. 'data' → logprob: -6.550755500793457

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3326077163219452
    2. '=' → logprob: -1.5826077461242676
    3. ',' → logprob: -3.2076077461242676
    4. ' ' → logprob: -3.3326077461242676
    5. ' ,' → logprob: -7.707607746124268
    6. '  ' → logprob: -8.08260726928711
    7. '_' → logprob: -8.20760726928711
    8. ')' → logprob: -8.58260726928711
    9. '.' → logprob: -10.20760726928711
    10. ' =
' → logprob: -10.83260726928711

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.026337916031479836
    2. 'int' → logprob: -3.6513378620147705
    3. ' input' → logprob: -10.526337623596191
    4. ' ' → logprob: -12.026337623596191
    5. 'input' → logprob: -13.401337623596191
    6. ' len' → logprob: -13.401337623596191
    7. '=int' → logprob: -15.276337623596191
    8. ' in' → logprob: -15.276337623596191
    9. '0' → logprob: -15.401337623596191
    10. '   ' → logprob: -15.526337623596191

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2520096004009247
    2. '(' → logprob: -1.502009630203247
    3. 'input' → logprob: -9.502009391784668
    4. ' (' → logprob: -13.252009391784668
    5. '()' → logprob: -13.377009391784668
    6. '(
' → logprob: -13.502009391784668
    7. ' input' → logprob: -15.252009391784668
    8. '(

' → logprob: -15.502009391784668
    9. '(in' → logprob: -15.502009391784668
    10. '('' → logprob: -15.627009391784668

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4311659634113312
    2. ')' → logprob: -1.1811659336090088
    3. '()' → logprob: -3.181165933609009
    4. '(' → logprob: -6.556166172027588
    5. '))' → logprob: -8.80616569519043
    6. '()))' → logprob: -10.05616569519043
    7. ' ())' → logprob: -10.30616569519043
    8. '")' → logprob: -10.55616569519043
    9. '`)' → logprob: -10.55616569519043
    10. '')' → logprob: -10.68116569519043

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.072386384010315
    2. '\n' → logprob: -1.447386384010315
    3. '
' → logprob: -1.822386384010315
    4. '<|end|>' → logprob: -2.4473862648010254
    5. ')' → logprob: -3.5723862648010254
    6. 'n' → logprob: -3.5723862648010254
    7. 'return' → logprob: -3.9473862648010254
    8. ' 
' → logprob: -3.9473862648010254
    9. '    
' → logprob: -3.9473862648010254
    10. 'newline' → logprob: -4.322386264801025

Token 21: ' a' (ID: 261)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4842440187931061
    2. ' arr' → logprob: -1.8592439889907837
    3. 'a' (adapté à ' a') → logprob: -2.6092441082000732
    4. 'data' → logprob: -3.7342441082000732
    5. ' a' → logprob: -3.8592441082000732
    6. 'return' → logprob: -3.8592441082000732
    7. 'lst' → logprob: -3.8592441082000732
    8. 'array' → logprob: -4.234243869781494
    9. '   ' → logprob: -4.359243869781494
    10. ' return' → logprob: -5.109243869781494

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08053707331418991
    2. '=' → logprob: -2.8305370807647705
    3. ',' → logprob: -5.080536842346191
    4. ' ' → logprob: -5.205536842346191
    5. '[' → logprob: -5.705536842346191
    6. 'rray' → logprob: -7.080536842346191
    7. '[i' → logprob: -7.955536842346191
    8. '.' → logprob: -8.080536842346191
    9. '[:]' → logprob: -8.080536842346191
    10. '_' → logprob: -8.205536842346191

Token 23: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.611875593662262
    2. 'list' → logprob: -0.861875593662262
    3. '[list' → logprob: -4.111875534057617
    4. ' [' → logprob: -4.236875534057617
    5. '[' → logprob: -5.486875534057617
    6. '[]' → logprob: -8.861875534057617
    7. '[input' → logprob: -9.611875534057617
    8. ' []' → logprob: -9.861875534057617
    9. '[int' → logprob: -9.986875534057617
    10. '[List' → logprob: -12.111875534057617

Token 24: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02013258822262287
    2. '(' → logprob: -4.020132541656494
    3. '(int' → logprob: -6.895132541656494
    4. '(input' → logprob: -7.395132541656494
    5. '()' → logprob: -8.645133018493652
    6. '(range' → logprob: -8.895133018493652
    7. '(eval' → logprob: -10.895133018493652
    8. '_map' → logprob: -12.395133018493652
    9. 'map' → logprob: -12.645133018493652
    10. '(...)' → logprob: -13.770133018493652

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002861939137801528
    2. '(' → logprob: -7.127861976623535
    3. 'int' → logprob: -7.127861976623535
    4. '(lambda' → logprob: -7.752861976623535
    5. '(input' → logprob: -8.502861976623535
    6. '<int' → logprob: -8.752861976623535
    7. '[int' → logprob: -8.752861976623535
    8. '=int' → logprob: -9.502861976623535
    9. '```' → logprob: -10.002861976623535
    10. '(str' → logprob: -10.252861976623535

Token 26: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.28548410534858704
    2. ',' → logprob: -1.5354840755462646
    3. '(input' → logprob: -3.5354840755462646
    4. 'input' → logprob: -6.035484313964844
    5. '(' → logprob: -7.160484313964844
    6. ' ,' → logprob: -7.535484313964844
    7. ')' → logprob: -10.410484313964844
    8. ',int' → logprob: -10.535484313964844
    9. ' input' → logprob: -10.660484313964844
    10. ' (' → logprob: -11.035484313964844

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021141171455383
    2. ' input' → logprob: -2.3502113819122314
    3. '(input' → logprob: -13.225211143493652
    4. ',input' → logprob: -13.725211143493652
    5. '=input' → logprob: -14.225211143493652
    6. '	input' → logprob: -14.850211143493652
    7. ')' → logprob: -14.975211143493652
    8. ' ' → logprob: -15.475211143493652
    9. '_input' → logprob: -16.35021209716797
    10. '<input' → logprob: -16.60021209716797

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.060365608893335e-05
    2. '()' → logprob: -10.250041007995605
    3. '(' → logprob: -13.000041007995605
    4. ')' → logprob: -14.250041007995605
    5. ' ().' → logprob: -14.250041007995605
    6. '()))' → logprob: -14.750041007995605
    7. '.split' → logprob: -15.000041007995605
    8. '())' → logprob: -15.250041007995605
    9. '.' → logprob: -15.750041007995605
    10. 'split' → logprob: -15.875041007995605

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015062900492921472
    2. 'strip' → logprob: -6.501506328582764
    3. 'rstrip' → logprob: -12.626505851745605
    4. '(split' → logprob: -15.126505851745605
    5. ')' → logprob: -15.501505851745605
    6. ' split' → logprob: -15.751505851745605
    7. 'spl' → logprob: -17.626506805419922
    8. 'read' → logprob: -18.501506805419922
    9. 's' → logprob: -18.501506805419922
    10. '_split' → logprob: -19.751506805419922

Token 30: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.485476553440094
    2. ')' → logprob: -0.985476553440094
    3. '()))' → logprob: -4.735476493835449
    4. '())' → logprob: -6.485476493835449
    5. '(' → logprob: -7.235476493835449
    6. ')))' → logprob: -8.61047649383545
    7. '()' → logprob: -9.36047649383545
    8. ''))' → logprob: -11.86047649383545
    9. '),' → logprob: -11.86047649383545
    10. ' ))' → logprob: -12.36047649383545

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021927160560153425
    2. '    
' → logprob: -9.250219345092773
    3. ')' → logprob: -10.250219345092773
    4. '```' → logprob: -10.625219345092773
    5. 'return' → logprob: -11.000219345092773
    6. '<|end|>' → logprob: -11.750219345092773
    7. ' ' → logprob: -11.875219345092773
    8. '  ' → logprob: -12.125219345092773
    9. ' return' → logprob: -12.250219345092773
    10. '
' → logprob: -12.500219345092773

Token 32: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0232922974973917
    2. ')' → logprob: -4.023292064666748
    3. 'return' (adapté à ' return') → logprob: -5.523292064666748
    4. ' ' → logprob: -7.898292064666748
    5. ' return' → logprob: -8.523292541503906
    6. '	return' → logprob: -9.273292541503906
    7. 'r' → logprob: -9.523292541503906
    8. '<|end|>' → logprob: -9.648292541503906
    9. '```' → logprob: -9.773292541503906
    10. '  ' → logprob: -10.023292541503906

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4422260522842407
    2. 'n' → logprob: -1.4422260522842407
    3. 'a' → logprob: -2.692225933074951
    4. ' a' → logprob: -2.942225933074951
    5. ' (' → logprob: -8.31722640991211
    6. '(n' → logprob: -8.69222640991211
    7. '[n' → logprob: -9.81722640991211
    8. ' ' → logprob: -10.69222640991211
    9. ' [' → logprob: -12.06722640991211
    10. '(a' → logprob: -12.06722640991211

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015259346924722195
    2. ',a' → logprob: -4.765259265899658
    3. '<|end|>' → logprob: -5.515259265899658
    4. ',n' → logprob: -6.765259265899658
    5. ' ,' → logprob: -7.390259265899658
    6. 'a' → logprob: -8.015259742736816
    7. ')' → logprob: -8.015259742736816
    8. '<|end|>' → logprob: -10.015259742736816
    9. ',
' → logprob: -10.765259742736816
    10. ',b' → logprob: -11.140259742736816

Token 35: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2014336884021759
    2. 'a' → logprob: -1.7014336585998535
    3. ' ' → logprob: -11.451434135437012
    4. ' ' → logprob: -12.076434135437012
    5. '	a' → logprob: -14.201434135437012
    6. '​' → logprob: -15.076434135437012
    7. ',a' → logprob: -15.201434135437012
    8. ' а' → logprob: -15.201434135437012
    9. 'space' → logprob: -15.201434135437012
    10. ''a' → logprob: -15.201434135437012

Token 36: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7427611351013184
    2. 'def' → logprob: -1.3677611351013184
    3. '
' → logprob: -1.4927611351013184
    4. '```' → logprob: -3.4927611351013184
    5. '' → logprob: -5.867761135101318
    6. '\' → logprob: -5.992761135101318
    7. '\n' → logprob: -5.992761135101318
    8. '<|end|>' → logprob: -6.492761135101318
    9. '
' → logprob: -6.867761135101318
    10. 'd' → logprob: -7.492761135101318

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002866092836484313
    2. 'd' → logprob: -6.377866268157959
    3. '```' → logprob: -7.377866268157959
    4. '

' → logprob: -8.3778657913208
    5. '\' → logprob: -8.5028657913208
    6. '
' → logprob: -9.7528657913208
    7. '' → logprob: -11.6278657913208
    8. '#' → logprob: -11.7528657913208
    9. '\n' → logprob: -12.0028657913208
    10. '    
' → logprob: -12.3778657913208

Token 38: ' init' (ID: 6327)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02040466107428074
    2. ' space' → logprob: -5.270404815673828
    3. ' _' → logprob: -5.520404815673828
    4. ' factorial' → logprob: -5.895404815673828
    5. '_' → logprob: -6.145404815673828
    6. ' dfs' → logprob: -6.645404815673828
    7. ' count' → logprob: -6.770404815673828
    8. ' solve' → logprob: -7.145404815673828
    9. ' f' → logprob: -7.395404815673828
    10. ' compute' → logprob: -8.145404815673828

Token 39: '_arrays' (ID: 182581)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0877641886472702
    2. '_array' → logprob: -2.837764263153076
    3. '(' → logprob: -3.962764263153076
    4. '_arrays' → logprob: -6.837764263153076
    5. '_(' → logprob: -6.962764263153076
    6. '```' → logprob: -7.712764263153076
    7. '_a' → logprob: -7.837764263153076
    8. '_dp' → logprob: -7.962764263153076
    9. '[]' → logprob: -8.087763786315918
    10. '(_' → logprob: -8.212763786315918

Token 40: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6711190342903137
    2. '(' → logprob: -0.7961190342903137
    3. '(n' → logprob: -3.546118974685669
    4. '()' → logprob: -4.796119213104248
    5. ' ():' → logprob: -8.29611873626709
    6. ' (' → logprob: -9.17111873626709
    7. '(a' → logprob: -9.54611873626709
    8. '()(' → logprob: -9.79611873626709
    9. ' ()' → logprob: -10.17111873626709
    10. '(()' → logprob: -10.54611873626709

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08572766184806824
    2. ',' → logprob: -2.5857276916503906
    3. ')' → logprob: -5.210727691650391
    4. ' ):' → logprob: -7.210727691650391
    5. '):
' → logprob: -7.585727691650391
    6. ' ,' → logprob: -9.96072769165039
    7. ',n' → logprob: -10.96072769165039
    8. ' )' → logprob: -11.46072769165039
    9. '   ' → logprob: -11.96072769165039
    10. '):
' → logprob: -12.21072769165039

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048866331577301025
    2. 'a' → logprob: -3.9238662719726562
    3. '```' → logprob: -5.423866271972656
    4. 'n' → logprob: -5.548866271972656
    5. '    ' → logprob: -5.798866271972656
    6. '[' → logprob: -6.048866271972656
    7. ' ' → logprob: -6.673866271972656
    8. '(a' → logprob: -6.798866271972656
    9. '    
' → logprob: -6.798866271972656
    10. '
' → logprob: -6.798866271972656

Token 43: ' sum' (ID: 4215)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6243423819541931
    2. 'dp' → logprob: -1.249342441558838
    3. '   ' → logprob: -3.499342441558838
    4. ' return' → logprob: -3.999342441558838
    5. ' max' → logprob: -4.124342441558838
    6. ' a' → logprob: -4.124342441558838
    7. ' A' → logprob: -4.249342441558838
    8. 'a' → logprob: -4.874342441558838
    9. ' prefix' → logprob: -4.999342441558838
    10. ' d' → logprob: -5.124342441558838

Token 44: '_arr' (ID: 25121)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6825188994407654
    2. 's' → logprob: -1.4325189590454102
    3. '_arr' → logprob: -1.5575189590454102
    4. '_array' → logprob: -3.80751895904541
    5. '_=' → logprob: -4.80751895904541
    6. '_a' → logprob: -5.30751895904541
    7. '_list' → logprob: -6.68251895904541
    8. '_mod' → logprob: -6.80751895904541
    9. '_vals' → logprob: -6.93251895904541
    10. 'arr' → logprob: -7.18251895904541

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6633397340774536
    2. 's' → logprob: -1.5383397340774536
    3. '=' → logprob: -1.9133397340774536
    4. '_' → logprob: -2.288339614868164
    5. 'ays' → logprob: -5.038339614868164
    6. '[' → logprob: -5.413339614868164
    7. 'ay' → logprob: -5.538339614868164
    8. 'y' → logprob: -6.413339614868164
    9. ',' → logprob: -7.288339614868164
    10. ' ' → logprob: -7.413339614868164

Token 46: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048613931983709335
    2. ' [' → logprob: -3.048614025115967
    3. '[n' → logprob: -10.923613548278809
    4. '[a' → logprob: -13.173613548278809
    5. '0' → logprob: -13.423613548278809
    6. '   ' → logprob: -13.798613548278809
    7. '[int' → logprob: -13.923613548278809
    8. ' ' → logprob: -14.173613548278809
    9. '[len' → logprob: -14.548613548278809
    10. '[s' → logprob: -14.673613548278809

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3822154111694545e-05
    2. ' ' → logprob: -10.250043869018555
    3. ']' → logprob: -13.250043869018555
    4. ')' → logprob: -13.375043869018555
    5. '1' → logprob: -13.375043869018555
    6. '[' → logprob: -13.500043869018555
    7. '-' → logprob: -13.875043869018555
    8. '(' → logprob: -14.625043869018555
    9. 'None' → logprob: -16.250043869018555
    10. ' [' → logprob: -16.687543869018555

Token 48: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023512568441219628
    2. ']*(' → logprob: -8.625235557556152
    3. ']*' → logprob: -10.250235557556152
    4. ' ]' → logprob: -11.000235557556152
    5. ' for' → logprob: -13.125235557556152
    6. ',' → logprob: -14.500235557556152
    7. 'for' → logprob: -15.375235557556152
    8. ']+' → logprob: -16.250234603881836
    9. '()]' → logprob: -16.250234603881836
    10. '0' → logprob: -16.375234603881836

Token 49: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5333666205406189
    2. '_' → logprob: -0.9083666205406189
    3. ' ' → logprob: -4.658366680145264
    4. ' i' → logprob: -7.408366680145264
    5. '<|end|>' → logprob: -10.783366203308105
    6. 'i' → logprob: -11.158366203308105
    7. '<|end|>' → logprob: -11.158366203308105
    8. 'range' → logprob: -11.158366203308105
    9. '_i' → logprob: -11.783366203308105
    10. '_range' → logprob: -11.908366203308105

Token 50: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028513791039586067
    2. ' range' → logprob: -4.4035139083862305
    3. ' in' → logprob: -4.5285139083862305
    4. 'in' → logprob: -5.4035139083862305
    5. ' ' → logprob: -7.6535139083862305
    6. 'n' → logprob: -10.40351390838623
    7. '  ' → logprob: -10.90351390838623
    8. 'ange' → logprob: -11.27851390838623
    9. 'ran' → logprob: -12.02851390838623
    10. '	range' → logprob: -12.02851390838623

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005237548612058163
    2. ' range' → logprob: -5.255237579345703
    3. '(range' → logprob: -13.880237579345703
    4. ' ' → logprob: -14.255237579345703
    5. '	range' → logprob: -14.380237579345703
    6. ')' → logprob: -14.630237579345703
    7. 'n' → logprob: -15.505237579345703
    8. '```' → logprob: -15.630237579345703
    9. '   ' → logprob: -15.755237579345703
    10. ']' → logprob: -15.755237579345703

Token 52: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004630076698958874
    2. '(' → logprob: -5.379630088806152
    3. ' (' → logprob: -11.754630088806152
    4. ' n' → logprob: -14.504630088806152
    5. 'n' → logprob: -14.629630088806152
    6. ')' → logprob: -15.004630088806152
    7. ']' → logprob: -15.379630088806152
    8. ' ' → logprob: -15.379630088806152
    9. ')n' → logprob: -16.754629135131836
    10. '(nn' → logprob: -16.879629135131836

Token 53: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007113590254448354
    2. '+' → logprob: -7.375711441040039
    3. ' )' → logprob: -10.500711441040039
    4. ')]
' → logprob: -10.500711441040039
    5. ')' → logprob: -11.250711441040039
    6. '   ' → logprob: -12.500711441040039
    7. ']' → logprob: -12.625711441040039
    8. ')])' → logprob: -12.750711441040039
    9. ' +' → logprob: -13.625711441040039
    10. ')]
' → logprob: -14.500711441040039

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007929548737592995
    2. '2' → logprob: -7.500792980194092
    3. ' ' → logprob: -8.375792503356934
    4. '   ' → logprob: -12.938292503356934
    5. '3' → logprob: -13.688292503356934
    6. ')' → logprob: -13.938292503356934
    7. '```' → logprob: -14.063292503356934
    8. '5' → logprob: -14.250792503356934
    9. '  ' → logprob: -14.313292503356934
    10. '7' → logprob: -14.438292503356934

Token 55: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006201040814630687
    2. ']' → logprob: -7.500619888305664
    3. ')' → logprob: -10.000619888305664
    4. '])' → logprob: -11.500619888305664
    5. '])]' → logprob: -12.250619888305664
    6. ')])' → logprob: -13.250619888305664
    7. ')],' → logprob: -13.375619888305664
    8. ')]
' → logprob: -13.750619888305664
    9. '   ' → logprob: -14.000619888305664
    10. ' ]' → logprob: -15.375619888305664

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002271343255415559
    2. '    
' → logprob: -6.6272711753845215
    3. ' return' → logprob: -7.8772711753845215
    4. ')' → logprob: -8.62727165222168
    5. '
' → logprob: -9.75227165222168
    6. ' for' → logprob: -9.87727165222168
    7. 'return' → logprob: -10.00227165222168
    8. ',' → logprob: -10.25227165222168
    9. '    ' → logprob: -10.37727165222168
    10. ' ' → logprob: -10.37727165222168

Token 57: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.1868973970413208
    2. 'max' → logprob: -2.4368972778320312
    3. 'count' → logprob: -2.4368972778320312
    4. 'diff' → logprob: -2.6868972778320312
    5. ' dp' → logprob: -2.8118972778320312
    6. 'prod' → logprob: -2.9368972778320312
    7. 'pre' → logprob: -3.1868972778320312
    8. ' max' → logprob: -3.5618972778320312
    9. 'cnt' → logprob: -3.6868972778320312
    10. 'prefix' → logprob: -3.6868972778320312

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013848472386598587
    2. '=' → logprob: -4.388848304748535
    3. '_arr' → logprob: -7.013848304748535
    4. '_' → logprob: -8.263848304748535
    5. ' ' → logprob: -10.138848304748535
    6. 'arr' → logprob: -10.263848304748535
    7. '[' → logprob: -10.513848304748535
    8. '[]' → logprob: -11.013848304748535
    9. '   ' → logprob: -11.388848304748535
    10. '1' → logprob: -12.013848304748535

Token 59: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47410476207733154
    2. ' [' → logprob: -0.9741047620773315
    3. '[-' → logprob: -11.599104881286621
    4. '[[' → logprob: -11.849104881286621
    5. ' [[' → logprob: -12.099104881286621
    6. '[n' → logprob: -12.849104881286621
    7. ' [-' → logprob: -13.474104881286621
    8. ' ' → logprob: -13.849104881286621
    9. '   ' → logprob: -15.849104881286621
    10. '0' → logprob: -15.849104881286621

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003361412324011326
    2. '[' → logprob: -5.753361225128174
    3. '-' → logprob: -9.753361701965332
    4. ' ' → logprob: -10.128361701965332
    5. 'float' → logprob: -10.628361701965332
    6. ' [' → logprob: -10.878361701965332
    7. '(' → logprob: -11.003361701965332
    8. '[int' → logprob: -12.003361701965332
    9. '[n' → logprob: -12.503361701965332
    10. ']' → logprob: -12.503361701965332

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14706192910671234
    2. ']' → logprob: -2.022061824798584
    3. 'for' → logprob: -5.522061824798584
    4. ' ' → logprob: -9.147062301635742
    5. ' ]' → logprob: -9.147062301635742
    6. ']*(' → logprob: -9.522062301635742
    7. ')' → logprob: -10.272062301635742
    8. '	for' → logprob: -10.897062301635742
    9. ',' → logprob: -11.147062301635742
    10. ']*' → logprob: -11.522062301635742

Token 62: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11425603181123734
    2. ' _' → logprob: -2.2392561435699463
    3. ' ' → logprob: -7.114255905151367
    4. ' range' → logprob: -8.364255905151367
    5. '_range' → logprob: -8.489255905151367
    6. ' in' → logprob: -10.114255905151367
    7. ' (' → logprob: -10.489255905151367
    8. '<|end|>' → logprob: -10.739255905151367
    9. '_in' → logprob: -10.864255905151367
    10. '<|end|>' → logprob: -11.114255905151367

Token 63: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.34611499309539795
    2. ' range' → logprob: -1.346114993095398
    3. '_range' → logprob: -3.9711151123046875
    4. '_' → logprob: -4.3461151123046875
    5. ' _' → logprob: -7.9711151123046875
    6. ' in' → logprob: -9.221115112304688
    7. '(range' → logprob: -10.846115112304688
    8. '_r' → logprob: -11.471115112304688
    9. '	range' → logprob: -11.846115112304688
    10. ' ' → logprob: -12.221115112304688

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03808509185910225
    2. 'range' → logprob: -3.2880849838256836
    3. '_' → logprob: -10.913084983825684
    4. ' _' → logprob: -11.538084983825684
    5. '_range' → logprob: -11.788084983825684
    6. '(range' → logprob: -12.163084983825684
    7. ' ' → logprob: -14.038084983825684
    8. '	range' → logprob: -14.038084983825684
    9. ' xrange' → logprob: -14.663084983825684
    10. 'n' → logprob: -15.288084983825684

Token 65: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005615177098661661
    2. ' range' → logprob: -6.130615234375
    3. 'range' → logprob: -6.755615234375
    4. '(' → logprob: -7.005615234375
    5. ' (' → logprob: -7.005615234375
    6. ')' → logprob: -8.880615234375
    7. '(range' → logprob: -9.380615234375
    8. '_range' → logprob: -10.380615234375
    9. ' ' → logprob: -10.505615234375
    10. ']' → logprob: -10.505615234375

Token 66: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.236549335066229e-05
    2. ' +' → logprob: -10.875021934509277
    3. ')]' → logprob: -13.750021934509277
    4. '+
' → logprob: -14.375021934509277
    5. ')])' → logprob: -14.625021934509277
    6. ')+' → logprob: -15.000021934509277
    7. ')' → logprob: -15.375021934509277
    8. '()+' → logprob: -15.750021934509277
    9. '+)' → logprob: -15.750021934509277
    10. '1' → logprob: -16.000022888183594

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019745498429983854
    2. '2' → logprob: -6.251974582672119
    3. ' ' → logprob: -11.001974105834961
    4. '   ' → logprob: -11.626974105834961
    5. '```' → logprob: -12.189474105834961
    6. '+' → logprob: -12.501974105834961
    7. ')' → logprob: -13.564474105834961
    8. '])' → logprob: -14.189474105834961
    9. '`' → logprob: -14.564474105834961
    10. '0' → logprob: -14.626974105834961

Token 68: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017351557034999132
    2. ']' → logprob: -6.376735210418701
    3. '])]' → logprob: -11.501734733581543
    4. ')' → logprob: -11.876734733581543
    5. '])' → logprob: -12.126734733581543
    6. ')]
' → logprob: -12.626734733581543
    7. '   ' → logprob: -13.751734733581543
    8. '')]' → logprob: -13.751734733581543
    9. ')])' → logprob: -13.876734733581543
    10. ']]' → logprob: -14.126734733581543

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004643722902983427
    2. '    
' → logprob: -6.00464391708374
    3. '<|end|>' → logprob: -7.00464391708374
    4. ')' → logprob: -8.129643440246582
    5. '	return' → logprob: -8.129643440246582
    6. '
' → logprob: -8.379643440246582
    7. ' return' → logprob: -9.254643440246582
    8. ' ' → logprob: -9.629643440246582
    9. 'return' → logprob: -9.879643440246582
    10. ',' → logprob: -10.129643440246582

Token 70: ' fac' (ID: 3513)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09685090184211731
    2. ' return' → logprob: -2.596850872039795
    3. 'return' → logprob: -4.346850872039795
    4. '    
' → logprob: -6.721850872039795
    5. '	return' → logprob: -6.971850872039795
    6. ')' → logprob: -6.971850872039795
    7. ' ' → logprob: -7.346850872039795
    8. 'dp' → logprob: -8.596851348876953
    9. ' dp' → logprob: -9.221851348876953
    10. ' 
' → logprob: -9.346851348876953

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6557620167732239
    2. '=' → logprob: -1.530761957168579
    3. 't' → logprob: -1.530761957168579
    4. 'tor' → logprob: -3.405761957168579
    5. '   ' → logprob: -4.530762195587158
    6. 'tors' → logprob: -6.405762195587158
    7. ' ' → logprob: -6.780762195587158
    8. '  ' → logprob: -7.905762195587158
    9. 's' → logprob: -8.53076171875
    10. '```' → logprob: -8.65576171875

Token 72: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38687604665756226
    2. ' [' → logprob: -1.136876106262207
    3. '1' → logprob: -12.636876106262207
    4. ' ' → logprob: -14.261876106262207
    5. '   ' → logprob: -14.261876106262207
    6. '[n' → logprob: -14.761876106262207
    7. '  ' → logprob: -17.26187515258789
    8. '[int' → logprob: -17.38687515258789
    9. '[i' → logprob: -18.26187515258789
    10. '0' → logprob: -18.51187515258789

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009233691962435842
    2. '0' → logprob: -7.000923156738281
    3. ' ' → logprob: -11.375923156738281
    4. '(' → logprob: -16.25092315673828
    5. '```' → logprob: -16.50092315673828
    6. '   ' → logprob: -16.62592315673828
    7. '[' → logprob: -17.37592315673828
    8. ']' → logprob: -17.75092315673828
    9. 'for' → logprob: -18.50092315673828
    10. '  ' → logprob: -18.50092315673828

Token 74: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08162018656730652
    2. ' for' → logprob: -2.581620216369629
    3. ']*(' → logprob: -6.456620216369629
    4. 'for' → logprob: -7.581620216369629
    5. ' ]' → logprob: -8.206620216369629
    6. ' ' → logprob: -8.956620216369629
    7. ',' → logprob: -9.581620216369629
    8. ')' → logprob: -9.706620216369629
    9. ']*' → logprob: -9.831620216369629
    10. ']+' → logprob: -11.206620216369629

Token 75: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01513054221868515
    2. ' _' → logprob: -4.265130519866943
    3. ' range' → logprob: -7.265130519866943
    4. '_range' → logprob: -8.390130996704102
    5. 'range' → logprob: -10.890130996704102
    6. ' ' → logprob: -11.390130996704102
    7. ' in' → logprob: -12.265130996704102
    8. ' for' → logprob: -13.265130996704102
    9. '_in' → logprob: -13.765130996704102
    10. '(range' → logprob: -14.640130996704102

Token 76: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.907405436038971
    2. 'range' → logprob: -1.0324053764343262
    3. ' range' → logprob: -1.9074053764343262
    4. ' in' → logprob: -2.782405376434326
    5. '_range' → logprob: -3.782405376434326
    6. ' _' → logprob: -5.407405376434326
    7. 'in' → logprob: -6.657405376434326
    8. '(range' → logprob: -6.782405376434326
    9. 'n' → logprob: -9.532405853271484
    10. ' for' → logprob: -9.782405853271484

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5242689847946167
    2. 'range' → logprob: -0.8992689847946167
    3. '_' → logprob: -7.524269104003906
    4. '_range' → logprob: -7.649269104003906
    5. '(range' → logprob: -9.524269104003906
    6. ' _' → logprob: -10.149269104003906
    7. '	range' → logprob: -11.899269104003906
    8. 'n' → logprob: -12.774269104003906
    9. 'ange' → logprob: -13.024269104003906
    10. ' ' → logprob: -14.024269104003906

Token 78: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05986018106341362
    2. 'n' → logprob: -3.5598602294921875
    3. ' (' → logprob: -4.3098602294921875
    4. ' n' → logprob: -4.4348602294921875
    5. ' range' → logprob: -6.1848602294921875
    6. 'range' → logprob: -6.1848602294921875
    7. '(' → logprob: -9.059860229492188
    8. ' ' → logprob: -10.434860229492188
    9. '   ' → logprob: -11.059860229492188
    10. ')' → logprob: -11.309860229492188

Token 79: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.9650025428272784e-05
    2. ' +' → logprob: -10.250040054321289
    3. '+
' → logprob: -12.750040054321289
    4. ')' → logprob: -15.125040054321289
    5. '+n' → logprob: -15.375040054321289
    6. ')+' → logprob: -15.750040054321289
    7. '1' → logprob: -16.12504005432129
    8. 'plus' → logprob: -16.25004005432129
    9. '+)' → logprob: -16.37504005432129
    10. ')]' → logprob: -16.37504005432129

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.376848902320489e-05
    2. '2' → logprob: -9.375093460083008
    3. ' ' → logprob: -12.500093460083008
    4. '```' → logprob: -13.125093460083008
    5. '6' → logprob: -13.875093460083008
    6. '5' → logprob: -14.250093460083008
    7. '   ' → logprob: -14.750093460083008
    8. '7' → logprob: -15.000093460083008
    9. '+' → logprob: -15.000093460083008
    10. '0' → logprob: -16.000093460083008

Token 81: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008310707635246217
    2. ']' → logprob: -7.125831127166748
    3. ')]
' → logprob: -11.37583065032959
    4. ')' → logprob: -12.37583065032959
    5. '])]' → logprob: -12.87583065032959
    6. '])' → logprob: -13.12583065032959
    7. '')]' → logprob: -13.25083065032959
    8. '   ' → logprob: -13.87583065032959
    9. ' ]' → logprob: -13.87583065032959
    10. ')])' → logprob: -14.25083065032959

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004209343809634447
    2. '    
' → logprob: -6.254209518432617
    3. ' for' → logprob: -7.004209518432617
    4. 'for' → logprob: -7.879209518432617
    5. '<|end|>' → logprob: -8.504209518432617
    6. ')' → logprob: -8.754209518432617
    7. ' ' → logprob: -8.879209518432617
    8. '    ' → logprob: -9.754209518432617
    9. '	for' → logprob: -9.879209518432617
    10. ',' → logprob: -9.879209518432617

Token 83: ' fin' (ID: 2131)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6633667349815369
    2. '   ' → logprob: -1.7883667945861816
    3. ' inv' → logprob: -1.7883667945861816
    4. 'inv' → logprob: -2.4133667945861816
    5. 'for' → logprob: -2.9133667945861816
    6. ' i' → logprob: -6.413366794586182
    7. '    
' → logprob: -6.788366794586182
    8. 'i' → logprob: -7.163366794586182
    9. ' inverse' → logprob: -7.288366794586182
    10. 'pow' → logprob: -7.413366794586182

Token 84: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004045275505632162
    2. '[' → logprob: -5.754045486450195
    3. 'verse' → logprob: -7.879045486450195
    4. '```' → logprob: -9.004045486450195
    5. 'al' → logprob: -9.129045486450195
    6. 'inv' → logprob: -10.004045486450195
    7. 'fac' → logprob: -10.254045486450195
    8. '[i' → logprob: -10.754045486450195
    9. '_inv' → logprob: -10.879045486450195
    10. '
' → logprob: -11.004045486450195

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062199145555496216
    2. '=' → logprob: -2.812199115753174
    3. '[' → logprob: -8.562199592590332
    4. ' ' → logprob: -11.312199592590332
    5. 's' → logprob: -11.937199592590332
    6. '_' → logprob: -12.437199592590332
    7. ' =[' → logprob: -12.812199592590332
    8. ']' → logprob: -12.937199592590332
    9. '   ' → logprob: -13.187199592590332
    10. '```' → logprob: -13.437199592590332

Token 86: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04858816787600517
    2. ' [' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.548587799072266
    4. ' ' → logprob: -15.423587799072266
    5. '[-' → logprob: -17.048587799072266
    6. '  ' → logprob: -17.923587799072266
    7. '1' → logprob: -18.048587799072266
    8. ' ' → logprob: -18.048587799072266
    9. '=[' → logprob: -18.798587799072266
    10. '0' → logprob: -19.048587799072266

Token 87: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020846538245677948
    2. ' ' → logprob: -4.020846366882324
    3. '1' → logprob: -6.520846366882324
    4. '[' → logprob: -7.020846366882324
    5. ' [' → logprob: -8.395846366882324
    6. 'n' → logprob: -10.770846366882324
    7. ' (' → logprob: -10.895846366882324
    8. '(' → logprob: -11.145846366882324
    9. '[n' → logprob: -11.145846366882324
    10. ' n' → logprob: -11.770846366882324

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004258730914443731
    2. 'for' → logprob: -5.504258632659912
    3. ' ' → logprob: -9.62925910949707
    4. '[' → logprob: -10.12925910949707
    5. ',' → logprob: -11.00425910949707
    6. ')' → logprob: -11.00425910949707
    7. '<|end|>' → logprob: -11.37925910949707
    8. '	for' → logprob: -11.62925910949707
    9. ']' → logprob: -11.62925910949707
    10. ' ]' → logprob: -12.62925910949707

Token 89: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018277304247021675
    2. ' _' → logprob: -4.018277168273926
    3. ' ' → logprob: -9.893277168273926
    4. ' range' → logprob: -10.643277168273926
    5. '_range' → logprob: -10.643277168273926
    6. '<|end|>' → logprob: -12.143277168273926
    7. 'range' → logprob: -12.768277168273926
    8. ' for' → logprob: -13.018277168273926
    9. ' n' → logprob: -13.018277168273926
    10. ' (' → logprob: -13.143277168273926

Token 90: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.490436851978302
    2. ' range' → logprob: -1.4904367923736572
    3. '_range' → logprob: -2.1154367923736572
    4. '_' → logprob: -3.3654367923736572
    5. ' _' → logprob: -5.240437030792236
    6. '(range' → logprob: -6.490437030792236
    7. ' in' → logprob: -8.115436553955078
    8. ' ' → logprob: -10.865436553955078
    9. 'in' → logprob: -11.240436553955078
    10. '	range' → logprob: -11.240436553955078

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2590651512145996
    2. ' range' → logprob: -1.5090651512145996
    3. '_range' → logprob: -5.1340651512146
    4. '(range' → logprob: -6.8840651512146
    5. '_' → logprob: -8.634065628051758
    6. ' _' → logprob: -11.884065628051758
    7. '(n' → logprob: -12.134065628051758
    8. '	range' → logprob: -13.384065628051758
    9. '_n' → logprob: -14.134065628051758
    10. '-range' → logprob: -15.134065628051758

Token 92: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04194580763578415
    2. ' (' → logprob: -3.541945695877075
    3. 'range' → logprob: -5.041945934295654
    4. ' range' → logprob: -5.291945934295654
    5. ' n' → logprob: -8.541945457458496
    6. 'n' → logprob: -8.541945457458496
    7. '_range' → logprob: -9.291945457458496
    8. '(' → logprob: -10.416945457458496
    9. 'Range' → logprob: -11.041945457458496
    10. '(range' → logprob: -11.041945457458496

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.2729995988775045e-06
    2. ' +' → logprob: -12.625006675720215
    3. ')+' → logprob: -13.250006675720215
    4. '+
' → logprob: -14.625006675720215
    5. ']+' → logprob: -15.250006675720215
    6. ')' → logprob: -15.500006675720215
    7. '1' → logprob: -16.3750057220459
    8. ')]' → logprob: -16.8750057220459
    9. '＋' → logprob: -17.2500057220459
    10. ')])' → logprob: -17.5000057220459

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -14.125001907348633
    3. ')' → logprob: -14.750001907348633
    4. '```' → logprob: -14.875001907348633
    5. 'n' → logprob: -15.375001907348633
    6. '+' → logprob: -15.625001907348633
    7. ')])' → logprob: -16.875001907348633
    8. '0' → logprob: -17.000001907348633
    9. '])' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.375001907348633

Token 95: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.35352298617362976
    2. ')' → logprob: -1.3535230159759521
    3. '])' → logprob: -3.478523015975952
    4. ']' → logprob: -4.853522777557373
    5. ')])' → logprob: -7.228522777557373
    6. '])]' → logprob: -9.728523254394531
    7. '))' → logprob: -11.728523254394531
    8. '   ' → logprob: -12.353523254394531
    9. ')],' → logprob: -13.103523254394531
    10. '）' → logprob: -13.353523254394531

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07781873643398285
    2. ')' → logprob: -3.0778186321258545
    3. '<|end|>' → logprob: -3.8278186321258545
    4. '    
' → logprob: -6.077818870544434
    5. ' ' → logprob: -6.702818870544434
    6. 'def' → logprob: -7.077818870544434
    7. '
' → logprob: -7.202818870544434
    8. ']' → logprob: -7.577818870544434
    9. '  ' → logprob: -8.202818870544434
    10. '    ' → logprob: -8.827818870544434

Token 97: ' inv' (ID: 1827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012621370842680335
    2. ')' → logprob: -7.751262187957764
    3. '    
' → logprob: -8.126261711120605
    4. '
' → logprob: -8.876261711120605
    5. ' for' → logprob: -9.376261711120605
    6. 'n' → logprob: -9.501261711120605
    7. ' ' → logprob: -9.876261711120605
    8. '' → logprob: -10.001261711120605
    9. 'def' → logprob: -10.126261711120605
    10. '    ' → logprob: -11.501261711120605

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08422393351793289
    2. '=' → logprob: -2.584223985671997
    3. '_' → logprob: -5.459223747253418
    4. 's' → logprob: -7.334223747253418
    5. '[' → logprob: -9.084223747253418
    6. '   ' → logprob: -9.334223747253418
    7. '_=' → logprob: -9.709223747253418
    8. ' ' → logprob: -10.584223747253418
    9. '```' → logprob: -10.709223747253418
    10. '  ' → logprob: -10.834223747253418

Token 99: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31326720118522644
    2. ' [' → logprob: -1.3132672309875488
    3. ' ' → logprob: -12.18826675415039
    4. '   ' → logprob: -16.06326675415039
    5. '  ' → logprob: -16.31326675415039
    6. '1' → logprob: -17.06326675415039
    7. ' ' → logprob: -17.93826675415039
    8. '[n' → logprob: -17.93826675415039
    9. '[-' → logprob: -18.31326675415039
    10. '[int' → logprob: -18.43826675415039

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22605210542678833
    2. '0' → logprob: -1.6010520458221436
    3. ' ' → logprob: -7.976052284240723
    4. '[' → logprob: -8.226052284240723
    5. ' [' → logprob: -11.726052284240723
    6. ']' → logprob: -11.976052284240723
    7. '-' → logprob: -12.226052284240723
    8. '```' → logprob: -12.726052284240723
    9. '   ' → logprob: -12.851052284240723
    10. ')' → logprob: -14.101052284240723

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009323570877313614
    2. 'for' → logprob: -4.759323596954346
    3. ' ' → logprob: -7.634323596954346
    4. '   ' → logprob: -8.884323120117188
    5. ')' → logprob: -10.259323120117188
    6. '    ' → logprob: -11.634323120117188
    7. '  ' → logprob: -11.759323120117188
    8. ',' → logprob: -11.759323120117188
    9. '[' → logprob: -11.759323120117188
    10. ']' → logprob: -11.759323120117188

Token 102: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04051850736141205
    2. ' _' → logprob: -3.7905185222625732
    3. ' range' → logprob: -4.665518283843994
    4. '_range' → logprob: -4.915518283843994
    5. 'range' → logprob: -7.915518283843994
    6. ' ' → logprob: -12.665518760681152
    7. '_in' → logprob: -13.165518760681152
    8. '(range' → logprob: -13.290518760681152
    9. ' in' → logprob: -13.415518760681152
    10. '```' → logprob: -14.415518760681152

Token 103: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34042561054229736
    2. '_range' → logprob: -1.8404256105422974
    3. 'range' → logprob: -2.090425491333008
    4. '_' → logprob: -5.215425491333008
    5. ' _' → logprob: -7.465425491333008
    6. '(range' → logprob: -8.965425491333008
    7. ' in' → logprob: -11.840425491333008
    8. '	range' → logprob: -12.340425491333008
    9. '_answer' → logprob: -14.465425491333008
    10. '_ref' → logprob: -14.965425491333008

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25216007232666016
    2. ' range' → logprob: -1.5021600723266602
    3. '(range' → logprob: -8.37716007232666
    4. '	range' → logprob: -14.37716007232666
    5. '_range' → logprob: -15.37716007232666
    6. ' ' → logprob: -17.377159118652344
    7. '.range' → logprob: -17.502159118652344
    8. '(n' → logprob: -18.127159118652344
    9. ' xrange' → logprob: -18.502159118652344
    10. '   ' → logprob: -18.502159118652344

Token 105: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.102673053741455
    2. 'range' → logprob: -1.102673053741455
    3. ' range' → logprob: -1.727673053741455
    4. '(range' → logprob: -1.852673053741455
    5. '(' → logprob: -7.352673053741455
    6. '_range' → logprob: -7.602673053741455
    7. ' (' → logprob: -8.727672576904297
    8. '1' → logprob: -9.852672576904297
    9. '2' → logprob: -10.227672576904297
    10. 'n' → logprob: -10.602672576904297

Token 106: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.6776029699249193e-05
    2. ' +' → logprob: -11.00002670288086
    3. ')]' → logprob: -12.37502670288086
    4. '+
' → logprob: -12.75002670288086
    5. ')])' → logprob: -14.00002670288086
    6. ')' → logprob: -14.37502670288086
    7. ')+' → logprob: -14.75002670288086
    8. ')])
' → logprob: -15.50002670288086
    9. '1' → logprob: -15.50002670288086
    10. ']+' → logprob: -16.12502670288086

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036332078743726015
    2. '+' → logprob: -5.62863302230835
    3. '   ' → logprob: -10.878633499145508
    4. '```' → logprob: -12.253633499145508
    5. 'n' → logprob: -12.628633499145508
    6. ' ' → logprob: -12.753633499145508
    7. '       ' → logprob: -14.753633499145508
    8. ')' → logprob: -14.878633499145508
    9. '+
' → logprob: -15.378633499145508
    10. ']+' → logprob: -15.378633499145508

Token 108: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20933641493320465
    2. ')]' → logprob: -1.7093364000320435
    3. '])' → logprob: -5.334336280822754
    4. ')])' → logprob: -5.959336280822754
    5. ']' → logprob: -7.834336280822754
    6. '   ' → logprob: -10.209336280822754
    7. ')
' → logprob: -10.959336280822754
    8. '])]' → logprob: -11.209336280822754
    9. '))' → logprob: -11.584336280822754
    10. ' )' → logprob: -12.209336280822754

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08894938230514526
    2. '<|end|>' → logprob: -2.71394944190979
    3. ')' → logprob: -4.713949203491211
    4. '    
' → logprob: -5.588949203491211
    5. '
' → logprob: -6.213949203491211
    6. '\' → logprob: -6.838949203491211
    7. '\n' → logprob: -7.088949203491211
    8. ' ' → logprob: -7.463949203491211
    9. ' 
' → logprob: -7.588949203491211
    10. '  
' → logprob: -8.588949203491211

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012922548688948154
    2. ' ' → logprob: -6.012922763824463
    3. '    
' → logprob: -6.262922763824463
    4. ' for' → logprob: -6.262922763824463
    5. 'def' → logprob: -6.387922763824463
    6. '
' → logprob: -6.387922763824463
    7. ')' → logprob: -6.637922763824463
    8. 'for' → logprob: -7.887922763824463
    9. '  ' → logprob: -8.137922286987305
    10. '' → logprob: -8.137922286987305

Token 111: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2564038038253784
    2. 'sum' → logprob: -1.5064038038253784
    3. ' n' → logprob: -5.756403923034668
    4. 'n' → logprob: -6.756403923034668
    5. '(sum' → logprob: -9.506403923034668
    6. '   ' → logprob: -10.131403923034668
    7. ' ' → logprob: -11.631403923034668
    8. '	sum' → logprob: -12.381403923034668
    9. '  ' → logprob: -13.006403923034668
    10. ' (' → logprob: -13.506403923034668

Token 112: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0007216068916022778
    2. '_' → logprob: -7.250721454620361
    3. '_sum' → logprob: -12.12572193145752
    4. '_array' → logprob: -13.50072193145752
    5. ' _' → logprob: -13.62572193145752
    6. '_ar' → logprob: -13.87572193145752
    7. 'arr' → logprob: -14.12572193145752
    8. '__' → logprob: -14.12572193145752
    9. '_a' → logprob: -15.37572193145752
    10. '_arrays' → logprob: -15.37572193145752

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3080716346157715e-05
    2. ' ,' → logprob: -11.250022888183594
    3. ',n' → logprob: -11.750022888183594
    4. '[' → logprob: -14.125022888183594
    5. ',sum' → logprob: -14.750022888183594
    6. ',
' → logprob: -15.125022888183594
    7. '   ' → logprob: -15.125022888183594
    8. ',[' → logprob: -16.375022888183594
    9. '‌,' → logprob: -16.750022888183594
    10. ')' → logprob: -17.250022888183594

Token 114: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1002068892121315
    2. ' dp' → logprob: -2.3502068519592285
    3. '	dp' → logprob: -16.22520637512207
    4. '(dp' → logprob: -17.60020637512207
    5. '_dp' → logprob: -17.72520637512207
    6. 'd' → logprob: -17.97520637512207
    7. ' ' → logprob: -17.97520637512207
    8. 'df' → logprob: -19.22520637512207
    9. '   ' → logprob: -19.35020637512207
    10. 'dc' → logprob: -19.72520637512207

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.983476436696947e-05
    2. ' ,' → logprob: -9.375089645385742
    3. 'fac' → logprob: -13.750089645385742
    4. ',f' → logprob: -14.125089645385742
    5. ',
' → logprob: -14.625089645385742
    6. 'def' → logprob: -15.000089645385742
    7. '_,' → logprob: -15.125089645385742
    8. ',a' → logprob: -15.375089645385742
    9. ',n' → logprob: -15.375089645385742
    10. '[' → logprob: -15.875089645385742

Token 116: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.03804252669215202
    2. ' fac' → logprob: -3.2880425453186035
    3. 'fact' → logprob: -15.413042068481445
    4. '   ' → logprob: -15.663042068481445
    5. 'f' → logprob: -15.788042068481445
    6. 'Fac' → logprob: -15.913042068481445
    7. ' ' → logprob: -15.913042068481445
    8. '_fac' → logprob: -16.413042068481445
    9. 'facet' → logprob: -16.788042068481445
    10. 'fab' → logprob: -17.038042068481445

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003637488465756178
    2. ' ,' → logprob: -5.628637313842773
    3. '   ' → logprob: -10.878637313842773
    4. ',n' → logprob: -12.378637313842773
    5. ',f' → logprob: -13.003637313842773
    6. '```' → logprob: -13.003637313842773
    7. 'fin' → logprob: -13.378637313842773
    8. 'inv' → logprob: -13.503637313842773
    9. ',int' → logprob: -14.253637313842773
    10. '<|end|>' → logprob: -14.378637313842773

Token 118: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.011049231514334679
    2. 'fin' → logprob: -4.511049270629883
    3. 'f' → logprob: -14.511049270629883
    4. '(fin' → logprob: -15.386049270629883
    5. ' ' → logprob: -16.011049270629883
    6. '_fin' → logprob: -16.136049270629883
    7. ' fint' → logprob: -16.511049270629883
    8. ' f' → logprob: -16.636049270629883
    9. ' fini' → logprob: -16.886049270629883
    10. ' ' → logprob: -16.886049270629883

Token 119: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -15.00000286102295
    3. '```' → logprob: -15.37500286102295
    4. 'vf' → logprob: -15.56250286102295
    5. 'в' → logprob: -15.68750286102295
    6. 'vs' → logprob: -15.87500286102295
    7. 'vd' → logprob: -15.87500286102295
    8. '[v' → logprob: -15.87500286102295
    9. '_v' → logprob: -16.000001907348633
    10. 'vv' → logprob: -16.125001907348633

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.85235276655294e-05
    2. ' ,' → logprob: -9.375088691711426
    3. 'inv' → logprob: -12.750088691711426
    4. ' inv' → logprob: -15.125088691711426
    5. '   ' → logprob: -16.12508773803711
    6. ',
' → logprob: -16.12508773803711
    7. ' ' → logprob: -16.50008773803711
    8. ',in' → logprob: -17.25008773803711
    9. ',v' → logprob: -17.62508773803711
    10. ',int' → logprob: -18.12508773803711

Token 121: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04859089106321335
    2. ' inv' → logprob: -3.048590898513794
    3. ' ' → logprob: -13.923590660095215
    4. '   ' → logprob: -13.923590660095215
    5. '(inv' → logprob: -14.048590660095215
    6. '_inv' → logprob: -15.798590660095215
    7. '.inv' → logprob: -15.923590660095215
    8. 'inf' → logprob: -15.923590660095215
    9. 'int' → logprob: -16.79859161376953
    10. '  ' → logprob: -16.79859161376953

Token 122: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6278693675994873
    2. '<|end|>' → logprob: -1.3778693675994873
    3. ')' → logprob: -2.1278693675994873
    4. '\' → logprob: -3.2528693675994873
    5. '   ' → logprob: -4.002869606018066
    6. '#' → logprob: -4.752869606018066
    7. '```' → logprob: -5.127869606018066
    8. '[' → logprob: -5.127869606018066
    9. '_' → logprob: -5.877869606018066
    10. '\n' → logprob: -6.127869606018066

Token 124: ' compute' (ID: 23864)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.08093294501304626
    2. 'pre' → logprob: -3.080932855606079
    3. ' mod' → logprob: -4.455933094024658
    4. ' preprocess' → logprob: -5.080933094024658
    5. ' prepare' → logprob: -5.705933094024658
    6. 'mod' → logprob: -5.705933094024658
    7. ' comb' → logprob: -6.080933094024658
    8. ' factorial' → logprob: -6.580933094024658
    9. ' compute' → logprob: -6.830933094024658
    10. 'compute' → logprob: -7.330933094024658

Token 125: '_fac' (ID: 121369)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.014055497013032436
    2. '_com' → logprob: -5.7640557289123535
    3. '_' → logprob: -5.8890557289123535
    4. '_fac' → logprob: -6.1390557289123535
    5. '_inverse' → logprob: -6.2640557289123535
    6. '_prefix' → logprob: -6.7640557289123535
    7. '_arrays' → logprob: -6.8890557289123535
    8. '_fact' → logprob: -7.0140557289123535
    9. '_comb' → logprob: -7.7640557289123535
    10. '_suffix' → logprob: -9.139055252075195

Token 126: '_inv' (ID: 53427)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6402650475502014
    2. 't' → logprob: -1.3902649879455566
    3. 'tors' → logprob: -1.6402649879455566
    4. 'tor' → logprob: -3.5152649879455566
    5. 's' → logprob: -9.515265464782715
    6. '(' → logprob: -10.390265464782715
    7. 'n' → logprob: -11.640265464782715
    8. 'ts' → logprob: -11.640265464782715
    9. '```' → logprob: -11.640265464782715
    10. '(t' → logprob: -11.765265464782715

Token 127: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033903829171322286
    2. '(' → logprob: -9.00033950805664
    3. '_(' → logprob: -9.25033950805664
    4. ' (' → logprob: -10.25033950805664
    5. 's' → logprob: -10.50033950805664
    6. '```' → logprob: -10.87533950805664
    7. '_fac' → logprob: -11.50033950805664
    8. '(f' → logprob: -11.87533950805664
    9. 'fac' → logprob: -12.00033950805664
    10. '_arrays' → logprob: -13.00033950805664

Token 128: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006581080378964543
    2. '):
' → logprob: -7.50065803527832
    3. ')' → logprob: -9.25065803527832
    4. ' ):' → logprob: -12.12565803527832
    5. ',' → logprob: -13.50065803527832
    6. '):
' → logprob: -14.00065803527832
    7. ':' → logprob: -14.12565803527832
    8. '   ' → logprob: -15.87565803527832
    9. '):

' → logprob: -16.37565803527832
    10. ')：' → logprob: -16.37565803527832

Token 129: ' fac' (ID: 3513)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.9139922857284546
    2. ' fac' → logprob: -1.5389922857284546
    3. ' MOD' → logprob: -1.5389922857284546
    4. 'fac' → logprob: -1.7889922857284546
    5. 'mod' → logprob: -6.163992404937744
    6. ' mod' → logprob: -7.788992404937744
    7. 'fact' → logprob: -9.288991928100586
    8. ' ' → logprob: -10.288991928100586
    9. 'inv' → logprob: -11.163991928100586
    10. '   ' → logprob: -11.413991928100586

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011238329112529755
    2. '):' → logprob: -4.511238098144531
    3. ' ,' → logprob: -8.761238098144531
    4. ' ):' → logprob: -11.136238098144531
    5. ')' → logprob: -11.386238098144531
    6. '   ' → logprob: -13.386238098144531
    7. '):
' → logprob: -13.886238098144531
    8. ',n' → logprob: -14.011238098144531
    9. '+' → logprob: -14.386238098144531
    10. ',
' → logprob: -14.511238098144531

Token 131: ' inv' (ID: 1827)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.3134138584136963
    2. ' fin' → logprob: -1.3134138584136963
    3. 'inv' → logprob: -9.188413619995117
    4. ' inv' → logprob: -10.813413619995117
    5. ' ' → logprob: -11.563413619995117
    6. 'f' → logprob: -12.063413619995117
    7. '```' → logprob: -12.063413619995117
    8. ')' → logprob: -12.688413619995117
    9. 'mod' → logprob: -13.688413619995117
    10. '   ' → logprob: -14.188413619995117

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036144986748695374
    2. '):' → logprob: -3.411144971847534
    3. '):
' → logprob: -6.036145210266113
    4. ' ,' → logprob: -10.036145210266113
    5. ',n' → logprob: -11.286145210266113
    6. ')' → logprob: -11.286145210266113
    7. '):

' → logprob: -11.661145210266113
    8. '):
' → logprob: -11.786145210266113
    9. ',f' → logprob: -11.911145210266113
    10. ',
' → logprob: -12.286145210266113

Token 133: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.006735742092132568
    2. ' fin' → logprob: -5.006735801696777
    3. ' ' → logprob: -11.506735801696777
    4. 'fac' → logprob: -12.506735801696777
    5. '   ' → logprob: -12.631735801696777
    6. '  ' → logprob: -13.631735801696777
    7. 'f' → logprob: -14.256735801696777
    8. 'finite' → logprob: -15.381735801696777
    9. 'fn' → logprob: -15.506735801696777
    10. ')' → logprob: -15.756735801696777

Token 134: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. '
' → logprob: -18.625
    4. 'в' → logprob: -18.75
    5. ' v' → logprob: -19.0
    6. '_v' → logprob: -19.25
    7. '[v' → logprob: -19.25
    8. '   ' → logprob: -19.5
    9. '	v' → logprob: -19.75
    10. '[' → logprob: -20.125

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023384306579828262
    2. '):
' → logprob: -3.7733843326568604
    3. '):
' → logprob: -9.148384094238281
    4. ' ):' → logprob: -11.023384094238281
    5. ')' → logprob: -11.398384094238281
    6. ',' → logprob: -13.023384094238281
    7. '   ' → logprob: -13.898384094238281
    8. '):

' → logprob: -14.398384094238281
    9. ' ' → logprob: -14.898384094238281
    10. ' ):
' → logprob: -15.148384094238281

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012625954113900661
    2. ' for' → logprob: -4.3876261711120605
    3. 'for' → logprob: -9.637625694274902
    4. '    
' → logprob: -11.137625694274902
    5. ')' → logprob: -11.637625694274902
    6. '
' → logprob: -11.637625694274902
    7. ':' → logprob: -11.762625694274902
    8. '	for' → logprob: -12.387625694274902
    9. ',' → logprob: -13.012625694274902
    10. '    ' → logprob: -14.012625694274902

Token 137: ' compute' (ID: 23864)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02473859302699566
    2. ' for' → logprob: -3.7747385501861572
    3. '   ' → logprob: -6.524738788604736
    4. 'i' → logprob: -10.899738311767578
    5. ' i' → logprob: -12.274738311767578
    6. '```' → logprob: -13.774738311767578
    7. '	for' → logprob: -14.774738311767578
    8. ' ' → logprob: -14.774738311767578
    9. '
' → logprob: -16.024738311767578
    10. '    
' → logprob: -16.274738311767578

Token 138: '_factor' (ID: 43757)
  Prédit: '_fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fac' → logprob: -0.4251556992530823
    2. 'fac' → logprob: -2.1751556396484375
    3. '   ' → logprob: -2.3001556396484375
    4. ' =' → logprob: -3.6751556396484375
    5. ' ' → logprob: -3.9251556396484375
    6. 'for' → logprob: -3.9251556396484375
    7. '=' → logprob: -4.3001556396484375
    8. 'def' → logprob: -4.6751556396484375
    9. ' for' → logprob: -4.6751556396484375
    10. ' i' → logprob: -4.9251556396484375

Token 139: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.2531241774559021
    2. 'ial' → logprob: -1.5031242370605469
    3. 's' → logprob: -7.253124237060547
    4. '```' → logprob: -9.128124237060547
    5. '_' → logprob: -9.253124237060547
    6. 'ialize' → logprob: -9.753124237060547
    7. '[' → logprob: -10.378124237060547
    8. '   ' → logprob: -10.878124237060547
    9. '(' → logprob: -10.878124237060547
    10. '_fac' → logprob: -11.503124237060547

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09484188258647919
    2. '_and' → logprob: -3.469841957092285
    3. '(' → logprob: -3.594841957092285
    4. '_up' → logprob: -3.844841957092285
    5. 'and' → logprob: -5.469841957092285
    6. '_' → logprob: -6.094841957092285
    7. '_for' → logprob: -7.219841957092285
    8. '_until' → logprob: -7.344841957092285
    9. '   ' → logprob: -7.469841957092285
    10. '(f' → logprob: -7.844841957092285

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07090547680854797
    2. '+' → logprob: -3.3209054470062256
    3. ')' → logprob: -3.5709054470062256
    4. ')
' → logprob: -6.445905685424805
    5. '   ' → logprob: -6.820905685424805
    6. ' +' → logprob: -7.195905685424805
    7. ' ,' → logprob: -7.820905685424805
    8. '):
' → logprob: -9.445905685424805
    9. ',f' → logprob: -9.945905685424805
    10. ',
' → logprob: -10.070905685424805

Token 142: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.5249353647232056
    2. 'MOD' → logprob: -1.0249353647232056
    3. ' fac' → logprob: -3.524935245513916
    4. ' MOD' → logprob: -4.024935245513916
    5. 'mod' → logprob: -6.149935245513916
    6. 'fact' → logprob: -10.774935722351074
    7. '   ' → logprob: -11.024935722351074
    8. ' ' → logprob: -11.024935722351074
    9. 'inv' → logprob: -11.149935722351074
    10. ' mod' → logprob: -11.149935722351074

Token 143: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39532753825187683
    2. ')' → logprob: -1.1453275680541992
    3. ')
' → logprob: -4.895327568054199
    4. ',
' → logprob: -7.520327568054199
    5. '   ' → logprob: -8.1453275680542
    6. ',)' → logprob: -10.5203275680542
    7. '+' → logprob: -10.6453275680542
    8. ' )' → logprob: -11.3953275680542
    9. 'def' → logprob: -11.5203275680542
    10. ' ,' → logprob: -11.7703275680542

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16719549894332886
    2. '
' → logprob: -1.9171955585479736
    3. '    
' → logprob: -5.6671953201293945
    4. ' for' → logprob: -6.1671953201293945
    5. 'for' → logprob: -6.9171953201293945
    6. 'def' → logprob: -8.792195320129395
    7. ',' → logprob: -10.167195320129395
    8. '  
' → logprob: -10.167195320129395
    9. ' 
' → logprob: -10.292195320129395
    10. '```' → logprob: -10.292195320129395

Token 145: ' compute' (ID: 23864)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19905665516853333
    2. 'compute' (adapté à ' compute') → logprob: -2.574056625366211
    3. ' for' → logprob: -2.949056625366211
    4. ' compute' → logprob: -3.324056625366211
    5. 'for' → logprob: -4.199056625366211
    6. 'inv' → logprob: -8.324056625366211
    7. 'def' → logprob: -8.449056625366211
    8. ' inv' → logprob: -8.449056625366211
    9. '
' → logprob: -9.574056625366211
    10. ' def' → logprob: -9.824056625366211

Token 146: '_inv' (ID: 53427)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.04944514483213425
    2. '_inverse' → logprob: -3.049445152282715
    3. '_inv' → logprob: -7.549445152282715
    4. '_factor' → logprob: -9.174445152282715
    5. 'in' → logprob: -9.174445152282715
    6. '_' → logprob: -9.424445152282715
    7. 'inverse' → logprob: -10.549445152282715
    8. '_mod' → logprob: -11.299445152282715
    9. 'In' → logprob: -13.924445152282715
    10. ' invers' → logprob: -14.549445152282715

Token 147: '_array' (ID: 8766)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0837911069393158
    2. 's' → logprob: -2.5837910175323486
    3. '(' → logprob: -5.833791255950928
    4. '_inv' → logprob: -7.208791255950928
    5. '_factor' → logprob: -8.20879077911377
    6. '_' → logprob: -8.95879077911377
    7. '(inv' → logprob: -8.95879077911377
    8. '(s' → logprob: -9.20879077911377
    9. ' (' → logprob: -9.33379077911377
    10. '_s' → logprob: -9.33379077911377

Token 148: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.019307635724544525
    2. ' (' → logprob: -4.019307613372803
    3. '(' → logprob: -6.769307613372803
    4. '```' → logprob: -12.519308090209961
    5. '(
' → logprob: -12.644308090209961
    6. ' ' → logprob: -14.769308090209961
    7. '   ' → logprob: -15.269308090209961
    8. 'n' → logprob: -15.394308090209961
    9. 's' → logprob: -16.51930809020996
    10. ')' → logprob: -16.64430809020996

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007112398743629456
    2. ' ,' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.875711441040039
    4. ',
' → logprob: -15.375711441040039
    5. ',n' → logprob: -15.375711441040039
    6. '`,' → logprob: -16.37571144104004
    7. ')' → logprob: -16.87571144104004
    8. '(),' → logprob: -17.00071144104004
    9. '```' → logprob: -17.12571144104004
    10. ' ' → logprob: -17.50071144104004

Token 150: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.021448565647006035
    2. ' inv' → logprob: -3.8964486122131348
    3. 'MOD' → logprob: -7.521448612213135
    4. 'mod' → logprob: -9.146448135375977
    5. ' MOD' → logprob: -9.271448135375977
    6. 'fac' → logprob: -9.771448135375977
    7. '   ' → logprob: -9.896448135375977
    8. ' ' → logprob: -10.771448135375977
    9. ' fac' → logprob: -11.271448135375977
    10. '```' → logprob: -12.396448135375977

Token 151: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009963677730411291
    2. ')' → logprob: -7.0009965896606445
    3. ',
' → logprob: -10.000996589660645
    4. '   ' → logprob: -11.000996589660645
    5. ' ,' → logprob: -11.375996589660645
    6. ')
' → logprob: -11.500996589660645
    7. ',)' → logprob: -14.250996589660645
    8. ' )' → logprob: -16.375995635986328
    9. ',)
' → logprob: -16.625995635986328
    10. '),' → logprob: -16.875995635986328

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002680112374946475
    2. 'compute' → logprob: -8.50026798248291
    3. ' compute' → logprob: -9.75026798248291
    4. 'def' → logprob: -12.75026798248291
    5. '
' → logprob: -13.87526798248291
    6. '```' → logprob: -14.50026798248291
    7. '    
' → logprob: -14.62526798248291
    8. ' def' → logprob: -14.62526798248291
    9. '   ' → logprob: -14.62526798248291
    10. ',' → logprob: -15.37526798248291

Token 153: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.41966748237609863
    2. '   ' → logprob: -1.4196674823760986
    3. ' compute' → logprob: -2.2946674823760986
    4. ' ' → logprob: -9.54466724395752
    5. 'calculate' → logprob: -11.16966724395752
    6. 'com' → logprob: -11.29466724395752
    7. '	com' → logprob: -11.91966724395752
    8. '  ' → logprob: -12.04466724395752
    9. '
' → logprob: -12.04466724395752
    10. '.compute' → logprob: -12.29466724395752

Token 154: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.944220781326294
    2. '_inv' → logprob: -0.944220781326294
    3. '_fin' → logprob: -2.194220781326294
    4. '_f' → logprob: -2.444220781326294
    5. '_inverse' → logprob: -4.444220542907715
    6. '_fac' → logprob: -5.194220542907715
    7. '_in' → logprob: -5.819220542907715
    8. '_' → logprob: -6.194220542907715
    9. '_final' → logprob: -7.444220542907715
    10. '_fact' → logprob: -7.444220542907715

Token 155: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.23184888064861298
    2. 'als' → logprob: -1.6068488359451294
    3. 'al' → logprob: -5.85684871673584
    4. 'ial' → logprob: -5.85684871673584
    5. '_' → logprob: -8.35684871673584
    6. '```' → logprob: -8.35684871673584
    7. 'vals' → logprob: -10.35684871673584
    8. 'n' → logprob: -10.60684871673584
    9. 'ivals' → logprob: -10.60684871673584
    10. '_of' → logprob: -10.85684871673584

Token 156: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.4731428325176239
    2. '_inv' → logprob: -1.3481428623199463
    3. '_inverse' → logprob: -2.2231428623199463
    4. 's' → logprob: -5.223142623901367
    5. 'inverse' → logprob: -6.348142623901367
    6. 'in' → logprob: -6.473142623901367
    7. 'inv' → logprob: -8.473142623901367
    8. '_' → logprob: -10.473142623901367
    9. ' invers' → logprob: -11.973142623901367
    10. '```' → logprob: -12.098142623901367

Token 157: 'vers' (ID: 3674)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0067337267100811005
    2. 'verse' → logprob: -5.1317338943481445
    3. 'vers' → logprob: -8.381733894348145
    4. 'version' → logprob: -8.381733894348145
    5. 'vs' → logprob: -8.881733894348145
    6. '
' → logprob: -9.881733894348145
    7. 'f' → logprob: -11.006733894348145
    8. 'versions' → logprob: -11.131733894348145
    9. 'vf' → logprob: -11.131733894348145
    10. 'ver' → logprob: -11.256733894348145

Token 158: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.08957039564847946
    2. 'e' → logprob: -2.4645702838897705
    3. '
' → logprob: -8.464570045471191
    4. 'v' → logprob: -8.714570045471191
    5. '[' → logprob: -9.214570045471191
    6. '```' → logprob: -9.839570045471191
    7. 's' → logprob: -10.339570045471191
    8. '_array' → logprob: -11.589570045471191
    9. '(' → logprob: -11.839570045471191
    10. 'f' → logprob: -11.964570045471191

Token 159: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004504892509430647
    2. '(' → logprob: -5.879504680633545
    3. ' (' → logprob: -6.379504680633545
    4. '(
' → logprob: -13.254505157470703
    5. '```' → logprob: -14.379505157470703
    6. '
' → logprob: -17.004505157470703
    7. '(len' → logprob: -17.129505157470703
    8. '(f' → logprob: -17.254505157470703
    9. 'n' → logprob: -17.629505157470703
    10. '(

' → logprob: -17.629505157470703

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.613945101387799e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',f' → logprob: -13.750085830688477
    4. ',
' → logprob: -16.500085830688477
    5. '   ' → logprob: -17.250085830688477
    6. ',n' → logprob: -18.000085830688477
    7. '‌,' → logprob: -18.375085830688477
    8. '(),' → logprob: -18.625085830688477
    9. ')' → logprob: -18.750085830688477
    10. '`,' → logprob: -19.250085830688477

Token 161: ' inv' (ID: 1827)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.19071786105632782
    2. ' fin' → logprob: -1.8157178163528442
    3. 'fac' → logprob: -4.815717697143555
    4. ' fac' → logprob: -6.065717697143555
    5. 'f' → logprob: -7.940717697143555
    6. 'fn' → logprob: -10.315717697143555
    7. ' ' → logprob: -11.690717697143555
    8. 'fen' → logprob: -11.878217697143555
    9. '```' → logprob: -11.940717697143555
    10. 'fi' → logprob: -11.940717697143555

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. ' ,' → logprob: -8.875143051147461
    3. ',
' → logprob: -13.000143051147461
    4. ',f' → logprob: -15.250143051147461
    5. '   ' → logprob: -16.00014305114746
    6. ')' → logprob: -16.75014305114746
    7. ',

' → logprob: -17.00014305114746
    8. '),' → logprob: -17.75014305114746
    9. '‌,' → logprob: -18.75014305114746
    10. 'def' → logprob: -18.75014305114746

Token 163: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.2523643970489502
    2. ' fin' → logprob: -1.5023643970489502
    3. 'fac' → logprob: -8.252364158630371
    4. 'f' → logprob: -9.502364158630371
    5. ' fac' → logprob: -9.752364158630371
    6. 'fn' → logprob: -11.377364158630371
    7. ' ' → logprob: -12.252364158630371
    8. '   ' → logprob: -12.877364158630371
    9. 'fen' → logprob: -13.002364158630371
    10. '	f' → logprob: -13.064864158630371

Token 164: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.253090865968261e-06
    2. ')' → logprob: -12.500009536743164
    3. 'f' → logprob: -12.750009536743164
    4. 'fv' → logprob: -13.500009536743164
    5. ',' → logprob: -15.000009536743164
    6. '_v' → logprob: -15.500009536743164
    7. ']' → logprob: -15.625009536743164
    8. '```' → logprob: -16.000009536743164
    9. ')
' → logprob: -16.500009536743164
    10. '
' → logprob: -16.500009536743164

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -16.6250057220459
    4. '   ' → logprob: -17.6250057220459
    5. '),' → logprob: -18.7500057220459
    6. ')

' → logprob: -19.3750057220459
    7. ')
' → logprob: -19.6250057220459
    8. ').' → logprob: -19.7500057220459
    9. ')#' → logprob: -19.7500057220459
    10. '))' → logprob: -20.2500057220459

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26141422986984253
    2. '
' → logprob: -1.5114142894744873
    3. ')' → logprob: -5.386414051055908
    4. '<|end|>' → logprob: -5.761414051055908
    5. ':' → logprob: -7.886414051055908
    6. '#' → logprob: -8.136414527893066
    7. '```' → logprob: -8.636414527893066
    8. '\' → logprob: -8.636414527893066
    9. '\n' → logprob: -8.761414527893066
    10. '

' → logprob: -9.386414527893066

Token 167: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.3175138533115387
    2. 'compute' → logprob: -1.6925138235092163
    3. ' main' → logprob: -2.817513942718506
    4. ' read' → logprob: -4.817513942718506
    5. ' pre' → logprob: -5.442513942718506
    6. 'main' → logprob: -5.567513942718506
    7. ' sum' → logprob: -5.942513942718506
    8. 'read' → logprob: -6.192513942718506
    9. ' prefix' → logprob: -6.442513942718506
    10. 'sum' → logprob: -6.817513942718506

Token 168: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00502513675019145
    2. '_fac' → logprob: -5.3800249099731445
    3. '_' → logprob: -8.880024909973145
    4. '_fact' → logprob: -9.255024909973145
    5. '_sum' → logprob: -9.880024909973145
    6. '_f' → logprob: -10.380024909973145
    7. '_array' → logprob: -11.255024909973145
    8. '_input' → logprob: -11.505024909973145
    9. '_inv' → logprob: -12.005024909973145
    10. '_arr' → logprob: -12.130024909973145

Token 169: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.019647371023893356
    2. '_' → logprob: -4.519647598266602
    3. 'als' → logprob: -5.019647598266602
    4. '_of' → logprob: -7.519647598266602
    5. '```' → logprob: -8.394647598266602
    6. 'ial' → logprob: -8.394647598266602
    7. 'n' → logprob: -8.894647598266602
    8. 'of' → logprob: -9.019647598266602
    9. 's' → logprob: -9.019647598266602
    10. 't' → logprob: -9.144647598266602

Token 170: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.250016212463379
    3. ' (' → logprob: -12.625016212463379
    4. 'n' → logprob: -18.500017166137695
    5. '(
' → logprob: -18.750017166137695
    6. 'def' → logprob: -19.375017166137695
    7. '(N' → logprob: -21.125017166137695
    8. '```' → logprob: -21.250017166137695
    9. '(k' → logprob: -21.375017166137695
    10. '(i' → logprob: -21.375017166137695

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ',
' → logprob: -16.125009536743164
    4. '   ' → logprob: -17.750009536743164
    5. ',f' → logprob: -17.750009536743164
    6. '```' → logprob: -18.875009536743164
    7. 'def' → logprob: -19.125009536743164
    8. ',
' → logprob: -19.250009536743164
    9. 'fac' → logprob: -19.375009536743164
    10. '_,' → logprob: -19.500009536743164

Token 172: ' fac' (ID: 3513)
  Prédit: ' fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fac' → logprob: -0.5759472250938416
    2. 'fac' → logprob: -0.8259472250938416
    3. '   ' → logprob: -12.825946807861328
    4. ' ' → logprob: -13.325946807861328
    5. 'f' → logprob: -13.700946807861328
    6. ')' → logprob: -14.075946807861328
    7. '_fac' → logprob: -14.700946807861328
    8. 'Fac' → logprob: -15.200946807861328
    9. '.fac' → logprob: -16.325946807861328
    10. 'def' → logprob: -16.325946807861328

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20176297426223755
    2. '):
' → logprob: -1.7017629146575928
    3. '):
' → logprob: -8.076763153076172
    4. '   ' → logprob: -10.451763153076172
    5. ',' → logprob: -12.701763153076172
    6. ')' → logprob: -12.826763153076172
    7. ':' → logprob: -13.201763153076172
    8. ' ):' → logprob: -14.076763153076172
    9. 'for' → logprob: -15.201763153076172
    10. '):

' → logprob: -15.326763153076172

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15636210143566132
    2. ' for' → logprob: -2.2813620567321777
    3. 'for' → logprob: -3.1563620567321777
    4. '```' → logprob: -11.531362533569336
    5. 'fac' → logprob: -12.531362533569336
    6. ' i' → logprob: -12.656362533569336
    7. '	for' → logprob: -12.906362533569336
    8. '
' → logprob: -13.281362533569336
    9. '    
' → logprob: -13.406362533569336
    10. '   ' → logprob: -13.781362533569336

Token 175: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019463831558823586
    2. ' for' → logprob: -4.019464015960693
    3. '   ' → logprob: -6.644464015960693
    4. 'fac' → logprob: -12.019463539123535
    5. 'i' → logprob: -12.519463539123535
    6. ' i' → logprob: -14.019463539123535
    7. '```' → logprob: -14.269463539123535
    8. '
' → logprob: -15.144463539123535
    9. '	for' → logprob: -15.519463539123535
    10. '    
' → logprob: -16.51946449279785

Token 176: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868737816810608
    2. 'i' → logprob: -1.136873722076416
    3. '   ' → logprob: -13.636874198913574
    4. '	i' → logprob: -14.011874198913574
    5. ' ' → logprob: -14.386874198913574
    6. '  ' → logprob: -16.636873245239258
    7. '```' → logprob: -16.761873245239258
    8. '(i' → logprob: -17.636873245239258
    9. ' ' → logprob: -17.636873245239258
    10. 'I' → logprob: -17.761873245239258

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002862177789211273
    2. 'in' → logprob: -5.877861976623535
    3. ' ' → logprob: -10.002861976623535
    4. '   ' → logprob: -11.877861976623535
    5. '  ' → logprob: -13.252861976623535
    6. '	in' → logprob: -14.002861976623535
    7. 'range' → logprob: -14.252861976623535
    8. 'n' → logprob: -14.627861976623535
    9. ' i' → logprob: -15.127861976623535
    10. '1' → logprob: -15.252861976623535

Token 178: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002156138420105
    2. ' range' → logprob: -2.3502156734466553
    3. '1' → logprob: -12.350215911865234
    4. ' ' → logprob: -13.100215911865234
    5. '(range' → logprob: -13.225215911865234
    6. '	range' → logprob: -14.850215911865234
    7. '   ' → logprob: -15.225215911865234
    8. ' in' → logprob: -16.975215911865234
    9. '  ' → logprob: -17.100215911865234
    10. '2' → logprob: -17.350215911865234

Token 179: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00041863700607791543
    2. '1' → logprob: -7.875418663024902
    3. ' ' → logprob: -10.500418663024902
    4. '   ' → logprob: -11.750418663024902
    5. '2' → logprob: -13.375418663024902
    6. ' (' → logprob: -13.375418663024902
    7. 'def' → logprob: -18.500417709350586
    8. '  ' → logprob: -18.625417709350586
    9. ',' → logprob: -18.625417709350586
    10. '
' → logprob: -19.125417709350586

Token 180: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008738785050809383
    2. '2' → logprob: -4.758738994598389
    3. ' ' → logprob: -9.00873851776123
    4. '   ' → logprob: -13.25873851776123
    5. '
' → logprob: -16.258739471435547
    6. '  ' → logprob: -17.508739471435547
    7. '(' → logprob: -17.508739471435547
    8. ')' → logprob: -18.008739471435547
    9. '    ' → logprob: -18.008739471435547
    10. '```' → logprob: -18.008739471435547

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012047011114191264
    2. ' ,' → logprob: -9.250120162963867
    3. ',n' → logprob: -10.625120162963867
    4. '   ' → logprob: -18.000120162963867
    5. ',
' → logprob: -18.750120162963867
    6. 'n' → logprob: -19.750120162963867
    7. ' ' → logprob: -20.125120162963867
    8. '，' → logprob: -20.875120162963867
    9. ',len' → logprob: -20.875120162963867
    10. '_,' → logprob: -21.125120162963867

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759409666061401
    2. ' n' → logprob: -0.8259409666061401
    3. '	n' → logprob: -13.57594108581543
    4. '   ' → logprob: -16.07594108581543
    5. ' ' → logprob: -16.70094108581543
    6. ')n' → logprob: -17.32594108581543
    7. ')' → logprob: -17.45094108581543
    8. '```' → logprob: -17.45094108581543
    9. '(n' → logprob: -17.70094108581543
    10. '
' → logprob: -17.95094108581543

Token 183: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019341122824698687
    2. ' +' → logprob: -6.251934051513672
    3. '):
' → logprob: -13.001934051513672
    4. '):' → logprob: -13.126934051513672
    5. '+
' → logprob: -13.751934051513672
    6. '   ' → logprob: -16.251934051513672
    7. '1' → logprob: -17.126934051513672
    8. '
' → logprob: -17.376934051513672
    9. '+:' → logprob: -18.001934051513672
    10. '+n' → logprob: -18.251934051513672

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.828512363834307e-05
    2. ' ' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.250088691711426
    4. '```' → logprob: -14.625088691711426
    5. '
' → logprob: -15.625088691711426
    6. ')' → logprob: -15.625088691711426
    7. '2' → logprob: -15.750088691711426
    8. '):
' → logprob: -15.875088691711426
    9. '(' → logprob: -16.56258773803711
    10. '  ' → logprob: -17.00008773803711

Token 185: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2024669349193573
    2. '):' → logprob: -1.7024669647216797
    3. ':' → logprob: -6.95246696472168
    4. '):
' → logprob: -10.07746696472168
    5. ' ):
' → logprob: -10.45246696472168
    6. ':
' → logprob: -10.95246696472168
    7. ' ):' → logprob: -12.07746696472168
    8. ')' → logprob: -13.57746696472168
    9. '   ' → logprob: -14.07746696472168
    10. '():
' → logprob: -15.57746696472168

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04154505208134651
    2. ' fac' → logprob: -3.2915451526641846
    3. 'fac' → logprob: -5.9165449142456055
    4. '   ' → logprob: -7.2915449142456055
    5. '```' → logprob: -9.416544914245605
    6. '_fac' → logprob: -11.166544914245605
    7. '	   ' → logprob: -12.416544914245605
    8. '    
' → logprob: -12.791544914245605
    9. '
' → logprob: -12.791544914245605
    10. '        
' → logprob: -13.041544914245605

Token 187: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' (adapté à ' fac') → logprob: -0.14293526113033295
    2. ' fac' → logprob: -2.017935276031494
    3. '   ' → logprob: -9.017934799194336
    4. '       ' → logprob: -9.142934799194336
    5. '_fac' → logprob: -10.892934799194336
    6. 'facet' → logprob: -12.642934799194336
    7. '.fac' → logprob: -12.892934799194336
    8. ' faci' → logprob: -13.267934799194336
    9. 'fas' → logprob: -14.017934799194336
    10. '```' → logprob: -14.392934799194336

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.682846287731081e-05
    2. '[' → logprob: -9.625066757202148
    3. ' [' → logprob: -15.375066757202148
    4. '\[' → logprob: -16.00006675720215
    5. '[I' → logprob: -16.12506675720215
    6. '   ' → logprob: -16.25006675720215
    7. '```' → logprob: -16.37506675720215
    8. '
' → logprob: -17.37506675720215
    9. '[
' → logprob: -18.12506675720215
    10. 'i' → logprob: -19.00006675720215

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47754037380218506
    2. '=' → logprob: -0.9775403738021851
    3. ']=' → logprob: -6.102540493011475
    4. ' =' → logprob: -6.727540493011475
    5. ' ]' → logprob: -11.852540016174316
    6. '*' → logprob: -12.352540016174316
    7. '   ' → logprob: -13.102540016174316
    8. ')' → logprob: -13.227540016174316
    9. '*=' → logprob: -13.352540016174316
    10. '```' → logprob: -13.977540016174316

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005931520834565163
    2. ' =' → logprob: -5.130931377410889
    3. '*=' → logprob: -13.005931854248047
    4. ']=' → logprob: -15.755931854248047
    5. ']' → logprob: -16.255931854248047
    6. '=i' → logprob: -16.380931854248047
    7. '```' → logprob: -16.505931854248047
    8. ' *=' → logprob: -16.630931854248047
    9. '%=' → logprob: -16.880931854248047
    10. '=
' → logprob: -17.380931854248047

Token 191: ' fac' (ID: 3513)
  Prédit: ' fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fac' → logprob: -0.8956418633460999
    2. 'fac' → logprob: -1.020641803741455
    3. '(f' → logprob: -1.520641803741455
    4. ' (' → logprob: -4.395641803741455
    5. '   ' → logprob: -9.145642280578613
    6. 'fas' → logprob: -9.645642280578613
    7. '_fac' → logprob: -10.270642280578613
    8. 'f' → logprob: -10.770642280578613
    9. ' fas' → logprob: -10.895642280578613
    10. '	f' → logprob: -10.895642280578613

Token 192: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.750003814697266
    3. 'i' → logprob: -14.500003814697266
    4. '[
' → logprob: -17.000003814697266
    5. ' [' → logprob: -17.000003814697266
    6. '```' → logprob: -17.000003814697266
    7. ' i' → logprob: -17.750003814697266
    8. '
' → logprob: -19.000003814697266
    9. '[-' → logprob: -20.125003814697266
    10. '[I' → logprob: -20.125003814697266

Token 193: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00021021578868385404
    2. ' -' → logprob: -8.50020980834961
    3. '[i' → logprob: -12.37520980834961
    4. 'i' → logprob: -13.12520980834961
    5. '-i' → logprob: -16.25020980834961
    6. ']' → logprob: -16.37520980834961
    7. '(i' → logprob: -17.25020980834961
    8. '*i' → logprob: -17.50020980834961
    9. ' i' → logprob: -17.62520980834961
    10. '   ' → logprob: -17.62520980834961

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. ']' → logprob: -16.250001907348633
    4. '```' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '۱' → logprob: -18.187501907348633
    7. '১' → logprob: -18.250001907348633
    8. 'i' → logprob: -18.625001907348633
    9. '१' → logprob: -18.625001907348633
    10. '  ' → logprob: -19.312501907348633

Token 195: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38689476251602173
    2. ' *' → logprob: -1.136894702911377
    3. '*i' → logprob: -10.886895179748535
    4. ']' → logprob: -13.011895179748535
    5. ' ' → logprob: -13.761895179748535
    6. ' ' → logprob: -13.886895179748535
    7. '**' → logprob: -15.386895179748535
    8. ')' → logprob: -15.761895179748535
    9. '*
' → logprob: -16.13689422607422
    10. ']*' → logprob: -16.26189422607422

Token 196: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061967797577381134
    2. ' i' → logprob: -2.8119678497314453
    3. '	i' → logprob: -16.311967849731445
    4. ' ' → logprob: -16.936967849731445
    5. '   ' → logprob: -17.186967849731445
    6. '
' → logprob: -18.686967849731445
    7. '*i' → logprob: -18.936967849731445
    8. ' ' → logprob: -18.936967849731445
    9. '  ' → logprob: -19.936967849731445
    10. '(i' → logprob: -20.311967849731445

Token 197: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.313262403011322
    2. '%' → logprob: -1.3132624626159668
    3. '%i' → logprob: -15.063261985778809
    4. '%n' → logprob: -15.688261985778809
    5. ' ' → logprob: -16.813262939453125
    6. '%A' → logprob: -17.313262939453125
    7. ')%' → logprob: -17.688262939453125
    8. '%B' → logprob: -17.688262939453125
    9. '%D' → logprob: -17.813262939453125
    10. ' %=' → logprob: -17.938262939453125

Token 198: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01416350994259119
    2. ' MOD' → logprob: -4.264163494110107
    3. '_MOD' → logprob: -17.764163970947266
    4. '.MOD' → logprob: -18.764163970947266
    5. 'MO' → logprob: -19.139163970947266
    6. '(M' → logprob: -21.264163970947266
    7. 'MD' → logprob: -21.889163970947266
    8. ' ' → logprob: -21.889163970947266
    9. '   ' → logprob: -22.639163970947266
    10. 'M' → logprob: -23.014163970947266

Token 199: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.2520655691623688
    2. ' compute' → logprob: -1.5020655393600464
    3. 'def' → logprob: -9.002065658569336
    4. ' def' → logprob: -11.502065658569336
    5. '_compute' → logprob: -14.502065658569336
    6. 'calculate' → logprob: -14.877065658569336
    7. 'com' → logprob: -15.127065658569336
    8. '.compute' → logprob: -15.252065658569336
    9. 'computer' → logprob: -15.252065658569336
    10. '
' → logprob: -15.377065658569336

Token 202: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0019394654082134366
    2. 'inv' → logprob: -6.251939296722412
    3. '_inverse' → logprob: -12.12693977355957
    4. '_' → logprob: -13.12693977355957
    5. '_in' → logprob: -14.25193977355957
    6. '(inv' → logprob: -14.37693977355957
    7. '_factor' → logprob: -14.50193977355957
    8. 'inverse' → logprob: -14.75193977355957
    9. 'def' → logprob: -15.37693977355957
    10. '```' → logprob: -16.12693977355957

Token 203: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.3663626305060461e-05
    2. '_arr' → logprob: -12.12501335144043
    3. '(n' → logprob: -12.87501335144043
    4. '_arrays' → logprob: -13.12501335144043
    5. 'array' → logprob: -13.75001335144043
    6. '(i' → logprob: -14.12501335144043
    7. '_ARRAY' → logprob: -14.75001335144043
    8. '(_' → logprob: -15.50001335144043
    9. 's' → logprob: -15.50001335144043
    10. 'Array' → logprob: -16.00001335144043

Token 204: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.759734732331708e-05
    2. ' (' → logprob: -11.375017166137695
    3. '(' → logprob: -12.125017166137695
    4. 'def' → logprob: -15.000017166137695
    5. 'n' → logprob: -16.000017166137695
    6. '(
' → logprob: -17.250017166137695
    7. '```' → logprob: -17.625017166137695
    8. '(N' → logprob: -18.625017166137695
    9. ',' → logprob: -19.000017166137695
    10. ',n' → logprob: -19.750017166137695

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.375011444091797
    3. ',
' → logprob: -15.750011444091797
    4. '   ' → logprob: -17.125011444091797
    5. ',n' → logprob: -17.375011444091797
    6. ',in' → logprob: -17.750011444091797
    7. '`,' → logprob: -18.250011444091797
    8. '),' → logprob: -18.250011444091797
    9. ',int' → logprob: -18.500011444091797
    10. 'def' → logprob: -18.500011444091797

Token 206: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3132755756378174
    2. ' inv' → logprob: -1.3132755756378174
    3. '(inv' → logprob: -12.063275337219238
    4. '
' → logprob: -12.938275337219238
    5. ' ' → logprob: -14.063275337219238
    6. 'int' → logprob: -14.063275337219238
    7. '.inv' → logprob: -14.438275337219238
    8. ')' → logprob: -14.688275337219238
    9. '   ' → logprob: -14.938275337219238
    10. '```' → logprob: -15.188275337219238

Token 207: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0791509598493576
    2. '):' → logprob: -2.579150915145874
    3. '):
' → logprob: -8.329151153564453
    4. ',' → logprob: -11.079151153564453
    5. '   ' → logprob: -12.954151153564453
    6. '):

' → logprob: -13.954151153564453
    7. ')' → logprob: -14.954151153564453
    8. ' ):
' → logprob: -15.204151153564453
    9. ':' → logprob: -15.579151153564453
    10. ':
' → logprob: -16.079151153564453

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1655115932226181
    2. 'for' → logprob: -2.0405116081237793
    3. ' for' → logprob: -3.9155116081237793
    4. 'inv' → logprob: -6.040511608123779
    5. ' inv' → logprob: -8.540511131286621
    6. '	for' → logprob: -9.915511131286621
    7. ' ' → logprob: -12.165511131286621
    8. '```' → logprob: -12.165511131286621
    9. '[' → logprob: -12.915511131286621
    10. '    
' → logprob: -13.165511131286621

Token 209: ' for' (ID: 395)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004176698625087738
    2. 'for' (adapté à ' for') → logprob: -5.504176616668701
    3. ' inv' → logprob: -9.25417709350586
    4. ' for' → logprob: -13.62917709350586
    5. '   ' → logprob: -13.75417709350586
    6. '```' → logprob: -16.87917709350586
    7. '[' → logprob: -17.25417709350586
    8. '
' → logprob: -17.50417709350586
    9. '    
' → logprob: -18.00417709350586
    10. 'in' → logprob: -18.62917709350586

Token 210: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759690999984741
    2. 'i' → logprob: -0.8259690999984741
    3. ' ' → logprob: -11.075968742370605
    4. '2' → logprob: -11.325968742370605
    5. '   ' → logprob: -14.075968742370605
    6. '	i' → logprob: -14.075968742370605
    7. '  ' → logprob: -15.075968742370605
    8. '(i' → logprob: -16.075969696044922
    9. '```' → logprob: -17.200969696044922
    10. '    ' → logprob: -17.700969696044922

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005587210413068533
    2. 'in' → logprob: -5.255587100982666
    3. '=' → logprob: -8.380587577819824
    4. ' =' → logprob: -9.630587577819824
    5. ' ' → logprob: -10.630587577819824
    6. '   ' → logprob: -11.880587577819824
    7. ' i' → logprob: -12.130587577819824
    8. '```' → logprob: -12.505587577819824
    9. 'range' → logprob: -12.505587577819824
    10. 's' → logprob: -12.880587577819824

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0800093337893486
    2. ' range' → logprob: -2.5800092220306396
    3. '2' → logprob: -6.830009460449219
    4. '(' → logprob: -10.705009460449219
    5. ' ' → logprob: -11.580009460449219
    6. '(range' → logprob: -12.205009460449219
    7. '	range' → logprob: -14.705009460449219
    8. '[' → logprob: -15.330009460449219
    9. '  ' → logprob: -15.455009460449219
    10. '   ' → logprob: -15.705009460449219

Token 213: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010749688372015953
    2. '2' → logprob: -7.37607479095459
    3. 'range' → logprob: -8.12607479095459
    4. ' range' → logprob: -8.87607479095459
    5. ' (' → logprob: -11.87607479095459
    6. ' ' → logprob: -13.00107479095459
    7. '(range' → logprob: -13.25107479095459
    8. '(
' → logprob: -13.75107479095459
    9. '_range' → logprob: -15.12607479095459
    10. '   ' → logprob: -15.37607479095459

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.5000057220459
    4. '
' → logprob: -16.8750057220459
    5. '２' → logprob: -17.3750057220459
    6. '

' → logprob: -18.2500057220459
    7. '```' → logprob: -18.2500057220459
    8. '  ' → logprob: -18.3750057220459
    9. '(' → logprob: -18.5000057220459
    10. '۲' → logprob: -18.7500057220459

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ',n' → logprob: -10.750035285949707
    3. ' ,' → logprob: -11.250035285949707
    4. '   ' → logprob: -15.125035285949707
    5. ',
' → logprob: -17.00003433227539
    6. 'n' → logprob: -17.00003433227539
    7. '‌,' → logprob: -18.00003433227539
    8. '```' → logprob: -18.62503433227539
    9. ' ' → logprob: -18.87503433227539
    10. ',int' → logprob: -19.37503433227539

Token 216: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519298195838928
    2. ' n' → logprob: -1.501929759979248
    3. '	n' → logprob: -15.376930236816406
    4. ' ' → logprob: -15.626930236816406
    5. '   ' → logprob: -15.876930236816406
    6. '(n' → logprob: -16.501930236816406
    7. '    ' → logprob: -16.626930236816406
    8. ',' → logprob: -18.501930236816406
    9. '```' → logprob: -18.751930236816406
    10. ')n' → logprob: -18.876930236816406

Token 217: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4272752852994017e-05
    2. ' +' → logprob: -10.75002384185791
    3. '+i' → logprob: -13.87502384185791
    4. '+
' → logprob: -14.12502384185791
    5. ',' → logprob: -14.37502384185791
    6. '+,' → logprob: -15.75002384185791
    7. '):
' → logprob: -16.125024795532227
    8. '```' → logprob: -16.375024795532227
    9. '   ' → logprob: -16.500024795532227
    10. '()+' → logprob: -17.375024795532227

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002112886286340654
    2. 'i' → logprob: -9.250211715698242
    3. '+' → logprob: -9.375211715698242
    4. '```' → logprob: -11.000211715698242
    5. ' ' → logprob: -12.250211715698242
    6. ')' → logprob: -12.875211715698242
    7. '(' → logprob: -13.000211715698242
    8. '2' → logprob: -14.250211715698242
    9. 'n' → logprob: -14.500211715698242
    10. '   ' → logprob: -14.500211715698242

Token 219: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0012460665311664343
    2. '):' → logprob: -6.751245975494385
    3. ':
' → logprob: -9.876246452331543
    4. ':' → logprob: -11.501246452331543
    5. '):
' → logprob: -12.251246452331543
    6. ' ):
' → logprob: -12.251246452331543
    7. '   ' → logprob: -12.751246452331543
    8. '():
' → logprob: -14.251246452331543
    9. ']:
' → logprob: -14.376246452331543
    10. ',' → logprob: -15.126246452331543

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09615034610033035
    2. 'inv' → logprob: -2.7211503982543945
    3. ' inv' → logprob: -3.7211503982543945
    4. '   ' → logprob: -6.7211503982543945
    5. '```' → logprob: -7.8461503982543945
    6. '(inv' → logprob: -10.346150398254395
    7. '
' → logprob: -11.596150398254395
    8. '``' → logprob: -12.096150398254395
    9. '_inv' → logprob: -12.721150398254395
    10. '.inv' → logprob: -12.721150398254395

Token 221: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0002541872672736645
    2. ' inv' → logprob: -8.50025463104248
    3. '   ' → logprob: -10.37525463104248
    4. '       ' → logprob: -10.87525463104248
    5. '```' → logprob: -15.12525463104248
    6. '           ' → logprob: -16.125253677368164
    7. '.inv' → logprob: -16.750253677368164
    8. '(inv' → logprob: -17.125253677368164
    9. '        
' → logprob: -17.500253677368164
    10. '_inv' → logprob: -17.750253677368164

Token 222: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.666993507067673e-05
    2. '[' → logprob: -10.250036239624023
    3. '[n' → logprob: -14.000036239624023
    4. ' [' → logprob: -15.875036239624023
    5. '```' → logprob: -16.250036239624023
    6. '[
' → logprob: -17.125036239624023
    7. '   ' → logprob: -17.250036239624023
    8. '=' → logprob: -17.500036239624023
    9. 'i' → logprob: -17.625036239624023
    10. '[j' → logprob: -17.750036239624023

Token 223: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893407344818115
    2. ' =' → logprob: -2.5789341926574707
    3. ']' → logprob: -10.328933715820312
    4. ']=' → logprob: -11.578933715820312
    5. '%=' → logprob: -13.828933715820312
    6. '=
' → logprob: -14.578933715820312
    7. ')' → logprob: -15.578933715820312
    8. '=

' → logprob: -15.953933715820312
    9. ')=' → logprob: -16.453933715820312
    10. '＝' → logprob: -16.453933715820312

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019287518225610256
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -16.251928329467773
    4. '=

' → logprob: -18.251928329467773
    5. '＝' → logprob: -19.126928329467773
    6. '%=' → logprob: -19.376928329467773
    7. '=int' → logprob: -20.501928329467773
    8. '=}' → logprob: -21.376928329467773
    9. '.=' → logprob: -21.501928329467773
    10. '=(' → logprob: -22.126928329467773

Token 225: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0005243193008936942
    2. ' MOD' → logprob: -7.625524520874023
    3. '(M' → logprob: -10.625524520874023
    4. '   ' → logprob: -13.000524520874023
    5. '-(' → logprob: -13.125524520874023
    6. '-M' → logprob: -13.500524520874023
    7. '(' → logprob: -13.500524520874023
    8. 'inv' → logprob: -13.750524520874023
    9. '_MOD' → logprob: -13.875524520874023
    10. '.MOD' → logprob: -13.875524520874023

Token 226: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.399405837059021
    2. ' %' → logprob: -1.399405837059021
    3. '%' → logprob: -1.899405837059021
    4. ' -' → logprob: -2.0244059562683105
    5. '-' → logprob: -2.2744059562683105
    6. '%i' → logprob: -2.3994059562683105
    7. '    ' → logprob: -4.8994059562683105
    8. ')' → logprob: -5.3994059562683105
    9. ' ' → logprob: -5.6494059562683105
    10. ' i' → logprob: -5.8994059562683105

Token 227: ' inv' (ID: 1827)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10057995468378067
    2. '(M' → logprob: -2.3505799770355225
    3. ' MOD' → logprob: -8.225580215454102
    4. ' (' → logprob: -9.850580215454102
    5. '(' → logprob: -10.600580215454102
    6. '   ' → logprob: -11.350580215454102
    7. '(Mod' → logprob: -11.850580215454102
    8. '```' → logprob: -12.350580215454102
    9. '_MOD' → logprob: -14.100580215454102
    10. '.MOD' → logprob: -14.350580215454102

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9743012671824545e-05
    2. 'MOD' → logprob: -11.250020027160645
    3. '[
' → logprob: -12.250020027160645
    4. '```' → logprob: -14.375020027160645
    5. '   ' → logprob: -15.250020027160645
    6. ' MOD' → logprob: -15.500020027160645
    7. '[MAX' → logprob: -15.625020027160645
    8. '[-' → logprob: -15.750020027160645
    9. '[(' → logprob: -16.000019073486328
    10. '[int' → logprob: -16.125019073486328

Token 229: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3133925795555115
    2. '[' → logprob: -1.3133926391601562
    3. ' MOD' → logprob: -9.188392639160156
    4. ' ' → logprob: -11.688392639160156
    5. '_MOD' → logprob: -11.938392639160156
    6. '   ' → logprob: -12.313392639160156
    7. '```' → logprob: -12.563392639160156
    8. ']' → logprob: -13.438392639160156
    9. '[M' → logprob: -13.813392639160156
    10. '.MOD' → logprob: -14.063392639160156

Token 230: ' %' (ID: 1851)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013765414478257298
    2. '%' → logprob: -7.001376628875732
    3. 'MOD' → logprob: -8.126376152038574
    4. '[
' → logprob: -9.376376152038574
    5. ']' → logprob: -9.751376152038574
    6. '[(' → logprob: -12.376376152038574
    7. '```' → logprob: -12.751376152038574
    8. ' ' → logprob: -12.876376152038574
    9. '[i' → logprob: -13.001376152038574
    10. '_MOD' → logprob: -13.126376152038574

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.635164754698053e-05
    2. ' i' → logprob: -9.625066757202148
    3. '	i' → logprob: -16.12506675720215
    4. '   ' → logprob: -16.37506675720215
    5. ',i' → logprob: -17.62506675720215
    6. ' ' → logprob: -17.75006675720215
    7. '[i' → logprob: -17.75006675720215
    8. '*i' → logprob: -18.50006675720215
    9. '```' → logprob: -18.50006675720215
    10. '%i' → logprob: -18.62506675720215

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003685235744342208
    2. ']*' → logprob: -5.628684997558594
    3. 'i' → logprob: -10.503684997558594
    4. '*i' → logprob: -10.503684997558594
    5. '*' → logprob: -11.128684997558594
    6. '   ' → logprob: -12.253684997558594
    7. ' *' → logprob: -12.753684997558594
    8. '[i' → logprob: -13.128684997558594
    9. '```' → logprob: -13.503684997558594
    10. ' ' → logprob: -14.003684997558594

Token 233: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11094777286052704
    2. '*' → logprob: -2.360947847366333
    3. '*i' → logprob: -5.485947608947754
    4. '[i' → logprob: -6.110947608947754
    5. '*(' → logprob: -6.235947608947754
    6. ']' → logprob: -6.360947608947754
    7. '   ' → logprob: -8.235947608947754
    8. ')' → logprob: -9.360947608947754
    9. ']*' → logprob: -9.735947608947754
    10. '[' → logprob: -9.735947608947754

Token 234: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.012292303144931793
    2. '(' → logprob: -4.637292385101318
    3. ' (' → logprob: -6.012292385101318
    4. '   ' → logprob: -10.38729190826416
    5. '(Mod' → logprob: -10.51229190826416
    6. '((' → logprob: -11.26229190826416
    7. '(mod' → logprob: -12.38729190826416
    8. '(MSG' → logprob: -13.38729190826416
    9. '(
' → logprob: -13.76229190826416
    10. '    
' → logprob: -14.01229190826416

Token 235: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.013136106543242931
    2. '(M' → logprob: -4.76313591003418
    3. ' MOD' → logprob: -6.13813591003418
    4. '(' → logprob: -6.13813591003418
    5. ' (' → logprob: -9.13813591003418
    6. '(Mod' → logprob: -9.88813591003418
    7. '   ' → logprob: -10.88813591003418
    8. '_MOD' → logprob: -11.88813591003418
    9. '.MOD' → logprob: -12.38813591003418
    10. 'MD' → logprob: -13.13813591003418

Token 236: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20215143263339996
    2. ' //' → logprob: -1.7021514177322388
    3. '```' → logprob: -7.952151298522949
    4. 'i' → logprob: -9.45215129852295
    5. ' ' → logprob: -9.45215129852295
    6. ')' → logprob: -10.07715129852295
    7. '#' → logprob: -10.20215129852295
    8. '`' → logprob: -10.45215129852295
    9. ' ' → logprob: -10.82715129852295
    10. ' i' → logprob: -11.20215129852295

Token 237: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011705794604495168
    2. ' i' → logprob: -6.751170635223389
    3. '	i' → logprob: -15.75117015838623
    4. '   ' → logprob: -15.75117015838623
    5. ' ' → logprob: -17.626171112060547
    6. '  ' → logprob: -18.626171112060547
    7. '
' → logprob: -19.501171112060547
    8. '```' → logprob: -19.876171112060547
    9. ')i' → logprob: -20.001171112060547
    10. '_i' → logprob: -20.126171112060547

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014145197346806526
    2. ' )' → logprob: -6.8764142990112305
    3. ')%' → logprob: -8.50141429901123
    4. ' %' → logprob: -8.75141429901123
    5. '%i' → logprob: -11.75141429901123
    6. '%' → logprob: -11.87641429901123
    7. '   ' → logprob: -12.75141429901123
    8. '[i' → logprob: -14.00141429901123
    9. ')
' → logprob: -14.62641429901123
    10. ' ' → logprob: -14.75141429901123

Token 239: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0017200425500050187
    2. '%' → logprob: -6.376719951629639
    3. ')' → logprob: -11.251720428466797
    4. '%i' → logprob: -13.126720428466797
    5. ' ' → logprob: -13.501720428466797
    6. ')%' → logprob: -14.251720428466797
    7. '   ' → logprob: -14.876720428466797
    8. '%n' → logprob: -16.001720428466797
    9. ' ' → logprob: -16.126720428466797
    10. '```' → logprob: -16.626720428466797

Token 240: ' MOD' (ID: 32868)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2311694622039795
    2. 'MOD' → logprob: -1.7311694622039795
    3. ' i' → logprob: -3.7311694622039795
    4. ' MOD' → logprob: -5.231169700622559
    5. ' ' → logprob: -12.731169700622559
    6. '```' → logprob: -13.356169700622559
    7. '_MOD' → logprob: -14.731169700622559
    8. '(i' → logprob: -15.356169700622559
    9. '   ' → logprob: -15.356169700622559
    10. '  ' → logprob: -15.981169700622559

Token 241: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.867765486240387
    2. '<|end|>' → logprob: -1.3677654266357422
    3. '   ' → logprob: -1.4927654266357422
    4. ')' → logprob: -2.617765426635742
    5. '\n' → logprob: -5.117765426635742
    6. '```' → logprob: -5.117765426635742
    7. '[i' → logprob: -5.742765426635742
    8. '    
' → logprob: -6.117765426635742
    9. '<|end|>' → logprob: -6.492765426635742
    10. ' ' → logprob: -6.492765426635742

Token 242: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0002913678181357682
    2. ' compute' → logprob: -8.37529182434082
    3. 'def' → logprob: -10.00029182434082
    4. '
' → logprob: -11.25029182434082
    5. 'computer' → logprob: -14.37529182434082
    6. '_compute' → logprob: -14.75029182434082
    7. '.compute' → logprob: -15.12529182434082
    8. 'calculate' → logprob: -15.50029182434082
    9. ' ' → logprob: -15.62529182434082
    10. 'com' → logprob: -16.00029182434082

Token 244: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0031934010330587626
    2. 'factor' → logprob: -5.753193378448486
    3. '_fac' → logprob: -11.878193855285645
    4. '_fact' → logprob: -11.878193855285645
    5. ' factorial' → logprob: -14.003193855285645
    6. '_' → logprob: -14.753193855285645
    7. 'def' → logprob: -15.878193855285645
    8. '_inv' → logprob: -16.003192901611328
    9. 'fac' → logprob: -16.128192901611328
    10. 'fact' → logprob: -16.378192901611328

Token 245: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.014776713214814663
    2. 'al' → logprob: -4.264776706695557
    3. '_factor' → logprob: -7.889776706695557
    4. 'ialize' → logprob: -9.514777183532715
    5. ' factorial' → logprob: -9.514777183532715
    6. 'atorial' → logprob: -10.264777183532715
    7. 'ional' → logprob: -11.264777183532715
    8. 'cial' → logprob: -11.389777183532715
    9. 'rial' → logprob: -11.764777183532715
    10. 'factor' → logprob: -11.889777183532715

Token 246: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.4121114822482923e-06
    2. '_inverse' → logprob: -13.375003814697266
    3. '_inv' → logprob: -13.375003814697266
    4. 'in' → logprob: -16.875003814697266
    5. 's' → logprob: -17.000003814697266
    6. ' _' → logprob: -17.375003814697266
    7. '_' → logprob: -17.500003814697266
    8. '_ex' → logprob: -18.125003814697266
    9. '_s' → logprob: -18.250003814697266
    10. '_inches' → logprob: -18.250003814697266

Token 247: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -3.523948907968588e-05
    2. 'v' → logprob: -10.875035285949707
    3. '```' → logprob: -11.625035285949707
    4. '   ' → logprob: -13.500035285949707
    5. '
' → logprob: -13.750035285949707
    6. 'vs' → logprob: -14.000035285949707
    7. 'versions' → logprob: -14.125035285949707
    8. 'ver' → logprob: -14.500035285949707
    9. 'ves' → logprob: -15.000035285949707
    10. 'vr' → logprob: -15.125035285949707

Token 248: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.9385402993066236e-05
    2. 'e' → logprob: -12.000019073486328
    3. '```' → logprob: -12.375019073486328
    4. 'ves' → logprob: -12.500019073486328
    5. 'ores' → logprob: -13.875019073486328
    6. 'eses' → logprob: -14.250019073486328
    7. 'ses' → logprob: -14.375019073486328
    8. 'oes' → logprob: -14.500019073486328
    9. '
' → logprob: -14.500019073486328
    10. 'ites' → logprob: -14.625019073486328

Token 249: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.750004768371582
    3. 'def' → logprob: -13.250004768371582
    4. ' (' → logprob: -14.750004768371582
    5. '(
' → logprob: -17.2500057220459
    6. '```' → logprob: -18.3750057220459
    7. ' def' → logprob: -18.5000057220459
    8. 'n' → logprob: -19.6250057220459
    9. '(def' → logprob: -20.2500057220459
    10. '[n' → logprob: -20.3750057220459

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ' ,' → logprob: -12.375009536743164
    3. ',n' → logprob: -12.375009536743164
    4. ',
' → logprob: -15.000009536743164
    5. '(n' → logprob: -15.750009536743164
    6. ',f' → logprob: -16.500009536743164
    7. 'def' → logprob: -17.375009536743164
    8. '<|end|>' → logprob: -17.750009536743164
    9. '‌,' → logprob: -18.250009536743164
    10. '```' → logprob: -18.625009536743164

Token 251: ' inv' (ID: 1827)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.4176594913005829
    2. 'fac' → logprob: -1.9176595211029053
    3. ' fin' → logprob: -2.1676595211029053
    4. ' fac' → logprob: -2.5426595211029053
    5. 'inv' → logprob: -6.792659282684326
    6. ' inv' → logprob: -8.667659759521484
    7. 'n' → logprob: -11.042659759521484
    8. 'f' → logprob: -11.292659759521484
    9. '   ' → logprob: -11.917659759521484
    10. ' n' → logprob: -12.417659759521484

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023750975378789008
    2. ' ,' → logprob: -8.375237464904785
    3. ',f' → logprob: -12.625237464904785
    4. ',
' → logprob: -12.750237464904785
    5. '   ' → logprob: -14.875237464904785
    6. 'def' → logprob: -16.1252384185791
    7. ',

' → logprob: -16.6252384185791
    8. ',n' → logprob: -16.7502384185791
    9. '```' → logprob: -17.2502384185791
    10. ',
' → logprob: -17.3752384185791

Token 253: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.04862279072403908
    2. ' fin' → logprob: -3.0486228466033936
    3. 'f' → logprob: -10.923623085021973
    4. 'fac' → logprob: -11.673623085021973
    5. 'fn' → logprob: -12.423623085021973
    6. '   ' → logprob: -14.298623085021973
    7. 'fim' → logprob: -14.548623085021973
    8. '
' → logprob: -14.673623085021973
    9. ' ' → logprob: -14.673623085021973
    10. 'fi' → logprob: -14.923623085021973

Token 254: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.125000953674316
    3. 'f' → logprob: -16.5
    4. '
' → logprob: -17.625
    5. 'fv' → logprob: -17.875
    6. 'def' → logprob: -17.875
    7. 'vs' → logprob: -18.5
    8. '[' → logprob: -18.5
    9. '_v' → logprob: -18.75
    10. '``' → logprob: -19.5

Token 255: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6936070322990417
    2. '):' → logprob: -0.6936070322990417
    3. '):
' → logprob: -7.693606853485107
    4. '):

' → logprob: -13.068607330322266
    5. '   ' → logprob: -14.318607330322266
    6. ':' → logprob: -14.943607330322266
    7. ')' → logprob: -15.068607330322266
    8. 'def' → logprob: -15.318607330322266
    9. ' ):' → logprob: -15.443607330322266
    10. ' ):
' → logprob: -15.693607330322266

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002085308311507106
    2. ' for' → logprob: -6.627085208892822
    3. 'for' → logprob: -7.252085208892822
    4. '```' → logprob: -10.12708568572998
    5. 'def' → logprob: -11.87708568572998
    6. '	for' → logprob: -12.62708568572998
    7. ' def' → logprob: -16.252084732055664
    8. '``' → logprob: -16.377084732055664
    9. '
' → logprob: -16.752084732055664
    10. '       ' → logprob: -17.377084732055664

Token 257: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0037765735760331154
    2. 'fin' → logprob: -5.628776550292969
    3. '   ' → logprob: -8.878776550292969
    4. ' for' → logprob: -10.878776550292969
    5. 'fac' → logprob: -11.128776550292969
    6. 'def' → logprob: -13.503776550292969
    7. '```' → logprob: -14.503776550292969
    8. 'f' → logprob: -15.003776550292969
    9. ' fin' → logprob: -15.128776550292969
    10. 'fo' → logprob: -15.253776550292969

Token 258: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759438276290894
    2. 'i' → logprob: -0.8259438276290894
    3. ' ' → logprob: -13.200943946838379
    4. '	i' → logprob: -13.575943946838379
    5. '  ' → logprob: -14.950943946838379
    6. '   ' → logprob: -15.200943946838379
    7. '<|end|>' → logprob: -15.450943946838379
    8. '(i' → logprob: -15.950943946838379
    9. '```' → logprob: -16.450942993164062
    10. '<|end|>' → logprob: -16.825942993164062

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896432816982269
    2. 'in' → logprob: -2.4639642238616943
    3. '   ' → logprob: -11.338964462280273
    4. ' ' → logprob: -12.463964462280273
    5. '	in' → logprob: -12.963964462280273
    6. 'range' → logprob: -13.713964462280273
    7. '1' → logprob: -13.963964462280273
    8. '```' → logprob: -14.088964462280273
    9. 'i' → logprob: -14.338964462280273
    10. '
' → logprob: -14.463964462280273

Token 260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018203090876340866
    2. ' range' → logprob: -4.018203258514404
    3. '(range' → logprob: -10.143202781677246
    4. 'n' → logprob: -11.643202781677246
    5. '1' → logprob: -13.018202781677246
    6. '(n' → logprob: -13.643202781677246
    7. '(' → logprob: -14.268202781677246
    8. ' n' → logprob: -15.518202781677246
    9. '   ' → logprob: -15.643202781677246
    10. ' ' → logprob: -15.768202781677246

Token 261: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25196021795272827
    2. '(n' → logprob: -1.501960277557373
    3. 'n' → logprob: -11.251959800720215
    4. ',' → logprob: -11.876959800720215
    5. '1' → logprob: -12.001959800720215
    6. '2' → logprob: -12.626959800720215
    7. ',n' → logprob: -14.251959800720215
    8. ' (' → logprob: -14.376959800720215
    9. '(i' → logprob: -15.251959800720215
    10. 'range' → logprob: -16.25196075439453

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018553733825683594
    2. 'n' → logprob: -4.018553733825684
    3. '1' → logprob: -8.018553733825684
    4. ' ' → logprob: -10.018553733825684
    5. ' n' → logprob: -11.018553733825684
    6. '   ' → logprob: -12.018553733825684
    7. 'i' → logprob: -12.268553733825684
    8. '
' → logprob: -14.393553733825684
    9. '(' → logprob: -14.518553733825684
    10. '(n' → logprob: -14.518553733825684

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ',n' → logprob: -12.625005722045898
    3. ' ,' → logprob: -13.250005722045898
    4. 'n' → logprob: -16.6250057220459
    5. ',
' → logprob: -18.0000057220459
    6. '   ' → logprob: -18.2500057220459
    7. '‌,' → logprob: -18.7500057220459
    8. '(n' → logprob: -19.3750057220459
    9. '```' → logprob: -19.5000057220459
    10. '_,' → logprob: -20.1250057220459

Token 264: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052342405542731285
    2. ' n' → logprob: -5.255234241485596
    3. '	n' → logprob: -15.380233764648438
    4. '   ' → logprob: -16.255233764648438
    5. '(n' → logprob: -16.380233764648438
    6. ')n' → logprob: -18.130233764648438
    7. '```' → logprob: -18.255233764648438
    8. ',n' → logprob: -19.130233764648438
    9. '    ' → logprob: -19.255233764648438
    10. ',' → logprob: -20.255233764648438

Token 265: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.630610641877865e-06
    2. ' +' → logprob: -12.000006675720215
    3. '+n' → logprob: -16.0000057220459
    4. '+i' → logprob: -16.5000057220459
    5. 'n' → logprob: -16.6250057220459
    6. '
' → logprob: -17.0000057220459
    7. '+
' → logprob: -17.1250057220459
    8. '()+' → logprob: -17.6250057220459
    9. '```' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.3750057220459

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032614883966743946
    2. '+' → logprob: -6.253261566162109
    3. 'n' → logprob: -7.753261566162109
    4. 'i' → logprob: -8.00326156616211
    5. '```' → logprob: -8.12826156616211
    6. '(n' → logprob: -8.50326156616211
    7. ' ' → logprob: -10.62826156616211
    8. '(' → logprob: -11.00326156616211
    9. '(i' → logprob: -11.75326156616211
    10. '
' → logprob: -12.12826156616211

Token 267: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07908806949853897
    2. '):' → logprob: -2.579087972640991
    3. '):
' → logprob: -9.57908821105957
    4. '   ' → logprob: -9.70408821105957
    5. ':' → logprob: -9.82908821105957
    6. ':
' → logprob: -11.57908821105957
    7. ' ):
' → logprob: -13.32908821105957
    8. '():
' → logprob: -13.57908821105957
    9. '       ' → logprob: -14.95408821105957
    10. ']:
' → logprob: -15.07908821105957

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000227496653678827
    2. '   ' → logprob: -8.875227928161621
    3. 'fin' → logprob: -9.500227928161621
    4. ' fin' → logprob: -11.500227928161621
    5. 'f' → logprob: -14.250227928161621
    6. '```' → logprob: -14.500227928161621
    7. '      ' → logprob: -14.875227928161621
    8. '	f' → logprob: -15.125227928161621
    9. '     ' → logprob: -15.250227928161621
    10. '           ' → logprob: -15.250227928161621

Token 269: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.012932199984788895
    2. ' fin' → logprob: -4.387932300567627
    3. '   ' → logprob: -7.887932300567627
    4. '       ' → logprob: -10.887931823730469
    5. '```' → logprob: -11.512931823730469
    6. 'f' → logprob: -11.637931823730469
    7. 'fac' → logprob: -13.512931823730469
    8. 'fi' → logprob: -13.762931823730469
    9. '    ' → logprob: -13.762931823730469
    10. ' ' → logprob: -13.887931823730469

Token 270: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.0339031834737398e-05
    2. 'fv' → logprob: -11.375020027160645
    3. 'f' → logprob: -12.500020027160645
    4. '[' → logprob: -13.125020027160645
    5. '```' → logprob: -13.750020027160645
    6. '   ' → logprob: -13.875020027160645
    7. '[v' → logprob: -14.625020027160645
    8. '[i' → logprob: -15.250020027160645
    9. 'в' → logprob: -16.62502098083496
    10. '	v' → logprob: -16.87502098083496

Token 271: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.125000953674316
    3. '```' → logprob: -15.625000953674316
    4. '\[' → logprob: -16.125
    5. '[I' → logprob: -17.625
    6. '
' → logprob: -18.25
    7. ' [' → logprob: -18.5
    8. '   ' → logprob: -18.5
    9. '    
' → logprob: -18.875
    10. '=' → logprob: -19.125

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06649986654520035
    2. '=' → logprob: -2.816499948501587
    3. ']=' → logprob: -5.441499710083008
    4. ' =' → logprob: -8.691499710083008
    5. '[i' → logprob: -11.441499710083008
    6. '=i' → logprob: -12.066499710083008
    7. ' ]' → logprob: -13.316499710083008
    8. '[' → logprob: -14.191499710083008
    9. '```' → logprob: -14.316499710083008
    10. ')' → logprob: -14.941499710083008

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002613358374219388
    2. ' =' → logprob: -8.250261306762695
    3. '=
' → logprob: -16.750261306762695
    4. '=

' → logprob: -18.250261306762695
    5. '=int' → logprob: -19.125261306762695
    6. '=i' → logprob: -19.375261306762695
    7. '```' → logprob: -20.000261306762695
    8. '＝' → logprob: -20.250261306762695
    9. '=len' → logprob: -20.375261306762695
    10. '%=' → logprob: -20.375261306762695

Token 274: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.026677260175347328
    2. '(f' → logprob: -4.151677131652832
    3. ' fin' → logprob: -4.776677131652832
    4. '(fin' → logprob: -6.276677131652832
    5. ' (' → logprob: -9.151677131652832
    6. 'f' → logprob: -9.651677131652832
    7. '	f' → logprob: -10.776677131652832
    8. 'finite' → logprob: -11.151677131652832
    9. '   ' → logprob: -11.401677131652832
    10. '(' → logprob: -11.526677131652832

Token 275: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.500006675720215
    3. '[i' → logprob: -13.375006675720215
    4. '[v' → logprob: -14.250006675720215
    5. '*v' → logprob: -16.8750057220459
    6. '[f' → logprob: -17.1250057220459
    7. '
' → logprob: -17.2500057220459
    8. 'V' → logprob: -17.2500057220459
    9. '[in' → logprob: -17.2500057220459
    10. '[
' → logprob: -17.3750057220459

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -13.625000953674316
    3. '[' → logprob: -17.125001907348633
    4. '```' → logprob: -17.125001907348633
    5. '[
' → logprob: -18.750001907348633
    6. '
' → logprob: -19.125001907348633
    7. '[I' → logprob: -19.625001907348633
    8. '(i' → logprob: -19.875001907348633
    9. ' [' → logprob: -20.750001907348633
    10. '-' → logprob: -21.125001907348633

Token 277: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7954958821064793e-05
    2. ' -' → logprob: -11.000018119812012
    3. 'i' → logprob: -14.250018119812012
    4. '[i' → logprob: -14.375018119812012
    5. '-i' → logprob: -18.500017166137695
    6. '1' → logprob: -18.875017166137695
    7. '   ' → logprob: -19.500017166137695
    8. '(i' → logprob: -19.875017166137695
    9. '−' → logprob: -19.875017166137695
    10. ']' → logprob: -20.125017166137695

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -15.125001907348633
    4. '```' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.125001907348633
    6. ']' → logprob: -17.750001907348633
    7. '۱' → logprob: -17.750001907348633
    8. '-' → logprob: -18.062501907348633
    9. '    ' → logprob: -18.125001907348633
    10. '１' → logprob: -18.125001907348633

Token 279: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03081059269607067
    2. ' *' → logprob: -3.530810594558716
    3. '*i' → logprob: -6.905810356140137
    4. ']*' → logprob: -10.405810356140137
    5. ']' → logprob: -10.655810356140137
    6. '*(' → logprob: -14.405810356140137
    7. ' ' → logprob: -14.405810356140137
    8. '**' → logprob: -14.780810356140137
    9. ' ' → logprob: -15.030810356140137
    10. '*object' → logprob: -15.155810356140137

Token 280: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005542247672565281
    2. ' *' → logprob: -7.500554084777832
    3. '*(' → logprob: -13.875554084777832
    4. '*i' → logprob: -15.625554084777832
    5. '**' → logprob: -16.37555503845215
    6. '*object' → logprob: -18.25055503845215
    7. '*
' → logprob: -18.50055503845215
    8. ' ' → logprob: -18.75055503845215
    9. '*out' → logprob: -19.12555503845215
    10. '   ' → logprob: -19.25055503845215

Token 281: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -4.5491004129871726e-05
    2. ' inv' → logprob: -10.000045776367188
    3. '(inv' → logprob: -16.375045776367188
    4. '   ' → logprob: -18.375045776367188
    5. '.inv' → logprob: -19.375045776367188
    6. '_inv' → logprob: -19.625045776367188
    7. '
' → logprob: -19.625045776367188
    8. 'inf' → logprob: -21.000045776367188
    9. ' ' → logprob: -21.250045776367188
    10. '<|end|>' → logprob: -21.500045776367188

Token 282: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. 'i' → logprob: -16.5
    4. '[
' → logprob: -17.5
    5. ' [' → logprob: -18.375
    6. '(i' → logprob: -19.5
    7. '```' → logprob: -19.625
    8. '[I' → logprob: -20.375
    9. '   ' → logprob: -21.125
    10. ' i' → logprob: -21.5

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002330574905499816
    2. ')' → logprob: -6.877330780029297
    3. ']%' → logprob: -6.877330780029297
    4. '%' → logprob: -9.127330780029297
    5. '[i' → logprob: -9.377330780029297
    6. ' %' → logprob: -9.877330780029297
    7. ' ]' → logprob: -11.627330780029297
    8. ')%' → logprob: -12.627330780029297
    9. '%i' → logprob: -12.752330780029297
    10. ']
' → logprob: -13.252330780029297

Token 284: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02975349873304367
    2. '%' → logprob: -3.5297534465789795
    3. ')' → logprob: -13.529753684997559
    4. '```' → logprob: -15.029753684997559
    5. ' ' → logprob: -15.154753684997559
    6. ')%' → logprob: -15.279753684997559
    7. '   ' → logprob: -15.654753684997559
    8. '	' → logprob: -15.779753684997559
    9. '`' → logprob: -16.029752731323242
    10. ' ' → logprob: -16.029752731323242

Token 285: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007099286303855479
    2. ' MOD' → logprob: -7.2507100105285645
    3. '_MOD' → logprob: -18.750709533691406
    4. '.MOD' → logprob: -20.500709533691406
    5. 'MODULE' → logprob: -23.625709533691406
    6. '   ' → logprob: -24.125709533691406
    7. ' ' → logprob: -24.625709533691406
    8. 'MO' → logprob: -25.125709533691406
    9. 'MD' → logprob: -25.250709533691406
    10. 'M' → logprob: -25.750709533691406

Token 286: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001481174840591848
    2. '<|end|>' → logprob: -6.876481056213379
    3. '```' → logprob: -8.001481056213379
    4. '
' → logprob: -9.376481056213379
    5. '\' → logprob: -11.876481056213379
    6. 'n' → logprob: -12.501481056213379
    7. '#' → logprob: -12.501481056213379
    8. ' def' → logprob: -12.751481056213379
    9. '  
' → logprob: -12.876481056213379
    10. '    
' → logprob: -13.001481056213379

Token 288: ' fill' (ID: 6954)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.39751848578453064
    2. 'main' → logprob: -1.897518515586853
    3. ' main' → logprob: -2.6475183963775635
    4. ' comb' → logprob: -3.3975183963775635
    5. 'n' → logprob: -3.5225183963775635
    6. ' combination' → logprob: -4.397518634796143
    7. ' n' → logprob: -4.522518634796143
    8. 'mod' → logprob: -5.397518634796143
    9. 'combine' → logprob: -5.522518634796143
    10. 'bin' → logprob: -5.647518634796143

Token 289: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5939733982086182
    2. '_' → logprob: -1.7189733982086182
    3. '_arr' → logprob: -1.8439733982086182
    4. '_dp' → logprob: -2.718973398208618
    5. '_arrays' → logprob: -3.468973398208618
    6. '_array' → logprob: -4.468973159790039
    7. '_prefix' → logprob: -7.218973159790039
    8. '_suffix' → logprob: -7.718973159790039
    9. 'sum' → logprob: -8.968973159790039
    10. 'arr' → logprob: -9.843973159790039

Token 290: '_array' (ID: 8766)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.759734732331708e-05
    2. '_array' → logprob: -11.500017166137695
    3. '_' → logprob: -12.250017166137695
    4. '(_' → logprob: -14.125017166137695
    5. '(arr' → logprob: -14.125017166137695
    6. ' _' → logprob: -14.875017166137695
    7. 'arr' → logprob: -15.375017166137695
    8. '_sum' → logprob: -15.375017166137695
    9. '_arrays' → logprob: -15.875017166137695
    10. '(' → logprob: -16.875017166137695

Token 291: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002507166936993599
    2. '(' → logprob: -6.002507209777832
    3. '(sum' → logprob: -10.627507209777832
    4. ' (' → logprob: -12.002507209777832
    5. '(s' → logprob: -14.502507209777832
    6. '(
' → logprob: -15.502507209777832
    7. '(a' → logprob: -16.752506256103516
    8. '```' → logprob: -16.877506256103516
    9. 'def' → logprob: -17.002506256103516
    10. '(len' → logprob: -17.377506256103516

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9862216504407115e-05
    2. ',sum' → logprob: -11.125020027160645
    3. ' ,' → logprob: -12.500020027160645
    4. '   ' → logprob: -15.000020027160645
    5. '):' → logprob: -15.000020027160645
    6. ',s' → logprob: -15.250020027160645
    7. ',n' → logprob: -15.250020027160645
    8. 'sum' → logprob: -15.875020027160645
    9. ',
' → logprob: -16.625019073486328
    10. '_,' → logprob: -18.625019073486328

Token 293: ' sum' (ID: 4215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011062555946409702
    2. ' a' → logprob: -4.5110626220703125
    3. 'sum' → logprob: -12.261062622070312
    4. 'arr' → logprob: -12.761062622070312
    5. '   ' → logprob: -13.011062622070312
    6. ')' → logprob: -13.386062622070312
    7. 'n' → logprob: -13.636062622070312
    8. ' sum' → logprob: -14.011062622070312
    9. ' n' → logprob: -15.011062622070312
    10. ')a' → logprob: -15.386062622070312

Token 294: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -7.755678961984813e-05
    2. '_array' → logprob: -10.000077247619629
    3. 'arr' → logprob: -10.625077247619629
    4. '_' → logprob: -12.000077247619629
    5. ')_' → logprob: -14.500077247619629
    6. ' _' → logprob: -14.750077247619629
    7. '_a' → logprob: -15.750077247619629
    8. ')' → logprob: -16.125078201293945
    9. '```' → logprob: -16.125078201293945
    10. '_arrays' → logprob: -16.125078201293945

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003062646137550473
    2. ',a' → logprob: -8.250306129455566
    3. '):' → logprob: -10.875306129455566
    4. '   ' → logprob: -11.000306129455566
    5. 'a' → logprob: -12.500306129455566
    6. ' ,' → logprob: -12.750306129455566
    7. ',n' → logprob: -13.375306129455566
    8. '):
' → logprob: -14.375306129455566
    9. ',
' → logprob: -15.750306129455566
    10. 'def' → logprob: -16.125307083129883

Token 296: ' inv' (ID: 1827)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002948697656393051
    2. ' a' → logprob: -5.877948760986328
    3. 'dp' → logprob: -8.877948760986328
    4. 'arr' → logprob: -13.502948760986328
    5. ' dp' → logprob: -13.877948760986328
    6. ')' → logprob: -14.127948760986328
    7. '   ' → logprob: -14.127948760986328
    8. '):' → logprob: -15.377948760986328
    9. 'n' → logprob: -16.502948760986328
    10. '	a' → logprob: -16.502948760986328

Token 297: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038920470979064703
    2. '):' → logprob: -8.500389099121094
    3. '):
' → logprob: -9.750389099121094
    4. ' ,' → logprob: -10.000389099121094
    5. ',n' → logprob: -10.250389099121094
    6. ',a' → logprob: -10.375389099121094
    7. 'a' → logprob: -12.125389099121094
    8. '   ' → logprob: -12.875389099121094
    9. '_,' → logprob: -12.875389099121094
    10. ',
' → logprob: -13.250389099121094

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004042425658553839
    2. ':' → logprob: -5.879042625427246
    3. ' for' → logprob: -7.129042625427246
    4. '```' → logprob: -8.879042625427246
    5. '	for' → logprob: -9.504042625427246
    6. 'for' → logprob: -9.879042625427246
    7. ',' → logprob: -10.004042625427246
    8. ':
' → logprob: -10.379042625427246
    9. '    
' → logprob: -11.129042625427246
    10. ')' → logprob: -11.129042625427246

Token 299: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09121451526880264
    2. '   ' → logprob: -2.841214418411255
    3. 'sum' → logprob: -3.591214418411255
    4. ' for' → logprob: -6.716214656829834
    5. ' sum' → logprob: -11.216214179992676
    6. 'total' → logprob: -11.466214179992676
    7. 's' → logprob: -12.091214179992676
    8. '```' → logprob: -12.216214179992676
    9. 'inv' → logprob: -12.841214179992676
    10. '	for' → logprob: -13.091214179992676

Token 300: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.078912153840065
    2. 'i' → logprob: -2.5789122581481934
    3. ' ' → logprob: -11.203911781311035
    4. '   ' → logprob: -12.578911781311035
    5. '	i' → logprob: -13.203911781311035
    6. '_' → logprob: -13.828911781311035
    7. '(i' → logprob: -14.453911781311035
    8. ' range' → logprob: -14.578911781311035
    9. '  ' → logprob: -15.578911781311035
    10. '1' → logprob: -15.578911781311035

Token 301: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22574083507061005
    2. 'in' → logprob: -1.6007407903671265
    3. '   ' → logprob: -8.600740432739258
    4. ' ' → logprob: -10.225740432739258
    5. '1' → logprob: -10.850740432739258
    6. '```' → logprob: -10.975740432739258
    7. '	in' → logprob: -11.100740432739258
    8. 'In' → logprob: -11.975740432739258
    9. '  ' → logprob: -11.975740432739258
    10. '    ' → logprob: -12.100740432739258

Token 302: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1605304777622223
    2. ' range' → logprob: -1.9105304479599
    3. '(' → logprob: -8.410530090332031
    4. '(range' → logprob: -9.910530090332031
    5. '1' → logprob: -10.410530090332031
    6. ' ' → logprob: -13.910530090332031
    7. '   ' → logprob: -14.035530090332031
    8. 'in' → logprob: -14.285530090332031
    9. '2' → logprob: -14.535530090332031
    10. '[' → logprob: -15.035530090332031

Token 303: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -14.375001907348633
    3. ' (' → logprob: -14.625001907348633
    4. '(n' → logprob: -14.625001907348633
    5. ',' → logprob: -14.750001907348633
    6. '(
' → logprob: -18.250001907348633
    7. ' ' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '(i' → logprob: -18.750001907348633
    10. 'in' → logprob: -18.875001907348633

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00864659808576107
    2. '2' → logprob: -4.758646488189697
    3. ' ' → logprob: -10.883646965026855
    4. 'n' → logprob: -12.508646965026855
    5. '(' → logprob: -12.883646965026855
    6. 'i' → logprob: -13.008646965026855
    7. '
' → logprob: -13.258646965026855
    8. '   ' → logprob: -13.258646965026855
    9. '

' → logprob: -14.383646965026855
    10. ')' → logprob: -16.07114601135254

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.170270353322849e-05
    2. ',n' → logprob: -10.125061988830566
    3. ' ,' → logprob: -10.750061988830566
    4. 'n' → logprob: -17.00006103515625
    5. ',
' → logprob: -17.12506103515625
    6. '   ' → logprob: -17.37506103515625
    7. '(n' → logprob: -17.87506103515625
    8. '1' → logprob: -20.00006103515625
    9. '(' → logprob: -20.12506103515625
    10. '‌,' → logprob: -20.12506103515625

Token 306: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014167149551212788
    2. ' n' → logprob: -4.264167308807373
    3. '   ' → logprob: -12.639166831970215
    4. ' ' → logprob: -15.889166831970215
    5. '	n' → logprob: -16.26416778564453
    6. ')' → logprob: -17.01416778564453
    7. '
' → logprob: -17.13916778564453
    8. ',' → logprob: -17.13916778564453
    9. '  ' → logprob: -17.63916778564453
    10. '(n' → logprob: -17.76416778564453

Token 307: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.24179228907451e-05
    2. ' +' → logprob: -9.875061988830566
    3. '):
' → logprob: -11.875061988830566
    4. '+
' → logprob: -13.125061988830566
    5. '   ' → logprob: -13.500061988830566
    6. '):' → logprob: -15.250061988830566
    7. '()+' → logprob: -15.750061988830566
    8. '
' → logprob: -16.250062942504883
    9. '+n' → logprob: -16.500062942504883
    10. '```' → logprob: -17.250062942504883

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06454655528068542
    2. '+' → logprob: -2.814546585083008
    3. 'i' → logprob: -6.939546585083008
    4. 'n' → logprob: -7.564546585083008
    5. '   ' → logprob: -7.564546585083008
    6. '```' → logprob: -7.689546585083008
    7. ' ' → logprob: -10.439546585083008
    8. ')' → logprob: -10.564546585083008
    9. '2' → logprob: -11.689546585083008
    10. ' +' → logprob: -11.939546585083008

Token 309: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04873201996088028
    2. '):' → logprob: -3.048732042312622
    3. ':' → logprob: -9.298731803894043
    4. ':
' → logprob: -10.298731803894043
    5. '):
' → logprob: -11.423731803894043
    6. '   ' → logprob: -12.423731803894043
    7. ' ):
' → logprob: -13.048731803894043
    8. '():
' → logprob: -13.923731803894043
    9. ')' → logprob: -14.673731803894043
    10. '       ' → logprob: -15.048731803894043

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031019834568724036
    2. ' sum' → logprob: -8.750309944152832
    3. 'sum' → logprob: -8.875309944152832
    4. '   ' → logprob: -11.750309944152832
    5. '	sum' → logprob: -14.000309944152832
    6. '```' → logprob: -14.250309944152832
    7. '
' → logprob: -14.375309944152832
    8. '        
' → logprob: -14.875309944152832
    9. ',' → logprob: -14.875309944152832
    10. '	   ' → logprob: -15.125309944152832

Token 311: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.9014464616775513
    2. '       ' → logprob: -1.0264464616775513
    3. ' sum' → logprob: -1.5264464616775513
    4. '   ' → logprob: -4.026446342468262
    5. ' ' → logprob: -8.026446342468262
    6. '
' → logprob: -9.026446342468262
    7. '  ' → logprob: -10.026446342468262
    8. '	sum' → logprob: -10.026446342468262
    9. '           ' → logprob: -10.401446342468262
    10. '```' → logprob: -12.151446342468262

Token 312: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -7.584239938296378e-06
    2. '_array' → logprob: -12.000007629394531
    3. 'arr' → logprob: -14.750007629394531
    4. '[_' → logprob: -14.875007629394531
    5. '_' → logprob: -15.500007629394531
    6. ' _' → logprob: -16.37500762939453
    7. '_ar' → logprob: -16.50000762939453
    8. '[i' → logprob: -17.00000762939453
    9. '[' → logprob: -17.50000762939453
    10. '[arr' → logprob: -17.50000762939453

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.500015258789062
    3. '```' → logprob: -12.750015258789062
    4. '\[' → logprob: -13.750015258789062
    5. ' [' → logprob: -14.500015258789062
    6. '[
' → logprob: -15.500015258789062
    7. '   ' → logprob: -15.625015258789062
    8. '[I' → logprob: -16.000015258789062
    9. '
' → logprob: -16.875015258789062
    10. '=' → logprob: -17.250015258789062

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011137770488858223
    2. '=' → logprob: -4.761137962341309
    3. ']=' → logprob: -6.511137962341309
    4. ' =' → logprob: -6.886137962341309
    5. ' ]' → logprob: -11.886137962341309
    6. ']+=' → logprob: -13.136137962341309
    7. ')' → logprob: -14.011137962341309
    8. '
' → logprob: -14.386137962341309
    9. ']=(' → logprob: -15.761137962341309
    10. ']
' → logprob: -15.761137962341309

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012180940248072147
    2. ' =' → logprob: -6.751218318939209
    3. '+=' → logprob: -10.00121784210205
    4. ' +=' → logprob: -13.00121784210205
    5. '=sum' → logprob: -16.626218795776367
    6. '%=' → logprob: -16.876218795776367
    7. '=
' → logprob: -17.251218795776367
    8. '.=' → logprob: -17.376218795776367
    9. '＝' → logprob: -18.251218795776367
    10. '*=' → logprob: -18.376218795776367

Token 316: ' (' (ID: 350)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.04998971149325371
    2. 'sum' → logprob: -3.299989700317383
    3. ' (' → logprob: -4.549989700317383
    4. '   ' → logprob: -7.424989700317383
    5. '(' → logprob: -8.299989700317383
    6. ' sum' → logprob: -8.299989700317383
    7. '(s' → logprob: -9.924989700317383
    8. '       ' → logprob: -10.049989700317383
    9. '(inv' → logprob: -10.174989700317383
    10. '
' → logprob: -11.424989700317383

Token 317: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0002537104592192918
    2. ' sum' → logprob: -8.375253677368164
    3. '   ' → logprob: -11.500253677368164
    4. '       ' → logprob: -12.875253677368164
    5. '(sum' → logprob: -13.000253677368164
    6. ')' → logprob: -13.125253677368164
    7. 'inv' → logprob: -13.500253677368164
    8. '
' → logprob: -13.750253677368164
    9. '	sum' → logprob: -14.375253677368164
    10. '           ' → logprob: -14.375253677368164

Token 318: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.036524842376821e-05
    2. 'arr' → logprob: -10.250040054321289
    3. '[i' → logprob: -12.625040054321289
    4. '	arr' → logprob: -14.250040054321289
    5. '-arr' → logprob: -14.750040054321289
    6. 'Arr' → logprob: -15.625040054321289
    7. '(arr' → logprob: -16.00004005432129
    8. '[arr' → logprob: -16.00004005432129
    9. '   ' → logprob: -17.00004005432129
    10. ')' → logprob: -17.37504005432129

Token 319: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. ' [' → logprob: -16.5
    4. 'i' → logprob: -16.5
    5. '
' → logprob: -17.625
    6. '```' → logprob: -17.625
    7. '[
' → logprob: -17.875
    8. ')[' → logprob: -17.875
    9. '[I' → logprob: -17.875
    10. '(i' → logprob: -18.5

Token 320: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019418458687141538
    2. '-' → logprob: -6.251941680908203
    3. 'i' → logprob: -12.376941680908203
    4. ']' → logprob: -12.376941680908203
    5. '[' → logprob: -13.126941680908203
    6. '(i' → logprob: -13.751941680908203
    7. ' -' → logprob: -14.126941680908203
    8. '[-' → logprob: -15.001941680908203
    9. '
' → logprob: -15.376941680908203
    10. '1' → logprob: -15.751941680908203

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. 'i' → logprob: -14.12501049041748
    4. '   ' → logprob: -15.37501049041748
    5. ']' → logprob: -15.87501049041748
    6. '```' → logprob: -15.93751049041748
    7. '-' → logprob: -16.125011444091797
    8. '
' → logprob: -16.812511444091797
    9. '[i' → logprob: -17.312511444091797
    10. '(i' → logprob: -17.812511444091797

Token 322: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34844812750816345
    2. ' +' → logprob: -1.2234481573104858
    3. '+i' → logprob: -13.723447799682617
    4. ']+' → logprob: -14.848447799682617
    5. ' plus' → logprob: -14.973447799682617
    6. '1' → logprob: -15.098447799682617
    7. ']' → logprob: -15.348447799682617
    8. ' ' → logprob: -15.723447799682617
    9. ')' → logprob: -15.723447799682617
    10. ' ' → logprob: -15.973447799682617

Token 323: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519320547580719
    2. ' +' → logprob: -1.5019320249557495
    3. '+i' → logprob: -13.126932144165039
    4. '+
' → logprob: -15.376932144165039
    5. ' plus' → logprob: -15.626932144165039
    6. '   ' → logprob: -16.00193214416504
    7. '*' → logprob: -16.12693214416504
    8. '1' → logprob: -16.37693214416504
    9. '```' → logprob: -16.62693214416504
    10. ' ' → logprob: -17.25193214416504

Token 324: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00867071095854044
    2. ' inv' → logprob: -4.758670806884766
    3. '   ' → logprob: -10.383670806884766
    4. '1' → logprob: -11.633670806884766
    5. '(inv' → logprob: -12.008670806884766
    6. '(' → logprob: -13.258670806884766
    7. '
' → logprob: -13.508670806884766
    8. '2' → logprob: -13.758670806884766
    9. ' ' → logprob: -13.758670806884766
    10. 'pow' → logprob: -14.258670806884766

Token 325: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.625006675720215
    3. 'i' → logprob: -13.250006675720215
    4. '[
' → logprob: -14.625006675720215
    5. ' [' → logprob: -14.750006675720215
    6. ')' → logprob: -16.0000057220459
    7. '```' → logprob: -16.2500057220459
    8. '
' → logprob: -16.5000057220459
    9. ')[' → logprob: -17.7500057220459
    10. ' i' → logprob: -18.0000057220459

Token 326: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0007514976896345615
    2. ']' → logprob: -7.250751495361328
    3. ')' → logprob: -10.250751495361328
    4. ' ])' → logprob: -12.625751495361328
    5. ''])' → logprob: -13.750751495361328
    6. ']%' → logprob: -14.625751495361328
    7. '[i' → logprob: -14.750751495361328
    8. '))' → logprob: -15.250751495361328
    9. '*' → logprob: -15.750751495361328
    10. '})' → logprob: -16.000751495361328

Token 327: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07905877381563187
    2. ' %' → logprob: -2.579058885574341
    3. ')' → logprob: -9.079058647155762
    4. ')%' → logprob: -9.954058647155762
    5. '
' → logprob: -13.204058647155762
    6. '   ' → logprob: -13.329058647155762
    7. '%i' → logprob: -13.454058647155762
    8. '%n' → logprob: -14.579058647155762
    9. ' %=' → logprob: -15.079058647155762
    10. '%s' → logprob: -15.329058647155762

Token 328: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -21.250003814697266
    4. 'M' → logprob: -22.375003814697266
    5. '.MOD' → logprob: -23.125003814697266
    6. 'MD' → logprob: -24.125003814697266
    7. 'MO' → logprob: -24.125003814697266
    8. 'MODE' → logprob: -26.375003814697266
    9. 'MODULE' → logprob: -26.500003814697266
    10. '   ' → logprob: -26.500003814697266

Token 329: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' sum' (ID: 4215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.000170882252859883
    2. '_' → logprob: -9.125170707702637
    3. 'arr' → logprob: -9.875170707702637
    4. 'Arr' → logprob: -12.625170707702637
    5. '_array' → logprob: -13.375170707702637
    6. '	arr' → logprob: -13.500170707702637
    7. '<|end|>' → logprob: -13.750170707702637
    8. ' _' → logprob: -14.375170707702637
    9. '[' → logprob: -15.000170707702637
    10. '(arr' → logprob: -15.125170707702637

Token 333: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04628068953752518
    2. 'n' → logprob: -3.1712806224823
    3. '-' → logprob: -6.421280860900879
    4. '1' → logprob: -6.546280860900879
    5. ']' → logprob: -9.046280860900879
    6. 'i' → logprob: -10.046280860900879
    7. ' ' → logprob: -10.671280860900879
    8. ' n' → logprob: -11.921280860900879
    9. ' -' → logprob: -12.171280860900879
    10. '2' → logprob: -12.671280860900879

Token 335: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000763287884183228
    2. ' ]' → logprob: -7.875763416290283
    3. ']=' → logprob: -8.125762939453125
    4. '=' → logprob: -9.375762939453125
    5. ' =' → logprob: -13.000762939453125
    6. ']+=' → logprob: -15.875762939453125
    7. ']==' → logprob: -16.750762939453125
    8. ')' → logprob: -17.500762939453125
    9. '']' → logprob: -17.875762939453125
    10. ']>' → logprob: -18.000762939453125

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04864766076207161
    2. ' =' → logprob: -3.04864764213562
    3. '<|end|>' → logprob: -10.1736478805542
    4. ',' → logprob: -11.9236478805542
    5. ' ' → logprob: -12.0486478805542
    6. '=
' → logprob: -12.9236478805542
    7. '==' → logprob: -13.0486478805542
    8. ' ==' → logprob: -13.5486478805542
    9. ')' → logprob: -13.5486478805542
    10. ' =
' → logprob: -14.0486478805542

Token 337: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '1' → logprob: -14.500041007995605
    4. '۰' → logprob: -18.37504005432129
    5. '00' → logprob: -19.43754005432129
    6. '(' → logprob: -19.87504005432129
    7. '000' → logprob: -20.00004005432129
    8. '   ' → logprob: -20.25004005432129
    9. ' ' → logprob: -20.43754005432129
    10. '```' → logprob: -21.56254005432129

Token 338: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.0948158382670954e-05
    2. '1' → logprob: -10.625030517578125
    3. ' ' → logprob: -12.000030517578125
    4. '۰' → logprob: -16.187530517578125
    5. '(' → logprob: -16.500030517578125
    6. '-' → logprob: -16.625030517578125
    7. '00' → logprob: -17.187530517578125
    8. '000' → logprob: -17.187530517578125
    9. 'pow' → logprob: -17.437530517578125
    10. '100' → logprob: -17.937530517578125

Token 339: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' fill' (ID: 6954)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0126795107498765
    2. 'main' → logprob: -5.012679576873779
    3. ' calculate' → logprob: -6.262679576873779
    4. ' fill' → logprob: -6.512679576873779
    5. ' compute' → logprob: -6.762679576873779
    6. ' solve' → logprob: -7.637679576873779
    7. ' process' → logprob: -8.137679100036621
    8. ' def' → logprob: -8.762679100036621
    9. ' factorial' → logprob: -9.137679100036621
    10. 'calculate' → logprob: -9.262679100036621

Token 342: '_dp' (ID: 133252)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0256769061088562
    2. '_dp' → logprob: -4.150676727294922
    3. '_' → logprob: -5.275676727294922
    4. '_arr' → logprob: -6.025676727294922
    5. '_array' → logprob: -6.525676727294922
    6. '_arrays' → logprob: -8.400676727294922
    7. '_factor' → logprob: -9.400676727294922
    8. '_s' → logprob: -10.150676727294922
    9. '_fac' → logprob: -10.525676727294922
    10. 'sum' → logprob: -10.650676727294922

Token 343: '_array' (ID: 8766)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.35476648807525635
    2. '_array' → logprob: -1.3547664880752563
    3. '(' → logprob: -3.479766368865967
    4. '_arr' → logprob: -5.229766368865967
    5. '_' → logprob: -5.854766368865967
    6. '_(' → logprob: -6.729766368865967
    7. '_arrays' → logprob: -8.979766845703125
    8. '```' → logprob: -9.229766845703125
    9. ' (' → logprob: -9.979766845703125
    10. '(arr' → logprob: -10.979766845703125

Token 344: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023977462842594832
    2. '(' → logprob: -8.375239372253418
    3. 'def' → logprob: -12.375239372253418
    4. ' (' → logprob: -12.375239372253418
    5. '(
' → logprob: -15.375239372253418
    6. '```' → logprob: -15.625239372253418
    7. '\(' → logprob: -16.250240325927734
    8. 'n' → logprob: -16.375240325927734
    9. ' def' → logprob: -17.000240325927734
    10. '[n' → logprob: -17.500240325927734

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.125
    4. ',n' → logprob: -16.375
    5. ',
' → logprob: -16.75
    6. '):' → logprob: -18.0
    7. '‌,' → logprob: -18.375
    8. 'n' → logprob: -19.375
    9. ',

' → logprob: -20.0
    10. '_,' → logprob: -20.0

Token 346: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.480704128742218
    2. 'sum' → logprob: -1.4807040691375732
    3. ' sum' → logprob: -2.6057040691375732
    4. ' dp' → logprob: -2.7307040691375732
    5. 'n' → logprob: -4.605704307556152
    6. ' n' → logprob: -5.355704307556152
    7. 'inv' → logprob: -8.480704307556152
    8. '   ' → logprob: -9.605704307556152
    9. ' inv' → logprob: -9.605704307556152
    10. 'mod' → logprob: -11.105704307556152

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025782748125493526
    2. '):' → logprob: -6.002578258514404
    3. ',n' → logprob: -9.502578735351562
    4. '   ' → logprob: -11.377578735351562
    5. ')' → logprob: -11.877578735351562
    6. '):
' → logprob: -12.127578735351562
    7. ',
' → logprob: -13.502578735351562
    8. ' ,' → logprob: -14.127578735351562
    9. ':' → logprob: -15.752578735351562
    10. ',size' → logprob: -15.877578735351562

Token 348: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023441247642040253
    2. ' sum' → logprob: -4.023441314697266
    3. 'inv' → logprob: -5.398441314697266
    4. 'n' → logprob: -7.898441314697266
    5. ' inv' → logprob: -8.773441314697266
    6. ')' → logprob: -9.648441314697266
    7. 'MOD' → logprob: -9.898441314697266
    8. ' MOD' → logprob: -10.023441314697266
    9. ' n' → logprob: -10.273441314697266
    10. 'mod' → logprob: -11.398441314697266

Token 349: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.0206720617134124e-05
    2. 'arr' → logprob: -11.62501049041748
    3. '_array' → logprob: -14.50001049041748
    4. '_' → logprob: -15.62501049041748
    5. ' _' → logprob: -16.125009536743164
    6. '	arr' → logprob: -16.250009536743164
    7. '```' → logprob: -17.000009536743164
    8. ')_' → logprob: -17.125009536743164
    9. 'Arr' → logprob: -17.250009536743164
    10. ')' → logprob: -17.750009536743164

Token 350: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001713590754661709
    2. '):' → logprob: -8.875171661376953
    3. '):
' → logprob: -11.125171661376953
    4. ' ,' → logprob: -11.625171661376953
    5. ',
' → logprob: -12.250171661376953
    6. '   ' → logprob: -13.250171661376953
    7. ',n' → logprob: -14.125171661376953
    8. ' ):' → logprob: -15.375171661376953
    9. ')' → logprob: -16.000171661376953
    10. 'def' → logprob: -17.250171661376953

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08555641770362854
    2. 'for' → logprob: -2.5855565071105957
    3. ' for' → logprob: -5.085556507110596
    4. '	for' → logprob: -8.085556030273438
    5. 'dp' → logprob: -9.085556030273438
    6. 'def' → logprob: -10.460556030273438
    7. '```' → logprob: -12.585556030273438
    8. '	dp' → logprob: -13.460556030273438
    9. '
' → logprob: -13.835556030273438
    10. '[' → logprob: -14.210556030273438

Token 352: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00932144746184349
    2. ' for' → logprob: -5.134321212768555
    3. 'dp' → logprob: -6.384321212768555
    4. '   ' → logprob: -6.384321212768555
    5. '```' → logprob: -12.634321212768555
    6. ' dp' → logprob: -12.759321212768555
    7. '
' → logprob: -13.134321212768555
    8. '	for' → logprob: -13.134321212768555
    9. 'def' → logprob: -14.884321212768555
    10. 'i' → logprob: -15.259321212768555

Token 353: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6326164603233337
    2. 'i' → logprob: -0.7576164603233337
    3. ' ' → logprob: -12.13261604309082
    4. '   ' → logprob: -12.63261604309082
    5. '	i' → logprob: -12.75761604309082
    6. '_' → logprob: -14.00761604309082
    7. '_i' → logprob: -14.25761604309082
    8. '(i' → logprob: -14.63261604309082
    9. '1' → logprob: -14.63261604309082
    10. ' ' → logprob: -14.75761604309082

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026369042694568634
    2. 'in' → logprob: -3.651369094848633
    3. ' ' → logprob: -10.651369094848633
    4. '   ' → logprob: -11.276369094848633
    5. '1' → logprob: -11.401369094848633
    6. '[' → logprob: -12.151369094848633
    7. '	in' → logprob: -12.901369094848633
    8. '=' → logprob: -13.026369094848633
    9. '```' → logprob: -13.026369094848633
    10. '  ' → logprob: -13.651369094848633

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132716417312622
    2. ' range' → logprob: -1.3132716417312622
    3. '(range' → logprob: -11.813271522521973
    4. ' ' → logprob: -13.688271522521973
    5. '   ' → logprob: -14.688271522521973
    6. '(' → logprob: -14.813271522521973
    7. '1' → logprob: -14.813271522521973
    8. '	range' → logprob: -16.56327247619629
    9. '  ' → logprob: -16.93827247619629
    10. 'in' → logprob: -17.43827247619629

Token 356: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.25
    5. ',' → logprob: -17.75
    6. '(
' → logprob: -18.25
    7. 'range' → logprob: -18.375
    8. '(n' → logprob: -18.5
    9. 'def' → logprob: -18.5
    10. ' range' → logprob: -20.5

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06202425807714462
    2. '2' → logprob: -2.8120243549346924
    3. 'n' → logprob: -10.312024116516113
    4. ' ' → logprob: -11.437024116516113
    5. '3' → logprob: -12.312024116516113
    6. 'range' → logprob: -12.937024116516113
    7. '0' → logprob: -13.187024116516113
    8. '(' → logprob: -13.312024116516113
    9. '
' → logprob: -14.562024116516113
    10. 'i' → logprob: -14.562024116516113

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.901345038088039e-05
    2. ',n' → logprob: -9.875099182128906
    3. ' ,' → logprob: -10.000099182128906
    4. '   ' → logprob: -13.375099182128906
    5. 'n' → logprob: -15.125099182128906
    6. ',
' → logprob: -16.750099182128906
    7. ' ' → logprob: -17.750099182128906
    8. '_,' → logprob: -18.000099182128906
    9. '1' → logprob: -18.125099182128906
    10. '  ' → logprob: -18.375099182128906

Token 359: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0046249874867498875
    2. ' n' → logprob: -5.379624843597412
    3. '   ' → logprob: -12.37962532043457
    4. ' ' → logprob: -15.87962532043457
    5. ')' → logprob: -16.00462532043457
    6. '(n' → logprob: -16.37962532043457
    7. '	n' → logprob: -16.75462532043457
    8. ',' → logprob: -16.87962532043457
    9. '  ' → logprob: -17.50462532043457
    10. '
' → logprob: -17.75462532043457

Token 360: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.392824874026701e-05
    2. ' +' → logprob: -11.00003433227539
    3. '+
' → logprob: -11.12503433227539
    4. '):
' → logprob: -13.12503433227539
    5. '):' → logprob: -16.50003433227539
    6. '   ' → logprob: -16.50003433227539
    7. '+i' → logprob: -16.62503433227539
    8. '+n' → logprob: -17.62503433227539
    9. '()+' → logprob: -17.75003433227539
    10. '1' → logprob: -17.75003433227539

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.125210297293961e-05
    2. '+' → logprob: -9.625081062316895
    3. 'n' → logprob: -11.750081062316895
    4. 'i' → logprob: -13.000081062316895
    5. ' ' → logprob: -13.125081062316895
    6. '   ' → logprob: -13.250081062316895
    7. '```' → logprob: -14.125081062316895
    8. ')' → logprob: -16.12508201599121
    9. '(n' → logprob: -16.87508201599121
    10. '       ' → logprob: -16.87508201599121

Token 362: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21639211475849152
    2. '):
' → logprob: -2.2163920402526855
    3. ':' → logprob: -2.4663920402526855
    4. '   ' → logprob: -7.9663920402526855
    5. ':
' → logprob: -8.216392517089844
    6. '):
' → logprob: -10.966392517089844
    7. ')' → logprob: -11.091392517089844
    8. '       ' → logprob: -11.216392517089844
    9. ',' → logprob: -11.466392517089844
    10. ']:' → logprob: -12.466392517089844

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008486981969326735
    2. 'dp' → logprob: -8.000848770141602
    3. ' dp' → logprob: -8.500848770141602
    4. '   ' → logprob: -8.875848770141602
    5. '	dp' → logprob: -9.625848770141602
    6. '	' → logprob: -10.375848770141602
    7. '	   ' → logprob: -10.750848770141602
    8. '(dp' → logprob: -11.125848770141602
    9. '```' → logprob: -11.375848770141602
    10. ',' → logprob: -12.250848770141602

Token 364: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.002661266131326556
    2. ' dp' → logprob: -6.002661228179932
    3. '   ' → logprob: -8.75266170501709
    4. 'temp' → logprob: -12.25266170501709
    5. '
' → logprob: -12.37766170501709
    6. 'tmp' → logprob: -12.62766170501709
    7. '	dp' → logprob: -12.62766170501709
    8. '       ' → logprob: -13.37766170501709
    9. ' ' → logprob: -13.37766170501709
    10. 'for' → logprob: -13.87766170501709

Token 365: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.167648876318708e-05
    2. '[' → logprob: -10.125041961669922
    3. '```' → logprob: -14.000041961669922
    4. '[
' → logprob: -15.875041961669922
    5. '\[' → logprob: -16.250041961669922
    6. '   ' → logprob: -16.250041961669922
    7. '
' → logprob: -16.875041961669922
    8. '[I' → logprob: -16.875041961669922
    9. ' [' → logprob: -17.125041961669922
    10. ']' → logprob: -17.125041961669922

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045545989996753633
    2. ']=' → logprob: -8.250455856323242
    3. ' ]' → logprob: -9.375455856323242
    4. '=' → logprob: -9.500455856323242
    5. ' =' → logprob: -10.375455856323242
    6. ']+=' → logprob: -13.500455856323242
    7. ')' → logprob: -14.125455856323242
    8. '   ' → logprob: -14.500455856323242
    9. ']=(' → logprob: -15.875455856323242
    10. ']
' → logprob: -16.000455856323242

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021787881851196
    2. ' =' → logprob: -2.350217819213867
    3. '+=' → logprob: -12.100217819213867
    4. ' +=' → logprob: -12.975217819213867
    5. '%=' → logprob: -13.100217819213867
    6. '=(' → logprob: -15.100217819213867
    7. ')' → logprob: -15.350217819213867
    8. ']' → logprob: -15.725217819213867
    9. '=i' → logprob: -16.350217819213867
    10. '=int' → logprob: -16.350217819213867

Token 368: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.05822371691465378
    2. ' (' → logprob: -3.5582237243652344
    3. '(sum' → logprob: -4.558223724365234
    4. '((' → logprob: -5.183223724365234
    5. '(i' → logprob: -5.433223724365234
    6. '(' → logprob: -5.683223724365234
    7. 'sum' → logprob: -6.558223724365234
    8. 'dp' → logprob: -7.058223724365234
    9. '0' → logprob: -7.683223724365234
    10. '1' → logprob: -7.808223724365234

Token 369: 'sum' (ID: 12298)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04468661546707153
    2. '(dp' → logprob: -3.2946865558624268
    3. ' dp' → logprob: -5.919686794281006
    4. 'sum' → logprob: -6.919686794281006
    5. '(i' → logprob: -7.044686794281006
    6. '(' → logprob: -7.294686794281006
    7. 'i' → logprob: -7.919686794281006
    8. ' (' → logprob: -8.169686317443848
    9. '((' → logprob: -8.169686317443848
    10. '(sum' → logprob: -9.169686317443848

Token 370: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.0219828002154827e-05
    2. 'arr' → logprob: -11.000020027160645
    3. '[i' → logprob: -14.125020027160645
    4. '(arr' → logprob: -14.250020027160645
    5. 'dp' → logprob: -14.375020027160645
    6. '	arr' → logprob: -15.250020027160645
    7. 'Arr' → logprob: -15.750020027160645
    8. '_dp' → logprob: -15.750020027160645
    9. '[arr' → logprob: -15.750020027160645
    10. '[' → logprob: -16.12502098083496

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. 'i' → logprob: -13.125003814697266
    3. '[' → logprob: -13.750003814697266
    4. '[n' → logprob: -16.250003814697266
    5. ')' → logprob: -16.500003814697266
    6. '```' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '[j' → logprob: -17.625003814697266
    9. '(i' → logprob: -17.875003814697266
    10. ' ' → logprob: -17.875003814697266

Token 372: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2908967137336731
    2. '[i' → logprob: -1.4158966541290283
    3. '-' → logprob: -4.665896892547607
    4. '[' → logprob: -8.54089641571045
    5. ']+' → logprob: -10.41589641571045
    6. ' -' → logprob: -10.66589641571045
    7. 'i' → logprob: -11.66589641571045
    8. '   ' → logprob: -12.16589641571045
    9. ']
' → logprob: -12.41589641571045
    10. ']-' → logprob: -12.41589641571045

Token 373: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3381989002227783
    2. '+' → logprob: -1.3381989002227783
    3. ' -' → logprob: -4.213198661804199
    4. '*' → logprob: -5.088198661804199
    5. '-' → logprob: -5.963198661804199
    6. ' *' → logprob: -7.463198661804199
    7. ')' → logprob: -8.0881986618042
    8. 'dp' → logprob: -9.2131986618042
    9. '[i' → logprob: -10.0881986618042
    10. '+i' → logprob: -10.8381986618042

Token 374: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21375177800655365
    2. ' dp' → logprob: -1.7137517929077148
    3. '(dp' → logprob: -5.838751792907715
    4. 'i' → logprob: -6.088751792907715
    5. '(i' → logprob: -6.588751792907715
    6. 'sum' → logprob: -6.713751792907715
    7. ' (' → logprob: -6.713751792907715
    8. ' i' → logprob: -6.963751792907715
    9. ' sum' → logprob: -7.838751792907715
    10. '(' → logprob: -7.838751792907715

Token 375: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0005830573500134051
    2. '[i' → logprob: -7.500583171844482
    3. 'arr' → logprob: -11.125582695007324
    4. '[' → logprob: -12.000582695007324
    5. 'Arr' → logprob: -13.000582695007324
    6. '_[' → logprob: -14.250582695007324
    7. '	arr' → logprob: -14.375582695007324
    8. '-arr' → logprob: -14.375582695007324
    9. 'i' → logprob: -14.500582695007324
    10. '(i' → logprob: -14.750582695007324

Token 376: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.9160102712921798e-05
    2. '[' → logprob: -10.750029563903809
    3. 'i' → logprob: -12.000029563903809
    4. '[n' → logprob: -14.750029563903809
    5. '
' → logprob: -15.125029563903809
    6. '```' → logprob: -15.625029563903809
    7. '[
' → logprob: -15.625029563903809
    8. '   ' → logprob: -16.125028610229492
    9. '1' → logprob: -16.625028610229492
    10. '[j' → logprob: -16.750028610229492

Token 377: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16485369205474854
    2. '[i' → logprob: -2.039853572845459
    3. '-i' → logprob: -4.539853572845459
    4. '-' → logprob: -5.164853572845459
    5. ']-' → logprob: -6.164853572845459
    6. '[' → logprob: -6.539853572845459
    7. '[-' → logprob: -7.164853572845459
    8. ' -' → logprob: -7.414853572845459
    9. '])' → logprob: -8.664854049682617
    10. 'i' → logprob: -8.914854049682617

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2811577320098877
    2. '-' → logprob: -2.0311577320098877
    3. '-i' → logprob: -2.2811577320098877
    4. ' -' → logprob: -4.656157493591309
    5. 'i' → logprob: -6.156157493591309
    6. ' ' → logprob: -9.906157493591309
    7. ']' → logprob: -10.531157493591309
    8. 'minus' → logprob: -11.031157493591309
    9. '   ' → logprob: -11.531157493591309
    10. '+' → logprob: -13.031157493591309

Token 379: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.44201919436454773
    2. ' -' → logprob: -1.1920192241668701
    3. '-i' → logprob: -2.94201922416687
    4. ']' → logprob: -7.442018985748291
    5. '[i' → logprob: -8.69201946258545
    6. 'i' → logprob: -9.44201946258545
    7. '   ' → logprob: -11.31701946258545
    8. ' ' → logprob: -11.56701946258545
    9. '[' → logprob: -11.69201946258545
    10. ']-' → logprob: -11.81701946258545

Token 380: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3473013639450073
    2. '])' → logprob: -1.3473013639450073
    3. '-' → logprob: -3.472301483154297
    4. ' -' → logprob: -6.347301483154297
    5. ']-' → logprob: -7.722301483154297
    6. ')' → logprob: -9.722301483154297
    7. ' ]' → logprob: -9.972301483154297
    8. ' ])' → logprob: -10.097301483154297
    9. '   ' → logprob: -11.097301483154297
    10. '[i' → logprob: -11.597301483154297

Token 381: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6974145174026489
    2. ')' → logprob: -0.8224145174026489
    3. '-' → logprob: -2.8224143981933594
    4. ' )' → logprob: -5.947414398193359
    5. ')%' → logprob: -7.697414398193359
    6. '   ' → logprob: -8.94741439819336
    7. ']' → logprob: -10.57241439819336
    8. '+' → logprob: -10.94741439819336
    9. ' +' → logprob: -11.57241439819336
    10. '[i' → logprob: -11.57241439819336

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010181600227952003
    2. ' ' → logprob: -7.001018047332764
    3. 'sum' → logprob: -10.001018524169922
    4. ' sum' → logprob: -10.501018524169922
    5. '2' → logprob: -10.626018524169922
    6. 'MOD' → logprob: -12.751018524169922
    7. ' MOD' → logprob: -12.876018524169922
    8. '   ' → logprob: -13.501018524169922
    9. '           ' → logprob: -13.626018524169922
    10. '
' → logprob: -14.751018524169922

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032497590291313827
    2. 'sum' → logprob: -8.125325202941895
    3. ' ' → logprob: -10.875325202941895
    4. ' sum' → logprob: -12.000325202941895
    5. '2' → logprob: -13.125325202941895
    6. 'MOD' → logprob: -13.875325202941895
    7. '   ' → logprob: -14.875325202941895
    8. '           ' → logprob: -15.250325202941895
    9. 'dp' → logprob: -16.375324249267578
    10. ' MOD' → logprob: -16.625324249267578

Token 384: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008753546513617039
    2. ' )' → logprob: -5.008753776550293
    3. ')%' → logprob: -6.633753776550293
    4. '+' → logprob: -7.633753776550293
    5. ' +' → logprob: -8.383753776550293
    6. '   ' → logprob: -12.383753776550293
    7. ']' → logprob: -14.383753776550293
    8. '       ' → logprob: -14.633753776550293
    9. '）' → logprob: -14.758753776550293
    10. '%' → logprob: -14.758753776550293

Token 385: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45932430028915405
    2. '%' → logprob: -1.3343243598937988
    3. ' %' → logprob: -2.584324359893799
    4. ')%' → logprob: -3.584324359893799
    5. '+' → logprob: -7.459324359893799
    6. ' )' → logprob: -7.459324359893799
    7. '
' → logprob: -8.08432388305664
    8. ' +' → logprob: -9.45932388305664
    9. ']' → logprob: -9.58432388305664
    10. ']%' → logprob: -9.95932388305664

Token 386: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0206720617134124e-05
    2. ' MOD' → logprob: -11.50001049041748
    3. '_MOD' → logprob: -21.875009536743164
    4. '.MOD' → logprob: -23.625009536743164
    5. 'MO' → logprob: -25.125009536743164
    6. 'M' → logprob: -25.625009536743164
    7. 'mod' → logprob: -25.625009536743164
    8. '   ' → logprob: -25.875009536743164
    9. '```' → logprob: -26.375009536743164
    10. ' ' → logprob: -26.750009536743164

Token 387: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08368486166000366
    2. ' def' → logprob: -2.5836849212646484
    3. ' fill' → logprob: -6.833684921264648
    4. ' compute' → logprob: -6.958684921264648
    5. ' calculate' → logprob: -7.083684921264648
    6. 'def' → logprob: -7.333684921264648
    7. ' solve' → logprob: -7.583684921264648
    8. ' process' → logprob: -8.333684921264648
    9. 'main' → logprob: -8.958684921264648
    10. ' read' → logprob: -9.083684921264648

Token 390: '_final' (ID: 46468)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.1714307069778442
    2. '_result' → logprob: -1.4214307069778442
    3. '_dp' → logprob: -1.4214307069778442
    4. '_' → logprob: -2.9214305877685547
    5. '_answer' → logprob: -3.0464305877685547
    6. '_comb' → logprob: -3.5464305877685547
    7. '_sum' → logprob: -3.7964305877685547
    8. '_com' → logprob: -3.9214305877685547
    9. '_final' → logprob: -5.296430587768555
    10. '_value' → logprob: -5.671430587768555

Token 391: '_answer' (ID: 65702)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0643865093588829
    2. '_answer' → logprob: -2.8143866062164307
    3. '_value' → logprob: -6.314386367797852
    4. '(n' → logprob: -8.439386367797852
    5. '_ans' → logprob: -8.939386367797852
    6. '_sum' → logprob: -9.689386367797852
    7. '_' → logprob: -9.814386367797852
    8. '_output' → logprob: -10.189386367797852
    9. 'result' → logprob: -10.439386367797852
    10. '_score' → logprob: -10.689386367797852

Token 392: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032816906459629536
    2. '(' → logprob: -6.003281593322754
    3. ' (' → logprob: -7.128281593322754
    4. 'def' → logprob: -13.253281593322754
    5. '```' → logprob: -14.878281593322754
    6. '(N' → logprob: -15.128281593322754
    7. '(def' → logprob: -15.253281593322754
    8. '(
' → logprob: -15.253281593322754
    9. '\(' → logprob: -15.503281593322754
    10. '(num' → logprob: -16.37828254699707

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. '):' → logprob: -13.25000286102295
    3. ' ,' → logprob: -13.87500286102295
    4. ',
' → logprob: -17.500003814697266
    5. '‌,' → logprob: -17.500003814697266
    6. ',n' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ')' → logprob: -18.375003814697266
    9. '_,' → logprob: -19.250003814697266
    10. '،' → logprob: -19.875003814697266

Token 394: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013627301901578903
    2. ' dp' → logprob: -4.388627529144287
    3. 'sum' → logprob: -7.388627529144287
    4. 'fac' → logprob: -8.263627052307129
    5. 'n' → logprob: -9.138627052307129
    6. ' sum' → logprob: -9.638627052307129
    7. 'a' → logprob: -10.388627052307129
    8. ' n' → logprob: -11.263627052307129
    9. ' fac' → logprob: -12.013627052307129
    10. '   ' → logprob: -12.513627052307129

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. '):' → logprob: -9.75011920928955
    3. ' ,' → logprob: -9.87511920928955
    4. '):
' → logprob: -12.12511920928955
    5. '   ' → logprob: -13.12511920928955
    6. ')' → logprob: -14.25011920928955
    7. ',
' → logprob: -14.50011920928955
    8. ',n' → logprob: -15.75011920928955
    9. '_,' → logprob: -16.000118255615234
    10. 'def' → logprob: -16.750118255615234

Token 396: ' a' (ID: 261)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.28787800669670105
    2. 'n' → logprob: -1.6628780364990234
    3. 'MOD' → logprob: -3.4128780364990234
    4. 'dp' → logprob: -4.412878036499023
    5. 'sum' → logprob: -5.162878036499023
    6. ')' → logprob: -5.537878036499023
    7. 'mod' → logprob: -6.412878036499023
    8. ' fac' → logprob: -6.537878036499023
    9. ' MOD' → logprob: -6.662878036499023
    10. ' n' → logprob: -7.287878036499023

Token 397: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37934496998786926
    2. '):
' → logprob: -1.3793449401855469
    3. ',' → logprob: -2.754344940185547
    4. '):
' → logprob: -8.629344940185547
    5. ')' → logprob: -9.629344940185547
    6. '   ' → logprob: -10.629344940185547
    7. ' ):' → logprob: -11.754344940185547
    8. '):

' → logprob: -12.004344940185547
    9. ' ,' → logprob: -12.004344940185547
    10. ' ):
' → logprob: -13.754344940185547

Token 398: ' fac' (ID: 3513)
  Prédit: ' fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fac' → logprob: -0.5684502124786377
    2. 'fac' → logprob: -1.0684502124786377
    3. 'MOD' → logprob: -3.1934502124786377
    4. ' MOD' → logprob: -3.3184502124786377
    5. 'sum' → logprob: -5.568449974060059
    6. ' sum' → logprob: -5.568449974060059
    7. ' inv' → logprob: -6.443449974060059
    8. ')' → logprob: -6.568449974060059
    9. 'inv' → logprob: -7.193449974060059
    10. 'mod' → logprob: -7.193449974060059

Token 399: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1844574213027954
    2. ',' → logprob: -2.309457302093506
    3. '):
' → logprob: -2.684457302093506
    4. ')' → logprob: -8.059457778930664
    5. '):
' → logprob: -8.184457778930664
    6. ' ):' → logprob: -8.684457778930664
    7. '):

' → logprob: -9.809457778930664
    8. '   ' → logprob: -10.934457778930664
    9. ' ,' → logprob: -11.309457778930664
    10. ' ' → logprob: -12.434457778930664

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004755257163196802
    2. ':' → logprob: -6.879755020141602
    3. 'answer' → logprob: -7.004755020141602
    4. ' ans' → logprob: -7.129755020141602
    5. ' answer' → logprob: -7.504755020141602
    6. 'result' → logprob: -7.754755020141602
    7. ' result' → logprob: -8.129755020141602
    8. ' res' → logprob: -8.754755020141602
    9. '    
' → logprob: -9.129755020141602
    10. 'res' → logprob: -9.254755020141602

Token 401: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.18903768062591553
    2. 'ans' (adapté à ' ans') → logprob: -1.9390376806259155
    3. 'result' → logprob: -3.939037799835205
    4. 'res' → logprob: -5.189037799835205
    5. '   ' → logprob: -6.439037799835205
    6. ' answer' → logprob: -7.064037799835205
    7. ' ans' → logprob: -7.189037799835205
    8. ' result' → logprob: -10.189037322998047
    9. '```' → logprob: -10.189037322998047
    10. 'total' → logprob: -10.314037322998047

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5781369209289551
    2. '=' → logprob: -0.8281369209289551
    3. '   ' → logprob: -6.203136920928955
    4. '[' → logprob: -9.453136444091797
    5. '_' → logprob: -10.328136444091797
    6. ',' → logprob: -11.328136444091797
    7. ')' → logprob: -11.578136444091797
    8. '  ' → logprob: -11.578136444091797
    9. '    ' → logprob: -11.703136444091797
    10. ' ' → logprob: -11.828136444091797

Token 403: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011471228674054146
    2. '1' → logprob: -4.761471271514893
    3. ' ' → logprob: -5.886471271514893
    4. 'fac' → logprob: -10.261470794677734
    5. ' fac' → logprob: -10.636470794677734
    6. 'dp' → logprob: -12.136470794677734
    7. 'a' → logprob: -12.636470794677734
    8. '   ' → logprob: -12.636470794677734
    9. '(' → logprob: -13.386470794677734
    10. ' dp' → logprob: -14.261470794677734

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05540066212415695
    2. '1' → logprob: -2.9304006099700928
    3. 'fac' → logprob: -8.180400848388672
    4. 'dp' → logprob: -8.430400848388672
    5. '(' → logprob: -11.680400848388672
    6. 'a' → logprob: -12.305400848388672
    7. 'fact' → logprob: -13.430400848388672
    8. '(dp' → logprob: -13.680400848388672
    9. ' ' → logprob: -13.930400848388672
    10. 'ans' → logprob: -14.180400848388672

Token 405: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21283212304115295
    2. '
' → logprob: -2.21283221244812
    3. '<|end|>' → logprob: -2.83783221244812
    4. ' for' → logprob: -4.712831974029541
    5. '    
' → logprob: -4.962831974029541
    6. '	for' → logprob: -6.212831974029541
    7. '  
' → logprob: -6.837831974029541
    8. ' 
' → logprob: -6.962831974029541
    9. 'for' → logprob: -7.212831974029541
    10. '<|end|>' → logprob: -7.462831974029541

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05640924349427223
    2. ' for' → logprob: -3.5564093589782715
    3. '<|end|>' → logprob: -3.9314093589782715
    4. '
' → logprob: -5.9314093589782715
    5. '	for' → logprob: -6.6814093589782715
    6. 'for' → logprob: -6.9314093589782715
    7. '    
' → logprob: -7.8064093589782715
    8. '    ' → logprob: -8.181408882141113
    9. ' ' → logprob: -8.306408882141113
    10. '  ' → logprob: -8.556408882141113

Token 407: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00019138160860165954
    2. '   ' → logprob: -9.000191688537598
    3. ' for' → logprob: -9.625191688537598
    4. '
' → logprob: -13.625191688537598
    5. '```' → logprob: -15.000191688537598
    6. '    
' → logprob: -16.50019073486328
    7. 'factor' → logprob: -16.50019073486328
    8. '	for' → logprob: -17.12519073486328
    9. 'fo' → logprob: -17.62519073486328
    10. 'f' → logprob: -18.00019073486328

Token 408: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08900927007198334
    2. ' i' → logprob: -2.4640092849731445
    3. 'k' → logprob: -10.339009284973145
    4. ' ' → logprob: -11.714009284973145
    5. '   ' → logprob: -11.839009284973145
    6. '	i' → logprob: -12.089009284973145
    7. '_i' → logprob: -12.714009284973145
    8. ' k' → logprob: -12.714009284973145
    9. 'x' → logprob: -12.839009284973145
    10. '```' → logprob: -13.214009284973145

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01529619749635458
    2. 'in' → logprob: -4.26529598236084
    3. ',' → logprob: -7.64029598236084
    4. ' ' → logprob: -7.64029598236084
    5. ' ,' → logprob: -9.39029598236084
    6. '_' → logprob: -11.26529598236084
    7. '	in' → logprob: -11.39029598236084
    8. '   ' → logprob: -11.51529598236084
    9. '```' → logprob: -12.01529598236084
    10. '  ' → logprob: -12.26529598236084

Token 410: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0889887586236
    2. ' range' → logprob: -2.463988780975342
    3. '(range' → logprob: -11.213988304138184
    4. 'a' → logprob: -11.338988304138184
    5. '   ' → logprob: -12.088988304138184
    6. ' ' → logprob: -12.088988304138184
    7. ' a' → logprob: -12.963988304138184
    8. '
' → logprob: -13.213988304138184
    9. '  ' → logprob: -13.213988304138184
    10. 'n' → logprob: -13.338988304138184

Token 411: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47461098432540894
    2. '(' → logprob: -0.9746109843254089
    3. ' (' → logprob: -8.849611282348633
    4. '1' → logprob: -8.974611282348633
    5. ',' → logprob: -9.099611282348633
    6. '(
' → logprob: -9.224611282348633
    7. 'n' → logprob: -10.099611282348633
    8. '   ' → logprob: -12.849611282348633
    9. ' ' → logprob: -13.099611282348633
    10. ' ,' → logprob: -13.224611282348633

Token 412: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14277209341526031
    2. '1' → logprob: -2.0177721977233887
    3. '0' → logprob: -10.01777172088623
    4. ' n' → logprob: -10.64277172088623
    5. '(n' → logprob: -11.51777172088623
    6. '   ' → logprob: -11.76777172088623
    7. '2' → logprob: -12.51777172088623
    8. '(' → logprob: -13.01777172088623
    9. ' ' → logprob: -14.51777172088623
    10. ')n' → logprob: -14.58027172088623

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012749579036608338
    2. ' ,' → logprob: -9.500127792358398
    3. ',n' → logprob: -9.875127792358398
    4. '   ' → logprob: -14.000127792358398
    5. 'n' → logprob: -15.750127792358398
    6. '(n' → logprob: -17.3751277923584
    7. '‌,' → logprob: -17.6251277923584
    8. ',
' → logprob: -17.7501277923584
    9. ',len' → logprob: -17.8751277923584
    10. '_,' → logprob: -18.3751277923584

Token 414: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.438573680294212e-06
    2. ' n' → logprob: -12.375005722045898
    3. '   ' → logprob: -13.875005722045898
    4. 'len' → logprob: -15.750005722045898
    5. '(n' → logprob: -16.3750057220459
    6. '
' → logprob: -17.6250057220459
    7. '	n' → logprob: -17.8750057220459
    8. '```' → logprob: -18.5000057220459
    9. '  ' → logprob: -19.0000057220459
    10. '[n' → logprob: -19.3750057220459

Token 415: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.314625690924004e-05
    2. ' +' → logprob: -9.625073432922363
    3. '+
' → logprob: -12.875073432922363
    4. '):
' → logprob: -13.250073432922363
    5. '   ' → logprob: -14.125073432922363
    6. '```' → logprob: -14.375073432922363
    7. '()+' → logprob: -14.500073432922363
    8. '):' → logprob: -15.250073432922363
    9. ',' → logprob: -15.875073432922363
    10. '+i' → logprob: -16.125072479248047

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. '+' → logprob: -10.875021934509277
    3. '```' → logprob: -12.750021934509277
    4. ' ' → logprob: -15.250021934509277
    5. '   ' → logprob: -15.625021934509277
    6. '2' → logprob: -16.750022888183594
    7. '``' → logprob: -17.125022888183594
    8. ')' → logprob: -17.875022888183594
    9. 'i' → logprob: -18.000022888183594
    10. '-' → logprob: -18.000022888183594

Token 417: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011006083339452744
    2. '):
' → logprob: -4.636005878448486
    3. ':' → logprob: -6.761005878448486
    4. ',' → logprob: -9.636006355285645
    5. '   ' → logprob: -11.136006355285645
    6. '):
' → logprob: -13.011006355285645
    7. ' ):' → logprob: -13.011006355285645
    8. '}:' → logprob: -13.261006355285645
    9. ']:' → logprob: -13.386006355285645
    10. ')' → logprob: -14.136006355285645

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002613358374219388
    2. '<|end|>' → logprob: -8.625261306762695
    3. ',' → logprob: -10.125261306762695
    4. '   ' → logprob: -11.250261306762695
    5. '+' → logprob: -11.750261306762695
    6. '<|end|>' → logprob: -13.000261306762695
    7. '      ' → logprob: -13.125261306762695
    8. ' ans' → logprob: -13.375261306762695
    9. '```' → logprob: -13.375261306762695
    10. '        
' → logprob: -13.625261306762695

Token 419: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.39879676699638367
    2. ' ans' → logprob: -1.148796796798706
    3. '       ' → logprob: -4.523796558380127
    4. '	ans' → logprob: -7.898796558380127
    5. 'temp' → logprob: -9.023797035217285
    6. '   ' → logprob: -9.523797035217285
    7. '(ans' → logprob: -9.648797035217285
    8. 'if' → logprob: -9.898797035217285
    9. 'x' → logprob: -10.023797035217285
    10. ' if' → logprob: -10.273797035217285

Token 420: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3217052221298218
    2. ' +=' → logprob: -1.3217052221298218
    3. '=' → logprob: -4.946705341339111
    4. ' =' → logprob: -6.696705341339111
    5. ' ^=' → logprob: -10.696704864501953
    6. '   ' → logprob: -11.196704864501953
    7. '```' → logprob: -11.696704864501953
    8. ']+=' → logprob: -12.196704864501953
    9. '+' → logprob: -12.321704864501953
    10. '+=(' → logprob: -12.446704864501953

Token 421: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.47409817576408386
    2. ' (' → logprob: -0.9740982055664062
    3. '(' → logprob: -11.474098205566406
    4. '(answer' → logprob: -13.099098205566406
    5. '(op' → logprob: -13.474098205566406
    6. '   ' → logprob: -13.599098205566406
    7. '(dp' → logprob: -13.974098205566406
    8. '(acc' → logprob: -14.099098205566406
    9. '(mod' → logprob: -14.224098205566406
    10. '(arr' → logprob: -14.599098205566406

Token 422: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00021843716967850924
    2. '(ans' → logprob: -8.500218391418457
    3. ' ans' → logprob: -11.125218391418457
    4. '	ans' → logprob: -15.625218391418457
    5. '
' → logprob: -18.000219345092773
    6. '_ans' → logprob: -18.250219345092773
    7. 'answer' → logprob: -18.875219345092773
    8. 'ANS' → logprob: -19.000219345092773
    9. '   ' → logprob: -19.125219345092773
    10. 'dp' → logprob: -19.875219345092773

Token 423: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141343772411346
    2. '+' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.076414108276367
    4. '+i' → logprob: -17.076414108276367
    5. ' *' → logprob: -17.201414108276367
    6. ' +
' → logprob: -17.451414108276367
    7. ' ' → logprob: -17.576414108276367
    8. '+a' → logprob: -17.826414108276367
    9. '＋' → logprob: -18.076414108276367
    10. '*' → logprob: -18.201414108276367

Token 424: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9351518154144287
    2. ' dp' → logprob: -0.9351518154144287
    3. ' a' → logprob: -2.1851518154144287
    4. 'a' → logprob: -2.3101518154144287
    5. 'fac' → logprob: -6.435152053833008
    6. ' fac' → logprob: -6.810152053833008
    7. '(dp' → logprob: -8.560152053833008
    8. ' (' → logprob: -9.685152053833008
    9. ' ' → logprob: -9.810152053833008
    10. '(a' → logprob: -9.810152053833008

Token 425: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.507972572464496e-05
    2. '[a' → logprob: -9.87509536743164
    3. '[' → logprob: -10.62509536743164
    4. '[n' → logprob: -11.75009536743164
    5. 'i' → logprob: -11.87509536743164
    6. '```' → logprob: -13.62509536743164
    7. ')[' → logprob: -14.00009536743164
    8. ')' → logprob: -14.12509536743164
    9. '[
' → logprob: -14.50009536743164
    10. 'a' → logprob: -15.62509536743164

Token 426: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20331789553165436
    2. '-' → logprob: -1.7033178806304932
    3. ' -' → logprob: -6.453318119049072
    4. ']*' → logprob: -8.078317642211914
    5. '[i' → logprob: -11.453317642211914
    6. '   ' → logprob: -13.328317642211914
    7. '[' → logprob: -13.953317642211914
    8. '*' → logprob: -14.203317642211914
    9. ' ]' → logprob: -14.328317642211914
    10. '1' → logprob: -14.578317642211914

Token 427: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05826060473918915
    2. ' a' → logprob: -3.308260679244995
    3. 'fac' → logprob: -3.933260679244995
    4. ' fac' → logprob: -8.058260917663574
    5. '   ' → logprob: -9.933260917663574
    6. '(a' → logprob: -10.808260917663574
    7. '	a' → logprob: -11.433260917663574
    8. ' ' → logprob: -11.808260917663574
    9. '  ' → logprob: -12.308260917663574
    10. 'fact' → logprob: -12.683260917663574

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[n' → logprob: -13.375001907348633
    3. '[' → logprob: -15.000001907348633
    4. '[-' → logprob: -16.125001907348633
    5. 'i' → logprob: -16.250001907348633
    6. '[a' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.250001907348633
    8. '[j' → logprob: -19.125001907348633
    9. '(i' → logprob: -19.750001907348633
    10. '```' → logprob: -20.000001907348633

Token 429: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007831261493265629
    2. '[i' → logprob: -4.88283109664917
    3. ' -' → logprob: -8.632831573486328
    4. '[' → logprob: -11.132831573486328
    5. '])' → logprob: -11.882831573486328
    6. ']' → logprob: -12.007831573486328
    7. '[
' → logprob: -12.132831573486328
    8. '[-' → logprob: -12.257831573486328
    9. '   ' → logprob: -13.257831573486328
    10. '-i' → logprob: -13.632831573486328

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.687501907348633
    4. '```' → logprob: -15.875001907348633
    5. ']' → logprob: -17.000001907348633
    6. '0' → logprob: -17.125001907348633
    7. ')' → logprob: -17.687501907348633
    8. '۱' → logprob: -18.000001907348633
    9. '2' → logprob: -18.062501907348633
    10. '１' → logprob: -18.125001907348633

Token 431: '])' (ID: 4636)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20860417187213898
    2. ' *' → logprob: -2.083604097366333
    3. ')' → logprob: -3.083604097366333
    4. '%' → logprob: -4.583604335784912
    5. ' %' → logprob: -5.458604335784912
    6. ')%' → logprob: -6.208604335784912
    7. '   ' → logprob: -7.583604335784912
    8. ')*' → logprob: -7.833604335784912
    9. ' )' → logprob: -7.833604335784912
    10. ' ' → logprob: -10.083603858947754

Token 432: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17361705005168915
    2. '%' → logprob: -2.048617124557495
    3. ' *' → logprob: -3.673617124557495
    4. '*' → logprob: -5.548616886138916
    5. '   ' → logprob: -7.048616886138916
    6. ')' → logprob: -8.423617362976074
    7. ')%' → logprob: -9.923617362976074
    8. ' ' → logprob: -11.548617362976074
    9. '  ' → logprob: -11.673617362976074
    10. '    ' → logprob: -12.173617362976074

Token 433: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '_MOD' → logprob: -20.3750057220459
    4. '   ' → logprob: -20.6250057220459
    5. '.MOD' → logprob: -20.7500057220459
    6. '```' → logprob: -23.0000057220459
    7. '
' → logprob: -23.7500057220459
    8. '10' → logprob: -24.5000057220459
    9. 'MO' → logprob: -24.7500057220459
    10. '`' → logprob: -24.8750057220459

Token 434: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028625354170799255
    2. 'return' → logprob: -6.002862453460693
    3. ' return' → logprob: -8.627862930297852
    4. '	return' → logprob: -9.377862930297852
    5. '
' → logprob: -9.502862930297852
    6. '```' → logprob: -10.502862930297852
    7. '    
' → logprob: -11.252862930297852
    8. '       ' → logprob: -12.877862930297852
    9. '<|end|>' → logprob: -13.502862930297852
    10. ' ' → logprob: -13.627862930297852

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006737153977155685
    2. 'return' → logprob: -5.006737232208252
    3. ' return' → logprob: -11.131736755371094
    4. '```' → logprob: -12.256736755371094
    5. '	return' → logprob: -13.381736755371094
    6. '       ' → logprob: -15.631736755371094
    7. '
' → logprob: -15.756736755371094
    8. 'print' → logprob: -15.881736755371094
    9. '    
' → logprob: -16.006736755371094
    10. 'ans' → logprob: -16.756736755371094

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033157882280647755
    2. '   ' → logprob: -5.7533159255981445
    3. 'ans' → logprob: -9.878315925598145
    4. ' return' → logprob: -9.878315925598145
    5. '```' → logprob: -11.003315925598145
    6. 'print' → logprob: -11.128315925598145
    7. '    
' → logprob: -13.253315925598145
    8. '	return' → logprob: -13.753315925598145
    9. 'answer' → logprob: -14.753315925598145
    10. '
' → logprob: -15.003315925598145

Token 437: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20141547918319702
    2. ' ans' → logprob: -1.7014155387878418
    3. '(ans' → logprob: -13.201415061950684
    4. '	ans' → logprob: -14.826415061950684
    5. '_ans' → logprob: -19.076416015625
    6. ' ' → logprob: -20.326416015625
    7. 'answer' → logprob: -21.076416015625
    8. '   ' → logprob: -21.326416015625
    9. 'anst' → logprob: -21.451416015625
    10. ' ' → logprob: -22.076416015625

Token 438: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.747814349073451e-05
    2. ' ans' → logprob: -11.000017166137695
    3. '(ans' → logprob: -14.375017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '	ans' → logprob: -16.875017166137695
    6. '
' → logprob: -17.250017166137695
    7. 'fac' → logprob: -18.125017166137695
    8. 'answer' → logprob: -18.750017166137695
    9. 'anst' → logprob: -20.375017166137695
    10. '_ans' → logprob: -20.625017166137695

Token 439: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.126991406083107
    2. '*' → logprob: -2.1269915103912354
    3. ')' → logprob: -10.001991271972656
    4. '+' → logprob: -12.126991271972656
    5. ' +' → logprob: -12.251991271972656
    6. '%' → logprob: -12.251991271972656
    7. ' )' → logprob: -14.876991271972656
    8. ' ' → logprob: -15.001991271972656
    9. ',' → logprob: -15.126991271972656
    10. '*f' → logprob: -15.126991271972656

Token 440: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.08897164463996887
    2. ' fac' → logprob: -2.4639716148376465
    3. '   ' → logprob: -11.588972091674805
    4. 'fin' → logprob: -12.338972091674805
    5. 'f' → logprob: -12.713972091674805
    6. 'pow' → logprob: -12.838972091674805
    7. 'inv' → logprob: -13.088972091674805
    8. 'fact' → logprob: -13.213972091674805
    9. '.fac' → logprob: -13.213972091674805
    10. ' ' → logprob: -13.838972091674805

Token 441: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. 'n' → logprob: -16.625001907348633
    4. '[-' → logprob: -19.625001907348633
    5. '
' → logprob: -20.000001907348633
    6. '```' → logprob: -20.250001907348633
    7. '(n' → logprob: -20.500001907348633
    8. '[
' → logprob: -20.750001907348633
    9. '	n' → logprob: -21.625001907348633
    10. ' [' → logprob: -21.875001907348633

Token 442: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10420947521924973
    2. '])' → logprob: -2.3542094230651855
    3. ')%' → logprob: -5.6042094230651855
    4. ']' → logprob: -8.729209899902344
    5. ' )' → logprob: -10.104209899902344
    6. '）' → logprob: -10.354209899902344
    7. ']%' → logprob: -10.729209899902344
    8. '})' → logprob: -10.854209899902344
    9. '[' → logprob: -11.604209899902344
    10. '%' → logprob: -12.104209899902344

Token 443: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0486418716609478
    2. ' %' → logprob: -3.0486419200897217
    3. ')' → logprob: -10.1736421585083
    4. ')%' → logprob: -11.6736421585083
    5. '   ' → logprob: -12.7986421585083
    6. '	' → logprob: -13.7986421585083
    7. '```' → logprob: -14.1736421585083
    8. '[' → logprob: -14.2986421585083
    9. 'def' → logprob: -14.4236421585083
    10. ']%' → logprob: -14.7986421585083

Token 444: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.306760805164231e-05
    2. ' MOD' → logprob: -11.25001335144043
    3. '_MOD' → logprob: -21.62501335144043
    4. 'MO' → logprob: -22.12501335144043
    5. '.MOD' → logprob: -22.12501335144043
    6. '(M' → logprob: -22.87501335144043
    7. '(' → logprob: -24.00001335144043
    8. '```' → logprob: -24.37501335144043
    9. 'MD' → logprob: -25.37501335144043
    10. '(mod' → logprob: -25.50001335144043

Token 445: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9452241659164429
    2. '<|end|>' → logprob: -1.0702241659164429
    3. '```' → logprob: -1.5702241659164429
    4. '#' → logprob: -2.9452242851257324
    5. 'n' → logprob: -5.445224285125732
    6. '<|end|>' → logprob: -6.695224285125732
    7. 'print' → logprob: -7.820224285125732
    8. 'a' → logprob: -7.820224285125732
    9. '\' → logprob: -7.945224285125732
    10. '...' → logprob: -8.695223808288574

Token 447: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10020849853754044
    2. 'main' → logprob: -2.3502085208892822
    3. 'def' → logprob: -13.475208282470703
    4. ' def' → logprob: -15.350208282470703
    5. ' solve' → logprob: -15.600208282470703
    6. 'solve' → logprob: -17.350208282470703
    7. '	main' → logprob: -18.100208282470703
    8. '_main' → logprob: -18.100208282470703
    9. ' process' → logprob: -20.225208282470703
    10. 'process' → logprob: -20.725208282470703

Token 448: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.158350151963532e-05
    2. '():
' → logprob: -9.750061988830566
    3. ' ():' → logprob: -12.750061988830566
    4. '():
' → logprob: -15.750061988830566
    5. '()' → logprob: -16.12506103515625
    6. '():

' → logprob: -17.12506103515625
    7. '(' → logprob: -18.62506103515625
    8. ':' → logprob: -19.50006103515625
    9. '_' → logprob: -20.75006103515625
    10. '(":' → logprob: -20.87506103515625

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024371830746531487
    2. 'n' → logprob: -3.774371862411499
    3. '(n' → logprob: -7.52437162399292
    4. '()' → logprob: -8.399372100830078
    5. ' n' → logprob: -8.649372100830078
    6. '	n' → logprob: -8.899372100830078
    7. '```' → logprob: -10.524372100830078
    8. '():
' → logprob: -11.899372100830078
    9. 'def' → logprob: -12.649372100830078
    10. ',n' → logprob: -12.649372100830078

Token 450: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0037292989436537027
    2. '   ' → logprob: -5.753729343414307
    3. ' n' → logprob: -7.503729343414307
    4. '	n' → logprob: -15.378728866577148
    5. '```' → logprob: -15.878728866577148
    6. '  ' → logprob: -19.00372886657715
    7. ' ' → logprob: -19.37872886657715
    8. '
' → logprob: -20.37872886657715
    9. '(n' → logprob: -20.37872886657715
    10. '``' → logprob: -21.87872886657715

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. '=' → logprob: -10.875031471252441
    3. ' ,' → logprob: -11.875031471252441
    4. ' =' → logprob: -12.875031471252441
    5. ',a' → logprob: -13.250031471252441
    6. ',n' → logprob: -14.875031471252441
    7. ',
' → logprob: -16.000030517578125
    8. '‌,' → logprob: -16.375030517578125
    9. ',int' → logprob: -17.500030517578125
    10. '   ' → logprob: -17.750030517578125

Token 452: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141421258449554
    2. ' a' → logprob: -1.7014142274856567
    3. '	a' → logprob: -14.701414108276367
    4. '_a' → logprob: -14.826414108276367
    5. ',a' → logprob: -16.826414108276367
    6. ' ' → logprob: -18.201414108276367
    7. '[a' → logprob: -18.826414108276367
    8. '    ' → logprob: -19.326414108276367
    9. ' а' → logprob: -19.451414108276367
    10. '*a' → logprob: -19.576414108276367

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693408131599426
    2. '=' → logprob: -2.126934051513672
    3. '   ' → logprob: -12.376934051513672
    4. ',' → logprob: -13.626934051513672
    5. ' ' → logprob: -15.251934051513672
    6. ' =
' → logprob: -16.001934051513672
    7. '    ' → logprob: -16.126934051513672
    8. ')' → logprob: -16.751934051513672
    9. '  ' → logprob: -16.751934051513672
    10. '	' → logprob: -17.001934051513672

Token 454: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12692810595035553
    2. ' read' → logprob: -2.1269280910491943
    3. '	read' → logprob: -18.501928329467773
    4. '(read' → logprob: -21.251928329467773
    5. '   ' → logprob: -21.376928329467773
    6. '_read' → logprob: -22.251928329467773
    7. '.read' → logprob: -23.126928329467773
    8. '  ' → logprob: -24.126928329467773
    9. ' ' → logprob: -24.376928329467773
    10. 'r' → logprob: -25.251928329467773

Token 455: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.505351095460355e-05
    2. '()' → logprob: -10.125075340270996
    3. '_' → logprob: -10.375075340270996
    4. '_inputs' → logprob: -13.250075340270996
    5. '(' → logprob: -14.625075340270996
    6. '_line' → logprob: -15.000075340270996
    7. '()
' → logprob: -15.000075340270996
    8. 'input' → logprob: -15.000075340270996
    9. ' _' → logprob: -16.00007438659668
    10. '_in' → logprob: -16.50007438659668

Token 456: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011528628878295422
    2. '   ' → logprob: -4.761528491973877
    3. '    
' → logprob: -6.636528491973877
    4. '```' → logprob: -7.011528491973877
    5. '<|end|>' → logprob: -8.636528968811035
    6. '
' → logprob: -8.636528968811035
    7. '  
' → logprob: -9.011528968811035
    8. 'sum' → logprob: -9.886528968811035
    9. '	
' → logprob: -10.011528968811035
    10. '	sum' → logprob: -10.511528968811035

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015943869948387146
    2. 'sum' → logprob: -9.12515926361084
    3. ' sum' → logprob: -10.62515926361084
    4. '	sum' → logprob: -10.75015926361084
    5. '```' → logprob: -12.75015926361084
    6. '(sum' → logprob: -13.62515926361084
    7. '	s' → logprob: -15.37515926361084
    8. ',sum' → logprob: -15.37515926361084
    9. '    ' → logprob: -16.250160217285156
    10. '   ' → logprob: -17.000160217285156

Token 458: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.008642228320240974
    2. ' sum' → logprob: -4.758642196655273
    3. '   ' → logprob: -10.508642196655273
    4. '	sum' → logprob: -15.508642196655273
    5. '(sum' → logprob: -16.008642196655273
    6. ' ' → logprob: -17.508642196655273
    7. '.sum' → logprob: -18.758642196655273
    8. '  ' → logprob: -19.133642196655273
    9. '_sum' → logprob: -19.133642196655273
    10. '```' → logprob: -19.508642196655273

Token 459: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.5048530030981055e-06
    2. 'arr' → logprob: -14.000001907348633
    3. '_' → logprob: -14.875001907348633
    4. '_array' → logprob: -15.750001907348633
    5. '_arrays' → logprob: -17.125001907348633
    6. ' _' → logprob: -17.875001907348633
    7. '	arr' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.375001907348633
    9. 'Arr' → logprob: -19.000001907348633
    10. '_,' → logprob: -19.875001907348633

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.75000286102295
    3. ',n' → logprob: -14.00000286102295
    4. '‌,' → logprob: -14.37500286102295
    5. ',
' → logprob: -16.375001907348633
    6. '=' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '_,' → logprob: -18.000001907348633
    9. ',\
' → logprob: -18.250001907348633
    10. '‍,' → logprob: -18.500001907348633

Token 461: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3132619559764862
    2. 'dp' → logprob: -1.3132619857788086
    3. '	dp' → logprob: -16.313261032104492
    4. '_dp' → logprob: -16.313261032104492
    5. ' ' → logprob: -19.813261032104492
    6. '(dp' → logprob: -19.813261032104492
    7. 'DP' → logprob: -20.438261032104492
    8. '   ' → logprob: -21.438261032104492
    9. '.dp' → logprob: -21.563261032104492
    10. '    ' → logprob: -22.438261032104492

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. '=' → logprob: -14.250000953674316
    3. ' ,' → logprob: -14.375000953674316
    4. ' =' → logprob: -17.750001907348633
    5. '‌,' → logprob: -18.000001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. ',f' → logprob: -18.125001907348633
    8. ',
' → logprob: -18.625001907348633
    9. ',p' → logprob: -19.000001907348633
    10. '_,' → logprob: -19.125001907348633

Token 463: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.006715370807796717
    2. ' fac' → logprob: -5.006715297698975
    3. '_fac' → logprob: -18.631715774536133
    4. 'Fac' → logprob: -19.631715774536133
    5. '.fac' → logprob: -20.006715774536133
    6. 'fas' → logprob: -20.756715774536133
    7. '   ' → logprob: -20.881715774536133
    8. 'fab' → logprob: -21.756715774536133
    9. ' ' → logprob: -22.131715774536133
    10. 'facet' → logprob: -22.256715774536133

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ' ,' → logprob: -16.0
    3. ',f' → logprob: -18.875
    4. 'fin' → logprob: -19.75
    5. ',\
' → logprob: -20.375
    6. '_,' → logprob: -20.5
    7. '=' → logprob: -20.875
    8. ',
' → logprob: -20.875
    9. '‌,' → logprob: -21.0
    10. '```' → logprob: -21.625

Token 465: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.008614926598966122
    2. ' fin' → logprob: -4.758615016937256
    3. 'f' → logprob: -15.758614540100098
    4. 'fn' → logprob: -17.258615493774414
    5. 'Fin' → logprob: -17.258615493774414
    6. 'fac' → logprob: -17.383615493774414
    7. 'finite' → logprob: -18.133615493774414
    8. ' ' → logprob: -18.633615493774414
    9. 'fen' → logprob: -18.633615493774414
    10. 'inv' → logprob: -18.758615493774414

Token 466: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.465036105713807e-06
    2. 'inv' → logprob: -12.000007629394531
    3. '```' → logprob: -14.375007629394531
    4. '
' → logprob: -15.875007629394531
    5. 'в' → logprob: -16.12500762939453
    6. 'def' → logprob: -16.25000762939453
    7. '=' → logprob: -16.87500762939453
    8. '_inv' → logprob: -17.00000762939453
    9. 'f' → logprob: -17.12500762939453
    10. 'var' → logprob: -17.37500762939453

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ' ,' → logprob: -14.375000953674316
    3. 'inv' → logprob: -15.750000953674316
    4. '=' → logprob: -18.625
    5. ',in' → logprob: -20.375
    6. ',
' → logprob: -20.625
    7. '(inv' → logprob: -20.75
    8. ' inv' → logprob: -20.875
    9. '_,' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 468: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.10020667314529419
    2. ' inv' → logprob: -2.3502066135406494
    3. '(inv' → logprob: -17.72520637512207
    4. '   ' → logprob: -17.97520637512207
    5. '_inv' → logprob: -18.10020637512207
    6. ' ' → logprob: -18.72520637512207
    7. '.inv' → logprob: -18.85020637512207
    8. '    ' → logprob: -19.72520637512207
    9. 'inf' → logprob: -20.97520637512207
    10. '       ' → logprob: -21.22520637512207

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. '=create' → logprob: -14.818148612976074
    4. ',' → logprob: -15.568148612976074
    5. '<|end|>' → logprob: -15.693148612976074
    6. ' ' → logprob: -16.068147659301758
    7. '   ' → logprob: -16.068147659301758
    8. '=get' → logprob: -16.568147659301758
    9. ')' → logprob: -17.318147659301758
    10. '＝' → logprob: -17.693147659301758

Token 470: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0067156096920371056
    2. ' init' → logprob: -5.006715774536133
    3. '	init' → logprob: -17.006715774536133
    4. '(init' → logprob: -17.256715774536133
    5. '_init' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.756715774536133
    7. '.init' → logprob: -19.381715774536133
    8. ' ' → logprob: -19.881715774536133
    9. 'inite' → logprob: -20.131715774536133
    10. ':init' → logprob: -20.631715774536133

Token 471: '_arrays' (ID: 182581)
  Prédit: '_arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arrays' → logprob: -8.65707261255011e-06
    2. '_arr' → logprob: -12.375008583068848
    3. '_array' → logprob: -13.125008583068848
    4. 'arrays' → logprob: -13.375008583068848
    5. 'Arrays' → logprob: -15.125008583068848
    6. '(n' → logprob: -15.375008583068848
    7. '```' → logprob: -16.250009536743164
    8. 'arr' → logprob: -16.750009536743164
    9. '(arr' → logprob: -17.125009536743164
    10. ' arrays' → logprob: -17.250009536743164

Token 472: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -12.12501335144043
    3. 'n' → logprob: -12.25001335144043
    4. '   ' → logprob: -13.37501335144043
    5. ' (' → logprob: -13.75001335144043
    6. ' n' → logprob: -17.12501335144043
    7. '	n' → logprob: -18.00001335144043
    8. '
' → logprob: -18.75001335144043
    9. '(
' → logprob: -18.87501335144043
    10. '```' → logprob: -18.87501335144043

Token 473: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003181994194164872
    2. ')
' → logprob: -5.7531819343566895
    3. '   ' → logprob: -12.503182411193848
    4. ')
' → logprob: -14.753182411193848
    5. ' )' → logprob: -16.75318145751953
    6. '),' → logprob: -18.00318145751953
    7. ')\' → logprob: -18.75318145751953
    8. ')

' → logprob: -18.75318145751953
    9. ').' → logprob: -19.12818145751953
    10. ')`
' → logprob: -19.25318145751953

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039110030978918076
    2. 'compute' → logprob: -3.289109945297241
    3. ' compute' → logprob: -7.03911018371582
    4. '
' → logprob: -9.03911018371582
    5. '```' → logprob: -9.66411018371582
    6. '    
' → logprob: -12.16411018371582
    7. '_compute' → logprob: -13.53911018371582
    8. '.compute' → logprob: -14.03911018371582
    9. '<|end|>' → logprob: -15.03911018371582
    10. '	com' → logprob: -15.53911018371582

Token 475: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.38967639207839966
    2. '   ' → logprob: -1.1396763324737549
    3. ' compute' → logprob: -5.889676570892334
    4. '
' → logprob: -11.139676094055176
    5. '```' → logprob: -11.514676094055176
    6. '	com' → logprob: -12.139676094055176
    7. '(com' → logprob: -14.139676094055176
    8. 'com' → logprob: -14.264676094055176
    9. '_compute' → logprob: -14.389676094055176
    10. '.compute' → logprob: -14.389676094055176

Token 476: '_fac' (ID: 121369)
  Prédit: '_fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fac' → logprob: -6.704273118884885e-07
    2. 'fac' → logprob: -14.875000953674316
    3. '_fact' → logprob: -15.625000953674316
    4. '_' → logprob: -18.375
    5. '_fc' → logprob: -18.5
    6. '_factor' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. '}_' → logprob: -20.125
    9. '_fin' → logprob: -20.25
    10. '\' → logprob: -20.625

Token 477: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.011385434307157993
    2. 't' → logprob: -4.511385440826416
    3. 'tor' → logprob: -8.886384963989258
    4. '_iv' → logprob: -9.511384963989258
    5. '_fac' → logprob: -10.761384963989258
    6. 'inv' → logprob: -11.011384963989258
    7. '_compute' → logprob: -11.136384963989258
    8. '_inf' → logprob: -11.136384963989258
    9. 'or' → logprob: -11.636384963989258
    10. '_init' → logprob: -12.136384963989258

Token 478: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -14.125001907348633
    4. ' ' → logprob: -18.625001907348633
    5. '```' → logprob: -19.000001907348633
    6. '(len' → logprob: -19.375001907348633
    7. ')(' → logprob: -19.625001907348633
    8. '(
' → logprob: -20.000001907348633
    9. 'n' → logprob: -20.000001907348633
    10. '
' → logprob: -20.062501907348633

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.15310683415737e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -17.00002098083496
    4. '‌,' → logprob: -18.50002098083496
    5. '   ' → logprob: -19.00002098083496
    6. '
' → logprob: -19.12502098083496
    7. ',f' → logprob: -19.75002098083496
    8. 'fac' → logprob: -20.37502098083496
    9. ')' → logprob: -20.37502098083496
    10. '‍,' → logprob: -20.87502098083496

Token 480: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.014165511354804039
    2. ' fac' → logprob: -4.26416540145874
    3. '   ' → logprob: -14.264165878295898
    4. '
' → logprob: -15.139165878295898
    5. 'fas' → logprob: -15.514165878295898
    6. ' ' → logprob: -15.639165878295898
    7. 'f' → logprob: -16.0141658782959
    8. 'fact' → logprob: -16.0141658782959
    9. 'fa' → logprob: -16.0141658782959
    10. '_fac' → logprob: -16.3891658782959

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -14.500000953674316
    3. ',
' → logprob: -20.25
    4. 'inv' → logprob: -20.625
    5. '‌,' → logprob: -22.375
    6. '،' → logprob: -22.75
    7. '
' → logprob: -22.875
    8. '```' → logprob: -23.25
    9. ')' → logprob: -23.625
    10. '(inv' → logprob: -23.75

Token 482: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.005234121344983578
    2. ' inv' → logprob: -5.255234241485596
    3. '
' → logprob: -16.005233764648438
    4. '(inv' → logprob: -16.380233764648438
    5. 'inf' → logprob: -16.880233764648438
    6. '_inv' → logprob: -17.630233764648438
    7. '.inv' → logprob: -18.130233764648438
    8. ' ' → logprob: -18.255233764648438
    9. '   ' → logprob: -18.505233764648438
    10. '```' → logprob: -19.005233764648438

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',f' → logprob: -13.500004768371582
    4. ',
' → logprob: -17.0000057220459
    5. '‌,' → logprob: -19.8750057220459
    6. ',\
' → logprob: -20.5000057220459
    7. ')' → logprob: -20.6250057220459
    8. '```' → logprob: -20.7500057220459
    9. '   ' → logprob: -21.3750057220459
    10. ',

' → logprob: -21.6250057220459

Token 484: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.011062674224376678
    2. ' fin' → logprob: -4.5110626220703125
    3. 'f' → logprob: -11.386062622070312
    4. 'fn' → logprob: -13.136062622070312
    5. 'fac' → logprob: -15.261062622070312
    6. 'fun' → logprob: -15.386062622070312
    7. 'fi' → logprob: -15.636062622070312
    8. 'finite' → logprob: -15.761062622070312
    9. '   ' → logprob: -16.011062622070312
    10. 'Fin' → logprob: -16.261062622070312

Token 485: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. 'f' → logprob: -14.875000953674316
    3. 'fv' → logprob: -16.125001907348633
    4. '```' → logprob: -16.250001907348633
    5. ',v' → logprob: -17.000001907348633
    6. ')' → logprob: -17.125001907348633
    7. ',' → logprob: -17.125001907348633
    8. '[v' → logprob: -17.625001907348633
    9. '_v' → logprob: -17.875001907348633
    10. ')v' → logprob: -18.000001907348633

Token 486: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759437084197998
    2. ')
' → logprob: -0.8259437084197998
    3. ')
' → logprob: -13.200943946838379
    4. '   ' → logprob: -13.450943946838379
    5. ')

' → logprob: -14.075943946838379
    6. ' )
' → logprob: -16.325942993164062
    7. '),' → logprob: -17.700942993164062
    8. ' )' → logprob: -17.825942993164062
    9. '
' → logprob: -18.450942993164062
    10. ')`
' → logprob: -18.825942993164062

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.0020742492051795e-05
    2. '```' → logprob: -10.625049591064453
    3. 'fill' → logprob: -10.750049591064453
    4. ' fill' → logprob: -12.625049591064453
    5. '	fill' → logprob: -14.375049591064453
    6. '
' → logprob: -15.625049591064453
    7. '    
' → logprob: -16.125049591064453
    8. '(fill' → logprob: -16.625049591064453
    9. '.fill' → logprob: -16.750049591064453
    10. '       ' → logprob: -17.625049591064453

Token 488: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' (adapté à ' fill') → logprob: -0.002638556994497776
    2. ' fill' → logprob: -6.252638339996338
    3. '   ' → logprob: -7.252638339996338
    4. '
' → logprob: -14.377638816833496
    5. '	fill' → logprob: -15.002638816833496
    6. ' ' → logprob: -15.627638816833496
    7. '  ' → logprob: -16.12763786315918
    8. '.fill' → logprob: -16.37763786315918
    9. '```' → logprob: -17.00263786315918
    10. '(fill' → logprob: -17.25263786315918

Token 489: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. 'sum' → logprob: -13.750000953674316
    3. '_' → logprob: -19.375001907348633
    4. ' sum' → logprob: -20.875001907348633
    5. '_fill' → logprob: -21.625001907348633
    6. '_s' → logprob: -23.125001907348633
    7. '=sum' → logprob: -23.250001907348633
    8. '__' → logprob: -23.375001907348633
    9. '(sum' → logprob: -23.625001907348633
    10. '=' → logprob: -23.750001907348633

Token 490: '_array' (ID: 8766)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00409656623378396
    2. '_array' → logprob: -6.004096508026123
    3. '_arr' → logprob: -6.504096508026123
    4. 'arr' → logprob: -9.504096984863281
    5. 'sum' → logprob: -10.004096984863281
    6. 'array' → logprob: -13.004096984863281
    7. '_arrays' → logprob: -16.50409698486328
    8. 'a' → logprob: -16.62909698486328
    9. '```' → logprob: -17.37909698486328
    10. 'f' → logprob: -17.62909698486328

Token 491: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -10.500031471252441
    3. ' (' → logprob: -12.750031471252441
    4. '```' → logprob: -14.250031471252441
    5. '(
' → logprob: -16.125030517578125
    6. 'n' → logprob: -18.000030517578125
    7. ',' → logprob: -18.000030517578125
    8. ',n' → logprob: -18.250030517578125
    9. '<|end|>' → logprob: -18.375030517578125
    10. '<n' → logprob: -18.562530517578125

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',
' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.6250057220459
    5. ',sum' → logprob: -18.2500057220459
    6. ',n' → logprob: -18.7500057220459
    7. '
' → logprob: -20.6250057220459
    8. ')' → logprob: -20.6250057220459
    9. '```' → logprob: -21.0000057220459
    10. '‌,' → logprob: -21.1250057220459

Token 493: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4741823077201843
    2. ' sum' → logprob: -0.9741823077201843
    3. 'inv' → logprob: -9.47418212890625
    4. ' inv' → logprob: -10.47418212890625
    5. '	sum' → logprob: -17.09918212890625
    6. 'n' → logprob: -17.34918212890625
    7. ' ' → logprob: -17.47418212890625
    8. '   ' → logprob: -18.34918212890625
    9. '(sum' → logprob: -18.34918212890625
    10. ' n' → logprob: -18.34918212890625

Token 494: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0010356683051213622
    2. 'arr' → logprob: -6.876035690307617
    3. 'Arr' → logprob: -13.751035690307617
    4. '	arr' → logprob: -14.376035690307617
    5. '-arr' → logprob: -14.751035690307617
    6. ',' → logprob: -15.126035690307617
    7. '   ' → logprob: -15.626035690307617
    8. 'v' → logprob: -15.751035690307617
    9. '```' → logprob: -17.126035690307617
    10. '_array' → logprob: -17.126035690307617

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ' ,' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.00000286102295
    4. ',
' → logprob: -16.625003814697266
    5. ')' → logprob: -18.375003814697266
    6. ',n' → logprob: -18.625003814697266
    7. ',sum' → logprob: -19.625003814697266
    8. '‌,' → logprob: -20.125003814697266
    9. ',

' → logprob: -20.500003814697266
    10. '```' → logprob: -20.750003814697266

Token 496: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00861456897109747
    2. ' inv' → logprob: -4.758614540100098
    3. 'inf' → logprob: -17.883615493774414
    4. '(inv' → logprob: -18.508615493774414
    5. ' ' → logprob: -18.633615493774414
    6. '
' → logprob: -19.258615493774414
    7. '   ' → logprob: -19.383615493774414
    8. '.inv' → logprob: -19.883615493774414
    9. '_inv' → logprob: -19.883615493774414
    10. '```' → logprob: -20.258615493774414

Token 497: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001637300301808864
    2. ')
' → logprob: -8.750164031982422
    3. '   ' → logprob: -12.250164031982422
    4. ' )' → logprob: -15.000164031982422
    5. ')

' → logprob: -17.750164031982422
    6. ')
' → logprob: -18.000164031982422
    7. '),' → logprob: -18.000164031982422
    8. '))' → logprob: -19.375164031982422
    9. '())' → logprob: -19.625164031982422
    10. ').' → logprob: -19.750164031982422

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.534558552724775e-05
    2. 'fill' → logprob: -11.375025749206543
    3. ' fill' → logprob: -11.625025749206543
    4. '	fill' → logprob: -12.875025749206543
    5. '```' → logprob: -13.250025749206543
    6. '
' → logprob: -16.125024795532227
    7. '    
' → logprob: -16.250024795532227
    8. '.fill' → logprob: -16.250024795532227
    9. '(fill' → logprob: -16.250024795532227
    10. '   ' → logprob: -17.250024795532227

Token 499: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' (adapté à ' fill') → logprob: -0.0005225312197580934
    2. '   ' → logprob: -8.25052261352539
    3. ' fill' → logprob: -8.25052261352539
    4. '	fill' → logprob: -15.75052261352539
    5. ' ' → logprob: -18.12552261352539
    6. '  ' → logprob: -18.62552261352539
    7. '```' → logprob: -18.62552261352539
    8. '.fill' → logprob: -19.00052261352539
    9. '(fill' → logprob: -19.00052261352539
    10. '
' → logprob: -19.25052261352539

Token 500: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.8624639324116288e-06
    2. '_sum' → logprob: -14.125001907348633
    3. 'dp' → logprob: -14.750001907348633
    4. '_df' → logprob: -15.125001907348633
    5. '_dt' → logprob: -16.125001907348633
    6. '_dm' → logprob: -17.250001907348633
    7. '_ds' → logprob: -17.625001907348633
    8. '_dn' → logprob: -17.750001907348633
    9. '_dc' → logprob: -17.875001907348633
    10. '_pd' → logprob: -18.125001907348633

Token 501: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -4.584861744660884e-05
    2. '_arr' → logprob: -10.000045776367188
    3. 'array' → logprob: -15.500045776367188
    4. 'arr' → logprob: -15.625045776367188
    5. '_arrays' → logprob: -17.500045776367188
    6. '_ARRAY' → logprob: -18.250045776367188
    7. 'Array' → logprob: -19.250045776367188
    8. '_' → logprob: -20.875045776367188
    9. '```' → logprob: -21.500045776367188
    10. '_Array' → logprob: -21.750045776367188

Token 502: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5928495486150496e-05
    2. ' (' → logprob: -11.750016212463379
    3. '(' → logprob: -12.125016212463379
    4. '```' → logprob: -13.500016212463379
    5. '_array' → logprob: -14.000016212463379
    6. '_n' → logprob: -16.000015258789062
    7. 'n' → logprob: -16.750015258789062
    8. '<n' → logprob: -17.000015258789062
    9. '_sum' → logprob: -17.625015258789062
    10. '[n' → logprob: -17.875015258789062

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016217712312936783
    2. '(n' → logprob: -4.7662177085876465
    3. ',n' → logprob: -4.8912177085876465
    4. 'n' → logprob: -10.516218185424805
    5. '```' → logprob: -11.141218185424805
    6. ',
' → logprob: -11.766218185424805
    7. ' ,' → logprob: -12.016218185424805
    8. '(' → logprob: -13.141218185424805
    9. '[n' → logprob: -13.891218185424805
    10. '   ' → logprob: -14.266218185424805

Token 504: ' dp' (ID: 21546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' n' → logprob: -8.750158309936523
    3. '```' → logprob: -17.625158309936523
    4. '   ' → logprob: -18.500158309936523
    5. ')' → logprob: -19.625158309936523
    6. '	n' → logprob: -20.125158309936523
    7. ' ' → logprob: -20.500158309936523
    8. '(n' → logprob: -20.500158309936523
    9. '
' → logprob: -20.500158309936523
    10. 'dp' → logprob: -21.250158309936523

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013932115398347378
    2. '(n' → logprob: -7.1263933181762695
    3. ',n' → logprob: -7.5013933181762695
    4. ' ,' → logprob: -10.62639331817627
    5. 'n' → logprob: -11.75139331817627
    6. ')' → logprob: -13.75139331817627
    7. ',
' → logprob: -13.75139331817627
    8. '```' → logprob: -13.87639331817627
    9. '   ' → logprob: -14.75139331817627
    10. '(' → logprob: -14.75139331817627

Token 506: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.836499985889532e-05
    2. ' n' → logprob: -9.7500581741333
    3. ')' → logprob: -17.375059127807617
    4. ')n' → logprob: -19.000059127807617
    5. '```' → logprob: -19.250059127807617
    6. '	n' → logprob: -19.250059127807617
    7. '   ' → logprob: -19.375059127807617
    8. '(n' → logprob: -19.625059127807617
    9. ')
' → logprob: -21.250059127807617
    10. 'sum' → logprob: -21.250059127807617

Token 507: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.6312321753939614e-05
    2. 'arr' → logprob: -11.125036239624023
    3. '_array' → logprob: -11.500036239624023
    4. ',' → logprob: -12.000036239624023
    5. ',_' → logprob: -13.000036239624023
    6. '_,' → logprob: -14.125036239624023
    7. 'Arr' → logprob: -14.375036239624023
    8. '	arr' → logprob: -14.750036239624023
    9. '_' → logprob: -15.125036239624023
    10. '_arrays' → logprob: -15.125036239624023

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011342883110046387
    2. ')
' → logprob: -4.511343002319336
    3. '   ' → logprob: -8.136343002319336
    4. ')
' → logprob: -14.136343002319336
    5. ' )' → logprob: -14.261343002319336
    6. ',' → logprob: -15.011343002319336
    7. ' ' → logprob: -15.886343002319336
    8. ')n' → logprob: -16.261343002319336
    9. ')

' → logprob: -16.636343002319336
    10. '
' → logprob: -17.011343002319336

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.591415437171236e-05
    2. 'ans' → logprob: -9.500096321105957
    3. 'answer' → logprob: -12.000096321105957
    4. '```' → logprob: -12.125096321105957
    5. 'print' → logprob: -12.500096321105957
    6. '	ans' → logprob: -12.750096321105957
    7. ' ans' → logprob: -13.125096321105957
    8. '    
' → logprob: -15.250096321105957
    9. '   ' → logprob: -15.625096321105957
    10. 'result' → logprob: -15.750096321105957

Token 510: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004194744396954775
    2. 'answer' (adapté à ' answer') → logprob: -5.754194736480713
    3. 'print' → logprob: -7.504194736480713
    4. 'result' → logprob: -8.004195213317871
    5. '   ' → logprob: -9.754195213317871
    6. ' ans' → logprob: -9.754195213317871
    7. 'res' → logprob: -11.504195213317871
    8. '```' → logprob: -12.379195213317871
    9. '	ans' → logprob: -14.254195213317871
    10. '(ans' → logprob: -14.879195213317871

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523152768611908
    2. '=' → logprob: -0.898152768611908
    3. '_' → logprob: -11.523152351379395
    4. '   ' → logprob: -12.148152351379395
    5. ')' → logprob: -12.273152351379395
    6. '  ' → logprob: -12.898152351379395
    7. 's' → logprob: -13.023152351379395
    8. ':' → logprob: -14.398152351379395
    9. '(' → logprob: -14.523152351379395
    10. '_=' → logprob: -14.773152351379395

Token 512: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.029750604182481766
    2. ' compute' → logprob: -3.5297505855560303
    3. 'computer' → logprob: -16.65475082397461
    4. '_compute' → logprob: -17.40475082397461
    5. '.compute' → logprob: -17.52975082397461
    6. '(com' → logprob: -18.02975082397461
    7. ' computer' → logprob: -19.15475082397461
    8. '   ' → logprob: -19.52975082397461
    9. 'comput' → logprob: -20.15475082397461
    10. 'com' → logprob: -20.40475082397461

Token 513: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -4.5491004129871726e-05
    2. 'final' → logprob: -10.000045776367188
    3. 'Final' → logprob: -17.250045776367188
    4. ' final' → logprob: -19.000045776367188
    5. '```' → logprob: -19.000045776367188
    6. '_finalize' → logprob: -19.000045776367188
    7. '_FINAL' → logprob: -20.000045776367188
    8. '_' → logprob: -20.125045776367188
    9. '_Final' → logprob: -20.500045776367188
    10. '__' → logprob: -20.875045776367188

Token 514: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -4.429896944202483e-05
    2. 'answer' → logprob: -10.125043869018555
    3. '_ans' → logprob: -12.625043869018555
    4. 'Answer' → logprob: -14.750043869018555
    5. '_' → logprob: -15.875043869018555
    6. '_final' → logprob: -16.500043869018555
    7. '_answers' → logprob: -16.625043869018555
    8. '(answer' → logprob: -16.750043869018555
    9. ' answer' → logprob: -16.875043869018555
    10. '_code' → logprob: -17.125043869018555

Token 515: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -12.000012397766113
    3. ' (' → logprob: -12.125012397766113
    4. 'n' → logprob: -15.375012397766113
    5. '```' → logprob: -15.500012397766113
    6. '(
' → logprob: -15.875012397766113
    7. '   ' → logprob: -17.125011444091797
    8. '<n' → logprob: -17.125011444091797
    9. ' n' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.375011444091797

Token 516: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03446812182664871
    2. ',' → logprob: -3.534468173980713
    3. '(' → logprob: -5.534468173980713
    4. ',n' → logprob: -8.159467697143555
    5. '(
' → logprob: -8.534467697143555
    6. ' (' → logprob: -9.159467697143555
    7. 'n' → logprob: -10.034467697143555
    8. ')' → logprob: -10.159467697143555
    9. '   ' → logprob: -10.159467697143555
    10. ')(
' → logprob: -11.034467697143555

Token 517: ' dp' (ID: 21546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.5954712075181305e-05
    2. ' n' → logprob: -10.250036239624023
    3. ')' → logprob: -15.375036239624023
    4. ')n' → logprob: -15.625036239624023
    5. '   ' → logprob: -16.750036239624023
    6. '(n' → logprob: -17.250036239624023
    7. '	n' → logprob: -17.250036239624023
    8. '
' → logprob: -19.000036239624023
    9. ')
' → logprob: -20.000036239624023
    10. '_n' → logprob: -20.500036239624023

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01196701917797327
    2. ',n' → logprob: -4.511967182159424
    3. ' ,' → logprob: -7.886967182159424
    4. '   ' → logprob: -8.011966705322266
    5. ',a' → logprob: -9.386966705322266
    6. 'n' → logprob: -9.511966705322266
    7. '(n' → logprob: -10.136966705322266
    8. 'a' → logprob: -11.511966705322266
    9. ' n' → logprob: -13.136966705322266
    10. ')' → logprob: -14.511966705322266

Token 519: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.836499985889532e-05
    2. ' a' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.000059127807617
    4. '	a' → logprob: -19.125059127807617
    5. '_a' → logprob: -20.875059127807617
    6. ')a' → logprob: -21.500059127807617
    7. 'а' → logprob: -21.625059127807617
    8. ',a' → logprob: -22.250059127807617
    9. '(a' → logprob: -22.375059127807617
    10. '#a' → logprob: -22.750059127807617

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004421127669047564
    2. ' ,' → logprob: -8.250442504882812
    3. ',n' → logprob: -8.625442504882812
    4. 'n' → logprob: -14.000442504882812
    5. ',
' → logprob: -15.750442504882812
    6. ')' → logprob: -16.125442504882812
    7. '   ' → logprob: -16.125442504882812
    8. ' n' → logprob: -16.375442504882812
    9. '(n' → logprob: -17.750442504882812
    10. ',f' → logprob: -18.875442504882812

Token 521: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.005233763717114925
    2. ' fac' → logprob: -5.2552337646484375
    3. '_fac' → logprob: -18.005233764648438
    4. '.fac' → logprob: -18.505233764648438
    5. 'Fac' → logprob: -20.380233764648438
    6. 'fas' → logprob: -20.880233764648438
    7. ')' → logprob: -21.130233764648438
    8. '   ' → logprob: -21.255233764648438
    9. 'facet' → logprob: -21.505233764648438
    10. 'f' → logprob: -21.755233764648438

Token 522: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0621432401239872
    2. ')
' → logprob: -2.812143325805664
    3. '   ' → logprob: -9.812143325805664
    4. ')n' → logprob: -9.812143325805664
    5. '(n' → logprob: -10.937143325805664
    6. ',' → logprob: -10.937143325805664
    7. ')

' → logprob: -11.437143325805664
    8. ')
' → logprob: -11.812143325805664
    9. 'n' → logprob: -12.312143325805664
    10. ',n' → logprob: -12.687143325805664

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002108118060277775
    2. 'print' → logprob: -8.500210762023926
    3. ' print' → logprob: -12.500210762023926
    4. '```' → logprob: -13.375210762023926
    5. '    
' → logprob: -13.625210762023926
    6. '
' → logprob: -14.625210762023926
    7. '	print' → logprob: -15.625210762023926
    8. 'return' → logprob: -16.625211715698242
    9. ' return' → logprob: -17.625211715698242
    10. '       ' → logprob: -17.625211715698242

Token 524: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00045926711754873395
    2. '   ' → logprob: -8.000459671020508
    3. ' print' → logprob: -9.000459671020508
    4. '```' → logprob: -14.750459671020508
    5. '	print' → logprob: -16.250459671020508
    6. 'return' → logprob: -19.250459671020508
    7. '_print' → logprob: -20.500459671020508
    8. '#print' → logprob: -20.625459671020508
    9. '``' → logprob: -21.000459671020508
    10. '
' → logprob: -21.250459671020508

Token 525: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.00012582694762386382
    2. '(' → logprob: -9.000125885009766
    3. 'answer' → logprob: -13.750125885009766
    4. ' (' → logprob: -14.375125885009766
    5. '(ans' → logprob: -14.500125885009766
    6. '()' → logprob: -16.000125885009766
    7. '(question' → logprob: -17.000125885009766
    8. '	answer' → logprob: -17.500125885009766
    9. '(argument' → logprob: -18.500125885009766
    10. '(
' → logprob: -18.500125885009766

Token 526: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. '()' → logprob: -12.250009536743164
    3. '())' → logprob: -12.375009536743164
    4. ' )' → logprob: -15.875009536743164
    5. ')
' → logprob: -16.000009536743164
    6. ')`' → logprob: -16.000009536743164
    7. '))' → logprob: -16.375009536743164
    8. '`)' → logprob: -16.500009536743164
    9. '')' → logprob: -17.250009536743164
    10. '")' → logprob: -18.125009536743164

Token 527: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.126521035796031e-05
    2. 'main' → logprob: -10.125091552734375
    3. '```' → logprob: -10.875091552734375
    4. ' if' → logprob: -11.000091552734375
    5. '
' → logprob: -11.500091552734375
    6. '<|end|>' → logprob: -13.125091552734375
    7. '#' → logprob: -13.750091552734375
    8. '\' → logprob: -13.875091552734375
    9. '\n' → logprob: -14.250091552734375
    10. '  
' → logprob: -16.250091552734375

Token 528: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 526
Tokens correctement prédits (1ère position, stricte): 284
Tokens correctement prédits (1ère position, avec adaptation): 304
Tokens correctement prédits (top 10): 478
Précision stricte (1ère position): 53.99%
Précision adaptée (1ère position): 57.79%
Précision (top 10): 90.87%
================================================================================
