================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 998244353

def create_list(size, default):
    return [default] * (size + 1)

def initialize_factorial_list(n, mod):
    f = create_list(n, 0)
    f[0] = 1
    return f

def fill_factorial_list(f, n, mod):
    b = 1
    for i in range(1, n + 1):
        b = (b * i) % mod
        f[i] = b
    return f

def initialize_inv_list(n):
    return create_list(n, 0)

def compute_inverse(a, mod):
    return pow(a, -1, mod)

def fill_inv_list(inv, f, n, mod):
    b = compute_inverse(f[n], mod)
    inv[n] = b
    for i in range(n, 0, -1):
        b = (b * i) % mod
        inv[i - 1] = b
    return inv

def factorial(f, i):
    return f[i]

def ifactorial(inv, i):
    return inv[i]

def combination(f, inv, mod, n, k):
    if not 0 <= k <= n:
        return 0
    return f[n] * inv[n - k] % mod * inv[k] % mod

def permutation(f, inv, mod, n, k):
    if not 0 <= k <= n:
        return 0
    return f[n] * inv[n - k] % mod

def homogeneous(f, inv, mod, n, k):
    if (n == 0 and k > 0) or k < 0:
        return 0
    return f[n + k - 1] * inv[k] % mod * inv[n - 1] % mod

def input_parser():
    return map(int, input().split())

class Factorial:
    def __init__(self, n, mod):
        self.mod = mod
        self.f = self._build_factorial(n, mod)
        self.inv = self._build_inv(self.f, n, mod)
    def _build_factorial(self, n, mod):
        f = initialize_factorial_list(n, mod)
        return fill_factorial_list(f, n, mod)
    def _build_inv(self, f, n, mod):
        inv = initialize_inv_list(n)
        return fill_inv_list(inv, f, n, mod)
    def factorial(self, i):
        return factorial(self.f, i)
    def ifactorial(self, i):
        return ifactorial(self.inv, i)
    def C(self, n, k):
        return combination(self.f, self.inv, self.mod, n, k)
    def P(self, n, k):
        return permutation(self.f, self.inv, self.mod, n, k)
    def H(self, n, k):
        return homogeneous(self.f, self.inv, self.mod, n, k)

def compute_term(F, n, p, b, k):
    q, r = divmod(k - p * b, b)
    if r != 0:
        return 0
    return F.C(n, p) * F.C(n, q) % MOD

def compute_summation(F, n, a, b, k):
    result = 0
    max_p = k // a
    for p in range(max_p + 1):
        current = compute_term(F, n, p, b, k)
        result = (result + current) % MOD
    return result

def main():
    n, a, b, k = input_parser()
    F = Factorial(n, MOD)
    result = compute_summation(F, n, a, b, k)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '998' (ID: 34589)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12835821509361267
    2. '10' → logprob: -2.1283581256866455
    3. ' ' → logprob: -6.628358364105225
    4. '```' → logprob: -10.003357887268066
    5. '1' → logprob: -10.378357887268066
    6. '`' → logprob: -11.128357887268066
    7. '(' → logprob: -11.628357887268066
    8. '998' → logprob: -12.378357887268066
    9. '123' → logprob: -14.128357887268066
    10. '``' → logprob: -14.753357887268066

Token 4: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.12500286102295
    3. ',' → logprob: -15.12500286102295
    4. '```' → logprob: -17.125001907348633
    5. '247' → logprob: -17.375001907348633
    6. '`' → logprob: -17.875001907348633
    7. '{' → logprob: -17.875001907348633
    8. '243' → logprob: -18.125001907348633
    9. ''' → logprob: -18.125001907348633
    10. '+' → logprob: -18.250001907348633

Token 5: '353' (ID: 32996)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01059604249894619
    2. '_' → logprob: -4.76059627532959
    3. '4' → logprob: -7.51059627532959
    4. '244' → logprob: -7.88559627532959
    5. '```' → logprob: -8.01059627532959
    6. '2' → logprob: -9.01059627532959
    7. '*' → logprob: -9.13559627532959
    8. ';' → logprob: -9.51059627532959
    9. '344' → logprob: -10.26059627532959
    10. '247' → logprob: -10.26059627532959

Token 6: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2960848808288574
    2. '*' → logprob: -1.6710848808288574
    3. '=' → logprob: -2.1710848808288574
    4. '```' → logprob: -2.2960848808288574
    5. '\n' → logprob: -2.4210848808288574
    6. '**' → logprob: -3.0460848808288574
    7. '+' → logprob: -3.1710848808288574
    8. ',' → logprob: -3.4210848808288574
    9. '\' → logprob: -3.4210848808288574
    10. '`' → logprob: -4.046084880828857

Token 7: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1393323838710785
    2. '**' → logprob: -3.5143322944641113
    3. '\n' → logprob: -3.5143322944641113
    4. '`' → logprob: -3.8893322944641113
    5. '=' → logprob: -4.389332294464111
    6. '\' → logprob: -4.764332294464111
    7. '
' → logprob: -4.764332294464111
    8. '*' → logprob: -5.139332294464111
    9. ' =' → logprob: -6.139332294464111
    10. '

' → logprob: -6.264332294464111

Token 8: ' create' (ID: 2501)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0012473741080611944
    2. ' add' → logprob: -7.001247406005859
    3. ' factorial' → logprob: -8.87624740600586
    4. ' pow' → logprob: -9.50124740600586
    5. '_' → logprob: -10.12624740600586
    6. ' dfs' → logprob: -10.62624740600586
    7. ' _' → logprob: -10.87624740600586
    8. ' mod' → logprob: -12.25124740600586
    9. ' fast' → logprob: -12.25124740600586
    10. ' main' → logprob: -12.37624740600586

Token 9: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055262044072151184
    2. '_array' → logprob: -3.9302620887756348
    3. '_factor' → logprob: -4.555262088775635
    4. '_table' → logprob: -5.180262088775635
    5. '_list' → logprob: -5.555262088775635
    6. '_token' → logprob: -6.305262088775635
    7. '_matrix' → logprob: -6.930262088775635
    8. '_cell' → logprob: -7.055262088775635
    9. '_s' → logprob: -7.430262088775635
    10. '_counter' → logprob: -7.430262088775635

Token 10: '(size' (ID: 15192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03732328861951828
    2. '_' → logprob: -3.412323236465454
    3. '[' → logprob: -6.787323474884033
    4. '```' → logprob: -6.912323474884033
    5. '_list' → logprob: -7.662323474884033
    6. '(_' → logprob: -8.537322998046875
    7. 's' → logprob: -8.537322998046875
    8. '_of' → logprob: -9.787322998046875
    9. '_token' → logprob: -10.162322998046875
    10. '[]' → logprob: -10.162322998046875

Token 11: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22774623334407806
    2. ',' → logprob: -1.6027462482452393
    3. ')' → logprob: -6.22774600982666
    4. ':' → logprob: -8.60274600982666
    5. ' ):' → logprob: -9.47774600982666
    6. '=' → logprob: -9.97774600982666
    7. ' ,' → logprob: -11.22774600982666
    8. ',size' → logprob: -11.72774600982666
    9. '):
' → logprob: -12.60274600982666
    10. '_' → logprob: -13.22774600982666

Token 12: ' default' (ID: 2787)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.029178587719798088
    2. 'value' → logprob: -4.404178619384766
    3. ' default' → logprob: -4.779178619384766
    4. ' fill' → logprob: -6.279178619384766
    5. ' )' → logprob: -6.654178619384766
    6. ' val' → logprob: -6.779178619384766
    7. ' initial' → logprob: -7.029178619384766
    8. ' init' → logprob: -7.404178619384766
    9. ' ' → logprob: -7.779178619384766
    10. ' None' → logprob: -8.029178619384766

Token 13: '):
' (ID: 1883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3994351625442505
    2. '_value' → logprob: -1.1494351625442505
    3. '):' → logprob: -4.649435043334961
    4. '=_' → logprob: -7.024435043334961
    5. ')' → logprob: -7.399435043334961
    6. ' ):' → logprob: -8.024435043334961
    7. '_val' → logprob: -8.274435043334961
    8. '_' → logprob: -8.399435043334961
    9. ' =' → logprob: -8.524435043334961
    10. '=None' → logprob: -8.899435043334961

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40372133255004883
    2. ':' → logprob: -1.2787213325500488
    3. '[' → logprob: -4.403721332550049
    4. '[:]' → logprob: -4.528721332550049
    5. ' :' → logprob: -4.778721332550049
    6. '):' → logprob: -4.903721332550049
    7. ')' → logprob: -5.653721332550049
    8. '=' → logprob: -6.153721332550049
    9. '```' → logprob: -6.528721332550049
    10. '[:' → logprob: -6.903721332550049

Token 15: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6518844366073608
    2. '[' → logprob: -1.6518844366073608
    3. 'return' (adapté à ' return') → logprob: -2.1518845558166504
    4. ' [' → logprob: -2.5268845558166504
    5. '   ' → logprob: -2.6518845558166504
    6. '[
' → logprob: -4.65188455581665
    7. ' [
' → logprob: -5.90188455581665
    8. '```' → logprob: -5.90188455581665
    9. '[]' → logprob: -6.02688455581665
    10. ' []' → logprob: -6.15188455581665

Token 16: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3870124816894531
    2. '[' → logprob: -1.1370124816894531
    3. '[size' → logprob: -10.012012481689453
    4. '[int' → logprob: -11.262012481689453
    5. '[new' → logprob: -11.512012481689453
    6. '[start' → logprob: -11.637012481689453
    7. '[value' → logprob: -12.262012481689453
    8. '[n' → logprob: -12.262012481689453
    9. '[next' → logprob: -12.387012481689453
    10. '[f' → logprob: -12.512012481689453

Token 17: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.00015860427811276168
    2. ' default' → logprob: -8.750158309936523
    3. '"default' → logprob: -16.000158309936523
    4. '(default' → logprob: -18.125158309936523
    5. ''default' → logprob: -18.375158309936523
    6. '   ' → logprob: -18.375158309936523
    7. '_default' → logprob: -18.750158309936523
    8. '```' → logprob: -19.250158309936523
    9. '0' → logprob: -19.375158309936523
    10. '	default' → logprob: -19.875158309936523

Token 18: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08295043557882309
    2. ']' → logprob: -2.5829503536224365
    3. ' ]' → logprob: -6.082950592041016
    4. 'for' → logprob: -6.457950592041016
    5. ')' → logprob: -8.832950592041016
    6. '   ' → logprob: -11.207950592041016
    7. ')]' → logprob: -11.207950592041016
    8. ']*' → logprob: -11.457950592041016
    9. '	for' → logprob: -11.582950592041016
    10. ' ' → logprob: -12.582950592041016

Token 19: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17184065282344818
    2. '[size' → logprob: -2.2968406677246094
    3. ' *' → logprob: -3.5468406677246094
    4. '[' → logprob: -4.546840667724609
    5. '<|end|>' → logprob: -5.046840667724609
    6. '(size' → logprob: -5.296840667724609
    7. '[:]' → logprob: -6.046840667724609
    8. '*[' → logprob: -6.671840667724609
    9. '*(' → logprob: -7.421840667724609
    10. ' ' → logprob: -7.796840667724609

Token 20: ' (' (ID: 350)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -4.692145012086257e-05
    2. ' size' → logprob: -10.000046730041504
    3. '(size' → logprob: -13.500046730041504
    4. '<size' → logprob: -19.37504768371582
    5. '[size' → logprob: -19.87504768371582
    6. '	size' → logprob: -20.62504768371582
    7. '```' → logprob: -21.25004768371582
    8. '=size' → logprob: -22.00004768371582
    9. '_size' → logprob: -22.12504768371582
    10. ',size' → logprob: -22.25004768371582

Token 21: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -6.704273118884885e-07
    2. ' size' → logprob: -14.250000953674316
    3. '   ' → logprob: -22.125
    4. ')' → logprob: -22.375
    5. 'siz' → logprob: -22.375
    6. '	size' → logprob: -22.5
    7. '(size' → logprob: -23.125
    8. 'sizei' → logprob: -23.875
    9. '```' → logprob: -24.0
    10. ' ' → logprob: -24.125

Token 22: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013749953359365463
    2. ' )' → logprob: -6.626375198364258
    3. '<|end|>' → logprob: -10.251375198364258
    4. ' ' → logprob: -13.001375198364258
    5. '```' → logprob: -13.376375198364258
    6. '<|end|>' → logprob: -13.751375198364258
    7. '+' → logprob: -13.876375198364258
    8. '   ' → logprob: -14.126375198364258
    9. ')return' → logprob: -14.251375198364258
    10. ')
' → logprob: -14.251375198364258

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '```' → logprob: -16.754077911376953
    4. '   ' → logprob: -16.879077911376953
    5. ')' → logprob: -17.504077911376953
    6. '0' → logprob: -18.879077911376953
    7. 'def' → logprob: -19.379077911376953
    8. '2' → logprob: -19.629077911376953
    9. '  ' → logprob: -19.879077911376953
    10. ' ' → logprob: -19.879077911376953

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.12500762939453
    4. '   ' → logprob: -18.25000762939453
    5. '0' → logprob: -18.62500762939453
    6. ')' → logprob: -19.62500762939453
    7. '2' → logprob: -20.12500762939453
    8. '  ' → logprob: -21.50000762939453
    9. '+' → logprob: -21.75000762939453
    10. '`' → logprob: -21.87500762939453

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.875001907348633
    4. '))' → logprob: -15.625001907348633
    5. ')`' → logprob: -15.625001907348633
    6. '```' → logprob: -16.125001907348633
    7. '<|end|>' → logprob: -16.250001907348633
    8. '`)' → logprob: -16.625001907348633
    9. ')return' → logprob: -16.875001907348633
    10. ']' → logprob: -17.000001907348633

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.382364958524704
    2. '

' → logprob: -1.3823649883270264
    3. '
' → logprob: -2.7573649883270264
    4. '```' → logprob: -7.132364749908447
    5. '_

' → logprob: -7.132364749908447
    6. '_' → logprob: -7.632364749908447
    7. ' def' → logprob: -8.132365226745605
    8. '
' → logprob: -8.507365226745605
    9. '#' → logprob: -8.882365226745605
    10. '\' → logprob: -9.007365226745605

Token 27: ' initialize' (ID: 18400)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.1280810832977295
    2. ' solve' → logprob: -1.3780810832977295
    3. ' main' → logprob: -1.7530810832977295
    4. ' factorial' → logprob: -2.2530810832977295
    5. ' mod' → logprob: -2.7530810832977295
    6. ' pow' → logprob: -3.3780810832977295
    7. ' dfs' → logprob: -4.253081321716309
    8. ' multiply' → logprob: -5.253081321716309
    9. ' modular' → logprob: -5.628081321716309
    10. ' ' → logprob: -5.628081321716309

Token 28: '_factor' (ID: 43757)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.03539343550801277
    2. '_array' → logprob: -4.535393238067627
    3. '(' → logprob: -4.910393238067627
    4. '_lists' → logprob: -5.410393238067627
    5. '_' → logprob: -5.660393238067627
    6. '_counts' → logprob: -6.035393238067627
    7. '_values' → logprob: -7.285393238067627
    8. '_map' → logprob: -7.410393238067627
    9. '_data' → logprob: -7.660393238067627
    10. '_tree' → logprob: -8.035393714904785

Token 29: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.2522234320640564
    2. 'ial' → logprob: -1.5022234916687012
    3. 'ialize' → logprob: -8.627223014831543
    4. 's' → logprob: -9.627223014831543
    5. 'rial' → logprob: -10.627223014831543
    6. 'al' → logprob: -11.252223014831543
    7. '```' → logprob: -12.252223014831543
    8. 'IAL' → logprob: -13.502223014831543
    9. 'ization' → logprob: -13.502223014831543
    10. 'ail' → logprob: -13.752223014831543

Token 30: '_list' (ID: 4162)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.4482649862766266
    2. '(' → logprob: -1.5732649564743042
    3. 's' → logprob: -2.0732650756835938
    4. '_s' → logprob: -4.573265075683594
    5. '(n' → logprob: -4.948265075683594
    6. '_' → logprob: -5.948265075683594
    7. '(s' → logprob: -6.073265075683594
    8. '_fact' → logprob: -6.448265075683594
    9. '(size' → logprob: -6.823265075683594
    10. '_f' → logprob: -7.448265075683594

Token 31: '(n' (ID: 2406)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.004265846684575081
    2. '(' → logprob: -5.629265785217285
    3. '(n' → logprob: -7.504265785217285
    4. ' (' → logprob: -9.254265785217285
    5. '(length' → logprob: -11.879265785217285
    6. '(sz' → logprob: -12.129265785217285
    7. '(s' → logprob: -12.879265785217285
    8. '(max' → logprob: -14.004265785217285
    9. '(depth' → logprob: -14.004265785217285
    10. '(def' → logprob: -14.629265785217285

Token 32: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20317994058132172
    2. ',' → logprob: -1.703179955482483
    3. '):
' → logprob: -7.203179836273193
    4. ')' → logprob: -7.453179836273193
    5. ',n' → logprob: -9.328180313110352
    6. ' ):' → logprob: -9.453180313110352
    7. '):
' → logprob: -9.578180313110352
    8. ' ,' → logprob: -9.953180313110352
    9. '+' → logprob: -9.953180313110352
    10. '(n' → logprob: -10.078180313110352

Token 33: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7782651782035828
    2. 'MOD' → logprob: -1.0282652378082275
    3. ' MOD' → logprob: -2.5282652378082275
    4. 'fact' → logprob: -3.6532652378082275
    5. 'default' → logprob: -4.153264999389648
    6. ')' → logprob: -4.278264999389648
    7. 'factor' → logprob: -4.403264999389648
    8. ' mod' → logprob: -4.903264999389648
    9. 'fac' → logprob: -5.028264999389648
    10. 'def' → logprob: -5.403264999389648

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003594184236135334
    2. ')' → logprob: -8.250359535217285
    3. ' ):' → logprob: -9.750359535217285
    4. ',' → logprob: -10.625359535217285
    5. '):
' → logprob: -11.875359535217285
    6. ':' → logprob: -12.500359535217285
    7. '=' → logprob: -12.500359535217285
    8. '   ' → logprob: -15.500359535217285
    9. ')：' → logprob: -15.625359535217285
    10. '):
' → logprob: -15.875359535217285

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008326167589984834
    2. 'fact' → logprob: -8.250832557678223
    3. ' fact' → logprob: -8.375832557678223
    4. '    
' → logprob: -9.125832557678223
    5. ' factorial' → logprob: -9.500832557678223
    6. 'factor' → logprob: -9.625832557678223
    7. '
' → logprob: -11.125832557678223
    8. ' f' → logprob: -11.250832557678223
    9. '```' → logprob: -11.625832557678223
    10. '_fact' → logprob: -11.875832557678223

Token 36: ' f' (ID: 285)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9644472002983093
    2. ' fact' → logprob: -1.089447259902954
    3. '   ' → logprob: -1.589447259902954
    4. ' factorial' → logprob: -3.089447259902954
    5. 'factor' → logprob: -4.089447021484375
    6. 'fac' → logprob: -4.589447021484375
    7. ' fac' → logprob: -5.589447021484375
    8. 'f' (adapté à ' f') → logprob: -7.214447021484375
    9. ' f' → logprob: -7.964447021484375
    10. '    ' → logprob: -8.214447021484375

Token 37: ' =' (ID: 314)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.5506554245948792
    2. 'act' → logprob: -1.1756553649902344
    3. 'ac' → logprob: -2.8006553649902344
    4. 'a' → logprob: -3.5506553649902344
    5. '=' → logprob: -4.550655364990234
    6. ' =' → logprob: -4.675655364990234
    7. '[]' → logprob: -6.800655364990234
    8. 'acto' → logprob: -6.925655364990234
    9. '[' → logprob: -7.300655364990234
    10. '```' → logprob: -7.300655364990234

Token 38: ' create' (ID: 2501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009834835305809975
    2. ' [' → logprob: -4.6348347663879395
    3. 'create' → logprob: -9.634835243225098
    4. ' create' → logprob: -11.634835243225098
    5. '(create' → logprob: -13.884835243225098
    6. '=create' → logprob: -14.009835243225098
    7. '1' → logprob: -14.134835243225098
    8. '[f' → logprob: -14.509835243225098
    9. ' ' → logprob: -14.634835243225098
    10. '[n' → logprob: -15.509835243225098

Token 39: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00011760921915993094
    2. '_factor' → logprob: -9.125117301940918
    3. '_' → logprob: -12.250117301940918
    4. '_l' → logprob: -13.875117301940918
    5. '_f' → logprob: -14.375117301940918
    6. ' _' → logprob: -15.000117301940918
    7. '_lst' → logprob: -15.500117301940918
    8. '```' → logprob: -15.625117301940918
    9. '_array' → logprob: -15.750117301940918
    10. ')_' → logprob: -16.000118255615234

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001490716531407088
    2. '(' → logprob: -9.00014877319336
    3. 'n' → logprob: -10.62514877319336
    4. ')n' → logprob: -14.50014877319336
    5. ' (' → logprob: -15.12514877319336
    6. '(f' → logprob: -16.12514877319336
    7. '<|end|>' → logprob: -16.50014877319336
    8. ')' → logprob: -16.50014877319336
    9. '((' → logprob: -16.75014877319336
    10. ' n' → logprob: -16.75014877319336

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009552070870995522
    2. '+' → logprob: -4.884552001953125
    3. ')' → logprob: -6.759552001953125
    4. ' ,' → logprob: -7.884552001953125
    5. ' +' → logprob: -8.634552001953125
    6. ' ' → logprob: -9.509552001953125
    7. ',n' → logprob: -10.134552001953125
    8. ',f' → logprob: -10.259552001953125
    9. ',None' → logprob: -11.259552001953125
    10. ',+' → logprob: -11.634552001953125

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025666221044957638
    2. ' ' → logprob: -6.002566814422607
    3. '0' → logprob: -9.62756633758545
    4. 'mod' → logprob: -10.87756633758545
    5. ')' → logprob: -13.12756633758545
    6. '   ' → logprob: -13.62756633758545
    7. '  ' → logprob: -14.00256633758545
    8. ' mod' → logprob: -14.37756633758545
    9. 'f' → logprob: -14.50256633758545
    10. '-' → logprob: -16.315067291259766

Token 43: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1093578804284334e-05
    2. 'mod' → logprob: -10.375051498413086
    3. '0' → logprob: -11.125051498413086
    4. ' ' → logprob: -12.875051498413086
    5. 'f' → logprob: -14.625051498413086
    6. ')' → logprob: -14.625051498413086
    7. 'fact' → logprob: -15.375051498413086
    8. 'MOD' → logprob: -15.500051498413086
    9. '   ' → logprob: -15.750051498413086
    10. 'factor' → logprob: -15.750051498413086

Token 44: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6361448168754578
    2. ')' → logprob: -0.7611448168754578
    3. ')
' → logprob: -5.886144638061523
    4. ')

' → logprob: -7.261144638061523
    5. ' )
' → logprob: -10.636144638061523
    6. ')

' → logprob: -11.636144638061523
    7. ' )' → logprob: -12.136144638061523
    8. ')`
' → logprob: -12.136144638061523
    9. '1' → logprob: -12.636144638061523
    10. '0' → logprob: -13.136144638061523

Token 45: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09360116720199585
    2. '   ' → logprob: -2.4686012268066406
    3. ' f' → logprob: -5.468601226806641
    4. ' ' → logprob: -8.59360122680664
    5. '
' → logprob: -9.21860122680664
    6. '	f' → logprob: -9.34360122680664
    7. '  ' → logprob: -11.46860122680664
    8. '[' → logprob: -11.46860122680664
    9. '    
' → logprob: -11.46860122680664
    10. '<|end|>' → logprob: -11.71860122680664

Token 46: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -5.550411151489243e-05
    2. ' f' → logprob: -10.000055313110352
    3. '   ' → logprob: -12.000055313110352
    4. '
' → logprob: -13.000055313110352
    5. ' ' → logprob: -14.500055313110352
    6. '```' → logprob: -14.625055313110352
    7. '[' → logprob: -15.250055313110352
    8. '	f' → logprob: -16.12505531311035
    9. '``' → logprob: -16.37505531311035
    10. '    
' → logprob: -17.25005531311035

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.1928003813372925e-05
    2. ' [' → logprob: -10.625051498413086
    3. ' =' → logprob: -11.375051498413086
    4. '=' → logprob: -11.875051498413086
    5. 'def' → logprob: -12.875051498413086
    6. 'f' → logprob: -13.250051498413086
    7. '```' → logprob: -14.250051498413086
    8. '
' → logprob: -14.562551498413086
    9. '\[' → logprob: -14.812551498413086
    10. '[f' → logprob: -15.062551498413086

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. '1' → logprob: -12.750003814697266
    3. ' ' → logprob: -13.625003814697266
    4. ']' → logprob: -17.250003814697266
    5. ')' → logprob: -19.000003814697266
    6. '```' → logprob: -19.000003814697266
    7. '۰' → logprob: -19.125003814697266
    8. '０' → logprob: -20.500003814697266
    9. '-' → logprob: -20.625003814697266
    10. '=' → logprob: -20.625003814697266

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007880675257183611
    2. ' ]' → logprob: -7.37578821182251
    3. ']=' → logprob: -8.750787734985352
    4. '=' → logprob: -13.125787734985352
    5. ')' → logprob: -14.625787734985352
    6. '`]' → logprob: -15.375787734985352
    7. ')]' → logprob: -16.25078773498535
    8. ']
' → logprob: -16.37578773498535
    9. '']' → logprob: -16.50078773498535
    10. '[' → logprob: -17.12578773498535

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. ',' → logprob: -14.318148612976074
    4. ' ' → logprob: -15.818148612976074
    5. '=f' → logprob: -15.818148612976074
    6. '＝' → logprob: -15.943148612976074
    7. 'f' → logprob: -16.81814956665039
    8. ' =
' → logprob: -16.94314956665039
    9. ']' → logprob: -17.19314956665039
    10. ']=' → logprob: -17.44314956665039

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.625027656555176
    3. 'f' → logprob: -12.625027656555176
    4. '   ' → logprob: -15.000027656555176
    5. '  ' → logprob: -17.500028610229492
    6. '۱' → logprob: -18.562528610229492
    7. 'def' → logprob: -18.687528610229492
    8. '`' → logprob: -18.812528610229492
    9. '```' → logprob: -18.875028610229492
    10. '১' → logprob: -19.125028610229492

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.750011444091797
    3. 'f' → logprob: -12.750011444091797
    4. '   ' → logprob: -17.750011444091797
    5. 'def' → logprob: -18.187511444091797
    6. '  ' → logprob: -18.250011444091797
    7. '<|end|>' → logprob: -18.312511444091797
    8. '`' → logprob: -18.562511444091797
    9. '۱' → logprob: -18.625011444091797
    10. '১' → logprob: -18.687511444091797

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022685570642352104
    2. ' for' → logprob: -4.397685527801514
    3. '<|end|>' → logprob: -5.522685527801514
    4. 'for' → logprob: -5.897685527801514
    5. '   ' → logprob: -6.272685527801514
    6. '    
' → logprob: -8.147686004638672
    7. '\n' → logprob: -8.272686004638672
    8. '	for' → logprob: -8.272686004638672
    9. '<|end|>' → logprob: -8.897686004638672
    10. '' → logprob: -9.022686004638672

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6147038340568542
    2. ' for' → logprob: -1.489703893661499
    3. '
' → logprob: -1.614703893661499
    4. 'for' → logprob: -4.11470365524292
    5. '\n' → logprob: -5.11470365524292
    6. '    
' → logprob: -5.23970365524292
    7. '```' → logprob: -5.73970365524292
    8. '<|end|>' → logprob: -6.61470365524292
    9. '	for' → logprob: -6.73970365524292
    10. '  
' → logprob: -7.11470365524292

Token 55: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05073932185769081
    2. ' for' → logprob: -3.050739288330078
    3. '   ' → logprob: -6.175739288330078
    4. '
' → logprob: -9.925739288330078
    5. '```' → logprob: -11.050739288330078
    6. '	for' → logprob: -12.925739288330078
    7. '    
' → logprob: -13.550739288330078
    8. ' ' → logprob: -14.300739288330078
    9. ' 
' → logprob: -15.300739288330078
    10. 'i' → logprob: -15.300739288330078

Token 56: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22919601202011108
    2. ' f' → logprob: -1.6041960716247559
    3. '[f' → logprob: -6.229196071624756
    4. '[' → logprob: -6.854196071624756
    5. ' [' → logprob: -7.229196071624756
    6. ' ' → logprob: -12.354195594787598
    7. '_f' → logprob: -12.979195594787598
    8. '[
' → logprob: -13.104195594787598
    9. '```' → logprob: -13.229195594787598
    10. '[n' → logprob: -13.229195594787598

Token 57: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' fill' (ID: 6954)
  Prédit: ' initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.07792526483535767
    2. ' factorial' → logprob: -3.077925205230713
    3. 'initialize' → logprob: -3.702925205230713
    4. '_initialize' → logprob: -6.327925205230713
    5. 'factor' → logprob: -6.702925205230713
    6. ' calculate' → logprob: -7.827925205230713
    7. '_factor' → logprob: -7.952925205230713
    8. ' factor' → logprob: -8.702925682067871
    9. ' compute' → logprob: -9.077925682067871
    10. ' create' → logprob: -10.452925682067871

Token 60: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0017462196992710233
    2. '_' → logprob: -6.50174617767334
    3. '_list' → logprob: -8.62674617767334
    4. '_fact' → logprob: -10.50174617767334
    5. '_f' → logprob: -11.25174617767334
    6. 'factor' → logprob: -11.75174617767334
    7. '```' → logprob: -12.12674617767334
    8. '_(' → logprob: -13.12674617767334
    9. '(f' → logprob: -13.25174617767334
    10. '_fac' → logprob: -13.50174617767334

Token 61: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.00033045929740183055
    2. '_list' → logprob: -9.000330924987793
    3. 'al' → logprob: -9.250330924987793
    4. '```' → logprob: -10.000330924987793
    5. 'list' → logprob: -10.875330924987793
    6. 'ialize' → logprob: -11.000330924987793
    7. 'ials' → logprob: -11.750330924987793
    8. 'def' → logprob: -12.125330924987793
    9. 'ialist' → logprob: -12.875330924987793
    10. '   ' → logprob: -13.000330924987793

Token 62: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.895480277715251e-06
    2. '_' → logprob: -12.500008583068848
    3. 's' → logprob: -12.500008583068848
    4. '_l' → logprob: -15.125008583068848
    5. 'list' → logprob: -15.750008583068848
    6. 'List' → logprob: -15.750008583068848
    7. '_li' → logprob: -15.875008583068848
    8. '_array' → logprob: -16.125009536743164
    9. '_lists' → logprob: -16.125009536743164
    10. '```' → logprob: -16.125009536743164

Token 63: '(f' (ID: 1526)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022320940624922514
    2. ' (' → logprob: -6.377232074737549
    3. '(' → logprob: -7.627232074737549
    4. '(f' → logprob: -10.252232551574707
    5. 'def' → logprob: -12.877232551574707
    6. '(size' → logprob: -13.377232551574707
    7. '_(' → logprob: -13.752232551574707
    8. '```' → logprob: -14.502232551574707
    9. '_' → logprob: -15.252232551574707
    10. ' ' → logprob: -15.502232551574707

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006327360169962049
    2. ',n' → logprob: -7.5006327629089355
    3. ' ,' → logprob: -9.625632286071777
    4. '):' → logprob: -11.500632286071777
    5. '   ' → logprob: -14.125632286071777
    6. ',i' → logprob: -14.750632286071777
    7. ')' → logprob: -14.875632286071777
    8. ',size' → logprob: -15.000632286071777
    9. '(n' → logprob: -15.250632286071777
    10. 'n' → logprob: -15.375632286071777

Token 65: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06200599670410156
    2. 'n' → logprob: -2.8120059967041016
    3. ',n' → logprob: -11.437005996704102
    4. ')' → logprob: -11.937005996704102
    5. ')n' → logprob: -12.937005996704102
    6. ',' → logprob: -12.937005996704102
    7. ' f' → logprob: -13.062005996704102
    8. '	n' → logprob: -13.062005996704102
    9. '   ' → logprob: -13.187005996704102
    10. ' ' → logprob: -13.312005996704102

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1813596785068512
    2. '):' → logprob: -1.8063596487045288
    3. ')' → logprob: -7.056359767913818
    4. '+' → logprob: -8.43135929107666
    5. '   ' → logprob: -8.43135929107666
    6. ' ,' → logprob: -9.18135929107666
    7. ':' → logprob: -9.55635929107666
    8. '):
' → logprob: -9.80635929107666
    9. ' ):' → logprob: -11.05635929107666
    10. ',n' → logprob: -11.18135929107666

Token 67: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.029874181374907494
    2. 'mod' → logprob: -3.529874086380005
    3. ' ' → logprob: -10.154873847961426
    4. '   ' → logprob: -10.279873847961426
    5. '	mod' → logprob: -10.654873847961426
    6. '    ' → logprob: -12.029873847961426
    7. ',' → logprob: -12.529873847961426
    8. ' f' → logprob: -13.217373847961426
    9. '```' → logprob: -13.342373847961426
    10. ' m' → logprob: -13.404873847961426

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000990176573395729
    2. ':' → logprob: -7.000990390777588
    3. '):
' → logprob: -9.75098991394043
    4. ')' → logprob: -11.25098991394043
    5. ',' → logprob: -12.87598991394043
    6. '   ' → logprob: -12.87598991394043
    7. ' ):' → logprob: -14.37598991394043
    8. '):
' → logprob: -15.00098991394043
    9. ' :' → logprob: -15.37598991394043
    10. ']:' → logprob: -15.50098991394043

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14802516996860504
    2. ' for' → logprob: -2.0230252742767334
    3. 'for' → logprob: -6.148025035858154
    4. '    
' → logprob: -7.148025035858154
    5. '
' → logprob: -7.398025035858154
    6. ' f' → logprob: -7.523025035858154
    7. ' i' → logprob: -7.773025035858154
    8. ' 
' → logprob: -8.398025512695312
    9. '1' → logprob: -9.023025512695312
    10. ' ' → logprob: -9.773025512695312

Token 70: ' b' (ID: 287)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5506022572517395
    2. 'for' → logprob: -1.1756021976470947
    3. '   ' → logprob: -2.1756021976470947
    4. ' i' → logprob: -7.175602436065674
    5. 'i' → logprob: -8.050601959228516
    6. '	for' → logprob: -9.800601959228516
    7. '```' → logprob: -10.800601959228516
    8. ' f' → logprob: -11.175601959228516
    9. 'f' → logprob: -11.300601959228516
    10. '
' → logprob: -11.425601959228516

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5717964172363281
    2. 'f' → logprob: -1.6967964172363281
    3. 'for' → logprob: -2.696796417236328
    4. 'e' → logprob: -3.196796417236328
    5. ' =' → logprob: -3.446796417236328
    6. '   ' → logprob: -3.696796417236328
    7. ',' → logprob: -3.821796417236328
    8. 'range' → logprob: -4.571796417236328
    9. ' ' → logprob: -4.696796417236328
    10. 'y' → logprob: -4.821796417236328

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05900482088327408
    2. ' ' → logprob: -3.684004783630371
    3. '2' → logprob: -3.934004783630371
    4. 'f' → logprob: -4.684004783630371
    5. ' f' → logprob: -5.809004783630371
    6. '[' → logprob: -8.809004783630371
    7. '   ' → logprob: -9.059004783630371
    8. '0' → logprob: -10.059004783630371
    9. ' [' → logprob: -10.934004783630371
    10. '  ' → logprob: -11.184004783630371

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07196886092424393
    2. '2' → logprob: -3.0719687938690186
    3. 'f' → logprob: -3.8219687938690186
    4. 'range' → logprob: -7.946969032287598
    5. ' ' → logprob: -8.196969032287598
    6. '[' → logprob: -8.446969032287598
    7. '0' → logprob: -8.696969032287598
    8. '   ' → logprob: -9.821969032287598
    9. 'i' → logprob: -10.321969032287598
    10. '(' → logprob: -10.571969032287598

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03784603998064995
    2. '+' → logprob: -3.912846088409424
    3. 'for' → logprob: -4.662846088409424
    4. '+
' → logprob: -6.662846088409424
    5. ' for' → logprob: -6.912846088409424
    6. '   ' → logprob: -6.912846088409424
    7. '' → logprob: -7.162846088409424
    8. '
' → logprob: -7.287846088409424
    9. ',' → logprob: -7.662846088409424
    10. '1' → logprob: -7.912846088409424

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026677260175347328
    2. '+' → logprob: -4.901677131652832
    3. 'for' → logprob: -5.276677131652832
    4. ' for' → logprob: -5.776677131652832
    5. '' → logprob: -6.151677131652832
    6. '+
' → logprob: -6.651677131652832
    7. '   ' → logprob: -6.901677131652832
    8. '<|end|>' → logprob: -7.026677131652832
    9. '    
' → logprob: -7.276677131652832
    10. ',' → logprob: -7.401677131652832

Token 76: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2578315734863281
    2. 'for' (adapté à ' for') → logprob: -1.5078315734863281
    3. '
' → logprob: -5.632831573486328
    4. '   ' → logprob: -6.882831573486328
    5. ' ' → logprob: -8.007831573486328
    6. ' 
' → logprob: -8.757831573486328
    7. '	for' → logprob: -9.257831573486328
    8. ',' → logprob: -9.382831573486328
    9. '\n' → logprob: -9.507831573486328
    10. '+' → logprob: -9.632831573486328

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006851531565189362
    2. 'i' → logprob: -5.006851673126221
    3. ' ' → logprob: -9.256851196289062
    4. ' _' → logprob: -10.506851196289062
    5. '_' → logprob: -11.631851196289062
    6. '	i' → logprob: -13.256851196289062
    7. '_i' → logprob: -14.131851196289062
    8. ' ' → logprob: -14.756851196289062
    9. ' in' → logprob: -15.381851196289062
    10. ')' → logprob: -15.506851196289062

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015086746774613857
    2. 'in' → logprob: -4.265086650848389
    3. ' ' → logprob: -7.015086650848389
    4. '	in' → logprob: -12.015087127685547
    5. '  ' → logprob: -12.140087127685547
    6. '1' → logprob: -12.390087127685547
    7. ',' → logprob: -12.890087127685547
    8. ' i' → logprob: -13.140087127685547
    9. 'import' → logprob: -13.890087127685547
    10. '   ' → logprob: -14.390087127685547

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007455537561327219
    2. 'range' → logprob: -5.007455348968506
    3. ' ' → logprob: -7.257455348968506
    4. '	range' → logprob: -11.132455825805664
    5. ' in' → logprob: -11.632455825805664
    6. ' xrange' → logprob: -11.757455825805664
    7. '(range' → logprob: -13.507455825805664
    8. '  ' → logprob: -14.632455825805664
    9. '1' → logprob: -14.757455825805664
    10. ' ran' → logprob: -15.382455825805664

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0061766826547682285
    2. ' (' → logprob: -5.131176471710205
    3. ' ' → logprob: -8.881176948547363
    4. '1' → logprob: -9.381176948547363
    5. '(
' → logprob: -10.756176948547363
    6. '(i' → logprob: -13.256176948547363
    7. ' (
' → logprob: -14.506176948547363
    8. ')' → logprob: -15.006176948547363
    9. '2' → logprob: -15.381176948547363
    10. '(

' → logprob: -15.881176948547363

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003403495065867901
    2. ' ' → logprob: -8.000340461730957
    3. '2' → logprob: -12.500340461730957
    4. '   ' → logprob: -14.500340461730957
    5. 'n' → logprob: -15.375340461730957
    6. ')' → logprob: -15.500340461730957
    7. '(' → logprob: -17.00033950805664
    8. '```' → logprob: -17.25033950805664
    9. '  ' → logprob: -17.37533950805664
    10. '
' → logprob: -18.12533950805664

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034123245626688004
    2. ' ,' → logprob: -4.034123420715332
    3. ',n' → logprob: -4.159123420715332
    4. ' n' → logprob: -9.159123420715332
    5. 'n' → logprob: -9.659123420715332
    6. '   ' → logprob: -10.659123420715332
    7. ' ' → logprob: -10.909123420715332
    8. '    ' → logprob: -12.534123420715332
    9. ',
' → logprob: -12.909123420715332
    10. '	n' → logprob: -13.534123420715332

Token 83: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023247340694069862
    2. 'n' → logprob: -3.773247241973877
    3. ' ' → logprob: -13.773247718811035
    4. '	n' → logprob: -14.898247718811035
    5. ')n' → logprob: -15.273247718811035
    6. ' 
' → logprob: -15.773247718811035
    7. ')' → logprob: -16.14824676513672
    8. ' ' → logprob: -17.52324676513672
    9. '(n' → logprob: -17.89824676513672
    10. ' )' → logprob: -18.14824676513672

Token 84: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31327399611473083
    2. ' +' → logprob: -1.3132740259170532
    3. ' +
' → logprob: -12.688274383544922
    4. '+
' → logprob: -12.688274383544922
    5. ' ' → logprob: -12.938274383544922
    6. ')' → logprob: -13.688274383544922
    7. '):
' → logprob: -14.063274383544922
    8. '):' → logprob: -14.063274383544922
    9. ',' → logprob: -15.438274383544922
    10. '   ' → logprob: -15.688274383544922

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009761752560734749
    2. ' ' → logprob: -4.634761810302734
    3. ')' → logprob: -12.134761810302734
    4. '```' → logprob: -14.884761810302734
    5. ' )' → logprob: -16.384761810302734
    6. '2' → logprob: -17.759761810302734
    7. '):
' → logprob: -18.009761810302734
    8. '   ' → logprob: -18.009761810302734
    9. '  ' → logprob: -18.259761810302734
    10. '+' → logprob: -18.509761810302734

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001605115394340828
    2. ' ' → logprob: -8.750160217285156
    3. ')' → logprob: -13.125160217285156
    4. '   ' → logprob: -17.250160217285156
    5. '```' → logprob: -18.000160217285156
    6. '  ' → logprob: -19.125160217285156
    7. '):' → logprob: -19.375160217285156
    8. '):
' → logprob: -19.875160217285156
    9. 'i' → logprob: -20.125160217285156
    10. ')
' → logprob: -21.625160217285156

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00741163594648242
    2. ')' → logprob: -5.632411479949951
    3. ':' → logprob: -5.632411479949951
    4. '):
' → logprob: -8.88241195678711
    5. ' ):' → logprob: -9.50741195678711
    6. ',' → logprob: -12.13241195678711
    7. '   ' → logprob: -12.88241195678711
    8. ' ' → logprob: -13.88241195678711
    9. ' )' → logprob: -13.88241195678711
    10. ' :' → logprob: -15.13241195678711

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6380595564842224
    2. ':' → logprob: -1.1380596160888672
    3. '   ' → logprob: -3.013059616088867
    4. ' ' → logprob: -3.138059616088867
    5. '<|end|>' → logprob: -3.638059616088867
    6. '):' → logprob: -4.388059616088867
    7. ' 
' → logprob: -5.763059616088867
    8. '    ' → logprob: -5.888059616088867
    9. ')' → logprob: -6.138059616088867
    10. ':
' → logprob: -6.263059616088867

Token 89: ' b' (ID: 287)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.120349645614624
    2. '       ' → logprob: -1.120349645614624
    3. ' 
' → logprob: -1.745349645614624
    4. ' b' → logprob: -3.245349645614624
    5. 'f' → logprob: -3.370349645614624
    6. ' ' → logprob: -3.495349645614624
    7. '        
' → logprob: -3.620349645614624
    8. 'b' (adapté à ' b') → logprob: -3.870349645614624
    9. '   ' → logprob: -5.495349884033203
    10. '        ' → logprob: -5.995349884033203

Token 90: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.6575427651405334
    2. '*' → logprob: -1.4075427055358887
    3. ' =' → logprob: -2.2825427055358887
    4. ' *' → logprob: -2.7825427055358887
    5. '=' → logprob: -2.9075427055358887
    6. '*=' → logprob: -4.032542705535889
    7. ' ' → logprob: -7.407542705535889
    8. ' ' → logprob: -9.282543182373047
    9. '**' → logprob: -9.657543182373047
    10. '```' → logprob: -10.657543182373047

Token 91: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.603242814540863
    2. ' (' → logprob: -1.3532428741455078
    3. 'b' → logprob: -2.103242874145508
    4. ' b' → logprob: -2.853242874145508
    5. '(' → logprob: -4.228242874145508
    6. '   ' → logprob: -9.353242874145508
    7. '(i' → logprob: -9.478242874145508
    8. ' ' → logprob: -10.103242874145508
    9. '	b' → logprob: -10.728242874145508
    10. '(f' → logprob: -11.728242874145508

Token 92: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00990943145006895
    2. ' b' → logprob: -4.634909629821777
    3. 'i' → logprob: -8.884909629821777
    4. ' i' → logprob: -11.384909629821777
    5. 'f' → logprob: -12.884909629821777
    6. '	b' → logprob: -15.134909629821777
    7. ' f' → logprob: -15.509909629821777
    8. '   ' → logprob: -15.759909629821777
    9. ')b' → logprob: -15.759909629821777
    10. ' ' → logprob: -15.884909629821777

Token 93: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22545601427555084
    2. '*' → logprob: -1.6004559993743896
    3. '*i' → logprob: -10.600456237792969
    4. ' ' → logprob: -11.475456237792969
    5. ' ' → logprob: -13.100456237792969
    6. ' **' → logprob: -13.100456237792969
    7. '**' → logprob: -13.100456237792969
    8. '*b' → logprob: -14.350456237792969
    9. '*f' → logprob: -15.725456237792969
    10. ')' → logprob: -15.975456237792969

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38687369227409363
    2. 'i' → logprob: -1.136873722076416
    3. ' ' → logprob: -14.136873245239258
    4. '	i' → logprob: -14.511873245239258
    5. ')i' → logprob: -14.636873245239258
    6. ')' → logprob: -14.761873245239258
    7. '   ' → logprob: -15.886873245239258
    8. '```' → logprob: -16.261873245239258
    9. ' ' → logprob: -16.386873245239258
    10. ' 
' → logprob: -16.511873245239258

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005199087900109589
    2. ' )' → logprob: -7.625519752502441
    3. ')%' → logprob: -10.375519752502441
    4. '%' → logprob: -15.125519752502441
    5. ' %' → logprob: -16.750520706176758
    6. '```' → logprob: -16.750520706176758
    7. ')`' → logprob: -16.875520706176758
    8. ')
' → logprob: -17.125520706176758
    9. '   ' → logprob: -17.250520706176758
    10. '*' → logprob: -17.750520706176758

Token 96: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10154591500759125
    2. '%' → logprob: -2.351545810699463
    3. ' ' → logprob: -6.976545810699463
    4. ')' → logprob: -8.226546287536621
    5. '
' → logprob: -9.976546287536621
    6. '%b' → logprob: -10.726546287536621
    7. ' %
' → logprob: -10.851546287536621
    8. '```' → logprob: -11.726546287536621
    9. ')%' → logprob: -11.976546287536621
    10. '%
' → logprob: -11.976546287536621

Token 97: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.11353639513254166
    2. 'mod' → logprob: -2.8635363578796387
    3. ' ' → logprob: -3.3635363578796387
    4. ' MOD' → logprob: -4.238536357879639
    5. 'MOD' → logprob: -7.238536357879639
    6. '(mod' → logprob: -7.988536357879639
    7. '998' → logprob: -10.238536834716797
    8. ' ' → logprob: -10.363536834716797
    9. '_MOD' → logprob: -10.863536834716797
    10. '_mod' → logprob: -10.988536834716797

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03224969282746315
    2. '
' → logprob: -3.532249689102173
    3. '   ' → logprob: -7.157249927520752
    4. '<|end|>' → logprob: -7.282249927520752
    5. ',' → logprob: -7.907249927520752
    6. 'f' → logprob: -9.032249450683594
    7. '	' → logprob: -9.032249450683594
    8. '        
' → logprob: -9.532249450683594
    9. '```' → logprob: -9.657249450683594
    10. '
' → logprob: -9.907249450683594

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24544504284858704
    2. '
' → logprob: -1.8704450130462646
    3. '<|end|>' → logprob: -3.3704450130462646
    4. '   ' → logprob: -3.8704450130462646
    5. '```' → logprob: -5.995445251464844
    6. 'f' → logprob: -6.370445251464844
    7. '        
' → logprob: -6.620445251464844
    8. ' f' → logprob: -7.620445251464844
    9. ' ' → logprob: -7.745445251464844
    10. '    
' → logprob: -7.995445251464844

Token 100: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.00675775995478034
    2. ' f' → logprob: -5.006757736206055
    3. '       ' → logprob: -10.131757736206055
    4. '   ' → logprob: -13.631757736206055
    5. '	f' → logprob: -14.381757736206055
    6. ' ' → logprob: -15.006757736206055
    7. '<|end|>' → logprob: -16.131757736206055
    8. '```' → logprob: -16.381757736206055
    9. '
' → logprob: -16.506757736206055
    10. 'def' → logprob: -16.631757736206055

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006322591798380017
    2. '[' → logprob: -7.375632286071777
    3. '[I' → logprob: -13.250632286071777
    4. '[f' → logprob: -13.500632286071777
    5. '[
' → logprob: -13.750632286071777
    6. '```' → logprob: -14.625632286071777
    7. '[...]' → logprob: -15.750632286071777
    8. '[int' → logprob: -16.25063133239746
    9. '\[' → logprob: -16.37563133239746
    10. '[idx' → logprob: -16.50063133239746

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0040964470244944096
    2. ' ]' → logprob: -5.504096508026123
    3. ']=' → logprob: -11.254096031188965
    4. '=' → logprob: -12.629096031188965
    5. ' =' → logprob: -14.254096031188965
    6. '`]' → logprob: -14.754096031188965
    7. ' ' → logprob: -15.379096031188965
    8. '<|end|>' → logprob: -15.879096031188965
    9. ')' → logprob: -16.00409698486328
    10. '']' → logprob: -16.62909698486328

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859498515725136
    2. ' =' → logprob: -3.0485949516296387
    3. ' ' → logprob: -12.048595428466797
    4. ' =
' → logprob: -14.673595428466797
    5. '=
' → logprob: -14.673595428466797
    6. '=

' → logprob: -15.173595428466797
    7. '<|end|>' → logprob: -15.548595428466797
    8. '＝' → logprob: -16.048595428466797
    9. '=}' → logprob: -16.548595428466797
    10. ' =)' → logprob: -16.673595428466797

Token 104: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.889163970947266
    4. '	b' → logprob: -18.889163970947266
    5. ' ' → logprob: -21.139163970947266
    6. '   ' → logprob: -21.514163970947266
    7. ')b' → logprob: -22.264163970947266
    8. '(b' → logprob: -23.014163970947266
    9. '```' → logprob: -23.139163970947266
    10. '  ' → logprob: -23.514163970947266

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.041803017258644104
    2. 'f' → logprob: -3.4168031215667725
    3. ' None' → logprob: -4.916802883148193
    4. 'None' → logprob: -7.166802883148193
    5. ' ' → logprob: -10.916803359985352
    6. '<|end|>' → logprob: -11.916803359985352
    7. ' ' → logprob: -13.041803359985352
    8. '	f' → logprob: -13.541803359985352
    9. '(None' → logprob: -15.541803359985352
    10. ' none' → logprob: -15.791803359985352

Token 109: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007263474632054567
    2. '<|end|>' → logprob: -5.007263660430908
    3. 'f' → logprob: -8.13226318359375
    4. ')' → logprob: -9.38226318359375
    5. '#' → logprob: -10.13226318359375
    6. '```' → logprob: -10.38226318359375
    7. '<|end|>' → logprob: -10.63226318359375
    8. '
' → logprob: -11.00726318359375
    9. 'MOD' → logprob: -11.13226318359375
    10. ' def' → logprob: -12.13226318359375

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28103867173194885
    2. 'f' → logprob: -1.5310386419296265
    3. '#' → logprob: -4.406038761138916
    4. 'n' → logprob: -5.406038761138916
    5. '
' → logprob: -5.656038761138916
    6. '```' → logprob: -6.031038761138916
    7. '(' → logprob: -6.156038761138916
    8. '<|end|>' → logprob: -7.156038761138916
    9. '\' → logprob: -7.406038761138916
    10. '(
' → logprob: -7.906038761138916

Token 111: ' initialize' (ID: 18400)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.3410830795764923
    2. '_factor' → logprob: -2.34108304977417
    3. ' initialize' → logprob: -3.59108304977417
    4. ' calculate' → logprob: -3.71608304977417
    5. '_inverse' → logprob: -3.96608304977417
    6. ' combine' → logprob: -4.34108304977417
    7. ' inverse' → logprob: -4.34108304977417
    8. ' modular' → logprob: -4.46608304977417
    9. 'factor' → logprob: -4.46608304977417
    10. 'inverse' → logprob: -4.71608304977417

Token 112: '_inv' (ID: 53427)
  Prédit: '_inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.01051300298422575
    2. '_inv' → logprob: -4.885512828826904
    3. '_factor' → logprob: -6.385512828826904
    4. '_' → logprob: -7.135512828826904
    5. '_list' → logprob: -9.135513305664062
    6. '_in' → logprob: -9.260513305664062
    7. '_comb' → logprob: -10.010513305664062
    8. '_mod' → logprob: -10.510513305664062
    9. '_reverse' → logprob: -10.760513305664062
    10. 'inverse' → logprob: -10.885513305664062

Token 113: '_list' (ID: 4162)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.02794894203543663
    2. '_list' → logprob: -3.6529488563537598
    3. '_fact' → logprob: -6.90294885635376
    4. 'factor' → logprob: -7.77794885635376
    5. 'fact' → logprob: -8.777949333190918
    6. '_' → logprob: -10.027949333190918
    7. 'f' → logprob: -11.402949333190918
    8. '_fac' → logprob: -12.652949333190918
    9. 'list' → logprob: -13.152949333190918
    10. 'fac' → logprob: -13.277949333190918

Token 114: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.7372048862162046e-05
    2. '(f' → logprob: -10.625027656555176
    3. '(' → logprob: -13.375027656555176
    4. '(size' → logprob: -13.625027656555176
    5. ' (' → logprob: -15.125027656555176
    6. 'f' → logprob: -17.87502670288086
    7. 'def' → logprob: -18.50002670288086
    8. '```' → logprob: -18.75002670288086
    9. '(m' → logprob: -19.25002670288086
    10. 'n' → logprob: -19.25002670288086

Token 115: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9795445849886164e-05
    2. ' ,' → logprob: -9.750060081481934
    3. ',n' → logprob: -14.250060081481934
    4. ',size' → logprob: -15.625060081481934
    5. ',
' → logprob: -16.375059127807617
    6. ',int' → logprob: -16.500059127807617
    7. ',module' → logprob: -16.500059127807617
    8. '‌,' → logprob: -16.625059127807617
    9. '`,' → logprob: -17.125059127807617
    10. ')' → logprob: -17.375059127807617

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01602158136665821
    2. 'def' → logprob: -4.766021728515625
    3. 'return' → logprob: -5.641021728515625
    4. '[' → logprob: -5.641021728515625
    5. '[]' → logprob: -8.891021728515625
    6. ' return' → logprob: -9.266021728515625
    7. ' [' → logprob: -11.766021728515625
    8. ' ' → logprob: -12.266021728515625
    9. '  ' → logprob: -12.266021728515625
    10. 'f' → logprob: -12.266021728515625

Token 117: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37754741311073303
    2. 'return' (adapté à ' return') → logprob: -1.6275473833084106
    3. 'create' → logprob: -2.2525475025177
    4. 'def' → logprob: -4.627547264099121
    5. '   ' → logprob: -7.252547264099121
    6. 'inv' → logprob: -7.377547264099121
    7. ' return' → logprob: -7.627547264099121
    8. '[]' → logprob: -7.752547264099121
    9. ' [' → logprob: -8.502547264099121
    10. '[-' → logprob: -8.752547264099121

Token 118: ' create' (ID: 2501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34879210591316223
    2. ' [' → logprob: -1.2237920761108398
    3. 'create' → logprob: -8.72379207611084
    4. ' create' → logprob: -9.59879207611084
    5. '[get' → logprob: -10.59879207611084
    6. '[n' → logprob: -10.84879207611084
    7. ' ' → logprob: -10.97379207611084
    8. '[int' → logprob: -11.59879207611084
    9. '[-' → logprob: -12.09879207611084
    10. '[len' → logprob: -12.34879207611084

Token 119: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.014684110297821e-06
    2. '_' → logprob: -12.625008583068848
    3. '_li' → logprob: -13.250008583068848
    4. '_l' → logprob: -13.875008583068848
    5. '_lists' → logprob: -14.500008583068848
    6. '```' → logprob: -14.500008583068848
    7. '_lst' → logprob: -14.875008583068848
    8. 'List' → logprob: -15.250008583068848
    9. ' _' → logprob: -15.250008583068848
    10. '_lista' → logprob: -15.625008583068848

Token 120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002108118060277775
    2. '(' → logprob: -8.875210762023926
    3. ' (' → logprob: -9.625210762023926
    4. '<|end|>' → logprob: -12.875210762023926
    5. 'n' → logprob: -14.125210762023926
    6. '(int' → logprob: -15.125210762023926
    7. '```' → logprob: -15.250210762023926
    8. '<|end|>' → logprob: -15.625210762023926
    9. '(
' → logprob: -15.750210762023926
    10. '((' → logprob: -15.750210762023926

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. ' ,' → logprob: -10.000048637390137
    3. '   ' → logprob: -14.000048637390137
    4. ',
' → logprob: -14.125048637390137
    5. ')' → logprob: -14.125048637390137
    6. '<|end|>' → logprob: -14.625048637390137
    7. '<|end|>' → logprob: -15.750048637390137
    8. 'def' → logprob: -16.125049591064453
    9. ' ' → logprob: -16.625049591064453
    10. 'import' → logprob: -16.625049591064453

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007207844872027636
    2. '1' → logprob: -5.632207870483398
    3. ' ' → logprob: -5.632207870483398
    4. '-' → logprob: -11.007207870483398
    5. ' -' → logprob: -14.132207870483398
    6. 'None' → logprob: -14.132207870483398
    7. ')' → logprob: -14.382207870483398
    8. '   ' → logprob: -14.632207870483398
    9. '```' → logprob: -14.882207870483398
    10. '  ' → logprob: -15.507207870483398

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011425737291574478
    2. '1' → logprob: -4.511425971984863
    3. ' ' → logprob: -8.011425971984863
    4. '-' → logprob: -10.136425971984863
    5. 'None' → logprob: -12.886425971984863
    6. ' -' → logprob: -13.323925971984863
    7. ')' → logprob: -14.073925971984863
    8. '```' → logprob: -15.011425971984863
    9. ' None' → logprob: -15.261425971984863
    10. '   ' → logprob: -15.511425971984863

Token 124: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -16.25
    4. '),' → logprob: -17.875
    5. '<|end|>' → logprob: -18.0
    6. ')

' → logprob: -18.375
    7. '))' → logprob: -18.625
    8. ')return' → logprob: -18.875
    9. ')`' → logprob: -18.875
    10. '   ' → logprob: -18.875

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3136172294616699
    2. '<|end|>' → logprob: -1.31361722946167
    3. '```' → logprob: -8.813617706298828
    4. '<|end|>' → logprob: -8.938617706298828
    5. ' def' → logprob: -10.813617706298828
    6. '#' → logprob: -11.063617706298828
    7. '[' → logprob: -11.313617706298828
    8. ')' → logprob: -11.313617706298828
    9. '``' → logprob: -12.688617706298828
    10. '  
' → logprob: -13.438617706298828

Token 126: ' compute' (ID: 23864)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.4858519434928894
    2. ' fill' → logprob: -1.4858520030975342
    3. 'def' → logprob: -3.110852003097534
    4. 'mod' → logprob: -3.360852003097534
    5. ' def' → logprob: -3.985852003097534
    6. ' mod' → logprob: -4.110851764678955
    7. 'initialize' → logprob: -4.110851764678955
    8. 'inv' → logprob: -4.735851764678955
    9. 'inverse' → logprob: -4.860851764678955
    10. ' initialize' → logprob: -5.985851764678955

Token 127: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.40361934900283813
    2. '_inv' → logprob: -1.1536192893981934
    3. '_factor' → logprob: -4.653619289398193
    4. '_mod' → logprob: -5.153619289398193
    5. '_' → logprob: -6.903619289398193
    6. 'inv' → logprob: -8.903619766235352
    7. '_in' → logprob: -10.278619766235352
    8. 'inverse' → logprob: -10.528619766235352
    9. '_reverse' → logprob: -11.153619766235352
    10. '_pow' → logprob: -11.403619766235352

Token 128: '(a' (ID: 6271)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.19265273213386536
    2. '(n' → logprob: -1.942652702331543
    3. 's' → logprob: -3.942652702331543
    4. '(' → logprob: -5.067652702331543
    5. '_factor' → logprob: -6.317652702331543
    6. '_mod' → logprob: -6.442652702331543
    7. '(f' → logprob: -6.567652702331543
    8. '_array' → logprob: -8.192652702331543
    9. '_' → logprob: -8.442652702331543
    10. '_n' → logprob: -9.192652702331543

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006988536333665252
    2. '):' → logprob: -8.000699043273926
    3. ' ,' → logprob: -8.500699043273926
    4. ',n' → logprob: -9.500699043273926
    5. 'a' → logprob: -10.750699043273926
    6. ',
' → logprob: -10.875699043273926
    7. ')' → logprob: -11.125699043273926
    8. 'n' → logprob: -11.750699043273926
    9. ',a' → logprob: -12.375699043273926
    10. '):
' → logprob: -12.875699043273926

Token 130: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0228088591247797
    2. 'm' → logprob: -3.897808790206909
    3. ' mod' → logprob: -6.647809028625488
    4. 'MOD' → logprob: -7.397809028625488
    5. 'n' → logprob: -8.772809028625488
    6. 'p' → logprob: -9.147809028625488
    7. 'b' → logprob: -9.772809028625488
    8. '	mod' → logprob: -11.272809028625488
    9. ' m' → logprob: -11.897809028625488
    10. 'md' → logprob: -12.772809028625488

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008217801805585623
    2. ')' → logprob: -8.125822067260742
    3. '):
' → logprob: -8.500822067260742
    4. ',' → logprob: -8.500822067260742
    5. ' ):' → logprob: -9.125822067260742
    6. ':' → logprob: -12.625822067260742
    7. '):
' → logprob: -13.125822067260742
    8. '   ' → logprob: -13.750822067260742
    9. ' ' → logprob: -14.625822067260742
    10. '=' → logprob: -14.625822067260742

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0786188542842865
    2. 'pow' → logprob: -3.4536187648773193
    3. 'def' → logprob: -4.078619003295898
    4. ' pow' → logprob: -4.203619003295898
    5. 'a' → logprob: -5.578619003295898
    6. '1' → logprob: -5.828619003295898
    7. ' ' → logprob: -6.828619003295898
    8. ' return' → logprob: -6.953619003295898
    9. ' def' → logprob: -6.953619003295898
    10. ' a' → logprob: -7.453619003295898

Token 133: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0001987722353078425
    2. 'return' (adapté à ' return') → logprob: -8.625198364257812
    3. ' pow' → logprob: -11.375198364257812
    4. '   ' → logprob: -12.375198364257812
    5. '(pow' → logprob: -13.125198364257812
    6. '1' → logprob: -14.875198364257812
    7. '
' → logprob: -15.500198364257812
    8. '0' → logprob: -15.500198364257812
    9. 'def' → logprob: -15.625198364257812
    10. '_pow' → logprob: -16.000198364257812

Token 134: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00861681904643774
    2. ' pow' → logprob: -4.758616924285889
    3. '(pow' → logprob: -13.13361644744873
    4. 'mod' → logprob: -16.133617401123047
    5. '_pow' → logprob: -17.258617401123047
    6. '   ' → logprob: -17.508617401123047
    7. ' ' → logprob: -18.008617401123047
    8. 'power' → logprob: -18.508617401123047
    9. '1' → logprob: -18.883617401123047
    10. '
' → logprob: -19.133617401123047

Token 135: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1269567757844925
    2. '(' → logprob: -2.1269567012786865
    3. 'a' → logprob: -10.876956939697266
    4. '(
' → logprob: -11.751956939697266
    5. '<|end|>' → logprob: -14.751956939697266
    6. '(ai' → logprob: -14.876956939697266
    7. '((' → logprob: -15.626956939697266
    8. '(x' → logprob: -16.126956939697266
    9. '(pow' → logprob: -16.126956939697266
    10. ' (' → logprob: -16.251956939697266

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016587569552939385
    2. ' ,' → logprob: -9.250165939331055
    3. ',
' → logprob: -10.125165939331055
    4. 'mod' → logprob: -11.000165939331055
    5. ',-' → logprob: -12.250165939331055
    6. '(mod' → logprob: -12.500165939331055
    7. '-' → logprob: -13.750165939331055
    8. ')' → logprob: -13.750165939331055
    9. ',module' → logprob: -14.375165939331055
    10. 'MOD' → logprob: -14.875165939331055

Token 137: ' -' (ID: 533)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005729094613343477
    2. '-' → logprob: -6.1307291984558105
    3. ' mod' → logprob: -6.3807291984558105
    4. 'MOD' → logprob: -6.5057291984558105
    5. '-mod' → logprob: -8.880728721618652
    6. '	mod' → logprob: -9.130728721618652
    7. '(mod' → logprob: -10.130728721618652
    8. ' ' → logprob: -10.880728721618652
    9. ' MOD' → logprob: -11.255728721618652
    10. '.mod' → logprob: -11.880728721618652

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'MOD' → logprob: -18.0
    4. 'mod' → logprob: -19.0
    5. '
' → logprob: -19.375
    6. '```' → logprob: -19.875
    7. '

' → logprob: -20.0
    8. '-' → logprob: -20.125
    9. '  ' → logprob: -20.25
    10. '۱' → logprob: -20.25

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007615729700773954
    2. ' ,' → logprob: -4.882615566253662
    3. ',
' → logprob: -12.38261604309082
    4. ')' → logprob: -12.88261604309082
    5. 'mod' → logprob: -13.88261604309082
    6. ' ' → logprob: -14.63261604309082
    7. '   ' → logprob: -15.38261604309082
    8. ',module' → logprob: -15.63261604309082
    9. '```' → logprob: -15.63261604309082
    10. '%' → logprob: -16.13261604309082

Token 140: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.201525017619133
    2. 'mod' → logprob: -1.7015249729156494
    3. ' MOD' → logprob: -9.70152473449707
    4. 'MOD' → logprob: -10.07652473449707
    5. '(mod' → logprob: -12.07652473449707
    6. '	mod' → logprob: -13.07652473449707
    7. ' ' → logprob: -15.32652473449707
    8. '_mod' → logprob: -15.45152473449707
    9. ' ' → logprob: -16.82652473449707
    10. '.mod' → logprob: -17.20152473449707

Token 141: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -16.875
    4. ')

' → logprob: -17.75
    5. '),' → logprob: -19.75
    6. ')`' → logprob: -19.875
    7. '))' → logprob: -21.0
    8. ')#' → logprob: -21.125
    9. ')}' → logprob: -21.25
    10. '<|end|>' → logprob: -21.5

Token 142: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14237132668495178
    2. 'def' → logprob: -2.517371416091919
    3. '<|end|>' → logprob: -3.267371416091919
    4. '

' → logprob: -4.76737117767334
    5. '\n' → logprob: -6.14237117767334
    6. ' def' → logprob: -6.64237117767334
    7. '\' → logprob: -7.14237117767334
    8. ' 
' → logprob: -8.01737117767334
    9. '
' → logprob: -8.64237117767334
    10. '```' → logprob: -8.76737117767334

Token 143: ' fill' (ID: 6954)
  Prédit: ' fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fill' → logprob: -0.21347171068191528
    2. ' compute' → logprob: -1.8384716510772705
    3. ' initialize' → logprob: -3.9634716510772705
    4. ' def' → logprob: -5.58847188949585
    5. ' calculate' → logprob: -5.71347188949585
    6. 'compute' → logprob: -6.08847188949585
    7. ' inverse' → logprob: -6.33847188949585
    8. 'fill' → logprob: -6.58847188949585
    9. 'initialize' → logprob: -7.96347188949585
    10. 'def' → logprob: -8.463471412658691

Token 144: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.04063240811228752
    2. '_inverse' → logprob: -3.540632486343384
    3. '_factor' → logprob: -4.540632247924805
    4. '_list' → logprob: -9.665632247924805
    5. '_' → logprob: -10.665632247924805
    6. '_in' → logprob: -10.790632247924805
    7. '##_' → logprob: -11.915632247924805
    8. '_f' → logprob: -12.290632247924805
    9. '```' → logprob: -12.540632247924805
    10. '_def' → logprob: -12.790632247924805

Token 145: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002582402084954083
    2. '_factor' → logprob: -9.000258445739746
    3. '_lst' → logprob: -9.500258445739746
    4. '_array' → logprob: -11.125258445739746
    5. '_' → logprob: -11.375258445739746
    6. '_lists' → logprob: -12.125258445739746
    7. 'a' → logprob: -12.125258445739746
    8. '_li' → logprob: -13.250258445739746
    9. '_a' → logprob: -13.375258445739746
    10. '```' → logprob: -13.375258445739746

Token 146: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.6226117014884949
    2. '(f' → logprob: -1.2476117610931396
    3. '(n' → logprob: -1.8726117610931396
    4. '(i' → logprob: -4.1226115226745605
    5. ' (' → logprob: -6.1226115226745605
    6. '(a' → logprob: -6.2476115226745605
    7. '(v' → logprob: -6.6226115226745605
    8. '(' → logprob: -8.497611999511719
    9. '(iv' → logprob: -8.497611999511719
    10. '(in' → logprob: -8.622611999511719

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016120117157697678
    2. ',n' → logprob: -4.766119956970215
    3. ',f' → logprob: -5.516119956970215
    4. ' ,' → logprob: -6.516119956970215
    5. '_,' → logprob: -6.891119956970215
    6. ',_' → logprob: -7.766119956970215
    7. '   ' → logprob: -8.766119956970215
    8. 'f' → logprob: -8.891119956970215
    9. ')' → logprob: -9.891119956970215
    10. '```' → logprob: -10.391119956970215

Token 148: ' f' (ID: 285)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05946511775255203
    2. ' n' → logprob: -3.059465169906616
    3. 'len' → logprob: -5.434464931488037
    4. 'MOD' → logprob: -6.059464931488037
    5. ' MOD' → logprob: -6.934464931488037
    6. ' len' → logprob: -7.309464931488037
    7. 'mod' → logprob: -7.309464931488037
    8. ')' → logprob: -7.309464931488037
    9. ' ' → logprob: -8.746965408325195
    10. 'a' → logprob: -9.184465408325195

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015181333583313972
    2. ',n' → logprob: -9.500151634216309
    3. ' ,' → logprob: -9.500151634216309
    4. ',
' → logprob: -14.875151634216309
    5. 'n' → logprob: -15.250151634216309
    6. ')' → logprob: -15.250151634216309
    7. '   ' → logprob: -15.500151634216309
    8. ',int' → logprob: -16.000152587890625
    9. ',f' → logprob: -16.125152587890625
    10. 'def' → logprob: -16.125152587890625

Token 150: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5768453478813171
    2. ' n' → logprob: -0.8268453478813171
    3. ',' → logprob: -8.201845169067383
    4. 'mod' → logprob: -8.326845169067383
    5. ' mod' → logprob: -9.201845169067383
    6. '<|end|>' → logprob: -9.576845169067383
    7. ' MOD' → logprob: -9.701845169067383
    8. 'MOD' → logprob: -10.076845169067383
    9. ')' → logprob: -10.201845169067383
    10. 'f' → logprob: -10.826845169067383

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002366753324167803
    2. ' ,' → logprob: -8.375236511230469
    3. '):' → logprob: -12.375236511230469
    4. '   ' → logprob: -14.000236511230469
    5. ')' → logprob: -14.375236511230469
    6. ',
' → logprob: -16.37523651123047
    7. ' ' → logprob: -16.50023651123047
    8. '):
' → logprob: -16.50023651123047
    9. '),' → logprob: -16.75023651123047
    10. '+' → logprob: -16.75023651123047

Token 152: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04351941496133804
    2. ' mod' → logprob: -3.2935194969177246
    3. 'MOD' → logprob: -5.293519496917725
    4. ' MOD' → logprob: -7.793519496917725
    5. '	mod' → logprob: -11.918519020080566
    6. '   ' → logprob: -12.168519020080566
    7. ' ' → logprob: -12.543519020080566
    8. 'm' → logprob: -13.043519020080566
    9. '```' → logprob: -13.418519020080566
    10. 'n' → logprob: -13.918519020080566

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025869545061141253
    2. '):
' → logprob: -6.002586841583252
    3. ')' → logprob: -9.25258731842041
    4. ' ):' → logprob: -11.50258731842041
    5. '):
' → logprob: -12.37758731842041
    6. '   ' → logprob: -14.50258731842041
    7. '):

' → logprob: -15.37758731842041
    8. ' ' → logprob: -15.75258731842041
    9. ':' → logprob: -16.377586364746094
    10. ',' → logprob: -17.377586364746094

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026459835469722748
    2. 'inv' → logprob: -3.6514599323272705
    3. ' inv' → logprob: -9.276459693908691
    4. '    
' → logprob: -11.526459693908691
    5. ')' → logprob: -11.651459693908691
    6. ' ' → logprob: -11.651459693908691
    7. '(inv' → logprob: -11.776459693908691
    8. '```' → logprob: -12.276459693908691
    9. '[' → logprob: -12.526459693908691
    10. '  ' → logprob: -12.651459693908691

Token 155: ' b' (ID: 287)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.01281640212982893
    2. '   ' → logprob: -4.387816429138184
    3. ' inv' → logprob: -8.137816429138184
    4. '    
' → logprob: -12.637816429138184
    5. '
' → logprob: -12.887816429138184
    6. ' ' → logprob: -13.012816429138184
    7. 'b' (adapté à ' b') → logprob: -13.262816429138184
    8. '  ' → logprob: -13.762816429138184
    9. '

' → logprob: -13.887816429138184
    10. '(inv' → logprob: -14.137816429138184

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2816205322742462
    2. '=' → logprob: -1.4066205024719238
    3. '[n' → logprob: -8.406620979309082
    4. '[' → logprob: -9.031620979309082
    5. 'n' → logprob: -10.156620979309082
    6. '=n' → logprob: -10.531620979309082
    7. ' ' → logprob: -11.281620979309082
    8. '=[' → logprob: -11.781620979309082
    9. 'b' → logprob: -12.031620979309082
    10. 'f' → logprob: -12.031620979309082

Token 157: ' compute' (ID: 23864)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5686578154563904
    2. 'compute' → logprob: -1.0686578750610352
    3. 'pow' → logprob: -2.693657875061035
    4. ' compute' → logprob: -4.693657875061035
    5. '0' → logprob: -5.318657875061035
    6. 'f' → logprob: -5.943657875061035
    7. ' ' → logprob: -6.443657875061035
    8. '(' → logprob: -7.068657875061035
    9. 'mod' → logprob: -7.068657875061035
    10. ' pow' → logprob: -7.693657875061035

Token 158: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -7.505351095460355e-05
    2. '_' → logprob: -10.375075340270996
    3. '_inv' → logprob: -11.500075340270996
    4. 'inverse' → logprob: -11.625075340270996
    5. '_reverse' → logprob: -11.750075340270996
    6. '_factor' → logprob: -12.875075340270996
    7. ')' → logprob: -13.250075340270996
    8. ')_' → logprob: -13.500075340270996
    9. ' _' → logprob: -13.625075340270996
    10. '_integer' → logprob: -14.000075340270996

Token 159: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.6060808522743173e-05
    2. '(' → logprob: -10.750025749206543
    3. 'f' → logprob: -13.125025749206543
    4. '<|end|>' → logprob: -13.250025749206543
    5. '(
' → logprob: -14.375025749206543
    6. ' (' → logprob: -17.62502670288086
    7. ')' → logprob: -17.75002670288086
    8. ' f' → logprob: -17.75002670288086
    9. '(b' → logprob: -17.75002670288086
    10. '[f' → logprob: -17.87502670288086

Token 160: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00017159747949335724
    2. '[-' → logprob: -8.750171661376953
    3. '[' → logprob: -11.375171661376953
    4. 'n' → logprob: -14.875171661376953
    5. ' [' → logprob: -15.125171661376953
    6. ')' → logprob: -15.375171661376953
    7. '```' → logprob: -15.375171661376953
    8. ' ' → logprob: -16.000171661376953
    9. '[len' → logprob: -16.000171661376953
    10. '[
' → logprob: -16.375171661376953

Token 161: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.29270821809768677
    2. '[n' → logprob: -1.417708158493042
    3. '[' → logprob: -5.292708396911621
    4. ']' → logprob: -5.667708396911621
    5. '[-' → logprob: -6.042708396911621
    6. ' ],' → logprob: -8.667708396911621
    7. '```' → logprob: -9.292708396911621
    8. '[N' → logprob: -9.542708396911621
    9. '[i' → logprob: -10.042708396911621
    10. '[len' → logprob: -10.167708396911621

Token 162: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07890399545431137
    2. 'mod' → logprob: -2.578903913497925
    3. '	mod' → logprob: -11.953904151916504
    4. '(mod' → logprob: -12.328904151916504
    5. ' MOD' → logprob: -13.578904151916504
    6. 'MOD' → logprob: -14.078904151916504
    7. ' ' → logprob: -14.578904151916504
    8. ')' → logprob: -14.953904151916504
    9. '```' → logprob: -16.328903198242188
    10. '_mod' → logprob: -16.453903198242188

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05495551973581314
    2. ')
' → logprob: -2.92995548248291
    3. ')
' → logprob: -9.92995548248291
    4. ' )' → logprob: -11.92995548248291
    5. ',' → logprob: -12.05495548248291
    6. ')

' → logprob: -12.17995548248291
    7. ' )
' → logprob: -13.05495548248291
    8. '   ' → logprob: -13.05495548248291
    9. ' ' → logprob: -13.30495548248291
    10. ')`' → logprob: -15.67995548248291

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08453454077243805
    2. 'for' → logprob: -2.5845346450805664
    3. ' for' → logprob: -5.209534645080566
    4. 'inv' → logprob: -9.209534645080566
    5. '    
' → logprob: -10.334534645080566
    6. 'def' → logprob: -11.584534645080566
    7. '
' → logprob: -11.834534645080566
    8. '	for' → logprob: -12.584534645080566
    9. ')' → logprob: -12.709534645080566
    10. 'b' → logprob: -12.834534645080566

Token 165: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.007916420698165894
    2. '   ' → logprob: -4.882916450500488
    3. 'for' → logprob: -8.632916450500488
    4. ' inv' → logprob: -9.007916450500488
    5. '    
' → logprob: -13.132916450500488
    6. ' for' → logprob: -13.382916450500488
    7. '```' → logprob: -13.382916450500488
    8. ' ' → logprob: -13.507916450500488
    9. '(inv' → logprob: -13.632916450500488
    10. '  ' → logprob: -14.632916450500488

Token 166: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00012070851516909897
    2. '[' → logprob: -9.375121116638184
    3. '[-' → logprob: -11.500121116638184
    4. ' [' → logprob: -11.875121116638184
    5. '```' → logprob: -11.875121116638184
    6. '[len' → logprob: -12.625121116638184
    7. '[N' → logprob: -13.750121116638184
    8. '[num' → logprob: -13.875121116638184
    9. '[
' → logprob: -13.875121116638184
    10. '
' → logprob: -14.125121116638184

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021259987261146307
    2. ' ]' → logprob: -8.625212669372559
    3. ']=' → logprob: -10.375212669372559
    4. ']
' → logprob: -14.125212669372559
    5. '`]' → logprob: -15.125212669372559
    6. ')]' → logprob: -15.500212669372559
    7. '']' → logprob: -15.875212669372559
    8. '=' → logprob: -16.125211715698242
    9. ')' → logprob: -16.250211715698242
    10. ']

' → logprob: -16.750211715698242

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014177292585373
    2. '=' → logprob: -1.7014176845550537
    3. ' ' → logprob: -13.076417922973633
    4. ',' → logprob: -14.451417922973633
    5. '[' → logprob: -15.326417922973633
    6. ')' → logprob: -15.576417922973633
    7. ' =
' → logprob: -15.701417922973633
    8. '  ' → logprob: -15.951417922973633
    9. ' ==' → logprob: -16.451417922973633
    10. ']' → logprob: -16.451417922973633

Token 169: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00023059594968799502
    2. ' b' → logprob: -8.37523078918457
    3. '	b' → logprob: -18.25023078918457
    4. '<|end|>' → logprob: -18.62523078918457
    5. ' ' → logprob: -18.87523078918457
    6. '   ' → logprob: -19.12523078918457
    7. ')b' → logprob: -19.37523078918457
    8. '*b' → logprob: -20.12523078918457
    9. '$b' → logprob: -20.75023078918457
    10. '
' → logprob: -21.12523078918457

Token 170: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48235753178596497
    2. '   ' → logprob: -1.3573575019836426
    3. ' for' → logprob: -2.3573575019836426
    4. '<|end|>' → logprob: -3.9823575019836426
    5. 'for' → logprob: -5.482357501983643
    6. '    
' → logprob: -5.857357501983643
    7. '\n' → logprob: -6.857357501983643
    8. ' 
' → logprob: -6.982357501983643
    9. '```' → logprob: -6.982357501983643
    10. '  
' → logprob: -7.232357501983643

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4654616117477417
    2. ' for' → logprob: -1.3404616117477417
    3. 'for' → logprob: -2.2154617309570312
    4. '	for' → logprob: -7.715461730957031
    5. '    
' → logprob: -8.340461730957031
    6. '
' → logprob: -8.590461730957031
    7. ',' → logprob: -8.715461730957031
    8. ')' → logprob: -9.090461730957031
    9. '```' → logprob: -10.090461730957031
    10. 'def' → logprob: -10.340461730957031

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -13.750000953674316
    3. ' for' → logprob: -15.750000953674316
    4. '```' → logprob: -18.500001907348633
    5. 'i' → logprob: -19.125001907348633
    6. '
' → logprob: -20.000001907348633
    7. '	for' → logprob: -22.000001907348633
    8. '    
' → logprob: -22.125001907348633
    9. '``' → logprob: -23.125001907348633
    10. 'def' → logprob: -23.250001907348633

Token 173: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019402962643653154
    2. 'i' → logprob: -6.2519402503967285
    3. ' ' → logprob: -11.626940727233887
    4. '	i' → logprob: -13.126940727233887
    5. ' ' → logprob: -15.376940727233887
    6. '   ' → logprob: -15.751940727233887
    7. '```' → logprob: -15.876940727233887
    8. '  ' → logprob: -16.37693977355957
    9. ' in' → logprob: -16.87693977355957
    10. '`' → logprob: -17.75193977355957

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011474411003291607
    2. 'in' → logprob: -4.636474609375
    3. 'n' → logprob: -6.761474609375
    4. ' n' → logprob: -8.011474609375
    5. ' ' → logprob: -8.636474609375
    6. '   ' → logprob: -11.011474609375
    7. ' i' → logprob: -11.386474609375
    8. ' range' → logprob: -11.761474609375
    9. '  ' → logprob: -11.886474609375
    10. 'range' → logprob: -12.636474609375

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5762326717376709
    2. ' range' → logprob: -0.8262326717376709
    3. '(range' → logprob: -8.32623291015625
    4. 'n' → logprob: -10.57623291015625
    5. ' n' → logprob: -11.82623291015625
    6. 're' → logprob: -12.45123291015625
    7. '	range' → logprob: -12.45123291015625
    8. ' ' → logprob: -12.57623291015625
    9. ' xrange' → logprob: -13.20123291015625
    10. ' reversed' → logprob: -13.20123291015625

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.839121826691553e-05
    2. '(' → logprob: -9.500078201293945
    3. 'n' → logprob: -13.375078201293945
    4. ' (' → logprob: -13.750078201293945
    5. ' n' → logprob: -14.500078201293945
    6. '(
' → logprob: -15.750078201293945
    7. '(range' → logprob: -16.000078201293945
    8. '	n' → logprob: -17.875078201293945
    9. '[n' → logprob: -18.000078201293945
    10. '
' → logprob: -18.250078201293945

Token 177: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028744153678417206
    2. ' -' → logprob: -6.002874374389648
    3. ',' → logprob: -8.002874374389648
    4. ' ,' → logprob: -9.877874374389648
    5. '-,' → logprob: -12.127874374389648
    6. ' ' → logprob: -12.627874374389648
    7. ',-' → logprob: -13.127874374389648
    8. '   ' → logprob: -13.752874374389648
    9. ' -,' → logprob: -15.252874374389648
    10. '1' → logprob: -15.377874374389648

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012526950798928738
    2. ' ' → logprob: -4.387526988983154
    3. '1' → logprob: -11.887526512145996
    4. '-' → logprob: -12.012526512145996
    5. ' -' → logprob: -12.512526512145996
    6. '```' → logprob: -15.387526512145996
    7. ',' → logprob: -16.137527465820312
    8. '>' → logprob: -16.262527465820312
    9. '
' → logprob: -16.262527465820312
    10. '   ' → logprob: -17.325027465820312

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.875005722045898
    3. '1' → logprob: -13.250005722045898
    4. '-' → logprob: -13.250005722045898
    5. ' -' → logprob: -18.5000057220459
    6. '```' → logprob: -18.7500057220459
    7. '   ' → logprob: -19.0000057220459
    8. '
' → logprob: -19.3750057220459
    9. '>' → logprob: -21.0625057220459
    10. '  ' → logprob: -21.2500057220459

Token 180: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10557061433792114
    2. ',' → logprob: -2.9805705547332764
    3. ' -' → logprob: -3.2305705547332764
    4. ',-' → logprob: -4.9805707931518555
    5. ' ,' → logprob: -6.1055707931518555
    6. ' ,-' → logprob: -7.9805707931518555
    7. '-,' → logprob: -8.355570793151855
    8. '):' → logprob: -9.980570793151855
    9. '):
' → logprob: -10.230570793151855
    10. '   ' → logprob: -10.480570793151855

Token 181: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05495608225464821
    2. ' -' → logprob: -2.9299561977386475
    3. '   ' → logprob: -9.929956436157227
    4. '  ' → logprob: -11.179956436157227
    5. ' ' → logprob: -11.804956436157227
    6. ')' → logprob: -14.054956436157227
    7. '```' → logprob: -14.304956436157227
    8. '-i' → logprob: -14.429956436157227
    9. '−' → logprob: -14.929956436157227
    10. '1' → logprob: -15.429956436157227

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19331656396389008
    2. '-' → logprob: -1.8183165788650513
    3. ' -' → logprob: -4.318316459655762
    4. '   ' → logprob: -9.443316459655762
    5. ')' → logprob: -10.818316459655762
    6. ' ' → logprob: -10.818316459655762
    7. '):
' → logprob: -11.318316459655762
    8. '```' → logprob: -11.318316459655762
    9. '  ' → logprob: -12.068316459655762
    10. ')-' → logprob: -12.818316459655762

Token 183: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6574885249137878
    2. '):' → logprob: -0.9074885249137878
    3. '):
' → logprob: -2.6574885845184326
    4. ' -' → logprob: -4.9074883460998535
    5. ' ):' → logprob: -7.9074883460998535
    6. '   ' → logprob: -8.782488822937012
    7. ')' → logprob: -9.657488822937012
    8. '):
' → logprob: -9.782488822937012
    9. ' ):
' → logprob: -10.032488822937012
    10. '):-' → logprob: -10.282488822937012

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22136007249355316
    2. ':' → logprob: -2.221359968185425
    3. '   ' → logprob: -2.971359968185425
    4. '-' → logprob: -4.846360206604004
    5. ' ' → logprob: -5.221360206604004
    6. ')' → logprob: -5.221360206604004
    7. '    ' → logprob: -5.346360206604004
    8. ',' → logprob: -5.971360206604004
    9. '):
' → logprob: -5.971360206604004
    10. ' -' → logprob: -6.221360206604004

Token 185: ' b' (ID: 287)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.5801553726196289
    2. 'inv' → logprob: -0.8301553726196289
    3. '   ' → logprob: -6.205155372619629
    4. '       ' → logprob: -6.580155372619629
    5. ' ' → logprob: -8.580155372619629
    6. 'in' → logprob: -9.080155372619629
    7. '           ' → logprob: -9.205155372619629
    8. '
' → logprob: -9.205155372619629
    9. '    ' → logprob: -9.705155372619629
    10. '(inv' → logprob: -9.705155372619629

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133353590965271
    2. ' =' → logprob: -1.3133354187011719
    3. ' *=' → logprob: -10.313335418701172
    4. '*=' → logprob: -10.688335418701172
    5. '=b' → logprob: -11.438335418701172
    6. 'b' → logprob: -12.813335418701172
    7. ' ' → logprob: -14.063335418701172
    8. '=(' → logprob: -14.813335418701172
    9. '
' → logprob: -14.938335418701172
    10. ')' → logprob: -15.188335418701172

Token 187: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12718573212623596
    2. '(b' → logprob: -2.127185821533203
    3. '(inv' → logprob: -8.877185821533203
    4. '(' → logprob: -9.627185821533203
    5. ' ' → logprob: -11.252185821533203
    6. '(f' → logprob: -11.252185821533203
    7. '(in' → logprob: -11.752185821533203
    8. '   ' → logprob: -12.877185821533203
    9. '(a' → logprob: -13.002185821533203
    10. '(ans' → logprob: -13.252185821533203

Token 188: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0022595678456127644
    2. ' b' → logprob: -6.252259731292725
    3. 'inv' → logprob: -8.377259254455566
    4. '(b' → logprob: -10.002259254455566
    5. '(inv' → logprob: -10.252259254455566
    6. ' inv' → logprob: -11.502259254455566
    7. ' (' → logprob: -11.877259254455566
    8. '	b' → logprob: -14.252259254455566
    9. ')b' → logprob: -14.377259254455566
    10. '(' → logprob: -14.502259254455566

Token 189: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05507218837738037
    2. '*' → logprob: -2.93007230758667
    3. ' ' → logprob: -8.680071830749512
    4. '1' → logprob: -12.055071830749512
    5. '+' → logprob: -12.555071830749512
    6. ' *
' → logprob: -13.930071830749512
    7. '`' → logprob: -14.180071830749512
    8. ' `' → logprob: -14.305071830749512
    9. '```' → logprob: -14.430071830749512
    10. '    ' → logprob: -14.430071830749512

Token 190: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2811904847621918
    2. ' i' → logprob: -1.4061905145645142
    3. '
' → logprob: -11.656190872192383
    4. '(i' → logprob: -12.281190872192383
    5. ' ' → logprob: -12.406190872192383
    6. ' 
' → logprob: -12.781190872192383
    7. ')i' → logprob: -12.781190872192383
    8. '	i' → logprob: -13.031190872192383
    9. '<|end|>' → logprob: -13.031190872192383
    10. '   ' → logprob: -13.281190872192383

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0549178272485733
    2. '-' → logprob: -3.179917812347412
    3. ')%' → logprob: -4.679917812347412
    4. ' )' → logprob: -6.429917812347412
    5. ' -' → logprob: -7.804917812347412
    6. ')
' → logprob: -8.30491828918457
    7. '-)' → logprob: -9.55491828918457
    8. '%' → logprob: -9.55491828918457
    9. '   ' → logprob: -11.05491828918457
    10. ')

' → logprob: -11.05491828918457

Token 192: ' %' (ID: 1851)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6983919143676758
    2. '%' → logprob: -1.0733919143676758
    3. ' %' → logprob: -2.323391914367676
    4. ')' → logprob: -2.948391914367676
    5. ')%' → logprob: -5.948391914367676
    6. ' -' → logprob: -6.073391914367676
    7. ' ' → logprob: -6.573391914367676
    8. '   ' → logprob: -7.448391914367676
    9. ' //' → logprob: -7.573391914367676
    10. '```' → logprob: -7.698391914367676

Token 193: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000462366413557902
    2. ' mod' → logprob: -7.750462532043457
    3. 'MOD' → logprob: -10.375462532043457
    4. '(mod' → logprob: -15.250462532043457
    5. ' MOD' → logprob: -16.75046157836914
    6. '	mod' → logprob: -17.00046157836914
    7. '
' → logprob: -17.37546157836914
    8. ' ' → logprob: -18.25046157836914
    9. '```' → logprob: -18.37546157836914
    10. 'md' → logprob: -18.87546157836914

Token 194: '
' (ID: 198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.20431236922740936
    2. '   ' → logprob: -2.079312324523926
    3. 'i' → logprob: -3.204312324523926
    4. ' inv' → logprob: -5.079312324523926
    5. '       ' → logprob: -5.329312324523926
    6. ' ' → logprob: -6.204312324523926
    7. '    
' → logprob: -6.954312324523926
    8. '-' → logprob: -7.204312324523926
    9. ' i' → logprob: -7.204312324523926
    10. '
' → logprob: -7.454312324523926

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.666128396987915
    2. 'inv' → logprob: -1.416128396987915
    3. '   ' → logprob: -2.166128396987915
    4. '-' → logprob: -2.791128396987915
    5. '
' → logprob: -3.041128396987915
    6. ' ' → logprob: -5.791128158569336
    7. ' inv' → logprob: -6.041128158569336
    8. 'i' → logprob: -6.166128158569336
    9. '        
' → logprob: -6.291128158569336
    10. '    
' → logprob: -6.416128158569336

Token 196: ' inv' (ID: 1827)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1859932392835617
    2. 'inv' (adapté à ' inv') → logprob: -2.060993194580078
    3. '   ' → logprob: -3.685993194580078
    4. 'i' → logprob: -4.560993194580078
    5. 'f' → logprob: -5.310993194580078
    6. '       ' → logprob: -7.310993194580078
    7. '    
' → logprob: -8.560993194580078
    8. '1' → logprob: -8.935993194580078
    9. '
' → logprob: -8.935993194580078
    10. '0' → logprob: -9.060993194580078

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.000017166137695
    3. '[
' → logprob: -15.000017166137695
    4. '[I' → logprob: -15.125017166137695
    5. '\[' → logprob: -16.750017166137695
    6. 'i' → logprob: -16.875017166137695
    7. '```' → logprob: -17.250017166137695
    8. '[j' → logprob: -18.375017166137695
    9. '[int' → logprob: -18.875017166137695
    10. '[(' → logprob: -19.375017166137695

Token 198: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025528310798108578
    2. ' -' → logprob: -6.1275529861450195
    3. ']' → logprob: -8.37755298614502
    4. '-)' → logprob: -9.37755298614502
    5. '-=' → logprob: -10.37755298614502
    6. ')' → logprob: -11.12755298614502
    7. '=' → logprob: -13.25255298614502
    8. ' -=' → logprob: -13.25255298614502
    9. ')]' → logprob: -14.25255298614502
    10. '```' → logprob: -14.62755298614502

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ']' → logprob: -9.250110626220703
    3. ' ' → logprob: -11.250110626220703
    4. '   ' → logprob: -14.500110626220703
    5. '<|end|>' → logprob: -15.125110626220703
    6. '```' → logprob: -16.375110626220703
    7. '  ' → logprob: -16.500110626220703
    8. '    ' → logprob: -16.500110626220703
    9. ']=' → logprob: -16.875110626220703
    10. ' ]' → logprob: -16.875110626220703

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.500011444091797
    3. '<|end|>' → logprob: -13.625011444091797
    4. '   ' → logprob: -16.250011444091797
    5. '```' → logprob: -16.375011444091797
    6. ']' → logprob: -16.500011444091797
    7. ')' → logprob: -16.625011444091797
    8. '0' → logprob: -17.000011444091797
    9. '<|end|>' → logprob: -18.000011444091797
    10. '  ' → logprob: -18.125011444091797

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002865854650735855
    2. ' ]' → logprob: -6.252865791320801
    3. ')' → logprob: -7.502865791320801
    4. '=' → logprob: -8.0028657913208
    5. ']=' → logprob: -10.1278657913208
    6. ' )' → logprob: -12.3778657913208
    7. ')]' → logprob: -12.6278657913208
    8. ' =' → logprob: -13.2528657913208
    9. ',' → logprob: -15.0028657913208
    10. ')=' → logprob: -15.2528657913208

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692894041538239
    2. ' =' → logprob: -2.1269290447235107
    3. '＝' → logprob: -15.50192928314209
    4. ' ' → logprob: -16.001928329467773
    5. ' =)' → logprob: -16.001928329467773
    6. ' =(' → logprob: -16.251928329467773
    7. ' =
' → logprob: -16.751928329467773
    8. '=

' → logprob: -16.876928329467773
    9. ',' → logprob: -17.251928329467773
    10. ')' → logprob: -17.626928329467773

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009065360762178898
    2. ' b' → logprob: -4.7590651512146
    3. '(b' → logprob: -7.7590651512146
    4. ' (' → logprob: -11.134065628051758
    5. '(' → logprob: -11.634065628051758
    6. ' ' → logprob: -15.384065628051758
    7. '	b' → logprob: -16.384065628051758
    8. '(s' → logprob: -17.384065628051758
    9. '((' → logprob: -17.509065628051758
    10. ' ' → logprob: -18.134065628051758

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018909167498350143
    2. ' return' → logprob: -4.518908977508545
    3. 'return' → logprob: -5.018908977508545
    4. '	return' → logprob: -7.518908977508545
    5. '
' → logprob: -7.768908977508545
    6. '    
' → logprob: -9.518909454345703
    7. '<|end|>' → logprob: -9.768909454345703
    8. ' ' → logprob: -9.893909454345703
    9. ':return' → logprob: -11.018909454345703
    10. ',' → logprob: -11.393909454345703

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059587426483631134
    2. 'return' → logprob: -3.0595874786376953
    3. ' return' → logprob: -4.559587478637695
    4. '	return' → logprob: -8.184587478637695
    5. '
' → logprob: -8.684587478637695
    6. ' ' → logprob: -12.184587478637695
    7. ',' → logprob: -12.309587478637695
    8. ':return' → logprob: -12.309587478637695
    9. '    
' → logprob: -12.559587478637695
    10. '<|end|>' → logprob: -13.434587478637695

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011077879928052425
    2. ' return' → logprob: -4.511077880859375
    3. '   ' → logprob: -10.511077880859375
    4. ' ' → logprob: -13.511077880859375
    5. '
' → logprob: -14.261077880859375
    6. '	return' → logprob: -14.761077880859375
    7. ':return' → logprob: -16.011077880859375
    8. '    
' → logprob: -16.636077880859375
    9. 'eturn' → logprob: -16.761077880859375
    10. ' 
' → logprob: -16.886077880859375

Token 207: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.012512002140283585
    2. ' inv' → logprob: -4.38751220703125
    3. '(inv' → logprob: -13.13751220703125
    4. 'inf' → logprob: -16.38751220703125
    5. ' ' → logprob: -16.63751220703125
    6. ' ' → logprob: -16.88751220703125
    7. 'inverse' → logprob: -16.88751220703125
    8. '.inv' → logprob: -17.26251220703125
    9. '_inv' → logprob: -17.88751220703125
    10. 'in' → logprob: -17.88751220703125

Token 208: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013157175853848457
    2. '<|end|>' → logprob: -4.638157367706299
    3. '#' → logprob: -6.138157367706299
    4. ')' → logprob: -7.888157367706299
    5. '```' → logprob: -8.13815689086914
    6. '
' → logprob: -8.26315689086914
    7. 'n' → logprob: -9.63815689086914
    8. '(' → logprob: -9.76315689086914
    9. '[' → logprob: -10.01315689086914
    10. ' ' → logprob: -10.88815689086914

Token 210: ' factorial' (ID: 111204)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.3968315124511719
    2. 'factor' → logprob: -2.146831512451172
    3. 'mod' → logprob: -2.521831512451172
    4. 'n' → logprob: -3.396831512451172
    5. 'com' → logprob: -3.771831512451172
    6. 'compute' → logprob: -3.896831512451172
    7. 'main' → logprob: -4.146831512451172
    8. 'combine' → logprob: -4.521831512451172
    9. 'initialize' → logprob: -4.896831512451172
    10. 'calculate' → logprob: -5.271831512451172

Token 211: '(f' (ID: 1526)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0504404753446579
    2. '_list' → logprob: -3.800440549850464
    3. '_inverse' → logprob: -4.675440311431885
    4. '(' → logprob: -5.050440311431885
    5. '_factor' → logprob: -5.300440311431885
    6. '_div' → logprob: -5.675440311431885
    7. '_mod' → logprob: -7.300440311431885
    8. '(i' → logprob: -8.175440788269043
    9. ' (' → logprob: -8.300440788269043
    10. '_ratio' → logprob: -9.050440788269043

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020142752677202225
    2. ',n' → logprob: -4.395142555236816
    3. ' ,' → logprob: -5.645142555236816
    4. ')' → logprob: -6.145142555236816
    5. '[' → logprob: -7.145142555236816
    6. '[n' → logprob: -7.770142555236816
    7. 'def' → logprob: -8.645142555236816
    8. ',f' → logprob: -9.270142555236816
    9. '   ' → logprob: -9.395142555236816
    10. ',size' → logprob: -9.520142555236816

Token 213: ' i' (ID: 575)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.13812047243118286
    2. 'n' → logprob: -2.263120412826538
    3. 'i' → logprob: -4.138120651245117
    4. ' inv' → logprob: -5.138120651245117
    5. 'k' → logprob: -7.138120651245117
    6. ' n' → logprob: -7.263120651245117
    7. 'x' → logprob: -7.263120651245117
    8. 'a' → logprob: -7.638120651245117
    9. 'mod' → logprob: -9.138120651245117
    10. '   ' → logprob: -9.513120651245117

Token 214: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.490136057138443
    2. '):' → logprob: -0.9901360273361206
    3. ')' → logprob: -4.24013614654541
    4. '[' → logprob: -7.86513614654541
    5. ' ,' → logprob: -7.86513614654541
    6. '):
' → logprob: -8.86513614654541
    7. '   ' → logprob: -9.24013614654541
    8. 's' → logprob: -9.36513614654541
    9. ',i' → logprob: -9.49013614654541
    10. '[i' → logprob: -9.61513614654541

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0829753503203392
    2. 'return' → logprob: -2.582975387573242
    3. 'f' → logprob: -6.082975387573242
    4. ' return' → logprob: -6.332975387573242
    5. ' f' → logprob: -11.457975387573242
    6. '	return' → logprob: -12.332975387573242
    7. 'def' → logprob: -13.832975387573242
    8. '```' → logprob: -13.832975387573242
    9. '[f' → logprob: -14.832975387573242
    10. ':return' → logprob: -14.957975387573242

Token 216: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6152935028076172
    2. 'return' (adapté à ' return') → logprob: -1.1152935028076172
    3. ' return' → logprob: -2.365293502807617
    4. ' f' → logprob: -3.365293502807617
    5. '   ' → logprob: -5.740293502807617
    6. ' ' → logprob: -12.615293502807617
    7. '```' → logprob: -12.615293502807617
    8. '	f' → logprob: -13.490293502807617
    9. '	return' → logprob: -13.865293502807617
    10. '
' → logprob: -14.615293502807617

Token 217: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007099286303855479
    2. ' f' → logprob: -7.2507100105285645
    3. '	f' → logprob: -18.625709533691406
    4. '   ' → logprob: -18.875709533691406
    5. ' ' → logprob: -20.625709533691406
    6. '(f' → logprob: -21.250709533691406
    7. '_f' → logprob: -21.625709533691406
    8. ' ' → logprob: -22.250709533691406
    9. '```' → logprob: -22.625709533691406
    10. '[f' → logprob: -22.875709533691406

Token 218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -10.375032424926758
    3. '[f' → logprob: -14.125032424926758
    4. ' [' → logprob: -15.125032424926758
    5. '[
' → logprob: -15.125032424926758
    6. '```' → logprob: -15.625032424926758
    7. '[I' → logprob: -17.250032424926758
    8. '\[' → logprob: -17.750032424926758
    9. 'i' → logprob: -17.875032424926758
    10. '[int' → logprob: -18.125032424926758

Token 219: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9385402993066236e-05
    2. ')' → logprob: -11.375019073486328
    3. ' ]' → logprob: -12.000019073486328
    4. ']
' → logprob: -13.375019073486328
    5. '])' → logprob: -16.625019073486328
    6. '}' → logprob: -17.375019073486328
    7. ']

' → logprob: -17.625019073486328
    8. ')]' → logprob: -17.875019073486328
    9. '<|end|>' → logprob: -18.500019073486328
    10. '']' → logprob: -18.625019073486328

Token 220: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009795783553272486
    2. '<|end|>' → logprob: -7.000979423522949
    3. ' def' → logprob: -10.37597942352295
    4. '
' → logprob: -10.75097942352295
    5. '```' → logprob: -12.12597942352295
    6. '#' → logprob: -12.37597942352295
    7. '(' → logprob: -13.37597942352295
    8. ')' → logprob: -13.87597942352295
    9. '\' → logprob: -14.00097942352295
    10. '

' → logprob: -14.12597942352295

Token 221: ' if' (ID: 538)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0584920197725296
    2. 'inverse' → logprob: -3.1834919452667236
    3. 'factor' → logprob: -5.058492183685303
    4. ' inv' → logprob: -5.808492183685303
    5. 'comb' → logprob: -5.808492183685303
    6. ' factorial' → logprob: -6.558492183685303
    7. 'def' → logprob: -7.433492183685303
    8. ' inverse' → logprob: -7.558492183685303
    9. 'mod' → logprob: -8.558491706848145
    10. 'com' → logprob: -9.308491706848145

Token 222: 'actor' (ID: 8428)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.952915608882904
    2. '_inv' → logprob: -1.3279156684875488
    3. '_' → logprob: -1.5779156684875488
    4. 'n' → logprob: -2.702915668487549
    5. '_factor' → logprob: -3.952915668487549
    6. 'inv' → logprob: -4.577915668487549
    7. 'nv' → logprob: -4.702915668487549
    8. 'def' → logprob: -4.952915668487549
    9. 'ac' → logprob: -4.952915668487549
    10. 'actor' → logprob: -4.952915668487549

Token 223: 'ial' (ID: 563)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.47967270016670227
    2. 'ial' → logprob: -1.1046726703643799
    3. 'ialize' → logprob: -3.22967267036438
    4. '_' → logprob: -5.729672908782959
    5. 'ac' → logprob: -6.229672908782959
    6. 'act' → logprob: -6.979672908782959
    7. 'def' → logprob: -7.104672908782959
    8. 'orial' → logprob: -7.229672908782959
    9. '```' → logprob: -8.3546724319458
    10. 'or' → logprob: -8.4796724319458

Token 224: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -1.1334470510482788
    2. '(i' → logprob: -1.5084470510482788
    3. '(' → logprob: -1.7584470510482788
    4. '(_' → logprob: -1.8834470510482788
    5. '(f' → logprob: -2.7584471702575684
    6. '_' → logprob: -3.0084471702575684
    7. '(n' → logprob: -4.758447170257568
    8. '_inv' → logprob: -5.633447170257568
    9. '_(' → logprob: -6.758447170257568
    10. '(in' → logprob: -7.008447170257568

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002266113180667162
    2. ',i' → logprob: -6.877265930175781
    3. ' ,' → logprob: -7.502265930175781
    4. '[' → logprob: -8.002265930175781
    5. ')' → logprob: -8.627265930175781
    6. ',[' → logprob: -10.002265930175781
    7. ',
' → logprob: -10.252265930175781
    8. ',f' → logprob: -10.752265930175781
    9. '[i' → logprob: -11.002265930175781
    10. '   ' → logprob: -11.377265930175781

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08593706041574478
    2. ' i' → logprob: -2.835937023162842
    3. '<|end|>' → logprob: -3.835937023162842
    4. ')' → logprob: -6.335937023162842
    5. '<|end|>' → logprob: -8.9609375
    6. ')i' → logprob: -9.9609375
    7. 'f' → logprob: -9.9609375
    8. ' ' → logprob: -9.9609375
    9. '  ' → logprob: -11.9609375
    10. '```' → logprob: -12.2109375

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04015108942985535
    2. '):
' → logprob: -3.2901511192321777
    3. ')' → logprob: -6.165151119232178
    4. ' ):' → logprob: -12.91515064239502
    5. '):

' → logprob: -13.41515064239502
    6. '):
' → logprob: -13.54015064239502
    7. ')**' → logprob: -16.165151596069336
    8. ':' → logprob: -16.290151596069336
    9. ''):' → logprob: -16.290151596069336
    10. '   ' → logprob: -16.540151596069336

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17184346914291382
    2. 'return' → logprob: -2.4218435287475586
    3. ' return' → logprob: -2.6718435287475586
    4. '	return' → logprob: -12.171843528747559
    5. 'inv' → logprob: -14.671843528747559
    6. ' ' → logprob: -15.921843528747559
    7. '       ' → logprob: -16.046842575073242
    8. '   ' → logprob: -16.171842575073242
    9. '
' → logprob: -16.421842575073242
    10. '    
' → logprob: -16.421842575073242

Token 229: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001948271761648357
    2. ' return' → logprob: -6.251948356628418
    3. 'inv' → logprob: -11.001948356628418
    4. '   ' → logprob: -12.751948356628418
    5. '	return' → logprob: -17.2519474029541
    6. 'eturn' → logprob: -18.6269474029541
    7. ' ' → logprob: -18.7519474029541
    8. ':return' → logprob: -19.1269474029541
    9. ' inv' → logprob: -19.6269474029541
    10. '  ' → logprob: -19.6269474029541

Token 230: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00033558503491804004
    2. ' inv' → logprob: -8.000335693359375
    3. '(inv' → logprob: -16.125335693359375
    4. 'inf' → logprob: -19.500335693359375
    5. '   ' → logprob: -20.500335693359375
    6. '.inv' → logprob: -20.875335693359375
    7. 'int' → logprob: -21.375335693359375
    8. '1' → logprob: -22.250335693359375
    9. ' ' → logprob: -22.375335693359375
    10. 'inverse' → logprob: -22.500335693359375

Token 231: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015920029545668513
    2. '[' → logprob: -8.75015926361084
    3. 'i' → logprob: -15.62515926361084
    4. ' [' → logprob: -15.75015926361084
    5. '[I' → logprob: -16.375158309936523
    6. '```' → logprob: -16.375158309936523
    7. '[
' → logprob: -16.625158309936523
    8. '[...]' → logprob: -17.250158309936523
    9. '\[' → logprob: -18.250158309936523
    10. '[int' → logprob: -18.625158309936523

Token 232: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015325936255976558
    2. ']' → logprob: -6.501532554626465
    3. '}' → logprob: -10.751532554626465
    4. ' )' → logprob: -12.501532554626465
    5. '）' → logprob: -13.376532554626465
    6. '])' → logprob: -13.876532554626465
    7. ')
' → logprob: -13.876532554626465
    8. ')]' → logprob: -14.001532554626465
    9. '<|end|>' → logprob: -14.251532554626465
    10. ')}' → logprob: -16.37653350830078

Token 233: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.4621581733226776
    2. ' combination' → logprob: -2.087158203125
    3. ' comb' → logprob: -2.462158203125
    4. 'com' → logprob: -2.712158203125
    5. 'n' → logprob: -3.587158203125
    6. ' n' → logprob: -3.962158203125
    7. 'choose' → logprob: -4.212158203125
    8. ' choose' → logprob: -4.587158203125
    9. 'bin' → logprob: -5.587158203125
    10. 'def' → logprob: -5.587158203125

Token 235: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2851880192756653
    2. '(f' → logprob: -1.4101879596710205
    3. '(n' → logprob: -5.9101881980896
    4. '(com' → logprob: -7.4101881980896
    5. '(def' → logprob: -8.660187721252441
    6. '(_' → logprob: -9.285187721252441
    7. '(i' → logprob: -9.285187721252441
    8. '_' → logprob: -10.035187721252441
    9. ' (' → logprob: -10.160187721252441
    10. '(l' → logprob: -10.410187721252441

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005685218493454158
    2. ' ,' → logprob: -7.625568389892578
    3. ',f' → logprob: -10.875568389892578
    4. ',
' → logprob: -11.000568389892578
    5. ',n' → logprob: -11.250568389892578
    6. ')' → logprob: -11.375568389892578
    7. ',int' → logprob: -12.125568389892578
    8. ',i' → logprob: -13.000568389892578
    9. 'def' → logprob: -13.500568389892578
    10. ',

' → logprob: -13.625568389892578

Token 237: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.024135857820510864
    2. ' inv' → logprob: -3.7741358280181885
    3. 'n' → logprob: -7.149136066436768
    4. ' n' → logprob: -9.39913558959961
    5. 'i' → logprob: -12.39913558959961
    6. ')' → logprob: -12.52413558959961
    7. '(inv' → logprob: -12.64913558959961
    8. '_inv' → logprob: -13.02413558959961
    9. 'inf' → logprob: -13.39913558959961
    10. '.inv' → logprob: -14.14913558959961

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.077528764260933e-05
    2. ' ,' → logprob: -9.625081062316895
    3. ',i' → logprob: -12.000081062316895
    4. ',n' → logprob: -12.500081062316895
    5. 'def' → logprob: -13.250081062316895
    6. ',
' → logprob: -14.000081062316895
    7. 'f' → logprob: -14.250081062316895
    8. ',f' → logprob: -14.625081062316895
    9. '_,' → logprob: -15.125081062316895
    10. ',int' → logprob: -15.375081062316895

Token 239: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.062019553035497665
    2. ' n' → logprob: -2.8120195865631104
    3. ',' → logprob: -10.437019348144531
    4. 'i' → logprob: -11.562019348144531
    5. '   ' → logprob: -13.062019348144531
    6. ')' → logprob: -13.312019348144531
    7. ' ' → logprob: -13.437019348144531
    8. ',n' → logprob: -13.437019348144531
    9. 'f' → logprob: -14.062019348144531
    10. ' i' → logprob: -14.187019348144531

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -13.87500286102295
    3. ',i' → logprob: -14.00000286102295
    4. ',n' → logprob: -14.12500286102295
    5. '):' → logprob: -16.625001907348633
    6. '_,' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.125001907348633
    8. ',
' → logprob: -17.250001907348633
    9. 'n' → logprob: -17.375001907348633
    10. 'def' → logprob: -17.750001907348633

Token 241: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04305936396121979
    2. ' n' → logprob: -3.1680593490600586
    3. 'r' → logprob: -11.043059349060059
    4. ' ' → logprob: -11.418059349060059
    5. '   ' → logprob: -11.668059349060059
    6. '```' → logprob: -12.168059349060059
    7. ')' → logprob: -12.293059349060059
    8. 'a' → logprob: -12.668059349060059
    9. 'k' → logprob: -12.918059349060059
    10. 'i' → logprob: -13.168059349060059

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001434690784662962
    2. ' ,' → logprob: -8.875143051147461
    3. ',
' → logprob: -13.625143051147461
    4. ',n' → logprob: -14.000143051147461
    5. ',i' → logprob: -14.250143051147461
    6. '_,' → logprob: -15.375143051147461
    7. '):' → logprob: -15.500143051147461
    8. ',k' → logprob: -15.625143051147461
    9. ',r' → logprob: -16.75014305114746
    10. ',int' → logprob: -16.75014305114746

Token 243: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5771148800849915
    2. 'r' → logprob: -0.8271148800849915
    3. ' r' → logprob: -7.202115058898926
    4. ' k' → logprob: -8.077115058898926
    5. '```' → logprob: -10.202115058898926
    6. '   ' → logprob: -10.452115058898926
    7. 'm' → logprob: -10.827115058898926
    8. ' ' → logprob: -11.327115058898926
    9. '
' → logprob: -11.952115058898926
    10. '  ' → logprob: -12.952115058898926

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021093101531732827
    2. '):
' → logprob: -8.750210762023926
    3. ')' → logprob: -9.875210762023926
    4. ' ):' → logprob: -14.875210762023926
    5. '):
' → logprob: -15.125210762023926
    6. ',' → logprob: -16.000211715698242
    7. ':' → logprob: -16.500211715698242
    8. '):

' → logprob: -17.125211715698242
    9. ')：' → logprob: -17.375211715698242
    10. '   ' → logprob: -18.250211715698242

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6003772020339966
    2. ' if' → logprob: -0.8503772020339966
    3. 'if' → logprob: -3.725377082824707
    4. '	if' → logprob: -11.100377082824707
    5. '    ' → logprob: -11.475377082824707
    6. ' ' → logprob: -12.350377082824707
    7. ' return' → logprob: -12.850377082824707
    8. '  ' → logprob: -12.975377082824707
    9. '    
' → logprob: -13.975377082824707
    10. ' 
' → logprob: -14.725377082824707

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012888056226074696
    2. ' if' → logprob: -7.001288890838623
    3. '   ' → logprob: -8.251288414001465
    4. 'return' → logprob: -9.126288414001465
    5. '0' → logprob: -12.001288414001465
    6. '```' → logprob: -14.126288414001465
    7. '    
' → logprob: -15.376288414001465
    8. '
' → logprob: -16.00128936767578
    9. ' 
' → logprob: -16.00128936767578
    10. ' return' → logprob: -16.75128936767578

Token 247: ' not' (ID: 625)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.02699790894985199
    2. 'k' → logprob: -3.6519978046417236
    3. ' n' → logprob: -7.526998043060303
    4. ' not' → logprob: -8.901997566223145
    5. 'n' → logprob: -11.401997566223145
    6. '0' → logprob: -12.276997566223145
    7. ' (' → logprob: -13.276997566223145
    8. ' ' → logprob: -13.526997566223145
    9. 'not' → logprob: -13.776997566223145
    10. ' ' → logprob: -13.776997566223145

Token 248: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35310879349708557
    2. '(' → logprob: -1.6031087636947632
    3. '0' → logprob: -2.9781088829040527
    4. ' ' → logprob: -3.1031088829040527
    5. '(k' → logprob: -7.853108882904053
    6. ' k' → logprob: -10.978108406066895
    7. '(n' → logprob: -11.478108406066895
    8. '1' → logprob: -11.853108406066895
    9. ' isinstance' → logprob: -13.228108406066895
    10. '(
' → logprob: -13.353108406066895

Token 249: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1553155928850174
    2. '0' → logprob: -2.030315637588501
    3. ' (' → logprob: -4.530315399169922
    4. ' ' → logprob: -7.030315399169922
    5. '(k' → logprob: -7.030315399169922
    6. '(n' → logprob: -11.780315399169922
    7. 'k' → logprob: -12.780315399169922
    8. '   ' → logprob: -14.030315399169922
    9. '1' → logprob: -14.155315399169922
    10. ' k' → logprob: -14.655315399169922

Token 250: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3132883608341217
    2. '<=' → logprob: -1.3132883310317993
    3. '<' → logprob: -11.563288688659668
    4. ' <' → logprob: -11.688288688659668
    5. ' ' → logprob: -11.813288688659668
    6. '[' → logprob: -14.938288688659668
    7. '=' → logprob: -15.938288688659668
    8. ')' → logprob: -15.938288688659668
    9. ' ≤' → logprob: -15.938288688659668
    10. '  ' → logprob: -16.43828773498535

Token 251: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001170460251159966
    2. ' k' → logprob: -6.751170635223389
    3. '	k' → logprob: -16.501171112060547
    4. ' ' → logprob: -16.876171112060547
    5. '   ' → logprob: -17.001171112060547
    6. '  ' → logprob: -19.376171112060547
    7. 'n' → logprob: -19.751171112060547
    8. '```' → logprob: -20.001171112060547
    9. '(k' → logprob: -20.126171112060547
    10. ',k' → logprob: -20.126171112060547

Token 252: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20151634514331818
    2. ' <=' → logprob: -1.7015163898468018
    3. '<' → logprob: -10.326516151428223
    4. ' and' → logprob: -11.201516151428223
    5. '<|end|>' → logprob: -11.326516151428223
    6. ' ' → logprob: -11.951516151428223
    7. '<|end|>' → logprob: -12.076516151428223
    8. '≤' → logprob: -12.451516151428223
    9. 'and' → logprob: -12.576516151428223
    10. ')<=' → logprob: -12.826516151428223

Token 253: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02975083328783512
    2. ' n' → logprob: -3.5297508239746094
    3. '	n' → logprob: -15.52975082397461
    4. ' ' → logprob: -16.65475082397461
    5. '
' → logprob: -18.65475082397461
    6. ')n' → logprob: -18.77975082397461
    7. '_n' → logprob: -18.90475082397461
    8. '   ' → logprob: -19.52975082397461
    9. '(n' → logprob: -19.52975082397461
    10. ',n' → logprob: -20.02975082397461

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06261385977268219
    2. ':
' → logprob: -2.8126139640808105
    3. ':return' → logprob: -7.4376139640808105
    4. ' :' → logprob: -10.187613487243652
    5. ' :
' → logprob: -11.312613487243652
    6. '   ' → logprob: -13.312613487243652
    7. ' and' → logprob: -13.437613487243652
    8. ' or' → logprob: -13.437613487243652
    9. ':
' → logprob: -13.812613487243652
    10. '):
' → logprob: -14.187613487243652

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03296449035406113
    2. ':' → logprob: -3.6579644680023193
    3. ':
' → logprob: -5.907964706420898
    4. '   ' → logprob: -6.532964706420898
    5. '
' → logprob: -6.532964706420898
    6. ':return' → logprob: -7.282964706420898
    7. '):
' → logprob: -9.657964706420898
    8. ' return' → logprob: -9.657964706420898
    9. '    
' → logprob: -10.032964706420898
    10. ' 
' → logprob: -10.532964706420898

Token 256: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04469061270356178
    2. ' ' → logprob: -4.1696906089782715
    3. 'return' (adapté à ' return') → logprob: -4.5446906089782715
    4. '
' → logprob: -4.7946906089782715
    5. ' return' → logprob: -4.9196906089782715
    6. ' 
' → logprob: -6.6696906089782715
    7. '       ' → logprob: -7.5446906089782715
    8. '   ' → logprob: -8.54469108581543
    9. '    
' → logprob: -11.04469108581543
    10. '    ' → logprob: -11.16969108581543

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163628220558167
    2. ' ' → logprob: -4.264163494110107
    3. '   ' → logprob: -16.639163970947266
    4. ' ' → logprob: -18.889163970947266
    5. '  ' → logprob: -19.014163970947266
    6. '
' → logprob: -20.014163970947266
    7. '۰' → logprob: -21.264163970947266
    8. '00' → logprob: -21.514163970947266
    9. ' 
' → logprob: -21.639163970947266
    10. '```' → logprob: -21.639163970947266

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '
' → logprob: -21.000001907348633
    5. '```' → logprob: -21.000001907348633
    6. '۰' → logprob: -21.125001907348633
    7. '000' → logprob: -21.375001907348633
    8. '00' → logprob: -22.000001907348633
    9. '  ' → logprob: -22.125001907348633
    10. '０' → logprob: -22.875001907348633

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10739654302597046
    2. '
' → logprob: -2.3573966026306152
    3. '    
' → logprob: -4.982396602630615
    4. '  
' → logprob: -8.607396125793457
    5. '   
' → logprob: -10.232396125793457
    6. ' 
' → logprob: -10.357396125793457
    7. ' return' → logprob: -11.232396125793457
    8. '\n' → logprob: -11.732396125793457
    9. '<|end|>' → logprob: -11.857396125793457
    10. 'return' → logprob: -12.357396125793457

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005020392127335072
    2. 'return' → logprob: -8.12550163269043
    3. '    
' → logprob: -9.00050163269043
    4. ' return' → logprob: -9.62550163269043
    5. '
' → logprob: -11.25050163269043
    6. '```' → logprob: -14.12550163269043
    7. '   
' → logprob: -14.62550163269043
    8. '	return' → logprob: -14.62550163269043
    9. '  
' → logprob: -15.00050163269043
    10. 'b' → logprob: -15.25050163269043

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.45163702964782715
    2. '   ' → logprob: -1.3266370296478271
    3. ' return' → logprob: -2.326637029647827
    4. 'res' → logprob: -8.826637268066406
    5. '    
' → logprob: -9.451637268066406
    6. '
' → logprob: -9.826637268066406
    7. 'c' → logprob: -10.451637268066406
    8. 'result' → logprob: -10.451637268066406
    9. '	return' → logprob: -10.576637268066406
    10. '```' → logprob: -11.451637268066406

Token 262: ' f' (ID: 285)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.35023966431617737
    2. ' (' → logprob: -1.225239634513855
    3. 'f' → logprob: -6.6002397537231445
    4. ' f' → logprob: -7.8502397537231445
    5. '(' → logprob: -10.350239753723145
    6. '((' → logprob: -12.475239753723145
    7. '   ' → logprob: -12.725239753723145
    8. '
' → logprob: -13.350239753723145
    9. ' ' → logprob: -13.600239753723145
    10. '(
' → logprob: -13.850239753723145

Token 263: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.15310683415737e-05
    2. 'n' → logprob: -11.375021934509277
    3. '[k' → logprob: -12.375021934509277
    4. '[' → logprob: -12.375021934509277
    5. '[f' → logprob: -14.125021934509277
    6. '[i' → logprob: -15.000021934509277
    7. ' [' → logprob: -15.250021934509277
    8. '(n' → logprob: -16.62502098083496
    9. '[
' → logprob: -17.25002098083496
    10. ' n' → logprob: -17.25002098083496

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.587483221665025e-05
    2. ']*' → logprob: -9.750065803527832
    3. ' ]' → logprob: -12.125065803527832
    4. ']
' → logprob: -13.750065803527832
    5. '   ' → logprob: -14.375065803527832
    6. '"]' → logprob: -16.37506675720215
    7. '']' → logprob: -16.62506675720215
    8. '[' → logprob: -16.75006675720215
    9. '```' → logprob: -16.87506675720215
    10. '[i' → logprob: -17.50006675720215

Token 265: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141831040382385
    2. '*' → logprob: -1.7014182806015015
    3. '   ' → logprob: -12.951417922973633
    4. ' ' → logprob: -13.451417922973633
    5. '**' → logprob: -14.951417922973633
    6. ' ' → logprob: -15.201417922973633
    7. '```' → logprob: -15.951417922973633
    8. '  ' → logprob: -16.451417922973633
    9. '
' → logprob: -16.576417922973633
    10. '[' → logprob: -16.576417922973633

Token 266: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.012765320017933846
    2. ' inv' → logprob: -4.512765407562256
    3. '(inv' → logprob: -6.387765407562256
    4. 'if' → logprob: -11.137764930725098
    5. ' (' → logprob: -12.012764930725098
    6. '(' → logprob: -12.262764930725098
    7. 'in' → logprob: -12.512764930725098
    8. '_inv' → logprob: -13.512764930725098
    9. '(in' → logprob: -14.262764930725098
    10. '.inv' → logprob: -14.387764930725098

Token 267: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00011307948443572968
    2. 'k' → logprob: -9.375113487243652
    3. '[n' → logprob: -10.500113487243652
    4. '[' → logprob: -15.125113487243652
    5. '(k' → logprob: -16.500112533569336
    6. '{k' → logprob: -16.875112533569336
    7. '
' → logprob: -17.000112533569336
    8. '	k' → logprob: -17.125112533569336
    9. '```' → logprob: -17.250112533569336
    10. '   ' → logprob: -18.000112533569336

Token 268: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0034250891767442226
    2. ' -' → logprob: -5.878425121307373
    3. ']' → logprob: -8.128424644470215
    4. '[k' → logprob: -8.878424644470215
    5. 'k' → logprob: -9.378424644470215
    6. '[' → logprob: -9.753424644470215
    7. '-' → logprob: -11.128424644470215
    8. '[-' → logprob: -12.003424644470215
    9. '-n' → logprob: -12.128424644470215
    10. ' k' → logprob: -12.128424644470215

Token 269: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011748670367524028
    2. ' k' → logprob: -6.7511749267578125
    3. '<|end|>' → logprob: -12.626174926757812
    4. '	k' → logprob: -14.376174926757812
    5. '{k' → logprob: -14.876174926757812
    6. '<|end|>' → logprob: -15.751174926757812
    7. '   ' → logprob: -15.751174926757812
    8. ',k' → logprob: -16.501174926757812
    9. '*k' → logprob: -17.001174926757812
    10. ' к' → logprob: -17.376174926757812

Token 270: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.135819760151207e-05
    2. ']%' → logprob: -10.00007152557373
    3. ']*' → logprob: -10.62507152557373
    4. '%' → logprob: -14.12507152557373
    5. ' ]' → logprob: -15.00007152557373
    6. '*' → logprob: -15.87507152557373
    7. '[' → logprob: -16.125070571899414
    8. '']' → logprob: -16.500070571899414
    9. ']
' → logprob: -16.875070571899414
    10. ']

' → logprob: -17.625070571899414

Token 271: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.049075424671173096
    2. '*' → logprob: -3.0490753650665283
    3. '%' → logprob: -7.799075603485107
    4. ' %' → logprob: -9.79907512664795
    5. ' ' → logprob: -11.04907512664795
    6. '   ' → logprob: -12.92407512664795
    7. ' ' → logprob: -13.42407512664795
    8. '`' → logprob: -14.54907512664795
    9. '```' → logprob: -14.79907512664795
    10. '
' → logprob: -15.04907512664795

Token 272: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00255212327465415
    2. ' mod' → logprob: -6.002552032470703
    3. 'MOD' → logprob: -9.502552032470703
    4. '(mod' → logprob: -13.877552032470703
    5. ' MOD' → logprob: -14.127552032470703
    6. '	mod' → logprob: -16.127552032470703
    7. ' ' → logprob: -18.752552032470703
    8. 'md' → logprob: -20.002552032470703
    9. '```' → logprob: -20.252552032470703
    10. '_mod' → logprob: -20.502552032470703

Token 273: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.348906546831131
    2. '*' → logprob: -1.2239065170288086
    3. '   ' → logprob: -7.973906517028809
    4. ' ' → logprob: -9.598906517028809
    5. '`' → logprob: -11.473906517028809
    6. '```' → logprob: -11.473906517028809
    7. '  ' → logprob: -12.098906517028809
    8. ' ' → logprob: -12.473906517028809
    9. ')' → logprob: -13.098906517028809
    10. '    ' → logprob: -13.098906517028809

Token 274: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004085997585207224
    2. ' inv' → logprob: -5.504086017608643
    3. '(inv' → logprob: -11.879085540771484
    4. ' ' → logprob: -15.879085540771484
    5. 'in' → logprob: -15.879085540771484
    6. '_inv' → logprob: -16.629085540771484
    7. 'iv' → logprob: -16.754085540771484
    8. '   ' → logprob: -17.129085540771484
    9. '<|end|>' → logprob: -17.129085540771484
    10. '```' → logprob: -17.129085540771484

Token 275: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.5577775128767826e-06
    2. 'k' → logprob: -12.125005722045898
    3. '[' → logprob: -16.8750057220459
    4. '(k' → logprob: -18.3750057220459
    5. '[n' → logprob: -19.6250057220459
    6. ' k' → logprob: -19.8750057220459
    7. '```' → logprob: -20.0000057220459
    8. '	k' → logprob: -20.1250057220459
    9. '{k' → logprob: -20.1250057220459
    10. '[
' → logprob: -20.1250057220459

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012051118537783623
    2. ' ]' → logprob: -7.126204967498779
    3. ']%' → logprob: -8.001205444335938
    4. '<|end|>' → logprob: -10.251205444335938
    5. ')' → logprob: -11.001205444335938
    6. '}' → logprob: -12.001205444335938
    7. '%' → logprob: -13.001205444335938
    8. '']' → logprob: -13.251205444335938
    9. '<|end|>' → logprob: -14.251205444335938
    10. ']
' → logprob: -14.751205444335938

Token 277: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003374886582605541
    2. ' mod' → logprob: -8.000337600708008
    3. 'MOD' → logprob: -13.125337600708008
    4. '(mod' → logprob: -16.750337600708008
    5. '	mod' → logprob: -17.625337600708008
    6. ' MOD' → logprob: -18.750337600708008
    7. ' ' → logprob: -19.875337600708008
    8. '```' → logprob: -20.625337600708008
    9. ' мод' → logprob: -21.250337600708008
    10. 'md' → logprob: -21.750337600708008

Token 279: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' permutation' (ID: 135200)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.9803577065467834
    2. ' main' → logprob: -1.1053576469421387
    3. 'per' → logprob: -1.8553576469421387
    4. 'comb' → logprob: -3.3553576469421387
    5. ' permutation' → logprob: -3.3553576469421387
    6. 'perm' → logprob: -4.480357646942139
    7. ' permutations' → logprob: -4.480357646942139
    8. ' combination' → logprob: -4.480357646942139
    9. 'pow' → logprob: -4.730357646942139
    10. 'mod' → logprob: -5.105357646942139

Token 282: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001048646867275238
    2. '(' → logprob: -6.876048564910889
    3. ' (' → logprob: -11.626049041748047
    4. '(per' → logprob: -12.376049041748047
    5. '(p' → logprob: -13.876049041748047
    6. '(n' → logprob: -14.126049041748047
    7. '(m' → logprob: -15.751049041748047
    8. '(def' → logprob: -15.876049041748047
    9. '(s' → logprob: -16.126049041748047
    10. '(mod' → logprob: -16.376049041748047

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010366239439463243
    2. ',f' → logprob: -9.500103950500488
    3. ' ,' → logprob: -10.500103950500488
    4. 'f' → logprob: -15.500103950500488
    5. ')' → logprob: -15.500103950500488
    6. '<|end|>' → logprob: -15.625103950500488
    7. ',n' → logprob: -16.125102996826172
    8. ' f' → logprob: -16.250102996826172
    9. ',p' → logprob: -16.250102996826172
    10. ',user' → logprob: -16.375102996826172

Token 284: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.12801437079906464
    2. ' inv' → logprob: -2.128014326095581
    3. 'mod' → logprob: -7.00301456451416
    4. ' mod' → logprob: -9.00301456451416
    5. 'f' → logprob: -10.37801456451416
    6. 'perm' → logprob: -11.87801456451416
    7. '(inv' → logprob: -12.00301456451416
    8. ' f' → logprob: -12.87801456451416
    9. ' ' → logprob: -13.62801456451416
    10. '   ' → logprob: -13.62801456451416

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.857719275401905e-05
    2. ' ,' → logprob: -10.250038146972656
    3. ',f' → logprob: -13.000038146972656
    4. ',
' → logprob: -14.625038146972656
    5. 'f' → logprob: -15.500038146972656
    6. 'def' → logprob: -16.125038146972656
    7. ',module' → logprob: -17.375038146972656
    8. ',n' → logprob: -17.750038146972656
    9. ',

' → logprob: -18.250038146972656
    10. ' f' → logprob: -18.250038146972656

Token 286: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11284179240465164
    2. ' mod' → logprob: -2.237841844558716
    3. 'f' → logprob: -11.987841606140137
    4. 'MOD' → logprob: -12.362841606140137
    5. ' f' → logprob: -12.737841606140137
    6. ' ' → logprob: -13.237841606140137
    7. '	mod' → logprob: -13.987841606140137
    8. '   ' → logprob: -13.987841606140137
    9. ' MOD' → logprob: -14.862841606140137
    10. 'def' → logprob: -15.112841606140137

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ',n' → logprob: -12.000007629394531
    3. ' ,' → logprob: -14.375007629394531
    4. ',f' → logprob: -15.250007629394531
    5. '(n' → logprob: -16.62500762939453
    6. ',
' → logprob: -17.00000762939453
    7. 'n' → logprob: -18.37500762939453
    8. 'f' → logprob: -18.62500762939453
    9. '_,' → logprob: -19.37500762939453
    10. 'def' → logprob: -19.62500762939453

Token 288: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326693296432495
    2. 'n' → logprob: -1.3132669925689697
    3. ' ' → logprob: -12.43826675415039
    4. '   ' → logprob: -14.68826675415039
    5. '  ' → logprob: -15.18826675415039
    6. '	n' → logprob: -15.56326675415039
    7. '    ' → logprob: -16.43826675415039
    8. ' f' → logprob: -16.81326675415039
    9. ' def' → logprob: -17.31326675415039
    10. 'def' → logprob: -17.31326675415039

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013417120499070734
    2. ',k' → logprob: -9.125134468078613
    3. ' ,' → logprob: -10.625134468078613
    4. ',n' → logprob: -14.125134468078613
    5. ',
' → logprob: -15.750134468078613
    6. ',p' → logprob: -18.375133514404297
    7. ',f' → logprob: -18.500133514404297
    8. '‌,' → logprob: -18.750133514404297
    9. '_,' → logprob: -19.250133514404297
    10. ',int' → logprob: -20.000133514404297

Token 290: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001170225441455841
    2. ' k' → logprob: -6.7511701583862305
    3. ' ' → logprob: -18.251171112060547
    4. '	k' → logprob: -18.376171112060547
    5. '
' → logprob: -19.626171112060547
    6. 'n' → logprob: -20.001171112060547
    7. '   ' → logprob: -20.876171112060547
    8. ')' → logprob: -22.126171112060547
    9. ' к' → logprob: -22.251171112060547
    10. ' ' → logprob: -22.501171112060547

Token 291: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005013240152038634
    2. '):
' → logprob: -7.6255011558532715
    3. ')' → logprob: -11.50050163269043
    4. ':' → logprob: -13.50050163269043
    5. ' ):' → logprob: -13.75050163269043
    6. '):
' → logprob: -14.25050163269043
    7. '}:' → logprob: -17.37550163269043
    8. '):

' → logprob: -17.50050163269043
    9. ')：' → logprob: -17.50050163269043
    10. '   ' → logprob: -17.87550163269043

Token 292: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02662304788827896
    2. '   ' → logprob: -4.026623249053955
    3. ' if' → logprob: -4.776623249053955
    4. 'return' → logprob: -11.401622772216797
    5. '
' → logprob: -14.276622772216797
    6. '```' → logprob: -14.276622772216797
    7. ' return' → logprob: -15.026622772216797
    8. ' ' → logprob: -16.901622772216797
    9. '	if' → logprob: -17.026622772216797
    10. '  ' → logprob: -17.276622772216797

Token 293: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011461719404906034
    2. 'return' → logprob: -7.50114631652832
    3. ' if' → logprob: -7.87614631652832
    4. '   ' → logprob: -8.75114631652832
    5. 'def' → logprob: -10.50114631652832
    6. '0' → logprob: -11.12614631652832
    7. 'f' → logprob: -11.87614631652832
    8. '
' → logprob: -12.62614631652832
    9. '```' → logprob: -13.37614631652832
    10. ' return' → logprob: -13.87614631652832

Token 294: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014333550818264484
    2. 'not' → logprob: -4.264333724975586
    3. ' k' → logprob: -9.264333724975586
    4. 'k' → logprob: -9.764333724975586
    5. ' n' → logprob: -11.389333724975586
    6. 'n' → logprob: -12.639333724975586
    7. '	not' → logprob: -13.514333724975586
    8. ' ' → logprob: -14.514333724975586
    9. '
' → logprob: -14.639333724975586
    10. '   ' → logprob: -15.639333724975586

Token 295: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04859906807541847
    2. '0' → logprob: -3.0485990047454834
    3. ' k' → logprob: -12.173599243164062
    4. 'k' → logprob: -12.673599243164062
    5. ' (' → logprob: -13.548599243164062
    6. '(' → logprob: -13.673599243164062
    7. '<|end|>' → logprob: -15.048599243164062
    8. ' ' → logprob: -15.173599243164062
    9. '  ' → logprob: -16.048599243164062
    10. '(k' → logprob: -16.298599243164062

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002525722375139594
    2. ' ' → logprob: -6.002525806427002
    3. '(' → logprob: -10.002525329589844
    4. ' (' → logprob: -12.502525329589844
    5. 'k' → logprob: -14.002525329589844
    6. '(k' → logprob: -15.877525329589844
    7. ' k' → logprob: -16.377525329589844
    8. '
' → logprob: -16.627525329589844
    9. '  ' → logprob: -17.752525329589844
    10. '   ' → logprob: -18.127525329589844

Token 297: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0017758574103936553
    2. '<=' → logprob: -6.376775741577148
    3. ' <' → logprob: -9.626775741577148
    4. ' ' → logprob: -11.876775741577148
    5. '<' → logprob: -14.626775741577148
    6. ' >=' → logprob: -15.751775741577148
    7. ' ≤' → logprob: -15.876775741577148
    8. ' ' → logprob: -17.37677574157715
    9. '<n' → logprob: -18.37677574157715
    10. '   ' → logprob: -18.50177574157715

Token 298: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017024369444698095
    2. ' k' → logprob: -6.376702308654785
    3. '<|end|>' → logprob: -15.876702308654785
    4. '	k' → logprob: -16.5017032623291
    5. ' ' → logprob: -18.3767032623291
    6. '   ' → logprob: -19.0017032623291
    7. '{k' → logprob: -19.6267032623291
    8. '<|end|>' → logprob: -19.8767032623291
    9. '_k' → logprob: -20.2517032623291
    10. ' к' → logprob: -20.3767032623291

Token 299: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01815052703022957
    2. '<=' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. ' ≤' → logprob: -15.643150329589844
    5. ' ' → logprob: -16.018150329589844
    6. ' <' → logprob: -16.768150329589844
    7. '<|end|>' → logprob: -17.268150329589844
    8. ']<=' → logprob: -18.018150329589844
    9. ')<=' → logprob: -18.018150329589844
    10. ' <=",' → logprob: -18.143150329589844

Token 300: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889056205749512
    2. ' n' → logprob: -2.578890562057495
    3. '	n' → logprob: -14.578890800476074
    4. ' ' → logprob: -15.453890800476074
    5. '   ' → logprob: -16.703889846801758
    6. '
' → logprob: -18.203889846801758
    7. '_n' → logprob: -18.703889846801758
    8. '(n' → logprob: -18.953889846801758
    9. ')n' → logprob: -18.953889846801758
    10. '<|end|>' → logprob: -19.078889846801758

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.313396692276001
    2. ':
' → logprob: -1.313396692276001
    3. '   ' → logprob: -9.313396453857422
    4. ':return' → logprob: -11.063396453857422
    5. ':
' → logprob: -11.563396453857422
    6. ':

' → logprob: -11.813396453857422
    7. ' :
' → logprob: -12.188396453857422
    8. ' :' → logprob: -12.438396453857422
    9. '):
' → logprob: -13.313396453857422
    10. '       ' → logprob: -15.063396453857422

Token 302: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011962656863033772
    2. ' return' → logprob: -4.761962890625
    3. 'return' → logprob: -5.886962890625
    4. '       ' → logprob: -7.511962890625
    5. '
' → logprob: -11.511962890625
    6. ' ' → logprob: -12.386962890625
    7. '	return' → logprob: -12.761962890625
    8. ':return' → logprob: -13.386962890625
    9. '  ' → logprob: -14.261962890625
    10. '0' → logprob: -14.511962890625

Token 303: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5296291708946228
    2. '0' → logprob: -1.2796292304992676
    3. ' return' → logprob: -2.0296292304992676
    4. ' ' → logprob: -6.904629230499268
    5. '   ' → logprob: -7.529629230499268
    6. '       ' → logprob: -9.40462875366211
    7. '	return' → logprob: -11.52962875366211
    8. 'eturn' → logprob: -11.90462875366211
    9. '
' → logprob: -12.27962875366211
    10. ':return' → logprob: -12.77962875366211

Token 304: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020678490400314
    2. ' ' → logprob: -2.3502068519592285
    3. '   ' → logprob: -16.85020637512207
    4. ' ' → logprob: -18.22520637512207
    5. '  ' → logprob: -18.35020637512207
    6. '
' → logprob: -19.35020637512207
    7. '```' → logprob: -19.60020637512207
    8. '۰' → logprob: -20.28770637512207
    9. '00' → logprob: -20.66270637512207
    10. ' 
' → logprob: -20.78770637512207

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.375015258789062
    4. '۰' → logprob: -20.625015258789062
    5. '00' → logprob: -21.000015258789062
    6. '000' → logprob: -21.312515258789062
    7. '  ' → logprob: -21.625015258789062
    8. '０' → logprob: -21.812515258789062
    9. '```' → logprob: -22.250015258789062
    10. 'k' → logprob: -22.687515258789062

Token 306: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009948976337909698
    2. '   ' → logprob: -4.634949207305908
    3. '    
' → logprob: -9.50994873046875
    4. ' return' → logprob: -9.88494873046875
    5. 'return' → logprob: -10.75994873046875
    6. '  
' → logprob: -11.25994873046875
    7. '
' → logprob: -11.25994873046875
    8. ' 
' → logprob: -11.38494873046875
    9. '\n' → logprob: -12.63494873046875
    10. '   
' → logprob: -13.13494873046875

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.474142462015152
    2. 'return' → logprob: -0.9741424322128296
    3. ' return' → logprob: -9.724142074584961
    4. '
' → logprob: -12.349142074584961
    5. '	return' → logprob: -14.224142074584961
    6. '```' → logprob: -14.974142074584961
    7. '    
' → logprob: -15.349142074584961
    8. '  ' → logprob: -16.84914207458496
    9. ' ' → logprob: -17.84914207458496
    10. '       ' → logprob: -17.97414207458496

Token 308: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004216170927975327
    2. '   ' → logprob: -8.250421524047852
    3. ' return' → logprob: -8.750421524047852
    4. '
' → logprob: -13.250421524047852
    5. '	return' → logprob: -16.37542152404785
    6. '    
' → logprob: -17.25042152404785
    7. '```' → logprob: -18.37542152404785
    8. 'ret' → logprob: -19.75042152404785
    9. ' ' → logprob: -20.00042152404785
    10. '  ' → logprob: -20.12542152404785

Token 309: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0025423704646527767
    2. ' f' → logprob: -6.002542495727539
    3. '(f' → logprob: -9.627542495727539
    4. ' (' → logprob: -14.252542495727539
    5. '(' → logprob: -16.75254249572754
    6. '	f' → logprob: -17.00254249572754
    7. '   ' → logprob: -17.87754249572754
    8. '
' → logprob: -18.87754249572754
    9. ' ' → logprob: -19.25254249572754
    10. '_f' → logprob: -19.75254249572754

Token 310: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0206720617134124e-05
    2. 'n' → logprob: -11.50001049041748
    3. '[' → logprob: -17.625009536743164
    4. '(n' → logprob: -18.000009536743164
    5. '	n' → logprob: -19.500009536743164
    6. '[f' → logprob: -20.375009536743164
    7. '<n' → logprob: -20.500009536743164
    8. '[
' → logprob: -20.625009536743164
    9. ' n' → logprob: -21.000009536743164
    10. '[i' → logprob: -21.500009536743164

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.259079363080673e-05
    2. '   ' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.750012397766113
    4. ' ]' → logprob: -13.875012397766113
    5. ']*' → logprob: -15.500012397766113
    6. '}' → logprob: -16.37501335144043
    7. ')' → logprob: -17.00001335144043
    8. '  ' → logprob: -17.12501335144043
    9. '[' → logprob: -18.12501335144043
    10. '[n' → logprob: -18.25001335144043

Token 312: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.021043945103883743
    2. '*' → logprob: -3.8960440158843994
    3. '   ' → logprob: -8.02104377746582
    4. ' ' → logprob: -9.02104377746582
    5. '[' → logprob: -10.52104377746582
    6. '%' → logprob: -11.77104377746582
    7. '[n' → logprob: -12.02104377746582
    8. '  ' → logprob: -12.77104377746582
    9. ' ' → logprob: -12.77104377746582
    10. '
' → logprob: -12.89604377746582

Token 313: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00976564921438694
    2. ' inv' → logprob: -4.634765625
    3. '(inv' → logprob: -12.134765625
    4. ' ' → logprob: -13.259765625
    5. '   ' → logprob: -13.759765625
    6. 'if' → logprob: -14.384765625
    7. '
' → logprob: -15.634765625
    8. '  ' → logprob: -15.634765625
    9. 'inf' → logprob: -15.759765625
    10. 'in' → logprob: -16.134765625

Token 314: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.511406809295295e-06
    2. 'n' → logprob: -12.000006675720215
    3. '[' → logprob: -15.125006675720215
    4. '(n' → logprob: -17.1250057220459
    5. '[
' → logprob: -18.7500057220459
    6. ' [' → logprob: -18.8750057220459
    7. '
' → logprob: -19.1250057220459
    8. '	n' → logprob: -19.2500057220459
    9. '[f' → logprob: -19.2500057220459
    10. '```' → logprob: -19.6250057220459

Token 315: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.010853622108697891
    2. ' -' → logprob: -4.7608537673950195
    3. '-' → logprob: -6.1358537673950195
    4. '[k' → logprob: -9.88585376739502
    5. 'k' → logprob: -11.51085376739502
    6. '[-' → logprob: -12.38585376739502
    7. '[' → logprob: -12.63585376739502
    8. ' ' → logprob: -13.01085376739502
    9. '-n' → logprob: -14.38585376739502
    10. '   ' → logprob: -14.38585376739502

Token 316: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.125
    3. '	k' → logprob: -16.875
    4. '   ' → logprob: -19.125
    5. '"k' → logprob: -19.75
    6. '{k' → logprob: -21.125
    7. '[k' → logprob: -21.25
    8. '-k' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. ' ' → logprob: -21.625

Token 317: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3902033970225602e-05
    2. ']%' → logprob: -11.250014305114746
    3. ' ]' → logprob: -14.625014305114746
    4. '%' → logprob: -15.375014305114746
    5. ']
' → logprob: -16.50001335144043
    6. '   ' → logprob: -17.87501335144043
    7. '']' → logprob: -19.12501335144043
    8. ')' → logprob: -19.62501335144043
    9. '[' → logprob: -19.75001335144043
    10. '```' → logprob: -20.12501335144043

Token 318: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06197395175695419
    2. ' %' → logprob: -2.811974048614502
    3. '[' → logprob: -12.811973571777344
    4. ']' → logprob: -14.186973571777344
    5. ' ' → logprob: -14.186973571777344
    6. ')' → logprob: -14.186973571777344
    7. '%n' → logprob: -14.686973571777344
    8. ' ' → logprob: -15.311973571777344
    9. ']%' → logprob: -16.061973571777344
    10. '```' → logprob: -16.186973571777344

Token 319: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001170225441455841
    2. ' mod' → logprob: -6.7511701583862305
    3. 'MOD' → logprob: -18.001171112060547
    4. '(mod' → logprob: -18.126171112060547
    5. '	mod' → logprob: -18.251171112060547
    6. '   ' → logprob: -21.251171112060547
    7. ' ' → logprob: -21.501171112060547
    8. '
' → logprob: -21.751171112060547
    9. '```' → logprob: -21.876171112060547
    10. '_mod' → logprob: -22.001171112060547

Token 320: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' homogeneous' (ID: 151031)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3765251636505127
    2. ' main' → logprob: -1.2515251636505127
    3. 'def' → logprob: -3.7515251636505127
    4. ' def' → logprob: -6.001524925231934
    5. 'pow' → logprob: -7.376524925231934
    6. '__' → logprob: -7.751524925231934
    7. 'factor' → logprob: -8.876524925231934
    8. 'initialize' → logprob: -9.251524925231934
    9. ' factorial' → logprob: -9.376524925231934
    10. 'solve' → logprob: -9.876524925231934

Token 323: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.8015269637107849
    2. '_comb' → logprob: -1.0515270233154297
    3. '_product' → logprob: -1.9265270233154297
    4. '(k' → logprob: -4.30152702331543
    5. '_com' → logprob: -4.30152702331543
    6. '(n' → logprob: -4.92652702331543
    7. '_combo' → logprob: -5.42652702331543
    8. '_k' → logprob: -6.05152702331543
    9. 'comb' → logprob: -6.30152702331543
    10. '_products' → logprob: -6.30152702331543

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010926496179308742
    2. ',f' → logprob: -9.375109672546387
    3. ' ,' → logprob: -11.250109672546387
    4. 'f' → logprob: -12.625109672546387
    5. '<|end|>' → logprob: -12.625109672546387
    6. ')' → logprob: -13.875109672546387
    7. ',
' → logprob: -14.625109672546387
    8. ',user' → logprob: -14.750109672546387
    9. '‌,' → logprob: -15.000109672546387
    10. ',int' → logprob: -15.000109672546387

Token 325: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.07889584451913834
    2. ' inv' → logprob: -2.5788958072662354
    3. '(inv' → logprob: -12.703895568847656
    4. 'mod' → logprob: -13.703895568847656
    5. '.inv' → logprob: -14.828895568847656
    6. 'f' → logprob: -14.828895568847656
    7. 'inf' → logprob: -15.078895568847656
    8. ' ' → logprob: -15.703895568847656
    9. 'def' → logprob: -16.203895568847656
    10. '_inv' → logprob: -16.328895568847656

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.00000286102295
    3. 'def' → logprob: -15.87500286102295
    4. 'f' → logprob: -16.250001907348633
    5. ',f' → logprob: -16.375001907348633
    6. ',
' → logprob: -18.000001907348633
    7. ',module' → logprob: -18.125001907348633
    8. ' def' → logprob: -18.875001907348633
    9. 'mod' → logprob: -19.000001907348633
    10. '(mod' → logprob: -19.375001907348633

Token 327: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0031781906727701426
    2. ' mod' → logprob: -5.753178119659424
    3. 'MOD' → logprob: -14.878178596496582
    4. '	mod' → logprob: -16.628177642822266
    5. 'moder' → logprob: -18.128177642822266
    6. 'def' → logprob: -18.878177642822266
    7. ' ' → logprob: -19.003177642822266
    8. '(mod' → logprob: -19.128177642822266
    9. '   ' → logprob: -19.128177642822266
    10. '_mod' → logprob: -19.253177642822266

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001205893131555058
    2. ',n' → logprob: -9.250120162963867
    3. ' ,' → logprob: -10.625120162963867
    4. '(n' → logprob: -16.375120162963867
    5. ',f' → logprob: -17.500120162963867
    6. ',
' → logprob: -17.750120162963867
    7. '_,' → logprob: -18.875120162963867
    8. 'n' → logprob: -19.375120162963867
    9. ',int' → logprob: -19.625120162963867
    10. 'def' → logprob: -20.000120162963867

Token 329: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12715403735637665
    2. ' n' → logprob: -2.1271541118621826
    3. 'k' → logprob: -9.002154350280762
    4. 'r' → logprob: -10.252154350280762
    5. ' k' → logprob: -10.627154350280762
    6. '   ' → logprob: -11.127154350280762
    7. ' ' → logprob: -11.627154350280762
    8. 'f' → logprob: -11.752154350280762
    9. ' r' → logprob: -12.377154350280762
    10. ' f' → logprob: -13.002154350280762

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000599976978264749
    2. ',k' → logprob: -7.6255998611450195
    3. ' ,' → logprob: -9.12559986114502
    4. ',
' → logprob: -13.75059986114502
    5. 'k' → logprob: -14.12559986114502
    6. ',n' → logprob: -14.62559986114502
    7. ' k' → logprob: -15.00059986114502
    8. 'def' → logprob: -16.000600814819336
    9. '+k' → logprob: -16.375600814819336
    10. '):' → logprob: -16.500600814819336

Token 331: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008657260332256556
    2. ' k' → logprob: -7.125865936279297
    3. 'r' → logprob: -9.750865936279297
    4. '   ' → logprob: -14.125865936279297
    5. ' ' → logprob: -14.250865936279297
    6. '
' → logprob: -14.500865936279297
    7. ' r' → logprob: -14.625865936279297
    8. 'n' → logprob: -15.375865936279297
    9. 'm' → logprob: -15.625865936279297
    10. '```' → logprob: -15.875865936279297

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015051016816869378
    2. '):
' → logprob: -6.501504898071289
    3. ')' → logprob: -13.751504898071289
    4. ':' → logprob: -14.501504898071289
    5. '):
' → logprob: -14.501504898071289
    6. ' ):' → logprob: -15.001504898071289
    7. '   ' → logprob: -15.626504898071289
    8. ',' → logprob: -16.87650489807129
    9. '):

' → logprob: -17.00150489807129
    10. '}:' → logprob: -17.25150489807129

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10513320565223694
    2. 'if' → logprob: -2.355133295059204
    3. 'return' → logprob: -5.355133056640625
    4. ' if' → logprob: -8.605133056640625
    5. ' return' → logprob: -12.105133056640625
    6. '	if' → logprob: -14.355133056640625
    7. '```' → logprob: -14.355133056640625
    8. '   ' → logprob: -15.355133056640625
    9. '    
' → logprob: -15.480133056640625
    10. '	return' → logprob: -15.480133056640625

Token 334: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37574025988578796
    2. 'comb' → logprob: -1.6257402896881104
    3. 'if' (adapté à ' if') → logprob: -2.5007402896881104
    4. '   ' → logprob: -3.5007402896881104
    5. ' return' → logprob: -6.250740051269531
    6. ' combination' → logprob: -6.375740051269531
    7. ' if' → logprob: -7.750740051269531
    8. 'def' → logprob: -9.000740051269531
    9. 'combo' → logprob: -11.125740051269531
    10. 'com' → logprob: -11.250740051269531

Token 335: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0601786375045776
    2. ' not' → logprob: -1.1851786375045776
    3. ' k' → logprob: -1.4351786375045776
    4. 'not' → logprob: -2.935178756713867
    5. ' n' → logprob: -3.185178756713867
    6. 'n' → logprob: -4.185178756713867
    7. ' ' → logprob: -9.810178756713867
    8. '0' → logprob: -11.185178756713867
    9. ' ' → logprob: -11.310178756713867
    10. '   ' → logprob: -12.122678756713867

Token 336: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22642898559570312
    2. 'n' → logprob: -1.9764289855957031
    3. 'not' → logprob: -3.851428985595703
    4. ' k' → logprob: -4.101428985595703
    5. ' not' → logprob: -4.226428985595703
    6. ' n' → logprob: -4.476428985595703
    7. ')' → logprob: -9.226428985595703
    8. '   ' → logprob: -9.351428985595703
    9. ' ' → logprob: -10.976428985595703
    10. '0' → logprob: -11.351428985595703

Token 337: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.2891254425048828
    2. ' <' → logprob: -1.4141254425048828
    3. '==' → logprob: -1.9141254425048828
    4. ' ==' → logprob: -2.039125442504883
    5. '+' → logprob: -2.664125442504883
    6. ',k' → logprob: -2.914125442504883
    7. ',' → logprob: -3.789125442504883
    8. ' +' → logprob: -3.789125442504883
    9. '=' → logprob: -4.789125442504883
    10. '+k' → logprob: -4.789125442504883

Token 338: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001013280008919537
    2. ' ' → logprob: -7.126013278961182
    3. '-' → logprob: -8.50101375579834
    4. ' -' → logprob: -12.62601375579834
    5. 'k' → logprob: -13.75101375579834
    6. ')' → logprob: -14.75101375579834
    7. '1' → logprob: -15.00101375579834
    8. 'n' → logprob: -15.50101375579834
    9. '
' → logprob: -15.87601375579834
    10. '=' → logprob: -16.751012802124023

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029840084607712924
    2. '-' → logprob: -8.250298500061035
    3. ' ' → logprob: -10.250298500061035
    4. ')' → logprob: -14.375298500061035
    5. ' -' → logprob: -14.625298500061035
    6. 'k' → logprob: -15.000298500061035
    7. 'n' → logprob: -15.875298500061035
    8. '1' → logprob: -16.62529754638672
    9. '=' → logprob: -16.75029754638672
    10. '
' → logprob: -17.00029754638672

Token 340: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6418800950050354
    2. 'and' → logprob: -0.7668800950050354
    3. ')' → logprob: -4.766880035400391
    4. '):' → logprob: -7.516880035400391
    5. ' or' → logprob: -9.51688003540039
    6. '):
' → logprob: -9.76688003540039
    7. ' ' → logprob: -10.64188003540039
    8. ' )' → logprob: -11.64188003540039
    9. '   ' → logprob: -12.01688003540039
    10. 'or' → logprob: -12.26688003540039

Token 341: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00765596516430378
    2. ' k' → logprob: -4.882656097412109
    3. '   ' → logprob: -11.13265609741211
    4. '(k' → logprob: -11.25765609741211
    5. '0' → logprob: -12.25765609741211
    6. ' ' → logprob: -12.38265609741211
    7. ')' → logprob: -12.63265609741211
    8. '  ' → logprob: -13.13265609741211
    9. ' (' → logprob: -13.25765609741211
    10. '    ' → logprob: -13.75765609741211

Token 342: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.392575740814209
    2. ' ==' → logprob: -1.142575740814209
    3. '>' → logprob: -6.017575740814209
    4. ')' → logprob: -6.142575740814209
    5. ' >' → logprob: -7.642575740814209
    6. '<' → logprob: -8.267576217651367
    7. ' <' → logprob: -9.017576217651367
    8. ' ' → logprob: -9.517576217651367
    9. '=' → logprob: -9.767576217651367
    10. ')==' → logprob: -10.267576217651367

Token 343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004079828038811684
    2. ' ' → logprob: -5.504079818725586
    3. '=' → logprob: -14.379079818725586
    4. 'n' → logprob: -15.629079818725586
    5. '  ' → logprob: -15.879079818725586
    6. ')' → logprob: -16.129079818725586
    7. 'k' → logprob: -16.254079818725586
    8. '   ' → logprob: -16.379079818725586
    9. '۰' → logprob: -16.754079818725586
    10. ' ' → logprob: -17.004079818725586

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.707997428951785e-05
    2. ' ' → logprob: -9.500077247619629
    3. 'n' → logprob: -13.875077247619629
    4. 'k' → logprob: -14.250077247619629
    5. '   ' → logprob: -16.125076293945312
    6. '=' → logprob: -16.812576293945312
    7. '1' → logprob: -16.812576293945312
    8. '۰' → logprob: -16.937576293945312
    9. ' ' → logprob: -17.187576293945312
    10. ')' → logprob: -17.187576293945312

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07009559869766235
    2. '):
' → logprob: -2.9450955390930176
    3. '):' → logprob: -4.195095539093018
    4. '):
' → logprob: -11.695096015930176
    5. ' )' → logprob: -12.070096015930176
    6. '   ' → logprob: -12.445096015930176
    7. '):

' → logprob: -12.445096015930176
    8. ')
' → logprob: -13.195096015930176
    9. ')==' → logprob: -13.570096015930176
    10. ' ):
' → logprob: -14.445096015930176

Token 346: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7871509790420532
    2. ':
' → logprob: -1.1621509790420532
    3. '       ' → logprob: -2.1621508598327637
    4. ':' → logprob: -2.2871508598327637
    5. '):
' → logprob: -4.412150859832764
    6. ':return' → logprob: -6.662150859832764
    7. ' or' → logprob: -6.787150859832764
    8. ')' → logprob: -7.912150859832764
    9. '):' → logprob: -9.412151336669922
    10. '=' → logprob: -9.537151336669922

Token 347: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29650160670280457
    2. '(k' → logprob: -2.046501636505127
    3. ' k' → logprob: -2.296501636505127
    4. '(n' → logprob: -4.171501636505127
    5. ' (' → logprob: -4.921501636505127
    6. 'n' → logprob: -6.171501636505127
    7. ' n' → logprob: -6.546501636505127
    8. '(' → logprob: -7.671501636505127
    9. ' not' → logprob: -10.171501159667969
    10. 'not' → logprob: -11.421501159667969

Token 348: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6411836743354797
    2. ' ==' → logprob: -0.8911836743354797
    3. '<' → logprob: -3.766183614730835
    4. ' <' → logprob: -3.891183614730835
    5. '<=' → logprob: -4.516183853149414
    6. ' <=' → logprob: -4.766183853149414
    7. '=' → logprob: -9.266183853149414
    8. ' ' → logprob: -10.516183853149414
    9. '0' → logprob: -12.016183853149414
    10. '[' → logprob: -12.141183853149414

Token 349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039230400579981506
    2. ' ' → logprob: -8.000391960144043
    3. '1' → logprob: -10.500391960144043
    4. '=' → logprob: -10.500391960144043
    5. '   ' → logprob: -14.375391960144043
    6. '
' → logprob: -15.625391960144043
    7. '(' → logprob: -15.625391960144043
    8. ' =' → logprob: -15.750391960144043
    9. '```' → logprob: -16.25039291381836
    10. '       ' → logprob: -16.56289291381836

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.0536883615423e-05
    2. ' ' → logprob: -9.875080108642578
    3. '1' → logprob: -10.500080108642578
    4. '=' → logprob: -14.000080108642578
    5. '۰' → logprob: -15.687580108642578
    6. '   ' → logprob: -16.312580108642578
    7. '-' → logprob: -16.937580108642578
    8. ' =' → logprob: -16.937580108642578
    9. '(' → logprob: -16.937580108642578
    10. '```' → logprob: -17.062580108642578

Token 351: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8774681091308594
    2. ':' → logprob: -1.1274681091308594
    3. '   ' → logprob: -1.3774681091308594
    4. ' or' → logprob: -5.127468109130859
    5. ':return' → logprob: -6.502468109130859
    6. '):
' → logprob: -7.877468109130859
    7. '       ' → logprob: -8.75246810913086
    8. ' :
' → logprob: -9.87746810913086
    9. ',' → logprob: -11.12746810913086
    10. ' :' → logprob: -11.50246810913086

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20165197551250458
    2. '   ' → logprob: -1.701651930809021
    3. ':' → logprob: -8.826651573181152
    4. ':
' → logprob: -9.951651573181152
    5. ' return' → logprob: -11.201651573181152
    6. ',' → logprob: -12.201651573181152
    7. ':return' → logprob: -12.451651573181152
    8. '<|end|>' → logprob: -12.701651573181152
    9. '0' → logprob: -12.826651573181152
    10. 'return' → logprob: -12.826651573181152

Token 353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1383715122938156
    2. '   ' → logprob: -2.513371467590332
    3. ' return' → logprob: -3.263371467590332
    4. '       ' → logprob: -4.763371467590332
    5. '
' → logprob: -6.638371467590332
    6. '	return' → logprob: -9.888371467590332
    7. '0' → logprob: -10.763371467590332
    8. '  ' → logprob: -10.888371467590332
    9. ' ' → logprob: -11.763371467590332
    10. '    ' → logprob: -12.013371467590332

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.125139236450195
    4. '  ' → logprob: -20.250139236450195
    5. ' ' → logprob: -21.000139236450195
    6. '
' → logprob: -21.375139236450195
    7. '۰' → logprob: -21.375139236450195
    8. '000' → logprob: -21.625139236450195
    9. '```' → logprob: -21.750139236450195
    10. '00' → logprob: -21.875139236450195

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.000009536743164
    4. '۰' → logprob: -18.750009536743164
    5. '  ' → logprob: -19.500009536743164
    6. '00' → logprob: -19.875009536743164
    7. '000' → logprob: -20.000009536743164
    8. '    ' → logprob: -20.125009536743164
    9. '```' → logprob: -20.375009536743164
    10. '０' → logprob: -20.750009536743164

Token 356: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010543202981352806
    2. '
' → logprob: -4.635543346405029
    3. '    
' → logprob: -7.260543346405029
    4. '  
' → logprob: -10.510542869567871
    5. '\n' → logprob: -10.885542869567871
    6. ' return' → logprob: -12.010542869567871
    7. ' 
' → logprob: -12.260542869567871
    8. 'return' → logprob: -12.260542869567871
    9. '   
' → logprob: -12.260542869567871
    10. ' if' → logprob: -12.510542869567871

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.066919301403686e-05
    2. 'return' → logprob: -9.500090599060059
    3. ' return' → logprob: -11.750090599060059
    4. '
' → logprob: -12.250090599060059
    5. '    
' → logprob: -13.000090599060059
    6. '	return' → logprob: -15.625090599060059
    7. 'if' → logprob: -16.125091552734375
    8. '0' → logprob: -16.625091552734375
    9. '  
' → logprob: -16.625091552734375
    10. '```' → logprob: -16.750091552734375

Token 358: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00011319868644932285
    2. '   ' → logprob: -9.250113487243652
    3. ' return' → logprob: -11.125113487243652
    4. 'if' → logprob: -13.125113487243652
    5. '
' → logprob: -16.000112533569336
    6. '	return' → logprob: -16.875112533569336
    7. '    
' → logprob: -17.125112533569336
    8. 'else' → logprob: -17.375112533569336
    9. '```' → logprob: -17.625112533569336
    10. 'from' → logprob: -19.125112533569336

Token 359: ' f' (ID: 285)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0028218738734722137
    2. ' combination' → logprob: -5.877821922302246
    3. 'combo' → logprob: -11.752821922302246
    4. 'com' → logprob: -12.627821922302246
    5. '   ' → logprob: -13.502821922302246
    6. 'Combination' → logprob: -13.752821922302246
    7. 'combined' → logprob: -14.377821922302246
    8. 'combine' → logprob: -15.127821922302246
    9. 'C' → logprob: -15.252821922302246
    10. ' comb' → logprob: -15.627821922302246

Token 360: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.5252596464706585e-05
    2. '[' → logprob: -10.500044822692871
    3. 'n' → logprob: -11.250044822692871
    4. '[k' → logprob: -12.500044822692871
    5. '[f' → logprob: -15.125044822692871
    6. '(n' → logprob: -15.375044822692871
    7. ' [' → logprob: -16.250045776367188
    8. '[m' → logprob: -16.875045776367188
    9. '[
' → logprob: -17.375045776367188
    10. 'hom' → logprob: -17.500045776367188

Token 361: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.05345841869711876
    2. ' +' → logprob: -3.0534584522247314
    3. '+' → logprob: -6.178458213806152
    4. '   ' → logprob: -6.428458213806152
    5. 'k' → logprob: -6.803458213806152
    6. ']' → logprob: -10.553458213806152
    7. ' ' → logprob: -10.928458213806152
    8. '+n' → logprob: -12.678458213806152
    9. '  ' → logprob: -12.803458213806152
    10. ' k' → logprob: -13.178458213806152

Token 362: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7432603272027336e-06
    2. ' k' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '[k' → logprob: -18.500001907348633
    5. '	k' → logprob: -19.000001907348633
    6. ' ' → logprob: -20.250001907348633
    7. '
' → logprob: -20.625001907348633
    8. '{k' → logprob: -20.750001907348633
    9. '       ' → logprob: -21.000001907348633
    10. '(k' → logprob: -21.250001907348633

Token 363: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013035668234806508
    2. '-' → logprob: -9.125130653381348
    3. ' -' → logprob: -11.625130653381348
    4. '   ' → logprob: -11.750130653381348
    5. ']
' → logprob: -12.875130653381348
    6. ']*' → logprob: -13.875130653381348
    7. ' ]' → logprob: -14.750130653381348
    8. ' ' → logprob: -15.375130653381348
    9. ']

' → logprob: -16.25012969970703
    10. '1' → logprob: -16.50012969970703

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '
' → logprob: -19.375001907348633
    5. '2' → logprob: -19.875001907348633
    6. '```' → logprob: -19.875001907348633
    7. '  ' → logprob: -20.500001907348633
    8. '-' → logprob: -21.000001907348633
    9. '１' → logprob: -21.187501907348633
    10. 'k' → logprob: -21.312501907348633

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -17.75
    4. '
' → logprob: -18.25
    5. '```' → logprob: -18.75
    6. '

' → logprob: -19.9375
    7. '۱' → logprob: -19.9375
    8. '１' → logprob: -20.3125
    9. '2' → logprob: -20.375
    10. 'f' → logprob: -20.5

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8624639324116288e-06
    2. ']*' → logprob: -13.875001907348633
    3. ' ]' → logprob: -14.125001907348633
    4. '   ' → logprob: -16.750001907348633
    5. ']
' → logprob: -19.000001907348633
    6. '*' → logprob: -20.000001907348633
    7. ']%' → logprob: -20.125001907348633
    8. '"]' → logprob: -20.375001907348633
    9. '']' → logprob: -20.625001907348633
    10. ']

' → logprob: -20.875001907348633

Token 367: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004620949272066355
    2. '*' → logprob: -5.3796210289001465
    3. '   ' → logprob: -15.254620552062988
    4. 'def' → logprob: -15.504620552062988
    5. '%' → logprob: -16.629621505737305
    6. '**' → logprob: -17.254621505737305
    7. ' ' → logprob: -17.254621505737305
    8. 'import' → logprob: -17.629621505737305
    9. ' ' → logprob: -17.879621505737305
    10. ',' → logprob: -18.004621505737305

Token 368: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0068047791719436646
    2. ' inv' → logprob: -5.006804943084717
    3. '(inv' → logprob: -9.381804466247559
    4. '   ' → logprob: -12.881804466247559
    5. 'if' → logprob: -13.756804466247559
    6. ' (' → logprob: -14.381804466247559
    7. ' ' → logprob: -15.506804466247559
    8. '(' → logprob: -15.631804466247559
    9. '  ' → logprob: -16.131805419921875
    10. 'in' → logprob: -16.381805419921875

Token 369: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5759971737861633
    2. '[n' → logprob: -0.8259971737861633
    3. '[(' → logprob: -10.700997352600098
    4. 'k' → logprob: -10.700997352600098
    5. '[' → logprob: -12.200997352600098
    6. '[f' → logprob: -12.450997352600098
    7. '[
' → logprob: -13.825997352600098
    8. 'n' → logprob: -13.950997352600098
    9. '[key' → logprob: -14.950997352600098
    10. ' [' → logprob: -15.200997352600098

Token 370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005676229950040579
    2. '-' → logprob: -5.88067626953125
    3. ']%' → logprob: -5.88067626953125
    4. ' -' → logprob: -10.25567626953125
    5. '%' → logprob: -10.38067626953125
    6. '%n' → logprob: -13.13067626953125
    7. ']*' → logprob: -13.50567626953125
    8. '   ' → logprob: -13.50567626953125
    9. '[n' → logprob: -14.00567626953125
    10. '```' → logprob: -14.50567626953125

Token 371: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932042241096497
    2. ' %' → logprob: -0.6932042241096497
    3. '%s' → logprob: -11.818203926086426
    4. ' ' → logprob: -11.818203926086426
    5. '%n' → logprob: -11.943203926086426
    6. ' %
' → logprob: -12.443203926086426
    7. '%
' → logprob: -12.443203926086426
    8. '   ' → logprob: -12.568203926086426
    9. ' ' → logprob: -12.568203926086426
    10. '%x' → logprob: -12.693203926086426

Token 372: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1603005826473236
    2. 'MOD' → logprob: -1.910300612449646
    3. ' MOD' → logprob: -10.160300254821777
    4. ' mod' → logprob: -10.410300254821777
    5. '(mod' → logprob: -12.660300254821777
    6. '998' → logprob: -12.910300254821777
    7. '	mod' → logprob: -13.535300254821777
    8. '_mod' → logprob: -15.660300254821777
    9. '_MOD' → logprob: -15.785300254821777
    10. '```' → logprob: -16.285301208496094

Token 373: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0018443976296111941
    2. '*' → logprob: -6.37684440612793
    3. '   ' → logprob: -9.62684440612793
    4. '%' → logprob: -9.87684440612793
    5. ' %' → logprob: -10.75184440612793
    6. '```' → logprob: -13.37684440612793
    7. ' ' → logprob: -14.37684440612793
    8. '	' → logprob: -14.50184440612793
    9. ' ' → logprob: -15.25184440612793
    10. '  ' → logprob: -16.25184440612793

Token 374: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00671940203756094
    2. ' inv' → logprob: -5.006719589233398
    3. '   ' → logprob: -13.006719589233398
    4. '(inv' → logprob: -13.506719589233398
    5. ' ' → logprob: -16.0067195892334
    6. '.inv' → logprob: -16.6317195892334
    7. '  ' → logprob: -17.2567195892334
    8. '
' → logprob: -17.5067195892334
    9. '\
' → logprob: -17.6317195892334
    10. '           ' → logprob: -17.7567195892334

Token 375: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.875005722045898
    3. 'n' → logprob: -13.625005722045898
    4. ' [' → logprob: -14.375005722045898
    5. '(n' → logprob: -14.375005722045898
    6. '[
' → logprob: -15.000005722045898
    7. '```' → logprob: -15.750005722045898
    8. '	n' → logprob: -16.7500057220459
    9. '   ' → logprob: -17.6250057220459
    10. '[k' → logprob: -17.8750057220459

Token 376: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018581995973363519
    2. ' -' → logprob: -6.376858234405518
    3. '[-' → logprob: -9.75185775756836
    4. '[' → logprob: -9.87685775756836
    5. '1' → logprob: -11.25185775756836
    6. ''-' → logprob: -12.12685775756836
    7. '[k' → logprob: -12.12685775756836
    8. '-k' → logprob: -12.25185775756836
    9. 'k' → logprob: -12.50185775756836
    10. '"-' → logprob: -12.62685775756836

Token 377: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '(' → logprob: -17.875001907348633
    5. '```' → logprob: -18.500001907348633
    6. '{' → logprob: -18.750001907348633
    7. '
' → logprob: -19.375001907348633
    8. '{
' → logprob: -19.375001907348633
    9. '[' → logprob: -19.875001907348633
    10. '  ' → logprob: -20.500001907348633

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -17.875
    4. '۱' → logprob: -19.0
    5. '{' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. '১' → logprob: -20.75
    8. '<|end|>' → logprob: -20.875
    9. '１' → logprob: -21.3125
    10. '(' → logprob: -21.6875

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05429599806666374
    2. '%' → logprob: -3.3042960166931152
    3. ']%' → logprob: -4.804296016693115
    4. ' %' → logprob: -5.054296016693115
    5. ')' → logprob: -6.929296016693115
    6. ' ]' → logprob: -8.179295539855957
    7. '}' → logprob: -8.554295539855957
    8. ')%' → logprob: -10.304295539855957
    9. '<|end|>' → logprob: -10.929295539855957
    10. 'def' → logprob: -11.554295539855957

Token 380: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47408074140548706
    2. ' %' → logprob: -0.9740807414054871
    3. ')' → logprob: -13.474081039428711
    4. '<|end|>' → logprob: -13.974081039428711
    5. ' ' → logprob: -14.349081039428711
    6. ')%' → logprob: -15.349081039428711
    7. '```' → logprob: -15.724081039428711
    8. '%
' → logprob: -15.724081039428711
    9. '[' → logprob: -16.09908103942871
    10. ' %
' → logprob: -16.47408103942871

Token 381: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00016241880075540394
    2. ' mod' → logprob: -8.750162124633789
    3. 'MOD' → logprob: -12.500162124633789
    4. '(mod' → logprob: -16.12516212463379
    5. '	mod' → logprob: -16.75016212463379
    6. ' MOD' → logprob: -20.12516212463379
    7. '_mod' → logprob: -20.37516212463379
    8. ' ' → logprob: -21.62516212463379
    9. 'mods' → logprob: -21.87516212463379
    10. '```' → logprob: -22.25016212463379

Token 382: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' input' (ID: 3422)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048724982887506485
    2. ' main' → logprob: -3.673724889755249
    3. 'comb' → logprob: -5.298725128173828
    4. 'factor' → logprob: -5.423725128173828
    5. 'pow' → logprob: -5.923725128173828
    6. 'mod' → logprob: -6.173725128173828
    7. 'create' → logprob: -6.298725128173828
    8. 'hom' → logprob: -6.548725128173828
    9. 'initialize' → logprob: -7.173725128173828
    10. 'def' → logprob: -7.423725128173828

Token 385: '_parser' (ID: 44939)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0029492934700101614
    2. '().' → logprob: -6.252949237823486
    3. '_' → logprob: -8.502949714660645
    4. '_data' → logprob: -8.627949714660645
    5. ' =' → logprob: -8.752949714660645
    6. '(' → logprob: -8.752949714660645
    7. '_line' → logprob: -9.002949714660645
    8. '_str' → logprob: -10.252949714660645
    9. ' ()' → logprob: -10.627949714660645
    10. '()
' → logprob: -11.127949714660645

Token 386: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.889424836728722e-05
    2. '()' → logprob: -10.000099182128906
    3. '():
' → logprob: -10.875099182128906
    4. ' ():' → logprob: -10.875099182128906
    5. '(' → logprob: -11.250099182128906
    6. '(input' → logprob: -14.125099182128906
    7. '(":' → logprob: -14.250099182128906
    8. '(prompt' → logprob: -14.750099182128906
    9. '(line' → logprob: -15.875099182128906
    10. '(s' → logprob: -16.000099182128906

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001946248929016292
    2. '()' → logprob: -7.501946449279785
    3. ' return' → logprob: -7.501946449279785
    4. ' n' → logprob: -8.001946449279785
    5. ' line' → logprob: -8.876946449279785
    6. ' lines' → logprob: -10.126946449279785
    7. ' input' → logprob: -10.251946449279785
    8. ' import' → logprob: -10.251946449279785
    9. 'n' → logprob: -10.251946449279785
    10. '():
' → logprob: -10.376946449279785

Token 388: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8125579953193665
    2. ' return' → logprob: -1.0625579357147217
    3. 'n' → logprob: -2.8125579357147217
    4. ' n' → logprob: -2.8125579357147217
    5. ' line' → logprob: -4.062558174133301
    6. 'data' → logprob: -4.187558174133301
    7. 'line' → logprob: -4.312558174133301
    8. 'import' → logprob: -4.312558174133301
    9. 's' → logprob: -4.437558174133301
    10. ' data' → logprob: -4.937558174133301

Token 389: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31031283736228943
    2. 'map' → logprob: -1.5603128671646118
    3. ' list' → logprob: -3.1853127479553223
    4. ' map' → logprob: -4.560312747955322
    5. 'input' → logprob: -5.810312747955322
    6. 'tuple' → logprob: -6.685312747955322
    7. 'int' → logprob: -7.810312747955322
    8. ' input' → logprob: -9.18531322479248
    9. ' tuple' → logprob: -9.18531322479248
    10. '[' → logprob: -11.06031322479248

Token 390: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12268912047147751
    2. 'int' → logprob: -2.2476890087127686
    3. 'input' → logprob: -4.872689247131348
    4. '(input' → logprob: -6.247689247131348
    5. '(' → logprob: -9.247689247131348
    6. '<|end|>' → logprob: -9.872689247131348
    7. '(str' → logprob: -10.497689247131348
    8. 'list' → logprob: -11.122689247131348
    9. '<int' → logprob: -11.247689247131348
    10. 'str' → logprob: -11.997689247131348

Token 391: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19589518010616302
    2. ',input' → logprob: -2.445895195007324
    3. 'input' → logprob: -3.195895195007324
    4. ',' → logprob: -3.195895195007324
    5. '(),' → logprob: -5.445895195007324
    6. '(' → logprob: -5.445895195007324
    7. ')' → logprob: -8.195895195007324
    8. ' input' → logprob: -8.320895195007324
    9. '   ' → logprob: -9.570895195007324
    10. '())' → logprob: -9.695895195007324

Token 392: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031786637846380472
    2. ' input' → logprob: -5.753178596496582
    3. ')' → logprob: -14.378178596496582
    4. 'open' → logprob: -16.0031795501709
    5. '   ' → logprob: -16.6281795501709
    6. ',input' → logprob: -16.7531795501709
    7. ' ' → logprob: -17.2531795501709
    8. '=input' → logprob: -17.6281795501709
    9. '(input' → logprob: -17.6281795501709
    10. '	input' → logprob: -18.3781795501709

Token 393: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.909333023941144e-05
    2. '()' → logprob: -9.625068664550781
    3. ' ().' → logprob: -13.000068664550781
    4. '(' → logprob: -14.875068664550781
    5. '())' → logprob: -15.000068664550781
    6. ' ()' → logprob: -17.87506866455078
    7. '().__' → logprob: -17.87506866455078
    8. '()?.' → logprob: -18.75006866455078
    9. '().'' → logprob: -18.87506866455078
    10. '（）' → logprob: -19.12506866455078

Token 394: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015315281925722957
    2. 'strip' → logprob: -6.501531600952148
    3. 'read' → logprob: -11.001531600952148
    4. '().' → logprob: -11.376531600952148
    5. 'rstrip' → logprob: -14.376531600952148
    6. ' split' → logprob: -15.501531600952148
    7. 'spl' → logprob: -15.626531600952148
    8. '(split' → logprob: -16.75153160095215
    9. '.split' → logprob: -17.37653160095215
    10. ')' → logprob: -17.50153160095215

Token 395: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012114259880036116
    2. ')' → logprob: -7.751211643218994
    3. '()' → logprob: -7.751211643218994
    4. '()))' → logprob: -8.001211166381836
    5. '))' → logprob: -11.251211166381836
    6. '(' → logprob: -13.626211166381836
    7. ' ())' → logprob: -14.376211166381836
    8. '()]' → logprob: -15.626211166381836
    9. '())
' → logprob: -15.751211166381836
    10. '()),' → logprob: -17.126211166381836

Token 396: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17540498077869415
    2. 'def' → logprob: -2.6754050254821777
    3. '```' → logprob: -3.4254050254821777
    4. 'n' → logprob: -3.6754050254821777
    5. '<|end|>' → logprob: -4.175405025482178
    6. ')' → logprob: -4.925405025482178
    7. '...' → logprob: -5.925405025482178
    8. 'MOD' → logprob: -6.050405025482178
    9. 'f' → logprob: -6.300405025482178
    10. 'a' → logprob: -6.550405025482178

Token 397: ' Factor' (ID: 63743)
  Prédit: ' Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.46298345923423767
    2. ' Combination' → logprob: -1.46298348903656
    3. ' Counter' → logprob: -3.4629833698272705
    4. ' Com' → logprob: -3.4629833698272705
    5. ' ' → logprob: -3.7129833698272705
    6. ' Combo' → logprob: -4.08798360824585
    7. ' Solution' → logprob: -4.96298360824585
    8. ' Calculator' → logprob: -5.46298360824585
    9. ' Solver' → logprob: -5.46298360824585
    10. ' My' → logprob: -5.58798360824585

Token 398: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0010548417922109365
    2. 'ialize' → logprob: -7.126054763793945
    3. 'al' → logprob: -9.251054763793945
    4. 'orial' → logprob: -9.501054763793945
    5. 'or' → logprob: -10.626054763793945
    6. 'ization' → logprob: -11.001054763793945
    7. '```' → logprob: -11.251054763793945
    8. 'ials' → logprob: -12.001054763793945
    9. '``' → logprob: -12.501054763793945
    10. 'ator' → logprob: -12.751054763793945

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.164798304438591
    2. ':
' → logprob: -2.2897982597351074
    3. 'Helper' → logprob: -3.6647982597351074
    4. 'Calculator' → logprob: -4.414798259735107
    5. '():' → logprob: -5.164798259735107
    6. 'Cache' → logprob: -6.414798259735107
    7. 'List' → logprob: -6.664798259735107
    8. '():
' → logprob: -7.039798259735107
    9. '(' → logprob: -7.789798259735107
    10. 'Factor' → logprob: -7.914798259735107

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17517009377479553
    2. ':' → logprob: -1.9251700639724731
    3. ':
' → logprob: -5.175169944763184
    4. ' def' → logprob: -6.050169944763184
    5. '    
' → logprob: -6.050169944763184
    6. 'def' → logprob: -6.550169944763184
    7. '```' → logprob: -7.425169944763184
    8. '    ' → logprob: -7.925169944763184
    9. '<|end|>' → logprob: -8.175169944763184
    10. ':def' → logprob: -8.550169944763184

Token 401: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.026377402245998383
    2. 'def' (adapté à ' def') → logprob: -3.7763774394989014
    3. '   ' → logprob: -5.776377201080322
    4. ' MOD' → logprob: -11.52637767791748
    5. '	def' → logprob: -12.02637767791748
    6. 'MOD' → logprob: -12.02637767791748
    7. ' ' → logprob: -12.90137767791748
    8. ' __' → logprob: -13.40137767791748
    9. '    
' → logprob: -14.77637767791748
    10. '    ' → logprob: -15.40137767791748

Token 402: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5784991383552551
    2. '__' → logprob: -0.8284991383552551
    3. 'init' → logprob: -6.4534993171691895
    4. ' def' → logprob: -7.8284993171691895
    5. '_init' → logprob: -8.078498840332031
    6. ' init' → logprob: -8.828498840332031
    7. 'def' → logprob: -9.078498840332031
    8. ' ' → logprob: -12.453498840332031
    9. '```' → logprob: -13.203498840332031
    10. ' _' → logprob: -13.703498840332031

Token 403: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.375
    3. '_init' → logprob: -20.75
    4. 'int' → logprob: -20.875
    5. 'ini' → logprob: -21.0
    6. 'i' → logprob: -23.75
    7. 'inite' → logprob: -24.125
    8. '(init' → logprob: -24.5
    9. 'in' → logprob: -25.25
    10. 'inti' → logprob: -25.5

Token 404: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008690441958606243
    2. '(self' → logprob: -4.758690357208252
    3. '__' → logprob: -9.75869083404541
    4. '_(' → logprob: -11.13369083404541
    5. '(' → logprob: -13.25869083404541
    6. '__(
' → logprob: -14.00869083404541
    7. ' (' → logprob: -15.13369083404541
    8. 'self' → logprob: -15.63369083404541
    9. '__((' → logprob: -15.88369083404541
    10. '<>(' → logprob: -16.508689880371094

Token 405: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.45848218582978e-06
    2. ' self' → logprob: -13.25000286102295
    3. '
' → logprob: -14.87500286102295
    4. ',' → logprob: -16.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '(self' → logprob: -17.375001907348633
    7. ',self' → logprob: -18.250001907348633
    8. '0' → logprob: -18.625001907348633
    9. ')' → logprob: -18.625001907348633
    10. 'n' → logprob: -18.875001907348633

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.980854959692806e-05
    2. 'self' → logprob: -9.875069618225098
    3. ',self' → logprob: -11.000069618225098
    4. '(self' → logprob: -13.750069618225098
    5. ' ,' → logprob: -14.750069618225098
    6. ',
' → logprob: -16.625070571899414
    7. '   ' → logprob: -17.250070571899414
    8. ' self' → logprob: -17.250070571899414
    9. ',n' → logprob: -17.625070571899414
    10. ',(' → logprob: -20.000070571899414

Token 407: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16223055124282837
    2. 'n' → logprob: -1.9122304916381836
    3. 'max' → logprob: -6.912230491638184
    4. '   ' → logprob: -8.037230491638184
    5. ' self' → logprob: -8.162230491638184
    6. ' n' → logprob: -8.537230491638184
    7. 'size' → logprob: -8.537230491638184
    8. '       ' → logprob: -12.412230491638184
    9. ' max' → logprob: -13.537230491638184
    10. 'limit' → logprob: -14.537230491638184

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008644940331578255
    2. '):' → logprob: -4.758645057678223
    3. '):
' → logprob: -10.633645057678223
    4. ' ,' → logprob: -12.633645057678223
    5. ')' → logprob: -13.883645057678223
    6. ':' → logprob: -14.258645057678223
    7. '   ' → logprob: -14.258645057678223
    8. ' ):' → logprob: -15.758645057678223
    9. '‌,' → logprob: -16.133644104003906
    10. ',n' → logprob: -16.133644104003906

Token 409: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.013949345797300339
    2. ' mod' → logprob: -4.763949394226074
    3. 'MOD' → logprob: -5.263949394226074
    4. ' MOD' → logprob: -8.888949394226074
    5. '	mod' → logprob: -12.763949394226074
    6. '   ' → logprob: -13.013949394226074
    7. 'module' → logprob: -14.638949394226074
    8. ' ' → logprob: -15.013949394226074
    9. ' modulus' → logprob: -15.263949394226074
    10. 'Mod' → logprob: -15.263949394226074

Token 410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0248055849224329
    2. '=' → logprob: -3.7748055458068848
    3. '):
' → logprob: -6.524805545806885
    4. ')' → logprob: -9.899806022644043
    5. ' ):' → logprob: -10.899806022644043
    6. ':' → logprob: -11.024806022644043
    7. ',' → logprob: -13.274806022644043
    8. '=None' → logprob: -13.524806022644043
    9. '):
' → logprob: -13.649806022644043
    10. ' =' → logprob: -14.024806022644043

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004013814963400364
    2. '   ' → logprob: -6.254014015197754
    3. ')' → logprob: -7.129014015197754
    4. '<|end|>' → logprob: -7.379014015197754
    5. '        
' → logprob: -8.754014015197754
    6. ':' → logprob: -9.254014015197754
    7. 'self' → logprob: -9.504014015197754
    8. '    ' → logprob: -9.879014015197754
    9. ',' → logprob: -10.004014015197754
    10. ' self' → logprob: -10.129014015197754

Token 412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.050951194018125534
    2. '       ' → logprob: -3.0509512424468994
    3. ' self' → logprob: -6.05095100402832
    4. '   ' → logprob: -12.17595100402832
    5. '	self' → logprob: -15.30095100402832
    6. '(self' → logprob: -17.30095100402832
    7. ' ' → logprob: -17.55095100402832
    8. '     ' → logprob: -18.05095100402832
    9. '      ' → logprob: -18.55095100402832
    10. '	' → logprob: -19.05095100402832

Token 413: '.mod' (ID: 19046)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6746531128883362
    2. '.n' → logprob: -0.7996531128883362
    3. '.mod' → logprob: -3.6746530532836914
    4. '=' → logprob: -4.674653053283691
    5. ' =' → logprob: -6.049653053283691
    6. ' .' → logprob: -6.174653053283691
    7. '._' → logprob: -7.799653053283691
    8. 'n' → logprob: -8.174653053283691
    9. '   ' → logprob: -8.174653053283691
    10. '.=' → logprob: -8.549653053283691

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.548587799072266
    4. '=
' → logprob: -16.548587799072266
    5. '=

' → logprob: -17.173587799072266
    6. ' =
' → logprob: -17.673587799072266
    7. '   ' → logprob: -17.673587799072266
    8. '=n' → logprob: -17.673587799072266
    9. '＝' → logprob: -17.798587799072266
    10. '  ' → logprob: -18.173587799072266

Token 415: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01450651977211237
    2. ' mod' → logprob: -4.2645063400268555
    3. 'MOD' → logprob: -8.014506340026855
    4. ' MOD' → logprob: -11.389506340026855
    5. '	mod' → logprob: -14.014506340026855
    6. '(mod' → logprob: -15.764506340026855
    7. '998' → logprob: -16.514507293701172
    8. '_mod' → logprob: -17.639507293701172
    9. '999' → logprob: -18.264507293701172
    10. 'md' → logprob: -19.139507293701172

Token 416: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35568156838417053
    2. '
' → logprob: -1.2306815385818481
    3. 'self' → logprob: -5.105681419372559
    4. '<|end|>' → logprob: -8.105681419372559
    5. '        
' → logprob: -8.230681419372559
    6. ',' → logprob: -8.855681419372559
    7. ' self' → logprob: -9.230681419372559
    8. 'n' → logprob: -9.480681419372559
    9. '   ' → logprob: -9.980681419372559
    10. '```' → logprob: -10.105681419372559

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003442832676228136
    2. 'self' → logprob: -8.000344276428223
    3. '
' → logprob: -12.250344276428223
    4. ' self' → logprob: -13.125344276428223
    5. '   ' → logprob: -13.250344276428223
    6. 'n' → logprob: -16.50034523010254
    7. '```' → logprob: -16.50034523010254
    8. ',' → logprob: -18.00034523010254
    9. '        
' → logprob: -18.00034523010254
    10. '	self' → logprob: -18.25034523010254

Token 418: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006838271860033274
    2. '       ' → logprob: -5.006838321685791
    3. ' self' → logprob: -9.006837844848633
    4. 'n' → logprob: -15.256837844848633
    5. '	self' → logprob: -16.881837844848633
    6. '   ' → logprob: -17.381837844848633
    7. '
' → logprob: -18.506837844848633
    8. '        
' → logprob: -18.631837844848633
    9. '(self' → logprob: -19.006837844848633
    10. 'f' → logprob: -19.006837844848633

Token 419: '.f' (ID: 1196)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.06372145563364029
    2. 'n' → logprob: -2.8137214183807373
    3. '.f' → logprob: -6.688721656799316
    4. '.' → logprob: -7.813721656799316
    5. 'f' → logprob: -9.438721656799316
    6. ' n' → logprob: -11.188721656799316
    7. '   ' → logprob: -12.813721656799316
    8. '._' → logprob: -13.313721656799316
    9. '.size' → logprob: -13.938721656799316
    10. '_n' → logprob: -13.938721656799316

Token 420: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759920477867126
    2. '=' → logprob: -0.8259920477867126
    3. '=create' → logprob: -10.8259916305542
    4. '   ' → logprob: -11.3259916305542
    5. ',' → logprob: -11.3259916305542
    6. '[' → logprob: -13.3259916305542
    7. '=self' → logprob: -13.7009916305542
    8. '       ' → logprob: -13.8259916305542
    9. '    ' → logprob: -14.0759916305542
    10. 'ull' → logprob: -14.3259916305542

Token 421: ' self' (ID: 1051)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.5765454769134521
    2. 'initialize' → logprob: -0.8265454769134521
    3. 'fill' → logprob: -8.451545715332031
    4. '[' → logprob: -8.826545715332031
    5. ' initialize' → logprob: -8.951545715332031
    6. ' create' → logprob: -9.076545715332031
    7. ' [' → logprob: -14.826545715332031
    8. 'init' → logprob: -15.326545715332031
    9. 'initial' → logprob: -15.326545715332031
    10. '[]' → logprob: -16.07654571533203

Token 422: '._' (ID: 2697)
  Prédit: 'ill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.047609638422727585
    2. '.initialize' → logprob: -3.797609567642212
    3. '.fill' → logprob: -4.047609806060791
    4. '.create' → logprob: -5.547609806060791
    5. 'itialize' → logprob: -7.547609806060791
    6. 'initialize' → logprob: -7.672609806060791
    7. 'actor' → logprob: -8.047609329223633
    8. '.' → logprob: -8.047609329223633
    9. 'fill' → logprob: -8.422609329223633
    10. '_initialize' → logprob: -8.422609329223633

Token 423: 'build' (ID: 9242)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.3193615674972534
    2. 'create' → logprob: -1.9443615674972534
    3. 'fill' → logprob: -2.694361686706543
    4. 'ill' → logprob: -3.194361686706543
    5. 'f' → logprob: -4.069361686706543
    6. 'factor' → logprob: -6.694361686706543
    7. 'actor' → logprob: -6.819361686706543
    8. 'itialize' → logprob: -7.944361686706543
    9. '_initialize' → logprob: -8.194361686706543
    10. ' initialize' → logprob: -8.694361686706543

Token 424: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.15676380693912506
    2. '(n' → logprob: -2.281763792037964
    3. 'factor' → logprob: -3.531763792037964
    4. 'fill' → logprob: -5.031764030456543
    5. '_fill' → logprob: -5.781764030456543
    6. 'actor' → logprob: -6.906764030456543
    7. 'f' → logprob: -7.156764030456543
    8. '(fill' → logprob: -7.531764030456543
    9. 'ill' → logprob: -7.656764030456543
    10. '(' → logprob: -8.281764030456543

Token 425: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0004480692732613534
    2. 'list' → logprob: -8.375448226928711
    3. '_list' → logprob: -8.625448226928711
    4. 'al' → logprob: -10.500448226928711
    5. 'alist' → logprob: -12.250448226928711
    6. 'ials' → logprob: -13.125448226928711
    7. 'ialist' → logprob: -13.125448226928711
    8. 'ialize' → logprob: -13.875448226928711
    9. '```' → logprob: -15.250448226928711
    10. 'List' → logprob: -16.37544822692871

Token 426: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25305503606796265
    2. '_list' → logprob: -1.5030550956726074
    3. 'list' → logprob: -6.878055095672607
    4. 'List' → logprob: -9.87805461883545
    5. 's' → logprob: -10.87805461883545
    6. '_lists' → logprob: -11.00305461883545
    7. '(' → logprob: -13.00305461883545
    8. ' (' → logprob: -13.12805461883545
    9. 'lists' → logprob: -13.87805461883545
    10. ' list' → logprob: -14.37805461883545

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08920443803071976
    2. ')' → logprob: -2.4642045497894287
    3. ' ,' → logprob: -8.839204788208008
    4. ',)' → logprob: -9.964204788208008
    5. ')
' → logprob: -10.089204788208008
    6. ' )' → logprob: -10.964204788208008
    7. ',
' → logprob: -13.089204788208008
    8. '   ' → logprob: -13.214204788208008
    9. ',n' → logprob: -13.339204788208008
    10. '),' → logprob: -13.839204788208008

Token 428: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001149867384810932
    2. ' mod' → logprob: -9.125115394592285
    3. 'n' → logprob: -12.125115394592285
    4. '	mod' → logprob: -15.750115394592285
    5. 'self' → logprob: -16.25011444091797
    6. 'MOD' → logprob: -16.25011444091797
    7. 'moder' → logprob: -17.37511444091797
    8. ' n' → logprob: -17.62511444091797
    9. '   ' → logprob: -17.62511444091797
    10. '```' → logprob: -17.87511444091797

Token 429: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006722944788634777
    2. ')
' → logprob: -5.006722927093506
    3. '   ' → logprob: -12.506723403930664
    4. '       ' → logprob: -13.256723403930664
    5. ' )' → logprob: -14.131723403930664
    6. ')

' → logprob: -14.381723403930664
    7. ')
' → logprob: -14.381723403930664
    8. ' ' → logprob: -16.506723403930664
    9. ' )
' → logprob: -16.756723403930664
    10. '))' → logprob: -17.631723403930664

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06400372087955475
    2. 'self' → logprob: -2.8140037059783936
    3. '   ' → logprob: -6.564003944396973
    4. ' self' → logprob: -7.439003944396973
    5. '<|end|>' → logprob: -11.189003944396973
    6. '        
' → logprob: -12.189003944396973
    7. '```' → logprob: -12.314003944396973
    8. ' ' → logprob: -12.314003944396973
    9. '	self' → logprob: -13.189003944396973
    10. '
' → logprob: -13.439003944396973

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01818646676838398
    2. '       ' → logprob: -4.268186569213867
    3. ' self' → logprob: -5.518186569213867
    4. '	self' → logprob: -14.268186569213867
    5. '   ' → logprob: -14.518186569213867
    6. '
' → logprob: -15.643186569213867
    7. ' ' → logprob: -15.643186569213867
    8. '        
' → logprob: -16.143186569213867
    9. '[self' → logprob: -16.393186569213867
    10. '(self' → logprob: -17.018186569213867

Token 432: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.005483114626258612
    2. '.i' → logprob: -5.630483150482178
    3. '.' → logprob: -7.005483150482178
    4. '.iv' → logprob: -7.755483150482178
    5. 'inv' → logprob: -8.13048267364502
    6. ' =' → logprob: -9.38048267364502
    7. ' .' → logprob: -10.38048267364502
    8. '.in' → logprob: -10.38048267364502
    9. '   ' → logprob: -10.88048267364502
    10. '.v' → logprob: -11.13048267364502

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759396553039551
    2. ' =' → logprob: -0.8259396553039551
    3. '=create' → logprob: -15.700939178466797
    4. ',' → logprob: -16.325939178466797
    5. '＝' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.700939178466797
    7. '<|end|>' → logprob: -17.950939178466797
    8. ')' → logprob: -18.325939178466797
    9. '=
' → logprob: -18.700939178466797
    10. '=

' → logprob: -18.825939178466797

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11330683529376984
    2. ' self' → logprob: -2.238306760787964
    3. 'initialize' → logprob: -7.988306999206543
    4. 'fill' → logprob: -9.363306999206543
    5. ' initialize' → logprob: -10.863306999206543
    6. '   ' → logprob: -11.113306999206543
    7. ' fill' → logprob: -11.613306999206543
    8. '[self' → logprob: -11.738306999206543
    9. 'create' → logprob: -12.363306999206543
    10. '[' → logprob: -13.863306999206543

Token 435: '._' (ID: 2697)
  Prédit: '_fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fill' → logprob: -0.8748422265052795
    2. '._' → logprob: -0.9998422265052795
    3. '_initialize' → logprob: -1.8748421669006348
    4. 'fill' → logprob: -4.124842166900635
    5. '_create' → logprob: -4.374842166900635
    6. '.fill' → logprob: -4.749842166900635
    7. ' =' → logprob: -5.124842166900635
    8. 'initialize' → logprob: -5.124842166900635
    9. '=' → logprob: -5.249842166900635
    10. '.' → logprob: -6.624842166900635

Token 436: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.688212614681106e-05
    2. 'initialize' → logprob: -11.375017166137695
    3. 'fill' → logprob: -12.625017166137695
    4. 'init' → logprob: -14.500017166137695
    5. '(build' → logprob: -14.875017166137695
    6. '_build' → logprob: -14.875017166137695
    7. ' build' → logprob: -15.250017166137695
    8. 'create' → logprob: -15.250017166137695
    9. '.build' → logprob: -15.625017166137695
    10. 'factor' → logprob: -17.750017166137695

Token 437: '_inv' (ID: 53427)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -1.3921313285827637
    2. '_inverse' → logprob: -1.3921313285827637
    3. '_factor' → logprob: -1.5171313285827637
    4. 'factor' → logprob: -1.8921313285827637
    5. 'inv' → logprob: -2.2671313285827637
    6. '_inv' → logprob: -3.6421313285827637
    7. '_list' → logprob: -7.017131328582764
    8. ' factorial' → logprob: -7.392131328582764
    9. 'list' → logprob: -7.517131328582764
    10. 'invert' → logprob: -8.017131805419922

Token 438: '(self' (ID: 2402)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8249268531799316
    2. '_list' → logprob: -0.9499268531799316
    3. '_factor' → logprob: -1.9499268531799316
    4. '(f' → logprob: -3.8249268531799316
    5. 'factor' → logprob: -5.199926853179932
    6. 'list' → logprob: -5.449926853179932
    7. '_lists' → logprob: -8.449926376342773
    8. '(' → logprob: -8.574926376342773
    9. 'f' → logprob: -9.074926376342773
    10. 'fact' → logprob: -9.449926376342773

Token 439: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.614247739315033
    2. 'f' → logprob: -1.2392477989196777
    3. ',' → logprob: -1.8642477989196777
    4. ',n' → logprob: -4.989247798919678
    5. ',f' → logprob: -5.489247798919678
    6. '.n' → logprob: -6.364247798919678
    7. '(n' → logprob: -7.364247798919678
    8. ' ,' → logprob: -8.73924732208252
    9. '   ' → logprob: -8.86424732208252
    10. ' f' → logprob: -8.86424732208252

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013011827832087874
    2. ',n' → logprob: -9.125129699707031
    3. ' ,' → logprob: -10.875129699707031
    4. ')' → logprob: -13.125129699707031
    5. 'n' → logprob: -17.62512969970703
    6. '‌,' → logprob: -17.62512969970703
    7. ',)' → logprob: -18.50012969970703
    8. ',len' → logprob: -18.50012969970703
    9. '<|end|>' → logprob: -18.50012969970703
    10. ',
' → logprob: -18.62512969970703

Token 441: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20175518095493317
    2. 'mod' → logprob: -1.701755166053772
    3. 'len' → logprob: -9.07675552368164
    4. ' n' → logprob: -9.20175552368164
    5. ' mod' → logprob: -9.32675552368164
    6. '   ' → logprob: -11.32675552368164
    7. '	mod' → logprob: -11.70175552368164
    8. '       ' → logprob: -12.07675552368164
    9. '	n' → logprob: -12.57675552368164
    10. '```' → logprob: -13.07675552368164

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ')' → logprob: -9.000208854675293
    3. ' ,' → logprob: -9.375208854675293
    4. '   ' → logprob: -14.375208854675293
    5. ',
' → logprob: -15.750208854675293
    6. '       ' → logprob: -16.12520980834961
    7. '‌,' → logprob: -16.87520980834961
    8. ',)' → logprob: -17.12520980834961
    9. '),' → logprob: -17.37520980834961
    10. ')
' → logprob: -17.37520980834961

Token 443: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007100477814674377
    2. ' mod' → logprob: -7.2507100105285645
    3. '	mod' → logprob: -16.250709533691406
    4. 'self' → logprob: -17.750709533691406
    5. 'MOD' → logprob: -18.375709533691406
    6. '   ' → logprob: -18.375709533691406
    7. '       ' → logprob: -18.500709533691406
    8. ' ' → logprob: -19.375709533691406
    9. 'moder' → logprob: -19.375709533691406
    10. ' мод' → logprob: -20.000709533691406

Token 444: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.250001907348633
    4. ' )' → logprob: -15.250001907348633
    5. '       ' → logprob: -15.375001907348633
    6. ')

' → logprob: -16.500001907348633
    7. '))' → logprob: -18.750001907348633
    8. ')`' → logprob: -18.875001907348633
    9. '<|end|>' → logprob: -19.125001907348633
    10. '),' → logprob: -19.250001907348633

Token 445: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3596686124801636
    2. '   ' → logprob: -1.3596686124801636
    3. 'def' → logprob: -3.234668731689453
    4. '    
' → logprob: -5.484668731689453
    5. '```' → logprob: -7.109668731689453
    6. ' def' → logprob: -7.484668731689453
    7. '<|end|>' → logprob: -8.734668731689453
    8. '        
' → logprob: -8.984668731689453
    9. '

' → logprob: -9.234668731689453
    10. '
' → logprob: -10.609668731689453

Token 446: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.45947763323783875
    2. '
' → logprob: -1.2094776630401611
    3. ' def' → logprob: -3.209477663040161
    4. '   ' → logprob: -3.959477663040161
    5. '    
' → logprob: -4.959477424621582
    6. '<|end|>' → logprob: -6.084477424621582
    7. '	def' → logprob: -7.834477424621582
    8. '  
' → logprob: -8.334477424621582
    9. '        
' → logprob: -8.584477424621582
    10. '```' → logprob: -9.084477424621582

Token 447: ' _' (ID: 1175)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.5261714458465576
    2. '_factor' → logprob: -1.7761714458465576
    3. '_f' → logprob: -2.7761714458465576
    4. 'factor' → logprob: -3.1511714458465576
    5. '_' → logprob: -3.2761714458465576
    6. ' build' → logprob: -3.5261714458465576
    7. ' _' → logprob: -4.026171684265137
    8. '_build' → logprob: -4.651171684265137
    9. '_fact' → logprob: -5.151171684265137
    10. 'build' → logprob: -5.526171684265137

Token 448: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -2.696889623621246e-06
    2. '_build' → logprob: -13.50000286102295
    3. 'def' → logprob: -14.62500286102295
    4. 'fill' → logprob: -15.00000286102295
    5. ' build' → logprob: -15.25000286102295
    6. 'initialize' → logprob: -15.75000286102295
    7. 'b' → logprob: -16.750001907348633
    8. '.build' → logprob: -17.500001907348633
    9. '	build' → logprob: -17.500001907348633
    10. '(build' → logprob: -17.625001907348633

Token 449: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0019301822176203132
    2. 'factor' → logprob: -6.251930236816406
    3. '_' → logprob: -14.501930236816406
    4. '_fact' → logprob: -15.251930236816406
    5. ' factorial' → logprob: -16.001930236816406
    6. 'self' → logprob: -16.251930236816406
    7. 'def' → logprob: -16.501930236816406
    8. 'Factor' → logprob: -16.626930236816406
    9. '#' → logprob: -16.626930236816406
    10. '_list' → logprob: -16.751930236816406

Token 450: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.019602833315730095
    2. '_list' → logprob: -5.1446027755737305
    3. 'al' → logprob: -5.5196027755737305
    4. 'orial' → logprob: -5.7696027755737305
    5. '_factor' → logprob: -6.3946027755737305
    6. 'actor' → logprob: -6.8946027755737305
    7. 'list' → logprob: -6.8946027755737305
    8. 'alist' → logprob: -7.2696027755737305
    9. 'ional' → logprob: -7.5196027755737305
    10. 'rial' → logprob: -8.01960277557373

Token 451: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. 'self' → logprob: -13.125003814697266
    3. '(' → logprob: -13.500003814697266
    4. ' (' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.000003814697266
    6. 'def' → logprob: -17.250003814697266
    7. '(f' → logprob: -18.250003814697266
    8. '(
' → logprob: -19.750003814697266
    9. '(n' → logprob: -19.875003814697266
    10. '(this' → logprob: -20.000003814697266

Token 452: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07042151689529419
    2. ',' → logprob: -2.6954214572906494
    3. 'self' → logprob: -8.07042121887207
    4. ',self' → logprob: -9.44542121887207
    5. 'def' → logprob: -10.57042121887207
    6. '(f' → logprob: -10.69542121887207
    7. ',f' → logprob: -11.32042121887207
    8. 'f' → logprob: -11.69542121887207
    9. '   ' → logprob: -12.19542121887207
    10. ' ,' → logprob: -12.57042121887207

Token 453: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25206148624420166
    2. 'self' → logprob: -1.5020614862442017
    3. '   ' → logprob: -9.37706184387207
    4. ' n' → logprob: -10.87706184387207
    5. ' self' → logprob: -11.00206184387207
    6. '       ' → logprob: -12.12706184387207
    7. '
' → logprob: -12.87706184387207
    8. ')' → logprob: -13.75206184387207
    9. '(self' → logprob: -14.50206184387207
    10. 'def' → logprob: -14.62706184387207

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -14.375000953674316
    3. 'self' → logprob: -15.375000953674316
    4. ',self' → logprob: -15.375000953674316
    5. '   ' → logprob: -17.500001907348633
    6. ',
' → logprob: -17.625001907348633
    7. '       ' → logprob: -19.000001907348633
    8. ',n' → logprob: -20.750001907348633
    9. '‌,' → logprob: -20.750001907348633
    10. '(self' → logprob: -21.250001907348633

Token 455: ' mod' (ID: 1812)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7857851982116699
    2. 'mod' → logprob: -1.28578519821167
    3. 'self' → logprob: -1.91078519821167
    4. ' mod' → logprob: -2.16078519821167
    5. 'MOD' → logprob: -5.78578519821167
    6. ' MOD' → logprob: -6.66078519821167
    7. ' ' → logprob: -9.410785675048828
    8. '   ' → logprob: -10.660785675048828
    9. ')' → logprob: -10.785785675048828
    10. '```' → logprob: -11.035785675048828

Token 456: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029823629185557365
    2. '):
' → logprob: -3.5298235416412354
    3. '   ' → logprob: -10.904823303222656
    4. ':' → logprob: -11.029823303222656
    5. '):
' → logprob: -11.029823303222656
    6. 'self' → logprob: -11.279823303222656
    7. ')' → logprob: -11.904823303222656
    8. '       ' → logprob: -13.029823303222656
    9. '):

' → logprob: -15.404823303222656
    10. ',' → logprob: -15.779823303222656

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022850794717669487
    2. 'f' → logprob: -4.27285099029541
    3. ' f' → logprob: -5.14785099029541
    4. '   ' → logprob: -5.89785099029541
    5. '	f' → logprob: -10.64785099029541
    6. '    ' → logprob: -10.77285099029541
    7. '     ' → logprob: -11.52285099029541
    8. ')' → logprob: -11.64785099029541
    9. '      ' → logprob: -12.52285099029541
    10. '[f' → logprob: -12.64785099029541

Token 458: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -2.641841820150148e-05
    2. '       ' → logprob: -10.62502670288086
    3. ' f' → logprob: -13.62502670288086
    4. '   ' → logprob: -14.25002670288086
    5. '	f' → logprob: -16.62502670288086
    6. '_f' → logprob: -18.00002670288086
    7. '```' → logprob: -18.12502670288086
    8. '[f' → logprob: -18.87502670288086
    9. 'lst' → logprob: -19.00002670288086
    10. '        
' → logprob: -19.87502670288086

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029755808413028717
    2. ' =' → logprob: -3.5297558307647705
    3. '=create' → logprob: -12.154755592346191
    4. '＝' → logprob: -18.279756546020508
    5. 'f' → logprob: -18.779756546020508
    6. '=f' → logprob: -19.154756546020508
    7. '=
' → logprob: -19.779756546020508
    8. ' ' → logprob: -19.904756546020508
    9. '=

' → logprob: -19.904756546020508
    10. '[' → logprob: -20.404756546020508

Token 460: ' initialize' (ID: 18400)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.00956400390714407
    2. 'initialize' → logprob: -4.88456392288208
    3. ' create' → logprob: -6.25956392288208
    4. '[' → logprob: -10.384564399719238
    5. ' initialize' → logprob: -11.509564399719238
    6. ' [' → logprob: -13.384564399719238
    7. '   ' → logprob: -14.384564399719238
    8. '=create' → logprob: -15.634564399719238
    9. '	create' → logprob: -15.759564399719238
    10. '(create' → logprob: -15.884564399719238

Token 461: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0015284325927495956
    2. 'factor' → logprob: -6.501528263092041
    3. '_list' → logprob: -10.7515287399292
    4. '_fact' → logprob: -13.0015287399292
    5. 'f' → logprob: -14.1265287399292
    6. 'list' → logprob: -14.8765287399292
    7. ' factorial' → logprob: -15.1265287399292
    8. 'Factor' → logprob: -15.1265287399292
    9. '_f' → logprob: -15.8765287399292
    10. '.factor' → logprob: -16.126527786254883

Token 462: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.03976244851946831
    2. 'al' → logprob: -3.289762496948242
    3. '_list' → logprob: -6.539762496948242
    4. 'alist' → logprob: -8.664762496948242
    5. 'list' → logprob: -9.414762496948242
    6. 'nal' → logprob: -11.539762496948242
    7. 'def' → logprob: -13.039762496948242
    8. 'f' → logprob: -13.914762496948242
    9. 'ialist' → logprob: -14.164762496948242
    10. 'n' → logprob: -14.289762496948242

Token 463: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. 'list' → logprob: -12.87500286102295
    3. 'List' → logprob: -15.37500286102295
    4. '_lists' → logprob: -16.000003814697266
    5. '_List' → logprob: -19.125003814697266
    6. '_LIST' → logprob: -19.250003814697266
    7. ' list' → logprob: -20.250003814697266
    8. 's' → logprob: -21.000003814697266
    9. '_lst' → logprob: -21.125003814697266
    10. '-list' → logprob: -21.125003814697266

Token 464: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.62500286102295
    3. ' (' → logprob: -13.87500286102295
    4. '(size' → logprob: -15.12500286102295
    5. 'n' → logprob: -16.250001907348633
    6. '(
' → logprob: -16.625001907348633
    7. '       ' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.500001907348633
    9. ' n' → logprob: -17.750001907348633
    10. 'def' → logprob: -17.875001907348633

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ' ,' → logprob: -9.875051498413086
    3. ',
' → logprob: -16.250051498413086
    4. '   ' → logprob: -16.750051498413086
    5. ',module' → logprob: -17.375051498413086
    6. '=' → logprob: -17.500051498413086
    7. ')' → logprob: -17.500051498413086
    8. '+' → logprob: -18.000051498413086
    9. '[' → logprob: -18.875051498413086
    10. '(mod' → logprob: -19.000051498413086

Token 466: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9623810658231378e-05
    2. ' mod' → logprob: -11.000020027160645
    3. 'MOD' → logprob: -13.000020027160645
    4. '0' → logprob: -14.625020027160645
    5. '	mod' → logprob: -16.500019073486328
    6. ' ' → logprob: -17.000019073486328
    7. '   ' → logprob: -18.125019073486328
    8. '1' → logprob: -18.125019073486328
    9. '(mod' → logprob: -18.500019073486328
    10. '  ' → logprob: -18.875019073486328

Token 467: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1807340383529663
    2. ')' → logprob: -1.8057340383529663
    3. '   ' → logprob: -7.680734157562256
    4. '       ' → logprob: -8.305733680725098
    5. '
' → logprob: -8.305733680725098
    6. ')
' → logprob: -11.430733680725098
    7. '<|end|>' → logprob: -12.680733680725098
    8. ',' → logprob: -13.180733680725098
    9. 'def' → logprob: -13.430733680725098
    10. '):
' → logprob: -13.555733680725098

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13249577581882477
    2. '   ' → logprob: -2.507495880126953
    3. ' f' → logprob: -3.382495880126953
    4. 'f' → logprob: -5.007495880126953
    5. '<|end|>' → logprob: -6.632495880126953
    6. '	f' → logprob: -8.882495880126953
    7. '<|end|>' → logprob: -9.132495880126953
    8. ' ' → logprob: -9.632495880126953
    9. '
' → logprob: -9.757495880126953
    10. '        
' → logprob: -9.882495880126953

Token 469: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2673673927783966
    2. 'return' (adapté à ' return') → logprob: -2.017367362976074
    3. 'fill' → logprob: -2.392367362976074
    4. ' f' → logprob: -5.767367362976074
    5. '       ' → logprob: -5.767367362976074
    6. ' return' → logprob: -6.017367362976074
    7. ' fill' → logprob: -6.642367362976074
    8. '   ' → logprob: -8.892367362976074
    9. '.fill' → logprob: -11.142367362976074
    10. 'filled' → logprob: -11.892367362976074

Token 470: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.023245826363563538
    2. ' fill' → logprob: -3.7732458114624023
    3. '(fill' → logprob: -15.773245811462402
    4. '	fill' → logprob: -16.14824676513672
    5. '   ' → logprob: -16.27324676513672
    6. ' ' → logprob: -16.89824676513672
    7. '.fill' → logprob: -17.64824676513672
    8. ' ' → logprob: -17.89824676513672
    9. 'f' → logprob: -18.27324676513672
    10. '  ' → logprob: -19.39824676513672

Token 471: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -2.2246291337069124e-05
    2. 'factor' → logprob: -10.750021934509277
    3. '_' → logprob: -14.125021934509277
    4. 'f' → logprob: -18.625022888183594
    5. ' factorial' → logprob: -19.625022888183594
    6. '```' → logprob: -19.625022888183594
    7. '_f' → logprob: -19.750022888183594
    8. '(f' → logprob: -19.875022888183594
    9. 'Factor' → logprob: -20.125022888183594
    10. '\' → logprob: -20.750022888183594

Token 472: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.002289664000272751
    2. 'ial' → logprob: -6.502289772033691
    3. '_list' → logprob: -7.252289772033691
    4. 'list' → logprob: -10.252289772033691
    5. 'alist' → logprob: -10.377289772033691
    6. 'l' → logprob: -11.627289772033691
    7. 'ist' → logprob: -13.627289772033691
    8. 'il' → logprob: -15.127289772033691
    9. 'tal' → logprob: -15.127289772033691
    10. 't' → logprob: -15.377289772033691

Token 473: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.2200749754119897e-06
    2. 'list' → logprob: -13.125001907348633
    3. 'List' → logprob: -16.375001907348633
    4. '(f' → logprob: -19.000001907348633
    5. '_lists' → logprob: -19.875001907348633
    6. ' list' → logprob: -20.125001907348633
    7. 'f' → logprob: -20.250001907348633
    8. '_LIST' → logprob: -20.375001907348633
    9. '```' → logprob: -20.375001907348633
    10. '_List' → logprob: -20.875001907348633

Token 474: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -14.125000953674316
    3. '(' → logprob: -15.500000953674316
    4. '(
' → logprob: -18.750001907348633
    5. '(fi' → logprob: -20.375001907348633
    6. 'f' → logprob: -21.125001907348633
    7. '(fe' → logprob: -22.125001907348633
    8. '(s' → logprob: -22.250001907348633
    9. '```' → logprob: -22.375001907348633
    10. '
' → logprob: -22.375001907348633

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004856074519921094
    2. ' ,' → logprob: -8.37548542022705
    3. ',n' → logprob: -8.62548542022705
    4. ',f' → logprob: -9.50048542022705
    5. 'f' → logprob: -15.00048542022705
    6. '(n' → logprob: -15.87548542022705
    7. ')' → logprob: -16.125486373901367
    8. '(f' → logprob: -16.375486373901367
    9. ',
' → logprob: -17.125486373901367
    10. ' f' → logprob: -17.875486373901367

Token 476: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022422909736633
    2. ' n' → logprob: -1.910224199295044
    3. '	n' → logprob: -17.41022491455078
    4. ')n' → logprob: -18.78522491455078
    5. '   ' → logprob: -19.28522491455078
    6. '
' → logprob: -20.78522491455078
    7. ',n' → logprob: -21.66022491455078
    8. ' н' → logprob: -21.78522491455078
    9. '    ' → logprob: -22.16022491455078
    10. ' ' → logprob: -22.28522491455078

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -11.875006675720215
    3. ',
' → logprob: -16.75000762939453
    4. '   ' → logprob: -17.25000762939453
    5. ')' → logprob: -18.75000762939453
    6. ',module' → logprob: -19.37500762939453
    7. '       ' → logprob: -20.25000762939453
    8. 'mod' → logprob: -20.25000762939453
    9. '```' → logprob: -21.25000762939453
    10. '
' → logprob: -21.37500762939453

Token 478: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4740792512893677
    2. 'mod' → logprob: -0.9740792512893677
    3. 'MOD' → logprob: -13.724079132080078
    4. ' MOD' → logprob: -14.349079132080078
    5. '	mod' → logprob: -14.849079132080078
    6. ' ' → logprob: -16.974079132080078
    7. '(mod' → logprob: -17.099079132080078
    8. '
' → logprob: -18.974079132080078
    9. ' modul' → logprob: -19.099079132080078
    10. ' мод' → logprob: -19.224079132080078

Token 479: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011760921915993094
    2. '<|end|>' → logprob: -9.125117301940918
    3. '   ' → logprob: -12.125117301940918
    4. '<|end|>' → logprob: -13.750117301940918
    5. ')
' → logprob: -13.875117301940918
    6. ')return' → logprob: -14.500117301940918
    7. ' )' → logprob: -15.375117301940918
    8. '}' → logprob: -16.125118255615234
    9. '```' → logprob: -16.250118255615234
    10. '),' → logprob: -16.625118255615234

Token 480: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19862906634807587
    2. 'def' (adapté à ' def') → logprob: -2.448629140853882
    3. ' def' → logprob: -2.448629140853882
    4. '```' → logprob: -5.698628902435303
    5. '
' → logprob: -6.198628902435303
    6. '    
' → logprob: -6.823628902435303
    7. ' ' → logprob: -7.698628902435303
    8. '	def' → logprob: -8.198629379272461
    9. '<|end|>' → logprob: -9.948629379272461
    10. ' 
' → logprob: -11.448629379272461

Token 482: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.002529529621824622
    2. ' _' → logprob: -6.002529621124268
    3. '_fill' → logprob: -10.12752914428711
    4. 'def' → logprob: -11.50252914428711
    5. '_' → logprob: -14.12752914428711
    6. 'build' → logprob: -14.50252914428711
    7. '_def' → logprob: -14.50252914428711
    8. ' def' → logprob: -14.50252914428711
    9. '   ' → logprob: -14.62752914428711
    10. ' ' → logprob: -15.00252914428711

Token 483: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.0280383548888494e-06
    2. 'fill' → logprob: -14.250000953674316
    3. '_build' → logprob: -15.875000953674316
    4. ' build' → logprob: -16.125001907348633
    5. 'def' → logprob: -17.000001907348633
    6. '
' → logprob: -17.625001907348633
    7. 'b' → logprob: -18.250001907348633
    8. '	build' → logprob: -18.500001907348633
    9. '(build' → logprob: -18.625001907348633
    10. '.build' → logprob: -19.250001907348633

Token 484: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.07889892905950546
    2. 'inv' → logprob: -2.5788989067077637
    3. '_inverse' → logprob: -12.578899383544922
    4. 'inverse' → logprob: -13.078899383544922
    5. 'factor' → logprob: -13.578899383544922
    6. '_factor' → logprob: -14.328899383544922
    7. ' inv' → logprob: -14.828899383544922
    8. '(inv' → logprob: -15.078899383544922
    9. '```' → logprob: -15.578899383544922
    10. '
' → logprob: -15.828899383544922

Token 485: '(self' (ID: 2402)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.367612361907959
    2. '(self' → logprob: -1.242612361907959
    3. 'self' → logprob: -3.992612361907959
    4. 'list' → logprob: -7.742612361907959
    5. 'List' → logprob: -10.367612838745117
    6. 'def' → logprob: -10.867612838745117
    7. '_inv' → logprob: -11.617612838745117
    8. '_lists' → logprob: -11.617612838745117
    9. '   ' → logprob: -12.117612838745117
    10. '[self' → logprob: -12.492612838745117

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06398549675941467
    2. '_list' → logprob: -2.938985586166382
    3. 'self' → logprob: -4.813985347747803
    4. 'list' → logprob: -8.313985824584961
    5. ',f' → logprob: -8.563985824584961
    6. ',self' → logprob: -8.938985824584961
    7. 'f' → logprob: -9.063985824584961
    8. '   ' → logprob: -9.438985824584961
    9. '_lists' → logprob: -10.063985824584961
    10. '(self' → logprob: -10.188985824584961

Token 487: ' f' (ID: 285)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.027983827516436577
    2. ' self' → logprob: -4.027983665466309
    3. 'f' → logprob: -4.652983665466309
    4. ' f' → logprob: -9.402983665466309
    5. '(self' → logprob: -10.027983665466309
    6. 'n' → logprob: -10.402983665466309
    7. ',' → logprob: -10.527983665466309
    8. ')' → logprob: -10.527983665466309
    9. '       ' → logprob: -11.777983665466309
    10. '   ' → logprob: -11.777983665466309

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007125511183403432
    2. ',n' → logprob: -7.3757123947143555
    3. 'self' → logprob: -9.750712394714355
    4. ' ,' → logprob: -10.750712394714355
    5. 'n' → logprob: -12.875712394714355
    6. ',self' → logprob: -13.250712394714355
    7. '       ' → logprob: -14.125712394714355
    8. '   ' → logprob: -15.125712394714355
    9. ',
' → logprob: -16.000713348388672
    10. '```' → logprob: -16.125713348388672

Token 489: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.019659526646137238
    2. ' len' → logprob: -4.144659519195557
    3. 'n' → logprob: -5.644659519195557
    4. ' n' → logprob: -9.894659996032715
    5. ' ' → logprob: -11.644659996032715
    6. '(len' → logprob: -12.019659996032715
    7. '
' → logprob: -12.144659996032715
    8. '   ' → logprob: -12.394659996032715
    9. '[len' → logprob: -13.269659996032715
    10. '	len' → logprob: -13.269659996032715

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.318681188422488e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',
' → logprob: -16.25001335144043
    4. 'mod' → logprob: -18.00001335144043
    5. '<|end|>' → logprob: -18.50001335144043
    6. '   ' → logprob: -18.87501335144043
    7. ')' → logprob: -19.00001335144043
    8. ' mod' → logprob: -19.50001335144043
    9. '‌,' → logprob: -19.50001335144043
    10. '=' → logprob: -19.62501335144043

Token 491: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003384422743692994
    2. ' mod' → logprob: -8.000338554382324
    3. 'MOD' → logprob: -12.750338554382324
    4. '	mod' → logprob: -16.750337600708008
    5. 'moder' → logprob: -18.125337600708008
    6. ' MOD' → logprob: -18.250337600708008
    7. '   ' → logprob: -18.875337600708008
    8. '_mod' → logprob: -19.375337600708008
    9. ' мод' → logprob: -19.750337600708008
    10. '
' → logprob: -19.875337600708008

Token 492: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1009017825126648
    2. '):' → logprob: -2.3509018421173096
    3. '   ' → logprob: -8.22590160369873
    4. ':' → logprob: -8.47590160369873
    5. '       ' → logprob: -9.22590160369873
    6. ':
' → logprob: -9.60090160369873
    7. '):
' → logprob: -10.35090160369873
    8. ')' → logprob: -10.97590160369873
    9. '):

' → logprob: -13.60090160369873
    10. ',' → logprob: -14.10090160369873

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1150362566113472
    2. 'inv' → logprob: -2.3650362491607666
    3. ' inv' → logprob: -4.240036487579346
    4. '   ' → logprob: -8.365036010742188
    5. 'return' → logprob: -9.740036010742188
    6. ' return' → logprob: -11.865036010742188
    7. '(inv' → logprob: -12.740036010742188
    8. '      ' → logprob: -12.865036010742188
    9. '```' → logprob: -13.115036010742188
    10. '     ' → logprob: -13.115036010742188

Token 494: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0007519744685851038
    2. '       ' → logprob: -8.125752449035645
    3. ' inv' → logprob: -8.500752449035645
    4. 'return' → logprob: -8.500752449035645
    5. '   ' → logprob: -10.000752449035645
    6. '           ' → logprob: -14.125752449035645
    7. '```' → logprob: -14.125752449035645
    8. 'inverse' → logprob: -14.875752449035645
    9. '(inv' → logprob: -15.000752449035645
    10. 'n' → logprob: -15.250752449035645

Token 495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740793704986572
    2. ' =' → logprob: -0.9740793704986572
    3. '=create' → logprob: -12.974079132080078
    4. '＝' → logprob: -17.474079132080078
    5. '=
' → logprob: -17.599079132080078
    6. ' ' → logprob: -18.099079132080078
    7. '=

' → logprob: -18.474079132080078
    8. '_=' → logprob: -19.224079132080078
    9. '=}' → logprob: -19.224079132080078
    10. '<|end|>' → logprob: -19.349079132080078

Token 496: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.003178306156769395
    2. ' initialize' → logprob: -5.753178119659424
    3. 'create' → logprob: -14.753178596496582
    4. '	initialize' → logprob: -15.753178596496582
    5. '.initialize' → logprob: -18.628177642822266
    6. '_initialize' → logprob: -18.753177642822266
    7. ' create' → logprob: -19.378177642822266
    8. 'initial' → logprob: -19.503177642822266
    9. '   ' → logprob: -20.378177642822266
    10. 'initialized' → logprob: -20.503177642822266

Token 497: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -9.889424836728722e-05
    2. 'inv' → logprob: -9.750099182128906
    3. '_list' → logprob: -10.125099182128906
    4. 'list' → logprob: -15.000099182128906
    5. '_in' → logprob: -16.875099182128906
    6. '```' → logprob: -17.125099182128906
    7. '(inv' → logprob: -17.375099182128906
    8. '_inverse' → logprob: -17.500099182128906
    9. '_INV' → logprob: -18.500099182128906
    10. 'n' → logprob: -18.875099182128906

Token 498: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.248469718324486e-05
    2. 'list' → logprob: -11.000022888183594
    3. 'List' → logprob: -12.125022888183594
    4. '(n' → logprob: -16.125022888183594
    5. '_LIST' → logprob: -16.250022888183594
    6. '_lists' → logprob: -18.000022888183594
    7. 'n' → logprob: -18.000022888183594
    8. '_List' → logprob: -18.125022888183594
    9. '```' → logprob: -18.500022888183594
    10. ' list' → logprob: -19.500022888183594

Token 499: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016504127415828407
    2. 'n' → logprob: -8.750164985656738
    3. ' n' → logprob: -12.625164985656738
    4. '(' → logprob: -13.750164985656738
    5. ' (' → logprob: -13.875164985656738
    6. '(len' → logprob: -15.375164985656738
    7. ',' → logprob: -15.500164985656738
    8. ',n' → logprob: -16.000165939331055
    9. '<|end|>' → logprob: -16.000165939331055
    10. '(
' → logprob: -16.125165939331055

Token 500: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005462493747472763
    2. ')' → logprob: -5.505462646484375
    3. ',n' → logprob: -6.630462646484375
    4. ',
' → logprob: -10.880462646484375
    5. ' ,' → logprob: -11.505462646484375
    6. '<|end|>' → logprob: -11.755462646484375
    7. ')n' → logprob: -11.755462646484375
    8. '   ' → logprob: -12.380462646484375
    9. '       ' → logprob: -12.630462646484375
    10. ',)' → logprob: -12.630462646484375

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004767122678458691
    2. ' return' → logprob: -6.004766941070557
    3. 'return' → logprob: -7.004766941070557
    4. '<|end|>' → logprob: -7.004766941070557
    5. '   ' → logprob: -8.004767417907715
    6. '<|end|>' → logprob: -9.379767417907715
    7. '```' → logprob: -11.879767417907715
    8. '{return' → logprob: -12.004767417907715
    9. '	return' → logprob: -12.129767417907715
    10. ')' → logprob: -12.254767417907715

Token 502: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006110482499934733
    2. ' return' → logprob: -8.125611305236816
    3. 'fill' → logprob: -8.500611305236816
    4. '       ' → logprob: -9.125611305236816
    5. '   ' → logprob: -12.875611305236816
    6. 'inv' → logprob: -16.1256103515625
    7. '```' → logprob: -17.1256103515625
    8. ' fill' → logprob: -17.2506103515625
    9. '	return' → logprob: -17.3756103515625
    10. '        
' → logprob: -17.7506103515625

Token 503: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.014164102263748646
    2. ' fill' → logprob: -4.264163970947266
    3. '(fill' → logprob: -15.014163970947266
    4. '	fill' → logprob: -16.014163970947266
    5. ' ' → logprob: -17.014163970947266
    6. '   ' → logprob: -17.014163970947266
    7. ' ' → logprob: -17.139163970947266
    8. '.fill' → logprob: -17.639163970947266
    9. 'filled' → logprob: -18.014163970947266
    10. '  ' → logprob: -18.639163970947266

Token 504: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.522638169466518e-05
    2. 'inv' → logprob: -10.625024795532227
    3. '(inv' → logprob: -14.000024795532227
    4. '```' → logprob: -18.000024795532227
    5. '_inf' → logprob: -19.250024795532227
    6. ' inv' → logprob: -19.375024795532227
    7. '_list' → logprob: -19.375024795532227
    8. '.inv' → logprob: -19.625024795532227
    9. '_INV' → logprob: -19.750024795532227
    10. 'Inv' → logprob: -19.875024795532227

Token 505: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.011373155459296e-05
    2. '_inv' → logprob: -11.000030517578125
    3. 'list' → logprob: -11.625030517578125
    4. 'List' → logprob: -13.125030517578125
    5. 'inv' → logprob: -13.125030517578125
    6. 'ist' → logprob: -15.000030517578125
    7. '(inv' → logprob: -17.000030517578125
    8. '_lst' → logprob: -17.250030517578125
    9. '_lists' → logprob: -17.250030517578125
    10. '_LIST' → logprob: -18.875030517578125

Token 506: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.875
    3. '```' → logprob: -17.25
    4. 'inv' → logprob: -17.625
    5. '(
' → logprob: -19.375
    6. '(invoice' → logprob: -19.875
    7. '(in' → logprob: -20.5
    8. '(' → logprob: -20.875
    9. '(iv' → logprob: -21.125
    10. '(i' → logprob: -21.5

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019502983195707202
    2. '(f' → logprob: -6.501950263977051
    3. ' ,' → logprob: -8.25195026397705
    4. ',f' → logprob: -8.62695026397705
    5. '(' → logprob: -12.12695026397705
    6. ' (' → logprob: -13.87695026397705
    7. ',
' → logprob: -13.87695026397705
    8. '
' → logprob: -15.50195026397705
    9. ')' → logprob: -15.87695026397705
    10. 'f' → logprob: -16.251951217651367

Token 508: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07889077812433243
    2. ' f' → logprob: -2.578890800476074
    3. '	f' → logprob: -14.828890800476074
    4. ',' → logprob: -15.203890800476074
    5. ',f' → logprob: -15.328890800476074
    6. '(f' → logprob: -16.328889846801758
    7. ' ' → logprob: -16.828889846801758
    8. ')' → logprob: -16.953889846801758
    9. '_f' → logprob: -17.203889846801758
    10. '   ' → logprob: -17.828889846801758

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007519744685851038
    2. ',n' → logprob: -7.250751972198486
    3. ' ,' → logprob: -10.125752449035645
    4. 'n' → logprob: -13.250752449035645
    5. '[n' → logprob: -16.750751495361328
    6. ',
' → logprob: -16.875751495361328
    7. ' n' → logprob: -17.000751495361328
    8. '   ' → logprob: -17.000751495361328
    9. '
' → logprob: -18.500751495361328
    10. 'f' → logprob: -18.625751495361328

Token 510: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009117019944824278
    2. ' n' → logprob: -7.000911712646484
    3. ',n' → logprob: -16.375911712646484
    4. '   ' → logprob: -17.000911712646484
    5. '	n' → logprob: -17.000911712646484
    6. ',' → logprob: -17.000911712646484
    7. '    ' → logprob: -19.125911712646484
    8. '
' → logprob: -19.750911712646484
    9. 'mod' → logprob: -20.000911712646484
    10. ' ' → logprob: -20.250911712646484

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -11.50001049041748
    3. '-' → logprob: -16.250011444091797
    4. '+' → logprob: -16.375011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '```' → logprob: -16.500011444091797
    7. ',
' → logprob: -16.625011444091797
    8. ',module' → logprob: -17.375011444091797
    9. ' -' → logprob: -17.625011444091797
    10. ')' → logprob: -17.750011444091797

Token 512: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25192990899086
    2. ' mod' → logprob: -1.5019298791885376
    3. '	mod' → logprob: -14.376930236816406
    4. 'MOD' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.876930236816406
    6. '(mod' → logprob: -17.376930236816406
    7. ' мод' → logprob: -18.001930236816406
    8. ' MOD' → logprob: -18.251930236816406
    9. '```' → logprob: -18.376930236816406
    10. '_mod' → logprob: -19.126930236816406

Token 513: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013119110371917486
    2. ',' → logprob: -9.000131607055664
    3. ')
' → logprob: -12.250131607055664
    4. '   ' → logprob: -13.250131607055664
    5. ' )' → logprob: -14.250131607055664
    6. ')

' → logprob: -15.875131607055664
    7. '<|end|>' → logprob: -16.500131607055664
    8. '),' → logprob: -16.750131607055664
    9. '))' → logprob: -17.000131607055664
    10. '       ' → logprob: -17.250131607055664

Token 514: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.05667365342378616
    2. 'factor' → logprob: -3.431673765182495
    3. 'fact' → logprob: -4.306673526763916
    4. ' fact' → logprob: -4.806673526763916
    5. 'comb' → logprob: -7.681673526763916
    6. 'fac' → logprob: -8.681674003601074
    7. ' combination' → logprob: -8.806674003601074
    8. ' fac' → logprob: -9.681674003601074
    9. 'f' → logprob: -9.681674003601074
    10. ' comb' → logprob: -9.806674003601074

Token 517: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003701616544276476
    2. '(' → logprob: -5.628701686859131
    3. ' (' → logprob: -10.003701210021973
    4. '(s' → logprob: -10.628701210021973
    5. '   ' → logprob: -11.878701210021973
    6. ' ' → logprob: -12.628701210021973
    7. '(f' → logprob: -12.753701210021973
    8. '(
' → logprob: -13.128701210021973
    9. 'self' → logprob: -13.128701210021973
    10. '_list' → logprob: -13.253701210021973

Token 518: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018794061616063118
    2. ',' → logprob: -4.643794059753418
    3. ')(' → logprob: -5.643794059753418
    4. '(' → logprob: -6.143794059753418
    5. ' (' → logprob: -6.893794059753418
    6. ')' → logprob: -6.893794059753418
    7. '(i' → logprob: -8.268794059753418
    8. '(f' → logprob: -8.393794059753418
    9. 'self' → logprob: -8.893794059753418
    10. ' ' → logprob: -9.143794059753418

Token 519: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004289234522730112
    2. ' i' → logprob: -5.504289150238037
    3. 'n' → logprob: -8.504289627075195
    4. 'self' → logprob: -12.129289627075195
    5. ' n' → logprob: -13.504289627075195
    6. 'f' → logprob: -14.504289627075195
    7. 'x' → logprob: -14.754289627075195
    8. 'k' → logprob: -15.004289627075195
    9. '   ' → logprob: -15.879289627075195
    10. ' ' → logprob: -16.879289627075195

Token 520: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007300666766241193
    2. '):
' → logprob: -7.250730037689209
    3. ')' → logprob: -10.875730514526367
    4. '):
' → logprob: -14.500730514526367
    5. '   ' → logprob: -15.500730514526367
    6. 'self' → logprob: -15.625730514526367
    7. ' ):' → logprob: -15.750730514526367
    8. ':' → logprob: -17.000730514526367
    9. '):

' → logprob: -17.125730514526367
    10. '}:' → logprob: -17.250730514526367

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002483149990439415
    2. ' return' → logprob: -6.377483367919922
    3. '   ' → logprob: -7.377483367919922
    4. 'return' → logprob: -10.002483367919922
    5. '	return' → logprob: -10.127483367919922
    6. '	' → logprob: -10.252483367919922
    7. '<|end|>' → logprob: -11.252483367919922
    8. '{return' → logprob: -12.127483367919922
    9. '	   ' → logprob: -12.502483367919922
    10. '```' → logprob: -13.127483367919922

Token 522: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.604245126247406
    2. ' return' → logprob: -1.1042451858520508
    3. '       ' → logprob: -2.104245185852051
    4. '	return' → logprob: -9.60424518585205
    5. '   ' → logprob: -10.10424518585205
    6. '{return' → logprob: -12.60424518585205
    7. ':return' → logprob: -13.72924518585205
    8. ' ' → logprob: -14.72924518585205
    9. '	' → logprob: -14.85424518585205
    10. '```' → logprob: -14.85424518585205

Token 523: ' factorial' (ID: 111204)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020667314529419
    2. ' self' → logprob: -2.3502066135406494
    3. '(self' → logprob: -17.97520637512207
    4. '	self' → logprob: -20.47520637512207
    5. ' ' → logprob: -20.72520637512207
    6. '[self' → logprob: -21.97520637512207
    7. ' ' → logprob: -22.35020637512207
    8. '   ' → logprob: -22.72520637512207
    9. '
' → logprob: -22.97520637512207
    10. '=self' → logprob: -23.22520637512207

Token 524: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013521412620320916
    2. '(' → logprob: -6.626352310180664
    3. ' (' → logprob: -10.876352310180664
    4. 'self' → logprob: -12.876352310180664
    5. '(
' → logprob: -13.001352310180664
    6. ' self' → logprob: -13.376352310180664
    7. '(f' → logprob: -15.376352310180664
    8. '	self' → logprob: -15.751352310180664
    9. ')(' → logprob: -16.126352310180664
    10. ' ' → logprob: -16.751352310180664

Token 525: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.50000286102295
    3. ' .' → logprob: -14.25000286102295
    4. ').' → logprob: -16.375001907348633
    5. 'self' → logprob: -16.500001907348633
    6. 'f' → logprob: -17.125001907348633
    7. '.user' → logprob: -17.375001907348633
    8. '.self' → logprob: -18.000001907348633
    9. ')' → logprob: -18.500001907348633
    10. '.
' → logprob: -19.500001907348633

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ',i' → logprob: -11.375012397766113
    3. ' ,' → logprob: -14.500012397766113
    4. ',
' → logprob: -18.250011444091797
    5. '‌,' → logprob: -20.000011444091797
    6. ',

' → logprob: -21.250011444091797
    7. ',int' → logprob: -21.250011444091797
    8. 'i' → logprob: -21.500011444091797
    9. '[' → logprob: -21.625011444091797
    10. ',index' → logprob: -21.625011444091797

Token 527: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031777136027812958
    2. ' i' → logprob: -5.753177642822266
    3. '	i' → logprob: -17.753177642822266
    4. '   ' → logprob: -20.628177642822266
    5. ' ' → logprob: -21.253177642822266
    6. ')i' → logprob: -21.878177642822266
    7. ')' → logprob: -23.253177642822266
    8. '  ' → logprob: -23.503177642822266
    9. '    ' → logprob: -24.378177642822266
    10. '{i' → logprob: -24.378177642822266

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.25000286102295
    4. ')

' → logprob: -15.87500286102295
    5. '<|end|>' → logprob: -17.750001907348633
    6. ')}' → logprob: -18.125001907348633
    7. '),' → logprob: -18.250001907348633
    8. ')return' → logprob: -18.375001907348633
    9. '   ' → logprob: -19.250001907348633
    10. ')i' → logprob: -19.750001907348633

Token 529: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03384808450937271
    2. ' if' → logprob: -3.4088480472564697
    3. 'inv' → logprob: -8.78384780883789
    4. 'ifact' → logprob: -10.28384780883789
    5. ' inv' → logprob: -12.28384780883789
    6. ' ' → logprob: -13.03384780883789
    7. 'inverse' → logprob: -13.40884780883789
    8. '   ' → logprob: -13.90884780883789
    9. ' inverse' → logprob: -14.40884780883789
    10. 'def' → logprob: -14.53384780883789

Token 532: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -6.704273118884885e-07
    2. 'act' → logprob: -15.125000953674316
    3. 'factor' → logprob: -15.750000953674316
    4. 'actory' → logprob: -15.875000953674316
    5. '_factor' → logprob: -16.875
    6. '_actor' → logprob: -18.25
    7. 'atorial' → logprob: -19.0
    8. 'acter' → logprob: -19.5
    9. 'actoring' → logprob: -19.5
    10. '```' → logprob: -19.5

Token 533: 'ial' (ID: 563)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.002180953975766897
    2. 'ial' → logprob: -7.252181053161621
    3. 'acial' → logprob: -7.627181053161621
    4. 'atorial' → logprob: -7.752181053161621
    5. 'orial' → logprob: -8.377181053161621
    6. 'act' → logprob: -8.627181053161621
    7. 'a' → logprob: -10.002181053161621
    8. 'actory' → logprob: -10.377181053161621
    9. 'ac' → logprob: -10.752181053161621
    10. 'actal' → logprob: -11.752181053161621

Token 534: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0045433384366333485
    2. '(' → logprob: -6.129543304443359
    3. ',' → logprob: -6.254543304443359
    4. 'self' → logprob: -8.00454330444336
    5. ')' → logprob: -10.37954330444336
    6. ' (' → logprob: -10.50454330444336
    7. ',self' → logprob: -10.75454330444336
    8. ')(' → logprob: -12.50454330444336
    9. ' ' → logprob: -12.62954330444336
    10. '<|end|>' → logprob: -12.75454330444336

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012606535165105015
    2. ',i' → logprob: -9.375125885009766
    3. ' ,' → logprob: -10.250125885009766
    4. 'self' → logprob: -12.375125885009766
    5. ')' → logprob: -14.875125885009766
    6. '   ' → logprob: -15.125125885009766
    7. ' ' → logprob: -15.750125885009766
    8. 's' → logprob: -15.875125885009766
    9. 'i' → logprob: -16.250125885009766
    10. ',self' → logprob: -16.375125885009766

Token 536: ' i' (ID: 575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1322581022977829
    2. ' self' → logprob: -2.257258176803589
    3. 'inv' → logprob: -4.75725793838501
    4. '<|end|>' → logprob: -5.38225793838501
    5. 'i' → logprob: -6.25725793838501
    6. ')' → logprob: -6.38225793838501
    7. ' i' → logprob: -6.75725793838501
    8. ' ' → logprob: -8.007258415222168
    9. ' inv' → logprob: -8.507258415222168
    10. 'lambda' → logprob: -8.507258415222168

Token 537: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018447360023856163
    2. '):
' → logprob: -4.018447399139404
    3. ')' → logprob: -8.143446922302246
    4. '):

' → logprob: -12.768446922302246
    5. '):
' → logprob: -13.018446922302246
    6. '   ' → logprob: -13.768446922302246
    7. ' ):' → logprob: -15.018446922302246
    8. ':' → logprob: -16.018447875976562
    9. ')：' → logprob: -17.268447875976562
    10. '():' → logprob: -17.393447875976562

Token 538: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16855834424495697
    2. 'return' → logprob: -2.293558359146118
    3. '       ' → logprob: -2.918558359146118
    4. '	return' → logprob: -9.293558120727539
    5. '   ' → logprob: -10.168558120727539
    6. '{return' → logprob: -10.918558120727539
    7. ':return' → logprob: -11.168558120727539
    8. '(' → logprob: -11.543558120727539
    9. '=' → logprob: -11.793558120727539
    10. ' =' → logprob: -12.043558120727539

Token 539: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2014143168926239
    2. ' return' → logprob: -1.7014143466949463
    3. 'if' → logprob: -14.451414108276367
    4. 'factor' → logprob: -15.576414108276367
    5. '       ' → logprob: -15.701414108276367
    6. ' if' → logprob: -17.451414108276367
    7. ' factorial' → logprob: -17.576414108276367
    8. '   ' → logprob: -17.701414108276367
    9. '	return' → logprob: -17.701414108276367
    10. 'inv' → logprob: -17.826414108276367

Token 540: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8553882241249084
    2. 'factor' → logprob: -0.8553882241249084
    3. ' factorial' → logprob: -2.4803881645202637
    4. ' if' → logprob: -2.7303881645202637
    5. 'ifact' → logprob: -7.855388164520264
    6. 'fact' → logprob: -8.230388641357422
    7. ' factor' → logprob: -8.730388641357422
    8. ' fact' → logprob: -11.980388641357422
    9. 'ifold' → logprob: -12.230388641357422
    10. 'iff' → logprob: -12.480388641357422

Token 541: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -2.3795937522663735e-05
    2. 'factor' → logprob: -11.12502384185791
    3. 'self' → logprob: -11.87502384185791
    4. '(self' → logprob: -13.62502384185791
    5. 'act' → logprob: -15.37502384185791
    6. 'ator' → logprob: -15.62502384185791
    7. 'actory' → logprob: -15.62502384185791
    8. 'ctor' → logprob: -16.375022888183594
    9. '_factor' → logprob: -17.250022888183594
    10. 'inv' → logprob: -17.375022888183594

Token 542: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -1.4974866644479334e-05
    2. 'factor' → logprob: -12.250015258789062
    3. 'al' → logprob: -12.750015258789062
    4. 'orial' → logprob: -13.000015258789062
    5. 'cial' → logprob: -13.250015258789062
    6. 'actor' → logprob: -13.500015258789062
    7. 'rial' → logprob: -14.000015258789062
    8. 'ical' → logprob: -15.125015258789062
    9. 'ialist' → logprob: -15.625015258789062
    10. 'ials' → logprob: -16.250015258789062

Token 543: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -16.0
    4. 'self' → logprob: -17.125
    5. ' self' → logprob: -17.5
    6. '[self' → logprob: -18.5
    7. ',self' → logprob: -18.875
    8. '=self' → logprob: -20.25
    9. '(
' → logprob: -20.5
    10. ',' → logprob: -20.625

Token 544: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.010965286754071712
    2. 'self' → logprob: -4.760965347290039
    3. '.self' → logprob: -7.010965347290039
    4. ',' → logprob: -7.010965347290039
    5. 'inv' → logprob: -8.760965347290039
    6. ',self' → logprob: -9.010965347290039
    7. '.s' → logprob: -9.510965347290039
    8. ' self' → logprob: -10.135965347290039
    9. '.i' → logprob: -10.385965347290039
    10. '(self' → logprob: -10.385965347290039

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ',i' → logprob: -13.500011444091797
    4. ',
' → logprob: -18.250011444091797
    5. '‌,' → logprob: -19.625011444091797
    6. '   ' → logprob: -19.750011444091797
    7. ' ' → logprob: -20.250011444091797
    8. '،' → logprob: -20.250011444091797
    9. '<|end|>' → logprob: -20.625011444091797
    10. '，' → logprob: -20.625011444091797

Token 546: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861456897109747
    2. ' i' → logprob: -4.758614540100098
    3. '	i' → logprob: -18.633615493774414
    4. ' ' → logprob: -19.883615493774414
    5. '   ' → logprob: -20.258615493774414
    6. ')i' → logprob: -21.258615493774414
    7. ')' → logprob: -21.383615493774414
    8. '
' → logprob: -21.883615493774414
    9. '[i' → logprob: -22.758615493774414
    10. ',' → logprob: -22.883615493774414

Token 547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9027791495318525e-05
    2. '<|end|>' → logprob: -11.500019073486328
    3. ')
' → logprob: -11.875019073486328
    4. '   ' → logprob: -13.875019073486328
    5. ' )' → logprob: -15.375019073486328
    6. ')return' → logprob: -15.500019073486328
    7. ')}' → logprob: -16.250019073486328
    8. '}' → logprob: -16.500019073486328
    9. '`)' → logprob: -16.750019073486328
    10. '),' → logprob: -16.875019073486328

Token 548: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9204761385917664
    2. '   ' → logprob: -1.0454761981964111
    3. ' def' → logprob: -1.5454761981964111
    4. '```' → logprob: -3.795476198196411
    5. '
' → logprob: -4.420475959777832
    6. '    
' → logprob: -6.420475959777832
    7. ' ' → logprob: -8.170475959777832
    8. ' 
' → logprob: -9.045475959777832
    9. '	def' → logprob: -9.170475959777832
    10. '  
' → logprob: -9.170475959777832

Token 549: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0240397397428751
    2. ' def' → logprob: -4.0240397453308105
    3. '   ' → logprob: -5.1490397453308105
    4. '```' → logprob: -10.399039268493652
    5. ' ' → logprob: -10.774039268493652
    6. '	def' → logprob: -11.899039268493652
    7. '    
' → logprob: -12.649039268493652
    8. '  ' → logprob: -12.899039268493652
    9. ' 
' → logprob: -14.024039268493652
    10. '
' → logprob: -14.274039268493652

Token 550: ' C' (ID: 363)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.009847693145275116
    2. ' combination' → logprob: -4.634847640991211
    3. 'combine' → logprob: -10.384847640991211
    4. 'factor' → logprob: -10.634847640991211
    5. 'combo' → logprob: -11.259847640991211
    6. 'def' → logprob: -11.509847640991211
    7. 'perm' → logprob: -13.134847640991211
    8. ' comb' → logprob: -13.134847640991211
    9. 'fact' → logprob: -13.384847640991211
    10. 'choose' → logprob: -13.509847640991211

Token 551: '(self' (ID: 2402)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.06272605061531067
    2. 'om' → logprob: -2.9377260208129883
    3. 'ombo' → logprob: -5.562726020812988
    4. '(' → logprob: -5.812726020812988
    5. '(self' → logprob: -8.312726020812988
    6. 'ombi' → logprob: -8.562726020812988
    7. '(n' → logprob: -9.062726020812988
    8. ' om' → logprob: -9.187726020812988
    9. 'OMB' → logprob: -9.187726020812988
    10. '_comb' → logprob: -9.937726020812988

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001416665269061923
    2. '(self' → logprob: -7.3764166831970215
    3. 'self' → logprob: -8.001416206359863
    4. ',self' → logprob: -8.751416206359863
    5. ' ,' → logprob: -8.876416206359863
    6. ',n' → logprob: -9.126416206359863
    7. ' self' → logprob: -10.626416206359863
    8. ')(' → logprob: -12.251416206359863
    9. '<|end|>' → logprob: -12.876416206359863
    10. '(n' → logprob: -12.876416206359863

Token 553: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07150217890739441
    2. ' n' → logprob: -2.696502208709717
    3. ')' → logprob: -7.071502208709717
    4. '<|end|>' → logprob: -7.946502208709717
    5. ')n' → logprob: -8.196501731872559
    6. '  ' → logprob: -11.196501731872559
    7. ' ' → logprob: -11.571501731872559
    8. '    ' → logprob: -11.571501731872559
    9. '):' → logprob: -11.696501731872559
    10. '(n' → logprob: -11.696501731872559

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011590276844799519
    2. ',k' → logprob: -7.751159191131592
    3. ' ,' → logprob: -7.876159191131592
    4. ',n' → logprob: -8.001158714294434
    5. '<|end|>' → logprob: -12.876158714294434
    6. ',
' → logprob: -13.126158714294434
    7. '   ' → logprob: -13.501158714294434
    8. ',i' → logprob: -13.626158714294434
    9. '‌,' → logprob: -14.126158714294434
    10. ')' → logprob: -14.376158714294434

Token 555: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.842555426876061e-06
    2. ' k' → logprob: -12.250004768371582
    3. '   ' → logprob: -23.6250057220459
    4. ')' → logprob: -24.8750057220459
    5. '	k' → logprob: -24.8750057220459
    6. 'n' → logprob: -26.7500057220459
    7. ' ' → logprob: -26.7500057220459
    8. '  ' → logprob: -26.8750057220459
    9. ' к' → logprob: -27.0000057220459
    10. 'm' → logprob: -27.1250057220459

Token 556: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003715662460308522
    2. ')' → logprob: -8.000371932983398
    3. '):
' → logprob: -10.250371932983398
    4. ' ):' → logprob: -14.750371932983398
    5. ':' → logprob: -16.3753719329834
    6. '   ' → logprob: -16.5003719329834
    7. '):
' → logprob: -16.5003719329834
    8. '):

' → logprob: -16.5003719329834
    9. ')：' → logprob: -16.6253719329834
    10. ')=' → logprob: -18.6253719329834

Token 557: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3022127151489258
    2. '       ' → logprob: -2.052212715148926
    3. '):' → logprob: -3.052212715148926
    4. ' return' → logprob: -3.552212715148926
    5. '   ' → logprob: -3.927212715148926
    6. ')' → logprob: -4.177212715148926
    7. '<|end|>' → logprob: -4.677212715148926
    8. '(' → logprob: -5.177212715148926
    9. ':return' → logprob: -6.052212715148926
    10. '):
' → logprob: -7.302212715148926

Token 558: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16299590468406677
    2. ' return' → logprob: -1.9129959344863892
    3. '       ' → logprob: -5.9129958152771
    4. ':return' → logprob: -11.037996292114258
    5. '{return' → logprob: -11.037996292114258
    6. 'if' → logprob: -11.162996292114258
    7. '	return' → logprob: -12.287996292114258
    8. '   ' → logprob: -12.787996292114258
    9. ' if' → logprob: -12.912996292114258
    10. ')' → logprob: -13.037996292114258

Token 559: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.3480989634990692
    2. ' combination' → logprob: -1.3480989933013916
    3. 'self' → logprob: -3.7230989933013916
    4. ' self' → logprob: -4.5980987548828125
    5. 'combo' → logprob: -12.473098754882812
    6. '(self' → logprob: -12.973098754882812
    7. ' combinaison' → logprob: -14.723098754882812
    8. ' combo' → logprob: -15.473098754882812
    9. 'Combination' → logprob: -15.598098754882812
    10. 'combine' → logprob: -16.223098754882812

Token 560: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.750003814697266
    3. 'self' → logprob: -14.750003814697266
    4. ' (' → logprob: -15.500003814697266
    5. '(
' → logprob: -17.750003814697266
    6. ' self' → logprob: -19.500003814697266
    7. '```' → logprob: -19.500003814697266
    8. '[self' → logprob: -19.625003814697266
    9. '(s' → logprob: -19.750003814697266
    10. '(this' → logprob: -20.625003814697266

Token 561: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -1.0564331205387134e-05
    2. '.' → logprob: -11.50001049041748
    3. ' .' → logprob: -15.50001049041748
    4. 'f' → logprob: -16.875011444091797
    5. ')' → logprob: -18.375011444091797
    6. '	f' → logprob: -18.875011444091797
    7. ',' → logprob: -19.000011444091797
    8. '.
' → logprob: -19.375011444091797
    9. ',f' → logprob: -19.375011444091797
    10. '(f' → logprob: -19.750011444091797

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ',self' → logprob: -12.000016212463379
    3. ',n' → logprob: -12.250016212463379
    4. ' ,' → logprob: -12.250016212463379
    5. ',
' → logprob: -15.625016212463379
    6. '<|end|>' → logprob: -17.000015258789062
    7. 'self' → logprob: -17.250015258789062
    8. ',k' → logprob: -17.250015258789062
    9. ')' → logprob: -17.250015258789062
    10. ' self' → logprob: -19.375015258789062

Token 563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029753033071756363
    2. ' self' → logprob: -3.5297529697418213
    3. '       ' → logprob: -13.779752731323242
    4. '<|end|>' → logprob: -15.029752731323242
    5. ' ' → logprob: -15.279752731323242
    6. '   ' → logprob: -15.529752731323242
    7. '	self' → logprob: -15.904752731323242
    8. '     ' → logprob: -16.404752731323242
    9. '(self' → logprob: -16.404752731323242
    10. ' 
' → logprob: -16.404752731323242

Token 564: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.0002166491176467389
    2. '.mod' → logprob: -8.500216484069824
    3. 'inv' → logprob: -11.375216484069824
    4. ',' → logprob: -14.125216484069824
    5. '.' → logprob: -14.500216484069824
    6. ' .' → logprob: -16.12521743774414
    7. ' ' → logprob: -16.25021743774414
    8. '   ' → logprob: -17.00021743774414
    9. '```' → logprob: -17.00021743774414
    10. '.i' → logprob: -17.50021743774414

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ',self' → logprob: -12.125009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. 'self' → logprob: -13.875009536743164
    5. ')' → logprob: -16.125009536743164
    6. ',
' → logprob: -16.500009536743164
    7. '```' → logprob: -17.375009536743164
    8. '<|end|>' → logprob: -17.500009536743164
    9. ' self' → logprob: -17.875009536743164
    10. '       ' → logprob: -19.375009536743164

Token 566: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740772247314453
    2. 'self' → logprob: -0.9740772247314453
    3. '	self' → logprob: -16.349077224731445
    4. 'MOD' → logprob: -16.724077224731445
    5. '(self' → logprob: -17.224077224731445
    6. 'mod' → logprob: -17.474077224731445
    7. ' MOD' → logprob: -17.974077224731445
    8. ')' → logprob: -18.724077224731445
    9. '<|end|>' → logprob: -18.724077224731445
    10. ' ' → logprob: -18.849077224731445

Token 567: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -3.128163257315464e-07
    2. 'mod' → logprob: -15.375
    3. '.' → logprob: -18.0
    4. 'od' → logprob: -19.125
    5. '.cod' → logprob: -19.375
    6. 'MOD' → logprob: -19.375
    7. ' .' → logprob: -19.75
    8. ',' → logprob: -19.875
    9. '.MOD' → logprob: -19.875
    10. '.mode' → logprob: -20.0

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022046364028938115
    2. ',n' → logprob: -8.50022029876709
    3. ' ,' → logprob: -11.00022029876709
    4. ',k' → logprob: -15.75022029876709
    5. 'n' → logprob: -17.250221252441406
    6. ',
' → logprob: -17.750221252441406
    7. ')' → logprob: -19.250221252441406
    8. ',m' → logprob: -20.250221252441406
    9. ',node' → logprob: -20.375221252441406
    10. '‌,' → logprob: -20.750221252441406

Token 569: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740770161151886
    2. ' n' → logprob: -0.9740769863128662
    3. '	n' → logprob: -18.724077224731445
    4. ')n' → logprob: -21.224077224731445
    5. '       ' → logprob: -22.224077224731445
    6. '    ' → logprob: -23.099077224731445
    7. '   ' → logprob: -23.349077224731445
    8. ' ' → logprob: -24.349077224731445
    9. ' н' → logprob: -24.474077224731445
    10. '$n' → logprob: -24.474077224731445

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004984631086699665
    2. ',k' → logprob: -7.625498294830322
    3. ' ,' → logprob: -11.50049877166748
    4. ',
' → logprob: -16.000497817993164
    5. '	' → logprob: -16.500497817993164
    6. '   ' → logprob: -16.875497817993164
    7. '       ' → logprob: -17.000497817993164
    8. ',n' → logprob: -17.875497817993164
    9. 'k' → logprob: -18.250497817993164
    10. ')' → logprob: -18.625497817993164

Token 571: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.935296834039036e-06
    2. ' k' → logprob: -12.75000286102295
    3. '       ' → logprob: -23.875003814697266
    4. '	k' → logprob: -23.875003814697266
    5. '   ' → logprob: -24.125003814697266
    6. '{k' → logprob: -26.250003814697266
    7. '  ' → logprob: -27.000003814697266
    8. '
' → logprob: -27.000003814697266
    9. ')' → logprob: -27.125003814697266
    10. '           ' → logprob: -27.375003814697266

Token 572: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -17.125
    4. '   ' → logprob: -18.75
    5. ')

' → logprob: -19.625
    6. '),' → logprob: -20.625
    7. ')#' → logprob: -20.75
    8. ')}' → logprob: -20.875
    9. ' ' → logprob: -21.25
    10. '}' → logprob: -21.375

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12241439521312714
    2. ' def' → logprob: -2.8724143505096436
    3. 'def' → logprob: -3.1224143505096436
    4. '<|end|>' → logprob: -4.747414588928223
    5. '	def' → logprob: -6.247414588928223
    6. ' ' → logprob: -6.622414588928223
    7. '```' → logprob: -7.372414588928223
    8. '  ' → logprob: -7.997414588928223
    9. '[' → logprob: -8.122414588928223
    10. '    
' → logprob: -8.497414588928223

Token 574: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22308242321014404
    2. '   ' → logprob: -1.723082423210144
    3. ' def' → logprob: -3.8480825424194336
    4. 'D' → logprob: -9.848082542419434
    5. ' ' → logprob: -10.598082542419434
    6. '	def' → logprob: -10.848082542419434
    7. '  ' → logprob: -11.973082542419434
    8. '
' → logprob: -12.348082542419434
    9. '```' → logprob: -12.598082542419434
    10. '    
' → logprob: -13.223082542419434

Token 575: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.009777102619409561
    2. ' P' → logprob: -4.634777069091797
    3. 'perm' → logprob: -11.259777069091797
    4. 'p' → logprob: -12.384777069091797
    5. ' ' → logprob: -13.134777069091797
    6. ' perm' → logprob: -14.384777069091797
    7. 'per' → logprob: -14.759777069091797
    8. 'A' → logprob: -14.884777069091797
    9. '  ' → logprob: -15.134777069091797
    10. '   ' → logprob: -15.134777069091797

Token 576: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -16.125003814697266
    4. 'self' → logprob: -16.125003814697266
    5. ' self' → logprob: -17.375003814697266
    6. '(
' → logprob: -18.125003814697266
    7. '   ' → logprob: -19.125003814697266
    8. '(s' → logprob: -19.500003814697266
    9. '```' → logprob: -19.500003814697266
    10. '(f' → logprob: -19.625003814697266

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003248651046305895
    2. '(self' → logprob: -5.878248691558838
    3. 'self' → logprob: -8.00324821472168
    4. ',self' → logprob: -9.62824821472168
    5. ' ,' → logprob: -11.12824821472168
    6. '(' → logprob: -11.50324821472168
    7. ' self' → logprob: -12.00324821472168
    8. ')' → logprob: -12.12824821472168
    9. ' (' → logprob: -13.50324821472168
    10. 'f' → logprob: -13.62824821472168

Token 578: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030594827607274055
    2. ' n' → logprob: -3.780594825744629
    3. 'self' → logprob: -5.030594825744629
    4. ' self' → logprob: -7.155594825744629
    5. '   ' → logprob: -13.030594825744629
    6. '(n' → logprob: -13.655594825744629
    7. '       ' → logprob: -13.905594825744629
    8. 'def' → logprob: -14.405594825744629
    9. ')' → logprob: -14.780594825744629
    10. '_n' → logprob: -15.030594825744629

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.029847231227905e-05
    2. ',n' → logprob: -10.125080108642578
    3. ' ,' → logprob: -10.375080108642578
    4. ',self' → logprob: -12.125080108642578
    5. 'self' → logprob: -12.750080108642578
    6. ',
' → logprob: -15.500080108642578
    7. ',k' → logprob: -15.750080108642578
    8. ' self' → logprob: -16.000080108642578
    9. 'n' → logprob: -16.250080108642578
    10. ')' → logprob: -16.625080108642578

Token 580: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001584850688232109
    2. ' k' → logprob: -8.750158309936523
    3. ' ' → logprob: -21.500158309936523
    4. '	k' → logprob: -22.125158309936523
    5. '   ' → logprob: -22.625158309936523
    6. '  ' → logprob: -23.000158309936523
    7. 'n' → logprob: -23.250158309936523
    8. '    ' → logprob: -23.375158309936523
    9. '       ' → logprob: -24.125158309936523
    10. '{k' → logprob: -24.750158309936523

Token 581: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038070641458034515
    2. '):
' → logprob: -3.2880706787109375
    3. ')' → logprob: -11.038070678710938
    4. '):
' → logprob: -11.663070678710938
    5. ',' → logprob: -13.913070678710938
    6. '):

' → logprob: -13.913070678710938
    7. '   ' → logprob: -14.163070678710938
    8. ':' → logprob: -14.413070678710938
    9. ' ):' → logprob: -14.663070678710938
    10. 'self' → logprob: -14.788070678710938

Token 582: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6270095705986023
    2. ' return' → logprob: -0.8770095705986023
    3. '       ' → logprob: -3.002009630203247
    4. '{return' → logprob: -10.127009391784668
    5. '	return' → logprob: -11.002009391784668
    6. 'def' → logprob: -11.377009391784668
    7. '```' → logprob: -11.502009391784668
    8. ':return' → logprob: -11.502009391784668
    9. 'self' → logprob: -12.627009391784668
    10. '   ' → logprob: -13.252009391784668

Token 583: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00011343709047650918
    2. ' return' → logprob: -9.250113487243652
    3. 'per' → logprob: -11.000113487243652
    4. ' permutation' → logprob: -14.875113487243652
    5. '       ' → logprob: -15.875113487243652
    6. 'perm' → logprob: -16.500112533569336
    7. 'permission' → logprob: -17.375112533569336
    8. '```' → logprob: -18.375112533569336
    9. '{return' → logprob: -18.875112533569336
    10. '   ' → logprob: -19.250112533569336

Token 584: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.1002306118607521
    2. ' permutation' → logprob: -2.3502306938171387
    3. 'comb' → logprob: -11.35023021697998
    4. 'perm' → logprob: -11.60023021697998
    5. 'permission' → logprob: -13.22523021697998
    6. '(per' → logprob: -14.35023021697998
    7. ' combination' → logprob: -14.60023021697998
    8. 'Permutation' → logprob: -16.600231170654297
    9. ' perm' → logprob: -16.850231170654297
    10. ' per' → logprob: -17.350231170654297

Token 585: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. ' (' → logprob: -18.375
    4. 'self' → logprob: -20.5
    5. '(
' → logprob: -20.625
    6. '[self' → logprob: -21.25
    7. '(this' → logprob: -22.25
    8. ' self' → logprob: -23.125
    9. '```' → logprob: -24.875
    10. '	self' → logprob: -25.125

Token 586: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0005911595653742552
    2. 'self' → logprob: -7.500591278076172
    3. '.s' → logprob: -10.750591278076172
    4. '.self' → logprob: -11.625591278076172
    5. '(self' → logprob: -13.000591278076172
    6. '.' → logprob: -13.000591278076172
    7. ' self' → logprob: -13.500591278076172
    8. 'f' → logprob: -14.625591278076172
    9. '[self' → logprob: -15.125591278076172
    10. ' .' → logprob: -15.625591278076172

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ',self' → logprob: -13.125004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. 'self' → logprob: -14.750004768371582
    5. ',
' → logprob: -16.375003814697266
    6. '<|end|>' → logprob: -17.125003814697266
    7. '[' → logprob: -17.625003814697266
    8. ')' → logprob: -17.625003814697266
    9. '(self' → logprob: -18.125003814697266
    10. ' self' → logprob: -18.250003814697266

Token 588: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.751502990722656
    4. ' ' → logprob: -17.001502990722656
    5. '  ' → logprob: -17.501502990722656
    6. '     ' → logprob: -18.501502990722656
    7. '       ' → logprob: -18.501502990722656
    8. '(self' → logprob: -18.876502990722656
    9. '    ' → logprob: -19.001502990722656
    10. '	self' → logprob: -19.251502990722656

Token 589: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.08037418127059937
    2. '.mod' → logprob: -2.580374240875244
    3. ',' → logprob: -6.580374240875244
    4. 'inv' → logprob: -9.330373764038086
    5. 'mod' → logprob: -12.705373764038086
    6. '   ' → logprob: -13.955373764038086
    7. ' ' → logprob: -14.080373764038086
    8. '.' → logprob: -14.080373764038086
    9. '```' → logprob: -15.205373764038086
    10. ',
' → logprob: -15.455373764038086

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',self' → logprob: -14.000003814697266
    4. 'self' → logprob: -15.375003814697266
    5. ',
' → logprob: -16.000003814697266
    6. ')' → logprob: -16.625003814697266
    7. ' self' → logprob: -19.500003814697266
    8. '       ' → logprob: -19.625003814697266
    9. '[' → logprob: -19.750003814697266
    10. '<|end|>' → logprob: -19.875003814697266

Token 591: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '       ' → logprob: -17.764163970947266
    4. '   ' → logprob: -19.264163970947266
    5. '(self' → logprob: -19.264163970947266
    6. '	self' → logprob: -19.514163970947266
    7. ' ' → logprob: -20.264163970947266
    8. '     ' → logprob: -20.889163970947266
    9. '[self' → logprob: -21.264163970947266
    10. '    ' → logprob: -21.889163970947266

Token 592: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -2.935296834039036e-06
    2. ',' → logprob: -13.12500286102295
    3. 'mod' → logprob: -14.12500286102295
    4. '	mod' → logprob: -17.375003814697266
    5. 'MOD' → logprob: -17.500003814697266
    6. '   ' → logprob: -17.750003814697266
    7. '.' → logprob: -17.750003814697266
    8. ' ' → logprob: -18.500003814697266
    9. '```' → logprob: -18.875003814697266
    10. ' .' → logprob: -19.750003814697266

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ',n' → logprob: -10.125041007995605
    3. ' ,' → logprob: -14.375041007995605
    4. ',k' → logprob: -20.62504005432129
    5. 'n' → logprob: -21.12504005432129
    6. ')' → logprob: -21.75004005432129
    7. ',
' → logprob: -21.75004005432129
    8. ',num' → logprob: -23.12504005432129
    9. ',user' → logprob: -23.37504005432129
    10. ',node' → logprob: -23.37504005432129

Token 594: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07888978719711304
    2. ' n' → logprob: -2.578889846801758
    3. '	n' → logprob: -18.328889846801758
    4. ' ' → logprob: -21.703889846801758
    5. ')n' → logprob: -22.203889846801758
    6. '   ' → logprob: -22.953889846801758
    7. '$n' → logprob: -23.328889846801758
    8. ',n' → logprob: -23.703889846801758
    9. '    ' → logprob: -24.578889846801758
    10. 'self' → logprob: -24.953889846801758

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016551809676457196
    2. ',k' → logprob: -8.750165939331055
    3. ' ,' → logprob: -11.875165939331055
    4. ',
' → logprob: -16.500165939331055
    5. ')' → logprob: -18.000165939331055
    6. '	' → logprob: -18.625165939331055
    7. '   ' → logprob: -19.125165939331055
    8. '‌,' → logprob: -19.500165939331055
    9. ',p' → logprob: -19.625165939331055
    10. '，' → logprob: -19.625165939331055

Token 596: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005530327325686812
    2. ' k' → logprob: -7.500553131103516
    3. '	k' → logprob: -19.000553131103516
    4. '   ' → logprob: -20.125553131103516
    5. ' ' → logprob: -20.750553131103516
    6. '       ' → logprob: -22.000553131103516
    7. '    ' → logprob: -22.250553131103516
    8. '  ' → logprob: -22.625553131103516
    9. ' ' → logprob: -23.000553131103516
    10. '     ' → logprob: -23.125553131103516

Token 597: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06998968124389648
    2. ')' → logprob: -2.6949896812438965
    3. '   ' → logprob: -10.319990158081055
    4. ' ,' → logprob: -11.569990158081055
    5. '),' → logprob: -12.444990158081055
    6. ',n' → logprob: -12.694990158081055
    7. ')
' → logprob: -13.819990158081055
    8. '       ' → logprob: -14.069990158081055
    9. ',k' → logprob: -14.069990158081055
    10. ' )' → logprob: -14.819990158081055

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4027414619922638
    2. 'def' → logprob: -1.1527414321899414
    3. ' def' → logprob: -4.152741432189941
    4. '	def' → logprob: -11.277741432189941
    5. '  ' → logprob: -12.027741432189941
    6. ' ' → logprob: -12.402741432189941
    7. '```' → logprob: -14.652741432189941
    8. '    ' → logprob: -14.902741432189941
    9. '    
' → logprob: -15.152741432189941
    10. '       ' → logprob: -16.152742385864258

Token 599: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2030991017818451
    2. '   ' → logprob: -2.328099012374878
    3. ' def' → logprob: -2.453099012374878
    4. '	def' → logprob: -9.203099250793457
    5. 'd' → logprob: -10.203099250793457
    6. ')' → logprob: -10.203099250793457
    7. ' ' → logprob: -10.578099250793457
    8. 'class' → logprob: -10.828099250793457
    9. '
' → logprob: -11.203099250793457
    10. '  ' → logprob: -11.328099250793457

Token 600: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.4987974029500037e-05
    2. 'h' → logprob: -11.625024795532227
    3. ' H' → logprob: -12.625024795532227
    4. 'HS' → logprob: -12.875024795532227
    5. 'hom' → logprob: -13.250024795532227
    6. 'R' → logprob: -13.750024795532227
    7. 'with' → logprob: -13.750024795532227
    8. 'HP' → logprob: -14.000024795532227
    9. 'HH' → logprob: -14.250024795532227
    10. '```' → logprob: -14.875024795532227

Token 601: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016778295685071498
    2. '(' → logprob: -9.000167846679688
    3. 'self' → logprob: -10.500167846679688
    4. '   ' → logprob: -11.875167846679688
    5. '(n' → logprob: -12.875167846679688
    6. ' (' → logprob: -13.500167846679688
    7. 'def' → logprob: -13.750167846679688
    8. ',' → logprob: -14.000167846679688
    9. 'elf' → logprob: -14.125167846679688
    10. ' self' → logprob: -14.625167846679688

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009115827269852161
    2. '(self' → logprob: -7.750911712646484
    3. 'self' → logprob: -9.125911712646484
    4. '(' → logprob: -9.250911712646484
    5. ',n' → logprob: -9.750911712646484
    6. ')' → logprob: -9.875911712646484
    7. ',self' → logprob: -9.875911712646484
    8. '(n' → logprob: -10.125911712646484
    9. 'f' → logprob: -10.625911712646484
    10. ',f' → logprob: -11.250911712646484

Token 603: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04863414540886879
    2. ' n' → logprob: -3.0486340522766113
    3. 'self' → logprob: -10.79863452911377
    4. '<|end|>' → logprob: -11.54863452911377
    5. ' self' → logprob: -12.29863452911377
    6. ' ' → logprob: -12.67363452911377
    7. ')' → logprob: -12.92363452911377
    8. '    ' → logprob: -13.54863452911377
    9. ')n' → logprob: -13.79863452911377
    10. '   ' → logprob: -13.79863452911377

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.590104698669165e-05
    2. ',k' → logprob: -9.625085830688477
    3. ',n' → logprob: -11.375085830688477
    4. ' ,' → logprob: -11.750085830688477
    5. ',self' → logprob: -15.375085830688477
    6. '   ' → logprob: -16.000085830688477
    7. '       ' → logprob: -16.500085830688477
    8. 'self' → logprob: -17.125085830688477
    9. ',
' → logprob: -17.750085830688477
    10. ',m' → logprob: -18.125085830688477

Token 605: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.625009536743164
    4. '    ' → logprob: -20.625009536743164
    5. '  ' → logprob: -20.625009536743164
    6. ' ' → logprob: -21.125009536743164
    7. '       ' → logprob: -21.375009536743164
    8. '	k' → logprob: -21.750009536743164
    9. '     ' → logprob: -22.625009536743164
    10. '0' → logprob: -23.250009536743164

Token 606: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012137442827224731
    2. ',' → logprob: -4.637137413024902
    3. '):
' → logprob: -6.887137413024902
    4. ')' → logprob: -7.012137413024902
    5. '   ' → logprob: -8.137137413024902
    6. '       ' → logprob: -9.387137413024902
    7. 'self' → logprob: -9.887137413024902
    8. ' ):' → logprob: -11.762137413024902
    9. '),' → logprob: -11.887137413024902
    10. '):
' → logprob: -12.137137413024902

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14818081259727478
    2. '(self' → logprob: -2.7731807231903076
    3. ' return' → logprob: -2.8981807231903076
    4. 'return' → logprob: -4.273180961608887
    5. 'self' → logprob: -5.398180961608887
    6. ' self' → logprob: -7.398180961608887
    7. '=' → logprob: -7.898180961608887
    8. '(' → logprob: -8.398180961608887
    9. ' =' → logprob: -9.023180961608887
    10. '=self' → logprob: -9.773180961608887

Token 608: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0029055625200271606
    2. ' return' → logprob: -6.002905368804932
    3. '       ' → logprob: -7.752905368804932
    4. 'self' → logprob: -16.127904891967773
    5. '```' → logprob: -16.502904891967773
    6. '	return' → logprob: -16.877904891967773
    7. 'def' → logprob: -18.252904891967773
    8. '{return' → logprob: -19.002904891967773
    9. '   ' → logprob: -19.502904891967773
    10. ':return' → logprob: -20.002904891967773

Token 609: ' homogeneous' (ID: 151031)
  Prédit: 'hom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hom' → logprob: -0.006912510842084885
    2. ' homogeneous' → logprob: -5.006912708282471
    3. ' hom' → logprob: -9.131912231445312
    4. 'self' → logprob: -9.381912231445312
    5. 'h' → logprob: -12.756912231445312
    6. ' self' → logprob: -13.756912231445312
    7. '(h' → logprob: -15.256912231445312
    8. '(self' → logprob: -15.381912231445312
    9. 'home' → logprob: -16.006912231445312
    10. ' homo' → logprob: -16.506912231445312

Token 610: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.125005722045898
    4. 'self' → logprob: -16.7500057220459
    5. '(
' → logprob: -17.7500057220459
    6. '(this' → logprob: -18.3750057220459
    7. '(Self' → logprob: -20.1250057220459
    8. '```' → logprob: -20.8750057220459
    9. ' self' → logprob: -21.0000057220459
    10. '   ' → logprob: -21.1250057220459

Token 611: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -4.36574100604048e-06
    2. '.' → logprob: -12.875004768371582
    3. 'f' → logprob: -13.375004768371582
    4. ',' → logprob: -16.000003814697266
    5. ',f' → logprob: -17.500003814697266
    6. '	f' → logprob: -18.250003814697266
    7. ' .' → logprob: -18.875003814697266
    8. '```' → logprob: -19.125003814697266
    9. ')' → logprob: -19.375003814697266
    10. 'self' → logprob: -19.375003814697266

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.776898251497187e-05
    2. ',self' → logprob: -9.8750581741333
    3. ' ,' → logprob: -12.5000581741333
    4. 'self' → logprob: -13.3750581741333
    5. ',
' → logprob: -14.6250581741333
    6. '<|end|>' → logprob: -15.3750581741333
    7. ' self' → logprob: -16.625057220458984
    8. ',k' → logprob: -16.625057220458984
    9. ',n' → logprob: -16.750057220458984
    10. '       ' → logprob: -17.250057220458984

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048762127757072
    2. ' self' → logprob: -4.511048793792725
    3. 'n' → logprob: -15.011048316955566
    4. '   ' → logprob: -15.636048316955566
    5. '       ' → logprob: -15.886048316955566
    6. 'inv' → logprob: -16.136049270629883
    7. ' ' → logprob: -16.511049270629883
    8. '	self' → logprob: -16.511049270629883
    9. '  ' → logprob: -17.386049270629883
    10. '(self' → logprob: -17.761049270629883

Token 614: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.07079841196537018
    2. 'inv' → logprob: -3.070798397064209
    3. ',' → logprob: -3.820798397064209
    4. ' inv' → logprob: -10.320798873901367
    5. '(inv' → logprob: -11.445798873901367
    6. '.mod' → logprob: -11.820798873901367
    7. '_inv' → logprob: -12.945798873901367
    8. 'mod' → logprob: -13.570798873901367
    9. 'INV' → logprob: -15.195798873901367
    10. ' ,' → logprob: -15.445798873901367

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ',self' → logprob: -11.62501049041748
    3. ' ,' → logprob: -13.37501049041748
    4. 'self' → logprob: -16.125011444091797
    5. ',
' → logprob: -18.000011444091797
    6. ' self' → logprob: -19.250011444091797
    7. ',n' → logprob: -19.625011444091797
    8. '(self' → logprob: -21.875011444091797
    9. ',module' → logprob: -21.875011444091797
    10. '```' → logprob: -22.500011444091797

Token 616: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002476016292348504
    2. ' self' → logprob: -6.002476215362549
    3. '       ' → logprob: -15.37747573852539
    4. '   ' → logprob: -17.37747573852539
    5. '(self' → logprob: -17.37747573852539
    6. '           ' → logprob: -17.62747573852539
    7. '	self' → logprob: -18.12747573852539
    8. '     ' → logprob: -18.12747573852539
    9. '         ' → logprob: -18.50247573852539
    10. 'n' → logprob: -18.62747573852539

Token 617: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0004235243541188538
    2. ',' → logprob: -8.250423431396484
    3. 'mod' → logprob: -8.750423431396484
    4. '	mod' → logprob: -13.625423431396484
    5. '.' → logprob: -13.875423431396484
    6. 'MOD' → logprob: -14.125423431396484
    7. ' ' → logprob: -15.000423431396484
    8. '   ' → logprob: -15.125423431396484
    9. ' .' → logprob: -16.375423431396484
    10. ',
' → logprob: -16.750423431396484

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006736916024237871
    2. ',n' → logprob: -5.006736755371094
    3. ' ,' → logprob: -10.756736755371094
    4. 'n' → logprob: -16.381736755371094
    5. ',k' → logprob: -17.006736755371094
    6. ' n' → logprob: -17.631736755371094
    7. '       ' → logprob: -17.881736755371094
    8. '   ' → logprob: -18.881736755371094
    9. ',self' → logprob: -18.881736755371094
    10. ',
' → logprob: -19.256736755371094

Token 619: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014133334159851
    2. 'n' → logprob: -1.7014133930206299
    3. '	n' → logprob: -18.576414108276367
    4. ')n' → logprob: -20.201414108276367
    5. '   ' → logprob: -20.826414108276367
    6. '$n' → logprob: -21.326414108276367
    7. ' ' → logprob: -21.451414108276367
    8. '    ' → logprob: -21.701414108276367
    9. '(n' → logprob: -22.076414108276367
    10. '
' → logprob: -22.201414108276367

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002144908532500267
    2. ',k' → logprob: -6.252144813537598
    3. ' ,' → logprob: -8.502144813537598
    4. ',
' → logprob: -12.127144813537598
    5. ')' → logprob: -12.877144813537598
    6. ',n' → logprob: -13.377144813537598
    7. '   ' → logprob: -13.752144813537598
    8. '       ' → logprob: -14.002144813537598
    9. '	' → logprob: -14.252144813537598
    10. ',p' → logprob: -15.627144813537598

Token 621: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006715370807796717
    2. ' k' → logprob: -5.006715297698975
    3. '	k' → logprob: -18.506715774536133
    4. ' ' → logprob: -19.006715774536133
    5. '   ' → logprob: -20.506715774536133
    6. '  ' → logprob: -22.381715774536133
    7. ',k' → logprob: -22.631715774536133
    8. '```' → logprob: -23.006715774536133
    9. '{k' → logprob: -23.131715774536133
    10. '       ' → logprob: -23.131715774536133

Token 622: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.249780638725497e-05
    2. ')
' → logprob: -10.750032424926758
    3. '   ' → logprob: -11.625032424926758
    4. '       ' → logprob: -13.500032424926758
    5. ' )' → logprob: -14.500032424926758
    6. ' ' → logprob: -17.125032424926758
    7. '))' → logprob: -17.250032424926758
    8. ')
' → logprob: -17.625032424926758
    9. '}' → logprob: -17.750032424926758
    10. ')}' → logprob: -18.000032424926758

Token 623: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0006766928127035499
    2. 'main' → logprob: -7.37567663192749
    3. ' solve' → logprob: -10.000677108764648
    4. ' __' → logprob: -14.000677108764648
    5. '	main' → logprob: -14.000677108764648
    6. '_main' → logprob: -14.250677108764648
    7. 'solve' → logprob: -14.375677108764648
    8. ' solution' → logprob: -14.500677108764648
    9. ' process' → logprob: -14.625677108764648
    10. '__' → logprob: -15.375677108764648

Token 625: '_term' (ID: 41867)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.33057472109794617
    2. '_factor' → logprob: -1.4555747509002686
    3. '():' → logprob: -3.8305747509002686
    4. 'factor' → logprob: -4.2055745124816895
    5. '_sum' → logprob: -5.9555745124816895
    6. '(' → logprob: -6.3305745124816895
    7. '_comb' → logprob: -6.8305745124816895
    8. ' factorial' → logprob: -7.0805745124816895
    9. '(f' → logprob: -7.5805745124816895
    10. 'def' → logprob: -7.7055745124816895

Token 626: '(F' (ID: 12044)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0047130221500992775
    2. '(f' → logprob: -5.50471305847168
    3. '(' → logprob: -7.50471305847168
    4. '(a' → logprob: -10.12971305847168
    5. '(s' → logprob: -11.12971305847168
    6. ' (' → logprob: -11.87971305847168
    7. '(x' → logprob: -11.87971305847168
    8. '(N' → logprob: -12.87971305847168
    9. '(i' → logprob: -12.87971305847168
    10. '(k' → logprob: -13.37971305847168

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30431652069091797
    2. 'actor' → logprob: -1.429316520690918
    3. 'ac' → logprob: -4.929316520690918
    4. '(n' → logprob: -5.054316520690918
    5. '):' → logprob: -6.054316520690918
    6. 'act' → logprob: -6.304316520690918
    7. '(F' → logprob: -6.554316520690918
    8. ':' → logprob: -7.429316520690918
    9. ',n' → logprob: -7.679316520690918
    10. '(' → logprob: -7.804316520690918

Token 628: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014007063582539558
    2. ' n' → logprob: -4.889007091522217
    3. 'a' → logprob: -6.264007091522217
    4. 'i' → logprob: -6.639007091522217
    5. 'N' → logprob: -7.139007091522217
    6. 'k' → logprob: -7.264007091522217
    7. 'x' → logprob: -7.639007091522217
    8. 'm' → logprob: -7.889007091522217
    9. ')' → logprob: -8.264006614685059
    10. 'f' → logprob: -8.639006614685059

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003649017889983952
    2. ',k' → logprob: -8.500365257263184
    3. ' ,' → logprob: -9.000365257263184
    4. ',n' → logprob: -10.625365257263184
    5. 'k' → logprob: -12.375365257263184
    6. '):' → logprob: -12.875365257263184
    7. ',
' → logprob: -13.625365257263184
    8. '   ' → logprob: -13.750365257263184
    9. 'n' → logprob: -14.375365257263184
    10. '_,' → logprob: -14.625365257263184

Token 630: ' p' (ID: 275)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006127156782895327
    2. 'r' → logprob: -6.13112735748291
    3. 'm' → logprob: -6.25612735748291
    4. 'i' → logprob: -7.38112735748291
    5. ' k' → logprob: -7.38112735748291
    6. 'x' → logprob: -8.13112735748291
    7. 'a' → logprob: -8.25612735748291
    8. 'n' → logprob: -9.38112735748291
    9. 'mod' → logprob: -11.00612735748291
    10. 'c' → logprob: -11.44362735748291

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050826795399188995
    2. '):
' → logprob: -3.3008267879486084
    3. '):' → logprob: -4.6758270263671875
    4. ',k' → logprob: -6.3008270263671875
    5. 'k' → logprob: -7.0508270263671875
    6. ')' → logprob: -9.050827026367188
    7. 'r' → logprob: -9.175827026367188
    8. '0' → logprob: -9.675827026367188
    9. '):
' → logprob: -9.675827026367188
    10. ',
' → logprob: -9.800827026367188

Token 632: ' b' (ID: 287)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06177125126123428
    2. 'q' → logprob: -3.8117711544036865
    3. 'm' → logprob: -4.186771392822266
    4. 'r' → logprob: -4.436771392822266
    5. 'x' → logprob: -5.311771392822266
    6. 'a' → logprob: -6.311771392822266
    7. 'i' → logprob: -6.436771392822266
    8. 'mod' → logprob: -7.686771392822266
    9. 'l' → logprob: -7.811771392822266
    10. ' k' → logprob: -8.061771392822266

Token 633: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23879748582839966
    2. '):
' → logprob: -1.9887974262237549
    3. ',' → logprob: -2.738797426223755
    4. 'r' → logprob: -5.863797664642334
    5. '):
' → logprob: -5.863797664642334
    6. 'k' → logprob: -6.613797664642334
    7. 'y' → logprob: -7.363797664642334
    8. ')' → logprob: -7.488797664642334
    9. 'i' → logprob: -7.738797664642334
    10. '):

' → logprob: -7.988797664642334

Token 634: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2279936969280243
    2. 'm' → logprob: -3.2279937267303467
    3. 'c' → logprob: -3.3529937267303467
    4. 'x' → logprob: -3.6029937267303467
    5. 'q' → logprob: -3.7279937267303467
    6. 'i' → logprob: -3.8529937267303467
    7. 'a' → logprob: -4.102993488311768
    8. 'r' → logprob: -4.727993488311768
    9. 'mod' → logprob: -5.227993488311768
    10. 'l' → logprob: -5.477993488311768

Token 635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03036230430006981
    2. ',' → logprob: -3.530362367630005
    3. '):
' → logprob: -7.530362129211426
    4. ')' → logprob: -10.905362129211426
    5. '   ' → logprob: -11.030362129211426
    6. ',n' → logprob: -11.155362129211426
    7. 'n' → logprob: -12.405362129211426
    8. '):
' → logprob: -12.530362129211426
    9. ',p' → logprob: -12.780362129211426
    10. ':' → logprob: -12.780362129211426

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005246210377663374
    2. 'if' → logprob: -5.630246162414551
    3. 'return' → logprob: -7.505246162414551
    4. 'res' → logprob: -8.00524616241455
    5. ' if' → logprob: -8.38024616241455
    6. 'term' → logprob: -8.88024616241455
    7. 's' → logprob: -9.00524616241455
    8. 'val' → logprob: -9.75524616241455
    9. 'result' → logprob: -10.13024616241455
    10. 'x' → logprob: -10.88024616241455

Token 637: ' q' (ID: 2335)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38186967372894287
    2. 'return' → logprob: -2.0068697929382324
    3. 'if' → logprob: -2.6318697929382324
    4. 'term' → logprob: -3.0068697929382324
    5. 'result' → logprob: -3.8818697929382324
    6. '   ' → logprob: -4.006869792938232
    7. 'val' → logprob: -5.631869792938232
    8. 'c' → logprob: -5.881869792938232
    9. 'temp' → logprob: -5.881869792938232
    10. ' res' → logprob: -6.131869792938232

Token 638: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09177693724632263
    2. '=' → logprob: -2.4667768478393555
    3. 'u' → logprob: -6.0917768478393555
    4. ',' → logprob: -8.341776847839355
    5. 'w' → logprob: -9.466776847839355
    6. '=p' → logprob: -9.841776847839355
    7. '   ' → logprob: -10.091776847839355
    8. 'f' → logprob: -10.591776847839355
    9. 'ow' → logprob: -11.341776847839355
    10. '=int' → logprob: -11.716776847839355

Token 639: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.031026719138026237
    2. ' r' → logprob: -3.531026601791382
    3. 'm' → logprob: -7.781026840209961
    4. 'a' → logprob: -9.281026840209961
    5. '_' → logprob: -9.406026840209961
    6. '=' → logprob: -9.406026840209961
    7. 'mod' → logprob: -9.531026840209961
    8. 'p' → logprob: -9.906026840209961
    9. 'b' → logprob: -10.156026840209961
    10. 'k' → logprob: -10.531026840209961

Token 640: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09031693637371063
    2. ' =' → logprob: -2.4653170108795166
    3. ',' → logprob: -6.5903167724609375
    4. ' ' → logprob: -14.465316772460938
    5. ' ,' → logprob: -14.590316772460938
    6. 'u' → logprob: -14.965316772460938
    7. '=
' → logprob: -15.215316772460938
    8. '=

' → logprob: -15.465316772460938
    9. '＝' → logprob: -15.965316772460938
    10. '   ' → logprob: -16.590316772460938

Token 641: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.000116655595775228
    2. ' div' → logprob: -9.250116348266602
    3. 'p' → logprob: -10.875116348266602
    4. 'k' → logprob: -14.625116348266602
    5. 'n' → logprob: -15.125116348266602
    6. 'd' → logprob: -15.625116348266602
    7. '
' → logprob: -15.750116348266602
    8. '   ' → logprob: -15.750116348266602
    9. '(div' → logprob: -16.1251163482666
    10. 'di' → logprob: -16.2501163482666

Token 642: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.4736459888808895e-05
    2. 'p' → logprob: -11.375014305114746
    3. 'div' → logprob: -14.000014305114746
    4. 'm' → logprob: -14.125014305114746
    5. 'q' → logprob: -14.750014305114746
    6. '(p' → logprob: -15.125014305114746
    7. 'r' → logprob: -15.125014305114746
    8. 'b' → logprob: -15.125014305114746
    9. 'term' → logprob: -16.125015258789062
    10. 'k' → logprob: -16.125015258789062

Token 643: '(k' (ID: 12125)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39921319484710693
    2. 'k' → logprob: -2.0242133140563965
    3. 'b' → logprob: -2.3992133140563965
    4. 'n' → logprob: -2.6492133140563965
    5. '(p' → logprob: -4.1492133140563965
    6. '(n' → logprob: -4.7742133140563965
    7. '(k' → logprob: -5.0242133140563965
    8. '(b' → logprob: -5.3992133140563965
    9. ' p' → logprob: -9.399212837219238
    10. '(' → logprob: -10.524212837219238

Token 644: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0538877435028553
    2. ' ,' → logprob: -3.0538878440856934
    3. 'p' → logprob: -6.053887844085693
    4. ',p' → logprob: -6.428887844085693
    5. 'b' → logprob: -8.053887367248535
    6. ' p' → logprob: -8.303887367248535
    7. '(p' → logprob: -8.803887367248535
    8. ',b' → logprob: -9.053887367248535
    9. ' -' → logprob: -9.803887367248535
    10. 'n' → logprob: -9.803887367248535

Token 645: ' p' (ID: 275)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8603213429450989
    2. '1' → logprob: -1.110321283340454
    3. 'p' → logprob: -1.485321283340454
    4. 'n' → logprob: -4.235321521759033
    5. 'r' → logprob: -5.985321521759033
    6. '(n' → logprob: -6.610321521759033
    7. '(p' → logprob: -7.235321521759033
    8. '(b' → logprob: -7.610321521759033
    9. '(' → logprob: -7.860321521759033
    10. '2' → logprob: -8.360321044921875

Token 646: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01264137588441372
    2. ' ,' → logprob: -5.512641429901123
    3. ' +' → logprob: -5.512641429901123
    4. ' -' → logprob: -6.262641429901123
    5. '+' → logprob: -6.887641429901123
    6. '-' → logprob: -7.762641429901123
    7. '[' → logprob: -7.887641429901123
    8. 'b' → logprob: -8.262640953063965
    9. ',b' → logprob: -8.512640953063965
    10. '+b' → logprob: -9.887640953063965

Token 647: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2966575026512146
    2. 'n' → logprob: -1.4216575622558594
    3. '(n' → logprob: -4.671657562255859
    4. '(b' → logprob: -5.796657562255859
    5. '2' → logprob: -6.796657562255859
    6. '(' → logprob: -7.796657562255859
    7. 'p' → logprob: -7.921657562255859
    8. '1' → logprob: -8.29665756225586
    9. 'F' → logprob: -8.79665756225586
    10. 'r' → logprob: -8.79665756225586

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003464532783254981
    2. '(n' → logprob: -6.378464698791504
    3. '[n' → logprob: -7.753464698791504
    4. ',n' → logprob: -8.253464698791504
    5. 'b' → logprob: -8.378464698791504
    6. ',b' → logprob: -9.003464698791504
    7. 'n' → logprob: -9.253464698791504
    8. ' ,' → logprob: -9.253464698791504
    9. 'p' → logprob: -9.753464698791504
    10. ' -' → logprob: -9.753464698791504

Token 649: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44199928641319275
    2. 'p' → logprob: -1.4419993162155151
    3. 'b' → logprob: -2.3169991970062256
    4. ' n' → logprob: -4.441999435424805
    5. '1' → logprob: -5.941999435424805
    6. 'a' → logprob: -6.066999435424805
    7. ' p' → logprob: -6.566999435424805
    8. 'k' → logprob: -6.691999435424805
    9. ' b' → logprob: -7.191999435424805
    10. '2' → logprob: -7.816999435424805

Token 650: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4297207295894623
    2. ')
' → logprob: -1.0547207593917847
    3. '+' → logprob: -7.304720878601074
    4. ' +' → logprob: -9.304720878601074
    5. '-' → logprob: -9.804720878601074
    6. ')

' → logprob: -10.054720878601074
    7. ' )
' → logprob: -10.429720878601074
    8. ' -' → logprob: -10.554720878601074
    9. ')
' → logprob: -10.554720878601074
    10. ' )' → logprob: -10.679720878601074

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012797261297237128
    2. 'if' → logprob: -9.125127792358398
    3. ' if' → logprob: -11.500127792358398
    4. '    
' → logprob: -12.250127792358398
    5. '<|end|>' → logprob: -13.250127792358398
    6. 'def' → logprob: -14.000127792358398
    7. '
' → logprob: -14.250127792358398
    8. 'return' → logprob: -14.375127792358398
    9. '  
' → logprob: -17.5001277923584
    10. 'q' → logprob: -17.6251277923584

Token 652: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002780981594696641
    2. 'return' → logprob: -6.002780914306641
    3. 'res' → logprob: -9.25278091430664
    4. '   ' → logprob: -9.62778091430664
    5. 'result' → logprob: -9.87778091430664
    6. ' if' → logprob: -10.25278091430664
    7. 'term' → logprob: -10.62778091430664
    8. 'ans' → logprob: -11.62778091430664
    9. 's' → logprob: -12.00278091430664
    10. 'x' → logprob: -12.62778091430664

Token 653: ' r' (ID: 428)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7044100761413574
    2. ' q' → logprob: -0.7044100761413574
    3. 'r' → logprob: -5.329410076141357
    4. ' r' → logprob: -5.579410076141357
    5. ' p' → logprob: -6.704410076141357
    6. 'p' → logprob: -6.829410076141357
    7. ' k' → logprob: -9.579410552978516
    8. 'k' → logprob: -9.704410552978516
    9. ' not' → logprob: -10.079410552978516
    10. 'b' → logprob: -10.954410552978516

Token 654: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.29214832186698914
    2. ' !=' → logprob: -1.9171483516693115
    3. '<' → logprob: -2.2921483516693115
    4. ' <' → logprob: -5.292148113250732
    5. '==' → logprob: -9.04214859008789
    6. '=' → logprob: -10.16714859008789
    7. ':' → logprob: -10.29214859008789
    8. ' ==' → logprob: -11.16714859008789
    9. '>' → logprob: -11.79214859008789
    10. '!='' → logprob: -12.79214859008789

Token 655: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150413408875465
    2. ' ' → logprob: -4.018150329589844
    3. '=' → logprob: -14.768150329589844
    4. '1' → logprob: -16.018150329589844
    5. 'not' → logprob: -18.518150329589844
    6. '  ' → logprob: -19.018150329589844
    7. ':' → logprob: -19.018150329589844
    8. '>' → logprob: -19.080650329589844
    9. ' ' → logprob: -19.268150329589844
    10. ' ' → logprob: -19.268150329589844

Token 656: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '1' → logprob: -16.250295639038086
    4. 'p' → logprob: -18.125295639038086
    5. '=' → logprob: -18.500295639038086
    6. ')' → logprob: -18.750295639038086
    7. 'b' → logprob: -18.812795639038086
    8. 'q' → logprob: -18.812795639038086
    9. 'k' → logprob: -19.187795639038086
    10. 'not' → logprob: -19.187795639038086

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21273480355739594
    2. ':
' → logprob: -1.7127348184585571
    3. ' or' → logprob: -5.212734699249268
    4. ':return' → logprob: -5.712734699249268
    5. '   ' → logprob: -6.087734699249268
    6. '       ' → logprob: -8.837735176086426
    7. '):
' → logprob: -10.587735176086426
    8. ' and' → logprob: -11.087735176086426
    9. ')' → logprob: -11.462735176086426
    10. ',' → logprob: -11.837735176086426

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0650353878736496
    2. '   ' → logprob: -3.315035343170166
    3. 'return' → logprob: -3.940035343170166
    4. ' return' → logprob: -4.940035343170166
    5. '
' → logprob: -11.190035820007324
    6. '    ' → logprob: -12.440035820007324
    7. '     ' → logprob: -13.065035820007324
    8. '	return' → logprob: -13.065035820007324
    9. ':return' → logprob: -13.440035820007324
    10. '           ' → logprob: -13.565035820007324

Token 659: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0072498684749007225
    2. '   ' → logprob: -5.50724983215332
    3. ' return' → logprob: -5.75724983215332
    4. '       ' → logprob: -12.13224983215332
    5. '	return' → logprob: -14.38224983215332
    6. '
' → logprob: -15.38224983215332
    7. ' ' → logprob: -15.75724983215332
    8. '  ' → logprob: -16.38224983215332
    9. '0' → logprob: -16.50724983215332
    10. 'raise' → logprob: -17.13224983215332

Token 660: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.500627517700195
    4. '1' → logprob: -17.500627517700195
    5. '
' → logprob: -17.625627517700195
    6. 'None' → logprob: -18.750627517700195
    7. 'def' → logprob: -19.375627517700195
    8. '  ' → logprob: -19.500627517700195
    9. '00' → logprob: -19.813127517700195
    10. ' 
' → logprob: -20.063127517700195

Token 661: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'False' → logprob: -16.500001907348633
    4. 'None' → logprob: -16.875001907348633
    5. '-' → logprob: -17.250001907348633
    6. 'MOD' → logprob: -17.250001907348633
    7. '1' → logprob: -17.687501907348633
    8. 'mod' → logprob: -17.937501907348633
    9. '[' → logprob: -18.125001907348633
    10. '[]' → logprob: -18.500001907348633

Token 662: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009262301027774811
    2. '
' → logprob: -7.3759260177612305
    3. '    
' → logprob: -8.37592601776123
    4. 'if' → logprob: -10.12592601776123
    5. 'q' → logprob: -11.25092601776123
    6. '  
' → logprob: -13.00092601776123
    7. ' if' → logprob: -13.12592601776123
    8. '<|end|>' → logprob: -13.12592601776123
    9. 't' → logprob: -13.50092601776123
    10. 'n' → logprob: -13.50092601776123

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01387222670018673
    2. '
' → logprob: -4.638872146606445
    3. 'if' → logprob: -5.763872146606445
    4. '    
' → logprob: -7.638872146606445
    5. 'def' → logprob: -9.138872146606445
    6. '  
' → logprob: -9.513872146606445
    7. ' if' → logprob: -9.513872146606445
    8. 'q' → logprob: -10.138872146606445
    9. ' ' → logprob: -10.263872146606445
    10. '<|end|>' → logprob: -10.513872146606445

Token 664: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8944107890129089
    2. 'return' (adapté à ' return') → logprob: -1.0194108486175537
    3. 'res' → logprob: -1.7694108486175537
    4. 'term' → logprob: -4.519410610198975
    5. 'ans' → logprob: -4.644410610198975
    6. 'result' → logprob: -4.769410610198975
    7. 'c' → logprob: -4.769410610198975
    8. 't' → logprob: -5.269410610198975
    9. 'x' → logprob: -5.769410610198975
    10. 'a' → logprob: -6.019410610198975

Token 665: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0010735384421423078
    2. ' F' → logprob: -6.876073360443115
    3. '(F' → logprob: -10.626073837280273
    4. '(-' → logprob: -11.501073837280273
    5. '(' → logprob: -12.751073837280273
    6. 'pow' → logprob: -13.251073837280273
    7. ' (' → logprob: -14.876073837280273
    8. 'p' → logprob: -15.251073837280273
    9. 'sum' → logprob: -15.251073837280273
    10. '((-' → logprob: -15.626073837280273

Token 666: '.C' (ID: 2010)
  Prédit: '.H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.H' → logprob: -0.6107458472251892
    2. '.P' → logprob: -1.360745906829834
    3. '.C' → logprob: -1.610745906829834
    4. 'C' → logprob: -7.735745906829834
    5. 'P' → logprob: -8.860745429992676
    6. ' .' → logprob: -9.360745429992676
    7. 'H' → logprob: -9.860745429992676
    8. 'factor' → logprob: -10.110745429992676
    9. '.' → logprob: -10.485745429992676
    10. '.factor' → logprob: -10.735745429992676

Token 667: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0029611808713525534
    2. '(p' → logprob: -6.377961158752441
    3. '(q' → logprob: -6.752961158752441
    4. 'n' → logprob: -10.252961158752441
    5. '(b' → logprob: -10.252961158752441
    6. '(' → logprob: -11.002961158752441
    7. '((' → logprob: -13.752961158752441
    8. '(
' → logprob: -14.002961158752441
    9. '(k' → logprob: -14.127961158752441
    10. 'p' → logprob: -15.877961158752441

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05344497039914131
    2. '+' → logprob: -4.178444862365723
    3. 'q' → logprob: -4.303444862365723
    4. ',q' → logprob: -4.803444862365723
    5. '-' → logprob: -5.553444862365723
    6. ' q' → logprob: -5.928444862365723
    7. ' +' → logprob: -6.053444862365723
    8. ' -' → logprob: -6.553444862365723
    9. ' ,' → logprob: -6.803444862365723
    10. 'p' → logprob: -6.928444862365723

Token 669: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0014235681155696511
    2. ' q' → logprob: -6.876423358917236
    3. 'p' → logprob: -8.501423835754395
    4. 'b' → logprob: -8.751423835754395
    5. '
' → logprob: -10.626423835754395
    6. 'n' → logprob: -13.001423835754395
    7. ' b' → logprob: -14.126423835754395
    8. ' p' → logprob: -14.376423835754395
    9. 'k' → logprob: -14.501423835754395
    10. '(q' → logprob: -15.501423835754395

Token 670: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013461847556754947
    2. '+' → logprob: -7.126346111297607
    3. ' +' → logprob: -8.001346588134766
    4. '*' → logprob: -10.001346588134766
    5. ' -' → logprob: -10.376346588134766
    6. '-' → logprob: -10.376346588134766
    7. '*q' → logprob: -10.626346588134766
    8. '+b' → logprob: -10.751346588134766
    9. ')*' → logprob: -11.251346588134766
    10. 'q' → logprob: -11.751346588134766

Token 671: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.013108229264616966
    2. '*' → logprob: -5.138108253479004
    3. '<|end|>' → logprob: -5.388108253479004
    4. 'def' → logprob: -6.138108253479004
    5. '#' → logprob: -8.138108253479004
    6. '<|end|>' → logprob: -10.638108253479004
    7. '```' → logprob: -11.138108253479004
    8. '%' → logprob: -11.263108253479004
    9. '   ' → logprob: -11.638108253479004
    10. '...' → logprob: -11.638108253479004

Token 672: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0024635253939777613
    2. ' F' → logprob: -6.127463340759277
    3. 'pow' → logprob: -8.752463340759277
    4. '(F' → logprob: -9.627463340759277
    5. '(' → logprob: -10.252463340759277
    6. ' (' → logprob: -12.002463340759277
    7. ' pow' → logprob: -12.502463340759277
    8. ' ' → logprob: -13.502463340759277
    9. '   ' → logprob: -13.752463340759277
    10. '((' → logprob: -13.752463340759277

Token 673: '.C' (ID: 2010)
  Prédit: '.P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.P' → logprob: -0.5773774981498718
    2. '.H' → logprob: -0.8273774981498718
    3. '.C' → logprob: -6.7023773193359375
    4. 'H' → logprob: -9.452377319335938
    5. 'P' → logprob: -10.202377319335938
    6. '.I' → logprob: -10.702377319335938
    7. '.h' → logprob: -11.327377319335938
    8. '.' → logprob: -11.452377319335938
    9. '.F' → logprob: -11.452377319335938
    10. ' .' → logprob: -11.577377319335938

Token 674: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1894911229610443
    2. '(b' → logprob: -2.314491033554077
    3. '(q' → logprob: -2.939491033554077
    4. '(p' → logprob: -3.939491033554077
    5. '(k' → logprob: -6.939491271972656
    6. '(m' → logprob: -8.314491271972656
    7. '(' → logprob: -8.939491271972656
    8. '((' → logprob: -10.689491271972656
    9. '(r' → logprob: -10.814491271972656
    10. '(
' → logprob: -11.064491271972656

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048461537808179855
    2. '(b' → logprob: -3.923461437225342
    3. '(q' → logprob: -4.798461437225342
    4. '(p' → logprob: -5.048461437225342
    5. '(n' → logprob: -5.298461437225342
    6. ',b' → logprob: -5.673461437225342
    7. ',q' → logprob: -6.923461437225342
    8. '(k' → logprob: -6.923461437225342
    9. ',p' → logprob: -7.548461437225342
    10. 'b' → logprob: -7.548461437225342

Token 676: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004057978745549917
    2. 'b' → logprob: -6.004057884216309
    3. ' q' → logprob: -7.254057884216309
    4. 'p' → logprob: -7.379057884216309
    5. 'n' → logprob: -9.004057884216309
    6. 'k' → logprob: -9.254057884216309
    7. ' ' → logprob: -11.379057884216309
    8. '   ' → logprob: -11.879057884216309
    9. ' b' → logprob: -12.504057884216309
    10. 'r' → logprob: -13.254057884216309

Token 677: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4164144694805145
    2. ')' → logprob: -1.166414499282837
    3. '-' → logprob: -3.916414499282837
    4. ' -' → logprob: -5.041414260864258
    5. '(n' → logprob: -6.166414260864258
    6. '-k' → logprob: -9.166414260864258
    7. ' ,' → logprob: -9.291414260864258
    8. ',n' → logprob: -9.666414260864258
    9. '(p' → logprob: -9.916414260864258
    10. '(' → logprob: -10.416414260864258

Token 678: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10593331605195999
    2. '%' → logprob: -2.355933427810669
    3. ' *' → logprob: -5.60593318939209
    4. '<|end|>' → logprob: -7.10593318939209
    5. ')' → logprob: -7.60593318939209
    6. ' ' → logprob: -8.23093318939209
    7. 'def' → logprob: -8.23093318939209
    8. ',' → logprob: -10.35593318939209
    9. ' def' → logprob: -10.48093318939209
    10. ' ' → logprob: -10.60593318939209

Token 679: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.999452772201039e-05
    2. '998' → logprob: -10.875029563903809
    3. 'F' → logprob: -11.625029563903809
    4. ' MOD' → logprob: -13.125029563903809
    5. 'MO' → logprob: -17.125030517578125
    6. '.MOD' → logprob: -17.625030517578125
    7. '_MOD' → logprob: -17.750030517578125
    8. 'MODE' → logprob: -18.250030517578125
    9. '999' → logprob: -18.375030517578125
    10. 'Mod' → logprob: -19.000030517578125

Token 680: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 681: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12728650867938995
    2. ' main' → logprob: -2.252286434173584
    3. 'compute' → logprob: -4.877286434173584
    4. 'input' → logprob: -6.127286434173584
    5. 'solve' → logprob: -6.377286434173584
    6. ' compute' → logprob: -7.252286434173584
    7. '__' → logprob: -7.627286434173584
    8. 'def' → logprob: -8.002286911010742
    9. ' solve' → logprob: -8.502286911010742
    10. ' input' → logprob: -8.627286911010742

Token 683: '_s' (ID: 1278)
  Prédit: '_term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.05874631926417351
    2. 'def' → logprob: -3.433746337890625
    3. 'term' → logprob: -4.058746337890625
    4. '_terms' → logprob: -5.808746337890625
    5. '(' → logprob: -6.433746337890625
    6. '(F' → logprob: -7.308746337890625
    7. '_factor' → logprob: -7.433746337890625
    8. '(n' → logprob: -7.933746337890625
    9. 'Term' → logprob: -8.183746337890625
    10. '_result' → logprob: -8.433746337890625

Token 684: 'umm' (ID: 2177)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.035076841711997986
    2. 'olution' → logprob: -3.535076856613159
    3. 'olutions' → logprob: -6.41007661819458
    4. 'olve' → logprob: -6.78507661819458
    5. 'eries' → logprob: -7.03507661819458
    6. 'umm' → logprob: -7.78507661819458
    7. 'ub' → logprob: -8.035077095031738
    8. 'ums' → logprob: -8.410077095031738
    9. 'ummary' → logprob: -8.910077095031738
    10. ' um' → logprob: -9.410077095031738

Token 685: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -9.253090865968261e-06
    2. 'a' → logprob: -12.625009536743164
    3. 'ate' → logprob: -12.750009536743164
    4. 'ary' → logprob: -13.625009536743164
    5. 'and' → logprob: -13.625009536743164
    6. 'ations' → logprob: -14.875009536743164
    7. 'atory' → logprob: -15.500009536743164
    8. 'ar' → logprob: -17.750009536743164
    9. 'on' → logprob: -17.875009536743164
    10. 'ator' → logprob: -18.250009536743164

Token 686: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.0004343645414337516
    2. '(' → logprob: -7.875434398651123
    3. '(n' → logprob: -10.750433921813965
    4. 'def' → logprob: -10.750433921813965
    5. '(
' → logprob: -12.125433921813965
    6. '():' → logprob: -13.500433921813965
    7. '(N' → logprob: -13.625433921813965
    8. '(def' → logprob: -14.125433921813965
    9. ' (' → logprob: -14.250433921813965
    10. '(M' → logprob: -14.500433921813965

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ',n' → logprob: -9.875065803527832
    3. ' ,' → logprob: -11.500065803527832
    4. '(n' → logprob: -12.750065803527832
    5. ',N' → logprob: -14.000065803527832
    6. ',F' → logprob: -15.750065803527832
    7. '(' → logprob: -16.12506675720215
    8. '(N' → logprob: -16.62506675720215
    9. ',
' → logprob: -17.25006675720215
    10. 'def' → logprob: -17.62506675720215

Token 688: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018180029466748238
    2. ' n' → logprob: -4.018179893493652
    3. 'N' → logprob: -11.518179893493652
    4. ')' → logprob: -11.893179893493652
    5. ')n' → logprob: -12.893179893493652
    6. ',' → logprob: -13.018179893493652
    7. 'k' → logprob: -13.268179893493652
    8. '(n' → logprob: -13.643179893493652
    9. ',n' → logprob: -13.768179893493652
    10. '	n' → logprob: -14.393179893493652

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ' ,' → logprob: -10.500060081481934
    3. ',p' → logprob: -11.250060081481934
    4. ',k' → logprob: -12.250060081481934
    5. 'p' → logprob: -12.500060081481934
    6. '):
' → logprob: -12.875060081481934
    7. ',
' → logprob: -13.375060081481934
    8. ',n' → logprob: -13.625060081481934
    9. '):' → logprob: -14.125060081481934
    10. ',b' → logprob: -14.125060081481934

Token 690: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.293605238199234
    2. 'k' → logprob: -1.4186052083969116
    3. 'p' → logprob: -4.543605327606201
    4. 'n' → logprob: -6.543605327606201
    5. ' b' → logprob: -8.793604850769043
    6. ' k' → logprob: -10.293604850769043
    7. 'm' → logprob: -10.418604850769043
    8. '```' → logprob: -11.043604850769043
    9. 'max' → logprob: -11.293604850769043
    10. 'M' → logprob: -11.293604850769043

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011712945997714996
    2. ',b' → logprob: -7.751171112060547
    3. ',k' → logprob: -7.751171112060547
    4. 'b' → logprob: -9.001171112060547
    5. '):
' → logprob: -9.876171112060547
    6. 'k' → logprob: -10.001171112060547
    7. ' ,' → logprob: -10.001171112060547
    8. ',p' → logprob: -12.126171112060547
    9. 'def' → logprob: -12.126171112060547
    10. ')' → logprob: -12.126171112060547

Token 692: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001991801429539919
    2. 'k' → logprob: -6.7519917488098145
    3. 'p' → logprob: -8.251992225646973
    4. 'm' → logprob: -8.376992225646973
    5. ' b' → logprob: -8.501992225646973
    6. 'c' → logprob: -10.126992225646973
    7. 'max' → logprob: -11.501992225646973
    8. 'l' → logprob: -11.501992225646973
    9. 'M' → logprob: -11.626992225646973
    10. 'r' → logprob: -11.876992225646973

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.709308167453855e-05
    2. ',k' → logprob: -10.000086784362793
    3. '):
' → logprob: -11.250086784362793
    4. '   ' → logprob: -11.375086784362793
    5. '):' → logprob: -12.000086784362793
    6. ' ,' → logprob: -12.375086784362793
    7. 'k' → logprob: -13.125086784362793
    8. 'def' → logprob: -14.000086784362793
    9. ',p' → logprob: -14.375086784362793
    10. ',
' → logprob: -14.625086784362793

Token 694: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1368265151977539
    2. 'c' → logprob: -2.261826515197754
    3. 'm' → logprob: -4.386826515197754
    4. 'p' → logprob: -5.386826515197754
    5. 'x' → logprob: -6.511826515197754
    6. 'd' → logprob: -6.886826515197754
    7. 'max' → logprob: -6.886826515197754
    8. 'l' → logprob: -7.761826515197754
    9. 'a' → logprob: -8.011826515197754
    10. 'q' → logprob: -8.136826515197754

Token 695: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011579646728932858
    2. '):
' → logprob: -4.511579513549805
    3. ':' → logprob: -7.886579513549805
    4. ',' → logprob: -9.386579513549805
    5. '):
' → logprob: -10.261579513549805
    6. '   ' → logprob: -10.761579513549805
    7. ')' → logprob: -11.511579513549805
    8. 'def' → logprob: -12.386579513549805
    9. ':
' → logprob: -15.261579513549805
    10. '=' → logprob: -15.386579513549805

Token 696: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8983004093170166
    2. 'res' → logprob: -1.2733004093170166
    3. '   ' → logprob: -1.8983004093170166
    4. 'total' → logprob: -2.2733004093170166
    5. 's' → logprob: -3.1483004093170166
    6. 'ans' → logprob: -4.1483001708984375
    7. 'answer' → logprob: -7.8983001708984375
    8. '
' → logprob: -8.523300170898438
    9. 'sum' → logprob: -8.523300170898438
    10. 'ret' → logprob: -8.523300170898438

Token 697: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9687665700912476
    2. 'result' (adapté à ' result') → logprob: -0.9687665700912476
    3. 'total' → logprob: -1.8437665700912476
    4. 'ans' → logprob: -3.093766689300537
    5. 's' → logprob: -3.343766689300537
    6. 'answer' → logprob: -6.968766689300537
    7. '   ' → logprob: -7.843766689300537
    8. 'ret' → logprob: -8.218766212463379
    9. 'sum' → logprob: -8.968766212463379
    10. '
' → logprob: -9.093766212463379

Token 698: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. ',' → logprob: -14.974077224731445
    4. ' ' → logprob: -15.474077224731445
    5. ')' → logprob: -17.224077224731445
    6. ' =
' → logprob: -17.974077224731445
    7. '   ' → logprob: -18.099077224731445
    8. ':' → logprob: -18.724077224731445
    9. '  ' → logprob: -18.849077224731445
    10. 's' → logprob: -18.849077224731445

Token 699: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.875015258789062
    4. '```' → logprob: -18.687515258789062
    5. '1' → logprob: -19.187515258789062
    6. '۰' → logprob: -19.375015258789062
    7. 'sum' → logprob: -19.562515258789062
    8. 'def' → logprob: -19.562515258789062
    9. '
' → logprob: -19.687515258789062
    10. 'int' → logprob: -19.937515258789062

Token 700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. 'sum' → logprob: -20.5
    4. '(' → logprob: -20.75
    5. '1' → logprob: -20.875
    6. '```' → logprob: -21.0
    7. '۰' → logprob: -21.75
    8. '   ' → logprob: -21.75
    9. '[' → logprob: -21.875
    10. '０' → logprob: -22.125

Token 701: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00346049084328115
    2. 'for' → logprob: -5.87846040725708
    3. '
' → logprob: -7.87846040725708
    4. ' for' → logprob: -8.253460884094238
    5. '	for' → logprob: -11.753460884094238
    6. '    
' → logprob: -12.003460884094238
    7. '  ' → logprob: -14.003460884094238
    8. 'def' → logprob: -14.378460884094238
    9. ',' → logprob: -15.378460884094238
    10. '   
' → logprob: -15.753460884094238

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014196067117154598
    2. 'for' → logprob: -4.264195919036865
    3. ' for' → logprob: -10.389196395874023
    4. 'def' → logprob: -14.514196395874023
    5. '
' → logprob: -14.639196395874023
    6. '```' → logprob: -14.764196395874023
    7. '	for' → logprob: -15.139196395874023
    8. '    
' → logprob: -15.514196395874023
    9. 'from' → logprob: -17.764196395874023
    10. '  ' → logprob: -17.764196395874023

Token 703: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007662679417990148
    2. 'p' → logprob: -7.625766277313232
    3. 'max' (adapté à ' max') → logprob: -8.375765800476074
    4. '   ' → logprob: -10.875765800476074
    5. ' for' → logprob: -11.000765800476074
    6. '    
' → logprob: -12.750765800476074
    7. 'limit' → logprob: -12.875765800476074
    8. 'min' → logprob: -13.500765800476074
    9. '```' → logprob: -13.750765800476074
    10. '
' → logprob: -13.875765800476074

Token 704: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.3679063320159912
    2. 'p' → logprob: -1.2429063320159912
    3. 'a' → logprob: -4.74290657043457
    4. '_a' → logprob: -4.99290657043457
    5. 'i' → logprob: -6.36790657043457
    6. '_i' → logprob: -6.61790657043457
    7. 'x' → logprob: -8.86790657043457
    8. '_val' → logprob: -9.61790657043457
    9. '```' → logprob: -9.86790657043457
    10. '_x' → logprob: -10.24290657043457

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022787988185883
    2. ' =' → logprob: -1.91022789478302
    3. ',' → logprob: -13.41022777557373
    4. '=n' → logprob: -13.66022777557373
    5. 'n' → logprob: -15.41022777557373
    6. '=int' → logprob: -16.035228729248047
    7. ')' → logprob: -16.410228729248047
    8. '=max' → logprob: -16.410228729248047
    9. '=
' → logprob: -16.410228729248047
    10. '_=' → logprob: -16.535228729248047

Token 706: ' k' (ID: 372)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8487164378166199
    2. 'k' → logprob: -1.0987164974212646
    3. 'n' → logprob: -1.4737164974212646
    4. 'a' → logprob: -5.2237162590026855
    5. ' min' → logprob: -6.0987162590026855
    6. '(min' → logprob: -6.8487162590026855
    7. '(n' → logprob: -8.223716735839844
    8. ' n' → logprob: -8.473716735839844
    9. '(k' → logprob: -8.473716735839844
    10. '(a' → logprob: -8.973716735839844

Token 707: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25257566571235657
    2. '//' → logprob: -1.5025756359100342
    3. '
' → logprob: -7.752575874328613
    4. '#' → logprob: -9.002575874328613
    5. '   ' → logprob: -9.877575874328613
    6. 'b' → logprob: -10.877575874328613
    7. ' #' → logprob: -11.877575874328613
    8. ' ' → logprob: -12.252575874328613
    9. 'a' → logprob: -12.752575874328613
    10. 'def' → logprob: -13.877575874328613

Token 708: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.693156361579895
    2. 'b' → logprob: -0.693156361579895
    3. ' a' → logprob: -12.318156242370605
    4. ' b' → logprob: -12.818156242370605
    5. '(a' → logprob: -13.943156242370605
    6. 'n' → logprob: -14.943156242370605
    7. '(b' → logprob: -15.693156242370605
    8. '	a' → logprob: -16.193157196044922
    9. '	b' → logprob: -16.318157196044922
    10. '   ' → logprob: -16.568157196044922

Token 709: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01990227773785591
    2. '+' → logprob: -5.019902229309082
    3. '
' → logprob: -5.144902229309082
    4. 'for' → logprob: -5.394902229309082
    5. ' +' → logprob: -6.644902229309082
    6. ' for' → logprob: -6.769902229309082
    7. '    
' → logprob: -8.894902229309082
    8. 'def' → logprob: -9.519902229309082
    9. 'p' → logprob: -11.144902229309082
    10. ',' → logprob: -11.394902229309082

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02733388915657997
    2. 'for' → logprob: -3.777333974838257
    3. '
' → logprob: -6.152333736419678
    4. ' for' → logprob: -6.277333736419678
    5. '    
' → logprob: -9.902334213256836
    6. '	for' → logprob: -11.152334213256836
    7. '  ' → logprob: -13.027334213256836
    8. '```' → logprob: -13.027334213256836
    9. 'p' → logprob: -13.152334213256836
    10. '  
' → logprob: -14.152334213256836

Token 711: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008654518984258175
    2. '   ' → logprob: -4.758654594421387
    3. ' for' → logprob: -10.383654594421387
    4. 'p' → logprob: -12.633654594421387
    5. '```' → logprob: -12.758654594421387
    6. '	for' → logprob: -13.508654594421387
    7. '
' → logprob: -13.633654594421387
    8. '    
' → logprob: -16.63365364074707
    9. '``' → logprob: -16.75865364074707
    10. ' ' → logprob: -17.13365364074707

Token 712: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.626928329467773
    4. '_p' → logprob: -18.376928329467773
    5. '	p' → logprob: -18.501928329467773
    6. ' ' → logprob: -20.501928329467773
    7. '<p' → logprob: -20.876928329467773
    8. '```' → logprob: -21.001928329467773
    9. ''p' → logprob: -22.251928329467773
    10. '  ' → logprob: -22.376928329467773

Token 713: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02630552463233471
    2. 'in' → logprob: -3.6513054370880127
    3. ' ' → logprob: -13.526305198669434
    4. 'p' → logprob: -14.151305198669434
    5. 'import' → logprob: -14.526305198669434
    6. '	in' → logprob: -14.526305198669434
    7. 'n' → logprob: -15.026305198669434
    8. '=' → logprob: -15.151305198669434
    9. ' p' → logprob: -15.276305198669434
    10. ',' → logprob: -15.276305198669434

Token 714: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048590436577796936
    2. ' range' → logprob: -3.0485904216766357
    3. 'max' → logprob: -13.048590660095215
    4. '0' → logprob: -14.548590660095215
    5. ' ' → logprob: -14.923590660095215
    6. ' max' → logprob: -16.0485897064209
    7. '   ' → logprob: -17.6735897064209
    8. '(range' → logprob: -17.6735897064209
    9. ' in' → logprob: -17.7985897064209
    10. '
' → logprob: -18.0485897064209

Token 715: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0003582263889256865
    2. '(' → logprob: -8.250358581542969
    3. 'max' → logprob: -9.250358581542969
    4. ' max' → logprob: -14.375358581542969
    5. ' (' → logprob: -15.875358581542969
    6. '(
' → logprob: -16.87535858154297
    7. '(min' → logprob: -17.87535858154297
    8. '   ' → logprob: -17.87535858154297
    9. '=max' → logprob: -17.87535858154297
    10. '0' → logprob: -18.00035858154297

Token 716: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.56233171664644e-05
    2. '+' → logprob: -10.000055313110352
    3. 'p' → logprob: -13.125055313110352
    4. '   ' → logprob: -13.625055313110352
    5. '(p' → logprob: -14.000055313110352
    6. ')' → logprob: -14.125055313110352
    7. '_' → logprob: -14.250055313110352
    8. '(' → logprob: -14.250055313110352
    9. ' +' → logprob: -14.375055313110352
    10. '+p' → logprob: -14.625055313110352

Token 717: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16024179756641388
    2. ' +' → logprob: -1.9102418422698975
    3. '   ' → logprob: -11.660242080688477
    4. '+
' → logprob: -12.535242080688477
    5. ',' → logprob: -13.285242080688477
    6. '):
' → logprob: -13.785242080688477
    7. ' +
' → logprob: -14.035242080688477
    8. '=' → logprob: -15.160242080688477
    9. '):' → logprob: -15.160242080688477
    10. ' ' → logprob: -15.285242080688477

Token 718: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.00002670288086
    4. '(' → logprob: -19.62502670288086
    5. '```' → logprob: -20.37502670288086
    6. '2' → logprob: -20.75002670288086
    7. '
' → logprob: -20.75002670288086
    8. '１' → logprob: -20.87502670288086
    9. '0' → logprob: -21.43752670288086
    10. '  ' → logprob: -22.31252670288086

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '(' → logprob: -20.125001907348633
    5. '2' → logprob: -21.375001907348633
    6. '```' → logprob: -21.500001907348633
    7. '
' → logprob: -21.625001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '{' → logprob: -21.937501907348633
    10. '１' → logprob: -22.187501907348633

Token 720: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2519792318344116
    2. '):' → logprob: -1.5019792318344116
    3. '):
' → logprob: -10.751978874206543
    4. '():
' → logprob: -11.251978874206543
    5. '   ' → logprob: -12.126978874206543
    6. ':' → logprob: -12.251978874206543
    7. '():' → logprob: -13.126978874206543
    8. ' ):
' → logprob: -13.626978874206543
    9. ' ):' → logprob: -14.126978874206543
    10. '()):
' → logprob: -14.126978874206543

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005640551447868347
    2. 'result' → logprob: -5.505640506744385
    3. '   ' → logprob: -7.130640506744385
    4. ' result' → logprob: -7.630640506744385
    5. '<|end|>' → logprob: -8.880640983581543
    6. '
' → logprob: -10.755640983581543
    7. '```' → logprob: -11.005640983581543
    8. '        
' → logprob: -11.005640983581543
    9. '[result' → logprob: -11.505640983581543
    10. '(result' → logprob: -11.630640983581543

Token 722: ' current' (ID: 2208)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7778278589248657
    2. 'q' → logprob: -0.9028278589248657
    3. '       ' → logprob: -2.402827739715576
    4. 'r' → logprob: -3.277827739715576
    5. ' result' → logprob: -5.777827739715576
    6. ' q' → logprob: -6.527827739715576
    7. 'if' → logprob: -7.402827739715576
    8. 'res' → logprob: -7.527827739715576
    9. '   ' → logprob: -8.402828216552734
    10. '           ' → logprob: -8.402828216552734

Token 723: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5377210974693298
    2. ' =' → logprob: -1.0377211570739746
    3. '_term' → logprob: -3.2877211570739746
    4. '+=' → logprob: -4.162721157073975
    5. ' +=' → logprob: -5.162721157073975
    6. '_result' → logprob: -6.537721157073975
    7. '_val' → logprob: -7.287721157073975
    8. '_value' → logprob: -8.412720680236816
    9. 'result' → logprob: -9.037720680236816
    10. 'term' → logprob: -9.287720680236816

Token 724: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0015023599844425917
    2. ' compute' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.501502990722656
    4. '(com' → logprob: -18.501502990722656
    5. 'calculate' → logprob: -18.751502990722656
    6. '
' → logprob: -18.876502990722656
    7. '.compute' → logprob: -19.501502990722656
    8. ' ' → logprob: -19.751502990722656
    9. ' (' → logprob: -19.876502990722656
    10. 'computed' → logprob: -19.876502990722656

Token 725: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.00024013224174268544
    2. '_s' → logprob: -8.375240325927734
    3. 'term' → logprob: -12.375240325927734
    4. '_result' → logprob: -13.500240325927734
    5. '_' → logprob: -13.875240325927734
    6. 's' → logprob: -14.375240325927734
    7. '_terms' → logprob: -14.625240325927734
    8. '_sum' → logprob: -14.625240325927734
    9. '(term' → logprob: -14.875240325927734
    10. 'Term' → logprob: -15.125240325927734

Token 726: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.625008583068848
    3. '(
' → logprob: -16.875009536743164
    4. ' (' → logprob: -17.750009536743164
    5. 'F' → logprob: -19.500009536743164
    6. '```' → logprob: -19.500009536743164
    7. '\(' → logprob: -19.875009536743164
    8. '(f' → logprob: -20.250009536743164
    9. '((' → logprob: -21.000009536743164
    10. '(

' → logprob: -21.125009536743164

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021967552602291107
    2. '(F' → logprob: -4.02196741104126
    3. '(n' → logprob: -6.39696741104126
    4. '(' → logprob: -6.77196741104126
    5. ',n' → logprob: -7.64696741104126
    6. ',F' → logprob: -7.89696741104126
    7. ' ,' → logprob: -9.021967887878418
    8. ' (' → logprob: -11.646967887878418
    9. ',(' → logprob: -11.896967887878418
    10. ')' → logprob: -12.646967887878418

Token 728: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078639671206474
    2. ' n' → logprob: -5.5040788650512695
    3. '<|end|>' → logprob: -16.254077911376953
    4. '	n' → logprob: -16.379077911376953
    5. ')n' → logprob: -17.254077911376953
    6. '(n' → logprob: -17.629077911376953
    7. '
' → logprob: -18.004077911376953
    8. ',n' → logprob: -18.879077911376953
    9. '_n' → logprob: -19.629077911376953
    10. '[n' → logprob: -19.879077911376953

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001294030516874045
    2. ',n' → logprob: -9.500129699707031
    3. ',p' → logprob: -10.125129699707031
    4. ' ,' → logprob: -11.250129699707031
    5. ',
' → logprob: -14.750129699707031
    6. 'p' → logprob: -14.875129699707031
    7. ',k' → logprob: -16.00012969970703
    8. '(n' → logprob: -16.25012969970703
    9. '```' → logprob: -16.25012969970703
    10. '   ' → logprob: -16.62512969970703

Token 730: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0029085350688546896
    2. ' p' → logprob: -6.002908706665039
    3. 'n' → logprob: -7.752908706665039
    4. ' n' → logprob: -12.752908706665039
    5. ' ' → logprob: -15.877908706665039
    6. ',p' → logprob: -16.62790870666504
    7. '   ' → logprob: -16.75290870666504
    8. '
' → logprob: -17.25290870666504
    9. '(p' → logprob: -17.37790870666504
    10. '	p' → logprob: -17.75290870666504

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00428793067112565
    2. ',a' → logprob: -5.5042877197265625
    3. 'a' → logprob: -9.004287719726562
    4. ' ,' → logprob: -9.629287719726562
    5. ',b' → logprob: -11.254287719726562
    6. ',n' → logprob: -12.254287719726562
    7. 'b' → logprob: -14.004287719726562
    8. ',p' → logprob: -14.004287719726562
    9. ' a' → logprob: -15.129287719726562
    10. ',
' → logprob: -15.379287719726562

Token 732: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.44443862256594e-05
    2. ' b' → logprob: -10.000064849853516
    3. 'a' → logprob: -10.875064849853516
    4. '	b' → logprob: -19.375064849853516
    5. ' a' → logprob: -19.625064849853516
    6. '   ' → logprob: -20.250064849853516
    7. ' ' → logprob: -20.375064849853516
    8. ')b' → logprob: -21.500064849853516
    9. '  ' → logprob: -22.125064849853516
    10. '
' → logprob: -22.125064849853516

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07467571645975113
    2. ')' → logprob: -2.6996757984161377
    3. ',a' → logprob: -6.324675559997559
    4. ',b' → logprob: -6.574675559997559
    5. ')
' → logprob: -7.074675559997559
    6. ')a' → logprob: -8.449675559997559
    7. 'a' → logprob: -8.824675559997559
    8. ')b' → logprob: -9.074675559997559
    9. '   ' → logprob: -9.824675559997559
    10. ' ,' → logprob: -9.824675559997559

Token 734: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.7697225252486533e-06
    2. ' k' → logprob: -12.500003814697266
    3. '
' → logprob: -16.875003814697266
    4. ')' → logprob: -18.000003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '	k' → logprob: -19.500003814697266
    7. '```' → logprob: -19.625003814697266
    8. 'a' → logprob: -19.875003814697266
    9. ' ' → logprob: -20.250003814697266
    10. ',k' → logprob: -20.375003814697266

Token 735: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02334272861480713
    2. ')' → logprob: -3.7733426094055176
    3. ')
' → logprob: -9.648343086242676
    4. '       ' → logprob: -10.398343086242676
    5. '   ' → logprob: -13.523343086242676
    6. ' )
' → logprob: -14.898343086242676
    7. ')`
' → logprob: -15.398343086242676
    8. ')

' → logprob: -15.648343086242676
    9. ' ' → logprob: -16.89834213256836
    10. 'if' → logprob: -18.27334213256836

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00312650203704834
    2. '
' → logprob: -6.753126621246338
    3. 'result' → logprob: -7.753126621246338
    4. '<|end|>' → logprob: -7.753126621246338
    5. '+' → logprob: -8.12812614440918
    6. '        
' → logprob: -8.37812614440918
    7. '   ' → logprob: -8.50312614440918
    8. ' if' → logprob: -9.00312614440918
    9. 'if' → logprob: -9.12812614440918
    10. '```' → logprob: -10.25312614440918

Token 737: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.019091879948973656
    2. '       ' → logprob: -4.019092082977295
    3. ' result' → logprob: -7.644092082977295
    4. 'if' → logprob: -7.769092082977295
    5. '   ' → logprob: -10.269091606140137
    6. ' if' → logprob: -13.269091606140137
    7. '
' → logprob: -13.644091606140137
    8. '	result' → logprob: -13.894091606140137
    9. '```' → logprob: -14.644091606140137
    10. '(result' → logprob: -14.769091606140137

Token 738: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023645244538784027
    2. ' +=' → logprob: -4.023645401000977
    3. '=' → logprob: -5.273645401000977
    4. ' =' → logprob: -8.023645401000977
    5. '   ' → logprob: -11.273645401000977
    6. '%=' → logprob: -11.523645401000977
    7. '+' → logprob: -13.023645401000977
    8. '+=(' → logprob: -13.648645401000977
    9. '```' → logprob: -14.523645401000977
    10. '=(' → logprob: -14.773645401000977

Token 739: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015092701651155949
    2. ' (' → logprob: -6.501509189605713
    3. '(res' → logprob: -12.876509666442871
    4. '(results' → logprob: -13.251509666442871
    5. '(response' → logprob: -14.126509666442871
    6. '(' → logprob: -14.376509666442871
    7. '(value' → logprob: -15.376509666442871
    8. '(current' → logprob: -15.501509666442871
    9. '(request' → logprob: -15.751509666442871
    10. '(output' → logprob: -16.126508712768555

Token 740: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -7.672236824873835e-05
    2. '(result' → logprob: -9.500076293945312
    3. ' result' → logprob: -13.250076293945312
    4. '[result' → logprob: -17.875076293945312
    5. '=result' → logprob: -19.375076293945312
    6. '$result' → logprob: -20.375076293945312
    7. '	result' → logprob: -20.375076293945312
    8. '   ' → logprob: -21.000076293945312
    9. '.result' → logprob: -21.375076293945312
    10. '
' → logprob: -21.500076293945312

Token 741: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759395956993103
    2. ' +' → logprob: -0.8259395956993103
    3. 'result' → logprob: -15.700939178466797
    4. '[result' → logprob: -17.325939178466797
    5. '+c' → logprob: -18.325939178466797
    6. '+p' → logprob: -18.575939178466797
    7. '＋' → logprob: -18.575939178466797
    8. '(result' → logprob: -19.075939178466797
    9. '+
' → logprob: -19.075939178466797
    10. '+r' → logprob: -19.200939178466797

Token 742: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011047814972698689
    2. ' current' → logprob: -4.511047840118408
    3. '(current' → logprob: -17.38604736328125
    4. '
' → logprob: -17.76104736328125
    5. '   ' → logprob: -17.76104736328125
    6. '	current' → logprob: -18.51104736328125
    7. 'urrent' → logprob: -18.76104736328125
    8. 'cur' → logprob: -19.01104736328125
    9. '.current' → logprob: -19.13604736328125
    10. '$current' → logprob: -19.63604736328125

Token 743: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -11.875009536743164
    3. ')%' → logprob: -13.000009536743164
    4. '   ' → logprob: -15.750009536743164
    5. '%' → logprob: -17.250009536743164
    6. ')
' → logprob: -17.500009536743164
    7. '```' → logprob: -18.375009536743164
    8. '       ' → logprob: -19.000009536743164
    9. '
' → logprob: -19.875009536743164
    10. '）' → logprob: -20.000009536743164

Token 744: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.061976756900548935
    2. '%' → logprob: -2.811976671218872
    3. '
' → logprob: -11.936976432800293
    4. ')' → logprob: -13.561976432800293
    5. ' ' → logprob: -15.061976432800293
    6. 'result' → logprob: -15.436976432800293
    7. ' result' → logprob: -15.561976432800293
    8. ' %=' → logprob: -16.18697738647461
    9. '%s' → logprob: -16.56197738647461
    10. ' ' → logprob: -16.68697738647461

Token 745: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.981667537620524e-06
    2. '998' → logprob: -13.250001907348633
    3. ' MOD' → logprob: -16.000001907348633
    4. '_MOD' → logprob: -20.250001907348633
    5. '.MOD' → logprob: -21.000001907348633
    6. '999' → logprob: -21.375001907348633
    7. 'MODE' → logprob: -22.625001907348633
    8. 'MO' → logprob: -22.875001907348633
    9. 'Mod' → logprob: -23.500001907348633
    10. 'MD' → logprob: -24.125001907348633

Token 746: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005491891410201788
    2. '
' → logprob: -5.630491733551025
    3. 'return' → logprob: -7.130491733551025
    4. ' return' → logprob: -7.755491733551025
    5. '    
' → logprob: -8.005492210388184
    6. '<|end|>' → logprob: -8.505492210388184
    7. '	return' → logprob: -9.380492210388184
    8. '  
' → logprob: -11.380492210388184
    9. '```' → logprob: -12.630492210388184
    10. ' 
' → logprob: -12.630492210388184

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04870716482400894
    2. 'return' → logprob: -3.0487072467803955
    3. ' return' → logprob: -9.173707008361816
    4. '```' → logprob: -11.798707008361816
    5. '
' → logprob: -12.423707008361816
    6. '	return' → logprob: -12.798707008361816
    7. ' ' → logprob: -14.423707008361816
    8. '       ' → logprob: -14.923707008361816
    9. '  ' → logprob: -15.798707008361816
    10. '    
' → logprob: -16.048707962036133

Token 748: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4745018780231476
    2. '   ' → logprob: -0.9745018482208252
    3. ' return' → logprob: -7.849502086639404
    4. '	return' → logprob: -10.474501609802246
    5. '```' → logprob: -12.599501609802246
    6. '
' → logprob: -13.599501609802246
    7. '       ' → logprob: -13.974501609802246
    8. ':return' → logprob: -15.599501609802246
    9. ' ' → logprob: -15.724501609802246
    10. '  ' → logprob: -15.849501609802246

Token 749: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -3.547789674485102e-05
    2. ' result' → logprob: -10.250035285949707
    3. '(result' → logprob: -18.375036239624023
    4. '
' → logprob: -22.500036239624023
    5. '	result' → logprob: -23.375036239624023
    6. 'return' → logprob: -23.625036239624023
    7. '[result' → logprob: -23.625036239624023
    8. '```' → logprob: -24.125036239624023
    9. '$result' → logprob: -25.000036239624023
    10. '   ' → logprob: -25.125036239624023

Token 750: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.029544472694397
    2. 'def' → logprob: -1.154544472694397
    3. '<|end|>' → logprob: -1.154544472694397
    4. '```' → logprob: -4.779544353485107
    5. 'n' → logprob: -6.654544353485107
    6. ')' → logprob: -7.154544353485107
    7. 'for' → logprob: -7.154544353485107
    8. '<|end|>' → logprob: -8.404544830322266
    9. 'a' → logprob: -8.529544830322266
    10. '
' → logprob: -8.654544830322266

Token 751: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8106531500816345
    2. '<|end|>' → logprob: -0.9356531500816345
    3. '#' → logprob: -2.0606532096862793
    4. 'def' → logprob: -4.435653209686279
    5. 'a' → logprob: -4.685653209686279
    6. 'n' → logprob: -4.810653209686279
    7. 'for' → logprob: -6.685653209686279
    8. '<|end|>' → logprob: -6.935653209686279
    9. 'result' → logprob: -7.060653209686279
    10. 'print' → logprob: -7.310653209686279

Token 752: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048588622361421585
    2. ' main' → logprob: -3.048588514328003
    3. 'solve' → logprob: -13.798588752746582
    4. ' solve' → logprob: -15.798588752746582
    5. '	main' → logprob: -16.798587799072266
    6. 'compute' → logprob: -17.548587799072266
    7. 'calculate' → logprob: -18.423587799072266
    8. 'input' → logprob: -18.548587799072266
    9. 'factor' → logprob: -18.548587799072266
    10. 'run' → logprob: -18.548587799072266

Token 753: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009128939709626138
    2. '():
' → logprob: -7.000912666320801
    3. '():
' → logprob: -13.8759126663208
    4. ' ():' → logprob: -15.1259126663208
    5. '()' → logprob: -16.000913619995117
    6. '():

' → logprob: -18.250913619995117
    7. '()>' → logprob: -19.375913619995117
    8. '().' → logprob: -20.000913619995117
    9. '(' → logprob: -20.750913619995117
    10. 'def' → logprob: -21.750913619995117

Token 754: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6041886210441589
    2. '   ' → logprob: -1.1041886806488037
    3. ' n' → logprob: -2.1041886806488037
    4. '```' → logprob: -10.354188919067383
    5. '	n' → logprob: -10.979188919067383
    6. 'import' → logprob: -11.854188919067383
    7. ',n' → logprob: -14.229188919067383
    8. 'N' → logprob: -14.854188919067383
    9. ' import' → logprob: -14.979188919067383
    10. '_n' → logprob: -15.104188919067383

Token 755: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0016125775873661041
    2. '   ' → logprob: -7.126612663269043
    3. ' n' → logprob: -7.251612663269043
    4. 'N' → logprob: -9.376612663269043
    5. 'import' → logprob: -11.376612663269043
    6. '	n' → logprob: -13.376612663269043
    7. ' ' → logprob: -14.626612663269043
    8. '```' → logprob: -16.126611709594727
    9. 'from' → logprob: -16.501611709594727
    10. '
' → logprob: -16.751611709594727

Token 756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8961017202818766e-05
    2. ',k' → logprob: -10.250059127807617
    3. ',a' → logprob: -11.000059127807617
    4. ' =' → logprob: -12.875059127807617
    5. '=' → logprob: -13.125059127807617
    6. ' ,' → logprob: -13.500059127807617
    7. 'a' → logprob: -14.625059127807617
    8. 'k' → logprob: -15.625059127807617
    9. ',b' → logprob: -16.000059127807617
    10. ',p' → logprob: -16.375059127807617

Token 757: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12973946332931519
    2. 'k' → logprob: -2.12973952293396
    3. ' a' → logprob: -6.004739284515381
    4. ' k' → logprob: -8.004739761352539
    5. ',a' → logprob: -13.379739761352539
    6. '	a' → logprob: -13.504739761352539
    7. ' ' → logprob: -14.004739761352539
    8. 'x' → logprob: -14.754739761352539
    9. '   ' → logprob: -15.254739761352539
    10. 'K' → logprob: -15.254739761352539

Token 758: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033804986625909805
    2. '=' → logprob: -3.5338048934936523
    3. ' =' → logprob: -6.158804893493652
    4. ',b' → logprob: -6.283804893493652
    5. ' ,' → logprob: -10.283804893493652
    6. 'b' → logprob: -10.908804893493652
    7. ',k' → logprob: -12.033804893493652
    8. '=b' → logprob: -12.908804893493652
    9. ',n' → logprob: -13.783804893493652
    10. ',p' → logprob: -13.783804893493652

Token 759: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00045498309191316366
    2. ' b' → logprob: -7.875454902648926
    3. 'k' → logprob: -9.500454902648926
    4. ' k' → logprob: -18.000455856323242
    5. 'c' → logprob: -18.375455856323242
    6. ' ' → logprob: -18.750455856323242
    7. ',b' → logprob: -18.875455856323242
    8. '	b' → logprob: -19.125455856323242
    9. '```' → logprob: -19.625455856323242
    10. '   ' → logprob: -20.375455856323242

Token 760: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6819311380386353
    2. ',' → logprob: -0.9319311380386353
    3. ' =' → logprob: -2.3069310188293457
    4. ',k' → logprob: -6.931931018829346
    5. '=k' → logprob: -11.056931495666504
    6. ' ,' → logprob: -12.056931495666504
    7. '=input' → logprob: -13.806931495666504
    8. ' ' → logprob: -14.056931495666504
    9. ',c' → logprob: -15.056931495666504
    10. 'k' → logprob: -15.306931495666504

Token 761: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1875571544806007e-05
    2. 'c' → logprob: -11.375011444091797
    3. ' k' → logprob: -14.875011444091797
    4. 'K' → logprob: -18.125011444091797
    5. '_k' → logprob: -18.500011444091797
    6. '	k' → logprob: -19.375011444091797
    7. 'q' → logprob: -20.875011444091797
    8. 'd' → logprob: -20.875011444091797
    9. 'p' → logprob: -21.000011444091797
    10. 'x' → logprob: -21.375011444091797

Token 762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '=input' → logprob: -16.061967849731445
    4. ',' → logprob: -16.561967849731445
    5. '＝' → logprob: -16.686967849731445
    6. ' ' → logprob: -17.936967849731445
    7. ')=' → logprob: -19.436967849731445
    8. '=int' → logprob: -19.561967849731445
    9. '   ' → logprob: -20.186967849731445
    10. '=list' → logprob: -20.311967849731445

Token 763: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1781628429889679
    2. 'map' → logprob: -1.9281628131866455
    3. ' input' → logprob: -4.428163051605225
    4. ' map' → logprob: -5.178163051605225
    5. 'list' → logprob: -9.303162574768066
    6. 'tuple' → logprob: -9.678162574768066
    7. 'int' → logprob: -10.803162574768066
    8. '*' → logprob: -11.803162574768066
    9. ' ' → logprob: -11.928162574768066
    10. ' tuple' → logprob: -12.803162574768066

Token 764: '_parser' (ID: 44939)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08577307313680649
    2. '=' → logprob: -2.83577299118042
    3. '_line' → logprob: -5.33577299118042
    4. ' =' → logprob: -5.71077299118042
    5. '_values' → logprob: -5.71077299118042
    6. '().' → logprob: -5.83577299118042
    7. '_data' → logprob: -6.33577299118042
    8. '_' → logprob: -6.71077299118042
    9. '_str' → logprob: -6.71077299118042
    10. '_parser' → logprob: -6.71077299118042

Token 765: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043138445471413434
    2. '()
' → logprob: -7.750431537628174
    3. '()
' → logprob: -15.250431060791016
    4. ')' → logprob: -15.875431060791016
    5. '()`' → logprob: -16.000431060791016
    6. ' ()' → logprob: -16.375431060791016
    7. '();' → logprob: -17.125431060791016
    8. '   ' → logprob: -17.250431060791016
    9. '()

' → logprob: -17.375431060791016
    10. '())' → logprob: -17.625431060791016

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20290809869766235
    2. 'F' → logprob: -1.7029080390930176
    3. ' F' → logprob: -6.827908039093018
    4. '```' → logprob: -7.952908039093018
    5. '	F' → logprob: -10.952908515930176
    6. '
' → logprob: -11.452908515930176
    7. 'f' → logprob: -11.577908515930176
    8. '``' → logprob: -11.952908515930176
    9. '  ' → logprob: -12.327908515930176
    10. ' ' → logprob: -12.827908515930176

Token 767: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -3.7697225252486533e-06
    2. ' F' → logprob: -13.125003814697266
    3. '   ' → logprob: -13.500003814697266
    4. '```' → logprob: -15.625003814697266
    5. '
' → logprob: -15.875003814697266
    6. 'f' → logprob: -17.625003814697266
    7. '	F' → logprob: -19.000003814697266
    8. 'if' → logprob: -19.750003814697266
    9. '``' → logprob: -19.875003814697266
    10. ' ' → logprob: -20.000003814697266

Token 768: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '=
' → logprob: -16.828889846801758
    4. ' ' → logprob: -18.953889846801758
    5. '```' → logprob: -19.078889846801758
    6. '=create' → logprob: -19.078889846801758
    7. '   ' → logprob: -19.203889846801758
    8. '＝' → logprob: -19.328889846801758
    9. ' =
' → logprob: -20.078889846801758
    10. '  ' → logprob: -20.203889846801758

Token 769: ' Factor' (ID: 63743)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -5.200166469876422e-06
    2. ' Factor' → logprob: -12.500004768371582
    3. 'Fact' → logprob: -13.625004768371582
    4. 'Factory' → logprob: -15.375004768371582
    5. 'factor' → logprob: -17.3750057220459
    6. '   ' → logprob: -18.0000057220459
    7. '_factor' → logprob: -18.1250057220459
    8. ' ' → logprob: -18.3750057220459
    9. '  ' → logprob: -19.5000057220459
    10. ' factorial' → logprob: -19.5000057220459

Token 770: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -1.9266199160483666e-05
    2. 'al' → logprob: -11.000019073486328
    3. '(n' → logprob: -13.375019073486328
    4. 'Factor' → logprob: -15.000019073486328
    5. 'inal' → logprob: -16.250019073486328
    6. '(' → logprob: -16.375019073486328
    7. 'ical' → logprob: -16.375019073486328
    8. 'ional' → logprob: -16.625019073486328
    9. 'orial' → logprob: -16.625019073486328
    10. '(F' → logprob: -16.625019073486328

Token 771: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003849133790936321
    2. '(' → logprob: -7.87538480758667
    3. '(max' → logprob: -13.125385284423828
    4. 'n' → logprob: -13.250385284423828
    5. '(k' → logprob: -13.875385284423828
    6. '((' → logprob: -16.625385284423828
    7. ' (' → logprob: -16.875385284423828
    8. '(
' → logprob: -17.875385284423828
    9. ' n' → logprob: -19.000385284423828
    10. '(MAX' → logprob: -19.375385284423828

Token 772: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. '+' → logprob: -13.500004768371582
    3. ',n' → logprob: -14.000004768371582
    4. ' ,' → logprob: -14.125004768371582
    5. 'MOD' → logprob: -14.625004768371582
    6. ')' → logprob: -14.750004768371582
    7. ',
' → logprob: -15.000004768371582
    8. ',M' → logprob: -15.125004768371582
    9. ' +' → logprob: -15.250004768371582
    10. ',k' → logprob: -16.5000057220459

Token 773: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00016218038217630237
    2. ' MOD' → logprob: -8.750162124633789
    3. '998' → logprob: -12.500162124633789
    4. 'MO' → logprob: -18.12516212463379
    5. '_MOD' → logprob: -19.25016212463379
    6. '.MOD' → logprob: -20.62516212463379
    7. '   ' → logprob: -20.75016212463379
    8. 'MD' → logprob: -20.75016212463379
    9. '999' → logprob: -21.12516212463379
    10. ' ' → logprob: -21.62516212463379

Token 774: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015872348740231246
    2. ')
' → logprob: -8.750158309936523
    3. ')
' → logprob: -15.625158309936523
    4. '   ' → logprob: -16.625158309936523
    5. ' )' → logprob: -17.375158309936523
    6. ')

' → logprob: -19.375158309936523
    7. '),' → logprob: -19.500158309936523
    8. ').' → logprob: -20.000158309936523
    9. '')' → logprob: -20.625158309936523
    10. '")' → logprob: -20.750158309936523

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05681579187512398
    2. 'print' → logprob: -3.0568158626556396
    3. 'result' → logprob: -4.8068156242370605
    4. ' result' → logprob: -11.681816101074219
    5. ' print' → logprob: -11.931816101074219
    6. '```' → logprob: -12.431816101074219
    7. '    
' → logprob: -14.306816101074219
    8. 'res' → logprob: -14.431816101074219
    9. '	result' → logprob: -15.556816101074219
    10. '	print' → logprob: -15.556816101074219

Token 776: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004304307512938976
    2. 'result' (adapté à ' result') → logprob: -5.5043044090271
    3. 'res' → logprob: -8.504303932189941
    4. 'ans' → logprob: -10.754303932189941
    5. 'answer' → logprob: -13.254303932189941
    6. 'r' → logprob: -16.004304885864258
    7. 'pr' → logprob: -16.254304885864258
    8. ' print' → logprob: -17.004304885864258
    9. '```' → logprob: -18.879304885864258
    10. 'total' → logprob: -19.254304885864258

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631778717041
    2. '=' → logprob: -1.313263177871704
    3. ' ' → logprob: -13.813262939453125
    4. ')' → logprob: -16.188262939453125
    5. ' =
' → logprob: -16.188262939453125
    6. '＝' → logprob: -16.938262939453125
    7. ' =)' → logprob: -17.063262939453125
    8. '=int' → logprob: -17.688262939453125
    9. ' =
' → logprob: -18.188262939453125
    10. ' =(' → logprob: -18.188262939453125

Token 778: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0031777136027812958
    2. ' compute' → logprob: -5.753177642822266
    3. 'calculate' → logprob: -20.753177642822266
    4. '0' → logprob: -21.128177642822266
    5. '   ' → logprob: -21.253177642822266
    6. 'computer' → logprob: -22.378177642822266
    7. '.compute' → logprob: -22.503177642822266
    8. 'computed' → logprob: -22.878177642822266
    9. ' ' → logprob: -23.128177642822266
    10. '
' → logprob: -23.378177642822266

Token 779: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.896309739408025e-07
    2. 'summ' → logprob: -14.250000953674316
    3. 's' → logprob: -16.25
    4. '_sum' → logprob: -18.25
    5. '_' → logprob: -19.75
    6. '_term' → logprob: -20.125
    7. 'Summ' → logprob: -20.5
    8. ' summ' → logprob: -21.625
    9. '_summary' → logprob: -21.75
    10. '_result' → logprob: -22.125

Token 780: 'umm' (ID: 2177)
  Prédit: 'umm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umm' → logprob: -0.0007990269223228097
    2. 'mm' → logprob: -7.625799179077148
    3. 'um' → logprob: -8.250799179077148
    4. 'summ' → logprob: -10.125799179077148
    5. 'm' → logprob: -11.750799179077148
    6. 'Summ' → logprob: -14.125799179077148
    7. ' summ' → logprob: -14.375799179077148
    8. 'amm' → logprob: -15.625799179077148
    9. 'umn' → logprob: -15.875799179077148
    10. 'ummar' → logprob: -16.37579917907715

Token 781: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: 0.0
    2. 'ATION' → logprob: -16.875
    3. '   ' → logprob: -20.875
    4. 'a' → logprob: -21.75
    5. 'at' → logprob: -21.875
    6. 'vation' → logprob: -22.0
    7. 'ate' → logprob: -22.75
    8. 'atio' → logprob: -23.5
    9. 'lation' → logprob: -23.625
    10. 't' → logprob: -23.625

Token 782: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. '```' → logprob: -20.25
    4. '(
' → logprob: -20.625
    5. ' (' → logprob: -21.125
    6. 'F' → logprob: -22.75
    7. '<F' → logprob: -23.125
    8. '(C' → logprob: -23.75
    9. '﻿' → logprob: -23.75
    10. '(S' → logprob: -24.0

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018852073117159307
    2. ',n' → logprob: -8.625188827514648
    3. '(n' → logprob: -11.875188827514648
    4. ' ,' → logprob: -13.375188827514648
    5. ',
' → logprob: -15.125188827514648
    6. '(' → logprob: -16.12518882751465
    7. 'n' → logprob: -17.62518882751465
    8. '   ' → logprob: -18.75018882751465
    9. '```' → logprob: -18.75018882751465
    10. ')' → logprob: -19.62518882751465

Token 784: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048607006669044495
    2. ' n' → logprob: -3.048607110977173
    3. 'a' → logprob: -10.923606872558594
    4. 'k' → logprob: -14.923606872558594
    5. ' a' → logprob: -15.048606872558594
    6. ')n' → logprob: -15.173606872558594
    7. '	n' → logprob: -15.298606872558594
    8. '   ' → logprob: -16.048606872558594
    9. ')' → logprob: -16.173606872558594
    10. ' ' → logprob: -16.298606872558594

Token 785: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.537180211627856e-05
    2. ',a' → logprob: -10.375045776367188
    3. ' ,' → logprob: -11.250045776367188
    4. 'a' → logprob: -13.750045776367188
    5. ',
' → logprob: -17.625045776367188
    6. ' a' → logprob: -18.375045776367188
    7. '```' → logprob: -19.375045776367188
    8. '_,' → logprob: -19.750045776367188
    9. ')' → logprob: -20.250045776367188
    10. '   ' → logprob: -20.625045776367188

Token 786: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.676292231422849e-05
    2. ' a' → logprob: -11.000017166137695
    3. '	a' → logprob: -20.625017166137695
    4. '   ' → logprob: -22.500017166137695
    5. 'а' → logprob: -23.875017166137695
    6. ' ' → logprob: -23.875017166137695
    7. ')a' → logprob: -24.125017166137695
    8. ''a' → logprob: -24.625017166137695
    9. '"a' → logprob: -24.750017166137695
    10. '
' → logprob: -24.750017166137695

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007293514790944755
    2. ',b' → logprob: -7.250729560852051
    3. 'b' → logprob: -11.00072956085205
    4. ' ,' → logprob: -13.62572956085205
    5. ',k' → logprob: -13.87572956085205
    6. ',
' → logprob: -14.50072956085205
    7. ')' → logprob: -17.250728607177734
    8. ',m' → logprob: -17.750728607177734
    9. ',a' → logprob: -18.000728607177734
    10. ',p' → logprob: -18.125728607177734

Token 788: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.493430894101039e-05
    2. ' b' → logprob: -9.500075340270996
    3. ')b' → logprob: -21.25007438659668
    4. '	b' → logprob: -21.50007438659668
    5. '   ' → logprob: -23.00007438659668
    6. ' ' → logprob: -23.00007438659668
    7. 'c' → logprob: -23.25007438659668
    8. '<|end|>' → logprob: -23.50007438659668
    9. '
' → logprob: -23.75007438659668
    10. '```' → logprob: -23.87507438659668

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.074907287256792e-05
    2. ',k' → logprob: -9.75006103515625
    3. ' ,' → logprob: -13.00006103515625
    4. 'k' → logprob: -16.12506103515625
    5. ',
' → logprob: -17.87506103515625
    6. ')' → logprob: -18.62506103515625
    7. '```' → logprob: -19.25006103515625
    8. '),' → logprob: -20.50006103515625
    9. '，' → logprob: -21.25006103515625
    10. ' k' → logprob: -21.50006103515625

Token 790: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.7697225252486533e-06
    2. ' k' → logprob: -12.500003814697266
    3. '	k' → logprob: -21.000003814697266
    4. '   ' → logprob: -23.125003814697266
    5. '{k' → logprob: -24.500003814697266
    6. ' ' → logprob: -25.750003814697266
    7. '  ' → logprob: -25.750003814697266
    8. ',k' → logprob: -26.125003814697266
    9. 'к' → logprob: -26.250003814697266
    10. ')' → logprob: -26.250003814697266

Token 791: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12697409093379974
    2. ')' → logprob: -2.126974105834961
    3. ')
' → logprob: -10.001974105834961
    4. '   ' → logprob: -14.251974105834961
    5. ')

' → logprob: -16.62697410583496
    6. ' )
' → logprob: -16.87697410583496
    7. ')`
' → logprob: -18.37697410583496
    8. ' )' → logprob: -20.12697410583496
    9. ' ' → logprob: -21.00197410583496
    10. ')\
' → logprob: -21.00197410583496

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029772130772471428
    2. 'print' → logprob: -3.5297720432281494
    3. '```' → logprob: -10.90477180480957
    4. ' print' → logprob: -12.77977180480957
    5. '	print' → logprob: -15.02977180480957
    6. '    
' → logprob: -16.52977180480957
    7. '``' → logprob: -17.15477180480957
    8. '
' → logprob: -17.27977180480957
    9. '<|end|>' → logprob: -17.52977180480957
    10. '#print' → logprob: -18.02977180480957

Token 793: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.5
    3. ' print' → logprob: -17.75
    4. '```' → logprob: -19.75
    5. '	print' → logprob: -22.875
    6. 'pr' → logprob: -23.125
    7. 'printf' → logprob: -23.75
    8. '
' → logprob: -24.0
    9. '#print' → logprob: -24.25
    10. 'return' → logprob: -25.375

Token 794: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.62501049041748
    3. 'result' → logprob: -13.50001049041748
    4. ' (' → logprob: -17.000011444091797
    5. '(results' → logprob: -17.750011444091797
    6. '(res' → logprob: -17.750011444091797
    7. '=result' → logprob: -17.750011444091797
    8. '(resultado' → logprob: -18.500011444091797
    9. ',result' → logprob: -18.750011444091797
    10. '((' → logprob: -19.125011444091797

Token 795: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -17.25
    3. ')`' → logprob: -17.25
    4. ')
' → logprob: -18.125
    5. '())' → logprob: -19.0
    6. '`)' → logprob: -19.0
    7. '))' → logprob: -19.375
    8. '')' → logprob: -20.375
    9. '）' → logprob: -20.375
    10. '()' → logprob: -20.375

Token 796: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004022953100502491
    2. 'main' → logprob: -5.62902307510376
    3. '#' → logprob: -8.379022598266602
    4. ' if' → logprob: -9.379022598266602
    5. '```' → logprob: -9.754022598266602
    6. '<|end|>' → logprob: -10.879022598266602
    7. '
' → logprob: -12.129022598266602
    8. ' main' → logprob: -12.254022598266602
    9. '\' → logprob: -12.629022598266602
    10. '(main' → logprob: -12.879022598266602

Token 797: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 795
Tokens correctement prédits (1ère position, stricte): 349
Tokens correctement prédits (1ère position, avec adaptation): 386
Tokens correctement prédits (top 10): 712
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 48.55%
Précision (top 10): 89.56%
================================================================================
