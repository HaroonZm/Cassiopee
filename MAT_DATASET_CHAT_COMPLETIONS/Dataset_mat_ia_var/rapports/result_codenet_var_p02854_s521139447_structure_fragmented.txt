================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_n():
    return int(input())

def read_ai():
    return list(map(int, input().split()))

def initialize_sa():
    return [0]

def initialize_ans():
    return float("INF")

def calc_prefix_sums(sa, a_list, n):
    def add_next(i):
        sa.append(sa[i] + a_list[i])
    for i in range(n):
        add_next(i)

def get_total_sum(sa):
    return sa[-1]

def calc_diff(sa_value, total_sum):
    return abs(sa_value - (total_sum - sa_value))

def update_ans(ans, diff):
    return min(ans, diff)

def iter_prefix_sums(sa, n, total_sum):
    ans = initialize_ans()
    for i in range(n + 1):
        diff = calc_diff(sa[i], total_sum)
        ans = update_ans(ans, diff)
    return ans

def main():
    n = read_n()
    a_list = read_ai()
    sa = initialize_sa()
    calc_prefix_sums(sa, a_list, n)
    total_sum = get_total_sum(sa)
    ans = iter_prefix_sums(sa, n, total_sum)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_n' (ID: 2170)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18461285531520844
    2. 'ext' → logprob: -2.30961275100708
    3. '(_' → logprob: -3.55961275100708
    4. '```' → logprob: -4.18461275100708
    5. 'umber' → logprob: -4.68461275100708
    6. '_ext' → logprob: -5.30961275100708
    7. 'ame' → logprob: -5.93461275100708
    8. '_chars' → logprob: -6.05961275100708
    9. '(' → logprob: -6.43461275100708
    10. '_(' → logprob: -7.05961275100708

Token 4: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.7063019275665283
    2. '```' → logprob: -1.7063019275665283
    3. '\n' → logprob: -1.7063019275665283
    4. ''' → logprob: -1.9563019275665283
    5. '   ' → logprob: -2.0813019275665283
    6. '(' → logprob: -3.4563019275665283
    7. ' ' → logprob: -3.7063019275665283
    8. '"' → logprob: -4.081301689147949
    9. '(n' → logprob: -4.081301689147949
    10. ' return' → logprob: -4.081301689147949

Token 5: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.648666262626648
    2. '   ' → logprob: -1.523666262626648
    3. 'r' → logprob: -2.1486663818359375
    4. 'x' → logprob: -3.0236663818359375
    5. 'return' (adapté à ' return') → logprob: -3.3986663818359375
    6. 'i' → logprob: -4.1486663818359375
    7. ' ' → logprob: -4.2736663818359375
    8. '```' → logprob: -4.2736663818359375
    9. 'a' → logprob: -5.5236663818359375
    10. '    ' → logprob: -6.0236663818359375

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6782557368278503
    2. ' []' → logprob: -1.1782557964324951
    3. ' int' → logprob: -2.928255796432495
    4. '  ' → logprob: -2.928255796432495
    5. ' input' → logprob: -3.428255796432495
    6. ' None' → logprob: -3.803255796432495
    7. ' n' → logprob: -5.178255558013916
    8. 'input' → logprob: -5.428255558013916
    9. '"' → logprob: -5.428255558013916
    10. 'int' → logprob: -6.178255558013916

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015317666111513972
    2. '('' → logprob: -6.626531600952148
    3. '("("' → logprob: -9.626531600952148
    4. ''' → logprob: -9.876531600952148
    5. '```' → logprob: -10.876531600952148
    6. ' (' → logprob: -11.626531600952148
    7. '`' → logprob: -11.751531600952148
    8. '(`' → logprob: -12.001531600952148
    9. '40' → logprob: -12.501531600952148
    10. '(
' → logprob: -12.501531600952148

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49548250436782837
    2. '()' → logprob: -1.4954824447631836
    3. '())' → logprob: -1.8704824447631836
    4. '('' → logprob: -4.995482444763184
    5. ')' → logprob: -5.620482444763184
    6. '()))' → logprob: -7.245482444763184
    7. '(""))' → logprob: -7.620482444763184
    8. '("("' → logprob: -8.370482444763184
    9. '(
' → logprob: -8.870482444763184
    10. '(()' → logprob: -8.870482444763184

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2484438717365265
    2. 'n' → logprob: -2.123443841934204
    3. 'd' → logprob: -3.873443841934204
    4. '#' → logprob: -4.248444080352783
    5. '(' → logprob: -4.373444080352783
    6. 'x' → logprob: -4.623444080352783
    7. '```' → logprob: -4.998444080352783
    8. '<|end|>' → logprob: -5.373444080352783
    9. '
' → logprob: -5.748444080352783
    10. ' ' → logprob: -5.873444080352783

Token 10: ' read' (ID: 1729)
  Prédit: ' write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.6004698276519775
    2. ' read' → logprob: -0.8504698276519775
    3. ' calculate' → logprob: -4.100469589233398
    4. ' space' → logprob: -6.350469589233398
    5. ' add' → logprob: -6.350469589233398
    6. ' ' → logprob: -7.350469589233398
    7. ' compute' → logprob: -7.475469589233398
    8. ' process' → logprob: -7.475469589233398
    9. '_' → logprob: -8.225469589233398
    10. ' insert' → logprob: -8.225469589233398

Token 11: '_ai' (ID: 175198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000285530521068722
    2. '_n' → logprob: -8.375285148620605
    3. '(' → logprob: -11.250285148620605
    4. '_line' → logprob: -11.500285148620605
    5. '_a' → logprob: -12.000285148620605
    6. '_)' → logprob: -12.125285148620605
    7. '_(' → logprob: -12.625285148620605
    8. ' _' → logprob: -12.750285148620605
    9. '_s' → logprob: -13.375285148620605
    10. '_\' → logprob: -13.500285148620605

Token 12: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11739908903837204
    2. 's' → logprob: -2.742398977279663
    3. '():' → logprob: -4.492399215698242
    4. '_' → logprob: -4.742399215698242
    5. '(' → logprob: -4.867399215698242
    6. 'a' → logprob: -5.367399215698242
    7. '(n' → logprob: -6.242399215698242
    8. '_a' → logprob: -6.242399215698242
    9. '(a' → logprob: -6.617399215698242
    10. '[]' → logprob: -6.742399215698242

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040317464619874954
    2. 'int' → logprob: -3.6653175354003906
    3. 'return' → logprob: -4.665317535400391
    4. ' return' → logprob: -5.915317535400391
    5. ' int' → logprob: -6.915317535400391
    6. '(int' → logprob: -8.54031753540039
    7. '()' → logprob: -8.54031753540039
    8. '    ' → logprob: -8.66531753540039
    9. '[int' → logprob: -9.66531753540039
    10. ' ' → logprob: -10.04031753540039

Token 14: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3816176652908325
    2. 'int' → logprob: -1.6316176652908325
    3. ' return' → logprob: -2.381617546081543
    4. '   ' → logprob: -3.631617546081543
    5. ' int' → logprob: -6.006617546081543
    6. ' ' → logprob: -8.506617546081543
    7. '    ' → logprob: -10.756617546081543
    8. '  ' → logprob: -11.006617546081543
    9. '[int' → logprob: -11.381617546081543
    10. 'input' → logprob: -11.506617546081543

Token 15: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.32699257135391235
    2. 'list' → logprob: -1.8269925117492676
    3. ' list' → logprob: -2.9519925117492676
    4. ' int' → logprob: -3.3269925117492676
    5. '[int' → logprob: -3.7019925117492676
    6. 'map' → logprob: -6.201992511749268
    7. ' map' → logprob: -6.326992511749268
    8. '(int' → logprob: -7.076992511749268
    9. '[' → logprob: -7.951992511749268
    10. ' [' → logprob: -9.576992988586426

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01880248636007309
    2. '(range' → logprob: -4.018802642822266
    3. '(map' → logprob: -8.268802642822266
    4. '(int' → logprob: -8.643802642822266
    5. '[int' → logprob: -10.393802642822266
    6. '()' → logprob: -10.393802642822266
    7. '(
' → logprob: -10.893802642822266
    8. '(

' → logprob: -11.018802642822266
    9. '(filter' → logprob: -11.268802642822266
    10. '[' → logprob: -11.518802642822266

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002630353905260563
    2. '(' → logprob: -6.502630233764648
    3. 'int' → logprob: -6.877630233764648
    4. '=int' → logprob: -9.877630233764648
    5. '<int' → logprob: -11.002630233764648
    6. ' int' → logprob: -11.377630233764648
    7. ',int' → logprob: -12.127630233764648
    8. '[int' → logprob: -12.502630233764648
    9. '(
' → logprob: -13.002630233764648
    10. ' (' → logprob: -13.127630233764648

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16707929968833923
    2. ',input' → logprob: -1.9170793294906616
    3. ',' → logprob: -5.292079448699951
    4. 'input' → logprob: -7.167079448699951
    5. '(' → logprob: -7.167079448699951
    6. '=input' → logprob: -9.542078971862793
    7. ' input' → logprob: -10.042078971862793
    8. ' (' → logprob: -10.292078971862793
    9. ' ,' → logprob: -10.292078971862793
    10. '<input' → logprob: -10.917078971862793

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04864402860403061
    2. ' input' → logprob: -3.0486440658569336
    3. '(input' → logprob: -10.798644065856934
    4. ',input' → logprob: -10.923644065856934
    5. '   ' → logprob: -11.798644065856934
    6. '=input' → logprob: -12.298644065856934
    7. ')' → logprob: -13.298644065856934
    8. '	input' → logprob: -13.423644065856934
    9. '<input' → logprob: -13.673644065856934
    10. '[input' → logprob: -14.423644065856934

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.074907287256792e-05
    2. '()' → logprob: -9.75006103515625
    3. '()))' → logprob: -14.00006103515625
    4. ' ().' → logprob: -14.50006103515625
    5. '.split' → logprob: -15.37506103515625
    6. '())))' → logprob: -15.37506103515625
    7. ')' → logprob: -16.00006103515625
    8. '(' → logprob: -16.12506103515625
    9. '())' → logprob: -16.25006103515625
    10. ' ' → logprob: -16.62506103515625

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008875963278114796
    2. 'strip' → logprob: -4.758875846862793
    3. 'rstrip' → logprob: -8.258875846862793
    4. ' split' → logprob: -13.508875846862793
    5. '(split' → logprob: -14.633875846862793
    6. 'spl' → logprob: -14.883875846862793
    7. 'read' → logprob: -15.633875846862793
    8. ')' → logprob: -17.00887680053711
    9. ' strip' → logprob: -17.25887680053711
    10. 's' → logprob: -17.38387680053711

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.015966448932886124
    2. '()' → logprob: -4.265966415405273
    3. '))' → logprob: -7.140966415405273
    4. '())))' → logprob: -7.515966415405273
    5. '())' → logprob: -7.765966415405273
    6. '()))
' → logprob: -11.390966415405273
    7. '(' → logprob: -11.390966415405273
    8. ')))' → logprob: -11.515966415405273
    9. '()));' → logprob: -13.015966415405273
    10. '()))

' → logprob: -13.140966415405273

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08015668392181396
    2. 'n' → logprob: -2.5801568031311035
    3. 'd' → logprob: -6.9551568031311035
    4. 'a' → logprob: -8.830156326293945
    5. 'N' → logprob: -9.830156326293945
    6. '```' → logprob: -10.455156326293945
    7. 't' → logprob: -11.080156326293945
    8. '\' → logprob: -11.330156326293945
    9. '#' → logprob: -11.580156326293945
    10. 'x' → logprob: -11.705156326293945

Token 24: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19833603501319885
    2. 'main' → logprob: -1.9483360052108765
    3. ' solve' → logprob: -4.323336124420166
    4. ' read' → logprob: -4.698336124420166
    5. 'read' → logprob: -4.823336124420166
    6. 'solve' → logprob: -5.073336124420166
    7. 'write' → logprob: -9.323335647583008
    8. 'max' → logprob: -9.573335647583008
    9. ' max' → logprob: -9.573335647583008
    10. ' write' → logprob: -9.823335647583008

Token 25: '_sa' (ID: 101558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35880962014198303
    2. '_array' → logprob: -2.48380970954895
    3. '_data' → logprob: -2.60880970954895
    4. '(' → logprob: -3.23380970954895
    5. '()' → logprob: -3.85880970954895
    6. '_values' → logprob: -4.858809471130371
    7. '_list' → logprob: -5.358809471130371
    8. '_arrays' → logprob: -5.358809471130371
    9. '_counts' → logprob: -5.733809471130371
    10. '_table' → logprob: -5.858809471130371

Token 26: '():
' (ID: 8595)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.342814564704895
    2. '_array' → logprob: -1.842814564704895
    3. 'l' → logprob: -2.2178144454956055
    4. 'rm' → logprob: -2.5928144454956055
    5. '_table' → logprob: -2.7178144454956055
    6. 'uffix' → logprob: -2.9678144454956055
    7. 'uf' → logprob: -3.0928144454956055
    8. '_' → logprob: -3.4678144454956055
    9. 'array' → logprob: -3.5928144454956055
    10. 't' → logprob: -3.8428144454956055

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6670053005218506
    2. '[' → logprob: -1.6670053005218506
    3. ' []' → logprob: -2.2920053005218506
    4. '[]' → logprob: -2.6670053005218506
    5. ' [' → logprob: -2.7920053005218506
    6. ' ' → logprob: -3.5420053005218506
    7. '    ' → logprob: -4.66700553894043
    8. '[s' → logprob: -5.04200553894043
    9. '[:]' → logprob: -5.29200553894043
    10. '       ' → logprob: -6.04200553894043

Token 28: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.5052813291549683
    2. ' sa' → logprob: -1.5052813291549683
    3. '   ' → logprob: -1.6302813291549683
    4. 'sa' → logprob: -2.505281448364258
    5. '[' → logprob: -2.755281448364258
    6. ' []' → logprob: -3.005281448364258
    7. '[]' → logprob: -3.130281448364258
    8. ' s' → logprob: -3.505281448364258
    9. 's' → logprob: -3.505281448364258
    10. ' ' → logprob: -4.255281448364258

Token 29: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.43017226457595825
    2. '[' → logprob: -1.0551722049713135
    3. '{}' → logprob: -8.055171966552734
    4. '['' → logprob: -8.305171966552734
    5. ' []' → logprob: -8.805171966552734
    6. '[:]' → logprob: -8.930171966552734
    7. '[]}' → logprob: -8.930171966552734
    8. '["' → logprob: -9.180171966552734
    9. '[-' → logprob: -9.180171966552734
    10. ' [' → logprob: -9.805171966552734

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009142146445810795
    2. '[' → logprob: -5.63414192199707
    3. '-' → logprob: -6.00914192199707
    4. '(' → logprob: -6.88414192199707
    5. 'False' → logprob: -7.00914192199707
    6. '[]' → logprob: -7.63414192199707
    7. ' ' → logprob: -9.25914192199707
    8. ']' → logprob: -9.25914192199707
    9. '{}' → logprob: -9.38414192199707
    10. '{' → logprob: -9.63414192199707

Token 31: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004738176241517067
    2. ']*' → logprob: -5.6297383308410645
    3. ',' → logprob: -7.2547383308410645
    4. ' ]' → logprob: -8.629737854003906
    5. ' for' → logprob: -8.879737854003906
    6. ']*(' → logprob: -9.879737854003906
    7. ')]' → logprob: -10.504737854003906
    8. '}]' → logprob: -12.504737854003906
    9. ')' → logprob: -12.629737854003906
    10. ']int' → logprob: -12.754737854003906

Token 32: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4747712314128876
    2. '<|end|>' → logprob: -1.09977126121521
    3. ' ' → logprob: -3.72477126121521
    4. '<|end|>' → logprob: -5.099771022796631
    5. 's' → logprob: -5.224771022796631
    6. ']' → logprob: -6.349771022796631
    7. ',' → logprob: -6.474771022796631
    8. '[' → logprob: -6.599771022796631
    9. ')' → logprob: -6.599771022796631
    10. '0' → logprob: -7.849771022796631

Token 33: ' initialize' (ID: 18400)
  Prédit: ' initialize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.8633872866630554
    2. ' build' → logprob: -1.7383873462677002
    3. ' main' → logprob: -2.2383873462677
    4. ' update' → logprob: -2.2383873462677
    5. ' compute' → logprob: -2.7383873462677
    6. ' calculate' → logprob: -2.9883873462677
    7. 'initialize' → logprob: -4.238387107849121
    8. ' read' → logprob: -4.363387107849121
    9. ' solve' → logprob: -4.738387107849121
    10. ' process' → logprob: -5.738387107849121

Token 34: '_ans' (ID: 146254)
  Prédit: '_sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sa' → logprob: -0.6300808787345886
    2. '_s' → logprob: -2.5050809383392334
    3. '_l' → logprob: -2.8800809383392334
    4. '_ss' → logprob: -3.3800809383392334
    5. '_sb' → logprob: -3.6300809383392334
    6. '_sf' → logprob: -3.7550809383392334
    7. '_b' → logprob: -3.8800809383392334
    8. '_sm' → logprob: -3.8800809383392334
    9. '_st' → logprob: -4.755080699920654
    10. '_sp' → logprob: -4.817580699920654

Token 35: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001441899803467095
    2. '()' → logprob: -7.126441955566406
    3. '():
' → logprob: -7.626441955566406
    4. ' ():' → logprob: -9.501441955566406
    5. '_' → logprob: -11.001441955566406
    6. '(' → logprob: -11.126441955566406
    7. '[]' → logprob: -11.376441955566406
    8. '_list' → logprob: -11.626441955566406
    9. ':' → logprob: -12.126441955566406
    10. 's' → logprob: -12.626441955566406

Token 36: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21965853869915009
    2. '   ' → logprob: -1.9696584939956665
    3. '0' → logprob: -3.344658613204956
    4. '[' → logprob: -4.219658374786377
    5. ' []' → logprob: -5.094658374786377
    6. '[]
' → logprob: -7.719658374786377
    7. ' ' → logprob: -7.969658374786377
    8. ' [' → logprob: -8.844658851623535
    9. '{}' → logprob: -9.094658851623535
    10. '    ' → logprob: -9.219658851623535

Token 37: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1793108880519867
    2. '[' → logprob: -2.1793107986450195
    3. '0' → logprob: -3.1793107986450195
    4. '{}' → logprob: -5.3043107986450195
    5. '   ' → logprob: -6.5543107986450195
    6. 'return' (adapté à ' return') → logprob: -7.3043107986450195
    7. ' []' → logprob: -7.5543107986450195
    8. '[]
' → logprob: -7.5543107986450195
    9. '{' → logprob: -8.30431079864502
    10. '[-' → logprob: -8.42931079864502

Token 38: ' float' (ID: 4428)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4186546504497528
    2. '0' → logprob: -1.1686546802520752
    3. '[' → logprob: -3.793654680252075
    4. '{}' → logprob: -5.168654441833496
    5. ' []' → logprob: -7.418654441833496
    6. ' ' → logprob: -7.668654441833496
    7. 'float' → logprob: -7.793654441833496
    8. '[]
' → logprob: -7.793654441833496
    9. '[int' → logprob: -8.043654441833496
    10. '{' → logprob: -8.543654441833496

Token 39: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007283953949809074
    2. '('-' → logprob: -5.882284164428711
    3. ''' → logprob: -6.507284164428711
    4. 'inf' → logprob: -6.632284164428711
    5. '(' → logprob: -7.757284164428711
    6. ''in' → logprob: -8.007284164428711
    7. ''s' → logprob: -8.757284164428711
    8. '32' → logprob: -9.632284164428711
    9. ''-' → logprob: -9.632284164428711
    10. '```' → logprob: -9.882284164428711

Token 40: 'INF' (ID: 64358)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00045140698784962296
    2. '-inf' → logprob: -7.875451564788818
    3. ''in' → logprob: -11.12545108795166
    4. 'in' → logprob: -11.25045108795166
    5. ''' → logprob: -11.50045108795166
    6. '"' → logprob: -11.50045108795166
    7. 'INF' → logprob: -12.25045108795166
    8. '-' → logprob: -12.50045108795166
    9. '-i' → logprob: -12.62545108795166
    10. ' inf' → logprob: -13.25045108795166

Token 41: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10518556833267212
    2. ')' → logprob: -2.7301855087280273
    3. ')")' → logprob: -3.6051855087280273
    4. 'inity' → logprob: -4.980185508728027
    5. 'inty' → logprob: -8.855185508728027
    6. '")]' → logprob: -8.980185508728027
    7. '"))' → logprob: -9.480185508728027
    8. '"' → logprob: -9.980185508728027
    9. ')"' → logprob: -10.105185508728027
    10. 'ity' → logprob: -10.105185508728027

Token 42: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4766601026058197
    2. ')' → logprob: -1.351660132408142
    3. '<|end|>' → logprob: -2.9766600131988525
    4. 'def' → logprob: -3.8516600131988525
    5. ' ' → logprob: -4.601660251617432
    6. 's' → logprob: -4.601660251617432
    7. '[' → logprob: -4.976660251617432
    8. 'max' → logprob: -5.851660251617432
    9. '
' → logprob: -6.101660251617432
    10. '.' → logprob: -6.351660251617432

Token 43: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5163215398788452
    2. ' solve' → logprob: -1.0163215398788452
    3. ' max' → logprob: -4.891321659088135
    4. ' initialize' → logprob: -5.016321659088135
    5. ' update' → logprob: -5.266321659088135
    6. 'solve' → logprob: -5.391321659088135
    7. ' solution' → logprob: -5.641321659088135
    8. ' read' → logprob: -6.141321659088135
    9. ' compute' → logprob: -6.141321659088135
    10. ' calculate' → logprob: -6.266321659088135

Token 44: '_prefix' (ID: 33197)
  Prédit: '_sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sa' → logprob: -0.16241824626922607
    2. '_ans' → logprob: -2.9124183654785156
    3. '_' → logprob: -3.4124183654785156
    4. '_sum' → logprob: -4.037418365478516
    5. '_suffix' → logprob: -4.662418365478516
    6. '_max' → logprob: -4.662418365478516
    7. '_min' → logprob: -5.162418365478516
    8. '_dp' → logprob: -5.912418365478516
    9. '_s' → logprob: -6.037418365478516
    10. '_answer' → logprob: -6.787418365478516

Token 45: '_s' (ID: 1278)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.18944071233272552
    2. '_s' → logprob: -1.9394407272338867
    3. 'sum' → logprob: -4.064440727233887
    4. '_' → logprob: -4.689440727233887
    5. 's' → logprob: -7.189440727233887
    6. '_array' → logprob: -7.314440727233887
    7. '()' → logprob: -8.189440727233887
    8. '_x' → logprob: -8.564440727233887
    9. '_max' → logprob: -8.814440727233887
    10. '_hash' → logprob: -9.314440727233887

Token 46: 'ums' (ID: 6162)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31542763113975525
    2. 'um' → logprob: -1.3154276609420776
    3. 'ums' → logprob: -6.315427780151367
    4. 'uffix' → logprob: -9.065427780151367
    5. 'A' → logprob: -9.440427780151367
    6. '(a' → logprob: -10.065427780151367
    7. '[]' → logprob: -10.690427780151367
    8. '_array' → logprob: -11.190427780151367
    9. '```' → logprob: -11.315427780151367
    10. 'array' → logprob: -11.940427780151367

Token 47: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.1521385759115219
    2. '(' → logprob: -2.7771384716033936
    3. '(s' → logprob: -2.9021384716033936
    4. '()' → logprob: -4.777138710021973
    5. '_' → logprob: -5.152138710021973
    6. '_sa' → logprob: -5.777138710021973
    7. '(a' → logprob: -5.902138710021973
    8. '(arr' → logprob: -7.402138710021973
    9. '_s' → logprob: -7.652138710021973
    10. '_(' → logprob: -8.152138710021973

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010162705555558205
    2. '):' → logprob: -5.010162830352783
    3. ' ,' → logprob: -6.885162830352783
    4. ',a' → logprob: -7.010162830352783
    5. 'a' → logprob: -7.885162830352783
    6. ',s' → logprob: -8.135162353515625
    7. ',n' → logprob: -8.510162353515625
    8. 's' → logprob: -9.010162353515625
    9. '[' → logprob: -9.260162353515625
    10. '_,' → logprob: -10.260162353515625

Token 49: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12019719183444977
    2. ' a' → logprob: -2.495197296142578
    3. 'ai' → logprob: -3.995197296142578
    4. ' ai' → logprob: -4.870197296142578
    5. 'A' → logprob: -6.245197296142578
    6. 'arr' → logprob: -6.745197296142578
    7. '   ' → logprob: -7.245197296142578
    8. ' A' → logprob: -7.620197296142578
    9. ' arr' → logprob: -9.745197296142578
    10. ')' → logprob: -10.245197296142578

Token 50: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09118883311748505
    2. '):' → logprob: -2.466188907623291
    3. '):
' → logprob: -7.341188907623291
    4. ',i' → logprob: -7.591188907623291
    5. ' ,' → logprob: -7.841188907623291
    6. ',n' → logprob: -8.966188430786133
    7. ',index' → logprob: -9.466188430786133
    8. ':' → logprob: -10.091188430786133
    9. 's' → logprob: -10.091188430786133
    10. ')' → logprob: -10.216188430786133

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05576106160879135
    2. '):' → logprob: -2.9307610988616943
    3. '):
' → logprob: -7.930760860443115
    4. ' ,' → logprob: -8.305761337280273
    5. ',n' → logprob: -9.805761337280273
    6. '   ' → logprob: -10.180761337280273
    7. ',index' → logprob: -10.555761337280273
    8. ',i' → logprob: -10.680761337280273
    9. ',a' → logprob: -10.930761337280273
    10. '):
' → logprob: -11.055761337280273

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3534561097621918
    2. ' i' → logprob: -1.9784561395645142
    3. 'n' → logprob: -2.2284560203552246
    4. 'i' → logprob: -3.3534560203552246
    5. ' idx' → logprob: -4.728456020355225
    6. ')' → logprob: -6.478456020355225
    7. ' index' → logprob: -6.728456020355225
    8. ' N' → logprob: -6.853456020355225
    9. ' a' → logprob: -7.478456020355225
    10. 'idx' → logprob: -7.478456020355225

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003628461854532361
    2. ',' → logprob: -6.003628253936768
    3. '):
' → logprob: -6.878628253936768
    4. ')' → logprob: -9.378628730773926
    5. ' ):' → logprob: -11.253628730773926
    6. '):
' → logprob: -11.878628730773926
    7. ':' → logprob: -12.378628730773926
    8. '=' → logprob: -12.753628730773926
    9. '   ' → logprob: -13.128628730773926
    10. 'def' → logprob: -13.378628730773926

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001418326748535037
    2. ' for' → logprob: -6.626418113708496
    3. 'for' → logprob: -9.501418113708496
    4. ':' → logprob: -11.876418113708496
    5. '    
' → logprob: -12.376418113708496
    6. '```' → logprob: -13.126418113708496
    7. ',' → logprob: -13.751418113708496
    8. '
' → logprob: -13.876418113708496
    9. ':
' → logprob: -14.251418113708496
    10. '   ' → logprob: -14.376418113708496

Token 55: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29884856939315796
    2. ' for' → logprob: -1.4238486289978027
    3. 'for' → logprob: -4.048848628997803
    4. '```' → logprob: -9.548848152160645
    5. '    
' → logprob: -11.298848152160645
    6. '	for' → logprob: -12.298848152160645
    7. '
' → logprob: -12.798848152160645
    8. '``' → logprob: -13.173848152160645
    9. ' i' → logprob: -13.173848152160645
    10. '   ' → logprob: -13.298848152160645

Token 56: ' add' (ID: 1147)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.5557661056518555
    2. ' for' → logprob: -1.5557661056518555
    3. '_' → logprob: -1.9307661056518555
    4. ' i' → logprob: -2.3057661056518555
    5. ' _' → logprob: -2.9307661056518555
    6. ' ' → logprob: -3.0557661056518555
    7. 'x' → logprob: -3.6807661056518555
    8. ' a' → logprob: -3.6807661056518555
    9. ' calculate' → logprob: -3.6807661056518555
    10. '  ' → logprob: -3.9307661056518555

Token 57: '_next' (ID: 25436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.946733832359314
    2. '_token' → logprob: -1.571733832359314
    3. '_s' → logprob: -2.9467339515686035
    4. '):
' → logprob: -2.9467339515686035
    5. '):' → logprob: -2.9467339515686035
    6. 'ed' → logprob: -3.6967339515686035
    7. '_val' → logprob: -3.6967339515686035
    8. '_value' → logprob: -3.8217339515686035
    9. '_sa' → logprob: -3.8217339515686035
    10. ' =' → logprob: -4.0717339515686035

Token 58: '(i' (ID: 3649)
  Prédit: '(sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.371209979057312
    2. '():' → logprob: -1.621209979057312
    3. '():
' → logprob: -2.7462100982666016
    4. '(i' → logprob: -4.371210098266602
    5. '_token' → logprob: -4.746210098266602
    6. '(s' → logprob: -5.246210098266602
    7. '(sum' → logprob: -5.871210098266602
    8. '(' → logprob: -5.871210098266602
    9. '):' → logprob: -5.996210098266602
    10. '(a' → logprob: -6.496210098266602

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10499906539916992
    2. '):
' → logprob: -2.35499906539917
    3. ',' → logprob: -5.72999906539917
    4. '):
' → logprob: -7.22999906539917
    5. '   ' → logprob: -7.85499906539917
    6. ')' → logprob: -8.104999542236328
    7. ' ):' → logprob: -10.729999542236328
    8. ':' → logprob: -11.104999542236328
    9. '):

' → logprob: -11.354999542236328
    10. '       ' → logprob: -11.854999542236328

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03455198183655739
    2. ':' → logprob: -4.534552097320557
    3. '):' → logprob: -4.534552097320557
    4. '   ' → logprob: -5.284552097320557
    5. '<|end|>' → logprob: -5.534552097320557
    6. '):
' → logprob: -7.159552097320557
    7. ',' → logprob: -7.409552097320557
    8. ')' → logprob: -7.409552097320557
    9. '    ' → logprob: -8.284551620483398
    10. ' ' → logprob: -8.534551620483398

Token 61: ' sa' (ID: 880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7031236886978149
    2. 'sa' (adapté à ' sa') → logprob: -1.203123688697815
    3. ' sa' → logprob: -1.828123688697815
    4. '   ' → logprob: -3.2031235694885254
    5. ' return' → logprob: -6.953123569488525
    6. 'return' → logprob: -7.453123569488525
    7. '           ' → logprob: -7.453123569488525
    8. ' ' → logprob: -8.203124046325684
    9. '    ' → logprob: -8.578124046325684
    10. 's' → logprob: -9.328124046325684

Token 62: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005015624337829649
    2. '[-' → logprob: -8.50050163269043
    3. '.' → logprob: -8.62550163269043
    4. 'append' → logprob: -10.00050163269043
    5. ' .' → logprob: -10.75050163269043
    6. '.extend' → logprob: -11.12550163269043
    7. '_append' → logprob: -11.62550163269043
    8. 'Append' → logprob: -11.75050163269043
    9. '[i' → logprob: -11.87550163269043
    10. '.app' → logprob: -12.37550163269043

Token 63: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.500012397766113
    3. '(a' → logprob: -13.875012397766113
    4. 'sa' → logprob: -14.375012397766113
    5. ' sa' → logprob: -16.000011444091797
    6. '(i' → logprob: -16.000011444091797
    7. '(si' → logprob: -16.625011444091797
    8. '((' → logprob: -16.875011444091797
    9. 'a' → logprob: -17.250011444091797
    10. '   ' → logprob: -18.750011444091797

Token 64: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.000158842682139948
    2. '[i' → logprob: -8.75015926361084
    3. '[' → logprob: -15.62515926361084
    4. ' [-' → logprob: -16.750158309936523
    5. '   ' → logprob: -17.625158309936523
    6. '-' → logprob: -18.875158309936523
    7. '
' → logprob: -19.125158309936523
    8. '```' → logprob: -19.250158309936523
    9. '	' → logprob: -19.500158309936523
    10. '][-' → logprob: -19.500158309936523

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02692028507590294
    2. ']+' → logprob: -3.7769203186035156
    3. '-' → logprob: -6.151920318603516
    4. '+' → logprob: -6.776920318603516
    5. ' ]' → logprob: -8.651920318603516
    6. '1' → logprob: -9.401920318603516
    7. ' -' → logprob: -9.776920318603516
    8. ' +' → logprob: -10.526920318603516
    9. '   ' → logprob: -11.401920318603516
    10. ' ' → logprob: -11.901920318603516

Token 66: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5235523581504822
    2. ' +' → logprob: -0.8985523581504822
    3. ' plus' → logprob: -8.648551940917969
    4. ' ' → logprob: -9.898551940917969
    5. ']+' → logprob: -10.148551940917969
    6. '    ' → logprob: -10.648551940917969
    7. '   ' → logprob: -10.648551940917969
    8. ']' → logprob: -10.773551940917969
    9. '+i' → logprob: -10.898551940917969
    10. '+a' → logprob: -10.898551940917969

Token 67: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12695540487766266
    2. 'a' → logprob: -2.126955509185791
    3. ' ' → logprob: -11.501955032348633
    4. '   ' → logprob: -12.126955032348633
    5. '	a' → logprob: -12.126955032348633
    6. ' ' → logprob: -13.251955032348633
    7. '    ' → logprob: -13.626955032348633
    8. '1' → logprob: -14.001955032348633
    9. '_a' → logprob: -14.251955032348633
    10. '(a' → logprob: -14.876955032348633

Token 68: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.0391463193809614e-05
    2. '[i' → logprob: -9.750060081481934
    3. 'list' → logprob: -14.000060081481934
    4. 'a' → logprob: -14.625060081481934
    5. 'List' → logprob: -15.875060081481934
    6. '[' → logprob: -16.00006103515625
    7. '[_' → logprob: -17.00006103515625
    8. 's' → logprob: -17.00006103515625
    9. '```' → logprob: -17.12506103515625
    10. 'i' → logprob: -17.25006103515625

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002969703928101808
    2. '[' → logprob: -8.250296592712402
    3. ' [' → logprob: -10.375296592712402
    4. '[
' → logprob: -14.000296592712402
    5. '```' → logprob: -14.000296592712402
    6. '   ' → logprob: -14.625296592712402
    7. '][' → logprob: -14.750296592712402
    8. '[I' → logprob: -15.125296592712402
    9. 'i' → logprob: -15.250296592712402
    10. ')[' → logprob: -15.500296592712402

Token 70: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.024617860093712807
    2. '-' → logprob: -3.774617910385132
    3. '])
' → logprob: -7.149617671966553
    4. ']' → logprob: -8.649618148803711
    5. ' -' → logprob: -8.899618148803711
    6. ' ])' → logprob: -9.399618148803711
    7. ')' → logprob: -9.649618148803711
    8. '   ' → logprob: -10.274618148803711
    9. '])

' → logprob: -10.899618148803711
    10. ' ' → logprob: -11.024618148803711

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0004071971052326262
    2. 'i' → logprob: -7.8754072189331055
    3. ' ' → logprob: -10.750407218933105
    4. '	i' → logprob: -13.000407218933105
    5. ' _' → logprob: -14.375407218933105
    6. ' ' → logprob: -14.500407218933105
    7. '_i' → logprob: -14.500407218933105
    8. ' in' → logprob: -14.750407218933105
    9. '_' → logprob: -15.000407218933105
    10. '  ' → logprob: -15.375407218933105

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004642660729587078
    2. 'in' → logprob: -5.379642486572266
    3. ' ' → logprob: -11.004642486572266
    4. 'range' → logprob: -13.004642486572266
    5. '	in' → logprob: -13.879642486572266
    6. '<|end|>' → logprob: -14.254642486572266
    7. '  ' → logprob: -14.379642486572266
    8. '   ' → logprob: -14.879642486572266
    9. ' range' → logprob: -15.254642486572266
    10. '0' → logprob: -16.504642486572266

Token 75: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0004953675088472664
    2. 'range' → logprob: -7.625495433807373
    3. ' ' → logprob: -12.500494956970215
    4. '	range' → logprob: -12.875494956970215
    5. ' xrange' → logprob: -14.125494956970215
    6. '(range' → logprob: -15.500494956970215
    7. ' ran' → logprob: -16.62549591064453
    8. '  ' → logprob: -17.37549591064453
    9. '   ' → logprob: -18.50049591064453
    10. ' rango' → logprob: -18.50049591064453

Token 76: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2018391638994217
    2. '(' → logprob: -1.7018392086029053
    3. ' (' → logprob: -7.951838970184326
    4. ' n' → logprob: -9.826839447021484
    5. '(
' → logprob: -11.451839447021484
    6. '1' → logprob: -12.701839447021484
    7. ' ' → logprob: -12.826839447021484
    8. '(len' → logprob: -13.701839447021484
    9. '	n' → logprob: -14.201839447021484
    10. 'n' → logprob: -14.201839447021484

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00112735980655998
    2. '):
' → logprob: -7.376127243041992
    3. ')' → logprob: -8.001127243041992
    4. ' ):' → logprob: -9.501127243041992
    5. '+' → logprob: -10.126127243041992
    6. '-' → logprob: -10.501127243041992
    7. ':' → logprob: -11.501127243041992
    8. '   ' → logprob: -12.126127243041992
    9. '1' → logprob: -12.751127243041992
    10. ' ' → logprob: -13.876127243041992

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41746261715888977
    2. '       ' → logprob: -1.1674625873565674
    3. '
' → logprob: -5.2924628257751465
    4. ' add' → logprob: -5.5424628257751465
    5. '    
' → logprob: -5.6674628257751465
    6. ' 
' → logprob: -5.6674628257751465
    7. ':' → logprob: -5.6674628257751465
    8. ')' → logprob: -6.2924628257751465
    9. '    ' → logprob: -6.2924628257751465
    10. ':
' → logprob: -6.6674628257751465

Token 79: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.009883817285299301
    2. 'add' (adapté à ' add') → logprob: -4.634883880615234
    3. '   ' → logprob: -9.509883880615234
    4. '    ' → logprob: -10.634883880615234
    5. '       ' → logprob: -11.259883880615234
    6. '	add' → logprob: -12.259883880615234
    7. '(add' → logprob: -12.759883880615234
    8. '_add' → logprob: -12.884883880615234
    9. ' ' → logprob: -13.259883880615234
    10. ' ' → logprob: -13.384883880615234

Token 80: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00011725161311915144
    2. '_' → logprob: -9.625117301940918
    3. '_n' → logprob: -10.000117301940918
    4. ' _' → logprob: -12.875117301940918
    5. '_(' → logprob: -14.625117301940918
    6. '```' → logprob: -14.625117301940918
    7. '(i' → logprob: -14.750117301940918
    8. '_ne' → logprob: -14.875117301940918
    9. '_NEXT' → logprob: -15.750117301940918
    10. '(_' → logprob: -15.875117301940918

Token 81: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03805112838745117
    2. '(' → logprob: -3.288051128387451
    3. ' (' → logprob: -12.28805160522461
    4. '(
' → logprob: -13.41305160522461
    5. '((' → logprob: -13.91305160522461
    6. '(ii' → logprob: -14.41305160522461
    7. '(`' → logprob: -14.66305160522461
    8. '('' → logprob: -14.78805160522461
    9. '("("' → logprob: -14.91305160522461
    10. '```' → logprob: -15.66305160522461

Token 82: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. ')
' → logprob: -11.500014305114746
    3. ' )' → logprob: -12.500014305114746
    4. '))' → logprob: -15.625014305114746
    5. ')return' → logprob: -15.750014305114746
    6. ')

' → logprob: -16.125015258789062
    7. ')`' → logprob: -16.875015258789062
    8. ')i' → logprob: -17.000015258789062
    9. '+' → logprob: -17.125015258789062
    10. ')#' → logprob: -18.000015258789062

Token 83: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20966897904872894
    2. ' solve' → logprob: -2.5846688747406006
    3. ' calc' → logprob: -3.3346688747406006
    4. ' find' → logprob: -3.4596688747406006
    5. ' calculate' → logprob: -3.9596688747406006
    6. ' process' → logprob: -4.83466911315918
    7. ' compute' → logprob: -5.33466911315918
    8. ' update' → logprob: -6.08466911315918
    9. 'main' → logprob: -6.20966911315918
    10. 'solve' → logprob: -6.70966911315918

Token 85: '_total' (ID: 23814)
  Prédit: '_ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.40567606687545776
    2. '_min' → logprob: -2.5306761264801025
    3. '_answer' → logprob: -2.9056761264801025
    4. '_max' → logprob: -2.9056761264801025
    5. '_prefix' → logprob: -3.1556761264801025
    6. '_sa' → logprob: -3.4056761264801025
    7. '_sum' → logprob: -4.280675888061523
    8. '_suffix' → logprob: -4.655675888061523
    9. '_best' → logprob: -5.280675888061523
    10. '_sub' → logprob: -5.780675888061523

Token 86: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6755355000495911
    2. '()' → logprob: -1.1755354404449463
    3. '(sa' → logprob: -3.1755354404449463
    4. '(' → logprob: -3.5505354404449463
    5. '_cost' → logprob: -3.5505354404449463
    6. 'sum' → logprob: -3.9255354404449463
    7. '_' → logprob: -4.300535678863525
    8. 'def' → logprob: -4.800535678863525
    9. '(s' → logprob: -5.550535678863525
    10. '_sa' → logprob: -5.550535678863525

Token 87: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.16514934599399567
    2. '():' → logprob: -1.9151493310928345
    3. '(' → logprob: -5.540149211883545
    4. '(s' → logprob: -7.665149211883545
    5. '()' → logprob: -7.790149211883545
    6. '(a' → logprob: -10.790149688720703
    7. '(si' → logprob: -11.040149688720703
    8. '()(' → logprob: -11.415149688720703
    9. '(n' → logprob: -11.540149688720703
    10. '():
' → logprob: -11.665149688720703

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23037464916706085
    2. ',' → logprob: -1.6053746938705444
    3. ',n' → logprob: -5.730374813079834
    4. ')' → logprob: -6.980374813079834
    5. ' ):' → logprob: -7.730374813079834
    6. '):
' → logprob: -8.980374336242676
    7. ' ,' → logprob: -9.105374336242676
    8. '(n' → logprob: -11.230374336242676
    9. ':' → logprob: -11.480374336242676
    10. '   ' → logprob: -11.480374336242676

Token 89: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09053581953048706
    2. '   ' → logprob: -2.590535879135132
    3. 'return' → logprob: -4.465535640716553
    4. '[-' → logprob: -9.965536117553711
    5. '    ' → logprob: -11.965536117553711
    6. ' sa' → logprob: -12.090536117553711
    7. ' def' → logprob: -12.590536117553711
    8. '(sa' → logprob: -12.715536117553711
    9. '```' → logprob: -12.840536117553711
    10. '	return' → logprob: -12.965536117553711

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16186822950839996
    2. ' return' → logprob: -1.9118682146072388
    3. '   ' → logprob: -6.411868095397949
    4. '{return' → logprob: -15.53686809539795
    5. 'sa' → logprob: -15.53686809539795
    6. 'def' → logprob: -16.036869049072266
    7. ' ' → logprob: -16.286869049072266
    8. ' sa' → logprob: -16.286869049072266
    9. '```' → logprob: -16.911869049072266
    10. ':return' → logprob: -17.286869049072266

Token 91: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.029763683676719666
    2. 'sa' → logprob: -3.529763698577881
    3. '(sa' → logprob: -11.279763221740723
    4. '   ' → logprob: -15.404763221740723
    5. '_sa' → logprob: -15.779763221740723
    6. '-sa' → logprob: -16.65476417541504
    7. ' su' → logprob: -17.40476417541504
    8. 's' → logprob: -17.52976417541504
    9. '.sa' → logprob: -17.65476417541504
    10. ' ' → logprob: -18.27976417541504

Token 92: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.704273118884885e-07
    2. '[len' → logprob: -15.250000953674316
    3. '-' → logprob: -15.375000953674316
    4. '[' → logprob: -15.750000953674316
    5. ' [-' → logprob: -18.625
    6. '```' → logprob: -19.5
    7. '   ' → logprob: -19.875
    8. '][-' → logprob: -21.0
    9. '[:-' → logprob: -21.25
    10. '...' → logprob: -21.375

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '１' → logprob: -17.0
    3. ' ' → logprob: -17.125
    4. '۱' → logprob: -17.875
    5. '0' → logprob: -18.4375
    6. '```' → logprob: -18.4375
    7. '2' → logprob: -18.8125
    8. '   ' → logprob: -18.8125
    9. '१' → logprob: -19.375
    10. ']' → logprob: -19.4375

Token 94: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ' )' → logprob: -12.125009536743164
    3. ']' → logprob: -14.125009536743164
    4. '）' → logprob: -14.500009536743164
    5. '])' → logprob: -14.625009536743164
    6. '<|end|>' → logprob: -14.625009536743164
    7. '}' → logprob: -14.875009536743164
    8. ')
' → logprob: -15.375009536743164
    9. '))' → logprob: -15.625009536743164
    10. ')]' → logprob: -16.125009536743164

Token 95: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.035320136696100235
    2. '<|end|>' → logprob: -3.5353200435638428
    3. '[' → logprob: -6.535320281982422
    4. '
' → logprob: -7.035320281982422
    5. '<|end|>' → logprob: -7.160320281982422
    6. ')' → logprob: -7.410320281982422
    7. 'a' → logprob: -7.660320281982422
    8. '```' → logprob: -8.160320281982422
    9. '#' → logprob: -8.535320281982422
    10. 'n' → logprob: -8.785320281982422

Token 96: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8818058967590332
    2. ' calc' → logprob: -1.5068058967590332
    3. ' solve' → logprob: -1.8818058967590332
    4. ' max' → logprob: -2.131805896759033
    5. ' calculate' → logprob: -3.381805896759033
    6. ' min' → logprob: -4.631805896759033
    7. ' find' → logprob: -4.756805896759033
    8. ' read' → logprob: -5.006805896759033
    9. ' get' → logprob: -5.256805896759033
    10. ' total' → logprob: -5.756805896759033

Token 97: '_diff' (ID: 41047)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.6080384254455566
    2. '_sub' → logprob: -2.9830384254455566
    3. '_total' → logprob: -2.9830384254455566
    4. '_ans' → logprob: -2.9830384254455566
    5. '_diff' → logprob: -3.1080384254455566
    6. '_partition' → logprob: -3.3580384254455566
    7. '_max' → logprob: -3.4830384254455566
    8. '_prefix' → logprob: -3.6080384254455566
    9. '_segment' → logprob: -3.7330384254455566
    10. '_suffix' → logprob: -3.9830384254455566

Token 98: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.2125922590494156
    2. '(' → logprob: -2.837592363357544
    3. '():' → logprob: -2.837592363357544
    4. '(s' → logprob: -3.337592363357544
    5. '(a' → logprob: -4.337592124938965
    6. 's' → logprob: -4.337592124938965
    7. '_sa' → logprob: -5.587592124938965
    8. '_' → logprob: -6.212592124938965
    9. '_sum' → logprob: -6.962592124938965
    10. '_s' → logprob: -7.087592124938965

Token 99: '_value' (ID: 6734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002196409972384572
    2. ' ,' → logprob: -6.377196311950684
    3. '):' → logprob: -8.252196311950684
    4. ',n' → logprob: -9.377196311950684
    5. ',i' → logprob: -10.002196311950684
    6. ',a' → logprob: -10.752196311950684
    7. ',index' → logprob: -11.252196311950684
    8. ')' → logprob: -11.877196311950684
    9. ',s' → logprob: -11.877196311950684
    10. '1' → logprob: -12.252196311950684

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1440514475107193
    2. '1' → logprob: -2.1440515518188477
    3. ' ,' → logprob: -4.894051551818848
    4. '):' → logprob: -5.269051551818848
    5. 's' → logprob: -5.644051551818848
    6. '):
' → logprob: -8.394051551818848
    7. ' ):' → logprob: -9.394051551818848
    8. ',s' → logprob: -9.644051551818848
    9. '_,' → logprob: -10.019051551818848
    10. '0' → logprob: -10.019051551818848

Token 101: ' total' (ID: 3609)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -2.002981662750244
    2. 'sa' → logprob: -2.252981662750244
    3. ' target' → logprob: -3.127981662750244
    4. 'other' → logprob: -3.127981662750244
    5. ' total' → logprob: -3.252981662750244
    6. ' left' → logprob: -3.252981662750244
    7. 'ans' → logprob: -3.377981662750244
    8. 'i' → logprob: -3.377981662750244
    9. ' other' → logprob: -3.377981662750244
    10. ' index' → logprob: -3.377981662750244

Token 102: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0026793447323143482
    2. ')' → logprob: -6.377679347991943
    3. '_s' → logprob: -7.627679347991943
    4. 'sum' → logprob: -8.002678871154785
    5. '_' → logprob: -10.002678871154785
    6. '_value' → logprob: -10.002678871154785
    7. 's' → logprob: -11.127678871154785
    8. ',' → logprob: -12.002678871154785
    9. ' sum' → logprob: -12.252678871154785
    10. '<|end|>' → logprob: -12.252678871154785

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007977092638611794
    2. '):
' → logprob: -5.00797700881958
    3. ' ):' → logprob: -6.88297700881958
    4. ')' → logprob: -9.132977485656738
    5. ',' → logprob: -9.257977485656738
    6. ':' → logprob: -12.007977485656738
    7. ' ):
' → logprob: -12.007977485656738
    8. '):
' → logprob: -12.632977485656738
    9. '):

' → logprob: -12.757977485656738
    10. '=' → logprob: -12.882977485656738

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44431835412979126
    2. ' =' → logprob: -1.6943182945251465
    3. '=' → logprob: -2.8193182945251465
    4. ' return' → logprob: -2.8193182945251465
    5. ' abs' → logprob: -3.0693182945251465
    6. 'abs' → logprob: -5.5693182945251465
    7. ':' → logprob: -5.6943182945251465
    8. '    ' → logprob: -7.5693182945251465
    9. 'return' → logprob: -7.6943182945251465
    10. ' sa' → logprob: -8.569318771362305

Token 105: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3239113390445709
    2. 'return' (adapté à ' return') → logprob: -1.8239113092422485
    3. ' abs' → logprob: -2.573911428451538
    4. ' return' → logprob: -3.323911428451538
    5. '   ' → logprob: -5.948911190032959
    6. 'sa' → logprob: -8.573911666870117
    7. 'total' → logprob: -9.823911666870117
    8. ' sa' → logprob: -10.073911666870117
    9. 'min' → logprob: -10.323911666870117
    10. '(abs' → logprob: -10.573911666870117

Token 106: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.23448538780212402
    2. ' abs' → logprob: -1.734485387802124
    3. 'total' → logprob: -4.359485626220703
    4. 'max' → logprob: -4.984485626220703
    5. ' total' → logprob: -5.609485626220703
    6. 'min' → logprob: -5.734485626220703
    7. ' max' → logprob: -5.984485626220703
    8. ' min' → logprob: -6.359485626220703
    9. 'sa' → logprob: -6.609485626220703
    10. ' sa' → logprob: -8.609485626220703

Token 107: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.0475064180791378
    2. '(' → logprob: -3.547506332397461
    3. '(total' → logprob: -4.047506332397461
    4. 'total' → logprob: -9.422506332397461
    5. 'sa' → logprob: -10.547506332397461
    6. '((' → logprob: -11.047506332397461
    7. '(s' → logprob: -12.422506332397461
    8. '2' → logprob: -13.547506332397461
    9. '(si' → logprob: -14.047506332397461
    10. '(
' → logprob: -14.047506332397461

Token 108: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.339776832144707e-05
    2. 'value' → logprob: -9.500082969665527
    3. '_' → logprob: -12.000082969665527
    4. '_val' → logprob: -13.875082969665527
    5. 'alue' → logprob: -14.750082969665527
    6. '_va' → logprob: -14.875082969665527
    7. '_v' → logprob: -15.500082969665527
    8. 'Value' → logprob: -16.500083923339844
    9. '-' → logprob: -16.750083923339844
    10. '-value' → logprob: -16.875083923339844

Token 109: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28571411967277527
    2. ' -' → logprob: -1.4107141494750977
    3. '*' → logprob: -5.410714149475098
    4. ' *' → logprob: -10.035714149475098
    5. ' ' → logprob: -10.535714149475098
    6. '2' → logprob: -12.160714149475098
    7. ')' → logprob: -13.035714149475098
    8. '   ' → logprob: -13.785714149475098
    9. ' ' → logprob: -13.785714149475098
    10. '(' → logprob: -14.410714149475098

Token 110: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6969093084335327
    2. '(total' → logprob: -0.6969093084335327
    3. ' total' → logprob: -6.196909427642822
    4. 'total' → logprob: -6.446909427642822
    5. ' ' → logprob: -9.821908950805664
    6. '(' → logprob: -9.946908950805664
    7. '   ' → logprob: -11.446908950805664
    8. '(s' → logprob: -11.696908950805664
    9. '  ' → logprob: -12.946908950805664
    10. '(t' → logprob: -13.071908950805664

Token 111: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.39808642864227295
    2. ' total' → logprob: -1.148086428642273
    3. '(total' → logprob: -4.5230865478515625
    4. ' (' → logprob: -8.273086547851562
    5. ' ' → logprob: -10.898086547851562
    6. '   ' → logprob: -11.023086547851562
    7. ')' → logprob: -13.273086547851562
    8. '	total' → logprob: -13.398086547851562
    9. '  ' → logprob: -13.523086547851562
    10. '(' → logprob: -13.523086547851562

Token 112: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.8497312895488e-05
    2. 'sum' → logprob: -10.625068664550781
    3. '_s' → logprob: -10.750068664550781
    4. '_' → logprob: -11.375068664550781
    5. ' _' → logprob: -12.250068664550781
    6. '_value' → logprob: -12.250068664550781
    7. '_total' → logprob: -13.750068664550781
    8. '_split' → logprob: -16.87506866455078
    9. ' ' → logprob: -17.00006866455078
    10. 's' → logprob: -17.25006866455078

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11907926201820374
    2. '-' → logprob: -2.619079351425171
    3. '/' → logprob: -4.244079113006592
    4. ' ' → logprob: -4.619079113006592
    5. ' /' → logprob: -4.744079113006592
    6. ' //' → logprob: -5.619079113006592
    7. '//' → logprob: -6.119079113006592
    8. '>>' → logprob: -8.61907958984375
    9. ')' → logprob: -8.74407958984375
    10. ' ' → logprob: -9.49407958984375

Token 114: ' sa' (ID: 880)
  Prédit: 'sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sa' → logprob: -0.0076081594452261925
    2. ' sa' → logprob: -4.882607936859131
    3. '(sa' → logprob: -13.507608413696289
    4. ' ' → logprob: -15.007608413696289
    5. '_sa' → logprob: -16.00760841369629
    6. '   ' → logprob: -16.25760841369629
    7. '.sa' → logprob: -17.25760841369629
    8. '-sa' → logprob: -17.38260841369629
    9. '  ' → logprob: -18.00760841369629
    10. 's' → logprob: -18.63260841369629

Token 115: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.935296834039036e-06
    2. 'value' → logprob: -13.37500286102295
    3. 'alue' → logprob: -14.12500286102295
    4. '_' → logprob: -14.87500286102295
    5. '_VALUE' → logprob: -16.375003814697266
    6. '_values' → logprob: -17.625003814697266
    7. '-value' → logprob: -18.125003814697266
    8. '_val' → logprob: -18.250003814697266
    9. '_Value' → logprob: -18.375003814697266
    10. 'Value' → logprob: -19.250003814697266

Token 116: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20143672823905945
    2. ')' → logprob: -1.7014367580413818
    3. ')))' → logprob: -11.701436996459961
    4. ' ))' → logprob: -12.201436996459961
    5. '))
' → logprob: -12.451436996459961
    6. ' )' → logprob: -12.951436996459961
    7. ')
' → logprob: -14.076436996459961
    8. '))

' → logprob: -14.576436996459961
    9. '()))' → logprob: -14.701436996459961
    10. ')*' → logprob: -15.076436996459961

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4875752031803131
    2. '<|end|>' → logprob: -0.9875751733779907
    3. ')' → logprob: -5.612575054168701
    4. '#' → logprob: -5.987575054168701
    5. '
' → logprob: -6.487575054168701
    6. '```' → logprob: -6.737575054168701
    7. '<|end|>' → logprob: -7.112575054168701
    8. 'a' → logprob: -7.362575054168701
    9. '_' → logprob: -7.612575054168701
    10. '[' → logprob: -7.737575054168701

Token 118: ' update' (ID: 4027)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.244296908378601
    2. ' find' → logprob: -1.619296908378601
    3. ' calc' → logprob: -1.619296908378601
    4. ' minimize' → logprob: -2.9942970275878906
    5. ' main' → logprob: -2.9942970275878906
    6. 'min' → logprob: -3.2442970275878906
    7. 'find' → logprob: -3.2442970275878906
    8. 'calculate' → logprob: -3.4942970275878906
    9. 'main' → logprob: -3.7442970275878906
    10. 'solve' → logprob: -3.9942970275878906

Token 119: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.12304166704416275
    2. '_' → logprob: -2.8730416297912598
    3. '_answer' → logprob: -3.4980416297912598
    4. '(' → logprob: -5.24804162979126
    5. '(_' → logprob: -5.37304162979126
    6. '_value' → logprob: -5.87304162979126
    7. '_val' → logprob: -6.37304162979126
    8. '_answers' → logprob: -6.74804162979126
    9. '_result' → logprob: -6.87304162979126
    10. '_a' → logprob: -7.12304162979126

Token 120: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0008399999933317304
    2. '(' → logprob: -7.500840187072754
    3. '(answer' → logprob: -8.250840187072754
    4. ' (' → logprob: -11.375840187072754
    5. '(value' → logprob: -12.625840187072754
    6. '(current' → logprob: -13.125840187072754
    7. '(old' → logprob: -13.375840187072754
    8. '(val' → logprob: -13.500840187072754
    9. '(new' → logprob: -13.625840187072754
    10. '(a' → logprob: -13.750840187072754

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02646157331764698
    2. ' ,' → logprob: -3.651461601257324
    3. ',value' → logprob: -9.401461601257324
    4. ',new' → logprob: -10.026461601257324
    5. ',current' → logprob: -11.276461601257324
    6. ',s' → logprob: -11.526461601257324
    7. ',val' → logprob: -12.526461601257324
    8. ',a' → logprob: -13.651461601257324
    9. '):' → logprob: -13.651461601257324
    10. ',int' → logprob: -14.026461601257324

Token 122: ' diff' (ID: 8868)
  Prédit: ' candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -1.3417075872421265
    2. 'candidate' → logprob: -1.4667075872421265
    3. ' new' → logprob: -1.8417075872421265
    4. 'new' → logprob: -2.591707706451416
    5. 'diff' → logprob: -2.966707706451416
    6. 'value' → logprob: -2.966707706451416
    7. ' value' → logprob: -3.216707706451416
    8. ' sa' → logprob: -3.466707706451416
    9. 'sa' → logprob: -3.466707706451416
    10. ' diff' → logprob: -3.591707706451416

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013785813935101032
    2. '):
' → logprob: -4.6387858390808105
    3. ',' → logprob: -5.6387858390808105
    4. ' ):' → logprob: -7.8887858390808105
    5. ')' → logprob: -10.013785362243652
    6. '):

' → logprob: -11.513785362243652
    7. ' ,' → logprob: -12.013785362243652
    8. '_value' → logprob: -12.013785362243652
    9. '):
' → logprob: -12.513785362243652
    10. ' ' → logprob: -12.638785362243652

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010928311385214329
    2. ' if' → logprob: -7.376092910766602
    3. ' return' → logprob: -8.251092910766602
    4. 'return' → logprob: -9.251092910766602
    5. 'if' → logprob: -9.751092910766602
    6. ':' → logprob: -10.501092910766602
    7. ':return' → logprob: -11.751092910766602
    8. '	return' → logprob: -12.876092910766602
    9. ':
' → logprob: -13.126092910766602
    10. '    ' → logprob: -13.251092910766602

Token 125: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.960645854473114
    2. 'return' (adapté à ' return') → logprob: -0.960645854473114
    3. ' return' → logprob: -1.4606459140777588
    4. 'min' → logprob: -6.83564567565918
    5. ' min' → logprob: -7.21064567565918
    6. 'if' → logprob: -7.58564567565918
    7. ' if' → logprob: -8.46064567565918
    8. '	return' → logprob: -10.33564567565918
    9. ' ' → logprob: -11.46064567565918
    10. '    ' → logprob: -11.58564567565918

Token 126: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2520306408405304
    2. 'min' → logprob: -1.502030611038208
    3. ' ans' → logprob: -9.752030372619629
    4. 'ans' → logprob: -10.252030372619629
    5. ' diff' → logprob: -12.627030372619629
    6. 'diff' → logprob: -12.877030372619629
    7. '	min' → logprob: -13.877030372619629
    8. 'max' → logprob: -14.877030372619629
    9. '(min' → logprob: -14.877030372619629
    10. ' max' → logprob: -15.252030372619629

Token 127: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0019320894498378038
    2. '(' → logprob: -6.251932144165039
    3. ' (' → logprob: -12.751932144165039
    4. 'ans' → logprob: -15.251932144165039
    5. '(answer' → logprob: -15.626932144165039
    6. '(
' → logprob: -15.751932144165039
    7. '(abs' → logprob: -17.62693214416504
    8. '```' → logprob: -18.12693214416504
    9. '(

' → logprob: -18.25193214416504
    10. '	ans' → logprob: -18.25193214416504

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003301412332803011
    2. ' ,' → logprob: -5.753301620483398
    3. ',d' → logprob: -9.003301620483398
    4. 'diff' → logprob: -15.003301620483398
    5. '(diff' → logprob: -15.128301620483398
    6. ',
' → logprob: -16.2533016204834
    7. ' diff' → logprob: -16.3783016204834
    8. '   ' → logprob: -18.5033016204834
    9. ' dif' → logprob: -18.7533016204834
    10. ',

' → logprob: -19.3783016204834

Token 129: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.04858816787600517
    2. 'diff' → logprob: -3.048588275909424
    3. '	diff' → logprob: -14.048587799072266
    4. '(diff' → logprob: -17.173587799072266
    5. ' dif' → logprob: -17.298587799072266
    6. '_diff' → logprob: -19.423587799072266
    7. ' ' → logprob: -20.548587799072266
    8. '.diff' → logprob: -21.173587799072266
    9. '   ' → logprob: -21.923587799072266
    10. '    ' → logprob: -22.548587799072266

Token 130: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -17.875001907348633
    5. ')

' → logprob: -18.625001907348633
    6. ')return' → logprob: -19.125001907348633
    7. ')`' → logprob: -19.750001907348633
    8. '())' → logprob: -19.750001907348633
    9. ')}' → logprob: -20.250001907348633
    10. '}' → logprob: -20.375001907348633

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011942042037844658
    2. '<|end|>' → logprob: -4.511941909790039
    3. '#' → logprob: -8.261941909790039
    4. 'n' → logprob: -8.636941909790039
    5. '<|end|>' → logprob: -8.886941909790039
    6. '```' → logprob: -9.386941909790039
    7. 'if' → logprob: -9.511941909790039
    8. '[' → logprob: -10.261941909790039
    9. ')' → logprob: -10.511941909790039
    10. 'a' → logprob: -11.136941909790039

Token 132: ' iter' (ID: 10621)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11599770933389664
    2. 'main' → logprob: -2.240997791290283
    3. ' solve' → logprob: -6.115997791290283
    4. 'solve' → logprob: -7.115997791290283
    5. ' process' → logprob: -10.115997314453125
    6. 'process' → logprob: -10.240997314453125
    7. ' find' → logprob: -10.240997314453125
    8. '	main' → logprob: -11.740997314453125
    9. ' solution' → logprob: -12.115997314453125
    10. 'solution' → logprob: -12.615997314453125

Token 133: '_prefix' (ID: 33197)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.010639104060828686
    2. '_' → logprob: -5.260639190673828
    3. '_items' → logprob: -6.635639190673828
    4. '_lines' → logprob: -7.135639190673828
    5. 'def' → logprob: -7.760639190673828
    6. '_list' → logprob: -7.760639190673828
    7. '_elements' → logprob: -8.260639190673828
    8. '_parts' → logprob: -8.385639190673828
    9. '_ranges' → logprob: -8.635639190673828
    10. '_segments' → logprob: -8.760639190673828

Token 134: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.029774557799100876
    2. '_' → logprob: -3.7797746658325195
    3. '_sum' → logprob: -5.5297746658325195
    4. 'es' → logprob: -7.4047746658325195
    5. 's' → logprob: -7.7797746658325195
    6. '_indices' → logprob: -8.02977466583252
    7. '_suffix' → logprob: -8.65477466583252
    8. '_len' → logprob: -8.90477466583252
    9. '()' → logprob: -9.02977466583252
    10. '_lengths' → logprob: -9.15477466583252

Token 135: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.011256488971412182
    2. 'um' → logprob: -4.886256694793701
    3. 'uffix' → logprob: -6.761256694793701
    4. 'a' → logprob: -7.511256694793701
    5. 'ub' → logprob: -7.511256694793701
    6. 'quares' → logprob: -8.011256217956543
    7. 'plits' → logprob: -8.511256217956543
    8. 'ubs' → logprob: -8.886256217956543
    9. 'e' → logprob: -8.886256217956543
    10. 'izes' → logprob: -9.511256217956543

Token 136: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.02821483090519905
    2. '(n' → logprob: -4.153214931488037
    3. '():' → logprob: -4.528214931488037
    4. '(' → logprob: -6.778214931488037
    5. '(s' → logprob: -10.028214454650879
    6. '()' → logprob: -10.403214454650879
    7. '(si' → logprob: -11.528214454650879
    8. '(a' → logprob: -11.778214454650879
    9. '()(' → logprob: -11.778214454650879
    10. ' (' → logprob: -11.903214454650879

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01411743089556694
    2. '):' → logprob: -4.389117240905762
    3. ',n' → logprob: -6.639117240905762
    4. ' ,' → logprob: -8.639117240905762
    5. '):
' → logprob: -10.389117240905762
    6. ')' → logprob: -10.889117240905762
    7. ' ):' → logprob: -11.139117240905762
    8. ',i' → logprob: -11.764117240905762
    9. ',
' → logprob: -12.014117240905762
    10. 'n' → logprob: -12.014117240905762

Token 138: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4443261921405792
    2. ' a' → logprob: -1.6943261623382568
    3. 'n' → logprob: -2.694326162338257
    4. ' n' → logprob: -3.194326162338257
    5. ' ans' → logprob: -3.819326162338257
    6. 'ans' → logprob: -4.069326400756836
    7. ' total' → logprob: -4.319326400756836
    8. 'total' → logprob: -4.319326400756836
    9. '   ' → logprob: -8.194326400756836
    10. 'sa' → logprob: -8.444326400756836

Token 139: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004601015243679285
    2. '):
' → logprob: -8.375459671020508
    3. ',' → logprob: -8.875459671020508
    4. ')' → logprob: -10.000459671020508
    5. '+' → logprob: -10.625459671020508
    6. ' ):' → logprob: -11.250459671020508
    7. ':' → logprob: -12.500459671020508
    8. '   ' → logprob: -14.000459671020508
    9. '-' → logprob: -14.375459671020508
    10. '):
' → logprob: -14.500459671020508

Token 140: ' total' (ID: 3609)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8388659954071045
    2. 'ans' → logprob: -1.5888659954071045
    3. ' a' → logprob: -1.7138659954071045
    4. ' ans' → logprob: -1.7138659954071045
    5. '   ' → logprob: -6.588866233825684
    6. ' total' → logprob: -7.213866233825684
    7. 'total' → logprob: -7.463866233825684
    8. ' ' → logprob: -8.213866233825684
    9. '  ' → logprob: -9.588866233825684
    10. '	ans' → logprob: -10.026366233825684

Token 141: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003209229907952249
    2. '_s' → logprob: -9.000321388244629
    3. '):' → logprob: -9.250321388244629
    4. '_' → logprob: -9.750321388244629
    5. 'sum' → logprob: -11.125321388244629
    6. ',' → logprob: -11.375321388244629
    7. '_diff' → logprob: -12.625321388244629
    8. '):
' → logprob: -12.875321388244629
    9. ',_' → logprob: -13.250321388244629
    10. ')' → logprob: -13.500321388244629

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4291614592075348
    2. ',' → logprob: -1.0541614294052124
    3. '):
' → logprob: -7.929161548614502
    4. ')' → logprob: -9.929161071777344
    5. ':' → logprob: -10.304161071777344
    6. ' ):' → logprob: -12.304161071777344
    7. '   ' → logprob: -12.554161071777344
    8. 'def' → logprob: -12.679161071777344
    9. ' ,' → logprob: -13.429161071777344
    10. '=' → logprob: -14.616661071777344

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.627176768844947e-05
    2. 'ans' → logprob: -10.000096321105957
    3. ' ans' → logprob: -10.750096321105957
    4. 'def' → logprob: -11.750096321105957
    5. 'for' → logprob: -11.875096321105957
    6. '	ans' → logprob: -12.000096321105957
    7. '
' → logprob: -13.250096321105957
    8. ' for' → logprob: -13.250096321105957
    9. '    
' → logprob: -13.500096321105957
    10. '   ' → logprob: -13.750096321105957

Token 144: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.07131871581077576
    2. '   ' → logprob: -2.9463186264038086
    3. 'for' → logprob: -5.071318626403809
    4. ' ans' → logprob: -5.196318626403809
    5. 'def' → logprob: -5.696318626403809
    6. 'global' → logprob: -7.321318626403809
    7. ' for' → logprob: -8.071318626403809
    8. '(ans' → logprob: -10.196318626403809
    9. '	ans' → logprob: -10.321318626403809
    10. ' def' → logprob: -11.071318626403809

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002811290556564927
    2. '=' → logprob: -5.877811431884766
    3. ',' → logprob: -12.377811431884766
    4. ' ' → logprob: -14.002811431884766
    5. '   ' → logprob: -14.877811431884766
    6. '	' → logprob: -15.502811431884766
    7. ' ,' → logprob: -15.752811431884766
    8. ' =
' → logprob: -15.752811431884766
    9. '    ' → logprob: -15.877811431884766
    10. '  ' → logprob: -16.002811431884766

Token 146: ' initialize' (ID: 18400)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007856834563426673
    2. 'initialize' → logprob: -7.250785827636719
    3. ' float' → logprob: -9.500785827636719
    4. ' initialize' → logprob: -14.500785827636719
    5. 'init' → logprob: -15.875785827636719
    6. 'int' → logprob: -16.62578582763672
    7. '(float' → logprob: -16.87578582763672
    8. '	float' → logprob: -17.75078582763672
    9. '   ' → logprob: -18.12578582763672
    10. 'flo' → logprob: -18.37578582763672

Token 147: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -15.125
    3. '_' → logprob: -16.75
    4. '_answer' → logprob: -17.0
    5. '_an' → logprob: -17.875
    6. '(ans' → logprob: -18.375
    7. 'Ans' → logprob: -18.5
    8. '_a' → logprob: -18.875
    9. '_answers' → logprob: -19.5
    10. ''_' → logprob: -19.5

Token 148: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012601125054061413
    2. '()
' → logprob: -4.387600898742676
    3. '()

' → logprob: -9.387600898742676
    4. '()
' → logprob: -12.262600898742676
    5. ' ()' → logprob: -13.887600898742676
    6. '(' → logprob: -14.887600898742676
    7. 'def' → logprob: -15.137600898742676
    8. '()"' → logprob: -15.262600898742676
    9. '()\' → logprob: -15.387600898742676
    10. '();' → logprob: -15.887600898742676

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08982496708631516
    2. ' for' → logprob: -2.714824914932251
    3. '
' → logprob: -4.21482515335083
    4. '<|end|>' → logprob: -6.21482515335083
    5. 'for' → logprob: -6.71482515335083
    6. '	for' → logprob: -7.21482515335083
    7. '    
' → logprob: -7.71482515335083
    8. '' → logprob: -9.339824676513672
    9. ' ' → logprob: -9.339824676513672
    10. '    ' → logprob: -9.589824676513672

Token 150: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16417725384235382
    2. ' for' → logprob: -1.9141772985458374
    3. '   ' → logprob: -5.539177417755127
    4. ' ' → logprob: -12.289176940917969
    5. '
' → logprob: -13.039176940917969
    6. '	for' → logprob: -13.039176940917969
    7. 'ans' → logprob: -13.414176940917969
    8. '```' → logprob: -13.539176940917969
    9. 'i' → logprob: -13.664176940917969
    10. ' i' → logprob: -14.414176940917969

Token 151: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02056676335632801
    2. 'i' → logprob: -3.895566701889038
    3. '   ' → logprob: -11.520566940307617
    4. '_i' → logprob: -12.520566940307617
    5. ' ' → logprob: -12.645566940307617
    6. '	i' → logprob: -12.645566940307617
    7. '_' → logprob: -13.895566940307617
    8. ' _' → logprob: -13.895566940307617
    9. '(i' → logprob: -14.270566940307617
    10. 'sa' → logprob: -15.145566940307617

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012695993296802044
    2. 'in' → logprob: -4.387695789337158
    3. ' ' → logprob: -8.637696266174316
    4. '1' → logprob: -13.387696266174316
    5. 'space' → logprob: -13.512696266174316
    6. ' i' → logprob: -13.762696266174316
    7. '_' → logprob: -13.887696266174316
    8. '  ' → logprob: -14.387696266174316
    9. '	in' → logprob: -14.512696266174316
    10. 'range' → logprob: -14.887696266174316

Token 153: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193333625793457
    2. ' range' → logprob: -1.5019333362579346
    3. '(range' → logprob: -13.751933097839355
    4. 'sa' → logprob: -13.876933097839355
    5. ' ' → logprob: -14.001933097839355
    6. 'n' → logprob: -14.251933097839355
    7. '   ' → logprob: -14.876933097839355
    8. ' n' → logprob: -15.876933097839355
    9. '	range' → logprob: -16.376934051513672
    10. '  ' → logprob: -17.126934051513672

Token 154: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760631561279297
    2. '(n' → logprob: -0.8260631561279297
    3. ' (' → logprob: -9.20106315612793
    4. ' ' → logprob: -12.07606315612793
    5. ' in' → logprob: -12.45106315612793
    6. '1' → logprob: -12.57606315612793
    7. ' n' → logprob: -13.07606315612793
    8. '(range' → logprob: -13.07606315612793
    9. 'n' → logprob: -13.57606315612793
    10. '   ' → logprob: -13.57606315612793

Token 155: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3226853907108307
    2. '+' → logprob: -1.3226853609085083
    3. ' +' → logprob: -5.322685241699219
    4. '):
' → logprob: -5.572685241699219
    5. ' ):' → logprob: -7.322685241699219
    6. ')' → logprob: -10.947685241699219
    7. '-' → logprob: -12.447685241699219
    8. '   ' → logprob: -12.572685241699219
    9. '+:' → logprob: -12.822685241699219
    10. ':' → logprob: -12.947685241699219

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009126556105911732
    2. ' ' → logprob: -7.000912666320801
    3. '0' → logprob: -14.0009126663208
    4. '   ' → logprob: -15.0009126663208
    5. '  ' → logprob: -16.750911712646484
    6. ')' → logprob: -17.750911712646484
    7. '2' → logprob: -17.750911712646484
    8. '+' → logprob: -18.375911712646484
    9. '-' → logprob: -18.938411712646484
    10. 'def' → logprob: -19.375911712646484

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.301394023466855e-05
    2. ' ' → logprob: -10.000062942504883
    3. '0' → logprob: -11.000062942504883
    4. '   ' → logprob: -14.625062942504883
    5. '-' → logprob: -16.250062942504883
    6. '2' → logprob: -16.500062942504883
    7. 'def' → logprob: -16.687562942504883
    8. '  ' → logprob: -16.937562942504883
    9. '```' → logprob: -17.875062942504883
    10. '
' → logprob: -18.000062942504883

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003996953833848238
    2. '):
' → logprob: -5.628996849060059
    3. ':' → logprob: -7.878996849060059
    4. ')' → logprob: -11.503996849060059
    5. ' ):' → logprob: -12.253996849060059
    6. '   ' → logprob: -13.378996849060059
    7. '():' → logprob: -14.128996849060059
    8. '):
' → logprob: -14.628996849060059
    9. '):

' → logprob: -16.003997802734375
    10. ',' → logprob: -16.128997802734375

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006957544246688485
    2. '<|end|>' → logprob: -8.375696182250977
    3. '
' → logprob: -9.125696182250977
    4. '   ' → logprob: -9.250696182250977
    5. ',' → logprob: -9.375696182250977
    6. '        
' → logprob: -10.750696182250977
    7. ' s' → logprob: -11.500696182250977
    8. '	' → logprob: -11.625696182250977
    9. '    
' → logprob: -11.750696182250977
    10. ')' → logprob: -11.750696182250977

Token 160: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.32282981276512146
    2. '       ' → logprob: -2.0728297233581543
    3. ' diff' → logprob: -2.1978297233581543
    4. 'ans' → logprob: -4.197829723358154
    5. 'sa' → logprob: -4.322829723358154
    6. ' sa' → logprob: -5.447829723358154
    7. '   ' → logprob: -5.947829723358154
    8. ' ans' → logprob: -6.197829723358154
    9. '	diff' → logprob: -7.572829723358154
    10. ' current' → logprob: -8.197830200195312

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687241077423096
    2. ' =' → logprob: -1.136872410774231
    3. '_' → logprob: -14.636872291564941
    4. ')' → logprob: -15.261872291564941
    5. ' ' → logprob: -16.136873245239258
    6. '＝' → logprob: -16.261873245239258
    7. '	' → logprob: -16.386873245239258
    8. '=

' → logprob: -16.386873245239258
    9. ',' → logprob: -16.511873245239258
    10. ' ' → logprob: -16.761873245239258

Token 162: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.16023315489292145
    2. ' calc' → logprob: -1.9102331399917603
    3. '(calc' → logprob: -12.035233497619629
    4. '   ' → logprob: -13.660233497619629
    5. 'calculate' → logprob: -13.910233497619629
    6. '.calc' → logprob: -14.285233497619629
    7. ' calculate' → logprob: -15.785233497619629
    8. 'cal' → logprob: -16.160232543945312
    9. '_calc' → logprob: -16.285232543945312
    10. ' ' → logprob: -17.785232543945312

Token 163: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.00045902872807346284
    2. '_prefix' → logprob: -7.75045919418335
    3. 'diff' → logprob: -10.500458717346191
    4. 'prefix' → logprob: -15.250458717346191
    5. '_suffix' → logprob: -16.125459671020508
    6. '_difference' → logprob: -16.125459671020508
    7. '_pref' → logprob: -16.250459671020508
    8. '_' → logprob: -16.500459671020508
    9. '(diff' → logprob: -17.375459671020508
    10. 'Diff' → logprob: -17.500459671020508

Token 164: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -14.87500286102295
    4. '(si' → logprob: -17.250003814697266
    5. 'sa' → logprob: -17.375003814697266
    6. ' sa' → logprob: -17.625003814697266
    7. ' (' → logprob: -19.375003814697266
    8. '(

' → logprob: -19.875003814697266
    9. '.sa' → logprob: -21.125003814697266
    10. '   ' → logprob: -21.125003814697266

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.228561349213123e-05
    2. '[' → logprob: -9.875052452087402
    3. ' [' → logprob: -15.125052452087402
    4. '[
' → logprob: -15.625052452087402
    5. '(i' → logprob: -16.000051498413086
    6. '[s' → logprob: -16.625051498413086
    7. '[I' → logprob: -16.875051498413086
    8. '```' → logprob: -17.375051498413086
    9. '
' → logprob: -17.500051498413086
    10. '[index' → logprob: -18.125051498413086

Token 166: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018741434905678034
    2. ' ,' → logprob: -7.001873970031738
    3. '],' → logprob: -7.001873970031738
    4. '),' → logprob: -10.501873970031738
    5. ',total' → logprob: -12.001873970031738
    6. ',
' → logprob: -12.251873970031738
    7. '‌,' → logprob: -13.126873970031738
    8. ',

' → logprob: -13.126873970031738
    9. '   ' → logprob: -13.751873970031738
    10. ']' → logprob: -13.751873970031738

Token 167: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.31326186656951904
    2. ' total' → logprob: -1.313261866569519
    3. '(total' → logprob: -16.813261032104492
    4. '	total' → logprob: -17.813261032104492
    5. '$total' → logprob: -19.438261032104492
    6. ',total' → logprob: -19.688261032104492
    7. ' ' → logprob: -20.188261032104492
    8. ')' → logprob: -20.188261032104492
    9. '   ' → logprob: -20.313261032104492
    10. 'tot' → logprob: -20.688261032104492

Token 168: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. 'sum' → logprob: -14.250000953674316
    3. ')' → logprob: -18.0
    4. '_s' → logprob: -18.75
    5. 'Sum' → logprob: -19.25
    6. '_' → logprob: -19.5
    7. ' _' → logprob: -19.875
    8. '_SUM' → logprob: -20.25
    9. ' sum' → logprob: -20.875
    10. '_total' → logprob: -21.25

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04906896501779556
    2. ')
' → logprob: -3.0490689277648926
    3. '       ' → logprob: -7.674068927764893
    4. '   ' → logprob: -11.92406940460205
    5. ')
' → logprob: -12.29906940460205
    6. ' )' → logprob: -12.42406940460205
    7. ')

' → logprob: -14.42406940460205
    8. ' )
' → logprob: -14.67406940460205
    9. ')\
' → logprob: -16.299068450927734
    10. ')`
' → logprob: -16.549068450927734

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017695431597530842
    2. '   ' → logprob: -6.376769542694092
    3. '<|end|>' → logprob: -10.37677001953125
    4. 'ans' → logprob: -11.12677001953125
    5. ' ans' → logprob: -12.37677001953125
    6. '
' → logprob: -12.50177001953125
    7. '	ans' → logprob: -12.50177001953125
    8. ' ' → logprob: -13.00177001953125
    9. '```' → logprob: -13.25177001953125
    10. '<|end|>' → logprob: -13.75177001953125

Token 171: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7055050134658813
    2. '       ' → logprob: -1.4555050134658813
    3. 'ans' (adapté à ' ans') → logprob: -1.7055050134658813
    4. ' ans' → logprob: -2.455504894256592
    5. '	ans' → logprob: -5.830504894256592
    6. '
' → logprob: -6.330504894256592
    7. ' ' → logprob: -8.58050537109375
    8. '(ans' → logprob: -8.83050537109375
    9. '  ' → logprob: -9.33050537109375
    10. '```' → logprob: -9.70550537109375

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. ',' → logprob: -16.883615493774414
    4. ' =
' → logprob: -17.258615493774414
    5. ' ' → logprob: -17.633615493774414
    6. ' =)' → logprob: -17.883615493774414
    7. '    ' → logprob: -18.008615493774414
    8. '   ' → logprob: -18.383615493774414
    9. '	' → logprob: -19.383615493774414
    10. ' =
' → logprob: -19.508615493774414

Token 173: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.10020699352025986
    2. 'update' → logprob: -2.3502070903778076
    3. '	update' → logprob: -15.850207328796387
    4. '(update' → logprob: -15.975207328796387
    5. '   ' → logprob: -16.72520637512207
    6. '.update' → logprob: -17.10020637512207
    7. '_update' → logprob: -18.10020637512207
    8. '    ' → logprob: -19.10020637512207
    9. '```' → logprob: -19.35020637512207
    10. ' ' → logprob: -19.35020637512207

Token 174: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -5.32392441527918e-05
    2. 'ans' → logprob: -10.375053405761719
    3. '(ans' → logprob: -10.750053405761719
    4. '	ans' → logprob: -15.500053405761719
    5. '_answer' → logprob: -15.875053405761719
    6. 'Ans' → logprob: -16.50005340576172
    7. ' ans' → logprob: -16.62505340576172
    8. '```' → logprob: -17.12505340576172
    9. '(_' → logprob: -17.62505340576172
    10. ' _' → logprob: -17.62505340576172

Token 175: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.225939872208983e-05
    2. '(' → logprob: -10.375032424926758
    3. ' (' → logprob: -14.375032424926758
    4. '(
' → logprob: -16.125032424926758
    5. '(answer' → logprob: -16.250032424926758
    6. '_ans' → logprob: -16.625032424926758
    7. '(acc' → logprob: -17.750032424926758
    8. '	ans' → logprob: -18.250032424926758
    9. '(err' → logprob: -18.750032424926758
    10. 'ans' → logprob: -18.875032424926758

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004791704413946718
    2. ',d' → logprob: -8.000478744506836
    3. ' ,' → logprob: -8.875478744506836
    4. '(diff' → logprob: -13.000478744506836
    5. ',
' → logprob: -13.625478744506836
    6. 'diff' → logprob: -15.375478744506836
    7. ' diff' → logprob: -16.250478744506836
    8. '   ' → logprob: -17.625478744506836
    9. '
' → logprob: -17.625478744506836
    10. ')' → logprob: -17.750478744506836

Token 177: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.06196925416588783
    2. 'diff' → logprob: -2.81196928024292
    3. '	diff' → logprob: -13.936968803405762
    4. '(diff' → logprob: -14.436968803405762
    5. ' dif' → logprob: -15.936968803405762
    6. ' ' → logprob: -18.561969757080078
    7. '
' → logprob: -18.936969757080078
    8. '   ' → logprob: -19.061969757080078
    9. ' ' → logprob: -19.186969757080078
    10. '_diff' → logprob: -19.186969757080078

Token 178: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.039053045213222504
    2. ')' → logprob: -3.289052963256836
    3. '   ' → logprob: -6.914052963256836
    4. ')

' → logprob: -11.664052963256836
    5. ')
' → logprob: -12.414052963256836
    6. ' )
' → logprob: -12.789052963256836
    7. ')return' → logprob: -13.664052963256836
    8. ' ' → logprob: -14.914052963256836
    9. ')`
' → logprob: -15.789052963256836
    10. '
' → logprob: -16.039052963256836

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011563967913389206
    2. 'return' → logprob: -4.511563777923584
    3. ' return' → logprob: -7.761563777923584
    4. '
' → logprob: -9.386564254760742
    5. '	return' → logprob: -13.011564254760742
    6. '    
' → logprob: -13.261564254760742
    7. 'def' → logprob: -14.136564254760742
    8. '<|end|>' → logprob: -14.636564254760742
    9. '```' → logprob: -15.386564254760742
    10. '       ' → logprob: -15.511564254760742

Token 180: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4854504466056824
    2. '   ' → logprob: -0.9854504466056824
    3. ' return' → logprob: -4.485450267791748
    4. '	return' → logprob: -10.485450744628906
    5. '       ' → logprob: -12.110450744628906
    6. ' ' → logprob: -13.735450744628906
    7. '```' → logprob: -14.485450744628906
    8. ':return' → logprob: -14.485450744628906
    9. '  ' → logprob: -14.985450744628906
    10. '    
' → logprob: -15.235450744628906

Token 181: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3133361339569092
    2. ' ans' → logprob: -1.3133361339569092
    3. '(ans' → logprob: -9.563336372375488
    4. '	ans' → logprob: -12.438336372375488
    5. '_ans' → logprob: -16.063335418701172
    6. 'answer' → logprob: -17.563335418701172
    7. ' ' → logprob: -18.188335418701172
    8. 'anst' → logprob: -18.563335418701172
    9. ' ' → logprob: -18.563335418701172
    10. '   ' → logprob: -18.938335418701172

Token 182: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16027052700519562
    2. 'main' → logprob: -1.9102705717086792
    3. ' solve' → logprob: -10.410270690917969
    4. 'solve' → logprob: -11.160270690917969
    5. 'def' → logprob: -14.785270690917969
    6. ' process' → logprob: -14.910270690917969
    7. '	main' → logprob: -14.910270690917969
    8. 'process' → logprob: -15.410270690917969
    9. '_main' → logprob: -15.910270690917969
    10. ' solution' → logprob: -16.03527069091797

Token 185: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2948405128554441e-05
    2. '():
' → logprob: -11.62501335144043
    3. ' ():' → logprob: -12.62501335144043
    4. '()' → logprob: -14.50001335144043
    5. '(' → logprob: -16.25001335144043
    6. '():
' → logprob: -17.25001335144043
    7. '():

' → logprob: -18.37501335144043
    8. '(":' → logprob: -18.37501335144043
    9. ':' → logprob: -18.62501335144043
    10. '_' → logprob: -19.12501335144043

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26053154468536377
    2. 'n' → logprob: -1.5105315446853638
    3. ' n' → logprob: -4.760531425476074
    4. '	n' → logprob: -12.885531425476074
    5. 'def' → logprob: -14.260531425476074
    6. '```' → logprob: -14.885531425476074
    7. '_n' → logprob: -15.635531425476074
    8. ' ' → logprob: -15.635531425476074
    9. '
' → logprob: -15.760531425476074
    10. '  ' → logprob: -16.38553237915039

Token 187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0021321794483810663
    2. ' n' → logprob: -6.252132415771484
    3. '   ' → logprob: -8.502132415771484
    4. '	n' → logprob: -15.127132415771484
    5. ' ' → logprob: -15.377132415771484
    6. '
' → logprob: -17.002132415771484
    7. '  ' → logprob: -17.377132415771484
    8. '_n' → logprob: -17.752132415771484
    9. 'import' → logprob: -18.002132415771484
    10. 'N' → logprob: -18.877132415771484

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804412856698036
    2. '=' → logprob: -3.2880442142486572
    3. ',' → logprob: -13.913043975830078
    4. ' ' → logprob: -14.538043975830078
    5. '   ' → logprob: -15.038043975830078
    6. ' =
' → logprob: -15.163043975830078
    7. '=int' → logprob: -15.288043975830078
    8. ')' → logprob: -16.038043975830078
    9. ' ' → logprob: -16.288043975830078
    10. '    ' → logprob: -16.663043975830078

Token 189: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5759397745132446
    2. 'read' → logprob: -0.8259397745132446
    3. 'int' → logprob: -15.825940132141113
    4. ' int' → logprob: -16.075939178466797
    5. '	read' → logprob: -16.200939178466797
    6. '(read' → logprob: -17.325939178466797
    7. '_read' → logprob: -18.575939178466797
    8. '   ' → logprob: -18.700939178466797
    9. '  ' → logprob: -19.575939178466797
    10. '.read' → logprob: -20.325939178466797

Token 190: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005083533469587564
    2. '_' → logprob: -7.6255083084106445
    3. '()' → logprob: -11.250508308410645
    4. 'n' → logprob: -12.375508308410645
    5. ' _' → logprob: -14.125508308410645
    6. '(' → logprob: -14.500508308410645
    7. '_a' → logprob: -15.125508308410645
    8. '_x' → logprob: -15.125508308410645
    9. '```' → logprob: -15.125508308410645
    10. '_s' → logprob: -16.12550926208496

Token 191: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028086528182029724
    2. '()
' → logprob: -3.7780864238739014
    3. '   ' → logprob: -5.4030866622924805
    4. 'a' → logprob: -8.77808666229248
    5. 'n' → logprob: -9.65308666229248
    6. '
' → logprob: -10.77808666229248
    7. '<|end|>' → logprob: -11.15308666229248
    8. 'def' → logprob: -11.40308666229248
    9. '()\' → logprob: -11.40308666229248
    10. '();' → logprob: -12.15308666229248

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5524537563323975
    2. 'a' → logprob: -0.9274537563323975
    3. ' a' → logprob: -3.5524537563323975
    4. '	a' → logprob: -9.052453994750977
    5. ' ' → logprob: -10.427453994750977
    6. ',a' → logprob: -11.177453994750977
    7. 'ai' → logprob: -11.177453994750977
    8. '<|end|>' → logprob: -11.302453994750977
    9. '  ' → logprob: -11.427453994750977
    10. '    
' → logprob: -11.802453994750977

Token 193: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00010402000043541193
    2. ' a' → logprob: -9.375103950500488
    3. '   ' → logprob: -10.875103950500488
    4. '	a' → logprob: -16.250104904174805
    5. ' ' → logprob: -17.625104904174805
    6. '```' → logprob: -17.750104904174805
    7. 'ai' → logprob: -18.375104904174805
    8. '
' → logprob: -18.500104904174805
    9. '    
' → logprob: -18.500104904174805
    10. '_a' → logprob: -18.750104904174805

Token 194: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0015072436071932316
    2. '_' → logprob: -6.62650728225708
    3. ' =' → logprob: -8.751506805419922
    4. 'list' → logprob: -11.751506805419922
    5. '=' → logprob: -12.376506805419922
    6. ' _' → logprob: -12.751506805419922
    7. '_lst' → logprob: -13.126506805419922
    8. '_lists' → logprob: -13.501506805419922
    9. '=_' → logprob: -14.001506805419922
    10. '_=' → logprob: -14.001506805419922

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024067997932434
    2. '=' → logprob: -1.910240650177002
    3. '()' → logprob: -11.28524112701416
    4. '(' → logprob: -13.03524112701416
    5. '   ' → logprob: -14.53524112701416
    6. ')' → logprob: -15.16024112701416
    7. ' ' → logprob: -15.53524112701416
    8. '＝' → logprob: -15.53524112701416
    9. ' =
' → logprob: -16.910240173339844
    10. '[' → logprob: -17.035240173339844

Token 196: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.38687264919281006
    2. 'read' → logprob: -1.13687264919281
    3. '	read' → logprob: -13.511872291564941
    4. '(read' → logprob: -16.136873245239258
    5. '_read' → logprob: -16.636873245239258
    6. '.read' → logprob: -17.636873245239258
    7. '   ' → logprob: -18.261873245239258
    8. ' ' → logprob: -18.261873245239258
    9. 'list' → logprob: -18.636873245239258
    10. ' list' → logprob: -18.886873245239258

Token 197: '_ai' (ID: 175198)
  Prédit: '_ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ai' → logprob: -5.9153885558771435e-06
    2. '_a' → logprob: -12.375005722045898
    3. 'ai' → logprob: -13.375005722045898
    4. '_' → logprob: -16.3750057220459
    5. '(ai' → logprob: -17.1250057220459
    6. 'a' → logprob: -17.1250057220459
    7. ' ai' → logprob: -18.1250057220459
    8. '_an' → logprob: -19.3750057220459
    9. '"_' → logprob: -19.5000057220459
    10. '()' → logprob: -19.5000057220459

Token 198: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010501326061785221
    2. '
' → logprob: -4.635501384735107
    3. '    
' → logprob: -7.510501384735107
    4. 'sa' → logprob: -9.88550090789795
    5. 'def' → logprob: -10.13550090789795
    6. '<|end|>' → logprob: -10.63550090789795
    7. '  
' → logprob: -10.76050090789795
    8. 'initialize' → logprob: -11.13550090789795
    9. '  ' → logprob: -11.26050090789795
    10. '   
' → logprob: -12.01050090789795

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006678305566310883
    2. '
' → logprob: -5.506678104400635
    3. 'sa' → logprob: -6.756678104400635
    4. '    
' → logprob: -7.131678104400635
    5. ' sa' → logprob: -7.506678104400635
    6. 'def' → logprob: -10.256678581237793
    7. '```' → logprob: -11.256678581237793
    8. '  
' → logprob: -11.631678581237793
    9. ' 
' → logprob: -12.381678581237793
    10. '   ' → logprob: -12.881678581237793

Token 200: ' sa' (ID: 880)
  Prédit: 'sa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sa' (adapté à ' sa') → logprob: -0.5793116092681885
    2. ' sa' → logprob: -0.8293116092681885
    3. '   ' → logprob: -5.704311370849609
    4. '(sa' → logprob: -10.70431137084961
    5. ' ' → logprob: -12.32931137084961
    6. '  ' → logprob: -13.45431137084961
    7. '_sa' → logprob: -13.45431137084961
    8. 's' → logprob: -13.57931137084961
    9. '```' → logprob: -13.95431137084961
    10. 'SA' → logprob: -14.45431137084961

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. '.append' → logprob: -16.65475082397461
    4. ',' → logprob: -17.15475082397461
    5. '=create' → logprob: -17.40475082397461
    6. '＝' → logprob: -17.65475082397461
    7. '   ' → logprob: -17.65475082397461
    8. 'initialize' → logprob: -17.65475082397461
    9. ' ' → logprob: -17.77975082397461
    10. 'init' → logprob: -17.90475082397461

Token 202: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.2014666497707367
    2. ' initialize' → logprob: -1.701466679573059
    3. '[' → logprob: -10.07646656036377
    4. '	initialize' → logprob: -12.07646656036377
    5. ' [' → logprob: -12.70146656036377
    6. '.initialize' → logprob: -13.95146656036377
    7. '   ' → logprob: -14.45146656036377
    8. '_initialize' → logprob: -14.57646656036377
    9. 'itialize' → logprob: -15.07646656036377
    10. 'initial' → logprob: -16.451467514038086

Token 203: '_sa' (ID: 101558)
  Prédit: '_sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sa' → logprob: -2.141186450899113e-05
    2. '_' → logprob: -11.250020980834961
    3. 'sa' → logprob: -12.250020980834961
    4. '(sa' → logprob: -12.875020980834961
    5. '_s' → logprob: -14.500020980834961
    6. '_si' → logprob: -16.87502098083496
    7. ' _' → logprob: -17.00002098083496
    8. '(' → logprob: -17.62502098083496
    9. 'a' → logprob: -17.75002098083496
    10. 's' → logprob: -17.75002098083496

Token 204: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20202191174030304
    2. '()
' → logprob: -1.7020219564437866
    3. '   ' → logprob: -7.452022075653076
    4. '()
' → logprob: -11.327021598815918
    5. '()

' → logprob: -12.452021598815918
    6. '()\' → logprob: -12.577021598815918
    7. '();' → logprob: -12.952021598815918
    8. '
' → logprob: -13.702021598815918
    9. 'def' → logprob: -14.202021598815918
    10. '())' → logprob: -14.202021598815918

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028722546994686127
    2. 'calc' → logprob: -3.6537225246429443
    3. ' calc' → logprob: -6.153722763061523
    4. '
' → logprob: -8.778722763061523
    5. '(calc' → logprob: -9.403722763061523
    6. '    
' → logprob: -10.778722763061523
    7. '  ' → logprob: -11.778722763061523
    8. '.calc' → logprob: -11.903722763061523
    9. ' ' → logprob: -12.028722763061523
    10. '	c' → logprob: -13.028722763061523

Token 206: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' (adapté à ' calc') → logprob: -0.07209409773349762
    2. ' calc' → logprob: -2.947094202041626
    3. '   ' → logprob: -4.072093963623047
    4. '(calc' → logprob: -11.572093963623047
    5. 'calculate' → logprob: -12.072093963623047
    6. ' ' → logprob: -13.322093963623047
    7. 'cal' → logprob: -13.447093963623047
    8. '.calc' → logprob: -13.572093963623047
    9. '
' → logprob: -13.947093963623047
    10. '  ' → logprob: -13.947093963623047

Token 207: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -5.8126592193730175e-05
    2. '_' → logprob: -10.8750581741333
    3. 'prefix' → logprob: -10.8750581741333
    4. '_suffix' → logprob: -10.8750581741333
    5. '_sa' → logprob: -14.6250581741333
    6. '_pref' → logprob: -14.7500581741333
    7. ' _' → logprob: -16.625057220458984
    8. '```' → logprob: -16.750057220458984
    9. '_prec' → logprob: -17.000057220458984
    10. '_pres' → logprob: -17.125057220458984

Token 208: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.5451681974809617e-05
    2. 's' → logprob: -11.250015258789062
    3. '_sum' → logprob: -13.125015258789062
    4. '_' → logprob: -15.500015258789062
    5. '_sa' → logprob: -15.625015258789062
    6. ' _' → logprob: -17.000015258789062
    7. '(_' → logprob: -18.125015258789062
    8. ')_' → logprob: -18.625015258789062
    9. 'sum' → logprob: -18.625015258789062
    10. '   ' → logprob: -18.625015258789062

Token 209: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0001916200271807611
    2. 's' → logprob: -9.500191688537598
    3. 'a' → logprob: -9.750191688537598
    4. 'um' → logprob: -10.625191688537598
    5. 'ms' → logprob: -11.500191688537598
    6. '   ' → logprob: -12.500191688537598
    7. '```' → logprob: -12.750191688537598
    8. 'umsum' → logprob: -12.750191688537598
    9. '
' → logprob: -12.875191688537598
    10. '[' → logprob: -13.250191688537598

Token 210: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -16.5
    4. '(si' → logprob: -16.875
    5. '(s' → logprob: -19.75
    6. '(ss' → logprob: -20.625
    7. '(
' → logprob: -20.875
    8. ' sa' → logprob: -20.875
    9. '(se' → logprob: -21.0
    10. '(sd' → logprob: -21.25

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020178556442260742
    2. '(a' → logprob: -6.377017974853516
    3. ',a' → logprob: -8.502017974853516
    4. '(' → logprob: -10.127017974853516
    5. ' ,' → logprob: -10.502017974853516
    6. '(sa' → logprob: -10.877017974853516
    7. ')' → logprob: -11.252017974853516
    8. ',(' → logprob: -12.002017974853516
    9. ')(' → logprob: -13.502017974853516
    10. '   ' → logprob: -13.627017974853516

Token 212: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141655206680298
    2. ' a' → logprob: -1.7014164924621582
    3. '   ' → logprob: -12.826416969299316
    4. '	a' → logprob: -15.826416969299316
    5. '    ' → logprob: -16.076416015625
    6. '[a' → logprob: -16.451416015625
    7. ' ' → logprob: -16.701416015625
    8. ')a' → logprob: -17.201416015625
    9. '(a' → logprob: -17.576416015625
    10. ')' → logprob: -17.576416015625

Token 213: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.710618905955926e-05
    2. 'list' → logprob: -9.250097274780273
    3. '_' → logprob: -14.875097274780273
    4. 'List' → logprob: -15.625097274780273
    5. 'ist' → logprob: -16.125097274780273
    6. 'a' → logprob: -16.750097274780273
    7. '_LIST' → logprob: -16.875097274780273
    8. 'i' → logprob: -17.500097274780273
    9. 'lst' → logprob: -17.875097274780273
    10. '[' → logprob: -18.000097274780273

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011188744247192517
    2. ',n' → logprob: -9.12511157989502
    3. ' ,' → logprob: -13.00011157989502
    4. '   ' → logprob: -14.87511157989502
    5. 'n' → logprob: -15.50011157989502
    6. ')' → logprob: -16.375112533569336
    7. '(n' → logprob: -17.125112533569336
    8. ',
' → logprob: -18.375112533569336
    9. '(' → logprob: -18.750112533569336
    10. '(),' → logprob: -19.375112533569336

Token 215: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.125553131103516
    4. '	n' → logprob: -18.750553131103516
    5. ')n' → logprob: -19.625553131103516
    6. ')' → logprob: -21.500553131103516
    7. ' ' → logprob: -22.250553131103516
    8. 'len' → logprob: -22.750553131103516
    9. '_n' → logprob: -23.000553131103516
    10. '```' → logprob: -23.125553131103516

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042090186616405845
    2. ')
' → logprob: -8.000420570373535
    3. '   ' → logprob: -9.375420570373535
    4. ' )' → logprob: -15.500420570373535
    5. ')

' → logprob: -15.625420570373535
    6. ')n' → logprob: -16.12542152404785
    7. ')
' → logprob: -17.50042152404785
    8. ')`' → logprob: -17.75042152404785
    9. '),' → logprob: -17.75042152404785
    10. ')#' → logprob: -17.87542152404785

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009529638104140759
    2. '
' → logprob: -5.2595295906066895
    3. 'total' → logprob: -5.6345295906066895
    4. ' total' → logprob: -7.7595295906066895
    5. '    
' → logprob: -8.259530067443848
    6. '	total' → logprob: -12.009530067443848
    7. '  ' → logprob: -12.384530067443848
    8. '
' → logprob: -12.509530067443848
    9. '```' → logprob: -12.634530067443848
    10. ' ' → logprob: -12.759530067443848

Token 218: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.01844724267721176
    2. '   ' → logprob: -4.018447399139404
    3. ' total' → logprob: -8.143446922302246
    4. '
' → logprob: -12.768446922302246
    5. 'ans' → logprob: -13.268446922302246
    6. '	total' → logprob: -14.018446922302246
    7. ' ' → logprob: -14.768446922302246
    8. 'result' → logprob: -15.393446922302246
    9. '```' → logprob: -15.643446922302246
    10. 'return' → logprob: -16.143447875976562

Token 219: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00020473242329899222
    2. '_' → logprob: -8.625205039978027
    3. '_total' → logprob: -11.375205039978027
    4. '_s' → logprob: -11.500205039978027
    5. '=_' → logprob: -14.000205039978027
    6. 'sum' → logprob: -14.500205039978027
    7. ' _' → logprob: -14.500205039978027
    8. ')_' → logprob: -15.375205039978027
    9. '_SUM' → logprob: -15.375205039978027
    10. ' =' → logprob: -15.750205039978027

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687264919281006
    2. '=' → logprob: -1.13687264919281
    3. '=get' → logprob: -13.386872291564941
    4. '=s' → logprob: -17.511873245239258
    5. '＝' → logprob: -17.761873245239258
    6. ')' → logprob: -18.011873245239258
    7. ' =
' → logprob: -18.386873245239258
    8. '=int' → logprob: -18.386873245239258
    9. '=sum' → logprob: -18.636873245239258
    10. '(sa' → logprob: -18.761873245239258

Token 221: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.20194290578365326
    2. ' get' → logprob: -1.7019429206848145
    3. 'sa' → logprob: -7.8269429206848145
    4. ' sa' → logprob: -8.951942443847656
    5. '   ' → logprob: -14.451942443847656
    6. '(get' → logprob: -15.201942443847656
    7. '	get' → logprob: -15.701942443847656
    8. ' ' → logprob: -16.826942443847656
    9. '(sa' → logprob: -16.951942443847656
    10. 'sum' → logprob: -17.451942443847656

Token 222: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.03805170953273773
    2. 'total' → logprob: -3.2880516052246094
    3. 'sa' → logprob: -11.78805160522461
    4. '(sa' → logprob: -13.66305160522461
    5. '(total' → logprob: -13.91305160522461
    6. ' total' → logprob: -15.16305160522461
    7. 'otal' → logprob: -16.53805160522461
    8. '_sum' → logprob: -17.41305160522461
    9. 'Total' → logprob: -17.41305160522461
    10. 'sum' → logprob: -17.66305160522461

Token 223: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.60414821645827e-06
    2. 'sum' → logprob: -12.375004768371582
    3. '_sa' → logprob: -16.250003814697266
    4. '_s' → logprob: -16.375003814697266
    5. '_' → logprob: -18.000003814697266
    6. 's' → logprob: -18.125003814697266
    7. '_total' → logprob: -18.250003814697266
    8. '(_' → logprob: -19.250003814697266
    9. '(sum' → logprob: -19.750003814697266
    10. 'Sum' → logprob: -20.125003814697266

Token 224: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: 0.0
    2. 'sa' → logprob: -19.875
    3. '(s' → logprob: -21.125
    4. '(' → logprob: -21.25
    5. '(si' → logprob: -21.625
    6. ' (' → logprob: -22.5
    7. ' sa' → logprob: -23.25
    8. '_sa' → logprob: -23.5
    9. '.sa' → logprob: -23.875
    10. '(sr' → logprob: -24.0

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.250008583068848
    3. '())' → logprob: -13.500008583068848
    4. '()' → logprob: -13.750008583068848
    5. ' )' → logprob: -14.500008583068848
    6. '[' → logprob: -15.625008583068848
    7. '))' → logprob: -15.625008583068848
    8. ')

' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.37500762939453
    10. ' ' → logprob: -18.12500762939453

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020652106031775475
    2. ' ans' → logprob: -6.627065181732178
    3. 'ans' → logprob: -7.377065181732178
    4. '	ans' → logprob: -10.002065658569336
    5. 'result' → logprob: -11.002065658569336
    6. '    
' → logprob: -11.002065658569336
    7. '
' → logprob: -11.127065658569336
    8. ' result' → logprob: -12.127065658569336
    9. '```' → logprob: -12.252065658569336
    10. 'print' → logprob: -12.752065658569336

Token 227: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006682217586785555
    2. 'print' → logprob: -5.756682395935059
    3. ' ans' → logprob: -6.381682395935059
    4. 'result' → logprob: -7.131682395935059
    5. '   ' → logprob: -7.506682395935059
    6. 'answer' → logprob: -7.756682395935059
    7. 'res' → logprob: -11.506682395935059
    8. ' print' → logprob: -11.756682395935059
    9. '	ans' → logprob: -12.381682395935059
    10. ' result' → logprob: -12.631682395935059

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196802109479904
    2. '=' → logprob: -2.8119680881500244
    3. ' =
' → logprob: -15.311967849731445
    4. ' ' → logprob: -16.686967849731445
    5. '	' → logprob: -17.311967849731445
    6. '＝' → logprob: -17.311967849731445
    7. ' =)' → logprob: -17.811967849731445
    8. ' ' → logprob: -18.061967849731445
    9. '=

' → logprob: -18.436967849731445
    10. ',' → logprob: -18.561967849731445

Token 229: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4740804135799408
    2. ' iter' → logprob: -0.9740804433822632
    3. '   ' → logprob: -13.474080085754395
    4. '(iter' → logprob: -13.474080085754395
    5. '	iter' → logprob: -14.474080085754395
    6. ' ' → logprob: -16.59908103942871
    7. '0' → logprob: -17.84908103942871
    8. '_iter' → logprob: -18.09908103942871
    9. 'Iter' → logprob: -18.59908103942871
    10. '  ' → logprob: -18.59908103942871

Token 230: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -1.1517960956552997e-05
    2. '_suffix' → logprob: -11.625011444091797
    3. 'prefix' → logprob: -13.500011444091797
    4. '_' → logprob: -13.875011444091797
    5. '_pref' → logprob: -16.000011444091797
    6. '```' → logprob: -18.250011444091797
    7. 'refix' → logprob: -18.375011444091797
    8. '\' → logprob: -18.500011444091797
    9. '_PREFIX' → logprob: -18.625011444091797
    10. '(prefix' → logprob: -18.750011444091797

Token 231: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.898723561083898e-05
    2. '_prefix' → logprob: -10.125079154968262
    3. '_sum' → logprob: -10.875079154968262
    4. 's' → logprob: -11.875079154968262
    5. '_suffix' → logprob: -12.000079154968262
    6. '_ans' → logprob: -12.750079154968262
    7. '_' → logprob: -14.625079154968262
    8. '_scores' → logprob: -14.750079154968262
    9. '```' → logprob: -15.000079154968262
    10. ' _' → logprob: -15.250079154968262

Token 232: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.00027587503427639604
    2. 'um' → logprob: -8.500275611877441
    3. '[' → logprob: -11.125275611877441
    4. 'a' → logprob: -11.250275611877441
    5. 'ufs' → logprob: -11.375275611877441
    6. 'uffix' → logprob: -11.625275611877441
    7. 'uf' → logprob: -12.500275611877441
    8. '(' → logprob: -12.625275611877441
    9. 's' → logprob: -12.750275611877441
    10. '
' → logprob: -12.875275611877441

Token 233: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -14.62501335144043
    4. '(s' → logprob: -18.00001335144043
    5. '(si' → logprob: -18.00001335144043
    6. '(
' → logprob: -19.87501335144043
    7. '(se' → logprob: -20.62501335144043
    8. '(sm' → logprob: -21.12501335144043
    9. '(ss' → logprob: -21.12501335144043
    10. 'sa' → logprob: -21.37501335144043

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002529760589823127
    2. ',n' → logprob: -6.002529621124268
    3. '(n' → logprob: -10.502530097961426
    4. '(' → logprob: -11.127530097961426
    5. ' ,' → logprob: -11.627530097961426
    6. ')' → logprob: -13.502530097961426
    7. ',
' → logprob: -14.377530097961426
    8. 'n' → logprob: -14.502530097961426
    9. '   ' → logprob: -15.502530097961426
    10. ',

' → logprob: -17.00252914428711

Token 235: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04859202727675438
    2. ' n' → logprob: -3.0485920906066895
    3. '   ' → logprob: -12.298591613769531
    4. '	n' → logprob: -16.17359161376953
    5. '    ' → logprob: -18.29859161376953
    6. ')n' → logprob: -18.54859161376953
    7. ' ' → logprob: -19.42359161376953
    8. '_n' → logprob: -19.67359161376953
    9. '
' → logprob: -19.92359161376953
    10. '  ' → logprob: -20.29859161376953

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ')' → logprob: -11.000019073486328
    3. ' ,' → logprob: -13.125019073486328
    4. ',
' → logprob: -15.500019073486328
    5. '   ' → logprob: -15.625019073486328
    6. ',total' → logprob: -15.875019073486328
    7. ',

' → logprob: -17.875019073486328
    8. ',)' → logprob: -18.375019073486328
    9. ',n' → logprob: -18.500019073486328
    10. '),' → logprob: -18.875019073486328

Token 237: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16022422909736633
    2. ' total' → logprob: -1.910224199295044
    3. '(total' → logprob: -18.66022491455078
    4. '	total' → logprob: -18.66022491455078
    5. '   ' → logprob: -19.41022491455078
    6. '_total' → logprob: -20.16022491455078
    7. ' ' → logprob: -20.28522491455078
    8. ',total' → logprob: -20.41022491455078
    9. 'Total' → logprob: -21.28522491455078
    10. '$total' → logprob: -21.28522491455078

Token 238: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.625000953674316
    3. 'sum' → logprob: -15.000000953674316
    4. '_' → logprob: -17.75
    5. '_s' → logprob: -19.25
    6. ')_' → logprob: -20.0
    7. '_)' → logprob: -20.375
    8. 'Sum' → logprob: -20.75
    9. ' _' → logprob: -20.75
    10. '_SUM' → logprob: -20.875

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932106614112854
    2. ')
' → logprob: -0.6932106614112854
    3. '   ' → logprob: -9.94321060180664
    4. ')
' → logprob: -11.19321060180664
    5. ' )
' → logprob: -14.56821060180664
    6. '())
' → logprob: -15.31821060180664
    7. ')

' → logprob: -15.44321060180664
    8. '()' → logprob: -15.56821060180664
    9. ' )' → logprob: -15.81821060180664
    10. ')`
' → logprob: -16.19321060180664

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015674727037549019
    2. 'print' → logprob: -6.501567363739014
    3. '
' → logprob: -10.626567840576172
    4. ' print' → logprob: -10.876567840576172
    5. '    
' → logprob: -11.501567840576172
    6. '	print' → logprob: -12.751567840576172
    7. 'return' → logprob: -12.876567840576172
    8. '```' → logprob: -12.876567840576172
    9. '<|end|>' → logprob: -13.126567840576172
    10. ' return' → logprob: -13.751567840576172

Token 241: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12825660407543182
    2. '   ' → logprob: -2.1282565593719482
    3. ' print' → logprob: -6.628256797790527
    4. 'return' → logprob: -13.003256797790527
    5. '	print' → logprob: -13.003256797790527
    6. '```' → logprob: -14.128256797790527
    7. ' return' → logprob: -17.12825584411621
    8. '   ' → logprob: -18.12825584411621
    9. '_print' → logprob: -18.87825584411621
    10. '#print' → logprob: -19.25325584411621

Token 242: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04863244667649269
    2. '(' → logprob: -3.0486323833465576
    3. '(
' → logprob: -10.923632621765137
    4. '()' → logprob: -11.048632621765137
    5. ' (' → logprob: -11.548632621765137
    6. '(

' → logprob: -14.923632621765137
    7. '(answer' → logprob: -15.298632621765137
    8. '(abs' → logprob: -15.923632621765137
    9. '("("' → logprob: -15.923632621765137
    10. '((' → logprob: -16.42363166809082

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.875000953674316
    3. ' )' → logprob: -16.25
    4. ')`' → logprob: -16.5
    5. '())' → logprob: -17.5
    6. '()' → logprob: -17.5
    7. '))' → logprob: -17.5
    8. '')' → logprob: -17.875
    9. '`)' → logprob: -18.25
    10. '")' → logprob: -18.375

Token 244: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00023417205375153571
    2. 'main' → logprob: -8.750234603881836
    3. ' if' → logprob: -9.750234603881836
    4. '
' → logprob: -11.625234603881836
    5. '<|end|>' → logprob: -12.875234603881836
    6. '#' → logprob: -13.250234603881836
    7. '(main' → logprob: -14.125234603881836
    8. '__' → logprob: -14.125234603881836
    9. '```' → logprob: -14.250234603881836
    10. 'read' → logprob: -14.500234603881836

Token 245: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 243
Tokens correctement prédits (1ère position, stricte): 120
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 208
Précision stricte (1ère position): 49.38%
Précision adaptée (1ère position): 54.73%
Précision (top 10): 85.60%
================================================================================
