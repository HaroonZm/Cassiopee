================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def input():
    """
    Reads a line from standard input and strips trailing whitespace.

    :return: The input line as a stripped string.
    """
    return sys.stdin.readline().strip()

def list2d(a, b, c):
    """
    Creates a 2D list (a x b) initialized with value c.

    :param a: Number of rows.
    :param b: Number of columns.
    :param c: Initial value for each element.
    :return: 2D list of dimensions a x b filled with value c.
    """
    return [[c] * b for _ in range(a)]

def list3d(a, b, c, d):
    """
    Creates a 3D list (a x b x c) initialized with value d.

    :param a: First dimension size.
    :param b: Second dimension size.
    :param c: Third dimension size.
    :param d: Initial value for each element.
    :return: 3D list of dimensions a x b x c filled with value d.
    """
    return [[[d] * c for _ in range(b)] for _ in range(a)]

def list4d(a, b, c, d, e):
    """
    Creates a 4D list (a x b x c x d) initialized with value e.

    :param a: First dimension size.
    :param b: Second dimension size.
    :param c: Third dimension size.
    :param d: Fourth dimension size.
    :param e: Initial value for each element.
    :return: 4D list filled with value e.
    """
    return [[[[e] * d for _ in range(c)] for _ in range(b)] for _ in range(a)]

def ceil(x, y=1):
    """
    Returns the ceiling value of x divided by y.

    :param x: Numerator.
    :param y: Denominator. Default is 1.
    :return: The smallest integer not less than x / y.
    """
    return int(-(-x // y))

def INT():
    """
    Reads one line from input and returns it as an integer.

    :return: Input value as integer.
    """
    return int(input())

def MAP():
    """
    Reads one line from input and returns it as a map of integers.

    :return: A tuple of integers from the input line.
    """
    return map(int, input().split())

def LIST(N=None):
    """
    Reads a list of integers from input.

    :param N: If None, reads one line and splits into a list of integers.
              Otherwise, reads N lines and returns a list of integers.
    :return: List of integers.
    """
    if N is None:
        return list(MAP())
    else:
        return [INT() for _ in range(N)]

def Yes():
    """
    Prints 'Yes' to standard output.
    """
    print('Yes')

def No():
    """
    Prints 'No' to standard output.
    """
    print('No')

def YES():
    """
    Prints 'YES' to standard output.
    """
    print('YES')

def NO():
    """
    Prints 'NO' to standard output.
    """
    print('NO')

# Increase the recursion limit to handle deep recursions if necessary
sys.setrecursionlimit(10 ** 9)

# Large INF value used for initializations
INF = 10 ** 18

# Modulo value commonly used in competitive programming
MOD = 10 ** 9 + 7

class SegTree:
    """
    Segment Tree implementation supporting point updates and range queries.
    Useful for efficient min, max, sum (etc.) queries in a range.

    Public Methods:
        - update(i, x): update value at index i to x
        - query(l, r): query value in [l, r)
        - get(i): get value at index i
        - all(): get value for range [0, n)
    """

    def __init__(self, n, func, intv, A=[]):
        """
        Initializes segment tree with n elements, a function for combining elements, and an identity value.

        :param n: Number of elements (0-indexed).
        :param func: Binary function to combine two node values (e.g., min, max, sum, gcd).
        :param intv: The identity value for the function.
        :param A: Optional initial values as list. If given, populates the segment tree using A.
        """
        self.n = n                  # Number of elements
        self.func = func            # Segment function
        self.intv = intv            # Identity value
        
        # Find the smallest power of two >= n
        n2 = 1
        while n2 < n:
            n2 <<= 1
        self.n2 = n2
        # Create the segment tree array (indexed from 1)
        self.tree = [self.intv] * (n2 << 1)

        # If initial values are provided, populate the leaves, then build the tree upwards
        if A:
            # Set leaf values
            for i in range(n):
                self.tree[n2 + i] = A[i]
            # Fill internal nodes
            for i in range(n2 - 1, 0, -1):
                self.tree[i] = self.func(self.tree[i << 1], self.tree[(i << 1) | 1])

    def update(self, i, x):
        """
        Updates the value at index i to x.

        :param i: Index to update (0-indexed).
        :param x: New value to assign at index i.
        """
        i += self.n2
        self.tree[i] = x
        # Propagate changes up the tree
        while i > 1:
            i >>= 1
            self.tree[i] = self.func(self.tree[i << 1], self.tree[(i << 1) | 1])

    def query(self, a, b):
        """
        Queries in the range [a, b) and returns the combined value.

        :param a: Left index of range (inclusive, 0-indexed).
        :param b: Right index of range (exclusive, 0-indexed).
        :return: Combined value in the range [a, b).
        """
        l = a + self.n2
        r = b + self.n2
        res = self.intv
        # Left and right intervals handled separately
        while l < r:
            if r & 1:
                r -= 1
                res = self.func(res, self.tree[r])
            if l & 1:
                res = self.func(res, self.tree[l])
                l += 1
            l >>= 1
            r >>= 1
        return res

    def get(self, i):
        """
        Returns the current value at index i.

        :param i: Index to retrieve (0-indexed).
        :return: Value at index i.
        """
        return self.tree[i + self.n2]

    def all(self):
        """
        Returns the combined value over the whole range [0, n).

        :return: Combined value of the tree's root.
        """
        return self.tree[1]

# Read input for problem parameters N (string length), M (maximum jump length)
N, M = MAP()
S = input()  # String representing the board (0=open, 1=blocked)

# Initialize dynamic programming table with INF as default value
dp = SegTree(N + 1, min, INF)  # Use segment tree for range minimum query
dp.update(N, 0)  # Goal is at position N, cost is 0

# Fill dp table backwards (from N-1 to 0)
for i in range(N - 1, -1, -1):
    # Skip blocked cells ('1's)
    if S[i] == '1':
        continue
    # Query next M reachable dp values for the minimum step count
    mn = dp.query(i + 1, min(N + 1, i + M + 1))
    if mn != INF:
        # Update dp[i] if it's possible to reach the end from here
        dp.update(i, mn + 1)

# If start position is still INF, cannot reach the goal
if dp.get(0) == INF:
    print(-1)
    exit()

# Reconstruct path by greedy choice (making largest possible moves that decrease step count)
cnt = dp.get(0)  # Current optimal number of moves needed from start
cur = 0          # Current position
prev = -1
ans = []
for i in range(1, N + 1):
    # Only consider reachable positions
    if dp.get(i) == INF:
        continue
    # If dp value drops, add a move from prev to i
    if dp.get(i) != cnt:
        prev = cur
        cur = i
        ans.append(cur - prev)
        cnt = dp.get(i)

# Output the answer as space-separated move lengths
print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021503515541553497
    2. '\n' → logprob: -4.771503448486328
    3. '<|end|>' → logprob: -5.396503448486328
    4. 'import' → logprob: -5.646503448486328
    5. '\' → logprob: -6.771503448486328
    6. 'newline' → logprob: -7.146503448486328
    7. '<|end|>' → logprob: -7.396503448486328
    8. '' → logprob: -7.646503448486328
    9. '
' → logprob: -8.396503448486328
    10. '[' → logprob: -8.521503448486328

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008267794037237763
    2. '_' → logprob: -7.375826835632324
    3. '("("' → logprob: -10.000826835632324
    4. ' (' → logprob: -10.125826835632324
    5. '('' → logprob: -10.375826835632324
    6. '("' → logprob: -11.000826835632324
    7. 's' → logprob: -11.625826835632324
    8. '(
' → logprob: -12.125826835632324
    9. '():' → logprob: -12.250826835632324
    10. '_line' → logprob: -12.375826835632324

Token 6: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011179037392139435
    2. ' sys' → logprob: -5.761178970336914
    3. ' )' → logprob: -6.636178970336914
    4. '    ' → logprob: -6.761178970336914
    5. '()' → logprob: -6.761178970336914
    6. '   ' → logprob: -7.011178970336914
    7. '  ' → logprob: -7.136178970336914
    8. '<|end|>' → logprob: -7.261178970336914
    9. ' return' → logprob: -7.636178970336914
    10. ')' → logprob: -8.636178970336914

Token 7: ' """
' (ID: 7037)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14709527790546417
    2. 'sys' → logprob: -2.397095203399658
    3. ' return' → logprob: -3.897095203399658
    4. 'return' → logprob: -4.022095203399658
    5. ' input' → logprob: -5.897095203399658
    6. 'input' → logprob: -5.897095203399658
    7. '   ' → logprob: -6.772095203399658
    8. ' ' → logprob: -7.522095203399658
    9. 'pass' → logprob: -8.897095680236816
    10. ' pass' → logprob: -9.522095680236816

Token 8: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6331839561462402
    2. '   ' → logprob: -1.0081839561462402
    3. '"""' → logprob: -2.7581839561462402
    4. ')' → logprob: -4.50818395614624
    5. '  ' → logprob: -5.00818395614624
    6. ' return' → logprob: -5.38318395614624
    7. '    ' → logprob: -5.50818395614624
    8. ' ' → logprob: -6.13318395614624
    9. 'return' → logprob: -6.50818395614624
    10. ' pass' → logprob: -6.88318395614624

Token 9: ' Reads' (ID: 88839)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7679377198219299
    2. '   ' → logprob: -1.2679376602172852
    3. '()' → logprob: -2.517937660217285
    4. ' return' → logprob: -2.892937660217285
    5. ' pass' → logprob: -3.392937660217285
    6. 'return' → logprob: -3.892937660217285
    7. ' ' → logprob: -4.517937660217285
    8. ' """' → logprob: -4.767937660217285
    9. 'pass' → logprob: -5.142937660217285
    10. '    ' → logprob: -5.267937660217285

Token 10: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24659349024295807
    2. '<|end|>' → logprob: -1.8715934753417969
    3. '<|end|>' → logprob: -3.496593475341797
    4. ' from' → logprob: -4.371593475341797
    5. ' ' → logprob: -4.996593475341797
    6. ' a' → logprob: -6.371593475341797
    7. '(stdin' → logprob: -6.496593475341797
    8. 'from' → logprob: -6.621593475341797
    9. ' line' → logprob: -6.746593475341797
    10. ' user' → logprob: -6.871593475341797

Token 11: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006595648359507322
    2. 'line' → logprob: -5.881595611572266
    3. 'n' → logprob: -6.131595611572266
    4. ' single' → logprob: -6.881595611572266
    5. ' ' → logprob: -8.381595611572266
    6. ' string' → logprob: -9.256595611572266
    7. ' n' → logprob: -9.381595611572266
    8. '_line' → logprob: -10.006595611572266
    9. ' new' → logprob: -10.506595611572266
    10. ' sys' → logprob: -10.756595611572266

Token 12: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.006708616390824318
    2. '<|end|>' → logprob: -5.75670862197876
    3. '   ' → logprob: -6.50670862197876
    4. 'from' → logprob: -6.63170862197876
    5. '<|end|>' → logprob: -8.381708145141602
    6. ' of' → logprob: -9.381708145141602
    7. '    ' → logprob: -9.631708145141602
    8. ' ' → logprob: -9.756708145141602
    9. '\n' → logprob: -10.006708145141602
    10. ' and' → logprob: -10.256708145141602

Token 13: ' standard' (ID: 7024)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07559915632009506
    2. 'sys' → logprob: -2.700599193572998
    3. ' stdin' → logprob: -5.825599193572998
    4. 'stdin' → logprob: -6.575599193572998
    5. ' input' → logprob: -7.700599193572998
    6. ' the' → logprob: -7.825599193572998
    7. ' standard' → logprob: -8.07559871673584
    8. 'input' → logprob: -9.20059871673584
    9. '=sys' → logprob: -11.32559871673584
    10. 'standard' → logprob: -11.70059871673584

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07890675216913223
    2. 'input' → logprob: -2.578906774520874
    3. 'in' → logprob: -12.078907012939453
    4. 'stdin' → logprob: -12.578907012939453
    5. ' sys' → logprob: -13.078907012939453
    6. ' stdin' → logprob: -13.203907012939453
    7. ' in' → logprob: -13.578907012939453
    8. '_input' → logprob: -14.703907012939453
    9. '```' → logprob: -14.703907012939453
    10. 'sys' → logprob: -14.703907012939453

Token 15: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2567662298679352
    2. ')' → logprob: -1.8817662000656128
    3. '.' → logprob: -3.7567663192749023
    4. ',' → logprob: -3.7567663192749023
    5. '()' → logprob: -4.631766319274902
    6. ' and' → logprob: -6.131766319274902
    7. '().' → logprob: -6.131766319274902
    8. ' )' → logprob: -6.381766319274902
    9. '<|end|>' → logprob: -6.381766319274902
    10. '):' → logprob: -6.506766319274902

Token 16: ' strips' (ID: 52023)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.2403741031885147
    2. ' strips' → logprob: -1.6153740882873535
    3. 'rstrip' → logprob: -4.8653740882873535
    4. 'returns' → logprob: -5.4903740882873535
    5. 'return' → logprob: -6.8653740882873535
    6. ' return' → logprob: -7.2403740882873535
    7. 'strip' → logprob: -7.4903740882873535
    8. '   ' → logprob: -8.240374565124512
    9. ' removes' → logprob: -8.990374565124512
    10. '```' → logprob: -9.365374565124512

Token 17: ' trailing' (ID: 57985)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06996633857488632
    2. ' the' → logprob: -3.4449663162231445
    3. '<|end|>' → logprob: -4.0699663162231445
    4. ' leading' → logprob: -5.0699663162231445
    5. ' trailing' → logprob: -5.6949663162231445
    6. '<|end|>' → logprob: -5.8199663162231445
    7. '   ' → logprob: -6.6949663162231445
    8. 'the' → logprob: -7.1949663162231445
    9. ' it' → logprob: -7.4449663162231445
    10. ' ()' → logprob: -7.8199663162231445

Token 18: ' whitespace' (ID: 83606)
  Prédit: ' whitespace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' whitespace' → logprob: -0.045778900384902954
    2. ' spaces' → logprob: -3.79577898979187
    3. ' newline' → logprob: -4.670778751373291
    4. 'newline' → logprob: -5.670778751373291
    5. '\n' → logprob: -6.170778751373291
    6. '()' → logprob: -6.420778751373291
    7. '```' → logprob: -6.545778751373291
    8. ' \' → logprob: -7.170778751373291
    9. ' new' → logprob: -7.545778751373291
    10. 'wh' → logprob: -7.670778751373291

Token 19: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09336350858211517
    2. '\n' → logprob: -3.5933635234832764
    3. '```' → logprob: -4.093363285064697
    4. ')' → logprob: -4.343363285064697
    5. '    
' → logprob: -4.968363285064697
    6. '"""' → logprob: -5.093363285064697
    7. '.' → logprob: -5.468363285064697
    8. '<|end|>' → logprob: -5.593363285064697
    9. '  ' → logprob: -5.968363285064697
    10. '   
' → logprob: -6.593363285064697

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047415029257535934
    2. '"""' → logprob: -5.379741668701172
    3. ' """' → logprob: -10.129741668701172
    4. ')' → logprob: -10.504741668701172
    5. '```' → logprob: -11.004741668701172
    6. '""' → logprob: -11.004741668701172
    7. 'return' → logprob: -12.129741668701172
    8. '       ' → logprob: -12.629741668701172
    9. '    ' → logprob: -12.629741668701172
    10. '"""
' → logprob: -12.629741668701172

Token 21: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031131070107221603
    2. 'return' → logprob: -3.5311310291290283
    3. ' return' → logprob: -7.156131267547607
    4. '"""' → logprob: -7.906131267547607
    5. ')' → logprob: -9.28113079071045
    6. '       ' → logprob: -9.53113079071045
    7. '```' → logprob: -11.53113079071045
    8. '""' → logprob: -11.53113079071045
    9. ' line' → logprob: -11.65613079071045
    10. 'line' → logprob: -11.90613079071045

Token 22: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003231306094676256
    2. 'rtype' → logprob: -6.503231525421143
    3. 'str' → logprob: -6.753231525421143
    4. 'returns' → logprob: -7.628231525421143
    5. 'r' → logprob: -10.503231048583984
    6. ' return' → logprob: -11.253231048583984
    7. ':return' → logprob: -11.503231048583984
    8. 'Returns' → logprob: -11.878231048583984
    9. ' str' → logprob: -12.628231048583984
    10. 'param' → logprob: -12.628231048583984

Token 23: ':' (ID: 25)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5130646228790283
    2. '   ' → logprob: -1.8880646228790283
    3. 'str' → logprob: -1.8880646228790283
    4. ' line' → logprob: -3.2630646228790283
    5. ' sys' → logprob: -4.888064384460449
    6. ' :' → logprob: -4.888064384460449
    7. ':' → logprob: -5.138064384460449
    8. ' ' → logprob: -5.138064384460449
    9. ':str' → logprob: -5.138064384460449
    10. 'line' → logprob: -5.263064384460449

Token 24: ' The' (ID: 623)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.14412422478199005
    2. 'str' → logprob: -2.1441242694854736
    3. ' line' → logprob: -5.0191240310668945
    4. ' input' → logprob: -5.2691240310668945
    5. 'input' → logprob: -6.3941240310668945
    6. 'line' → logprob: -6.6441240310668945
    7. ' sys' → logprob: -7.3941240310668945
    8. ' ' → logprob: -7.6441240310668945
    9. '   ' → logprob: -8.269124031066895
    10. ' '' → logprob: -8.894124031066895

Token 25: ' input' (ID: 3422)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7266029715538025
    2. ' input' → logprob: -1.1016030311584473
    3. ' next' → logprob: -1.9766030311584473
    4. 'line' → logprob: -4.351603031158447
    5. 'input' → logprob: -4.351603031158447
    6. ' stripped' → logprob: -5.101603031158447
    7. ' user' → logprob: -6.101603031158447
    8. ' ' → logprob: -6.101603031158447
    9. ' str' → logprob: -6.226603031158447
    10. ' user's' → logprob: -6.726603031158447

Token 26: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6556113362312317
    2. ' string' → logprob: -1.655611276626587
    3. ' ' → logprob: -1.780611276626587
    4. 'string' → logprob: -2.780611276626587
    5. '<|end|>' → logprob: -4.030611515045166
    6. 'line' → logprob: -4.280611515045166
    7. '  ' → logprob: -4.655611515045166
    8. '()' → logprob: -4.905611515045166
    9. '   ' → logprob: -5.905611515045166
    10. '<|end|>' → logprob: -6.280611515045166

Token 27: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03985569626092911
    2. '\n' → logprob: -4.289855480194092
    3. '    
' → logprob: -5.539855480194092
    4. '    ' → logprob: -5.539855480194092
    5. '```' → logprob: -5.539855480194092
    6. '.rstrip' → logprob: -5.914855480194092
    7. '<|end|>' → logprob: -6.539855480194092
    8. '  ' → logprob: -6.789855480194092
    9. '\' → logprob: -7.164855480194092
    10. 'rstrip' → logprob: -7.164855480194092

Token 28: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05512937903404236
    2. 'a' → logprob: -2.930129289627075
    3. 'str' → logprob: -8.680129051208496
    4. ' str' → logprob: -9.680129051208496
    5. ' ' → logprob: -12.180129051208496
    6. ' an' → logprob: -12.930129051208496
    7. ' text' → logprob: -13.430129051208496
    8. ' string' → logprob: -13.555129051208496
    9. ' the' → logprob: -13.805129051208496
    10. 'string' → logprob: -13.930129051208496

Token 29: ' stripped' (ID: 78107)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.09720911085605621
    2. ' str' → logprob: -3.0972092151641846
    3. 'str' → logprob: -3.8472092151641846
    4. 'string' → logprob: -3.8472092151641846
    5. 'n' → logprob: -5.3472089767456055
    6. ' stripped' → logprob: -11.722208976745605
    7. ' n' → logprob: -11.972208976745605
    8. ' ' → logprob: -13.722208976745605
    9. ' single' → logprob: -14.222208976745605
    10. 'stri' → logprob: -14.472208976745605

Token 30: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.05928817763924599
    2. 'string' → logprob: -2.934288263320923
    3. ' line' → logprob: -6.059288024902344
    4. '  ' → logprob: -7.559288024902344
    5. ' ' → logprob: -8.059288024902344
    6. '`' → logprob: -8.309288024902344
    7. '```' → logprob: -8.434288024902344
    8. ' space' → logprob: -8.684288024902344
    9. 'str' → logprob: -9.184288024902344
    10. '   ' → logprob: -9.434288024902344

Token 31: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5646235346794128
    2. '\n' → logprob: -1.8146235942840576
    3. '"""' → logprob: -1.9396235942840576
    4. ')' → logprob: -2.5646235942840576
    5. '```' → logprob: -4.4396233558654785
    6. '"' → logprob: -5.0646233558654785
    7. '    
' → logprob: -5.4396233558654785
    8. 'newline' → logprob: -5.5646233558654785
    9. '
' → logprob: -5.8146233558654785
    10. '"""
' → logprob: -5.8146233558654785

Token 32: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3189114034175873
    2. '   ' → logprob: -1.3189114332199097
    3. '"""
' → logprob: -5.818911552429199
    4. '""' → logprob: -6.943911552429199
    5. '\n' → logprob: -7.443911552429199
    6. '"' → logprob: -7.693911552429199
    7. ' """' → logprob: -8.4439115524292
    8. '```' → logprob: -8.6939115524292
    9. ')' → logprob: -8.8189115524292
    10. '"\' → logprob: -9.8189115524292

Token 33: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6430308222770691
    2. '   ' → logprob: -0.7680308222770691
    3. '\n' → logprob: -5.768030643463135
    4. '```' → logprob: -6.143030643463135
    5. ' """' → logprob: -6.518030643463135
    6. '""' → logprob: -6.518030643463135
    7. ')' → logprob: -6.893030643463135
    8. '"""
' (adapté à ' """
') → logprob: -7.768030643463135
    9. '"' → logprob: -8.518031120300293
    10. '\' → logprob: -8.893031120300293

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021491507068276405
    2. 'return' → logprob: -3.896491527557373
    3. 'try' → logprob: -7.396491527557373
    4. ' return' → logprob: -8.146491050720215
    5. ' try' → logprob: -10.771491050720215
    6. '   ' → logprob: -11.646491050720215
    7. 'line' → logprob: -12.146491050720215
    8. '       ' → logprob: -12.521491050720215
    9. ' line' → logprob: -13.396491050720215
    10. '    ' → logprob: -13.396491050720215

Token 35: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002122426638379693
    2. 'line' → logprob: -6.627122402191162
    3. 'try' → logprob: -7.502122402191162
    4. '   ' → logprob: -8.87712287902832
    5. ' return' → logprob: -9.25212287902832
    6. 'raw' → logprob: -12.87712287902832
    7. 'user' → logprob: -13.00212287902832
    8. ' line' → logprob: -13.25212287902832
    9. 's' → logprob: -14.00212287902832
    10. 'ret' → logprob: -14.75212287902832

Token 36: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005241344682872295
    2. 'sys' → logprob: -5.255241394042969
    3. ' input' → logprob: -11.880241394042969
    4. 'input' → logprob: -14.505241394042969
    5. '=sys' → logprob: -16.25524139404297
    6. '(sys' → logprob: -17.50524139404297
    7. '	sys' → logprob: -18.00524139404297
    8. ' ' → logprob: -19.00524139404297
    9. ' ' → logprob: -19.13024139404297
    10. ' system' → logprob: -19.38024139404297

Token 37: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0033052158541977406
    2. '.' → logprob: -5.753305435180664
    3. '.stdout' → logprob: -9.378305435180664
    4. '.argv' → logprob: -10.378305435180664
    5. '.std' → logprob: -11.753305435180664
    6. '.readline' → logprob: -13.128305435180664
    7. '.input' → logprob: -14.003305435180664
    8. ' .' → logprob: -14.753305435180664
    9. '.stderr' → logprob: -15.378305435180664
    10. '.st' → logprob: -16.378305435180664

Token 38: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -11.625009536743164
    3. '.read' → logprob: -15.250009536743164
    4. ' readline' → logprob: -15.875009536743164
    5. '.readlines' → logprob: -18.625009536743164
    6. 'read' → logprob: -19.125009536743164
    7. '().' → logprob: -19.875009536743164
    8. ' .' → logprob: -21.250009536743164
    9. '```' → logprob: -22.125009536743164
    10. '.rstrip' → logprob: -22.625009536743164

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38687458634376526
    2. '()' → logprob: -1.1368745565414429
    3. '(' → logprob: -12.886874198913574
    4. '()?.' → logprob: -15.011874198913574
    5. ' ()' → logprob: -15.761874198913574
    6. ' ().' → logprob: -16.01187515258789
    7. '(),' → logprob: -16.88687515258789
    8. '())' → logprob: -17.01187515258789
    9. '().'' → logprob: -17.01187515258789
    10. '()<' → logprob: -17.13687515258789

Token 40: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12692810595035553
    2. 'rstrip' → logprob: -2.1269280910491943
    3. '_strip' → logprob: -16.876928329467773
    4. ' strip' → logprob: -16.876928329467773
    5. 'rst' → logprob: -18.126928329467773
    6. 'decode' → logprob: -18.376928329467773
    7. 'str' → logprob: -18.501928329467773
    8. '(strip' → logprob: -18.626928329467773
    9. 'rs' → logprob: -19.501928329467773
    10. 'r' → logprob: -19.501928329467773

Token 41: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011083070188760757
    2. '(' → logprob: -4.511083126068115
    3. '()
' → logprob: -11.386082649230957
    4. ' ()' → logprob: -11.511082649230957
    5. '`()' → logprob: -12.886082649230957
    6. '()(' → logprob: -13.136082649230957
    7. '()`' → logprob: -13.261082649230957
    8. '()

' → logprob: -13.511082649230957
    9. '(
' → logprob: -13.761082649230957
    10. '()\' → logprob: -14.136082649230957

Token 42: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0058882236480713
    2. '#' → logprob: -1.5058882236480713
    3. '\n' → logprob: -1.6308882236480713
    4. '\' → logprob: -2.5058882236480713
    5. '<|end|>' → logprob: -2.6308882236480713
    6. '```' → logprob: -4.255887985229492
    7. '' → logprob: -4.505887985229492
    8. 'def' → logprob: -4.880887985229492
    9. ' ' → logprob: -5.505887985229492
    10. '.' → logprob: -5.630887985229492

Token 43: ' list' (ID: 1562)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.727443516254425
    2. ' calculate' → logprob: -1.6024434566497803
    3. '_' → logprob: -2.4774434566497803
    4. ' ' → logprob: -2.7274434566497803
    5. ' add' → logprob: -2.8524434566497803
    6. ' process' → logprob: -3.4774434566497803
    7. ' space' → logprob: -4.477443695068359
    8. ' parse' → logprob: -4.852443695068359
    9. ' compute' → logprob: -5.102443695068359
    10. ' user' → logprob: -5.102443695068359

Token 44: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21265973150730133
    2. '_append' → logprob: -1.8376597166061401
    3. '(' → logprob: -5.08765983581543
    4. '_items' → logprob: -5.46265983581543
    5. '_a' → logprob: -6.08765983581543
    6. '_size' → logprob: -6.21265983581543
    7. '_length' → logprob: -6.46265983581543
    8. '.append' → logprob: -6.71265983581543
    9. '_add' → logprob: -6.83765983581543
    10. '_to' → logprob: -6.96265983581543

Token 45: 'd' (ID: 67)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.22236095368862152
    2. '_str' → logprob: -2.972360849380493
    3. '_append' → logprob: -3.097360849380493
    4. 'append' → logprob: -3.597360849380493
    5. '_' → logprob: -3.847360849380493
    6. 'str' → logprob: -3.972360849380493
    7. 'To' → logprob: -4.847361087799072
    8. 'dict' → logprob: -5.347361087799072
    9. 'string' → logprob: -5.722361087799072
    10. '_set' → logprob: -5.972361087799072

Token 46: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033923061564564705
    2. '(n' → logprob: -5.753392219543457
    3. '(length' → logprob: -9.878392219543457
    4. '(size' → logprob: -10.003392219543457
    5. '(dim' → logprob: -10.628392219543457
    6. '(num' → logprob: -10.753392219543457
    7. '("("' → logprob: -11.128392219543457
    8. '(len' → logprob: -11.753392219543457
    9. '(
' → logprob: -11.878392219543457
    10. '(depth' → logprob: -12.003392219543457

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08493156731128693
    2. ',b' → logprob: -3.9599316120147705
    3. '(n' → logprob: -3.9599316120147705
    4. '(' → logprob: -4.209931373596191
    5. ')' → logprob: -4.459931373596191
    6. ' ,' → logprob: -5.334931373596191
    7. ',n' → logprob: -5.459931373596191
    8. '(size' → logprob: -7.084931373596191
    9. ',size' → logprob: -7.209931373596191
    10. ',a' → logprob: -7.459931373596191

Token 48: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04256654530763626
    2. ' b' → logprob: -3.6675665378570557
    3. 'rows' → logprob: -4.917566776275635
    4. ')' → logprob: -5.542566776275635
    5. 'n' → logprob: -5.917566776275635
    6. 'r' → logprob: -6.917566776275635
    7. ' ' → logprob: -8.542566299438477
    8. ' n' → logprob: -8.792566299438477
    9. ' rows' → logprob: -8.792566299438477
    10. '):' → logprob: -9.042566299438477

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.375004768371582
    3. '):' → logprob: -16.125003814697266
    4. ',a' → logprob: -17.250003814697266
    5. ',int' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.500003814697266
    7. ')' → logprob: -18.875003814697266
    8. ',b' → logprob: -19.375003814697266
    9. '‌,' → logprob: -19.500003814697266
    10. ',

' → logprob: -19.875003814697266

Token 50: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4693550765514374
    2. 'v' → logprob: -1.0943551063537598
    3. ' c' → logprob: -4.21935510635376
    4. ' v' → logprob: -4.84435510635376
    5. ',' → logprob: -5.59435510635376
    6. 'value' → logprob: -5.59435510635376
    7. 'None' → logprob: -6.34435510635376
    8. ' ' → logprob: -6.71935510635376
    9. 'fill' → logprob: -6.71935510635376
    10. 'init' → logprob: -6.84435510635376

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008164160535670817
    2. ')' → logprob: -7.125816345214844
    3. '):
' → logprob: -11.750816345214844
    4. ' ):' → logprob: -13.125816345214844
    5. '):
' → logprob: -14.500816345214844
    6. '=' → logprob: -14.625816345214844
    7. ':' → logprob: -14.875816345214844
    8. ')：' → logprob: -15.000816345214844
    9. '   ' → logprob: -16.625816345214844
    10. '():' → logprob: -16.750816345214844

Token 52: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062396056950092316
    2. '   ' → logprob: -3.3123960494995117
    3. '=' → logprob: -5.062396049499512
    4. '):' → logprob: -5.062396049499512
    5. ' :' → logprob: -6.062396049499512
    6. ' =' → logprob: -6.312396049499512
    7. '=[]' → logprob: -6.687396049499512
    8. ' return' → logprob: -6.937396049499512
    9. '():' → logprob: -6.937396049499512
    10. ':return' → logprob: -7.062396049499512

Token 53: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0367580652236938
    2. ' [' → logprob: -1.0367580652236938
    3. '   ' → logprob: -1.7867580652236938
    4. '[' → logprob: -2.2867579460144043
    5. 'return' → logprob: -4.036757946014404
    6. ' [[' → logprob: -6.911757946014404
    7. ' ' → logprob: -7.036757946014404
    8. '    ' → logprob: -7.661757946014404
    9. '[
' → logprob: -7.661757946014404
    10. '	return' → logprob: -7.911757946014404

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043122630566358566
    2. '"""' → logprob: -3.9181225299835205
    3. '#' → logprob: -5.1681227684021
    4. ')' → logprob: -5.6681227684021
    5. '"""
' → logprob: -6.4181227684021
    6. ' return' → logprob: -6.4181227684021
    7. ' ' → logprob: -6.6681227684021
    8. '*' → logprob: -7.1681227684021
    9. '    ' → logprob: -7.1681227684021
    10. ' """' → logprob: -7.1681227684021

Token 55: ' Creates' (ID: 28538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3420202136039734
    2. '   ' → logprob: -1.3420202732086182
    3. 'return' → logprob: -3.592020273208618
    4. ' ' → logprob: -7.717020034790039
    5. '	return' → logprob: -8.967020034790039
    6. '    ' → logprob: -9.967020034790039
    7. ')' → logprob: -10.092020034790039
    8. '  ' → logprob: -10.592020034790039
    9. ':return' → logprob: -10.967020034790039
    10. ' """' → logprob: -11.592020034790039

Token 56: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2015739381313324
    2. 'a' → logprob: -1.7015739679336548
    3. '[a' → logprob: -9.201574325561523
    4. ' ' → logprob: -10.201574325561523
    5. ' an' → logprob: -11.826574325561523
    6. '(a' → logprob: -12.451574325561523
    7. '<|end|>' → logprob: -13.326574325561523
    8. '```' → logprob: -13.451574325561523
    9. ' [' → logprob: -13.576574325561523
    10. '   ' → logprob: -13.701574325561523

Token 57: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12033271044492722
    2. ' list' → logprob: -2.995332717895508
    3. ' ' → logprob: -3.620332717895508
    4. ' [[' → logprob: -4.370332717895508
    5. '[a' → logprob: -4.620332717895508
    6. '[n' → logprob: -5.245332717895508
    7. 'a' → logprob: -5.745332717895508
    8. '[' → logprob: -6.370332717895508
    9. '[[' → logprob: -6.370332717895508
    10. ' [[]' → logprob: -7.245332717895508

Token 58: '2' (ID: 17)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.42174598574638367
    2. '2' → logprob: -1.671746015548706
    3. '[[' → logprob: -3.171746015548706
    4. ' list' → logprob: -3.296746015548706
    5. '[a' → logprob: -3.421746015548706
    6. 'a' → logprob: -3.546746015548706
    7. ' ' → logprob: -5.046745777130127
    8. '二维' → logprob: -5.546745777130127
    9. ' [' → logprob: -6.421745777130127
    10. ' [[' → logprob: -6.546745777130127

Token 59: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33144429326057434
    2. 'D' → logprob: -1.831444263458252
    3. '-dimensional' → logprob: -2.456444263458252
    4. ' -' → logprob: -3.956444263458252
    5. '-' → logprob: -4.581444263458252
    6. '-d' → logprob: -5.331444263458252
    7. '-D' → logprob: -7.081444263458252
    8. '[' → logprob: -8.33144474029541
    9. 'dim' → logprob: -8.33144474029541
    10. ' dimensional' → logprob: -8.33144474029541

Token 60: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.004901412408798933
    2. ' [' → logprob: -5.62990140914917
    3. ' array' → logprob: -7.50490140914917
    4. '[' → logprob: -8.129901885986328
    5. 'list' → logprob: -8.379901885986328
    6. ' ' → logprob: -9.004901885986328
    7. '_list' → logprob: -10.504901885986328
    8. '[list' → logprob: -11.504901885986328
    9. ' 리스트' → logprob: -11.504901885986328
    10. ' lista' → logprob: -11.629901885986328

Token 61: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09152839332818985
    2. '(a' → logprob: -2.8415284156799316
    3. ' (' → logprob: -4.091528415679932
    4. '   ' → logprob: -4.841528415679932
    5. '(n' → logprob: -7.216528415679932
    6. '([' → logprob: -7.466528415679932
    7. '```' → logprob: -7.716528415679932
    8. '[' → logprob: -7.841528415679932
    9. '(
' → logprob: -7.841528415679932
    10. '(`' → logprob: -8.341527938842773

Token 62: 'a' (ID: 64)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.4298350512981415
    2. '[' → logprob: -1.8048350811004639
    3. ')' → logprob: -2.304835081100464
    4. 'a' → logprob: -2.929835081100464
    5. ' [' → logprob: -4.429834842681885
    6. '   ' → logprob: -5.679834842681885
    7. '[int' → logprob: -5.679834842681885
    8. ' ' → logprob: -5.929834842681885
    9. '[]' → logprob: -6.429834842681885
    10. '[[' → logprob: -6.804834842681885

Token 63: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7177524566650391
    2. ' [' → logprob: -1.342752456665039
    3. ')' → logprob: -1.842752456665039
    4. ',' → logprob: -4.217752456665039
    5. ' ' → logprob: -4.342752456665039
    6. ']' → logprob: -4.717752456665039
    7. ' list' → logprob: -4.842752456665039
    8. ' for' → logprob: -4.967752456665039
    9. '-dimensional' → logprob: -5.217752456665039
    10. '-' → logprob: -5.467752456665039

Token 64: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038044705986976624
    2. ' b' → logprob: -3.2880446910858154
    3. ' ' → logprob: -12.663044929504395
    4. '   ' → logprob: -17.663043975830078
    5. ' ' → logprob: -18.413043975830078
    6. '  ' → logprob: -18.663043975830078
    7. '	b' → logprob: -19.163043975830078
    8. ')b' → logprob: -19.538043975830078
    9. '```' → logprob: -20.413043975830078
    10. ')' → logprob: -20.538043975830078

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006813169457018375
    2. ',' → logprob: -5.381813049316406
    3. ' )' → logprob: -6.381813049316406
    4. ' list' → logprob: -8.256813049316406
    5. ' ,' → logprob: -9.256813049316406
    6. '[' → logprob: -10.131813049316406
    7. '`)' → logprob: -11.256813049316406
    8. ' with' → logprob: -11.506813049316406
    9. 'list' → logprob: -11.631813049316406
    10. ' array' → logprob: -11.756813049316406

Token 66: ' initialized' (ID: 40319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6431727409362793
    2. ' with' → logprob: -1.3931727409362793
    3. ' of' → logprob: -2.3931727409362793
    4. '[' → logprob: -3.0181727409362793
    5. ' [' → logprob: -3.7681727409362793
    6. ' =' → logprob: -4.268172740936279
    7. '```' → logprob: -4.893172740936279
    8. ' for' → logprob: -5.018172740936279
    9. '=' → logprob: -5.018172740936279
    10. ':' → logprob: -5.393172740936279

Token 67: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.045174289494752884
    2. 'with' → logprob: -3.4201743602752686
    3. '=' → logprob: -5.2951741218566895
    4. '(' → logprob: -5.5451741218566895
    5. '(c' → logprob: -6.9201741218566895
    6. ' =' → logprob: -7.4201741218566895
    7. '   ' → logprob: -8.295174598693848
    8. ' (' → logprob: -8.420174598693848
    9. '=c' → logprob: -8.795174598693848
    10. ' to' → logprob: -9.295174598693848

Token 68: ' value' (ID: 1432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5760062336921692
    2. ' c' → logprob: -0.8260062336921692
    3. ' [' → logprob: -10.451005935668945
    4. ' ' → logprob: -11.451005935668945
    5. ')c' → logprob: -11.701005935668945
    6. ' the' → logprob: -12.326005935668945
    7. '[' → logprob: -12.576005935668945
    8. ')' → logprob: -12.826005935668945
    9. '[c' → logprob: -13.451005935668945
    10. '	c' → logprob: -13.701005935668945

Token 69: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5997978448867798
    2. 'c' → logprob: -0.8497978448867798
    3. ' (' → logprob: -4.22479772567749
    4. ' =' → logprob: -5.72479772567749
    5. '(' → logprob: -6.09979772567749
    6. '   ' → logprob: -7.22479772567749
    7. ' ' → logprob: -7.22479772567749
    8. '=' → logprob: -7.97479772567749
    9. '```' → logprob: -7.97479772567749
    10. '`' → logprob: -8.099798202514648

Token 70: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6139746308326721
    2. ':' → logprob: -1.2389745712280273
    3. '   ' → logprob: -1.8639745712280273
    4. ')' → logprob: -5.363974571228027
    5. '.' → logprob: -5.488974571228027
    6. '):
' → logprob: -5.613974571228027
    7. ':
' → logprob: -7.363974571228027
    8. ']:' → logprob: -8.363974571228027
    9. 'def' → logprob: -8.863974571228027
    10. '():' → logprob: -9.113974571228027

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011512940982356668
    2. ')' → logprob: -7.126151084899902
    3. '"""' → logprob: -9.501151084899902
    4. '```' → logprob: -9.501151084899902
    5. '    
' → logprob: -10.376151084899902
    6. ']' → logprob: -10.376151084899902
    7. ' return' → logprob: -10.626151084899902
    8. '\n' → logprob: -10.751151084899902
    9. '"""
' → logprob: -10.876151084899902
    10. 'return' → logprob: -11.001151084899902

Token 72: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013410206884145737
    2. ' return' → logprob: -4.6384100914001465
    3. 'return' → logprob: -5.6384100914001465
    4. '    ' → logprob: -10.888410568237305
    5. '    
' → logprob: -11.013410568237305
    6. '
' → logprob: -11.138410568237305
    7. '  ' → logprob: -12.013410568237305
    8. ' ' → logprob: -12.013410568237305
    9. '"""
' → logprob: -12.013410568237305
    10. '```' → logprob: -12.263410568237305

Token 73: 'param' (ID: 1355)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2520114779472351
    2. 'param' → logprob: -1.5020115375518799
    3. 'rtype' → logprob: -10.5020112991333
    4. ' return' → logprob: -10.8770112991333
    5. '   ' → logprob: -11.2520112991333
    6. ' param' → logprob: -11.8770112991333
    7. 'returns' → logprob: -12.3770112991333
    8. ':param' → logprob: -12.5020112991333
    9. ':return' → logprob: -12.6270112991333
    10. '```' → logprob: -13.2520112991333

Token 74: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043475132435560226
    2. ' a' → logprob: -3.7934751510620117
    3. 'int' → logprob: -4.168475151062012
    4. ' int' → logprob: -5.418475151062012
    5. '   ' → logprob: -9.293475151062012
    6. '`' → logprob: -10.918475151062012
    7. '    ' → logprob: -13.668475151062012
    8. '     ' → logprob: -13.668475151062012
    9. ' ' → logprob: -13.918475151062012
    10. '       ' → logprob: -14.418475151062012

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5772449374198914
    2. ',' → logprob: -0.8272449374198914
    3. '):' → logprob: -7.452244758605957
    4. ')' → logprob: -8.077244758605957
    5. ':int' → logprob: -8.827244758605957
    6. ' ,' → logprob: -9.327244758605957
    7. '   ' → logprob: -9.327244758605957
    8. 'int' → logprob: -11.327244758605957
    9. '  ' → logprob: -11.702244758605957
    10. ' :' → logprob: -11.827244758605957

Token 76: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0964242219924927
    2. ' Number' → logprob: -1.0964242219924927
    3. ' int' → logprob: -1.7214242219924927
    4. 'Number' → logprob: -2.846424102783203
    5. ' The' → logprob: -3.596424102783203
    6. '   ' → logprob: -3.846424102783203
    7. ' number' → logprob: -4.096424102783203
    8. ' Rows' → logprob: -4.971424102783203
    9. 'Rows' → logprob: -5.096424102783203
    10. ' rows' → logprob: -5.221424102783203

Token 77: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7261377573013306
    2. 'a' → logprob: -1.9761377573013306
    3. '<|end|>' → logprob: -2.226137638092041
    4. ' of' → logprob: -2.351137638092041
    5. '=int' → logprob: -2.351137638092041
    6. '_rows' → logprob: -2.476137638092041
    7. ':' → logprob: -2.726137638092041
    8. ')' → logprob: -2.851137638092041
    9. ',' → logprob: -3.226137638092041
    10. 'rows' → logprob: -3.851137638092041

Token 78: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.023249322548508644
    2. 'rows' → logprob: -3.773249387741089
    3. ' lists' → logprob: -13.273249626159668
    4. '_rows' → logprob: -14.023249626159668
    5. '	rows' → logprob: -14.023249626159668
    6. ' ' → logprob: -15.148249626159668
    7. 'row' → logprob: -17.14824867248535
    8. 'Rows' → logprob: -17.14824867248535
    9. '.rows' → logprob: -17.27324867248535
    10. ')' → logprob: -17.27324867248535

Token 79: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2779008448123932
    2. '   ' → logprob: -2.4029009342193604
    3. '<|end|>' → logprob: -2.9029009342193604
    4. ')' → logprob: -3.0279009342193604
    5. '<|end|>' → logprob: -3.9029009342193604
    6. ':' → logprob: -4.152900695800781
    7. ',
' → logprob: -5.027900695800781
    8. '
' → logprob: -5.902900695800781
    9. '```' → logprob: -7.027900695800781
    10. 'def' → logprob: -7.527900695800781

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022954143583774567
    2. '<|end|>' → logprob: -3.897954225540161
    3. '    ' → logprob: -7.022953987121582
    4. '<|end|>' → logprob: -7.897953987121582
    5. '  ' → logprob: -8.147953987121582
    6. ')' → logprob: -8.647953987121582
    7. ' ' → logprob: -8.647953987121582
    8. '```' → logprob: -8.772953987121582
    9. '    
' → logprob: -9.147953987121582
    10. ',' → logprob: -9.522953987121582

Token 81: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008630049414932728
    2. '    ' → logprob: -5.508630275726318
    3. '<|end|>' → logprob: -6.258630275726318
    4. ' ' → logprob: -7.758630275726318
    5. '    
' → logprob: -7.758630275726318
    6. '```' → logprob: -8.13362979888916
    7. '<|end|>' → logprob: -8.25862979888916
    8. '  ' → logprob: -8.38362979888916
    9. 'b' → logprob: -8.50862979888916
    10. ' 
' → logprob: -8.63362979888916

Token 82: 'param' (ID: 1355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1763378530740738
    2. 'param' → logprob: -2.176337957382202
    3. ' b' → logprob: -4.051337718963623
    4. 'b' → logprob: -4.176337718963623
    5. ' param' → logprob: -4.426337718963623
    6. '    ' → logprob: -7.301337718963623
    7. ':param' → logprob: -7.426337718963623
    8. ' ' → logprob: -7.426337718963623
    9. '@param' → logprob: -8.676338195800781
    10. ' The' → logprob: -8.926338195800781

Token 83: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3133343756198883
    2. 'b' → logprob: -1.313334345817566
    3. '   ' → logprob: -9.688334465026855
    4. '    ' → logprob: -12.938334465026855
    5. ' ' → logprob: -13.563334465026855
    6. '```' → logprob: -14.438334465026855
    7. ' `' → logprob: -14.563334465026855
    8. '  ' → logprob: -14.688334465026855
    9. 'columns' → logprob: -14.688334465026855
    10. 'n' → logprob: -14.688334465026855

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038813185528852046
    2. ',' → logprob: -8.625388145446777
    3. '=' → logprob: -8.875388145446777
    4. '):' → logprob: -10.500388145446777
    5. ' :' → logprob: -10.500388145446777
    6. ')' → logprob: -11.875388145446777
    7. ':int' → logprob: -13.375388145446777
    8. ':**' → logprob: -13.875388145446777
    9. ' ' → logprob: -14.375388145446777
    10. 'a' → logprob: -15.250388145446777

Token 85: ' Number' (ID: 9184)
  Prédit: ' Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Number' → logprob: -0.048943981528282166
    2. 'Number' → logprob: -3.0489439964294434
    3. ' number' → logprob: -8.173943519592285
    4. ' The' → logprob: -11.048943519592285
    5. ' ' → logprob: -11.298943519592285
    6. 'int' → logprob: -11.423943519592285
    7. ' int' → logprob: -11.548943519592285
    8. 'number' → logprob: -11.673943519592285
    9. '   ' → logprob: -12.548943519592285
    10. ' Space' → logprob: -12.798943519592285

Token 86: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.020551113411784172
    2. 'of' → logprob: -4.0205512046813965
    3. '<|end|>' → logprob: -6.2705512046813965
    4. ' ' → logprob: -8.770550727844238
    5. '<|end|>' → logprob: -8.895550727844238
    6. '_of' → logprob: -9.395550727844238
    7. ' rows' → logprob: -10.645550727844238
    8. 'rows' → logprob: -10.770550727844238
    9. '  ' → logprob: -10.895550727844238
    10. '[' → logprob: -11.020550727844238

Token 87: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.4333925247192383
    2. ' columns' → logprob: -1.0583925247192383
    3. 'cols' → logprob: -5.433392524719238
    4. 'rows' → logprob: -8.808392524719238
    5. ' cols' → logprob: -9.308392524719238
    6. ' rows' → logprob: -11.058392524719238
    7. 'lists' → logprob: -11.808392524719238
    8. 'col' → logprob: -11.933392524719238
    9. '列' → logprob: -12.183392524719238
    10. 'elements' → logprob: -12.183392524719238

Token 88: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9403372406959534
    2. ')' → logprob: -1.0653371810913086
    3. ':' → logprob: -2.5653371810913086
    4. '):' → logprob: -2.6903371810913086
    5. ',' → logprob: -3.0653371810913086
    6. '.' → logprob: -3.4403371810913086
    7. '<|end|>' → logprob: -3.8153371810913086
    8. '):
' → logprob: -5.190337181091309
    9. '<|end|>' → logprob: -5.440337181091309
    10. 'def' → logprob: -6.065337181091309

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006424744613468647
    2. ')' → logprob: -5.131424903869629
    3. '<|end|>' → logprob: -8.756424903869629
    4. '"""' → logprob: -9.631424903869629
    5. ' ' → logprob: -10.256424903869629
    6. ':' → logprob: -10.506424903869629
    7. '```' → logprob: -10.506424903869629
    8. '<|end|>' → logprob: -10.506424903869629
    9. '):' → logprob: -10.756424903869629
    10. '    ' → logprob: -10.881424903869629

Token 90: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014290907420217991
    2. ')' → logprob: -4.889290809631348
    3. '"""' → logprob: -5.889290809631348
    4. ':return' → logprob: -6.764290809631348
    5. '"""
' → logprob: -7.014290809631348
    6. ':' (adapté à ' :') → logprob: -7.889290809631348
    7. '
' → logprob: -8.014290809631348
    8. '    
' → logprob: -8.639290809631348
    9. '):' → logprob: -9.014290809631348
    10. ' :' → logprob: -9.139290809631348

Token 91: 'param' (ID: 1355)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.6806102395057678
    2. 'Number' → logprob: -1.180610179901123
    3. '   ' → logprob: -2.805610179901123
    4. '"' → logprob: -3.430610179901123
    5. 'int' → logprob: -4.055610179901123
    6. 'The' → logprob: -4.180610179901123
    7. ''' → logprob: -4.680610179901123
    8. 'Returns' → logprob: -4.680610179901123
    9. 'str' → logprob: -5.180610179901123
    10. '"""' → logprob: -5.305610179901123

Token 92: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2897174656391144
    2. ' ' → logprob: -1.664717435836792
    3. 'c' → logprob: -3.414717435836792
    4. ' value' → logprob: -3.914717435836792
    5. ' The' → logprob: -5.914717674255371
    6. ')' → logprob: -6.414717674255371
    7. 'value' → logprob: -6.539717674255371
    8. '  ' → logprob: -7.289717674255371
    9. ' )' → logprob: -7.289717674255371
    10. ' initial' → logprob: -7.789717674255371

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013655527436640114
    2. '):' → logprob: -9.000136375427246
    3. ' :' → logprob: -11.500136375427246
    4. ')' → logprob: -13.875136375427246
    5. '   ' → logprob: -13.875136375427246
    6. '=' → logprob: -15.500136375427246
    7. 'The' → logprob: -15.625136375427246
    8. ' ' → logprob: -15.875136375427246
    9. ':**' → logprob: -16.375137329101562
    10. '>:' → logprob: -17.125137329101562

Token 94: ' Initial' (ID: 9209)
  Prédit: ' Initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Initial' → logprob: -0.0686604231595993
    2. 'Initial' → logprob: -2.8186604976654053
    3. ' The' → logprob: -5.443660259246826
    4. ' Default' → logprob: -6.568660259246826
    5. 'Default' → logprob: -8.318660736083984
    6. ' ' → logprob: -8.443660736083984
    7. ' Initialization' → logprob: -8.818660736083984
    8. ' initial' → logprob: -8.943660736083984
    9. 'The' → logprob: -9.318660736083984
    10. 'Initialization' → logprob: -9.693660736083984

Token 95: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.27540311217308044
    2. '=' → logprob: -2.2754030227661133
    3. ')' → logprob: -3.0254030227661133
    4. '):' → logprob: -3.2754030227661133
    5. 'value' → logprob: -3.4004030227661133
    6. '=None' → logprob: -4.900403022766113
    7. '<|end|>' → logprob: -5.400403022766113
    8. ' ' → logprob: -6.275403022766113
    9. ' =' → logprob: -6.650403022766113
    10. '_value' → logprob: -7.400403022766113

Token 96: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035390447825193405
    2. ')' → logprob: -3.4103903770446777
    3. '):
' → logprob: -6.410390377044678
    4. '   ' → logprob: -10.160390853881836
    5. '=' → logprob: -10.785390853881836
    6. '=None' → logprob: -11.160390853881836
    7. ':' → logprob: -11.535390853881836
    8. '.' → logprob: -11.910390853881836
    9. '):

' → logprob: -12.535390853881836
    10. '):
' → logprob: -13.660390853881836

Token 97: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.25587600469589233
    2. ' the' → logprob: -1.505876064300537
    3. ' cells' → logprob: -6.755876064300537
    4. 'each' → logprob: -7.255876064300537
    5. ' elements' → logprob: -7.630876064300537
    6. ' list' → logprob: -7.630876064300537
    7. ' ' → logprob: -7.880876064300537
    8. 'the' → logprob: -7.880876064300537
    9. '<|end|>' → logprob: -8.880875587463379
    10. ' all' → logprob: -9.130875587463379

Token 98: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.9085070490837097
    2. ')' → logprob: -1.0335071086883545
    3. 'element' → logprob: -1.9085071086883545
    4. ' cell' → logprob: -2.5335071086883545
    5. 'cell' → logprob: -4.408506870269775
    6. ' ' → logprob: -7.408506870269775
    7. 'space' → logprob: -9.158507347106934
    8. ' )' → logprob: -9.283507347106934
    9. ']' → logprob: -9.408507347106934
    10. ' space' → logprob: -9.908507347106934

Token 99: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6826910972595215
    2. ')' → logprob: -1.1826910972595215
    3. '):
' → logprob: -1.6826910972595215
    4. '   ' → logprob: -6.1826910972595215
    5. '
' → logprob: -8.80769157409668
    6. ':' → logprob: -9.30769157409668
    7. '):
' → logprob: -10.05769157409668
    8. '):

' → logprob: -11.05769157409668
    9. ')
' → logprob: -11.18269157409668
    10. 'def' → logprob: -11.93269157409668

Token 100: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8097864389419556
    2. '):' → logprob: -1.1847864389419556
    3. '):
' → logprob: -1.4347864389419556
    4. '   ' → logprob: -4.559786319732666
    5. ':' → logprob: -8.809786796569824
    6. '```' → logprob: -9.184786796569824
    7. '"""
' → logprob: -9.809786796569824
    8. 'def' → logprob: -9.809786796569824
    9. '"""' → logprob: -9.809786796569824
    10. ')
' → logprob: -10.184786796569824

Token 101: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7519884705543518
    2. '):
' → logprob: -1.501988410949707
    3. ')' → logprob: -1.751988410949707
    4. '):' → logprob: -2.501988410949707
    5. '"""
' → logprob: -3.251988410949707
    6. '"""' → logprob: -4.626988410949707
    7. '```' → logprob: -7.376988410949707
    8. '
' → logprob: -7.626988410949707
    9. ':' (adapté à ' :') → logprob: -8.376988410949707
    10. ')
' → logprob: -8.626988410949707

Token 102: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04306907579302788
    2. ' return' → logprob: -3.6680691242218018
    3. '   ' → logprob: -4.543068885803223
    4. '"""
' → logprob: -5.543068885803223
    5. ':return' → logprob: -6.668068885803223
    6. '
' → logprob: -8.418068885803223
    7. '"""' → logprob: -8.793068885803223
    8. 'Returns' → logprob: -9.543068885803223
    9. '@return' → logprob: -9.543068885803223
    10. '```' → logprob: -9.793068885803223

Token 103: ':' (ID: 25)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.05395122617483139
    2. '[' → logprob: -3.0539512634277344
    3. ' [
' → logprob: -6.053951263427734
    4. ' ' → logprob: -6.303951263427734
    5. ' [[]' → logprob: -7.928951263427734
    6. ' []' → logprob: -8.303951263427734
    7. ' [[' → logprob: -8.428951263427734
    8. '[:]' → logprob: -8.678951263427734
    9. ':' → logprob: -10.428951263427734
    10. '[List' → logprob: -10.428951263427734

Token 104: ' ' (ID: 220)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.354421466588974
    2. '[[' → logprob: -1.6044214963912964
    3. ' [' → logprob: -2.479421377182007
    4. '[' → logprob: -4.354421615600586
    5. '[
' → logprob: -7.729421615600586
    6. ' [
' → logprob: -8.979421615600586
    7. ' [[]' → logprob: -9.479421615600586
    8. '[['' → logprob: -9.979421615600586
    9. '[a' → logprob: -10.354421615600586
    10. '[list' → logprob: -11.854421615600586

Token 105: '2' (ID: 17)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.004249469842761755
    2. ' [[' → logprob: -5.504249572753906
    3. '[' → logprob: -9.504249572753906
    4. '[a' → logprob: -9.754249572753906
    5. ' [' → logprob: -10.879249572753906
    6. '`' → logprob: -12.254249572753906
    7. '[['' → logprob: -12.379249572753906
    8. '[list' → logprob: -12.754249572753906
    9. '[
' → logprob: -13.254249572753906
    10. 'list' → logprob: -13.504249572753906

Token 106: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.19898544251918793
    2. 'd' → logprob: -1.8239854574203491
    3. '[' → logprob: -4.198985576629639
    4. '-d' → logprob: -6.573985576629639
    5. '-dimensional' → logprob: -6.698985576629639
    6. '-D' → logprob: -8.19898509979248
    7. ' [' → logprob: -8.32398509979248
    8. '[a' → logprob: -8.69898509979248
    9. '[d' → logprob: -9.07398509979248
    10. ' ' → logprob: -9.19898509979248

Token 107: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0038296524435281754
    2. ' [' → logprob: -6.503829479217529
    3. '[' → logprob: -6.628829479217529
    4. 'list' → logprob: -7.003829479217529
    5. 'List' → logprob: -10.878829956054688
    6. ' ' → logprob: -11.378829956054688
    7. '_list' → logprob: -11.378829956054688
    8. ' lists' → logprob: -11.378829956054688
    9. '[list' → logprob: -11.878829956054688
    10. '[List' → logprob: -12.003829956054688

Token 108: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4156841039657593
    2. '[' → logprob: -1.6656841039657593
    3. '(' → logprob: -3.290684223175049
    4. '[
' → logprob: -3.415684223175049
    5. '[]' → logprob: -3.915684223175049
    6. '(
' → logprob: -4.665684223175049
    7. '[a' → logprob: -5.040684223175049
    8. '
' → logprob: -5.415684223175049
    9. 'def' → logprob: -5.540684223175049
    10. ')' → logprob: -5.540684223175049

Token 109: ' dimensions' (ID: 23995)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.7779176235198975
    2. 'c' → logprob: -1.6529176235198975
    3. '[[' → logprob: -2.1529176235198975
    4. 'size' → logprob: -2.2779176235198975
    5. ' c' → logprob: -2.7779176235198975
    6. '[c' → logprob: -3.4029176235198975
    7. ' [[' → logprob: -4.652917861938477
    8. 'a' → logprob: -4.652917861938477
    9. ' [' → logprob: -4.777917861938477
    10. ' dimensions' → logprob: -6.652917861938477

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08603169023990631
    2. ' a' → logprob: -2.711031675338745
    3. ' (' → logprob: -4.461031913757324
    4. '[a' → logprob: -5.836031913757324
    5. '(a' → logprob: -6.961031913757324
    6. '(' → logprob: -8.461031913757324
    7. ' [' → logprob: -8.711031913757324
    8. '`' → logprob: -9.836031913757324
    9. '   ' → logprob: -9.836031913757324
    10. ' ' → logprob: -10.586031913757324

Token 111: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04390658810734749
    2. ',' → logprob: -4.2939066886901855
    3. ' by' → logprob: -4.6689066886901855
    4. ')' → logprob: -4.7939066886901855
    5. ' ' → logprob: -4.9189066886901855
    6. 'x' → logprob: -6.4189066886901855
    7. 'a' → logprob: -7.5439066886901855
    8. '   ' → logprob: -8.293906211853027
    9. ' rows' → logprob: -8.293906211853027
    10. '×' → logprob: -8.418906211853027

Token 112: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804241120815277
    2. ' b' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.163042068481445
    4. '   ' → logprob: -16.288042068481445
    5. '	b' → logprob: -16.538042068481445
    6. ' ' → logprob: -17.413042068481445
    7. '```' → logprob: -18.100542068481445
    8. '_b' → logprob: -18.288042068481445
    9. '  ' → logprob: -18.600542068481445
    10. '`' → logprob: -18.600542068481445

Token 113: ' filled' (ID: 14255)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5289686322212219
    2. ':' → logprob: -1.6539685726165771
    3. ':
' → logprob: -2.028968572616577
    4. ']' → logprob: -3.528968572616577
    5. ')' → logprob: -3.778968572616577
    6. '.
' → logprob: -4.028968811035156
    7. '   ' → logprob: -5.278968811035156
    8. '<|end|>' → logprob: -5.778968811035156
    9. '):' → logprob: -6.278968811035156
    10. '```' → logprob: -6.653968811035156

Token 114: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2029205560684204
    2. 'with' → logprob: -1.7029205560684204
    3. '   ' → logprob: -6.952920436859131
    4. 'c' → logprob: -8.202920913696289
    5. '[c' → logprob: -9.202920913696289
    6. ' ' → logprob: -10.327920913696289
    7. ' c' → logprob: -10.452920913696289
    8. ' [' → logprob: -10.577920913696289
    9. '```' → logprob: -10.577920913696289
    10. '[' → logprob: -10.827920913696289

Token 115: ' value' (ID: 1432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759410262107849
    2. ' c' → logprob: -0.8259410262107849
    3. '```' → logprob: -13.95094108581543
    4. '`' → logprob: -15.07594108581543
    5. '	c' → logprob: -15.82594108581543
    6. ' `' → logprob: -15.95094108581543
    7. ' ' → logprob: -16.07594108581543
    8. '   ' → logprob: -17.57594108581543
    9. ' ' → logprob: -17.70094108581543
    10. ' the' → logprob: -18.32594108581543

Token 116: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5761237144470215
    2. ' c' → logprob: -0.8261237144470215
    3. '(c' → logprob: -8.82612419128418
    4. '.' → logprob: -11.32612419128418
    5. '```' → logprob: -11.45112419128418
    6. '(' → logprob: -12.07612419128418
    7. ' (' → logprob: -12.95112419128418
    8. '`' → logprob: -13.07612419128418
    9. ' ' → logprob: -14.20112419128418
    10. ' `' → logprob: -14.32612419128418

Token 117: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4290170967578888
    2. ':' → logprob: -1.6790170669555664
    3. '   ' → logprob: -3.1790170669555664
    4. '.' → logprob: -3.1790170669555664
    5. '.
' → logprob: -3.4290170669555664
    6. '):
' → logprob: -3.9290170669555664
    7. '):' → logprob: -4.179017066955566
    8. ')' → logprob: -5.054017066955566
    9. '
' → logprob: -6.054017066955566
    10. '"""
' → logprob: -7.179017066955566

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012905937619507313
    2. '
' → logprob: -7.376290798187256
    3. ')' → logprob: -8.626290321350098
    4. '    
' → logprob: -9.001290321350098
    5. '):
' → logprob: -9.126290321350098
    6. '"""
' → logprob: -9.876290321350098
    7. ':
' → logprob: -10.126290321350098
    8. 'return' → logprob: -10.126290321350098
    9. ' return' → logprob: -10.376290321350098
    10. ')
' → logprob: -10.626290321350098

Token 119: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014308886602520943
    2. ')' → logprob: -5.014308929443359
    3. '"""
' (adapté à ' """
') → logprob: -5.764308929443359
    4. '"""' → logprob: -5.889308929443359
    5. ')
' → logprob: -7.014308929443359
    6. '):
' → logprob: -8.38930892944336
    7. '
' → logprob: -8.38930892944336
    8. 'return' → logprob: -8.76430892944336
    9. '    
' → logprob: -10.13930892944336
    10. ' return' → logprob: -10.38930892944336

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011751551181077957
    2. 'return' → logprob: -4.511751651763916
    3. ' return' → logprob: -7.261751651763916
    4. '	return' → logprob: -13.511751174926758
    5. ' ' → logprob: -15.511751174926758
    6. '```' → logprob: -17.386751174926758
    7. '   ' → logprob: -18.261751174926758
    8. '  ' → logprob: -18.261751174926758
    9. '    
' → logprob: -18.511751174926758
    10. '    ' → logprob: -18.886751174926758

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030046096071600914
    2. ' return' → logprob: -3.530045986175537
    3. '   ' → logprob: -8.155046463012695
    4. '	return' → logprob: -11.905046463012695
    5. ' ' → logprob: -13.905046463012695
    6. '
' → logprob: -15.780046463012695
    7. ':return' → logprob: -15.780046463012695
    8. '[' → logprob: -15.905046463012695
    9. 'eturn' → logprob: -16.280046463012695
    10. ')return' → logprob: -16.905046463012695

Token 122: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.006777542643249035
    2. ' [[' → logprob: -5.006777763366699
    3. '[' → logprob: -9.7567777633667
    4. ' [' → logprob: -12.3817777633667
    5. '[
' → logprob: -16.006776809692383
    6. ' ' → logprob: -18.381776809692383
    7. '[['' → logprob: -19.006776809692383
    8. '([[' → logprob: -19.631776809692383
    9. '[]' → logprob: -19.756776809692383
    10. '[a' → logprob: -20.006776809692383

Token 123: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0206720617134124e-05
    2. ' c' → logprob: -11.50001049041748
    3. '	c' → logprob: -19.750009536743164
    4. ')c' → logprob: -20.750009536743164
    5. '   ' → logprob: -21.000009536743164
    6. '(c' → logprob: -22.625009536743164
    7. '```' → logprob: -22.625009536743164
    8. '
' → logprob: -22.625009536743164
    9. '%c' → logprob: -22.875009536743164
    10. ' ' → logprob: -23.250009536743164

Token 124: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31370291113853455
    2. 'for' → logprob: -1.313702940940857
    3. ']' → logprob: -7.8137030601501465
    4. '   ' → logprob: -11.188702583312988
    5. ']*' → logprob: -11.438702583312988
    6. '	for' → logprob: -12.313702583312988
    7. ' ' → logprob: -12.688702583312988
    8. ')' → logprob: -12.813702583312988
    9. '    ' → logprob: -14.813702583312988
    10. '
' → logprob: -15.313702583312988

Token 125: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741016626358032
    2. ' for' → logprob: -0.9741016626358032
    3. '   ' → logprob: -10.974102020263672
    4. '	for' → logprob: -12.599102020263672
    5. ']' → logprob: -13.224102020263672
    6. ' ' → logprob: -13.474102020263672
    7. '    ' → logprob: -15.474102020263672
    8. ')' → logprob: -15.474102020263672
    9. '
' → logprob: -16.349102020263672
    10. '       ' → logprob: -16.599102020263672

Token 126: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001234428636962548
    2. ' b' → logprob: -9.000123023986816
    3. ' ' → logprob: -21.125123977661133
    4. '   ' → logprob: -21.750123977661133
    5. '	b' → logprob: -21.875123977661133
    6. ')b' → logprob: -22.875123977661133
    7. '```' → logprob: -23.375123977661133
    8. '  ' → logprob: -23.500123977661133
    9. '    ' → logprob: -23.750123977661133
    10. '(b' → logprob: -24.375123977661133

Token 127: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47407999634742737
    2. 'for' → logprob: -0.974079966545105
    3. '	for' → logprob: -13.474080085754395
    4. '   ' → logprob: -13.724080085754395
    5. ']' → logprob: -14.849080085754395
    6. ')' → logprob: -16.599079132080078
    7. ' ' → logprob: -16.849079132080078
    8. '    ' → logprob: -18.224079132080078
    9. '       ' → logprob: -19.224079132080078
    10. '  ' → logprob: -19.224079132080078

Token 128: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1495756357908249
    2. ' _' → logprob: -2.024575710296631
    3. ' ' → logprob: -5.899575710296631
    4. '_' → logprob: -6.524575710296631
    5. ' in' → logprob: -6.774575710296631
    6. 'range' → logprob: -6.774575710296631
    7. ' xrange' → logprob: -8.399575233459473
    8. ' a' → logprob: -9.649575233459473
    9. '_range' → logprob: -10.024575233459473
    10. '	range' → logprob: -10.649575233459473

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020467260852456093
    2. 'in' → logprob: -4.020467281341553
    3. 'range' → logprob: -6.770467281341553
    4. ' ' → logprob: -7.395467281341553
    5. ' range' → logprob: -7.520467281341553
    6. '<|end|>' → logprob: -12.895466804504395
    7. ' xrange' → logprob: -13.270466804504395
    8. 'a' → logprob: -13.520466804504395
    9. '  ' → logprob: -13.770466804504395
    10. ')' → logprob: -14.020466804504395

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043901324272156
    2. ' range' → logprob: -3.288043975830078
    3. '	range' → logprob: -13.788043975830078
    4. '(range' → logprob: -14.663043975830078
    5. ' ' → logprob: -15.038043975830078
    6. 'a' → logprob: -15.663043975830078
    7. '   ' → logprob: -16.163043975830078
    8. '_range' → logprob: -16.663043975830078
    9. ' xrange' → logprob: -16.913043975830078
    10. 'ran' → logprob: -16.913043975830078

Token 131: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003392767102923244
    2. '(' → logprob: -8.00033950805664
    3. ' (' → logprob: -13.00033950805664
    4. 'a' → logprob: -13.50033950805664
    5. ' a' → logprob: -16.12533950805664
    6. '(
' → logprob: -17.62533950805664
    7. '/a' → logprob: -18.25033950805664
    8. '(A' → logprob: -18.87533950805664
    9. ' ' → logprob: -19.75033950805664
    10. '	a' → logprob: -20.12533950805664

Token 132: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2541251480579376
    2. ']' → logprob: -1.5041251182556152
    3. ')' → logprob: -6.129125118255615
    4. '])' → logprob: -11.754125595092773
    5. ']
' → logprob: -12.129125595092773
    6. ' ]' → logprob: -14.754125595092773
    7. ']]' → logprob: -14.754125595092773
    8. ')]
' → logprob: -15.629125595092773
    9. '}]' → logprob: -16.004125595092773
    10. ']}' → logprob: -16.004125595092773

Token 133: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003668129211291671
    2. '
' → logprob: -5.753668308258057
    3. '<|end|>' → logprob: -8.878667831420898
    4. 'class' → logprob: -9.503667831420898
    5. 'n' → logprob: -9.628667831420898
    6. '#' → logprob: -9.628667831420898
    7. '

' → logprob: -9.753667831420898
    8. 'import' → logprob: -10.753667831420898
    9. '```' → logprob: -11.253667831420898
    10. '\' → logprob: -11.628667831420898

Token 134: ' list' (ID: 1562)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5867540836334229
    2. ' list' → logprob: -0.8367540836334229
    3. 'main' → logprob: -5.711753845214844
    4. ' input' → logprob: -6.336753845214844
    5. ' max' → logprob: -6.586753845214844
    6. 'list' → logprob: -6.711753845214844
    7. ' str' → logprob: -7.586753845214844
    8. ' int' → logprob: -7.711753845214844
    9. ' ceil' → logprob: -7.961753845214844
    10. ' is' → logprob: -8.961753845214844

Token 135: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03356017544865608
    2. '()' → logprob: -3.658560276031494
    3. 'a' → logprob: -6.533560276031494
    4. 'append' → logprob: -7.033560276031494
    5. '_append' → logprob: -7.283560276031494
    6. '(a' → logprob: -7.533560276031494
    7. '3' → logprob: -7.783560276031494
    8. '(' → logprob: -8.033559799194336
    9. '_reverse' → logprob: -8.033559799194336
    10. 'reverse' → logprob: -8.408559799194336

Token 136: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -17.625
    3. 'def' → logprob: -18.75
    4. '_d' → logprob: -20.5
    5. '(d' → logprob: -21.375
    6. '```' → logprob: -21.375
    7. 'д' → logprob: -21.5
    8. 'a' → logprob: -22.25
    9. '	d' → logprob: -22.25
    10. '
' → logprob: -22.75

Token 137: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00091217877343297
    2. '(' → logprob: -7.000912189483643
    3. '(
' → logprob: -15.625911712646484
    4. ' (' → logprob: -15.750911712646484
    5. '(A' → logprob: -16.500911712646484
    6. '(ai' → logprob: -16.500911712646484
    7. 'def' → logprob: -17.375911712646484
    8. 'a' → logprob: -17.500911712646484
    9. '(m' → logprob: -18.125911712646484
    10. '(ax' → logprob: -18.375911712646484

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -13.37500286102295
    3. ',b' → logprob: -13.50000286102295
    4. ',a' → logprob: -15.62500286102295
    5. 'a' → logprob: -17.375003814697266
    6. '(' → logprob: -18.375003814697266
    7. '(a' → logprob: -18.875003814697266
    8. 'b' → logprob: -18.875003814697266
    9. '(),' → logprob: -20.000003814697266
    10. ',n' → logprob: -20.500003814697266

Token 139: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.751928329467773
    4. ' ' → logprob: -19.251928329467773
    5. '  ' → logprob: -20.501928329467773
    6. '	b' → logprob: -20.626928329467773
    7. '(b' → logprob: -20.876928329467773
    8. '    ' → logprob: -22.126928329467773
    9. 'B' → logprob: -22.376928329467773
    10. 'def' → logprob: -22.376928329467773

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',c' → logprob: -13.125003814697266
    3. ' ,' → logprob: -13.625003814697266
    4. 'c' → logprob: -15.500003814697266
    5. ' c' → logprob: -17.750003814697266
    6. '_,' → logprob: -21.000003814697266
    7. '‌,' → logprob: -21.125003814697266
    8. '，' → logprob: -21.125003814697266
    9. ')' → logprob: -21.500003814697266
    10. '،' → logprob: -21.625003814697266

Token 141: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' c' → logprob: -6.7511701583862305
    3. '	c' → logprob: -18.501171112060547
    4. ' ' → logprob: -19.001171112060547
    5. '  ' → logprob: -19.251171112060547
    6. '   ' → logprob: -19.626171112060547
    7. '```' → logprob: -19.751171112060547
    8. ',' → logprob: -20.126171112060547
    9. 'def' → logprob: -20.251171112060547
    10. '<|end|>' → logprob: -20.876171112060547

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -12.750003814697266
    3. ',d' → logprob: -14.375003814697266
    4. ',c' → logprob: -17.875003814697266
    5. ',
' → logprob: -18.875003814697266
    6. 'd' → logprob: -19.500003814697266
    7. 's' → logprob: -19.625003814697266
    8. '_,' → logprob: -19.750003814697266
    9. '):' → logprob: -20.125003814697266
    10. 'def' → logprob: -20.875003814697266

Token 143: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07888989895582199
    2. ' d' → logprob: -2.578889846801758
    3. '	d' → logprob: -16.328889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '   ' → logprob: -17.078889846801758
    6. '  ' → logprob: -18.203889846801758
    7. '_d' → logprob: -18.703889846801758
    8. ')d' → logprob: -18.703889846801758
    9. '<|end|>' → logprob: -19.328889846801758
    10. ')' → logprob: -19.953889846801758

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002755174064077437
    2. ')' → logprob: -9.000275611877441
    3. ' ):' → logprob: -9.625275611877441
    4. '):
' → logprob: -9.750275611877441
    5. ',' → logprob: -10.625275611877441
    6. ':' → logprob: -13.000275611877441
    7. ']:' → logprob: -14.625275611877441
    8. '):
' → logprob: -15.625275611877441
    9. '=' → logprob: -16.375274658203125
    10. '():' → logprob: -16.500274658203125

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14128068089485168
    2. ':' → logprob: -2.1412806510925293
    3. '<|end|>' → logprob: -5.266280651092529
    4. '):' → logprob: -5.641280651092529
    5. ')' → logprob: -6.641280651092529
    6. ':
' → logprob: -7.266280651092529
    7. '[' → logprob: -7.641280651092529
    8. '[]' → logprob: -7.641280651092529
    9. '):
' → logprob: -7.891280651092529
    10. ' ' → logprob: -8.016281127929688

Token 146: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008180483244359493
    2. '[' → logprob: -5.758180618286133
    3. ' return' → logprob: -5.883180618286133
    4. 'return' → logprob: -6.383180618286133
    5. '[
' → logprob: -9.008180618286133
    6. '[[' → logprob: -9.258180618286133
    7. ' ' → logprob: -9.633180618286133
    8. '[]' → logprob: -9.633180618286133
    9. '	return' → logprob: -10.008180618286133
    10. '  ' → logprob: -10.258180618286133

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001626025652512908
    2. 'return' → logprob: -6.876626014709473
    3. ' return' → logprob: -7.751626014709473
    4. '    ' → logprob: -9.876626014709473
    5. '       ' → logprob: -10.251626014709473
    6. ' ' → logprob: -10.626626014709473
    7. '  ' → logprob: -10.626626014709473
    8. '
' → logprob: -11.751626014709473
    9. '	return' → logprob: -12.126626014709473
    10. '"""
' → logprob: -12.501626014709473

Token 148: ' Creates' (ID: 28538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23759175837039948
    2. '   ' → logprob: -2.1125917434692383
    3. ' return' → logprob: -2.4875917434692383
    4. 'def' → logprob: -5.487591743469238
    5. '[]' → logprob: -7.112591743469238
    6. ')' → logprob: -7.612591743469238
    7. '
' → logprob: -7.737591743469238
    8. ':return' → logprob: -8.112591743469238
    9. '	return' → logprob: -8.612591743469238
    10. '"""
' → logprob: -8.862591743469238

Token 149: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22802358865737915
    2. ' a' → logprob: -1.9780235290527344
    3. '[a' → logprob: -2.7280235290527344
    4. '[[' → logprob: -8.978023529052734
    5. '(a' → logprob: -10.603023529052734
    6. ' ' → logprob: -11.103023529052734
    7. '   ' → logprob: -11.478023529052734
    8. ' [' → logprob: -12.478023529052734
    9. ' [[[' → logprob: -12.603023529052734
    10. '```' → logprob: -12.603023529052734

Token 150: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0015308856964111
    2. '[[' → logprob: -1.1265308856964111
    3. ' ' → logprob: -1.3765308856964111
    4. '[a' → logprob: -3.251530885696411
    5. 'a' → logprob: -4.876530647277832
    6. ' [[[' → logprob: -5.626530647277832
    7. ' [[' → logprob: -5.626530647277832
    8. ' [' → logprob: -6.876530647277832
    9. ' a' → logprob: -8.001530647277832
    10. 'd' → logprob: -8.126530647277832

Token 151: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010723656043410301
    2. '2' → logprob: -4.63572359085083
    3. 'a' → logprob: -7.13572359085083
    4. '[a' → logprob: -9.385724067687988
    5. ' ' → logprob: -9.760724067687988
    6. 'd' → logprob: -11.385724067687988
    7. '```' → logprob: -11.635724067687988
    8. '(a' → logprob: -12.385724067687988
    9. 'list' → logprob: -13.135724067687988
    10. '[[' → logprob: -14.385724067687988

Token 152: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14267908036708832
    2. 'D' → logprob: -2.51767897605896
    3. 'def' → logprob: -4.267679214477539
    4. '   ' → logprob: -4.517679214477539
    5. ' ' → logprob: -4.892679214477539
    6. 'a' → logprob: -4.892679214477539
    7. '-dimensional' → logprob: -5.517679214477539
    8. '-' → logprob: -6.392679214477539
    9. '[' → logprob: -6.767679214477539
    10. '  ' → logprob: -6.892679214477539

Token 153: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5760819911956787
    2. ' list' → logprob: -0.8260819911956787
    3. '_list' → logprob: -9.701082229614258
    4. 'a' → logprob: -10.326082229614258
    5. 'List' → logprob: -10.701082229614258
    6. 'lists' → logprob: -12.451082229614258
    7. '列表' → logprob: -12.576082229614258
    8. ' a' → logprob: -12.826082229614258
    9. 'lst' → logprob: -12.951082229614258
    10. ' lists' → logprob: -13.201082229614258

Token 154: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11317089945077896
    2. ' (' → logprob: -2.238170862197876
    3. '(' → logprob: -7.988171100616455
    4. ' of' → logprob: -13.113170623779297
    5. '(
' → logprob: -13.488170623779297
    6. '   ' → logprob: -13.863170623779297
    7. 'a' → logprob: -14.113170623779297
    8. ' a' → logprob: -14.238170623779297
    9. '((' → logprob: -14.488170623779297
    10. '<|end|>' → logprob: -14.613170623779297

Token 155: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.370294846012257e-05
    2. ' a' → logprob: -10.125043869018555
    3. '(a' → logprob: -12.750043869018555
    4. ')' → logprob: -14.625043869018555
    5. '[a' → logprob: -16.125043869018555
    6. ')a' → logprob: -16.500043869018555
    7. '   ' → logprob: -17.000043869018555
    8. '	a' → logprob: -17.000043869018555
    9. '```' → logprob: -17.125043869018555
    10. 'd' → logprob: -17.875043869018555

Token 156: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.004831314086914
    2. ')' → logprob: -1.254831314086914
    3. ' (' → logprob: -2.004831314086914
    4. '<|end|>' → logprob: -3.004831314086914
    5. '(a' → logprob: -3.129831314086914
    6. ' ' → logprob: -3.754831314086914
    7. 'a' → logprob: -4.004831314086914
    8. ',' → logprob: -4.254831314086914
    9. '   ' → logprob: -4.879831314086914
    10. ' lists' → logprob: -5.004831314086914

Token 157: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0026456944178789854
    2. ' b' → logprob: -6.252645492553711
    3. 'c' → logprob: -7.252645492553711
    4. ' c' → logprob: -12.002645492553711
    5. '   ' → logprob: -14.377645492553711
    6. 'd' → logprob: -14.752645492553711
    7. 'a' → logprob: -14.752645492553711
    8. ')' → logprob: -14.877645492553711
    9. '(b' → logprob: -15.252645492553711
    10. '```' → logprob: -15.502645492553711

Token 158: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005594444926828146
    2. ')' → logprob: -5.255594253540039
    3. ' ,' → logprob: -8.880594253540039
    4. 'c' → logprob: -9.380594253540039
    5. ' c' → logprob: -10.130594253540039
    6. '   ' → logprob: -10.880594253540039
    7. 'def' → logprob: -11.380594253540039
    8. ' ' → logprob: -11.630594253540039
    9. '),' → logprob: -11.755594253540039
    10. '[' → logprob: -11.880594253540039

Token 159: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21540555357933044
    2. ' c' → logprob: -1.8404055833816528
    3. 'd' → logprob: -3.4654054641723633
    4. ' d' → logprob: -5.590405464172363
    5. ')' → logprob: -10.590405464172363
    6. '  ' → logprob: -12.715405464172363
    7. ' ' → logprob: -12.715405464172363
    8. '   ' → logprob: -12.840405464172363
    9. 'a' → logprob: -13.090405464172363
    10. '```' → logprob: -14.465405464172363

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ' )' → logprob: -11.125025749206543
    3. ',' → logprob: -13.000025749206543
    4. 'd' → logprob: -13.125025749206543
    5. '[]' → logprob: -13.750025749206543
    6. ')
' → logprob: -14.125025749206543
    7. ' ' → logprob: -14.375025749206543
    8. '[' → logprob: -14.375025749206543
    9. ' with' → logprob: -14.500025749206543
    10. ')d' → logprob: -14.625025749206543

Token 161: ' initialized' (ID: 40319)
  Prédit: ' initialized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialized' → logprob: -0.2707364857196808
    2. '(a' → logprob: -2.1457364559173584
    3. 'initialized' → logprob: -3.0207364559173584
    4. ' of' → logprob: -3.8957364559173584
    5. 'def' → logprob: -4.2707366943359375
    6. '   ' → logprob: -4.3957366943359375
    7. ' with' → logprob: -5.2707366943359375
    8. ')' → logprob: -5.2707366943359375
    9. ' (' → logprob: -5.8957366943359375
    10. '_initialized' → logprob: -6.1457366943359375

Token 162: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.038117457181215286
    2. 'with' → logprob: -3.2881174087524414
    3. '<|end|>' → logprob: -9.538117408752441
    4. '	with' → logprob: -13.913117408752441
    5. 'With' → logprob: -14.038117408752441
    6. '_with' → logprob: -14.288117408752441
    7. '   ' → logprob: -15.038117408752441
    8. ' ' → logprob: -15.163117408752441
    9. '<|end|>' → logprob: -15.163117408752441
    10. ')' → logprob: -15.663117408752441

Token 163: ' value' (ID: 1432)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08330774307250977
    2. ' d' → logprob: -2.8333077430725098
    3. 'value' → logprob: -4.08330774307251
    4. ' value' → logprob: -5.45830774307251
    5. 'Value' → logprob: -14.958307266235352
    6. '[d' → logprob: -14.958307266235352
    7. '_value' → logprob: -15.583307266235352
    8. ' ' → logprob: -15.833307266235352
    9. '[' → logprob: -16.33330726623535
    10. '```' → logprob: -16.45830726623535

Token 164: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2525089681148529
    2. 'd' → logprob: -1.5025089979171753
    3. 'c' → logprob: -8.127509117126465
    4. ' c' → logprob: -8.252509117126465
    5. 's' → logprob: -10.877509117126465
    6. ' ' → logprob: -13.377509117126465
    7. ' ' → logprob: -13.752509117126465
    8. '`' → logprob: -14.627509117126465
    9. 'e' → logprob: -14.752509117126465
    10. '```' → logprob: -15.002509117126465

Token 165: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0034994613379240036
    2. '.

' → logprob: -6.253499507904053
    3. '.
' → logprob: -7.003499507904053
    4. '   ' → logprob: -7.878499507904053
    5. ')' → logprob: -8.878499031066895
    6. 'def' → logprob: -10.003499031066895
    7. ').' → logprob: -10.003499031066895
    8. '<|end|>' → logprob: -11.003499031066895
    9. ',' → logprob: -11.628499031066895
    10. ':' → logprob: -11.753499031066895

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.885492621222511e-05
    2. ' return' → logprob: -10.250068664550781
    3. '<|end|>' → logprob: -11.250068664550781
    4. 'return' → logprob: -11.625068664550781
    5. '    
' → logprob: -12.375068664550781
    6. '  ' → logprob: -13.500068664550781
    7. '
' → logprob: -13.500068664550781
    8. ')' → logprob: -13.750068664550781
    9. '<|end|>' → logprob: -14.000068664550781
    10. '[]' → logprob: -14.125068664550781

Token 167: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037089552730321884
    2. ' return' → logprob: -3.7870895862579346
    3. 'return' → logprob: -4.2870893478393555
    4. ' ' → logprob: -13.537089347839355
    5. 'def' → logprob: -14.162089347839355
    6. '  ' → logprob: -14.537089347839355
    7. '	return' → logprob: -14.537089347839355
    8. '    ' → logprob: -15.412089347839355
    9. ':return' → logprob: -15.662089347839355
    10. '
' → logprob: -16.412090301513672

Token 168: 'param' (ID: 1355)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003274564165621996
    2. ' return' → logprob: -5.878274440765381
    3. '   ' → logprob: -8.253274917602539
    4. ':return' → logprob: -9.503274917602539
    5. 'param' → logprob: -10.003274917602539
    6. 'def' → logprob: -10.003274917602539
    7. 'a' → logprob: -11.003274917602539
    8. '"""
' → logprob: -11.878274917602539
    9. ' ' → logprob: -11.878274917602539
    10. '@return' → logprob: -12.378274917602539

Token 169: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22541984915733337
    2. 'a' → logprob: -1.6004198789596558
    3. 'int' → logprob: -12.725419998168945
    4. ' int' → logprob: -13.600419998168945
    5. '   ' → logprob: -13.975419998168945
    6. ' ' → logprob: -14.600419998168945
    7. '	a' → logprob: -15.225419998168945
    8. 'param' → logprob: -15.600419998168945
    9. '  ' → logprob: -15.975419998168945
    10. '    ' → logprob: -15.975419998168945

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010890735575230792
    2. ',' → logprob: -10.00010871887207
    3. '<|end|>' → logprob: -10.87510871887207
    4. ' :' → logprob: -11.00010871887207
    5. '):' → logprob: -11.25010871887207
    6. 'a' → logprob: -12.50010871887207
    7. '<|end|>' → logprob: -12.50010871887207
    8. '=' → logprob: -12.87510871887207
    9. ':
' → logprob: -13.87510871887207
    10. ')' → logprob: -14.75010871887207

Token 171: ' First' (ID: 8338)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.1272699236869812
    2. ' Number' → logprob: -2.127269983291626
    3. 'int' → logprob: -8.252269744873047
    4. ' number' → logprob: -10.252269744873047
    5. 'number' → logprob: -10.627269744873047
    6. ' int' → logprob: -10.877269744873047
    7. '_Number' → logprob: -14.127269744873047
    8. '_number' → logprob: -14.377269744873047
    9. ' ' → logprob: -14.877269744873047
    10. 'The' → logprob: -15.002269744873047

Token 172: ' dimension' (ID: 21959)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' size' (ID: 2349)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007875907467678189
    2. '.
' → logprob: -7.250787734985352
    3. '<|end|>' → logprob: -10.375787734985352
    4. ',' → logprob: -10.750787734985352
    5. ':' → logprob: -11.250787734985352
    6. '<|end|>' → logprob: -12.250787734985352
    7. ')' → logprob: -13.125787734985352
    8. '.

' → logprob: -13.500787734985352
    9. 'def' → logprob: -13.875787734985352
    10. ' .' → logprob: -14.000787734985352

Token 174: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006758829578757286
    2. '.
' → logprob: -5.131758689880371
    3. '<|end|>' → logprob: -7.381758689880371
    4. ',' → logprob: -9.006758689880371
    5. '<|end|>' → logprob: -10.256758689880371
    6. '   ' → logprob: -10.881758689880371
    7. ':' → logprob: -11.256758689880371
    8. '.

' → logprob: -12.381758689880371
    9. 'def' → logprob: -13.006758689880371
    10. ',
' → logprob: -13.381758689880371

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006318970117717981
    2. 'b' → logprob: -5.256319046020508
    3. '    ' → logprob: -7.756319046020508
    4. ' ' → logprob: -8.631319046020508
    5. '<|end|>' → logprob: -8.881319046020508
    6. '  ' → logprob: -9.006319046020508
    7. ' b' → logprob: -9.381319046020508
    8. ':' → logprob: -10.131319046020508
    9. '     ' → logprob: -10.881319046020508
    10. 'a' → logprob: -11.381319046020508

Token 176: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02494511939585209
    2. 'b' → logprob: -4.399945259094238
    3. ':' (adapté à ' :') → logprob: -5.149945259094238
    4. ' :' → logprob: -5.274945259094238
    5. ' b' → logprob: -7.649945259094238
    6. ':param' → logprob: -7.774945259094238
    7. '    ' → logprob: -8.899945259094238
    8. ' ' → logprob: -9.399945259094238
    9. 'def' → logprob: -9.649945259094238
    10. 'param' → logprob: -10.024945259094238

Token 177: 'param' (ID: 1355)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023259920999407768
    2. ' b' → logprob: -3.7732598781585693
    3. '   ' → logprob: -11.773260116577148
    4. 'int' → logprob: -12.273260116577148
    5. 'c' → logprob: -14.273260116577148
    6. ' ' → logprob: -14.898260116577148
    7. 'def' → logprob: -15.023260116577148
    8. ':' → logprob: -15.773260116577148
    9. ' int' → logprob: -15.898260116577148
    10. 'param' → logprob: -15.898260116577148

Token 178: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759414434432983
    2. 'b' → logprob: -0.8259414434432983
    3. ' c' → logprob: -14.32594108581543
    4. 'c' → logprob: -14.45094108581543
    5. '   ' → logprob: -14.82594108581543
    6. 'int' → logprob: -15.32594108581543
    7. ' ' → logprob: -16.07594108581543
    8. 'def' → logprob: -16.82594108581543
    9. 'd' → logprob: -17.07594108581543
    10. 'B' → logprob: -17.32594108581543

Token 179: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3080716346157715e-05
    2. '=' → logprob: -10.875022888183594
    3. '):' → logprob: -13.625022888183594
    4. ' :' → logprob: -13.875022888183594
    5. ',' → logprob: -14.375022888183594
    6. ')' → logprob: -15.250022888183594
    7. '<|end|>' → logprob: -15.625022888183594
    8. '<|end|>' → logprob: -15.625022888183594
    9. 'a' → logprob: -16.125022888183594
    10. '   ' → logprob: -16.125022888183594

Token 180: ' Second' (ID: 16652)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10183696448802948
    2. ' c' → logprob: -2.351836919784546
    3. 'int' → logprob: -6.476837158203125
    4. ' int' → logprob: -10.351837158203125
    5. '   ' → logprob: -10.851837158203125
    6. 'The' → logprob: -11.476837158203125
    7. 'size' → logprob: -11.851837158203125
    8. 'Number' → logprob: -12.476837158203125
    9. ' size' → logprob: -13.101837158203125
    10. ' The' → logprob: -13.226837158203125

Token 181: ' dimension' (ID: 21959)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.7578032612800598
    2. ':' → logprob: -1.757803201675415
    3. '<|end|>' → logprob: -1.757803201675415
    4. ' dimension' → logprob: -2.257803201675415
    5. 'token' → logprob: -4.257803440093994
    6. 'size' → logprob: -4.507803440093994
    7. '=' → logprob: -4.632803440093994
    8. ')' → logprob: -4.757803440093994
    9. '<|end|>' → logprob: -4.757803440093994
    10. '   ' → logprob: -5.007803440093994

Token 182: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.16232886910438538
    2. ' size' → logprob: -1.912328839302063
    3. ':' → logprob: -7.037328720092773
    4. '_size' → logprob: -7.287328720092773
    5. '<|end|>' → logprob: -9.162328720092773
    6. ',' → logprob: -9.662328720092773
    7. '<|end|>' → logprob: -9.787328720092773
    8. '.size' → logprob: -10.037328720092773
    9. '(size' → logprob: -10.162328720092773
    10. 'sizei' → logprob: -10.412328720092773

Token 183: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4265228807926178
    2. '.' → logprob: -1.1765228509902954
    3. ':' → logprob: -4.051522731781006
    4. ',
' → logprob: -4.926522731781006
    5. '<|end|>' → logprob: -5.301522731781006
    6. '   ' → logprob: -5.426522731781006
    7. 'def' → logprob: -6.676522731781006
    8. ')' → logprob: -6.926522731781006
    9. '.
' → logprob: -7.301522731781006
    10. 'c' → logprob: -7.926522731781006

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001458331593312323
    2. ':' → logprob: -7.376458168029785
    3. 'def' → logprob: -7.376458168029785
    4. ':param' → logprob: -9.376458168029785
    5. 'from' → logprob: -10.251458168029785
    6. ' ' → logprob: -11.376458168029785
    7. ':return' → logprob: -11.376458168029785
    8. ' :' → logprob: -11.751458168029785
    9. 'import' → logprob: -11.876458168029785
    10. '
' → logprob: -11.876458168029785

Token 185: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06836509704589844
    2. 'c' → logprob: -3.5683650970458984
    3. ',' → logprob: -4.193365097045898
    4. ' c' → logprob: -4.193365097045898
    5. 'from' → logprob: -6.193365097045898
    6. ')' → logprob: -6.818365097045898
    7. ':' (adapté à ' :') → logprob: -6.943365097045898
    8. 'def' → logprob: -7.318365097045898
    9. 'import' → logprob: -7.568365097045898
    10. ' ,' → logprob: -7.943365097045898

Token 186: 'param' (ID: 1355)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006724129430949688
    2. ' c' → logprob: -5.0067243576049805
    3. 'int' → logprob: -11.88172435760498
    4. '   ' → logprob: -13.75672435760498
    5. 'C' → logprob: -15.25672435760498
    6. '
' → logprob: -16.131723403930664
    7. ' int' → logprob: -17.006723403930664
    8. '  ' → logprob: -17.006723403930664
    9. ')c' → logprob: -17.131723403930664
    10. ':' → logprob: -17.381723403930664

Token 187: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0059287971816957
    2. ' c' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.755928993225098
    4. '  ' → logprob: -17.50592803955078
    5. ' ' → logprob: -17.63092803955078
    6. 'C' → logprob: -17.88092803955078
    7. 'int' → logprob: -18.63092803955078
    8. '	c' → logprob: -19.88092803955078
    9. 'list' → logprob: -20.00592803955078
    10. '_c' → logprob: -20.00592803955078

Token 188: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.127333340875339e-06
    2. ' :' → logprob: -12.875003814697266
    3. '):' → logprob: -14.500003814697266
    4. ',' → logprob: -14.750003814697266
    5. 'def' → logprob: -15.625003814697266
    6. '<|end|>' → logprob: -16.125003814697266
    7. ':
' → logprob: -16.500003814697266
    8. ':int' → logprob: -16.875003814697266
    9. '<|end|>' → logprob: -17.250003814697266
    10. '=' → logprob: -17.250003814697266

Token 189: ' Third' (ID: 35108)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16272525489330292
    2. ' d' → logprob: -1.9127252101898193
    3. 'Third' → logprob: -6.787725448608398
    4. ' third' → logprob: -8.037725448608398
    5. ' Third' → logprob: -8.162725448608398
    6. 'third' → logprob: -8.662725448608398
    7. 'The' → logprob: -9.162725448608398
    8. 'def' → logprob: -9.287725448608398
    9. '<|end|>' → logprob: -9.412725448608398
    10. 'int' → logprob: -10.037725448608398

Token 190: ' dimension' (ID: 21959)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.6192324757575989
    2. ' dimension' → logprob: -0.8692324757575989
    3. ' size' → logprob: -4.244232654571533
    4. 'size' → logprob: -4.244232654571533
    5. '<|end|>' → logprob: -5.119232654571533
    6. ':' → logprob: -5.869232654571533
    7. '<|end|>' → logprob: -6.494232654571533
    8. '_dimension' → logprob: -7.369232654571533
    9. '   ' → logprob: -7.369232654571533
    10. '.dimension' → logprob: -8.369232177734375

Token 191: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.1605619490146637
    2. ' size' → logprob: -1.9105619192123413
    3. '_size' → logprob: -8.035561561584473
    4. 'Size' → logprob: -12.660561561584473
    5. 'sizes' → logprob: -13.035561561584473
    6. ':' → logprob: -13.285561561584473
    7. '.size' → logprob: -13.660561561584473
    8. 's' → logprob: -14.035561561584473
    9. '(size' → logprob: -14.035561561584473
    10. ' sizes' → logprob: -14.285561561584473

Token 192: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016609959304332733
    2. ',
' → logprob: -4.266610145568848
    3. '.' → logprob: -6.766610145568848
    4. '<|end|>' → logprob: -7.516610145568848
    5. '   ' → logprob: -8.266610145568848
    6. ':' → logprob: -8.641610145568848
    7. 'def' → logprob: -9.141610145568848
    8. ')' → logprob: -9.391610145568848
    9. '<|end|>' → logprob: -9.766610145568848
    10. '#' → logprob: -10.766610145568848

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009018577635288239
    2. 'def' → logprob: -5.259018421173096
    3. ':' → logprob: -6.759018421173096
    4. '"""
' → logprob: -7.134018421173096
    5. ' ' → logprob: -7.634018421173096
    6. ' :' → logprob: -7.634018421173096
    7. '<|end|>' → logprob: -8.509018898010254
    8. ':param' → logprob: -8.634018898010254
    9. '<|end|>' → logprob: -9.259018898010254
    10. ':return' → logprob: -9.384018898010254

Token 194: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3541085422039032
    2. ':' (adapté à ' :') → logprob: -1.9791085720062256
    3. ' :' → logprob: -2.1041085720062256
    4. 'd' → logprob: -4.8541083335876465
    5. 'def' → logprob: -4.8541083335876465
    6. ':return' → logprob: -5.1041083335876465
    7. '<|end|>' → logprob: -5.2291083335876465
    8. ' ' → logprob: -6.1041083335876465
    9. '#' → logprob: -6.4791083335876465
    10. ' d' → logprob: -6.7291083335876465

Token 195: 'param' (ID: 1355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1094808578491211
    2. '3' → logprob: -2.984480857849121
    3. 'c' → logprob: -3.734480857849121
    4. 'd' → logprob: -4.734480857849121
    5. '4' → logprob: -4.984480857849121
    6. ' ' → logprob: -5.359480857849121
    7. '2' → logprob: -5.984480857849121
    8. ')' → logprob: -6.234480857849121
    9. 'None' → logprob: -6.984480857849121
    10. 'int' → logprob: -7.234480857849121

Token 196: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31337395310401917
    2. ' d' → logprob: -1.3133739233016968
    3. '   ' → logprob: -9.313373565673828
    4. ' ' → logprob: -10.813373565673828
    5. '  ' → logprob: -14.313373565673828
    6. '	d' → logprob: -14.438373565673828
    7. '    ' → logprob: -15.438373565673828
    8. 'def' → logprob: -16.938373565673828
    9. '```' → logprob: -16.938373565673828
    10. '`' → logprob: -17.063373565673828

Token 197: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12725429236888885
    2. '):' → logprob: -2.1272542476654053
    3. ')' → logprob: -8.252254486083984
    4. ' :' → logprob: -10.377254486083984
    5. '):
' → logprob: -11.502254486083984
    6. '":' → logprob: -12.002254486083984
    7. '=' → logprob: -12.127254486083984
    8. ']:' → logprob: -12.252254486083984
    9. '):

' → logprob: -13.377254486083984
    10. ' ):' → logprob: -13.502254486083984

Token 198: ' Initial' (ID: 9209)
  Prédit: ' Initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Initial' → logprob: -0.01613747701048851
    2. 'Initial' → logprob: -4.141137599945068
    3. ' initial' → logprob: -9.76613712310791
    4. ' The' → logprob: -10.76613712310791
    5. ' ' → logprob: -11.14113712310791
    6. ')' → logprob: -12.89113712310791
    7. '<|end|>' → logprob: -13.76613712310791
    8. ' value' → logprob: -13.89113712310791
    9. ' d' → logprob: -14.14113712310791
    10. ' INITIAL' → logprob: -14.26613712310791

Token 199: ' value' (ID: 1432)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6613987684249878
    2. ')' → logprob: -1.6613987684249878
    3. ' value' → logprob: -2.0363988876342773
    4. ' ' → logprob: -2.5363988876342773
    5. 'value' → logprob: -3.1613988876342773
    6. ' ]' → logprob: -3.9113988876342773
    7. '<|end|>' → logprob: -4.411398887634277
    8. '_value' → logprob: -5.411398887634277
    9. '_' → logprob: -6.786398887634277
    10. '=' → logprob: -6.911398887634277

Token 200: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2355082929134369
    2. ' for' → logprob: -2.4855082035064697
    3. 'for' → logprob: -2.6105082035064697
    4. '):
' → logprob: -3.4855082035064697
    5. ')' → logprob: -4.110508441925049
    6. ':' → logprob: -5.360508441925049
    7. '   ' → logprob: -7.860508441925049
    8. '.' → logprob: -8.23550796508789
    9. '=None' → logprob: -8.61050796508789
    10. '=' → logprob: -8.73550796508789

Token 201: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.20141403377056122
    2. ' each' → logprob: -1.7014139890670776
    3. 'Each' → logprob: -14.826414108276367
    4. 'e' → logprob: -15.701414108276367
    5. '_each' → logprob: -17.326414108276367
    6. 'd' → logprob: -17.451414108276367
    7. 'the' → logprob: -17.576414108276367
    8. ' ' → logprob: -17.701414108276367
    9. '.each' → logprob: -17.826414108276367
    10. ' the' → logprob: -18.076414108276367

Token 202: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.7580757737159729
    2. 'element' → logprob: -0.8830757737159729
    3. ')' → logprob: -2.633075714111328
    4. '):' → logprob: -3.633075714111328
    5. 'value' → logprob: -4.633075714111328
    6. ' value' → logprob: -4.883075714111328
    7. ' ' → logprob: -7.633075714111328
    8. ':' → logprob: -8.133075714111328
    9. ']' → logprob: -8.383075714111328
    10. '):
' → logprob: -8.383075714111328

Token 203: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1320941299200058
    2. '):
' → logprob: -2.257094144821167
    3. ')' → logprob: -4.382093906402588
    4. '   ' → logprob: -5.132093906402588
    5. ':' → logprob: -7.507093906402588
    6. ']:' → logprob: -10.007094383239746
    7. '):
' → logprob: -11.007094383239746
    8. '.' → logprob: -11.757094383239746
    9. ':
' → logprob: -11.757094383239746
    10. '**' → logprob: -11.882094383239746

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017588881019037217
    2. ')' → logprob: -9.875175476074219
    3. ']' → logprob: -10.250175476074219
    4. '):
' → logprob: -10.375175476074219
    5. '"""
' → logprob: -10.750175476074219
    6. '<|end|>' → logprob: -11.750175476074219
    7. '"""' → logprob: -11.875175476074219
    8. '  ' → logprob: -12.500175476074219
    9. '```' → logprob: -12.875175476074219
    10. '<|end|>' → logprob: -12.875175476074219

Token 205: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024819301441311836
    2. ')' → logprob: -3.8998193740844727
    3. '"""
' → logprob: -6.024819374084473
    4. '"""' → logprob: -6.649819374084473
    5. '):
' → logprob: -8.399819374084473
    6. '):' → logprob: -8.774819374084473
    7. ')
' → logprob: -9.399819374084473
    8. '```' → logprob: -10.649819374084473
    9. '""' → logprob: -11.649819374084473
    10. '  ' → logprob: -11.774819374084473

Token 206: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3990856111049652
    2. '"""
' → logprob: -1.5240856409072876
    3. '   ' → logprob: -2.524085521697998
    4. ' return' → logprob: -4.024085521697998
    5. '"""' → logprob: -4.524085521697998
    6. ':return' → logprob: -6.899085521697998
    7. ' """
' → logprob: -7.524085521697998
    8. ')
' → logprob: -8.649085998535156
    9. '@return' → logprob: -9.274085998535156
    10. ')' → logprob: -9.524085998535156

Token 207: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058255430310964584
    2. '   ' → logprob: -2.933255434036255
    3. ' :' → logprob: -6.558255195617676
    4. '[' → logprob: -7.683255195617676
    5. ' [' → logprob: -7.683255195617676
    6. '=' → logprob: -8.433255195617676
    7. ' ' → logprob: -8.683255195617676
    8. '    ' → logprob: -8.683255195617676
    9. '  ' → logprob: -9.433255195617676
    10. ' =' → logprob: -9.558255195617676

Token 208: ' ' (ID: 220)
  Prédit: ' [[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[[' → logprob: -0.40178346633911133
    2. '[[' → logprob: -1.1517834663391113
    3. ' [[' → logprob: -4.776783466339111
    4. '[a' → logprob: -5.276783466339111
    5. '3' → logprob: -7.651783466339111
    6. ' ' → logprob: -8.151782989501953
    7. 'a' → logprob: -8.276782989501953
    8. '```' → logprob: -9.651782989501953
    9. ' [' → logprob: -9.901782989501953
    10. ' a' → logprob: -10.276782989501953

Token 209: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004948154557496309
    2. '[[' → logprob: -5.879948139190674
    3. '[a' → logprob: -6.629948139190674
    4. 'list' → logprob: -7.754948139190674
    5. 'a' → logprob: -8.629948616027832
    6. ' ' → logprob: -9.129948616027832
    7. ' [[[' → logprob: -10.129948616027832
    8. '```' → logprob: -10.629948616027832
    9. ' list' → logprob: -10.879948616027832
    10. '[list' → logprob: -12.504948616027832

Token 210: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.058054108172655106
    2. '[' → logprob: -3.933054208755493
    3. '[[' → logprob: -4.933053970336914
    4. ' [' → logprob: -5.058053970336914
    5. '[a' → logprob: -5.058053970336914
    6. '-dimensional' → logprob: -5.433053970336914
    7. 'd' → logprob: -5.683053970336914
    8. '[
' → logprob: -6.433053970336914
    9. 'a' → logprob: -6.683053970336914
    10. ' [[' → logprob: -6.683053970336914

Token 211: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0004456852038856596
    2. 'list' → logprob: -7.75044584274292
    3. '[' → logprob: -11.625445365905762
    4. 'List' → logprob: -13.500445365905762
    5. ' lists' → logprob: -13.625445365905762
    6. '_list' → logprob: -14.125445365905762
    7. ' [' → logprob: -14.375445365905762
    8. ' List' → logprob: -14.750445365905762
    9. ' space' → logprob: -15.000445365905762
    10. '[list' → logprob: -15.125445365905762

Token 212: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0031142570078372955
    2. 'of' → logprob: -6.378114223480225
    3. '[a' → logprob: -7.128114223480225
    4. '   ' → logprob: -8.253114700317383
    5. '[' → logprob: -8.253114700317383
    6. ' [' → logprob: -10.878114700317383
    7. '[[' → logprob: -11.378114700317383
    8. '<|end|>' → logprob: -11.753114700317383
    9. 'a' → logprob: -12.003114700317383
    10. '(a' → logprob: -12.378114700317383

Token 213: ' dimensions' (ID: 23995)
  Prédit: ' dimensions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dimensions' → logprob: -0.3497626781463623
    2. 'dimensions' → logprob: -1.2247626781463623
    3. '[a' → logprob: -7.224762916564941
    4. 'a' → logprob: -7.974762916564941
    5. ' size' → logprob: -9.599762916564941
    6. 'size' → logprob: -9.599762916564941
    7. ' dimension' → logprob: -10.599762916564941
    8. '[[' → logprob: -10.724762916564941
    9. 'dimension' → logprob: -10.849762916564941
    10. 'd' → logprob: -10.849762916564941

Token 214: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2268068492412567
    2. 'a' → logprob: -1.601806879043579
    3. '[a' → logprob: -6.601806640625
    4. ' [' → logprob: -10.601806640625
    5. '[' → logprob: -12.601806640625
    6. '(a' → logprob: -12.726806640625
    7. '   ' → logprob: -13.726806640625
    8. ' ' → logprob: -14.226806640625
    9. ' (' → logprob: -14.351806640625
    10. '	a' → logprob: -15.226806640625

Token 215: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.018230600282549858
    2. 'x' → logprob: -4.018230438232422
    3. ' ' → logprob: -9.768230438232422
    4. '×' → logprob: -11.643230438232422
    5. '*' → logprob: -12.018230438232422
    6. '`' → logprob: -13.393230438232422
    7. ' *' → logprob: -13.643230438232422
    8. 'a' → logprob: -13.768230438232422
    9. '```' → logprob: -13.893230438232422
    10. ')' → logprob: -14.268230438232422

Token 216: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3144758343696594
    2. ' b' → logprob: -1.3144757747650146
    3. 'c' → logprob: -7.189476013183594
    4. ' c' → logprob: -7.689476013183594
    5. ' ' → logprob: -14.064476013183594
    6. ' d' → logprob: -15.564476013183594
    7. 'd' → logprob: -15.564476013183594
    8. '(b' → logprob: -17.064476013183594
    9. '(' → logprob: -17.564476013183594
    10. '  ' → logprob: -17.814476013183594

Token 217: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11285798251628876
    2. ' x' → logprob: -2.2378580570220947
    3. ' ' → logprob: -10.737857818603516
    4. 'c' → logprob: -12.237857818603516
    5. 'xc' → logprob: -13.362857818603516
    6. ')' → logprob: -13.737857818603516
    7. '```' → logprob: -13.737857818603516
    8. ' c' → logprob: -13.862857818603516
    9. '*' → logprob: -14.112857818603516
    10. '[]' → logprob: -14.362857818603516

Token 218: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02325270138680935
    2. ' c' → logprob: -3.7732527256011963
    3. 'd' → logprob: -11.898252487182617
    4. ' d' → logprob: -15.523252487182617
    5. ' ' → logprob: -16.523252487182617
    6. '	c' → logprob: -17.398252487182617
    7. '(c' → logprob: -17.523252487182617
    8. '   ' → logprob: -17.523252487182617
    9. '_c' → logprob: -17.773252487182617
    10. '[c' → logprob: -18.023252487182617

Token 219: ' filled' (ID: 14255)
  Prédit: ' filled'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' filled' → logprob: -0.16078680753707886
    2. 'filled' → logprob: -1.9107868671417236
    3. '.' → logprob: -8.285786628723145
    4. 'd' → logprob: -9.535786628723145
    5. ']' → logprob: -9.660786628723145
    6. 'Filled' → logprob: -9.910786628723145
    7. ' lists' → logprob: -10.785786628723145
    8. ' with' → logprob: -10.910786628723145
    9. 'f' → logprob: -11.160786628723145
    10. '[]' → logprob: -11.285786628723145

Token 220: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3133372366428375
    2. 'with' → logprob: -1.3133372068405151
    3. '   ' → logprob: -10.563337326049805
    4. '[' → logprob: -10.688337326049805
    5. '<|end|>' → logprob: -11.188337326049805
    6. '[d' → logprob: -12.188337326049805
    7. '	with' → logprob: -12.813337326049805
    8. '    ' → logprob: -13.438337326049805
    9. ' ' → logprob: -13.938337326049805
    10. ' [' → logprob: -14.063337326049805

Token 221: ' value' (ID: 1432)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04874883219599724
    2. 'd' → logprob: -3.048748731613159
    3. ' value' → logprob: -9.048748970031738
    4. 'value' → logprob: -10.048748970031738
    5. ' ' → logprob: -15.673748970031738
    6. ' ' → logprob: -15.798748970031738
    7. 'Value' → logprob: -16.048748016357422
    8. '	d' → logprob: -16.173748016357422
    9. '[d' → logprob: -17.361248016357422
    10. ''d' → logprob: -17.548748016357422

Token 222: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.018153805285692215
    2. 'd' → logprob: -4.018153667449951
    3. ' ' → logprob: -13.01815414428711
    4. ' ' → logprob: -14.26815414428711
    5. '	d' → logprob: -15.51815414428711
    6. ' value' → logprob: -15.64315414428711
    7. '  ' → logprob: -16.14315414428711
    8. '   ' → logprob: -16.51815414428711
    9. '```' → logprob: -16.51815414428711
    10. '_d' → logprob: -16.64315414428711

Token 223: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5699659585952759
    2. ']' → logprob: -2.0699658393859863
    3. ']
' → logprob: -2.0699658393859863
    4. '.
' → logprob: -2.5699658393859863
    5. '.]' → logprob: -3.0699658393859863
    6. '.]
' → logprob: -3.1949658393859863
    7. '   ' → logprob: -4.694965839385986
    8. ']:
' → logprob: -4.944965839385986
    9. ':
' → logprob: -7.694965839385986
    10. ']:' → logprob: -7.819965839385986

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005281301564536989
    2. ']' → logprob: -8.250528335571289
    3. '"""
' → logprob: -8.625528335571289
    4. '"""' → logprob: -10.250528335571289
    5. ']
' → logprob: -10.375528335571289
    6. ')' → logprob: -11.625528335571289
    7. 'return' → logprob: -12.625528335571289
    8. '):
' → logprob: -13.000528335571289
    9. ' return' → logprob: -13.750528335571289
    10. ')
' → logprob: -13.875528335571289

Token 225: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2576626241207123
    2. '"""
' (adapté à ' """
') → logprob: -1.5076626539230347
    3. '"""' → logprob: -5.507662773132324
    4. ']' → logprob: -7.007662773132324
    5. ']
' → logprob: -7.382662773132324
    6. 'return' → logprob: -9.632662773132324
    7. '```' → logprob: -10.507662773132324
    8. ' """
' → logprob: -10.757662773132324
    9. ' return' → logprob: -12.382662773132324
    10. '""' → logprob: -12.882662773132324

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16082973778247833
    2. 'return' → logprob: -1.910829782485962
    3. ' return' → logprob: -7.410829544067383
    4. '	return' → logprob: -14.285829544067383
    5. '  ' → logprob: -15.910829544067383
    6. ' ' → logprob: -16.910829544067383
    7. '```' → logprob: -16.910829544067383
    8. '    ' → logprob: -17.910829544067383
    9. '       ' → logprob: -18.410829544067383
    10. '   ' → logprob: -18.535829544067383

Token 227: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.08944896562025e-05
    2. ' return' → logprob: -10.000081062316895
    3. '   ' → logprob: -10.250081062316895
    4. '	return' → logprob: -18.000080108642578
    5. ' ' → logprob: -19.250080108642578
    6. 'eturn' → logprob: -21.000080108642578
    7. '  ' → logprob: -21.375080108642578
    8. '```' → logprob: -21.875080108642578
    9. '
' → logprob: -22.250080108642578
    10. '{return' → logprob: -22.500080108642578

Token 228: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -4.246537173457909e-06
    2. '[list' → logprob: -13.000003814697266
    3. ' [[[' → logprob: -13.250003814697266
    4. '[' → logprob: -15.750003814697266
    5. ' [[' → logprob: -17.375003814697266
    6. 'list' → logprob: -19.250003814697266
    7. '[a' → logprob: -19.375003814697266
    8. '[
' → logprob: -20.000003814697266
    9. '[l' → logprob: -20.375003814697266
    10. '[array' → logprob: -20.875003814697266

Token 229: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.088346359931165e-07
    2. ' d' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.625
    4. '	d' → logprob: -21.625
    5. '       ' → logprob: -21.75
    6. '
' → logprob: -21.875
    7. 'c' → logprob: -22.75
    8. '```' → logprob: -22.75
    9. ')d' → logprob: -22.75
    10. '     ' → logprob: -23.125

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0336948037147522
    2. ']*' → logprob: -3.5336947441101074
    3. ' for' → logprob: -5.658694744110107
    4. 'for' → logprob: -7.908694744110107
    5. ' ]' → logprob: -9.658695220947266
    6. '*' → logprob: -11.658695220947266
    7. '   ' → logprob: -11.908695220947266
    8. ')' → logprob: -13.533695220947266
    9. ' ' → logprob: -15.158695220947266
    10. '    ' → logprob: -15.408695220947266

Token 231: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9354453086853027
    2. ' for' → logprob: -1.1854453086853027
    3. ' *' → logprob: -1.6854453086853027
    4. ']' → logprob: -3.0604453086853027
    5. ']*' → logprob: -3.3104453086853027
    6. '   ' → logprob: -3.8104453086853027
    7. 'for' → logprob: -5.435445308685303
    8. '    ' → logprob: -6.310445308685303
    9. ')' → logprob: -6.685445308685303
    10. ' c' → logprob: -6.810445308685303

Token 232: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.161069855093956
    2. 'c' → logprob: -1.9110698699951172
    3. ' d' → logprob: -7.536069869995117
    4. '   ' → logprob: -8.911069869995117
    5. ' c' → logprob: -9.411069869995117
    6. ' ' → logprob: -10.286069869995117
    7. '  ' → logprob: -10.786069869995117
    8. '    ' → logprob: -10.911069869995117
    9. '```' → logprob: -12.161069869995117
    10. '       ' → logprob: -12.286069869995117

Token 233: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693335115909576
    2. ' for' → logprob: -2.1269333362579346
    3. '   ' → logprob: -12.376933097839355
    4. '	for' → logprob: -14.251933097839355
    5. '       ' → logprob: -16.001934051513672
    6. ']' → logprob: -16.376934051513672
    7. ' ' → logprob: -16.501934051513672
    8. '    ' → logprob: -16.751934051513672
    9. ')' → logprob: -17.126934051513672
    10. '           ' → logprob: -18.001934051513672

Token 234: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01131683960556984
    2. ' _' → logprob: -4.511316776275635
    3. '_in' → logprob: -8.886317253112793
    4. '_j' → logprob: -9.136317253112793
    5. '_b' → logprob: -12.011317253112793
    6. ' in' → logprob: -12.011317253112793
    7. ' ' → logprob: -13.011317253112793
    8. '_y' → logprob: -13.386317253112793
    9. '_range' → logprob: -13.511317253112793
    10. '_c' → logprob: -13.511317253112793

Token 235: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31891876459121704
    2. ' in' → logprob: -1.3189187049865723
    3. '_' → logprob: -5.818918704986572
    4. 'range' → logprob: -5.943918704986572
    5. ' ' → logprob: -10.56891918182373
    6. ' range' → logprob: -11.94391918182373
    7. ' _' → logprob: -12.81891918182373
    8. '_in' → logprob: -13.19391918182373
    9. 'i' → logprob: -13.31891918182373
    10. 'In' → logprob: -13.81891918182373

Token 236: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246875032782555
    2. ' range' → logprob: -3.7732467651367188
    3. 'in' → logprob: -15.273246765136719
    4. ' in' → logprob: -15.398246765136719
    5. '(range' → logprob: -15.398246765136719
    6. 'ran' → logprob: -15.523246765136719
    7. ' ' → logprob: -15.648246765136719
    8. '_' → logprob: -15.648246765136719
    9. '	range' → logprob: -16.89824676513672
    10. 'r' → logprob: -17.02324676513672

Token 237: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001605115394340828
    2. 'b' → logprob: -8.750160217285156
    3. '(' → logprob: -13.875160217285156
    4. ' (' → logprob: -14.625160217285156
    5. '	b' → logprob: -15.000160217285156
    6. '(
' → logprob: -16.125160217285156
    7. '   ' → logprob: -16.375160217285156
    8. ')b' → logprob: -17.125160217285156
    9. ' b' → logprob: -18.375160217285156
    10. '(B' → logprob: -18.875160217285156

Token 238: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023359615355730057
    2. ')]' → logprob: -3.773359537124634
    3. ')' → logprob: -9.398359298706055
    4. ' ]' → logprob: -10.648359298706055
    5. '()]' → logprob: -12.648359298706055
    6. ']
' → logprob: -12.773359298706055
    7. '   ' → logprob: -14.398359298706055
    8. ']]' → logprob: -14.648359298706055
    9. '}]' → logprob: -15.398359298706055
    10. '`]' → logprob: -16.898359298706055

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1602877974510193
    2. ' for' → logprob: -1.910287857055664
    3. '   ' → logprob: -10.035287857055664
    4. ']' → logprob: -11.035287857055664
    5. '	for' → logprob: -13.035287857055664
    6. ' ' → logprob: -14.785287857055664
    7. '    ' → logprob: -14.785287857055664
    8. '       ' → logprob: -15.285287857055664
    9. ')' → logprob: -15.285287857055664
    10. ' ]' → logprob: -16.410287857055664

Token 240: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7349594235420227
    2. 'range' → logprob: -0.7349594235420227
    3. '_' → logprob: -3.234959363937378
    4. ' in' → logprob: -6.609959602355957
    5. ' _' → logprob: -9.484959602355957
    6. 'a' → logprob: -9.609959602355957
    7. '_range' → logprob: -10.109959602355957
    8. ' a' → logprob: -10.609959602355957
    9. '(range' → logprob: -10.734959602355957
    10. 'in' → logprob: -11.734959602355957

Token 241: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026419671485200524
    2. ' range' → logprob: -8.250264167785645
    3. 'in' → logprob: -13.375264167785645
    4. '(range' → logprob: -13.875264167785645
    5. ' in' → logprob: -14.750264167785645
    6. '_range' → logprob: -19.12526512145996
    7. '	range' → logprob: -19.12526512145996
    8. ' ' → logprob: -19.12526512145996
    9. 'ran' → logprob: -20.37526512145996
    10. 'ange' → logprob: -20.62526512145996

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008712020353414118
    2. 'a' → logprob: -7.250871181488037
    3. ' range' → logprob: -8.750871658325195
    4. '(range' → logprob: -12.750871658325195
    5. '(a' → logprob: -16.000871658325195
    6. '[a' → logprob: -18.500871658325195
    7. '	range' → logprob: -18.875871658325195
    8. ' a' → logprob: -19.375871658325195
    9. '_range' → logprob: -19.750871658325195
    10. 'in' → logprob: -20.000871658325195

Token 243: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.4121114822482923e-06
    2. 'a' → logprob: -12.625003814697266
    3. '(' → logprob: -19.500003814697266
    4. '(
' → logprob: -21.125003814697266
    5. '/a' → logprob: -22.500003814697266
    6. '(A' → logprob: -22.500003814697266
    7. '   ' → logprob: -23.500003814697266
    8. '=a' → logprob: -23.500003814697266
    9. '[a' → logprob: -23.500003814697266
    10. '	a' → logprob: -23.750003814697266

Token 244: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0024934951215982437
    2. ']' → logprob: -6.002493381500244
    3. ')' → logprob: -11.127493858337402
    4. '])' → logprob: -13.252493858337402
    5. '])]' → logprob: -14.877493858337402
    6. ']]' → logprob: -15.002493858337402
    7. '()]' → logprob: -15.627493858337402
    8. ')])' → logprob: -15.877493858337402
    9. '}]' → logprob: -16.502492904663086
    10. ')],' → logprob: -16.752492904663086

Token 245: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.580929347255733e-05
    2. 'from' → logprob: -12.250016212463379
    3. 'import' → logprob: -12.375016212463379
    4. 'class' → logprob: -12.875016212463379
    5. '
' → logprob: -12.875016212463379
    6. 'n' → logprob: -14.250016212463379
    7. '#' → logprob: -15.000016212463379
    8. 'N' → logprob: -16.000015258789062
    9. '```' → logprob: -16.000015258789062
    10. '\' → logprob: -16.375015258789062

Token 246: ' list' (ID: 1562)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7636382579803467
    2. 'main' → logprob: -1.1386382579803467
    3. ' list' → logprob: -2.1386382579803467
    4. 'list' → logprob: -2.3886382579803467
    5. 'int' → logprob: -7.138638496398926
    6. 'print' → logprob: -7.763638496398926
    7. 'pow' → logprob: -7.888638496398926
    8. 'max' → logprob: -8.263638496398926
    9. ' ceil' → logprob: -8.388638496398926
    10. ' int' → logprob: -8.638638496398926

Token 247: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0026705421041697264
    2. '1' → logprob: -6.627670764923096
    3. '2' → logprob: -6.627670764923096
    4. '(' → logprob: -12.502670288085938
    5. '5' → logprob: -12.752670288085938
    6. 'def' → logprob: -12.752670288085938
    7. '
' → logprob: -12.752670288085938
    8. 'a' → logprob: -14.002670288085938
    9. '  ' → logprob: -14.127670288085938
    10. '(a' → logprob: -14.377670288085938

Token 248: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.128163257315464e-07
    2. 'def' → logprob: -15.125
    3. 'a' → logprob: -17.0
    4. '(a' → logprob: -18.25
    5. 'c' → logprob: -20.625
    6. 'e' → logprob: -20.875
    7. 'д' → logprob: -21.0
    8. '_d' → logprob: -21.0
    9. 's' → logprob: -21.125
    10. '(d' → logprob: -21.25

Token 249: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.15441757265944e-05
    2. '(' → logprob: -10.375031471252441
    3. ' (' → logprob: -15.375031471252441
    4. '(
' → logprob: -18.125032424926758
    5. '(A' → logprob: -18.125032424926758
    6. '(ai' → logprob: -20.500032424926758
    7. '((' → logprob: -21.000032424926758
    8. '(`' → logprob: -21.375032424926758
    9. '(n' → logprob: -21.375032424926758
    10. 'a' → logprob: -21.500032424926758

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.468279752880335e-05
    2. ',a' → logprob: -10.000064849853516
    3. '(a' → logprob: -11.375064849853516
    4. ' ,' → logprob: -12.250064849853516
    5. ',b' → logprob: -13.125064849853516
    6. '(' → logprob: -14.750064849853516
    7. 'a' → logprob: -15.000064849853516
    8. ',(' → logprob: -16.625064849853516
    9. ',
' → logprob: -16.875064849853516
    10. '_,' → logprob: -17.375064849853516

Token 251: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. '	b' → logprob: -20.02975082397461
    4. '   ' → logprob: -20.65475082397461
    5. ' ' → logprob: -21.40475082397461
    6. '(b' → logprob: -21.40475082397461
    7. ',b' → logprob: -22.65475082397461
    8. ' б' → logprob: -22.90475082397461
    9. ',' → logprob: -23.02975082397461
    10. '_b' → logprob: -23.15475082397461

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',c' → logprob: -12.500039100646973
    4. ',a' → logprob: -15.875039100646973
    5. ',
' → logprob: -18.25004005432129
    6. ',b' → logprob: -18.75004005432129
    7. '‌,' → logprob: -18.75004005432129
    8. ',s' → logprob: -19.12504005432129
    9. '<|end|>' → logprob: -19.12504005432129
    10. ',d' → logprob: -19.37504005432129

Token 253: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692810595035553
    2. ' c' → logprob: -2.1269280910491943
    3. '	c' → logprob: -20.126928329467773
    4. '_c' → logprob: -21.001928329467773
    5. ' ' → logprob: -21.751928329467773
    6. '   ' → logprob: -22.251928329467773
    7. ' ' → logprob: -22.501928329467773
    8. 'C' → logprob: -22.626928329467773
    9. ',c' → logprob: -22.626928329467773
    10. '(c' → logprob: -22.876928329467773

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ' ,' → logprob: -10.625039100646973
    3. ',d' → logprob: -11.125039100646973
    4. 'd' → logprob: -16.50004005432129
    5. ',
' → logprob: -18.62504005432129
    6. '_,' → logprob: -19.12504005432129
    7. '```' → logprob: -20.25004005432129
    8. 's' → logprob: -20.37504005432129
    9. '‌,' → logprob: -20.37504005432129
    10. '`,' → logprob: -20.50004005432129

Token 255: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07888978719711304
    2. ' d' → logprob: -2.578889846801758
    3. '   ' → logprob: -18.453889846801758
    4. '	d' → logprob: -18.703889846801758
    5. 'def' → logprob: -18.953889846801758
    6. ' ' → logprob: -19.453889846801758
    7. 'e' → logprob: -19.578889846801758
    8. ')d' → logprob: -21.703889846801758
    9. '_d' → logprob: -21.828889846801758
    10. '  ' → logprob: -22.578889846801758

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ',e' → logprob: -10.50003719329834
    3. ' ,' → logprob: -12.00003719329834
    4. 'e' → logprob: -12.62503719329834
    5. ' e' → logprob: -14.50003719329834
    6. ',
' → logprob: -17.625038146972656
    7. '_,' → logprob: -18.875038146972656
    8. '):' → logprob: -19.625038146972656
    9. ')' → logprob: -20.625038146972656
    10. '   ' → logprob: -20.750038146972656

Token 257: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00033546582562848926
    2. ' e' → logprob: -8.000335693359375
    3. '	e' → logprob: -19.750335693359375
    4. '   ' → logprob: -21.000335693359375
    5. 'ｅ' → logprob: -21.250335693359375
    6. ' ' → logprob: -22.375335693359375
    7. 'f' → logprob: -22.500335693359375
    8. 'ee' → logprob: -23.125335693359375
    9. 'x' → logprob: -23.250335693359375
    10. '_e' → logprob: -23.375335693359375

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013648776803165674
    2. '):
' → logprob: -6.626364707946777
    3. ')' → logprob: -10.251364707946777
    4. ' ):' → logprob: -12.876364707946777
    5. ':' → logprob: -14.376364707946777
    6. '):
' → logprob: -15.501364707946777
    7. '):

' → logprob: -15.751364707946777
    8. '   ' → logprob: -16.626365661621094
    9. ',' → logprob: -17.251365661621094
    10. ']:' → logprob: -17.376365661621094

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007920012576505542
    2. ':' → logprob: -7.750792026519775
    3. '):
' → logprob: -8.625791549682617
    4. '):' → logprob: -9.500791549682617
    5. ':
' → logprob: -10.250791549682617
    6. '<|end|>' → logprob: -10.500791549682617
    7. ')' → logprob: -10.875791549682617
    8. ':return' → logprob: -12.375791549682617
    9. ' return' → logprob: -12.500791549682617
    10. '```' → logprob: -13.125791549682617

Token 260: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014847563579678535
    2. ' return' → logprob: -10.00014877319336
    3. 'return' → logprob: -10.12514877319336
    4. '[
' → logprob: -11.12514877319336
    5. '(
' → logprob: -11.75014877319336
    6. ')' → logprob: -12.25014877319336
    7. ':return' → logprob: -12.37514877319336
    8. '
' → logprob: -12.50014877319336
    9. '```' → logprob: -12.75014877319336
    10. '(' → logprob: -12.75014877319336

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035907309502363205
    2. 'return' → logprob: -3.53590726852417
    3. '"""
' → logprob: -5.28590726852417
    4. ' return' → logprob: -6.91090726852417
    5. '
' → logprob: -10.285907745361328
    6. '    ' → logprob: -11.160907745361328
    7. '"""' → logprob: -11.410907745361328
    8. '  ' → logprob: -12.410907745361328
    9. ' ' → logprob: -12.410907745361328
    10. ' """
' → logprob: -12.910907745361328

Token 262: ' Creates' (ID: 28538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3901303708553314
    2. 'return' → logprob: -1.1401304006576538
    3. ' return' → logprob: -5.765130519866943
    4. '"""
' → logprob: -10.390130043029785
    5. '	return' → logprob: -10.640130043029785
    6. '
' → logprob: -11.015130043029785
    7. '  ' → logprob: -11.640130043029785
    8. '    ' → logprob: -11.890130043029785
    9. ':return' → logprob: -11.890130043029785
    10. '@return' → logprob: -12.390130043029785

Token 263: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07161049544811249
    2. ' a' → logprob: -2.696610450744629
    3. '[a' → logprob: -6.446610450744629
    4. '   ' → logprob: -9.821610450744629
    5. '(a' → logprob: -10.946610450744629
    6. '[[' → logprob: -11.821610450744629
    7. '	a' → logprob: -13.071610450744629
    8. 'def' → logprob: -13.696610450744629
    9. 'list' → logprob: -13.946610450744629
    10. 'A' → logprob: -14.321610450744629

Token 264: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.031816527247428894
    2. 'a' → logprob: -4.531816482543945
    3. '[a' → logprob: -4.531816482543945
    4. ' ' → logprob: -5.031816482543945
    5. '[[' → logprob: -5.906816482543945
    6. 'list' → logprob: -8.656816482543945
    7. '   ' → logprob: -8.781816482543945
    8. '(a' → logprob: -9.156816482543945
    9. ' a' → logprob: -10.031816482543945
    10. 'def' → logprob: -11.656816482543945

Token 265: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.743758760625497e-05
    2. 'a' → logprob: -9.750077247619629
    3. '[a' → logprob: -11.625077247619629
    4. ' ' → logprob: -12.125077247619629
    5. 'list' → logprob: -12.750077247619629
    6. '(a' → logprob: -13.375077247619629
    7. '2' → logprob: -17.000078201293945
    8. '[[' → logprob: -17.125078201293945
    9. '   ' → logprob: -17.250078201293945
    10. '5' → logprob: -17.500078201293945

Token 266: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07382519543170929
    2. 'def' → logprob: -3.0738251209259033
    3. '   ' → logprob: -4.573825359344482
    4. '[a' → logprob: -4.823825359344482
    5. '[' → logprob: -5.823825359344482
    6. ' [' → logprob: -6.823825359344482
    7. 'D' → logprob: -7.198825359344482
    8. '[
' → logprob: -7.573825359344482
    9. '-dimensional' → logprob: -7.823825359344482
    10. 'a' → logprob: -8.198824882507324

Token 267: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000943980470765382
    2. ' list' → logprob: -7.000944137573242
    3. 'a' → logprob: -11.250944137573242
    4. '(a' → logprob: -11.500944137573242
    5. '_list' → logprob: -12.000944137573242
    6. 'List' → logprob: -13.125944137573242
    7. '[a' → logprob: -14.500944137573242
    8. 'lst' → logprob: -15.000944137573242
    9. 'array' → logprob: -15.750944137573242
    10. 'l' → logprob: -16.125944137573242

Token 268: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001415618316968903
    2. '(' → logprob: -9.500141143798828
    3. ' (' → logprob: -9.625141143798828
    4. '(
' → logprob: -14.625141143798828
    5. 'a' → logprob: -16.875141143798828
    6. '((' → logprob: -17.125141143798828
    7. '   ' → logprob: -17.875141143798828
    8. '(A' → logprob: -18.000141143798828
    9. '```' → logprob: -18.500141143798828
    10. '[a' → logprob: -20.000141143798828

Token 269: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.703443770878948e-06
    2. ' a' → logprob: -12.125007629394531
    3. '(a' → logprob: -13.375007629394531
    4. '[a' → logprob: -15.125007629394531
    5. '   ' → logprob: -15.625007629394531
    6. ')' → logprob: -16.25000762939453
    7. ')a' → logprob: -17.12500762939453
    8. '
' → logprob: -17.62500762939453
    9. 'e' → logprob: -18.12500762939453
    10. '	a' → logprob: -18.12500762939453

Token 270: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.15840080380439758
    2. '(a' → logprob: -3.033400774002075
    3. '(' → logprob: -3.533400774002075
    4. ' (' → logprob: -4.033401012420654
    5. 'a' → logprob: -4.783401012420654
    6. ' a' → logprob: -4.783401012420654
    7. 'x' → logprob: -4.783401012420654
    8. ')' → logprob: -4.783401012420654
    9. ' list' → logprob: -4.908401012420654
    10. '   ' → logprob: -5.408401012420654

Token 271: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.474077969789505
    2. 'b' → logprob: -0.9740779399871826
    3. '   ' → logprob: -14.224078178405762
    4. ' ' → logprob: -15.849078178405762
    5. ' d' → logprob: -16.849077224731445
    6. 'd' → logprob: -17.099077224731445
    7. '  ' → logprob: -17.349077224731445
    8. '	b' → logprob: -17.724077224731445
    9. ' ' → logprob: -18.349077224731445
    10. '    ' → logprob: -18.849077224731445

Token 272: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004601015243679285
    2. ')' → logprob: -7.875460147857666
    3. ' ,' → logprob: -10.250459671020508
    4. ' x' → logprob: -11.250459671020508
    5. '   ' → logprob: -11.250459671020508
    6. 'a' → logprob: -12.125459671020508
    7. ',c' → logprob: -13.000459671020508
    8. 'c' → logprob: -13.000459671020508
    9. 'e' → logprob: -13.625459671020508
    10. 'x' → logprob: -13.750459671020508

Token 273: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931530237197876
    2. ' c' → logprob: -0.6931530237197876
    3. '   ' → logprob: -12.818153381347656
    4. 'e' → logprob: -13.693153381347656
    5. ' ' → logprob: -15.068153381347656
    6. ' e' → logprob: -15.068153381347656
    7. 'd' → logprob: -15.068153381347656
    8. ')' → logprob: -15.443153381347656
    9. '  ' → logprob: -15.443153381347656
    10. '	c' → logprob: -15.943153381347656

Token 274: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06431139260530472
    2. 'x' → logprob: -3.4393115043640137
    3. ',' → logprob: -3.8143115043640137
    4. ')' → logprob: -4.939311504364014
    5. ' ' → logprob: -7.564311504364014
    6. '   ' → logprob: -8.814311027526855
    7. 'e' → logprob: -9.439311027526855
    8. 'd' → logprob: -9.564311027526855
    9. '=' → logprob: -11.064311027526855
    10. '×' → logprob: -11.064311027526855

Token 275: ' d' (ID: 272)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3140803277492523
    2. 'd' → logprob: -1.3140803575515747
    3. ' e' → logprob: -7.189080238342285
    4. ' d' → logprob: -9.814080238342285
    5. '   ' → logprob: -11.814080238342285
    6. 'a' → logprob: -14.689080238342285
    7. '  ' → logprob: -15.314080238342285
    8. ')' → logprob: -15.814080238342285
    9. ' ' → logprob: -15.814080238342285
    10. 'f' → logprob: -16.1890811920166

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ' )' → logprob: -11.750019073486328
    3. 'e' → logprob: -12.000019073486328
    4. ')e' → logprob: -13.125019073486328
    5. ')
' → logprob: -13.625019073486328
    6. '   ' → logprob: -14.125019073486328
    7. '(a' → logprob: -14.500019073486328
    8. '(e' → logprob: -15.000019073486328
    9. 'a' → logprob: -15.375019073486328
    10. '):
' → logprob: -16.250019073486328

Token 277: ' initialized' (ID: 40319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.167075976729393
    2. ' initialized' → logprob: -2.4170758724212646
    3. '(a' → logprob: -3.2920758724212646
    4. 'initialized' → logprob: -4.042076110839844
    5. 'return' → logprob: -6.042076110839844
    6. ')' → logprob: -6.542076110839844
    7. '):
' → logprob: -7.167076110839844
    8. 'a' → logprob: -7.417076110839844
    9. 'def' → logprob: -7.417076110839844
    10. ':' → logprob: -7.417076110839844

Token 278: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.1602867692708969
    2. ' with' → logprob: -1.910286784172058
    3. '   ' → logprob: -10.285286903381348
    4. '[' → logprob: -11.785286903381348
    5. '[a' → logprob: -11.910286903381348
    6. '[[' → logprob: -11.910286903381348
    7. '_with' → logprob: -13.785286903381348
    8. ' [' → logprob: -13.785286903381348
    9. '	with' → logprob: -14.035286903381348
    10. '[c' → logprob: -14.160286903381348

Token 279: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5185169577598572
    2. ' value' → logprob: -1.018517017364502
    3. 'e' → logprob: -3.768517017364502
    4. ' e' → logprob: -3.893517017364502
    5. '[e' → logprob: -12.518516540527344
    6. ' [' → logprob: -13.893516540527344
    7. 'val' → logprob: -14.893516540527344
    8. 'Value' → logprob: -14.893516540527344
    9. '[value' → logprob: -15.018516540527344
    10. '_value' → logprob: -15.518516540527344

Token 280: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5759396553039551
    2. ' e' → logprob: -0.8259396553039551
    3. ' ' → logprob: -15.825939178466797
    4. '   ' → logprob: -16.950939178466797
    5. '	e' → logprob: -17.200939178466797
    6. '(e' → logprob: -17.325939178466797
    7. '[e' → logprob: -18.575939178466797
    8. '_e' → logprob: -18.700939178466797
    9. '`' → logprob: -19.325939178466797
    10. 'ｅ' → logprob: -19.325939178466797

Token 281: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3261696696281433
    2. '   ' → logprob: -1.576169729232788
    3. '.
' → logprob: -2.951169729232788
    4. ')' → logprob: -4.451169490814209
    5. '.

' → logprob: -6.201169490814209
    6. '):
' → logprob: -6.326169490814209
    7. ':
' → logprob: -6.701169490814209
    8. ').' → logprob: -6.826169490814209
    9. ':' → logprob: -7.576169490814209
    10. '):' → logprob: -7.576169490814209

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.574251918005757e-05
    2. 'return' → logprob: -9.875055313110352
    3. ' return' → logprob: -12.375055313110352
    4. '
' → logprob: -17.50005531311035
    5. '       ' → logprob: -17.75005531311035
    6. '    
' → logprob: -18.00005531311035
    7. '	return' → logprob: -18.12505531311035
    8. '```' → logprob: -18.25005531311035
    9. '    ' → logprob: -18.37505531311035
    10. '  ' → logprob: -18.37505531311035

Token 283: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4746467173099518
    2. 'return' → logprob: -0.9746466875076294
    3. ' return' → logprob: -7.47464656829834
    4. ':return' → logprob: -13.84964656829834
    5. '	return' → logprob: -14.72464656829834
    6. '
' → logprob: -15.09964656829834
    7. '  ' → logprob: -15.59964656829834
    8. ' ' → logprob: -15.97464656829834
    9. '"""
' → logprob: -16.599647521972656
    10. '```' → logprob: -16.724647521972656

Token 284: 'param' (ID: 1355)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0013739225687459111
    2. '   ' → logprob: -7.626373767852783
    3. ':return' → logprob: -8.001374244689941
    4. '"""
' → logprob: -8.126374244689941
    5. ' return' → logprob: -8.501374244689941
    6. 'a' → logprob: -10.876374244689941
    7. 'param' → logprob: -11.376374244689941
    8. '@return' → logprob: -11.751374244689941
    9. '"""' → logprob: -12.501374244689941
    10. ':param' → logprob: -12.751374244689941

Token 285: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245595395565033
    2. ' a' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.273244857788086
    4. '	a' → logprob: -17.398244857788086
    5. ' ' → logprob: -19.023244857788086
    6. '#' → logprob: -19.273244857788086
    7. 'int' → logprob: -19.398244857788086
    8. '(a' → logprob: -19.523244857788086
    9. '[a' → logprob: -19.773244857788086
    10. '_a' → logprob: -20.023244857788086

Token 286: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025394887779839337
    2. 'a' → logprob: -9.625253677368164
    3. ',' → logprob: -9.750253677368164
    4. '<|end|>' → logprob: -10.625253677368164
    5. 'def' → logprob: -10.750253677368164
    6. '):' → logprob: -11.000253677368164
    7. '<|end|>' → logprob: -11.375253677368164
    8. '   ' → logprob: -11.625253677368164
    9. '=' → logprob: -11.875253677368164
    10. ' :' → logprob: -12.000253677368164

Token 287: ' First' (ID: 8338)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.422909140586853
    2. 'Number' → logprob: -1.672909140586853
    3. ' int' → logprob: -1.922909140586853
    4. 'First' → logprob: -4.797909259796143
    5. ' Number' → logprob: -6.172909259796143
    6. 'a' → logprob: -8.297908782958984
    7. ' number' → logprob: -8.922908782958984
    8. ' First' → logprob: -9.422908782958984
    9. 'number' → logprob: -9.922908782958984
    10. 'Int' → logprob: -10.172908782958984

Token 288: ' dimension' (ID: 21959)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.29878589510917664
    2. ' dimension' → logprob: -1.423785924911499
    3. 'int' → logprob: -4.67378568649292
    4. 'def' → logprob: -6.42378568649292
    5. 'size' → logprob: -6.54878568649292
    6. 'token' → logprob: -6.54878568649292
    7. '<|end|>' → logprob: -6.54878568649292
    8. 'dim' → logprob: -7.79878568649292
    9. ' size' → logprob: -7.92378568649292
    10. 'parameter' → logprob: -8.548786163330078

Token 289: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.005325073841959238
    2. ' size' → logprob: -5.255324840545654
    3. '_size' → logprob: -10.755325317382812
    4. '(size' → logprob: -11.130325317382812
    5. '.size' → logprob: -11.380325317382812
    6. 's' → logprob: -11.505325317382812
    7. '<|end|>' → logprob: -11.880325317382812
    8. ':' → logprob: -12.005325317382812
    9. 'Size' → logprob: -12.755325317382812
    10. '   ' → logprob: -12.880325317382812

Token 290: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18020296096801758
    2. '.
' → logprob: -1.8052029609680176
    3. ',' → logprob: -8.30520248413086
    4. '<|end|>' → logprob: -9.43020248413086
    5. 'def' → logprob: -10.18020248413086
    6. ',
' → logprob: -10.43020248413086
    7. 'a' → logprob: -10.80520248413086
    8. '.

' → logprob: -10.93020248413086
    9. '   ' → logprob: -12.18020248413086
    10. '<|end|>' → logprob: -12.30520248413086

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.2617008400848135e-05
    2. '<|end|>' → logprob: -10.750032424926758
    3. 'def' → logprob: -12.125032424926758
    4. '  ' → logprob: -13.625032424926758
    5. '```' → logprob: -13.875032424926758
    6. '
' → logprob: -14.000032424926758
    7. '    ' → logprob: -14.625032424926758
    8. '"""
' → logprob: -14.625032424926758
    9. 'return' → logprob: -15.000032424926758
    10. ' ' → logprob: -15.125032424926758

Token 292: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010750787332654
    2. ':param' → logprob: -5.510750770568848
    3. 'b' → logprob: -5.885750770568848
    4. ':' (adapté à ' :') → logprob: -6.010750770568848
    5. ':return' → logprob: -8.010750770568848
    6. 'def' → logprob: -8.260750770568848
    7. ' :' → logprob: -8.635750770568848
    8. 'return' → logprob: -8.885750770568848
    9. '
' → logprob: -9.385750770568848
    10. '#' → logprob: -9.385750770568848

Token 293: 'param' (ID: 1355)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11043659597635269
    2. 'size' → logprob: -3.2354366779327393
    3. 'Number' → logprob: -3.4854366779327393
    4. ' int' → logprob: -4.23543643951416
    5. 'param' → logprob: -5.23543643951416
    6. '   ' → logprob: -5.48543643951416
    7. 'number' → logprob: -5.73543643951416
    8. ' size' → logprob: -6.48543643951416
    9. 'Second' → logprob: -6.61043643951416
    10. ' number' → logprob: -6.98543643951416

Token 294: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008618946187198162
    2. ' b' → logprob: -4.7586188316345215
    3. '   ' → logprob: -12.38361930847168
    4. 'int' → logprob: -15.38361930847168
    5. 'a' → logprob: -19.00861930847168
    6. '	b' → logprob: -19.38361930847168
    7. ' ' → logprob: -19.50861930847168
    8. '  ' → logprob: -20.00861930847168
    9. ' int' → logprob: -20.00861930847168
    10. 'size' → logprob: -20.75861930847168

Token 295: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.404745439183898e-05
    2. '   ' → logprob: -11.50003433227539
    3. ',' → logprob: -12.12503433227539
    4. 'def' → logprob: -12.50003433227539
    5. 'a' → logprob: -12.75003433227539
    6. '=' → logprob: -12.87503433227539
    7. '):' → logprob: -12.87503433227539
    8. ' :' → logprob: -13.12503433227539
    9. ':return' → logprob: -13.87503433227539
    10. ')' → logprob: -14.12503433227539

Token 296: ' Second' (ID: 16652)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47410252690315247
    2. 'c' → logprob: -0.9741024971008301
    3. 'int' → logprob: -11.974102973937988
    4. '   ' → logprob: -11.974102973937988
    5. 'First' → logprob: -11.974102973937988
    6. ' first' → logprob: -13.099102973937988
    7. ' int' → logprob: -13.349102973937988
    8. '	c' → logprob: -14.724102973937988
    9. ' First' → logprob: -14.849102973937988
    10. '  ' → logprob: -14.974102973937988

Token 297: ' dimension' (ID: 21959)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.6752806305885315
    2. ' dimension' → logprob: -1.5502805709838867
    3. 'size' → logprob: -1.9252805709838867
    4. ' size' → logprob: -3.4252805709838867
    5. 'token' → logprob: -3.6752805709838867
    6. '<|end|>' → logprob: -4.175280570983887
    7. ',' → logprob: -4.300280570983887
    8. 'space' → logprob: -5.050280570983887
    9. 'def' → logprob: -5.175280570983887
    10. 'parameter' → logprob: -5.550280570983887

Token 298: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.018169255927205086
    2. ' size' → logprob: -4.018169403076172
    3. '(size' → logprob: -11.643169403076172
    4. '_size' → logprob: -11.893169403076172
    5. 'Size' → logprob: -13.393169403076172
    6. '.size' → logprob: -14.018169403076172
    7. 's' → logprob: -14.643169403076172
    8. 'sizes' → logprob: -14.768169403076172
    9. 'a' → logprob: -16.143169403076172
    10. 'c' → logprob: -16.268169403076172

Token 299: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04045325517654419
    2. ',
' → logprob: -4.0404534339904785
    3. '   ' → logprob: -4.4154534339904785
    4. 'def' → logprob: -5.5404534339904785
    5. '.' → logprob: -5.6654534339904785
    6. '<|end|>' → logprob: -7.4154534339904785
    7. ':' → logprob: -7.9154534339904785
    8. '.
' → logprob: -8.04045295715332
    9. '```' → logprob: -8.41545295715332
    10. '#' → logprob: -8.79045295715332

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005625653429888189
    2. '#' → logprob: -8.87556266784668
    3. 'def' → logprob: -8.87556266784668
    4. '
' → logprob: -9.50056266784668
    5. '"""
' → logprob: -9.75056266784668
    6. '```' → logprob: -10.00056266784668
    7. 'from' → logprob: -10.50056266784668
    8. ':param' → logprob: -11.37556266784668
    9. ' ' → logprob: -11.62556266784668
    10. '  ' → logprob: -11.75056266784668

Token 301: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0312720350921154
    2. 'c' → logprob: -4.281271934509277
    3. 'def' → logprob: -4.281271934509277
    4. 'from' → logprob: -7.281271934509277
    5. 'return' → logprob: -7.281271934509277
    6. '#' → logprob: -7.781271934509277
    7. '
' → logprob: -8.031271934509277
    8. ':' (adapté à ' :') → logprob: -8.531271934509277
    9. 'for' → logprob: -8.656271934509277
    10. ' ' → logprob: -9.031271934509277

Token 302: 'param' (ID: 1355)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004534200299531221
    2. 'int' → logprob: -5.5045342445373535
    3. ' c' → logprob: -8.379533767700195
    4. '   ' → logprob: -8.629533767700195
    5. ' int' → logprob: -11.004533767700195
    6. ' ' → logprob: -11.504533767700195
    7. 'C' → logprob: -11.754533767700195
    8. 'Third' → logprob: -12.254533767700195
    9. '```' → logprob: -13.504533767700195
    10. '  ' → logprob: -13.629533767700195

Token 303: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47407954931259155
    2. 'c' → logprob: -0.9740795493125916
    3. '   ' → logprob: -13.224079132080078
    4. '	c' → logprob: -15.099079132080078
    5. ' ' → logprob: -15.849079132080078
    6. ')c' → logprob: -15.974079132080078
    7. 'def' → logprob: -17.099079132080078
    8. '_c' → logprob: -17.099079132080078
    9. ')' → logprob: -17.349079132080078
    10. ' code' → logprob: -17.474079132080078

Token 304: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036442498094402254
    2. ',' → logprob: -8.375364303588867
    3. '<|end|>' → logprob: -10.250364303588867
    4. 'def' → logprob: -10.500364303588867
    5. '   ' → logprob: -10.875364303588867
    6. ' :' → logprob: -11.000364303588867
    7. '=' → logprob: -11.375364303588867
    8. '<|end|>' → logprob: -12.000364303588867
    9. '):' → logprob: -12.625364303588867
    10. ':
' → logprob: -13.250364303588867

Token 305: ' Third' (ID: 35108)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08898309618234634
    2. 'd' → logprob: -2.5889830589294434
    3. ' int' → logprob: -5.088983058929443
    4. 'int' → logprob: -5.588983058929443
    5. '   ' → logprob: -9.213983535766602
    6. 'def' → logprob: -10.713983535766602
    7. ' c' → logprob: -12.088983535766602
    8. ' def' → logprob: -12.588983535766602
    9. 'c' → logprob: -12.838983535766602
    10. ')' → logprob: -14.463983535766602

Token 306: ' dimension' (ID: 21959)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -1.286004662513733
    2. ' dimension' → logprob: -1.286004662513733
    3. 'size' → logprob: -1.411004662513733
    4. 'dimension' → logprob: -1.661004662513733
    5. ' space' → logprob: -5.536004543304443
    6. 'space' → logprob: -5.661004543304443
    7. '<|end|>' → logprob: -6.036004543304443
    8. 'token' → logprob: -7.411004543304443
    9. '_size' → logprob: -8.161005020141602
    10. ':' → logprob: -8.161005020141602

Token 307: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3137042224407196
    2. ' size' → logprob: -1.313704252243042
    3. '_size' → logprob: -7.813704013824463
    4. '.size' → logprob: -11.313704490661621
    5. '(size' → logprob: -11.313704490661621
    6. '=size' → logprob: -12.563704490661621
    7. ',size' → logprob: -13.188704490661621
    8. 'Size' → logprob: -13.313704490661621
    9. '   ' → logprob: -13.563704490661621
    10. '	size' → logprob: -13.938704490661621

Token 308: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04999742656946182
    2. '   ' → logprob: -3.299997329711914
    3. ',
' → logprob: -4.924997329711914
    4. 'def' → logprob: -6.549997329711914
    5. ':' → logprob: -7.174997329711914
    6. ' ,' → logprob: -7.424997329711914
    7. '<|end|>' → logprob: -7.799997329711914
    8. '
' → logprob: -8.174997329711914
    9. ',d' → logprob: -8.174997329711914
    10. 'd' → logprob: -8.549997329711914

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000558512459974736
    2. 'def' → logprob: -8.625558853149414
    3. '#' → logprob: -8.750558853149414
    4. '<|end|>' → logprob: -9.500558853149414
    5. '<|end|>' → logprob: -9.500558853149414
    6. '  ' → logprob: -10.875558853149414
    7. '```' → logprob: -11.250558853149414
    8. ' ' → logprob: -11.625558853149414
    9. '    ' → logprob: -12.125558853149414
    10. '
' → logprob: -12.125558853149414

Token 310: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0640270933508873
    2. 'd' → logprob: -2.9390270709991455
    3. 'def' → logprob: -5.439027309417725
    4. '#' → logprob: -6.064027309417725
    5. ' d' → logprob: -6.564027309417725
    6. 'return' → logprob: -7.814027309417725
    7. '
' → logprob: -8.439026832580566
    8. ' return' → logprob: -9.189026832580566
    9. ':' (adapté à ' :') → logprob: -9.314026832580566
    10. '    ' → logprob: -9.939026832580566

Token 311: 'param' (ID: 1355)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008074654266238213
    2. ' d' → logprob: -4.883074760437012
    3. '   ' → logprob: -8.258074760437012
    4. 'int' → logprob: -8.508074760437012
    5. 'def' → logprob: -12.383074760437012
    6. ' int' → logprob: -13.758074760437012
    7. '  ' → logprob: -14.633074760437012
    8. '```' → logprob: -14.633074760437012
    9. '	d' → logprob: -15.133074760437012
    10. ')d' → logprob: -15.383074760437012

Token 312: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6932789087295532
    2. ' d' → logprob: -0.6932789087295532
    3. '   ' → logprob: -8.943279266357422
    4. 'def' → logprob: -14.318279266357422
    5. '	d' → logprob: -15.443279266357422
    6. '_d' → logprob: -15.943279266357422
    7. '  ' → logprob: -16.443279266357422
    8. '#' → logprob: -16.693279266357422
    9. ' ' → logprob: -17.068279266357422
    10. '
' → logprob: -18.318279266357422

Token 313: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.511406809295295e-06
    2. ' :' → logprob: -12.750006675720215
    3. 'def' → logprob: -13.500006675720215
    4. '   ' → logprob: -14.000006675720215
    5. ':return' → logprob: -15.375006675720215
    6. '):' → logprob: -15.500006675720215
    7. '=' → logprob: -15.625006675720215
    8. ':param' → logprob: -15.750006675720215
    9. ':
' → logprob: -16.0000057220459
    10. ':def' → logprob: -16.3750057220459

Token 314: ' Fourth' (ID: 69552)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6283578276634216
    2. ' e' → logprob: -1.3783578872680664
    3. ' fourth' → logprob: -2.1283578872680664
    4. 'Fourth' → logprob: -2.8783578872680664
    5. ' Fourth' → logprob: -4.128357887268066
    6. '   ' → logprob: -4.253357887268066
    7. 'd' → logprob: -5.128357887268066
    8. ' d' → logprob: -6.378357887268066
    9. ' ' → logprob: -8.253357887268066
    10. 'int' → logprob: -8.628357887268066

Token 315: ' dimension' (ID: 21959)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.08714433759450912
    2. ' size' → logprob: -2.962144374847412
    3. ':' → logprob: -4.212144374847412
    4. 'dimension' → logprob: -4.587144374847412
    5. '_size' → logprob: -6.837144374847412
    6. 'space' → logprob: -6.962144374847412
    7. 'd' → logprob: -7.087144374847412
    8. '<|end|>' → logprob: -7.212144374847412
    9. ':size' → logprob: -7.587144374847412
    10. ' dimension' → logprob: -7.712144374847412

Token 316: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00854578334838152
    2. ' size' → logprob: -4.883545875549316
    3. '_size' → logprob: -7.258545875549316
    4. '(size' → logprob: -9.258545875549316
    5. 's' → logprob: -9.883545875549316
    6. ',' → logprob: -10.258545875549316
    7. 'Size' → logprob: -11.258545875549316
    8. ':' → logprob: -11.508545875549316
    9. 'space' → logprob: -12.258545875549316
    10. ',size' → logprob: -12.508545875549316

Token 317: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04327811673283577
    2. '   ' → logprob: -4.043278217315674
    3. ',
' → logprob: -4.043278217315674
    4. ':' → logprob: -5.918278217315674
    5. '<|end|>' → logprob: -6.418278217315674
    6. 'def' → logprob: -6.668278217315674
    7. ':
' → logprob: -7.668278217315674
    8. '<|end|>' → logprob: -7.918278217315674
    9. '):
' → logprob: -8.543277740478516
    10. '#' → logprob: -8.793277740478516

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019710339256562293
    2. '#' → logprob: -9.500197410583496
    3. 'def' → logprob: -10.000197410583496
    4. '<|end|>' → logprob: -10.625197410583496
    5. '  ' → logprob: -11.125197410583496
    6. ' ' → logprob: -11.625197410583496
    7. '<|end|>' → logprob: -11.750197410583496
    8. '"""
' → logprob: -12.000197410583496
    9. ':' → logprob: -12.125197410583496
    10. '    ' → logprob: -13.125197410583496

Token 319: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003225837368518114
    2. '#' → logprob: -6.753225803375244
    3. ':return' → logprob: -7.253225803375244
    4. 'return' → logprob: -7.628225803375244
    5. '"""
' → logprob: -7.878225803375244
    6. 'def' → logprob: -8.503226280212402
    7. '
' → logprob: -8.878226280212402
    8. ':' (adapté à ' :') → logprob: -10.753226280212402
    9. '@return' → logprob: -10.878226280212402
    10. '@param' → logprob: -11.253226280212402

Token 320: 'param' (ID: 1355)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3039114773273468
    2. '   ' → logprob: -1.4289114475250244
    3. ' e' → logprob: -4.9289116859436035
    4. '       ' → logprob: -5.0539116859436035
    5. 'int' → logprob: -5.0539116859436035
    6. 'f' → logprob: -7.0539116859436035
    7. 'd' → logprob: -7.9289116859436035
    8. ')' → logprob: -8.303911209106445
    9. '    ' → logprob: -8.428911209106445
    10. '     ' → logprob: -8.803911209106445

Token 321: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25194039940834045
    2. ' e' → logprob: -1.501940369606018
    3. '   ' → logprob: -11.626940727233887
    4. ' ' → logprob: -13.126940727233887
    5. '	e' → logprob: -14.751940727233887
    6. '       ' → logprob: -17.37693977355957
    7. '  ' → logprob: -17.75193977355957
    8. '_e' → logprob: -18.00193977355957
    9. '    ' → logprob: -18.50193977355957
    10. '     ' → logprob: -18.50193977355957

Token 322: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04619646444916725
    2. '):' → logprob: -3.171196460723877
    3. ')' → logprob: -5.921196460723877
    4. '):
' → logprob: -8.296196937561035
    5. '   ' → logprob: -9.171196937561035
    6. ':
' → logprob: -9.171196937561035
    7. ' :' → logprob: -10.671196937561035
    8. ':return' → logprob: -11.546196937561035
    9. '":' → logprob: -11.671196937561035
    10. '):

' → logprob: -13.546196937561035

Token 323: ' Initial' (ID: 9209)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7518462538719177
    2. ' e' → logprob: -0.7518462538719177
    3. 'Initial' → logprob: -3.5018463134765625
    4. ' Initial' → logprob: -4.8768463134765625
    5. ' return' → logprob: -5.1268463134765625
    6. ' initial' → logprob: -5.6268463134765625
    7. '   ' → logprob: -5.7518463134765625
    8. 'return' → logprob: -6.0018463134765625
    9. ' ' → logprob: -6.1268463134765625
    10. ' value' → logprob: -7.5018463134765625

Token 324: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.1269536167383194
    2. 'value' → logprob: -2.126953601837158
    3. '_value' → logprob: -10.876954078674316
    4. ' e' → logprob: -13.251954078674316
    5. '   ' → logprob: -13.876954078674316
    6. '"value' → logprob: -14.126954078674316
    7. ' =' → logprob: -14.251954078674316
    8. ')' → logprob: -14.626954078674316
    9. 'e' → logprob: -14.751954078674316
    10. '=' → logprob: -15.251954078674316

Token 325: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5526923537254333
    2. ' for' → logprob: -0.9276923537254333
    3. '   ' → logprob: -4.052692413330078
    4. ')' → logprob: -5.052692413330078
    5. '):
' → logprob: -5.677692413330078
    6. ':' → logprob: -7.802692413330078
    7. '<|end|>' → logprob: -7.802692413330078
    8. '):' → logprob: -7.927692413330078
    9. '
' → logprob: -8.802692413330078
    10. '=' → logprob: -9.177692413330078

Token 326: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.021833769977092743
    2. ' each' → logprob: -4.021833896636963
    3. 'e' → logprob: -5.771833896636963
    4. 'Each' → logprob: -7.521833896636963
    5. ' e' → logprob: -11.646833419799805
    6. ' Each' → logprob: -12.021833419799805
    7. 'value' → logprob: -12.521833419799805
    8. 'element' → logprob: -13.896833419799805
    9. 'the' → logprob: -14.646833419799805
    10. '_each' → logprob: -14.646833419799805

Token 327: ' element' (ID: 3577)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3275808095932007
    2. 'element' → logprob: -1.3275808095932007
    3. ' element' → logprob: -5.07758092880249
    4. ' value' → logprob: -5.07758092880249
    5. 'e' → logprob: -6.45258092880249
    6. 'return' → logprob: -10.077580451965332
    7. '
' → logprob: -10.327580451965332
    8. '   ' → logprob: -10.702580451965332
    9. ' e' → logprob: -10.952580451965332
    10. 'elem' → logprob: -11.077580451965332

Token 328: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.017137050628662
    2. '   ' → logprob: -1.142137050628662
    3. '):
' → logprob: -1.267137050628662
    4. ':' → logprob: -3.392137050628662
    5. ':
' → logprob: -6.142137050628662
    6. ')' → logprob: -6.892137050628662
    7. '"""
' → logprob: -8.26713752746582
    8. '.' → logprob: -8.51713752746582
    9. '":' → logprob: -9.26713752746582
    10. '"""' → logprob: -9.64213752746582

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0445127372804563e-05
    2. ' return' → logprob: -12.12501049041748
    3. 'return' → logprob: -13.00001049041748
    4. '"""
' → logprob: -13.75001049041748
    5. '"""' → logprob: -14.75001049041748
    6. ')' → logprob: -14.87501049041748
    7. ':return' → logprob: -15.00001049041748
    8. ':' → logprob: -15.50001049041748
    9. '  ' → logprob: -15.62501049041748
    10. '    ' → logprob: -16.250009536743164

Token 330: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04483971744775772
    2. '"""
' → logprob: -3.29483962059021
    3. 'return' → logprob: -5.669839859008789
    4. '"""' → logprob: -6.294839859008789
    5. ')' → logprob: -6.919839859008789
    6. ' return' → logprob: -8.794839859008789
    7. '):
' → logprob: -8.919839859008789
    8. ')
' → logprob: -9.419839859008789
    9. ':return' → logprob: -10.794839859008789
    10. ' """
' → logprob: -10.919839859008789

Token 331: 'return' (ID: 1034)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.1863967776298523
    2. 'return' → logprob: -2.186396837234497
    3. '   ' → logprob: -3.436396837234497
    4. 'e' → logprob: -4.061396598815918
    5. ')
' → logprob: -5.436396598815918
    6. ')' → logprob: -6.686396598815918
    7. '"""' → logprob: -6.936396598815918
    8. ' """
' → logprob: -7.686396598815918
    9. ' return' → logprob: -7.686396598815918
    10. ' ' → logprob: -8.061396598815918

Token 332: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10048086941242218
    2. ':' → logprob: -2.350480794906616
    3. '    ' → logprob: -9.350481033325195
    4. '  ' → logprob: -10.350481033325195
    5. ' list' → logprob: -10.600481033325195
    6. '[' → logprob: -10.725481033325195
    7. ' return' → logprob: -10.975481033325195
    8. ':
' → logprob: -11.100481033325195
    9. '       ' → logprob: -11.225481033325195
    10. '[[' → logprob: -11.475481033325195

Token 333: ' ' (ID: 220)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.006748289801180363
    2. ' [[' → logprob: -5.006748199462891
    3. ' [[[' → logprob: -11.00674819946289
    4. '   ' → logprob: -11.13174819946289
    5. '[a' → logprob: -14.13174819946289
    6. '[' → logprob: -15.25674819946289
    7. ' list' → logprob: -15.75674819946289
    8. 'list' → logprob: -16.00674819946289
    9. ' ' → logprob: -16.13174819946289
    10. ' [' → logprob: -16.25674819946289

Token 334: '4' (ID: 19)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5760440230369568
    2. '4' → logprob: -0.8260440230369568
    3. ' [[' → logprob: -9.826044082641602
    4. ' ' → logprob: -10.451044082641602
    5. 'list' → logprob: -11.326044082641602
    6. '[
' → logprob: -13.451044082641602
    7. '[' → logprob: -13.451044082641602
    8. 'return' → logprob: -13.576044082641602
    9. '[list' → logprob: -13.951044082641602
    10. 'List' → logprob: -14.076044082641602

Token 335: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08957574516534805
    2. 'D' → logprob: -3.08957576751709
    3. '   ' → logprob: -4.08957576751709
    4. '[' → logprob: -4.83957576751709
    5. ' [' → logprob: -5.71457576751709
    6. '[[' → logprob: -5.83957576751709
    7. ' list' → logprob: -6.46457576751709
    8. '[
' → logprob: -6.83957576751709
    9. 'def' → logprob: -7.08957576751709
    10. '[list' → logprob: -7.21457576751709

Token 336: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3132815659046173
    2. 'list' → logprob: -1.313281536102295
    3. '_list' → logprob: -10.938282012939453
    4. '[' → logprob: -14.563282012939453
    5. ' [' → logprob: -14.688282012939453
    6. '[a' → logprob: -14.813282012939453
    7. '[list' → logprob: -15.188282012939453
    8. 'a' → logprob: -15.688282012939453
    9. '[c' → logprob: -16.188282012939453
    10. '[
' → logprob: -16.563282012939453

Token 337: ' filled' (ID: 14255)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.001956467516720295
    2. '   ' → logprob: -6.751956462860107
    3. 'of' → logprob: -7.251956462860107
    4. 'a' → logprob: -11.001956939697266
    5. ' a' → logprob: -11.001956939697266
    6. '[[' → logprob: -11.501956939697266
    7. '[' → logprob: -11.876956939697266
    8. '    ' → logprob: -11.876956939697266
    9. '[a' → logprob: -12.126956939697266
    10. 'return' → logprob: -12.251956939697266

Token 338: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2018565982580185
    2. 'with' → logprob: -1.7018566131591797
    3. '[[' → logprob: -7.82685661315918
    4. ' [[' → logprob: -10.57685661315918
    5. '=[[' → logprob: -11.32685661315918
    6. '[' → logprob: -13.45185661315918
    7. '<|end|>' → logprob: -13.45185661315918
    8. '	with' → logprob: -14.20185661315918
    9. ' [[[' → logprob: -14.20185661315918
    10. '([[' → logprob: -14.95185661315918

Token 339: ' value' (ID: 1432)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20828422904014587
    2. ' e' → logprob: -1.9582842588424683
    3. ' value' → logprob: -3.7082841396331787
    4. 'value' → logprob: -3.8332841396331787
    5. '[e' → logprob: -7.833284378051758
    6. '[[' → logprob: -8.083284378051758
    7. ' [[' → logprob: -10.833284378051758
    8. ' [' → logprob: -11.208284378051758
    9. '[' → logprob: -12.458284378051758
    10. '[
' → logprob: -12.583284378051758

Token 340: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4287203550338745
    2. 'e' → logprob: -1.0537203550338745
    3. '(e' → logprob: -12.053720474243164
    4. '   ' → logprob: -12.053720474243164
    5. ' ' → logprob: -13.428720474243164
    6. '(' → logprob: -13.553720474243164
    7. ' (' → logprob: -13.678720474243164
    8. '```' → logprob: -14.053720474243164
    9. '[e' → logprob: -14.428720474243164
    10. '`' → logprob: -14.553720474243164

Token 341: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4857948124408722
    2. '.
' → logprob: -0.9857947826385498
    3. '   ' → logprob: -4.735795021057129
    4. '[[' → logprob: -6.110795021057129
    5. '"""
' → logprob: -9.235795021057129
    6. ']' → logprob: -9.360795021057129
    7. '."""
' → logprob: -9.360795021057129
    8. ')' → logprob: -9.735795021057129
    9. ']
' → logprob: -9.860795021057129
    10. '.

' → logprob: -9.985795021057129

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.3596853831550106e-05
    2. '"""
' → logprob: -10.750053405761719
    3. 'return' → logprob: -11.375053405761719
    4. ' return' → logprob: -12.125053405761719
    5. '"""' → logprob: -12.250053405761719
    6. ')' → logprob: -12.375053405761719
    7. ']' → logprob: -12.875053405761719
    8. ')
' → logprob: -13.625053405761719
    9. ']
' → logprob: -14.000053405761719
    10. '    
' → logprob: -14.500053405761719

Token 343: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010013706050813198
    2. 'return' → logprob: -7.126001358032227
    3. ' return' → logprob: -8.876001358032227
    4. ']' → logprob: -11.126001358032227
    5. ')' → logprob: -11.376001358032227
    6. '"""
' (adapté à ' """
') → logprob: -11.501001358032227
    7. '
' → logprob: -12.376001358032227
    8. '  ' → logprob: -12.626001358032227
    9. '"""' → logprob: -12.626001358032227
    10. '    ' → logprob: -13.376001358032227

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.004696090007201e-05
    2. 'return' → logprob: -10.000069618225098
    3. ' return' → logprob: -10.625069618225098
    4. '	return' → logprob: -16.625070571899414
    5. '  ' → logprob: -17.125070571899414
    6. '
' → logprob: -17.625070571899414
    7. '    
' → logprob: -17.875070571899414
    8. '       ' → logprob: -18.125070571899414
    9. '   ' → logprob: -18.125070571899414
    10. '    ' → logprob: -18.250070571899414

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033357522916048765
    2. '   ' → logprob: -5.753335952758789
    3. ' return' → logprob: -8.753335952758789
    4. ' ' → logprob: -16.87833595275879
    5. '	return' → logprob: -17.50333595275879
    6. '
' → logprob: -17.75333595275879
    7. 'eturn' → logprob: -18.00333595275879
    8. '    
' → logprob: -18.87833595275879
    9. '  ' → logprob: -19.37833595275879
    10. 'ret' → logprob: -20.00333595275879

Token 346: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.250005722045898
    3. '[
' → logprob: -14.250005722045898
    4. ' [[' → logprob: -15.125005722045898
    5. '   ' → logprob: -18.1250057220459
    6. 'list' → logprob: -18.2500057220459
    7. '####' → logprob: -18.7500057220459
    8. '[['' → logprob: -19.2500057220459
    9. '((((' → logprob: -19.5000057220459
    10. '`' → logprob: -19.7500057220459

Token 347: '[[' (ID: 26245)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.10153955221176147
    2. '[[' → logprob: -2.3515396118164062
    3. '[' → logprob: -7.351539611816406
    4. '[d' → logprob: -7.601539611816406
    5. '[c' → logprob: -9.351539611816406
    6. '[list' → logprob: -9.476539611816406
    7. ' [' → logprob: -11.226539611816406
    8. 'list' → logprob: -12.101539611816406
    9. 'e' → logprob: -12.476539611816406
    10. '[E' → logprob: -14.101539611816406

Token 348: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -9.13388703338569e-06
    2. ' e' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.750009536743164
    4. '	e' → logprob: -18.125009536743164
    5. '
' → logprob: -19.375009536743164
    6. '       ' → logprob: -19.625009536743164
    7. '[e' → logprob: -19.875009536743164
    8. 'ｅ' → logprob: -20.000009536743164
    9. ' ' → logprob: -20.125009536743164
    10. '  ' → logprob: -20.500009536743164

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.4060561776859686e-05
    2. ']*' → logprob: -10.125043869018555
    3. ' ]' → logprob: -12.750043869018555
    4. '*' → logprob: -13.875043869018555
    5. ' *' → logprob: -17.625043869018555
    6. ']
' → logprob: -17.750043869018555
    7. '   ' → logprob: -18.000043869018555
    8. '']' → logprob: -18.000043869018555
    9. ')' → logprob: -18.125043869018555
    10. ' ' → logprob: -19.375043869018555

Token 350: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11597265303134918
    2. ' *' → logprob: -2.3659727573394775
    3. ']' → logprob: -4.240972518920898
    4. ']*' → logprob: -6.740972518920898
    5. ')' → logprob: -10.240972518920898
    6. ' ]' → logprob: -11.365972518920898
    7. '   ' → logprob: -11.865972518920898
    8. ' ' → logprob: -12.490972518920898
    9. '*d' → logprob: -12.865972518920898
    10. ')*' → logprob: -13.115972518920898

Token 351: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16031266748905182
    2. 'e' → logprob: -1.9103126525878906
    3. ' d' → logprob: -9.66031265258789
    4. ' e' → logprob: -10.66031265258789
    5. '   ' → logprob: -14.03531265258789
    6. ' ' → logprob: -15.28531265258789
    7. '  ' → logprob: -16.28531265258789
    8. '    ' → logprob: -17.03531265258789
    9. '	d' → logprob: -17.16031265258789
    10. '	e' → logprob: -17.53531265258789

Token 352: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16022808849811554
    2. ' for' → logprob: -1.9102281332015991
    3. '	for' → logprob: -12.66022777557373
    4. ' ' → logprob: -15.16022777557373
    5. '   ' → logprob: -15.78522777557373
    6. '<|end|>' → logprob: -15.91022777557373
    7. ']' → logprob: -16.160228729248047
    8. ')' → logprob: -16.160228729248047
    9. '    ' → logprob: -17.910228729248047
    10. '[' → logprob: -17.910228729248047

Token 353: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000340945553034544
    2. ' _' → logprob: -8.000341415405273
    3. '_c' → logprob: -12.500341415405273
    4. '_in' → logprob: -13.875341415405273
    5. ' in' → logprob: -14.375341415405273
    6. '_range' → logprob: -15.375341415405273
    7. '_=' → logprob: -17.875341415405273
    8. '_j' → logprob: -18.000341415405273
    9. '_x' → logprob: -19.125341415405273
    10. '_s' → logprob: -19.125341415405273

Token 354: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759438276290894
    2. ' in' → logprob: -0.8259438276290894
    3. ' ' → logprob: -13.325943946838379
    4. 'range' → logprob: -13.325943946838379
    5. '_' → logprob: -14.700943946838379
    6. '  ' → logprob: -15.950943946838379
    7. '   ' → logprob: -16.200942993164062
    8. 'In' → logprob: -16.200942993164062
    9. 'i' → logprob: -16.325942993164062
    10. '...' → logprob: -16.575942993164062

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031865055207163095
    2. ' range' → logprob: -5.7531867027282715
    3. 'in' → logprob: -12.003186225891113
    4. ' in' → logprob: -13.628186225891113
    5. '_' → logprob: -14.378186225891113
    6. 'c' → logprob: -14.628186225891113
    7. '(range' → logprob: -15.753186225891113
    8. ' ' → logprob: -16.25318717956543
    9. '	range' → logprob: -16.37818717956543
    10. 'ran' → logprob: -16.62818717956543

Token 356: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005303958430886269
    2. '(c' → logprob: -5.255303859710693
    3. ' c' → logprob: -9.880304336547852
    4. ')c' → logprob: -11.505304336547852
    5. '	c' → logprob: -11.755304336547852
    6. '   ' → logprob: -14.505304336547852
    7. '(' → logprob: -15.630304336547852
    8. '.c' → logprob: -15.755304336547852
    9. '_c' → logprob: -15.880304336547852
    10. ')' → logprob: -17.50530433654785

Token 357: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003398726985324174
    2. ')]' → logprob: -8.00033950805664
    3. ' ]' → logprob: -12.50033950805664
    4. ']
' → logprob: -14.37533950805664
    5. ']]' → logprob: -15.75033950805664
    6. ')' → logprob: -16.87533950805664
    7. '   ' → logprob: -18.87533950805664
    8. '}]' → logprob: -19.25033950805664
    9. '()]' → logprob: -19.37533950805664
    10. ']

' → logprob: -20.37533950805664

Token 358: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31326499581336975
    2. 'for' → logprob: -1.3132649660110474
    3. ']' → logprob: -13.063264846801758
    4. '	for' → logprob: -14.188264846801758
    5. '   ' → logprob: -14.938264846801758
    6. ' ' → logprob: -16.313264846801758
    7. '    ' → logprob: -17.438264846801758
    8. ')' → logprob: -17.563264846801758
    9. '  ' → logprob: -19.188264846801758
    10. ' ]' → logprob: -19.188264846801758

Token 359: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2014421820640564
    2. ' _' → logprob: -1.7014422416687012
    3. ' in' → logprob: -10.576441764831543
    4. ' range' → logprob: -12.826441764831543
    5. 'range' → logprob: -15.576441764831543
    6. '_range' → logprob: -15.826441764831543
    7. ' _
' → logprob: -16.57644271850586
    8. ' ' → logprob: -16.57644271850586
    9. 'in' → logprob: -16.82644271850586
    10. '_in' → logprob: -16.82644271850586

Token 360: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.3451433409936726e-05
    2. 'in' → logprob: -10.875033378601074
    3. ' range' → logprob: -11.250033378601074
    4. '_' → logprob: -13.625033378601074
    5. '(range' → logprob: -16.00003433227539
    6. '_range' → logprob: -16.62503433227539
    7. ' in' → logprob: -17.25003433227539
    8. '   ' → logprob: -18.25003433227539
    9. 'r' → logprob: -19.00003433227539
    10. 'ran' → logprob: -19.25003433227539

Token 361: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '_' → logprob: -15.630233764648438
    4. '(range' → logprob: -17.130233764648438
    5. '_range' → logprob: -17.505233764648438
    6. '	range' → logprob: -20.130233764648438
    7. 'rang' → logprob: -20.630233764648438
    8. ' ' → logprob: -20.755233764648438
    9. 'r' → logprob: -20.755233764648438
    10. 'ran' → logprob: -21.005233764648438

Token 362: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.2519783675670624
    2. 'b' → logprob: -1.5019783973693848
    3. '	b' → logprob: -10.001977920532227
    4. ' b' → logprob: -13.376977920532227
    5. '   ' → logprob: -13.376977920532227
    6. '(' → logprob: -14.876977920532227
    7. ' (' → logprob: -15.626977920532227
    8. '[b' → logprob: -16.126977920532227
    9. ')b' → logprob: -16.626977920532227
    10. '_b' → logprob: -16.876977920532227

Token 363: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009269453585147858
    2. ')]' → logprob: -7.000926971435547
    3. ' ]' → logprob: -11.125926971435547
    4. ')' → logprob: -14.250926971435547
    5. ']
' → logprob: -16.375926971435547
    6. '   ' → logprob: -17.125926971435547
    7. ']]' → logprob: -17.250926971435547
    8. '()]' → logprob: -17.750926971435547
    9. '_]' → logprob: -19.875926971435547
    10. '}]' → logprob: -20.125926971435547

Token 364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47407761216163635
    2. ' for' → logprob: -0.974077582359314
    3. '	for' → logprob: -14.474077224731445
    4. '   ' → logprob: -15.974077224731445
    5. ']' → logprob: -18.599077224731445
    6. '[' → logprob: -19.349077224731445
    7. ' ' → logprob: -19.724077224731445
    8. '    ' → logprob: -19.724077224731445
    9. ')' → logprob: -19.849077224731445
    10. '_for' → logprob: -20.099077224731445

Token 365: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.046595461666584015
    2. ' _' → logprob: -3.296595573425293
    3. ' range' → logprob: -4.796595573425293
    4. 'range' → logprob: -8.296595573425293
    5. '_range' → logprob: -11.546595573425293
    6. ' in' → logprob: -14.421595573425293
    7. '(range' → logprob: -16.921594619750977
    8. '_in' → logprob: -17.171594619750977
    9. ' _
' → logprob: -17.171594619750977
    10. '_=' → logprob: -17.671594619750977

Token 366: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01417080033570528
    2. ' range' → logprob: -4.2641706466674805
    3. ' in' → logprob: -13.01417064666748
    4. '_range' → logprob: -13.13917064666748
    5. 'in' → logprob: -13.51417064666748
    6. '(range' → logprob: -13.76417064666748
    7. '	range' → logprob: -15.13917064666748
    8. 'ange' → logprob: -15.38917064666748
    9. '_' → logprob: -15.88917064666748
    10. ' xrange' → logprob: -17.514171600341797

Token 367: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751179739832878
    2. ' range' → logprob: -3.5297510623931885
    3. '_range' → logprob: -14.90475082397461
    4. '(range' → logprob: -15.02975082397461
    5. '	range' → logprob: -17.52975082397461
    6. '_' → logprob: -17.65475082397461
    7. ' xrange' → logprob: -18.65475082397461
    8. 'a' → logprob: -19.02975082397461
    9. 'r' → logprob: -19.52975082397461
    10. 'rang' → logprob: -19.77975082397461

Token 368: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2910080850124359
    2. 'range' → logprob: -1.5410081148147583
    3. 'a' → logprob: -3.2910079956054688
    4. ' range' → logprob: -6.916007995605469
    5. '(range' → logprob: -9.166007995605469
    6. ' a' → logprob: -11.791007995605469
    7. '[a' → logprob: -12.666007995605469
    8. '_range' → logprob: -14.416007995605469
    9. ' (' → logprob: -14.916007995605469
    10. '(' → logprob: -15.166007995605469

Token 369: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2519737482070923
    2. ']' → logprob: -1.5019737482070923
    3. ')' → logprob: -10.126974105834961
    4. '])' → logprob: -13.251974105834961
    5. '()]' → logprob: -13.376974105834961
    6. ']]' → logprob: -15.251974105834961
    7. ' ]' → logprob: -15.376974105834961
    8. ']
' → logprob: -15.501974105834961
    9. '}]' → logprob: -15.751974105834961
    10. ']}' → logprob: -15.751974105834961

Token 370: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4360961616039276
    2. '(' → logprob: -1.68609619140625
    3. 'def' → logprob: -2.31109619140625
    4. '#' → logprob: -3.56109619140625
    5. ':' → logprob: -3.56109619140625
    6. 'a' → logprob: -4.81109619140625
    7. '<|end|>' → logprob: -7.31109619140625
    8. 'd' → logprob: -7.43609619140625
    9. ']' → logprob: -7.81109619140625
    10. '```' → logprob: -7.93609619140625

Token 371: ' ceil' (ID: 35964)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.43404197692871094
    2. 'main' → logprob: -1.059041976928711
    3. ' list' → logprob: -6.809041976928711
    4. 'list' → logprob: -7.684041976928711
    5. ' factorial' → logprob: -7.684041976928711
    6. 'solve' → logprob: -7.684041976928711
    7. ' solve' → logprob: -7.809041976928711
    8. 'factor' → logprob: -8.309041976928711
    9. 'max' → logprob: -8.434041976928711
    10. ' max' → logprob: -8.559041976928711

Token 372: '(x' (ID: 4061)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.4276930093765259
    2. 'div' → logprob: -1.3026930093765259
    3. '(' → logprob: -3.5526928901672363
    4. '(x' → logprob: -3.6776928901672363
    5. '(a' → logprob: -4.177692890167236
    6. '(n' → logprob: -5.552692890167236
    7. '():' → logprob: -6.427692890167236
    8. '(div' → logprob: -7.927692890167236
    9. '(num' → logprob: -8.052693367004395
    10. 'Div' → logprob: -8.052693367004395

Token 373: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009325929917395115
    2. ',' → logprob: -4.884325981140137
    3. ')' → logprob: -6.759325981140137
    4. '):
' → logprob: -7.634325981140137
    5. ' ):' → logprob: -9.759325981140137
    6. ':' → logprob: -11.509325981140137
    7. '):
' → logprob: -13.759325981140137
    8. '   ' → logprob: -13.884325981140137
    9. ' ,' → logprob: -14.259325981140137
    10. ' ' → logprob: -14.384325981140137

Token 374: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023810577113181353
    2. 'm' → logprob: -8.625238418579102
    3. 'n' → logprob: -10.250238418579102
    4. ' y' → logprob: -10.875238418579102
    5. 'd' → logprob: -13.625238418579102
    6. 'div' → logprob: -13.875238418579102
    7. 'base' → logprob: -14.250238418579102
    8. 'b' → logprob: -14.500238418579102
    9. 'a' → logprob: -15.125238418579102
    10. 'k' → logprob: -15.250238418579102

Token 375: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026884564431384206
    2. '):
' → logprob: -8.375268936157227
    3. ')' → logprob: -10.250268936157227
    4. ' ):' → logprob: -13.500268936157227
    5. ':' → logprob: -14.375268936157227
    6. '=' → logprob: -14.375268936157227
    7. '):
' → logprob: -15.625268936157227
    8. '):

' → logprob: -16.500268936157227
    9. '   ' → logprob: -16.625268936157227
    10. ')：' → logprob: -17.875268936157227

Token 376: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11105605959892273
    2. '2' → logprob: -3.486056089401245
    3. ' )' → logprob: -3.611056089401245
    4. '0' → logprob: -3.861056089401245
    5. '1' → logprob: -3.986056089401245
    6. ' ' → logprob: -6.736055850982666
    7. '10' → logprob: -6.736055850982666
    8. '):
' → logprob: -6.861055850982666
    9. '9' → logprob: -6.986055850982666
    10. 'y' → logprob: -7.111055850982666

Token 377: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005427849246188998
    2. ')' → logprob: -7.750542640686035
    3. '):
' → logprob: -9.125542640686035
    4. ' ):' → logprob: -13.125542640686035
    5. ':' → logprob: -14.125542640686035
    6. '*' → logprob: -15.875542640686035
    7. '):
' → logprob: -16.25054359436035
    8. '):

' → logprob: -17.00054359436035
    9. '   ' → logprob: -17.12554359436035
    10. ')：' → logprob: -17.25054359436035

Token 378: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08431608229875565
    2. '):' → logprob: -2.8343160152435303
    3. '   ' → logprob: -4.084316253662109
    4. ':return' → logprob: -5.959316253662109
    5. '):
' → logprob: -6.584316253662109
    6. ':
' → logprob: -7.459316253662109
    7. '():' → logprob: -8.08431625366211
    8. ' :' → logprob: -8.45931625366211
    9. ')' → logprob: -9.95931625366211
    10. '():
' → logprob: -10.20931625366211

Token 379: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04005305469036102
    2. 'return' → logprob: -3.415053129196167
    3. ' return' → logprob: -5.915052890777588
    4. ':return' → logprob: -6.290052890777588
    5. ':' → logprob: -6.415052890777588
    6. '):' → logprob: -9.790053367614746
    7. 'import' → logprob: -9.915053367614746
    8. '	return' → logprob: -10.415053367614746
    9. ' ' → logprob: -11.040053367614746
    10. ')' → logprob: -11.665053367614746

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22436989843845367
    2. '"""
' → logprob: -1.7243698835372925
    3. 'return' → logprob: -4.599370002746582
    4. '"""' → logprob: -4.849370002746582
    5. ' return' → logprob: -5.974370002746582
    6. ' """
' → logprob: -7.224370002746582
    7. 'Returns' → logprob: -7.349370002746582
    8. 'Return' → logprob: -8.349370002746582
    9. '"' → logprob: -8.474370002746582
    10. ''''
' → logprob: -9.224370002746582

Token 381: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05957495793700218
    2. ' return' → logprob: -3.434574842453003
    3. '   ' → logprob: -3.684574842453003
    4. '	return' → logprob: -8.559575080871582
    5. ':return' → logprob: -9.059575080871582
    6. ')' → logprob: -9.684575080871582
    7. ' ' → logprob: -10.559575080871582
    8. 'import' → logprob: -10.934575080871582
    9. '"""' → logprob: -11.184575080871582
    10. '(return' → logprob: -11.434575080871582

Token 382: ' the' (ID: 290)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.019001930952072144
    2. ' (' → logprob: -4.0190019607543945
    3. '-' → logprob: -7.2690019607543945
    4. ' -' → logprob: -9.019001960754395
    5. '-(' → logprob: -11.019001960754395
    6. '
' → logprob: -12.519001960754395
    7. '   ' → logprob: -12.644001960754395
    8. '(' → logprob: -13.019001960754395
    9. '((' → logprob: -13.144001960754395
    10. ' ' → logprob: -13.144001960754395

Token 383: ' ceiling' (ID: 32727)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008615515194833279
    2. '-' → logprob: -5.508615493774414
    3. ' (' → logprob: -5.508615493774414
    4. ' -' → logprob: -7.883615493774414
    5. '-(' → logprob: -10.008615493774414
    6. 'x' → logprob: -10.133615493774414
    7. '-x' → logprob: -12.258615493774414
    8. '1' → logprob: -13.258615493774414
    9. ' ' → logprob: -13.258615493774414
    10. '   ' → logprob: -13.258615493774414

Token 384: ' value' (ID: 1432)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08108246326446533
    2. ' (' → logprob: -2.831082344055176
    3. '(' → logprob: -4.456082344055176
    4. '((' → logprob: -5.581082344055176
    5. ' return' → logprob: -6.831082344055176
    6. ' of' → logprob: -7.331082344055176
    7. 'return' → logprob: -7.456082344055176
    8. 'div' → logprob: -8.331082344055176
    9. '   ' → logprob: -8.581082344055176
    10. ' division' → logprob: -8.706082344055176

Token 385: ' of' (ID: 328)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.26261013746261597
    2. '(' → logprob: -1.7626101970672607
    3. ':' → logprob: -3.7626101970672607
    4. ' (' → logprob: -4.512609958648682
    5. '((' → logprob: -4.762609958648682
    6. '   ' → logprob: -5.012609958648682
    7. ' of' → logprob: -6.012609958648682
    8. 'def' → logprob: -6.137609958648682
    9. ' for' → logprob: -6.137609958648682
    10. '(
' → logprob: -6.887609958648682

Token 386: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10295893996953964
    2. ' x' → logprob: -2.352958917617798
    3. '(x' → logprob: -5.977959156036377
    4. ' (' → logprob: -8.477958679199219
    5. '(' → logprob: -13.227958679199219
    6. ' ' → logprob: -13.352958679199219
    7. '   ' → logprob: -13.727958679199219
    8. ' division' → logprob: -14.602958679199219
    9. '-x' → logprob: -14.727958679199219
    10. '`' → logprob: -15.602958679199219

Token 387: ' divided' (ID: 28261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3569406270980835
    2. ')' → logprob: -2.106940746307373
    3. ' //' → logprob: -3.231940746307373
    4. '(x' → logprob: -3.356940746307373
    5. ' (' → logprob: -3.731940746307373
    6. ' /' → logprob: -3.981940746307373
    7. ' +' → logprob: -4.481940746307373
    8. ':' → logprob: -4.606940746307373
    9. '):' → logprob: -5.106940746307373
    10. '//' → logprob: -5.106940746307373

Token 388: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.21563637256622314
    2. 'by' → logprob: -1.7156363725662231
    3. '(' → logprob: -4.715636253356934
    4. '(x' → logprob: -5.590636253356934
    5. ' (' → logprob: -7.965636253356934
    6. '   ' → logprob: -8.090636253356934
    7. 'x' → logprob: -8.465636253356934
    8. '/' → logprob: -8.965636253356934
    9. 'div' → logprob: -9.090636253356934
    10. ' ' → logprob: -9.340636253356934

Token 389: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005233763717114925
    2. ' y' → logprob: -5.2552337646484375
    3. '	y' → logprob: -19.380233764648438
    4. '   ' → logprob: -20.005233764648438
    5. '(y' → logprob: -20.005233764648438
    6. 'x' → logprob: -20.130233764648438
    7. ' ' → logprob: -21.005233764648438
    8. 'y's' → logprob: -21.005233764648438
    9. '‘y' → logprob: -21.880233764648438
    10. ',y' → logprob: -22.005233764648438

Token 390: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23733003437519073
    2. ':
' → logprob: -2.2373299598693848
    3. '   ' → logprob: -2.4873299598693848
    4. '):' → logprob: -4.112329959869385
    5. '):
' → logprob: -5.737329959869385
    6. ':return' → logprob: -7.237329959869385
    7. ')' → logprob: -8.112330436706543
    8. '.' → logprob: -8.362330436706543
    9. ' :' → logprob: -8.487330436706543
    10. ',' → logprob: -8.612330436706543

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01245137583464384
    2. ':' → logprob: -4.512451171875
    3. ')' → logprob: -7.137451171875
    4. ':
' → logprob: -8.512451171875
    5. ' return' → logprob: -9.137451171875
    6. '):' → logprob: -9.262451171875
    7. ':return' → logprob: -9.762451171875
    8. 'return' → logprob: -10.387451171875
    9. '(' → logprob: -10.762451171875
    10. ' ' → logprob: -11.137451171875

Token 392: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5821807980537415
    2. 'return' → logprob: -0.8321807980537415
    3. ' return' → logprob: -5.082180976867676
    4. 'if' → logprob: -12.207180976867676
    5. '	return' → logprob: -12.707180976867676
    6. ':return' → logprob: -13.207180976867676
    7. ')' → logprob: -13.332180976867676
    8. ' ' → logprob: -13.332180976867676
    9. '    ' → logprob: -14.457180976867676
    10. '  ' → logprob: -14.582180976867676

Token 393: 'param' (ID: 1355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22413107752799988
    2. 'return' → logprob: -1.7241311073303223
    3. ' return' → logprob: -3.8491311073303223
    4. 'if' → logprob: -8.349130630493164
    5. '"""
' → logprob: -8.474130630493164
    6. 'x' → logprob: -8.849130630493164
    7. ':return' → logprob: -9.099130630493164
    8. '
' → logprob: -9.599130630493164
    9. ' if' → logprob: -9.724130630493164
    10. ' ' → logprob: -9.849130630493164

Token 394: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01105265598744154
    2. ' x' → logprob: -4.51105260848999
    3. '   ' → logprob: -12.886053085327148
    4. ' ' → logprob: -13.261053085327148
    5. 'def' → logprob: -15.886053085327148
    6. '	x' → logprob: -15.886053085327148
    7. ')' → logprob: -16.26105308532715
    8. '#' → logprob: -17.38605308532715
    9. '  ' → logprob: -17.63605308532715
    10. 'return' → logprob: -17.76105308532715

Token 395: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48234230279922485
    2. '):' → logprob: -1.35734224319458
    3. ':' → logprob: -2.10734224319458
    4. ' :' → logprob: -6.73234224319458
    5. ' ):' → logprob: -7.10734224319458
    6. '=' → logprob: -7.98234224319458
    7. ' ,' → logprob: -8.107342720031738
    8. '   ' → logprob: -8.107342720031738
    9. ' ' → logprob: -8.357342720031738
    10. '):
' → logprob: -8.607342720031738

Token 396: ' Numer' (ID: 60273)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013539346866309643
    2. 'x' → logprob: -4.3885393142700195
    3. ' int' → logprob: -7.0135393142700195
    4. ' x' → logprob: -9.13853931427002
    5. ')' → logprob: -12.13853931427002
    6. 'def' → logprob: -12.51353931427002
    7. '   ' → logprob: -12.88853931427002
    8. ':int' → logprob: -13.01353931427002
    9. '(int' → logprob: -13.13853931427002
    10. ',' → logprob: -13.51353931427002

Token 397: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.9289935827255249
    2. 'int' → logprob: -1.553993582725525
    3. ':' → logprob: -2.1789937019348145
    4. '   ' → logprob: -2.6789937019348145
    5. 'ical' → logprob: -3.0539937019348145
    6. 'x' → logprob: -3.6789937019348145
    7. ')' → logprob: -3.6789937019348145
    8. 't' → logprob: -3.9289937019348145
    9. '(int' → logprob: -4.0539937019348145
    10. ':int' → logprob: -4.4289937019348145

Token 398: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5036340355873108
    2. ',' → logprob: -1.003633975982666
    3. ')' → logprob: -4.003633975982666
    4. '):' → logprob: -5.503633975982666
    5. ',
' → logprob: -5.878633975982666
    6. '   ' → logprob: -6.378633975982666
    7. '):
' → logprob: -7.128633975982666
    8. ':
' → logprob: -7.378633975982666
    9. 'def' → logprob: -8.253634452819824
    10. ':int' → logprob: -8.628634452819824

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009419231675565243
    2. ')' → logprob: -4.7594194412231445
    3. '    
' → logprob: -8.634419441223145
    4. '):
' → logprob: -8.759419441223145
    5. ',' → logprob: -9.884419441223145
    6. ' ' → logprob: -9.884419441223145
    7. '):' → logprob: -9.884419441223145
    8. '<|end|>' → logprob: -10.009419441223145
    9. '    ' → logprob: -10.134419441223145
    10. '  ' → logprob: -10.384419441223145

Token 400: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017396587878465652
    2. 'y' → logprob: -4.767396450042725
    3. ' y' → logprob: -4.767396450042725
    4. 'def' → logprob: -9.517396926879883
    5. '    
' → logprob: -10.267396926879883
    6. ' return' → logprob: -10.392396926879883
    7. '    ' → logprob: -10.517396926879883
    8. 'return' → logprob: -10.892396926879883
    9. '
' → logprob: -11.267396926879883
    10. ':' (adapté à ' :') → logprob: -11.767396926879883

Token 401: 'param' (ID: 1355)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.013123169541358948
    2. ' y' → logprob: -4.513123035430908
    3. ':param' → logprob: -7.513123035430908
    4. ':int' → logprob: -7.638123035430908
    5. 'int' → logprob: -7.888123035430908
    6. '   ' → logprob: -8.513123512268066
    7. ':y' → logprob: -8.513123512268066
    8. 'den' → logprob: -9.138123512268066
    9. '@param' → logprob: -10.263123512268066
    10. ':' → logprob: -10.638123512268066

Token 402: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693724036216736
    2. ' y' → logprob: -2.1269371509552
    3. 'den' → logprob: -12.251936912536621
    4. ' denominator' → logprob: -13.001936912536621
    5. '   ' → logprob: -14.126936912536621
    6. 'def' → logprob: -14.501936912536621
    7. 'x' → logprob: -14.751936912536621
    8. ' ' → logprob: -15.501936912536621
    9. '	y' → logprob: -16.001937866210938
    10. ' def' → logprob: -17.626937866210938

Token 403: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.023296594619751
    2. '=' → logprob: -1.023296594619751
    3. '):' → logprob: -1.273296594619751
    4. '=None' → logprob: -6.773296356201172
    5. ')' → logprob: -9.523296356201172
    6. '<|end|>' → logprob: -11.648296356201172
    7. ' :' → logprob: -11.773296356201172
    8. '):
' → logprob: -11.898296356201172
    9. ':int' → logprob: -12.023296356201172
    10. ' =' → logprob: -12.023296356201172

Token 404: ' Den' (ID: 9622)
  Prédit: 'Den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -0.20966307818889618
    2. ' Den' → logprob: -1.9596630334854126
    3. 'den' → logprob: -4.084662914276123
    4. ' int' → logprob: -4.459662914276123
    5. ' denominator' → logprob: -4.584662914276123
    6. 'int' → logprob: -4.709662914276123
    7. 'Divider' → logprob: -8.209663391113281
    8. 'div' → logprob: -9.084663391113281
    9. '_den' → logprob: -9.209663391113281
    10. ' den' → logprob: -9.709663391113281

Token 405: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.487299382686615
    2. 'f' → logprob: -0.987299382686615
    3. 'y' → logprob: -4.73729944229126
    4. 'om' → logprob: -6.86229944229126
    5. 'ef' → logprob: -6.98729944229126
    6. '   ' → logprob: -7.23729944229126
    7. 'umerator' → logprob: -7.48729944229126
    8. '=' → logprob: -7.73729944229126
    9. 'def' → logprob: -8.487298965454102
    10. '```' → logprob: -8.737298965454102

Token 406: '.' (ID: 13)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2532900273799896
    2. '):
' → logprob: -1.503290057182312
    3. ')' → logprob: -6.628290176391602
    4. '):
' → logprob: -10.628290176391602
    5. '   ' → logprob: -12.628290176391602
    6. '=' → logprob: -13.128290176391602
    7. ':' → logprob: -13.253290176391602
    8. '):

' → logprob: -13.378290176391602
    9. 'def' → logprob: -13.503290176391602
    10. ')->' → logprob: -13.503290176391602

Token 407: ' Default' (ID: 13498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35239025950431824
    2. '):' → logprob: -1.9773902893066406
    3. '):
' → logprob: -2.1023902893066406
    4. ')' → logprob: -3.7273902893066406
    5. ':' → logprob: -4.852390289306641
    6. ':return' → logprob: -5.977390289306641
    7. ':
' → logprob: -7.352390289306641
    8. ' :' → logprob: -8.10239028930664
    9. '"""
' → logprob: -8.72739028930664
    10. ' return' → logprob: -8.72739028930664

Token 408: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010878815373871475
    2. '=y' → logprob: -9.37510871887207
    3. 'y' → logprob: -11.37510871887207
    4. '1' → logprob: -11.50010871887207
    5. ')' → logprob: -13.75010871887207
    6. ' y' → logprob: -14.87510871887207
    7. '):' → logprob: -15.00010871887207
    8. '=x' → logprob: -15.37510871887207
    9. ' =' → logprob: -15.50010871887207
    10. ')=' → logprob: -16.87510871887207

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. ' y' → logprob: -20.256715774536133
    4. 'y' → logprob: -21.131715774536133
    5. '   ' → logprob: -21.756715774536133
    6. '```' → logprob: -21.881715774536133
    7. '=' → logprob: -23.631715774536133
    8. 'x' → logprob: -24.131715774536133
    9. ' ' → logprob: -24.131715774536133
    10. '１' → logprob: -24.131715774536133

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -24.875
    4. '```' → logprob: -25.875
    5. '１' → logprob: -27.25
    6. '  ' → logprob: -27.875
    7. '
' → logprob: -28.0
    8. 'y' → logprob: -28.25
    9. '`' → logprob: -28.375
    10. '۱' → logprob: -28.375

Token 411: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6940344572067261
    2. '):' → logprob: -0.6940344572067261
    3. ')' → logprob: -7.194034576416016
    4. '   ' → logprob: -9.069034576416016
    5. '):
' → logprob: -10.944034576416016
    6. ':' → logprob: -13.944034576416016
    7. '):

' → logprob: -14.569034576416016
    8. 'def' → logprob: -15.069034576416016
    9. '():
' → logprob: -15.194034576416016
    10. '```' → logprob: -15.569034576416016

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008845492266118526
    2. 'return' → logprob: -7.875884532928467
    3. ')' → logprob: -8.375885009765625
    4. ' return' → logprob: -9.250885009765625
    5. '"""' → logprob: -9.750885009765625
    6. '"""
' → logprob: -10.375885009765625
    7. ')
' → logprob: -10.375885009765625
    8. ':return' → logprob: -10.875885009765625
    9. '):
' → logprob: -11.000885009765625
    10. '
' → logprob: -11.500885009765625

Token 413: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016534922644495964
    2. ')' → logprob: -4.891534805297852
    3. 'return' → logprob: -4.891534805297852
    4. ' return' → logprob: -7.391534805297852
    5. '
' → logprob: -7.766534805297852
    6. ')
' → logprob: -8.891534805297852
    7. '):
' → logprob: -9.891534805297852
    8. '):' → logprob: -10.016534805297852
    9. ':return' → logprob: -10.266534805297852
    10. '```' → logprob: -10.766534805297852

Token 414: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015270020812749863
    2. ':return' → logprob: -6.751526832580566
    3. ' return' → logprob: -8.376526832580566
    4. 'param' → logprob: -9.626526832580566
    5. '"""
' → logprob: -11.126526832580566
    6. 'Returns' → logprob: -11.126526832580566
    7. 'Return' → logprob: -11.501526832580566
    8. '   ' → logprob: -11.751526832580566
    9. '@return' → logprob: -12.251526832580566
    10. 'returns' → logprob: -12.501526832580566

Token 415: ':' (ID: 25)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02019205130636692
    2. '(x' → logprob: -4.0201921463012695
    3. ' x' → logprob: -6.3951921463012695
    4. 'x' → logprob: -8.89519214630127
    5. ':' → logprob: -9.64519214630127
    6. '(' → logprob: -9.64519214630127
    7. ' ' → logprob: -9.89519214630127
    8. '   ' → logprob: -11.02019214630127
    9. '(int' → logprob: -11.64519214630127
    10. ')' → logprob: -12.27019214630127

Token 416: ' The' (ID: 623)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.016079887747764587
    2. ' (' → logprob: -4.141079902648926
    3. '-' → logprob: -10.266079902648926
    4. ' -' → logprob: -11.891079902648926
    5. '((' → logprob: -13.516079902648926
    6. '
' → logprob: -14.266079902648926
    7. ' ' → logprob: -14.516079902648926
    8. '(' → logprob: -14.516079902648926
    9. '(X' → logprob: -15.266079902648926
    10. '   ' → logprob: -15.391079902648926

Token 417: ' smallest' (ID: 42173)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.017192022874951363
    2. ' (' → logprob: -4.1421918869018555
    3. '-' → logprob: -6.8921918869018555
    4. '(' → logprob: -9.392191886901855
    5. ' -' → logprob: -9.892191886901855
    6. '(int' → logprob: -13.392191886901855
    7. '((' → logprob: -13.642191886901855
    8. '1' → logprob: -14.017191886901855
    9. '(X' → logprob: -14.017191886901855
    10. ' ' → logprob: -14.017191886901855

Token 418: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.37646955251693726
    2. 'int' → logprob: -1.626469612121582
    3. 'integer' → logprob: -2.376469612121582
    4. ' int' → logprob: -3.876469612121582
    5. ' ' → logprob: -6.751469612121582
    6. ' (' → logprob: -7.126469612121582
    7. '-' → logprob: -7.876469612121582
    8. ' -' → logprob: -8.251469612121582
    9. '整数' → logprob: -9.001469612121582
    10. '`' → logprob: -9.251469612121582

Token 419: ' not' (ID: 625)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.15688945353031158
    2. ' >=' → logprob: -2.5318894386291504
    3. 'greater' → logprob: -3.4068894386291504
    4. ' greater' → logprob: -3.6568894386291504
    5. 'not' → logprob: -5.78188943862915
    6. ' not' → logprob: -5.78188943862915
    7. ' that' → logprob: -8.406889915466309
    8. ')' → logprob: -9.156889915466309
    9. '≥' → logprob: -9.406889915466309
    10. 'value' → logprob: -10.406889915466309

Token 420: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.4749397933483124
    2. ' less' → logprob: -0.9749398231506348
    3. 'Less' → logprob: -7.224939823150635
    4. '_less' → logprob: -9.724939346313477
    5. '-less' → logprob: -10.099939346313477
    6. ' smaller' → logprob: -10.974939346313477
    7. 'sm' → logprob: -11.724939346313477
    8. ' Less' → logprob: -13.849939346313477
    9. '<' → logprob: -13.849939346313477
    10. ' меньше' → logprob: -14.224939346313477

Token 421: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.25368532538414
    2. ' than' → logprob: -1.5036853551864624
    3. '   ' → logprob: -6.503685474395752
    4. '_than' → logprob: -8.503684997558594
    5. '  ' → logprob: -11.003684997558594
    6. ' ' → logprob: -11.253684997558594
    7. 'Than' → logprob: -12.128684997558594
    8. 'from' → logprob: -12.628684997558594
    9. '    ' → logprob: -12.628684997558594
    10. '=' → logprob: -12.753684997558594

Token 422: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6562736630439758
    2. ' (' → logprob: -0.9062736630439758
    3. 'x' → logprob: -2.656273603439331
    4. ' x' → logprob: -5.28127384185791
    5. '(' → logprob: -6.28127384185791
    6. ' ' → logprob: -11.78127384185791
    7. '`' → logprob: -12.15627384185791
    8. '   ' → logprob: -12.65627384185791
    9. '(int' → logprob: -12.78127384185791
    10. ' ' → logprob: -14.15627384185791

Token 423: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7863289713859558
    2. '(x' → logprob: -1.5363290309906006
    3. ')' → logprob: -1.6613290309906006
    4. '*' → logprob: -3.5363290309906006
    5. '+' → logprob: -3.6613290309906006
    6. ' ' → logprob: -3.7863290309906006
    7. '(' → logprob: -4.1613287925720215
    8. ' *' → logprob: -4.4113287925720215
    9. ',' → logprob: -4.7863287925720215
    10. ' /' → logprob: -5.2863287925720215

Token 424: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888978719711304
    2. ' y' → logprob: -2.578889846801758
    3. '   ' → logprob: -18.453889846801758
    4. '	y' → logprob: -18.578889846801758
    5. ' ' → logprob: -18.703889846801758
    6. ' ' → logprob: -20.078889846801758
    7. '(y' → logprob: -20.078889846801758
    8. 'y's' → logprob: -21.078889846801758
    9. ''y' → logprob: -21.203889846801758
    10. '*y' → logprob: -21.703889846801758

Token 425: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19767946004867554
    2. ')' → logprob: -2.4476795196533203
    3. '):
' → logprob: -3.3226795196533203
    4. ':
' → logprob: -4.07267951965332
    5. '):' → logprob: -4.57267951965332
    6. '
' → logprob: -4.82267951965332
    7. ']' → logprob: -5.07267951965332
    8. ':' → logprob: -5.57267951965332
    9. '"""
' → logprob: -6.32267951965332
    10. '.
' → logprob: -6.32267951965332

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007567389984615147
    2. '
' → logprob: -7.625756740570068
    3. 'return' → logprob: -9.00075626373291
    4. ')' → logprob: -9.62575626373291
    5. ' return' → logprob: -9.87575626373291
    6. '):
' → logprob: -11.87575626373291
    7. ')
' → logprob: -12.12575626373291
    8. '    
' → logprob: -12.50075626373291
    9. ':return' → logprob: -12.87575626373291
    10. ':
' → logprob: -13.00075626373291

Token 427: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006004538154229522
    2. 'return' → logprob: -7.750600337982178
    3. ' return' → logprob: -9.500600814819336
    4. ')' → logprob: -9.750600814819336
    5. '"""' → logprob: -11.000600814819336
    6. '
' → logprob: -12.125600814819336
    7. '```' → logprob: -12.125600814819336
    8. '"""
' (adapté à ' """
') → logprob: -12.375600814819336
    9. ')
' → logprob: -13.000600814819336
    10. '	return' → logprob: -14.375600814819336

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0619862861931324
    2. 'return' → logprob: -2.811986207962036
    3. ' return' → logprob: -10.936985969543457
    4. 'import' → logprob: -14.561985969543457
    5. '	return' → logprob: -15.811985969543457
    6. '```' → logprob: -16.186986923217773
    7. '  ' → logprob: -16.686986923217773
    8. 'from' → logprob: -16.811986923217773
    9. 'if' → logprob: -17.311986923217773
    10. ' ' → logprob: -17.561986923217773

Token 429: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.842555426876061e-06
    2. ' return' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.125004768371582
    4. 'if' → logprob: -16.2500057220459
    5. '	return' → logprob: -18.0000057220459
    6. 'import' → logprob: -18.5000057220459
    7. '(return' → logprob: -19.5000057220459
    8. 'from' → logprob: -20.5000057220459
    9. 'Return' → logprob: -21.1250057220459
    10. ' ' → logprob: -21.5000057220459

Token 430: ' int' (ID: 677)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0781307965517044
    2. '-' → logprob: -3.2031307220458984
    3. ' (' → logprob: -3.5781307220458984
    4. ' -' → logprob: -5.078130722045898
    5. '-(' → logprob: -8.078130722045898
    6. ' ' → logprob: -10.578130722045898
    7. '-x' → logprob: -11.453130722045898
    8. '   ' → logprob: -12.453130722045898
    9. '((' → logprob: -12.703130722045898
    10. '(X' → logprob: -12.953130722045898

Token 431: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.036832213401794434
    2. '(-' → logprob: -3.661832332611084
    3. '((' → logprob: -5.161832332611084
    4. '(' → logprob: -5.536832332611084
    5. '(x' → logprob: -7.536832332611084
    6. ' -' → logprob: -8.661831855773926
    7. '-(' → logprob: -9.411831855773926
    8. '(-(' → logprob: -11.411831855773926
    9. '   ' → logprob: -13.411831855773926
    10. '
' → logprob: -13.661831855773926

Token 432: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.35559916496276855
    2. '-' → logprob: -1.3555991649627686
    3. '-(' → logprob: -3.6055991649627686
    4. '-x' → logprob: -4.730599403381348
    5. '(x' → logprob: -5.730599403381348
    6. '(' → logprob: -6.855599403381348
    7. '(-(' → logprob: -6.855599403381348
    8. ' -' → logprob: -10.230599403381348
    9. 'x' → logprob: -10.730599403381348
    10. '((' → logprob: -10.980599403381348

Token 433: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.25
    3. 'int' → logprob: -16.875
    4. '(x' → logprob: -21.5
    5. '
' → logprob: -22.5
    6. '	x' → logprob: -22.875
    7. 'float' → logprob: -23.125
    8. ')x' → logprob: -23.75
    9. '{x' → logprob: -24.125
    10. '```' → logprob: -24.625

Token 434: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.014164921827614307
    2. ' //' → logprob: -4.264164924621582
    3. '/' → logprob: -14.139164924621582
    4. ' ' → logprob: -14.889164924621582
    5. 'y' → logprob: -15.264164924621582
    6. '//
' → logprob: -16.389163970947266
    7. ' /' → logprob: -17.014163970947266
    8. '
' → logprob: -17.014163970947266
    9. '/y' → logprob: -17.139163970947266
    10. '```' → logprob: -17.139163970947266

Token 435: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01416350994259119
    2. ' y' → logprob: -4.264163494110107
    3. '	y' → logprob: -18.014163970947266
    4. ' ' → logprob: -18.764163970947266
    5. ')y' → logprob: -18.764163970947266
    6. '   ' → logprob: -18.889163970947266
    7. '(y' → logprob: -20.014163970947266
    8. 'yj' → logprob: -20.014163970947266
    9. ')' → logprob: -20.264163970947266
    10. 'yv' → logprob: -20.514163970947266

Token 436: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01815345324575901
    2. ')' → logprob: -4.018153667449951
    3. '))
' → logprob: -13.393153190612793
    4. ')))' → logprob: -13.518153190612793
    5. ' ))' → logprob: -15.018153190612793
    6. ')
' → logprob: -15.268153190612793
    7. '()))' → logprob: -17.64315414428711
    8. '),' → logprob: -17.64315414428711
    9. '))

' → logprob: -17.89315414428711
    10. ' )' → logprob: -17.89315414428711

Token 437: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' INT' (ID: 20104)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.937303900718689
    2. 'INT' → logprob: -1.312303900718689
    3. 'sum' → logprob: -2.4373040199279785
    4. 'YES' → logprob: -3.1873040199279785
    5. 'int' → logprob: -3.1873040199279785
    6. 'debug' → logprob: -3.6873040199279785
    7. 'perm' → logprob: -4.4373040199279785
    8. 'copy' → logprob: -4.4373040199279785
    9. ' INT' → logprob: -4.6873040199279785
    10. 'INF' → logprob: -4.6873040199279785

Token 439: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09280741214752197
    2. '():' → logprob: -2.4678072929382324
    3. '():
' → logprob: -5.967807292938232
    4. ' ()' → logprob: -7.967807292938232
    5. '()>' → logprob: -8.34280776977539
    6. '();' → logprob: -8.59280776977539
    7. '(' → logprob: -8.59280776977539
    8. '()`' → logprob: -9.71780776977539
    9. '(){' → logprob: -10.46780776977539
    10. '()
' → logprob: -10.71780776977539

Token 440: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44421812891960144
    2. '():' → logprob: -1.4442181587219238
    3. '():
' → logprob: -2.444218158721924
    4. 'int' → logprob: -3.819218158721924
    5. 'return' → logprob: -4.819218158721924
    6. ' ()' → logprob: -5.819218158721924
    7. ' return' → logprob: -6.569218158721924
    8. '()>' → logprob: -7.944218158721924
    9. '()
' → logprob: -8.944217681884766
    10. '(int' → logprob: -8.944217681884766

Token 441: ' """
' (ID: 7037)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004134560935199261
    2. 'return' → logprob: -5.504134654998779
    3. '(int' → logprob: -10.129134178161621
    4. ' int' → logprob: -11.129134178161621
    5. ' return' → logprob: -13.504134178161621
    6. '=int' → logprob: -15.754134178161621
    7. '   ' → logprob: -16.754135131835938
    8. '()' → logprob: -16.879135131835938
    9. ':int' → logprob: -17.504135131835938
    10. '[int' → logprob: -18.754135131835938

Token 442: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2945551574230194
    2. ' return' → logprob: -1.5445551872253418
    3. 'int' → logprob: -3.294555187225342
    4. '   ' → logprob: -5.419555187225342
    5. ' int' → logprob: -8.544554710388184
    6. '(int' → logprob: -12.294554710388184
    7. '()' → logprob: -12.294554710388184
    8. '    ' → logprob: -13.044554710388184
    9. '=int' → logprob: -13.044554710388184
    10. '	return' → logprob: -13.294554710388184

Token 443: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029753616079688072
    2. ' return' → logprob: -3.5297536849975586
    3. '   ' → logprob: -12.779753684997559
    4. 'int' → logprob: -15.029753684997559
    5. '	return' → logprob: -17.279752731323242
    6. 'ret' → logprob: -17.904752731323242
    7. '
' → logprob: -18.779752731323242
    8. '    ' → logprob: -19.154752731323242
    9. ':return' → logprob: -19.279752731323242
    10. 'Return' → logprob: -19.529752731323242

Token 444: ' one' (ID: 1001)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003922026138752699
    2. 'int' → logprob: -5.628921985626221
    3. ' ()' → logprob: -8.503922462463379
    4. '()
' → logprob: -9.378922462463379
    5. '()

' → logprob: -11.753922462463379
    6. '(int' → logprob: -11.878922462463379
    7. ' int' → logprob: -12.628922462463379
    8. ')' → logprob: -12.753922462463379
    9. 'def' → logprob: -12.753922462463379
    10. '()>' → logprob: -13.128922462463379

Token 445: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001588058308698237
    2. 'int' → logprob: -7.126587867736816
    3. ' ()' → logprob: -7.501587867736816
    4. ')' → logprob: -9.501587867736816
    5. '()
' → logprob: -9.751587867736816
    6. '())' → logprob: -10.501587867736816
    7. '(' → logprob: -11.001587867736816
    8. '(int' → logprob: -11.376587867736816
    9. '   ' → logprob: -12.126587867736816
    10. '().' → logprob: -12.251587867736816

Token 446: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012770733796060085
    2. ')' → logprob: -5.262770652770996
    3. '().' → logprob: -5.262770652770996
    4. 'def' → logprob: -7.512770652770996
    5. '.' → logprob: -7.637770652770996
    6. ' ()' → logprob: -8.137770652770996
    7. ' and' → logprob: -8.512770652770996
    8. '<|end|>' → logprob: -8.762770652770996
    9. '()
' → logprob: -9.137770652770996
    10. '(' → logprob: -9.387770652770996

Token 447: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2140774130821228
    2. ' input' → logprob: -1.7140774726867676
    3. 'sys' → logprob: -4.714077472686768
    4. 'int' → logprob: -6.214077472686768
    5. ' sys' → logprob: -6.839077472686768
    6. 'stdin' → logprob: -7.714077472686768
    7. ' stdin' → logprob: -10.58907699584961
    8. '   ' → logprob: -10.96407699584961
    9. ' int' → logprob: -11.33907699584961
    10. 'return' → logprob: -11.46407699584961

Token 448: ' and' (ID: 326)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0830710157752037
    2. '().' → logprob: -2.833070993423462
    3. ')' → logprob: -4.083071231842041
    4. '()
' → logprob: -7.208071231842041
    5. ' ()' → logprob: -7.208071231842041
    6. ',' → logprob: -7.333071231842041
    7. ').' → logprob: -7.583071231842041
    8. 'return' → logprob: -8.083070755004883
    9. 'def' → logprob: -8.208070755004883
    10. '   ' → logprob: -8.458070755004883

Token 449: ' returns' (ID: 7377)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20186194777488708
    2. 'return' → logprob: -1.7018619775772095
    3. ' ' → logprob: -8.701862335205078
    4. ' returns' → logprob: -9.076862335205078
    5. '   ' → logprob: -9.201862335205078
    6. '	return' → logprob: -11.201862335205078
    7. ':return' → logprob: -11.201862335205078
    8. 'returns' → logprob: -11.701862335205078
    9. 'int' → logprob: -11.951862335205078
    10. 'eturn' → logprob: -12.076862335205078

Token 450: ' it' (ID: 480)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3869008421897888
    2. ' int' → logprob: -1.1369009017944336
    3. '   ' → logprob: -11.136900901794434
    4. '(int' → logprob: -11.261900901794434
    5. ':int' → logprob: -14.511900901794434
    6. '	int' → logprob: -14.636900901794434
    7. ' ' → logprob: -14.761900901794434
    8. '    ' → logprob: -15.636900901794434
    9. ',int' → logprob: -15.761900901794434
    10. '=int' → logprob: -15.886900901794434

Token 451: ' as' (ID: 472)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.339883416891098
    2. '.' → logprob: -1.9648834466934204
    3. 'as' → logprob: -3.589883327484131
    4. ' as' → logprob: -3.589883327484131
    5. '   ' → logprob: -3.964883327484131
    6. ' ' → logprob: -4.464883327484131
    7. '    ' → logprob: -4.589883327484131
    8. ')' → logprob: -4.589883327484131
    9. '.split' → logprob: -4.839883327484131
    10. '(int' → logprob: -4.964883327484131

Token 452: ' an' (ID: 448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889088988304138
    2. ' int' → logprob: -2.578890800476074
    3. '(int' → logprob: -14.703890800476074
    4. ':int' → logprob: -15.578890800476074
    5. ' an' → logprob: -15.828890800476074
    6. '   ' → logprob: -15.953890800476074
    7. ' integer' → logprob: -16.07889175415039
    8. '<int' → logprob: -16.32889175415039
    9. '=int' → logprob: -17.45389175415039
    10. '[int' → logprob: -17.45389175415039

Token 453: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014295491389930248
    2. ' int' → logprob: -4.26429557800293
    3. 'integer' → logprob: -9.51429557800293
    4. ' integer' → logprob: -9.76429557800293
    5. '=int' → logprob: -14.76429557800293
    6. '(int' → logprob: -16.51429557800293
    7. '[int' → logprob: -16.51429557800293
    8. '<int' → logprob: -16.88929557800293
    9. ':int' → logprob: -17.76429557800293
    10. '_int' → logprob: -18.76429557800293

Token 454: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00042543161544017494
    2. '()
' → logprob: -7.875425338745117
    3. ')' → logprob: -10.875425338745117
    4. ' ()' → logprob: -11.500425338745117
    5. '   ' → logprob: -11.625425338745117
    6. '().' → logprob: -12.750425338745117
    7. '())' → logprob: -13.125425338745117
    8. '.' → logprob: -13.875425338745117
    9. 'def' → logprob: -15.250425338745117
    10. '(' → logprob: -15.250425338745117

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012689048424363136
    2. ' return' → logprob: -5.637689113616943
    3. '()' → logprob: -5.762689113616943
    4. 'return' → logprob: -6.012689113616943
    5. '():' → logprob: -6.262689113616943
    6. ')' → logprob: -7.387689113616943
    7. ':return' → logprob: -8.512688636779785
    8. '()
' → logprob: -8.512688636779785
    9. '():
' → logprob: -8.762688636779785
    10. '
' → logprob: -9.762688636779785

Token 456: ' :' (ID: 712)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06429696828126907
    2. '   ' → logprob: -2.8142969608306885
    3. ' return' → logprob: -6.064297199249268
    4. '	return' → logprob: -13.68929672241211
    5. ' ' → logprob: -14.31429672241211
    6. '
' → logprob: -15.43929672241211
    7. '  ' → logprob: -15.93929672241211
    8. ')' → logprob: -16.43929672241211
    9. '    ' → logprob: -16.93929672241211
    10. '```' → logprob: -17.31429672241211

Token 457: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00014287306112237275
    2. ' return' → logprob: -9.000143051147461
    3. 'int' → logprob: -10.875143051147461
    4. 'def' → logprob: -15.000143051147461
    5. '   ' → logprob: -16.37514305114746
    6. ':return' → logprob: -16.75014305114746
    7. ')' → logprob: -18.37514305114746
    8. '
' → logprob: -18.62514305114746
    9. '	return' → logprob: -18.62514305114746
    10. 'eturn' → logprob: -19.62514305114746

Token 458: ':' (ID: 25)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7402437925338745
    2. 'int' → logprob: -0.9902437925338745
    3. '   ' → logprob: -1.9902437925338745
    4. ':' → logprob: -5.115243911743164
    5. '=' → logprob: -6.490243911743164
    6. ' =' → logprob: -6.490243911743164
    7. '=int' → logprob: -6.490243911743164
    8. '    ' → logprob: -6.865243911743164
    9. ':int' → logprob: -7.240243911743164
    10. '(int' → logprob: -7.365243911743164

Token 459: ' Input' (ID: 10090)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022422909736633
    2. ' int' → logprob: -1.910224199295044
    3. '(int' → logprob: -16.91022491455078
    4. ' ' → logprob: -17.28522491455078
    5. '   ' → logprob: -18.41022491455078
    6. ':int' → logprob: -18.66022491455078
    7. '=int' → logprob: -18.78522491455078
    8. '<int' → logprob: -18.91022491455078
    9. 'INT' → logprob: -18.91022491455078
    10. '	int' → logprob: -19.16022491455078

Token 460: ' value' (ID: 1432)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006239825859665871
    2. ' ()' → logprob: -5.131239891052246
    3. 'int' → logprob: -8.756239891052246
    4. ')' → logprob: -10.131239891052246
    5. '().' → logprob: -10.256239891052246
    6. '())' → logprob: -10.506239891052246
    7. '(' → logprob: -11.131239891052246
    8. ' ' → logprob: -11.881239891052246
    9. '.' → logprob: -12.381239891052246
    10. '()
' → logprob: -12.506239891052246

Token 461: ' as' (ID: 472)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012359415413811803
    2. ')' → logprob: -7.1262359619140625
    3. ' ()' → logprob: -8.501235961914062
    4. '())' → logprob: -9.126235961914062
    5. '()
' → logprob: -10.126235961914062
    6. '   ' → logprob: -10.251235961914062
    7. 'int' → logprob: -10.376235961914062
    8. '.' → logprob: -12.626235961914062
    9. '().' → logprob: -13.626235961914062
    10. ' ' → logprob: -13.876235961914062

Token 462: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25193148851394653
    2. ' int' → logprob: -1.5019314289093018
    3. ' integer' → logprob: -13.251931190490723
    4. ' an' → logprob: -14.751931190490723
    5. 'integer' → logprob: -15.376931190490723
    6. '=int' → logprob: -17.50193214416504
    7. ':int' → logprob: -17.87693214416504
    8. '(int' → logprob: -18.12693214416504
    9. '<int' → logprob: -18.62693214416504
    10. '[int' → logprob: -18.75193214416504

Token 463: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9975860714912415
    2. '()
' → logprob: -1.2475860118865967
    3. ')' → logprob: -1.4975860118865967
    4. '   ' → logprob: -2.2475860118865967
    5. 'def' → logprob: -4.997586250305176
    6. ')
' → logprob: -5.497586250305176
    7. '
' → logprob: -5.997586250305176
    8. '().' → logprob: -7.997586250305176
    9. '.' → logprob: -8.622586250305176
    10. '())' → logprob: -8.747586250305176

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024915581569075584
    2. ')' → logprob: -4.27491569519043
    3. 'return' → logprob: -5.14991569519043
    4. '
' → logprob: -5.77491569519043
    5. ' return' → logprob: -7.02491569519043
    6. ')
' → logprob: -7.14991569519043
    7. '    
' → logprob: -10.52491569519043
    8. ' ' → logprob: -11.14991569519043
    9. '	return' → logprob: -11.64991569519043
    10. '    ' → logprob: -11.89991569519043

Token 465: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05912280082702637
    2. 'return' → logprob: -3.0591228008270264
    3. ')' → logprob: -4.8091230392456055
    4. ' return' → logprob: -6.6841230392456055
    5. '
' → logprob: -7.6841230392456055
    6. ')
' → logprob: -7.9341230392456055
    7. '"""
' (adapté à ' """
') → logprob: -9.184123039245605
    8. '"""' → logprob: -10.184123039245605
    9. '    
' → logprob: -10.434123039245605
    10. '	return' → logprob: -11.059123039245605

Token 466: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018695548176765442
    2. '   ' → logprob: -4.01869535446167
    3. ' return' → logprob: -7.51869535446167
    4. '	return' → logprob: -13.393695831298828
    5. 'int' → logprob: -13.768695831298828
    6. ' ' → logprob: -17.893695831298828
    7. '  ' → logprob: -17.893695831298828
    8. '
' → logprob: -18.143695831298828
    9. '```' → logprob: -18.518695831298828
    10. '   ' → logprob: -18.893695831298828

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.054500666621607e-06
    2. ' return' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.375003814697266
    4. 'int' → logprob: -20.500003814697266
    5. '	return' → logprob: -20.625003814697266
    6. 'ret' → logprob: -21.625003814697266
    7. '
' → logprob: -22.000003814697266
    8. '```' → logprob: -22.875003814697266
    9. 'Return' → logprob: -22.875003814697266
    10. '`' → logprob: -23.500003814697266

Token 468: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. 'INT' → logprob: -20.00007438659668
    4. '(int' → logprob: -20.37507438659668
    5. '	int' → logprob: -20.50007438659668
    6. ' ' → logprob: -21.37507438659668
    7. '   ' → logprob: -21.37507438659668
    8. '  ' → logprob: -21.62507438659668
    9. '[int' → logprob: -22.25007438659668
    10. '=int' → logprob: -23.62507438659668

Token 469: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019362468738108873
    2. '(' → logprob: -6.251936435699463
    3. 'input' → logprob: -12.126935958862305
    4. '(
' → logprob: -13.251935958862305
    5. '(sys' → logprob: -15.001935958862305
    6. '()' → logprob: -16.251935958862305
    7. '(

' → logprob: -17.251935958862305
    8. '((' → logprob: -17.626935958862305
    9. ' input' → logprob: -18.001935958862305
    10. '(open' → logprob: -18.126935958862305

Token 470: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -2.5107177862082608e-05
    2. '()' → logprob: -10.750024795532227
    3. ' ())' → logprob: -13.750024795532227
    4. '().' → logprob: -14.000024795532227
    5. '()))' → logprob: -14.125024795532227
    6. '())
' → logprob: -14.500024795532227
    7. ')' → logprob: -15.000024795532227
    8. '(' → logprob: -16.000024795532227
    9. '();)' → logprob: -17.250024795532227
    10. '())

' → logprob: -18.375024795532227

Token 471: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.696889623621246e-06
    2. '<|end|>' → logprob: -13.25000286102295
    3. '#' → logprob: -14.75000286102295
    4. ' def' → logprob: -15.50000286102295
    5. '
' → logprob: -16.125001907348633
    6. '```' → logprob: -16.500001907348633
    7. ')' → logprob: -17.875001907348633
    8. 'Def' → logprob: -18.000001907348633
    9. 'DEF' → logprob: -18.250001907348633
    10. 'from' → logprob: -18.375001907348633

Token 472: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.2634504735469818
    2. 'LIST' → logprob: -1.5134505033493042
    3. 'STR' → logprob: -4.763450622558594
    4. 'list' → logprob: -6.763450622558594
    5. 'map' → logprob: -7.138450622558594
    6. ' MAP' → logprob: -8.013450622558594
    7. 'INT' → logprob: -8.388450622558594
    8. 'M' → logprob: -9.263450622558594
    9. ' LIST' → logprob: -10.138450622558594
    10. 'MI' → logprob: -10.263450622558594

Token 473: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20167450606822968
    2. '():
' → logprob: -1.701674461364746
    3. '()' → logprob: -8.326674461364746
    4. ' ():' → logprob: -11.576674461364746
    5. '():

' → logprob: -12.201674461364746
    6. '():
' → logprob: -12.576674461364746
    7. '(' → logprob: -15.201674461364746
    8. ' ()' → logprob: -15.326674461364746
    9. '()>' → logprob: -15.451674461364746
    10. '();' → logprob: -16.076675415039062

Token 474: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.07126487791538239
    2. '():' → logprob: -2.6962649822235107
    3. '()' → logprob: -7.196264743804932
    4. '   ' → logprob: -7.946264743804932
    5. '):
' → logprob: -8.82126522064209
    6. 'return' → logprob: -11.19626522064209
    7. ':
' → logprob: -11.32126522064209
    8. '()
' → logprob: -11.57126522064209
    9. '):' → logprob: -11.57126522064209
    10. '()):
' → logprob: -12.07126522064209

Token 475: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003578929929062724
    2. ' return' → logprob: -6.378579139709473
    3. 'map' → logprob: -6.878579139709473
    4. 'list' → logprob: -7.253579139709473
    5. '   ' → logprob: -10.003579139709473
    6. '()' → logprob: -10.378579139709473
    7. '():
' → logprob: -10.378579139709473
    8. '():' → logprob: -11.878579139709473
    9. ':return' → logprob: -11.878579139709473
    10. ':
' → logprob: -12.753579139709473

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1032540798187256
    2. 'return' → logprob: -1.2282540798187256
    3. '):
' → logprob: -1.4782540798187256
    4. ' return' → logprob: -2.9782540798187256
    5. '):' → logprob: -3.3532540798187256
    6. ')' → logprob: -3.7282540798187256
    7. '():
' → logprob: -3.8532540798187256
    8. 'def' → logprob: -4.978254318237305
    9. '():' → logprob: -5.978254318237305
    10. ':
' → logprob: -6.228254318237305

Token 477: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016461296007037163
    2. ' return' → logprob: -4.891461372375488
    3. 'def' → logprob: -5.016461372375488
    4. '   ' → logprob: -6.141461372375488
    5. 'map' → logprob: -11.891461372375488
    6. '
' → logprob: -12.141461372375488
    7. '()' → logprob: -12.141461372375488
    8. ':return' → logprob: -12.641461372375488
    9. ')' → logprob: -13.266461372375488
    10. '():
' → logprob: -13.391461372375488

Token 478: ' one' (ID: 1001)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.18822486698627472
    2. 'list' → logprob: -2.0632247924804688
    3. ' map' → logprob: -3.6882247924804688
    4. '()' → logprob: -4.563224792480469
    5. 'lambda' → logprob: -5.063224792480469
    6. ' list' → logprob: -7.188224792480469
    7. 'int' → logprob: -7.438224792480469
    8. '():' → logprob: -7.563224792480469
    9. '().' → logprob: -7.938224792480469
    10. 'line' → logprob: -9.438224792480469

Token 479: ' line' (ID: 2543)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.9954469203948975
    2. '():' → logprob: -0.9954469203948975
    3. '()' → logprob: -1.7454469203948975
    4. '().' → logprob: -2.9954469203948975
    5. ' line' → logprob: -4.495447158813477
    6. '().__' → logprob: -5.370447158813477
    7. 'line' → logprob: -5.495447158813477
    8. '()[' → logprob: -5.495447158813477
    9. 'list' → logprob: -5.745447158813477
    10. 'def' → logprob: -6.495447158813477

Token 480: ' from' (ID: 591)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5424046516418457
    2. '()' → logprob: -0.9174046516418457
    3. '():' → logprob: -4.042404651641846
    4. '():
' → logprob: -6.792404651641846
    5. '()
' → logprob: -8.667404174804688
    6. '()[' → logprob: -10.167404174804688
    7. '().__' → logprob: -10.792404174804688
    8. 'def' → logprob: -10.792404174804688
    9. ' ()' → logprob: -11.042404174804688
    10. '()>' → logprob: -11.167404174804688

Token 481: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8755723834037781
    2. 'map' → logprob: -1.0005724430084229
    3. 'input' → logprob: -1.6255724430084229
    4. 'lambda' → logprob: -4.875572204589844
    5. ' map' → logprob: -5.750572204589844
    6. 'return' → logprob: -5.750572204589844
    7. ' input' → logprob: -6.000572204589844
    8. 'int' → logprob: -6.750572204589844
    9. ' list' → logprob: -7.375572204589844
    10. 'sys' → logprob: -8.250572204589844

Token 482: ' and' (ID: 326)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.22047030925750732
    2. '():' → logprob: -2.095470428466797
    3. '().' → logprob: -2.720470428466797
    4. '()' → logprob: -4.845470428466797
    5. '):
' → logprob: -7.595470428466797
    6. '   ' → logprob: -8.220470428466797
    7. 'def' → logprob: -8.970470428466797
    8. '):' → logprob: -9.845470428466797
    9. '():
' → logprob: -10.220470428466797
    10. '()
' → logprob: -10.345470428466797

Token 483: ' returns' (ID: 7377)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20434880256652832
    2. ' return' → logprob: -1.7043488025665283
    3. 'map' → logprob: -6.454348564147949
    4. ' map' → logprob: -6.704348564147949
    5. ' returns' → logprob: -9.57934856414795
    6. 'returns' → logprob: -10.57934856414795
    7. 'list' → logprob: -10.57934856414795
    8. '   ' → logprob: -12.20434856414795
    9. ' list' → logprob: -12.32934856414795
    10. 'split' → logprob: -14.20434856414795

Token 484: ' it' (ID: 480)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10283461213111877
    2. 'map' → logprob: -2.352834701538086
    3. ' list' → logprob: -6.102834701538086
    4. 'tuple' → logprob: -8.102834701538086
    5. ' map' → logprob: -9.602834701538086
    6. ' tuple' → logprob: -10.977834701538086
    7. '   ' → logprob: -14.227834701538086
    8. '(list' → logprob: -16.977834701538086
    9. '  ' → logprob: -17.602834701538086
    10. '
' → logprob: -17.727834701538086

Token 485: ' as' (ID: 472)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07299620658159256
    2. ' list' → logprob: -2.697996139526367
    3. '()' → logprob: -6.572996139526367
    4. 'map' → logprob: -6.697996139526367
    5. '().' → logprob: -8.322996139526367
    6. ' map' → logprob: -9.322996139526367
    7. 'tuple' → logprob: -9.947996139526367
    8. ' tuple' → logprob: -11.072996139526367
    9. '=list' → logprob: -11.947996139526367
    10. '(list' → logprob: -11.947996139526367

Token 486: ' a' (ID: 261)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31476572155952454
    2. 'map' → logprob: -1.3147656917572021
    3. ' list' → logprob: -6.814765930175781
    4. ' map' → logprob: -7.814765930175781
    5. 'tuple' → logprob: -13.314765930175781
    6. ' tuple' → logprob: -17.06476593017578
    7. '   ' → logprob: -18.43976593017578
    8. '	map' → logprob: -20.06476593017578
    9. ' ' → logprob: -20.68976593017578
    10. '  ' → logprob: -20.81476593017578

Token 487: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009173214435577393
    2. 'map' → logprob: -4.759173393249512
    3. ' list' → logprob: -7.509173393249512
    4. ' map' → logprob: -11.759173393249512
    5. 'tuple' → logprob: -12.884173393249512
    6. ' tuple' → logprob: -16.509172439575195
    7. '   ' → logprob: -18.384172439575195
    8. 'int' → logprob: -18.509172439575195
    9. 'List' → logprob: -19.634172439575195
    10. 'm' → logprob: -20.759172439575195

Token 488: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39381909370422363
    2. '(int' → logprob: -1.1438190937042236
    3. '(lambda' → logprob: -5.1438188552856445
    4. '(str' → logprob: -7.7688188552856445
    5. '(
' → logprob: -7.7688188552856445
    6. '()' → logprob: -9.018818855285645
    7. '(map' → logprob: -10.643818855285645
    8. '(list' → logprob: -10.893818855285645
    9. '(

' → logprob: -10.893818855285645
    10. 'int' → logprob: -11.768818855285645

Token 489: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007161272224038839
    2. '(int' → logprob: -7.250716209411621
    3. ' int' → logprob: -12.000716209411621
    4. ',int' → logprob: -19.250715255737305
    5. 'ints' → logprob: -19.250715255737305
    6. '=int' → logprob: -19.250715255737305
    7. 'str' → logprob: -19.500715255737305
    8. '```' → logprob: -19.875715255737305
    9. ':int' → logprob: -20.375715255737305
    10. '`' → logprob: -20.625715255737305

Token 490: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008371667005121708
    2. '().' → logprob: -5.008371829986572
    3. '():' → logprob: -6.758371829986572
    4. '(' → logprob: -8.758371353149414
    5. '   ' → logprob: -8.883371353149414
    6. '()
' → logprob: -9.883371353149414
    7. '(int' → logprob: -10.008371353149414
    8. ' ()' → logprob: -10.383371353149414
    9. '(),' → logprob: -10.758371353149414
    10. 'return' → logprob: -11.758371353149414

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06665702164173126
    2. 'return' → logprob: -2.816657066345215
    3. ' return' → logprob: -5.441657066345215
    4. 'def' → logprob: -8.566657066345215
    5. ')' → logprob: -9.816657066345215
    6. '    
' → logprob: -10.816657066345215
    7. '()' → logprob: -10.816657066345215
    8. '()
' → logprob: -11.066657066345215
    9. '):
' → logprob: -11.441657066345215
    10. '
' → logprob: -11.441657066345215

Token 492: ' :' (ID: 712)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024320175871253014
    2. 'def' → logprob: -4.399320125579834
    3. '   ' → logprob: -5.024320125579834
    4. ' return' → logprob: -5.274320125579834
    5. 'map' → logprob: -11.149320602416992
    6. 'm' → logprob: -12.274320602416992
    7. ')' → logprob: -12.649320602416992
    8. ' ' → logprob: -12.899320602416992
    9. ':return' → logprob: -12.899320602416992
    10. ' def' → logprob: -13.274320602416992

Token 493: 'return' (ID: 1034)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011915304698050022
    2. 'return' → logprob: -4.51191520690918
    3. '   ' → logprob: -7.63691520690918
    4. 'int' → logprob: -8.63691520690918
    5. 'lambda' → logprob: -8.76191520690918
    6. ' map' → logprob: -10.13691520690918
    7. 'list' → logprob: -12.01191520690918
    8. 'def' → logprob: -13.26191520690918
    9. ' return' → logprob: -13.76191520690918
    10. 'm' → logprob: -13.76191520690918

Token 494: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09979355335235596
    2. '():' → logprob: -2.4747934341430664
    3. '(' → logprob: -4.974793434143066
    4. 'return' → logprob: -6.599793434143066
    5. '(int' → logprob: -7.099793434143066
    6. '().' → logprob: -7.724793434143066
    7. '(map' → logprob: -8.474793434143066
    8. 'int' → logprob: -8.599793434143066
    9. 'map' → logprob: -8.724793434143066
    10. '   ' → logprob: -9.099793434143066

Token 495: ' A' (ID: 355)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00012403888104017824
    2. ' map' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.375123977661133
    4. ' ' → logprob: -17.125123977661133
    5. '  ' → logprob: -17.375123977661133
    6. 'list' → logprob: -18.000123977661133
    7. '	map' → logprob: -18.875123977661133
    8. 'm' → logprob: -19.000123977661133
    9. '(map' → logprob: -19.875123977661133
    10. 'mapped' → logprob: -21.125123977661133

Token 496: ' tuple' (ID: 31311)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1430676430463791
    2. 'map' → logprob: -2.0180675983428955
    3. 'int' → logprob: -8.018067359924316
    4. ' int' → logprob: -10.018067359924316
    5. '(map' → logprob: -12.018067359924316
    6. ' ' → logprob: -12.393067359924316
    7. 'm' → logprob: -13.393067359924316
    8. 'lambda' → logprob: -13.518067359924316
    9. 'list' → logprob: -14.268067359924316
    10. ' lambda' → logprob: -14.268067359924316

Token 497: ' of' (ID: 328)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.34897923469543457
    2. '(' → logprob: -1.7239792346954346
    3. 'map' → logprob: -3.0989792346954346
    4. '=' → logprob: -3.2239792346954346
    5. '(int' → logprob: -4.7239789962768555
    6. ' =' → logprob: -4.8489789962768555
    7. '(tuple' → logprob: -4.8489789962768555
    8. '(
' → logprob: -5.9739789962768555
    9. '(*' → logprob: -7.2239789962768555
    10. 'return' → logprob: -7.3489789962768555

Token 498: ' integers' (ID: 54912)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.054983269423246384
    2. 'int' → logprob: -3.054983377456665
    3. ' map' → logprob: -5.304983139038086
    4. 'ints' → logprob: -7.429983139038086
    5. '(int' → logprob: -7.554983139038086
    6. ' int' → logprob: -8.929983139038086
    7. '(map' → logprob: -9.679983139038086
    8. '[int' → logprob: -10.304983139038086
    9. ' ints' → logprob: -10.429983139038086
    10. 'inte' → logprob: -11.304983139038086

Token 499: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016100767999887466
    2. '().' → logprob: -5.891100883483887
    3. '(map' → logprob: -6.016100883483887
    4. '()
' → logprob: -6.266100883483887
    5. '():' → logprob: -6.266100883483887
    6. ' =' → logprob: -6.641100883483887
    7. '   ' → logprob: -7.016100883483887
    8. '=' → logprob: -7.516100883483887
    9. '(*' → logprob: -7.516100883483887
    10. '(),' → logprob: -7.641100883483887

Token 500: ' the' (ID: 290)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.016210438683629036
    2. ' map' → logprob: -4.141210556030273
    3. 'int' → logprob: -8.766210556030273
    4. 'input' → logprob: -12.016210556030273
    5. '(map' → logprob: -12.016210556030273
    6. '   ' → logprob: -12.766210556030273
    7. ' ' → logprob: -13.641210556030273
    8. ' int' → logprob: -14.141210556030273
    9. '	map' → logprob: -14.516210556030273
    10. '*' → logprob: -14.641210556030273

Token 501: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02814924530684948
    2. ' map' → logprob: -3.903149127960205
    3. 'input' → logprob: -4.903149127960205
    4. ' input' → logprob: -9.653149604797363
    5. 'int' → logprob: -10.653149604797363
    6. 'tuple' → logprob: -10.903149604797363
    7. '(map' → logprob: -11.278149604797363
    8. 'list' → logprob: -11.528149604797363
    9. 'line' → logprob: -11.778149604797363
    10. ' ' → logprob: -12.153149604797363

Token 502: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034177739173173904
    2. '().' → logprob: -3.409177780151367
    3. '(' → logprob: -8.409177780151367
    4. '())' → logprob: -9.284177780151367
    5. '()
' → logprob: -10.159177780151367
    6. ')' → logprob: -10.409177780151367
    7. '()]' → logprob: -10.409177780151367
    8. ' ()' → logprob: -11.034177780151367
    9. '()`' → logprob: -11.034177780151367
    10. 'map' → logprob: -11.159177780151367

Token 503: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005507661495357752
    2. '().' → logprob: -5.880507469177246
    3. '(' → logprob: -6.755507469177246
    4. '(map' → logprob: -7.755507469177246
    5. '()
' → logprob: -8.380507469177246
    6. 'map' → logprob: -8.755507469177246
    7. '())' → logprob: -9.005507469177246
    8. ')' → logprob: -9.130507469177246
    9. '   ' → logprob: -9.380507469177246
    10. '(*' → logprob: -9.630507469177246

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05664953589439392
    2. 'return' → logprob: -2.9316494464874268
    3. '():
' → logprob: -7.306649684906006
    4. ' return' → logprob: -7.431649684906006
    5. '):
' → logprob: -8.431649208068848
    6. '():' → logprob: -9.556649208068848
    7. '()' → logprob: -9.931649208068848
    8. ')' → logprob: -10.306649208068848
    9. ':
' → logprob: -10.431649208068848
    10. '()
' → logprob: -10.556649208068848

Token 505: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3577434718608856
    2. '   ' → logprob: -1.232743501663208
    3. ' return' → logprob: -4.857743263244629
    4. '()
' → logprob: -7.732743263244629
    5. '()' → logprob: -8.732743263244629
    6. 'def' → logprob: -8.982743263244629
    7. '
' → logprob: -9.107743263244629
    8. '():
' → logprob: -9.107743263244629
    9. '():' → logprob: -9.232743263244629
    10. '):
' → logprob: -9.482743263244629

Token 506: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015310514718294144
    2. '   ' → logprob: -6.50153112411499
    3. ' return' → logprob: -10.501530647277832
    4. 'map' → logprob: -13.876530647277832
    5. '
' → logprob: -16.00153160095215
    6. 'def' → logprob: -16.25153160095215
    7. '    
' → logprob: -17.25153160095215
    8. '  ' → logprob: -17.50153160095215
    9. '	return' → logprob: -18.12653160095215
    10. ' ' → logprob: -18.75153160095215

Token 507: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004372254479676485
    2. 'map' → logprob: -7.750437259674072
    3. ' return' → logprob: -12.250436782836914
    4. '   ' → logprob: -13.250436782836914
    5. '  ' → logprob: -19.500436782836914
    6. 'm' → logprob: -19.750436782836914
    7. '    
' → logprob: -19.750436782836914
    8. ' ' → logprob: -19.750436782836914
    9. '	return' → logprob: -19.875436782836914
    10. '
' → logprob: -20.125436782836914

Token 508: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1472419600977446e-06
    2. ' map' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.750001907348633
    4. 'tuple' → logprob: -18.375001907348633
    5. '  ' → logprob: -18.500001907348633
    6. '	map' → logprob: -20.125001907348633
    7. '(map' → logprob: -20.625001907348633
    8. ' ' → logprob: -21.125001907348633
    9. '.map' → logprob: -23.500001907348633
    10. '    ' → logprob: -23.625001907348633

Token 509: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012439649435691535
    2. '(' → logprob: -9.000123977661133
    3. 'int' → logprob: -14.000123977661133
    4. '<int' → logprob: -17.000123977661133
    5. '(INT' → logprob: -17.500123977661133
    6. '(
' → logprob: -18.500123977661133
    7. ',int' → logprob: -18.875123977661133
    8. '=int' → logprob: -19.250123977661133
    9. '[int' → logprob: -19.250123977661133
    10. ' (' → logprob: -19.375123977661133

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.165471076965332
    2. ',input' → logprob: -1.290471076965332
    3. '(input' → logprob: -1.415471076965332
    4. 'input' → logprob: -1.790471076965332
    5. '(' → logprob: -6.040471076965332
    6. '(),' → logprob: -7.415471076965332
    7. ' input' → logprob: -8.790471076965332
    8. ')' → logprob: -8.915471076965332
    9. ' (' → logprob: -9.915471076965332
    10. ' ,' → logprob: -10.415471076965332

Token 511: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '(input' → logprob: -17.75020408630371
    4. '   ' → logprob: -18.50020408630371
    5. ' ' → logprob: -18.87520408630371
    6. 'list' → logprob: -20.37520408630371
    7. '  ' → logprob: -20.50020408630371
    8. '	input' → logprob: -20.87520408630371
    9. '.input' → logprob: -22.00020408630371
    10. ',input' → logprob: -22.00020408630371

Token 512: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.630610641877865e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -14.750006675720215
    4. '(' → logprob: -18.3750057220459
    5. '())' → logprob: -19.2500057220459
    6. ')' → logprob: -20.7500057220459
    7. '()
' → logprob: -21.0000057220459
    8. '().'' → logprob: -21.1250057220459
    9. '()?.' → logprob: -21.3750057220459
    10. '()[' → logprob: -21.5000057220459

Token 513: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001172129064798355
    2. 'strip' → logprob: -6.751172065734863
    3. '().' → logprob: -13.501172065734863
    4. ' split' → logprob: -15.251172065734863
    5. 'rstrip' → logprob: -15.876172065734863
    6. '(split' → logprob: -17.12617301940918
    7. '.split' → logprob: -17.75117301940918
    8. 'spl' → logprob: -18.00117301940918
    9. ' strip' → logprob: -20.12617301940918
    10. ')' → logprob: -20.50117301940918

Token 514: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -6.44443862256594e-05
    2. '()' → logprob: -10.125064849853516
    3. ')' → logprob: -10.750064849853516
    4. '()))' → logprob: -13.125064849853516
    5. ' ())' → logprob: -14.875064849853516
    6. '())
' → logprob: -15.125064849853516
    7. '(' → logprob: -15.250064849853516
    8. '().' → logprob: -17.250064849853516
    9. '();)' → logprob: -18.250064849853516
    10. '()]' → logprob: -18.500064849853516

Token 515: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002214172709500417
    2. '<|end|>' → logprob: -8.875221252441406
    3. '```' → logprob: -10.250221252441406
    4. ')' → logprob: -11.000221252441406
    5. '[]' → logprob: -11.375221252441406
    6. '[' → logprob: -12.375221252441406
    7. '
' → logprob: -12.625221252441406
    8. '#' → logprob: -12.875221252441406
    9. 'from' → logprob: -13.375221252441406
    10. '\' → logprob: -14.125221252441406

Token 516: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.021399905905127525
    2. 'STR' → logprob: -4.021399974822998
    3. 'list' → logprob: -5.896399974822998
    4. ' LIST' → logprob: -8.64639949798584
    5. 'LS' → logprob: -9.77139949798584
    6. 'S' → logprob: -9.77139949798584
    7. 'L' → logprob: -9.89639949798584
    8. 'YES' → logprob: -10.52139949798584
    9. 'List' → logprob: -10.77139949798584
    10. 'STRING' → logprob: -11.02139949798584

Token 517: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030015552416443825
    2. '():
' → logprob: -3.530015468597412
    3. '()' → logprob: -8.28001594543457
    4. ' ():' → logprob: -12.03001594543457
    5. '():
' → logprob: -12.53001594543457
    6. '():

' → logprob: -14.53001594543457
    7. ' ()' → logprob: -14.53001594543457
    8. '(' → logprob: -15.28001594543457
    9. '()`' → logprob: -15.90501594543457
    10. '()>' → logprob: -16.03001594543457

Token 518: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14641940593719482
    2. '):
' → logprob: -2.0214195251464844
    3. '(n' → logprob: -6.771419525146484
    4. '=' → logprob: -6.896419525146484
    5. ')' → logprob: -7.271419525146484
    6. '=None' → logprob: -7.521419525146484
    7. '(N' → logprob: -8.271419525146484
    8. '=N' → logprob: -10.521419525146484
    9. '():' → logprob: -11.396419525146484
    10. 'n' → logprob: -11.521419525146484

Token 519: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39788907766342163
    2. '):
' → logprob: -1.1478891372680664
    3. '():' → logprob: -5.022889137268066
    4. '():
' → logprob: -6.147889137268066
    5. '()):
' → logprob: -6.772889137268066
    6. '()' → logprob: -7.147889137268066
    7. '(' → logprob: -9.147889137268066
    8. ')' → logprob: -9.647889137268066
    9. ' ):' → logprob: -10.522889137268066
    10. '(N' → logprob: -10.647889137268066

Token 520: '   ' (ID: 271)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.0084067583084106
    2. '():' → logprob: -1.2584067583084106
    3. 'def' → logprob: -1.6334067583084106
    4. ':' → logprob: -3.008406639099121
    5. '   ' → logprob: -3.633406639099121
    6. '(' → logprob: -4.133406639099121
    7. '):' → logprob: -4.508406639099121
    8. 'if' → logprob: -4.508406639099121
    9. '():
' → logprob: -4.508406639099121
    10. 's' → logprob: -4.758406639099121

Token 521: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3069552779197693
    2. 'return' → logprob: -1.806955337524414
    3. 'def' → logprob: -2.431955337524414
    4. 's' → logprob: -4.681955337524414
    5. '   ' → logprob: -7.056955337524414
    6. ':' → logprob: -7.556955337524414
    7. ' if' → logprob: -7.681955337524414
    8. ':
' → logprob: -7.806955337524414
    9. ' return' → logprob: -8.306955337524414
    10. '():' → logprob: -9.556955337524414

Token 522: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8163040280342102
    2. '"""
' → logprob: -1.0663039684295654
    3. '   ' → logprob: -1.6913039684295654
    4. 'def' → logprob: -4.1913042068481445
    5. ' if' → logprob: -4.8163042068481445
    6. '"""' → logprob: -5.9413042068481445
    7. 'return' → logprob: -6.0663042068481445
    8. ' """
' → logprob: -8.066304206848145
    9. '""' → logprob: -8.566304206848145
    10. ' return' → logprob: -8.941304206848145

Token 523: ' Reads' (ID: 88839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03898116573691368
    2. 'if' → logprob: -3.2889811992645264
    3. 'return' → logprob: -7.163980960845947
    4. ' def' → logprob: -9.288981437683105
    5. ' if' → logprob: -10.163981437683105
    6. '   ' → logprob: -10.788981437683105
    7. 'line' → logprob: -12.163981437683105
    8. '"""' → logprob: -13.163981437683105
    9. '"""
' → logprob: -13.163981437683105
    10. ' return' → logprob: -13.413981437683105

Token 524: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2559010088443756
    2. '(N' → logprob: -1.7559009790420532
    3. '():' → logprob: -3.5059010982513428
    4. '():
' → logprob: -4.880900859832764
    5. 'list' → logprob: -5.630900859832764
    6. 'None' → logprob: -6.255900859832764
    7. '()
' → logprob: -6.255900859832764
    8. '(n' → logprob: -6.505900859832764
    9. 'N' → logprob: -6.630900859832764
    10. '(None' → logprob: -7.130900859832764

Token 525: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.297277569770813
    2. ' list' → logprob: -2.0472774505615234
    3. 'line' → logprob: -2.4222774505615234
    4. ' line' → logprob: -3.4222774505615234
    5. '()' → logprob: -6.297277450561523
    6. 'range' → logprob: -6.422277450561523
    7. 'None' → logprob: -7.422277450561523
    8. ')' → logprob: -7.672277450561523
    9. '   ' → logprob: -7.797277450561523
    10. ' range' → logprob: -7.922277450561523

Token 526: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0056808567605912685
    2. '(' → logprob: -5.255681037902832
    3. '():' → logprob: -8.630681037902832
    4. '()
' → logprob: -9.880681037902832
    5. ' ()' → logprob: -10.130681037902832
    6. '().' → logprob: -10.255681037902832
    7. '(
' → logprob: -10.505681037902832
    8. 'def' → logprob: -10.630681037902832
    9. '()[' → logprob: -10.755681037902832
    10. '():
' → logprob: -11.255681037902832

Token 527: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8408464789390564
    2. 'ints' → logprob: -1.0908465385437012
    3. 'inte' → logprob: -1.5908465385437012
    4. ' integers' → logprob: -3.965846538543701
    5. '(int' → logprob: -4.715846538543701
    6. '()' → logprob: -7.340846538543701
    7. ' ints' → logprob: -8.465846061706543
    8. '():
' → logprob: -9.840846061706543
    9. '():' → logprob: -10.090846061706543
    10. '[int' → logprob: -10.965846061706543

Token 528: ' from' (ID: 591)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3264199197292328
    2. '()' → logprob: -1.3264199495315552
    3. '(N' → logprob: -4.826419830322266
    4. '(' → logprob: -5.576419830322266
    5. '():
' → logprob: -6.951419830322266
    6. 'def' → logprob: -9.701419830322266
    7. '()
' → logprob: -9.951419830322266
    8. '().' → logprob: -10.201419830322266
    9. '(None' → logprob: -10.451419830322266
    10. '();' → logprob: -10.451419830322266

Token 529: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02042299136519432
    2. ' input' → logprob: -4.39542293548584
    3. '(input' → logprob: -5.14542293548584
    4. '()' → logprob: -7.27042293548584
    5. 'None' → logprob: -7.89542293548584
    6. ')' → logprob: -8.02042293548584
    7. '(N' → logprob: -8.64542293548584
    8. 'the' → logprob: -9.27042293548584
    9. '(None' → logprob: -9.77042293548584
    10. '():' → logprob: -10.02042293548584

Token 530: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5794087648391724
    2. '():' → logprob: -0.8294087648391724
    3. '():
' → logprob: -6.079408645629883
    4. '(' → logprob: -8.079408645629883
    5. '().' → logprob: -8.079408645629883
    6. '(N' → logprob: -8.704408645629883
    7. '()
' → logprob: -8.829408645629883
    8. '(None' → logprob: -9.454408645629883
    9. ' ()' → logprob: -9.954408645629883
    10. '(),' → logprob: -10.829408645629883

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5493462085723877
    2. '(N' → logprob: -1.5493462085723877
    3. 'def' → logprob: -1.9243462085723877
    4. '():' → logprob: -3.4243462085723877
    5. '()' → logprob: -4.799345970153809
    6. '):' → logprob: -5.049345970153809
    7. '():
' → logprob: -5.424345970153809
    8. ')' → logprob: -5.799345970153809
    9. '):
' → logprob: -5.799345970153809
    10. 'return' → logprob: -6.424345970153809

Token 532: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7571961879730225
    2. '   ' → logprob: -1.2571961879730225
    3. 'def' → logprob: -1.6321961879730225
    4. 'return' → logprob: -3.6321961879730225
    5. 'line' → logprob: -5.132196426391602
    6. ' if' → logprob: -5.257196426391602
    7. 'n' → logprob: -5.507196426391602
    8. 'N' → logprob: -5.757196426391602
    9. 's' → logprob: -6.882196426391602
    10. ')' → logprob: -7.007196426391602

Token 533: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.47784948348999023
    2. 'def' → logprob: -0.9778494834899902
    3. 'return' → logprob: -5.97784948348999
    4. 'None' → logprob: -7.72784948348999
    5. 'Optional' → logprob: -8.852849960327148
    6. 'if' → logprob: -8.852849960327148
    7. ' def' → logprob: -8.852849960327148
    8. 'N' → logprob: -9.477849960327148
    9. 'params' → logprob: -9.602849960327148
    10. 'list' → logprob: -9.977849960327148

Token 534: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0025328563060611486
    2. ' N' → logprob: -6.002532958984375
    3. 'None' → logprob: -10.127532958984375
    4. '   ' → logprob: -11.877532958984375
    5. ')' → logprob: -12.627532958984375
    6. ' None' → logprob: -13.127532958984375
    7. '	N' → logprob: -13.877532958984375
    8. 'self' → logprob: -14.252532958984375
    9. '):
' → logprob: -14.377532958984375
    10. ' ' → logprob: -14.377532958984375

Token 535: ':' (ID: 25)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.0021240918431431055
    2. '=' → logprob: -6.502124309539795
    3. '):' → logprob: -7.502124309539795
    4. '):
' → logprob: -10.252123832702637
    5. ':' → logprob: -10.627123832702637
    6. 'None' → logprob: -12.502123832702637
    7. '():' → logprob: -12.752123832702637
    8. ' =' → logprob: -13.752123832702637
    9. '(None' → logprob: -13.877123832702637
    10. '=False' → logprob: -14.502123832702637

Token 536: ' If' (ID: 1843)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3181847035884857
    2. ' None' → logprob: -1.318184733390808
    3. '=None' → logprob: -5.568184852600098
    4. 'If' → logprob: -7.693184852600098
    5. 'Optional' → logprob: -7.818184852600098
    6. ' Optional' → logprob: -9.318184852600098
    7. '(None' → logprob: -9.693184852600098
    8. '<|end|>' → logprob: -10.068184852600098
    9. ' If' → logprob: -11.693184852600098
    10. 'int' → logprob: -12.193184852600098

Token 537: ' None' (ID: 4662)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0038505515549331903
    2. ' N' → logprob: -6.00385046005249
    3. 'None' → logprob: -6.75385046005249
    4. ' not' → logprob: -8.878850936889648
    5. ' None' → logprob: -10.003850936889648
    6. 'not' → logprob: -10.753850936889648
    7. 'Not' → logprob: -13.503850936889648
    8. '
' → logprob: -15.753850936889648
    9. '	N' → logprob: -16.75385093688965
    10. '   ' → logprob: -16.87885093688965

Token 538: ',' (ID: 11)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6450337171554565
    2. '=None' → logprob: -0.8950337171554565
    3. ':' → logprob: -3.020033836364746
    4. ',' → logprob: -5.145033836364746
    5. '):' → logprob: -5.145033836364746
    6. '):
' → logprob: -6.645033836364746
    7. ':
' → logprob: -7.145033836364746
    8. 'is' → logprob: -7.145033836364746
    9. '=' → logprob: -7.270033836364746
    10. '():' → logprob: -7.395033836364746

Token 539: ' reads' (ID: 31523)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3287370204925537
    2. ' None' → logprob: -1.4537370204925537
    3. ' return' → logprob: -4.078737258911133
    4. ' reads' → logprob: -5.078737258911133
    5. 'return' → logprob: -5.453737258911133
    6. '   ' → logprob: -5.578737258911133
    7. 'def' → logprob: -6.328737258911133
    8. ' read' → logprob: -6.328737258911133
    9. ' returns' → logprob: -6.328737258911133
    10. 'read' → logprob: -6.578737258911133

Token 540: ' one' (ID: 1001)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.266919493675232
    2. 'None' → logprob: -1.266919493675232
    3. '()' → logprob: -2.0169196128845215
    4. 'a' → logprob: -2.3919196128845215
    5. 'one' → logprob: -2.6419196128845215
    6. ' None' → logprob: -2.7669196128845215
    7. ' one' → logprob: -3.0169196128845215
    8. ' the' → logprob: -4.7669196128845215
    9. 'the' → logprob: -4.7669196128845215
    10. ' an' → logprob: -5.7669196128845215

Token 541: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02421964704990387
    2. ' line' → logprob: -3.7742197513580322
    3. '()' → logprob: -7.649219512939453
    4. '
' → logprob: -8.149219512939453
    5. '_line' → logprob: -10.024219512939453
    6. '()
' → logprob: -10.274219512939453
    7. '   ' → logprob: -10.274219512939453
    8. 'list' → logprob: -10.649219512939453
    9. '().' → logprob: -11.274219512939453
    10. 'return' → logprob: -11.274219512939453

Token 542: ' and' (ID: 326)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.599352240562439
    2. '   ' → logprob: -1.974352240562439
    3. '()' → logprob: -1.974352240562439
    4. '():' → logprob: -3.3493523597717285
    5. '()
' → logprob: -3.7243523597717285
    6. '=' → logprob: -3.7243523597717285
    7. ' and' → logprob: -4.0993523597717285
    8. '=None' → logprob: -4.2243523597717285
    9. '.' → logprob: -4.4743523597717285
    10. '();' → logprob: -4.5993523597717285

Token 543: ' splits' (ID: 76848)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'returns' → logprob: -0.49409255385398865
    2. ' returns' → logprob: -0.994092583656311
    3. 'spl' → logprob: -4.7440924644470215
    4. ' splits' → logprob: -4.8690924644470215
    5. 'return' → logprob: -6.2440924644470215
    6. 'reads' → logprob: -7.1190924644470215
    7. ' reads' → logprob: -8.49409294128418
    8. ' parses' → logprob: -8.61909294128418
    9. 'def' → logprob: -8.86909294128418
    10. 'split' → logprob: -9.49409294128418

Token 544: ' into' (ID: 1511)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5039104223251343
    2. '().' → logprob: -1.0039104223251343
    3. '()
' → logprob: -3.628910541534424
    4. '();' → logprob: -6.128910541534424
    5. '.' → logprob: -8.878910064697266
    6. '():' → logprob: -8.878910064697266
    7. '(),' → logprob: -9.253910064697266
    8. '().
' → logprob: -9.503910064697266
    9. ';' → logprob: -9.753910064697266
    10. '   ' → logprob: -10.128910064697266

Token 545: ' a' (ID: 261)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.4002651274204254
    2. 'ints' → logprob: -1.525265097618103
    3. ' integers' → logprob: -3.0252652168273926
    4. 'None' → logprob: -3.5252652168273926
    5. 'list' → logprob: -4.400265216827393
    6. 'tokens' → logprob: -4.400265216827393
    7. 'int' → logprob: -4.900265216827393
    8. 'values' → logprob: -7.150265216827393
    9. ' None' → logprob: -7.650265216827393
    10. 'a' → logprob: -7.775265216827393

Token 546: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04862120375037193
    2. ' list' → logprob: -3.04862117767334
    3. '
' → logprob: -11.42362117767334
    4. 'int' → logprob: -11.67362117767334
    5. 'lst' → logprob: -12.04862117767334
    6. 'List' → logprob: -13.17362117767334
    7. 'LIST' → logprob: -13.29862117767334
    8. ')' → logprob: -13.92362117767334
    9. 'ints' → logprob: -14.04862117767334
    10. 'inte' → logprob: -14.29862117767334

Token 547: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5220345854759216
    2. '().' → logprob: -1.1470346450805664
    3. '()
' → logprob: -3.0220346450805664
    4. '():' → logprob: -4.022034645080566
    5. '();' → logprob: -5.147034645080566
    6. '   ' → logprob: -5.272034645080566
    7. '(),' → logprob: -5.647034645080566
    8. '():
' → logprob: -5.772034645080566
    9. '.' → logprob: -5.897034645080566
    10. '().
' → logprob: -6.772034645080566

Token 548: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1555284708738327
    2. 'ints' → logprob: -2.1555285453796387
    3. 'inte' → logprob: -3.6555285453796387
    4. ' integers' → logprob: -6.155528545379639
    5. ' int' → logprob: -8.78052806854248
    6. ' ints' → logprob: -9.90552806854248
    7. '[int' → logprob: -11.65552806854248
    8. '(int' → logprob: -12.28052806854248
    9. '=int' → logprob: -12.90552806854248
    10. ':int' → logprob: -13.15552806854248

Token 549: '.
' (ID: 558)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.30861255526542664
    2. '.' → logprob: -2.558612585067749
    3. '().' → logprob: -2.933612585067749
    4. '();' → logprob: -3.058612585067749
    5. '()
' → logprob: -3.808612585067749
    6. '   ' → logprob: -4.05861234664917
    7. '()' → logprob: -4.30861234664917
    8. '():' → logprob: -4.43361234664917
    9. '.
' → logprob: -4.93361234664917
    10. ',' → logprob: -5.18361234664917

Token 550: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032717071007937193
    2. 'def' → logprob: -6.628271579742432
    3. ')' → logprob: -6.878271579742432
    4. '):
' → logprob: -8.25327205657959
    5. '
' → logprob: -8.75327205657959
    6. '):' → logprob: -8.75327205657959
    7. 'If' → logprob: -9.25327205657959
    8. ':' → logprob: -9.87827205657959
    9. '    
' → logprob: -9.87827205657959
    10. ',' → logprob: -10.62827205657959

Token 551: ' Otherwise' (ID: 33987)
  Prédit: 'If'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'If' → logprob: -0.2764655351638794
    2. '   ' → logprob: -1.5264655351638794
    3. ' If' → logprob: -4.02646541595459
    4. 'Otherwise' (adapté à ' Otherwise') → logprob: -5.65146541595459
    5. 'if' → logprob: -7.15146541595459
    6. ' ' → logprob: -7.15146541595459
    7. '
' → logprob: -7.90146541595459
    8. ' if' → logprob: -7.90146541595459
    9. ' Otherwise' → logprob: -8.02646541595459
    10. '    ' → logprob: -9.65146541595459

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39203688502311707
    2. ':' → logprob: -1.2670369148254395
    3. ' reads' → logprob: -4.0170369148254395
    4. '   ' → logprob: -4.1420369148254395
    5. ':
' → logprob: -5.0170369148254395
    6. ':return' → logprob: -7.7670369148254395
    7. ' returns' → logprob: -8.017036437988281
    8. ' if' → logprob: -8.267036437988281
    9. 'Reads' → logprob: -8.392036437988281
    10. ',
' → logprob: -8.517036437988281

Token 553: ' reads' (ID: 31523)
  Prédit: ' reads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reads' → logprob: -0.6162441968917847
    2. ' returns' → logprob: -1.8662441968917847
    3. 'reads' → logprob: -1.9912441968917847
    4. 'returns' → logprob: -2.616244316101074
    5. '
' → logprob: -3.741244316101074
    6. '[' → logprob: -4.366244316101074
    7. 'Reads' → logprob: -4.616244316101074
    8. 'def' → logprob: -4.616244316101074
    9. ' generates' → logprob: -4.866244316101074
    10. 'return' → logprob: -5.241244316101074

Token 554: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04152332618832588
    2. '[N' → logprob: -3.7915232181549072
    3. ' N' → logprob: -4.041523456573486
    4. ' [' → logprob: -8.666522979736328
    5. '
' → logprob: -9.416522979736328
    6. 'int' → logprob: -9.541522979736328
    7. '[' → logprob: -9.666522979736328
    8. 'a' → logprob: -9.916522979736328
    9. '[int' → logprob: -10.416522979736328
    10. ' a' → logprob: -11.166522979736328

Token 555: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.09058427810668945
    2. 'lines' → logprob: -2.4655842781066895
    3. '()' → logprob: -6.7155842781066895
    4. '_lines' → logprob: -8.465583801269531
    5. ' times' → logprob: -9.715583801269531
    6. 'for' → logprob: -10.215583801269531
    7. 'times' → logprob: -10.590583801269531
    8. '()
' → logprob: -10.715583801269531
    9. '
' → logprob: -11.090583801269531
    10. ')' → logprob: -11.340583801269531

Token 556: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06529361009597778
    2. 'and' → logprob: -3.315293550491333
    3. '()' → logprob: -4.190293788909912
    4. ' for' → logprob: -4.940293788909912
    5. '   ' → logprob: -6.315293788909912
    6. ' ()' → logprob: -7.190293788909912
    7. 'for' → logprob: -7.190293788909912
    8. 'def' → logprob: -7.815293788909912
    9. ' return' → logprob: -8.065293312072754
    10. ',' → logprob: -8.690293312072754

Token 557: ' returns' (ID: 7377)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19455823302268982
    2. ' return' → logprob: -2.6945581436157227
    3. ' returns' → logprob: -2.9445581436157227
    4. 'returns' → logprob: -3.5695581436157227
    5. '[int' → logprob: -4.444558143615723
    6. ' [' → logprob: -4.819558143615723
    7. '[' → logprob: -5.069558143615723
    8. 'list' → logprob: -7.319558143615723
    9. 'int' → logprob: -8.069558143615723
    10. '   ' → logprob: -8.819558143615723

Token 558: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2835143804550171
    2. '[int' → logprob: -2.2835144996643066
    3. '[List' → logprob: -3.1585144996643066
    4. '[a' → logprob: -3.4085144996643066
    5. '[list' → logprob: -3.5335144996643066
    6. '[n' → logprob: -4.033514499664307
    7. '[N' → logprob: -4.533514499664307
    8. ' [' → logprob: -6.158514499664307
    9. '[input' → logprob: -6.533514499664307
    10. '[num' → logprob: -6.783514499664307

Token 559: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.250006079673767
    2. '[N' → logprob: -1.250006079673767
    3. '[a' → logprob: -1.250006079673767
    4. '[list' → logprob: -3.0000061988830566
    5. '[n' → logprob: -3.7500061988830566
    6. ' [' → logprob: -4.250006198883057
    7. '[List' → logprob: -4.250006198883057
    8. '[int' → logprob: -4.500006198883057
    9. '[id' → logprob: -5.250006198883057
    10. '[
' → logprob: -5.500006198883057

Token 560: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7229400277137756
    2. 'of' → logprob: -0.7229400277137756
    3. '[' → logprob: -3.722939968109131
    4. '   ' → logprob: -6.597939968109131
    5. '[]' → logprob: -6.847939968109131
    6. '[
' → logprob: -7.097939968109131
    7. '[int' → logprob: -7.972939968109131
    8. '[N' → logprob: -8.472940444946289
    9. '```' → logprob: -8.597940444946289
    10. '
' → logprob: -8.847940444946289

Token 561: ' integers' (ID: 54912)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.4594396650791168
    2. 'inte' → logprob: -1.4594396352767944
    3. 'int' → logprob: -2.084439754486084
    4. ' integers' → logprob: -4.709439754486084
    5. 'INT' → logprob: -6.709439754486084
    6. '[int' → logprob: -7.209439754486084
    7. 'N' → logprob: -8.209439277648926
    8. 'values' → logprob: -8.959439277648926
    9. 'lists' → logprob: -9.334439277648926
    10. ' int' → logprob: -9.959439277648926

Token 562: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008160737343132496
    2. '()
' → logprob: -5.758160591125488
    3. '().' → logprob: -6.758160591125488
    4. '[]' → logprob: -7.008160591125488
    5. '()[' → logprob: -7.133160591125488
    6. ' of' → logprob: -7.883160591125488
    7. 's' → logprob: -7.883160591125488
    8. ' ()' → logprob: -8.008160591125488
    9. 'of' → logprob: -8.258160591125488
    10. '[' → logprob: -9.133160591125488

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006074079312384129
    2. 'if' → logprob: -6.131073951721191
    3. '):
' → logprob: -6.756073951721191
    4. 'def' → logprob: -7.131073951721191
    5. ' if' → logprob: -7.506073951721191
    6. ')' → logprob: -8.131073951721191
    7. '
' → logprob: -8.631073951721191
    8. '):' → logprob: -8.631073951721191
    9. '():
' → logprob: -8.756073951721191
    10. '    
' → logprob: -8.881073951721191

Token 564: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038205066230148077
    2. 'if' → logprob: -6.128820419311523
    3. 'def' → logprob: -7.753820419311523
    4. '):
' → logprob: -8.003820419311523
    5. ' if' → logprob: -8.128820419311523
    6. ':' (adapté à ' :') → logprob: -8.628820419311523
    7. ')' → logprob: -9.128820419311523
    8. ':
' → logprob: -9.378820419311523
    9. '):' → logprob: -10.128820419311523
    10. '```' → logprob: -10.128820419311523

Token 565: 'return' (ID: 1034)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5821459293365479
    2. 'If' → logprob: -1.3321459293365479
    3. 'def' → logprob: -1.9571459293365479
    4. 'if' → logprob: -4.457145690917969
    5. ' None' → logprob: -5.207145690917969
    6. 'param' → logprob: -5.207145690917969
    7. 'Optional' → logprob: -5.332145690917969
    8. ' if' → logprob: -5.582145690917969
    9. ' def' → logprob: -5.957145690917969
    10. 'return' → logprob: -7.207145690917969

Token 566: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9171391129493713
    2. ':' → logprob: -1.0421390533447266
    3. '   ' → logprob: -2.6671390533447266
    4. '[]' → logprob: -3.7921390533447266
    5. ':
' → logprob: -3.9171390533447266
    6. ' list' → logprob: -3.9171390533447266
    7. 'list' → logprob: -4.417139053344727
    8. '=' → logprob: -4.667139053344727
    9. '[' → logprob: -4.667139053344727
    10. '[List' → logprob: -4.667139053344727

Token 567: ' List' (ID: 2655)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7128265500068665
    2. 'list' → logprob: -0.9628265500068665
    3. ' list' → logprob: -2.8378264904022217
    4. '[int' → logprob: -3.4628264904022217
    5. ' [' → logprob: -4.212826728820801
    6. '[input' → logprob: -4.587826728820801
    7. '[' → logprob: -4.962826728820801
    8. '[List' → logprob: -5.712826728820801
    9. '[]' → logprob: -6.587826728820801
    10. 'LIST' → logprob: -8.3378267288208

Token 568: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06598196178674698
    2. '[int' → logprob: -3.690981864929199
    3. '[]' → logprob: -4.815981864929199
    4. ' of' → logprob: -4.940981864929199
    5. '[' → logprob: -5.190981864929199
    6. ' if' → logprob: -5.565981864929199
    7. ' =' → logprob: -5.940981864929199
    8. '[
' → logprob: -6.065981864929199
    9. '[List' → logprob: -6.315981864929199
    10. '```' → logprob: -6.940981864929199

Token 569: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007947287522256374
    2. '[int' → logprob: -5.2579474449157715
    3. 'ints' → logprob: -6.0079474449157715
    4. 'inte' → logprob: -9.132946968078613
    5. ' int' → logprob: -9.507946968078613
    6. 'lists' → logprob: -10.007946968078613
    7. 'list' → logprob: -11.257946968078613
    8. ' integers' → logprob: -12.257946968078613
    9. '(int' → logprob: -13.257946968078613
    10. ' ints' → logprob: -13.632946968078613

Token 570: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021314019337296486
    2. '()
' → logprob: -3.8963139057159424
    3. '(N' → logprob: -7.8963141441345215
    4. '(' → logprob: -8.896313667297363
    5. ' if' → logprob: -9.646313667297363
    6. 'if' → logprob: -9.646313667297363
    7. '(
' → logprob: -10.646313667297363
    8. '[]' → logprob: -10.896313667297363
    9. '   ' → logprob: -10.896313667297363
    10. 'def' → logprob: -11.271313667297363

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016670884797349572
    2. 'def' → logprob: -7.001667022705078
    3. '():' → logprob: -8.876667022705078
    4. '):
' → logprob: -9.126667022705078
    5. ':' → logprob: -9.126667022705078
    6. 'if' → logprob: -9.251667022705078
    7. ':
' → logprob: -9.751667022705078
    8. '():
' → logprob: -9.876667022705078
    9. '    
' → logprob: -10.251667022705078
    10. '
' → logprob: -10.251667022705078

Token 572: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006919730454683304
    2. 'if' → logprob: -5.131919860839844
    3. ' if' → logprob: -7.256919860839844
    4. '):
' → logprob: -9.631919860839844
    5. ':
' → logprob: -9.881919860839844
    6. 'def' → logprob: -10.131919860839844
    7. ':' → logprob: -10.506919860839844
    8. '```' → logprob: -10.631919860839844
    9. '
' → logprob: -10.881919860839844
    10. ')' → logprob: -11.381919860839844

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6937380433082581
    2. 'if' → logprob: -0.6937380433082581
    3. ' if' → logprob: -7.443737983703613
    4. '	if' → logprob: -12.443737983703613
    5. '```' → logprob: -13.943737983703613
    6. 'If' → logprob: -15.693737983703613
    7. 'def' → logprob: -15.818737983703613
    8. 'return' → logprob: -16.44373893737793
    9. '   ' → logprob: -16.69373893737793
    10. ' ' → logprob: -16.69373893737793

Token 574: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1875571544806007e-05
    2. '   ' → logprob: -11.500011444091797
    3. ' if' → logprob: -13.625011444091797
    4. 'return' → logprob: -14.500011444091797
    5. '```' → logprob: -18.250011444091797
    6. '	if' → logprob: -20.750011444091797
    7. '``' → logprob: -21.250011444091797
    8. 'ifs' → logprob: -22.000011444091797
    9. '
' → logprob: -22.125011444091797
    10. 'def' → logprob: -22.250011444091797

Token 575: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3868720829486847
    2. ' N' → logprob: -1.1368720531463623
    3. ' ' → logprob: -15.011872291564941
    4. ' not' → logprob: -15.011872291564941
    5. '   ' → logprob: -15.261872291564941
    6. '	N' → logprob: -15.386872291564941
    7. ' ' → logprob: -18.386871337890625
    8. '  ' → logprob: -18.511871337890625
    9. 'not' → logprob: -19.011871337890625
    10. '　' → logprob: -20.136871337890625

Token 576: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3868953287601471
    2. 'is' → logprob: -1.1368952989578247
    3. '==' → logprob: -10.761895179748535
    4. '=is' → logprob: -14.386895179748535
    5. '	is' → logprob: -14.386895179748535
    6. ')is' → logprob: -14.511895179748535
    7. '=None' → logprob: -14.886895179748535
    8. ')' → logprob: -15.136895179748535
    9. 'in' → logprob: -15.636895179748535
    10. ' ==' → logprob: -15.636895179748535

Token 577: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12692894041538239
    2. ' None' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.62692928314209
    4. '=None' → logprob: -15.50192928314209
    5. '_None' → logprob: -15.50192928314209
    6. '(None' → logprob: -16.876928329467773
    7. 'N' → logprob: -17.751928329467773
    8. ' ' → logprob: -18.501928329467773
    9. '.None' → logprob: -18.876928329467773
    10. ' not' → logprob: -19.251928329467773

Token 578: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11440861970186234
    2. ':
' → logprob: -2.2394087314605713
    3. '():' → logprob: -7.489408493041992
    4. '):' → logprob: -7.864408493041992
    5. '   ' → logprob: -7.989408493041992
    6. '():
' → logprob: -8.864408493041992
    7. '):
' → logprob: -9.114408493041992
    8. '       ' → logprob: -10.114408493041992
    9. ':return' → logprob: -12.614408493041992
    10. ')' → logprob: -12.989408493041992

Token 579: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41210636496543884
    2. '       ' → logprob: -1.6621063947677612
    3. 'return' → logprob: -1.9121063947677612
    4. ':
' → logprob: -8.91210651397705
    5. ' return' → logprob: -9.78710651397705
    6. ':return' → logprob: -11.16210651397705
    7. ':' → logprob: -11.53710651397705
    8. '```' → logprob: -12.28710651397705
    9. '{
' → logprob: -12.91210651397705
    10. 's' → logprob: -13.03710651397705

Token 580: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007105246186256409
    2. '   ' → logprob: -7.250710487365723
    3. ' return' → logprob: -14.500710487365723
    4. '	return' → logprob: -18.00071144104004
    5. '       ' → logprob: -18.50071144104004
    6. '
' → logprob: -19.37571144104004
    7. 'ret' → logprob: -19.75071144104004
    8. '    
' → logprob: -20.37571144104004
    9. '  ' → logprob: -21.37571144104004
    10. '    ' → logprob: -21.75071144104004

Token 581: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.41866585687967e-06
    2. '[list' → logprob: -11.750008583068848
    3. ' list' → logprob: -14.500008583068848
    4. '(list' → logprob: -19.00000762939453
    5. '[' → logprob: -19.75000762939453
    6. '.list' → logprob: -20.87500762939453
    7. '	list' → logprob: -21.12500762939453
    8. '=list' → logprob: -21.25000762939453
    9. ':list' → logprob: -21.37500762939453
    10. '[List' → logprob: -21.50000762939453

Token 582: '(M' (ID: 6103)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.62500286102295
    3. 'map' → logprob: -14.12500286102295
    4. '(M' → logprob: -14.87500286102295
    5. '(int' → logprob: -16.625001907348633
    6. '(Map' → logprob: -19.125001907348633
    7. 'MAP' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.250001907348633
    9. '()' → logprob: -19.375001907348633
    10. '(m' → logprob: -19.875001907348633

Token 583: 'AP' (ID: 2685)
  Prédit: 'AP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AP' → logprob: -0.00015860427811276168
    2. 'ap' → logprob: -8.750158309936523
    3. ' AP' → logprob: -17.875158309936523
    4. ' ap' → logprob: -18.250158309936523
    5. '(ap' → logprob: -18.875158309936523
    6. 'map' → logprob: -19.000158309936523
    7. '(AP' → logprob: -19.000158309936523
    8. 'Ap' → logprob: -19.250158309936523
    9. 'APT' → logprob: -19.375158309936523
    10. 'АП' → logprob: -19.625158309936523

Token 584: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008628170937299728
    2. '())
' → logprob: -4.7586283683776855
    3. '()' → logprob: -11.633627891540527
    4. '())

' → logprob: -13.258627891540527
    5. '())
' → logprob: -13.883627891540527
    6. ' ())' → logprob: -14.008627891540527
    7. ')' → logprob: -14.508627891540527
    8. '()))' → logprob: -14.508627891540527
    9. '()
' → logprob: -16.133628845214844
    10. '()))
' → logprob: -16.508628845214844

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002492999192327261
    2. 'else' → logprob: -8.500248908996582
    3. '
' → logprob: -10.500248908996582
    4. ' else' → logprob: -11.750248908996582
    5. '    
' → logprob: -12.000248908996582
    6. 'for' → logprob: -13.000248908996582
    7. '   ' → logprob: -14.250248908996582
    8. ' for' → logprob: -14.875248908996582
    9. '```' → logprob: -14.875248908996582
    10. '       ' → logprob: -15.750248908996582

Token 586: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008015885949134827
    2. 'else' (adapté à ' else') → logprob: -4.883016109466553
    3. '
' → logprob: -8.258015632629395
    4. ' else' → logprob: -8.883015632629395
    5. '    
' → logprob: -12.008015632629395
    6. '       ' → logprob: -13.133015632629395
    7. 'for' → logprob: -13.258015632629395
    8. 'return' → logprob: -14.133015632629395
    9. '   ' → logprob: -15.508015632629395
    10. '	else' → logprob: -15.883015632629395

Token 587: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15210068225860596
    2. ':' → logprob: -2.2771005630493164
    3. '       ' → logprob: -3.2771005630493164
    4. '   ' → logprob: -8.027100563049316
    5. '):
' → logprob: -8.402100563049316
    6. '():
' → logprob: -9.777100563049316
    7. ':return' → logprob: -9.902100563049316
    8. ':
' → logprob: -10.777100563049316
    9. 'return' → logprob: -11.152100563049316
    10. ' return' → logprob: -11.277100563049316

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8408171534538269
    2. '[' → logprob: -1.0908172130584717
    3. 'return' → logprob: -1.8408172130584717
    4. '   ' → logprob: -2.9658172130584717
    5. ' [' → logprob: -4.715816974639893
    6. '[l' → logprob: -5.840816974639893
    7. ' return' → logprob: -6.590816974639893
    8. '[r' → logprob: -6.715816974639893
    9. '[L' → logprob: -6.715816974639893
    10. '[result' → logprob: -6.840816974639893

Token 589: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05316919833421707
    2. '[l' → logprob: -3.5531692504882812
    3. '[list' → logprob: -4.803169250488281
    4. '[' → logprob: -5.428169250488281
    5. '   ' → logprob: -5.428169250488281
    6. '[result' → logprob: -6.678169250488281
    7. '[int' → logprob: -7.303169250488281
    8. ' return' → logprob: -7.678169250488281
    9. '[str' → logprob: -7.803169250488281
    10. '[n' → logprob: -7.803169250488281

Token 590: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.00885706301778555
    2. '[List' → logprob: -5.008857250213623
    3. '[int' → logprob: -6.258857250213623
    4. '[' → logprob: -8.508856773376465
    5. '[input' → logprob: -12.133856773376465
    6. ' [' → logprob: -12.383856773376465
    7. '[l' → logprob: -12.633856773376465
    8. '[array' → logprob: -12.633856773376465
    9. '[line' → logprob: -13.133856773376465
    10. '[n' → logprob: -13.133856773376465

Token 591: 'INT' (ID: 7154)
  Prédit: 'INT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INT' → logprob: -0.00033546582562848926
    2. 'int' → logprob: -8.000335693359375
    3. ' INT' → logprob: -17.000335693359375
    4. '_INT' → logprob: -18.375335693359375
    5. '	INT' → logprob: -20.625335693359375
    6. 'Int' → logprob: -21.250335693359375
    7. '   ' → logprob: -22.000335693359375
    8. '.INT' → logprob: -22.125335693359375
    9. '
' → logprob: -22.250335693359375
    10. '[int' → logprob: -22.500335693359375

Token 592: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.512236498361744e-07
    2. '()]' → logprob: -15.000000953674316
    3. ' ()' → logprob: -15.875000953674316
    4. '()
' → logprob: -17.0
    5. 'for' → logprob: -17.375
    6. '（）' → logprob: -17.375
    7. '(' → logprob: -18.125
    8. '())' → logprob: -19.625
    9. '()`' → logprob: -20.25
    10. ')' → logprob: -20.375

Token 593: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1637164789135568e-05
    2. 'for' → logprob: -11.375011444091797
    3. '()
' → logprob: -17.000011444091797
    4. ' for' → logprob: -17.375011444091797
    5. '()]' → logprob: -17.375011444091797
    6. ' ()' → logprob: -17.625011444091797
    7. '(' → logprob: -18.000011444091797
    8. '```' → logprob: -18.875011444091797
    9. ')' → logprob: -19.125011444091797
    10. '()`' → logprob: -20.250011444091797

Token 594: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.630610641877865e-06
    2. ' _' → logprob: -12.250006675720215
    3. '_in' → logprob: -14.250006675720215
    4. '_range' → logprob: -14.250006675720215
    5. '_i' → logprob: -15.000006675720215
    6. ' in' → logprob: -15.750006675720215
    7. '_
' → logprob: -16.3750057220459
    8. '_=' → logprob: -17.1250057220459
    9. '_]' → logprob: -18.7500057220459
    10. '_

' → logprob: -19.0000057220459

Token 595: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02467973716557026
    2. ' range' → logprob: -3.774679660797119
    3. 'in' → logprob: -7.024679660797119
    4. ' in' → logprob: -7.524679660797119
    5. '_' → logprob: -12.774680137634277
    6. ' ' → logprob: -14.774680137634277
    7. '_range' → logprob: -14.899680137634277
    8. '  ' → logprob: -15.399680137634277
    9. ' _' → logprob: -16.39967918395996
    10. '	range' → logprob: -16.39967918395996

Token 596: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '_' → logprob: -17.375261306762695
    4. '_range' → logprob: -18.125261306762695
    5. '	range' → logprob: -19.125261306762695
    6. '(range' → logprob: -19.500261306762695
    7. '   ' → logprob: -19.625261306762695
    8. '
' → logprob: -20.250261306762695
    9. ' ' → logprob: -20.500261306762695
    10. 'ran' → logprob: -22.125261306762695

Token 597: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. '(
' → logprob: -18.375
    4. 'N' → logprob: -18.375
    5. ' (' → logprob: -20.125
    6. '(n' → logprob: -20.375
    7. '((' → logprob: -21.75
    8. '   ' → logprob: -22.875
    9. '(int' → logprob: -23.625
    10. '()' → logprob: -24.0

Token 598: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.968934758333489e-05
    2. ']' → logprob: -9.625069618225098
    3. '()]' → logprob: -12.875069618225098
    4. ')]
' → logprob: -14.875069618225098
    5. ')' → logprob: -15.000069618225098
    6. '}]' → logprob: -16.625070571899414
    7. '   ' → logprob: -16.750070571899414
    8. '()' → logprob: -16.875070571899414
    9. '')]' → logprob: -16.875070571899414
    10. '])]' → logprob: -17.500070571899414

Token 599: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1281045526266098
    2. '<|end|>' → logprob: -2.2531044483184814
    3. ')' → logprob: -5.0031046867370605
    4. '#' → logprob: -5.2531046867370605
    5. '```' → logprob: -6.0031046867370605
    6. '[' → logprob: -8.878104209899902
    7. 'import' → logprob: -9.003104209899902
    8. ']' → logprob: -9.503104209899902
    9. 'a' → logprob: -9.878104209899902
    10. 'from' → logprob: -9.878104209899902

Token 600: ' Yes' (ID: 11377)
  Prédit: 'STR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'STR' → logprob: -0.2255958616733551
    2. 'YES' → logprob: -1.9755958318710327
    3. 'Yes' → logprob: -3.1005959510803223
    4. 'S' → logprob: -4.975595951080322
    5. ' Yes' → logprob: -6.225595951080322
    6. 'main' → logprob: -6.475595951080322
    7. 'print' → logprob: -6.475595951080322
    8. 'ST' → logprob: -6.725595951080322
    9. 'SR' → logprob: -6.725595951080322
    10. 'str' → logprob: -6.850595951080322

Token 601: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18801161646842957
    2. '():
' → logprob: -1.813011646270752
    3. '()' → logprob: -4.813011646270752
    4. 'No' → logprob: -9.563011169433594
    5. 'NO' → logprob: -11.563011169433594
    6. '():
' → logprob: -12.063011169433594
    7. 'Or' → logprob: -12.313011169433594
    8. '(' → logprob: -12.313011169433594
    9. '():

' → logprob: -12.438011169433594
    10. '()
' → logprob: -12.813011169433594

Token 602: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1495640277862549
    2. '():' → logprob: -1.1495640277862549
    3. '():
' → logprob: -1.3995640277862549
    4. '()' → logprob: -3.149564027786255
    5. 'return' → logprob: -3.274564027786255
    6. '   ' → logprob: -3.274564027786255
    7. ':return' → logprob: -8.274563789367676
    8. ' return' → logprob: -8.524563789367676
    9. '):
' → logprob: -9.024563789367676
    10. '):' → logprob: -9.149563789367676

Token 603: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2644094228744507
    2. 'print' → logprob: -1.5144094228744507
    3. 'return' → logprob: -4.51440954208374
    4. ' print' → logprob: -7.01440954208374
    5. ' return' → logprob: -7.51440954208374
    6. '	print' → logprob: -12.514409065246582
    7. '	return' → logprob: -13.514409065246582
    8. ' ' → logprob: -14.514409065246582
    9. '   ' → logprob: -14.639409065246582
    10. 'def' → logprob: -15.014409065246582

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20238515734672546
    2. 'print' → logprob: -1.7023851871490479
    3. 'return' → logprob: -6.952384948730469
    4. ' print' → logprob: -11.327384948730469
    5. ' return' → logprob: -13.702384948730469
    6. '```' → logprob: -13.952384948730469
    7. '	print' → logprob: -14.827384948730469
    8. '"""' → logprob: -15.202384948730469
    9. 'def' → logprob: -15.952384948730469
    10. '"""
' → logprob: -16.57738494873047

Token 605: ' Prints' (ID: 92195)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16248482465744019
    2. 'return' → logprob: -1.912484884262085
    3. '   ' → logprob: -6.537484645843506
    4. ' return' → logprob: -7.537484645843506
    5. ' print' → logprob: -8.287485122680664
    6. 'pr' → logprob: -11.287485122680664
    7. 'p' → logprob: -11.537485122680664
    8. 'prin' → logprob: -13.412485122680664
    9. 'r' → logprob: -14.537485122680664
    10. 'pri' → logprob: -15.662485122680664

Token 606: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007587654399685562
    2. '('' → logprob: -7.500758647918701
    3. '(' → logprob: -8.50075912475586
    4. '"' → logprob: -13.50075912475586
    5. '(
' → logprob: -13.87575912475586
    6. ' ("' → logprob: -16.87575912475586
    7. 'Yes' → logprob: -16.87575912475586
    8. '()' → logprob: -17.50075912475586
    9. '("""' → logprob: -18.75075912475586
    10. '(True' → logprob: -18.87575912475586

Token 607: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00035965684219263494
    2. 'YES' → logprob: -8.500359535217285
    3. '"' → logprob: -8.875359535217285
    4. ''' → logprob: -11.250359535217285
    5. ' Yes' → logprob: -13.250359535217285
    6. 'Y' → logprob: -14.500359535217285
    7. 'yes' → logprob: -15.000359535217285
    8. 'print' → logprob: -15.625359535217285
    9. 'Ye' → logprob: -15.750359535217285
    10. '“Yes' → logprob: -16.0003604888916

Token 608: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.6087021473795176e-05
    2. ''' → logprob: -10.625045776367188
    3. '()
' → logprob: -11.000045776367188
    4. '')' → logprob: -13.500045776367188
    5. '()`' → logprob: -13.500045776367188
    6. '('' → logprob: -13.750045776367188
    7. '()"' → logprob: -14.500045776367188
    8. '()

' → logprob: -15.250045776367188
    9. ' ()' → logprob: -15.750045776367188
    10. '(True' → logprob: -16.125045776367188

Token 609: ' to' (ID: 316)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16159483790397644
    2. '():' → logprob: -1.9115948677062988
    3. '()
' → logprob: -6.911594867706299
    4. '():
' → logprob: -8.03659439086914
    5. ' ()' → logprob: -10.78659439086914
    6. '()`' → logprob: -11.78659439086914
    7. '()

' → logprob: -12.03659439086914
    8. '()\' → logprob: -12.66159439086914
    9. 'def' → logprob: -12.91159439086914
    10. '();' → logprob: -13.03659439086914

Token 610: ' standard' (ID: 7024)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01743219792842865
    2. 'stdout' → logprob: -4.14243221282959
    3. 'Yes' → logprob: -7.14243221282959
    4. '
' → logprob: -8.51743221282959
    5. '```' → logprob: -9.76743221282959
    6. ' print' → logprob: -10.01743221282959
    7. '   ' → logprob: -10.01743221282959
    8. 'sys' → logprob: -10.14243221282959
    9. 'yes' → logprob: -10.39243221282959
    10. '``' → logprob: -10.39243221282959

Token 611: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5545108914375305
    2. 'stdout' → logprob: -0.9295108914375305
    3. 'output' → logprob: -3.5545108318328857
    4. '()
' → logprob: -7.679511070251465
    5. '   ' → logprob: -7.804511070251465
    6. '
' → logprob: -7.804511070251465
    7. 'out' → logprob: -8.179511070251465
    8. '```' → logprob: -8.554511070251465
    9. '()' → logprob: -9.054511070251465
    10. '(stdout' → logprob: -9.054511070251465

Token 612: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012037690728902817
    2. '()
' → logprob: -5.137037754058838
    3. '():' → logprob: -5.262037754058838
    4. '():
' → logprob: -7.887037754058838
    5. 'print' → logprob: -8.38703727722168
    6. '   ' → logprob: -8.76203727722168
    7. '()`' → logprob: -10.01203727722168
    8. 'def' → logprob: -10.26203727722168
    9. ')' → logprob: -11.26203727722168
    10. '().' → logprob: -11.38703727722168

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011129883117973804
    2. 'print' → logprob: -4.761129856109619
    3. 'def' → logprob: -6.011129856109619
    4. '
' → logprob: -10.761130332946777
    5. '```' → logprob: -10.886130332946777
    6. '    
' → logprob: -11.761130332946777
    7. '()' → logprob: -11.886130332946777
    8. ' print' → logprob: -12.386130332946777
    9. '(' → logprob: -14.636130332946777
    10. '	print' → logprob: -14.761130332946777

Token 614: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014244131743907928
    2. 'print' → logprob: -4.264244079589844
    3. ' print' → logprob: -10.264244079589844
    4. 'def' → logprob: -10.514244079589844
    5. '```' → logprob: -11.139244079589844
    6. '
' → logprob: -12.764244079589844
    7. '    
' → logprob: -15.139244079589844
    8. '	print' → logprob: -15.264244079589844
    9. '   ' → logprob: -15.389244079589844
    10. '()' → logprob: -15.514244079589844

Token 615: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038055602461099625
    2. '   ' → logprob: -3.288055658340454
    3. 'def' → logprob: -12.163055419921875
    4. '```' → logprob: -12.288055419921875
    5. ' print' → logprob: -12.413055419921875
    6. '	print' → logprob: -15.413055419921875
    7. '
' → logprob: -18.288055419921875
    8. '``' → logprob: -18.538055419921875
    9. '    
' → logprob: -18.913055419921875
    10. '`' → logprob: -19.538055419921875

Token 616: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -17.0
    3. '```' → logprob: -17.25
    4. ' print' → logprob: -18.75
    5. '
' → logprob: -20.5
    6. '`' → logprob: -22.625
    7. 'def' → logprob: -22.875
    8. '``' → logprob: -23.125
    9. '    
' → logprob: -23.375
    10. 'pr' → logprob: -23.5

Token 617: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0068735526874661446
    2. '('' → logprob: -5.006873607635498
    3. '(' → logprob: -8.75687313079834
    4. '"' → logprob: -14.88187313079834
    5. ' ("' → logprob: -15.38187313079834
    6. '(
' → logprob: -16.006874084472656
    7. 'Yes' → logprob: -16.256874084472656
    8. '()' → logprob: -17.381874084472656
    9. '(`' → logprob: -18.256874084472656
    10. ''' → logprob: -19.131874084472656

Token 618: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -17.0
    3. 'YES' → logprob: -18.75
    4. 'True' → logprob: -19.375
    5. 'Ye' → logprob: -21.0
    6. 'No' → logprob: -22.375
    7. 'Yeah' → logprob: -23.25
    8. 'Hello' → logprob: -23.5
    9. '_yes' → logprob: -24.0
    10. 'Y' → logprob: -24.25

Token 619: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.896309739408025e-07
    2. '')
' → logprob: -14.500000953674316
    3. ')' → logprob: -15.875000953674316
    4. '")' → logprob: -16.5
    5. '')

' → logprob: -18.25
    6. ''' → logprob: -19.25
    7. '')"' → logprob: -19.375
    8. '');' → logprob: -19.625
    9. '()' → logprob: -20.0
    10. '')
' → logprob: -21.25

Token 620: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.0
    3. '
' → logprob: -19.875
    4. '```' → logprob: -20.0
    5. '<|end|>' → logprob: -21.25
    6. '	def' → logprob: -21.75
    7. 'Def' → logprob: -21.75
    8. '    
' → logprob: -22.375
    9. 'No' → logprob: -22.5
    10. 'ndef' → logprob: -23.25

Token 621: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00020509003661572933
    2. ' No' → logprob: -8.500205039978027
    3. 'NO' → logprob: -13.875205039978027
    4. 'def' → logprob: -14.750205039978027
    5. '_No' → logprob: -16.250205993652344
    6. 'Yes' → logprob: -16.375205993652344
    7. 'no' → logprob: -17.625205993652344
    8. '_no' → logprob: -18.250205993652344
    9. ' no' → logprob: -20.375205993652344
    10. 'print' → logprob: -20.375205993652344

Token 622: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00218987581320107
    2. '():
' → logprob: -6.252190113067627
    3. '()' → logprob: -8.252189636230469
    4. '():
' → logprob: -15.127189636230469
    5. ' ():' → logprob: -15.377189636230469
    6. '()
' → logprob: -17.62718963623047
    7. '(' → logprob: -18.12718963623047
    8. '():

' → logprob: -18.25218963623047
    9. ' ()' → logprob: -19.62718963623047
    10. '()`' → logprob: -19.62718963623047

Token 623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20094023644924164
    2. '()' → logprob: -1.8259402513504028
    3. '():
' → logprob: -4.700940132141113
    4. '()
' → logprob: -5.200940132141113
    5. '():' → logprob: -5.200940132141113
    6. '(' → logprob: -7.950940132141113
    7. '(
' → logprob: -8.825940132141113
    8. 'def' → logprob: -9.325940132141113
    9. ':
' → logprob: -9.700940132141113
    10. '
' → logprob: -9.700940132141113

Token 624: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009517176658846438
    2. 'def' → logprob: -7.625951766967773
    3. '
' → logprob: -9.125951766967773
    4. '()' → logprob: -9.375951766967773
    5. '```' → logprob: -9.375951766967773
    6. 'print' → logprob: -9.750951766967773
    7. '(
' → logprob: -10.000951766967773
    8. '()
' → logprob: -10.125951766967773
    9. '(' → logprob: -11.000951766967773
    10. '"""
' (adapté à ' """
') → logprob: -11.125951766967773

Token 625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001672802958637476
    2. 'def' → logprob: -6.751672744750977
    3. '"""
' → logprob: -7.876672744750977
    4. '()' → logprob: -10.501672744750977
    5. '()
' → logprob: -10.626672744750977
    6. '```' → logprob: -10.876672744750977
    7. ' def' → logprob: -11.876672744750977
    8. '"' → logprob: -12.001672744750977
    9. '  ' → logprob: -12.001672744750977
    10. '
' → logprob: -12.001672744750977

Token 626: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0575447641313076
    2. 'def' → logprob: -3.057544708251953
    3. 'print' → logprob: -4.807544708251953
    4. '
' → logprob: -7.932544708251953
    5. '```' → logprob: -8.057544708251953
    6. ' def' → logprob: -10.182544708251953
    7. '``' → logprob: -11.057544708251953
    8. '"""
' → logprob: -11.557544708251953
    9. ' print' → logprob: -12.057544708251953
    10. 'Print' → logprob: -13.557544708251953

Token 627: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03805079311132431
    2. ''' → logprob: -3.288050889968872
    3. '(' → logprob: -12.163050651550293
    4. ' '' → logprob: -12.913050651550293
    5. ''N' → logprob: -15.038050651550293
    6. '`' → logprob: -15.538050651550293
    7. ' ('' → logprob: -15.663050651550293
    8. '("' → logprob: -15.913050651550293
    9. '(No' → logprob: -15.913050651550293
    10. ''S' → logprob: -16.53805160522461

Token 628: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.15310683415737e-05
    2. ''' → logprob: -10.750021934509277
    3. ' No' → logprob: -18.37502098083496
    4. '"No' → logprob: -19.00002098083496
    5. '_No' → logprob: -20.12502098083496
    6. 'NO' → logprob: -20.25002098083496
    7. '(No' → logprob: -21.87502098083496
    8. 'Yes' → logprob: -22.12502098083496
    9. ''''' → logprob: -22.12502098083496
    10. 'Not' → logprob: -22.12502098083496

Token 629: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03871341422200203
    2. ''' → logprob: -3.5387134552001953
    3. '()' → logprob: -5.038713455200195
    4. '')
' → logprob: -6.038713455200195
    5. '('' → logprob: -9.913713455200195
    6. 'to' → logprob: -13.038713455200195
    7. ''
' → logprob: -13.163713455200195
    8. '')
' → logprob: -14.038713455200195
    9. '')

' → logprob: -14.538713455200195
    10. '()
' → logprob: -14.913713455200195

Token 630: ' to' (ID: 316)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011115256696939468
    2. '()
' → logprob: -4.511115074157715
    3. 'to' → logprob: -9.886115074157715
    4. '('' → logprob: -12.261115074157715
    5. '()

' → logprob: -12.761115074157715
    6. '(' → logprob: -12.886115074157715
    7. ' to' → logprob: -13.011115074157715
    8. '():' → logprob: -14.136115074157715
    9. '()`' → logprob: -14.261115074157715
    10. ' ()' → logprob: -14.261115074157715

Token 631: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.20142608880996704
    2. 'standard' → logprob: -1.7014260292053223
    3. 'sys' → logprob: -11.57642650604248
    4. 'stdout' → logprob: -13.57642650604248
    5. ' sys' → logprob: -13.57642650604248
    6. ''' → logprob: -15.45142650604248
    7. 'std' → logprob: -15.45142650604248
    8. '   ' → logprob: -16.076425552368164
    9. 'print' → logprob: -16.701425552368164
    10. ' system' → logprob: -16.701425552368164

Token 632: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0004809585225302726
    2. ' output' → logprob: -7.750481128692627
    3. 'out' → logprob: -10.125480651855469
    4. 'stdout' → logprob: -11.875480651855469
    5. '_output' → logprob: -12.750480651855469
    6. 'Output' → logprob: -15.750480651855469
    7. 'standard' → logprob: -16.50048065185547
    8. '   ' → logprob: -16.50048065185547
    9. '(output' → logprob: -18.00048065185547
    10. '	output' → logprob: -18.37548065185547

Token 633: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012766849249601364
    2. '()
' → logprob: -4.6377668380737305
    3. '():' → logprob: -6.3877668380737305
    4. '():
' → logprob: -6.6377668380737305
    5. ')' → logprob: -12.13776683807373
    6. '()

' → logprob: -13.38776683807373
    7. '(' → logprob: -13.38776683807373
    8. ' ()' → logprob: -13.76276683807373
    9. '   ' → logprob: -13.88776683807373
    10. '())' → logprob: -14.01276683807373

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017798570916056633
    2. '
' → logprob: -4.14279842376709
    3. 'def' → logprob: -7.51779842376709
    4. ')' → logprob: -7.64279842376709
    5. '    
' → logprob: -8.14279842376709
    6. '```' → logprob: -8.89279842376709
    7. '<|end|>' → logprob: -9.14279842376709
    8. ')
' → logprob: -9.89279842376709
    9. '  
' → logprob: -10.01779842376709
    10. '()' → logprob: -10.89279842376709

Token 635: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026928406208753586
    2. 'print' → logprob: -3.651928424835205
    3. '
' → logprob: -8.401927947998047
    4. '```' → logprob: -8.651927947998047
    5. 'def' → logprob: -9.026927947998047
    6. ' print' → logprob: -9.276927947998047
    7. '    
' → logprob: -12.276927947998047
    8. '``' → logprob: -12.776927947998047
    9. '	print' → logprob: -12.901927947998047
    10. ' ' → logprob: -14.276927947998047

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1610115021467209
    2. 'print' → logprob: -1.9110114574432373
    3. ' print' → logprob: -7.411011695861816
    4. 'def' → logprob: -8.661011695861816
    5. '```' → logprob: -11.911011695861816
    6. '	print' → logprob: -13.661011695861816
    7. '
' → logprob: -14.161011695861816
    8. 'Print' → logprob: -15.411011695861816
    9. '(print' → logprob: -15.661011695861816
    10. ' def' → logprob: -16.7860107421875

Token 637: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.5
    3. ' print' → logprob: -16.25
    4. '	print' → logprob: -22.5
    5. '```' → logprob: -23.125
    6. 'Print' → logprob: -23.625
    7. 'def' → logprob: -23.75
    8. '
' → logprob: -25.25
    9. '(print' → logprob: -25.875
    10. '.print' → logprob: -26.0

Token 638: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. ''' → logprob: -16.375
    4. '("' → logprob: -17.0
    5. '(No' → logprob: -17.375
    6. ' ('' → logprob: -19.125
    7. 'No' → logprob: -20.375
    8. '()' → logprob: -20.5
    9. '(
' → logprob: -21.75
    10. '(('' → logprob: -22.125

Token 639: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.339278580620885e-06
    2. ''' → logprob: -13.000001907348633
    3. ' No' → logprob: -20.000001907348633
    4. '"No' → logprob: -22.750001907348633
    5. '_No' → logprob: -24.000001907348633
    6. '`' → logprob: -25.375001907348633
    7. 'N' → logprob: -25.500001907348633
    8. 'Yes' → logprob: -25.750001907348633
    9. '\'' → logprob: -25.875001907348633
    10. 'NO' → logprob: -26.000001907348633

Token 640: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -12.875003814697266
    3. '')
' → logprob: -14.250003814697266
    4. ')' → logprob: -16.125003814697266
    5. '")' → logprob: -17.875003814697266
    6. ''' → logprob: -18.500003814697266
    7. '')

' → logprob: -18.875003814697266
    8. '('' → logprob: -19.750003814697266
    9. '')
' → logprob: -20.625003814697266
    10. '')"' → logprob: -21.000003814697266

Token 641: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003253765869885683
    2. '#' → logprob: -6.003253936767578
    3. 'class' → logprob: -8.128253936767578
    4. '<|end|>' → logprob: -8.378253936767578
    5. '```' → logprob: -9.253253936767578
    6. 'from' → logprob: -9.628253936767578
    7. '[' → logprob: -10.878253936767578
    8. 'import' → logprob: -11.378253936767578
    9. '<|end|>' → logprob: -11.753253936767578
    10. 'a' → logprob: -12.003253936767578

Token 642: ' YES' (ID: 32968)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.5897034406661987
    2. 'YN' → logprob: -1.5897034406661987
    3. 'def' → logprob: -2.0897035598754883
    4. 'debug' → logprob: -3.5897035598754883
    5. 'Yes' → logprob: -3.5897035598754883
    6. 'main' → logprob: -4.214703559875488
    7. 'DEBUG' → logprob: -4.589703559875488
    8. 'print' → logprob: -5.089703559875488
    9. 'Y' → logprob: -5.964703559875488
    10. 'is' → logprob: -6.089703559875488

Token 643: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008618712425231934
    2. '():
' → logprob: -4.7586188316345215
    3. '()' → logprob: -12.883618354797363
    4. '():
' → logprob: -13.758618354797363
    5. ' ():' → logprob: -14.633618354797363
    6. '():

' → logprob: -15.633618354797363
    7. '();' → logprob: -20.88361930847168
    8. '):' → logprob: -21.00861930847168
    9. '()
' → logprob: -21.13361930847168
    10. '()">' → logprob: -21.63361930847168

Token 644: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.31360241770744324
    2. '():' → logprob: -1.3136024475097656
    3. '()' → logprob: -8.188602447509766
    4. '   ' → logprob: -10.563602447509766
    5. '():
' → logprob: -10.813602447509766
    6. '):
' → logprob: -12.063602447509766
    7. 'def' → logprob: -12.188602447509766
    8. '()):
' → logprob: -13.188602447509766
    9. '():

' → logprob: -13.563602447509766
    10. ' ():' → logprob: -13.813602447509766

Token 645: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04115055128931999
    2. 'def' → logprob: -3.9161505699157715
    3. '()' → logprob: -4.0411505699157715
    4. '():
' → logprob: -6.5411505699157715
    5. '():' → logprob: -7.2911505699157715
    6. 'print' → logprob: -7.4161505699157715
    7. '```' → logprob: -11.041150093078613
    8. '  ' → logprob: -11.166150093078613
    9. '(' → logprob: -11.291150093078613
    10. '()
' → logprob: -11.291150093078613

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004692376125603914
    2. 'def' → logprob: -5.504692554473877
    3. 'print' → logprob: -7.504692554473877
    4. '```' → logprob: -10.379692077636719
    5. '()' → logprob: -10.629692077636719
    6. '():' → logprob: -13.004692077636719
    7. ')' → logprob: -13.879692077636719
    8. '():
' → logprob: -14.129692077636719
    9. ' print' → logprob: -14.379692077636719
    10. '    
' → logprob: -14.754692077636719

Token 647: ' Prints' (ID: 92195)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48554757237434387
    2. '   ' → logprob: -0.9855475425720215
    3. 'print' → logprob: -4.4855475425720215
    4. '```' → logprob: -9.61054801940918
    5. '"""
' → logprob: -10.36054801940918
    6. '"""' → logprob: -11.36054801940918
    7. ' def' → logprob: -11.48554801940918
    8. '
' → logprob: -12.48554801940918
    9. 'Print' → logprob: -12.98554801940918
    10. '    
' → logprob: -13.36054801940918

Token 648: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0052360063418745995
    2. ''' → logprob: -5.2552361488342285
    3. ' '' → logprob: -13.88023567199707
    4. '(' → logprob: -14.25523567199707
    5. '("' → logprob: -15.63023567199707
    6. '"' → logprob: -15.75523567199707
    7. '   ' → logprob: -15.88023567199707
    8. 'Yes' → logprob: -16.63023567199707
    9. '(
' → logprob: -16.75523567199707
    10. ''S' → logprob: -17.88023567199707

Token 649: 'YES' (ID: 31958)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.14427891373634338
    2. ''' → logprob: -2.3942790031433105
    3. 'YES' → logprob: -3.1442790031433105
    4. 'Y' → logprob: -11.019278526306152
    5. '"' → logprob: -15.019278526306152
    6. ' Yes' → logprob: -15.769278526306152
    7. 'YE' → logprob: -16.26927947998047
    8. 'Ye' → logprob: -16.39427947998047
    9. ''''' → logprob: -16.51927947998047
    10. ''S' → logprob: -16.89427947998047

Token 650: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5517368912696838
    2. ''' → logprob: -1.551736831665039
    3. '()' → logprob: -1.551736831665039
    4. '')
' → logprob: -8.301736831665039
    5. '('' → logprob: -11.176736831665039
    6. ''''' → logprob: -11.551736831665039
    7. '()
' → logprob: -12.551736831665039
    8. '')

' → logprob: -12.551736831665039
    9. '')"' → logprob: -12.551736831665039
    10. ' ()' → logprob: -12.676736831665039

Token 651: ' to' (ID: 316)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008284413255751133
    2. '()
' → logprob: -5.633284568786621
    3. '():
' → logprob: -5.758284568786621
    4. '():' → logprob: -6.508284568786621
    5. ' ()' → logprob: -12.008284568786621
    6. '()

' → logprob: -12.133284568786621
    7. '()`' → logprob: -12.758284568786621
    8. '   ' → logprob: -13.008284568786621
    9. 'to' → logprob: -13.383284568786621
    10. 'def' → logprob: -13.633284568786621

Token 652: ' standard' (ID: 7024)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6820816993713379
    2. ''' → logprob: -0.9320816993713379
    3. 'print' → logprob: -2.307081699371338
    4. 'stdout' → logprob: -8.05708122253418
    5. 'standard' → logprob: -8.05708122253418
    6. '   ' → logprob: -8.80708122253418
    7. ''s' → logprob: -9.80708122253418
    8. ' print' → logprob: -10.05708122253418
    9. '```' → logprob: -10.18208122253418
    10. '()' → logprob: -10.30708122253418

Token 653: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0007804421475157142
    2. ' output' → logprob: -7.2507805824279785
    3. 'out' → logprob: -9.62578010559082
    4. 'input' → logprob: -13.50078010559082
    5. 'stdout' → logprob: -13.62578010559082
    6. '(output' → logprob: -13.62578010559082
    7. '```' → logprob: -15.12578010559082
    8. '_output' → logprob: -15.62578010559082
    9. '   ' → logprob: -15.87578010559082
    10. 'to' → logprob: -16.37578010559082

Token 654: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25252610445022583
    2. '():
' → logprob: -1.752526044845581
    3. '()
' → logprob: -4.12752628326416
    4. '   ' → logprob: -4.37752628326416
    5. '():' → logprob: -4.37752628326416
    6. ')' → logprob: -5.37752628326416
    7. '):
' → logprob: -6.50252628326416
    8. '')' → logprob: -7.25252628326416
    9. ''):
' → logprob: -7.37752628326416
    10. '):' → logprob: -7.87752628326416

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.0722858102526516e-05
    2. 'def' → logprob: -10.625041007995605
    3. ')' → logprob: -11.875041007995605
    4. 'print' → logprob: -12.875041007995605
    5. '```' → logprob: -12.875041007995605
    6. '    
' → logprob: -13.625041007995605
    7. '()' → logprob: -13.750041007995605
    8. '
' → logprob: -14.000041007995605
    9. '   ' → logprob: -15.375041007995605
    10. '):
' → logprob: -15.875041007995605

Token 656: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004977479111403227
    2. 'def' → logprob: -7.750497817993164
    3. 'print' → logprob: -10.250497817993164
    4. '```' → logprob: -10.500497817993164
    5. '"""
' (adapté à ' """
') → logprob: -13.625497817993164
    6. ')' → logprob: -13.875497817993164
    7. '
' → logprob: -14.250497817993164
    8. '"""' → logprob: -14.750497817993164
    9. '``' → logprob: -15.125497817993164
    10. '    
' → logprob: -15.375497817993164

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053957304917275906
    2. 'print' → logprob: -5.255395889282227
    3. 'def' → logprob: -8.755395889282227
    4. '```' → logprob: -12.755395889282227
    5. ' print' → logprob: -13.755395889282227
    6. '	print' → logprob: -14.880395889282227
    7. '   ' → logprob: -17.380395889282227
    8. '       ' → logprob: -17.755395889282227
    9. '(print' → logprob: -18.005395889282227
    10. '  ' → logprob: -18.505395889282227

Token 658: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.082895273109898e-05
    2. '   ' → logprob: -10.500030517578125
    3. 'def' → logprob: -12.750030517578125
    4. ' print' → logprob: -15.625030517578125
    5. '```' → logprob: -15.625030517578125
    6. '	print' → logprob: -20.000030517578125
    7. '``' → logprob: -21.000030517578125
    8. '
' → logprob: -22.125030517578125
    9. 'printf' → logprob: -22.750030517578125
    10. '  ' → logprob: -23.250030517578125

Token 659: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.3856492842023727e-06
    2. ''' → logprob: -13.750000953674316
    3. '("' → logprob: -16.125001907348633
    4. '(' → logprob: -16.500001907348633
    5. ''S' → logprob: -19.375001907348633
    6. '"' → logprob: -22.125001907348633
    7. '(
' → logprob: -22.625001907348633
    8. '`' → logprob: -23.375001907348633
    9. ' ('' → logprob: -23.375001907348633
    10. '()' → logprob: -24.125001907348633

Token 660: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.16022615134716034
    2. ''' → logprob: -1.9102261066436768
    3. '"' → logprob: -13.160225868225098
    4. ''S' → logprob: -16.285226821899414
    5. 'Yes' → logprob: -16.785226821899414
    6. ' YES' → logprob: -18.160226821899414
    7. 'Y' → logprob: -20.410226821899414
    8. '('' → logprob: -20.410226821899414
    9. 'YE' → logprob: -21.160226821899414
    10. '.YES' → logprob: -21.160226821899414

Token 661: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0001249925117008388
    2. ')' → logprob: -9.00012493133545
    3. '()' → logprob: -14.25012493133545
    4. '")' → logprob: -14.62512493133545
    5. '')
' → logprob: -14.75012493133545
    6. '')

' → logprob: -18.000125885009766
    7. '')"' → logprob: -19.125125885009766
    8. ''' → logprob: -19.500125885009766
    9. '())' → logprob: -19.625125885009766
    10. '’)' → logprob: -20.625125885009766

Token 662: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.5
    3. '```' → logprob: -15.75
    4. '\' → logprob: -18.0
    5. 'NO' → logprob: -18.25
    6. 'No' → logprob: -19.125
    7. '
' → logprob: -19.125
    8. 'Y' → logprob: -19.625
    9. 'ndef' → logprob: -19.625
    10. 'DEF' → logprob: -19.75

Token 663: ' NO' (ID: 9319)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.4796372950077057
    2. 'NO' → logprob: -0.9796372652053833
    3. 'no' → logprob: -5.229637145996094
    4. 'Yes' → logprob: -8.604637145996094
    5. 'yes' → logprob: -12.229637145996094
    6. 'def' → logprob: -14.604637145996094
    7. ' NO' → logprob: -15.729637145996094
    8. '_no' → logprob: -15.729637145996094
    9. 'YES' → logprob: -15.729637145996094
    10. ' No' → logprob: -15.854637145996094

Token 664: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014320391230285168
    2. '():
' → logprob: -4.264320373535156
    3. '()' → logprob: -8.764320373535156
    4. '():
' → logprob: -14.389320373535156
    5. '():

' → logprob: -16.514320373535156
    6. ' ():' → logprob: -17.014320373535156
    7. '()
' → logprob: -17.889320373535156
    8. '()`' → logprob: -19.514320373535156
    9. '();' → logprob: -20.139320373535156
    10. '()>' → logprob: -20.264320373535156

Token 665: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4841281771659851
    2. '():' → logprob: -0.9841281771659851
    3. '()' → logprob: -4.984127998352051
    4. '   ' → logprob: -5.859127998352051
    5. 'def' → logprob: -8.60912799835205
    6. '):
' → logprob: -9.85912799835205
    7. '()
' → logprob: -10.48412799835205
    8. '():
' → logprob: -10.98412799835205
    9. '()):
' → logprob: -12.35912799835205
    10. '(' → logprob: -12.48412799835205

Token 666: ' """
' (ID: 7037)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5798706412315369
    2. '():' → logprob: -0.8298706412315369
    3. '()' → logprob: -5.579870700836182
    4. '   ' → logprob: -9.704870223999023
    5. 'def' → logprob: -9.829870223999023
    6. '():
' → logprob: -10.829870223999023
    7. '()
' → logprob: -11.704870223999023
    8. '):
' → logprob: -12.829870223999023
    9. '()):
' → logprob: -13.704870223999023
    10. ' ():' → logprob: -13.704870223999023

Token 667: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2662023901939392
    2. '():
' → logprob: -2.016202449798584
    3. '"""
' → logprob: -2.516202449798584
    4. '   ' → logprob: -4.516202449798584
    5. '):
' → logprob: -4.891202449798584
    6. '():' → logprob: -7.891202449798584
    7. '()' → logprob: -7.891202449798584
    8. ' def' → logprob: -8.516201972961426
    9. '"):
' → logprob: -9.016201972961426
    10. ':
' → logprob: -10.016201972961426

Token 668: ' Prints' (ID: 92195)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5552818775177002
    2. '"""
' → logprob: -1.0552818775177002
    3. '   ' → logprob: -2.8052818775177
    4. 'print' → logprob: -4.055281639099121
    5. '"""' → logprob: -9.430281639099121
    6. '
' → logprob: -10.680281639099121
    7. ' def' → logprob: -10.680281639099121
    8. '```' → logprob: -11.180281639099121
    9. ''''
' → logprob: -11.555281639099121
    10. '("""
' → logprob: -12.055281639099121

Token 669: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011755822924897075
    2. ''' → logprob: -6.751175403594971
    3. '(' → logprob: -12.876175880432129
    4. '(
' → logprob: -13.126175880432129
    5. '("' → logprob: -14.626175880432129
    6. ''N' → logprob: -16.126174926757812
    7. '```' → logprob: -17.626174926757812
    8. ''''' → logprob: -17.626174926757812
    9. '   ' → logprob: -18.001174926757812
    10. '('\' → logprob: -18.126174926757812

Token 670: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0031786637846380472
    2. 'NO' → logprob: -5.753178596496582
    3. '"' → logprob: -14.378178596496582
    4. '`' → logprob: -16.6281795501709
    5. ''\' → logprob: -16.8781795501709
    6. '('' → logprob: -17.0031795501709
    7. ''N' → logprob: -17.3781795501709
    8. ''''' → logprob: -17.5031795501709
    9. '```' → logprob: -17.5031795501709
    10. '   ' → logprob: -17.6281795501709

Token 671: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038046542555093765
    2. '')' → logprob: -3.2880465984344482
    3. '('' → logprob: -13.288046836853027
    4. ''' → logprob: -13.538046836853027
    5. '')
' → logprob: -13.663046836853027
    6. '()
' → logprob: -14.288046836853027
    7. '")' → logprob: -16.41304588317871
    8. '')

' → logprob: -16.41304588317871
    9. '()

' → logprob: -16.91304588317871
    10. ''''' → logprob: -17.16304588317871

Token 672: ' to' (ID: 316)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014084660506341606
    2. '()
' → logprob: -8.875141143798828
    3. '()

' → logprob: -15.000141143798828
    4. ')' → logprob: -15.375141143798828
    5. '()`' → logprob: -15.875141143798828
    6. ' ()' → logprob: -16.375141143798828
    7. '())' → logprob: -17.000141143798828
    8. '(' → logprob: -17.625141143798828
    9. 'def' → logprob: -17.625141143798828
    10. '```' → logprob: -18.000141143798828

Token 673: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.05623459070920944
    2. ' standard' → logprob: -3.43123459815979
    3. 'stdout' → logprob: -3.93123459815979
    4. 'print' → logprob: -7.181234359741211
    5. '()' → logprob: -7.306234359741211
    6. ''' → logprob: -8.556234359741211
    7. ' ' → logprob: -8.556234359741211
    8. ')' → logprob: -8.556234359741211
    9. 'std' → logprob: -8.556234359741211
    10. '   ' → logprob: -8.931234359741211

Token 674: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.06482357531785965
    2. '_output' → logprob: -2.814823627471924
    3. ' output' → logprob: -6.064823627471924
    4. '(output' → logprob: -8.439823150634766
    5. 'out' → logprob: -8.689823150634766
    6. 'Output' → logprob: -10.939823150634766
    7. 'input' → logprob: -11.189823150634766
    8. ')' → logprob: -11.189823150634766
    9. '_' → logprob: -11.314823150634766
    10. '_out' → logprob: -11.314823150634766

Token 675: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000528606993611902
    2. ')' → logprob: -8.125528335571289
    3. '()
' → logprob: -8.625528335571289
    4. '():' → logprob: -10.500528335571289
    5. '())' → logprob: -11.000528335571289
    6. 'def' → logprob: -12.875528335571289
    7. '():
' → logprob: -13.125528335571289
    8. '')' → logprob: -13.750528335571289
    9. '()

' → logprob: -14.250528335571289
    10. '(' → logprob: -14.375528335571289

Token 676: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7050129771232605
    2. 'def' → logprob: -0.7050129771232605
    3. ')' → logprob: -5.205012798309326
    4. '()
' → logprob: -5.330012798309326
    5. '```' → logprob: -7.330012798309326
    6. ' def' → logprob: -8.705013275146484
    7. '"""' → logprob: -9.455013275146484
    8. 'print' → logprob: -9.455013275146484
    9. '():
' → logprob: -9.580013275146484
    10. '')' → logprob: -9.580013275146484

Token 677: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7089155316352844
    2. 'print' → logprob: -1.2089154720306396
    3. '()' → logprob: -2.0839154720306396
    4. 'def' → logprob: -2.8339154720306396
    5. '   ' → logprob: -3.8339154720306396
    6. '```' → logprob: -5.583915710449219
    7. '")' → logprob: -8.708915710449219
    8. '')' → logprob: -9.333915710449219
    9. '()
' → logprob: -9.458915710449219
    10. '"""' → logprob: -9.833915710449219

Token 678: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001370320824207738
    2. 'print' → logprob: -9.000137329101562
    3. '```' → logprob: -11.750137329101562
    4. '   ' → logprob: -12.750137329101562
    5. ' def' → logprob: -12.875137329101562
    6. '``' → logprob: -16.750137329101562
    7. '
' → logprob: -16.875137329101562
    8. '_def' → logprob: -18.500137329101562
    9. '    
' → logprob: -19.125137329101562
    10. '(def' → logprob: -19.250137329101562

Token 679: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.8624639324116288e-06
    2. 'def' → logprob: -13.250001907348633
    3. ' print' → logprob: -20.125001907348633
    4. '```' → logprob: -20.750001907348633
    5. '   ' → logprob: -22.375001907348633
    6. '	print' → logprob: -25.500001907348633
    7. '(print' → logprob: -25.500001907348633
    8. '``' → logprob: -25.625001907348633
    9. 'printf' → logprob: -26.375001907348633
    10. 'prints' → logprob: -26.750001907348633

Token 680: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0001242772996192798
    2. ''' → logprob: -9.000123977661133
    3. '("' → logprob: -14.750123977661133
    4. '(' → logprob: -15.125123977661133
    5. 'NO' → logprob: -15.750123977661133
    6. '(NO' → logprob: -17.375123977661133
    7. ''S' → logprob: -18.500123977661133
    8. ''N' → logprob: -18.750123977661133
    9. '()' → logprob: -19.125123977661133
    10. '(
' → logprob: -19.250123977661133

Token 681: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.00020377879263833165
    2. ''' → logprob: -8.500204086303711
    3. 'No' → logprob: -15.500204086303711
    4. ' NO' → logprob: -17.75020408630371
    5. '"No' → logprob: -18.25020408630371
    6. '"' → logprob: -18.62520408630371
    7. '_NO' → logprob: -20.37520408630371
    8. 'no' → logprob: -20.75020408630371
    9. '.NO' → logprob: -21.87520408630371
    10. ''N' → logprob: -21.87520408630371

Token 682: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.20210762321949005
    2. ')' → logprob: -1.7021076679229736
    3. '()' → logprob: -7.8271074295043945
    4. '")' → logprob: -8.202107429504395
    5. '`)' → logprob: -12.077107429504395
    6. '())' → logprob: -12.202107429504395
    7. 'def' → logprob: -12.577107429504395
    8. '')
' → logprob: -12.952107429504395
    9. '```' → logprob: -13.077107429504395
    10. '#' → logprob: -14.452107429504395

Token 683: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005013040266931057
    2. '#' → logprob: -5.6300129890441895
    3. 'class' → logprob: -7.0050129890441895
    4. '```' → logprob: -8.630013465881348
    5. 'import' → logprob: -9.255013465881348
    6. '<|end|>' → logprob: -9.755013465881348
    7. 'from' → logprob: -9.880013465881348
    8. 'a' → logprob: -10.755013465881348
    9. 'if' → logprob: -11.255013465881348
    10. '\' → logprob: -11.630013465881348

Token 684: ' Increase' (ID: 65344)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09040132910013199
    2. '#' → logprob: -3.4654014110565186
    3. 'a' → logprob: -3.8404014110565186
    4. 'import' → logprob: -4.3404011726379395
    5. ')' → logprob: -5.3404011726379395
    6. 'if' → logprob: -5.5904011726379395
    7. 'N' → logprob: -5.9654011726379395
    8. 'n' → logprob: -5.9654011726379395
    9. 'A' → logprob: -6.7154011726379395
    10. 'pass' → logprob: -6.7154011726379395

Token 685: ' the' (ID: 290)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38277357816696167
    2. 'sys' → logprob: -1.6327736377716064
    3. ' recursion' → logprob: -2.3827736377716064
    4. 'rec' → logprob: -4.007773399353027
    5. '=sys' → logprob: -5.007773399353027
    6. 'def' → logprob: -6.257773399353027
    7. ' sys' → logprob: -6.507773399353027
    8. '(sys' → logprob: -6.757773399353027
    9. 'the' → logprob: -8.382773399353027
    10. '_rec' → logprob: -8.757773399353027

Token 686: ' recursion' (ID: 122185)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.206602543592453
    2. 'import' → logprob: -1.7066025733947754
    3. ' recursion' → logprob: -5.956602573394775
    4. 'sys' → logprob: -6.331602573394775
    5. '_rec' → logprob: -7.456602573394775
    6. '#' → logprob: -9.081602096557617
    7. 'def' → logprob: -10.581602096557617
    8. 'input' → logprob: -10.956602096557617
    9. '"""' → logprob: -11.206602096557617
    10. '递' → logprob: -11.456602096557617

Token 687: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.4021237802808173e-05
    2. '_limit' → logprob: -11.500014305114746
    3. ' limit' → logprob: -12.500014305114746
    4. '-limit' → logprob: -17.00001335144043
    5. 'Limit' → logprob: -17.37501335144043
    6. 'depth' → logprob: -19.12501335144043
    7. '(limit' → logprob: -19.62501335144043
    8. '.limit' → logprob: -19.62501335144043
    9. 'import' → logprob: -19.75001335144043
    10. 'limits' → logprob: -19.75001335144043

Token 688: ' to' (ID: 316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.31338047981262207
    2. 'sys' → logprob: -1.313380479812622
    3. '
' → logprob: -9.063380241394043
    4. '(sys' → logprob: -13.438380241394043
    5. '```' → logprob: -14.563380241394043
    6. ' sys' → logprob: -15.063380241394043
    7. '10' → logprob: -15.688380241394043
    8. '
' → logprob: -15.688380241394043
    9. '

' → logprob: -16.43838119506836
    10. '=sys' → logprob: -16.56338119506836

Token 689: ' handle' (ID: 5318)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -3.523948907968588e-05
    2. '100' → logprob: -10.375035285949707
    3. '(' → logprob: -13.750035285949707
    4. '300' → logprob: -14.000035285949707
    5. 'int' → logprob: -14.625035285949707
    6. '500' → logprob: -14.750035285949707
    7. '2' → logprob: -14.875035285949707
    8. '200' → logprob: -15.500035285949707
    9. 'pow' → logprob: -15.625035285949707
    10. '410' → logprob: -16.37503433227539

Token 690: ' deep' (ID: 8103)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -5.431207682704553e-05
    2. '100' → logprob: -10.000054359436035
    3. '(' → logprob: -13.125054359436035
    4. '200' → logprob: -13.250054359436035
    5. '500' → logprob: -13.375054359436035
    6. 'import' → logprob: -13.500054359436035
    7. '300' → logprob: -14.125054359436035
    8. ' ' → logprob: -14.250054359436035
    9. 'int' → logprob: -15.625054359436035
    10. '2' → logprob: -16.12505340576172

Token 691: ' rec' (ID: 1369)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.6563885807991028
    2. ' recursion' → logprob: -0.7813885807991028
    3. '```' → logprob: -4.406388759613037
    4. 'sys' → logprob: -5.281388759613037
    5. 'import' → logprob: -5.531388759613037
    6. 'recursive' → logprob: -7.281388759613037
    7. '   ' → logprob: -7.656388759613037
    8. ' rec' → logprob: -8.281388282775879
    9. 'depth' → logprob: -8.781388282775879
    10. '100' → logprob: -9.031388282775879

Token 692: 'urs' (ID: 1628)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.868328920158092e-05
    2. 'urs' → logprob: -11.000028610229492
    3. 'ursive' → logprob: -11.375028610229492
    4. 'ursor' → logprob: -15.875028610229492
    5. 'usr' → logprob: -16.125028610229492
    6. 'usion' → logprob: -16.500028610229492
    7. 'ur' → logprob: -17.500028610229492
    8. '```' → logprob: -17.500028610229492
    9. 'rs' → logprob: -17.875028610229492
    10. 'ersion' → logprob: -17.875028610229492

Token 693: 'ions' (ID: 756)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0011420035734772682
    2. 's' → logprob: -7.3761420249938965
    3. 'urs' → logprob: -7.7511420249938965
    4. 'ion' → logprob: -10.751141548156738
    5. 'ision' → logprob: -11.001141548156738
    6. '```' → logprob: -11.501141548156738
    7. 'rs' → logprob: -11.626141548156738
    8. '   ' → logprob: -12.126141548156738
    9. 'limit' → logprob: -12.251141548156738
    10. 'ursive' → logprob: -12.751141548156738

Token 694: ' if' (ID: 538)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4741131067276001
    2. 'import' → logprob: -0.9741131067276001
    3. '
' → logprob: -10.349113464355469
    4. '(sys' → logprob: -12.849113464355469
    5. '10' → logprob: -14.599113464355469
    6. ' sys' → logprob: -14.724113464355469
    7. '```' → logprob: -15.474113464355469
    8. '
' → logprob: -16.59911346435547
    9. '=sys' → logprob: -16.59911346435547
    10. '

' → logprob: -16.59911346435547

Token 695: ' necessary' (ID: 8155)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.036526989191770554
    2. 'necessary' → logprob: -3.536526918411255
    3. 'import' → logprob: -5.786527156829834
    4. ' needed' → logprob: -5.911527156829834
    5. 'required' → logprob: -7.786527156829834
    6. '_needed' → logprob: -8.161526679992676
    7. '```' → logprob: -9.036526679992676
    8. ' necessary' → logprob: -9.161526679992676
    9. '__' → logprob: -10.661526679992676
    10. 'Needed' → logprob: -11.911526679992676

Token 696: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4740866422653198
    2. 'sys' → logprob: -0.9740866422653198
    3. '
' → logprob: -11.59908676147461
    4. ' sys' → logprob: -15.22408676147461
    5. '```' → logprob: -15.97408676147461
    6. '(sys' → logprob: -16.47408676147461
    7. '10' → logprob: -18.09908676147461
    8. '

' → logprob: -18.22408676147461
    9. '
' → logprob: -18.34908676147461
    10. ' import' → logprob: -18.34908676147461

Token 697: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014163863845169544
    2. 'import' → logprob: -4.264163970947266
    3. ' sys' → logprob: -14.764163970947266
    4. '
' → logprob: -18.764163970947266
    5. '```' → logprob: -19.014163970947266
    6. '(sys' → logprob: -19.514163970947266
    7. '_sys' → logprob: -20.889163970947266
    8. '	sys' → logprob: -20.889163970947266
    9. '=sys' → logprob: -21.264163970947266
    10. ' import' → logprob: -21.889163970947266

Token 698: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.000343210413120687
    2. '.setdefault' → logprob: -8.000343322753906
    3. '.' → logprob: -12.000343322753906
    4. ' .' → logprob: -14.000343322753906
    5. '.stdin' → logprob: -14.875343322753906
    6. '.stdout' → logprob: -15.375343322753906
    7. '.Set' → logprob: -16.250343322753906
    8. '#set' → logprob: -16.250343322753906
    9. 'set' → logprob: -17.375343322753906
    10. '.stderr' → logprob: -18.125343322753906

Token 699: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00017755765293259174
    2. 'limit' → logprob: -8.875177383422852
    3. 'ursion' → logprob: -10.625177383422852
    4. '_rec' → logprob: -11.750177383422852
    5. ' recursion' → logprob: -12.625177383422852
    6. 'Rec' → logprob: -14.250177383422852
    7. 'depth' → logprob: -15.875177383422852
    8. 'import' → logprob: -16.00017738342285
    9. 'ec' → logprob: -16.00017738342285
    10. 'set' → logprob: -16.00017738342285

Token 700: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0001984146365430206
    2. 'limit' → logprob: -9.000198364257812
    3. 'ur' → logprob: -10.250198364257812
    4. 'urs' → logprob: -10.750198364257812
    5. 'ursive' → logprob: -11.625198364257812
    6. 'cur' → logprob: -12.375198364257812
    7. 'c' → logprob: -13.500198364257812
    8. 'ursively' → logprob: -13.625198364257812
    9. 'urst' → logprob: -15.000198364257812
    10. 'curse' → logprob: -15.000198364257812

Token 701: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.5107177862082608e-05
    2. '_limit' → logprob: -10.625024795532227
    3. 'lim' → logprob: -14.750024795532227
    4. ' limit' → logprob: -15.375024795532227
    5. 'imit' → logprob: -15.875024795532227
    6. 'depth' → logprob: -17.875024795532227
    7. 'ursion' → logprob: -18.125024795532227
    8. 'l' → logprob: -18.375024795532227
    9. '.limit' → logprob: -18.375024795532227
    10. 'ault' → logprob: -18.750024795532227

Token 702: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. '10' → logprob: -15.000000953674316
    3. '(
' → logprob: -15.250000953674316
    4. '((' → logprob: -15.500000953674316
    5. '(int' → logprob: -15.750000953674316
    6. ' (' → logprob: -16.000001907348633
    7. '100' → logprob: -16.500001907348633
    8. '(sys' → logprob: -17.625001907348633
    9. '250' → logprob: -18.875001907348633
    10. '()' → logprob: -19.375001907348633

Token 703: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.1008713702030946e-06
    2. '100' → logprob: -13.250001907348633
    3. '１０' → logprob: -15.000001907348633
    4. '410' → logprob: -18.375001907348633
    5. '300' → logprob: -18.625001907348633
    6. '500' → logprob: -18.875001907348633
    7. '214' → logprob: -19.000001907348633
    8. '200' → logprob: -19.375001907348633
    9. 'pow' → logprob: -19.500001907348633
    10. '(' → logprob: -19.750001907348633

Token 704: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0005149058997631073
    2. '7' → logprob: -7.625514984130859
    3. '6' → logprob: -11.12551498413086
    4. '000' → logprob: -11.87551498413086
    5. '8' → logprob: -12.50051498413086
    6. '00' → logprob: -14.50051498413086
    7. '```' → logprob: -15.12551498413086
    8. '(**' → logprob: -15.50051498413086
    9. '07' → logprob: -15.50051498413086
    10. ' **' → logprob: -16.25051498413086

Token 705: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001173917087726295
    2. '9' → logprob: -6.751173973083496
    3. '8' → logprob: -12.501173973083496
    4. '6' → logprob: -18.00117301940918
    5. '**' → logprob: -20.25117301940918
    6. '７' → logprob: -20.37617301940918
    7. '+' → logprob: -20.50117301940918
    8. '```' → logprob: -21.12617301940918
    9. '``' → logprob: -21.87617301940918
    10. '   ' → logprob: -22.87617301940918

Token 706: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0002627662615850568
    2. '9' → logprob: -8.250263214111328
    3. '8' → logprob: -13.500263214111328
    4. '6' → logprob: -19.375263214111328
    5. '７' → logprob: -20.875263214111328
    6. '+' → logprob: -21.000263214111328
    7. '```' → logprob: -21.125263214111328
    8. '**' → logprob: -21.250263214111328
    9. '``' → logprob: -22.500263214111328
    10. '10' → logprob: -23.500263214111328

Token 707: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. '))' → logprob: -18.25
    3. ')
' → logprob: -18.5
    4. ' )' → logprob: -18.75
    5. ')#' → logprob: -19.25
    6. '())' → logprob: -19.375
    7. ')`' → logprob: -20.125
    8. ')

' → logprob: -20.625
    9. ')}' → logprob: -21.125
    10. '),' → logprob: -21.5

Token 708: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08678797632455826
    2. '#' → logprob: -3.5867879390716553
    3. 'N' → logprob: -3.5867879390716553
    4. 'n' → logprob: -4.836788177490234
    5. 'import' → logprob: -4.961788177490234
    6. 'class' → logprob: -5.086788177490234
    7. 'if' → logprob: -5.836788177490234
    8. 'from' → logprob: -6.211788177490234
    9. 'A' → logprob: -7.586788177490234
    10. 'T' → logprob: -8.211788177490234

Token 709: ' Large' (ID: 27976)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015332594513893127
    2. '#' → logprob: -5.2653326988220215
    3. 'from' → logprob: -5.3903326988220215
    4. 'import' → logprob: -5.6403326988220215
    5. 'if' → logprob: -7.1403326988220215
    6. 'N' → logprob: -7.6403326988220215
    7. 'n' → logprob: -7.8903326988220215
    8. 'class' → logprob: -8.390332221984863
    9. 'MOD' → logprob: -11.765332221984863
    10. 'INF' → logprob: -11.890332221984863

Token 710: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.6399015188217163
    2. '#' → logprob: -1.2649015188217163
    3. 'number' → logprob: -3.514901638031006
    4. 'INT' → logprob: -3.764901638031006
    5. 'MOD' → logprob: -4.014901638031006
    6. 'MAX' → logprob: -4.139901638031006
    7. 'NUMBER' → logprob: -4.639901638031006
    8. 'int' → logprob: -4.639901638031006
    9. 'import' → logprob: -4.764901638031006
    10. 'N' → logprob: -4.889901638031006

Token 711: ' value' (ID: 1432)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -8.673547563375905e-05
    2. '10' → logprob: -9.750086784362793
    3. '=' → logprob: -10.625086784362793
    4. ' INF' → logprob: -13.500086784362793
    5. '_INF' → logprob: -13.750086784362793
    6. 'inf' → logprob: -14.000086784362793
    7. ' =' → logprob: -14.750086784362793
    8. 'INT' → logprob: -15.625086784362793
    9. 'IN' → logprob: -16.500085830688477
    10. 'import' → logprob: -17.250085830688477

Token 712: ' used' (ID: 2061)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -9.849109119386412e-06
    2. '10' → logprob: -12.125009536743164
    3. '=' → logprob: -13.375009536743164
    4. '_INF' → logprob: -13.750009536743164
    5. '
' → logprob: -14.250009536743164
    6. ' INF' → logprob: -14.625009536743164
    7. 'inf' → logprob: -15.250009536743164
    8. ' =' → logprob: -15.625009536743164
    9. 'IN' → logprob: -16.750009536743164
    10. '100' → logprob: -17.750009536743164

Token 713: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15520107746124268
    2. 'INF' → logprob: -2.030200958251953
    3. ' =' → logprob: -4.405200958251953
    4. '=sys' → logprob: -9.530200958251953
    5. '_INF' → logprob: -9.905200958251953
    6. '10' → logprob: -10.280200958251953
    7. 'inf' → logprob: -10.655200958251953
    8. '=int' → logprob: -11.280200958251953
    9. '100' → logprob: -12.405200958251953
    10. '#' → logprob: -12.405200958251953

Token 714: ' initial' (ID: 4871)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05547385662794113
    2. 'float' → logprob: -2.930473804473877
    3. 'sys' → logprob: -8.055474281311035
    4. 'INF' → logprob: -8.805474281311035
    5. 'inf' → logprob: -10.680474281311035
    6. 'int' → logprob: -10.680474281311035
    7. '_float' → logprob: -11.430474281311035
    8. 'FLOAT' → logprob: -11.555474281311035
    9. ' float' → logprob: -12.430474281311035
    10. 'math' → logprob: -12.430474281311035

Token 715: 'izations' (ID: 25434)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4466950595378876
    2. '=' → logprob: -1.69669508934021
    3. 'INF' → logprob: -3.32169508934021
    4. 'import' → logprob: -3.82169508934021
    5. 'distance' → logprob: -3.82169508934021
    6. 'value' → logprob: -3.94669508934021
    7. 'cost' → logprob: -3.94669508934021
    8. 'INT' → logprob: -4.696694850921631
    9. '=int' → logprob: -4.946694850921631
    10. '10' → logprob: -4.946694850921631

Token 716: '
' (ID: 198)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.0445127372804563e-05
    2. '10' → logprob: -11.62501049041748
    3. '_INF' → logprob: -14.62501049041748
    4. 'inf' → logprob: -15.00001049041748
    5. '
' → logprob: -15.00001049041748
    6. ' INF' → logprob: -15.25001049041748
    7. '=' → logprob: -17.000009536743164
    8. 'import' → logprob: -17.375009536743164
    9. 'IN' → logprob: -17.375009536743164
    10. '999' → logprob: -17.625009536743164

Token 717: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00043162284418940544
    2. '10' → logprob: -7.750431537628174
    3. ' INF' → logprob: -14.625432014465332
    4. '_INF' → logprob: -15.250432014465332
    5. 'inf' → logprob: -15.625432014465332
    6. 'IN' → logprob: -16.750431060791016
    7. 'import' → logprob: -17.250431060791016
    8. '100' → logprob: -19.000431060791016
    9. '999' → logprob: -19.250431060791016
    10. '
' → logprob: -19.250431060791016

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014203518629074
    2. ' =' → logprob: -1.7014203071594238
    3. '=int' → logprob: -11.951420783996582
    4. '＝' → logprob: -14.826420783996582
    5. '=sys' → logprob: -16.201419830322266
    6. '=float' → logprob: -16.326419830322266
    7. '   ' → logprob: -16.701419830322266
    8. 'int' → logprob: -17.326419830322266
    9. ' ' → logprob: -17.451419830322266
    10. '10' → logprob: -17.701419830322266

Token 719: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00018208740220870823
    2. 'float' → logprob: -8.625182151794434
    3. '1' → logprob: -13.125182151794434
    4. '100' → logprob: -15.125182151794434
    5. '(' → logprob: -17.125181198120117
    6. 'int' → logprob: -17.250181198120117
    7. ' ' → logprob: -17.250181198120117
    8. '4' → logprob: -17.500181198120117
    9. ' float' → logprob: -17.750181198120117
    10. '141' → logprob: -17.875181198120117

Token 720: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00014406509581021965
    2. 'float' → logprob: -8.875144004821777
    3. '1' → logprob: -12.500144004821777
    4. '100' → logprob: -16.000144958496094
    5. '4' → logprob: -16.625144958496094
    6. '2' → logprob: -16.625144958496094
    7. ' float' → logprob: -17.000144958496094
    8. '(' → logprob: -17.125144958496094
    9. '１０' → logprob: -17.750144958496094
    10. 'int' → logprob: -18.000144958496094

Token 721: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.3130348324775696
    2. '9' → logprob: -2.438034772872925
    3. '**' → logprob: -2.438034772872925
    4. '15' → logprob: -2.563034772872925
    5. '10' → logprob: -4.313035011291504
    6. '12' → logprob: -6.438035011291504
    7. '16' → logprob: -7.313035011291504
    8. '+' → logprob: -7.688035011291504
    9. '17' → logprob: -8.313035011291504
    10. '19' → logprob: -8.438035011291504

Token 722: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5780578255653381
    2. '18' → logprob: -0.8280578255653381
    3. '9' → logprob: -7.328057765960693
    4. '20' → logprob: -7.828057765960693
    5. '16' → logprob: -7.828057765960693
    6. '10' → logprob: -8.078058242797852
    7. '12' → logprob: -8.828058242797852
    8. '13' → logprob: -8.953058242797852
    9. '19' → logprob: -10.203058242797852
    10. '14' → logprob: -10.703058242797852

Token 723: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.4873370826244354
    2. '18' → logprob: -0.9873371124267578
    3. '9' → logprob: -4.487337112426758
    4. '10' → logprob: -7.112337112426758
    5. '12' → logprob: -7.362337112426758
    6. '16' → logprob: -8.612337112426758
    7. '20' → logprob: -8.987337112426758
    8. '13' → logprob: -9.362337112426758
    9. '19' → logprob: -10.112337112426758
    10. '14' → logprob: -10.612337112426758

Token 724: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 725: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013318813405930996
    2. '#' → logprob: -4.51331901550293
    3. 'class' → logprob: -7.13831901550293
    4. 'import' → logprob: -7.51331901550293
    5. 'from' → logprob: -8.26331901550293
    6. '```' → logprob: -9.01331901550293
    7. 'a' → logprob: -9.13831901550293
    8. 'A' → logprob: -9.51331901550293
    9. 'n' → logprob: -9.63831901550293
    10. 'N' → logprob: -10.26331901550293

Token 726: ' Mod' (ID: 7191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16902676224708557
    2. 'from' → logprob: -2.0440268516540527
    3. 'import' → logprob: -4.419026851654053
    4. 'class' → logprob: -5.044026851654053
    5. '#' → logprob: -5.169026851654053
    6. 'n' → logprob: -6.544026851654053
    7. 'N' → logprob: -8.419026374816895
    8. 'MOD' → logprob: -9.669026374816895
    9. 'a' → logprob: -10.794026374816895
    10. 'A' → logprob: -10.919026374816895

Token 727: 'ulo' (ID: 5953)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33316048979759216
    2. ' =' → logprob: -1.3331605195999146
    3. 'MOD' → logprob: -4.458160400390625
    4. 'ULO' → logprob: -5.833160400390625
    5. '10' → logprob: -5.958160400390625
    6. '_MOD' → logprob: -7.458160400390625
    7. '998' → logprob: -7.708160400390625
    8. '7' → logprob: -7.958160400390625
    9. '100' → logprob: -8.208160400390625
    10. ' ' → logprob: -8.958160400390625

Token 728: ' value' (ID: 1432)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6950491666793823
    2. ' =' → logprob: -0.6950491666793823
    3. 'MOD' → logprob: -6.320049285888672
    4. '998' → logprob: -9.695049285888672
    5. '10' → logprob: -11.070049285888672
    6. '100' → logprob: -11.320049285888672
    7. ' MOD' → logprob: -13.195049285888672
    8. '_MOD' → logprob: -13.445049285888672
    9. '_' → logprob: -13.570049285888672
    10. 'mod' → logprob: -14.070049285888672

Token 729: ' commonly' (ID: 22378)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03627593815326691
    2. 'MOD' → logprob: -3.536275863647461
    3. ' =' → logprob: -5.036275863647461
    4. '=
' → logprob: -13.411275863647461
    5. 'mod' → logprob: -13.536275863647461
    6. '_MOD' → logprob: -13.911275863647461
    7. ' MOD' → logprob: -14.286275863647461
    8. '998' → logprob: -14.536275863647461
    9. '100' → logprob: -14.911275863647461
    10. '10' → logprob: -15.286275863647461

Token 730: ' used' (ID: 2061)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -5.741137283621356e-05
    2. ' =' → logprob: -9.875057220458984
    3. 'mod' → logprob: -12.875057220458984
    4. 'MOD' → logprob: -13.125057220458984
    5. 'used' → logprob: -14.625057220458984
    6. '```' → logprob: -15.000057220458984
    7. '`' → logprob: -15.875057220458984
    8. '998' → logprob: -16.500057220458984
    9. '=
' → logprob: -16.625057220458984
    10. '100' → logprob: -17.000057220458984

Token 731: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014507699757814407
    2. ' =' → logprob: -4.26450777053833
    3. 'MOD' → logprob: -8.014507293701172
    4. '10' → logprob: -12.014507293701172
    5. '=
' → logprob: -13.139507293701172
    6. '998' → logprob: -13.639507293701172
    7. '_' → logprob: -13.639507293701172
    8. '100' → logprob: -13.889507293701172
    9. 'mod' → logprob: -13.889507293701172
    10. ' MOD' → logprob: -15.264507293701172

Token 732: ' competitive' (ID: 18602)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38767680525779724
    2. '998' → logprob: -1.1376768350601196
    3. '(' → logprob: -8.137677192687988
    4. '100' → logprob: -8.262677192687988
    5. 'int' → logprob: -8.887677192687988
    6. 'MOD' → logprob: -9.762677192687988
    7. '```' → logprob: -10.512677192687988
    8. 'mod' → logprob: -12.387677192687988
    9. '`' → logprob: -12.637677192687988
    10. '#' → logprob: -12.887677192687988

Token 733: ' programming' (ID: 23238)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.02017570100724697
    2. ' programming' → logprob: -4.395175933837891
    3. 'Programming' → logprob: -5.645175933837891
    4. 'mod' → logprob: -6.770175933837891
    5. '_program' → logprob: -6.770175933837891
    6. 'competitive' → logprob: -7.020175933837891
    7. '```' → logprob: -7.895175933837891
    8. 'prog' → logprob: -8.27017593383789
    9. '-program' → logprob: -10.27017593383789
    10. 'programm' → logprob: -10.52017593383789

Token 734: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00024370834580622613
    2. '998' → logprob: -8.750244140625
    3. '10' → logprob: -9.875244140625
    4. 'mod' → logprob: -11.375244140625
    5. '=' → logprob: -11.500244140625
    6. ' MOD' → logprob: -12.875244140625
    7. '100' → logprob: -13.250244140625
    8. '
' → logprob: -13.375244140625
    9. '```' → logprob: -13.750244140625
    10. ' =' → logprob: -13.875244140625

Token 735: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.431207682704553e-05
    2. 'mod' → logprob: -10.500054359436035
    3. '998' → logprob: -11.000054359436035
    4. '10' → logprob: -11.875054359436035
    5. ' MOD' → logprob: -13.625054359436035
    6. 'MD' → logprob: -14.125054359436035
    7. 'M' → logprob: -14.250054359436035
    8. '100' → logprob: -15.625054359436035
    9. 'Mod' → logprob: -15.750054359436035
    10. 'MO' → logprob: -16.25005340576172

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ':' → logprob: -16.075939178466797
    4. '＝' → logprob: -17.950939178466797
    5. '100' → logprob: -18.075939178466797
    6. ',' → logprob: -18.325939178466797
    7. '10' → logprob: -18.575939178466797
    8. '=int' → logprob: -18.575939178466797
    9. ' ' → logprob: -18.950939178466797
    10. ' =
' → logprob: -19.075939178466797

Token 737: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.338466093642637e-05
    2. '998' → logprob: -9.875073432922363
    3. '100' → logprob: -10.750073432922363
    4. ' ' → logprob: -15.375073432922363
    5. '１０' → logprob: -16.500072479248047
    6. '(' → logprob: -16.625072479248047
    7. '1' → logprob: -16.750072479248047
    8. 'int' → logprob: -17.375072479248047
    9. '```' → logprob: -19.375072479248047
    10. '=' → logprob: -19.500072479248047

Token 738: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.951771421066951e-05
    2. '998' → logprob: -10.750029563903809
    3. '100' → logprob: -11.750029563903809
    4. 'int' → logprob: -16.250028610229492
    5. '１０' → logprob: -16.875028610229492
    6. '(' → logprob: -18.000028610229492
    7. '1' → logprob: -18.250028610229492
    8. ' ' → logprob: -19.875028610229492
    9. '```' → logprob: -20.250028610229492
    10. 'pow' → logprob: -21.500028610229492

Token 739: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002111694193445146
    2. '09' → logprob: -9.000210762023926
    3. '**' → logprob: -9.500210762023926
    4. '```' → logprob: -11.875210762023926
    5. '+' → logprob: -12.500210762023926
    6. ' ' → logprob: -14.375210762023926
    7. '000' → logprob: -14.625210762023926
    8. '``' → logprob: -15.250210762023926
    9. '99' → logprob: -15.750210762023926
    10. '９' → logprob: -15.875210762023926

Token 740: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.75
    3. '```' → logprob: -19.875
    4. '９' → logprob: -21.625
    5. ' ' → logprob: -22.375
    6. '+' → logprob: -23.0
    7. '19' → logprob: -23.5
    8. '``' → logprob: -23.75
    9. '
' → logprob: -23.875
    10. '   ' → logprob: -24.0

Token 741: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.125
    3. '９' → logprob: -22.125
    4. '```' → logprob: -22.25
    5. '19' → logprob: -23.625
    6. '+' → logprob: -24.5
    7. ' ' → logprob: -24.625
    8. '``' → logprob: -25.0
    9. '99' → logprob: -25.25
    10. '18' → logprob: -25.25

Token 742: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.023293538717553e-05
    2. '7' → logprob: -10.500030517578125
    3. ' +' → logprob: -12.875030517578125
    4. '+
' → logprob: -17.000030517578125
    5. '＋' → logprob: -17.375030517578125
    6. '```' → logprob: -18.750030517578125
    7. 'plus' → logprob: -19.000030517578125
    8. ' ' → logprob: -21.250030517578125
    9. '
' → logprob: -21.750030517578125
    10. ' plus' → logprob: -21.875030517578125

Token 743: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -23.25
    3. '+' → logprob: -23.375
    4. '07' → logprob: -23.875
    5. '７' → logprob: -23.875
    6. ' ' → logprob: -25.125
    7. '   ' → logprob: -25.125
    8. '' → logprob: -26.875
    9. '``' → logprob: -27.0
    10. '۷' → logprob: -27.25

Token 744: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '７' → logprob: -23.125
    3. '```' → logprob: -24.375
    4. '07' → logprob: -25.375
    5. '+' → logprob: -25.375
    6. '   ' → logprob: -25.75
    7. ' ' → logprob: -26.0
    8. '۷' → logprob: -26.125
    9. '७' → logprob: -27.0
    10. '٧' → logprob: -27.25

Token 745: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 746: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00474102608859539
    2. 'class' → logprob: -6.379741191864014
    3. 'n' → logprob: -6.754741191864014
    4. 'N' → logprob: -7.004741191864014
    5. 'from' → logprob: -7.754741191864014
    6. '#' → logprob: -8.004740715026855
    7. 'import' → logprob: -8.629740715026855
    8. 'if' → logprob: -12.254740715026855
    9. 'a' → logprob: -12.629740715026855
    10. 's' → logprob: -13.004740715026855

Token 747: ' Seg' (ID: 13616)
  Prédit: 'Deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Deque' → logprob: -1.3676620721817017
    2. 'deque' → logprob: -1.3676620721817017
    3. ' Union' → logprob: -1.8676620721817017
    4. ' deque' → logprob: -1.9926620721817017
    5. ' Segment' → logprob: -3.242661952972412
    6. ' Counter' → logprob: -3.617661952972412
    7. 'Segment' → logprob: -3.742661952972412
    8. ' defaultdict' → logprob: -4.117661952972412
    9. 'Union' → logprob: -4.492661952972412
    10. ' Solution' → logprob: -4.617661952972412

Token 748: 'Tree' (ID: 8062)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.050308529287576675
    2. 'Tree' → logprob: -3.0503084659576416
    3. 'ment' → logprob: -6.675308704376221
    4. 'ement' → logprob: -8.050308227539062
    5. 'mented' → logprob: -9.175308227539062
    6. 'mentation' → logprob: -11.425308227539062
    7. 'class' → logprob: -12.050308227539062
    8. ' tree' → logprob: -12.300308227539062
    9. '_tree' → logprob: -12.550308227539062
    10. '```' → logprob: -12.675308227539062

Token 749: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005087109748274088
    2. ':
' → logprob: -7.750508785247803
    3. '(object' → logprob: -10.000508308410645
    4. '():' → logprob: -10.625508308410645
    5. '(' → logprob: -13.250508308410645
    6. ':def' → logprob: -13.750508308410645
    7. '(S' → logprob: -14.250508308410645
    8. '<class' → logprob: -14.500508308410645
    9. ' :' → logprob: -14.625508308410645
    10. '{' → logprob: -14.625508308410645

Token 750: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004163521807640791
    2. ':
' → logprob: -5.62916374206543
    3. '(object' → logprob: -7.75416374206543
    4. ':def' → logprob: -10.12916374206543
    5. '   ' → logprob: -10.62916374206543
    6. '():' → logprob: -10.75416374206543
    7. 'def' → logprob: -11.50416374206543
    8. '(' → logprob: -11.50416374206543
    9. '```' → logprob: -12.12916374206543
    10. '<|end|>' → logprob: -13.00416374206543

Token 751: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6743079423904419
    2. ' def' → logprob: -1.424307942390442
    3. ':' → logprob: -2.0493078231811523
    4. '   ' → logprob: -2.1743078231811523
    5. ':def' → logprob: -5.174307823181152
    6. ' :' → logprob: -7.924307823181152
    7. ':
' → logprob: -8.174307823181152
    8. '(' → logprob: -8.674307823181152
    9. 'class' → logprob: -8.674307823181152
    10. '(object' → logprob: -8.674307823181152

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42129775881767273
    2. 'init' → logprob: -1.9212977886199951
    3. 'class' → logprob: -2.421297788619995
    4. '__' → logprob: -2.546297788619995
    5. ' __' → logprob: -3.671297788619995
    6. 'def' → logprob: -6.046297550201416
    7. ' def' → logprob: -7.296297550201416
    8. '  ' → logprob: -7.796297550201416
    9. ' init' → logprob: -7.796297550201416
    10. '_init' → logprob: -8.546298027038574

Token 753: ' Segment' (ID: 64922)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7004192471504211
    2. '   ' → logprob: -1.0754191875457764
    3. ' def' → logprob: -2.8254191875457764
    4. 'def' → logprob: -2.8254191875457764
    5. ':' → logprob: -3.7004191875457764
    6. ' class' → logprob: -4.0754194259643555
    7. '    ' → logprob: -7.2004194259643555
    8. ' """' → logprob: -7.7004194259643555
    9. '"""' → logprob: -8.450419425964355
    10. ':def' → logprob: -8.700419425964355

Token 754: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.000737442634999752
    2. ' Tree' → logprob: -7.87573766708374
    3. '   ' → logprob: -8.750737190246582
    4. '<Tree' → logprob: -9.375737190246582
    5. '(Tree' → logprob: -10.000737190246582
    6. '	Tree' → logprob: -10.250737190246582
    7. 'ree' → logprob: -11.375737190246582
    8. '```' → logprob: -11.375737190246582
    9. 'Tre' → logprob: -12.875737190246582
    10. '_T' → logprob: -13.500737190246582

Token 755: ' implementation' (ID: 13847)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16296806931495667
    2. ':
' → logprob: -1.9129680395126343
    3. '():' → logprob: -7.287968158721924
    4. '   ' → logprob: -7.537968158721924
    5. '):' → logprob: -8.162967681884766
    6. '(object' → logprob: -8.537967681884766
    7. '():
' → logprob: -8.787967681884766
    8. '):
' → logprob: -8.912967681884766
    9. '(' → logprob: -9.537967681884766
    10. '{' → logprob: -9.662967681884766

Token 756: ' supporting' (ID: 18604)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05706341192126274
    2. ':
' → logprob: -2.932063341140747
    3. '(object' → logprob: -7.307063579559326
    4. '   ' → logprob: -7.432063579559326
    5. '):' → logprob: -7.557063579559326
    6. '():' → logprob: -9.307063102722168
    7. '):
' → logprob: -9.432063102722168
    8. '(' → logprob: -9.557063102722168
    9. '():
' → logprob: -11.182063102722168
    10. ' for' → logprob: -11.307063102722168

Token 757: ' point' (ID: 2438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45378047227859497
    2. ' self' → logprob: -1.7037804126739502
    3. 'self' → logprob: -1.8287804126739502
    4. 'def' → logprob: -4.578780651092529
    5. ' None' → logprob: -6.203780651092529
    6. 'min' → logprob: -6.453780651092529
    7. '__' → logprob: -6.578780651092529
    8. '       ' → logprob: -6.703780651092529
    9. '):
' → logprob: -6.953780651092529
    10. 'init' → logprob: -7.078780651092529

Token 758: ' updates' (ID: 12663)
  Prédit: ' updates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.6163172721862793
    2. '   ' → logprob: -1.2413172721862793
    3. 'updates' → logprob: -2.6163172721862793
    4. 'update' → logprob: -3.1163172721862793
    5. ' update' → logprob: -3.6163172721862793
    6. '_update' → logprob: -3.9913172721862793
    7. '_updates' → logprob: -5.616317272186279
    8. '-update' → logprob: -6.741317272186279
    9. 'Updates' → logprob: -6.991317272186279
    10. '更新' → logprob: -7.366317272186279

Token 759: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1821102350950241
    2. '   ' → logprob: -1.8071101903915405
    3. 'and' → logprob: -6.18211030960083
    4. ',' → logprob: -8.807109832763672
    5. '<|end|>' → logprob: -9.307109832763672
    6. '.' → logprob: -10.932109832763672
    7. ':' → logprob: -11.682109832763672
    8. '    ' → logprob: -12.307109832763672
    9. ')' → logprob: -12.307109832763672
    10. ' with' → logprob: -12.557109832763672

Token 760: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6933302283287048
    2. 'range' → logprob: -0.6933302283287048
    3. '_range' → logprob: -10.193329811096191
    4. '   ' → logprob: -10.193329811096191
    5. ' queries' → logprob: -10.568329811096191
    6. 'interval' → logprob: -11.068329811096191
    7. ' interval' → logprob: -11.318329811096191
    8. '
' → logprob: -11.693329811096191
    9. 'r' → logprob: -11.818329811096191
    10. ' ' → logprob: -11.943329811096191

Token 761: ' queries' (ID: 32122)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5103573799133301
    2. ' queries' → logprob: -1.51035737991333
    3. 'minimum' → logprob: -1.88535737991333
    4. 'queries' → logprob: -3.88535737991333
    5. 'query' → logprob: -6.63535737991333
    6. '   ' → logprob: -6.63535737991333
    7. 'min' → logprob: -7.01035737991333
    8. '_query' → logprob: -7.51035737991333
    9. '_min' → logprob: -7.51035737991333
    10. ' query' → logprob: -7.63535737991333

Token 762: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10757265239953995
    2. ':
' → logprob: -2.732572555541992
    3. '   ' → logprob: -3.357572555541992
    4. '.' → logprob: -6.982572555541992
    5. ' with' → logprob: -8.482572555541992
    6. '<|end|>' → logprob: -8.607572555541992
    7. '):' → logprob: -8.732572555541992
    8. '):
' → logprob: -9.107572555541992
    9. ' for' → logprob: -9.232572555541992
    10. '```' → logprob: -9.607572555541992

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01676834188401699
    2. ':' → logprob: -4.391768455505371
    3. ':
' → logprob: -6.266768455505371
    4. '):
' → logprob: -7.266768455505371
    5. '
' → logprob: -7.891768455505371
    6. ')' → logprob: -8.141768455505371
    7. '):' → logprob: -8.141768455505371
    8. '<|end|>' → logprob: -8.266768455505371
    9. 'def' → logprob: -8.766768455505371
    10. '```' → logprob: -9.391768455505371

Token 764: ' Useful' (ID: 91124)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11376388370990753
    2. '
' → logprob: -2.4887638092041016
    3. ' def' → logprob: -4.988763809204102
    4. '    
' → logprob: -5.363763809204102
    5. '```' → logprob: -5.613763809204102
    6. 'def' → logprob: -5.863763809204102
    7. '):
' → logprob: -6.613763809204102
    8. '"""
' → logprob: -6.738763809204102
    9. ' """
' → logprob: -7.113763809204102
    10. ' 
' → logprob: -7.613763809204102

Token 765: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1604250818490982
    2. 'for' → logprob: -1.910425066947937
    3. '   ' → logprob: -8.785425186157227
    4. '  ' → logprob: -11.285425186157227
    5. '    ' → logprob: -11.535425186157227
    6. ' ' → logprob: -11.660425186157227
    7. '.' → logprob: -12.285425186157227
    8. 'class' → logprob: -12.535425186157227
    9. ' in' → logprob: -12.660425186157227
    10. ':' → logprob: -13.285425186157227

Token 766: ' efficient' (ID: 12430)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20373164117336273
    2. ' range' → logprob: -1.703731656074524
    3. 'sum' → logprob: -7.578731536865234
    4. 'efficient' → logprob: -7.703731536865234
    5. 'perform' → logprob: -8.203731536865234
    6. ' efficient' → logprob: -8.578731536865234
    7. 'fast' → logprob: -9.328731536865234
    8. ' sum' → logprob: -9.328731536865234
    9. 'interval' → logprob: -9.828731536865234
    10. 'dynamic' → logprob: -10.078731536865234

Token 767: ' min' (ID: 1349)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10574072599411011
    2. 'range' → logprob: -2.480740785598755
    3. ' data' → logprob: -5.605740547180176
    4. '   ' → logprob: -6.355740547180176
    5. ' dynamic' → logprob: -6.730740547180176
    6. ' sum' → logprob: -6.730740547180176
    7. ' array' → logprob: -6.980740547180176
    8. ' maximum' → logprob: -7.355740547180176
    9. 'minimum' → logprob: -7.355740547180176
    10. 'max' → logprob: -7.480740547180176

Token 768: ',' (ID: 11)
  Prédit: 'imum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.005334555171430111
    2. '   ' → logprob: -6.255334377288818
    3. 'im' → logprob: -7.130334377288818
    4. '/max' → logprob: -7.255334377288818
    5. ' queries' → logprob: -8.130334854125977
    6. ',' → logprob: -8.130334854125977
    7. 'imal' → logprob: -8.380334854125977
    8. 'and' → logprob: -8.505334854125977
    9. ' and' → logprob: -8.630334854125977
    10. ' or' → logprob: -8.880334854125977

Token 769: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008738900534808636
    2. ' max' → logprob: -4.758738994598389
    3. 'sum' → logprob: -9.13373851776123
    4. '   ' → logprob: -11.25873851776123
    5. ' sum' → logprob: -13.38373851776123
    6. 'or' → logprob: -13.50873851776123
    7. ' or' → logprob: -15.38373851776123
    8. 'range' → logprob: -16.633739471435547
    9. ',max' → logprob: -16.633739471435547
    10. '_max' → logprob: -16.758739471435547

Token 770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4036282002925873
    2. ' or' → logprob: -1.9036282300949097
    3. 'imum' → logprob: -2.90362811088562
    4. 'and' → logprob: -3.02862811088562
    5. 'or' → logprob: -3.52862811088562
    6. ' and' → logprob: -4.278628349304199
    7. ' queries' → logprob: -4.278628349304199
    8. 'queries' → logprob: -4.778628349304199
    9. '   ' → logprob: -5.028628349304199
    10. '_query' → logprob: -5.653628349304199

Token 771: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009256129153072834
    2. ' sum' → logprob: -5.134256362915039
    3. 'max' → logprob: -6.134256362915039
    4. '   ' → logprob: -7.009256362915039
    5. 'or' → logprob: -9.259256362915039
    6. 'and' → logprob: -9.634256362915039
    7. 'def' → logprob: -9.884256362915039
    8. '_sum' → logprob: -11.259256362915039
    9. ' or' → logprob: -11.759256362915039
    10. ' max' → logprob: -12.259256362915039

Token 772: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06866854429244995
    2. ' queries' → logprob: -3.1936686038970947
    3. 'queries' → logprob: -4.318668365478516
    4. ' operations' → logprob: -5.943668365478516
    5. 'and' → logprob: -5.943668365478516
    6. ' or' → logprob: -6.193668365478516
    7. '_queries' → logprob: -6.568668365478516
    8. 'or' → logprob: -7.193668365478516
    9. 'operations' → logprob: -7.193668365478516
    10. 'query' → logprob: -7.943668365478516

Token 773: 'etc' (ID: 25255)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4950487017631531
    2. ')' → logprob: -0.9950487017631531
    3. ' or' → logprob: -4.870048522949219
    4. 'or' → logprob: -5.120048522949219
    5. '),' → logprob: -5.370048522949219
    6. 'range' → logprob: -7.620048522949219
    7. 'and' → logprob: -8.245048522949219
    8. ' )' → logprob: -8.620048522949219
    9. '   ' → logprob: -8.870048522949219
    10. ',)' → logprob: -8.870048522949219

Token 774: '.)' (ID: 8476)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02179119735956192
    2. ' operations' → logprob: -4.646790981292725
    3. ',' → logprob: -5.146790981292725
    4. ' queries' → logprob: -6.271790981292725
    5. ' or' → logprob: -6.771790981292725
    6. '-range' → logprob: -7.396790981292725
    7. '),' → logprob: -7.646790981292725
    8. 'or' → logprob: -7.646790981292725
    9. '):' → logprob: -8.646791458129883
    10. ' )' → logprob: -8.646791458129883

Token 775: ' queries' (ID: 32122)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.21046173572540283
    2. ' queries' → logprob: -1.8354617357254028
    3. 'operations' → logprob: -4.585461616516113
    4. 'queries' → logprob: -4.960461616516113
    5. ',' → logprob: -5.460461616516113
    6. '.' → logprob: -6.335461616516113
    7. ' query' → logprob: -6.460461616516113
    8. ' or' → logprob: -6.585461616516113
    9. '   ' → logprob: -7.210461616516113
    10. ' operation' → logprob: -7.460461616516113

Token 776: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18027374148368835
    2. ':
' → logprob: -2.6802737712860107
    3. '   ' → logprob: -2.8052737712860107
    4. '.' → logprob: -3.5552737712860107
    5. ',' → logprob: -5.430273532867432
    6. '):
' → logprob: -7.805273532867432
    7. ' and' → logprob: -7.805273532867432
    8. ' with' → logprob: -8.05527400970459
    9. ' on' → logprob: -8.05527400970459
    10. '):' → logprob: -8.18027400970459

Token 777: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.022647500038147
    2. 'Python' → logprob: -1.897647500038147
    3. 'competitive' → logprob: -2.1476473808288574
    4. 'array' → logprob: -2.6476473808288574
    5. 'range' → logprob: -2.8976473808288574
    6. 'log' → logprob: -2.8976473808288574
    7. 'var' → logprob: -3.7726473808288574
    8. 'many' → logprob: -4.022647380828857
    9. 'interval' → logprob: -4.147647380828857
    10. 'python' → logprob: -4.147647380828857

Token 778: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9443555474281311
    2. ' range' → logprob: -1.8193554878234863
    3. 'segment' → logprob: -2.4443554878234863
    4. 'general' → logprob: -2.6943554878234863
    5. 'def' → logprob: -2.8193554878234863
    6. ' general' → logprob: -3.0693554878234863
    7. 'specific' → logprob: -3.1943554878234863
    8. ' segment' → logprob: -3.4443554878234863
    9. 'generic' → logprob: -4.319355487823486
    10. ' wide' → logprob: -4.569355487823486

Token 779: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32844170928001404
    2. ':
' → logprob: -1.9534417390823364
    3. ':' → logprob: -2.328441619873047
    4. '):
' → logprob: -3.703441619873047
    5. '):' → logprob: -5.078441619873047
    6. '.' → logprob: -5.578441619873047
    7. ',' → logprob: -6.953441619873047
    8. '(' → logprob: -7.203441619873047
    9. ')' → logprob: -7.328441619873047
    10. '(object' → logprob: -7.453441619873047

Token 780: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011284325737506151
    2. ' def' → logprob: -7.126128196716309
    3. 'def' → logprob: -8.501128196716309
    4. '
' → logprob: -10.001128196716309
    5. ')' → logprob: -10.376128196716309
    6. '    
' → logprob: -11.001128196716309
    7. ':' → logprob: -12.001128196716309
    8. 'class' → logprob: -12.626128196716309
    9. '```' → logprob: -12.626128196716309
    10. '    ' → logprob: -12.751128196716309

Token 781: ' Public' (ID: 5473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2704417407512665
    2. ' def' → logprob: -2.020441770553589
    3. 'def' → logprob: -2.270441770553589
    4. ')' → logprob: -7.39544153213501
    5. '    
' → logprob: -8.895442008972168
    6. '    ' → logprob: -9.145442008972168
    7. '):
' → logprob: -9.395442008972168
    8. '
' → logprob: -10.395442008972168
    9. '):' → logprob: -10.520442008972168
    10. 'class' → logprob: -10.770442008972168

Token 782: ' Methods' (ID: 33276)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014887234196066856
    2. ' :' → logprob: -5.26488733291626
    3. '   ' → logprob: -5.63988733291626
    4. 'def' → logprob: -6.13988733291626
    5. '):' → logprob: -6.38988733291626
    6. ' ' → logprob: -7.38988733291626
    7. ' def' → logprob: -7.51488733291626
    8. ':
' → logprob: -7.76488733291626
    9. '(' → logprob: -8.889886856079102
    10. '():' → logprob: -9.264886856079102

Token 783: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08425997197628021
    2. ':
' → logprob: -2.8342599868774414
    3. '(' → logprob: -5.084259986877441
    4. '<|end|>' → logprob: -5.459259986877441
    5. '   ' → logprob: -5.709259986877441
    6. 'def' → logprob: -6.209259986877441
    7. '(
' → logprob: -6.584259986877441
    8. '```' → logprob: -7.209259986877441
    9. '():
' → logprob: -7.334259986877441
    10. '<|end|>' → logprob: -7.709259986877441

Token 784: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020557187497615814
    2. '
' → logprob: -4.895557403564453
    3. '    
' → logprob: -5.520557403564453
    4. 'def' → logprob: -5.645557403564453
    5. ' def' → logprob: -6.145557403564453
    6. '```' → logprob: -6.395557403564453
    7. '    ' → logprob: -7.520557403564453
    8. '  
' → logprob: -8.395557403564453
    9. 'class' → logprob: -8.520557403564453
    10. ':' → logprob: -9.145557403564453

Token 785: ' -' (ID: 533)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4601215422153473
    2. ' __' → logprob: -1.210121512413025
    3. ' def' → logprob: -3.2101216316223145
    4. 'def' → logprob: -3.8351216316223145
    5. '   ' → logprob: -4.9601216316223145
    6. ' update' → logprob: -7.4601216316223145
    7. 'update' → logprob: -7.8351216316223145
    8. 'init' → logprob: -7.9601216316223145
    9. ' init' → logprob: -9.335121154785156
    10. '```' → logprob: -10.210121154785156

Token 786: ' update' (ID: 4027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1427980214357376
    2. ' __' → logprob: -2.0177979469299316
    3. ' def' → logprob: -9.89279842376709
    4. 'def' → logprob: -10.01779842376709
    5. ' build' → logprob: -11.64279842376709
    6. 'build' → logprob: -12.39279842376709
    7. 'init' → logprob: -12.76779842376709
    8. '   ' → logprob: -12.89279842376709
    9. 'update' → logprob: -13.51779842376709
    10. '`' → logprob: -13.64279842376709

Token 787: '(i' (ID: 3649)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008437743410468102
    2. '(' → logprob: -5.008437633514404
    3. ':' → logprob: -7.008437633514404
    4. 'self' → logprob: -8.508438110351562
    5. 'def' → logprob: -8.758438110351562
    6. '   ' → logprob: -8.883438110351562
    7. '.' → logprob: -9.008438110351562
    8. ')' → logprob: -9.883438110351562
    9. '(
' → logprob: -10.133438110351562
    10. ',' → logprob: -10.633438110351562

Token 788: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006569160032086074
    2. ')' → logprob: -8.250657081604004
    3. 'self' → logprob: -8.500657081604004
    4. ' ,' → logprob: -9.125657081604004
    5. '):' → logprob: -9.875657081604004
    6. ',p' → logprob: -12.000657081604004
    7. '   ' → logprob: -12.375657081604004
    8. '(self' → logprob: -12.500657081604004
    9. 'p' → logprob: -12.875657081604004
    10. '):
' → logprob: -13.000657081604004

Token 789: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002881549298763275
    2. 'v' → logprob: -5.8778815269470215
    3. 'val' → logprob: -9.87788200378418
    4. ' x' → logprob: -10.75288200378418
    5. '   ' → logprob: -13.37788200378418
    6. 'value' → logprob: -13.62788200378418
    7. '```' → logprob: -14.87788200378418
    8. ' v' → logprob: -15.25288200378418
    9. '    
' → logprob: -16.25288200378418
    10. 'd' → logprob: -16.50288200378418

Token 790: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6570411920547485
    2. ')' → logprob: -0.7820411920547485
    3. '):
' → logprob: -3.907041072845459
    4. ',' → logprob: -5.657041072845459
    5. ')
' → logprob: -8.032041549682617
    6. '):
' → logprob: -9.657041549682617
    7. ')`' → logprob: -9.657041549682617
    8. '   ' → logprob: -10.907041549682617
    9. ')**' → logprob: -11.032041549682617
    10. ' )' → logprob: -11.032041549682617

Token 791: ' update' (ID: 4027)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28012868762016296
    2. ')' → logprob: -2.6551287174224854
    3. '       ' → logprob: -2.7801287174224854
    4. 'def' → logprob: -3.7801287174224854
    5. ' Update' → logprob: -3.9051287174224854
    6. 'Update' → logprob: -4.405128479003906
    7. ' def' → logprob: -4.530128479003906
    8. ' Set' → logprob: -4.780128479003906
    9. ' Updates' → logprob: -4.905128479003906
    10. 'Set' → logprob: -5.030128479003906

Token 792: ' value' (ID: 1432)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0017033815383911
    2. ' the' → logprob: -1.1267033815383911
    3. '(i' → logprob: -2.2517032623291016
    4. ')' → logprob: -2.3767032623291016
    5. '(' → logprob: -3.2517032623291016
    6. 'the' → logprob: -3.7517032623291016
    7. 'self' → logprob: -4.126703262329102
    8. ' ' → logprob: -4.751703262329102
    9. '   ' → logprob: -4.751703262329102
    10. ' self' → logprob: -5.001703262329102

Token 793: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.11432907730340958
    2. '(i' → logprob: -2.9893290996551514
    3. ')' → logprob: -3.6143290996551514
    4. '   ' → logprob: -4.364328861236572
    5. 'at' → logprob: -4.989328861236572
    6. ',' → logprob: -5.239328861236572
    7. ' ' → logprob: -5.864328861236572
    8. '[i' → logprob: -6.239328861236572
    9. '(self' → logprob: -8.11432933807373
    10. '_at' → logprob: -8.23932933807373

Token 794: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0927698165178299
    2. 'i' → logprob: -2.8427698612213135
    3. ' index' → logprob: -3.8427698612213135
    4. ' i' → logprob: -5.467769622802734
    5. 'position' → logprob: -5.717769622802734
    6. ' position' → logprob: -7.092769622802734
    7. 'self' → logprob: -8.467769622802734
    8. '   ' → logprob: -8.842769622802734
    9. 'a' → logprob: -9.342769622802734
    10. ')' → logprob: -9.592769622802734

Token 795: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7194386124610901
    2. '(i' → logprob: -1.2194385528564453
    3. ' (' → logprob: -2.7194385528564453
    4. ',' → logprob: -2.8444385528564453
    5. ' i' → logprob: -3.2194385528564453
    6. 'i' → logprob: -4.469438552856445
    7. '   ' → logprob: -4.469438552856445
    8. '(self' → logprob: -4.594438552856445
    9. ')
' → logprob: -4.969438552856445
    10. '
' → logprob: -4.969438552856445

Token 796: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4990566670894623
    2. '   ' → logprob: -1.4990566968917847
    3. ')' → logprob: -1.9990566968917847
    4. '
' → logprob: -5.249056816101074
    5. ',' → logprob: -5.374056816101074
    6. ')
' → logprob: -5.374056816101074
    7. ' with' → logprob: -5.499056816101074
    8. 'to' → logprob: -5.874056816101074
    9. '       ' → logprob: -6.124056816101074
    10. '```' → logprob: -6.124056816101074

Token 797: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196802109479904
    2. ' x' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.686967849731445
    4. ')' → logprob: -16.436967849731445
    5. 'i' → logprob: -17.936967849731445
    6. ' ' → logprob: -18.186967849731445
    7. '`' → logprob: -18.811967849731445
    8. '	x' → logprob: -19.061967849731445
    9. ')x' → logprob: -19.186967849731445
    10. 'index' → logprob: -19.186967849731445

Token 798: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033684082329273224
    2. ')' → logprob: -3.658684015274048
    3. '
' → logprob: -5.658684253692627
    4. ')
' → logprob: -6.658684253692627
    5. '.' → logprob: -6.908684253692627
    6. 'def' → logprob: -8.158683776855469
    7. '.
' → logprob: -8.158683776855469
    8. '):' → logprob: -8.283683776855469
    9. '):
' → logprob: -8.408683776855469
    10. ',' → logprob: -8.658683776855469

Token 799: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028433911502361298
    2. ')' → logprob: -6.127843379974365
    3. ',' → logprob: -8.002843856811523
    4. '<|end|>' → logprob: -9.752843856811523
    5. '
' → logprob: -9.877843856811523
    6. '.' → logprob: -10.002843856811523
    7. ')
' → logprob: -10.377843856811523
    8. '       ' → logprob: -10.502843856811523
    9. '<|end|>' → logprob: -10.502843856811523
    10. 'def' → logprob: -10.752843856811523

Token 800: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014537778683006763
    2. '       ' → logprob: -5.014537811279297
    3. 'def' → logprob: -5.389537811279297
    4. '#' → logprob: -6.639537811279297
    5. '
' → logprob: -6.889537811279297
    6. ' ' → logprob: -8.014537811279297
    7. ',' → logprob: -9.014537811279297
    8. ' def' → logprob: -9.264537811279297
    9. '    ' → logprob: -9.514537811279297
    10. '"""
' → logprob: -10.014537811279297

Token 801: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.003782500745728612
    2. 'build' → logprob: -6.003782272338867
    3. 'get' → logprob: -7.128782272338867
    4. '__' → logprob: -8.503782272338867
    5. ' query' → logprob: -8.753782272338867
    6. '_query' → logprob: -9.003782272338867
    7. 'prod' → logprob: -11.753782272338867
    8. '-query' → logprob: -12.753782272338867
    9. '_build' → logprob: -13.503782272338867
    10. '=query' → logprob: -14.003782272338867

Token 802: '(l' (ID: 4179)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47864946722984314
    2. '(l' → logprob: -0.9786494970321655
    3. '(i' → logprob: -5.728649616241455
    4. '(' → logprob: -7.478649616241455
    5. '(a' → logprob: -7.853649616241455
    6. '(start' → logprob: -8.603649139404297
    7. '(left' → logprob: -9.978649139404297
    8. '(s' → logprob: -10.853649139404297
    9. 'self' → logprob: -10.853649139404297
    10. '(begin' → logprob: -10.978649139404297

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ' ,' → logprob: -10.000046730041504
    3. '   ' → logprob: -15.000046730041504
    4. ',i' → logprob: -15.250046730041504
    5. ',u' → logprob: -15.500046730041504
    6. ',l' → logprob: -16.37504768371582
    7. ',
' → logprob: -16.75004768371582
    8. ',j' → logprob: -16.87504768371582
    9. ',r' → logprob: -17.00004768371582
    10. 'u' → logprob: -17.12504768371582

Token 804: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.25002670288086
    4. '	r' → logprob: -22.00002670288086
    5. '
' → logprob: -23.75002670288086
    6. '```' → logprob: -24.12502670288086
    7. ',r' → logprob: -25.00002670288086
    8. ' ' → logprob: -25.12502670288086
    9. '       ' → logprob: -25.25002670288086
    10. ' ' → logprob: -25.62502670288086

Token 805: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24103061854839325
    2. ',' → logprob: -1.7410305738449097
    3. '):
' → logprob: -3.366030693054199
    4. ')' → logprob: -5.616030693054199
    5. '   ' → logprob: -7.616030693054199
    6. '):
' → logprob: -9.2410306930542
    7. ' ):' → logprob: -10.4910306930542
    8. '):

' → logprob: -11.1160306930542
    9. '       ' → logprob: -11.4910306930542
    10. ')**' → logprob: -11.7410306930542

Token 806: ' query' (ID: 5703)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7510175704956055
    2. ' return' → logprob: -1.2510175704956055
    3. '       ' → logprob: -2.0010175704956055
    4. 'return' → logprob: -3.8760175704956055
    5. ' returns' → logprob: -4.0010175704956055
    6. ' def' → logprob: -4.5010175704956055
    7. 'def' → logprob: -4.6260175704956055
    8. 'Returns' → logprob: -4.8760175704956055
    9. '"""
' → logprob: -5.1260175704956055
    10. '
' → logprob: -5.3760175704956055

Token 807: ' value' (ID: 1432)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.31591594219207764
    2. '(l' → logprob: -1.6909159421920776
    3. ' (' → logprob: -4.190916061401367
    4. ' a' → logprob: -4.190916061401367
    5. 'the' → logprob: -4.565916061401367
    6. ' min' → logprob: -4.690916061401367
    7. '   ' → logprob: -4.940916061401367
    8. 'min' → logprob: -4.940916061401367
    9. ' for' → logprob: -5.065916061401367
    10. ' minimum' → logprob: -6.065916061401367

Token 808: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3111625015735626
    2. ' in' → logprob: -1.6861624717712402
    3. ' (' → logprob: -3.8111624717712402
    4. '(' → logprob: -3.9361624717712402
    5. ' for' → logprob: -5.06116247177124
    6. ',' → logprob: -5.06116247177124
    7. ')' → logprob: -5.18616247177124
    8. ' at' → logprob: -5.43616247177124
    9. ' from' → logprob: -6.06116247177124
    10. ' =' → logprob: -6.06116247177124

Token 809: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5977984070777893
    2. ' the' → logprob: -1.7227983474731445
    3. 'range' → logprob: -1.7227983474731445
    4. ' l' → logprob: -3.2227983474731445
    5. ' [' → logprob: -4.3477983474731445
    6. ' a' → logprob: -4.3477983474731445
    7. 'l' → logprob: -4.4727983474731445
    8. 'the' → logprob: -4.9727983474731445
    9. '[l' → logprob: -5.5977983474731445
    10. '   ' → logprob: -6.3477983474731445

Token 810: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003187459195032716
    2. ' l' → logprob: -5.753187656402588
    3. ')' → logprob: -12.37818717956543
    4. ',' → logprob: -12.75318717956543
    5. '   ' → logprob: -12.87818717956543
    6. ',l' → logprob: -16.75318717956543
    7. ' ' → logprob: -17.12818717956543
    8. '	l' → logprob: -17.75318717956543
    9. '_l' → logprob: -18.00318717956543
    10. ' ,' → logprob: -18.62818717956543

Token 811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006307095172815025
    2. ' ,' → logprob: -7.625630855560303
    3. ',r' → logprob: -8.875630378723145
    4. '   ' → logprob: -13.750630378723145
    5. ',
' → logprob: -14.375630378723145
    6. ' ' → logprob: -14.750630378723145
    7. '+' → logprob: -15.750630378723145
    8. 'r' → logprob: -16.37563133239746
    9. '
' → logprob: -16.50063133239746
    10. '，' → logprob: -16.50063133239746

Token 812: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016034485772252083
    2. ' r' → logprob: -4.1410346031188965
    3. '   ' → logprob: -16.141035079956055
    4. '
' → logprob: -16.891035079956055
    5. '	r' → logprob: -17.016035079956055
    6. ',' → logprob: -18.266035079956055
    7. ',r' → logprob: -18.266035079956055
    8. '(r' → logprob: -18.391035079956055
    9. ' ' → logprob: -18.641035079956055
    10. ' ' → logprob: -18.766035079956055

Token 813: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24058742821216583
    2. ')' → logprob: -1.6155874729156494
    3. '+' → logprob: -4.24058723449707
    4. '   ' → logprob: -8.11558723449707
    5. ' +' → logprob: -9.36558723449707
    6. '])' → logprob: -9.36558723449707
    7. ' ]' → logprob: -9.74058723449707
    8. ']
' → logprob: -10.49058723449707
    9. ')]' → logprob: -10.86558723449707
    10. ')
' → logprob: -11.24058723449707

Token 814: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04579164832830429
    2. ')' → logprob: -3.1707916259765625
    3. '"""' → logprob: -7.0457916259765625
    4. '
' → logprob: -7.6707916259765625
    5. 'class' → logprob: -7.6707916259765625
    6. ')
' → logprob: -8.170791625976562
    7. '"""
' → logprob: -8.420791625976562
    8. '```' → logprob: -8.920791625976562
    9. ',' → logprob: -9.170791625976562
    10. ' """
' → logprob: -10.170791625976562

Token 815: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1259608119726181
    2. '"""
' → logprob: -2.6259608268737793
    3. '"""' → logprob: -3.2509608268737793
    4. 'class' → logprob: -5.500960826873779
    5. ')' → logprob: -6.500960826873779
    6. '"""

' → logprob: -7.250960826873779
    7. ' """
' → logprob: -8.500960350036621
    8. ')
' → logprob: -8.875960350036621
    9. '
' → logprob: -9.375960350036621
    10. '"""
' → logprob: -9.625960350036621

Token 816: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25676429271698
    2. 'build' → logprob: -2.2567644119262695
    3. '_build' → logprob: -2.2567644119262695
    4. '_init' → logprob: -4.7567644119262695
    5. ' __' → logprob: -6.2567644119262695
    6. 'init' → logprob: -6.2567644119262695
    7. 'def' → logprob: -7.5067644119262695
    8. '_size' → logprob: -7.5067644119262695
    9. ' build' → logprob: -8.00676441192627
    10. '   ' → logprob: -8.13176441192627

Token 817: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1292305886745453
    2. '(self' → logprob: -2.629230499267578
    3. 'item' → logprob: -4.629230499267578
    4. '_val' → logprob: -4.754230499267578
    5. '_value' → logprob: -5.004230499267578
    6. 'value' → logprob: -5.254230499267578
    7. '(' → logprob: -5.379230499267578
    8. 'val' → logprob: -6.004230499267578
    9. '()' → logprob: -6.379230499267578
    10. '_item' → logprob: -6.754230499267578

Token 818: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3171561062335968
    2. '):' → logprob: -1.3171560764312744
    3. '):
' → logprob: -5.5671563148498535
    4. ')
' → logprob: -10.942155838012695
    5. '   ' → logprob: -11.567155838012695
    6. ')`' → logprob: -11.692155838012695
    7. '):
' → logprob: -12.067155838012695
    8. ',' → logprob: -12.567155838012695
    9. ')**' → logprob: -12.692155838012695
    10. '):

' → logprob: -12.692155838012695

Token 819: ' get' (ID: 717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11603263020515442
    2. '       ' → logprob: -2.991032600402832
    3. ' def' → logprob: -3.366032600402832
    4. 'def' → logprob: -4.116032600402832
    5. '    ' → logprob: -5.116032600402832
    6. ' ' → logprob: -7.366032600402832
    7. ')' → logprob: -7.741032600402832
    8. '<|end|>' → logprob: -7.991032600402832
    9. ' 
' → logprob: -8.241032600402832
    10. ' return' → logprob: -8.616032600402832

Token 820: ' value' (ID: 1432)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.179244041442871
    2. ' value' → logprob: -1.304244041442871
    3. 'value' → logprob: -1.429244041442871
    4. '(i' → logprob: -2.429244041442871
    5. 'the' → logprob: -2.804244041442871
    6. ')' → logprob: -3.554244041442871
    7. ' i' → logprob: -7.304244041442871
    8. '[i' → logprob: -7.304244041442871
    9. '   ' → logprob: -7.429244041442871
    10. ' (' → logprob: -7.679244041442871

Token 821: ' at' (ID: 540)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8798825740814209
    2. '   ' → logprob: -1.004882574081421
    3. '[i' → logprob: -2.379882574081421
    4. ' at' → logprob: -2.379882574081421
    5. ')' → logprob: -3.879882574081421
    6. 'at' → logprob: -6.2548828125
    7. '<|end|>' → logprob: -6.2548828125
    8. '```' → logprob: -6.3798828125
    9. '[' → logprob: -6.7548828125
    10. '<|end|>' → logprob: -7.3798828125

Token 822: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5703351497650146
    2. 'i' → logprob: -1.0703351497650146
    3. ' index' → logprob: -2.8203351497650146
    4. 'index' → logprob: -3.4453351497650146
    5. ')' → logprob: -8.945335388183594
    6. '(i' → logprob: -9.570335388183594
    7. ' ' → logprob: -10.570335388183594
    8. '   ' → logprob: -10.820335388183594
    9. ' position' → logprob: -11.445335388183594
    10. ' the' → logprob: -11.820335388183594

Token 823: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019811362028121948
    2. ' i' → logprob: -4.144811153411865
    3. 'i' → logprob: -6.269811153411865
    4. ' ' → logprob: -7.394811153411865
    5. '   ' → logprob: -7.769811153411865
    6. ' )' → logprob: -8.019811630249023
    7. '(i' → logprob: -8.644811630249023
    8. ')i' → logprob: -8.894811630249023
    9. ')
' → logprob: -9.019811630249023
    10. '[i' → logprob: -10.769811630249023

Token 824: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01795618236064911
    2. ')' → logprob: -5.142956256866455
    3. '
' → logprob: -5.142956256866455
    4. ':' → logprob: -6.142956256866455
    5. '.' → logprob: -6.642956256866455
    6. '<|end|>' → logprob: -6.767956256866455
    7. '```' → logprob: -8.142955780029297
    8. 'class' → logprob: -8.142955780029297
    9. '    
' → logprob: -8.267955780029297
    10. ',' → logprob: -8.892955780029297

Token 825: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004653930198401213
    2. '
' → logprob: -6.1296539306640625
    3. 'class' → logprob: -6.8796539306640625
    4. ')' → logprob: -7.6296539306640625
    5. '"""' → logprob: -7.6296539306640625
    6. '    
' → logprob: -8.879653930664062
    7. '"""
' → logprob: -9.379653930664062
    8. ')
' → logprob: -9.629653930664062
    9. '```' → logprob: -9.879653930664062
    10. ',' → logprob: -10.629653930664062

Token 826: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04859009385108948
    2. '"""
' → logprob: -3.6735901832580566
    3. '"""' → logprob: -4.673590183258057
    4. '
' → logprob: -5.048590183258057
    5. 'class' → logprob: -6.173590183258057
    6. ')' → logprob: -6.548590183258057
    7. ' """
' → logprob: -6.923590183258057
    8. '```' → logprob: -7.548590183258057
    9. '    
' → logprob: -8.298589706420898
    10. ')
' → logprob: -8.298589706420898

Token 827: ' all' (ID: 722)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5963481664657593
    2. 'build' → logprob: -1.2213481664657593
    3. 'size' → logprob: -2.721348285675049
    4. '_build' → logprob: -2.846348285675049
    5. '_size' → logprob: -3.971348285675049
    6. 'set' → logprob: -5.846348285675049
    7. 'all' → logprob: -6.346348285675049
    8. '_all' → logprob: -6.721348285675049
    9. 'init' → logprob: -6.971348285675049
    10. '_init' → logprob: -7.096348285675049

Token 828: '():' (ID: 9442)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.8339976072311401
    2. '_sum' → logprob: -1.9589976072311401
    3. '_set' → logprob: -2.7089977264404297
    4. '_reduce' → logprob: -2.7089977264404297
    5. '()' → logprob: -2.8339977264404297
    6. '_query' → logprob: -2.9589977264404297
    7. ')' → logprob: -3.0839977264404297
    8. 'ocate' → logprob: -3.3339977264404297
    9. '_nodes' → logprob: -3.5839977264404297
    10. '_value' → logprob: -3.5839977264404297

Token 829: ' get' (ID: 717)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.576886773109436
    2. 'return' → logprob: -0.951886773109436
    3. '   ' → logprob: -3.9518866539001465
    4. ' get' → logprob: -4.5768866539001465
    5. 'get' → logprob: -5.3268866539001465
    6. ' returns' → logprob: -5.5768866539001465
    7. 'def' → logprob: -5.7018866539001465
    8. 'Return' → logprob: -5.7018866539001465
    9. '[]' → logprob: -6.4518866539001465
    10. 'Returns' → logprob: -6.5768866539001465

Token 830: ' value' (ID: 1432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026540279388427734
    2. 'value' → logprob: -4.276540279388428
    3. 'data' → logprob: -6.026540279388428
    4. '()' → logprob: -6.026540279388428
    5. ' ' → logprob: -6.276540279388428
    6. ' value' → logprob: -7.026540279388428
    7. 'the' → logprob: -7.151540279388428
    8. '   ' → logprob: -7.651540279388428
    9. 'array' → logprob: -7.776540279388428
    10. 'self' → logprob: -8.026540756225586

Token 831: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13826104998588562
    2. '<|end|>' → logprob: -3.013261079788208
    3. 's' → logprob: -3.888261079788208
    4. ')' → logprob: -4.263260841369629
    5. ' at' → logprob: -4.388260841369629
    6. '   ' → logprob: -4.513260841369629
    7. ' ' → logprob: -5.138260841369629
    8. '(' → logprob: -5.138260841369629
    9. '  ' → logprob: -6.013260841369629
    10. '[]' → logprob: -6.013260841369629

Token 832: ' range' (ID: 3352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.344390332698822
    2. 'self' → logprob: -1.9693903923034668
    3. 'range' → logprob: -3.219390392303467
    4. 'the' → logprob: -3.344390392303467
    5. ' the' → logprob: -3.594390392303467
    6. '[' → logprob: -4.594390392303467
    7. '0' → logprob: -4.844390392303467
    8. ' all' → logprob: -4.969390392303467
    9. ' range' → logprob: -5.344390392303467
    10. ' ' → logprob: -5.344390392303467

Token 833: ' [' (ID: 723)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14722172915935516
    2. ')' → logprob: -4.022221565246582
    3. '=' → logprob: -4.022221565246582
    4. '[' → logprob: -4.022221565246582
    5. '()
' → logprob: -4.022221565246582
    6. ' =' → logprob: -4.147221565246582
    7. '(l' → logprob: -4.647221565246582
    8. 's' → logprob: -4.772221565246582
    9. '[l' → logprob: -5.397221565246582
    10. '(' → logprob: -5.522221565246582

Token 834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000318065780447796
    2. '   ' → logprob: -8.87531852722168
    3. 'self' → logprob: -9.75031852722168
    4. ' ' → logprob: -10.25031852722168
    5. ',' → logprob: -10.50031852722168
    6. '(' → logprob: -10.87531852722168
    7. ')' → logprob: -11.00031852722168
    8. ']' → logprob: -12.62531852722168
    9. 'None' → logprob: -13.00031852722168
    10. 'n' → logprob: -13.25031852722168

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002074840711429715
    2. ',n' → logprob: -6.377074718475342
    3. ']' → logprob: -8.8770751953125
    4. ' ,' → logprob: -9.7520751953125
    5. ',size' → logprob: -10.3770751953125
    6. ',
' → logprob: -10.6270751953125
    7. ',len' → logprob: -11.0020751953125
    8. 'size' → logprob: -11.0020751953125
    9. ')' → logprob: -11.1270751953125
    10. ',N' → logprob: -11.1270751953125

Token 836: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017381247598677874
    2. ' self' → logprob: -6.37673807144165
    3. '   ' → logprob: -11.126738548278809
    4. 'n' → logprob: -12.126738548278809
    5. 'len' → logprob: -12.126738548278809
    6. ')' → logprob: -12.751738548278809
    7. ' ' → logprob: -13.251738548278809
    8. '__' → logprob: -13.501738548278809
    9. '_self' → logprob: -13.751738548278809
    10. '(self' → logprob: -14.626738548278809

Token 837: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06444910168647766
    2. ']' → logprob: -2.9394490718841553
    3. '])' → logprob: -4.689449310302734
    4. ')
' → logprob: -9.189449310302734
    5. ')]' → logprob: -9.439449310302734
    6. ' )' → logprob: -10.064449310302734
    7. ')])' → logprob: -10.814449310302734
    8. '))' → logprob: -11.064449310302734
    9. ']
' → logprob: -11.439449310302734
    10. '()' → logprob: -12.189449310302734

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020131651312112808
    2. '
' → logprob: -4.020131587982178
    3. '"""
' → logprob: -7.270131587982178
    4. 'class' → logprob: -8.270132064819336
    5. ')
' → logprob: -8.770132064819336
    6. '    
' → logprob: -8.770132064819336
    7. ' """
' → logprob: -8.770132064819336
    8. '"""' → logprob: -8.895132064819336
    9. '"
' → logprob: -9.270132064819336
    10. ',' → logprob: -9.770132064819336

Token 839: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08062760531902313
    2. '"""
' → logprob: -3.205627679824829
    3. '
' → logprob: -4.33062744140625
    4. '"""' → logprob: -4.58062744140625
    5. ' """
' → logprob: -4.83062744140625
    6. 'class' → logprob: -6.20562744140625
    7. '```' → logprob: -6.45562744140625
    8. '):
' → logprob: -7.70562744140625
    9. ')' → logprob: -8.08062744140625
    10. ':' → logprob: -8.33062744140625

Token 840: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076858894899487495
    2. ' def' → logprob: -5.507685661315918
    3. 'def' → logprob: -5.632685661315918
    4. '	def' → logprob: -11.507685661315918
    5. '    
' → logprob: -11.757685661315918
    6. '
' → logprob: -13.382685661315918
    7. 'class' → logprob: -13.757685661315918
    8. '    ' → logprob: -14.632685661315918
    9. '   ' → logprob: -15.132685661315918
    10. '```' → logprob: -15.632685661315918

Token 841: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06224405765533447
    2. ' def' → logprob: -2.812243938446045
    3. '__' → logprob: -8.437244415283203
    4. '   ' → logprob: -9.937244415283203
    5. ' __' → logprob: -11.687244415283203
    6. 'import' → logprob: -13.312244415283203
    7. 'class' → logprob: -14.937244415283203
    8. '	def' → logprob: -14.937244415283203
    9. ' ' → logprob: -15.187244415283203
    10. '  ' → logprob: -16.937244415283203

Token 842: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014329330064356327
    2. ' __' → logprob: -4.264329433441162
    3. 'init' → logprob: -8.764328956604004
    4. '_init' → logprob: -11.639328956604004
    5. 'def' → logprob: -14.514328956604004
    6. ' init' → logprob: -15.639328956604004
    7. '___' → logprob: -16.76432991027832
    8. ' def' → logprob: -16.88932991027832
    9. ' ' → logprob: -18.88932991027832
    10. ' ' → logprob: -19.38932991027832

Token 843: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -19.5
    3. 'inite' → logprob: -19.75
    4. 'ini' → logprob: -20.0
    5. ' init' → logprob: -20.0
    6. '_init' → logprob: -20.5
    7. 'in' → logprob: -21.125
    8. 'innit' → logprob: -21.75
    9. 'i' → logprob: -21.875
    10. 'inti' → logprob: -22.125

Token 844: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015303362160921097
    2. '(self' → logprob: -6.501530170440674
    3. '__' → logprob: -10.626530647277832
    4. '__(
' → logprob: -13.501530647277832
    5. '(' → logprob: -13.626530647277832
    6. '_(' → logprob: -14.376530647277832
    7. 'self' → logprob: -15.626530647277832
    8. '<>(' → logprob: -15.751530647277832
    9. '__((' → logprob: -15.876530647277832
    10. ' (' → logprob: -17.001529693603516

Token 845: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.630610641877865e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -16.1250057220459
    4. '   ' → logprob: -16.7500057220459
    5. '
' → logprob: -16.8750057220459
    6. '	self' → logprob: -17.0000057220459
    7. ')' → logprob: -18.5000057220459
    8. '0' → logprob: -19.1250057220459
    9. ' ' → logprob: -19.3750057220459
    10. 'def' → logprob: -20.1250057220459

Token 846: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04130121320486069
    2. ',' → logprob: -3.2913012504577637
    3. '__(' → logprob: -6.416301250457764
    4. '(' → logprob: -6.791301250457764
    5. 'self' → logprob: -8.291300773620605
    6. ' (' → logprob: -9.541300773620605
    7. '   ' → logprob: -9.791300773620605
    8. ')(' → logprob: -10.291300773620605
    9. '(n' → logprob: -10.416300773620605
    10. '(size' → logprob: -11.291300773620605

Token 847: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03821384906768799
    2. 'n' → logprob: -3.2882137298583984
    3. ' self' → logprob: -9.038213729858398
    4. ' n' → logprob: -10.788213729858398
    5. '   ' → logprob: -11.288213729858398
    6. 'N' → logprob: -11.788213729858398
    7. 'size' → logprob: -12.288213729858398
    8. '       ' → logprob: -12.538213729858398
    9. ' ' → logprob: -12.913213729858398
    10. 'init' → logprob: -14.288213729858398

Token 848: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05200739577412605
    2. '):
' → logprob: -3.8020074367523193
    3. ',' → logprob: -4.05200719833374
    4. ':' → logprob: -4.55200719833374
    5. ')' → logprob: -8.052007675170898
    6. ' ):' → logprob: -9.802007675170898
    7. ':int' → logprob: -11.427007675170898
    8. '):
' → logprob: -11.552007675170898
    9. '=' → logprob: -11.552007675170898
    10. '=None' → logprob: -12.302007675170898

Token 849: ' func' (ID: 4660)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8225684762001038
    2. 'e' → logprob: -1.447568416595459
    3. 'func' → logprob: -1.447568416595459
    4. 'ide' → logprob: -3.447568416595459
    5. 'seg' → logprob: -3.947568416595459
    6. 'function' → logprob: -4.697568416595459
    7. 'f' → logprob: -4.822568416595459
    8. 'fx' → logprob: -5.197568416595459
    9. 'operator' → logprob: -5.697568416595459
    10. 'default' → logprob: -6.197568416595459

Token 850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013270224444568157
    2. '=' → logprob: -7.251327037811279
    3. '):' → logprob: -8.126326560974121
    4. '=None' → logprob: -8.251326560974121
    5. '=lambda' → logprob: -9.876326560974121
    6. ' ,' → logprob: -12.376326560974121
    7. ':' → logprob: -13.251326560974121
    8. ')' → logprob: -13.626326560974121
    9. '):
' → logprob: -15.501326560974121
    10. '   ' → logprob: -15.751326560974121

Token 851: ' int' (ID: 677)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7660038471221924
    2. 'ide' → logprob: -0.7660038471221924
    3. 'init' → logprob: -3.7660038471221924
    4. 'unit' → logprob: -4.016003608703613
    5. 'identity' → logprob: -4.266003608703613
    6. 'default' → logprob: -5.766003608703613
    7. 'id' → logprob: -6.016003608703613
    8. 'ie' → logprob: -6.141003608703613
    9. 'ini' → logprob: -6.641003608703613
    10. 'ele' → logprob: -7.016003608703613

Token 852: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5600473284721375
    2. 'val' → logprob: -1.5600473880767822
    3. '_val' → logprob: -1.6850473880767822
    4. 'ial' → logprob: -4.185047149658203
    5. 'er' → logprob: -5.435047149658203
    6. 'e' → logprob: -5.435047149658203
    7. 'erval' → logprob: -6.060047149658203
    8. '_e' → logprob: -6.935047149658203
    9. '_' → logprob: -6.935047149658203
    10. '_v' → logprob: -7.435047149658203

Token 853: ',' (ID: 11)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -5.512236498361744e-07
    2. 'er' → logprob: -15.875000953674316
    3. 'alid' → logprob: -16.0
    4. 'alue' → logprob: -16.375
    5. 'alent' → logprob: -16.75
    6. ')' → logprob: -17.125
    7. 'AL' → logprob: -17.125
    8. 'ал' → logprob: -17.875
    9. '):
' → logprob: -18.0
    10. '):' → logprob: -18.875

Token 854: ' A' (ID: 355)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6613724827766418
    2. 'data' → logprob: -1.286372423171997
    3. 'v' → logprob: -3.036372423171997
    4. '   ' → logprob: -3.411372423171997
    5. ')' → logprob: -4.036372661590576
    6. '):
' → logprob: -4.036372661590576
    7. 'default' → logprob: -4.161372661590576
    8. ' ):
' → logprob: -5.036372661590576
    9. '       ' → logprob: -5.286372661590576
    10. ' init' → logprob: -5.411372661590576

Token 855: '=[]' (ID: 65563)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.0009524329798296094
    2. '=' → logprob: -7.625952243804932
    3. '):
' → logprob: -8.37595272064209
    4. '=[]' → logprob: -8.50095272064209
    5. '):' → logprob: -10.87595272064209
    6. 'None' → logprob: -11.50095272064209
    7. '):
' → logprob: -14.62595272064209
    8. '=list' → logprob: -15.25095272064209
    9. ' None' → logprob: -15.37595272064209
    10. ':' → logprob: -15.50095272064209

Token 856: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.576166033744812
    2. '):' → logprob: -0.826166033744812
    3. ')' → logprob: -9.201166152954102
    4. '   ' → logprob: -9.451166152954102
    5. '):
' → logprob: -10.451166152954102
    6. '=None' → logprob: -11.576166152954102
    7. '=' → logprob: -12.701166152954102
    8. '       ' → logprob: -13.201166152954102
    9. ':' → logprob: -13.326166152954102
    10. '):

' → logprob: -13.826166152954102

Token 857: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022151565179228783
    2. ':' → logprob: -3.897151470184326
    3. '):
' → logprob: -7.147151470184326
    4. '):' → logprob: -7.647151470184326
    5. ')' → logprob: -8.772151947021484
    6. ':
' → logprob: -8.897151947021484
    7. ',' → logprob: -10.647151947021484
    8. 'self' → logprob: -11.647151947021484
    9. '#' → logprob: -12.647151947021484
    10. '```' → logprob: -13.147151947021484

Token 858: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013429141603410244
    2. 'self' → logprob: -4.388429164886475
    3. ' self' → logprob: -7.013429164886475
    4. '   ' → logprob: -11.263428688049316
    5. 'n' → logprob: -13.263428688049316
    6. '           ' → logprob: -13.638428688049316
    7. ' ' → logprob: -14.013428688049316
    8. '	' → logprob: -14.388428688049316
    9. '	self' → logprob: -14.888428688049316
    10. 'super' → logprob: -15.138428688049316

Token 859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4158408045768738
    2. 'self' → logprob: -1.1658408641815186
    3. ' self' → logprob: -3.7908408641815186
    4. ' super' → logprob: -5.6658406257629395
    5. 'super' → logprob: -6.1658406257629395
    6. '   ' → logprob: -7.9158406257629395
    7. ' ' → logprob: -11.290841102600098
    8. 'def' → logprob: -11.915841102600098
    9. '	self' → logprob: -12.040841102600098
    10. 'n' → logprob: -12.415841102600098

Token 860: ' Initializes' (ID: 73569)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3691530227661133
    2. 'self' → logprob: -1.8691530227661133
    3. '       ' → logprob: -1.8691530227661133
    4. ' super' → logprob: -9.494153022766113
    5. ' n' → logprob: -10.244153022766113
    6. 'n' → logprob: -10.869153022766113
    7. ' ' → logprob: -11.619153022766113
    8. 'super' → logprob: -11.869153022766113
    9. '#' → logprob: -11.994153022766113
    10. '   ' → logprob: -12.244153022766113

Token 861: ' segment' (ID: 14806)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025173963513225317
    2. ' self' → logprob: -6.002517223358154
    3. '       ' → logprob: -10.127517700195312
    4. '(self' → logprob: -13.877517700195312
    5. '   ' → logprob: -14.502517700195312
    6. 'n' → logprob: -15.252517700195312
    7. '	self' → logprob: -16.877517700195312
    8. '=self' → logprob: -18.502517700195312
    9. ' ' → logprob: -18.627517700195312
    10. '           ' → logprob: -19.502517700195312

Token 862: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.8295688629150391
    2. '_tree' → logprob: -0.8295688629150391
    3. 'tree' → logprob: -2.079568862915039
    4. '   ' → logprob: -6.704568862915039
    5. '_' → logprob: -7.454568862915039
    6. 'Tree' → logprob: -8.204568862915039
    7. ' Tree' → logprob: -9.204568862915039
    8. ' _' → logprob: -9.329568862915039
    9. 'tre' → logprob: -9.579568862915039
    10. '_size' → logprob: -9.704568862915039

Token 863: ' with' (ID: 483)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15301871299743652
    2. '       ' → logprob: -2.6530187129974365
    3. ' with' → logprob: -3.7780187129974365
    4. '.' → logprob: -3.7780187129974365
    5. '(n' → logprob: -4.528018951416016
    6. ',' → logprob: -5.903018951416016
    7. 'self' → logprob: -6.028018951416016
    8. ' (' → logprob: -6.028018951416016
    9. '(' → logprob: -6.403018951416016
    10. ':' → logprob: -6.778018951416016

Token 864: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6945061683654785
    2. ' n' → logprob: -0.6945061683654785
    3. ' size' → logprob: -7.0695061683654785
    4. 'size' → logprob: -7.8195061683654785
    5. 'self' → logprob: -9.69450569152832
    6. '       ' → logprob: -11.31950569152832
    7. ' self' → logprob: -11.56950569152832
    8. '   ' → logprob: -12.56950569152832
    9. ' capacity' → logprob: -12.69450569152832
    10. 'length' → logprob: -12.69450569152832

Token 865: ' elements' (ID: 8632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35913366079330444
    2. ',' → logprob: -1.7341337203979492
    3. ')' → logprob: -2.359133720397949
    4. '=n' → logprob: -5.359133720397949
    5. ' elements' → logprob: -5.609133720397949
    6. '+' → logprob: -5.734133720397949
    7. '   ' → logprob: -5.859133720397949
    8. 'elements' → logprob: -6.109133720397949
    9. ' or' → logprob: -6.359133720397949
    10. '       ' → logprob: -6.359133720397949

Token 866: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5166504979133606
    2. ',' → logprob: -1.1416504383087158
    3. '):
' → logprob: -3.516650438308716
    4. ':' → logprob: -3.641650438308716
    5. ':
' → logprob: -4.516650676727295
    6. ')' → logprob: -5.391650676727295
    7. '.' → logprob: -5.766650676727295
    8. ',
' → logprob: -5.766650676727295
    9. '.
' → logprob: -5.891650676727295
    10. ' and' → logprob: -6.641650676727295

Token 867: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40638628602027893
    2. ' func' → logprob: -1.4063862562179565
    3. 'func' → logprob: -2.531386375427246
    4. '        ' → logprob: -5.531386375427246
    5. '           ' → logprob: -6.406386375427246
    6. ' self' → logprob: -6.531386375427246
    7. 'self' → logprob: -6.781386375427246
    8. '               ' → logprob: -8.156386375427246
    9. ')' → logprob: -8.406386375427246
    10. ' function' → logprob: -8.656386375427246

Token 868: ' function' (ID: 1114)
  Prédit: ' func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' func' → logprob: -0.13286271691322327
    2. 'func' → logprob: -2.3828628063201904
    3. ' function' → logprob: -3.6328628063201904
    4. ' callable' → logprob: -6.632862567901611
    5. 'function' → logprob: -7.132862567901611
    6. ' list' → logprob: -7.257862567901611
    7. '   ' → logprob: -7.382862567901611
    8. ' given' → logprob: -7.382862567901611
    9. '       ' → logprob: -7.757862567901611
    10. ' segment' → logprob: -9.25786304473877

Token 869: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06077280268073082
    2. ')' → logprob: -3.5607728958129883
    3. '=' → logprob: -4.185772895812988
    4. '=None' → logprob: -5.310772895812988
    5. '=lambda' → logprob: -6.185772895812988
    6. '):' → logprob: -6.310772895812988
    7. ' and' → logprob: -6.310772895812988
    8. '   ' → logprob: -6.560772895812988
    9. ',
' → logprob: -7.435772895812988
    10. 'and' → logprob: -7.435772895812988

Token 870: ' combining' (ID: 48784)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.04560306668281555
    2. 'comb' → logprob: -3.670603036880493
    3. 'combine' → logprob: -4.670603275299072
    4. 'merge' → logprob: -5.920603275299072
    5. '   ' → logprob: -6.295603275299072
    6. 'mer' → logprob: -6.295603275299072
    7. 'operation' → logprob: -7.545603275299072
    8. ')' → logprob: -7.545603275299072
    9. '
' → logprob: -7.670603275299072
    10. ' func' → logprob: -7.920603275299072

Token 871: ' elements' (ID: 8632)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.153115376830101
    2. 'values' → logprob: -2.7781152725219727
    3. ')' → logprob: -3.6531152725219727
    4. 'and' → logprob: -3.7781152725219727
    5. ' and' → logprob: -4.528115272521973
    6. ' values' → logprob: -4.778115272521973
    7. 'elements' → logprob: -5.528115272521973
    8. '   ' → logprob: -6.028115272521973
    9. 'the' → logprob: -6.278115272521973
    10. ' the' → logprob: -6.778115272521973

Token 872: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008531127125024796
    2. ' and' → logprob: -5.008531093597412
    3. ' ,' → logprob: -7.133531093597412
    4. '       ' → logprob: -7.633531093597412
    5. ',
' → logprob: -7.883531093597412
    6. 'and' → logprob: -9.75853157043457
    7. '=' → logprob: -10.25853157043457
    8. '   ' → logprob: -10.63353157043457
    9. ')' → logprob: -11.38353157043457
    10. ' (' → logprob: -11.63353157043457

Token 873: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07287973165512085
    2. ' and' → logprob: -2.8228797912597656
    3. '        ' → logprob: -6.072879791259766
    4. '        
' → logprob: -6.322879791259766
    5. ')' → logprob: -6.447879791259766
    6. ',' → logprob: -6.697879791259766
    7. 'and' → logprob: -6.697879791259766
    8. '   ' → logprob: -7.572879791259766
    9. ' parent' → logprob: -7.697879791259766
    10. '):
' → logprob: -8.572879791259766

Token 874: ' an' (ID: 448)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.9059392809867859
    2. '       ' → logprob: -2.0309393405914307
    3. ' initial' → logprob: -2.2809393405914307
    4. 'default' → logprob: -2.4059393405914307
    5. ' an' → logprob: -2.6559393405914307
    6. 'the' → logprob: -2.9059393405914307
    7. ' the' → logprob: -3.6559393405914307
    8. 'int' → logprob: -4.030939102172852
    9. ' default' → logprob: -4.030939102172852
    10. '   ' → logprob: -4.155939102172852

Token 875: ' identity' (ID: 16696)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.5593498349189758
    2. ' identity' → logprob: -1.434349775314331
    3. 'identity' → logprob: -2.309349775314331
    4. 'initial' → logprob: -2.809349775314331
    5. ' optional' → logprob: -4.43435001373291
    6. ' empty' → logprob: -5.30935001373291
    7. 'optional' → logprob: -5.80935001373291
    8. 'empty' → logprob: -6.18435001373291
    9. ' array' → logprob: -6.30935001373291
    10. 'initializer' → logprob: -6.80935001373291

Token 876: ' value' (ID: 1432)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.1075921356678009
    2. ' element' → logprob: -2.9825921058654785
    3. '_element' → logprob: -3.3575921058654785
    4. ',' → logprob: -5.1075921058654785
    5. 'value' → logprob: -5.2325921058654785
    6. '   ' → logprob: -6.4825921058654785
    7. ',
' → logprob: -7.1075921058654785
    8. ')' → logprob: -7.3575921058654785
    9. ' value' → logprob: -7.4825921058654785
    10. '_value' → logprob: -7.6075921058654785

Token 877: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7260127067565918
    2. '):' → logprob: -1.9760127067565918
    3. '):
' → logprob: -2.226012706756592
    4. ',' → logprob: -2.351012706756592
    5. '.' → logprob: -2.601012706756592
    6. ')' → logprob: -2.601012706756592
    7. ':' → logprob: -3.851012706756592
    8. '   ' → logprob: -6.226012706756592
    9. '.
' → logprob: -7.351012706756592
    10. ':
' → logprob: -7.476012706756592

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.227250610711053e-05
    2. '):
' → logprob: -11.375041961669922
    3. 'self' → logprob: -11.625041961669922
    4. '        
' → logprob: -12.000041961669922
    5. '   ' → logprob: -12.625041961669922
    6. '```' → logprob: -12.750041961669922
    7. '
' → logprob: -13.125041961669922
    8. '           ' → logprob: -13.125041961669922
    9. ')' → logprob: -13.750041961669922
    10. ':' → logprob: -14.000041961669922

Token 879: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002926234155893326
    2. 'self' → logprob: -6.002926349639893
    3. ' self' → logprob: -7.877926349639893
    4. '):
' → logprob: -10.127925872802734
    5. '        
' → logprob: -11.627925872802734
    6. '   ' → logprob: -12.252925872802734
    7. ')' → logprob: -12.752925872802734
    8. 'n' → logprob: -12.877925872802734
    9. ')
' → logprob: -12.877925872802734
    10. '
' → logprob: -13.002925872802734

Token 880: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.32514750957489014
    2. 'n' → logprob: -1.3251475095748901
    3. 'self' → logprob: -4.57514762878418
    4. ' n' → logprob: -7.32514762878418
    5. '       ' → logprob: -7.95014762878418
    6. '   ' → logprob: -9.32514762878418
    7. 'func' → logprob: -9.82514762878418
    8. '"""
' → logprob: -9.95014762878418
    9. ' param' → logprob: -10.45014762878418
    10. 'def' → logprob: -10.57514762878418

Token 881: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04617893695831299
    2. ' n' → logprob: -3.1711788177490234
    3. 'self' → logprob: -5.921178817749023
    4. ' self' → logprob: -8.296178817749023
    5. '       ' → logprob: -9.421178817749023
    6. '   ' → logprob: -9.671178817749023
    7. '	n' → logprob: -10.171178817749023
    8. 'a' → logprob: -11.671178817749023
    9. 'length' → logprob: -11.796178817749023
    10. ')n' → logprob: -12.046178817749023

Token 882: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6731708645820618
    2. '):' → logprob: -1.423170804977417
    3. ',' → logprob: -1.673170804977417
    4. '):
' → logprob: -2.923170804977417
    5. ':int' → logprob: -5.673171043395996
    6. '=' → logprob: -6.173171043395996
    7. '   ' → logprob: -7.298171043395996
    8. ' :' → logprob: -7.673171043395996
    9. ' ):' → logprob: -8.173171043395996
    10. ' ,' → logprob: -8.423171043395996

Token 883: ' Number' (ID: 9184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08444766700267792
    2. ' int' → logprob: -2.5844476222991943
    3. 'n' → logprob: -5.459447860717773
    4. ' n' → logprob: -6.709447860717773
    5. ':int' → logprob: -10.334447860717773
    6. '[int' → logprob: -10.959447860717773
    7. '=int' → logprob: -12.459447860717773
    8. '   ' → logprob: -12.584447860717773
    9. ',int' → logprob: -13.334447860717773
    10. ')' → logprob: -13.334447860717773

Token 884: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0088123083114624
    2. ')' → logprob: -1.6338123083114624
    3. '=' → logprob: -1.8838123083114624
    4. '_of' → logprob: -2.008812427520752
    5. ',' → logprob: -3.008812427520752
    6. 'of' → logprob: -3.133812427520752
    7. '_tokens' → logprob: -3.758812427520752
    8. '_elements' → logprob: -4.633812427520752
    9. '   ' → logprob: -5.133812427520752
    10. '=int' → logprob: -5.508812427520752

Token 885: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.3874055743217468
    2. ' elements' → logprob: -1.1374056339263916
    3. 'A' → logprob: -8.887405395507812
    4. ' A' → logprob: -8.887405395507812
    5. 'ele' → logprob: -9.887405395507812
    6. 'data' → logprob: -10.137405395507812
    7. ' data' → logprob: -10.262405395507812
    8. '_elements' → logprob: -10.387405395507812
    9. ')' → logprob: -10.762405395507812
    10. 'nodes' → logprob: -11.387405395507812

Token 886: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12519243359565735
    2. '):
' → logprob: -3.375192403793335
    3. ':' → logprob: -3.625192403793335
    4. '       ' → logprob: -4.250192642211914
    5. '):' → logprob: -4.500192642211914
    6. ',
' → logprob: -4.500192642211914
    7. '   ' → logprob: -4.500192642211914
    8. ')' → logprob: -5.500192642211914
    9. '=' → logprob: -6.125192642211914
    10. '(n' → logprob: -6.625192642211914

Token 887: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8295490145683289
    2. '):' → logprob: -1.2045490741729736
    3. '):
' → logprob: -1.4545490741729736
    4. '   ' → logprob: -4.3295488357543945
    5. ',' → logprob: -4.5795488357543945
    6. '       ' → logprob: -5.7045488357543945
    7. 'int' → logprob: -6.7045488357543945
    8. 'n' → logprob: -6.9545488357543945
    9. '=' → logprob: -8.204548835754395
    10. ':' → logprob: -9.079548835754395

Token 888: '-index' (ID: 45533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2550823986530304
    2. '):' → logprob: -1.755082368850708
    3. '=' → logprob: -4.130082607269287
    4. ',' → logprob: -4.130082607269287
    5. '   ' → logprob: -4.630082607269287
    6. ')' → logprob: -5.255082607269287
    7. '       ' → logprob: -6.005082607269287
    8. '=None' → logprob: -6.755082607269287
    9. ',
' → logprob: -7.880082607269287
    10. ')
' → logprob: -8.005082130432129

Token 889: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.21381455659866333
    2. ')' → logprob: -2.4638144969940186
    3. '   ' → logprob: -2.8388144969940186
    4. 'ing' → logprob: -3.5888144969940186
    5. '):
' → logprob: -5.338814735412598
    6. '=' → logprob: -5.588814735412598
    7. ')
' → logprob: -5.963814735412598
    8. '):' → logprob: -6.338814735412598
    9. '       ' → logprob: -6.588814735412598
    10. ',' → logprob: -6.713814735412598

Token 890: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3566948473453522
    2. '):
' → logprob: -1.7316948175430298
    3. '):' → logprob: -2.1066949367523193
    4. ')
' → logprob: -7.35669469833374
    5. '   ' → logprob: -7.73169469833374
    6. ',' → logprob: -8.731695175170898
    7. '       ' → logprob: -9.481695175170898
    8. '):
' → logprob: -10.731695175170898
    9. ' )' → logprob: -10.856695175170898
    10. '),' → logprob: -12.106695175170898

Token 891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001393688376992941
    2. '):
' → logprob: -7.751393795013428
    3. ')' → logprob: -8.12639331817627
    4. '   ' → logprob: -8.50139331817627
    5. ',' → logprob: -8.50139331817627
    6. 'n' → logprob: -9.87639331817627
    7. 'self' → logprob: -10.37639331817627
    8. '<|end|>' → logprob: -10.37639331817627
    9. ')
' → logprob: -10.62639331817627
    10. '        
' → logprob: -11.37639331817627

Token 892: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43723323941230774
    2. 'self' → logprob: -1.4372332096099854
    3. ' self' → logprob: -2.8122332096099854
    4. 'func' → logprob: -2.9372332096099854
    5. ' func' → logprob: -5.8122334480285645
    6. 'import' → logprob: -9.312232971191406
    7. '   ' → logprob: -9.312232971191406
    8. 'n' → logprob: -9.437232971191406
    9. ' n' → logprob: -9.562232971191406
    10. 'function' → logprob: -10.687232971191406

Token 893: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.08814737200737
    2. 'n' → logprob: -2.8381474018096924
    3. ' n' → logprob: -4.338147163391113
    4. 'A' → logprob: -6.463147163391113
    5. 'class' → logprob: -6.588147163391113
    6. 'a' → logprob: -6.588147163391113
    7. 'func' → logprob: -6.838147163391113
    8. '   ' → logprob: -7.088147163391113
    9. '       ' → logprob: -7.088147163391113
    10. 'None' → logprob: -7.463147163391113

Token 894: ' func' (ID: 4660)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7288944721221924
    2. 'func' → logprob: -0.8538944721221924
    3. 'init' → logprob: -3.4788944721221924
    4. '   ' → logprob: -4.603894233703613
    5. 'l' → logprob: -4.603894233703613
    6. 'int' → logprob: -4.978894233703613
    7. 'n' → logprob: -4.978894233703613
    8. ')' → logprob: -5.853894233703613
    9. 'lst' → logprob: -5.853894233703613
    10. 'arr' → logprob: -6.103894233703613

Token 895: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7167090177536011
    2. '=' → logprob: -1.216709017753601
    3. ',' → logprob: -1.591709017753601
    4. '):
' → logprob: -4.966709136962891
    5. '=None' → logprob: -6.466709136962891
    6. '   ' → logprob: -6.716709136962891
    7. ')' → logprob: -7.091709136962891
    8. ':' → logprob: -7.341709136962891
    9. ' ):' → logprob: -8.09170913696289
    10. ',
' → logprob: -8.34170913696289

Token 896: ' Binary' (ID: 32672)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.2812027931213379
    2. ' func' → logprob: -1.406202793121338
    3. 'lambda' → logprob: -10.65620231628418
    4. '   ' → logprob: -11.40620231628418
    5. ' lambda' → logprob: -11.78120231628418
    6. '(func' → logprob: -12.78120231628418
    7. '	func' → logprob: -13.15620231628418
    8. 'fun' → logprob: -13.78120231628418
    9. 'function' → logprob: -13.78120231628418
    10. 'f' → logprob: -14.03120231628418

Token 897: ' function' (ID: 1114)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.220755696296692
    2. '_function' → logprob: -1.345755696296692
    3. '=' → logprob: -1.720755696296692
    4. '_' → logprob: -2.4707555770874023
    5. 'function' → logprob: -2.9707555770874023
    6. '_func' → logprob: -3.4707555770874023
    7. '   ' → logprob: -3.9707555770874023
    8. '_operator' → logprob: -4.220755577087402
    9. '_operation' → logprob: -4.470755577087402
    10. ' function' → logprob: -4.595755577087402

Token 898: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6850588917732239
    2. ',' → logprob: -1.310058832168579
    3. '<|end|>' → logprob: -2.685058832168579
    4. '=lambda' → logprob: -3.060058832168579
    5. '=' → logprob: -3.685058832168579
    6. ' (' → logprob: -3.810058832168579
    7. '   ' → logprob: -4.185059070587158
    8. ' =' → logprob: -4.435059070587158
    9. '(' → logprob: -4.685059070587158
    10. ' that' → logprob: -4.810059070587158

Token 899: ' combine' (ID: 21700)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.003003850346431136
    2. ' combine' → logprob: -6.75300407409668
    3. 'merge' → logprob: -7.00300407409668
    4. '   ' → logprob: -7.75300407409668
    5. '__' → logprob: -8.87800407409668
    6. 'func' → logprob: -9.25300407409668
    7. 'aggregate' → logprob: -9.25300407409668
    8. 'self' → logprob: -9.75300407409668
    9. 'apply' → logprob: -10.75300407409668
    10. '```' → logprob: -11.25300407409668

Token 900: ' two' (ID: 1920)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.30950671434402466
    2. ' two' → logprob: -2.05950665473938
    3. 'elements' → logprob: -2.93450665473938
    4. ' values' → logprob: -3.30950665473938
    5. ' the' → logprob: -3.80950665473938
    6. 'values' → logprob: -4.309506893157959
    7. ')' → logprob: -5.184506893157959
    8. ',' → logprob: -5.684506893157959
    9. 'the' → logprob: -6.809506893157959
    10. 'two' → logprob: -6.934506893157959

Token 901: ' node' (ID: 4596)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.7749931216239929
    2. 'elements' → logprob: -1.3999931812286377
    3. 'values' → logprob: -1.7749931812286377
    4. ' values' → logprob: -2.3999931812286377
    5. ')' → logprob: -4.024992942810059
    6. 'nodes' → logprob: -5.524992942810059
    7. 'x' → logprob: -5.899992942810059
    8. '   ' → logprob: -6.399992942810059
    9. ' x' → logprob: -6.649992942810059
    10. ')
' → logprob: -6.774992942810059

Token 902: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.20981471240520477
    2. 's' → logprob: -1.8348146677017212
    3. 'values' → logprob: -4.209814548492432
    4. ' elements' → logprob: -4.834814548492432
    5. '_values' → logprob: -5.834814548492432
    6. ' s' → logprob: -6.334814548492432
    7. ')' → logprob: -7.084814548492432
    8. ',' → logprob: -7.584814548492432
    9. '   ' → logprob: -8.45981502532959
    10. 'elements' → logprob: -8.83481502532959

Token 903: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6409182548522949
    2. ')' → logprob: -1.765918254852295
    3. '       ' → logprob: -2.015918254852295
    4. '   ' → logprob: -2.140918254852295
    5. '):
' → logprob: -3.640918254852295
    6. ',
' → logprob: -4.765918254852295
    7. '):' → logprob: -5.515918254852295
    8. ')
' → logprob: -5.640918254852295
    9. '=' → logprob: -5.765918254852295
    10. '.' → logprob: -6.765918254852295

Token 904: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17685449123382568
    2. '):
' → logprob: -2.5518546104431152
    3. ')
' → logprob: -3.3018546104431152
    4. ' )' → logprob: -4.176854610443115
    5. '):' → logprob: -4.301854610443115
    6. '   ' → logprob: -5.301854610443115
    7. ' )
' → logprob: -5.426854610443115
    8. ' ):
' → logprob: -5.676854610443115
    9. ',' → logprob: -6.551854610443115
    10. ' ):' → logprob: -6.926854610443115

Token 905: '.g' (ID: 1940)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.377400279045105
    2. '=' → logprob: -2.1274003982543945
    3. '=lambda' → logprob: -3.1274003982543945
    4. ')' → logprob: -3.3774003982543945
    5. 'lambda' → logprob: -3.8774003982543945
    6. '.g' → logprob: -3.8774003982543945
    7. ',' → logprob: -4.0024003982543945
    8. '   ' → logprob: -4.5024003982543945
    9. 'def' → logprob: -4.7524003982543945
    10. '=None' → logprob: -5.1274003982543945

Token 906: '.,' (ID: 4213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4714561700820923
    2. '.g' → logprob: -1.5964561700820923
    3. 'lambda' → logprob: -2.2214560508728027
    4. '=lambda' → logprob: -2.3464560508728027
    5. '       ' → logprob: -2.4714560508728027
    6. 'x' → logprob: -2.9714560508728027
    7. ')' → logprob: -3.0964560508728027
    8. 'def' → logprob: -3.2214560508728027
    9. '=' → logprob: -3.4714560508728027
    10. ',' → logprob: -3.4714560508728027

Token 907: ' min' (ID: 1349)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.26124000549316406
    2. 'min' → logprob: -1.761240005493164
    3. 'max' → logprob: -2.886240005493164
    4. '   ' → logprob: -6.886240005493164
    5. ' lambda' → logprob: -7.261240005493164
    6. 'func' → logprob: -7.761240005493164
    7. ' min' → logprob: -9.386240005493164
    8. ' max' → logprob: -10.761240005493164
    9. '(lambda' → logprob: -12.011240005493164
    10. ' ' → logprob: -12.261240005493164

Token 908: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5914925336837769
    2. ',' → logprob: -0.8414925336837769
    3. '):
' → logprob: -5.341492652893066
    4. '):' → logprob: -5.466492652893066
    5. '=lambda' → logprob: -6.341492652893066
    6. ').' → logprob: -7.091492652893066
    7. 'def' → logprob: -7.216492652893066
    8. '),' → logprob: -7.466492652893066
    9. ')
' → logprob: -7.466492652893066
    10. '   ' → logprob: -7.591492652893066

Token 909: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0821356549859047
    2. 'sum' → logprob: -3.2071356773376465
    3. ' max' → logprob: -3.8321356773376465
    4. 'lambda' → logprob: -4.4571356773376465
    5. '   ' → logprob: -6.2071356773376465
    6. ' lambda' → logprob: -6.5821356773376465
    7. ' sum' → logprob: -6.8321356773376465
    8. '    ' → logprob: -8.457135200500488
    9. ')' → logprob: -8.707135200500488
    10. '       ' → logprob: -9.332135200500488

Token 910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3161768615245819
    2. ')' → logprob: -1.3161768913269043
    3. '   ' → logprob: -6.316176891326904
    4. ').' → logprob: -7.816176891326904
    5. ',
' → logprob: -8.441176414489746
    6. ',)' → logprob: -8.691176414489746
    7. '),' → logprob: -9.316176414489746
    8. '):
' → logprob: -9.816176414489746
    9. ' or' → logprob: -10.066176414489746
    10. ')
' → logprob: -10.316176414489746

Token 911: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0019320894498378038
    2. ' sum' → logprob: -6.751932144165039
    3. 'lambda' → logprob: -7.751932144165039
    4. ')' → logprob: -8.626932144165039
    5. '   ' → logprob: -9.501932144165039
    6. 'add' → logprob: -10.251932144165039
    7. '       ' → logprob: -11.251932144165039
    8. '+' → logprob: -12.251932144165039
    9. ' lambda' → logprob: -12.376932144165039
    10. '           ' → logprob: -12.501932144165039

Token 912: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1496303379535675
    2. '):
' → logprob: -2.774630308151245
    3. ').' → logprob: -2.899630308151245
    4. ')
' → logprob: -4.649630546569824
    5. '):' → logprob: -4.649630546569824
    6. ').
' → logprob: -6.899630546569824
    7. ',' → logprob: -7.274630546569824
    8. '   ' → logprob: -7.774630546569824
    9. '),' → logprob: -8.524630546569824
    10. '):

' → logprob: -10.024630546569824

Token 913: ' gcd' (ID: 106918)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7366997599601746
    2. ')' → logprob: -1.4866998195648193
    3. 'identity' → logprob: -1.6116998195648193
    4. ' lambda' → logprob: -3.6116998195648193
    5. 'int' → logprob: -3.8616998195648193
    6. '   ' → logprob: -3.9866998195648193
    7. ')
' → logprob: -4.98669958114624
    8. '       ' → logprob: -5.11169958114624
    9. ' identity' → logprob: -5.48669958114624
    10. 'init' → logprob: -5.73669958114624

Token 914: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022778205573558807
    2. ').' → logprob: -3.897778272628784
    3. ',' → logprob: -6.647778034210205
    4. '):
' → logprob: -8.147778511047363
    5. '):' → logprob: -8.397778511047363
    6. '   ' → logprob: -8.647778511047363
    7. ')
' → logprob: -8.647778511047363
    8. '),' → logprob: -9.897778511047363
    9. ').
' → logprob: -11.522778511047363
    10. ' )' → logprob: -12.772778511047363

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013826017268002033
    2. ')' → logprob: -4.5138258934021
    3. ')
' → logprob: -6.2638258934021
    4. '):
' → logprob: -7.5138258934021
    5. ',' → logprob: -8.513826370239258
    6. '   ' → logprob: -9.513826370239258
    7. '"""
' → logprob: -10.763826370239258
    8. '
' → logprob: -12.388826370239258
    9. '```' → logprob: -12.388826370239258
    10. '):' → logprob: -12.388826370239258

Token 916: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.176947600673884e-05
    2. 'self' → logprob: -11.000021934509277
    3. '   ' → logprob: -13.250021934509277
    4. ')' → logprob: -14.125021934509277
    5. '"""
' → logprob: -14.250021934509277
    6. ' self' → logprob: -14.625021934509277
    7. ')
' → logprob: -14.625021934509277
    8. '           ' → logprob: -15.375021934509277
    9. '):
' → logprob: -15.375021934509277
    10. '```' → logprob: -16.25002098083496

Token 917: 'param' (ID: 1355)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14524094760417938
    2. 'self' → logprob: -2.0202410221099854
    3. '       ' → logprob: -7.145240783691406
    4. '   ' → logprob: -7.645240783691406
    5. ' int' → logprob: -7.770240783691406
    6. 'identity' → logprob: -7.895240783691406
    7. ' self' → logprob: -8.645240783691406
    8. 'super' → logprob: -8.770240783691406
    9. '
' → logprob: -10.520240783691406
    10. 'init' → logprob: -10.895240783691406

Token 918: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006179999094456434
    2. ' int' → logprob: -5.1311798095703125
    3. '   ' → logprob: -9.256179809570312
    4. 'identity' → logprob: -9.881179809570312
    5. '       ' → logprob: -10.506179809570312
    6. 'self' → logprob: -10.631179809570312
    7. ' ' → logprob: -11.256179809570312
    8. 'init' → logprob: -11.631179809570312
    9. '    ' → logprob: -12.256179809570312
    10. ' identity' → logprob: -12.506179809570312

Token 919: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.36885136365890503
    2. 'erval' → logprob: -1.4938514232635498
    3. 'erv' → logprob: -2.61885142326355
    4. 'val' → logprob: -4.743851184844971
    5. 'er' → logprob: -6.243851184844971
    6. '_val' → logprob: -8.743851661682129
    7. 'e' → logprob: -9.243851661682129
    8. 'var' → logprob: -10.743851661682129
    9. '   ' → logprob: -10.743851661682129
    10. 'value' → logprob: -10.868851661682129

Token 920: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08047591894865036
    2. '):' → logprob: -3.3304758071899414
    3. '   ' → logprob: -3.9554758071899414
    4. '=None' → logprob: -4.580475807189941
    5. '=' → logprob: -4.830475807189941
    6. ':' → logprob: -6.205475807189941
    7. ' ):
' → logprob: -7.205475807189941
    8. ':
' → logprob: -7.455475807189941
    9. '):

' → logprob: -8.705475807189941
    10. ')' → logprob: -9.205475807189941

Token 921: ' The' (ID: 623)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007357678841799498
    2. ' int' → logprob: -5.507357597351074
    3. 'The' → logprob: -7.007357597351074
    4. 'Identity' → logprob: -7.382357597351074
    5. '   ' → logprob: -7.507357597351074
    6. 'A' → logprob: -8.257357597351074
    7. '       ' → logprob: -8.257357597351074
    8. 'None' → logprob: -9.257357597351074
    9. 'identity' → logprob: -9.382357597351074
    10. 'func' → logprob: -9.507357597351074

Token 922: ' identity' (ID: 16696)
  Prédit: ' identity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identity' → logprob: -0.6393974423408508
    2. 'identity' → logprob: -0.7643974423408508
    3. '_identity' → logprob: -5.514397621154785
    4. 'int' → logprob: -6.514397621154785
    5. '   ' → logprob: -7.264397621154785
    6. 'ident' → logprob: -9.014397621154785
    7. ' int' → logprob: -9.139397621154785
    8. ' ident' → logprob: -9.264397621154785
    9. '.identity' → logprob: -10.514397621154785
    10. 'interval' → logprob: -10.639397621154785

Token 923: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6537325978279114
    2. ' value' → logprob: -1.4037325382232666
    3. 'element' → logprob: -2.4037325382232666
    4. '_value' → logprob: -2.9037325382232666
    5. '=' → logprob: -3.1537325382232666
    6. ')' → logprob: -3.7787325382232666
    7. ' element' → logprob: -5.278732776641846
    8. '   ' → logprob: -5.778732776641846
    9. '_val' → logprob: -5.778732776641846
    10. '_element' → logprob: -5.903732776641846

Token 924: ' for' (ID: 395)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25386789441108704
    2. '):' → logprob: -1.7538678646087646
    3. '=None' → logprob: -3.6288678646087646
    4. ')' → logprob: -3.8788678646087646
    5. '   ' → logprob: -6.378868103027344
    6. '=' → logprob: -7.003868103027344
    7. ':' → logprob: -7.253868103027344
    8. ',' → logprob: -9.253868103027344
    9. '       ' → logprob: -9.253868103027344
    10. '):
' → logprob: -9.628868103027344

Token 925: ' the' (ID: 290)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'func' → logprob: -4.11996734328568e-05
    2. 'self' → logprob: -10.875041007995605
    3. ' func' → logprob: -11.500041007995605
    4. 'int' → logprob: -11.625041007995605
    5. '   ' → logprob: -13.000041007995605
    6. '(func' → logprob: -15.375041007995605
    7. 'n' → logprob: -15.625041007995605
    8. '       ' → logprob: -16.000041961669922
    9. ')' → logprob: -16.125041961669922
    10. '
' → logprob: -16.875041961669922

Token 926: ' function' (ID: 1114)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.0021672712173312902
    2. 'operation' → logprob: -6.627167224884033
    3. 'function' → logprob: -7.752167224884033
    4. ' func' → logprob: -8.502167701721191
    5. 'segment' → logprob: -8.877167701721191
    6. ' operation' → logprob: -10.002167701721191
    7. 'seg' → logprob: -11.877167701721191
    8. '   ' → logprob: -12.502167701721191
    9. ' ' → logprob: -13.252167701721191
    10. '
' → logprob: -13.252167701721191

Token 927: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26286983489990234
    2. '):
' → logprob: -2.1378698348999023
    3. '):' → logprob: -2.6378698348999023
    4. '       ' → logprob: -3.8878698348999023
    5. '   ' → logprob: -4.137869834899902
    6. ')
' → logprob: -6.137869834899902
    7. '
' → logprob: -7.637869834899902
    8. '=' → logprob: -7.762869834899902
    9. ' )' → logprob: -7.762869834899902
    10. '<|end|>' → logprob: -7.887869834899902

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003886086633428931
    2. '
' → logprob: -8.875388145446777
    3. '        
' → logprob: -9.750388145446777
    4. '):
' → logprob: -9.875388145446777
    5. ')
' → logprob: -10.000388145446777
    6. '   ' → logprob: -10.250388145446777
    7. ')' → logprob: -10.500388145446777
    8. '"""
' → logprob: -11.250388145446777
    9. 'self' → logprob: -12.250388145446777
    10. '"""' → logprob: -12.750388145446777

Token 929: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005863950937055051
    2. '):
' → logprob: -8.87558650970459
    3. '"""
' → logprob: -9.00058650970459
    4. ')
' → logprob: -9.00058650970459
    5. 'self' → logprob: -9.25058650970459
    6. ')' → logprob: -10.00058650970459
    7. '   ' → logprob: -10.87558650970459
    8. '"""' → logprob: -11.75058650970459
    9. ' """
' → logprob: -11.87558650970459
    10. '```' → logprob: -12.00058650970459

Token 930: 'param' (ID: 1355)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1419016271829605
    2. '       ' → logprob: -2.391901731491089
    3. '   ' → logprob: -4.39190149307251
    4. '"""
' → logprob: -4.51690149307251
    5. 'n' → logprob: -5.26690149307251
    6. 'param' → logprob: -5.51690149307251
    7. 'return' → logprob: -5.51690149307251
    8. 'int' → logprob: -6.89190149307251
    9. 'super' → logprob: -7.01690149307251
    10. 'A' → logprob: -8.141901969909668

Token 931: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004352621268481016
    2. ' A' → logprob: -6.504352569580078
    3. 'arr' → logprob: -6.629352569580078
    4. 'lst' → logprob: -7.754352569580078
    5. 'init' → logprob: -8.504352569580078
    6. 'data' → logprob: -8.879352569580078
    7. '   ' → logprob: -8.879352569580078
    8. 'array' → logprob: -9.379352569580078
    9. 'initial' → logprob: -9.754352569580078
    10. 'list' → logprob: -10.129352569580078

Token 932: ':' (ID: 25)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.7687681913375854
    2. '=[]' → logprob: -1.0187681913375854
    3. '=' → logprob: -1.7687681913375854
    4. '):' → logprob: -5.518768310546875
    5. '):
' → logprob: -8.143768310546875
    6. ':' → logprob: -8.518768310546875
    7. ')' → logprob: -8.643768310546875
    8. '   ' → logprob: -10.268768310546875
    9. ' =' → logprob: -10.393768310546875
    10. '=[],' → logprob: -11.018768310546875

Token 933: ' Optional' (ID: 19351)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8290362358093262
    2. 'None' → logprob: -1.5790362358093262
    3. ' None' → logprob: -1.7040362358093262
    4. ' A' → logprob: -1.9540362358093262
    5. ' []' → logprob: -4.079036235809326
    6. '[]' → logprob: -4.704036235809326
    7. ' list' → logprob: -5.079036235809326
    8. 'list' → logprob: -7.079036235809326
    9. '=[]' → logprob: -8.079036712646484
    10. ' [])' → logprob: -9.454036712646484

Token 934: ' initial' (ID: 4871)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=None' → logprob: -1.0653654336929321
    2. ' list' → logprob: -1.4403654336929321
    3. '=[]' → logprob: -1.5653654336929321
    4. '):' → logprob: -2.0653653144836426
    5. '):
' → logprob: -3.5653653144836426
    6. ')' → logprob: -4.065365314483643
    7. '=' → logprob: -4.440365314483643
    8. 'list' → logprob: -5.190365314483643
    9. '=list' → logprob: -5.190365314483643
    10. ':' → logprob: -5.940365314483643

Token 935: ' values' (ID: 4824)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.202326238155365
    2. ' list' → logprob: -2.8273262977600098
    3. '=list' → logprob: -3.4523262977600098
    4. '=None' → logprob: -3.7023262977600098
    5. 'list' → logprob: -3.7023262977600098
    6. '):' → logprob: -4.20232629776001
    7. '=' → logprob: -4.57732629776001
    8. 'data' → logprob: -5.70232629776001
    9. ':list' → logprob: -5.82732629776001
    10. 'A' → logprob: -6.32732629776001

Token 936: ' as' (ID: 472)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.34234049916267395
    2. '):
' → logprob: -1.5923404693603516
    3. '=None' → logprob: -2.5923404693603516
    4. '):' → logprob: -4.717340469360352
    5. '   ' → logprob: -6.342340469360352
    6. '=' → logprob: -7.592340469360352
    7. ':' → logprob: -8.592340469360352
    8. '       ' → logprob: -10.092340469360352
    9. '=[]
' → logprob: -10.467340469360352
    10. ' =' → logprob: -10.467340469360352

Token 937: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2273615002632141
    2. 'None' → logprob: -2.2273614406585693
    3. 'list' → logprob: -2.9773614406585693
    4. '[])' → logprob: -4.102361679077148
    5. ' []' → logprob: -4.477361679077148
    6. '[]):' → logprob: -4.852361679077148
    7. ' None' → logprob: -5.352361679077148
    8. ' list' → logprob: -5.852361679077148
    9. ' [])' → logprob: -7.477361679077148
    10. 'a' → logprob: -8.727361679077148

Token 938: '.' (ID: 13)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.4315933585166931
    2. '=None' → logprob: -1.681593418121338
    3. '):
' → logprob: -2.056593418121338
    4. '):' → logprob: -3.431593418121338
    5. '=' → logprob: -6.181593418121338
    6. '   ' → logprob: -6.556593418121338
    7. '([]' → logprob: -8.68159294128418
    8. '(None' → logprob: -9.18159294128418
    9. '=[]
' → logprob: -9.55659294128418
    10. ')' → logprob: -9.55659294128418

Token 939: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011515066027641296
    2. '):
' → logprob: -4.511515140533447
    3. '):' → logprob: -8.761514663696289
    4. ')' → logprob: -9.261514663696289
    5. '"):
' → logprob: -9.636514663696289
    6. '   ' → logprob: -10.136514663696289
    7. '
' → logprob: -10.261514663696289
    8. ' ):
' → logprob: -11.011514663696289
    9. '```' → logprob: -11.011514663696289
    10. ')
' → logprob: -11.136514663696289

Token 940: ' given' (ID: 4335)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.48661747574806213
    2. ' not' → logprob: -1.8616174459457397
    3. ' provided' → logprob: -2.6116175651550293
    4. 'len' → logprob: -2.8616175651550293
    5. ' A' → logprob: -3.3616175651550293
    6. 'provided' → logprob: -3.4866175651550293
    7. 'not' → logprob: -3.6116175651550293
    8. 'None' → logprob: -5.736617565155029
    9. ' len' → logprob: -6.361617565155029
    10. '[]' → logprob: -6.736617565155029

Token 941: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7319979667663574
    2. '):
' → logprob: -1.3569979667663574
    3. ':' → logprob: -1.6069979667663574
    4. ',' → logprob: -4.106997966766357
    5. ':
' → logprob: -4.231997966766357
    6. '   ' → logprob: -4.731997966766357
    7. '=' → logprob: -4.856997966766357
    8. '=None' → logprob: -5.106997966766357
    9. '=[]' → logprob: -5.731997966766357
    10. ' is' → logprob: -7.231997966766357

Token 942: ' popul' (ID: 24357)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7649993896484375
    2. ' n' → logprob: -1.7649993896484375
    3. ' self' → logprob: -2.1399993896484375
    4. 'n' → logprob: -2.1399993896484375
    5. '       ' → logprob: -3.0149993896484375
    6. 'A' → logprob: -3.5149993896484375
    7. 'l' → logprob: -5.0149993896484375
    8. 'size' → logprob: -5.3899993896484375
    9. ':' → logprob: -5.5149993896484375
    10. 'None' → logprob: -5.5149993896484375

Token 943: 'ates' (ID: 1381)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.003775619901716709
    2. 'ates' → logprob: -6.128775596618652
    3. 'ed' → logprob: -7.003775596618652
    4. 'ate' → logprob: -8.003775596618652
    5. 'ted' → logprob: -9.128775596618652
    6. '[' → logprob: -10.253775596618652
    7. '```' → logprob: -10.253775596618652
    8. '#' → logprob: -10.503775596618652
    9. 'ited' → logprob: -10.628775596618652
    10. 'lated' → logprob: -10.753775596618652

Token 944: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06102169305086136
    2. ' the' → logprob: -3.5610218048095703
    3. ' self' → logprob: -3.9360218048095703
    4. 'the' → logprob: -4.56102180480957
    5. '       ' → logprob: -7.31102180480957
    6. '   ' → logprob: -9.56102180480957
    7. 'tree' → logprob: -10.81102180480957
    8. ')' → logprob: -11.18602180480957
    9. ':' → logprob: -11.93602180480957
    10. '(self' → logprob: -12.18602180480957

Token 945: ' segment' (ID: 14806)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.4330126941204071
    2. ' tree' → logprob: -1.3080127239227295
    3. 'segment' → logprob: -3.3080127239227295
    4. 'A' → logprob: -3.9330127239227295
    5. ' segment' → logprob: -4.43301248550415
    6. ' A' → logprob: -5.05801248550415
    7. 'data' → logprob: -6.55801248550415
    8. 'array' → logprob: -6.55801248550415
    9. 'seg' → logprob: -6.68301248550415
    10. ' array' → logprob: -7.43301248550415

Token 946: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.1684933751821518
    2. ' tree' → logprob: -1.918493390083313
    3. '_tree' → logprob: -4.918493270874023
    4. '       ' → logprob: -7.168493270874023
    5. '   ' → logprob: -9.418493270874023
    6. 'self' → logprob: -11.043493270874023
    7. 'size' → logprob: -11.293493270874023
    8. 'data' → logprob: -11.668493270874023
    9. '.tree' → logprob: -12.168493270874023
    10. 'Tree' → logprob: -12.293493270874023

Token 947: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30381226539611816
    2. '.' → logprob: -2.428812265396118
    3. '):
' → logprob: -3.178812265396118
    4. ')' → logprob: -3.303812265396118
    5. '):' → logprob: -3.303812265396118
    6. 'self' → logprob: -4.053812026977539
    7. ':' → logprob: -4.553812026977539
    8. ',' → logprob: -5.053812026977539
    9. '.
' → logprob: -5.428812026977539
    10. ':
' → logprob: -5.678812026977539

Token 948: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.035921912640333176
    2. ' A' → logprob: -3.410921812057495
    3. 'len' → logprob: -7.035922050476074
    4. ' the' → logprob: -8.160922050476074
    5. 'the' → logprob: -8.410922050476074
    6. ' list' → logprob: -8.785922050476074
    7. 'n' → logprob: -8.910922050476074
    8. '   ' → logprob: -8.910922050476074
    9. ' len' → logprob: -9.410922050476074
    10. 'list' → logprob: -9.660922050476074

Token 949: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11561008542776108
    2. '):
' → logprob: -2.240610122680664
    3. ':' → logprob: -6.990610122680664
    4. ')' → logprob: -7.240610122680664
    5. '=' → logprob: -7.615610122680664
    6. '=None' → logprob: -8.865610122680664
    7. '       ' → logprob: -8.990610122680664
    8. '.' → logprob: -9.115610122680664
    9. '   ' → logprob: -9.240610122680664
    10. '=[]' → logprob: -9.615610122680664

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1007491797208786
    2. '):
' → logprob: -2.3507492542266846
    3. '):' → logprob: -7.8507490158081055
    4. '
' → logprob: -9.850749015808105
    5. '   ' → logprob: -10.475749015808105
    6. '"):
' → logprob: -10.600749015808105
    7. ')' → logprob: -11.350749015808105
    8. ':
' → logprob: -11.975749015808105
    9. '```' → logprob: -11.975749015808105
    10. ' ):
' → logprob: -12.100749015808105

Token 951: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018349916208535433
    2. '):
' → logprob: -6.376834869384766
    3. 'self' → logprob: -9.376834869384766
    4. '):' → logprob: -11.126834869384766
    5. '   ' → logprob: -11.376834869384766
    6. '"):
' → logprob: -12.376834869384766
    7. ')' → logprob: -12.501834869384766
    8. ':
' → logprob: -13.001834869384766
    9. '
' → logprob: -13.001834869384766
    10. ' self' → logprob: -13.126834869384766

Token 952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.514650183613412e-05
    2. 'self' → logprob: -9.875055313110352
    3. '   ' → logprob: -12.625055313110352
    4. ' self' → logprob: -16.00005531311035
    5. 'def' → logprob: -16.87505531311035
    6. 'import' → logprob: -17.37505531311035
    7. '           ' → logprob: -17.50005531311035
    8. '	' → logprob: -18.00005531311035
    9. '#' → logprob: -18.12505531311035
    10. '     ' → logprob: -18.87505531311035

Token 953: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03804550692439079
    2. '       ' → logprob: -3.2880454063415527
    3. 'import' → logprob: -13.538045883178711
    4. 'from' → logprob: -13.788045883178711
    5. ' self' → logprob: -14.038045883178711
    6. '   ' → logprob: -14.788045883178711
    7. 'super' → logprob: -16.03804588317871
    8. '(self' → logprob: -16.53804588317871
    9. 'size' → logprob: -16.66304588317871
    10. 'n' → logprob: -16.66304588317871

Token 954: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0006129555404186249
    2. '.' → logprob: -8.25061321258545
    3. 'n' → logprob: -9.00061321258545
    4. ' .' → logprob: -9.25061321258545
    5. '.N' → logprob: -9.75061321258545
    6. '._' → logprob: -10.75061321258545
    7. '   ' → logprob: -10.75061321258545
    8. '=n' → logprob: -12.25061321258545
    9. '_n' → logprob: -12.37561321258545
    10. '       ' → logprob: -12.50061321258545

Token 955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008636081591248512
    2. ' =' → logprob: -4.758635997772217
    3. '   ' → logprob: -10.883636474609375
    4. '=n' → logprob: -13.508636474609375
    5. '=int' → logprob: -14.258636474609375
    6. '    ' → logprob: -14.883636474609375
    7. '       ' → logprob: -15.758636474609375
    8. '=len' → logprob: -15.883636474609375
    9. '＝' → logprob: -16.758636474609375
    10. ' ' → logprob: -17.133636474609375

Token 956: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019291093340143561
    2. 'n' → logprob: -6.25192928314209
    3. '__' → logprob: -16.001928329467773
    4. '   ' → logprob: -16.376928329467773
    5. ' ' → logprob: -16.626928329467773
    6. '```' → logprob: -16.626928329467773
    7. '0' → logprob: -17.001928329467773
    8. '16' → logprob: -17.001928329467773
    9. '
' → logprob: -17.626928329467773
    10. 'self' → logprob: -17.626928329467773

Token 957: '                 ' (ID: 2902)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014703650027513504
    2. '
' → logprob: -4.264703750610352
    3. 'self' → logprob: -8.014703750610352
    4. 'import' → logprob: -9.639703750610352
    5. '<<' → logprob: -10.264703750610352
    6. 'if' → logprob: -10.764703750610352
    7. '1' → logprob: -11.139703750610352
    8. '+' → logprob: -11.514703750610352
    9. '0' → logprob: -11.889703750610352
    10. '   ' → logprob: -12.014703750610352

Token 958: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7483333945274353
    2. '       ' → logprob: -1.12333345413208
    3. 'self' → logprob: -1.62333345413208
    4. 'if' → logprob: -6.49833345413208
    5. '<<' → logprob: -7.12333345413208
    6. 'while' → logprob: -7.49833345413208
    7. '        
' → logprob: -7.74833345413208
    8. '+' → logprob: -8.123332977294922
    9. 'import' → logprob: -8.123332977294922
    10. '#' (adapté à ' #') → logprob: -8.873332977294922

Token 959: ' Number' (ID: 9184)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017253957921639085
    2. 'n' → logprob: -6.376725196838379
    3. '(' → logprob: -11.501725196838379
    4. '(n' → logprob: -12.626725196838379
    5. '__' → logprob: -12.876725196838379
    6. 'self' → logprob: -13.251725196838379
    7. ' ' → logprob: -13.876725196838379
    8. '2' → logprob: -14.251725196838379
    9. 'pow' → logprob: -14.376725196838379
    10. '   ' → logprob: -14.626725196838379

Token 960: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9806061387062073
    2. ' of' → logprob: -1.2306060791015625
    3. ' =' → logprob: -1.4806060791015625
    4. '_of' → logprob: -2.7306060791015625
    5. 'of' → logprob: -3.7306060791015625
    6. '       ' → logprob: -5.7306060791015625
    7. 'Of' → logprob: -5.8556060791015625
    8. '   ' → logprob: -6.4806060791015625
    9. '=self' → logprob: -6.4806060791015625
    10. '_' → logprob: -6.4806060791015625

Token 961: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.8101915121078491
    2. 'self' → logprob: -1.1851915121078491
    3. 'A' → logprob: -1.9351915121078491
    4. 'ele' → logprob: -3.8101916313171387
    5. '   ' → logprob: -4.060191631317139
    6. ' ' → logprob: -4.060191631317139
    7. '_elements' → logprob: -4.435191631317139
    8. 'data' → logprob: -4.935191631317139
    9. 'nodes' → logprob: -5.560191631317139
    10. '_nodes' → logprob: -5.810191631317139

Token 962: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17016199231147766
    2. '<|end|>' → logprob: -1.9201619625091553
    3. '
' → logprob: -5.045162200927734
    4. '<|end|>' → logprob: -6.420162200927734
    5. 'self' → logprob: -7.295162200927734
    6. ')' → logprob: -7.795162200927734
    7. '   ' → logprob: -8.545162200927734
    8. '        ' → logprob: -8.795162200927734
    9. '+' → logprob: -9.420162200927734
    10. ',' → logprob: -10.295162200927734

Token 963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030679339542984962
    2. 'self' → logprob: -3.530679225921631
    3. ' self' → logprob: -7.030679225921631
    4. '   ' → logprob: -11.155679702758789
    5. ',' → logprob: -11.530679702758789
    6. 's' → logprob: -11.655679702758789
    7. 'import' → logprob: -13.030679702758789
    8. '           ' → logprob: -13.780679702758789
    9. '	' → logprob: -13.905679702758789
    10. 'n' → logprob: -14.030679702758789

Token 964: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002994578331708908
    2. '       ' → logprob: -6.002994537353516
    3. 'size' → logprob: -8.377994537353516
    4. '   ' → logprob: -8.752994537353516
    5. 'func' → logprob: -9.877994537353516
    6. ' self' → logprob: -10.502994537353516
    7. 'm' → logprob: -10.502994537353516
    8. '_func' → logprob: -11.752994537353516
    9. 'def' → logprob: -12.252994537353516
    10. '_size' → logprob: -13.002994537353516

Token 965: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -0.12100785225629807
    2. '.size' → logprob: -2.3710079193115234
    3. '.sz' → logprob: -4.621007919311523
    4. '.n' → logprob: -6.246007919311523
    5. '.x' → logprob: -6.496007919311523
    6. '.len' → logprob: -6.871007919311523
    7. '.log' → logprob: -7.121007919311523
    8. '._' → logprob: -7.246007919311523
    9. 'func' → logprob: -7.246007919311523
    10. '.seg' → logprob: -7.371007919311523

Token 966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142415165901184
    2. ' =' → logprob: -1.7014241218566895
    3. '   ' → logprob: -11.576424598693848
    4. ' ' → logprob: -14.326424598693848
    5. '    ' → logprob: -14.576424598693848
    6. '  ' → logprob: -15.701424598693848
    7. '     ' → logprob: -16.70142364501953
    8. '=
' → logprob: -16.70142364501953
    9. '       ' → logprob: -16.82642364501953
    10. '      ' → logprob: -17.70142364501953

Token 967: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -1.3856492842023727e-06
    2. ' func' → logprob: -13.750000953674316
    3. 'fun' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '(func' → logprob: -17.625001907348633
    6. '       ' → logprob: -18.500001907348633
    7. '	func' → logprob: -18.750001907348633
    8. 'f' → logprob: -18.875001907348633
    9. 'fn' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.000001907348633

Token 968: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04577798768877983
    2. '
' → logprob: -3.1707780361175537
    3. 'self' → logprob: -6.170777797698975
    4. '<|end|>' → logprob: -8.045778274536133
    5. ',' → logprob: -9.045778274536133
    6. ' and' → logprob: -10.295778274536133
    7. '=' → logprob: -10.295778274536133
    8. ' =' → logprob: -10.545778274536133
    9. ' self' → logprob: -10.670778274536133
    10. '   ' → logprob: -10.670778274536133

Token 969: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.394082635641098
    2. '
' → logprob: -1.1440826654434204
    3. '<|end|>' → logprob: -5.269082546234131
    4. 'self' → logprob: -6.894082546234131
    5. '#' (adapté à ' #') → logprob: -8.019083023071289
    6. '<|end|>' → logprob: -8.769083023071289
    7. '        
' → logprob: -9.144083023071289
    8. '
' → logprob: -9.394083023071289
    9. '   ' → logprob: -9.519083023071289
    10. '[' → logprob: -10.519083023071289

Token 970: ' Segment' (ID: 64922)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.043004684150218964
    2. 'int' → logprob: -3.1680047512054443
    3. 'fun' → logprob: -13.168004989624023
    4. '   ' → logprob: -13.668004989624023
    5. ' func' → logprob: -14.668004989624023
    6. 'self' → logprob: -15.293004989624023
    7. 'float' → logprob: -15.418004989624023
    8. 'f' → logprob: -15.543004989624023
    9. '_func' → logprob: -15.543004989624023
    10. 'function' → logprob: -15.543004989624023

Token 971: ' function' (ID: 1114)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5256619453430176
    2. '_tree' → logprob: -1.4006619453430176
    3. '   ' → logprob: -2.6506619453430176
    4. '_size' → logprob: -3.1506619453430176
    5. 'self' → logprob: -3.7756619453430176
    6. 'tree' → logprob: -4.900661945343018
    7. ' tree' → logprob: -5.150661945343018
    8. 'size' → logprob: -5.775661945343018
    9. ' self' → logprob: -6.400661945343018
    10. '_' → logprob: -6.400661945343018

Token 972: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006024802569299936
    2. 'self' → logprob: -8.375602722167969
    3. '
' → logprob: -8.750602722167969
    4. '<|end|>' → logprob: -9.125602722167969
    5. ',' → logprob: -9.750602722167969
    6. ' self' → logprob: -11.750602722167969
    7. '   ' → logprob: -11.750602722167969
    8. ' =' → logprob: -11.750602722167969
    9. '<|end|>' → logprob: -12.375602722167969
    10. ',
' → logprob: -12.375602722167969

Token 973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016077186912298203
    2. 'self' → logprob: -4.141077041625977
    3. ' self' → logprob: -10.391077041625977
    4. '   ' → logprob: -11.641077041625977
    5. '
' → logprob: -13.891077041625977
    6. ',' → logprob: -14.016077041625977
    7. '           ' → logprob: -15.266077041625977
    8. '	self' → logprob: -15.266077041625977
    9. '	' → logprob: -15.391077041625977
    10. '        
' → logprob: -15.766077041625977

Token 974: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.3120038501219824e-05
    2. '       ' → logprob: -9.875053405761719
    3. ' self' → logprob: -14.500053405761719
    4. '   ' → logprob: -14.875053405761719
    5. '
' → logprob: -15.125053405761719
    6. 'from' → logprob: -16.12505340576172
    7. 'import' → logprob: -16.50005340576172
    8. '           ' → logprob: -16.62505340576172
    9. '        
' → logprob: -17.12505340576172
    10. '	self' → logprob: -17.50005340576172

Token 975: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.0005371859879232943
    2. '.INT' → logprob: -7.875537395477295
    3. 'int' → logprob: -9.875536918640137
    4. '.id' → logprob: -10.875536918640137
    5. '.' → logprob: -11.125536918640137
    6. ' .' → logprob: -11.500536918640137
    7. '.inf' → logprob: -11.500536918640137
    8. '.identity' → logprob: -11.625536918640137
    9. '   ' → logprob: -12.000536918640137
    10. '.Int' → logprob: -12.000536918640137

Token 976: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.305326966568828e-05
    2. 'erv' → logprob: -9.500093460083008
    3. 'erval' → logprob: -11.500093460083008
    4. 'val' → logprob: -12.000093460083008
    5. 'er' → logprob: -14.750093460083008
    6. 'e' → logprob: -14.875093460083008
    7. 'V' → logprob: -15.750093460083008
    8. 'в' → logprob: -15.875093460083008
    9. 'value' → logprob: -15.875093460083008
    10. '_val' → logprob: -16.750093460083008

Token 977: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891688495874405
    2. ' =' → logprob: -2.5789167881011963
    3. '   ' → logprob: -10.703916549682617
    4. '    ' → logprob: -13.578916549682617
    5. ' ' → logprob: -13.953916549682617
    6. '  ' → logprob: -14.203916549682617
    7. '=None' → logprob: -14.703916549682617
    8. '=int' → logprob: -15.203916549682617
    9. ')' → logprob: -15.328916549682617
    10. '       ' → logprob: -15.828916549682617

Token 978: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -14.500000953674316
    3. 'intval' → logprob: -17.5
    4. '   ' → logprob: -17.75
    5. '[int' → logprob: -19.125
    6. '=int' → logprob: -19.125
    7. ' ' → logprob: -19.5
    8. 'i' → logprob: -19.5
    9. '(int' → logprob: -19.625
    10. '_int' → logprob: -19.625

Token 979: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00010962257510982454
    2. 'val' → logprob: -9.375109672546387
    3. 'erval' → logprob: -10.750109672546387
    4. 'value' → logprob: -13.750109672546387
    5. 'erv' → logprob: -13.875109672546387
    6. 'self' → logprob: -15.500109672546387
    7. '_val' → logprob: -15.625109672546387
    8. 'var' → logprob: -15.875109672546387
    9. '(self' → logprob: -16.12510871887207
    10. '_value' → logprob: -16.37510871887207

Token 980: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024280032142996788
    2. '
' → logprob: -3.774280071258545
    3. 'self' → logprob: -7.399280071258545
    4. '   ' → logprob: -8.649279594421387
    5. '      ' → logprob: -9.899279594421387
    6. '#' → logprob: -9.899279594421387
    7. ' self' → logprob: -10.774279594421387
    8. '        
' → logprob: -10.774279594421387
    9. ' ' → logprob: -11.024279594421387
    10. '     ' → logprob: -11.274279594421387

Token 981: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4846961200237274
    2. '       ' → logprob: -0.9846961498260498
    3. 'self' → logprob: -5.734695911407471
    4. '#' (adapté à ' #') → logprob: -6.234695911407471
    5. '        
' → logprob: -6.234695911407471
    6. '
' → logprob: -6.984695911407471
    7. ' 
' → logprob: -7.484695911407471
    8. '  
' → logprob: -7.859695911407471
    9. '<|end|>' → logprob: -8.234696388244629
    10. '   ' → logprob: -8.609696388244629

Token 982: ' Identity' (ID: 47739)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.960946772480384e-05
    2. '[int' → logprob: -9.375099182128906
    3. ' int' → logprob: -12.250099182128906
    4. 'A' → logprob: -12.250099182128906
    5. '[' → logprob: -12.625099182128906
    6. 'INT' → logprob: -14.625099182128906
    7. '   ' → logprob: -15.000099182128906
    8. '(int' → logprob: -15.125099182128906
    9. '[A' → logprob: -15.625099182128906
    10. '<int' → logprob: -16.500099182128906

Token 983: ' value' (ID: 1432)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3739991784095764
    2. 'value' → logprob: -1.8739991188049316
    3. '<|end|>' → logprob: -2.7489991188049316
    4. '_val' → logprob: -3.3739991188049316
    5. ' value' → logprob: -3.8739991188049316
    6. ')' → logprob: -4.123999118804932
    7. '       ' → logprob: -4.748999118804932
    8. '_' → logprob: -5.248999118804932
    9. '   ' → logprob: -5.998999118804932
    10. '    ' → logprob: -6.373999118804932

Token 984: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001968958182260394
    2. 'self' → logprob: -6.751968860626221
    3. '<|end|>' → logprob: -7.876968860626221
    4. '
' → logprob: -8.251969337463379
    5. ',' → logprob: -9.126969337463379
    6. ',
' → logprob: -11.251969337463379
    7. '<|end|>' → logprob: -12.001969337463379
    8. ' self' → logprob: -12.251969337463379
    9. '        
' → logprob: -12.376969337463379
    10. '[' → logprob: -13.001969337463379

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001038883114233613
    2. 'self' → logprob: -6.876039028167725
    3. ' self' → logprob: -12.376038551330566
    4. '	' → logprob: -14.501038551330566
    5. '   ' → logprob: -15.001038551330566
    6. '```' → logprob: -15.001038551330566
    7. '           ' → logprob: -15.876038551330566
    8. 'import' → logprob: -16.376039505004883
    9. '#' → logprob: -16.501039505004883
    10. 's' → logprob: -16.501039505004883

Token 986: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0023063160479068756
    2. 'size' → logprob: -6.1273064613342285
    3. 'm' → logprob: -10.37730598449707
    4. '   ' → logprob: -10.62730598449707
    5. 'sz' → logprob: -11.12730598449707
    6. 'from' → logprob: -11.12730598449707
    7. '_size' → logprob: -11.25230598449707
    8. 'h' → logprob: -12.25230598449707
    9. '       ' → logprob: -12.50230598449707
    10. '_self' → logprob: -12.87730598449707

Token 987: ' Find' (ID: 9764)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023189915344119072
    2. 'size' → logprob: -3.8981900215148926
    3. '_size' → logprob: -7.148190021514893
    4. 'm' → logprob: -7.523190021514893
    5. '   ' → logprob: -7.523190021514893
    6. 'sz' → logprob: -7.773190021514893
    7. 'log' → logprob: -10.273189544677734
    8. 'N' → logprob: -10.398189544677734
    9. 'num' → logprob: -10.523189544677734
    10. 'while' → logprob: -10.773189544677734

Token 988: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008834847249090672
    2. '   ' → logprob: -5.8838348388671875
    3. 'size' → logprob: -6.1338348388671875
    4. 'x' → logprob: -6.5088348388671875
    5. '1' → logprob: -6.6338348388671875
    6. '_size' → logprob: -8.133834838867188
    7. 'n' → logprob: -8.508834838867188
    8. '       ' → logprob: -9.258834838867188
    9. ' self' → logprob: -9.258834838867188
    10. 'sz' → logprob: -9.508834838867188

Token 989: ' smallest' (ID: 42173)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5731123685836792
    2. 'size' → logprob: -0.9481123685836792
    3. 'n' → logprob: -3.8231124877929688
    4. 'self' → logprob: -4.323112487792969
    5. '   ' → logprob: -5.573112487792969
    6. '_size' → logprob: -5.698112487792969
    7. 'm' → logprob: -6.323112487792969
    8. 'pow' → logprob: -6.698112487792969
    9. 'sz' → logprob: -7.073112487792969
    10. 'power' → logprob: -7.948112487792969

Token 990: ' power' (ID: 3470)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.41584718227386475
    2. 'x' → logprob: -2.4158473014831543
    3. 'pow' → logprob: -2.6658473014831543
    4. 'k' → logprob: -2.7908473014831543
    5. 'size' → logprob: -3.0408473014831543
    6. 'n' → logprob: -4.040847301483154
    7. '_pow' → logprob: -4.665847301483154
    8. 's' → logprob: -4.790847301483154
    9. 'self' → logprob: -4.915847301483154
    10. 'power' → logprob: -5.040847301483154

Token 991: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5445630550384521
    2. '_of' → logprob: -1.9195630550384521
    3. ' of' → logprob: -1.9195630550384521
    4. '   ' → logprob: -2.794563055038452
    5. '2' → logprob: -3.169563055038452
    6. '       ' → logprob: -3.919563055038452
    7. 'Of' → logprob: -6.419563293457031
    8. '-of' → logprob: -7.669563293457031
    9. '    ' → logprob: -8.294563293457031
    10. 'self' → logprob: -8.419563293457031

Token 992: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.097437315271236e-05
    2. 'two' → logprob: -10.12505054473877
    3. ' ' → logprob: -11.87505054473877
    4. '   ' → logprob: -13.12505054473877
    5. ' two' → logprob: -13.25005054473877
    6. '２' → logprob: -16.250051498413086
    7. 'Two' → logprob: -16.750051498413086
    8. '`' → logprob: -17.000051498413086
    9. '_two' → logprob: -17.125051498413086
    10. '```' → logprob: -17.500051498413086

Token 993: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.4940372705459595
    2. ' greater' → logprob: -1.4940372705459595
    3. '>=' → logprob: -1.6190372705459595
    4. '       ' → logprob: -2.11903715133667
    5. 'greater' → logprob: -2.74403715133667
    6. 'self' → logprob: -3.11903715133667
    7. '   ' → logprob: -3.24403715133667
    8. ' that' → logprob: -3.74403715133667
    9. '(self' → logprob: -3.86903715133667
    10. 'that' → logprob: -3.99403715133667

Token 994: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04861268773674965
    2. 'self' → logprob: -3.048612594604492
    3. '   ' → logprob: -10.923612594604492
    4. '       ' → logprob: -12.423612594604492
    5. ' n' → logprob: -13.798612594604492
    6. '(self' → logprob: -14.423612594604492
    7. '_n' → logprob: -14.673612594604492
    8. ' self' → logprob: -14.673612594604492
    9. '2' → logprob: -15.048612594604492
    10. '1' → logprob: -15.923612594604492

Token 995: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24829743802547455
    2. 'self' → logprob: -1.9982974529266357
    3. 'size' → logprob: -3.4982974529266357
    4. 'n' → logprob: -3.6232974529266357
    5. 's' → logprob: -4.498297214508057
    6. 'i' → logprob: -5.748297214508057
    7. 'l' → logprob: -5.998297214508057
    8. 't' → logprob: -6.248297214508057
    9. 'm' → logprob: -6.373297214508057
    10. '   ' → logprob: -6.623297214508057

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09001007676124573
    2. ' =' → logprob: -2.715010166168213
    3. '=' → logprob: -4.590010166168213
    4. 'self' → logprob: -5.340010166168213
    5. 'n' → logprob: -6.215010166168213
    6. 'while' → logprob: -6.715010166168213
    7. '   ' → logprob: -8.090009689331055
    8. ',' → logprob: -8.215009689331055
    9. 'size' → logprob: -8.590009689331055
    10. '
' → logprob: -9.215009689331055

Token 997: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03433670848608017
    2. 'size' → logprob: -3.909336805343628
    3. '       ' → logprob: -5.159336566925049
    4. 'sz' → logprob: -5.659336566925049
    5. 'm' → logprob: -6.409336566925049
    6. 'n' (adapté à ' n') → logprob: -6.784336566925049
    7. '   ' → logprob: -7.409336566925049
    8. 'siz' → logprob: -7.659336566925049
    9. 's' → logprob: -9.034337043762207
    10. 'x' → logprob: -9.159337043762207

Token 998: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27468010783195496
    2. '_' → logprob: -1.8996801376342773
    3. '_=' → logprob: -3.3996801376342773
    4. '2' → logprob: -3.7746801376342773
    5. '=' → logprob: -4.149680137634277
    6. '0' → logprob: -5.149680137634277
    7. '_tmp' → logprob: -5.649680137634277
    8. '_pow' → logprob: -5.899680137634277
    9. 'pow' → logprob: -6.899680137634277
    10. 'tmp' → logprob: -7.649680137634277

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2015095353126526
    2. ' =' → logprob: -1.7015094757080078
    3. '   ' → logprob: -9.326509475708008
    4. ' ' → logprob: -12.576509475708008
    5. '=self' → logprob: -13.826509475708008
    6. '       ' → logprob: -14.451509475708008
    7. '  ' → logprob: -14.701509475708008
    8. '    ' → logprob: -14.951509475708008
    9. ',' → logprob: -15.076509475708008
    10. '=n' → logprob: -15.201509475708008

Token 1000: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -17.125
    3. '
' → logprob: -17.5
    4. ' ' → logprob: -17.75
    5. '2' → logprob: -18.25
    6. '```' → logprob: -18.875
    7. '１' → logprob: -19.0
    8. 'self' → logprob: -19.125
    9. '(' → logprob: -19.125
    10. '`' → logprob: -19.625

Token 1001: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.125
    3. '
' → logprob: -17.0
    4. '   ' → logprob: -17.875
    5. ' ' → logprob: -18.0
    6. 'self' → logprob: -18.375
    7. 'n' → logprob: -19.125
    8. '１' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '32' → logprob: -19.875

Token 1002: '
' (ID: 198)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2740132510662079
    2. '
' → logprob: -1.5240132808685303
    3. 'while' → logprob: -4.149013042449951
    4. ' <<=' → logprob: -5.274013042449951
    5. '<<(' → logprob: -8.02401351928711
    6. '       ' → logprob: -8.77401351928711
    7. '<n' → logprob: -8.77401351928711
    8. ' <<' → logprob: -9.39901351928711
    9. '<' → logprob: -9.52401351928711
    10. '
' → logprob: -10.02401351928711

Token 1003: '       ' (ID: 309)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06178548187017441
    2. '
' → logprob: -3.4367854595184326
    3. ' <<=' → logprob: -3.9367854595184326
    4. ' <<' → logprob: -5.186785697937012
    5. '       ' → logprob: -6.436785697937012
    6. 'while' → logprob: -7.811785697937012
    7. '<<(' → logprob: -8.061785697937012
    8. '   ' → logprob: -8.686785697937012
    9. '<' → logprob: -10.186785697937012
    10. ' while' → logprob: -10.561785697937012

Token 1004: ' while' (ID: 2049)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4535863399505615
    2. 'while' (adapté à ' while') → logprob: -1.2035863399505615
    3. '<n' → logprob: -3.3285863399505615
    4. ' <<=' → logprob: -4.453586578369141
    5. '       ' → logprob: -5.203586578369141
    6. ' while' → logprob: -5.578586578369141
    7. '<' → logprob: -5.703586578369141
    8. '
' → logprob: -6.203586578369141
    9. '   ' → logprob: -7.328586578369141
    10. 'n' → logprob: -7.453586578369141

Token 1005: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '	n' → logprob: -17.625036239624023
    4. '   ' → logprob: -18.500036239624023
    5. '(n' → logprob: -18.625036239624023
    6. '
' → logprob: -18.875036239624023
    7. '_n' → logprob: -20.500036239624023
    8. '<n' → logprob: -21.625036239624023
    9. '[n' → logprob: -21.750036239624023
    10. 'self' → logprob: -22.250036239624023

Token 1006: '2' (ID: 17)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6511410474777222
    2. '<n' → logprob: -1.0261410474777222
    3. '<' → logprob: -2.1511411666870117
    4. ' <<=' → logprob: -5.901141166687012
    5. '   ' → logprob: -7.526141166687012
    6. '<<' → logprob: -8.526141166687012
    7. '<p' → logprob: -9.276141166687012
    8. ' ' → logprob: -10.651141166687012
    9. '<size' → logprob: -10.776141166687012
    10. '<w' → logprob: -10.901141166687012

Token 1007: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08011992275714874
    2. ' <' → logprob: -2.5801198482513428
    3. '<n' → logprob: -6.705120086669922
    4. ' <<=' → logprob: -13.705120086669922
    5. '<len' → logprob: -14.330120086669922
    6. '<size' → logprob: -14.455120086669922
    7. '<num' → logprob: -14.830120086669922
    8. ' ' → logprob: -14.830120086669922
    9. '   ' → logprob: -15.080120086669922
    10. '<p' → logprob: -15.330120086669922

Token 1008: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234121344983578
    2. 'self' → logprob: -5.255234241485596
    3. '   ' → logprob: -16.005233764648438
    4. ' n' → logprob: -16.505233764648438
    5. '	n' → logprob: -18.005233764648438
    6. ' self' → logprob: -18.130233764648438
    7. '_n' → logprob: -20.130233764648438
    8. '       ' → logprob: -20.130233764648438
    9. '
' → logprob: -20.880233764648438
    10. '(n' → logprob: -21.005233764648438

Token 1009: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06401322782039642
    2. 'n' → logprob: -3.6890132427215576
    3. ':' → logprob: -3.8140132427215576
    4. '<<' → logprob: -4.9390130043029785
    5. ' <<=' → logprob: -5.8140130043029785
    6. '       ' → logprob: -6.5640130043029785
    7. '   ' → logprob: -7.0640130043029785
    8. '<n' → logprob: -7.1890130043029785
    9. ':n' → logprob: -7.1890130043029785
    10. '2' → logprob: -7.6890130043029785

Token 1010: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.033055949956178665
    2. ' n' → logprob: -3.7830560207366943
    3. '       ' → logprob: -4.783055782318115
    4. '           ' → logprob: -6.658055782318115
    5. '   ' → logprob: -9.408056259155273
    6. '	n' → logprob: -11.033056259155273
    7. '_n' → logprob: -13.408056259155273
    8. '(n' → logprob: -13.533056259155273
    9. '```' → logprob: -13.783056259155273
    10. '	       ' → logprob: -13.908056259155273

Token 1011: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -3.3213025744771585e-05
    2. '           ' → logprob: -10.750033378601074
    3. ' n' → logprob: -11.625033378601074
    4. '               ' → logprob: -12.875033378601074
    5. '   ' → logprob: -15.750033378601074
    6. '
' → logprob: -17.000032424926758
    7. '	n' → logprob: -17.625032424926758
    8. '       ' → logprob: -18.250032424926758
    9. '```' → logprob: -19.125032424926758
    10. '_n' → logprob: -19.250032424926758

Token 1012: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' <<=' → logprob: -15.75
    3. '   ' → logprob: -16.875
    4. '
' → logprob: -17.125
    5. '*=' → logprob: -17.625
    6. '<<' → logprob: -17.625
    7. '```' → logprob: -18.25
    8. '=' → logprob: -18.375
    9. '_' → logprob: -19.0
    10. ' *=' → logprob: -19.375

Token 1013: ' <<=' (ID: 134025)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07077531516551971
    2. ' <<=' → logprob: -3.070775270462036
    3. '*=' → logprob: -3.820775270462036
    4. '<' → logprob: -11.320775032043457
    5. '=' → logprob: -11.570775032043457
    6. '   ' → logprob: -11.945775032043457
    7. ' *=' → logprob: -12.445775032043457
    8. '```' → logprob: -15.820775032043457
    9. '<<<' → logprob: -16.570775985717773
    10. '2' → logprob: -16.695775985717773

Token 1014: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -17.125
    4. '           ' → logprob: -18.625
    5. '       ' → logprob: -19.0
    6. '```' → logprob: -19.25
    7. '
' → logprob: -20.125
    8. '0' → logprob: -20.5
    9. '=' → logprob: -20.75
    10. '１' → logprob: -21.0

Token 1015: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '0' → logprob: -20.125
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -20.25
    6. '１' → logprob: -20.5
    7. 'n' → logprob: -21.5
    8. '
' → logprob: -21.5
    9. '01' → logprob: -22.125
    10. '2' → logprob: -22.5

Token 1016: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011357495561242104
    2. 'self' → logprob: -4.511357307434082
    3. '
' → logprob: -8.261357307434082
    4. ' self' → logprob: -10.511357307434082
    5. ',' → logprob: -12.511357307434082
    6. 's' → logprob: -12.761357307434082
    7. 'n' → logprob: -12.886357307434082
    8. ')
' → logprob: -13.261357307434082
    9. '.' → logprob: -13.511357307434082
    10. '        
' → logprob: -13.636357307434082

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011915372451767325
    2. 'self' → logprob: -7.12619161605835
    3. '
' → logprob: -7.87619161605835
    4. ' self' → logprob: -12.626191139221191
    5. '           ' → logprob: -14.126191139221191
    6. '	' → logprob: -14.376191139221191
    7. ',' → logprob: -14.501191139221191
    8. '        
' → logprob: -14.626191139221191
    9. ',
' → logprob: -15.001191139221191
    10. '```' → logprob: -15.501191139221191

Token 1018: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5767850279808044
    2. '       ' → logprob: -0.8267850279808044
    3. ' self' → logprob: -7.076785087585449
    4. '   ' → logprob: -14.57678508758545
    5. '	self' → logprob: -16.201784133911133
    6. '
' → logprob: -16.576784133911133
    7. '	' → logprob: -17.451784133911133
    8. '        
' → logprob: -18.076784133911133
    9. '      ' → logprob: -18.576784133911133
    10. '           ' → logprob: -18.576784133911133

Token 1019: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.05158586427569389
    2. 'size' → logprob: -3.6765859127044678
    3. '.size' → logprob: -4.176585674285889
    4. 'n' → logprob: -4.676585674285889
    5. ' size' → logprob: -9.426586151123047
    6. '   ' → logprob: -9.926586151123047
    7. 'sz' → logprob: -10.551586151123047
    8. '_n' → logprob: -10.676586151123047
    9. '.seg' → logprob: -10.801586151123047
    10. '_size' → logprob: -10.926586151123047

Token 1020: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005241106729954481
    2. '=' → logprob: -5.3802409172058105
    3. ' =' → logprob: -7.5052409172058105
    4. '_' → logprob: -9.880241394042969
    5. '   ' → logprob: -11.880241394042969
    6. ' ' → logprob: -12.130241394042969
    7. 'n' → logprob: -12.630241394042969
    8. '_=' → logprob: -13.755241394042969
    9. '_n' → logprob: -14.880241394042969
    10. '  ' → logprob: -15.255241394042969

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. '=n' → logprob: -13.318148612976074
    4. '＝' → logprob: -17.94314956665039
    5. ' ' → logprob: -18.56814956665039
    6. '.=' → logprob: -19.94314956665039
    7. '=s' → logprob: -21.06814956665039
    8. ',' → logprob: -21.06814956665039
    9. '_=' → logprob: -21.19314956665039
    10. '=
' → logprob: -21.31814956665039

Token 1022: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9027791495318525e-05
    2. ' n' → logprob: -10.875019073486328
    3. '	n' → logprob: -16.875019073486328
    4. '   ' → logprob: -19.875019073486328
    5. '_n' → logprob: -20.500019073486328
    6. '$n' → logprob: -22.375019073486328
    7. '       ' → logprob: -22.750019073486328
    8. '(n' → logprob: -23.000019073486328
    9. ')n' → logprob: -23.250019073486328
    10. '[n' → logprob: -23.250019073486328

Token 1023: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007424530107527971
    2. '_' → logprob: -5.007424354553223
    3. '=' → logprob: -7.757424354553223
    4. '
' → logprob: -9.757424354553223
    5. '*' → logprob: -9.882424354553223
    6. ' =' → logprob: -10.132424354553223
    7. '   ' → logprob: -10.257424354553223
    8. 'n' → logprob: -10.382424354553223
    9. '_=' → logprob: -11.382424354553223
    10. '₂' → logprob: -11.382424354553223

Token 1024: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015288250870071352
    2. 'self' → logprob: -8.875152587890625
    3. '
' → logprob: -12.625152587890625
    4. '   ' → logprob: -12.750152587890625
    5. ' self' → logprob: -12.875152587890625
    6. ',' → logprob: -13.625152587890625
    7. '	' → logprob: -14.000152587890625
    8. '<|end|>' → logprob: -14.125152587890625
    9. '        
' → logprob: -14.625152587890625
    10. '           ' → logprob: -15.750152587890625

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000924561289139092
    2. 'self' → logprob: -7.000924587249756
    3. '   ' → logprob: -11.875924110412598
    4. ' self' → logprob: -12.750924110412598
    5. '
' → logprob: -13.750924110412598
    6. '	' → logprob: -13.875924110412598
    7. '        
' → logprob: -14.250924110412598
    8. '           ' → logprob: -15.875924110412598
    9. '```' → logprob: -15.875924110412598
    10. '	self' → logprob: -16.000925064086914

Token 1026: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815064437687397
    2. '       ' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.018150329589844
    4. '        
' → logprob: -15.893150329589844
    5. ' self' → logprob: -15.893150329589844
    6. '#' (adapté à ' #') → logprob: -16.393150329589844
    7. '
' → logprob: -17.518150329589844
    8. '	self' → logprob: -18.268150329589844
    9. 'from' → logprob: -19.393150329589844
    10. '(self' → logprob: -19.643150329589844

Token 1027: ' Create' (ID: 6585)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009374279179610312
    2. '       ' → logprob: -7.000937461853027
    3. 'data' → logprob: -11.625937461853027
    4. '#' → logprob: -12.125937461853027
    5. '   ' → logprob: -12.625937461853027
    6. 'tree' → logprob: -12.750937461853027
    7. ' self' → logprob: -13.500937461853027
    8. '        
' → logprob: -13.625937461853027
    9. 'dat' → logprob: -14.625937461853027
    10. '
' → logprob: -15.125937461853027

Token 1028: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6943157911300659
    2. '[self' → logprob: -0.9443157911300659
    3. '[' → logprob: -2.1943159103393555
    4. ' self' → logprob: -9.444315910339355
    5. ' [' → logprob: -9.569315910339355
    6. '   ' → logprob: -10.069315910339355
    7. '       ' → logprob: -11.944315910339355
    8. '(self' → logprob: -13.319315910339355
    9. '[s' → logprob: -14.319315910339355
    10. '[-' → logprob: -14.694315910339355

Token 1029: ' segment' (ID: 14806)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.23070001602172852
    2. 'dat' → logprob: -2.1057000160217285
    3. 'seg' → logprob: -3.2307000160217285
    4. 'tree' → logprob: -3.9807000160217285
    5. 'node' → logprob: -4.2307000160217285
    6. '_data' → logprob: -5.1057000160217285
    7. '_dat' → logprob: -6.6057000160217285
    8. '_seg' → logprob: -6.7307000160217285
    9. 'val' → logprob: -6.9807000160217285
    10. 'self' → logprob: -7.6057000160217285

Token 1030: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0458698496222496
    2. ' tree' → logprob: -3.420869827270508
    3. '_tree' → logprob: -4.670869827270508
    4. 'self' → logprob: -6.795869827270508
    5. 'data' → logprob: -7.045869827270508
    6. '_data' → logprob: -7.545869827270508
    7. '   ' → logprob: -9.170869827270508
    8. '[' → logprob: -10.045869827270508
    9. '.tree' → logprob: -10.295869827270508
    10. 't' → logprob: -11.045869827270508

Token 1031: ' array' (ID: 2644)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25101104378700256
    2. '       ' → logprob: -1.7510110139846802
    3. ' self' → logprob: -3.2510111331939697
    4. 'data' → logprob: -5.001010894775391
    5. ' data' → logprob: -6.876010894775391
    6. '[self' → logprob: -7.376010894775391
    7. '   ' → logprob: -8.12601089477539
    8. '[' → logprob: -8.12601089477539
    9. '(self' → logprob: -9.00101089477539
    10. ',' → logprob: -9.25101089477539

Token 1032: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6584618091583252
    2. '[' → logprob: -1.6584618091583252
    3. ' [' → logprob: -2.158461809158325
    4. '([' → logprob: -2.783461809158325
    5. 'self' → logprob: -3.158461809158325
    6. ' =' → logprob: -3.158461809158325
    7. ' self' → logprob: -4.658461570739746
    8. '(self' → logprob: -5.283461570739746
    9. '(' → logprob: -5.408461570739746
    10. '[self' → logprob: -5.783461570739746

Token 1033: 'indexed' (ID: 196125)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7584482431411743
    2. '[self' → logprob: -0.7584482431411743
    3. '[int' → logprob: -3.2584481239318848
    4. '[n' → logprob: -4.383448123931885
    5. '[size' → logprob: -4.883448123931885
    6. 'self' → logprob: -6.258448123931885
    7. '[node' → logprob: -6.883448123931885
    8. '[data' → logprob: -7.883448123931885
    9. '[val' → logprob: -8.133448600769043
    10. '[value' → logprob: -8.508448600769043

Token 1034: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7799746990203857
    2. ' =' → logprob: -1.4049746990203857
    3. '   ' → logprob: -2.5299746990203857
    4. '[' → logprob: -2.6549746990203857
    5. 'self' → logprob: -2.9049746990203857
    6. '       ' → logprob: -3.4049746990203857
    7. 'from' → logprob: -3.9049746990203857
    8. '=[' → logprob: -4.529974937438965
    9. ' self' → logprob: -4.654974937438965
    10. 'size' → logprob: -6.029974937438965

Token 1035: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6656129956245422
    2. '1' → logprob: -1.1656129360198975
    3. 'self' → logprob: -1.7906129360198975
    4. '   ' → logprob: -6.165613174438477
    5. 'n' → logprob: -6.415613174438477
    6. ' self' → logprob: -6.790613174438477
    7. '       ' → logprob: -6.915613174438477
    8. ' ' → logprob: -7.040613174438477
    9. '           ' → logprob: -7.790613174438477
    10. ' n' → logprob: -9.165613174438477

Token 1036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1653250753879547
    2. '0' → logprob: -2.165325164794922
    3. 'self' → logprob: -3.290325164794922
    4. 'n' → logprob: -8.415325164794922
    5. '   ' → logprob: -9.290325164794922
    6. '       ' → logprob: -9.665325164794922
    7. '           ' → logprob: -10.915325164794922
    8. 'size' → logprob: -11.540325164794922
    9. ' ' → logprob: -11.790325164794922
    10. ' self' → logprob: -12.415325164794922

Token 1037: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25265881419181824
    2. ')' → logprob: -1.7526588439941406
    3. ')
' → logprob: -3.8776588439941406
    4. ' ,' → logprob: -4.127658843994141
    5. ',
' → logprob: -5.752658843994141
    6. '       ' → logprob: -5.877658843994141
    7. ' )' → logprob: -6.127658843994141
    8. '   ' → logprob: -6.627658843994141
    9. 'self' → logprob: -7.127658843994141
    10. '):
' → logprob: -7.627658843994141

Token 1038: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010671088239178061
    2. 'self' → logprob: -7.126067161560059
    3. ' self' → logprob: -8.501067161560059
    4. '[' → logprob: -11.126067161560059
    5. ',' → logprob: -11.376067161560059
    6. ' =' → logprob: -11.501067161560059
    7. '   ' → logprob: -12.001067161560059
    8. '[self' → logprob: -12.251067161560059
    9. '           ' → logprob: -12.751067161560059
    10. ' [' → logprob: -13.001067161560059

Token 1039: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00020985817536711693
    2. '       ' → logprob: -8.50020980834961
    3. '[self' → logprob: -12.62520980834961
    4. ' self' → logprob: -13.75020980834961
    5. '   ' → logprob: -13.75020980834961
    6. '[' → logprob: -14.00020980834961
    7. '           ' → logprob: -18.75020980834961
    8. '	self' → logprob: -19.62520980834961
    9. '(self' → logprob: -20.00020980834961
    10. '        
' → logprob: -20.50020980834961

Token 1040: '.tree' (ID: 49211)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.864510715007782
    2. '.dat' → logprob: -0.989510715007782
    3. 'dat' → logprob: -2.4895107746124268
    4. '.seg' → logprob: -3.4895107746124268
    5. '.tree' → logprob: -3.4895107746124268
    6. '.node' → logprob: -3.6145107746124268
    7. '.size' → logprob: -4.989510536193848
    8. '.d' → logprob: -5.114510536193848
    9. 'seg' → logprob: -5.239510536193848
    10. 'data' → logprob: -5.364510536193848

Token 1041: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014175849966704845
    2. ' =' → logprob: -4.264175891876221
    3. '=[' → logprob: -11.389175415039062
    4. '[' → logprob: -14.264175415039062
    5. '   ' → logprob: -15.889175415039062
    6. ' =[' → logprob: -16.014175415039062
    7. '＝' → logprob: -17.264175415039062
    8. ' ' → logprob: -17.764175415039062
    9. ' [' → logprob: -17.764175415039062
    10. '=[]' → logprob: -17.889175415039062

Token 1042: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.6970032453536987
    2. '[int' → logprob: -0.6970032453536987
    3. '[' → logprob: -5.697003364562988
    4. '[Int' → logprob: -7.697003364562988
    5. ' [' → logprob: -11.197003364562988
    6. '[e' → logprob: -12.197003364562988
    7. '[ind' → logprob: -13.197003364562988
    8. '[class' → logprob: -13.322003364562988
    9. '[array' → logprob: -13.322003364562988
    10. '[node' → logprob: -13.447003364562988

Token 1043: 'self' (ID: 1156)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0036012595519423485
    2. 'self' → logprob: -5.62860107421875
    3. '   ' → logprob: -15.00360107421875
    4. '0' → logprob: -15.37860107421875
    5. ' int' → logprob: -15.50360107421875
    6. 'None' → logprob: -15.62860107421875
    7. ' self' → logprob: -16.75360107421875
    8. '[int' → logprob: -16.87860107421875
    9. '_int' → logprob: -17.87860107421875
    10. '```' → logprob: -18.00360107421875

Token 1044: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.02409467287361622
    2. 'int' → logprob: -3.774094581604004
    3. ':int' → logprob: -7.774094581604004
    4. '[int' → logprob: -8.524094581604004
    5. '   ' → logprob: -8.899094581604004
    6. ']int' → logprob: -10.899094581604004
    7. '<int' → logprob: -11.649094581604004
    8. '_int' → logprob: -11.899094581604004
    9. '.INT' → logprob: -12.149094581604004
    10. '=int' → logprob: -12.149094581604004

Token 1045: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.676981345459353e-06
    2. 'val' → logprob: -13.000005722045898
    3. '   ' → logprob: -13.625005722045898
    4. 'self' → logprob: -14.250005722045898
    5. 'в' → logprob: -14.625005722045898
    6. '       ' → logprob: -15.750005722045898
    7. 'V' → logprob: -15.875005722045898
    8. 'max' → logprob: -16.6250057220459
    9. 'value' → logprob: -16.7500057220459
    10. 'e' → logprob: -16.8750057220459

Token 1046: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019448090461082757
    2. ']*(' → logprob: -8.625194549560547
    3. ']*' → logprob: -11.250194549560547
    4. ' ]' → logprob: -13.500194549560547
    5. ' for' → logprob: -14.875194549560547
    6. '   ' → logprob: -15.750194549560547
    7. '']' → logprob: -18.125194549560547
    8. ' ' → logprob: -18.250194549560547
    9. ',' → logprob: -18.250194549560547
    10. 'for' → logprob: -18.750194549560547

Token 1047: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5211324691772461
    2. ']' → logprob: -1.146132469177246
    3. ' *' → logprob: -2.521132469177246
    4. ']*' → logprob: -6.146132469177246
    5. ']*(' → logprob: -6.396132469177246
    6. '*(' → logprob: -6.646132469177246
    7. '   ' → logprob: -6.896132469177246
    8. ' for' → logprob: -7.146132469177246
    9. '       ' → logprob: -8.021132469177246
    10. ')' → logprob: -8.521132469177246

Token 1048: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.48395246267318726
    2. '(' → logprob: -0.9839524626731873
    3. '(n' → logprob: -4.733952522277832
    4. '((' → logprob: -6.983952522277832
    5. ' (' → logprob: -9.233952522277832
    6. 'self' → logprob: -11.858952522277832
    7. '   ' → logprob: -13.733952522277832
    8. '(this' → logprob: -14.358952522277832
    9. '(next' → logprob: -14.858952522277832
    10. '(nn' → logprob: -15.108952522277832

Token 1049: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3364722430706024
    2. '2' → logprob: -1.4614722728729248
    3. 'n' → logprob: -3.336472272872925
    4. '(' → logprob: -4.711472034454346
    5. '(self' → logprob: -5.336472034454346
    6. '(n' → logprob: -5.461472034454346
    7. ' self' → logprob: -9.086472511291504
    8. '   ' → logprob: -10.586472511291504
    9. ' ' → logprob: -10.836472511291504
    10. '1' → logprob: -11.211472511291504

Token 1050: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.27099974633893e-05
    2. '*' → logprob: -11.875012397766113
    3. '   ' → logprob: -13.375012397766113
    4. '<<' → logprob: -13.375012397766113
    5. '_' → logprob: -13.750012397766113
    6. '       ' → logprob: -14.875012397766113
    7. ' ' → logprob: -15.500012397766113
    8. 'n' → logprob: -15.750012397766113
    9. ' *' → logprob: -16.12501335144043
    10. '
' → logprob: -16.12501335144043

Token 1051: ' <<' (ID: 2256)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2706663906574249
    2. '<<' → logprob: -1.5206663608551025
    3. ' *' → logprob: -4.020666599273682
    4. ' <<' → logprob: -7.520666599273682
    5. '   ' → logprob: -9.770666122436523
    6. '2' → logprob: -11.770666122436523
    7. '+' → logprob: -12.020666122436523
    8. '1' → logprob: -13.395666122436523
    9. ' <<=' → logprob: -13.395666122436523
    10. ' ' → logprob: -13.770666122436523

Token 1052: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.125
    4. '2' → logprob: -17.5
    5. ' ' → logprob: -19.375
    6. '       ' → logprob: -19.5
    7. '
' → logprob: -19.875
    8. '```' → logprob: -20.25
    9. '１' → logprob: -20.375
    10. '           ' → logprob: -20.625

Token 1053: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -17.375
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.125
    6. '１' → logprob: -18.375
    7. '`' → logprob: -19.125
    8. '01' → logprob: -19.1875
    9. '' → logprob: -19.25
    10. ' ' → logprob: -19.5625

Token 1054: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.52788148727268e-05
    2. ' )' → logprob: -9.875064849853516
    3. ')
' → logprob: -11.250064849853516
    4. '       ' → logprob: -15.625064849853516
    5. '   ' → logprob: -15.750064849853516
    6. ')`' → logprob: -15.875064849853516
    7. ')

' → logprob: -16.750064849853516
    8. '[])' → logprob: -17.000064849853516
    9. '`)' → logprob: -17.375064849853516
    10. '))' → logprob: -17.500064849853516

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010787796927616
    2. '
' → logprob: -7.8760786056518555
    3. 'for' → logprob: -7.8760786056518555
    4. '	' → logprob: -8.626078605651855
    5. '   ' → logprob: -9.626078605651855
    6. '        
' → logprob: -10.126078605651855
    7. 'if' → logprob: -11.251078605651855
    8. ' for' → logprob: -11.376078605651855
    9. '           ' → logprob: -13.876078605651855
    10. ' if' → logprob: -13.876078605651855

Token 1056: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2816498577594757
    2. 'if' → logprob: -1.5316498279571533
    3. '       ' → logprob: -3.5316498279571533
    4. ' if' → logprob: -11.531649589538574
    5. ' for' → logprob: -11.656649589538574
    6. '   ' → logprob: -12.031649589538574
    7. '#' (adapté à ' #') → logprob: -13.031649589538574
    8. 'If' → logprob: -16.15665054321289
    9. '        
' → logprob: -16.90665054321289
    10. '```' → logprob: -17.28165054321289

Token 1057: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5762001276016235
    2. 'for' → logprob: -0.8262001276016235
    3. '       ' → logprob: -8.326200485229492
    4. '#' → logprob: -11.201200485229492
    5. ' if' → logprob: -12.826200485229492
    6. '   ' → logprob: -13.576200485229492
    7. ' for' → logprob: -13.951200485229492
    8. 'If' → logprob: -16.576200485229492
    9. '        
' → logprob: -17.326200485229492
    10. 'self' → logprob: -18.326200485229492

Token 1058: ' initial' (ID: 4871)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00861930102109909
    2. ' A' → logprob: -4.75861930847168
    3. 'len' → logprob: -12.50861930847168
    4. ' ' → logprob: -14.50861930847168
    5. ' len' → logprob: -14.63361930847168
    6. '   ' → logprob: -15.75861930847168
    7. '  ' → logprob: -18.00861930847168
    8. ' not' → logprob: -18.25861930847168
    9. '	A' → logprob: -18.50861930847168
    10. 'not' → logprob: -18.75861930847168

Token 1059: ' values' (ID: 4824)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.562351405620575
    2. 'values' → logprob: -1.8123514652252197
    3. ' values' → logprob: -2.0623514652252197
    4. ' A' → logprob: -2.0623514652252197
    5. '_values' → logprob: -5.312351226806641
    6. '_A' → logprob: -6.312351226806641
    7. '       ' → logprob: -6.437351226806641
    8. '_' → logprob: -7.312351226806641
    9. 'list' → logprob: -7.437351226806641
    10. '=A' → logprob: -7.937351226806641

Token 1060: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019389942288398743
    2. ':
' → logprob: -4.519390106201172
    3. 'and' → logprob: -5.769390106201172
    4. 'provided' → logprob: -6.019390106201172
    5. ' and' → logprob: -6.644390106201172
    6. '!=' → logprob: -7.769390106201172
    7. ' provided' → logprob: -7.894390106201172
    8. ' is' → logprob: -8.144390106201172
    9. '=' → logprob: -9.644390106201172
    10. 'is' → logprob: -9.769390106201172

Token 1061: ' provided' (ID: 5181)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.26927199959754944
    2. 'provided' → logprob: -1.519271969795227
    3. ' provided' → logprob: -4.3942718505859375
    4. ' A' → logprob: -5.5192718505859375
    5. 'given' → logprob: -7.7692718505859375
    6. ' given' → logprob: -8.144271850585938
    7. ' ' → logprob: -10.269271850585938
    8. 'len' → logprob: -10.644271850585938
    9. ':' → logprob: -10.769271850585938
    10. '_given' → logprob: -11.269271850585938

Token 1062: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08464835584163666
    2. 'and' → logprob: -3.709648370742798
    3. ':' → logprob: -3.959648370742798
    4. '       ' → logprob: -4.209648132324219
    5. ':
' → logprob: -4.584648132324219
    6. ',' → logprob: -4.584648132324219
    7. ' if' → logprob: -6.834648132324219
    8. 'if' → logprob: -6.959648132324219
    9. ' for' → logprob: -8.834648132324219
    10. '           ' → logprob: -9.584648132324219

Token 1063: ' populate' (ID: 50447)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5039576888084412
    2. ' for' → logprob: -1.003957748413086
    3. '       ' → logprob: -4.253957748413086
    4. 'if' → logprob: -4.878957748413086
    5. ' if' → logprob: -5.503957748413086
    6. '           ' → logprob: -5.753957748413086
    7. ':' → logprob: -8.753957748413086
    8. '   ' → logprob: -9.128957748413086
    9. 'self' → logprob: -9.878957748413086
    10. ':
' → logprob: -11.128957748413086

Token 1064: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00690990686416626
    2. 'the' → logprob: -6.1319098472595215
    3. '       ' → logprob: -6.5069098472595215
    4. ' self' → logprob: -6.5069098472595215
    5. ' the' → logprob: -7.0069098472595215
    6. '(self' → logprob: -8.25691032409668
    7. 'A' → logprob: -8.38191032409668
    8. 'tree' → logprob: -9.00691032409668
    9. '   ' → logprob: -9.25691032409668
    10. 'for' → logprob: -10.00691032409668

Token 1065: ' leaves' (ID: 15657)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0016462645726278424
    2. ' tree' → logprob: -6.876646041870117
    3. 'self' → logprob: -7.626646041870117
    4. 'A' → logprob: -10.501646041870117
    5. '   ' → logprob: -10.876646041870117
    6. 'i' → logprob: -11.001646041870117
    7. '       ' → logprob: -11.126646041870117
    8. '.tree' → logprob: -11.501646041870117
    9. '_tree' → logprob: -11.751646041870117
    10. ' ' → logprob: -12.501646041870117

Token 1066: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010013651102781296
    2. '
' → logprob: -5.260013580322266
    3. 'for' → logprob: -6.385013580322266
    4. ' for' → logprob: -7.135013580322266
    5. ' and' → logprob: -7.260013580322266
    6. '[:' → logprob: -8.260013580322266
    7. '[' → logprob: -8.635013580322266
    8. ',' → logprob: -8.760013580322266
    9. ' if' → logprob: -9.135013580322266
    10. '        
' → logprob: -9.135013580322266

Token 1067: ' then' (ID: 1815)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22059164941310883
    2. '       ' → logprob: -1.97059166431427
    3. ' for' → logprob: -3.2205915451049805
    4. 'if' → logprob: -4.2205915451049805
    5. ' if' → logprob: -6.8455915451049805
    6. ' and' → logprob: -7.3455915451049805
    7. '   ' → logprob: -7.4705915451049805
    8. 'and' → logprob: -7.5955915451049805
    9. '           ' → logprob: -7.7205915451049805
    10. ' then' → logprob: -7.9705915451049805

Token 1068: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.066919301403686e-05
    2. '       ' → logprob: -9.625090599060059
    3. ' for' → logprob: -10.875090599060059
    4. 'build' → logprob: -13.250090599060059
    5. '   ' → logprob: -13.625090599060059
    6. 'self' → logprob: -14.125090599060059
    7. '
' → logprob: -14.625090599060059
    8. '           ' → logprob: -14.750090599060059
    9. 'fill' → logprob: -14.750090599060059
    10. '#' → logprob: -15.250090599060059

Token 1069: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30167317390441895
    2. ' for' → logprob: -1.676673173904419
    3. 'self' → logprob: -2.801673173904419
    4. '       ' → logprob: -4.92667293548584
    5. ' the' → logprob: -6.30167293548584
    6. 'tree' → logprob: -6.80167293548584
    7. ' self' → logprob: -6.92667293548584
    8. '   ' → logprob: -7.42667293548584
    9. 'the' → logprob: -7.55167293548584
    10. '(self' → logprob: -9.30167293548584

Token 1070: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.004894058220088482
    2. 'internal' → logprob: -6.129894256591797
    3. ' tree' → logprob: -6.129894256591797
    4. 'self' → logprob: -8.254894256591797
    5. 'segment' → logprob: -9.129894256591797
    6. 'inner' → logprob: -9.629894256591797
    7. ' internal' → logprob: -9.754894256591797
    8. '   ' → logprob: -11.629894256591797
    9. 'for' → logprob: -11.879894256591797
    10. '       ' → logprob: -12.754894256591797

Token 1071: ' upwards' (ID: 81327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001818489981815219
    2. ' for' → logprob: -9.250182151794434
    3. ' if' → logprob: -10.125182151794434
    4. 'for' → logprob: -10.500182151794434
    5. 'if' → logprob: -11.250182151794434
    6. ',' → logprob: -13.125182151794434
    7. '.' → logprob: -14.750182151794434
    8. ':' → logprob: -14.750182151794434
    9. '```' → logprob: -15.125182151794434
    10. '<|end|>' → logprob: -15.250182151794434

Token 1072: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010902655776590109
    2. ' for' → logprob: -9.62510871887207
    3. 'for' → logprob: -10.50010871887207
    4. ' if' → logprob: -12.12510871887207
    5. '
' → logprob: -12.75010871887207
    6. ',' → logprob: -13.12510871887207
    7. 'if' → logprob: -13.25010871887207
    8. '        
' → logprob: -13.50010871887207
    9. '           ' → logprob: -14.12510871887207
    10. '   ' → logprob: -14.50010871887207

Token 1073: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001321073155850172
    2. 'for' → logprob: -7.126320838928223
    3. ' for' → logprob: -7.876320838928223
    4. 'if' → logprob: -9.376320838928223
    5. ' if' → logprob: -10.501320838928223
    6. '
' → logprob: -11.126320838928223
    7. '   ' → logprob: -12.376320838928223
    8. '           ' → logprob: -13.376320838928223
    9. '        
' → logprob: -13.376320838928223
    10. ',' → logprob: -14.126320838928223

Token 1074: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7391915917396545
    2. 'for' → logprob: -1.2391915321350098
    3. 'if' (adapté à ' if') → logprob: -1.4891915321350098
    4. ' for' → logprob: -5.61419153213501
    5. ' if' → logprob: -5.61419153213501
    6. '   ' → logprob: -10.364192008972168
    7. '           ' → logprob: -13.364192008972168
    8. '
' → logprob: -14.364192008972168
    9. 'import' → logprob: -15.114192008972168
    10. '	for' → logprob: -15.239192008972168

Token 1075: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0182197168469429
    2. ' A' → logprob: -4.018219947814941
    3. 'len' → logprob: -9.643219947814941
    4. ' len' → logprob: -12.518219947814941
    5. '   ' → logprob: -13.643219947814941
    6. ' ' → logprob: -16.393218994140625
    7. '	A' → logprob: -17.893218994140625
    8. '       ' → logprob: -18.393218994140625
    9. '    ' → logprob: -18.643218994140625
    10. '  ' → logprob: -19.143218994140625

Token 1076: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030149508267641068
    2. ':
' → logprob: -3.530149459838867
    3. '!=' → logprob: -8.030149459838867
    4. ' !=' → logprob: -10.030149459838867
    5. ' :' → logprob: -12.030149459838867
    6. ':not' → logprob: -12.405149459838867
    7. ':length' → logprob: -12.780149459838867
    8. 'len' → logprob: -13.280149459838867
    9. ':
' → logprob: -13.780149459838867
    10. ':#' → logprob: -13.905149459838867

Token 1077: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9458646178245544
    2. ':
' → logprob: -1.0708646774291992
    3. ':' → logprob: -1.3208646774291992
    4. '       ' → logprob: -6.820864677429199
    5. ' for' → logprob: -7.320864677429199
    6. '[' → logprob: -9.1958646774292
    7. '   ' → logprob: -10.5708646774292
    8. ',' → logprob: -10.8208646774292
    9. 'for' → logprob: -10.8208646774292
    10. '	       ' → logprob: -10.9458646774292

Token 1078: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007639755494892597
    2. ' for' → logprob: -5.0076398849487305
    3. '           ' → logprob: -7.0076398849487305
    4. '               ' → logprob: -11.75763988494873
    5. 'self' → logprob: -11.75763988494873
    6. 'n' → logprob: -13.63263988494873
    7. '   ' → logprob: -14.63263988494873
    8. '
' → logprob: -14.88263988494873
    9. 'import' → logprob: -15.13263988494873
    10. '       ' → logprob: -15.38263988494873

Token 1079: ' Set' (ID: 3957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006445261533372104
    2. '           ' → logprob: -8.00064468383789
    3. ' for' → logprob: -8.75064468383789
    4. 'self' → logprob: -9.00064468383789
    5. 'n' → logprob: -11.62564468383789
    6. 'm' → logprob: -12.25064468383789
    7. 'l' → logprob: -12.50064468383789
    8. 'i' → logprob: -13.12564468383789
    9. 'import' → logprob: -13.12564468383789
    10. 'length' → logprob: -13.62564468383789

Token 1080: ' leaf' (ID: 25882)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.49752098321914673
    2. 'self' → logprob: -1.122520923614502
    3. ' i' → logprob: -3.747520923614502
    4. 'for' → logprob: -4.247520923614502
    5. ' self' → logprob: -4.872520923614502
    6. '(i' → logprob: -5.247520923614502
    7. ' for' → logprob: -5.747520923614502
    8. 'n' → logprob: -5.747520923614502
    9. '       ' → logprob: -6.497520923614502
    10. 'A' → logprob: -6.622520923614502

Token 1081: ' values' (ID: 4824)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.9647066593170166
    2. 's' → logprob: -1.2147066593170166
    3. '_nodes' → logprob: -2.0897066593170166
    4. 'nodes' → logprob: -2.2147066593170166
    5. 'self' → logprob: -3.7147066593170166
    6. ' =' → logprob: -4.2147064208984375
    7. '_values' → logprob: -4.7147064208984375
    8. ' values' → logprob: -4.8397064208984375
    9. ' self' → logprob: -5.0897064208984375
    10. 'values' → logprob: -5.2147064208984375

Token 1082: '
' (ID: 198)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.43635016679763794
    2. '[n' → logprob: -1.8113501071929932
    3. 'self' → logprob: -2.311350107192993
    4. 'for' → logprob: -3.311350107192993
    5. '[' → logprob: -3.686350107192993
    6. '           ' → logprob: -3.936350107192993
    7. '       ' → logprob: -5.436350345611572
    8. '[i' → logprob: -6.811350345611572
    9. ' for' → logprob: -7.061350345611572
    10. '[-' → logprob: -7.436350345611572

Token 1083: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4285337030887604
    2. '[self' → logprob: -1.553533673286438
    3. '[' → logprob: -2.5535337924957275
    4. '           ' → logprob: -3.8035337924957275
    5. 'self' → logprob: -4.178533554077148
    6. 'for' → logprob: -4.803533554077148
    7. '[i' → logprob: -5.303533554077148
    8. '[n' → logprob: -6.303533554077148
    9. '
' → logprob: -6.803533554077148
    10. ' for' → logprob: -6.928533554077148

Token 1084: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006696671480312943
    2. ' for' → logprob: -8.000669479370117
    3. '           ' → logprob: -8.125669479370117
    4. 'self' → logprob: -10.250669479370117
    5. '               ' → logprob: -13.125669479370117
    6. '       ' → logprob: -15.250669479370117
    7. '
' → logprob: -15.375669479370117
    8. 'n' → logprob: -15.625669479370117
    9. '   ' → logprob: -15.625669479370117
    10. 'i' → logprob: -16.250669479370117

Token 1085: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197183206677437
    2. ' i' → logprob: -2.81197190284729
    3. '	i' → logprob: -13.436971664428711
    4. '0' → logprob: -14.061971664428711
    5. '   ' → logprob: -14.561971664428711
    6. ' ' → logprob: -14.561971664428711
    7. 'idx' → logprob: -14.936971664428711
    8. '(i' → logprob: -15.186971664428711
    9. '_i' → logprob: -15.436971664428711
    10. '  ' → logprob: -16.81197166442871

Token 1086: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12694869935512543
    2. 'in' → logprob: -2.126948595046997
    3. ',' → logprob: -11.251948356628418
    4. '   ' → logprob: -13.001948356628418
    5. ' ' → logprob: -13.751948356628418
    6. '	in' → logprob: -14.126948356628418
    7. 'i' → logprob: -14.376948356628418
    8. 'import' → logprob: -14.376948356628418
    9. ' i' → logprob: -14.501948356628418
    10. 'In' → logprob: -15.126948356628418

Token 1087: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '(range' → logprob: -18.50002098083496
    4. 'A' → logprob: -18.75002098083496
    5. '   ' → logprob: -19.00002098083496
    6. '	range' → logprob: -19.25002098083496
    7. '
' → logprob: -19.37502098083496
    8. '```' → logprob: -19.50002098083496
    9. '  ' → logprob: -20.12502098083496
    10. 'enumer' → logprob: -20.25002098083496

Token 1088: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017194714397192
    2. 'self' → logprob: -4.517194747924805
    3. '(n' → logprob: -5.142194747924805
    4. ' n' → logprob: -9.017194747924805
    5. 'len' → logprob: -9.517194747924805
    6. '(self' → logprob: -9.642194747924805
    7. ' self' → logprob: -11.517194747924805
    8. '(len' → logprob: -11.767194747924805
    9. '	n' → logprob: -13.142194747924805
    10. '   ' → logprob: -13.517194747924805

Token 1089: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01502979826182127
    2. '):' → logprob: -4.5150299072265625
    3. '2' → logprob: -5.6400299072265625
    4. 'n' → logprob: -9.015029907226562
    5. '   ' → logprob: -9.515029907226562
    6. '       ' → logprob: -9.640029907226562
    7. 'A' → logprob: -9.765029907226562
    8. ',' → logprob: -9.890029907226562
    9. '           ' → logprob: -11.765029907226562
    10. 'self' → logprob: -11.890029907226562

Token 1090: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008372656302526593
    2. ' self' → logprob: -8.125837326049805
    3. 'self' → logprob: -8.375837326049805
    4. '	           ' → logprob: -8.500837326049805
    5. '           ' → logprob: -10.125837326049805
    6. ':' → logprob: -11.625837326049805
    7. '   ' → logprob: -11.750837326049805
    8. '		       ' → logprob: -11.750837326049805
    9. '	       ' → logprob: -12.250837326049805
    10. '	self' → logprob: -12.375837326049805

Token 1091: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004294215235859156
    2. '               ' → logprob: -6.129294395446777
    3. ' self' → logprob: -6.879294395446777
    4. '                   ' → logprob: -7.004294395446777
    5. '   ' → logprob: -8.754294395446777
    6. '           ' → logprob: -12.004294395446777
    7. ' ' → logprob: -13.004294395446777
    8. '	self' → logprob: -13.129294395446777
    9. '                       ' → logprob: -14.129294395446777
    10. '       ' → logprob: -15.004294395446777

Token 1092: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -7.481510692741722e-05
    2. 'tree' → logprob: -9.62507438659668
    3. '.' → logprob: -12.62507438659668
    4. ' .' → logprob: -12.62507438659668
    5. '	tree' → logprob: -13.62507438659668
    6. '.table' → logprob: -15.75007438659668
    7. ' tree' → logprob: -16.12507438659668
    8. '(tree' → logprob: -16.87507438659668
    9. '.Tree' → logprob: -17.12507438659668
    10. '\.' → logprob: -17.25007438659668

Token 1093: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.06027081981301308
    2. '[self' → logprob: -3.0602707862854004
    3. '[' → logprob: -5.6852707862854
    4. '[i' → logprob: -5.8102707862854
    5. 'self' → logprob: -6.0602707862854
    6. '=' → logprob: -6.5602707862854
    7. 'n' → logprob: -7.1852707862854
    8. '=n' → logprob: -9.060271263122559
    9. '=[' → logprob: -9.560271263122559
    10. ' =' → logprob: -9.685271263122559

Token 1094: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1557283111615106e-05
    2. '+' → logprob: -10.125041961669922
    3. '+i' → logprob: -14.250041961669922
    4. '   ' → logprob: -15.250041961669922
    5. ' +' → logprob: -15.500041961669922
    6. '_' → logprob: -16.500041961669922
    7. 'i' → logprob: -16.500041961669922
    8. '```' → logprob: -16.875041961669922
    9. 's' → logprob: -17.250041961669922
    10. ' ' → logprob: -17.500041961669922

Token 1095: ' +' (ID: 659)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.4864821135997772
    2. '+' → logprob: -1.2364821434020996
    3. ' +' → logprob: -2.3614821434020996
    4. ']' → logprob: -7.8614821434021
    5. '+]' → logprob: -10.486481666564941
    6. '[i' → logprob: -10.736481666564941
    7. '+[' → logprob: -11.111481666564941
    8. ']=' → logprob: -11.111481666564941
    9. ']+' → logprob: -11.486481666564941
    10. '+A' → logprob: -11.861481666564941

Token 1096: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '[i' → logprob: -19.500001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '```' → logprob: -20.125001907348633
    6. '	i' → logprob: -20.625001907348633
    7. '       ' → logprob: -21.500001907348633
    8. '(i' → logprob: -21.625001907348633
    9. '`' → logprob: -21.750001907348633
    10. '_i' → logprob: -21.875001907348633

Token 1097: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3223365545272827
    2. '=' → logprob: -1.6973365545272827
    3. ']=' → logprob: -2.4473366737365723
    4. ' =' → logprob: -5.197336673736572
    5. ' ]' → logprob: -8.072336196899414
    6. '=i' → logprob: -13.322336196899414
    7. ')' → logprob: -13.322336196899414
    8. ')=' → logprob: -13.447336196899414
    9. ']+=' → logprob: -14.197336196899414
    10. '']=' → logprob: -14.447336196899414

Token 1098: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011708177626132965
    2. ' =' → logprob: -6.751170635223389
    3. '=A' → logprob: -15.376171112060547
    4. '=i' → logprob: -15.876171112060547
    5. '=self' → logprob: -17.126171112060547
    6. ']=' → logprob: -17.251171112060547
    7. '=
' → logprob: -17.876171112060547
    8. '=int' → logprob: -18.126171112060547
    9. '=

' → logprob: -18.126171112060547
    10. '=s' → logprob: -18.376171112060547

Token 1099: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.339278580620885e-06
    2. ' A' → logprob: -13.000001907348633
    3. '	A' → logprob: -21.750001907348633
    4. '   ' → logprob: -22.125001907348633
    5. 'a' → logprob: -23.250001907348633
    6. 'self' → logprob: -23.500001907348633
    7. 'i' → logprob: -23.625001907348633
    8. '_A' → logprob: -23.625001907348633
    9. '```' → logprob: -24.375001907348633
    10. '(A' → logprob: -24.500001907348633

Token 1100: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '(i' → logprob: -15.500000953674316
    3. 'i' → logprob: -16.5
    4. '```' → logprob: -16.625
    5. '[' → logprob: -17.0
    6. ' [' → logprob: -17.375
    7. '   ' → logprob: -17.875
    8. '[
' → logprob: -17.875
    9. ' i' → logprob: -19.0
    10. '           ' → logprob: -19.0

Token 1101: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10354959964752197
    2. '<|end|>' → logprob: -3.7285494804382324
    3. '       ' → logprob: -3.9785494804382324
    4. ']' → logprob: -3.9785494804382324
    5. '           ' → logprob: -4.103549480438232
    6. ')
' → logprob: -4.353549480438232
    7. '<|end|>' → logprob: -5.603549480438232
    8. '               ' → logprob: -6.103549480438232
    9. '
' → logprob: -7.978549480438232
    10. ']
' → logprob: -8.72854995727539

Token 1102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08930758386850357
    2. '           ' → logprob: -2.4643075466156006
    3. '
' → logprob: -8.33930778503418
    4. ')' → logprob: -10.58930778503418
    5. '        
' → logprob: -10.71430778503418
    6. ')
' → logprob: -10.83930778503418
    7. '[' → logprob: -11.33930778503418
    8. '```' → logprob: -12.33930778503418
    9. 'for' → logprob: -12.46430778503418
    10. '   ' → logprob: -12.46430778503418

Token 1103: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10239557921886444
    2. '       ' → logprob: -2.477395534515381
    3. ' for' → logprob: -4.352395534515381
    4. '           ' → logprob: -8.102396011352539
    5. '   ' → logprob: -8.727396011352539
    6. '#' (adapté à ' #') → logprob: -11.227396011352539
    7. '	for' → logprob: -12.602396011352539
    8. 'self' → logprob: -12.977396011352539
    9. ' ' → logprob: -13.852396011352539
    10. 'i' → logprob: -13.977396011352539

Token 1104: ' Fill' (ID: 32680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010998018842656165
    2. '           ' → logprob: -9.625109672546387
    3. '       ' → logprob: -10.125109672546387
    4. '   ' → logprob: -13.000109672546387
    5. ' for' → logprob: -13.875109672546387
    6. '#' → logprob: -14.750109672546387
    7. 'def' → logprob: -16.375110626220703
    8. 'i' → logprob: -16.875110626220703
    9. '	for' → logprob: -18.750110626220703
    10. 'self' → logprob: -19.500110626220703

Token 1105: ' internal' (ID: 8812)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22360581159591675
    2. ' for' → logprob: -1.9736058712005615
    3. 'range' → logprob: -3.7236058712005615
    4. '   ' → logprob: -4.098605632781982
    5. ' range' → logprob: -4.723605632781982
    6. '       ' → logprob: -5.973605632781982
    7. '           ' → logprob: -6.223605632781982
    8. 'n' → logprob: -6.223605632781982
    9. '               ' → logprob: -6.473605632781982
    10. 'self' → logprob: -6.848605632781982

Token 1106: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.022062594071030617
    2. ' nodes' → logprob: -4.0220627784729
    3. '_nodes' → logprob: -5.7720627784729
    4. '   ' → logprob: -7.8970627784729
    5. '
' → logprob: -8.272062301635742
    6. 'node' → logprob: -9.522062301635742
    7. 'for' → logprob: -9.772062301635742
    8. '	nodes' → logprob: -11.272062301635742
    9. '    
' → logprob: -12.272062301635742
    10. '       ' → logprob: -12.772062301635742

Token 1107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39456942677497864
    2. '           ' → logprob: -1.1445693969726562
    3. 'for' → logprob: -5.269569396972656
    4. ' for' → logprob: -6.019569396972656
    5. '   ' → logprob: -10.144569396972656
    6. '               ' → logprob: -10.519569396972656
    7. ',' → logprob: -12.144569396972656
    8. 'self' → logprob: -12.144569396972656
    9. '
' → logprob: -12.269569396972656
    10. '		' → logprob: -13.894569396972656

Token 1108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18244533240795135
    2. ' for' → logprob: -2.0574452877044678
    3. 'for' → logprob: -3.3074452877044678
    4. '           ' → logprob: -6.432445526123047
    5. '   ' → logprob: -7.557445526123047
    6. '<|end|>' → logprob: -9.557445526123047
    7. '	for' → logprob: -10.432445526123047
    8. '               ' → logprob: -10.432445526123047
    9. ',' → logprob: -10.932445526123047
    10. ' ' → logprob: -11.307445526123047

Token 1109: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011918948730453849
    2. '           ' → logprob: -7.126192092895508
    3. ' for' → logprob: -8.376192092895508
    4. '       ' → logprob: -8.876192092895508
    5. '               ' → logprob: -11.376192092895508
    6. 'n' → logprob: -12.876192092895508
    7. '   ' → logprob: -13.251192092895508
    8. 'self' → logprob: -14.126192092895508
    9. '                   ' → logprob: -15.001192092895508
    10. 'range' → logprob: -15.126192092895508

Token 1110: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018165044486522675
    2. ' i' → logprob: -4.018165111541748
    3. 'p' → logprob: -12.01816463470459
    4. ' ' → logprob: -12.39316463470459
    5. 'j' → logprob: -13.39316463470459
    6. '   ' → logprob: -13.51816463470459
    7. 'v' → logprob: -14.26816463470459
    8. 'k' → logprob: -14.76816463470459
    9. ' p' → logprob: -15.01816463470459
    10. '  ' → logprob: -15.26816463470459

Token 1111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02063087932765484
    2. 'in' → logprob: -3.8956308364868164
    3. 'n' → logprob: -9.520630836486816
    4. 'range' → logprob: -11.895630836486816
    5. ' n' → logprob: -12.520630836486816
    6. ' range' → logprob: -13.270630836486816
    7. 'self' → logprob: -13.645630836486816
    8. 'import' → logprob: -14.520630836486816
    9. 'd' → logprob: -14.770630836486816
    10. '   ' → logprob: -15.395630836486816

Token 1112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013946755789220333
    2. 'n' → logprob: -4.388946533203125
    3. ' range' → logprob: -6.888946533203125
    4. '(n' → logprob: -8.263946533203125
    5. '(range' → logprob: -9.513946533203125
    6. 're' → logprob: -10.138946533203125
    7. 'self' → logprob: -10.888946533203125
    8. ' n' → logprob: -11.638946533203125
    9. '   ' → logprob: -11.638946533203125
    10. '[n' → logprob: -12.513946533203125

Token 1113: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011152983643114567
    2. '(n' → logprob: -9.25011157989502
    3. ' n' → logprob: -11.75011157989502
    4. 'self' → logprob: -12.00011157989502
    5. '   ' → logprob: -13.75011157989502
    6. '	n' → logprob: -16.750110626220703
    7. '       ' → logprob: -17.000110626220703
    8. '(' → logprob: -17.125110626220703
    9. '           ' → logprob: -17.250110626220703
    10. '[n' → logprob: -17.500110626220703

Token 1114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.061054359131958e-06
    2. 'n' → logprob: -12.375007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '-' → logprob: -13.625007629394531
    5. '   ' → logprob: -15.000007629394531
    6. ' -' → logprob: -15.875007629394531
    7. '1' → logprob: -16.75000762939453
    8. '
' → logprob: -16.75000762939453
    9. '       ' → logprob: -16.87500762939453
    10. '```' → logprob: -17.50000762939453

Token 1115: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31466686725616455
    2. ' -' → logprob: -1.3146668672561646
    3. '           ' → logprob: -6.814666748046875
    4. '       ' → logprob: -9.064666748046875
    5. '   ' → logprob: -9.314666748046875
    6. '            ' → logprob: -10.439666748046875
    7. '    ' → logprob: -10.939666748046875
    8. ' ' → logprob: -11.439666748046875
    9. '        ' → logprob: -11.689666748046875
    10. '          ' → logprob: -11.814666748046875

Token 1116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -16.5
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -18.875
    6. '    ' → logprob: -19.5
    7. '       ' → logprob: -19.875
    8. '0' → logprob: -20.0
    9. '１' → logprob: -20.0
    10. '           ' → logprob: -20.25

Token 1117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.870950215263292e-05
    2. '2' → logprob: -10.000048637390137
    3. ' ' → logprob: -12.875048637390137
    4. '0' → logprob: -15.625048637390137
    5. '   ' → logprob: -15.687548637390137
    6. '```' → logprob: -16.125049591064453
    7. '       ' → logprob: -17.750049591064453
    8. '100' → logprob: -18.312549591064453
    9. '10' → logprob: -18.312549591064453
    10. '  ' → logprob: -18.500049591064453

Token 1118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00424389261752367
    2. '-' → logprob: -6.254243850708008
    3. ' -' → logprob: -6.754243850708008
    4. ',-' → logprob: -7.879243850708008
    5. ' ,' → logprob: -8.004243850708008
    6. '0' → logprob: -8.379243850708008
    7. '           ' → logprob: -9.379243850708008
    8. '   ' → logprob: -9.754243850708008
    9. '1' → logprob: -10.504243850708008
    10. '       ' → logprob: -11.629243850708008

Token 1119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.750005722045898
    3. '-' → logprob: -12.875005722045898
    4. ' -' → logprob: -16.2500057220459
    5. '   ' → logprob: -17.3750057220459
    6. '
' → logprob: -17.7500057220459
    7. '           ' → logprob: -19.0000057220459
    8. 'self' → logprob: -19.1250057220459
    9. '    ' → logprob: -19.2500057220459
    10. ',' → logprob: -19.8750057220459

Token 1120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '-' → logprob: -16.1250057220459
    4. '   ' → logprob: -16.8750057220459
    5. '    ' → logprob: -18.5000057220459
    6. ' -' → logprob: -18.6250057220459
    7. '     ' → logprob: -19.2500057220459
    8. '1' → logprob: -19.2500057220459
    9. '  ' → logprob: -19.5000057220459
    10. '۰' → logprob: -19.5000057220459

Token 1121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0669269859790802
    2. '-' → logprob: -3.066926956176758
    3. ' -' → logprob: -4.691926956176758
    4. ',-' → logprob: -5.191926956176758
    5. '   ' → logprob: -6.066926956176758
    6. ' ,' → logprob: -7.066926956176758
    7. '    ' → logprob: -9.441926956176758
    8. '       ' → logprob: -10.191926956176758
    9. ' ,-' → logprob: -10.316926956176758
    10. '           ' → logprob: -10.566926956176758

Token 1122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.3199920178740285e-05
    2. ' -' → logprob: -10.875022888183594
    3. '           ' → logprob: -12.750022888183594
    4. '   ' → logprob: -14.750022888183594
    5. '-i' → logprob: -14.750022888183594
    6. '                   ' → logprob: -15.375022888183594
    7. '               ' → logprob: -16.125022888183594
    8. '  ' → logprob: -16.750022888183594
    9. 'i' → logprob: -17.000022888183594
    10. '          ' → logprob: -17.125022888183594

Token 1123: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9623810658231378e-05
    2. ' -' → logprob: -10.875020027160645
    3. '1' → logprob: -14.625020027160645
    4. '   ' → logprob: -15.875020027160645
    5. '           ' → logprob: -17.875019073486328
    6. 'i' → logprob: -18.125019073486328
    7. '  ' → logprob: -19.000019073486328
    8. '       ' → logprob: -20.125019073486328
    9. '```' → logprob: -20.375019073486328
    10. '-i' → logprob: -20.500019073486328

Token 1124: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7588385939598083
    2. '):
' → logprob: -0.7588385939598083
    3. '):' → logprob: -3.508838653564453
    4. ',' → logprob: -4.133838653564453
    5. ',-' → logprob: -4.383838653564453
    6. ' -' → logprob: -6.008838653564453
    7. '):
' → logprob: -7.383838653564453
    8. '   ' → logprob: -7.633838653564453
    9. '           ' → logprob: -7.633838653564453
    10. ':' → logprob: -7.883838653564453

Token 1125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025641819462180138
    2. '           ' → logprob: -3.775641918182373
    3. 'self' → logprob: -6.400641918182373
    4. ' self' → logprob: -7.275641918182373
    5. '	       ' → logprob: -11.650641441345215
    6. '	           ' → logprob: -11.775641441345215
    7. '                   ' → logprob: -12.275641441345215
    8. '   ' → logprob: -12.275641441345215
    9. '       ' → logprob: -13.025641441345215
    10. '	self' → logprob: -13.150641441345215

Token 1126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002921375911682844
    2. '               ' → logprob: -6.2529215812683105
    3. ' self' → logprob: -7.2529215812683105
    4. '                   ' → logprob: -8.252921104431152
    5. '           ' → logprob: -11.002921104431152
    6. '   ' → logprob: -12.127921104431152
    7. '[self' → logprob: -14.502921104431152
    8. '	self' → logprob: -15.127921104431152
    9. ' ' → logprob: -15.627921104431152
    10. '       ' → logprob: -15.627921104431152

Token 1127: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.081584716506768e-05
    2. '.' → logprob: -11.750020980834961
    3. 'tree' → logprob: -12.000020980834961
    4. '	tree' → logprob: -12.625020980834961
    5. ' .' → logprob: -13.500020980834961
    6. '   ' → logprob: -14.875020980834961
    7. '].' → logprob: -15.250020980834961
    8. '.Tree' → logprob: -15.500020980834961
    9. '.func' → logprob: -15.625020980834961
    10. '```' → logprob: -15.875020980834961

Token 1128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012248923303559422
    2. '[' → logprob: -9.5001220703125
    3. '[self' → logprob: -10.2501220703125
    4. '```' → logprob: -12.2501220703125
    5. '=' → logprob: -12.7501220703125
    6. ' =' → logprob: -13.8751220703125
    7. 'self' → logprob: -14.1251220703125
    8. '   ' → logprob: -14.6251220703125
    9. '[I' → logprob: -14.6251220703125
    10. 'i' → logprob: -15.6251220703125

Token 1129: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12719738483428955
    2. ' =' → logprob: -2.127197265625
    3. ']' → logprob: -8.377197265625
    4. '=self' → logprob: -10.752197265625
    5. ']=' → logprob: -11.002197265625
    6. 'self' → logprob: -14.752197265625
    7. '   ' → logprob: -15.252197265625
    8. ')' → logprob: -15.377197265625
    9. '[' → logprob: -16.377197265625
    10. ')=' → logprob: -17.002197265625

Token 1130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015908108616713434
    2. ' =' → logprob: -8.75015926361084
    3. '=self' → logprob: -14.25015926361084
    4. 'self' → logprob: -19.250158309936523
    5. '＝' → logprob: -19.875158309936523
    6. '=
' → logprob: -20.875158309936523
    7. '   ' → logprob: -21.250158309936523
    8. '=

' → logprob: -21.375158309936523
    9. '.=' → logprob: -22.250158309936523
    10. ' self' → logprob: -22.500158309936523

Token 1131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006377832964062691
    2. ' self' → logprob: -5.756377696990967
    3. 'func' → logprob: -5.756377696990967
    4. ' func' → logprob: -10.506378173828125
    5. '           ' → logprob: -12.756378173828125
    6. '               ' → logprob: -13.631378173828125
    7. '   ' → logprob: -14.381378173828125
    8. '       ' → logprob: -16.256378173828125
    9. '                   ' → logprob: -16.381378173828125
    10. '(self' → logprob: -16.631378173828125

Token 1132: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -0.0010952114826068282
    2. 'func' → logprob: -6.876095294952393
    3. '.' → logprob: -10.126094818115234
    4. '.tree' → logprob: -12.251094818115234
    5. 'self' → logprob: -12.751094818115234
    6. '	func' → logprob: -12.876094818115234
    7. '   ' → logprob: -13.251094818115234
    8. ' .' → logprob: -13.501094818115234
    9. '```' → logprob: -14.126094818115234
    10. '.function' → logprob: -14.376094818115234

Token 1133: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007474447484128177
    2. 'self' → logprob: -7.2507476806640625
    3. '(' → logprob: -10.250747680664062
    4. '(
' → logprob: -13.250747680664062
    5. ' self' → logprob: -15.000747680664062
    6. ' (' → logprob: -17.000747680664062
    7. '   ' → logprob: -17.250747680664062
    8. '	self' → logprob: -17.750747680664062
    9. ',self' → logprob: -17.750747680664062
    10. '(s' → logprob: -18.500747680664062

Token 1134: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -5.5577775128767826e-06
    2. 'tree' → logprob: -12.250005722045898
    3. '.' → logprob: -15.250005722045898
    4. '	tree' → logprob: -15.250005722045898
    5. ',' → logprob: -16.3750057220459
    6. '.left' → logprob: -17.0000057220459
    7. '(tree' → logprob: -17.2500057220459
    8. ').' → logprob: -17.8750057220459
    9. ' tree' → logprob: -18.1250057220459
    10. '   ' → logprob: -19.1250057220459

Token 1135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.999452772201039e-05
    2. '[' → logprob: -10.500029563903809
    3. 'i' → logprob: -13.000029563903809
    4. '[
' → logprob: -16.500030517578125
    5. '(i' → logprob: -17.750030517578125
    6. '```' → logprob: -19.125030517578125
    7. '
' → logprob: -19.875030517578125
    8. '2' → logprob: -20.125030517578125
    9. ' i' → logprob: -20.250030517578125
    10. '{i' → logprob: -20.625030517578125

Token 1136: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.003354639746248722
    2. ' <<' → logprob: -5.753354549407959
    3. '*' → logprob: -9.253355026245117
    4. '1' → logprob: -10.878355026245117
    5. '2' → logprob: -11.128355026245117
    6. '   ' → logprob: -11.253355026245117
    7. '    ' → logprob: -11.503355026245117
    8. ' ' → logprob: -12.003355026245117
    9. '  ' → logprob: -12.128355026245117
    10. 'i' → logprob: -12.253355026245117

Token 1137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.375001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'i' → logprob: -15.000001907348633
    5. '(i' → logprob: -17.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. '           ' → logprob: -17.750001907348633
    8. '       ' → logprob: -18.625001907348633
    9. '
' → logprob: -18.750001907348633
    10. ' ' → logprob: -18.812501907348633

Token 1138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.625001907348633
    3. '   ' → logprob: -15.125001907348633
    4. 'i' → logprob: -15.812501907348633
    5. '2' → logprob: -16.125001907348633
    6. '0' → logprob: -16.125001907348633
    7. '```' → logprob: -16.437501907348633
    8. '           ' → logprob: -17.937501907348633
    9. '       ' → logprob: -18.375001907348633
    10. '  ' → logprob: -18.437501907348633

Token 1139: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009667432866990566
    2. ' ,' → logprob: -5.00966739654541
    3. ',i' → logprob: -5.88466739654541
    4. '],' → logprob: -9.75966739654541
    5. ',self' → logprob: -9.88466739654541
    6. '   ' → logprob: -11.00966739654541
    7. ',
' → logprob: -11.00966739654541
    8. '           ' → logprob: -12.13466739654541
    9. '       ' → logprob: -13.25966739654541
    10. ' ' → logprob: -13.50966739654541

Token 1140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011049113236367702
    2. ' self' → logprob: -4.511049270629883
    3. '               ' → logprob: -13.886049270629883
    4. '                   ' → logprob: -15.886049270629883
    5. '           ' → logprob: -16.511049270629883
    6. '                ' → logprob: -16.886049270629883
    7. '            ' → logprob: -17.136049270629883
    8. '	self' → logprob: -17.261049270629883
    9. '(self' → logprob: -17.761049270629883
    10. '             ' → logprob: -17.761049270629883

Token 1141: '.tree' (ID: 49211)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5637751817703247
    2. 'tree' → logprob: -1.4387751817703247
    3. 'i' → logprob: -1.6887751817703247
    4. '[i' → logprob: -5.438775062561035
    5. '(i' → logprob: -6.188775062561035
    6. '.tree' → logprob: -6.813775062561035
    7. ' i' → logprob: -7.938775062561035
    8. '1' → logprob: -8.313775062561035
    9. '   ' → logprob: -8.938775062561035
    10. '(self' → logprob: -9.188775062561035

Token 1142: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.704445481300354
    2. '[i' → logprob: -0.829445481300354
    3. '(i' → logprob: -2.7044453620910645
    4. '[' → logprob: -6.8294453620910645
    5. '((' → logprob: -7.4544453620910645
    6. '|' → logprob: -8.079445838928223
    7. '(' → logprob: -8.954445838928223
    8. '1' → logprob: -9.579445838928223
    9. '|(' → logprob: -9.954445838928223
    10. '   ' → logprob: -10.079445838928223

Token 1143: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.013994814362377e-05
    2. '(i' → logprob: -10.25005054473877
    3. ' i' → logprob: -11.12505054473877
    4. '   ' → logprob: -17.625049591064453
    5. ' (' → logprob: -18.625049591064453
    6. '(' → logprob: -18.875049591064453
    7. ' ' → logprob: -19.000049591064453
    8. '         ' → logprob: -19.125049591064453
    9. '	i' → logprob: -19.375049591064453
    10. '{i' → logprob: -19.500049591064453

Token 1144: ' <<' (ID: 2256)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1311214119195938
    2. '(i' → logprob: -2.8811213970184326
    3. ' i' → logprob: -2.8811213970184326
    4. '<<' → logprob: -4.881121635437012
    5. ' <<' → logprob: -6.631121635437012
    6. ' (' → logprob: -7.006121635437012
    7. '1' → logprob: -7.881121635437012
    8. '(' → logprob: -7.881121635437012
    9. '    ' → logprob: -10.256121635437012
    10. '   ' → logprob: -10.256121635437012

Token 1145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. ' ' → logprob: -16.875
    4. '(i' → logprob: -17.125
    5. '
' → logprob: -18.625
    6. '           ' → logprob: -19.125
    7. '2' → logprob: -19.25
    8. 'i' → logprob: -19.375
    9. '(' → logprob: -19.875
    10. '```' → logprob: -20.375

Token 1146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. '2' → logprob: -16.875
    4. ' ' → logprob: -17.25
    5. '0' → logprob: -17.625
    6. '
' → logprob: -18.625
    7. '(i' → logprob: -18.75
    8. 'i' → logprob: -19.375
    9. '           ' → logprob: -19.5
    10. '(' → logprob: -19.75

Token 1147: ')' (ID: 8)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.014579595997929573
    2. ' |' → logprob: -4.389579772949219
    3. ')' → logprob: -6.264579772949219
    4. ']' → logprob: -9.639579772949219
    5. '1' → logprob: -10.139579772949219
    6. '   ' → logprob: -10.514579772949219
    7. ' ' → logprob: -12.014579772949219
    8. ')+' → logprob: -12.389579772949219
    9. '  ' → logprob: -12.514579772949219
    10. '|
' → logprob: -12.639579772949219

Token 1148: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00919955875724554
    2. ' |' → logprob: -4.759199619293213
    3. '+' → logprob: -7.509199619293213
    4. ' +' → logprob: -10.759199142456055
    5. ']' → logprob: -12.134199142456055
    6. '   ' → logprob: -12.759199142456055
    7. ' ' → logprob: -13.509199142456055
    8. '|
' → logprob: -13.509199142456055
    9. '1' → logprob: -13.634199142456055
    10. ')' → logprob: -14.134199142456055

Token 1149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '0' → logprob: -17.875001907348633
    5. 'i' → logprob: -18.625001907348633
    6. '    ' → logprob: -20.125001907348633
    7. '           ' → logprob: -20.125001907348633
    8. '(i' → logprob: -20.625001907348633
    9. '  ' → logprob: -21.000001907348633
    10. '       ' → logprob: -21.250001907348633

Token 1150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.375
    4. '0' → logprob: -18.5
    5. '           ' → logprob: -20.5
    6. '  ' → logprob: -21.5
    7. '2' → logprob: -21.625
    8. '```' → logprob: -21.625
    9. 'i' → logprob: -21.75
    10. '               ' → logprob: -22.0

Token 1151: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001532401074655354
    2. ' ])' → logprob: -9.500153541564941
    3. '])
' → logprob: -9.875153541564941
    4. '       ' → logprob: -11.250153541564941
    5. ')])' → logprob: -12.875153541564941
    6. ']' → logprob: -12.875153541564941
    7. '           ' → logprob: -13.000153541564941
    8. '   ' → logprob: -13.500153541564941
    9. ')' → logprob: -13.750153541564941
    10. ''])' → logprob: -14.125153541564941

Token 1152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18896892666816711
    2. '
' → logprob: -1.8139688968658447
    3. '    
' → logprob: -4.938969135284424
    4. 'def' → logprob: -7.563969135284424
    5. '        
' → logprob: -7.563969135284424
    6. '<|end|>' → logprob: -7.688969135284424
    7. '	def' → logprob: -8.813968658447266
    8. '  
' → logprob: -9.688968658447266
    9. '<|end|>' → logprob: -9.813968658447266
    10. '```' → logprob: -9.938968658447266

Token 1153: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6951409578323364
    2. 'def' (adapté à ' def') → logprob: -0.6951409578323364
    3. ' def' → logprob: -7.070140838623047
    4. '
' → logprob: -7.570140838623047
    5. '    
' → logprob: -7.695140838623047
    6. '        
' → logprob: -9.195140838623047
    7. '	def' → logprob: -9.945140838623047
    8. '       ' → logprob: -12.445140838623047
    9. '```' → logprob: -12.570140838623047
    10. ' ' → logprob: -12.820140838623047

Token 1154: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.024984071031212807
    2. ' update' → logprob: -3.774984121322632
    3. '_update' → logprob: -6.774983882904053
    4. 'set' → logprob: -8.274984359741211
    5. 'get' → logprob: -8.399984359741211
    6. 'build' → logprob: -9.649984359741211
    7. 'size' → logprob: -11.399984359741211
    8. ' get' → logprob: -11.774984359741211
    9. '__' → logprob: -12.274984359741211
    10. ' set' → logprob: -12.399984359741211

Token 1155: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014904254116117954
    2. '(' → logprob: -4.264904022216797
    3. '(i' → logprob: -7.264904022216797
    4. ' (' → logprob: -10.514904022216797
    5. '(
' → logprob: -11.889904022216797
    6. '   ' → logprob: -12.889904022216797
    7. '(s' → logprob: -13.139904022216797
    8. 'self' → logprob: -14.639904022216797
    9. '.' → logprob: -15.389904022216797
    10. ')' → logprob: -15.389904022216797

Token 1156: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014291026629507542
    2. '(' → logprob: -4.514290809631348
    3. '(i' → logprob: -5.764290809631348
    4. ' (' → logprob: -9.639290809631348
    5. ')' → logprob: -10.514290809631348
    6. '(
' → logprob: -13.264290809631348
    7. 'self' → logprob: -13.264290809631348
    8. '   ' → logprob: -13.764290809631348
    9. '(s' → logprob: -13.889290809631348
    10. ')(' → logprob: -14.014290809631348

Token 1157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006934166885912418
    2. ' i' → logprob: -5.00693416595459
    3. 'p' → logprob: -8.63193416595459
    4. 'idx' → logprob: -10.88193416595459
    5. ' p' → logprob: -11.75693416595459
    6. 'k' → logprob: -12.38193416595459
    7. ' ' → logprob: -12.50693416595459
    8. 'pos' → logprob: -12.63193416595459
    9. '   ' → logprob: -14.00693416595459
    10. ' idx' → logprob: -14.38193416595459

Token 1158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',i' → logprob: -16.750024795532227
    4. '   ' → logprob: -18.375024795532227
    5. 'self' → logprob: -18.625024795532227
    6. ',
' → logprob: -19.875024795532227
    7. '‌,' → logprob: -20.125024795532227
    8. ',self' → logprob: -20.625024795532227
    9. '    ' → logprob: -21.250024795532227
    10. '```' → logprob: -21.375024795532227

Token 1159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005530327325686812
    2. ' x' → logprob: -7.500553131103516
    3. ' ' → logprob: -19.125553131103516
    4. '   ' → logprob: -19.500553131103516
    5. 'value' → logprob: -19.875553131103516
    6. 'v' → logprob: -22.875553131103516
    7. '       ' → logprob: -23.000553131103516
    8. '    ' → logprob: -23.125553131103516
    9. '  ' → logprob: -23.125553131103516
    10. '	x' → logprob: -23.375553131103516

Token 1160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062109190970659256
    2. '):
' → logprob: -2.8121092319488525
    3. ')' → logprob: -9.062108993530273
    4. '):
' → logprob: -11.187108993530273
    5. '   ' → logprob: -11.937108993530273
    6. ':' → logprob: -13.062108993530273
    7. ' ):' → logprob: -13.312108993530273
    8. '):

' → logprob: -14.562108993530273
    9. '       ' → logprob: -14.562108993530273
    10. ',' → logprob: -15.687108993530273

Token 1161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03603460267186165
    2. '):
' → logprob: -4.53603458404541
    3. '(self' → logprob: -4.78603458404541
    4. ':
' → logprob: -4.91103458404541
    5. ':' → logprob: -5.03603458404541
    6. '   ' → logprob: -6.78603458404541
    7. '):' → logprob: -7.78603458404541
    8. '(' → logprob: -8.03603458404541
    9. 'self' → logprob: -8.53603458404541
    10. '():
' → logprob: -9.16103458404541

Token 1162: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06559532135725021
    2. ':
' → logprob: -3.5655953884124756
    3. ':' → logprob: -4.0655951499938965
    4. '):
' → logprob: -4.5655951499938965
    5. '
' → logprob: -5.8155951499938965
    6. '#' → logprob: -6.3155951499938965
    7. '   ' → logprob: -7.0655951499938965
    8. 'self' → logprob: -7.4405951499938965
    9. '):' → logprob: -7.5655951499938965
    10. '```' → logprob: -8.065595626831055

Token 1163: '       ' (ID: 309)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17475096881389618
    2. '       ' → logprob: -2.174751043319702
    3. ':' → logprob: -4.299750804901123
    4. '   ' → logprob: -4.424750804901123
    5. '):' → logprob: -4.424750804901123
    6. ':
' → logprob: -4.924750804901123
    7. ')' → logprob: -7.924750804901123
    8. ' :' → logprob: -8.424751281738281
    9. '
' → logprob: -8.549751281738281
    10. '    ' → logprob: -8.674751281738281

Token 1164: ' Updates' (ID: 41737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05235917493700981
    2. 'self' → logprob: -3.677359104156494
    3. '
' → logprob: -4.802359104156494
    4. '   ' → logprob: -4.927359104156494
    5. '"""
' → logprob: -6.177359104156494
    6. '):
' → logprob: -6.427359104156494
    7. 'i' → logprob: -6.427359104156494
    8. ' self' → logprob: -6.427359104156494
    9. '#' → logprob: -6.552359104156494
    10. ')' → logprob: -7.802359104156494

Token 1165: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10862740874290466
    2. 'self' → logprob: -2.4836273193359375
    3. ' the' → logprob: -4.2336273193359375
    4. '       ' → logprob: -5.6086273193359375
    5. '(self' → logprob: -7.4836273193359375
    6. ' i' → logprob: -7.8586273193359375
    7. 'the' → logprob: -9.233627319335938
    8. ' (' → logprob: -9.483627319335938
    9. '   ' → logprob: -9.858627319335938
    10. ' a' → logprob: -10.108627319335938

Token 1166: ' value' (ID: 1432)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.03943760693073273
    2. ' tree' → logprob: -3.5394375324249268
    3. 'self' → logprob: -5.414437770843506
    4. 'value' → logprob: -6.039437770843506
    5. ' value' → logprob: -6.914437770843506
    6. '   ' → logprob: -7.539437770843506
    7. 'node' → logprob: -7.914437770843506
    8. 'i' → logprob: -7.914437770843506
    9. ' i' → logprob: -9.164437294006348
    10. '       ' → logprob: -9.164437294006348

Token 1167: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.0029117425438016653
    2. '       ' → logprob: -6.752911567687988
    3. 'at' → logprob: -7.502911567687988
    4. '   ' → logprob: -7.627911567687988
    5. ' ' → logprob: -7.877911567687988
    6. '[i' → logprob: -9.002911567687988
    7. '[' → logprob: -9.502911567687988
    8. '  ' → logprob: -10.252911567687988
    9. '    ' → logprob: -10.877911567687988
    10. '      ' → logprob: -11.377911567687988

Token 1168: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47431182861328125
    2. 'i' → logprob: -0.9743118286132812
    3. ' index' → logprob: -8.724311828613281
    4. 'index' → logprob: -9.599311828613281
    5. '       ' → logprob: -12.724311828613281
    6. '   ' → logprob: -13.974311828613281
    7. '	i' → logprob: -15.599311828613281
    8. '    ' → logprob: -15.849311828613281
    9. ' ' → logprob: -16.59931182861328
    10. '(i' → logprob: -16.97431182861328

Token 1169: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008693515323102474
    2. 'i' → logprob: -4.758693695068359
    3. ' ' → logprob: -10.50869369506836
    4. ' (' → logprob: -10.88369369506836
    5. '(i' → logprob: -11.50869369506836
    6. ' =' → logprob: -11.75869369506836
    7. '   ' → logprob: -12.63369369506836
    8. '       ' → logprob: -12.75869369506836
    9. '    ' → logprob: -13.00869369506836
    10. '	i' → logprob: -13.50869369506836

Token 1170: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18455466628074646
    2. ' =' → logprob: -2.9345545768737793
    3. '       ' → logprob: -3.0595545768737793
    4. '=' → logprob: -3.9345545768737793
    5. '        ' → logprob: -4.559554576873779
    6. '<|end|>' → logprob: -4.809554576873779
    7. '   ' → logprob: -5.059554576873779
    8. ' +=' → logprob: -5.309554576873779
    9. ',' → logprob: -5.809554576873779
    10. ' (' → logprob: -6.184554576873779

Token 1171: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759397745132446
    2. 'x' → logprob: -0.8259397745132446
    3. '	x' → logprob: -16.075939178466797
    4. ',' → logprob: -16.450939178466797
    5. ' ' → logprob: -16.825939178466797
    6. ')' → logprob: -17.075939178466797
    7. '`' → logprob: -17.825939178466797
    8. 'i' → logprob: -17.950939178466797
    9. ')x' → logprob: -18.075939178466797
    10. ',x' → logprob: -18.450939178466797

Token 1172: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5037200450897217
    2. ':' → logprob: -1.5037200450897217
    3. ':
' → logprob: -1.8787200450897217
    4. '):
' → logprob: -5.128720283508301
    5. '.' → logprob: -5.253720283508301
    6. '):' → logprob: -6.128720283508301
    7. '        
' → logprob: -6.253720283508301
    8. '   ' → logprob: -6.628720283508301
    9. '
' → logprob: -7.003720283508301
    10. ')' → logprob: -7.378720283508301

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004699495621025562
    2. '):
' → logprob: -6.25469970703125
    3. ':
' → logprob: -6.87969970703125
    4. ':' → logprob: -7.12969970703125
    5. '
' → logprob: -7.87969970703125
    6. '        
' → logprob: -8.25469970703125
    7. '   ' → logprob: -9.50469970703125
    8. ')' → logprob: -10.00469970703125
    9. '):' → logprob: -10.12969970703125
    10. '\n' → logprob: -10.62969970703125

Token 1174: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02445140853524208
    2. 'self' → logprob: -4.89945125579834
    3. 'i' → logprob: -5.02445125579834
    4. '
' → logprob: -5.39945125579834
    5. '   ' → logprob: -6.39945125579834
    6. ' i' → logprob: -6.52445125579834
    7. ' 
' → logprob: -7.39945125579834
    8. ' self' → logprob: -7.77445125579834
    9. '):
' → logprob: -8.52445125579834
    10. '        
' → logprob: -8.52445125579834

Token 1175: 'param' (ID: 1355)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8982991576194763
    2. '       ' → logprob: -1.773299217224121
    3. 'n' → logprob: -2.023299217224121
    4. 'idx' → logprob: -2.398299217224121
    5. 'index' → logprob: -2.898299217224121
    6. '#' → logprob: -2.898299217224121
    7. 'i' → logprob: -3.523299217224121
    8. '"""' → logprob: -4.023299217224121
    9. '"""
' → logprob: -4.023299217224121
    10. 'self' → logprob: -4.898299217224121

Token 1176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0182616226375103
    2. ' i' → logprob: -4.018261432647705
    3. 'int' → logprob: -9.143261909484863
    4. '   ' → logprob: -13.143261909484863
    5. ' int' → logprob: -13.143261909484863
    6. '       ' → logprob: -15.268261909484863
    7. '	i' → logprob: -15.643261909484863
    8. ' ' → logprob: -16.393260955810547
    9. '`' → logprob: -16.643260955810547
    10. '  ' → logprob: -16.893260955810547

Token 1177: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027218114584684372
    2. ' ,' → logprob: -3.7772181034088135
    3. ':' → logprob: -6.652218341827393
    4. '   ' → logprob: -6.777218341827393
    5. '):' → logprob: -7.277218341827393
    6. '):
' → logprob: -7.777218341827393
    7. ':int' → logprob: -9.777217864990234
    8. '<|end|>' → logprob: -9.777217864990234
    9. '=' → logprob: -9.902217864990234
    10. '       ' → logprob: -10.027217864990234

Token 1178: ' Index' (ID: 14580)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2951265573501587
    2. ' int' → logprob: -1.4201265573501587
    3. ' i' → logprob: -4.920126438140869
    4. 'i' → logprob: -5.045126438140869
    5. ':int' → logprob: -10.420126914978027
    6. '[int' → logprob: -10.420126914978027
    7. '(int' → logprob: -10.795126914978027
    8. '    ' → logprob: -11.545126914978027
    9. '   ' → logprob: -11.795126914978027
    10. '       ' → logprob: -11.795126914978027

Token 1179: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2920176982879639
    2. '<|end|>' → logprob: -1.5420176982879639
    3. '       ' → logprob: -2.042017698287964
    4. '=' → logprob: -2.167017698287964
    5. ')' → logprob: -2.667017698287964
    6. '<|end|>' → logprob: -3.167017698287964
    7. '        ' → logprob: -3.292017698287964
    8. ':' → logprob: -3.792017698287964
    9. '    ' → logprob: -3.917017698287964
    10. '   ' → logprob: -3.917017698287964

Token 1180: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.040599554777145386
    2. ')' → logprob: -3.9155995845794678
    3. 'update' → logprob: -4.290599346160889
    4. '=' → logprob: -6.790599346160889
    5. '       ' → logprob: -7.290599346160889
    6. ' i' → logprob: -7.290599346160889
    7. '   ' → logprob: -7.790599346160889
    8. '):
' → logprob: -8.040599822998047
    9. ' (' → logprob: -8.165599822998047
    10. ')
' → logprob: -8.165599822998047

Token 1181: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.760124683380127
    2. ')' → logprob: -1.385124683380127
    3. ',' → logprob: -1.885124683380127
    4. '<|end|>' → logprob: -2.635124683380127
    5. '):
' → logprob: -4.635124683380127
    6. '   ' → logprob: -4.635124683380127
    7. '=' → logprob: -4.635124683380127
    8. ' (' → logprob: -5.135124683380127
    9. ' =' → logprob: -5.135124683380127
    10. '):' → logprob: -5.760124683380127

Token 1182: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9305964112281799
    2. 'int' → logprob: -0.9305964112281799
    3. ' i' → logprob: -1.9305963516235352
    4. ' int' → logprob: -2.805596351623535
    5. ')' → logprob: -6.055596351623535
    6. ',' → logprob: -7.055596351623535
    7. ':int' → logprob: -7.055596351623535
    8. '       ' → logprob: -7.180596351623535
    9. '   ' → logprob: -8.305596351623535
    10. '):' → logprob: -8.555596351623535

Token 1183: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.6610012054443359
    2. ')' → logprob: -0.9110012054443359
    3. '):
' → logprob: -3.661001205444336
    4. ')
' → logprob: -3.661001205444336
    5. ' <=' → logprob: -4.536001205444336
    6. '       ' → logprob: -5.411001205444336
    7. '   ' → logprob: -5.536001205444336
    8. 'based' → logprob: -5.786001205444336
    9. 'Based' → logprob: -6.661001205444336
    10. '-index' → logprob: -6.661001205444336

Token 1184: 'ed' (ID: 295)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008084116503596306
    2. 'ed' → logprob: -5.758084297180176
    3. '=' → logprob: -6.633084297180176
    4. ')
' → logprob: -6.758084297180176
    5. '   ' → logprob: -7.508084297180176
    6. ')_' → logprob: -7.633084297180176
    7. '):
' → logprob: -7.883084297180176
    8. 'i' → logprob: -9.008084297180176
    9. '_' → logprob: -9.258084297180176
    10. 'x' → logprob: -9.383084297180176

Token 1185: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007079664152115583
    2. ')
' → logprob: -5.757079601287842
    3. '):
' → logprob: -5.757079601287842
    4. '       ' → logprob: -7.382079601287842
    5. '):' → logprob: -9.632080078125
    6. '   ' → logprob: -11.257080078125
    7. ' )' → logprob: -11.507080078125
    8. ',' → logprob: -12.132080078125
    9. ')`' → logprob: -12.507080078125
    10. '```' → logprob: -12.757080078125

Token 1186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04749630391597748
    2. '):
' → logprob: -3.4224963188171387
    3. '   ' → logprob: -5.547496318817139
    4. '
' → logprob: -5.672496318817139
    5. ')' → logprob: -6.422496318817139
    6. ':' → logprob: -6.797496318817139
    7. '        
' → logprob: -6.797496318817139
    8. '):' → logprob: -7.297496318817139
    9. '```' → logprob: -8.04749584197998
    10. ':
' → logprob: -8.04749584197998

Token 1187: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010078925639390945
    2. '
' → logprob: -5.2600789070129395
    3. '"""
' → logprob: -5.7600789070129395
    4. 'self' → logprob: -7.3850789070129395
    5. '"""' → logprob: -7.7600789070129395
    6. '   ' → logprob: -8.135079383850098
    7. '```' → logprob: -9.385079383850098
    8. ' """
' → logprob: -10.135079383850098
    9. '        
' → logprob: -10.260079383850098
    10. '):
' → logprob: -10.385079383850098

Token 1188: 'param' (ID: 1355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06923433393239975
    2. ' i' → logprob: -3.3192343711853027
    3. '   ' → logprob: -4.069234371185303
    4. '       ' → logprob: -4.944234371185303
    5. 'int' → logprob: -5.319234371185303
    6. 'def' → logprob: -8.319233894348145
    7. '):
' → logprob: -8.444233894348145
    8. ')' → logprob: -8.944233894348145
    9. 'indent' → logprob: -9.069233894348145
    10. '"""
' → logprob: -9.319233894348145

Token 1189: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004402055055834353
    2. 'i' → logprob: -7.8754401206970215
    3. 'int' → logprob: -10.37544059753418
    4. ' x' → logprob: -10.62544059753418
    5. '   ' → logprob: -13.75044059753418
    6. 'value' → logprob: -14.00044059753418
    7. ')' → logprob: -14.62544059753418
    8. '`' → logprob: -15.12544059753418
    9. ' i' → logprob: -15.12544059753418
    10. '#' → logprob: -15.25044059753418

Token 1190: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5795954465866089
    2. '):' → logprob: -0.8295954465866089
    3. '   ' → logprob: -5.704595565795898
    4. ')' → logprob: -8.704595565795898
    5. '):
' → logprob: -9.329595565795898
    6. '       ' → logprob: -10.704595565795898
    7. ':' → logprob: -11.454595565795898
    8. '):

' → logprob: -11.829595565795898
    9. ' ' → logprob: -12.329595565795898
    10. '  ' → logprob: -12.454595565795898

Token 1191: ' New' (ID: 2036)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868711292743683
    2. 'x' → logprob: -1.136871099472046
    3. ' new' → logprob: -17.761871337890625
    4. '    ' → logprob: -17.886871337890625
    5. ' value' → logprob: -17.886871337890625
    6. ' New' → logprob: -18.511871337890625
    7. '	x' → logprob: -18.636871337890625
    8. ' The' → logprob: -18.886871337890625
    9. ' ' → logprob: -19.011871337890625
    10. '   ' → logprob: -19.136871337890625

Token 1192: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.006917126476764679
    2. 'value' → logprob: -5.0069169998168945
    3. ' ' → logprob: -9.381916999816895
    4. '_value' → logprob: -9.631916999816895
    5. ')' → logprob: -10.881916999816895
    6. ' x' → logprob: -11.506916999816895
    7. ' =' → logprob: -12.256916999816895
    8. 'Value' → logprob: -12.381916999816895
    9. '    ' → logprob: -12.756916999816895
    10. ' val' → logprob: -13.006916999816895

Token 1193: ' to' (ID: 316)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16586188971996307
    2. '):' → logprob: -2.9158618450164795
    3. ')' → logprob: -3.1658618450164795
    4. '       ' → logprob: -3.9158618450164795
    5. ' ):
' → logprob: -4.290862083435059
    6. '   ' → logprob: -4.415862083435059
    7. '
' → logprob: -5.290862083435059
    8. ' )' → logprob: -6.665862083435059
    9. ' ):' → logprob: -7.540862083435059
    10. ' 
' → logprob: -7.665862083435059

Token 1194: ' assign' (ID: 14975)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.08838288486003876
    2. 'assign' → logprob: -2.5883829593658447
    3. 'update' → logprob: -5.213382720947266
    4. ' set' → logprob: -5.838382720947266
    5. '       ' → logprob: -7.838382720947266
    6. ' assign' → logprob: -8.213382720947266
    7. '
' → logprob: -9.213382720947266
    8. '   ' → logprob: -9.213382720947266
    9. ' update' → logprob: -9.588382720947266
    10. '_set' → logprob: -9.838382720947266

Token 1195: ' at' (ID: 540)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21051332354545593
    2. '):' → logprob: -1.8355133533477783
    3. '       ' → logprob: -3.8355133533477783
    4. ')' → logprob: -5.210513114929199
    5. '   ' → logprob: -5.835513114929199
    6. '):
' → logprob: -8.9605131149292
    7. ' ):
' → logprob: -9.2105131149292
    8. '):

' → logprob: -10.7105131149292
    9. ')
' → logprob: -10.9605131149292
    10. ' ):' → logprob: -11.2105131149292

Token 1196: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014138251543045
    2. ' i' → logprob: -1.701413869857788
    3. ')' → logprob: -16.201414108276367
    4. '	i' → logprob: -16.201414108276367
    5. '```' → logprob: -16.451414108276367
    6. '`' → logprob: -16.826414108276367
    7. ' ' → logprob: -16.951414108276367
    8. ' ' → logprob: -17.326414108276367
    9. '_i' → logprob: -17.326414108276367
    10. '   ' → logprob: -17.326414108276367

Token 1197: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25195634365081787
    2. ' i' → logprob: -1.5019563436508179
    3. '   ' → logprob: -10.87695598602295
    4. ' ' → logprob: -12.87695598602295
    5. '```' → logprob: -13.12695598602295
    6. '`' → logprob: -13.50195598602295
    7. ')' → logprob: -13.75195598602295
    8. '  ' → logprob: -15.37695598602295
    9. '    ' → logprob: -15.50195598602295
    10. '       ' → logprob: -15.62695598602295

Token 1198: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023347849026322365
    2. '):' → logprob: -4.273347854614258
    3. '       ' → logprob: -5.398347854614258
    4. ')' → logprob: -5.898347854614258
    5. '   ' → logprob: -6.648347854614258
    6. ')
' → logprob: -7.523347854614258
    7. '):
' → logprob: -10.773347854614258
    8. '):

' → logprob: -12.273347854614258
    9. ')`' → logprob: -13.148347854614258
    10. ' ):
' → logprob: -13.273347854614258

Token 1199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5502058863639832
    2. '
' → logprob: -1.425205945968628
    3. '):
' → logprob: -1.800205945968628
    4. '   ' → logprob: -4.425205707550049
    5. '        
' → logprob: -6.800205707550049
    6. '\n' → logprob: -6.925205707550049
    7. '):' → logprob: -7.050205707550049
    8. '"""
' → logprob: -7.300205707550049
    9. '```' → logprob: -7.550205707550049
    10. ')
' → logprob: -8.050206184387207

Token 1200: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01519535668194294
    2. '   ' → logprob: -4.515195369720459
    3. 'self' → logprob: -6.390195369720459
    4. '"""
' (adapté à ' """
') → logprob: -6.890195369720459
    5. '"""' → logprob: -7.890195369720459
    6. ')' → logprob: -8.2651948928833
    7. '):
' → logprob: -8.2651948928833
    8. '
' → logprob: -8.3901948928833
    9. '```' → logprob: -9.1401948928833
    10. ')
' → logprob: -9.3901948928833

Token 1201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009243130683898926
    2. 'self' → logprob: -5.259243011474609
    3. '
' → logprob: -6.259243011474609
    4. 'i' → logprob: -7.384243011474609
    5. ' 
' → logprob: -8.13424301147461
    6. ' self' → logprob: -8.13424301147461
    7. '   ' → logprob: -8.25924301147461
    8. '        
' → logprob: -8.75924301147461
    9. 'pos' → logprob: -9.00924301147461
    10. '    
' → logprob: -9.63424301147461

Token 1202: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.009735665284097195
    2. 'pos' → logprob: -4.759735584259033
    3. '       ' → logprob: -7.509735584259033
    4. 'idx' → logprob: -7.884735584259033
    5. 'p' → logprob: -9.009736061096191
    6. '   ' → logprob: -10.134736061096191
    7. ' i' → logprob: -11.134736061096191
    8. 'k' → logprob: -11.634736061096191
    9. 'self' → logprob: -12.259736061096191
    10. 'v' → logprob: -13.134736061096191

Token 1203: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.32688605785369873
    2. ' +=' → logprob: -1.5768860578536987
    3. '=' → logprob: -2.7018861770629883
    4. ' =' → logprob: -5.326886177062988
    5. '   ' → logprob: -8.326886177062988
    6. '    ' → logprob: -11.076886177062988
    7. '+' → logprob: -11.576886177062988
    8. '       ' → logprob: -11.951886177062988
    9. ' ' → logprob: -13.451886177062988
    10. '  ' → logprob: -14.076886177062988

Token 1204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.9153885558771435e-06
    2. ' self' → logprob: -12.125005722045898
    3. '[self' → logprob: -15.750005722045898
    4. '   ' → logprob: -15.750005722045898
    5. '(self' → logprob: -15.875005722045898
    6. '       ' → logprob: -18.5000057220459
    7. '	self' → logprob: -18.7500057220459
    8. '
' → logprob: -19.7500057220459
    9. '=self' → logprob: -20.2500057220459
    10. '           ' → logprob: -21.1250057220459

Token 1205: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16208408772945404
    2. 'self' → logprob: -1.9120841026306152
    3. '.n' → logprob: -6.412084102630615
    4. '_n' → logprob: -8.662083625793457
    5. ' self' → logprob: -10.537083625793457
    6. ' n' → logprob: -11.912083625793457
    7. '	n' → logprob: -12.662083625793457
    8. '   ' → logprob: -12.912083625793457
    9. ',n' → logprob: -13.787083625793457
    10. '[self' → logprob: -14.162083625793457

Token 1206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.375
    3. '   ' → logprob: -16.25
    4. '       ' → logprob: -17.625
    5. 'self' → logprob: -18.375
    6. ' ' → logprob: -18.5
    7. '```' → logprob: -19.125
    8. '₂' → logprob: -19.375
    9. 'n' → logprob: -20.375
    10. '__' → logprob: -20.875

Token 1207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02744327485561371
    2. '#' → logprob: -4.7774434089660645
    3. '       ' → logprob: -4.7774434089660645
    4. '[' → logprob: -6.1524434089660645
    5. 'self' → logprob: -6.2774434089660645
    6. '  
' → logprob: -7.1524434089660645
    7. '   ' → logprob: -7.2774434089660645
    8. '        
' → logprob: -7.4024434089660645
    9. '    
' → logprob: -7.5274434089660645
    10. '<|end|>' → logprob: -7.6524434089660645

Token 1208: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5309633612632751
    2. '       ' → logprob: -1.15596342086792
    3. '
' → logprob: -2.40596342086792
    4. ' self' → logprob: -5.53096342086792
    5. '[self' → logprob: -7.40596342086792
    6. ';' → logprob: -7.65596342086792
    7. '   ' → logprob: -7.65596342086792
    8. '        
' → logprob: -8.030962944030762
    9. '	self' → logprob: -8.655962944030762
    10. ';
' → logprob: -8.655962944030762

Token 1209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.703443770878948e-06
    2. '       ' → logprob: -12.000007629394531
    3. ' self' → logprob: -13.500007629394531
    4. '	self' → logprob: -18.50000762939453
    5. 'while' → logprob: -19.62500762939453
    6. '   ' → logprob: -19.87500762939453
    7. '
' → logprob: -20.00000762939453
    8. '```' → logprob: -20.37500762939453
    9. '[self' → logprob: -21.12500762939453
    10. '#' → logprob: -21.37500762939453

Token 1210: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00018161057960242033
    2. 'tree' → logprob: -9.250181198120117
    3. '.' → logprob: -9.750181198120117
    4. '   ' → logprob: -11.500181198120117
    5. ' .' → logprob: -12.250181198120117
    6. '	tree' → logprob: -12.500181198120117
    7. '```' → logprob: -13.125181198120117
    8. '       ' → logprob: -14.125181198120117
    9. '.table' → logprob: -14.375181198120117
    10. '#' → logprob: -14.625181198120117

Token 1211: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -12.000011444091797
    3. '=' → logprob: -12.500011444091797
    4. 'i' → logprob: -14.250011444091797
    5. '=i' → logprob: -16.000011444091797
    6. '   ' → logprob: -16.375011444091797
    7. '[
' → logprob: -16.500011444091797
    8. '[I' → logprob: -17.000011444091797
    9. ' =' → logprob: -17.375011444091797
    10. '```' → logprob: -17.500011444091797

Token 1212: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. ']=' → logprob: -16.639163970947266
    4. ')=' → logprob: -16.889163970947266
    5. '＝' → logprob: -17.389163970947266
    6. ')' → logprob: -17.889163970947266
    7. ']' → logprob: -18.264163970947266
    8. '=i' → logprob: -18.514163970947266
    9. '   ' → logprob: -18.639163970947266
    10. '_=' → logprob: -19.139163970947266

Token 1213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '=x' → logprob: -17.798587799072266
    4. '＝' → logprob: -17.923587799072266
    5. '=int' → logprob: -19.423587799072266
    6. '.=' → logprob: -20.423587799072266
    7. '=cut' → logprob: -20.673587799072266
    8. '=end' → logprob: -21.048587799072266
    9. '=
' → logprob: -21.173587799072266
    10. '=i' → logprob: -21.298587799072266

Token 1214: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -17.25
    3. '	x' → logprob: -26.125
    4. '"x' → logprob: -28.375
    5. '$x' → logprob: -28.5
    6. '   ' → logprob: -29.125
    7. ''x' → logprob: -29.75
    8. '(x' → logprob: -30.375
    9. '_x' → logprob: -30.625
    10. '{x' → logprob: -30.875

Token 1215: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04739876464009285
    2. '       ' → logprob: -3.547398805618286
    3. ' i' → logprob: -5.047398567199707
    4. 'while' → logprob: -5.922398567199707
    5. '   ' → logprob: -6.047398567199707
    6. '	i' → logprob: -6.547398567199707
    7. '<|end|>' → logprob: -6.672398567199707
    8. '
' → logprob: -7.172398567199707
    9. ' while' → logprob: -7.547398567199707
    10. '	' → logprob: -8.297398567199707

Token 1216: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7025154232978821
    2. '       ' → logprob: -0.7025154232978821
    3. ' i' → logprob: -4.827515602111816
    4. 'while' → logprob: -7.202515602111816
    5. '   ' → logprob: -8.202515602111816
    6. ' while' → logprob: -8.577515602111816
    7. '	i' → logprob: -10.202515602111816
    8. '
' → logprob: -10.452515602111816
    9. ',i' → logprob: -11.327515602111816
    10. ' ' → logprob: -11.827515602111816

Token 1217: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02062947489321232
    2. '       ' → logprob: -4.020629405975342
    3. 'while' → logprob: -6.020629405975342
    4. ' i' → logprob: -10.6456298828125
    5. '   ' → logprob: -10.6456298828125
    6. ' while' → logprob: -14.6456298828125
    7. '	i' → logprob: -16.2706298828125
    8. 'While' → logprob: -16.6456298828125
    9. '           ' → logprob: -17.0206298828125
    10. '```' → logprob: -17.0206298828125

Token 1218: ' Prop' (ID: 12978)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013754653744399548
    2. 'while' → logprob: -4.513754844665527
    3. '   ' → logprob: -6.013754844665527
    4. '       ' → logprob: -8.388754844665527
    5. ' i' → logprob: -10.638754844665527
    6. ' while' → logprob: -13.138754844665527
    7. 'j' → logprob: -13.138754844665527
    8. '     ' → logprob: -14.513754844665527
    9. '  ' → logprob: -14.638754844665527
    10. 'While' → logprob: -15.138754844665527

Token 1219: 'agate' (ID: 106016)
  Prédit: 'agate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agate' → logprob: -0.018430035561323166
    2. 'ag' → logprob: -4.018430233001709
    3. 'og' → logprob: -8.76842975616455
    4. 'ate' → logprob: -9.51842975616455
    5. '   ' → logprob: -11.14342975616455
    6. 'igate' → logprob: -11.76842975616455
    7. 'agat' → logprob: -12.14342975616455
    8. 'gate' → logprob: -12.14342975616455
    9. 'agte' → logprob: -12.14342975616455
    10. 'a' → logprob: -12.51842975616455

Token 1220: ' changes' (ID: 6629)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009465880692005157
    2. ' i' → logprob: -4.75946569442749
    3. '   ' → logprob: -7.50946569442749
    4. '       ' → logprob: -8.259466171264648
    5. 'up' → logprob: -10.884466171264648
    6. ' up' → logprob: -11.384466171264648
    7. '     ' → logprob: -12.884466171264648
    8. 'self' → logprob: -13.009466171264648
    9. '           ' → logprob: -13.134466171264648
    10. '(i' → logprob: -13.384466171264648

Token 1221: ' up' (ID: 869)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9397624731063843
    2. '       ' → logprob: -1.1897624731063843
    3. 'i' → logprob: -1.4397624731063843
    4. 'up' → logprob: -4.189762592315674
    5. '>>' → logprob: -4.439762592315674
    6. ' >>=' → logprob: -4.564762592315674
    7. '[i' → logprob: -5.564762592315674
    8. ' i' → logprob: -5.564762592315674
    9. ' up' → logprob: -5.689762592315674
    10. '     ' → logprob: -5.939762592315674

Token 1222: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3258937895298004
    2. 'wards' → logprob: -1.575893759727478
    3. '   ' → logprob: -2.8258938789367676
    4. 'i' → logprob: -6.325893878936768
    5. '           ' → logprob: -6.450893878936768
    6. ' i' → logprob: -6.450893878936768
    7. '[i' → logprob: -6.450893878936768
    8. '(i' → logprob: -6.575893878936768
    9. '     ' → logprob: -6.825893878936768
    10. '```' → logprob: -7.325893878936768

Token 1223: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2562416195869446
    2. 'i' → logprob: -1.5062415599822998
    3. ' tree' → logprob: -5.756241798400879
    4. 'parent' → logprob: -7.381241798400879
    5. '   ' → logprob: -8.381241798400879
    6. ' i' → logprob: -8.506241798400879
    7. '       ' → logprob: -10.506241798400879
    8. 'chain' → logprob: -11.756241798400879
    9. '```' → logprob: -11.881241798400879
    10. '    ' → logprob: -12.256241798400879

Token 1224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05038538575172424
    2. 'i' → logprob: -3.0503854751586914
    3. ' i' → logprob: -6.800385475158691
    4. '
' → logprob: -8.550385475158691
    5. '   ' → logprob: -8.925385475158691
    6. 'while' → logprob: -9.425385475158691
    7. ',i' → logprob: -9.675385475158691
    8. ',' → logprob: -10.050385475158691
    9. ' while' → logprob: -10.050385475158691
    10. '[i' → logprob: -10.300385475158691

Token 1225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005537658464163542
    2. 'i' → logprob: -5.380537509918213
    3. ' i' → logprob: -7.630537509918213
    4. '   ' → logprob: -8.630537986755371
    5. 'while' → logprob: -9.005537986755371
    6. ' while' → logprob: -10.255537986755371
    7. '
' → logprob: -10.755537986755371
    8. '[i' → logprob: -10.880537986755371
    9. '(i' → logprob: -11.630537986755371
    10. '	' → logprob: -11.755537986755371

Token 1226: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006719246739521623
    2. '   ' → logprob: -7.500671863555908
    3. 'while' (adapté à ' while') → logprob: -9.250672340393066
    4. ' i' → logprob: -10.750672340393066
    5. '       ' → logprob: -13.625672340393066
    6. ' while' → logprob: -15.750672340393066
    7. '	i' → logprob: -16.25067138671875
    8. '  ' → logprob: -18.25067138671875
    9. '    ' → logprob: -18.50067138671875
    10. '     ' → logprob: -19.12567138671875

Token 1227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034216397907584906
    2. ' i' → logprob: -5.753421783447266
    3. '(i' → logprob: -8.378421783447266
    4. ' (' → logprob: -12.253421783447266
    5. 'True' → logprob: -12.378421783447266
    6. '1' → logprob: -13.378421783447266
    7. '   ' → logprob: -13.503421783447266
    8. ' ' → logprob: -14.503421783447266
    9. '	i' → logprob: -14.503421783447266
    10. '(' → logprob: -14.628421783447266

Token 1228: ' >' (ID: 1424)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.31355535984039307
    2. '>' → logprob: -1.313555359840393
    3. '   ' → logprob: -8.313555717468262
    4. ' ' → logprob: -10.938555717468262
    5. '>>
' → logprob: -12.313555717468262
    6. '     ' → logprob: -12.563555717468262
    7. '```' → logprob: -12.688555717468262
    8. '≫' → logprob: -12.688555717468262
    9. '>>>' → logprob: -12.813555717468262
    10. '//=' → logprob: -12.938555717468262

Token 1229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '>' → logprob: -17.000003814697266
    5. '```' → logprob: -17.125003814697266
    6. '
' → logprob: -17.750003814697266
    7. '     ' → logprob: -17.875003814697266
    8. 'i' → logprob: -18.375003814697266
    9. '``' → logprob: -18.500003814697266
    10. '    ' → logprob: -19.000003814697266

Token 1230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '0' → logprob: -18.5
    4. '   ' → logprob: -18.625
    5. '=' → logprob: -21.875
    6. '     ' → logprob: -22.375
    7. '１' → logprob: -22.375
    8. '  ' → logprob: -22.375
    9. '>' → logprob: -22.625
    10. '```' → logprob: -22.625

Token 1231: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5061787366867065
    2. '>>' → logprob: -1.3811787366867065
    3. '       ' → logprob: -2.756178855895996
    4. ' >>=' → logprob: -3.381178855895996
    5. ':' → logprob: -3.756178855895996
    6. ' >>' → logprob: -4.756178855895996
    7. '   ' → logprob: -5.131178855895996
    8. '           ' → logprob: -5.256178855895996
    9. '>>>' → logprob: -6.881178855895996
    10. '=' → logprob: -7.256178855895996

Token 1232: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09870253503322601
    2. ' i' → logprob: -2.7237024307250977
    3. '           ' → logprob: -4.223702430725098
    4. 'i' → logprob: -4.473702430725098
    5. '        ' → logprob: -6.973702430725098
    6. '(i' → logprob: -7.598702430725098
    7. '```' → logprob: -8.473702430725098
    8. '
' → logprob: -8.973702430725098
    9. '[i' → logprob: -9.473702430725098
    10. '\' → logprob: -9.473702430725098

Token 1233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0030113384127616882
    2. '   ' → logprob: -6.503011226654053
    3. ' i' → logprob: -6.503011226654053
    4. '       ' → logprob: -12.128011703491211
    5. '           ' → logprob: -13.378011703491211
    6. '	i' → logprob: -13.753011703491211
    7. '```' → logprob: -15.003011703491211
    8. 'self' → logprob: -15.878011703491211
    9. '     ' → logprob: -16.00301170349121
    10. '``' → logprob: -16.37801170349121

Token 1234: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0004618896055035293
    2. '//=' → logprob: -8.12546157836914
    3. ' >>=' → logprob: -8.87546157836914
    4. '=' → logprob: -11.12546157836914
    5. '   ' → logprob: -11.50046157836914
    6. '>' → logprob: -15.12546157836914
    7. ' ' → logprob: -15.25046157836914
    8. ' //' → logprob: -16.00046157836914
    9. '    ' → logprob: -16.25046157836914
    10. '≫' → logprob: -16.37546157836914

Token 1235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -18.625
    5. '１' → logprob: -19.75
    6. '
' → logprob: -20.25
    7. '' → logprob: -20.625
    8. '=' → logprob: -20.75
    9. '``' → logprob: -21.0
    10. '0' → logprob: -21.0

Token 1236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.75
    5. '１' → logprob: -19.75
    6. '' → logprob: -20.0
    7. '=' → logprob: -20.0
    8. '0' → logprob: -20.5
    9. '۱' → logprob: -21.1875
    10. 'self' → logprob: -21.25

Token 1237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020661605522036552
    2. 'self' → logprob: -6.252066135406494
    3. ' self' → logprob: -9.377066612243652
    4. ',' → logprob: -10.502066612243652
    5. ';' → logprob: -12.252066612243652
    6. '   ' → logprob: -12.627066612243652
    7. '       ' → logprob: -12.627066612243652
    8. '
' → logprob: -13.377066612243652
    9. '		' → logprob: -13.502066612243652
    10. '```' → logprob: -13.627066612243652

Token 1238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03396793082356453
    2. 'self' → logprob: -3.408967971801758
    3. ' self' → logprob: -8.408967971801758
    4. '   ' → logprob: -10.033967971801758
    5. '1' → logprob: -10.533967971801758
    6. '       ' → logprob: -12.408967971801758
    7. ' ' → logprob: -12.533967971801758
    8. '0' → logprob: -12.533967971801758
    9. '```' → logprob: -13.158967971801758
    10. ',' → logprob: -13.283967971801758

Token 1239: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002561864908784628
    2. '           ' → logprob: -6.002562046051025
    3. ' self' → logprob: -9.377561569213867
    4. '   ' → logprob: -13.877561569213867
    5. ' ' → logprob: -15.377561569213867
    6. '	self' → logprob: -15.502561569213867
    7. '       ' → logprob: -17.252561569213867
    8. '               ' → logprob: -17.377561569213867
    9. '          ' → logprob: -18.002561569213867
    10. '  ' → logprob: -18.002561569213867

Token 1240: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00035060103982686996
    2. 'tree' → logprob: -8.000350952148438
    3. '           ' → logprob: -11.500350952148438
    4. '.' → logprob: -13.125350952148438
    5. '	tree' → logprob: -13.250350952148438
    6. ' .' → logprob: -14.875350952148438
    7. ' tree' → logprob: -15.125350952148438
    8. '   ' → logprob: -15.750350952148438
    9. '.table' → logprob: -16.000350952148438
    10. '(tree' → logprob: -17.125350952148438

Token 1241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5570885807392187e-05
    2. '[' → logprob: -11.250015258789062
    3. '[self' → logprob: -13.250015258789062
    4. 'i' → logprob: -15.375015258789062
    5. '```' → logprob: -16.000015258789062
    6. '[I' → logprob: -16.375015258789062
    7. '(i' → logprob: -16.750015258789062
    8. '   ' → logprob: -16.875015258789062
    9. '[
' → logprob: -17.625015258789062
    10. '           ' → logprob: -18.125015258789062

Token 1242: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690683245658875
    2. ' =' → logprob: -1.1369068622589111
    3. '=self' → logprob: -10.636906623840332
    4. ']' → logprob: -12.011906623840332
    5. 'self' → logprob: -12.886906623840332
    6. ']=' → logprob: -13.636906623840332
    7. '[' → logprob: -14.261906623840332
    8. '   ' → logprob: -14.261906623840332
    9. ')' → logprob: -15.261906623840332
    10. ' self' → logprob: -16.13690757751465

Token 1243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751179739832878
    2. ' =' → logprob: -3.5297510623931885
    3. '=self' → logprob: -14.27975082397461
    4. 'self' → logprob: -15.65475082397461
    5. '   ' → logprob: -18.02975082397461
    6. '=
' → logprob: -18.65475082397461
    7. '＝' → logprob: -18.90475082397461
    8. '.=' → logprob: -19.15475082397461
    9. ' self' → logprob: -19.77975082397461
    10. 's' → logprob: -20.02975082397461

Token 1244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7610454708337784e-05
    2. ' self' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.12502670288086
    4. '           ' → logprob: -18.87502670288086
    5. '(self' → logprob: -20.25002670288086
    6. '       ' → logprob: -20.75002670288086
    7. '[self' → logprob: -21.00002670288086
    8. '	self' → logprob: -21.25002670288086
    9. '```' → logprob: -21.25002670288086
    10. '`' → logprob: -21.50002670288086

Token 1245: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -0.0006308287265710533
    2. 'func' → logprob: -7.625630855560303
    3. 'self' → logprob: -8.875630378723145
    4. '.' → logprob: -13.375630378723145
    5. '.self' → logprob: -14.250630378723145
    6. '	func' → logprob: -15.875630378723145
    7. '.int' → logprob: -16.25063133239746
    8. '.fun' → logprob: -16.50063133239746
    9. '(func' → logprob: -17.25063133239746
    10. ' func' → logprob: -17.25063133239746

Token 1246: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009663687669672072
    2. 'self' → logprob: -7.000966548919678
    3. '(' → logprob: -9.87596607208252
    4. '(
' → logprob: -12.87596607208252
    5. ' self' → logprob: -15.00096607208252
    6. ',self' → logprob: -15.75096607208252
    7. '[self' → logprob: -16.250967025756836
    8. ' (' → logprob: -16.750967025756836
    9. '(s' → logprob: -17.000967025756836
    10. '(sel' → logprob: -17.375967025756836

Token 1247: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0006610880955122411
    2. 'tree' → logprob: -7.3756608963012695
    3. 'self' → logprob: -10.37566089630127
    4. '	tree' → logprob: -13.62566089630127
    5. '.self' → logprob: -14.25066089630127
    6. '.table' → logprob: -15.00066089630127
    7. 'TREE' → logprob: -15.50066089630127
    8. '(tree' → logprob: -15.62566089630127
    9. ' tree' → logprob: -15.62566089630127
    10. '.' → logprob: -15.62566089630127

Token 1248: '[i' (ID: 1768)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.010042451322078705
    2. '[i' → logprob: -4.760042667388916
    3. 'self' → logprob: -6.635042667388916
    4. '(self' → logprob: -10.010042190551758
    5. '[(' → logprob: -10.135042190551758
    6. '[' → logprob: -10.510042190551758
    7. ',self' → logprob: -14.760042190551758
    8. '[
' → logprob: -15.010042190551758
    9. ' self' → logprob: -15.635042190551758
    10. '[s' → logprob: -16.260042190551758

Token 1249: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.005722336005419493
    2. '[i' → logprob: -5.255722522735596
    3. '[' → logprob: -7.880722522735596
    4. ' <<' → logprob: -9.255722045898438
    5. 'i' → logprob: -11.380722045898438
    6. '2' → logprob: -13.755722045898438
    7. '(i' → logprob: -13.880722045898438
    8. ' <<=' → logprob: -15.505722045898438
    9. '1' → logprob: -15.630722045898438
    10. '<<(' → logprob: -15.755722045898438

Token 1250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '```' → logprob: -16.000001907348633
    5. '           ' → logprob: -16.125001907348633
    6. '       ' → logprob: -17.187501907348633
    7. '         ' → logprob: -17.437501907348633
    8. '0' → logprob: -17.437501907348633
    9. '     ' → logprob: -17.875001907348633
    10. '`' → logprob: -17.937501907348633

Token 1251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.687501907348633
    5. '```' → logprob: -17.500001907348633
    6. '2' → logprob: -18.000001907348633
    7. '
' → logprob: -18.250001907348633
    8. '           ' → logprob: -18.937501907348633
    9. '``' → logprob: -19.187501907348633
    10. ' ' → logprob: -19.250001907348633

Token 1252: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034356804098933935
    2. ' ,' → logprob: -8.375343322753906
    3. ',self' → logprob: -9.250343322753906
    4. ',
' → logprob: -11.375343322753906
    5. '           ' → logprob: -12.875343322753906
    6. ',i' → logprob: -13.625343322753906
    7. 'self' → logprob: -14.250343322753906
    8. '   ' → logprob: -15.625343322753906
    9. '            ' → logprob: -16.125343322753906
    10. '       ' → logprob: -16.125343322753906

Token 1253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011714138090610504
    2. ' self' → logprob: -6.751171588897705
    3. '           ' → logprob: -13.626171112060547
    4. '            ' → logprob: -18.126171112060547
    5. '(self' → logprob: -18.751171112060547
    6. '          ' → logprob: -19.126171112060547
    7. '               ' → logprob: -19.251171112060547
    8. '                   ' → logprob: -19.501171112060547
    9. '	self' → logprob: -19.751171112060547
    10. '   ' → logprob: -20.001171112060547

Token 1254: '.tree' (ID: 49211)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07991117984056473
    2. '[i' → logprob: -2.579911231994629
    3. ' (' → logprob: -7.079911231994629
    4. 'i' → logprob: -9.704911231994629
    5. '[(' → logprob: -9.954911231994629
    6. 'tree' → logprob: -10.079911231994629
    7. '(' → logprob: -11.829911231994629
    8. '(tree' → logprob: -11.954911231994629
    9. '[' → logprob: -12.704911231994629
    10. '.tree' → logprob: -12.829911231994629

Token 1255: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38708335161209106
    2. '[(' → logprob: -1.1370832920074463
    3. '(i' → logprob: -8.637083053588867
    4. '[
' → logprob: -11.637083053588867
    5. '[' → logprob: -11.887083053588867
    6. 'i' → logprob: -11.887083053588867
    7. '|' → logprob: -12.512083053588867
    8. '|(' → logprob: -13.012083053588867
    9. '
' → logprob: -13.137083053588867
    10. '1' → logprob: -13.137083053588867

Token 1256: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.816093228830141e-06
    2. ' i' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.87500286102295
    4. '(i' → logprob: -15.75000286102295
    5. '  ' → logprob: -19.000001907348633
    6. '    ' → logprob: -19.250001907348633
    7. '	i' → logprob: -19.500001907348633
    8. '           ' → logprob: -19.500001907348633
    9. '     ' → logprob: -20.500001907348633
    10. '(' → logprob: -20.625001907348633

Token 1257: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.39700210094451904
    2. '<<' → logprob: -1.147002100944519
    3. 'i' → logprob: -5.147002220153809
    4. ' i' → logprob: -5.647002220153809
    5. '1' → logprob: -7.397002220153809
    6. '(i' → logprob: -10.397002220153809
    7. ' ' → logprob: -11.022002220153809
    8. ' |' → logprob: -11.022002220153809
    9. ' <<=' → logprob: -11.397002220153809
    10. ' >>' → logprob: -11.897002220153809

Token 1258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -19.125
    5. 'i' → logprob: -20.125
    6. '`' → logprob: -20.75
    7. '-' → logprob: -21.125
    8. '``' → logprob: -21.4375
    9. '           ' → logprob: -21.5
    10. '' → logprob: -21.9375

Token 1259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'i' → logprob: -18.0
    4. '```' → logprob: -18.75
    5. '   ' → logprob: -19.875
    6. '`' → logprob: -20.0
    7. '-' → logprob: -20.375
    8. '
' → logprob: -20.5
    9. '(i' → logprob: -21.3125
    10. '' → logprob: -21.3125

Token 1260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03162297233939171
    2. '|' → logprob: -3.906622886657715
    3. ')|' → logprob: -5.156622886657715
    4. ' |' → logprob: -5.406622886657715
    5. ')|(' → logprob: -7.656622886657715
    6. ')]' → logprob: -9.031622886657715
    7. ')>>' → logprob: -9.906622886657715
    8. ')i' → logprob: -10.156622886657715
    9. ']' → logprob: -10.656622886657715
    10. ' )' → logprob: -11.031622886657715

Token 1261: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.5759449005126953
    2. '|' → logprob: -0.8259449005126953
    3. ')' → logprob: -13.200944900512695
    4. ')|' → logprob: -14.200944900512695
    5. '])' → logprob: -14.450944900512695
    6. ')]' → logprob: -14.700944900512695
    7. ']' → logprob: -14.950944900512695
    8. ' ' → logprob: -15.075944900512695
    9. ']|' → logprob: -15.200944900512695
    10. '```' → logprob: -15.325944900512695

Token 1262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '           ' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '               ' → logprob: -19.625001907348633
    6. '0' → logprob: -20.750001907348633
    7. '       ' → logprob: -20.750001907348633
    8. '```' → logprob: -20.750001907348633
    9. '                   ' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.375001907348633

Token 1263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.875001907348633
    4. '```' → logprob: -21.000001907348633
    5. '  ' → logprob: -21.875001907348633
    6. '           ' → logprob: -22.000001907348633
    7. '１' → logprob: -22.062501907348633
    8. '       ' → logprob: -22.187501907348633
    9. '0' → logprob: -22.250001907348633
    10. '     ' → logprob: -22.437501907348633

Token 1264: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16053037345409393
    2. '])' → logprob: -1.9105303287506104
    3. ')])' → logprob: -9.160530090332031
    4. ')
' → logprob: -9.285530090332031
    5. ')]' → logprob: -10.285530090332031
    6. ']' → logprob: -10.785530090332031
    7. ' )' → logprob: -11.035530090332031
    8. '])
' → logprob: -11.410530090332031
    9. ' ])' → logprob: -11.785530090332031
    10. '   ' → logprob: -12.035530090332031

Token 1265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019852598197758198
    2. 'def' → logprob: -6.2519850730896
    3. '```' → logprob: -10.751985549926758
    4. '    
' → logprob: -10.876985549926758
    5. ' def' → logprob: -11.876985549926758
    6. '
' → logprob: -12.251985549926758
    7. '        
' → logprob: -13.126985549926758
    8. '<|end|>' → logprob: -13.751985549926758
    9. '	def' → logprob: -14.126985549926758
    10. '       ' → logprob: -14.376985549926758

Token 1266: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07018839567899704
    2. ' def' → logprob: -2.945188283920288
    3. '   ' → logprob: -4.195188522338867
    4. '```' → logprob: -10.070188522338867
    5. '
' → logprob: -10.195188522338867
    6. '	def' → logprob: -10.945188522338867
    7. ' 
' → logprob: -11.820188522338867
    8. '    
' → logprob: -11.820188522338867
    9. '        
' → logprob: -13.195188522338867
    10. '  ' → logprob: -13.695188522338867

Token 1267: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.0009808859322220087
    2. ' query' → logprob: -7.500980854034424
    3. '_query' → logprob: -8.375981330871582
    4. 'get' → logprob: -9.125981330871582
    5. 'build' → logprob: -9.375981330871582
    6. '_get' → logprob: -13.375981330871582
    7. '_build' → logprob: -13.875981330871582
    8. '_' → logprob: -14.375981330871582
    9. '__' → logprob: -14.750981330871582
    10. '=query' → logprob: -15.875981330871582

Token 1268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.297462171758525e-05
    2. '(l' → logprob: -10.500033378601074
    3. '(' → logprob: -12.250033378601074
    4. '   ' → logprob: -15.625033378601074
    5. 'self' → logprob: -15.750033378601074
    6. 'def' → logprob: -16.375032424926758
    7. ' (' → logprob: -17.375032424926758
    8. '       ' → logprob: -17.750032424926758
    9. '(
' → logprob: -18.000032424926758
    10. '(s' → logprob: -18.125032424926758

Token 1269: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16281814873218536
    2. ',' → logprob: -1.912818193435669
    3. '   ' → logprob: -6.78781795501709
    4. '(l' → logprob: -7.16281795501709
    5. 'self' → logprob: -8.16281795501709
    6. '       ' → logprob: -8.41281795501709
    7. ',self' → logprob: -9.41281795501709
    8. ')(' → logprob: -10.91281795501709
    9. ',l' → logprob: -10.91281795501709
    10. '(' → logprob: -11.16281795501709

Token 1270: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0002615742268972099
    2. 'self' → logprob: -8.250261306762695
    3. ' l' → logprob: -15.500261306762695
    4. 'left' → logprob: -19.375261306762695
    5. 'L' → logprob: -21.000261306762695
    6. ' self' → logprob: -21.000261306762695
    7. 'lf' → logprob: -22.000261306762695
    8. '_l' → logprob: -22.000261306762695
    9. '(self' → logprob: -22.500261306762695
    10. '	l' → logprob: -22.625261306762695

Token 1271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.35837464465294e-05
    2. ',b' → logprob: -10.250043869018555
    3. ' ,' → logprob: -11.750043869018555
    4. 'b' → logprob: -16.625043869018555
    5. ',a' → logprob: -16.750043869018555
    6. '   ' → logprob: -16.875043869018555
    7. ',
' → logprob: -17.500043869018555
    8. ',l' → logprob: -17.750043869018555
    9. '_,' → logprob: -18.250043869018555
    10. 'a' → logprob: -18.625043869018555

Token 1272: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.512236498361744e-07
    2. ' b' → logprob: -14.500000953674316
    3. '   ' → logprob: -22.5
    4. '	b' → logprob: -23.75
    5. ',b' → logprob: -26.0
    6. '$b' → logprob: -26.125
    7. 'a' → logprob: -26.25
    8. '_b' → logprob: -26.5
    9. '    ' → logprob: -26.625
    10. ' ' → logprob: -26.875

Token 1273: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000505730917211622
    2. '):
' → logprob: -8.000505447387695
    3. '       ' → logprob: -9.500505447387695
    4. '   ' → logprob: -9.750505447387695
    5. 'self' → logprob: -10.750505447387695
    6. '):' → logprob: -11.375505447387695
    7. '(self' → logprob: -12.750505447387695
    8. ',
' → logprob: -15.125505447387695
    9. '):
' → logprob: -15.875505447387695
    10. ',a' → logprob: -16.000505447387695

Token 1274: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5799355506896973
    2. '       ' → logprob: -0.8299355506896973
    3. '(' → logprob: -5.954935550689697
    4. 'self' → logprob: -6.704935550689697
    5. '```' → logprob: -9.329935073852539
    6. '   ' → logprob: -10.704935073852539
    7. 'a' → logprob: -11.329935073852539
    8. 'def' → logprob: -11.829935073852539
    9. '(
' → logprob: -12.204935073852539
    10. ':' → logprob: -12.204935073852539

Token 1275: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002812005812302232
    2. '(' → logprob: -6.627811908721924
    3. 'a' → logprob: -8.252812385559082
    4. '   ' → logprob: -8.377812385559082
    5. '(self' → logprob: -8.377812385559082
    6. '0' → logprob: -8.502812385559082
    7. '```' → logprob: -9.002812385559082
    8. '#' → logprob: -9.627812385559082
    9. 'self' → logprob: -9.627812385559082
    10. ' (' → logprob: -9.627812385559082

Token 1276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4342680275440216
    2. 'self' → logprob: -1.0592679977416992
    3. ' self' → logprob: -6.184267997741699
    4. 'a' → logprob: -7.059267997741699
    5. 'int' → logprob: -7.184267997741699
    6. '   ' → logprob: -7.309267997741699
    7. '(self' → logprob: -7.434267997741699
    8. 'def' → logprob: -7.684267997741699
    9. 'i' → logprob: -9.5592679977417
    10. '      ' → logprob: -10.9342679977417

Token 1277: ' Queries' (ID: 185239)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10444629192352295
    2. 'a' → logprob: -2.9794464111328125
    3. 'i' → logprob: -3.9794464111328125
    4. '   ' → logprob: -4.3544464111328125
    5. ' a' → logprob: -5.3544464111328125
    6. ' i' → logprob: -5.6044464111328125
    7. '    ' → logprob: -6.4794464111328125
    8. 'l' → logprob: -6.8544464111328125
    9. ' 
' → logprob: -6.8544464111328125
    10. ' l' → logprob: -6.9794464111328125

Token 1278: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.543914258480072
    2. '(self' → logprob: -1.2939143180847168
    3. 'a' → logprob: -2.418914318084717
    4. '(a' → logprob: -2.918914318084717
    5. ' self' → logprob: -6.918914318084717
    6. ' a' → logprob: -7.668914318084717
    7. '   ' → logprob: -7.668914318084717
    8. '       ' → logprob: -8.793913841247559
    9. 'def' → logprob: -8.918913841247559
    10. 'result' → logprob: -10.293913841247559

Token 1279: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029834603890776634
    2. 'b' → logprob: -3.654834508895874
    3. ' a' → logprob: -6.029834747314453
    4. 'self' → logprob: -7.654834747314453
    5. ' b' → logprob: -8.154834747314453
    6. '   ' → logprob: -9.154834747314453
    7. 'def' → logprob: -9.404834747314453
    8. '[a' → logprob: -9.779834747314453
    9. ' self' → logprob: -10.029834747314453
    10. ' the' → logprob: -10.404834747314453

Token 1280: ' range' (ID: 3352)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.22343650460243225
    2. 'a' → logprob: -2.2234365940093994
    3. 'range' → logprob: -2.4734365940093994
    4. '[b' → logprob: -6.22343635559082
    5. '[' → logprob: -6.47343635559082
    6. 'b' → logprob: -6.59843635559082
    7. ' range' → logprob: -6.72343635559082
    8. ' a' → logprob: -6.84843635559082
    9. ' [' → logprob: -8.09843635559082
    10. 'interval' → logprob: -9.47343635559082

Token 1281: ' [' (ID: 723)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00783599354326725
    2. 'a' → logprob: -5.382835865020752
    3. '[a' → logprob: -5.757835865020752
    4. ' a' → logprob: -10.25783634185791
    5. '   ' → logprob: -12.00783634185791
    6. '(' → logprob: -12.38283634185791
    7. ' (' → logprob: -12.88283634185791
    8. '(
' → logprob: -13.50783634185791
    9. 'self' → logprob: -13.75783634185791
    10. '(self' → logprob: -14.13283634185791

Token 1282: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.512236498361744e-07
    2. ' a' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.25
    4. ')a' → logprob: -18.25
    5. ')' → logprob: -18.875
    6. '_a' → logprob: -19.125
    7. '	a' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. ',a' → logprob: -20.25
    10. ',' → logprob: -21.5

Token 1283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005647073267027736
    2. ' ,' → logprob: -7.5005645751953125
    3. ',a' → logprob: -12.125564575195312
    4. ',b' → logprob: -12.625564575195312
    5. '_,' → logprob: -14.000564575195312
    6. '       ' → logprob: -14.500564575195312
    7. ',
' → logprob: -14.500564575195312
    8. 'a' → logprob: -14.500564575195312
    9. '   ' → logprob: -15.250564575195312
    10. '```' → logprob: -16.750564575195312

Token 1284: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. ',' → logprob: -18.125709533691406
    4. 'a' → logprob: -18.125709533691406
    5. ',b' → logprob: -18.250709533691406
    6. ')b' → logprob: -18.750709533691406
    7. '_b' → logprob: -20.250709533691406
    8. '	b' → logprob: -20.375709533691406
    9. '   ' → logprob: -20.875709533691406
    10. '>b' → logprob: -21.250709533691406

Token 1285: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. ' ,' → logprob: -10.625045776367188
    3. ')' → logprob: -11.375045776367188
    4. ',b' → logprob: -13.000045776367188
    5. '+' → logprob: -13.125045776367188
    6. '   ' → logprob: -13.250045776367188
    7. ',
' → logprob: -13.500045776367188
    8. ',a' → logprob: -13.875045776367188
    9. 'a' → logprob: -14.625045776367188
    10. '),' → logprob: -14.750045776367188

Token 1286: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010768946260213852
    2. ':' → logprob: -5.385768890380859
    3. ',' → logprob: -5.885768890380859
    4. ' (' → logprob: -6.135768890380859
    5. ':
' → logprob: -7.885768890380859
    6. '(' → logprob: -8.26076889038086
    7. '):
' → logprob: -8.51076889038086
    8. '   ' → logprob: -8.63576889038086
    9. ')' → logprob: -10.01076889038086
    10. '(a' → logprob: -10.51076889038086

Token 1287: ' returns' (ID: 7377)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2890726923942566
    2. ' res' → logprob: -1.9140727519989014
    3. 'returns' → logprob: -2.6640727519989014
    4. 'result' → logprob: -3.9140727519989014
    5. ' returns' → logprob: -4.664072513580322
    6. ' result' → logprob: -6.164072513580322
    7. '       ' → logprob: -6.914072513580322
    8. 'def' → logprob: -7.539072513580322
    9. '   ' → logprob: -8.53907299041748
    10. ' accum' → logprob: -8.78907299041748

Token 1288: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7954958821064793e-05
    2. ' self' → logprob: -11.250018119812012
    3. 'the' → logprob: -12.750018119812012
    4. '   ' → logprob: -13.750018119812012
    5. '       ' → logprob: -14.875018119812012
    6. '(self' → logprob: -15.250018119812012
    7. 'result' → logprob: -16.125017166137695
    8. '[self' → logprob: -16.125017166137695
    9. 'INF' → logprob: -16.500017166137695
    10. '=self' → logprob: -17.250017166137695

Token 1289: ' combined' (ID: 15890)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2200051546096802
    2. 'self' → logprob: -1.3450051546096802
    3. 'int' → logprob: -1.4700051546096802
    4. 'identity' → logprob: -1.8450051546096802
    5. 'value' → logprob: -2.9700050354003906
    6. 'default' → logprob: -6.470005035400391
    7. 'func' → logprob: -6.845005035400391
    8. 'res' → logprob: -7.345005035400391
    9. 'interval' → logprob: -8.09500503540039
    10. 'initial' → logprob: -8.47000503540039

Token 1290: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.502112090587616
    2. 'result' → logprob: -1.2521121501922607
    3. ' value' → logprob: -2.6271121501922607
    4. ' result' → logprob: -3.5021121501922607
    5. 'res' → logprob: -5.377111911773682
    6. ' res' → logprob: -6.877111911773682
    7. ' ' → logprob: -8.62711238861084
    8. 'val' → logprob: -8.87711238861084
    9. 'v' → logprob: -9.00211238861084
    10. '_result' → logprob: -9.00211238861084

Token 1291: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028200894594192505
    2. '(a' → logprob: -6.627820014953613
    3. '   ' → logprob: -7.252820014953613
    4. 'a' → logprob: -9.002820014953613
    5. ' (' → logprob: -9.002820014953613
    6. '        ' → logprob: -9.252820014953613
    7. ',' → logprob: -9.502820014953613
    8. ' a' → logprob: -9.627820014953613
    9. ' of' → logprob: -10.127820014953613
    10. '(' → logprob: -10.127820014953613

Token 1292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001005630983854644
    2. 'a' → logprob: -9.625100135803223
    3. '   ' → logprob: -10.500100135803223
    4. 'i' → logprob: -13.125100135803223
    5. ' a' → logprob: -13.375100135803223
    6. '	' → logprob: -13.875100135803223
    7. '```' → logprob: -14.625100135803223
    8. 'b' → logprob: -15.125100135803223
    9. '      ' → logprob: -15.375100135803223
    10. '(' → logprob: -15.500100135803223

Token 1293: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06537680327892303
    2. 'a' → logprob: -2.8153767585754395
    3. 'i' → logprob: -5.8153767585754395
    4. '   ' → logprob: -8.440377235412598
    5. '```' → logprob: -9.565377235412598
    6. 'l' → logprob: -9.940377235412598
    7. ' a' → logprob: -9.940377235412598
    8. ' i' → logprob: -11.315377235412598
    9. 'b' → logprob: -11.440377235412598
    10. '      ' → logprob: -12.440377235412598

Token 1294: 'param' (ID: 1355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000798788561951369
    2. 'def' → logprob: -7.75079870223999
    3. '   ' → logprob: -8.375799179077148
    4. 'int' → logprob: -9.875799179077148
    5. ' a' → logprob: -10.000799179077148
    6. 'b' → logprob: -10.625799179077148
    7. '       ' → logprob: -11.375799179077148
    8. ' ' → logprob: -14.250799179077148
    9. '  ' → logprob: -14.375799179077148
    10. '0' → logprob: -14.375799179077148

Token 1295: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ' a' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.25007438659668
    4. '	a' → logprob: -19.50007438659668
    5. '       ' → logprob: -20.25007438659668
    6. 'self' → logprob: -20.37507438659668
    7. 'int' → logprob: -20.75007438659668
    8. ' ' → logprob: -21.25007438659668
    9. '_a' → logprob: -21.37507438659668
    10. '  ' → logprob: -22.37507438659668

Token 1296: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008632226963527501
    2. ' ,' → logprob: -7.625863075256348
    3. ',a' → logprob: -8.250863075256348
    4. ':' → logprob: -10.375863075256348
    5. '_,' → logprob: -10.750863075256348
    6. '=' → logprob: -10.750863075256348
    7. '   ' → logprob: -11.250863075256348
    8. ',
' → logprob: -11.250863075256348
    9. 'a' → logprob: -12.375863075256348
    10. ',b' → logprob: -12.500863075256348

Token 1297: ' Left' (ID: 26982)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.041178811341524124
    2. ' a' → logprob: -3.2911787033081055
    3. 'int' → logprob: -6.0411787033081055
    4. ' int' → logprob: -7.7911787033081055
    5. 'b' → logprob: -8.541178703308105
    6. '<|end|>' → logprob: -10.166178703308105
    7. 'def' → logprob: -11.166178703308105
    8. ' ' → logprob: -11.291178703308105
    9. '(a' → logprob: -11.291178703308105
    10. 'i' → logprob: -11.541178703308105

Token 1298: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008082936517894268
    2. ' ,' → logprob: -4.883082866668701
    3. 'a' → logprob: -8.00808334350586
    4. ',a' → logprob: -9.75808334350586
    5. ',
' → logprob: -10.00808334350586
    6. '_,' → logprob: -11.75808334350586
    7. '=' → logprob: -11.88308334350586
    8. ' a' → logprob: -12.25808334350586
    9. ',b' → logprob: -12.38308334350586
    10. ' ,
' → logprob: -13.00808334350586

Token 1299: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001382974674925208
    2. ' ,' → logprob: -7.626382827758789
    3. '<|end|>' → logprob: -7.751382827758789
    4. ',
' → logprob: -8.876382827758789
    5. '   ' → logprob: -9.126382827758789
    6. '=' → logprob: -9.626382827758789
    7. '<|end|>' → logprob: -10.001382827758789
    8. '       ' → logprob: -10.876382827758789
    9. 'a' → logprob: -11.001382827758789
    10. ',a' → logprob: -11.501382827758789

Token 1300: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1007707342505455
    2. ' a' → logprob: -2.3507707118988037
    3. ' the' → logprob: -8.850770950317383
    4. 'b' → logprob: -8.975770950317383
    5. 'range' → logprob: -9.350770950317383
    6. 'query' → logprob: -9.600770950317383
    7. 'the' → logprob: -9.975770950317383
    8. ' query' → logprob: -10.475770950317383
    9. ' range' → logprob: -10.725770950317383
    10. ')' → logprob: -10.975770950317383

Token 1301: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010952114826068282
    2. ',
' → logprob: -7.751095294952393
    3. 'a' → logprob: -7.876095294952393
    4. ' ,' → logprob: -8.501094818115234
    5. ',a' → logprob: -9.626094818115234
    6. ' (' → logprob: -13.001094818115234
    7. '       ' → logprob: -13.126094818115234
    8. ',b' → logprob: -13.126094818115234
    9. ' a' → logprob: -13.501094818115234
    10. '   ' → logprob: -13.751094818115234

Token 1302: 'inclusive' (ID: 186093)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7898492217063904
    2. ' a' → logprob: -0.9148492217063904
    3. ')' → logprob: -2.789849281311035
    4. ',' → logprob: -2.789849281311035
    5. '0' → logprob: -4.914849281311035
    6. 'int' → logprob: -5.289849281311035
    7. ' ,' → logprob: -6.164849281311035
    8. '       ' → logprob: -6.664849281311035
    9. '):
' → logprob: -6.914849281311035
    10. ',a' → logprob: -7.164849281311035

Token 1303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03507937490940094
    2. ')' → logprob: -3.9100794792175293
    3. ')
' → logprob: -4.785079479217529
    4. '       ' → logprob: -6.285079479217529
    5. '):
' → logprob: -6.285079479217529
    6. ',
' → logprob: -7.160079479217529
    7. '   ' → logprob: -7.910079479217529
    8. '),' → logprob: -7.910079479217529
    9. '<|end|>' → logprob: -7.910079479217529
    10. '=' → logprob: -8.785079002380371

Token 1304: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3881129324436188
    2. ' b' → logprob: -1.1381129026412964
    3. '0' → logprob: -7.263113021850586
    4. ',' → logprob: -7.763113021850586
    5. '   ' → logprob: -9.763113021850586
    6. '       ' → logprob: -11.138113021850586
    7. 'a' → logprob: -11.388113021850586
    8. ')' → logprob: -11.513113021850586
    9. ' ,' → logprob: -11.763113021850586
    10. ' ' → logprob: -12.388113021850586

Token 1305: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45622578263282776
    2. 'a' → logprob: -1.2062257528305054
    3. ')' → logprob: -3.206225872039795
    4. '0' → logprob: -4.331225872039795
    5. ' b' → logprob: -5.081225872039795
    6. ' a' → logprob: -6.581225872039795
    7. '),' → logprob: -6.706225872039795
    8. '```' → logprob: -6.956225872039795
    9. ',' → logprob: -7.081225872039795
    10. '   ' → logprob: -7.206225872039795

Token 1306: '-index' (ID: 45533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11827296763658524
    2. ')' → logprob: -2.9932730197906494
    3. '<|end|>' → logprob: -3.1182730197906494
    4. '=' → logprob: -5.36827278137207
    5. '   ' → logprob: -5.61827278137207
    6. '):
' → logprob: -5.86827278137207
    7. '<|end|>' → logprob: -6.36827278137207
    8. '),' → logprob: -6.49327278137207
    9. ' ,' → logprob: -7.36827278137207
    10. '       ' → logprob: -7.74327278137207

Token 1307: 'ed' (ID: 295)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24300947785377502
    2. 'a' → logprob: -2.118009567260742
    3. '0' → logprob: -3.243009567260742
    4. ' a' → logprob: -3.868009567260742
    5. '),' → logprob: -4.743009567260742
    6. '   ' → logprob: -4.868009567260742
    7. ')' → logprob: -5.118009567260742
    8. '=' → logprob: -5.618009567260742
    9. ' ,' → logprob: -6.243009567260742
    10. ',
' → logprob: -6.368009567260742

Token 1308: ').
' (ID: 6294)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05387295037508011
    2. '):
' → logprob: -3.928873062133789
    3. ')' → logprob: -4.303873062133789
    4. ',' → logprob: -4.303873062133789
    5. '       ' → logprob: -5.553873062133789
    6. '),' → logprob: -6.553873062133789
    7. '   ' → logprob: -8.928873062133789
    8. '),
' → logprob: -9.053873062133789
    9. '):' → logprob: -9.303873062133789
    10. ' )
' → logprob: -10.553873062133789

Token 1309: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.27689141035079956
    2. '       ' → logprob: -1.6518914699554443
    3. ' b' → logprob: -3.0268914699554443
    4. ',' → logprob: -6.651891231536865
    5. '   ' → logprob: -8.276891708374023
    6. ',b' → logprob: -9.401891708374023
    7. ' ,' → logprob: -10.276891708374023
    8. 'a' → logprob: -11.151891708374023
    9. '    ' → logprob: -12.276891708374023
    10. ' ' → logprob: -12.651891708374023

Token 1310: ' :' (ID: 712)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1138569787144661
    2. 'b' → logprob: -2.2388570308685303
    3. '   ' → logprob: -6.988856792449951
    4. '    ' → logprob: -9.36385726928711
    5. '       ' → logprob: -11.23885726928711
    6. ',' → logprob: -11.98885726928711
    7. '	b' → logprob: -13.61385726928711
    8. ' ' → logprob: -13.73885726928711
    9. '```' → logprob: -13.98885726928711
    10. ' ' → logprob: -14.36385726928711

Token 1311: 'param' (ID: 1355)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.628177642822266
    4. '	b' → logprob: -19.753177642822266
    5. 'a' → logprob: -20.878177642822266
    6. '$b' → logprob: -22.003177642822266
    7. ')b' → logprob: -22.128177642822266
    8. '       ' → logprob: -22.128177642822266
    9. ':b' → logprob: -22.753177642822266
    10. ''b' → logprob: -22.753177642822266

Token 1312: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07888989895582199
    2. ' b' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.078889846801758
    4. '	b' → logprob: -16.828889846801758
    5. '$b' → logprob: -18.953889846801758
    6. ')b' → logprob: -19.828889846801758
    7. ' ' → logprob: -20.203889846801758
    8. '       ' → logprob: -20.203889846801758
    9. '>b' → logprob: -20.328889846801758
    10. 'a' → logprob: -20.828889846801758

Token 1313: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17948442697525024
    2. ':' → logprob: -1.9294843673706055
    3. '   ' → logprob: -4.9294843673706055
    4. '=' → logprob: -5.1794843673706055
    5. ')' → logprob: -5.9294843673706055
    6. '<|end|>' → logprob: -6.9294843673706055
    7. ' ,' → logprob: -7.1794843673706055
    8. '):' → logprob: -7.3044843673706055
    9. '):
' → logprob: -8.679484367370605
    10. ' =' → logprob: -8.679484367370605

Token 1314: ' Right' (ID: 16354)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38687264919281006
    2. 'b' → logprob: -1.13687264919281
    3. ' int' → logprob: -14.511872291564941
    4. 'int' → logprob: -15.011872291564941
    5. '   ' → logprob: -15.636872291564941
    6. ' def' → logprob: -15.761872291564941
    7. '```' → logprob: -16.636873245239258
    8. '>b' → logprob: -17.011873245239258
    9. ')b' → logprob: -17.136873245239258
    10. '	b' → logprob: -17.636873245239258

Token 1315: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16827255487442017
    2. 'a' → logprob: -2.5432724952697754
    3. ' ,' → logprob: -2.9182724952697754
    4. ' a' → logprob: -4.543272495269775
    5. ')' → logprob: -6.043272495269775
    6. ',a' → logprob: -6.043272495269775
    7. '```' → logprob: -6.543272495269775
    8. '   ' → logprob: -7.043272495269775
    9. 'i' → logprob: -7.043272495269775
    10. ',
' → logprob: -7.668272495269775

Token 1316: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1317: ' range' (ID: 3352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12695161998271942
    2. ' b' → logprob: -2.1269516944885254
    3. ')' → logprob: -11.751951217651367
    4. ')b' → logprob: -11.751951217651367
    5. ' the' → logprob: -13.126951217651367
    6. '	b' → logprob: -13.251951217651367
    7. 'the' → logprob: -14.251951217651367
    8. '```' → logprob: -14.501951217651367
    9. '   ' → logprob: -14.751951217651367
    10. ' range' → logprob: -14.876951217651367

Token 1318: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9002404808998108
    2. ' (' → logprob: -1.275240421295166
    3. '       ' → logprob: -2.150240421295166
    4. ',' → logprob: -2.900240421295166
    5. '   ' → logprob: -3.150240421295166
    6. '<|end|>' → logprob: -3.400240421295166
    7. '):
' → logprob: -3.900240421295166
    8. '):' → logprob: -4.900240421295166
    9. '<|end|>' → logprob: -4.900240421295166
    10. '    ' → logprob: -5.275240421295166

Token 1319: 'exclusive' (ID: 196957)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004747553262859583
    2. ' b' → logprob: -5.37974739074707
    3. '   ' → logprob: -9.62974739074707
    4. ')' → logprob: -10.50474739074707
    5. '       ' → logprob: -11.62974739074707
    6. '```' → logprob: -12.12974739074707
    7. ')b' → logprob: -12.25474739074707
    8. '):' → logprob: -13.12974739074707
    9. 'a' → logprob: -13.50474739074707
    10. 'None' → logprob: -13.62974739074707

Token 1320: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16866418719291687
    2. ')' → logprob: -1.9186642169952393
    3. ')
' → logprob: -5.04366397857666
    4. '):' → logprob: -6.91866397857666
    5. ').' → logprob: -8.16866397857666
    6. ',' → logprob: -8.91866397857666
    7. '       ' → logprob: -9.16866397857666
    8. ')>
' → logprob: -9.16866397857666
    9. '):

' → logprob: -9.54366397857666
    10. ')**' → logprob: -10.16866397857666

Token 1321: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014190302230417728
    2. ' b' → logprob: -4.264190196990967
    3. '   ' → logprob: -10.889190673828125
    4. ')' → logprob: -12.014190673828125
    5. ')b' → logprob: -14.264190673828125
    6. 'None' → logprob: -14.514190673828125
    7. '       ' → logprob: -15.389190673828125
    8. ' None' → logprob: -15.764190673828125
    9. ' ' → logprob: -16.139190673828125
    10. '```' → logprob: -16.139190673828125

Token 1322: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4617256056226324e-05
    2. ')' → logprob: -12.000014305114746
    3. ' b' → logprob: -12.250014305114746
    4. '   ' → logprob: -13.375014305114746
    5. ')b' → logprob: -14.125014305114746
    6. '1' → logprob: -14.500014305114746
    7. '```' → logprob: -15.750014305114746
    8. '>b' → logprob: -16.125015258789062
    9. '):' → logprob: -16.250015258789062
    10. '`' → logprob: -16.750015258789062

Token 1323: '-index' (ID: 45533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15085823833942413
    2. ')' → logprob: -2.775858163833618
    3. '<|end|>' → logprob: -3.525858163833618
    4. '):
' → logprob: -4.275858402252197
    5. ':' → logprob: -4.900858402252197
    6. 'b' → logprob: -5.150858402252197
    7. '):' → logprob: -5.775858402252197
    8. '       ' → logprob: -5.900858402252197
    9. '<|end|>' → logprob: -6.150858402252197
    10. '=None' → logprob: -6.400858402252197

Token 1324: 'ed' (ID: 295)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.930407702922821
    2. '1' → logprob: -1.3054077625274658
    3. ')
' → logprob: -1.8054077625274658
    4. '0' → logprob: -2.555407762527466
    5. '   ' → logprob: -3.680407762527466
    6. '):
' → logprob: -3.805407762527466
    7. 'a' → logprob: -4.430407524108887
    8. 'b' → logprob: -4.555407524108887
    9. ' b' → logprob: -4.805407524108887
    10. '       ' → logprob: -5.305407524108887

Token 1325: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.34825173020362854
    2. ')
' → logprob: -1.8482517004013062
    3. ')' → logprob: -2.0982518196105957
    4. '):' → logprob: -4.723251819610596
    5. '       ' → logprob: -5.473251819610596
    6. '   ' → logprob: -7.223251819610596
    7. '):
' → logprob: -10.473251342773438
    8. ')`' → logprob: -11.473251342773438
    9. '):

' → logprob: -11.723251342773438
    10. ')
' → logprob: -12.098251342773438

Token 1326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.966313281329349e-05
    2. '   ' → logprob: -11.125049591064453
    3. '```' → logprob: -11.125049591064453
    4. 'a' → logprob: -11.500049591064453
    5. 'i' → logprob: -12.750049591064453
    6. ')' → logprob: -13.375049591064453
    7. '	' → logprob: -13.875049591064453
    8. '):
' → logprob: -13.875049591064453
    9. '
' → logprob: -14.250049591064453
    10. 'result' → logprob: -14.625049591064453

Token 1327: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029510358348488808
    2. 'res' → logprob: -3.654510259628296
    3. 'result' → logprob: -5.904510498046875
    4. 'l' → logprob: -8.279510498046875
    5. 'a' → logprob: -9.154510498046875
    6. '   ' → logprob: -9.904510498046875
    7. ' res' → logprob: -10.904510498046875
    8. 'ret' → logprob: -11.029510498046875
    9. 's' → logprob: -11.529510498046875
    10. 'r' → logprob: -11.904510498046875

Token 1328: 'return' (ID: 1034)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2471589798224159e-05
    2. ' b' → logprob: -11.500012397766113
    3. '       ' → logprob: -13.500012397766113
    4. '   ' → logprob: -14.375012397766113
    5. 'def' → logprob: -15.750012397766113
    6. 'self' → logprob: -16.00001335144043
    7. 'return' → logprob: -17.00001335144043
    8. '           ' → logprob: -17.62501335144043
    9. '     ' → logprob: -18.12501335144043
    10. ')b' → logprob: -18.37501335144043

Token 1329: ':' (ID: 25)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.411803662776947
    2. 'self' → logprob: -1.6618037223815918
    3. '       ' → logprob: -2.036803722381592
    4. ' =' → logprob: -4.661803722381592
    5. '=' → logprob: -5.536803722381592
    6. '   ' → logprob: -6.286803722381592
    7. ':' → logprob: -7.661803722381592
    8. 'def' → logprob: -8.286803245544434
    9. '        ' → logprob: -8.411803245544434
    10. '    ' → logprob: -8.536803245544434

Token 1330: ' Combined' (ID: 95922)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ' self' → logprob: -12.500008583068848
    3. 'res' → logprob: -12.875008583068848
    4. '   ' → logprob: -13.500008583068848
    5. 'result' → logprob: -14.625008583068848
    6. '       ' → logprob: -16.50000762939453
    7. 'return' → logprob: -17.75000762939453
    8. '
' → logprob: -18.50000762939453
    9. 'ret' → logprob: -18.87500762939453
    10. 'r' → logprob: -19.75000762939453

Token 1331: ' value' (ID: 1432)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24469734728336334
    2. ' value' → logprob: -2.619697332382202
    3. ' result' → logprob: -2.744697332382202
    4. 'self' → logprob: -2.869697332382202
    5. 'value' → logprob: -4.869697570800781
    6. '_value' → logprob: -5.369697570800781
    7. 'result' → logprob: -5.619697570800781
    8. '_result' → logprob: -5.744697570800781
    9. ' _' → logprob: -6.494697570800781
    10. ' ' → logprob: -7.244697570800781

Token 1332: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01684735156595707
    2. '(self' → logprob: -5.141847133636475
    3. ' =' → logprob: -5.391847133636475
    4. '=' → logprob: -6.016847133636475
    5. '   ' → logprob: -6.266847133636475
    6. '
' → logprob: -7.266847133636475
    7. '(a' → logprob: -7.766847133636475
    8. '           ' → logprob: -8.391847610473633
    9. 'self' → logprob: -8.766847610473633
    10. ' (' → logprob: -9.516847610473633

Token 1333: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001727776019833982
    2. ' a' → logprob: -6.37672758102417
    3. 'b' → logprob: -11.126728057861328
    4. 'self' → logprob: -12.251728057861328
    5. '   ' → logprob: -12.626728057861328
    6. '[a' → logprob: -13.876728057861328
    7. ' b' → logprob: -14.626728057861328
    8. ' self' → logprob: -14.876728057861328
    9. '       ' → logprob: -15.376728057861328
    10. '(a' → logprob: -15.626728057861328

Token 1334: ' range' (ID: 3352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8429815769195557
    2. 'a' → logprob: -0.9679815769195557
    3. 'range' → logprob: -2.7179815769195557
    4. ' b' → logprob: -2.8429815769195557
    5. ' a' → logprob: -3.4679815769195557
    6. ' range' → logprob: -3.4679815769195557
    7. 'segment' → logprob: -6.967981338500977
    8. ' segment' → logprob: -7.717981338500977
    9. 'query' → logprob: -8.092981338500977
    10. ' ' → logprob: -8.342981338500977

Token 1335: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12464923411607742
    2. '(a' → logprob: -2.8746492862701416
    3. '[a' → logprob: -3.1246492862701416
    4. ' a' → logprob: -4.8746490478515625
    5. '   ' → logprob: -5.4996490478515625
    6. ' (' → logprob: -6.3746490478515625
    7. '       ' → logprob: -6.3746490478515625
    8. ')' → logprob: -8.124649047851562
    9. '(' → logprob: -8.499649047851562
    10. '
' → logprob: -8.624649047851562

Token 1336: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.500003814697266
    4. '	a' → logprob: -21.500003814697266
    5. '
' → logprob: -22.000003814697266
    6. ')a' → logprob: -22.000003814697266
    7. '_a' → logprob: -22.500003814697266
    8. ',a' → logprob: -23.625003814697266
    9. '#a' → logprob: -23.875003814697266
    10. ')' → logprob: -23.875003814697266

Token 1337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017773995641618967
    2. ',b' → logprob: -6.501777172088623
    3. ' ,' → logprob: -8.251777648925781
    4. '   ' → logprob: -11.626777648925781
    5. ',
' → logprob: -12.501777648925781
    6. 'b' → logprob: -14.501777648925781
    7. ',a' → logprob: -15.126777648925781
    8. ' ' → logprob: -15.751777648925781
    9. '
' → logprob: -16.00177764892578
    10. 'a' → logprob: -16.62677764892578

Token 1338: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. '   ' → logprob: -21.875911712646484
    4. '	b' → logprob: -22.750911712646484
    5. ' ' → logprob: -23.875911712646484
    6. ')b' → logprob: -24.000911712646484
    7. '```' → logprob: -24.625911712646484
    8. '​' → logprob: -24.750911712646484
    9. '_b' → logprob: -25.000911712646484
    10. '$b' → logprob: -25.250911712646484

Token 1339: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000915039679966867
    2. ')
' → logprob: -7.000915050506592
    3. '   ' → logprob: -13.625914573669434
    4. ')`' → logprob: -14.250914573669434
    5. '       ' → logprob: -14.750914573669434
    6. '))' → logprob: -15.375914573669434
    7. ' )' → logprob: -15.625914573669434
    8. ')`
' → logprob: -15.875914573669434
    9. '):' → logprob: -16.12591552734375
    10. ']' → logprob: -16.12591552734375

Token 1340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009501680615358055
    2. 'a' → logprob: -7.375950336456299
    3. 'i' → logprob: -8.25094985961914
    4. '   ' → logprob: -10.75094985961914
    5. '```' → logprob: -11.12594985961914
    6. '	' → logprob: -11.37594985961914
    7. 'b' → logprob: -12.12594985961914
    8. ' i' → logprob: -13.12594985961914
    9. ' a' → logprob: -13.12594985961914
    10. 'result' → logprob: -14.25094985961914

Token 1341: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010202347300946712
    2. 'res' → logprob: -4.760202407836914
    3. 'result' → logprob: -7.260202407836914
    4. 'a' → logprob: -8.385202407836914
    5. '   ' → logprob: -8.385202407836914
    6. 's' → logprob: -8.635202407836914
    7. 'l' → logprob: -9.010202407836914
    8. '	' → logprob: -10.260202407836914
    9. 'r' → logprob: -10.385202407836914
    10. ' res' → logprob: -10.635202407836914

Token 1342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004018803127110004
    2. 'res' → logprob: -5.629018783569336
    3. '   ' → logprob: -8.504018783569336
    4. 'result' → logprob: -8.754018783569336
    5. 's' → logprob: -10.504018783569336
    6. 'l' → logprob: -10.879018783569336
    7. '	' → logprob: -13.004018783569336
    8. 'r' → logprob: -13.129018783569336
    9. 'ret' → logprob: -13.254018783569336
    10. 'a' → logprob: -13.379018783569336

Token 1343: ' l' (ID: 305)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1382368505001068
    2. 'l' (adapté à ' l') → logprob: -2.3882367610931396
    3. '       ' → logprob: -3.3882367610931396
    4. 'a' → logprob: -6.013236999511719
    5. 's' → logprob: -7.763236999511719
    6. 'result' → logprob: -7.763236999511719
    7. '   ' → logprob: -9.013236999511719
    8. 'ret' → logprob: -9.263236999511719
    9. ' res' → logprob: -11.263236999511719
    10. 'L' → logprob: -12.013236999511719

Token 1344: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005983070004731417
    2. ' =' → logprob: -5.755982875823975
    3. '=' → logprob: -6.005982875823975
    4. '   ' → logprob: -8.630983352661133
    5. ' ,' → logprob: -9.005983352661133
    6. '       ' → logprob: -10.755983352661133
    7. ',l' → logprob: -12.505983352661133
    8. '    ' → logprob: -12.880983352661133
    9. ',b' → logprob: -13.505983352661133
    10. 'eft' → logprob: -13.755983352661133

Token 1345: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8206473871250637e-05
    2. 'self' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.750028610229492
    4. ' a' → logprob: -15.250028610229492
    5. '       ' → logprob: -18.375028610229492
    6. '	a' → logprob: -18.750028610229492
    7. ' self' → logprob: -19.375028610229492
    8. '    
' → logprob: -19.500028610229492
    9. '(a' → logprob: -19.750028610229492
    10. '     ' → logprob: -20.125028610229492

Token 1346: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5903705954551697
    2. ' +' → logprob: -0.9653705954551697
    3. '+b' → logprob: -2.9653706550598145
    4. '       ' → logprob: -4.9653706550598145
    5. '+=' → logprob: -5.4653706550598145
    6. '+r' → logprob: -7.0903706550598145
    7. 'b' → logprob: -7.5903706550598145
    8. '+
' → logprob: -8.965370178222656
    9. ' +=' → logprob: -9.090370178222656
    10. '+n' → logprob: -9.090370178222656

Token 1347: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.941850526549388e-06
    2. ' self' → logprob: -11.875007629394531
    3. '(self' → logprob: -14.625007629394531
    4. '[self' → logprob: -15.625007629394531
    5. '       ' → logprob: -15.875007629394531
    6. '   ' → logprob: -16.12500762939453
    7. '0' → logprob: -16.75000762939453
    8. '
' → logprob: -17.25000762939453
    9. '=self' → logprob: -17.87500762939453
    10. '	self' → logprob: -18.50000762939453

Token 1348: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0032791912090033293
    2. '.n' → logprob: -6.003279209136963
    3. 'self' → logprob: -7.128279209136963
    4. '_n' → logprob: -14.753278732299805
    5. '<|end|>' → logprob: -15.503278732299805
    6. '<|end|>' → logprob: -15.628278732299805
    7. '   ' → logprob: -16.503278732299805
    8. '	n' → logprob: -17.003278732299805
    9. ' n' → logprob: -17.003278732299805
    10. '.self' → logprob: -17.253278732299805

Token 1349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. 'n' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.87500286102295
    4. '<|end|>' → logprob: -15.50000286102295
    5. 'self' → logprob: -16.375003814697266
    6. '<|end|>' → logprob: -16.500003814697266
    7. '₂' → logprob: -16.625003814697266
    8. ' ' → logprob: -18.000003814697266
    9. '_n' → logprob: -18.125003814697266
    10. '       ' → logprob: -18.250003814697266

Token 1350: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00632430100813508
    2. '       ' → logprob: -5.131324291229248
    3. ' r' → logprob: -8.381324768066406
    4. ',r' → logprob: -9.006324768066406
    5. ';r' → logprob: -10.506324768066406
    6. '	r' → logprob: -12.506324768066406
    7. '+r' → logprob: -12.506324768066406
    8. ',' → logprob: -13.006324768066406
    9. ';' → logprob: -13.381324768066406
    10. '_r' → logprob: -13.756324768066406

Token 1351: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01860089600086212
    2. '       ' → logprob: -4.018600940704346
    3. ' r' → logprob: -7.768600940704346
    4. '   ' → logprob: -11.518600463867188
    5. '	r' → logprob: -11.518600463867188
    6. ',r' → logprob: -12.143600463867188
    7. ',' → logprob: -14.268600463867188
    8. '_r' → logprob: -14.893600463867188
    9. ';r' → logprob: -15.018600463867188
    10. '.r' → logprob: -15.018600463867188

Token 1352: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -16.25
    3. '   ' → logprob: -19.75
    4. '	r' → logprob: -23.25
    5. '       ' → logprob: -23.625
    6. 'res' → logprob: -24.25
    7. '    
' → logprob: -26.125
    8. '
' → logprob: -26.125
    9. '_r' → logprob: -26.875
    10. 'rans' → logprob: -27.75

Token 1353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788961797952652
    2. ' =' → logprob: -2.5788962841033936
    3. 'b' → logprob: -13.078896522521973
    4. 'r' → logprob: -13.328896522521973
    5. '   ' → logprob: -13.578896522521973
    6. '=b' → logprob: -14.078896522521973
    7. '=r' → logprob: -14.828896522521973
    8. ' r' → logprob: -15.828896522521973
    9. '       ' → logprob: -16.328895568847656
    10. ' b' → logprob: -17.453895568847656

Token 1354: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -15.75
    3. '   ' → logprob: -19.25
    4. '	b' → logprob: -19.25
    5. '       ' → logprob: -20.75
    6. '$b' → logprob: -23.375
    7. 'def' → logprob: -23.5
    8. '\b' → logprob: -23.625
    9. 'self' → logprob: -23.75
    10. '(b' → logprob: -24.375

Token 1355: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04304440692067146
    2. '+' → logprob: -3.168044328689575
    3. '       ' → logprob: -11.043044090270996
    4. '+self' → logprob: -12.418044090270996
    5. '+l' → logprob: -12.418044090270996
    6. '=' → logprob: -12.543044090270996
    7. '        ' → logprob: -12.793044090270996
    8. '   ' → logprob: -12.918044090270996
    9. '+
' → logprob: -12.918044090270996
    10. ' +
' → logprob: -13.043044090270996

Token 1356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.2729995988775045e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -17.6250057220459
    4. '[self' → logprob: -19.1250057220459
    5. '       ' → logprob: -19.5000057220459
    6. '
' → logprob: -19.6250057220459
    7. '	self' → logprob: -19.8750057220459
    8. '0' → logprob: -20.2500057220459
    9. '=self' → logprob: -20.3750057220459
    10. '   ' → logprob: -20.5000057220459

Token 1357: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04053190350532532
    2. 'self' → logprob: -3.290531873703003
    3. '.n' → logprob: -6.040532112121582
    4. '_n' → logprob: -9.165532112121582
    5. ' self' → logprob: -13.665532112121582
    6. '       ' → logprob: -15.540532112121582
    7. ' n' → logprob: -15.540532112121582
    8. '   ' → logprob: -15.665532112121582
    9. '```' → logprob: -16.040531158447266
    10. '	n' → logprob: -16.165531158447266

Token 1358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024794621858745813
    2. 'self' → logprob: -6.002479553222656
    3. 'n' → logprob: -13.127479553222656
    4. '   ' → logprob: -13.877479553222656
    5. ' ' → logprob: -15.127479553222656
    6. ' self' → logprob: -15.752479553222656
    7. 's' → logprob: -16.627479553222656
    8. '```' → logprob: -16.627479553222656
    9. '       ' → logprob: -16.877479553222656
    10. '0' → logprob: -17.502479553222656

Token 1359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012826398946344852
    2. 'result' → logprob: -4.887826442718506
    3. 'while' → logprob: -5.512826442718506
    4. 'res' → logprob: -8.262825965881348
    5. '<|end|>' → logprob: -8.887825965881348
    6. '
' → logprob: -9.012825965881348
    7. ',' → logprob: -9.387825965881348
    8. 'token' → logprob: -9.387825965881348
    9. 'l' → logprob: -9.637825965881348
    10. ' while' → logprob: -9.762825965881348

Token 1360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09339597821235657
    2. 'res' → logprob: -2.593395948410034
    3. 'result' → logprob: -4.593396186828613
    4. 'while' → logprob: -5.593396186828613
    5. ' res' → logprob: -8.843396186828613
    6. 's' → logprob: -8.843396186828613
    7. '```' → logprob: -9.218396186828613
    8. '   ' → logprob: -9.718396186828613
    9. ' while' → logprob: -10.093396186828613
    10. 'val' → logprob: -10.593396186828613

Token 1361: ' res' (ID: 694)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47422435879707336
    2. 'res' (adapté à ' res') → logprob: -0.974224328994751
    3. 'sm' → logprob: -9.474224090576172
    4. 'v' → logprob: -10.599224090576172
    5. '       ' → logprob: -11.099224090576172
    6. '   ' → logprob: -11.349224090576172
    7. 'ret' → logprob: -12.099224090576172
    8. 'S' → logprob: -12.974224090576172
    9. ' res' → logprob: -13.224224090576172
    10. 'val' → logprob: -13.474224090576172

Token 1362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520695626735687
    2. '=' → logprob: -1.5020695924758911
    3. '=self' → logprob: -8.877069473266602
    4. 'self' → logprob: -15.877069473266602
    5. '   ' → logprob: -16.0020694732666
    6. ' ' → logprob: -16.0020694732666
    7. '=_' → logprob: -16.6270694732666
    8. '_=' → logprob: -16.6270694732666
    9. '       ' → logprob: -16.8770694732666
    10. ' self' → logprob: -17.2520694732666

Token 1363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. ' self' → logprob: -14.500000953674316
    3. '       ' → logprob: -16.125
    4. '   ' → logprob: -16.5
    5. '           ' → logprob: -21.5
    6. '     ' → logprob: -22.0
    7. ' ' → logprob: -22.0
    8. '  ' → logprob: -22.0
    9. '    ' → logprob: -22.25
    10. '	self' → logprob: -22.25

Token 1364: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.0006215345347300172
    2. 'self' → logprob: -7.500621318817139
    3. 'int' → logprob: -10.125621795654297
    4. '.self' → logprob: -10.625621795654297
    5. '   ' → logprob: -13.125621795654297
    6. ':int' → logprob: -13.875621795654297
    7. '.INT' → logprob: -14.875621795654297
    8. '       ' → logprob: -15.250621795654297
    9. '.' → logprob: -15.500621795654297
    10. '.Int' → logprob: -16.125621795654297

Token 1365: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. 'erv' → logprob: -14.625000953674316
    3. 'val' → logprob: -15.125000953674316
    4. 'V' → logprob: -17.125001907348633
    5. 'self' → logprob: -17.500001907348633
    6. 'var' → logprob: -17.750001907348633
    7. '#' → logprob: -17.750001907348633
    8. 'в' → logprob: -17.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. 'erval' → logprob: -18.000001907348633

Token 1366: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004374638374429196
    2. ' while' → logprob: -8.87543773651123
    3. '        
' → logprob: -9.37543773651123
    4. '   ' → logprob: -10.12543773651123
    5. '<|end|>' → logprob: -10.25043773651123
    6. 'while' → logprob: -10.37543773651123
    7. '	' → logprob: -10.62543773651123
    8. ' ' → logprob: -11.12543773651123
    9. ' 
' → logprob: -11.37543773651123
    10. '	while' → logprob: -11.62543773651123

Token 1368: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0009722061222419143
    2. ' while' → logprob: -7.250972270965576
    3. '       ' → logprob: -8.250971794128418
    4. '	while' → logprob: -14.125971794128418
    5. 'While' → logprob: -15.250971794128418
    6. '   ' → logprob: -15.750971794128418
    7. '```' → logprob: -17.875972747802734
    8. '        
' → logprob: -18.125972747802734
    9. '
' → logprob: -18.500972747802734
    10. ' While' → logprob: -20.000972747802734

Token 1369: ' Left' (ID: 26982)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.9361264946837764e-07
    2. ' while' → logprob: -16.125
    3. 'While' → logprob: -16.875
    4. '       ' → logprob: -17.625
    5. '
' → logprob: -19.75
    6. '   ' → logprob: -21.0
    7. '	while' → logprob: -21.125
    8. '```' → logprob: -21.25
    9. '        
' → logprob: -22.5
    10. 'l' → logprob: -23.375

Token 1370: ' and' (ID: 326)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12366517633199692
    2. 'l' → logprob: -2.8736650943756104
    3. ' while' → logprob: -3.1236650943756104
    4. '   ' → logprob: -5.8736653327941895
    5. 'res' → logprob: -6.1236653327941895
    6. '
' → logprob: -6.2486653327941895
    7. '<' → logprob: -6.6236653327941895
    8. '+=' → logprob: -6.6236653327941895
    9. ' l' → logprob: -6.8736653327941895
    10. '=' → logprob: -6.8736653327941895

Token 1371: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023606132715940475
    2. 'right' → logprob: -3.773606061935425
    3. 'res' → logprob: -8.898606300354004
    4. ' r' → logprob: -9.148606300354004
    5. 'while' → logprob: -9.523606300354004
    6. ' right' → logprob: -10.898606300354004
    7. '       ' → logprob: -11.773606300354004
    8. 'rans' → logprob: -12.273606300354004
    9. '   ' → logprob: -12.523606300354004
    10. '=' → logprob: -12.898606300354004

Token 1372: ' intervals' (ID: 49900)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3297729194164276
    2. 'while' → logprob: -1.32977294921875
    3. '+=' → logprob: -5.45477294921875
    4. '   ' → logprob: -5.95477294921875
    5. '=' → logprob: -6.07977294921875
    6. ' while' → logprob: -6.20477294921875
    7. ' l' → logprob: -6.20477294921875
    8. 'tokens' → logprob: -7.20477294921875
    9. 'res' → logprob: -7.70477294921875
    10. '
' → logprob: -7.95477294921875

Token 1373: ' handled' (ID: 29594)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2782098054885864
    2. 'while' → logprob: -1.7782098054885864
    3. ' >>=' → logprob: -1.9032098054885864
    4. '       ' → logprob: -2.153209686279297
    5. ' =' → logprob: -2.153209686279297
    6. 'l' → logprob: -2.528209686279297
    7. ' while' → logprob: -4.028209686279297
    8. '=l' → logprob: -4.278209686279297
    9. '+=' → logprob: -4.403209686279297
    10. ' l' → logprob: -4.403209686279297

Token 1374: ' separately' (ID: 37741)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3127497434616089
    2. '=' → logprob: -1.9377497434616089
    3. ' while' → logprob: -2.9377498626708984
    4. 'l' → logprob: -3.4377498626708984
    5. ',' → logprob: -4.687749862670898
    6. '+=' → logprob: -4.812749862670898
    7. '       ' → logprob: -4.937749862670898
    8. '>>' → logprob: -6.062749862670898
    9. ' >>=' → logprob: -6.312749862670898
    10. ' =' → logprob: -6.312749862670898

Token 1375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23682661354541779
    2. ' while' → logprob: -1.7368266582489014
    3. 'while' → logprob: -3.3618266582489014
    4. '	while' → logprob: -10.11182689666748
    5. 'While' → logprob: -10.48682689666748
    6. ',' → logprob: -11.11182689666748
    7. '   ' → logprob: -11.23682689666748
    8. '        
' → logprob: -11.98682689666748
    9. '```' → logprob: -12.61182689666748
    10. '
' → logprob: -12.98682689666748

Token 1376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1979546844959259
    2. ' while' → logprob: -1.9479546546936035
    3. 'while' → logprob: -3.3229546546936035
    4. '   ' → logprob: -7.9479546546936035
    5. 'While' → logprob: -8.947955131530762
    6. '	while' → logprob: -8.947955131530762
    7. '
' → logprob: -9.197955131530762
    8. '        
' → logprob: -9.322955131530762
    9. ' 
' → logprob: -10.322955131530762
    10. '        ' → logprob: -10.697955131530762

Token 1377: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.062109190970659256
    2. ' while' → logprob: -3.0621092319488525
    3. '       ' → logprob: -4.312108993530273
    4. '	while' → logprob: -11.437108993530273
    5. '   ' → logprob: -11.562108993530273
    6. 'While' → logprob: -12.312108993530273
    7. '```' → logprob: -14.812108993530273
    8. '    ' → logprob: -16.187108993530273
    9. '           ' → logprob: -16.812108993530273
    10. '        ' → logprob: -17.062108993530273

Token 1378: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001930301426909864
    2. ' l' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.751930236816406
    4. ' ' → logprob: -15.126930236816406
    5. '	l' → logprob: -15.126930236816406
    6. '    ' → logprob: -16.626930236816406
    7. '  ' → logprob: -17.376930236816406
    8. '(l' → logprob: -18.251930236816406
    9. '     ' → logprob: -18.251930236816406
    10. '       ' → logprob: -18.751930236816406

Token 1379: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011787252500653267
    2. ' <' → logprob: -4.761787414550781
    3. '<=' → logprob: -7.136787414550781
    4. '<th' → logprob: -7.761787414550781
    5. '<len' → logprob: -7.886787414550781
    6. '<b' → logprob: -8.511787414550781
    7. '<int' → logprob: -8.511787414550781
    8. '<n' → logprob: -9.011787414550781
    9. '&' → logprob: -9.386787414550781
    10. '<m' → logprob: -9.511787414550781

Token 1380: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.15310683415737e-05
    2. ' r' → logprob: -10.750021934509277
    3. '	r' → logprob: -19.12502098083496
    4. '   ' → logprob: -19.50002098083496
    5. ' ' → logprob: -20.75002098083496
    6. '_r' → logprob: -21.00002098083496
    7. '```' → logprob: -22.12502098083496
    8. '(r' → logprob: -22.37502098083496
    9. 'rans' → logprob: -22.62502098083496
    10. '[r' → logprob: -22.87502098083496

Token 1381: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20880445837974548
    2. ':' → logprob: -1.7088044881820679
    3. '           ' → logprob: -4.958804607391357
    4. ' and' → logprob: -9.4588041305542
    5. '[' → logprob: -9.5838041305542
    6. '       ' → logprob: -10.2088041305542
    7. '{' → logprob: -10.5838041305542
    8. 'and' → logprob: -10.8338041305542
    9. '=' → logprob: -11.0838041305542
    10. ':
' → logprob: -11.0838041305542

Token 1382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015157493180595338
    2. ' if' → logprob: -9.500151634216309
    3. 'if' → logprob: -10.000151634216309
    4. '
' → logprob: -11.375151634216309
    5. '```' → logprob: -12.125151634216309
    6. '	       ' → logprob: -13.000151634216309
    7. '               ' → logprob: -13.250151634216309
    8. '            ' → logprob: -13.375151634216309
    9. '		' → logprob: -13.375151634216309
    10. '   ' → logprob: -13.625151634216309

Token 1383: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03432495519518852
    2. '               ' → logprob: -3.534324884414673
    3. '           ' → logprob: -5.784325122833252
    4. ' if' → logprob: -6.659325122833252
    5. 'If' → logprob: -8.784324645996094
    6. '	if' → logprob: -11.159324645996094
    7. '	           ' → logprob: -11.909324645996094
    8. '   ' → logprob: -12.159324645996094
    9. '﻿' → logprob: -12.159324645996094
    10. '            ' → logprob: -12.784324645996094

Token 1384: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007135047344490886
    2. ' l' → logprob: -7.250713348388672
    3. '(l' → logprob: -12.875713348388672
    4. '   ' → logprob: -14.375713348388672
    5. '	l' → logprob: -15.125713348388672
    6. ' ' → logprob: -15.500713348388672
    7. ' (' → logprob: -17.875713348388672
    8. '  ' → logprob: -18.625713348388672
    9. '#' → logprob: -19.000713348388672
    10. '(' → logprob: -19.125713348388672

Token 1385: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.048915036022663116
    2. ' &' → logprob: -3.048915147781372
    3. '&
' → logprob: -9.673914909362793
    4. '>' → logprob: -9.798914909362793
    5. '&r' → logprob: -9.923914909362793
    6. '-' → logprob: -10.048914909362793
    7. '   ' → logprob: -10.423914909362793
    8. '&amp' → logprob: -10.923914909362793
    9. '&p' → logprob: -11.298914909362793
    10. '&w' → logprob: -11.423914909362793

Token 1386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. 'r' → logprob: -12.750004768371582
    3. 'l' → logprob: -13.375004768371582
    4. '-' → logprob: -15.750004768371582
    5. ' ' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '#' → logprob: -17.875003814697266
    8. 'b' → logprob: -18.500003814697266
    9. '
' → logprob: -19.125003814697266
    10. '' → logprob: -19.750003814697266

Token 1387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4285862057004124e-05
    2. 'l' → logprob: -10.62503433227539
    3. 'r' → logprob: -11.62503433227539
    4. '-' → logprob: -14.37503433227539
    5. 'b' → logprob: -15.62503433227539
    6. ' ' → logprob: -15.87503433227539
    7. '   ' → logprob: -17.12503433227539
    8. '#' → logprob: -17.25003433227539
    9. '' → logprob: -17.25003433227539
    10. '
' → logprob: -18.81253433227539

Token 1388: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.065205693244934
    2. ':' → logprob: -1.190205693244934
    3. '               ' → logprob: -2.0652055740356445
    4. '==' → logprob: -2.3152055740356445
    5. ' ==' → logprob: -2.8152055740356445
    6. '           ' → logprob: -3.8152055740356445
    7. '-' → logprob: -4.5652055740356445
    8. ' l' → logprob: -4.6902055740356445
    9. '=' → logprob: -4.8152055740356445
    10. '1' → logprob: -5.5652055740356445

Token 1389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04133952781558037
    2. '-' → logprob: -3.416339635848999
    3. ' -' → logprob: -6.29133939743042
    4. '-=' → logprob: -6.54133939743042
    5. 'r' → logprob: -6.66633939743042
    6. '           ' → logprob: -7.29133939743042
    7. ' -=' → logprob: -7.41633939743042
    8. ' r' → logprob: -7.66633939743042
    9. '--' → logprob: -7.79133939743042
    10. '```' → logprob: -8.541339874267578

Token 1390: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0005681642796844244
    2. '   ' → logprob: -8.500568389892578
    3. '                   ' → logprob: -8.625568389892578
    4. '               ' → logprob: -9.000568389892578
    5. 'res' → logprob: -9.875568389892578
    6. '           ' → logprob: -12.125568389892578
    7. ' r' → logprob: -12.625568389892578
    8. '       ' → logprob: -13.375568389892578
    9. '                       ' → logprob: -16.250568389892578
    10. '	r' → logprob: -16.375568389892578

Token 1391: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.007499317172914743
    2. ' -=' → logprob: -5.2574992179870605
    3. '-' → logprob: -6.2574992179870605
    4. '   ' → logprob: -8.757499694824219
    5. '           ' → logprob: -8.757499694824219
    6. '               ' → logprob: -10.757499694824219
    7. '```' → logprob: -12.882499694824219
    8. '       ' → logprob: -13.257499694824219
    9. '                   ' → logprob: -13.382499694824219
    10. '  ' → logprob: -13.632499694824219

Token 1392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.875000953674316
    3. 'r' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '```' → logprob: -16.125
    6. '           ' → logprob: -17.25
    7. '-' → logprob: -17.875
    8. '                   ' → logprob: -18.0
    9. '               ' → logprob: -18.375
    10. '
' → logprob: -18.625

Token 1393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.5
    5. '-' → logprob: -20.75
    6. '           ' → logprob: -21.5
    7. '``' → logprob: -21.75
    8. 'r' → logprob: -21.75
    9. '
' → logprob: -21.9375
    10. '       ' → logprob: -22.6875

Token 1394: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08306442946195602
    2. '           ' → logprob: -2.958064317703247
    3. 'res' → logprob: -3.833064317703247
    4. ' res' → logprob: -5.708064556121826
    5. '                   ' → logprob: -6.708064556121826
    6. ' and' → logprob: -7.083064556121826
    7. ',' → logprob: -8.708064079284668
    8. 'and' → logprob: -8.958064079284668
    9. ':
' → logprob: -9.583064079284668
    10. '
' → logprob: -9.583064079284668

Token 1395: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8414543271064758
    2. '           ' → logprob: -0.9664543271064758
    3. 'res' → logprob: -1.841454267501831
    4. ' res' → logprob: -3.591454267501831
    5. '                   ' → logprob: -6.46645450592041
    6. '       ' → logprob: -7.96645450592041
    7. '	res' → logprob: -9.46645450592041
    8. ',res' → logprob: -9.46645450592041
    9. '                       ' → logprob: -9.84145450592041
    10. '	       ' → logprob: -10.34145450592041

Token 1396: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.881560041918419e-05
    2. ' res' → logprob: -10.500039100646973
    3. '               ' → logprob: -11.750039100646973
    4. '           ' → logprob: -13.000039100646973
    5. '                   ' → logprob: -14.500039100646973
    6. '	res' → logprob: -14.875039100646973
    7. '   ' → logprob: -15.375039100646973
    8. ' ' → logprob: -18.250038146972656
    9. ',res' → logprob: -18.625038146972656
    10. 'ress' → logprob: -19.125038146972656

Token 1397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008631349541246891
    2. ' =' → logprob: -4.758631229400635
    3. '=self' → logprob: -11.008631706237793
    4. 'self' → logprob: -15.133631706237793
    5. '=
' → logprob: -17.758630752563477
    6. ' ' → logprob: -18.383630752563477
    7. '   ' → logprob: -18.758630752563477
    8. '＝' → logprob: -19.008630752563477
    9. ' self' → logprob: -19.133630752563477
    10. '           ' → logprob: -19.258630752563477

Token 1398: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1756367712223437e-05
    2. ' self' → logprob: -11.375011444091797
    3. 'func' → logprob: -16.125011444091797
    4. 'res' → logprob: -17.250011444091797
    5. 'this' → logprob: -17.750011444091797
    6. '(self' → logprob: -17.875011444091797
    7. '=self' → logprob: -18.125011444091797
    8. '	self' → logprob: -18.375011444091797
    9. '   ' → logprob: -18.375011444091797
    10. '[self' → logprob: -18.875011444091797

Token 1399: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -0.31342482566833496
    2. 'func' → logprob: -1.313424825668335
    3. '(func' → logprob: -9.688425064086914
    4. 'self' → logprob: -10.063425064086914
    5. ' func' → logprob: -10.813425064086914
    6. '.' → logprob: -11.688425064086914
    7. '   ' → logprob: -11.688425064086914
    8. '	func' → logprob: -12.188425064086914
    9. '_func' → logprob: -12.688425064086914
    10. '
' → logprob: -12.938425064086914

Token 1400: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0031840058509260416
    2. '(self' → logprob: -5.753183841705322
    3. 'res' → logprob: -12.12818431854248
    4. '(' → logprob: -14.25318431854248
    5. 'self' → logprob: -15.37818431854248
    6. '(
' → logprob: -18.503183364868164
    7. ',res' → logprob: -18.503183364868164
    8. '	res' → logprob: -18.503183364868164
    9. ' (' → logprob: -18.628183364868164
    10. ' res' → logprob: -19.003183364868164

Token 1401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012555881403386593
    2. ',self' → logprob: -6.876255512237549
    3. 'self' → logprob: -8.751255989074707
    4. ' ,' → logprob: -9.876255989074707
    5. ',res' → logprob: -11.626255989074707
    6. ',
' → logprob: -13.126255989074707
    7. 'res' → logprob: -14.001255989074707
    8. '(self' → logprob: -14.501255989074707
    9. ' self' → logprob: -14.751255989074707
    10. ')' → logprob: -15.876255989074707

Token 1402: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3856492842023727e-06
    2. ' self' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '(self' → logprob: -17.625001907348633
    5. 'res' → logprob: -18.500001907348633
    6. '[self' → logprob: -19.375001907348633
    7. '	self' → logprob: -19.500001907348633
    8. '=self' → logprob: -20.125001907348633
    9. '       ' → logprob: -20.625001907348633
    10. '           ' → logprob: -20.750001907348633

Token 1403: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0003449984942562878
    2. 'tree' → logprob: -8.000345230102539
    3. '.' → logprob: -12.000345230102539
    4. 'self' → logprob: -13.500345230102539
    5. '	tree' → logprob: -13.875345230102539
    6. '(tree' → logprob: -15.375345230102539
    7. '.table' → logprob: -15.750345230102539
    8. '
' → logprob: -16.12534523010254
    9. '.self' → logprob: -16.62534523010254
    10. '.thread' → logprob: -16.75034523010254

Token 1404: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.615255839889869e-05
    2. 'r' → logprob: -9.250096321105957
    3. '	r' → logprob: -17.62509536743164
    4. '[' → logprob: -18.12509536743164
    5. '   ' → logprob: -19.87509536743164
    6. '(r' → logprob: -20.12509536743164
    7. ',r' → logprob: -20.50009536743164
    8. '[
' → logprob: -20.62509536743164
    9. ' r' → logprob: -20.87509536743164
    10. '```' → logprob: -21.62509536743164

Token 1405: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25299912691116333
    2. ')
' → logprob: -1.5029990673065186
    3. '           ' → logprob: -7.002999305725098
    4. ' )' → logprob: -10.127999305725098
    5. '       ' → logprob: -10.252999305725098
    6. '               ' → logprob: -10.627999305725098
    7. ' )
' → logprob: -10.627999305725098
    8. '   ' → logprob: -11.252999305725098
    9. ')
' → logprob: -11.627999305725098
    10. '          ' → logprob: -12.752999305725098

Token 1406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014378506457433105
    2. '       ' → logprob: -7.251437664031982
    3. ' if' → logprob: -9.00143814086914
    4. '[' → logprob: -9.12643814086914
    5. '               ' → logprob: -9.12643814086914
    6. '          ' → logprob: -9.25143814086914
    7. '   ' → logprob: -9.62643814086914
    8. ' ' → logprob: -9.87643814086914
    9. 'if' → logprob: -10.75143814086914
    10. '            ' → logprob: -10.87643814086914

Token 1407: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034888871014118195
    2. 'if' (adapté à ' if') → logprob: -3.409888982772827
    3. ' if' → logprob: -6.784888744354248
    4. '```' → logprob: -9.659889221191406
    5. '       ' → logprob: -11.034889221191406
    6. '   ' → logprob: -11.159889221191406
    7. '		' → logprob: -12.909889221191406
    8. ' ' → logprob: -13.159889221191406
    9. 'If' → logprob: -13.409889221191406
    10. '               ' → logprob: -13.409889221191406

Token 1408: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.2729995988775045e-06
    2. ' l' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.5000057220459
    4. '	l' → logprob: -18.1250057220459
    5. '           ' → logprob: -20.2500057220459
    6. '    ' → logprob: -21.3750057220459
    7. '(l' → logprob: -22.0000057220459
    8. '       ' → logprob: -22.8750057220459
    9. '     ' → logprob: -23.3750057220459
    10. '  ' → logprob: -24.1250057220459

Token 1409: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5763445496559143
    2. '&' → logprob: -0.8263445496559143
    3. '&
' → logprob: -8.45134449005127
    4. ' &
' → logprob: -9.70134449005127
    5. '   ' → logprob: -10.45134449005127
    6. ' &=' → logprob: -11.57634449005127
    7. '&amp' → logprob: -11.70134449005127
    8. '&a' → logprob: -11.82634449005127
    9. '&r' → logprob: -11.82634449005127
    10. '&nbsp' → logprob: -12.07634449005127

Token 1410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. '```' → logprob: -17.87501335144043
    5. '0' → logprob: -19.37501335144043
    6. '#' → logprob: -19.56251335144043
    7. '           ' → logprob: -19.62501335144043
    8. '  ' → logprob: -19.68751335144043
    9. 'l' → logprob: -20.00001335144043
    10. '
' → logprob: -20.25001335144043

Token 1411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -18.625
    4. '{' → logprob: -19.875
    5. 'l' → logprob: -20.0
    6. '   ' → logprob: -20.0
    7. '۱' → logprob: -20.625
    8. '' → logprob: -20.6875
    9. '{
' → logprob: -20.75
    10. '```' → logprob: -21.125

Token 1412: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05666114017367363
    2. ':' → logprob: -3.4316611289978027
    3. '               ' → logprob: -3.8066611289978027
    4. ' :
' → logprob: -8.681661605834961
    5. ' +=' → logprob: -9.681661605834961
    6. '           ' → logprob: -9.806661605834961
    7. '=' → logprob: -10.181661605834961
    8. '):
' → logprob: -10.181661605834961
    9. '==' → logprob: -10.431661605834961
    10. '+=' → logprob: -10.556661605834961

Token 1413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007928356644697487
    2. '```' → logprob: -8.625792503356934
    3. '<|end|>' → logprob: -9.125792503356934
    4. '                
' → logprob: -9.125792503356934
    5. '           ' → logprob: -9.375792503356934
    6. '                ' → logprob: -10.125792503356934
    7. '``' → logprob: -10.625792503356934
    8. '              ' → logprob: -11.000792503356934
    9. '<|end|>' → logprob: -11.000792503356934
    10. '
' → logprob: -11.000792503356934

Token 1414: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.07732289284467697
    2. '               ' → logprob: -3.0773229598999023
    3. ' res' → logprob: -3.5773229598999023
    4. '                   ' → logprob: -7.952322959899902
    5. '           ' → logprob: -11.202322959899902
    6. '   ' → logprob: -13.077322959899902
    7. '```' → logprob: -13.202322959899902
    8. '                ' → logprob: -13.327322959899902
    9. '	res' → logprob: -13.327322959899902
    10. ',res' → logprob: -14.327322959899902

Token 1415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. '=self' → logprob: -13.693148612976074
    4. '=
' → logprob: -15.943148612976074
    5. '   ' → logprob: -16.19314956665039
    6. ' ' → logprob: -17.69314956665039
    7. 'self' → logprob: -17.81814956665039
    8. ',' → logprob: -18.19314956665039
    9. '＝' → logprob: -18.44314956665039
    10. '```' → logprob: -18.44314956665039

Token 1416: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2127087504486553e-05
    2. ' self' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.375021934509277
    4. '(self' → logprob: -15.750021934509277
    5. 'func' → logprob: -16.750022888183594
    6. '	self' → logprob: -17.125022888183594
    7. '  ' → logprob: -17.500022888183594
    8. '[self' → logprob: -17.500022888183594
    9. '=self' → logprob: -18.125022888183594
    10. '           ' → logprob: -18.375022888183594

Token 1417: '.func' (ID: 39446)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.04643000662326813
    2. 'self' → logprob: -3.2964301109313965
    3. '.func' → logprob: -4.7964301109313965
    4. ' func' → logprob: -9.921429634094238
    5. ' self' → logprob: -10.671429634094238
    6. '_func' → logprob: -11.171429634094238
    7. '(func' → logprob: -12.546429634094238
    8. 'def' → logprob: -13.546429634094238
    9. '	func' → logprob: -14.046429634094238
    10. '(self' → logprob: -14.171429634094238

Token 1418: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0014731991104781628
    2. 'res' → logprob: -7.001473426818848
    3. '(' → logprob: -7.501473426818848
    4. ' (' → logprob: -12.251473426818848
    5. '(
' → logprob: -13.126473426818848
    6. ' res' → logprob: -13.751473426818848
    7. '   ' → logprob: -13.876473426818848
    8. ' ' → logprob: -15.751473426818848
    9. '(None' → logprob: -16.00147247314453
    10. '	res' → logprob: -16.37647247314453

Token 1419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21201054751873016
    2. '(res' → logprob: -1.7120105028152466
    3. '(self' → logprob: -4.837010383605957
    4. ',res' → logprob: -6.087010383605957
    5. ' ,' → logprob: -9.212010383605957
    6. ',self' → logprob: -9.337010383605957
    7. 'res' → logprob: -9.587010383605957
    8. 'self' → logprob: -10.462010383605957
    9. '               ' → logprob: -11.087010383605957
    10. '(' → logprob: -11.712010383605957

Token 1420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014287306112237275
    2. ' self' → logprob: -8.875143051147461
    3. 'l' → logprob: -13.875143051147461
    4. '(self' → logprob: -14.125143051147461
    5. '   ' → logprob: -14.375143051147461
    6. '[self' → logprob: -15.125143051147461
    7. '           ' → logprob: -16.00014305114746
    8. '       ' → logprob: -16.37514305114746
    9. '	self' → logprob: -16.37514305114746
    10. 'res' → logprob: -16.50014305114746

Token 1421: '.tree' (ID: 49211)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.2805074155330658
    2. 'self' → logprob: -1.7805074453353882
    3. 'l' → logprob: -3.0305073261260986
    4. '.tree' → logprob: -4.655507564544678
    5. 'tree' → logprob: -4.780507564544678
    6. '[self' → logprob: -5.655507564544678
    7. ',' → logprob: -6.155507564544678
    8. '.l' → logprob: -6.655507564544678
    9. ',l' → logprob: -7.030507564544678
    10. ' l' → logprob: -7.530507564544678

Token 1422: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0012018970446661115
    2. 'l' → logprob: -6.75120210647583
    3. '(l' → logprob: -10.376201629638672
    4. '	l' → logprob: -15.001201629638672
    5. ' l' → logprob: -16.376201629638672
    6. ',l' → logprob: -17.251201629638672
    7. '   ' → logprob: -18.001201629638672
    8. '+l' → logprob: -19.001201629638672
    9. '.l' → logprob: -20.501201629638672
    10. '[
' → logprob: -20.751201629638672

Token 1423: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0027178567834198475
    2. ')' → logprob: -6.377717971801758
    3. '               ' → logprob: -7.127717971801758
    4. '           ' → logprob: -9.377717971801758
    5. ')
' → logprob: -9.877717971801758
    6. ' )
' → logprob: -10.127717971801758
    7. ');' → logprob: -10.752717971801758
    8. '       ' → logprob: -12.752717971801758
    9. '                   ' → logprob: -12.752717971801758
    10. ';l' → logprob: -12.752717971801758

Token 1424: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024251631111837924
    2. '           ' → logprob: -9.000242233276367
    3. ' l' → logprob: -9.750242233276367
    4. 'l' → logprob: -10.375242233276367
    5. '   ' → logprob: -11.750242233276367
    6. '	           ' → logprob: -11.750242233276367
    7. '```' → logprob: -13.000242233276367
    8. '       ' → logprob: -13.250242233276367
    9. '		       ' → logprob: -13.375242233276367
    10. '                   ' → logprob: -13.625242233276367

Token 1425: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.005386014468967915
    2. ' l' → logprob: -5.255385875701904
    3. '               ' → logprob: -9.380386352539062
    4. '           ' → logprob: -9.755386352539062
    5. '                   ' → logprob: -11.755386352539062
    6. '   ' → logprob: -13.755386352539062
    7. '	l' → logprob: -14.255386352539062
    8. '```' → logprob: -16.380386352539062
    9. '       ' → logprob: -16.630386352539062
    10. ' ' → logprob: -17.005386352539062

Token 1426: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07889363914728165
    2. ' +=' → logprob: -2.5788936614990234
    3. '               ' → logprob: -13.203893661499023
    4. '+' → logprob: -14.578893661499023
    5. '=' → logprob: -14.828893661499023
    6. '           ' → logprob: -14.953893661499023
    7. '   ' → logprob: -15.703893661499023
    8. ' +' → logprob: -15.828893661499023
    9. '                ' → logprob: -15.828893661499023
    10. ']+=' → logprob: -16.078893661499023

Token 1427: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -22.25
    4. '```' → logprob: -22.375
    5. '
' → logprob: -24.5
    6. '  ' → logprob: -24.5
    7. '１' → logprob: -25.0
    8. '۱' → logprob: -25.25
    9. '0' → logprob: -25.375
    10. '१' → logprob: -25.75

Token 1428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -21.625
    5. '  ' → logprob: -23.25
    6. '１' → logprob: -23.5
    7. '۱' → logprob: -23.75
    8. '
' → logprob: -24.375
    9. '१' → logprob: -24.625
    10. '১' → logprob: -24.8125

Token 1429: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.150362166110426e-05
    2. '       ' → logprob: -9.625091552734375
    3. '               ' → logprob: -11.375091552734375
    4. '```' → logprob: -12.125091552734375
    5. '          ' → logprob: -12.875091552734375
    6. '<|end|>' → logprob: -13.875091552734375
    7. '
' → logprob: -14.125091552734375
    8. '            
' → logprob: -14.125091552734375
    9. '   ' → logprob: -14.250091552734375
    10. '<|end|>' → logprob: -14.750091552734375

Token 1430: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001302374730585143
    2. '       ' → logprob: -9.125130653381348
    3. '```' → logprob: -11.250130653381348
    4. '               ' → logprob: -12.375130653381348
    5. 'r' → logprob: -13.625130653381348
    6. '   ' → logprob: -14.125130653381348
    7. '          ' → logprob: -14.375130653381348
    8. 'return' → logprob: -15.375130653381348
    9. ' l' → logprob: -15.500130653381348
    10. 'l' → logprob: -15.625130653381348

Token 1431: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0008448873413726687
    2. '           ' → logprob: -7.375844955444336
    3. '       ' → logprob: -8.750844955444336
    4. ' l' → logprob: -9.875844955444336
    5. '   ' → logprob: -12.500844955444336
    6. '```' → logprob: -12.875844955444336
    7. 'r' → logprob: -14.125844955444336
    8. 'return' → logprob: -14.375844955444336
    9. 'while' → logprob: -16.000844955444336
    10. '         ' → logprob: -16.375844955444336

Token 1432: ' >>=' (ID: 81952)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02687687985599041
    2. ' +=' → logprob: -3.651876926422119
    3. ' <<=' → logprob: -8.276876449584961
    4. '<<' → logprob: -8.901876449584961
    5. '=' → logprob: -9.276876449584961
    6. ',' → logprob: -10.651876449584961
    7. '```' → logprob: -10.901876449584961
    8. '>>' → logprob: -11.651876449584961
    9. '|' → logprob: -11.776876449584961
    10. '+' → logprob: -12.151876449584961

Token 1433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -21.125
    4. '   ' → logprob: -21.125
    5. '
' → logprob: -23.875
    6. '```' → logprob: -24.125
    7. '  ' → logprob: -24.625
    8. '１' → logprob: -24.875
    9. 'l' → logprob: -25.25
    10. '' → logprob: -25.625

Token 1434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.125
    3. ' ' → logprob: -18.875
    4. '01' → logprob: -20.875
    5. '
' → logprob: -21.5
    6. '```' → logprob: -21.75
    7. 'l' → logprob: -22.0
    8. '   ' → logprob: -22.0
    9. '2' → logprob: -22.375
    10. '' → logprob: -22.625

Token 1435: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40261802077293396
    2. 'r' → logprob: -1.1526180505752563
    3. '       ' → logprob: -4.277617931365967
    4. ' r' → logprob: -6.777617931365967
    5. ',r' → logprob: -8.152618408203125
    6. ',' → logprob: -8.652618408203125
    7. '   ' → logprob: -9.402618408203125
    8. ';r' → logprob: -10.777618408203125
    9. '
' → logprob: -11.402618408203125
    10. ';' → logprob: -12.277618408203125

Token 1436: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.68040931224823
    2. '           ' → logprob: -1.18040931224823
    3. 'r' → logprob: -1.68040931224823
    4. ' r' → logprob: -9.18040943145752
    5. '   ' → logprob: -10.55540943145752
    6. 'while' → logprob: -12.93040943145752
    7. '```' → logprob: -13.05540943145752
    8. '        ' → logprob: -13.05540943145752
    9. '               ' → logprob: -13.55540943145752
    10. '      ' → logprob: -14.43040943145752

Token 1437: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -8.65707261255011e-06
    2. ' r' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.875008583068848
    4. '       ' → logprob: -15.125008583068848
    5. '   ' → logprob: -17.125009536743164
    6. '     ' → logprob: -20.750009536743164
    7. '          ' → logprob: -21.000009536743164
    8. '      ' → logprob: -21.250009536743164
    9. '	r' → logprob: -21.250009536743164
    10. '    ' → logprob: -21.500009536743164

Token 1438: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -1.676292231422849e-05
    2. ' >>=' → logprob: -11.000017166137695
    3. '//=' → logprob: -18.500017166137695
    4. '>>>' → logprob: -18.625017166137695
    5. '≫' → logprob: -19.375017166137695
    6. ')>>' → logprob: -19.500017166137695
    7. '   ' → logprob: -19.625017166137695
    8. '>>&' → logprob: -19.750017166137695
    9. '       ' → logprob: -20.375017166137695
    10. '>>
' → logprob: -20.875017166137695

Token 1439: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '0' → logprob: -19.875001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. '```' → logprob: -21.125001907348633
    7. '۱' → logprob: -22.625001907348633
    8. '2' → logprob: -23.437501907348633
    9. '  ' → logprob: -23.500001907348633
    10. '１' → logprob: -23.625001907348633

Token 1440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '0' → logprob: -20.5
    4. '<|end|>' → logprob: -20.875
    5. '```' → logprob: -21.625
    6. '2' → logprob: -22.0
    7. '   ' → logprob: -22.25
    8. '۱' → logprob: -23.5625
    9. '१' → logprob: -24.1875
    10. '<|end|>' → logprob: -24.3125

Token 1441: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.7159857786027715e-05
    2. 'return' → logprob: -10.375046730041504
    3. '<|end|>' → logprob: -11.625046730041504
    4. '
' → logprob: -12.625046730041504
    5. '	' → logprob: -13.875046730041504
    6. '   ' → logprob: -14.125046730041504
    7. ' return' → logprob: -14.250046730041504
    8. ')' → logprob: -16.00004768371582
    9. '<|end|>' → logprob: -16.00004768371582
    10. '        
' → logprob: -16.00004768371582

Token 1442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008507246384397149
    2. 'return' → logprob: -7.625850677490234
    3. '<|end|>' → logprob: -8.125850677490234
    4. ' return' → logprob: -10.625850677490234
    5. '<|end|>' → logprob: -11.000850677490234
    6. '	return' → logprob: -11.500850677490234
    7. '	' → logprob: -12.000850677490234
    8. '   ' → logprob: -13.500850677490234
    9. '           ' → logprob: -13.625850677490234
    10. '[' → logprob: -14.125850677490234

Token 1443: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10021787881851196
    2. '       ' → logprob: -2.350217819213867
    3. ' return' → logprob: -11.475217819213867
    4. '   ' → logprob: -14.225217819213867
    5. '	return' → logprob: -15.475217819213867
    6. '{return' → logprob: -18.225217819213867
    7. '```' → logprob: -19.350217819213867
    8. '      ' → logprob: -19.350217819213867
    9. ':return' → logprob: -19.600217819213867
    10. '	' → logprob: -19.850217819213867

Token 1444: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0206720617134124e-05
    2. ' res' → logprob: -11.50001049041748
    3. '	res' → logprob: -22.125009536743164
    4. '(res' → logprob: -22.750009536743164
    5. '   ' → logprob: -23.125009536743164
    6. 'result' → logprob: -24.625009536743164
    7. '$res' → logprob: -24.625009536743164
    8. '```' → logprob: -24.625009536743164
    9. '_res' → logprob: -24.875009536743164
    10. 'return' → logprob: -25.500009536743164

Token 1445: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25908124446868896
    2. '<|end|>' → logprob: -1.884081244468689
    3. 'def' → logprob: -2.6340813636779785
    4. '```' → logprob: -6.1340813636779785
    5. ' def' → logprob: -7.6340813636779785
    6. '	def' → logprob: -8.00908088684082
    7. ' ' → logprob: -8.00908088684082
    8. '<|end|>' → logprob: -8.13408088684082
    9. '    ' → logprob: -9.00908088684082
    10. '
' → logprob: -9.00908088684082

Token 1446: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01859738491475582
    2. '   ' → logprob: -4.018597602844238
    3. '<|end|>' → logprob: -8.268597602844238
    4. '#' → logprob: -9.393597602844238
    5. '```' → logprob: -10.018597602844238
    6. '	def' → logprob: -10.768597602844238
    7. ' def' → logprob: -11.018597602844238
    8. '    ' → logprob: -12.393597602844238
    9. '<|end|>' → logprob: -12.643597602844238
    10. 'class' → logprob: -12.768597602844238

Token 1447: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01110324077308178
    2. '   ' → logprob: -4.51110315322876
    3. ' def' → logprob: -10.011103630065918
    4. '	def' → logprob: -12.011103630065918
    5. '
' → logprob: -12.761103630065918
    6. '```' → logprob: -13.511103630065918
    7. '    
' → logprob: -16.5111026763916
    8. '  ' → logprob: -17.1361026763916
    9. ' ' → logprob: -18.3861026763916
    10. '"""' → logprob: -18.6361026763916

Token 1448: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -2.2842308680992573e-05
    2. ' get' → logprob: -10.875022888183594
    3. '_get' → logprob: -13.625022888183594
    4. '__' → logprob: -13.875022888183594
    5. 'all' → logprob: -14.125022888183594
    6. 'getitem' → logprob: -14.250022888183594
    7. 'build' → logprob: -15.125022888183594
    8. '	get' → logprob: -17.000022888183594
    9. 'find' → logprob: -18.000022888183594
    10. '.get' → logprob: -18.250022888183594

Token 1449: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22657032310962677
    2. '(self' → logprob: -1.6015703678131104
    3. '(i' → logprob: -7.351570129394531
    4. '<|end|>' → logprob: -8.851570129394531
    5. ')' → logprob: -8.976570129394531
    6. 'self' → logprob: -9.226570129394531
    7. '(
' → logprob: -9.601570129394531
    8. '(`' → logprob: -11.351570129394531
    9. '((' → logprob: -12.101570129394531
    10. ',' → logprob: -12.226570129394531

Token 1450: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010605364106595516
    2. '(i' → logprob: -4.760605335235596
    3. '(' → logprob: -6.260605335235596
    4. 'self' → logprob: -10.260605812072754
    5. '(
' → logprob: -11.010605812072754
    6. ')' → logprob: -11.760605812072754
    7. '(s' → logprob: -12.260605812072754
    8. ')(' → logprob: -12.760605812072754
    9. '(a' → logprob: -13.135605812072754
    10. ' (' → logprob: -13.635605812072754

Token 1451: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38721218705177307
    2. 'self' → logprob: -1.1372121572494507
    3. '   ' → logprob: -8.762211799621582
    4. ' i' → logprob: -9.012211799621582
    5. ' self' → logprob: -10.137211799621582
    6. '       ' → logprob: -11.262211799621582
    7. ' ' → logprob: -13.012211799621582
    8. 'index' → logprob: -13.387211799621582
    9. '     ' → logprob: -13.887211799621582
    10. '  ' → logprob: -14.137211799621582

Token 1452: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0934658944606781
    2. 'self' → logprob: -2.968465805053711
    3. '):' → logprob: -4.468465805053711
    4. '):
' → logprob: -4.468465805053711
    5. ')' → logprob: -4.718465805053711
    6. '   ' → logprob: -5.718465805053711
    7. '(i' → logprob: -6.343465805053711
    8. '       ' → logprob: -7.718465805053711
    9. '(' → logprob: -8.218465805053711
    10. ',' → logprob: -9.718465805053711

Token 1453: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.39954930543899536
    2. '(i' → logprob: -1.1495492458343506
    3. '   ' → logprob: -5.52454948425293
    4. '       ' → logprob: -6.14954948425293
    5. '[i' → logprob: -6.14954948425293
    6. '(' → logprob: -6.14954948425293
    7. 'self' → logprob: -6.52454948425293
    8. '[self' → logprob: -7.39954948425293
    9. '[' → logprob: -9.89954948425293
    10. ' (' → logprob: -10.64954948425293

Token 1454: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.101360984146595
    2. 'self' → logprob: -2.976361036300659
    3. 'return' → logprob: -3.351361036300659
    4. 'i' → logprob: -4.85136079788208
    5. '(self' → logprob: -6.35136079788208
    6. '   ' → logprob: -7.85136079788208
    7. '(i' → logprob: -9.226361274719238
    8. ' self' → logprob: -9.601361274719238
    9. ' return' → logprob: -9.601361274719238
    10. '```' → logprob: -10.101361274719238

Token 1455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34155404567718506
    2. 'i' → logprob: -1.841554045677185
    3. 'self' → logprob: -2.2165541648864746
    4. '   ' → logprob: -4.091554164886475
    5. ' i' → logprob: -5.841554164886475
    6. ' self' → logprob: -6.466554164886475
    7. '     ' → logprob: -8.966553688049316
    8. ' ' → logprob: -9.091553688049316
    9. '    ' → logprob: -9.966553688049316
    10. '      ' → logprob: -10.091553688049316

Token 1456: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11768747866153717
    2. '       ' → logprob: -2.367687463760376
    3. ' return' → logprob: -4.367687702178955
    4. '
' → logprob: -5.992687702178955
    5. '   ' → logprob: -6.242687702178955
    6. 'Return' → logprob: -9.617687225341797
    7. '	return' → logprob: -9.617687225341797
    8. '        
' → logprob: -11.492687225341797
    9. '@return' → logprob: -11.617687225341797
    10. '"""
' → logprob: -11.742687225341797

Token 1457: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2520449161529541
    2. ' self' → logprob: -1.502044916152954
    3. ' the' → logprob: -9.127044677734375
    4. 'the' → logprob: -12.127044677734375
    5. '   ' → logprob: -14.252044677734375
    6. '(self' → logprob: -14.752044677734375
    7. '`' → logprob: -15.627044677734375
    8. ' ' → logprob: -15.877044677734375
    9. '	self' → logprob: -16.127044677734375
    10. '```' → logprob: -16.127044677734375

Token 1458: ' current' (ID: 2208)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4457920491695404
    2. 'tree' → logprob: -1.6957920789718628
    3. ' value' → logprob: -2.0707919597625732
    4. 'self' → logprob: -3.0707919597625732
    5. ' tree' → logprob: -5.695792198181152
    6. ' self' → logprob: -8.445792198181152
    7. 'element' → logprob: -9.320792198181152
    8. '   ' → logprob: -10.195792198181152
    9. 'i' → logprob: -11.070792198181152
    10. ' ' → logprob: -11.820792198181152

Token 1459: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.14395226538181305
    2. '[i' → logprob: -2.7689523696899414
    3. 'value' → logprob: -2.7689523696899414
    4. '   ' → logprob: -5.268952369689941
    5. 'self' → logprob: -6.518952369689941
    6. ' self' → logprob: -7.143952369689941
    7. ' i' → logprob: -7.393952369689941
    8. '_value' → logprob: -9.393952369689941
    9. ' tree' → logprob: -9.518952369689941
    10. 'i' → logprob: -9.643952369689941

Token 1460: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7580438256263733
    2. '[i' → logprob: -1.5080437660217285
    3. '   ' → logprob: -2.0080437660217285
    4. '[' → logprob: -2.1330437660217285
    5. '(i' → logprob: -3.6330437660217285
    6. 'at' → logprob: -3.8830437660217285
    7. '       ' → logprob: -5.6330437660217285
    8. '```' → logprob: -6.3830437660217285
    9. '(' → logprob: -6.5080437660217285
    10. ' ' → logprob: -7.2580437660217285

Token 1461: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00036502102739177644
    2. '   ' → logprob: -8.750365257263184
    3. ' i' → logprob: -9.000365257263184
    4. 'self' → logprob: -9.750365257263184
    5. 'index' → logprob: -11.000365257263184
    6. '       ' → logprob: -12.625365257263184
    7. ' ' → logprob: -13.375365257263184
    8. '  ' → logprob: -14.250365257263184
    9. ' self' → logprob: -14.500365257263184
    10. '     ' → logprob: -14.500365257263184

Token 1462: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3134784996509552
    2. 'i' → logprob: -1.3134784698486328
    3. '```' → logprob: -9.438478469848633
    4. '`' → logprob: -9.813478469848633
    5. ' ' → logprob: -10.438478469848633
    6. ' `' → logprob: -10.688478469848633
    7. '   ' → logprob: -11.313478469848633
    8. '[i' → logprob: -12.063478469848633
    9. ' 
' → logprob: -13.188478469848633
    10. '_i' → logprob: -13.188478469848633

Token 1463: '.

' (ID: 364)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8699007630348206
    2. '       ' → logprob: -1.1199007034301758
    3. '   ' → logprob: -1.9949007034301758
    4. '(self' → logprob: -2.869900703430176
    5. '(' → logprob: -3.119900703430176
    6. ' (' → logprob: -4.744900703430176
    7. '[i' → logprob: -5.619900703430176
    8. '```' → logprob: -6.744900703430176
    9. '.' → logprob: -7.369900703430176
    10. '[' → logprob: -7.619900703430176

Token 1464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003554339287802577
    2. '(self' → logprob: -6.253554344177246
    3. 'self' → logprob: -6.878554344177246
    4. '   ' → logprob: -8.253554344177246
    5. '(' → logprob: -8.628554344177246
    6. '(i' → logprob: -9.878554344177246
    7. 'i' → logprob: -10.003554344177246
    8. ' (' → logprob: -11.253554344177246
    9. 'def' → logprob: -11.378554344177246
    10. '
' → logprob: -11.503554344177246

Token 1465: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04876449331641197
    2. '   ' → logprob: -3.17376446723938
    3. 'i' → logprob: -6.548764705657959
    4. '
' → logprob: -6.798764705657959
    5. '<|end|>' → logprob: -7.548764705657959
    6. 'def' → logprob: -7.673764705657959
    7. 'self' → logprob: -7.798764705657959
    8. ' i' → logprob: -8.0487642288208
    9. '(self' → logprob: -8.2987642288208
    10. '    ' → logprob: -8.6737642288208

Token 1466: 'param' (ID: 1355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03153727203607559
    2. '       ' → logprob: -3.5315372943878174
    3. 'return' → logprob: -6.781537055969238
    4. 'self' → logprob: -7.906537055969238
    5. '   ' → logprob: -8.406537055969238
    6. 'def' → logprob: -10.531537055969238
    7. ' i' → logprob: -11.281537055969238
    8. '     ' → logprob: -12.406537055969238
    9. '```' → logprob: -12.656537055969238
    10. ' return' → logprob: -13.281537055969238

Token 1467: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002193908003391698
    2. ' i' → logprob: -8.625219345092773
    3. '   ' → logprob: -11.125219345092773
    4. 'self' → logprob: -11.250219345092773
    5. '       ' → logprob: -11.375219345092773
    6. ' self' → logprob: -14.875219345092773
    7. '     ' → logprob: -16.125219345092773
    8. '	i' → logprob: -16.875219345092773
    9. ' ' → logprob: -17.250219345092773
    10. '  ' → logprob: -17.500219345092773

Token 1468: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5628284215927124
    2. '):' → logprob: -1.0628284215927124
    3. ':' → logprob: -3.312828540802002
    4. '   ' → logprob: -3.437828540802002
    5. '       ' → logprob: -4.937828540802002
    6. '<|end|>' → logprob: -5.312828540802002
    7. ':int' → logprob: -6.562828540802002
    8. '<|end|>' → logprob: -7.312828540802002
    9. ' (' → logprob: -8.187828063964844
    10. ')' → logprob: -8.312828063964844

Token 1469: ' Index' (ID: 14580)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20240014791488647
    2. ' i' → logprob: -1.7024002075195312
    3. 'int' → logprob: -7.202400207519531
    4. ' int' → logprob: -8.702400207519531
    5. '0' → logprob: -9.952400207519531
    6. '       ' → logprob: -11.577400207519531
    7. '   ' → logprob: -12.077400207519531
    8. '	i' → logprob: -12.702400207519531
    9. ' ' → logprob: -12.952400207519531
    10. ' index' → logprob: -13.952400207519531

Token 1470: ' to' (ID: 316)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.06576406955719
    2. ' (' → logprob: -1.19076406955719
    3. '   ' → logprob: -1.81576406955719
    4. '<|end|>' → logprob: -2.1907639503479004
    5. '<|end|>' → logprob: -3.9407639503479004
    6. '       ' → logprob: -4.6907639503479
    7. ')' → logprob: -4.6907639503479
    8. '    ' → logprob: -4.6907639503479
    9. ' i' → logprob: -5.0657639503479
    10. ' ' → logprob: -5.3157639503479

Token 1471: ' retrieve' (ID: 31053)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3180600702762604
    2. ' i' → logprob: -1.318060040473938
    3. ' get' → logprob: -5.443059921264648
    4. 'get' → logprob: -7.818059921264648
    5. 'int' → logprob: -10.818059921264648
    6. '0' → logprob: -10.943059921264648
    7. '```' → logprob: -12.318059921264648
    8. '<|end|>' → logprob: -12.568059921264648
    9. ' ' → logprob: -13.068059921264648
    10. ')' → logprob: -13.193059921264648

Token 1472: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8630086779594421
    2. '):
' → logprob: -1.613008737564087
    3. '       ' → logprob: -1.988008737564087
    4. '   ' → logprob: -2.488008737564087
    5. ')' → logprob: -2.613008737564087
    6. '(i' → logprob: -2.988008737564087
    7. '```' → logprob: -4.613008499145508
    8. ')
' → logprob: -4.613008499145508
    9. '):' → logprob: -5.363008499145508
    10. '(self' → logprob: -6.488008499145508

Token 1473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007341049495153129
    2. 'i' → logprob: -7.875734329223633
    3. ' ' → logprob: -8.250734329223633
    4. 'int' → logprob: -9.875734329223633
    5. '       ' → logprob: -10.750734329223633
    6. ' i' → logprob: -11.875734329223633
    7. ')' → logprob: -12.000734329223633
    8. '   ' → logprob: -12.625734329223633
    9. '):
' → logprob: -13.000734329223633
    10. ' int' → logprob: -14.750734329223633

Token 1474: '-index' (ID: 45533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015186551958322525
    2. '   ' → logprob: -5.140186786651611
    3. ' ' → logprob: -6.140186786651611
    4. '-index' → logprob: -6.640186786651611
    5. ',' → logprob: -6.765186786651611
    6. '```' → logprob: -6.890186786651611
    7. ':' → logprob: -7.265186786651611
    8. '):
' → logprob: -7.265186786651611
    9. '=' → logprob: -7.890186786651611
    10. ')' → logprob: -7.890186786651611

Token 1475: 'ed' (ID: 295)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049136821180582047
    2. 'ed' → logprob: -3.9241368770599365
    3. '   ' → logprob: -4.549136638641357
    4. '):
' → logprob: -5.174136638641357
    5. '```' → logprob: -5.299136638641357
    6. ' i' → logprob: -6.299136638641357
    7. '       ' → logprob: -6.424136638641357
    8. '_i' → logprob: -7.049136638641357
    9. ').' → logprob: -7.299136638641357
    10. '0' → logprob: -7.549136638641357

Token 1476: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5705665946006775
    2. ')' → logprob: -1.9455666542053223
    3. ')
' → logprob: -2.0705666542053223
    4. ').' → logprob: -2.4455666542053223
    5. ').
' → logprob: -2.5705666542053223
    6. '   ' → logprob: -6.695566654205322
    7. '):' → logprob: -6.945566654205322
    8. '       ' → logprob: -8.070566177368164
    9. '):

' → logprob: -10.445566177368164
    10. '):
' → logprob: -10.570566177368164

Token 1477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1296200007200241
    2. '):
' → logprob: -2.37962007522583
    3. '   ' → logprob: -4.50462007522583
    4. ')' → logprob: -5.00462007522583
    5. ':
' → logprob: -5.50462007522583
    6. ':' → logprob: -6.00462007522583
    7. '):' → logprob: -6.12962007522583
    8. '```' → logprob: -6.87962007522583
    9. '
' → logprob: -8.254619598388672
    10. ')
' → logprob: -8.379619598388672

Token 1478: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007360121817328036
    2. '   ' → logprob: -7.500736236572266
    3. '```' → logprob: -9.250736236572266
    4. ')' → logprob: -10.375736236572266
    5. 'return' → logprob: -10.875736236572266
    6. '"""
' → logprob: -11.625736236572266
    7. '``' → logprob: -12.000736236572266
    8. '):
' → logprob: -12.000736236572266
    9. '
' → logprob: -12.125736236572266
    10. '"""' → logprob: -13.250736236572266

Token 1479: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013361270539462566
    2. '   ' → logprob: -5.76336145401001
    3. '       ' → logprob: -5.88836145401001
    4. '```' → logprob: -6.01336145401001
    5. 'int' → logprob: -6.26336145401001
    6. ' return' → logprob: -6.88836145401001
    7. '"""
' → logprob: -7.51336145401001
    8. 'i' → logprob: -7.88836145401001
    9. '):
' → logprob: -8.263360977172852
    10. '``' → logprob: -8.763360977172852

Token 1480: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2798043489456177
    2. ':' → logprob: -1.6548043489456177
    3. 'self' → logprob: -3.279804229736328
    4. '   ' → logprob: -4.779804229736328
    5. ' self' → logprob: -6.029804229736328
    6. 'return' → logprob: -6.654804229736328
    7. ':
' → logprob: -6.904804229736328
    8. 'def' → logprob: -7.404804229736328
    9. 'int' → logprob: -7.779804229736328
    10. ':return' → logprob: -8.029804229736328

Token 1481: ' Value' (ID: 9963)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9027791495318525e-05
    2. ' self' → logprob: -11.250019073486328
    3. 'return' → logprob: -12.125019073486328
    4. 'The' → logprob: -15.375019073486328
    5. '       ' → logprob: -15.750019073486328
    6. 'Self' → logprob: -17.250019073486328
    7. '   ' → logprob: -18.000019073486328
    8. 'Return' → logprob: -18.000019073486328
    9. '```' → logprob: -18.000019073486328
    10. '(self' → logprob: -18.750019073486328

Token 1482: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.1501325368881226
    2. ' =' → logprob: -1.2751325368881226
    3. '       ' → logprob: -2.150132656097412
    4. '=' → logprob: -2.275132656097412
    5. '(self' → logprob: -2.525132656097412
    6. '   ' → logprob: -3.275132656097412
    7. '[self' → logprob: -3.400132656097412
    8. '[i' → logprob: -5.025132656097412
    9. 'at' → logprob: -5.150132656097412
    10. 'self' → logprob: -5.150132656097412

Token 1483: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009032868780195713
    2. ' i' → logprob: -4.759032726287842
    3. 'self' → logprob: -8.134033203125
    4. 'index' → logprob: -9.634033203125
    5. ' self' → logprob: -10.134033203125
    6. '   ' → logprob: -11.634033203125
    7. ' index' → logprob: -11.759033203125
    8. '       ' → logprob: -13.134033203125
    9. '
' → logprob: -15.259033203125
    10. '```' → logprob: -15.509033203125

Token 1484: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16024281084537506
    2. 'i' → logprob: -1.9102427959442139
    3. '(i' → logprob: -11.785243034362793
    4. '[i' → logprob: -12.410243034362793
    5. '   ' → logprob: -12.535243034362793
    6. '```' → logprob: -14.035243034362793
    7. '	i' → logprob: -14.160243034362793
    8. '_i' → logprob: -14.535243034362793
    9. '`' → logprob: -14.660243034362793
    10. ' ' → logprob: -15.660243034362793

Token 1485: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.414922833442688
    2. '   ' → logprob: -1.164922833442688
    3. '
' → logprob: -4.539922714233398
    4. ')' → logprob: -4.664922714233398
    5. '<|end|>' → logprob: -5.664922714233398
    6. '[i' → logprob: -7.539922714233398
    7. '[' → logprob: -7.789922714233398
    8. '.' → logprob: -7.914922714233398
    9. ')
' → logprob: -8.039922714233398
    10. '<|end|>' → logprob: -8.164922714233398

Token 1486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05344971641898155
    2. '   ' → logprob: -3.3034496307373047
    3. '
' → logprob: -4.803449630737305
    4. '```' → logprob: -5.428449630737305
    5. '`' → logprob: -6.678449630737305
    6. '<|end|>' → logprob: -7.553449630737305
    7. 'return' → logprob: -8.428449630737305
    8. '``' → logprob: -8.428449630737305
    9. ' return' → logprob: -9.553449630737305
    10. ')' → logprob: -9.803449630737305

Token 1487: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01633569598197937
    2. 'return' → logprob: -4.141335487365723
    3. ' return' → logprob: -8.266335487365723
    4. '   ' → logprob: -10.891335487365723
    5. '```' → logprob: -11.141335487365723
    6. '`' → logprob: -12.641335487365723
    7. '	return' → logprob: -13.141335487365723
    8. '{return' → logprob: -13.266335487365723
    9. '	' → logprob: -13.891335487365723
    10. '
' → logprob: -13.891335487365723

Token 1488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001518430421128869
    2. 'return' → logprob: -6.501518249511719
    3. ' return' → logprob: -11.376518249511719
    4. '   ' → logprob: -12.626518249511719
    5. '	' → logprob: -14.376518249511719
    6. '	return' → logprob: -14.876518249511719
    7. '```' → logprob: -14.876518249511719
    8. '
' → logprob: -17.37651824951172
    9. '`' → logprob: -17.87651824951172
    10. '	   ' → logprob: -18.75151824951172

Token 1489: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00020497082732617855
    2. '       ' → logprob: -8.500205039978027
    3. ' return' → logprob: -13.500205039978027
    4. '   ' → logprob: -16.75020408630371
    5. 'self' → logprob: -18.75020408630371
    6. '	return' → logprob: -18.75020408630371
    7. '```' → logprob: -19.12520408630371
    8. '``' → logprob: -22.25020408630371
    9. '{return' → logprob: -22.37520408630371
    10. '
' → logprob: -22.50020408630371

Token 1490: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.2729995988775045e-06
    2. ' self' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.3750057220459
    4. '       ' → logprob: -18.8750057220459
    5. '(self' → logprob: -19.1250057220459
    6. '[self' → logprob: -19.1250057220459
    7. '```' → logprob: -19.6250057220459
    8. '`' → logprob: -19.7500057220459
    9. '	self' → logprob: -20.1250057220459
    10. '=self' → logprob: -20.8750057220459

Token 1491: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -5.080963092041202e-06
    2. 'tree' → logprob: -12.750004768371582
    3. '.' → logprob: -13.375004768371582
    4. '.self' → logprob: -15.250004768371582
    5. 'self' → logprob: -15.750004768371582
    6. '	tree' → logprob: -16.6250057220459
    7. ' .' → logprob: -17.0000057220459
    8. '.table' → logprob: -18.7500057220459
    9. '.user' → logprob: -19.2500057220459
    10. '.thread' → logprob: -19.5000057220459

Token 1492: '[i' (ID: 1768)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00029947367147542536
    2. 'self' → logprob: -8.125299453735352
    3. '   ' → logprob: -13.875299453735352
    4. '[' → logprob: -14.250299453735352
    5. '```' → logprob: -14.250299453735352
    6. '(self' → logprob: -14.875299453735352
    7. '[i' → logprob: -15.625299453735352
    8. '	self' → logprob: -15.625299453735352
    9. '+self' → logprob: -15.625299453735352
    10. '[
' → logprob: -16.50029945373535

Token 1493: ' +' (ID: 659)
  Prédit: '+self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+self' → logprob: -0.1372513324022293
    2. ' +' → logprob: -2.762251377105713
    3. '[self' → logprob: -2.887251377105713
    4. 'self' → logprob: -5.012251377105713
    5. '+' → logprob: -6.012251377105713
    6. '   ' → logprob: -9.137250900268555
    7. '[' → logprob: -9.262250900268555
    8. '+[' → logprob: -11.387250900268555
    9. ']' → logprob: -12.012250900268555
    10. '  ' → logprob: -12.262250900268555

Token 1494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.061054359131958e-06
    2. ' self' → logprob: -12.000007629394531
    3. '   ' → logprob: -13.500007629394531
    4. '       ' → logprob: -15.625007629394531
    5. '(self' → logprob: -16.25000762939453
    6. '[self' → logprob: -16.50000762939453
    7. '           ' → logprob: -17.75000762939453
    8. '	self' → logprob: -18.37500762939453
    9. '```' → logprob: -18.37500762939453
    10. '
' → logprob: -18.87500762939453

Token 1495: '.n' (ID: 1835)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006573928403668106
    2. 'n' → logprob: -7.500657558441162
    3. ' self' → logprob: -9.875657081604004
    4. 'user' → logprob: -10.625657081604004
    5. '.self' → logprob: -12.125657081604004
    6. '.n' → logprob: -12.250657081604004
    7. '<|end|>' → logprob: -12.500657081604004
    8. '   ' → logprob: -13.000657081604004
    9. 'Seg' → logprob: -13.250657081604004
    10. 'seg' → logprob: -13.375657081604004

Token 1496: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.967624019831419e-05
    2. 'self' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.750060081481934
    4. '₂' → logprob: -15.250060081481934
    5. '```' → logprob: -15.500060081481934
    6. '_' → logprob: -15.625060081481934
    7. '[self' → logprob: -16.125059127807617
    8. ' ' → logprob: -16.875059127807617
    9. '[' → logprob: -17.250059127807617
    10. ' self' → logprob: -17.250059127807617

Token 1497: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.6537622034084052e-05
    2. ' ]' → logprob: -10.87502670288086
    3. ']
' → logprob: -12.62502670288086
    4. '<|end|>' → logprob: -13.25002670288086
    5. '[' → logprob: -14.00002670288086
    6. '   ' → logprob: -15.00002670288086
    7. '<|end|>' → logprob: -15.25002670288086
    8. '[i' → logprob: -15.50002670288086
    9. ']

' → logprob: -15.50002670288086
    10. '']' → logprob: -15.62502670288086

Token 1498: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06309064477682114
    2. '   ' → logprob: -2.8130905628204346
    3. '
' → logprob: -7.688090801239014
    4. '<|end|>' → logprob: -7.813090801239014
    5. ' def' → logprob: -9.313090324401855
    6. '	def' → logprob: -9.688090324401855
    7. '    
' → logprob: -9.813090324401855
    8. '```' → logprob: -10.188090324401855
    9. '[' → logprob: -13.063090324401855
    10. '<|end|>' → logprob: -13.188090324401855

Token 1499: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1500: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -4.4894986785948277e-05
    2. ' all' → logprob: -10.125044822692871
    3. '_all' → logprob: -12.750044822692871
    4. '__' → logprob: -13.875044822692871
    5. 'size' → logprob: -13.875044822692871
    6. 'copy' → logprob: -18.375045776367188
    7. 'full' → logprob: -18.750045776367188
    8. 'All' → logprob: -19.000045776367188
    9. '	all' → logprob: -19.000045776367188
    10. 'data' → logprob: -19.125045776367188

Token 1501: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4750014841556549
    2. '(self' → logprob: -0.9750014543533325
    3. '():' → logprob: -7.475001335144043
    4. '(' → logprob: -8.725001335144043
    5. '()(' → logprob: -9.725001335144043
    6. '()`' → logprob: -9.975001335144043
    7. '():
' → logprob: -10.100001335144043
    8. '()]' → logprob: -11.225001335144043
    9. '()
' → logprob: -11.350001335144043
    10. ' ()' → logprob: -12.725001335144043

Token 1502: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9361685514450073
    2. '):' → logprob: -1.0611685514450073
    3. '):
' → logprob: -1.9361685514450073
    4. '()' → logprob: -2.561168670654297
    5. '(self' → logprob: -3.686168670654297
    6. 'self' → logprob: -5.436168670654297
    7. '():' → logprob: -5.686168670654297
    8. '()):
' → logprob: -6.186168670654297
    9. '())' → logprob: -6.311168670654297
    10. '():
' → logprob: -6.561168670654297

Token 1503: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16713063418865204
    2. '()' → logprob: -2.542130708694458
    3. '       ' → logprob: -3.667130708694458
    4. '   ' → logprob: -3.917130708694458
    5. '(' → logprob: -3.917130708694458
    6. '():
' → logprob: -4.917130470275879
    7. '()
' → logprob: -7.292130470275879
    8. '(
' → logprob: -7.292130470275879
    9. 'self' → logprob: -7.417130470275879
    10. 'return' → logprob: -8.667130470275879

Token 1504: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5105102062225342
    2. '       ' → logprob: -1.7605102062225342
    3. '()' → logprob: -2.010510206222534
    4. '   ' → logprob: -3.135510206222534
    5. 'def' → logprob: -4.260510444641113
    6. 'self' → logprob: -4.260510444641113
    7. ' return' → logprob: -5.010510444641113
    8. '(self' → logprob: -5.135510444641113
    9. '():
' → logprob: -5.385510444641113
    10. '()
' → logprob: -5.760510444641113

Token 1505: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3155575394630432
    2. '       ' → logprob: -1.8155574798583984
    3. 'def' → logprob: -2.3155574798583984
    4. 'self' → logprob: -5.065557479858398
    5. 'return' → logprob: -6.065557479858398
    6. '(self' → logprob: -8.315557479858398
    7. '"""
' → logprob: -8.815557479858398
    8. ' def' → logprob: -10.565557479858398
    9. '```' → logprob: -10.690557479858398
    10. '):
' → logprob: -11.065557479858398

Token 1506: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2610737681388855
    2. '   ' → logprob: -1.5110738277435303
    3. 'Return' → logprob: -5.261073589324951
    4. '       ' → logprob: -6.011073589324951
    5. 'Returns' (adapté à ' Returns') → logprob: -7.011073589324951
    6. ' return' → logprob: -8.13607406616211
    7. '
' → logprob: -9.01107406616211
    8. '"""
' → logprob: -10.13607406616211
    9. '@return' → logprob: -10.63607406616211
    10. '	return' → logprob: -10.76107406616211

Token 1507: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015740215312689543
    2. ' self' → logprob: -6.5015740394592285
    3. '       ' → logprob: -10.00157356262207
    4. '   ' → logprob: -10.87657356262207
    5. 'the' → logprob: -12.12657356262207
    6. '(self' → logprob: -13.87657356262207
    7. ' the' → logprob: -13.87657356262207
    8. '
' → logprob: -16.25157356262207
    9. '```' → logprob: -17.00157356262207
    10. '	self' → logprob: -17.62657356262207

Token 1508: ' combined' (ID: 15890)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141372084617615
    2. 'tree' → logprob: -1.7014137506484985
    3. ' tree' → logprob: -15.951414108276367
    4. ' self' → logprob: -16.076414108276367
    5. '.tree' → logprob: -16.701414108276367
    6. '   ' → logprob: -17.076414108276367
    7. '```' → logprob: -17.576414108276367
    8. '[self' → logprob: -17.701414108276367
    9. 'value' → logprob: -17.826414108276367
    10. 'root' → logprob: -18.076414108276367

Token 1509: ' value' (ID: 1432)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2150850296020508
    2. 'value' → logprob: -1.2150850296020508
    3. '(self' → logprob: -1.4650850296020508
    4. 'self' → logprob: -2.340085029602051
    5. '[' → logprob: -2.715085029602051
    6. ' value' → logprob: -5.090085029602051
    7. '   ' → logprob: -5.590085029602051
    8. '       ' → logprob: -6.840085029602051
    9. ' self' → logprob: -7.465085029602051
    10. ' (' → logprob: -8.09008502960205

Token 1510: ' over' (ID: 1072)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7843638062477112
    2. '   ' → logprob: -1.4093637466430664
    3. 'for' → logprob: -2.4093637466430664
    4. '(' → logprob: -2.5343637466430664
    5. ' at' → logprob: -3.0343637466430664
    6. 'at' → logprob: -3.4093637466430664
    7. ' for' → logprob: -3.9093637466430664
    8. '0' → logprob: -4.534363746643066
    9. '(self' → logprob: -5.034363746643066
    10. '       ' → logprob: -5.534363746643066

Token 1511: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0065031517297029495
    2. 'self' → logprob: -5.256503105163574
    3. 'all' → logprob: -7.881503105163574
    4. 'range' → logprob: -8.006503105163574
    5. '[' → logprob: -8.381503105163574
    6. 'the' → logprob: -8.631503105163574
    7. '   ' → logprob: -9.006503105163574
    8. 'def' → logprob: -12.006503105163574
    9. ' ' → logprob: -12.006503105163574
    10. ' all' → logprob: -12.256503105163574

Token 1512: ' whole' (ID: 6062)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6988286375999451
    2. '0' → logprob: -1.0738286972045898
    3. 'self' → logprob: -2.32382869720459
    4. 'range' → logprob: -3.32382869720459
    5. 'whole' → logprob: -3.69882869720459
    6. 'full' → logprob: -6.44882869720459
    7. '[' → logprob: -8.07382869720459
    8. 'all' → logprob: -8.44882869720459
    9. '_ent' → logprob: -9.32382869720459
    10. 'segment' → logprob: -9.69882869720459

Token 1513: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005898103583604097
    2. 'array' → logprob: -6.0058979988098145
    3. ' range' → logprob: -6.3808979988098145
    4. '[' → logprob: -6.7558979988098145
    5. '   ' → logprob: -7.6308979988098145
    6. '
' → logprob: -11.005898475646973
    7. ')' → logprob: -11.505898475646973
    8. ' array' → logprob: -11.505898475646973
    9. '       ' → logprob: -11.755898475646973
    10. '(' → logprob: -12.005898475646973

Token 1514: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9886595010757446
    2. '()' → logprob: -1.3636595010757446
    3. '[' → logprob: -1.9886595010757446
    4. '()
' → logprob: -2.113659381866455
    5. '(' → logprob: -2.238659381866455
    6. '   ' → logprob: -5.613659381866455
    7. ' (' → logprob: -6.488659381866455
    8. '()[' → logprob: -6.863659381866455
    9. '.' → logprob: -7.738659381866455
    10. '.
' → logprob: -7.863659381866455

Token 1515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. 'self' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.62500286102295
    4. '   ' → logprob: -16.375003814697266
    5. '(' → logprob: -17.000003814697266
    6. '00' → logprob: -19.000003814697266
    7. '
' → logprob: -19.250003814697266
    8. '`' → logprob: -19.375003814697266
    9. ',' → logprob: -20.000003814697266
    10. '[' → logprob: -20.000003814697266

Token 1516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034142236108891666
    2. 'self' → logprob: -8.375341415405273
    3. ',
' → logprob: -10.125341415405273
    4. ' ,' → logprob: -10.375341415405273
    5. ',self' → logprob: -10.625341415405273
    6. '   ' → logprob: -12.000341415405273
    7. ',n' → logprob: -12.000341415405273
    8. 'n' → logprob: -13.875341415405273
    9. '`,' → logprob: -14.375341415405273
    10. '
' → logprob: -14.625341415405273

Token 1517: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7729658540920354e-05
    2. ' self' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.250028610229492
    4. '(self' → logprob: -19.500028610229492
    5. '       ' → logprob: -20.250028610229492
    6. 'n' → logprob: -20.375028610229492
    7. '
' → logprob: -21.375028610229492
    8. '0' → logprob: -22.000028610229492
    9. ' ' → logprob: -22.125028610229492
    10. '```' → logprob: -22.250028610229492

Token 1518: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009982842952013016
    2. ')
' → logprob: -4.634983062744141
    3. '()' → logprob: -9.38498306274414
    4. ').' → logprob: -9.75998306274414
    5. '())' → logprob: -10.75998306274414
    6. ')`' → logprob: -10.75998306274414
    7. ']' → logprob: -11.13498306274414
    8. '   ' → logprob: -11.75998306274414
    9. ')`
' → logprob: -12.50998306274414
    10. ' )' → logprob: -12.88498306274414

Token 1519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023250321100931615
    2. '   ' → logprob: -9.750232696533203
    3. ':
' → logprob: -9.875232696533203
    4. '(self' → logprob: -10.125232696533203
    5. '):
' → logprob: -10.125232696533203
    6. '```' → logprob: -11.500232696533203
    7. 'return' → logprob: -11.625232696533203
    8. '():
' → logprob: -11.875232696533203
    9. ')' → logprob: -12.625232696533203
    10. '()' → logprob: -12.625232696533203

Token 1520: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47630175948143005
    2. 'return' → logprob: -0.9763017892837524
    3. ' return' → logprob: -6.226301670074463
    4. '   ' → logprob: -8.351302146911621
    5. '
' → logprob: -12.476302146911621
    6. '```' → logprob: -12.851302146911621
    7. '	return' → logprob: -13.726302146911621
    8. ':return' → logprob: -14.726302146911621
    9. '"""
' → logprob: -15.101302146911621
    10. '{return' → logprob: -15.476302146911621

Token 1521: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0021148123778402805
    2. '   ' → logprob: -6.502114772796631
    3. '       ' → logprob: -7.502114772796631
    4. ' return' → logprob: -10.002115249633789
    5. 'self' → logprob: -12.002115249633789
    6. 'def' → logprob: -12.252115249633789
    7. 'Return' → logprob: -13.752115249633789
    8. '           ' → logprob: -14.502115249633789
    9. '```' → logprob: -14.502115249633789
    10. ':return' → logprob: -14.627115249633789

Token 1522: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2990366220474243
    2. ':' → logprob: -1.4240366220474243
    3. 'return' → logprob: -4.799036502838135
    4. '   ' → logprob: -5.424036502838135
    5. ' return' → logprob: -6.174036502838135
    6. 'self' → logprob: -6.799036502838135
    7. ':
' → logprob: -6.924036502838135
    8. ':return' → logprob: -7.299036502838135
    9. ' self' → logprob: -9.674036979675293
    10. '```' → logprob: -10.049036979675293

Token 1523: ' Combined' (ID: 95922)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.000001907348633
    3. '       ' → logprob: -19.000001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '(self' → logprob: -20.500001907348633
    6. '	self' → logprob: -21.125001907348633
    7. 'Self' → logprob: -21.250001907348633
    8. '[self' → logprob: -21.375001907348633
    9. 'The' → logprob: -21.750001907348633
    10. '```' → logprob: -22.375001907348633

Token 1524: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7715610265731812
    2. 'value' → logprob: -1.5215610265731812
    3. '(self' → logprob: -2.0215611457824707
    4. ' self' → logprob: -2.2715611457824707
    5. 'self' → logprob: -2.5215611457824707
    6. '_value' → logprob: -7.021561145782471
    7. ' result' → logprob: -7.271561145782471
    8. ' (' → logprob: -7.646561145782471
    9. 'result' → logprob: -7.771561145782471
    10. '   ' → logprob: -8.521560668945312

Token 1525: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5464685559272766
    2. ' at' → logprob: -2.171468496322632
    3. '   ' → logprob: -2.296468496322632
    4. '
' → logprob: -2.796468496322632
    5. '[' → logprob: -3.046468496322632
    6. '<|end|>' → logprob: -3.671468496322632
    7. ' =' → logprob: -4.046468734741211
    8. ' of' → logprob: -4.546468734741211
    9. '(self' → logprob: -4.796468734741211
    10. '()' → logprob: -4.921468734741211

Token 1526: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043674863991327584
    2. '0' → logprob: -8.250436782836914
    3. 'the' → logprob: -8.875436782836914
    4. ' self' → logprob: -10.375436782836914
    5. '   ' → logprob: -12.875436782836914
    6. '(self' → logprob: -14.625436782836914
    7. '1' → logprob: -14.750436782836914
    8. '       ' → logprob: -15.375436782836914
    9. '[self' → logprob: -15.375436782836914
    10. ' the' → logprob: -16.125436782836914

Token 1527: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.001002324279397726
    2. '0' → logprob: -7.251002311706543
    3. '1' → logprob: -8.751002311706543
    4. 'root' → logprob: -9.251002311706543
    5. ' tree' → logprob: -10.876002311706543
    6. 'self' → logprob: -11.626002311706543
    7. '.tree' → logprob: -12.751002311706543
    8. '   ' → logprob: -13.001002311706543
    9. '[' → logprob: -13.376002311706543
    10. '	tree' → logprob: -14.626002311706543

Token 1528: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008347665891051292
    2. '   ' → logprob: -5.133347511291504
    3. '.' → logprob: -6.383347511291504
    4. ' at' → logprob: -8.133347511291504
    5. '       ' → logprob: -9.008347511291504
    6. '(' → logprob: -9.883347511291504
    7. '
' → logprob: -10.008347511291504
    8. ')' → logprob: -10.383347511291504
    9. 'def' → logprob: -10.508347511291504
    10. '[self' → logprob: -10.758347511291504

Token 1529: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.2791292369365692
    2. '0' → logprob: -1.5291292667388916
    3. 'range' → logprob: -4.6541290283203125
    4. '[' → logprob: -4.6541290283203125
    5. 'tree' → logprob: -5.6541290283203125
    6. ' ' → logprob: -6.7791290283203125
    7. ' root' → logprob: -6.9041290283203125
    8. 'nodes' → logprob: -7.6541290283203125
    9. 'array' → logprob: -7.9041290283203125
    10. 'node' → logprob: -8.779129028320312

Token 1530: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39940834045410156
    2. '.' → logprob: -2.3994083404541016
    3. '   ' → logprob: -2.3994083404541016
    4. ')' → logprob: -2.8994083404541016
    5. '()' → logprob: -3.2744083404541016
    6. '
' → logprob: -4.649408340454102
    7. ' node' → logprob: -4.899408340454102
    8. '```' → logprob: -5.024408340454102
    9. '       ' → logprob: -5.774408340454102
    10. ' at' → logprob: -5.774408340454102

Token 1531: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6700645685195923
    2. '       ' → logprob: -0.7950645685195923
    3. '
' → logprob: -3.7950644493103027
    4. 'return' → logprob: -5.045064449310303
    5. '```' → logprob: -5.045064449310303
    6. '()
' → logprob: -7.670064449310303
    7. '`' → logprob: -8.795064926147461
    8. ' return' → logprob: -8.795064926147461
    9. ')
' → logprob: -9.420064926147461
    10. '``' → logprob: -9.545064926147461

Token 1532: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07904929667711258
    2. 'return' → logprob: -2.5790493488311768
    3. '   ' → logprob: -9.579049110412598
    4. ' return' → logprob: -9.829049110412598
    5. '```' → logprob: -10.329049110412598
    6. '
' → logprob: -13.329049110412598
    7. '	return' → logprob: -14.329049110412598
    8. '`' → logprob: -14.454049110412598
    9. '{return' → logprob: -15.454049110412598
    10. '"""' → logprob: -15.579049110412598

Token 1533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10037629306316376
    2. 'return' → logprob: -2.3503763675689697
    3. '   ' → logprob: -9.10037612915039
    4. ' return' → logprob: -9.85037612915039
    5. '	return' → logprob: -12.60037612915039
    6. '```' → logprob: -13.72537612915039
    7. '{return' → logprob: -14.85037612915039
    8. '	' → logprob: -15.10037612915039
    9. '`' → logprob: -16.85037612915039
    10. '
' → logprob: -17.10037612915039

Token 1534: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.8789383830153383e-05
    2. '       ' → logprob: -11.000019073486328
    3. ' return' → logprob: -13.250019073486328
    4. '   ' → logprob: -15.500019073486328
    5. '	return' → logprob: -20.125019073486328
    6. '```' → logprob: -20.375019073486328
    7. '{return' → logprob: -23.000019073486328
    8. 'Return' → logprob: -23.625019073486328
    9. '        
' → logprob: -24.000019073486328
    10. '
' → logprob: -24.000019073486328

Token 1535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.2729995988775045e-06
    2. ' self' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.0000057220459
    4. '       ' → logprob: -21.0000057220459
    5. '	self' → logprob: -21.5000057220459
    6. '[self' → logprob: -21.6250057220459
    7. '(self' → logprob: -22.0000057220459
    8. '0' → logprob: -22.6250057220459
    9. '`' → logprob: -22.6250057220459
    10. '```' → logprob: -23.0000057220459

Token 1536: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00010902655776590109
    2. 'tree' → logprob: -9.50010871887207
    3. '[' → logprob: -10.50010871887207
    4. '.' → logprob: -12.75010871887207
    5. '	tree' → logprob: -13.50010871887207
    6. '.func' → logprob: -13.87510871887207
    7. ' .' → logprob: -15.25010871887207
    8. '.all' → logprob: -15.62510871887207
    9. 'All' → logprob: -15.62510871887207
    10. '```' → logprob: -15.75010871887207

Token 1537: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038100466132164
    2. '1' → logprob: -3.288100481033325
    3. '   ' → logprob: -9.788100242614746
    4. '       ' → logprob: -13.538100242614746
    5. '```' → logprob: -14.538100242614746
    6. '                   ' → logprob: -15.288100242614746
    7. '#' → logprob: -15.413100242614746
    8. '    ' → logprob: -15.788100242614746
    9. '\[' → logprob: -15.913100242614746
    10. ' [' → logprob: -16.413101196289062

Token 1538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -17.0
    3. ' ' → logprob: -17.375
    4. '     ' → logprob: -20.25
    5. '    ' → logprob: -20.25
    6. '
' → logprob: -21.0
    7. '１' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. '       ' → logprob: -21.5
    10. '  ' → logprob: -21.75

Token 1539: ']

' (ID: 3144)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -1.1091594696044922
    2. ')' → logprob: -1.2341594696044922
    3. ']' → logprob: -1.3591594696044922
    4. '<|end|>' → logprob: -2.109159469604492
    5. '```' → logprob: -7.609159469604492
    6. '   ' → logprob: -8.859159469604492
    7. '<|end|>' → logprob: -8.984159469604492
    8. '()' → logprob: -10.359159469604492
    9. ' }' → logprob: -11.609159469604492
    10. '}
' → logprob: -11.609159469604492

Token 1540: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1541: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09087059646844864
    2. '#' → logprob: -2.8408706188201904
    3. 'import' → logprob: -3.8408706188201904
    4. 'class' → logprob: -5.465870380401611
    5. '<|end|>' → logprob: -6.840870380401611
    6. 'from' → logprob: -7.215870380401611
    7. '```' → logprob: -7.715870380401611
    8. 'n' → logprob: -8.71587085723877
    9. '[' → logprob: -9.21587085723877
    10. 'a' → logprob: -9.34087085723877

Token 1542: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47499409317970276
    2. 'N' → logprob: -0.9749940633773804
    3. 'def' → logprob: -7.97499418258667
    4. 'H' → logprob: -8.474993705749512
    5. 'h' → logprob: -9.349993705749512
    6. ' n' → logprob: -9.599993705749512
    7. '()' → logprob: -10.224993705749512
    8. ' N' → logprob: -10.349993705749512
    9. 'import' → logprob: -10.849993705749512
    10. '
' → logprob: -11.099993705749512

Token 1543: ' for' (ID: 395)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06328267604112625
    2. 'n' → logprob: -2.8132827281951904
    3. 'H' → logprob: -7.313282489776611
    4. 'Q' → logprob: -7.438282489776611
    5. 'L' → logprob: -11.06328296661377
    6. 'q' → logprob: -11.43828296661377
    7. 'h' → logprob: -11.68828296661377
    8. 'D' → logprob: -12.06328296661377
    9. 'def' → logprob: -12.18828296661377
    10. 'X' → logprob: -12.43828296661377

Token 1544: ' problem' (ID: 4792)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20426008105278015
    2. 'N' → logprob: -1.7042601108551025
    3. 'def' → logprob: -5.954259872436523
    4. ' n' → logprob: -9.829259872436523
    5. 't' → logprob: -10.204259872436523
    6. '#' → logprob: -10.579259872436523
    7. 'h' → logprob: -10.704259872436523
    8. 'H' → logprob: -10.954259872436523
    9. 'Q' → logprob: -11.329259872436523
    10. 'a' → logprob: -11.329259872436523

Token 1545: ' parameters' (ID: 9621)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08182419091463089
    2. 'n' → logprob: -2.58182430267334
    3. 'Q' → logprob: -6.33182430267334
    4. 'H' → logprob: -6.83182430267334
    5. 'def' → logprob: -11.08182430267334
    6. 'D' → logprob: -11.45682430267334
    7. 'q' → logprob: -11.58182430267334
    8. 'h' → logprob: -11.83182430267334
    9. 't' → logprob: -12.08182430267334
    10. 'L' → logprob: -12.45682430267334

Token 1546: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.221764475107193
    2. 'n' → logprob: -1.9717644453048706
    3. 'H' → logprob: -2.84676456451416
    4. 'h' → logprob: -6.47176456451416
    5. 'X' → logprob: -11.47176456451416
    6. 'Q' → logprob: -11.47176456451416
    7. '(n' → logprob: -11.59676456451416
    8. 'S' → logprob: -11.84676456451416
    9. 'L' → logprob: -11.84676456451416
    10. '(H' → logprob: -11.97176456451416

Token 1547: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4781561493873596
    2. '=' → logprob: -0.9781561493873596
    3. '=N' → logprob: -5.978156089782715
    4. ' =' → logprob: -6.853156089782715
    5. 'n' → logprob: -7.978156089782715
    6. ',' → logprob: -9.228156089782715
    7. '(N' → logprob: -11.853156089782715
    8. '=
' → logprob: -11.978156089782715
    9. ',N' → logprob: -12.103156089782715
    10. '
' → logprob: -12.353156089782715

Token 1548: 'string' (ID: 1655)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2627510130405426
    2. ')' → logprob: -2.0127511024475098
    3. '=' → logprob: -3.2627511024475098
    4. ',K' → logprob: -4.13775110244751
    5. 'N' → logprob: -4.51275110244751
    6. 'K' → logprob: -4.63775110244751
    7. ',Q' → logprob: -5.13775110244751
    8. ',N' → logprob: -5.13775110244751
    9. 'n' → logprob: -6.13775110244751
    10. '
' → logprob: -6.38775110244751

Token 1549: ' length' (ID: 5517)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5871903896331787
    2. '=' → logprob: -0.8371903896331787
    3. ')' → logprob: -5.212190628051758
    4. ' =' → logprob: -5.587190628051758
    5. 's' → logprob: -7.712190628051758
    6. ',K' → logprob: -8.337190628051758
    7. 'and' → logprob: -8.837190628051758
    8. ',s' → logprob: -9.337190628051758
    9. ',M' → logprob: -9.462190628051758
    10. ',N' → logprob: -9.587190628051758

Token 1550: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03549354895949364
    2. '=' → logprob: -3.7854936122894287
    3. ',Q' → logprob: -5.41049337387085
    4. ' =' → logprob: -5.78549337387085
    5. ',K' → logprob: -6.28549337387085
    6. ',N' → logprob: -6.66049337387085
    7. ',M' → logprob: -7.78549337387085
    8. ',n' → logprob: -8.535493850708008
    9. ',S' → logprob: -8.785493850708008
    10. 'Q' → logprob: -9.285493850708008

Token 1551: ' M' (ID: 391)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.04983547329902649
    2. 'K' → logprob: -3.549835443496704
    3. 'M' → logprob: -4.424835681915283
    4. 'S' → logprob: -5.299835681915283
    5. 'N' → logprob: -6.674835681915283
    6. 'n' → logprob: -7.674835681915283
    7. 's' → logprob: -7.799835681915283
    8. 'q' → logprob: -7.799835681915283
    9. 'L' → logprob: -9.549835205078125
    10. ' Q' → logprob: -9.799835205078125

Token 1552: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5208942294120789
    2. ',' → logprob: -1.0208942890167236
    3. ' =' → logprob: -3.7708942890167236
    4. 'N' → logprob: -4.1458940505981445
    5. ',N' → logprob: -5.5208940505981445
    6. ',M' → logprob: -7.3958940505981445
    7. '=N' → logprob: -7.3958940505981445
    8. 'M' → logprob: -7.8958940505981445
    9. 'n' → logprob: -8.395894050598145
    10. ',S' → logprob: -8.895894050598145

Token 1553: 'maximum' (ID: 78601)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.806421160697937
    2. 'M' → logprob: -0.931421160697937
    3. 'int' → logprob: -3.0564212799072266
    4. ',M' → logprob: -3.1814212799072266
    5. ')' → logprob: -4.431421279907227
    6. 'N' → logprob: -4.431421279907227
    7. ',int' → logprob: -4.556421279907227
    8. 'K' → logprob: -4.556421279907227
    9. 'INT' → logprob: -4.681421279907227
    10. ',K' → logprob: -5.806421279907227

Token 1554: ' jump' (ID: 13843)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8110583424568176
    2. '=' → logprob: -1.3110582828521729
    3. ' =' → logprob: -2.061058282852173
    4. 'length' → logprob: -2.686058282852173
    5. 'k' → logprob: -3.936058282852173
    6. ',' → logprob: -4.061058521270752
    7. 'value' → logprob: -4.436058521270752
    8. '
' → logprob: -5.061058521270752
    9. 'len' → logprob: -5.061058521270752
    10. 'Q' → logprob: -5.186058521270752

Token 1555: ' length' (ID: 5517)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2600210905075073
    2. '=' → logprob: -2.385021209716797
    3. ')' → logprob: -3.260021209716797
    4. ' =' → logprob: -3.385021209716797
    5. '):
' → logprob: -3.635021209716797
    6. '()' → logprob: -4.385021209716797
    7. ')
' → logprob: -5.260021209716797
    8. '):' → logprob: -5.385021209716797
    9. '()
' → logprob: -5.385021209716797
    10. ',N' → logprob: -6.385021209716797

Token 1556: ')
' (ID: 446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16396135091781616
    2. ',' → logprob: -2.413961410522461
    3. ' =' → logprob: -2.913961410522461
    4. ')' → logprob: -5.413961410522461
    5. '
' → logprob: -7.288961410522461
    6. 'N' → logprob: -7.538961410522461
    7. '=N' → logprob: -7.788961410522461
    8. ')=' → logprob: -8.163961410522461
    9. ',N' → logprob: -8.288961410522461
    10. '()' → logprob: -8.788961410522461

Token 1557: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -15.75
    3. '_N' → logprob: -17.125
    4. ' N' → logprob: -17.375
    5. '
' → logprob: -17.875
    6. 'Ｎ' → logprob: -18.125
    7. '#' → logprob: -19.5
    8. '

' → logprob: -19.75
    9. '```' → logprob: -20.375
    10. 'def' → logprob: -20.375

Token 1558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011062316596508026
    2. ',M' → logprob: -4.511062145233154
    3. 'M' → logprob: -11.636062622070312
    4. ' ,' → logprob: -12.761062622070312
    5. ',m' → logprob: -13.886062622070312
    6. '=' → logprob: -14.011062622070312
    7. ',N' → logprob: -14.886062622070312
    8. ',
' → logprob: -15.636062622070312
    9. ',Q' → logprob: -16.386062622070312
    10. ' =' → logprob: -16.511062622070312

Token 1559: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.5716304410016164e-05
    2. ' M' → logprob: -10.250035285949707
    3. 'K' → logprob: -16.000036239624023
    4. '=' → logprob: -16.250036239624023
    5. '=M' → logprob: -18.375036239624023
    6. '_' → logprob: -18.625036239624023
    7. ' =' → logprob: -18.750036239624023
    8. '_M' → logprob: -18.750036239624023
    9. 'm' → logprob: -18.875036239624023
    10. 'D' → logprob: -20.000036239624023

Token 1560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6166903151315637e-05
    2. ' =' → logprob: -11.125016212463379
    3. '=N' → logprob: -13.625016212463379
    4. '=
' → logprob: -17.250015258789062
    5. '=input' → logprob: -17.250015258789062
    6. '=

' → logprob: -17.500015258789062
    7. '=M' → logprob: -17.875015258789062
    8. '＝' → logprob: -17.875015258789062
    9. '=list' → logprob: -19.250015258789062
    10. '=int' → logprob: -19.250015258789062

Token 1561: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.14462536573410034
    2. 'map' → logprob: -2.394625425338745
    3. 'LIST' → logprob: -3.144625425338745
    4. 'list' → logprob: -8.769625663757324
    5. ' map' → logprob: -8.894625663757324
    6. ' MAP' → logprob: -9.769625663757324
    7. 'input' → logprob: -12.144625663757324
    8. ' LIST' → logprob: -13.019625663757324
    9. 'INT' → logprob: -13.144625663757324
    10. ' ' → logprob: -13.519625663757324

Token 1562: '()
' (ID: 1234)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.015245252288877964
    2. 'H' → logprob: -5.01524543762207
    3. 'A' → logprob: -5.39024543762207
    4. 's' → logprob: -6.51524543762207
    5. 'K' → logprob: -7.51524543762207
    6. 'W' → logprob: -7.64024543762207
    7. 'L' → logprob: -8.51524543762207
    8. 'D' → logprob: -8.51524543762207
    9. 'a' → logprob: -8.64024543762207
    10. 'C' → logprob: -8.64024543762207

Token 1563: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0025699487887322903
    2. 's' → logprob: -6.252570152282715
    3. 'A' → logprob: -7.877570152282715
    4. 'H' → logprob: -9.752570152282715
    5. 'W' → logprob: -9.877570152282715
    6. 'C' → logprob: -10.377570152282715
    7. 'a' → logprob: -10.752570152282715
    8. 'K' → logprob: -11.002570152282715
    9. 'D' → logprob: -11.252570152282715
    10. 'T' → logprob: -11.502570152282715

Token 1564: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03370748460292816
    2. ' =' → logprob: -3.4087073802948
    3. '()' → logprob: -9.783707618713379
    4. '=input' → logprob: -12.533707618713379
    5. '_' → logprob: -14.408707618713379
    6. '   ' → logprob: -14.783707618713379
    7. '(' → logprob: -15.658707618713379
    8. '＝' → logprob: -15.908707618713379
    9. ' ' → logprob: -16.158706665039062
    10. 's' → logprob: -16.533706665039062

Token 1565: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.4391956685576588e-05
    2. 'list' → logprob: -10.750024795532227
    3. ' input' → logprob: -12.750024795532227
    4. '(input' → logprob: -18.250024795532227
    5. '<input' → logprob: -19.875024795532227
    6. 'str' → logprob: -20.250024795532227
    7. '```' → logprob: -20.250024795532227
    8. '=input' → logprob: -20.500024795532227
    9. '	input' → logprob: -21.250024795532227
    10. '[input' → logprob: -21.500024795532227

Token 1566: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.3464544432936236e-05
    2. '().' → logprob: -10.500043869018555
    3. '()
' → logprob: -11.125043869018555
    4. '()`' → logprob: -14.500043869018555
    5. '())' → logprob: -15.250043869018555
    6. ' ()' → logprob: -15.875043869018555
    7. '()

' → logprob: -16.000043869018555
    8. '()"' → logprob: -17.000043869018555
    9. '()]' → logprob: -17.250043869018555
    10. '()
' → logprob: -17.250043869018555

Token 1567: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004233562387526035
    2. '#' → logprob: -6.629233360290527
    3. 'dist' → logprob: -7.129233360290527
    4. 'from' → logprob: -7.504233360290527
    5. 'INF' → logprob: -7.504233360290527
    6. 'DP' → logprob: -8.629233360290527
    7. 'pos' → logprob: -9.129233360290527
    8. 'ans' → logprob: -9.129233360290527
    9. 'd' → logprob: -9.754233360290527
    10. 'cost' → logprob: -10.004233360290527

Token 1568: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005662006326019764
    2. 'INF' → logprob: -5.755661964416504
    3. '#' → logprob: -7.130661964416504
    4. 'DP' → logprob: -7.630661964416504
    5. 'cost' → logprob: -8.005661964416504
    6. 'from' → logprob: -8.255661964416504
    7. 'dist' → logprob: -8.255661964416504
    8. 'D' → logprob: -9.255661964416504
    9. 'd' → logprob: -10.380661964416504
    10. 'C' → logprob: -11.255661964416504

Token 1569: ' String' (ID: 1189)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002687540603801608
    2. 'from' → logprob: -7.002687454223633
    3. '#' → logprob: -7.127687454223633
    4. 'DP' → logprob: -8.377687454223633
    5. 'INF' → logprob: -8.377687454223633
    6. 'cost' → logprob: -9.127687454223633
    7. 'dist' → logprob: -9.252687454223633
    8. 'd' → logprob: -10.002687454223633
    9. 'import' → logprob: -10.627687454223633
    10. 'D' → logprob: -10.627687454223633

Token 1570: ' representing' (ID: 25389)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003220133949071169
    2. '#' → logprob: -7.128220081329346
    3. 'INF' → logprob: -7.128220081329346
    4. 'dist' → logprob: -7.253220081329346
    5. 'DP' → logprob: -8.003220558166504
    6. 'from' → logprob: -8.878220558166504
    7. 'cost' → logprob: -9.003220558166504
    8. 'd' → logprob: -9.753220558166504
    9. 'D' → logprob: -9.753220558166504
    10. 'steps' → logprob: -10.628220558166504

Token 1571: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.11438331753015518
    2. 'the' → logprob: -2.6143832206726074
    3. 'steps' → logprob: -3.7393832206726074
    4. '...' → logprob: -5.864383220672607
    5. 'ob' → logprob: -6.239383220672607
    6. 'platform' → logprob: -6.489383220672607
    7. '_' → logprob: -7.364383220672607
    8. 'jump' → logprob: -7.739383220672607
    9. 'cells' → logprob: -7.864383220672607
    10. 'levels' → logprob: -8.239383697509766

Token 1572: ' board' (ID: 6796)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7907193303108215
    2. 'steps' → logprob: -1.2907192707061768
    3. 'ob' → logprob: -2.4157192707061768
    4. 'platform' → logprob: -3.1657192707061768
    5. 'road' → logprob: -3.2907192707061768
    6. 'terrain' → logprob: -3.2907192707061768
    7. 'field' → logprob: -4.540719509124756
    8. 'positions' → logprob: -4.540719509124756
    9. 'levels' → logprob: -4.540719509124756
    10. 'stones' → logprob: -5.790719509124756

Token 1573: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005161293316632509
    2. '#' → logprob: -6.380161285400391
    3. 'cost' → logprob: -7.005161285400391
    4. 'DP' → logprob: -7.505161285400391
    5. 'INF' → logprob: -7.630161285400391
    6. 'from' → logprob: -8.25516128540039
    7. 'C' → logprob: -8.63016128540039
    8. 'D' → logprob: -8.63016128540039
    9. 'd' → logprob: -9.13016128540039
    10. 'dist' → logprob: -9.25516128540039

Token 1574: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05176280811429024
    2. 's' → logprob: -3.801762819290161
    3. '")' → logprob: -4.426762580871582
    4. 'S' → logprob: -5.551762580871582
    5. '#' → logprob: -5.801762580871582
    6. '...)' → logprob: -5.926762580871582
    7. '...' → logprob: -6.801762580871582
    8. '')' → logprob: -6.926762580871582
    9. '
' → logprob: -7.176762580871582
    10. ').' → logprob: -7.301762580871582

Token 1575: '=open' (ID: 136120)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.438067227602005
    2. '=' → logprob: -1.4380671977996826
    3. ' =' → logprob: -2.9380671977996826
    4. ')
' → logprob: -4.188067436218262
    5. ',' → logprob: -5.188067436218262
    6. '#' → logprob: -5.188067436218262
    7. 'index' → logprob: -5.313067436218262
    8. '==' → logprob: -5.438067436218262
    9. 's' → logprob: -5.813067436218262
    10. '   ' → logprob: -5.938067436218262

Token 1576: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12094257771968842
    2. ',' → logprob: -3.6209425926208496
    3. '')' → logprob: -3.6209425926208496
    4. '")' → logprob: -4.49594259262085
    5. 's' → logprob: -4.87094259262085
    6. '()' → logprob: -5.12094259262085
    7. ')
' → logprob: -5.37094259262085
    8. '())' → logprob: -5.74594259262085
    9. ' or' → logprob: -5.74594259262085
    10. '`)' → logprob: -5.74594259262085

Token 1577: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015787787269800901
    2. ''' → logprob: -7.3765788078308105
    3. '
' → logprob: -7.8765788078308105
    4. '#' → logprob: -8.626578330993652
    5. ' ' → logprob: -8.876578330993652
    6. '_' → logprob: -9.876578330993652
    7. '.' → logprob: -10.126578330993652
    8. ')' → logprob: -10.251578330993652
    9. '...' → logprob: -10.251578330993652
    10. ''s' → logprob: -11.126578330993652

Token 1578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1299767941236496
    2. ''' → logprob: -2.129976749420166
    3. '"' → logprob: -7.254976749420166
    4. '.' → logprob: -7.504976749420166
    5. '`' → logprob: -7.754976749420166
    6. ')' → logprob: -8.254977226257324
    7. '#' → logprob: -8.254977226257324
    8. '_' → logprob: -9.129977226257324
    9. '...' → logprob: -9.129977226257324
    10. '
' → logprob: -9.129977226257324

Token 1579: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0878928080201149
    2. '=' → logprob: -3.087892770767212
    3. ' =' → logprob: -4.587893009185791
    4. '#' → logprob: -5.337893009185791
    5. '")' → logprob: -6.087893009185791
    6. ' )' → logprob: -6.087893009185791
    7. '==' → logprob: -6.212893009185791
    8. '())' → logprob: -6.337893009185791
    9. 's' → logprob: -6.587893009185791
    10. '')' → logprob: -6.712893009185791

Token 1580: 'blocked' (ID: 114537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.542015016078949
    2. '1' → logprob: -1.2920150756835938
    3. ')' → logprob: -2.4170150756835938
    4. '')' → logprob: -4.417015075683594
    5. '0' → logprob: -4.667015075683594
    6. 'input' → logprob: -5.292015075683594
    7. 'S' → logprob: -5.542015075683594
    8. ''S' → logprob: -5.667015075683594
    9. '"' → logprob: -5.792015075683594
    10. '`' → logprob: -6.042015075683594

Token 1581: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001287140417844057
    2. 'dp' → logprob: -8.126287460327148
    3. '#' → logprob: -8.251287460327148
    4. ')
' → logprob: -8.376287460327148
    5. 'positions' → logprob: -9.376287460327148
    6. 's' → logprob: -10.001287460327148
    7. ').' → logprob: -10.251287460327148
    8. 'board' → logprob: -10.251287460327148
    9. 'steps' → logprob: -10.251287460327148
    10. '")' → logprob: -10.376287460327148

Token 1582: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010017282329499722
    2. '#' → logprob: -7.501001834869385
    3. 'from' → logprob: -8.251001358032227
    4. 'INF' → logprob: -9.501001358032227
    5. 'DP' → logprob: -9.876001358032227
    6. 'dist' → logprob: -10.501001358032227
    7. 'd' → logprob: -12.376001358032227
    8. 'D' → logprob: -12.626001358032227
    9. 'can' → logprob: -12.751001358032227
    10. 'inf' → logprob: -13.001001358032227

Token 1583: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008959780680015683
    2. '#' → logprob: -7.375895977020264
    3. 'dist' → logprob: -8.750896453857422
    4. 'from' → logprob: -9.875896453857422
    5. 'seg' → logprob: -10.250896453857422
    6. 'DP' → logprob: -11.750896453857422
    7. 'INF' → logprob: -12.250896453857422
    8. 'd' → logprob: -12.750896453857422
    9. 'st' → logprob: -13.000896453857422
    10. 'cost' → logprob: -13.625896453857422

Token 1584: ' dynamic' (ID: 14012)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0020214279647916555
    2. 'dist' → logprob: -6.252021312713623
    3. '#' → logprob: -9.752021789550781
    4. 'from' → logprob: -10.752021789550781
    5. 'd' → logprob: -12.377021789550781
    6. 'cost' → logprob: -12.377021789550781
    7. 'DP' → logprob: -13.252021789550781
    8. ' dp' → logprob: -14.252021789550781
    9. 'INF' → logprob: -14.627021789550781
    10. 'import' → logprob: -15.252021789550781

Token 1585: ' programming' (ID: 23238)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.17253662645816803
    2. 'prog' → logprob: -2.297536611557007
    3. ' programming' → logprob: -3.672536611557007
    4. '_program' → logprob: -3.797536611557007
    5. 'dp' → logprob: -5.922536849975586
    6. '_prog' → logprob: -5.922536849975586
    7. 'import' → logprob: -6.047536849975586
    8. ' =' → logprob: -6.922536849975586
    9. 'Programming' → logprob: -7.297536849975586
    10. '
' → logprob: -8.672536849975586

Token 1586: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00035155098885297775
    2. 'DP' → logprob: -8.000351905822754
    3. ' dp' → logprob: -12.375351905822754
    4. '```' → logprob: -12.625351905822754
    5. '#' → logprob: -12.750351905822754
    6. 'D' → logprob: -13.625351905822754
    7. '_dp' → logprob: -14.000351905822754
    8. '
' → logprob: -14.125351905822754
    9. '(dp' → logprob: -14.250351905822754
    10. ' =' → logprob: -14.250351905822754

Token 1587: ' with' (ID: 483)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9862216504407115e-05
    2. 'DP' → logprob: -10.875020027160645
    3. '```' → logprob: -15.000020027160645
    4. ' dp' → logprob: -15.250020027160645
    5. '
' → logprob: -16.250019073486328
    6. '`' → logprob: -16.500019073486328
    7. '   ' → logprob: -17.125019073486328
    8. '#' → logprob: -17.125019073486328
    9. 'd' → logprob: -17.375019073486328
    10. '_dp' → logprob: -17.500019073486328

Token 1588: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.003156449645757675
    2. '[' → logprob: -5.878156661987305
    3. 'list' → logprob: -9.003156661987305
    4. 'dp' → logprob: -9.628156661987305
    5. '[-' → logprob: -10.003156661987305
    6. 'False' → logprob: -10.253156661987305
    7. '[N' → logprob: -10.753156661987305
    8. 'inf' → logprob: -11.003156661987305
    9. '[n' → logprob: -12.128156661987305
    10. '-' → logprob: -12.378156661987305

Token 1589: ' as' (ID: 472)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00020687808864749968
    2. 'DP' → logprob: -8.50020694732666
    3. 'D' → logprob: -14.25020694732666
    4. '   ' → logprob: -14.50020694732666
    5. 'd' → logprob: -14.50020694732666
    6. '```' → logprob: -14.62520694732666
    7. '
' → logprob: -14.75020694732666
    8. ' dp' → logprob: -14.87520694732666
    9. 'dist' → logprob: -15.62520694732666
    10. '`' → logprob: -16.375205993652344

Token 1590: ' default' (ID: 2787)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.03825229033827782
    2. 'initial' → logprob: -3.788252353668213
    3. 'list' → logprob: -4.538252353668213
    4. 'the' → logprob: -6.288252353668213
    5. '[' → logprob: -6.538252353668213
    6. 'inf' → logprob: -7.788252353668213
    7. 'a' → logprob: -9.038251876831055
    8. ' INF' → logprob: -9.663251876831055
    9. 'default' → logprob: -9.788251876831055
    10. '```' → logprob: -10.038251876831055

Token 1591: ' value' (ID: 1432)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.0033853515051305e-05
    2. 'DP' → logprob: -9.875060081481934
    3. 'd' → logprob: -13.000060081481934
    4. '```' → logprob: -13.250060081481934
    5. 'D' → logprob: -13.375060081481934
    6. '   ' → logprob: -14.125060081481934
    7. 'dist' → logprob: -14.500060081481934
    8. ' dp' → logprob: -14.750060081481934
    9. '`' → logprob: -14.750060081481934
    10. '
' → logprob: -15.750060081481934

Token 1592: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00018280261429026723
    2. 'DP' → logprob: -8.62518310546875
    3. '   ' → logprob: -14.00018310546875
    4. ' dp' → logprob: -14.50018310546875
    5. '```' → logprob: -14.62518310546875
    6. 'D' → logprob: -14.75018310546875
    7. 'dist' → logprob: -14.75018310546875
    8. 'd' → logprob: -15.37518310546875
    9. '`' → logprob: -16.87518310546875
    10. '
' → logprob: -17.00018310546875

Token 1593: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00019185843120794743
    2. 'DP' → logprob: -8.625191688537598
    3. 'D' → logprob: -12.000191688537598
    4. 'd' → logprob: -12.625191688537598
    5. 'dist' → logprob: -13.625191688537598
    6. '#' → logprob: -15.125191688537598
    7. 'from' → logprob: -15.625191688537598
    8. '```' → logprob: -15.625191688537598
    9. 'cost' → logprob: -15.875191688537598
    10. ' dp' → logprob: -16.250192642211914

Token 1594: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04870784282684326
    2. ' =' → logprob: -3.048707962036133
    3. '=list' → logprob: -9.048707962036133
    4. '=[' → logprob: -13.048707962036133
    5. '＝' → logprob: -15.048707962036133
    6. '[' → logprob: -15.423707962036133
    7. '```' → logprob: -16.048707962036133
    8. ' ' → logprob: -16.923707962036133
    9. '=create' → logprob: -17.423707962036133
    10. ')' → logprob: -17.673707962036133

Token 1595: ' Seg' (ID: 13616)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.008046391420066357
    2. '[' → logprob: -5.258046627044678
    3. 'list' → logprob: -5.883046627044678
    4. ' [' → logprob: -12.00804615020752
    5. '[List' → logprob: -12.50804615020752
    6. '[len' → logprob: -12.88304615020752
    7. '[int' → logprob: -13.25804615020752
    8. '[class' → logprob: -13.63304615020752
    9. '[node' → logprob: -13.75804615020752
    10. '[N' → logprob: -13.88304615020752

Token 1596: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.2664456789934775e-06
    2. 'tree' → logprob: -14.750000953674316
    3. 'List' → logprob: -15.125000953674316
    4. '[' → logprob: -15.250000953674316
    5. 'ree' → logprob: -16.500001907348633
    6. '[N' → logprob: -16.500001907348633
    7. 'list' → logprob: -17.375001907348633
    8. '	Tree' → logprob: -18.250001907348633
    9. '[n' → logprob: -18.375001907348633
    10. '[T' → logprob: -18.750001907348633

Token 1597: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.023449167609214783
    2. 'N' → logprob: -3.773449182510376
    3. '(' → logprob: -9.273448944091797
    4. '   ' → logprob: -9.773448944091797
    5. '[N' → logprob: -11.398448944091797
    6. '```' → logprob: -11.648448944091797
    7. '(len' → logprob: -12.023448944091797
    8. '(S' → logprob: -12.148448944091797
    9. '(M' → logprob: -12.148448944091797
    10. '((' → logprob: -13.023448944091797

Token 1598: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013166792632546276
    2. ',
' → logprob: -10.250131607055664
    3. ' ,' → logprob: -10.500131607055664
    4. ',,' → logprob: -11.500131607055664
    5. '   ' → logprob: -11.625131607055664
    6. '+' → logprob: -11.750131607055664
    7. '+,' → logprob: -11.750131607055664
    8. ')' → logprob: -12.125131607055664
    9. ',M' → logprob: -12.375131607055664
    10. '(),' → logprob: -12.750131607055664

Token 1599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017106400337070227
    2. '2' → logprob: -7.126710414886475
    3. '10' → logprob: -7.251710414886475
    4. '5' → logprob: -9.126710891723633
    5. '3' → logprob: -10.251710891723633
    6. '7' → logprob: -10.876710891723633
    7. '0' → logprob: -11.126710891723633
    8. '4' → logprob: -12.126710891723633
    9. '100' → logprob: -12.876710891723633
    10. '20' → logprob: -13.001710891723633

Token 1600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019388488726690412
    2. '2' → logprob: -9.50019359588623
    3. '10' → logprob: -9.75019359588623
    4. '5' → logprob: -10.50019359588623
    5. '3' → logprob: -11.12519359588623
    6. '7' → logprob: -12.00019359588623
    7. '4' → logprob: -12.25019359588623
    8. '0' → logprob: -13.00019359588623
    9. '6' → logprob: -13.87519359588623
    10. '20' → logprob: -14.25019359588623

Token 1601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011069540778407827
    2. '   ' → logprob: -10.000110626220703
    3. ' ,' → logprob: -10.500110626220703
    4. ',min' → logprob: -10.625110626220703
    5. ')' → logprob: -12.750110626220703
    6. ',int' → logprob: -13.000110626220703
    7. 'min' → logprob: -13.625110626220703
    8. '(),' → logprob: -13.875110626220703
    9. ',
' → logprob: -13.875110626220703
    10. '=' → logprob: -14.250110626220703

Token 1602: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.52919222577475e-05
    2. 'lambda' → logprob: -9.500075340270996
    3. '
' → logprob: -16.12507438659668
    4. '   ' → logprob: -16.25007438659668
    5. 'max' → logprob: -16.37507438659668
    6. ' min' → logprob: -17.37507438659668
    7. '(min' → logprob: -17.87507438659668
    8. 'minimum' → logprob: -18.37507438659668
    9. 'func' → logprob: -19.00007438659668
    10. '    
' → logprob: -19.12507438659668

Token 1603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003843173326458782
    2. ',int' → logprob: -8.125384330749512
    3. ',float' → logprob: -9.875384330749512
    4. ' ,' → logprob: -11.250384330749512
    5. 'INF' → logprob: -12.000384330749512
    6. '_,' → logprob: -13.000384330749512
    7. ',
' → logprob: -13.250384330749512
    8. ')' → logprob: -13.250384330749512
    9. '```' → logprob: -13.375384330749512
    10. '(),' → logprob: -13.500384330749512

Token 1604: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.9361264946837764e-07
    2. ' INF' → logprob: -16.0
    3. '_INF' → logprob: -19.5
    4. '10' → logprob: -19.75
    5. 'inf' → logprob: -19.75
    6. '   ' → logprob: -21.875
    7. '0' → logprob: -22.0
    8. 'dp' → logprob: -22.0
    9. 'IN' → logprob: -22.0
    10. '-INF' → logprob: -22.0

Token 1605: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11415734142065048
    2. ',' → logprob: -2.4891574382781982
    3. ')
' → logprob: -3.7391574382781982
    4. ')

' → logprob: -7.114157199859619
    5. ',)' → logprob: -9.239157676696777
    6. ')
' → logprob: -9.364157676696777
    7. 'INF' → logprob: -10.614157676696777
    8. ',
' → logprob: -11.364157676696777
    9. ')

' → logprob: -11.489157676696777
    10. ' )' → logprob: -11.614157676696777

Token 1606: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00037621514638885856
    2. ')' → logprob: -8.750375747680664
    3. 'for' → logprob: -9.375375747680664
    4. '
' → logprob: -9.875375747680664
    5. '(dp' → logprob: -10.750375747680664
    6. '#' → logprob: -10.875375747680664
    7. ')
' → logprob: -11.250375747680664
    8. ' dp' → logprob: -12.125375747680664
    9. 'print' → logprob: -12.375375747680664
    10. '[' → logprob: -12.750375747680664

Token 1607: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00016361083544325083
    2. '
' → logprob: -10.000164031982422
    3. 'for' → logprob: -10.000164031982422
    4. '#' → logprob: -10.375164031982422
    5. ')' → logprob: -10.500164031982422
    6. ')
' → logprob: -11.500164031982422
    7. '(dp' → logprob: -14.250164031982422
    8. ' dp' → logprob: -14.375164031982422
    9. '.dp' → logprob: -14.375164031982422
    10. '[' → logprob: -15.000164031982422

Token 1608: ' Use' (ID: 7649)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.7888184528565034e-05
    2. 'for' → logprob: -10.3750581741333
    3. '#' → logprob: -10.6250581741333
    4. '
' → logprob: -13.3750581741333
    5. ' dp' → logprob: -15.0000581741333
    6. '  
' → logprob: -16.625057220458984
    7. '0' → logprob: -16.875057220458984
    8. 'd' → logprob: -17.500057220458984
    9. '(dp' → logprob: -17.500057220458984
    10. '
' → logprob: -17.625057220458984

Token 1609: ' segment' (ID: 14806)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.054070938378572464
    2. 'dp' → logprob: -3.5540709495544434
    3. ')' → logprob: -5.054070949554443
    4. 'N' → logprob: -5.804070949554443
    5. '0' → logprob: -5.929070949554443
    6. '[' → logprob: -6.179070949554443
    7. 'min' → logprob: -6.679070949554443
    8. 'lambda' → logprob: -7.054070949554443
    9. 'float' → logprob: -7.429070949554443
    10. 'range' → logprob: -7.554070949554443

Token 1610: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.06115805730223656
    2. '_tree' → logprob: -4.186158180236816
    3. ')' → logprob: -4.311158180236816
    4. 'Tree' → logprob: -4.561158180236816
    5. '.tree' → logprob: -5.686158180236816
    6. '   ' → logprob: -5.936158180236816
    7. '.' → logprob: -6.061158180236816
    8. 'dp' → logprob: -6.186158180236816
    9. ' tree' → logprob: -6.686158180236816
    10. ').' → logprob: -7.061158180236816

Token 1611: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0038329751696437597
    2. ')' → logprob: -6.003832817077637
    3. ')
' → logprob: -7.628832817077637
    4. '#' → logprob: -8.128832817077637
    5. '
' → logprob: -8.128832817077637
    6. '<|end|>' → logprob: -9.503832817077637
    7. ').' → logprob: -10.003832817077637
    8. 'for' → logprob: -10.128832817077637
    9. '.dp' → logprob: -10.253832817077637
    10. '(dp' → logprob: -10.753832817077637

Token 1612: ' range' (ID: 3352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2662464678287506
    2. 'range' → logprob: -1.6412464380264282
    3. 'query' → logprob: -4.016246318817139
    4. 'update' → logprob: -5.141246318817139
    5. 'point' → logprob: -6.141246318817139
    6. 'updates' → logprob: -6.266246318817139
    7. 'minimum' → logprob: -6.391246318817139
    8. 'fast' → logprob: -6.391246318817139
    9. 'inf' → logprob: -6.641246318817139
    10. 'min' → logprob: -6.766246318817139

Token 1613: ' minimum' (ID: 11085)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -1.004428744316101
    2. 'minimum' → logprob: -1.129428744316101
    3. 'min' → logprob: -1.879428744316101
    4. 'update' → logprob: -2.7544288635253906
    5. 'updates' → logprob: -3.2544288635253906
    6. '_min' → logprob: -3.6294288635253906
    7. 'queries' → logprob: -4.379428863525391
    8. '_query' → logprob: -5.504428863525391
    9. ' minimum' → logprob: -5.754428863525391
    10. '   ' → logprob: -6.504428863525391

Token 1614: ' query' (ID: 5703)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14741545915603638
    2. ')' → logprob: -2.2724153995513916
    3. '#' → logprob: -4.397415637969971
    4. 'query' → logprob: -4.897415637969971
    5. '()' → logprob: -5.772415637969971
    6. '(dp' → logprob: -5.897415637969971
    7. 'updates' → logprob: -6.772415637969971
    8. '()
' → logprob: -6.772415637969971
    9. 'def' → logprob: -6.897415637969971
    10. ')
' → logprob: -7.022415637969971

Token 1615: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008875182829797268
    2. ')' → logprob: -7.375887393951416
    3. '#' → logprob: -9.000887870788574
    4. ')
' → logprob: -9.750887870788574
    5. '
' → logprob: -9.875887870788574
    6. 'for' → logprob: -11.375887870788574
    7. '(dp' → logprob: -12.375887870788574
    8. ').' → logprob: -13.250887870788574
    9. '),' → logprob: -13.375887870788574
    10. ' dp' → logprob: -13.750887870788574

Token 1616: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00011105302110081539
    2. '#' → logprob: -9.875110626220703
    3. '
' → logprob: -10.375110626220703
    4. 'for' → logprob: -10.750110626220703
    5. ')' → logprob: -13.750110626220703
    6. '(dp' → logprob: -13.875110626220703
    7. ' dp' → logprob: -14.000110626220703
    8. ')
' → logprob: -14.250110626220703
    9. '```' → logprob: -14.250110626220703
    10. '  
' → logprob: -14.875110626220703

Token 1617: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -7.898723561083898e-05
    2. '.' → logprob: -9.500079154968262
    3. 'update' → logprob: -12.750079154968262
    4. '].' → logprob: -14.500079154968262
    5. ').' → logprob: -15.375079154968262
    6. ' .' → logprob: -15.375079154968262
    7. '   ' → logprob: -15.750079154968262
    8. '=' → logprob: -16.750078201293945
    9. '}.' → logprob: -17.875078201293945
    10. '```' → logprob: -18.375078201293945

Token 1618: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '0' → logprob: -12.87500286102295
    3. ' (' → logprob: -15.75000286102295
    4. '(
' → logprob: -19.500001907348633
    5. '((' → logprob: -20.750001907348633
    6. '(N' → logprob: -20.875001907348633
    7. ' ' → logprob: -22.750001907348633
    8. ',' → logprob: -23.250001907348633
    9. ')(' → logprob: -23.375001907348633
    10. '```' → logprob: -23.375001907348633

Token 1619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006243953830562532
    2. ' ,' → logprob: -7.500624179840088
    3. ',N' → logprob: -9.750624656677246
    4. '(),' → logprob: -12.000624656677246
    5. '(N' → logprob: -13.125624656677246
    6. ')' → logprob: -13.750624656677246
    7. '   ' → logprob: -14.000624656677246
    8. ',
' → logprob: -14.250624656677246
    9. '0' → logprob: -14.625624656677246
    10. '),' → logprob: -14.750624656677246

Token 1620: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '1' → logprob: -19.25
    4. '۰' → logprob: -19.75
    5. '000' → logprob: -19.875
    6. '00' → logprob: -20.25
    7. '   ' → logprob: -21.25
    8. 'INF' → logprob: -21.25
    9. '０' → logprob: -21.5
    10. ')' → logprob: -21.5

Token 1621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '1' → logprob: -18.0
    4. '000' → logprob: -19.125
    5. '۰' → logprob: -19.125
    6. '00' → logprob: -19.375
    7. '```' → logprob: -20.375
    8. '(' → logprob: -20.625
    9. '   ' → logprob: -20.9375
    10. ')' → logprob: -20.9375

Token 1622: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.751746746478602e-05
    2. ')
' → logprob: -10.00004768371582
    3. ' )' → logprob: -13.37504768371582
    4. ')

' → logprob: -15.12504768371582
    5. ')
' → logprob: -16.12504768371582
    6. ')#' → logprob: -17.37504768371582
    7. '),' → logprob: -17.87504768371582
    8. ')`' → logprob: -18.12504768371582
    9. '))' → logprob: -19.12504768371582
    10. ');' → logprob: -19.12504768371582

Token 1623: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001242772996192798
    2. ' for' → logprob: -9.375123977661133
    3. '
' → logprob: -11.125123977661133
    4. 'i' → logprob: -11.250123977661133
    5. '#' → logprob: -12.125123977661133
    6. '```' → logprob: -13.125123977661133
    7. 'from' → logprob: -13.750123977661133
    8. ')' → logprob: -13.750123977661133
    9. '<|end|>' → logprob: -15.000123977661133
    10. '   ' → logprob: -15.250123977661133

Token 1624: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022244835272431374
    2. '
' → logprob: -6.752224445343018
    3. ' for' → logprob: -6.877224445343018
    4. 'i' → logprob: -11.252224922180176
    5. '#' → logprob: -12.377224922180176
    6. ')' → logprob: -13.252224922180176
    7. '
' → logprob: -14.002224922180176
    8. '```' → logprob: -14.502224922180176
    9. 'prev' → logprob: -15.002224922180176
    10. '

' → logprob: -15.127224922180176

Token 1625: ' Goal' (ID: 67160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039196692407131195
    2. '#' → logprob: -3.289196729660034
    3. 'dp' → logprob: -6.914196491241455
    4. ' for' → logprob: -9.539196968078613
    5. '```' → logprob: -10.164196968078613
    6. 'For' → logprob: -10.789196968078613
    7. 'i' → logprob: -11.914196968078613
    8. 'prev' → logprob: -12.664196968078613
    9. ')' → logprob: -12.914196968078613
    10. 'from' → logprob: -12.914196968078613

Token 1626: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036638490855693817
    2. ' for' → logprob: -5.753664016723633
    3. ')' → logprob: -8.503664016723633
    4. '
' → logprob: -8.878664016723633
    5. '<|end|>' → logprob: -9.628664016723633
    6. '#' → logprob: -9.753664016723633
    7. '```' → logprob: -12.503664016723633
    8. ')
' → logprob: -13.128664016723633
    9. '<|end|>' → logprob: -13.253664016723633
    10. 'def' → logprob: -13.378664016723633

Token 1627: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.008894681930542
    2. 're' → logprob: -1.383894681930542
    3. 'N' → logprob: -1.633894681930542
    4. 'reachable' → logprob: -2.383894681930542
    5. '0' → logprob: -2.883894681930542
    6. 'dp' → logprob: -4.133894920349121
    7. 'set' → logprob: -4.758894920349121
    8. 'done' → logprob: -5.508894920349121
    9. 'to' → logprob: -5.883894920349121
    10. 'the' → logprob: -6.008894920349121

Token 1628: ' position' (ID: 4010)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003143704670947045
    2. 'the' → logprob: -8.375314712524414
    3. 'position' → logprob: -10.375314712524414
    4. 'end' → logprob: -10.750314712524414
    5. ' N' → logprob: -11.000314712524414
    6. 'index' → logprob: -11.625314712524414
    7. '0' → logprob: -13.125314712524414
    8. ' ' → logprob: -14.000314712524414
    9. ' the' → logprob: -14.625314712524414
    10. '   ' → logprob: -14.875314712524414

Token 1629: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00021224225929472595
    2. ' N' → logprob: -9.000212669372559
    3. '0' → logprob: -10.000212669372559
    4. '<|end|>' → logprob: -10.500212669372559
    5. '(N' → logprob: -12.250212669372559
    6. '<|end|>' → logprob: -13.125212669372559
    7. '[N' → logprob: -13.750212669372559
    8. '.' → logprob: -14.125212669372559
    9. '...' → logprob: -14.250212669372559
    10. ' ' → logprob: -14.250212669372559

Token 1630: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002481078845448792
    2. 'from' → logprob: -9.125247955322266
    3. 'import' → logprob: -9.750247955322266
    4. '
' → logprob: -10.000247955322266
    5. ' for' → logprob: -10.750247955322266
    6. '#' → logprob: -11.375247955322266
    7. '```' → logprob: -13.750247955322266
    8. 'i' → logprob: -15.125247955322266
    9. '    
' → logprob: -15.375247955322266
    10. 'def' → logprob: -15.625247955322266

Token 1631: ' cost' (ID: 3097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019282618537545204
    2. '
' → logprob: -4.519282817840576
    3. '#' → logprob: -5.394282817840576
    4. ' for' → logprob: -5.769282817840576
    5. 'i' → logprob: -8.519282341003418
    6. '```' → logprob: -9.644282341003418
    7. '0' → logprob: -10.019282341003418
    8. ' 
' → logprob: -10.144282341003418
    9. 'dp' → logprob: -10.269282341003418
    10. 'and' → logprob: -11.019282341003418

Token 1632: ' is' (ID: 382)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15676605701446533
    2. '=' → logprob: -2.156765937805176
    3. ' =' → logprob: -4.531765937805176
    4. 'is' → logprob: -5.156765937805176
    5. ' is' → logprob: -5.531765937805176
    6. ' ' → logprob: -5.781765937805176
    7. 'zero' → logprob: -6.531765937805176
    8. 'dp' → logprob: -6.781765937805176
    9. ' zero' → logprob: -6.906765937805176
    10. 'from' → logprob: -7.781765937805176

Token 1633: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. 'zero' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.00000286102295
    4. ' zero' → logprob: -17.500003814697266
    5. '000' → logprob: -19.250003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '۰' → logprob: -19.875003814697266
    8. '０' → logprob: -19.875003814697266
    9. '```' → logprob: -20.500003814697266
    10. '00' → logprob: -20.500003814697266

Token 1634: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. 'zero' → logprob: -19.5
    4. '۰' → logprob: -21.125
    5. '000' → logprob: -21.375
    6. '０' → logprob: -22.25
    7. '00' → logprob: -22.375
    8. ' ' → logprob: -22.375
    9. '```' → logprob: -23.0
    10. '   ' → logprob: -23.375

Token 1635: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007139815716072917
    2. 'from' → logprob: -7.75071382522583
    3. 'import' → logprob: -8.750714302062988
    4. ' for' → logprob: -10.375714302062988
    5. '#' → logprob: -10.625714302062988
    6. 'res' → logprob: -11.000714302062988
    7. 'dp' → logprob: -11.125714302062988
    8. 'i' → logprob: -11.500714302062988
    9. 'def' → logprob: -12.250714302062988
    10. 'ans' → logprob: -12.500714302062988

Token 1636: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002870801545213908
    2. 'from' → logprob: -8.750287055969238
    3. ' for' → logprob: -9.500287055969238
    4. 'import' → logprob: -11.000287055969238
    5. 'dp' → logprob: -11.250287055969238
    6. '```' → logprob: -11.500287055969238
    7. 'i' → logprob: -11.875287055969238
    8. '#' → logprob: -12.625287055969238
    9. 'result' → logprob: -14.500287055969238
    10. 'prev' → logprob: -14.625287055969238

Token 1637: ' Fill' (ID: 32680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015635426389053464
    2. 'from' → logprob: -6.626563549041748
    3. 'import' → logprob: -8.37656307220459
    4. 'i' → logprob: -12.37656307220459
    5. ' for' → logprob: -14.12656307220459
    6. '#' → logprob: -14.37656307220459
    7. 'positions' → logprob: -14.37656307220459
    8. 'def' → logprob: -15.12656307220459
    9. '```' → logprob: -15.37656307220459
    10. 'prev' → logprob: -15.50156307220459

Token 1638: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058956827968358994
    2. 'i' → logprob: -3.1839568614959717
    3. ' for' → logprob: -5.433956623077393
    4. 'range' → logprob: -6.058956623077393
    5. 'dp' → logprob: -6.433956623077393
    6. '(i' → logprob: -6.558956623077393
    7. '(' → logprob: -6.933956623077393
    8. '_' → logprob: -7.183956623077393
    9. '(N' → logprob: -7.183956623077393
    10. '   ' → logprob: -7.433956623077393

Token 1639: ' table' (ID: 3293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0050254943780601025
    2. 'i' → logprob: -5.630025386810303
    3. ' for' → logprob: -6.880025386810303
    4. '(i' → logprob: -9.005025863647461
    5. ')' → logprob: -9.505025863647461
    6. 'from' → logprob: -9.880025863647461
    7. '   ' → logprob: -10.130025863647461
    8. '(N' → logprob: -11.005025863647461
    9. '()' → logprob: -11.130025863647461
    10. '(' → logprob: -11.380025863647461

Token 1640: ' backwards' (ID: 59879)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011951648048125207
    2. ' for' → logprob: -10.00011920928955
    3. '
' → logprob: -10.12511920928955
    4. 'i' → logprob: -10.50011920928955
    5. '```' → logprob: -12.62511920928955
    6. ')' → logprob: -14.00011920928955
    7. '#' → logprob: -14.25011920928955
    8. 'from' → logprob: -14.87511920928955
    9. 'range' → logprob: -14.87511920928955
    10. '   ' → logprob: -15.12511920928955

Token 1641: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5716304410016164e-05
    2. '
' → logprob: -10.875035285949707
    3. ' for' → logprob: -11.625035285949707
    4. 'i' → logprob: -11.875035285949707
    5. 'from' → logprob: -14.750035285949707
    6. 'f' → logprob: -16.000036239624023
    7. ')' → logprob: -16.125036239624023
    8. '```' → logprob: -16.750036239624023
    9. '
' → logprob: -17.250036239624023
    10. '   ' → logprob: -17.250036239624023

Token 1642: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5653075575828552
    2. 'i' → logprob: -0.9403075575828552
    3. 'range' → logprob: -3.4403076171875
    4. ')' → logprob: -5.4403076171875
    5. '_' → logprob: -6.6903076171875
    6. ' for' → logprob: -6.8153076171875
    7. '
' → logprob: -7.3153076171875
    8. ' i' → logprob: -7.8153076171875
    9. 'N' → logprob: -8.0653076171875
    10. 'r' → logprob: -8.1903076171875

Token 1643: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.069664333248511e-05
    2. ' N' → logprob: -11.000020980834961
    3. 'i' → logprob: -13.750020980834961
    4. '   ' → logprob: -13.875020980834961
    5. 'range' → logprob: -14.250020980834961
    6. '
' → logprob: -14.375020980834961
    7. '```' → logprob: -14.750020980834961
    8. ')' → logprob: -15.625020980834961
    9. ' ' → logprob: -16.62502098083496
    10. '#' → logprob: -16.87502098083496

Token 1644: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014259763062000275
    2. ' -' → logprob: -4.2642598152160645
    3. 'to' → logprob: -10.264259338378906
    4. '
' → logprob: -10.389259338378906
    5. 'for' → logprob: -11.389259338378906
    6. 'down' → logprob: -12.514259338378906
    7. '-
' → logprob: -13.014259338378906
    8. ')' → logprob: -13.014259338378906
    9. ',' → logprob: -13.139259338378906
    10. '```' → logprob: -13.264259338378906

Token 1645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04883114621043205
    2. '-' → logprob: -3.0488312244415283
    3. 'N' → logprob: -9.17383098602295
    4. ' -' → logprob: -9.29883098602295
    5. '```' → logprob: -11.04883098602295
    6. ' ' → logprob: -11.67383098602295
    7. ')' → logprob: -12.04883098602295
    8. '
' → logprob: -12.04883098602295
    9. '2' → logprob: -12.54883098602295
    10. '−' → logprob: -13.67383098602295

Token 1646: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.49698400497436523
    2. ',' → logprob: -1.7469840049743652
    3. ' to' → logprob: -1.9969840049743652
    4. ')' → logprob: -3.2469840049743652
    5. ' down' → logprob: -4.121984004974365
    6. 'down' → logprob: -4.746984004974365
    7. '-' → logprob: -4.746984004974365
    8. '
' → logprob: -5.496984004974365
    9. ' -' → logprob: -6.746984004974365
    10. '   ' → logprob: -6.746984004974365

Token 1647: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11300203949213028
    2. 'N' → logprob: -2.238002061843872
    3. ' ' → logprob: -9.488001823425293
    4. ' N' → logprob: -10.113001823425293
    5. '
' → logprob: -11.113001823425293
    6. '   ' → logprob: -11.363001823425293
    7. '-' → logprob: -11.488001823425293
    8. 'range' → logprob: -11.613001823425293
    9. '```' → logprob: -11.988001823425293
    10. ')' → logprob: -12.363001823425293

Token 1648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3915141355246305e-05
    2. '-' → logprob: -11.25002384185791
    3. ' ' → logprob: -12.12502384185791
    4. 'N' → logprob: -12.62502384185791
    5. '
' → logprob: -14.00002384185791
    6. '1' → logprob: -14.50002384185791
    7. '```' → logprob: -15.00002384185791
    8. '   ' → logprob: -15.37502384185791
    9. 'M' → logprob: -17.000024795532227
    10. ')' → logprob: -17.125024795532227

Token 1649: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7673089504241943
    2. 'for' → logprob: -1.0173089504241943
    3. ')' → logprob: -2.5173089504241943
    4. ',' → logprob: -2.8923089504241943
    5. '):
' → logprob: -4.517309188842773
    6. '   ' → logprob: -4.642309188842773
    7. '):' → logprob: -4.892309188842773
    8. '[::-' → logprob: -5.642309188842773
    9. ':' → logprob: -5.892309188842773
    10. ')
' → logprob: -7.517309188842773

Token 1650: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009118211455643177
    2. ' for' → logprob: -7.000911712646484
    3. '```' → logprob: -15.375911712646484
    4. 'i' → logprob: -17.125911712646484
    5. ')' → logprob: -17.875911712646484
    6. 'from' → logprob: -18.125911712646484
    7. '
' → logprob: -18.500911712646484
    8. '   ' → logprob: -18.500911712646484
    9. '	for' → logprob: -19.500911712646484
    10. 'range' → logprob: -19.500911712646484

Token 1651: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02976194955408573
    2. ' i' → logprob: -3.529762029647827
    3. 'pos' → logprob: -11.654762268066406
    4. 'x' → logprob: -14.404762268066406
    5. ' pos' → logprob: -14.904762268066406
    6. '_i' → logprob: -14.904762268066406
    7. '```' → logprob: -15.154762268066406
    8. '`' → logprob: -15.154762268066406
    9. '   ' → logprob: -15.404762268066406
    10. ' ' → logprob: -15.404762268066406

Token 1652: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759533643722534
    2. 'in' → logprob: -0.8259533643722534
    3. '   ' → logprob: -12.200953483581543
    4. ')' → logprob: -13.700953483581543
    5. ',' → logprob: -13.700953483581543
    6. ' i' → logprob: -13.825953483581543
    7. 'range' → logprob: -13.825953483581543
    8. 'i' → logprob: -13.950953483581543
    9. '	in' → logprob: -14.325953483581543
    10. ' ' → logprob: -14.575953483581543

Token 1653: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006807420286349952
    2. ' range' → logprob: -7.500680923461914
    3. 're' → logprob: -9.250680923461914
    4. '   ' → logprob: -10.875680923461914
    5. 'reverse' → logprob: -11.625680923461914
    6. '(range' → logprob: -13.500680923461914
    7. ' reversed' → logprob: -14.250680923461914
    8. ' ' → logprob: -15.000680923461914
    9. 'ange' → logprob: -15.000680923461914
    10. 'rang' → logprob: -15.125680923461914

Token 1654: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.048603273928165436
    2. 'N' → logprob: -3.0486032962799072
    3. '   ' → logprob: -11.798603057861328
    4. '(' → logprob: -11.798603057861328
    5. ' N' → logprob: -14.298603057861328
    6. '	N' → logprob: -16.673603057861328
    7. '(n' → logprob: -16.798603057861328
    8. ',N' → logprob: -17.298603057861328
    9. '```' → logprob: -17.423603057861328
    10. '((' → logprob: -17.423603057861328

Token 1655: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09404171258211136
    2. ' -' → logprob: -2.5940418243408203
    3. ',' → logprob: -4.21904182434082
    4. ',
' → logprob: -9.71904182434082
    5. ' ,' → logprob: -9.71904182434082
    6. '+' → logprob: -9.84404182434082
    7. ',-' → logprob: -9.96904182434082
    8. '-
' → logprob: -10.46904182434082
    9. ')' → logprob: -10.96904182434082
    10. '-,' → logprob: -10.96904182434082

Token 1656: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -14.500012397766113
    4. '```' → logprob: -15.500012397766113
    5. ',' → logprob: -15.750012397766113
    6. ')' → logprob: -16.37501335144043
    7. ' -' → logprob: -16.50001335144043
    8. '-' → logprob: -16.62501335144043
    9. '   ' → logprob: -17.00001335144043
    10. '0' → logprob: -17.62501335144043

Token 1657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023917861108202487
    2. '-' → logprob: -8.375239372253418
    3. ' -' → logprob: -12.375239372253418
    4. ' ' → logprob: -13.125239372253418
    5. '2' → logprob: -13.500239372253418
    6. '```' → logprob: -14.750239372253418
    7. '
' → logprob: -15.750239372253418
    8. ')' → logprob: -16.1252384185791
    9. '0' → logprob: -16.6252384185791
    10. ',' → logprob: -17.3127384185791

Token 1658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001096403575502336
    2. '-' → logprob: -7.626096248626709
    3. ',-' → logprob: -7.751096248626709
    4. ' ,' → logprob: -9.501096725463867
    5. ',
' → logprob: -9.876096725463867
    6. ' -' → logprob: -10.501096725463867
    7. '   ' → logprob: -11.251096725463867
    8. '+' → logprob: -12.126096725463867
    9. '-,' → logprob: -13.626096725463867
    10. ' ,-' → logprob: -14.126096725463867

Token 1659: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014811802248004824
    2. ' -' → logprob: -8.875147819519043
    3. '-i' → logprob: -11.875147819519043
    4. '   ' → logprob: -14.375147819519043
    5. '-M' → logprob: -15.250147819519043
    6. ' ' → logprob: -15.375147819519043
    7. '-N' → logprob: -16.12514877319336
    8. 'i' → logprob: -16.62514877319336
    9. '
' → logprob: -17.75014877319336
    10. '    ' → logprob: -17.75014877319336

Token 1660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -14.625000953674316
    3. ' -' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.375
    5. ' ' → logprob: -16.375
    6. '```' → logprob: -16.75
    7. '
' → logprob: -17.875
    8. '(-' → logprob: -17.875
    9. '(' → logprob: -18.125
    10. ',' → logprob: -19.1875

Token 1661: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4356537461280823
    2. ',' → logprob: -1.0606536865234375
    3. ' -' → logprob: -5.1856536865234375
    4. '   ' → logprob: -7.4356536865234375
    5. ',-' → logprob: -7.5606536865234375
    6. '1' → logprob: -9.560653686523438
    7. ' ,' → logprob: -9.935653686523438
    8. '```' → logprob: -10.060653686523438
    9. '-,' → logprob: -10.560653686523438
    10. ',
' → logprob: -11.810653686523438

Token 1662: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.635164754698053e-05
    2. ' -' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.625066757202148
    4. '```' → logprob: -17.00006675720215
    5. '-step' → logprob: -17.37506675720215
    6. ')' → logprob: -17.75006675720215
    7. '-i' → logprob: -17.75006675720215
    8. ',' → logprob: -18.37506675720215
    9. '−' → logprob: -18.37506675720215
    10. '):
' → logprob: -18.62506675720215

Token 1663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. ' ' → logprob: -17.875
    4. '2' → logprob: -19.875
    5. '   ' → logprob: -20.5
    6. ')' → logprob: -20.75
    7. '``' → logprob: -21.25
    8. '-' → logprob: -21.25
    9. '１' → logprob: -21.5
    10. '=' → logprob: -21.75

Token 1664: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08584954589605331
    2. '):' → logprob: -2.7108495235443115
    3. ':' → logprob: -4.335849761962891
    4. ':
' → logprob: -6.835849761962891
    5. ',' → logprob: -7.210849761962891
    6. '):
' → logprob: -8.21084976196289
    7. '   ' → logprob: -8.21084976196289
    8. '():
' → logprob: -9.08584976196289
    9. '-' → logprob: -9.46084976196289
    10. 'if' → logprob: -10.08584976196289

Token 1665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1717938929796219
    2. ' if' → logprob: -1.9217939376831055
    3. 'if' → logprob: -4.5467939376831055
    4. '	if' → logprob: -7.0467939376831055
    5. '```' → logprob: -11.546793937683105
    6. '   ' → logprob: -12.171793937683105
    7. ',' → logprob: -12.296793937683105
    8. ' ' → logprob: -12.421793937683105
    9. '    
' → logprob: -13.296793937683105
    10. 'If' → logprob: -13.421793937683105

Token 1666: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026849217247217894
    2. '   ' → logprob: -6.002685070037842
    3. ' if' → logprob: -8.502684593200684
    4. '       ' → logprob: -12.377684593200684
    5. '	if' → logprob: -14.377684593200684
    6. '    
' → logprob: -15.252684593200684
    7. 'dp' → logprob: -15.502684593200684
    8. '```' → logprob: -15.502684593200684
    9. '
' → logprob: -15.627684593200684
    10. '    ' → logprob: -15.627684593200684

Token 1667: ' Skip' (ID: 47626)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2471589798224159e-05
    2. '   ' → logprob: -12.000012397766113
    3. ' if' → logprob: -12.500012397766113
    4. 'res' → logprob: -13.625012397766113
    5. 'c' → logprob: -15.125012397766113
    6. 'x' → logprob: -15.500012397766113
    7. 'dp' → logprob: -15.500012397766113
    8. 'i' → logprob: -15.875012397766113
    9. 'If' → logprob: -15.875012397766113
    10. 'r' → logprob: -16.00001335144043

Token 1668: ' blocked' (ID: 35275)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1771644949913025
    2. 'if' → logprob: -1.9271645545959473
    3. ' S' → logprob: -4.802164554595947
    4. '   ' → logprob: -5.302164554595947
    5. ' if' → logprob: -5.927164554595947
    6. '1' → logprob: -7.177164554595947
    7. 'int' → logprob: -9.802164077758789
    8. ' ' → logprob: -10.177164077758789
    9. '(S' → logprob: -10.177164077758789
    10. '0' → logprob: -11.802164077758789

Token 1669: ' cells' (ID: 11242)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7540745139122009
    2. 'if' → logprob: -1.0040745735168457
    3. 'S' → logprob: -2.0040745735168457
    4. ' S' → logprob: -3.7540745735168457
    5. '   ' → logprob: -5.754074573516846
    6. 's' → logprob: -7.754074573516846
    7. '(S' → logprob: -7.879074573516846
    8. ' ' → logprob: -8.504074096679688
    9. ' (' → logprob: -8.504074096679688
    10. '(' → logprob: -9.504074096679688

Token 1670: ' ('' (ID: 9906)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39781320095062256
    2. 'if' → logprob: -1.1478132009506226
    3. ' if' → logprob: -4.522813320159912
    4. '
' → logprob: -11.397812843322754
    5. '	if' → logprob: -12.272812843322754
    6. '    
' → logprob: -13.147812843322754
    7. '```' → logprob: -13.147812843322754
    8. 'If' → logprob: -14.022812843322754
    9. ',' → logprob: -14.022812843322754
    10. '   ' → logprob: -14.647812843322754

Token 1671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028810113668441772
    2. ''' → logprob: -4.528810024261475
    3. 'if' → logprob: -4.528810024261475
    4. 'S' → logprob: -6.153810024261475
    5. '')' → logprob: -6.278810024261475
    6. ' ' → logprob: -7.028810024261475
    7. '0' → logprob: -7.653810024261475
    8. ' '' → logprob: -7.653810024261475
    9. ' ')' → logprob: -8.153810501098633
    10. '   ' → logprob: -8.653810501098633

Token 1672: ''s' (ID: 885)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -1.0056674480438232
    2. ''):
' → logprob: -1.3806674480438232
    3. '   ' → logprob: -2.0056674480438232
    4. ''' → logprob: -2.1306674480438232
    5. 'if' → logprob: -2.8806674480438232
    6. ''):' → logprob: -4.005667686462402
    7. '==' → logprob: -4.255667686462402
    8. ' ==' → logprob: -4.380667686462402
    9. ' if' → logprob: -4.505667686462402
    10. ')' → logprob: -5.380667686462402

Token 1673: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012198449112474918
    2. ':' → logprob: -4.887198448181152
    3. ' if' → logprob: -6.387198448181152
    4. 'if' → logprob: -6.512198448181152
    5. ')' → logprob: -7.637198448181152
    6. '       ' → logprob: -7.762198448181152
    7. ' or' → logprob: -9.137198448181152
    8. 'and' → logprob: -9.387198448181152
    9. ' and' → logprob: -9.512198448181152
    10. ',' → logprob: -9.887198448181152

Token 1674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025282016023993492
    2. ' if' → logprob: -4.27528190612793
    3. 'if' → logprob: -4.52528190612793
    4. '	if' → logprob: -10.02528190612793
    5. ',' → logprob: -10.27528190612793
    6. '   ' → logprob: -10.52528190612793
    7. '.' → logprob: -10.90028190612793
    8. '```' → logprob: -11.02528190612793
    9. 'continue' → logprob: -11.40028190612793
    10. '<|end|>' → logprob: -11.77528190612793

Token 1675: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013815561309456825
    2. ' if' → logprob: -4.763815402984619
    3. '   ' → logprob: -5.263815402984619
    4. '```' → logprob: -11.763815879821777
    5. 'continue' → logprob: -12.888815879821777
    6. 'If' → logprob: -14.138815879821777
    7. '	if' → logprob: -14.888815879821777
    8. ' ' → logprob: -15.763815879821777
    9. 'i' → logprob: -16.38881492614746
    10. '    ' → logprob: -16.63881492614746

Token 1676: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.8087270038668066e-05
    2. ' S' → logprob: -10.500027656555176
    3. '   ' → logprob: -14.625027656555176
    4. ' ' → logprob: -19.750028610229492
    5. '	S' → logprob: -20.750028610229492
    6. '(S' → logprob: -21.125028610229492
    7. '_S' → logprob: -21.500028610229492
    8. 'Ｓ' → logprob: -22.000028610229492
    9. '>S' → logprob: -22.250028610229492
    10. 's' → logprob: -22.375028610229492

Token 1677: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.375006675720215
    4. '```' → logprob: -14.750006675720215
    5. '==' → logprob: -14.875006675720215
    6. 'i' → logprob: -15.000006675720215
    7. '[
' → logprob: -15.125006675720215
    8. ' [' → logprob: -16.2500057220459
    9. ' ==' → logprob: -16.2500057220459
    10. '[I' → logprob: -17.2500057220459

Token 1678: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12908245623111725
    2. ' ==' → logprob: -2.129082441329956
    3. '=='' → logprob: -6.254082679748535
    4. ')' → logprob: -9.379082679748535
    5. '==
' → logprob: -10.379082679748535
    6. ')==' → logprob: -10.504082679748535
    7. '!=' → logprob: -10.879082679748535
    8. ''' → logprob: -11.129082679748535
    9. ']==' → logprob: -11.504082679748535
    10. '=' → logprob: -11.504082679748535

Token 1679: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.053487684577703476
    2. ' ==' → logprob: -3.553487777709961
    3. '=='' → logprob: -3.803487777709961
    4. ''' → logprob: -8.053487777709961
    5. '==
' → logprob: -8.053487777709961
    6. '!=' → logprob: -8.053487777709961
    7. '=="' → logprob: -9.178487777709961
    8. '=' → logprob: -10.178487777709961
    9. ' =='' → logprob: -10.553487777709961
    10. '[' → logprob: -11.553487777709961

Token 1680: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0009278989746235311
    2. ' '' → logprob: -7.375927925109863
    3. '"' → logprob: -8.125927925109863
    4. '1' → logprob: -13.250927925109863
    5. ' ' → logprob: -13.750927925109863
    6. '`' → logprob: -14.000927925109863
    7. ' "' → logprob: -14.875927925109863
    8. '   ' → logprob: -15.250927925109863
    9. ''#' → logprob: -15.375927925109863
    10. ')' → logprob: -15.500927925109863

Token 1681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014613081002607942
    2. ''' → logprob: -6.751461505889893
    3. '')' → logprob: -8.376461029052734
    4. ' ' → logprob: -10.251461029052734
    5. '#' → logprob: -11.376461029052734
    6. '0' → logprob: -12.251461029052734
    7. ' '' → logprob: -13.376461029052734
    8. ')' → logprob: -13.501461029052734
    9. '<|end|>' → logprob: -13.626461029052734
    10. '   ' → logprob: -13.751461029052734

Token 1682: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4671485424041748
    2. ':
' → logprob: -1.0921485424041748
    3. '       ' → logprob: -3.717148542404175
    4. '   ' → logprob: -4.467148780822754
    5. ':return' → logprob: -7.342148780822754
    6. ' continue' → logprob: -7.717148780822754
    7. 'continue' → logprob: -8.092148780822754
    8. ':
' → logprob: -8.717148780822754
    9. ' or' → logprob: -8.967148780822754
    10. '):
' → logprob: -9.342148780822754

Token 1683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0553891621530056
    2. '   ' → logprob: -3.055389165878296
    3. ' continue' → logprob: -6.055388927459717
    4. ':' → logprob: -6.180388927459717
    5. 'continue' → logprob: -6.180388927459717
    6. '	continue' → logprob: -9.305389404296875
    7. '.' → logprob: -9.680389404296875
    8. ':
' → logprob: -9.930389404296875
    9. ' continues' → logprob: -11.180389404296875
    10. ',' → logprob: -11.180389404296875

Token 1684: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.34939315915107727
    2. '   ' → logprob: -1.3493931293487549
    3. ' continue' → logprob: -3.349393129348755
    4. '       ' → logprob: -8.349392890930176
    5. '	continue' → logprob: -8.974392890930176
    6. 'contin' → logprob: -12.474392890930176
    7. '    ' → logprob: -12.599392890930176
    8. ' ' → logprob: -12.724392890930176
    9. 'continu' → logprob: -12.974392890930176
    10. '
' → logprob: -13.599392890930176

Token 1685: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020995871163904667
    2. '    
' → logprob: -7.252099514007568
    3. 'dp' → logprob: -8.502099990844727
    4. ' res' → logprob: -8.877099990844727
    5. ' min' → logprob: -8.877099990844727
    6. 'min' → logprob: -9.002099990844727
    7. 'res' → logprob: -9.252099990844727
    8. ' for' → logprob: -9.377099990844727
    9. ' dp' → logprob: -9.502099990844727
    10. ' l' → logprob: -9.502099990844727

Token 1686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026488741859793663
    2. 'l' → logprob: -5.026488780975342
    3. 'min' → logprob: -5.151488780975342
    4. ' l' → logprob: -5.401488780975342
    5. 'res' → logprob: -5.651488780975342
    6. 'dp' → logprob: -6.526488780975342
    7. ' res' → logprob: -7.276488780975342
    8. ' min' → logprob: -7.526488780975342
    9. 'r' → logprob: -7.776488780975342
    10. 'for' → logprob: -7.901488780975342

Token 1687: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.813980221748352
    2. 'r' → logprob: -1.688980221748352
    3. 'res' → logprob: -1.813980221748352
    4. 'l' → logprob: -2.3139801025390625
    5. 'min' → logprob: -2.6889801025390625
    6. 'j' → logprob: -4.6889801025390625
    7. 'right' → logprob: -4.9389801025390625
    8. 'left' → logprob: -5.3139801025390625
    9. 'mn' → logprob: -5.5639801025390625
    10. 'low' → logprob: -6.0639801025390625

Token 1688: ' Query' (ID: 18574)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5031453371047974
    2. 'r' → logprob: -2.253145217895508
    3. 'mn' → logprob: -2.503145217895508
    4. 'val' → logprob: -2.753145217895508
    5. 'l' → logprob: -3.378145217895508
    6. 'min' → logprob: -3.878145217895508
    7. 'mi' → logprob: -4.378145217895508
    8. 'left' → logprob: -4.378145217895508
    9. 'right' → logprob: -4.378145217895508
    10. 'cost' → logprob: -4.503145217895508

Token 1689: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5550293922424316
    2. '(i' → logprob: -1.9300293922424316
    3. ' =' → logprob: -2.9300293922424316
    4. '   ' → logprob: -3.3050293922424316
    5. 'for' → logprob: -3.4300293922424316
    6. 'min' → logprob: -3.5550293922424316
    7. 'max' → logprob: -3.6800293922424316
    8. 'res' → logprob: -3.6800293922424316
    9. '=' → logprob: -3.8050293922424316
    10. 'dp' → logprob: -3.9300293922424316

Token 1690: ' M' (ID: 391)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6994218230247498
    2. '(i' → logprob: -0.6994218230247498
    3. 'min' → logprob: -6.5744218826293945
    4. '[i' → logprob: -7.1994218826293945
    5. 'token' → logprob: -7.1994218826293945
    6. ' i' → logprob: -7.3244218826293945
    7. ')' → logprob: -8.074421882629395
    8. 'tokens' → logprob: -8.199421882629395
    9. 'M' → logprob: -8.449421882629395
    10. 'for' → logprob: -8.574421882629395

Token 1691: ' reachable' (ID: 143580)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5527806878089905
    2. '(i' → logprob: -1.8027806282043457
    3. 'tokens' → logprob: -2.3027806282043457
    4. 'i' → logprob: -2.6777806282043457
    5. ' positions' → logprob: -3.1777806282043457
    6. '[i' → logprob: -4.302780628204346
    7. 'indices' → logprob: -5.177780628204346
    8. 'for' → logprob: -6.052780628204346
    9. ' tokens' → logprob: -6.177780628204346
    10. ',' → logprob: -6.177780628204346

Token 1692: ' dp' (ID: 21546)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.01818295195698738
    2. ' positions' → logprob: -4.518182754516602
    3. 'i' → logprob: -6.018182754516602
    4. 'indices' → logprob: -6.893182754516602
    5. 'steps' → logprob: -7.018182754516602
    6. '(i' → logprob: -7.893182754516602
    7. 'for' → logprob: -8.018182754516602
    8. '_positions' → logprob: -8.018182754516602
    9. '+' → logprob: -8.268182754516602
    10. 'j' → logprob: -8.393182754516602

Token 1693: ' values' (ID: 4824)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12498067319393158
    2. '(i' → logprob: -2.8749806880950928
    3. 'positions' → logprob: -3.9999806880950928
    4. '[j' → logprob: -4.249980449676514
    5. 'values' → logprob: -4.624980449676514
    6. 'i' → logprob: -5.624980449676514
    7. 'min' → logprob: -5.624980449676514
    8. 'value' → logprob: -5.999980449676514
    9. '[' → logprob: -6.374980449676514
    10. ')' → logprob: -6.624980449676514

Token 1694: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1509632021188736
    2. ' =' → logprob: -2.150963306427002
    3. '=' → logprob: -5.275963306427002
    4. 'l' → logprob: -5.525963306427002
    5. 'for' → logprob: -5.525963306427002
    6. ' for' → logprob: -6.400963306427002
    7. 'dp' → logprob: -6.400963306427002
    8. ',' → logprob: -6.900963306427002
    9. 'res' → logprob: -7.025963306427002
    10. ' l' → logprob: -7.025963306427002

Token 1695: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01758904755115509
    2. ' i' → logprob: -5.517589092254639
    3. 'min' → logprob: -5.517589092254639
    4. 'dp' → logprob: -5.642589092254639
    5. 'range' → logprob: -5.892589092254639
    6. '(i' → logprob: -6.892589092254639
    7. '   ' → logprob: -7.642589092254639
    8. '[i' → logprob: -8.01758861541748
    9. 'minimum' → logprob: -8.01758861541748
    10. ' range' → logprob: -8.51758861541748

Token 1696: ' minimum' (ID: 11085)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2694924473762512
    2. 'range' → logprob: -1.7694923877716064
    3. 'next' → logprob: -3.5194923877716064
    4. 'min' → logprob: -4.2694926261901855
    5. ' range' → logprob: -4.7694926261901855
    6. ' next' → logprob: -5.6444926261901855
    7. 'minimum' → logprob: -5.8944926261901855
    8. '(i' → logprob: -6.7694926261901855
    9. '```' → logprob: -7.0194926261901855
    10. ' i' → logprob: -7.1444926261901855

Token 1697: ' step' (ID: 5983)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5379722118377686
    2. 'val' → logprob: -2.2879722118377686
    3. '   ' → logprob: -2.6629722118377686
    4. 'value' → logprob: -3.4129722118377686
    5. 'dp' → logprob: -3.4129722118377686
    6. 'res' → logprob: -3.7879722118377686
    7. 'cost' → logprob: -3.7879722118377686
    8. 'for' → logprob: -3.9129722118377686
    9. '=' → logprob: -3.9129722118377686
    10. '(i' → logprob: -4.162972450256348

Token 1698: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7553022503852844
    2. ' =' → logprob: -1.3803021907806396
    3. '(i' → logprob: -2.2553021907806396
    4. '=' → logprob: -2.5053021907806396
    5. ',' → logprob: -3.7553021907806396
    6. 'cost' → logprob: -4.130302429199219
    7. 'min' → logprob: -4.755302429199219
    8. 'value' → logprob: -4.880302429199219
    9. 's' → logprob: -5.130302429199219
    10. 'i' → logprob: -5.255302429199219

Token 1699: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5681321620941162
    2. ' =' → logprob: -1.3181321620941162
    3. '=' → logprob: -2.443132162094116
    4. 'res' → logprob: -3.443132162094116
    5. 'for' → logprob: -4.193132400512695
    6. 'l' → logprob: -4.818132400512695
    7. 'min' → logprob: -5.318132400512695
    8. 'in' → logprob: -5.818132400512695
    9. 'from' → logprob: -5.818132400512695
    10. 'r' → logprob: -6.443132400512695

Token 1700: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0699414312839508
    2. ' =' → logprob: -3.069941520690918
    3. 'res' → logprob: -4.819941520690918
    4. '=' → logprob: -5.444941520690918
    5. 'min' → logprob: -6.819941520690918
    6. ' res' → logprob: -6.944941520690918
    7. 'for' → logprob: -7.194941520690918
    8. 'dp' → logprob: -7.194941520690918
    9. 'v' → logprob: -7.319941520690918
    10. 'l' → logprob: -7.444941520690918

Token 1701: ' mn' (ID: 34208)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1700674593448639
    2. 'val' → logprob: -2.670067548751831
    3. 'min' → logprob: -3.545067548751831
    4. 'dp' → logprob: -4.295067310333252
    5. 'mn' (adapté à ' mn') → logprob: -4.420067310333252
    6. 'v' → logprob: -4.670067310333252
    7. 'r' → logprob: -5.295067310333252
    8. 'tmp' → logprob: -5.420067310333252
    9. 'cur' → logprob: -5.670067310333252
    10. 'cost' → logprob: -5.795067310333252

Token 1702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519485354423523
    2. '=' → logprob: -1.501948595046997
    3. '   ' → logprob: -11.376948356628418
    4. '=min' → logprob: -13.001948356628418
    5. '＝' → logprob: -13.126948356628418
    6. ' ' → logprob: -14.001948356628418
    7. ' ' → logprob: -14.251948356628418
    8. '_' → logprob: -15.126948356628418
    9. ',' → logprob: -15.126948356628418
    10. '=_' → logprob: -15.376948356628418

Token 1703: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013414350105449557
    2. ' dp' → logprob: -6.626341342926025
    3. '   ' → logprob: -11.126341819763184
    4. '	dp' → logprob: -14.501341819763184
    5. '(dp' → logprob: -16.376340866088867
    6. '  ' → logprob: -16.876340866088867
    7. 'd' → logprob: -17.376340866088867
    8. 'dc' → logprob: -17.751340866088867
    9. '```' → logprob: -18.001340866088867
    10. ' ' → logprob: -18.001340866088867

Token 1704: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -1.0087516784551553e-05
    2. 'query' → logprob: -11.62501049041748
    3. '.' → logprob: -14.12501049041748
    4. '```' → logprob: -16.625009536743164
    5. ' .' → logprob: -16.750009536743164
    6. '=query' → logprob: -17.500009536743164
    7. '	query' → logprob: -17.875009536743164
    8. '   ' → logprob: -17.875009536743164
    9. ' query' → logprob: -19.000009536743164
    10. '
' → logprob: -19.125009536743164

Token 1705: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.875003814697266
    3. 'i' → logprob: -13.500003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '(
' → logprob: -18.125003814697266
    6. '((' → logprob: -18.125003814697266
    7. '```' → logprob: -18.500003814697266
    8. ' (' → logprob: -19.125003814697266
    9. '1' → logprob: -20.125003814697266
    10. '(I' → logprob: -20.875003814697266

Token 1706: ' +' (ID: 659)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10198650509119034
    2. '+' → logprob: -2.6019864082336426
    3. ' i' → logprob: -4.851986408233643
    4. ',' → logprob: -4.976986408233643
    5. '   ' → logprob: -5.851986408233643
    6. ' +' → logprob: -5.976986408233643
    7. '1' → logprob: -6.226986408233643
    8. '(i' → logprob: -7.601986408233643
    9. ',i' → logprob: -9.1019868850708
    10. '+i' → logprob: -10.1019868850708

Token 1707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003001888981088996
    2. 'i' → logprob: -8.125300407409668
    3. ' ' → logprob: -12.875300407409668
    4. '   ' → logprob: -14.375300407409668
    5. '(i' → logprob: -15.000300407409668
    6. ' i' → logprob: -15.375300407409668
    7. '```' → logprob: -15.500300407409668
    8. '
' → logprob: -17.62529945373535
    9. '(' → logprob: -17.87529945373535
    10. '``' → logprob: -18.37529945373535

Token 1708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28116774559020996
    2. 'i' → logprob: -1.40616774559021
    3. ' i' → logprob: -12.156167984008789
    4. '   ' → logprob: -12.281167984008789
    5. '(i' → logprob: -12.406167984008789
    6. 'min' → logprob: -14.281167984008789
    7. '```' → logprob: -14.406167984008789
    8. ' ' → logprob: -14.531167984008789
    9. 'max' → logprob: -15.656167984008789
    10. '2' → logprob: -15.718667984008789

Token 1709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02902701310813427
    2. ',i' → logprob: -3.654026985168457
    3. '(i' → logprob: -6.154026985168457
    4. 'i' → logprob: -7.904026985168457
    5. '   ' → logprob: -9.154026985168457
    6. ' ,' → logprob: -9.654026985168457
    7. '```' → logprob: -10.654026985168457
    8. ',min' → logprob: -11.404026985168457
    9. 'min' → logprob: -12.529026985168457
    10. '(' → logprob: -12.654026985168457

Token 1710: ' min' (ID: 1349)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31331318616867065
    2. 'min' → logprob: -1.3133132457733154
    3. '   ' → logprob: -10.688313484191895
    4. ' min' → logprob: -11.063313484191895
    5. ' i' → logprob: -12.188313484191895
    6. '(min' → logprob: -13.063313484191895
    7. '```' → logprob: -13.313313484191895
    8. '(i' → logprob: -13.438313484191895
    9. '[min' → logprob: -15.063313484191895
    10. '	min' → logprob: -15.313313484191895

Token 1711: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -13.000004768371582
    3. '(N' → logprob: -13.875004768371582
    4. 'i' → logprob: -14.125004768371582
    5. '```' → logprob: -15.500004768371582
    6. '   ' → logprob: -16.500003814697266
    7. '(
' → logprob: -17.125003814697266
    8. 'N' → logprob: -17.250003814697266
    9. '((' → logprob: -17.500003814697266
    10. ')' → logprob: -17.875003814697266

Token 1712: ' +' (ID: 659)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01320105604827404
    2. ',' → logprob: -4.3882012367248535
    3. ',i' → logprob: -8.138200759887695
    4. '+' → logprob: -9.013200759887695
    5. '(' → logprob: -9.138200759887695
    6. 'i' → logprob: -9.388200759887695
    7. '```' → logprob: -11.013200759887695
    8. ' (' → logprob: -11.263200759887695
    9. '(
' → logprob: -11.888200759887695
    10. '[i' → logprob: -12.013200759887695

Token 1713: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11306549608707428
    2. 'i' → logprob: -2.238065481185913
    3. '(' → logprob: -9.363065719604492
    4. '1' → logprob: -9.863065719604492
    5. ' i' → logprob: -10.238065719604492
    6. '```' → logprob: -11.488065719604492
    7. '(M' → logprob: -11.988065719604492
    8. '[i' → logprob: -11.988065719604492
    9. '{i' → logprob: -11.988065719604492
    10. ',' → logprob: -11.988065719604492

Token 1714: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02720779739320278
    2. '(i' → logprob: -3.652207851409912
    3. '1' → logprob: -7.777207851409912
    4. ' i' → logprob: -7.902207851409912
    5. '(' → logprob: -10.277207374572754
    6. '[i' → logprob: -11.277207374572754
    7. ')' → logprob: -11.402207374572754
    8. ')i' → logprob: -11.652207374572754
    9. '{i' → logprob: -11.777207374572754
    10. '```' → logprob: -11.777207374572754

Token 1715: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3912578523159027
    2. ',' → logprob: -1.141257882118225
    3. ',i' → logprob: -6.0162577629089355
    4. '(' → logprob: -6.6412577629089355
    5. ',(' → logprob: -7.8912577629089355
    6. ' ,' → logprob: -8.891258239746094
    7. '   ' → logprob: -10.516258239746094
    8. ' (' → logprob: -10.516258239746094
    9. '```' → logprob: -11.141258239746094
    10. '),' → logprob: -11.391258239746094

Token 1716: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.722539834911004e-05
    2. ' i' → logprob: -9.500097274780273
    3. '(i' → logprob: -11.125097274780273
    4. '   ' → logprob: -11.875097274780273
    5. ')i' → logprob: -14.625097274780273
    6. ')' → logprob: -17.250097274780273
    7. ' ' → logprob: -17.500097274780273
    8. '(' → logprob: -17.625097274780273
    9. '	i' → logprob: -17.750097274780273
    10. '  ' → logprob: -17.875097274780273

Token 1717: ' +' (ID: 659)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.32346785068511963
    2. '+' → logprob: -1.6984678506851196
    3. 'i' → logprob: -2.94846773147583
    4. ' +' → logprob: -3.82346773147583
    5. '+i' → logprob: -4.69846773147583
    6. ' i' → logprob: -5.82346773147583
    7. '(M' → logprob: -6.19846773147583
    8. 'M' → logprob: -6.32346773147583
    9. '(' → logprob: -7.07346773147583
    10. '```' → logprob: -7.44846773147583

Token 1718: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6973739266395569
    2. 'i' → logprob: -1.322373867034912
    3. '1' → logprob: -1.447373867034912
    4. ' M' → logprob: -8.69737434387207
    5. ' i' → logprob: -8.94737434387207
    6. '   ' → logprob: -9.44737434387207
    7. ' ' → logprob: -10.94737434387207
    8. '(i' → logprob: -12.44737434387207
    9. '+' → logprob: -12.57237434387207
    10. '```' → logprob: -12.69737434387207

Token 1719: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1797526776790619
    2. ' +' → logprob: -1.8047527074813843
    3. '   ' → logprob: -13.179752349853516
    4. ')' → logprob: -13.304752349853516
    5. '+
' → logprob: -14.054752349853516
    6. '```' → logprob: -14.304752349853516
    7. '
' → logprob: -14.554752349853516
    8. ')+' → logprob: -14.929752349853516
    9. '＋' → logprob: -15.054752349853516
    10. ' ' → logprob: -15.054752349853516

Token 1720: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006299942615441978
    2. '2' → logprob: -7.375629901885986
    3. ' ' → logprob: -13.125630378723145
    4. 'i' → logprob: -14.375630378723145
    5. '```' → logprob: -14.500630378723145
    6. '(i' → logprob: -16.000629425048828
    7. '(' → logprob: -16.750629425048828
    8. '   ' → logprob: -17.125629425048828
    9. ')' → logprob: -17.125629425048828
    10. '3' → logprob: -18.125629425048828

Token 1721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. '2' → logprob: -10.375032424926758
    3. ' ' → logprob: -15.250032424926758
    4. '```' → logprob: -15.250032424926758
    5. 'i' → logprob: -16.750032424926758
    6. ')' → logprob: -16.750032424926758
    7. '``' → logprob: -16.875032424926758
    8. '   ' → logprob: -17.250032424926758
    9. '`' → logprob: -17.875032424926758
    10. '+' → logprob: -18.375032424926758

Token 1722: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47668755054473877
    2. ')' → logprob: -0.9766875505447388
    3. '))
' → logprob: -6.476687431335449
    4. ')
' → logprob: -7.101687431335449
    5. ')))' → logprob: -9.47668743133545
    6. ')+' → logprob: -9.47668743133545
    7. '   ' → logprob: -9.60168743133545
    8. ' ))' → logprob: -12.47668743133545
    9. '))+' → logprob: -12.47668743133545
    10. ')`' → logprob: -12.97668743133545

Token 1723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9912406206130981
    2. 'if' → logprob: -1.2412406206130981
    3. 'dp' → logprob: -1.3662406206130981
    4. '+' → logprob: -2.8662405014038086
    5. ')' → logprob: -4.616240501403809
    6. ' if' → logprob: -4.741240501403809
    7. ' +' → logprob: -5.741240501403809
    8. '```' → logprob: -6.116240501403809
    9. ')+' → logprob: -6.741240501403809
    10. ' dp' → logprob: -7.616240501403809

Token 1724: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16118492186069489
    2. 'dp' → logprob: -1.9111849069595337
    3. '   ' → logprob: -7.036184787750244
    4. '```' → logprob: -10.036185264587402
    5. ' if' → logprob: -10.411185264587402
    6. ' dp' → logprob: -13.161185264587402
    7. '``' → logprob: -13.536185264587402
    8. '
' → logprob: -14.536185264587402
    9. '(dp' → logprob: -14.911185264587402
    10. '	dp' → logprob: -14.911185264587402

Token 1725: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.0007367274374701083
    2. ' mn' → logprob: -7.250736713409424
    3. '   ' → logprob: -10.625737190246582
    4. 'mx' → logprob: -14.375737190246582
    5. ' ' → logprob: -14.500737190246582
    6. '  ' → logprob: -14.625737190246582
    7. 'm' → logprob: -15.625737190246582
    8. '.mn' → logprob: -15.875737190246582
    9. 'min' → logprob: -16.250736236572266
    10. '    ' → logprob: -16.375736236572266

Token 1726: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03453907370567322
    2. ' !=' → logprob: -3.659538984298706
    3. '<' → logprob: -5.409539222717285
    4. '+' → logprob: -6.284539222717285
    5. '==' → logprob: -6.409539222717285
    6. ' ==' → logprob: -10.409539222717285
    7. '```' → logprob: -10.534539222717285
    8. ' <' → logprob: -10.659539222717285
    9. ' ' → logprob: -10.784539222717285
    10. 'import' → logprob: -11.034539222717285

Token 1727: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.2664456789934775e-06
    2. ' INF' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.250001907348633
    4. 'IN' → logprob: -18.250001907348633
    5. '-INF' → logprob: -19.250001907348633
    6. '_INF' → logprob: -19.750001907348633
    7. 'inf' → logprob: -20.250001907348633
    8. 'INVALID' → logprob: -21.250001907348633
    9. ' ' → logprob: -21.375001907348633
    10. '```' → logprob: -21.750001907348633

Token 1728: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18824687600135803
    2. ':' → logprob: -1.8132468461990356
    3. '   ' → logprob: -5.688246726989746
    4. '+' → logprob: -5.813246726989746
    5. ' and' → logprob: -6.813246726989746
    6. '       ' → logprob: -7.313246726989746
    7. 'and' → logprob: -8.563246726989746
    8. ' +' → logprob: -10.063246726989746
    9. ':
' → logprob: -10.438246726989746
    10. '=' → logprob: -11.188246726989746

Token 1729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035339705646038055
    2. 'dp' → logprob: -3.410339593887329
    3. ' dp' → logprob: -6.910339832305908
    4. '   ' → logprob: -7.410339832305908
    5. '	dp' → logprob: -10.16033935546875
    6. '```' → logprob: -10.28533935546875
    7. '           ' → logprob: -12.03533935546875
    8. '(dp' → logprob: -12.03533935546875
    9. '_dp' → logprob: -13.53533935546875
    10. '``' → logprob: -14.53533935546875

Token 1730: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001170132018160075
    2. '   ' → logprob: -9.375117301940918
    3. ' dp' → logprob: -10.500117301940918
    4. '       ' → logprob: -12.625117301940918
    5. '	dp' → logprob: -13.875117301940918
    6. '           ' → logprob: -15.125117301940918
    7. '(dp' → logprob: -17.8751163482666
    8. '```' → logprob: -18.2501163482666
    9. '   ' → logprob: -18.5001163482666
    10. '_dp' → logprob: -18.8751163482666

Token 1731: ' Update' (ID: 9152)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005674490821547806
    2. ' dp' → logprob: -7.875567436218262
    3. '   ' → logprob: -8.625567436218262
    4. '       ' → logprob: -12.000567436218262
    5. '	dp' → logprob: -14.125567436218262
    6. '           ' → logprob: -14.375567436218262
    7. '   ' → logprob: -16.500568389892578
    8. 'step' → logprob: -16.750568389892578
    9. 'update' → logprob: -16.750568389892578
    10. '  ' → logprob: -17.250568389892578

Token 1732: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00645470479503274
    2. '(i' → logprob: -5.2564544677734375
    3. 'i' → logprob: -6.7564544677734375
    4. ' dp' → logprob: -10.256454467773438
    5. '   ' → logprob: -11.381454467773438
    6. '       ' → logprob: -12.631454467773438
    7. '(dp' → logprob: -13.006454467773438
    8. '```' → logprob: -13.256454467773438
    9. '(' → logprob: -14.381454467773438
    10. '_dp' → logprob: -14.506454467773438

Token 1733: '[i' (ID: 1768)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12812669575214386
    2. '.update' → logprob: -2.128126621246338
    3. 'update' → logprob: -7.378126621246338
    4. '   ' → logprob: -7.878126621246338
    5. '       ' → logprob: -9.628127098083496
    6. '.' → logprob: -9.878127098083496
    7. 'i' → logprob: -10.503127098083496
    8. '```' → logprob: -11.253127098083496
    9. '(' → logprob: -11.378127098083496
    10. ' (' → logprob: -11.878127098083496

Token 1734: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016436543315649033
    2. '(i' → logprob: -4.516436576843262
    3. ',i' → logprob: -5.391436576843262
    4. ' ,' → logprob: -8.016436576843262
    5. ')' → logprob: -8.516436576843262
    6. '   ' → logprob: -9.016436576843262
    7. '),' → logprob: -10.016436576843262
    8. ',m' → logprob: -10.141436576843262
    9. '(' → logprob: -10.766436576843262
    10. ',
' → logprob: -10.891436576843262

Token 1735: ' if' (ID: 538)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1187325716018677
    2. 'dp' → logprob: -1.2437325716018677
    3. '(dp' → logprob: -2.243732452392578
    4. ')' → logprob: -2.618732452392578
    5. ' =' → logprob: -2.993732452392578
    6. '   ' → logprob: -3.243732452392578
    7. '=' → logprob: -3.368732452392578
    8. '(' → logprob: -3.368732452392578
    9. '       ' → logprob: -3.618732452392578
    10. ',' → logprob: -5.243732452392578

Token 1736: ' it's' (ID: 4275)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.026966938748955727
    2. ' mn' → logprob: -3.7769670486450195
    3. '   ' → logprob: -6.2769670486450195
    4. 'dp' → logprob: -6.5269670486450195
    5. ' dp' → logprob: -9.15196704864502
    6. '       ' → logprob: -9.77696704864502
    7. 'mx' → logprob: -10.02696704864502
    8. 'i' → logprob: -10.27696704864502
    9. '1' → logprob: -10.77696704864502
    10. '    ' → logprob: -11.15196704864502

Token 1737: ' possible' (ID: 4149)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.030158406123518944
    2. ' mn' → logprob: -4.530158519744873
    3. '<' → logprob: -5.405158519744873
    4. '   ' → logprob: -5.405158519744873
    5. 'not' → logprob: -6.030158519744873
    6. 'less' → logprob: -6.155158519744873
    7. 'sm' → logprob: -7.030158519744873
    8. '>' → logprob: -7.280158519744873
    9. '<=' → logprob: -7.280158519744873
    10. '```' → logprob: -7.405158519744873

Token 1738: ' to' (ID: 316)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.806035041809082
    2. '(i' → logprob: -1.056035041809082
    3. 'dp' → logprob: -2.681035041809082
    4. '(dp' → logprob: -2.806035041809082
    5. 'mn' → logprob: -3.556035041809082
    6. '       ' → logprob: -3.681035041809082
    7. '(' → logprob: -4.181035041809082
    8. ' (' → logprob: -6.431035041809082
    9. '   ' → logprob: -6.681035041809082
    10. '```' → logprob: -6.681035041809082

Token 1739: ' reach' (ID: 7627)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.01681218482553959
    2. 'dp' → logprob: -5.016812324523926
    3. 'update' → logprob: -5.766812324523926
    4. ' mn' → logprob: -5.891812324523926
    5. 'min' → logprob: -6.891812324523926
    6. 'move' → logprob: -7.016812324523926
    7. 'reach' → logprob: -7.141812324523926
    8. 'mx' → logprob: -8.266812324523926
    9. 'make' → logprob: -8.516812324523926
    10. 'step' → logprob: -8.766812324523926

Token 1740: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027156634256243706
    2. ' i' → logprob: -3.6521565914154053
    3. '(i' → logprob: -7.777156829833984
    4. '   ' → logprob: -8.152156829833984
    5. '       ' → logprob: -9.777156829833984
    6. 'the' → logprob: -11.152156829833984
    7. '```' → logprob: -11.527156829833984
    8. '[i' → logprob: -11.777156829833984
    9. 'dp' → logprob: -12.027156829833984
    10. ')' → logprob: -12.152156829833984

Token 1741: ' end' (ID: 1268)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44583916664123535
    2. 'mn' → logprob: -1.9458391666412354
    3. 'position' → logprob: -2.3208391666412354
    4. 'dp' → logprob: -2.6958391666412354
    5. 'next' → logprob: -4.320838928222656
    6. 'destination' → logprob: -4.320838928222656
    7. 'goal' → logprob: -5.570838928222656
    8. 'end' → logprob: -5.695838928222656
    9. 'minimum' → logprob: -5.945838928222656
    10. ' position' → logprob: -6.320838928222656

Token 1742: ' from' (ID: 591)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5290291905403137
    2. '   ' → logprob: -1.529029130935669
    3. '       ' → logprob: -2.154029130935669
    4. '(dp' → logprob: -3.154029130935669
    5. '(' → logprob: -4.404029369354248
    6. 'dp' → logprob: -4.904029369354248
    7. ')' → logprob: -5.654029369354248
    8. ' (' → logprob: -5.779029369354248
    9. ',' → logprob: -5.904029369354248
    10. '           ' → logprob: -6.529029369354248

Token 1743: ' here' (ID: 2105)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0338047556579113
    2. ' i' → logprob: -3.4088046550750732
    3. '```' → logprob: -9.908804893493652
    4. '   ' → logprob: -10.033804893493652
    5. '       ' → logprob: -10.533804893493652
    6. '	i' → logprob: -11.908804893493652
    7. '           ' → logprob: -12.033804893493652
    8. 'the' → logprob: -12.283804893493652
    9. '[i' → logprob: -12.408804893493652
    10. '(i' → logprob: -12.533804893493652

Token 1744: '
' (ID: 198)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5738518238067627
    2. 'dp' → logprob: -1.6988518238067627
    3. '   ' → logprob: -2.1988518238067627
    4. '(dp' → logprob: -2.8238518238067627
    5. '       ' → logprob: -4.198851585388184
    6. ' dp' → logprob: -4.198851585388184
    7. '(' → logprob: -4.198851585388184
    8. ' (' → logprob: -4.448851585388184
    9. ')' → logprob: -4.948851585388184
    10. ' i' → logprob: -5.823851585388184

Token 1745: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3979739844799042
    2. 'dp' → logprob: -2.0229740142822266
    3. '(dp' → logprob: -2.6479740142822266
    4. ' dp' → logprob: -2.8979740142822266
    5. '   ' → logprob: -3.2729740142822266
    6. '           ' → logprob: -3.7729740142822266
    7. '```' → logprob: -6.147974014282227
    8. ':' → logprob: -6.397974014282227
    9. ':
' → logprob: -7.147974014282227
    10. '.dp' → logprob: -7.147974014282227

Token 1746: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0006006922340020537
    2. ' dp' → logprob: -7.875600814819336
    3. '   ' → logprob: -9.250600814819336
    4. '       ' → logprob: -9.375600814819336
    5. '           ' → logprob: -10.375600814819336
    6. '	dp' → logprob: -12.750600814819336
    7. '```' → logprob: -14.000600814819336
    8. '               ' → logprob: -14.625600814819336
    9. 'd' → logprob: -14.625600814819336
    10. '
' → logprob: -14.750600814819336

Token 1747: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -5.955703818472102e-05
    2. '.' → logprob: -9.750059127807617
    3. 'update' → logprob: -13.875059127807617
    4. '   ' → logprob: -16.375059127807617
    5. '`.' → logprob: -16.750059127807617
    6. ').' → logprob: -17.000059127807617
    7. '```' → logprob: -17.000059127807617
    8. ' .' → logprob: -17.125059127807617
    9. '.set' → logprob: -17.875059127807617
    10. '}.' → logprob: -18.375059127807617

Token 1748: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -11.125020027160645
    3. 'i' → logprob: -12.250020027160645
    4. '(
' → logprob: -14.875020027160645
    5. ' i' → logprob: -17.250019073486328
    6. ' (' → logprob: -18.875019073486328
    7. ',i' → logprob: -19.125019073486328
    8. '   ' → logprob: -20.000019073486328
    9. '```' → logprob: -20.250019073486328
    10. ')i' → logprob: -20.500019073486328

Token 1749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008635803242214024
    2. ',m' → logprob: -7.625863552093506
    3. ' ,' → logprob: -8.000864028930664
    4. '   ' → logprob: -10.375864028930664
    5. '0' → logprob: -13.375864028930664
    6. '`,' → logprob: -13.625864028930664
    7. ',
' → logprob: -13.625864028930664
    8. ',min' → logprob: -14.500864028930664
    9. '),' → logprob: -14.625864028930664
    10. '',' → logprob: -14.625864028930664

Token 1750: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.00015050210640765727
    2. ' mn' → logprob: -8.875150680541992
    3. '1' → logprob: -11.750150680541992
    4. '   ' → logprob: -13.250150680541992
    5. 'mx' → logprob: -14.250150680541992
    6. ' ' → logprob: -16.750150680541992
    7. 'm' → logprob: -16.875150680541992
    8. 'mint' → logprob: -17.000150680541992
    9. 'mnt' → logprob: -17.125150680541992
    10. '.mn' → logprob: -17.125150680541992

Token 1751: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11291345953941345
    2. ' +' → logprob: -2.2379133701324463
    3. '   ' → logprob: -9.737913131713867
    4. '1' → logprob: -11.487913131713867
    5. '+
' → logprob: -12.112913131713867
    6. ')' → logprob: -12.362913131713867
    7. '```' → logprob: -12.862913131713867
    8. ')+' → logprob: -13.112913131713867
    9. ' plus' → logprob: -13.487913131713867
    10. '    ' → logprob: -13.612913131713867

Token 1752: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000009536743164
    4. '```' → logprob: -16.750009536743164
    5. ')' → logprob: -19.000009536743164
    6. '`' → logprob: -19.687509536743164
    7. '+' → logprob: -20.125009536743164
    8. '       ' → logprob: -20.312509536743164
    9. '  ' → logprob: -20.500009536743164
    10. '
' → logprob: -20.687509536743164

Token 1753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '
' → logprob: -18.375001907348633
    6. ')' → logprob: -18.500001907348633
    7. '-' → logprob: -20.125001907348633
    8. '100' → logprob: -20.375001907348633
    9. '+' → logprob: -20.562501907348633
    10. '`' → logprob: -20.812501907348633

Token 1754: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.875003814697266
    5. '())' → logprob: -17.625003814697266
    6. ')`' → logprob: -18.375003814697266
    7. '))' → logprob: -18.500003814697266
    8. ')return' → logprob: -18.875003814697266
    9. ')#' → logprob: -18.875003814697266
    10. '```' → logprob: -19.375003814697266

Token 1755: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1756: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02041599154472351
    2. 'res' → logprob: -4.020415782928467
    3. 'ans' → logprob: -6.395415782928467
    4. 'print' → logprob: -8.770416259765625
    5. 'result' → logprob: -9.145416259765625
    6. '#' → logprob: -9.270416259765625
    7. 'pos' → logprob: -9.520416259765625
    8. 'cur' → logprob: -10.270416259765625
    9. 'ret' → logprob: -10.270416259765625
    10. 'i' → logprob: -10.395416259765625

Token 1757: ' start' (ID: 1604)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02324605919420719
    2. ' dp' → logprob: -3.7732460498809814
    3. '(dp' → logprob: -14.398245811462402
    4. '0' → logprob: -17.27324676513672
    5. '	dp' → logprob: -18.02324676513672
    6. 'd' → logprob: -19.14824676513672
    7. 'dpi' → logprob: -19.39824676513672
    8. '```' → logprob: -19.39824676513672
    9. '_dp' → logprob: -19.64824676513672
    10. '   ' → logprob: -20.02324676513672

Token 1758: ' position' (ID: 4010)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23288139700889587
    2. ' ==' → logprob: -2.1078813076019287
    3. 'if' → logprob: -3.7328813076019287
    4. '0' → logprob: -3.8578813076019287
    5. 'i' → logprob: -4.107881546020508
    6. '[' → logprob: -4.232881546020508
    7. '[i' → logprob: -5.482881546020508
    8. '=' → logprob: -6.107881546020508
    9. '(' → logprob: -6.857881546020508
    10. 'at' → logprob: -7.607881546020508

Token 1759: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20249848067760468
    2. 'dp' → logprob: -1.952498435974121
    3. '0' → logprob: -3.702498435974121
    4. ' ==' → logprob: -4.202498435974121
    5. '[' → logprob: -8.077498435974121
    6. '(dp' → logprob: -8.327498435974121
    7. '!=' → logprob: -8.577498435974121
    8. '(' → logprob: -8.702498435974121
    9. ' dp' → logprob: -8.702498435974121
    10. '=' → logprob: -8.827498435974121

Token 1760: ' still' (ID: 2928)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09071319550275803
    2. '0' → logprob: -3.0907132625579834
    3. 'INF' → logprob: -3.2157132625579834
    4. '==' → logprob: -7.965713024139404
    5. ' dp' → logprob: -8.590713500976562
    6. '(dp' → logprob: -8.965713500976562
    7. '=' → logprob: -9.090713500976562
    8. 'inf' → logprob: -9.965713500976562
    9. ' INF' → logprob: -10.215713500976562
    10. 'not' → logprob: -10.340713500976562

Token 1761: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.014220736920833588
    2. 'dp' → logprob: -4.264220714569092
    3. ' INF' → logprob: -10.38922119140625
    4. 'IN' → logprob: -12.01422119140625
    5. 'inf' → logprob: -12.01422119140625
    6. '==' → logprob: -12.51422119140625
    7. '`' → logprob: -13.13922119140625
    8. '=' → logprob: -13.76422119140625
    9. '```' → logprob: -13.76422119140625
    10. 'equal' → logprob: -14.01422119140625

Token 1762: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24223767220973969
    2. ':' → logprob: -2.3672375679016113
    3. 'or' → logprob: -3.4922375679016113
    4. ' or' → logprob: -3.6172375679016113
    5. ' ==' → logprob: -3.7422375679016113
    6. ':
' → logprob: -4.367237567901611
    7. '=' → logprob: -4.367237567901611
    8. ',' → logprob: -5.492237567901611
    9. '   ' → logprob: -5.492237567901611
    10. '[' → logprob: -5.867237567901611

Token 1763: ' cannot' (ID: 6284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07374956458806992
    2. 'if' → logprob: -3.448749542236328
    3. ' print' → logprob: -3.823749542236328
    4. 'No' → logprob: -4.948749542236328
    5. '   ' → logprob: -5.698749542236328
    6. ' if' → logprob: -5.698749542236328
    7. ' No' → logprob: -5.823749542236328
    8. 'return' → logprob: -8.323749542236328
    9. '#' → logprob: -8.573749542236328
    10. 'dp' → logprob: -9.198749542236328

Token 1764: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.7032419443130493
    2. ' reach' → logprob: -0.8282419443130493
    3. 'print' → logprob: -3.2032418251037598
    4. 'be' → logprob: -4.95324182510376
    5. ' be' → logprob: -4.95324182510376
    6. '
' → logprob: -5.32824182510376
    7. '   ' → logprob: -6.32824182510376
    8. ' print' → logprob: -6.45324182510376
    9. 'go' → logprob: -6.95324182510376
    10. ' proceed' → logprob: -7.70324182510376

Token 1765: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16590924561023712
    2. 'print' → logprob: -2.1659092903137207
    3. '0' → logprob: -3.7909092903137207
    4. 'from' → logprob: -4.915909290313721
    5. '
' → logprob: -5.665909290313721
    6. '   ' → logprob: -6.415909290313721
    7. '(i' → logprob: -6.790909290313721
    8. '```' → logprob: -7.665909290313721
    9. 'dp' → logprob: -7.915909290313721
    10. ':
' → logprob: -8.165908813476562

Token 1766: ' goal' (ID: 8583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6026604771614075
    2. 'end' → logprob: -0.8526604771614075
    3. '0' → logprob: -4.602660655975342
    4. 'N' → logprob: -4.852660655975342
    5. 'S' → logprob: -5.602660655975342
    6. '```' → logprob: -5.852660655975342
    7. 'goal' → logprob: -7.727660655975342
    8. '-' → logprob: -7.727660655975342
    9. '1' → logprob: -8.352660179138184
    10. ' end' → logprob: -8.602660179138184

Token 1767: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01591881550848484
    2. 'print' → logprob: -5.265918731689453
    3. ':
' → logprob: -5.265918731689453
    4. 'res' → logprob: -6.640918731689453
    5. 'No' → logprob: -7.015918731689453
    6. 'result' → logprob: -7.140918731689453
    7. ':' → logprob: -7.265918731689453
    8. '```' → logprob: -7.640918731689453
    9. 'ans' → logprob: -8.515918731689453
    10. 'dp' → logprob: -8.640918731689453

Token 1768: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03960949927568436
    2. 'res' → logprob: -3.289609432220459
    3. 'x' → logprob: -7.789609432220459
    4. 'ans' → logprob: -7.789609432220459
    5. 'pos' → logprob: -7.914609432220459
    6. 'result' → logprob: -9.414609909057617
    7. 'dp' → logprob: -9.664609909057617
    8. 'cost' → logprob: -9.664609909057617
    9. 'cur' → logprob: -10.289609909057617
    10. 'ret' → logprob: -10.289609909057617

Token 1769: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019289902411401272
    2. ' dp' → logprob: -6.251928806304932
    3. '(dp' → logprob: -15.37692928314209
    4. '   ' → logprob: -15.75192928314209
    5. '	dp' → logprob: -18.626928329467773
    6. '```' → logprob: -21.126928329467773
    7. '0' → logprob: -21.751928329467773
    8. '    ' → logprob: -21.751928329467773
    9. '_dp' → logprob: -21.751928329467773
    10. ' ' → logprob: -21.876928329467773

Token 1770: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0008497710223309696
    2. '.' → logprob: -7.125849723815918
    3. 'get' → logprob: -10.500849723815918
    4. '   ' → logprob: -11.375849723815918
    5. '.query' → logprob: -12.375849723815918
    6. ' .' → logprob: -14.000849723815918
    7. '```' → logprob: -15.000849723815918
    8. '`.' → logprob: -16.000850677490234
    9. ').' → logprob: -16.125850677490234
    10. '.i' → logprob: -16.125850677490234

Token 1771: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.630610641877865e-06
    2. '0' → logprob: -12.000006675720215
    3. '(
' → logprob: -15.375006675720215
    4. ' (' → logprob: -15.875006675720215
    5. '```' → logprob: -17.2500057220459
    6. 'def' → logprob: -21.6250057220459
    7. '(

' → logprob: -21.7500057220459
    8. '#' → logprob: -21.8750057220459
    9. '[' → logprob: -22.0000057220459
    10. 'a' → logprob: -22.1250057220459

Token 1772: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. ' ' → logprob: -16.875
    4. ')' → logprob: -18.375
    5. '```' → logprob: -19.5
    6. '`' → logprob: -20.0
    7. '   ' → logprob: -20.0
    8. '۰' → logprob: -21.75
    9. '０' → logprob: -21.875
    10. '00' → logprob: -22.125

Token 1773: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10179907828569412
    2. '==' → logprob: -2.4767990112304688
    3. ')==' → logprob: -4.726799011230469
    4. ' ==' → logprob: -6.226799011230469
    5. '()' → logprob: -6.726799011230469
    6. '()==' → logprob: -7.351799011230469
    7. '```' → logprob: -10.601799011230469
    8. ' )' → logprob: -10.726799011230469
    9. ']==' → logprob: -10.726799011230469
    10. '())' → logprob: -11.351799011230469

Token 1774: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0036801211535930634
    2. ' ==' → logprob: -5.628680229187012
    3. '>=' → logprob: -9.628680229187012
    4. '==
' → logprob: -11.878680229187012
    5. '>' → logprob: -12.628680229187012
    6. '```' → logprob: -13.503680229187012
    7. '   ' → logprob: -14.378680229187012
    8. '=' → logprob: -14.378680229187012
    9. '()==' → logprob: -14.503680229187012
    10. '===' → logprob: -15.378680229187012

Token 1775: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.547789674485102e-05
    2. ' INF' → logprob: -10.250035285949707
    3. 'IN' → logprob: -18.625036239624023
    4. '   ' → logprob: -18.750036239624023
    5. '_INF' → logprob: -18.875036239624023
    6. '-INF' → logprob: -19.750036239624023
    7. '```' → logprob: -21.875036239624023
    8. ' ' → logprob: -22.125036239624023
    9. ' ' → logprob: -22.250036239624023
    10. '`' → logprob: -22.250036239624023

Token 1776: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08904307335615158
    2. ':' → logprob: -2.464043140411377
    3. '():
' → logprob: -10.089042663574219
    4. '):
' → logprob: -10.464042663574219
    5. '   ' → logprob: -10.839042663574219
    6. ':

' → logprob: -12.339042663574219
    7. ':
' → logprob: -12.964042663574219
    8. 'No' → logprob: -13.464042663574219
    9. '=' → logprob: -13.964042663574219
    10. 'print' → logprob: -14.089042663574219

Token 1777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5271809101104736
    2. 'No' → logprob: -0.9021809101104736
    3. 'print' → logprob: -5.7771806716918945
    4. ' No' → logprob: -7.1521806716918945
    5. '```' → logprob: -9.402180671691895
    6. '`' → logprob: -10.402180671691895
    7. ' print' → logprob: -11.402180671691895
    8. '``' → logprob: -12.152180671691895
    9. 'Print' → logprob: -12.152180671691895
    10. '  ' → logprob: -12.277180671691895

Token 1778: ' print' (ID: 2123)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.08964427560567856
    2. 'print' (adapté à ' print') → logprob: -2.714644193649292
    3. '-' → logprob: -3.964644193649292
    4. '-No' → logprob: -8.089644432067871
    5. '   ' → logprob: -8.714644432067871
    6. '```' → logprob: -10.964644432067871
    7. ' No' → logprob: -11.089644432067871
    8. '-print' → logprob: -11.339644432067871
    9. ' print' → logprob: -11.714644432067871
    10. 'Print' → logprob: -12.464644432067871

Token 1779: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000181372175575234
    2. '(-' → logprob: -8.625181198120117
    3. ''-' → logprob: -14.375181198120117
    4. ' -' → logprob: -14.750181198120117
    5. '()-' → logprob: -15.125181198120117
    6. '('-' → logprob: -15.750181198120117
    7. '"-' → logprob: -16.250181198120117
    8. '```' → logprob: -16.750181198120117
    9. 'No' → logprob: -16.875181198120117
    10. '("-' → logprob: -17.125181198120117

Token 1780: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '2' → logprob: -18.25
    4. '```' → logprob: -18.25
    5. '0' → logprob: -18.625
    6. '`' → logprob: -18.75
    7. ')' → logprob: -19.25
    8. '"' → logprob: -19.25
    9. '"""' → logprob: -19.375
    10. '(' → logprob: -20.375

Token 1781: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01856672205030918
    2. ')' → logprob: -4.018566608428955
    3. 'else' → logprob: -8.018567085266113
    4. '   ' → logprob: -9.643567085266113
    5. ')
' → logprob: -10.768567085266113
    6. ' )
' → logprob: -15.018567085266113
    7. '())
' → logprob: -15.393567085266113
    8. '```' → logprob: -15.518567085266113
    9. ' else' → logprob: -15.768567085266113
    10. ')return' → logprob: -15.893567085266113

Token 1782: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -13.875001907348633
    3. ' else' → logprob: -15.250001907348633
    4. 'elif' → logprob: -15.875001907348633
    5. '```' → logprob: -15.875001907348633
    6. 'import' → logprob: -18.000001907348633
    7. 'exit' → logprob: -20.250001907348633
    8. '_else' → logprob: -20.875001907348633
    9. 'Else' → logprob: -21.250001907348633
    10. '    
' → logprob: -21.250001907348633

Token 1783: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0028254427015781403
    2. '   ' → logprob: -5.8778252601623535
    3. 'import' → logprob: -11.752825736999512
    4. 'exit' (adapté à ' exit') → logprob: -12.377825736999512
    5. '```' → logprob: -12.627825736999512
    6. ' else' → logprob: -13.252825736999512
    7. 'sys' → logprob: -13.502825736999512
    8. 'elif' → logprob: -13.877825736999512
    9. '    
' → logprob: -14.752825736999512
    10. 'els' → logprob: -16.377824783325195

Token 1784: '()

' (ID: 5874)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.06548980623483658
    2. 'steps' → logprob: -3.6904897689819336
    3. 'res' → logprob: -4.440489768981934
    4. 'pos' → logprob: -4.690489768981934
    5. 'step' → logprob: -5.565489768981934
    6. 'ans' → logprob: -5.815489768981934
    7. '
' → logprob: -6.065489768981934
    8. 'moves' → logprob: -6.440489768981934
    9. 'route' → logprob: -6.565489768981934
    10. 'p' → logprob: -7.315489768981934

Token 1785: '#' (ID: 2)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7597320675849915
    2. 'path' → logprob: -1.3847320079803467
    3. 'pos' → logprob: -1.5097320079803467
    4. 'ans' → logprob: -3.6347320079803467
    5. 'cur' → logprob: -4.134732246398926
    6. '#' → logprob: -4.759732246398926
    7. 'from' → logprob: -5.759732246398926
    8. 'steps' → logprob: -6.509732246398926
    9. 'route' → logprob: -7.009732246398926
    10. 'i' → logprob: -7.134732246398926

Token 1786: ' Re' (ID: 907)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.21026374399662018
    2. 'pos' → logprob: -1.835263729095459
    3. 'cur' → logprob: -4.585263729095459
    4. 'path' → logprob: -4.585263729095459
    5. 'ans' → logprob: -5.210263729095459
    6. 'i' → logprob: -6.210263729095459
    7. 'steps' → logprob: -7.085263729095459
    8. '#' → logprob: -7.960263729095459
    9. 'curr' → logprob: -8.585264205932617
    10. 'idx' → logprob: -8.585264205932617

Token 1787: 'construct' (ID: 17936)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019201948307454586
    2. 'st' → logprob: -7.251920223236084
    3. 'path' → logprob: -8.126919746398926
    4. 't' → logprob: -8.251919746398926
    5. 'res' → logprob: -8.626919746398926
    6. 'i' → logprob: -9.001919746398926
    7. 'pos' → logprob: -9.251919746398926
    8. 'v' → logprob: -9.626919746398926
    9. ' s' → logprob: -10.751919746398926
    10. 'result' → logprob: -10.876919746398926

Token 1788: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.08686088025569916
    2. 'pos' → logprob: -2.8368608951568604
    3. 'res' → logprob: -4.586860656738281
    4. 'ans' → logprob: -4.711860656738281
    5. 'cur' → logprob: -5.336860656738281
    6. 'i' → logprob: -8.461860656738281
    7. 'route' → logprob: -9.086860656738281
    8. '```' → logprob: -9.461860656738281
    9. ' path' → logprob: -9.711860656738281
    10. 'idx' → logprob: -9.961860656738281

Token 1789: ' by' (ID: 656)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7999043464660645
    2. 'cur' → logprob: -1.0499043464660645
    3. 'path' → logprob: -1.7999043464660645
    4. 'res' → logprob: -3.4249043464660645
    5. 'ans' → logprob: -6.7999043464660645
    6. '```' → logprob: -7.9249043464660645
    7. 'curr' → logprob: -8.174903869628906
    8. 'i' → logprob: -8.299903869628906
    9. 'now' → logprob: -8.549903869628906
    10. 'p' → logprob: -8.674903869628906

Token 1790: ' greedy' (ID: 107110)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6408882141113281
    2. 'i' → logprob: -1.1408882141113281
    3. '[i' → logprob: -3.015888214111328
    4. '[' → logprob: -3.640888214111328
    5. '
' → logprob: -4.015888214111328
    6. '[]
' → logprob: -4.265888214111328
    7. 'path' → logprob: -4.390888214111328
    8. 'p' → logprob: -5.265888214111328
    9. 'current' → logprob: -5.265888214111328
    10. 'res' → logprob: -5.515888214111328

Token 1791: ' choice' (ID: 7158)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.545099139213562
    2. 'i' → logprob: -1.170099139213562
    3. 'path' → logprob: -2.2950992584228516
    4. 'ans' → logprob: -5.545099258422852
    5. 'cur' → logprob: -5.920099258422852
    6. 'res' → logprob: -6.670099258422852
    7. ' path' → logprob: -8.295099258422852
    8. ' i' → logprob: -8.545099258422852
    9. '```' → logprob: -8.670099258422852
    10. 'idx' → logprob: -9.045099258422852

Token 1792: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15581485629081726
    2. 'path' → logprob: -2.6558148860931396
    3. 'cur' → logprob: -2.6558148860931396
    4. 'res' → logprob: -6.0308146476745605
    5. 'i' → logprob: -7.7808146476745605
    6. 'ans' → logprob: -8.280815124511719
    7. '```' → logprob: -8.280815124511719
    8. 'now' → logprob: -9.030815124511719
    9. 'curr' → logprob: -9.280815124511719
    10. 'p' → logprob: -9.405815124511719

Token 1793: 'making' (ID: 37891)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.018795818090438843
    2. 'path' → logprob: -4.268795967102051
    3. 'cur' → logprob: -5.643795967102051
    4. 'i' → logprob: -7.518795967102051
    5. 'res' → logprob: -9.14379596710205
    6. 'ans' → logprob: -9.14379596710205
    7. 'curr' → logprob: -9.64379596710205
    8. '0' → logprob: -10.01879596710205
    9. 'idx' → logprob: -10.14379596710205
    10. '
' → logprob: -10.14379596710205

Token 1794: ' largest' (ID: 10574)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.7453733086585999
    2. 'j' → logprob: -1.870373249053955
    3. 'the' → logprob: -1.870373249053955
    4. 'steps' → logprob: -2.620373249053955
    5. 'a' → logprob: -2.745373249053955
    6. ' the' → logprob: -3.870373249053955
    7. 'i' → logprob: -4.245373249053955
    8. 'pos' → logprob: -4.870373249053955
    9. ' a' → logprob: -5.120373249053955
    10. ' moves' → logprob: -5.245373249053955

Token 1795: ' possible' (ID: 4149)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -1.0436700582504272
    2. 'step' → logprob: -1.4186700582504272
    3. 'possible' → logprob: -1.7936700582504272
    4. 'steps' → logprob: -2.293670177459717
    5. ' jump' → logprob: -3.043670177459717
    6. ' possible' → logprob: -3.793670177459717
    7. ' steps' → logprob: -3.793670177459717
    8. 'j' → logprob: -3.918670177459717
    9. ' step' → logprob: -5.168670177459717
    10. '```' → logprob: -5.293670177459717

Token 1796: ' moves' (ID: 19523)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.13220234215259552
    2. 'step' → logprob: -2.132202386856079
    3. 'steps' → logprob: -6.0072021484375
    4. 'j' → logprob: -6.0072021484375
    5. ' jump' → logprob: -9.1322021484375
    6. 'possible' → logprob: -9.2572021484375
    7. 'move' → logprob: -10.0072021484375
    8. 'next' → logprob: -10.0072021484375
    9. '```' → logprob: -11.2572021484375
    10. 'stride' → logprob: -11.7572021484375

Token 1797: ' that' (ID: 484)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3352612257003784
    2. 'from' → logprob: -1.4602612257003784
    3. 'i' → logprob: -2.210261344909668
    4. ' at' → logprob: -2.460261344909668
    5. '=' → logprob: -2.585261344909668
    6. ' =' → logprob: -2.960261344909668
    7. 'while' → logprob: -3.085261344909668
    8. ')' → logprob: -3.335261344909668
    9. ' from' → logprob: -3.710261344909668
    10. 'for' → logprob: -4.210261344909668

Token 1798: ' decrease' (ID: 25848)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.7093759775161743
    2. 'min' → logprob: -1.4593759775161743
    3. 'maint' → logprob: -2.0843758583068848
    4. 'lead' → logprob: -2.8343758583068848
    5. 'yield' → logprob: -3.2093758583068848
    6. 'allow' → logprob: -4.334375858306885
    7. 'reduce' → logprob: -4.709375858306885
    8. 'result' → logprob: -4.834375858306885
    9. 'avoid' → logprob: -5.334375858306885
    10. 'do' → logprob: -5.834375858306885

Token 1799: ' step' (ID: 5983)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14862167835235596
    2. 'the' → logprob: -2.0236215591430664
    3. 'cost' → logprob: -6.148621559143066
    4. 'pos' → logprob: -7.148621559143066
    5. 'i' → logprob: -7.398621559143066
    6. 'current' → logprob: -7.523621559143066
    7. ' the' → logprob: -7.648621559143066
    8. ' dp' → logprob: -7.648621559143066
    9. 'cur' → logprob: -8.023621559143066
    10. 'position' → logprob: -8.648621559143066

Token 1800: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0010259009432047606
    2. 'dp' → logprob: -7.251025676727295
    3. ' count' → logprob: -8.626026153564453
    4. 'cnt' → logprob: -9.626026153564453
    5. ')' → logprob: -10.501026153564453
    6. '_count' → logprob: -11.001026153564453
    7. '   ' → logprob: -11.751026153564453
    8. 'cost' → logprob: -11.876026153564453
    9. 'counts' → logprob: -12.751026153564453
    10. 'print' → logprob: -13.501026153564453

Token 1801: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4890921115875244
    2. 'i' → logprob: -1.3640921115875244
    3. 'pos' → logprob: -3.4890921115875244
    4. '):' → logprob: -4.114091873168945
    5. 'cur' → logprob: -4.489091873168945
    6. '):
' → logprob: -4.864091873168945
    7. '```' → logprob: -4.989091873168945
    8. ' by' → logprob: -5.114091873168945
    9. 'prev' → logprob: -5.364091873168945
    10. 'current' → logprob: -5.489091873168945

Token 1802: 'cnt' (ID: 33160)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02023644931614399
    2. 'path' → logprob: -4.520236492156982
    3. 'cur' → logprob: -5.145236492156982
    4. 'res' → logprob: -6.270236492156982
    5. 'i' → logprob: -7.020236492156982
    6. '```' → logprob: -8.270236015319824
    7. 'ans' → logprob: -8.895236015319824
    8. 'now' → logprob: -10.145236015319824
    9. 'p' → logprob: -10.395236015319824
    10. 'idx' → logprob: -10.645236015319824

Token 1803: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164801687002182
    2. '=' → logprob: -4.264164924621582
    3. ',' → logprob: -13.639164924621582
    4. ' ' → logprob: -17.139163970947266
    5. ' ,' → logprob: -17.514163970947266
    6. '   ' → logprob: -17.764163970947266
    7. ' ' → logprob: -18.514163970947266
    8. '＝' → logprob: -18.889163970947266
    9. ')' → logprob: -19.014163970947266
    10. '=int' → logprob: -19.264163970947266

Token 1804: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005811005365103483
    2. '0' → logprob: -5.2558112144470215
    3. '[]' → logprob: -7.6308112144470215
    4. ' dp' → logprob: -9.755810737609863
    5. '[' → logprob: -10.880810737609863
    6. '[]
' → logprob: -11.880810737609863
    7. '1' → logprob: -13.505810737609863
    8. '(dp' → logprob: -13.755810737609863
    9. ' []' → logprob: -14.505810737609863
    10. ' ' → logprob: -14.505810737609863

Token 1805: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.022224657237529755
    2. '.' → logprob: -4.022224426269531
    3. 'get' → logprob: -6.147224426269531
    4. '0' → logprob: -6.397224426269531
    5. '[' → logprob: -9.147224426269531
    6. '```' → logprob: -9.897224426269531
    7. 'cnt' → logprob: -10.397224426269531
    8. '(' → logprob: -10.397224426269531
    9. ' .' → logprob: -12.147224426269531
    10. '=' → logprob: -12.272224426269531

Token 1806: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007608397863805294
    2. '0' → logprob: -4.882608413696289
    3. '```' → logprob: -13.382608413696289
    4. ' (' → logprob: -15.007608413696289
    5. '[' → logprob: -15.882608413696289
    6. '(
' → logprob: -16.00760841369629
    7. '<|end|>' → logprob: -17.25760841369629
    8. ',' → logprob: -17.50760841369629
    9. ' ' → logprob: -17.50760841369629
    10. '()' → logprob: -17.63260841369629

Token 1807: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. ')' → logprob: -19.0
    4. '(' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '```' → logprob: -19.875
    7. '۰' → logprob: -20.0
    8. '０' → logprob: -21.25
    9. '[' → logprob: -21.625
    10. ' ' → logprob: -22.125

Token 1808: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38899120688438416
    2. ')' → logprob: -1.1389912366867065
    3. ')+' → logprob: -7.013991355895996
    4. '
' → logprob: -7.513991355895996
    5. ')
' → logprob: -8.638991355895996
    6. '+' → logprob: -8.638991355895996
    7. ' )
' → logprob: -9.388991355895996
    8. ')i' → logprob: -9.888991355895996
    9. ',' → logprob: -10.638991355895996
    10. ' )' → logprob: -10.763991355895996

Token 1809: ' ' (ID: 220)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.007908377796411514
    2. 'cur' → logprob: -5.507908344268799
    3. 'i' → logprob: -6.132908344268799
    4. 'path' → logprob: -7.007908344268799
    5. '```' → logprob: -8.007908821105957
    6. 'p' → logprob: -8.882908821105957
    7. 'now' → logprob: -9.132908821105957
    8. '
' → logprob: -10.007908821105957
    9. ' pos' → logprob: -10.007908821105957
    10. '   ' → logprob: -11.007908821105957

Token 1810: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05592780187726021
    2. 'i' → logprob: -3.9309277534484863
    3. 'path' → logprob: -3.9309277534484863
    4. 'cur' → logprob: -5.305927753448486
    5. '
' → logprob: -5.930927753448486
    6. 'step' → logprob: -6.430927753448486
    7. '```' → logprob: -6.555927753448486
    8. 'p' → logprob: -6.680927753448486
    9. 'ans' → logprob: -6.680927753448486
    10. 'res' → logprob: -7.180927753448486

Token 1811: ' Current' (ID: 14536)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01327257789671421
    2. 'cur' → logprob: -4.888272762298584
    3. 'path' → logprob: -5.388272762298584
    4. 'i' → logprob: -7.513272762298584
    5. 'now' → logprob: -8.388272285461426
    6. 'res' → logprob: -9.388272285461426
    7. 'p' → logprob: -9.388272285461426
    8. 'ans' → logprob: -9.513272285461426
    9. 'idx' → logprob: -11.013272285461426
    10. 'curr' → logprob: -11.138272285461426

Token 1812: ' optimal' (ID: 24174)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.012742014601826668
    2. '=' → logprob: -5.137742042541504
    3. '_pos' → logprob: -5.262742042541504
    4. ' =' → logprob: -6.762742042541504
    5. 'position' → logprob: -7.762742042541504
    6. ' pos' → logprob: -12.262742042541504
    7. '```' → logprob: -12.637742042541504
    8. '+=' → logprob: -12.762742042541504
    9. 'cnt' → logprob: -13.137742042541504
    10. 'i' → logprob: -13.137742042541504

Token 1813: ' number' (ID: 2086)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0028502829372882843
    2. '=' → logprob: -6.12785005569458
    3. ' =' → logprob: -8.627850532531738
    4. 'i' → logprob: -8.752850532531738
    5. 'path' → logprob: -8.752850532531738
    6. '_pos' → logprob: -9.627850532531738
    7. '```' → logprob: -10.377850532531738
    8. 'cnt' → logprob: -10.752850532531738
    9. 'position' → logprob: -11.127850532531738
    10. 'idx' → logprob: -11.627850532531738

Token 1814: ' of' (ID: 328)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.38206300139427185
    2. 'ans' → logprob: -2.2570629119873047
    3. 'pos' → logprob: -2.2570629119873047
    4. 'steps' → logprob: -2.8820629119873047
    5. 'res' → logprob: -3.8820629119873047
    6. '
' → logprob: -4.507062911987305
    7. 'moves' → logprob: -5.257062911987305
    8. 'p' → logprob: -5.507062911987305
    9. 'cur' → logprob: -5.882062911987305
    10. ' =' → logprob: -6.007062911987305

Token 1815: ' moves' (ID: 19523)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.1665872484445572
    2. 'moves' → logprob: -1.916587233543396
    3. 'j' → logprob: -5.9165873527526855
    4. ' steps' → logprob: -6.5415873527526855
    5. ')' → logprob: -7.5415873527526855
    6. '```' → logprob: -7.9165873527526855
    7. 'step' → logprob: -8.166586875915527
    8. '=' → logprob: -8.416586875915527
    9. '`' → logprob: -8.541586875915527
    10. '_moves' → logprob: -9.166586875915527

Token 1816: ' needed' (ID: 6118)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.25841817259788513
    2. 'ans' → logprob: -2.508418083190918
    3. 'path' → logprob: -2.883418083190918
    4. 'cur' → logprob: -3.008418083190918
    5. 'res' → logprob: -3.258418083190918
    6. 'now' → logprob: -7.008418083190918
    7. 'steps' → logprob: -7.758418083190918
    8. 'i' → logprob: -7.883418083190918
    9. 'p' → logprob: -8.258418083190918
    10. 'step' → logprob: -8.883418083190918

Token 1817: ' from' (ID: 591)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.012228361330926418
    2. 'path' → logprob: -5.137228488922119
    3. 'cur' → logprob: -5.887228488922119
    4. 'res' → logprob: -6.637228488922119
    5. 'ans' → logprob: -7.012228488922119
    6. '```' → logprob: -7.137228488922119
    7. 'i' → logprob: -8.637228012084961
    8. 'p' → logprob: -9.137228012084961
    9. 'steps' → logprob: -9.512228012084961
    10. 'moves' → logprob: -10.137228012084961

Token 1818: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015109812375158072
    2. '```' → logprob: -9.375150680541992
    3. 'position' → logprob: -10.500150680541992
    4. 'i' → logprob: -10.750150680541992
    5. 'current' → logprob: -12.375150680541992
    6. ' ' → logprob: -12.375150680541992
    7. '`' → logprob: -13.250150680541992
    8. 'start' → logprob: -13.500150680541992
    9. 'the' → logprob: -13.750150680541992
    10. 'pos' → logprob: -13.875150680541992

Token 1819: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0033497707918286324
    2. 'path' → logprob: -6.253349781036377
    3. 'cur' → logprob: -6.628349781036377
    4. 'ans' → logprob: -10.378349304199219
    5. 'i' → logprob: -11.128349304199219
    6. 'now' → logprob: -11.128349304199219
    7. 'res' → logprob: -11.253349304199219
    8. 'p' → logprob: -11.878349304199219
    9. '```' → logprob: -11.878349304199219
    10. 'idx' → logprob: -12.378349304199219

Token 1820: 'cur' (ID: 3264)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002195337088778615
    2. 'cur' → logprob: -7.252195358276367
    3. 'path' → logprob: -7.502195358276367
    4. 'res' → logprob: -7.502195358276367
    5. 'i' → logprob: -8.127195358276367
    6. 'ans' → logprob: -9.877195358276367
    7. '```' → logprob: -11.252195358276367
    8. 'now' → logprob: -11.877195358276367
    9. 'idx' → logprob: -12.002195358276367
    10. 'curr' → logprob: -12.877195358276367

Token 1821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489706039429
    2. ' =' → logprob: -0.6931489706039429
    3. ',' → logprob: -13.818148612976074
    4. '   ' → logprob: -15.443148612976074
    5. '=
' → logprob: -16.06814956665039
    6. '＝' → logprob: -16.19314956665039
    7. '_=' → logprob: -16.56814956665039
    8. '```' → logprob: -16.81814956665039
    9. '=i' → logprob: -17.06814956665039
    10. ' =
' → logprob: -17.19314956665039

Token 1822: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.500003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '[' → logprob: -18.000003814697266
    6. '00' → logprob: -18.375003814697266
    7. '۰' → logprob: -18.875003814697266
    8. '=' → logprob: -19.000003814697266
    9. '`' → logprob: -19.062503814697266
    10. '000' → logprob: -19.375003814697266

Token 1823: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -19.125
    5. '00' → logprob: -19.375
    6. '=' → logprob: -19.625
    7. 'N' → logprob: -19.625
    8. '`' → logprob: -19.875
    9. '۰' → logprob: -19.9375
    10. '[' → logprob: -20.125

Token 1824: '         ' (ID: 983)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7626097202301025
    2. '
' → logprob: -1.3876097202301025
    3. 'path' → logprob: -1.6376097202301025
    4. 'steps' → logprob: -3.6376097202301025
    5. 'ans' → logprob: -3.7626097202301025
    6. 'res' → logprob: -4.387609481811523
    7. 'step' → logprob: -4.762609481811523
    8. 'moves' → logprob: -5.512609481811523
    9. 'answer' → logprob: -5.637609481811523
    10. 'for' → logprob: -6.387609481811523

Token 1825: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.599182665348053
    2. '+' → logprob: -1.5991826057434082
    3. 'while' → logprob: -1.5991826057434082
    4. 'for' → logprob: -4.724182605743408
    5. '+
' → logprob: -4.724182605743408
    6. 'cur' → logprob: -4.974182605743408
    7. 'steps' → logprob: -5.474182605743408
    8. ' while' → logprob: -5.599182605743408
    9. '```' → logprob: -6.099182605743408
    10. ' 
' → logprob: -6.224182605743408

Token 1826: ' Current' (ID: 14536)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.8337826728820801
    2. 'res' → logprob: -1.33378267288208
    3. '[]' → logprob: -1.33378267288208
    4. 'pos' → logprob: -4.20878267288208
    5. 'ans' → logprob: -4.33378267288208
    6. 'cur' → logprob: -5.45878267288208
    7. 'steps' → logprob: -5.70878267288208
    8. 'step' → logprob: -7.08378267288208
    9. 'result' → logprob: -7.70878267288208
    10. 'while' → logprob: -8.208782196044922

Token 1827: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15021996200084686
    2. 'cur' → logprob: -2.5252199172973633
    3. 'position' → logprob: -3.6502199172973633
    4. '_pos' → logprob: -4.400219917297363
    5. '+' → logprob: -5.275219917297363
    6. ' pos' → logprob: -5.650219917297363
    7. ' position' → logprob: -6.150219917297363
    8. 'i' → logprob: -6.400219917297363
    9. ' cur' → logprob: -6.400219917297363
    10. '`' → logprob: -6.775219917297363

Token 1828: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8001682162284851
    2. 'ans' → logprob: -1.3001682758331299
    3. 'path' → logprob: -1.3001682758331299
    4. 'while' → logprob: -5.925168037414551
    5. 'moves' → logprob: -6.675168037414551
    6. '
' → logprob: -7.550168037414551
    7. 'steps' → logprob: -7.800168037414551
    8. 'answer' → logprob: -8.05016803741455
    9. 'result' → logprob: -8.30016803741455
    10. 'out' → logprob: -9.55016803741455

Token 1829: 'prev' (ID: 15969)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5079385638237
    2. 'path' → logprob: -1.5079386234283447
    3. 'res' → logprob: -1.7579386234283447
    4. '
' → logprob: -6.507938385009766
    5. 'while' → logprob: -7.132938385009766
    6. 'moves' → logprob: -7.132938385009766
    7. 'out' → logprob: -7.507938385009766
    8. 'steps' → logprob: -8.007938385009766
    9. 'answer' → logprob: -8.132938385009766
    10. 'result' → logprob: -9.382938385009766

Token 1830: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06997466832399368
    2. ' =' → logprob: -2.694974660873413
    3. ',' → logprob: -11.569974899291992
    4. '_' → logprob: -12.069974899291992
    5. ':' → logprob: -12.194974899291992
    6. '+=' → logprob: -12.319974899291992
    7. '+' → logprob: -12.944974899291992
    8. '=
' → logprob: -13.069974899291992
    9. ' ' → logprob: -13.694974899291992
    10. '=[]' → logprob: -13.819974899291992

Token 1831: ' -' (ID: 533)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011857230216264725
    2. '0' → logprob: -5.136857032775879
    3. '[' → logprob: -5.636857032775879
    4. '[cur' → logprob: -7.136857032775879
    5. '[]
' → logprob: -7.261857032775879
    6. 'cur' → logprob: -7.886857032775879
    7. '-' → logprob: -8.261857032775879
    8. '[]}' → logprob: -9.761857032775879
    9. '[]

' → logprob: -10.011857032775879
    10. '[-' → logprob: -10.511857032775879

Token 1832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. 'cur' → logprob: -13.12500286102295
    3. ' ' → logprob: -15.75000286102295
    4. '-' → logprob: -15.75000286102295
    5. '2' → logprob: -16.000001907348633
    6. '```' → logprob: -16.750001907348633
    7. '１' → logprob: -17.500001907348633
    8. '`' → logprob: -17.687501907348633
    9. '0' → logprob: -18.062501907348633
    10. '   ' → logprob: -18.312501907348633

Token 1833: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31084996461868286
    2. '
' → logprob: -1.810849905014038
    3. '[]
' → logprob: -3.685849905014038
    4. '[]' → logprob: -3.810849905014038
    5. ' while' → logprob: -4.060850143432617
    6. 'print' → logprob: -4.435850143432617
    7. 'for' → logprob: -5.060850143432617
    8. '[' → logprob: -5.310850143432617
    9. '```' → logprob: -6.560850143432617
    10. ' 
' → logprob: -6.560850143432617

Token 1834: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33347275853157043
    2. 'res' → logprob: -1.583472728729248
    3. 'path' → logprob: -2.583472728729248
    4. 'out' → logprob: -7.208472728729248
    5. 'while' → logprob: -7.583472728729248
    6. 'from' → logprob: -7.708472728729248
    7. 'answer' → logprob: -7.958472728729248
    8. 'moves' → logprob: -8.208473205566406
    9. 'steps' → logprob: -8.583473205566406
    10. 'result' → logprob: -8.833473205566406

Token 1835: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860758036375046
    2. ' =' → logprob: -3.048607587814331
    3. '=[]' → logprob: -10.92360782623291
    4. '_' → logprob: -13.92360782623291
    5. ',' → logprob: -14.29860782623291
    6. '=[' → logprob: -16.423606872558594
    7. '=[]
' → logprob: -16.673606872558594
    8. '_=' → logprob: -16.673606872558594
    9. '＝' → logprob: -16.798606872558594
    10. '[:]' → logprob: -17.298606872558594

Token 1836: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.500004768371582
    3. '[]
' → logprob: -14.750004768371582
    4. 'list' → logprob: -15.000004768371582
    5. ' []' → logprob: -15.750004768371582
    6. '[]}' → logprob: -16.1250057220459
    7. '[]

' → logprob: -16.2500057220459
    8. '[list' → logprob: -16.8750057220459
    9. '[])' → logprob: -17.0000057220459
    10. '[]"' → logprob: -18.0000057220459

Token 1837: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0010385256027802825
    2. '```' → logprob: -7.001038551330566
    3. ' while' → logprob: -9.126038551330566
    4. 'for' → logprob: -11.251038551330566
    5. 'cur' → logprob: -13.001038551330566
    6. '``' → logprob: -13.501038551330566
    7. '
' → logprob: -15.001038551330566
    8. 'prev' → logprob: -15.126038551330566
    9. '`' → logprob: -15.126038551330566
    10. 'While' → logprob: -15.251038551330566

Token 1838: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05059744045138359
    2. 'cur' → logprob: -3.6755974292755127
    3. 'i' → logprob: -3.9255974292755127
    4. '_i' → logprob: -6.300597667694092
    5. 'prev' → logprob: -7.300597667694092
    6. '_cur' → logprob: -7.425597667694092
    7. 'pos' → logprob: -8.675597190856934
    8. '```' → logprob: -8.675597190856934
    9. '_=' → logprob: -9.425597190856934
    10. ' _' → logprob: -9.425597190856934

Token 1839: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34898480772972107
    2. ' in' → logprob: -1.2239848375320435
    3. '=' → logprob: -8.098984718322754
    4. ',' → logprob: -9.223984718322754
    5. '   ' → logprob: -10.098984718322754
    6. ' =' → logprob: -10.098984718322754
    7. 'cur' → logprob: -11.223984718322754
    8. ' ' → logprob: -11.723984718322754
    9. '1' → logprob: -12.098984718322754
    10. '(cur' → logprob: -12.223984718322754

Token 1840: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024868600070476532
    2. ' range' → logprob: -3.7748684883117676
    3. 'cur' → logprob: -6.899868488311768
    4. 'in' → logprob: -8.274868965148926
    5. '_' → logprob: -8.899868965148926
    6. '(range' → logprob: -9.274868965148926
    7. '0' → logprob: -10.024868965148926
    8. '1' → logprob: -10.274868965148926
    9. '(cur' → logprob: -11.399868965148926
    10. ' in' → logprob: -11.524868965148926

Token 1841: '(' (ID: 7)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.6730549931526184
    2. '1' → logprob: -0.9230549931526184
    3. 'N' → logprob: -2.7980549335479736
    4. '(' → logprob: -3.9230549335479736
    5. '(cur' → logprob: -5.423055171966553
    6. '0' → logprob: -5.548055171966553
    7. '(N' → logprob: -6.673055171966553
    8. 'dp' → logprob: -7.298055171966553
    9. '   ' → logprob: -7.423055171966553
    10. 'prev' → logprob: -8.048054695129395

Token 1842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5599902868270874
    2. 'N' → logprob: -1.0599902868270874
    3. 'cur' → logprob: -2.559990406036377
    4. '0' → logprob: -6.059990406036377
    5. 'dp' → logprob: -6.434990406036377
    6. 'cnt' → logprob: -7.684990406036377
    7. '   ' → logprob: -8.309989929199219
    8. 'M' → logprob: -9.309989929199219
    9. ' ' → logprob: -9.434989929199219
    10. ' N' → logprob: -9.684989929199219

Token 1843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003041408723220229
    2. ',N' → logprob: -5.8780412673950195
    3. ' ,' → logprob: -9.25304126739502
    4. 'N' → logprob: -9.37804126739502
    5. 'cur' → logprob: -11.12804126739502
    6. ',
' → logprob: -11.25304126739502
    7. '(N' → logprob: -11.87804126739502
    8. '   ' → logprob: -12.25304126739502
    9. ' N' → logprob: -12.62804126739502
    10. ',n' → logprob: -12.75304126739502

Token 1844: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.460291767027229e-05
    2. 'cur' → logprob: -9.625094413757324
    3. '   ' → logprob: -11.125094413757324
    4. 'min' → logprob: -12.000094413757324
    5. ' N' → logprob: -12.750094413757324
    6. 'M' → logprob: -12.750094413757324
    7. 'len' → logprob: -14.625094413757324
    8. '       ' → logprob: -15.250094413757324
    9. 'dp' → logprob: -15.250094413757324
    10. 'cnt' → logprob: -15.375094413757324

Token 1845: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33891844749450684
    2. '+' → logprob: -1.3389184474945068
    3. '   ' → logprob: -4.963918685913086
    4. 'N' → logprob: -5.338918685913086
    5. ' +' → logprob: -5.338918685913086
    6. ',N' → logprob: -5.463918685913086
    7. ' ,' → logprob: -6.963918685913086
    8. '(N' → logprob: -7.338918685913086
    9. '):
' → logprob: -7.713918685913086
    10. ' N' → logprob: -7.963918685913086

Token 1846: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -10.75002384185791
    3. '   ' → logprob: -14.00002384185791
    4. '2' → logprob: -14.75002384185791
    5. '+' → logprob: -15.12502384185791
    6. 'M' → logprob: -15.25002384185791
    7. '```' → logprob: -15.87502384185791
    8. 'cur' → logprob: -16.250022888183594
    9. '
' → logprob: -16.500022888183594
    10. ')' → logprob: -16.875022888183594

Token 1847: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.250016212463379
    3. '2' → logprob: -13.500016212463379
    4. '   ' → logprob: -14.000016212463379
    5. '+' → logprob: -14.250016212463379
    6. '
' → logprob: -15.375016212463379
    7. '0' → logprob: -16.875017166137695
    8. ')' → logprob: -17.062517166137695
    9. '```' → logprob: -17.187517166137695
    10. '  ' → logprob: -17.750017166137695

Token 1848: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0010906853713095188
    2. '):' → logprob: -7.5010905265808105
    3. ',' → logprob: -8.876091003417969
    4. ':
' → logprob: -9.001091003417969
    5. '():
' → logprob: -9.376091003417969
    6. '):
' → logprob: -9.626091003417969
    7. ' ):
' → logprob: -9.876091003417969
    8. '   ' → logprob: -10.501091003417969
    9. ':' → logprob: -10.501091003417969
    10. '):

' → logprob: -12.501091003417969

Token 1849: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00799849908798933
    2. ' if' → logprob: -4.882998466491699
    3. '```' → logprob: -8.7579984664917
    4. 'if' → logprob: -9.1329984664917
    5. ' while' → logprob: -9.5079984664917
    6. 'while' → logprob: -11.1329984664917
    7. ',' → logprob: -11.7579984664917
    8. '       ' → logprob: -11.8829984664917
    9. '   ' → logprob: -12.1329984664917
    10. '<|end|>' → logprob: -12.1329984664917

Token 1850: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5128802061080933
    2. 'if' → logprob: -1.2628802061080933
    3. '   ' → logprob: -2.137880325317383
    4. '       ' → logprob: -8.387880325317383
    5. '    ' → logprob: -9.637880325317383
    6. '	if' → logprob: -10.137880325317383
    7. '```' → logprob: -10.262880325317383
    8. ' while' → logprob: -10.512880325317383
    9. 'while' → logprob: -10.637880325317383
    10. ' ' → logprob: -10.887880325317383

Token 1851: ' Only' (ID: 12817)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005937820533290505
    2. '   ' → logprob: -8.750594139099121
    3. ' if' → logprob: -8.750594139099121
    4. 'step' → logprob: -9.125594139099121
    5. 'diff' → logprob: -9.250594139099121
    6. 'while' → logprob: -10.500594139099121
    7. 'd' → logprob: -10.500594139099121
    8. 'dist' → logprob: -12.750594139099121
    9. 'steps' → logprob: -12.875594139099121
    10. '```' → logprob: -12.875594139099121

Token 1852: ' consider' (ID: 3331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03584405034780502
    2. '   ' → logprob: -3.660844087600708
    3. ' if' → logprob: -4.660843849182129
    4. '       ' → logprob: -11.410843849182129
    5. ' ' → logprob: -11.785843849182129
    6. 'continue' → logprob: -12.410843849182129
    7. 'import' → logprob: -12.535843849182129
    8. '#' → logprob: -13.035843849182129
    9. '	if' → logprob: -13.410843849182129
    10. '  ' → logprob: -13.535843849182129

Token 1853: ' reachable' (ID: 143580)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0010093450546265
    2. 'dp' → logprob: -1.6260093450546265
    3. 'i' → logprob: -1.8760093450546265
    4. 'if' → logprob: -2.001009464263916
    5. 'cur' → logprob: -2.126009464263916
    6. '   ' → logprob: -5.001009464263916
    7. ' i' → logprob: -5.376009464263916
    8. ' if' → logprob: -5.626009464263916
    9. ' S' → logprob: -5.751009464263916
    10. ' dp' → logprob: -5.751009464263916

Token 1854: ' positions' (ID: 15897)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31892433762550354
    2. ' if' → logprob: -1.3189243078231812
    3. ' and' → logprob: -6.068924427032471
    4. 'and' → logprob: -6.443924427032471
    5. '   ' → logprob: -6.693924427032471
    6. 'i' → logprob: -8.318923950195312
    7. ' i' → logprob: -9.943923950195312
    8. '
' → logprob: -10.193923950195312
    9. 'cur' → logprob: -10.193923950195312
    10. '=' → logprob: -10.818923950195312

Token 1855: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5018049478530884
    2. ' if' → logprob: -1.0018049478530884
    3. 'if' → logprob: -4.126804828643799
    4. '       ' → logprob: -5.376804828643799
    5. ':' → logprob: -5.876804828643799
    6. ' and' → logprob: -6.376804828643799
    7. 'and' → logprob: -7.876804828643799
    8. '```' → logprob: -8.126805305480957
    9. ',' → logprob: -8.251805305480957
    10. '[' → logprob: -8.626805305480957

Token 1856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053199950605630875
    2. ' if' → logprob: -3.0532000064849854
    3. 'if' → logprob: -5.428199768066406
    4. '       ' → logprob: -9.803199768066406
    5. '```' → logprob: -10.428199768066406
    6. ' and' → logprob: -10.553199768066406
    7. ' while' → logprob: -11.053199768066406
    8. ',' → logprob: -11.178199768066406
    9. 'while' → logprob: -11.303199768066406
    10. '
' → logprob: -11.553199768066406

Token 1857: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0757986307144165
    2. '   ' → logprob: -2.700798511505127
    3. ' if' → logprob: -5.200798511505127
    4. '       ' → logprob: -8.325798988342285
    5. 'while' → logprob: -9.700798988342285
    6. '	if' → logprob: -11.950798988342285
    7. '```' → logprob: -12.450798988342285
    8. 'i' → logprob: -12.700798988342285
    9. ' ' → logprob: -12.825798988342285
    10. '    ' → logprob: -12.825798988342285

Token 1858: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1484777331352234
    2. 'S' → logprob: -2.023477792739868
    3. ' dp' → logprob: -6.273477554321289
    4. 'cur' → logprob: -6.273477554321289
    5. 'i' → logprob: -6.648477554321289
    6. ' S' → logprob: -7.523477554321289
    7. '(dp' → logprob: -10.023477554321289
    8. '   ' → logprob: -10.523477554321289
    9. ' i' → logprob: -10.773477554321289
    10. '(S' → logprob: -10.898477554321289

Token 1859: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.005926547572016716
    2. 'get' → logprob: -5.880926609039307
    3. '[i' → logprob: -5.880926609039307
    4. '   ' → logprob: -9.755926132202148
    5. '[cur' → logprob: -9.755926132202148
    6. '[' → logprob: -10.255926132202148
    7. '.' → logprob: -10.380926132202148
    8. 'dp' → logprob: -10.630926132202148
    9. '```' → logprob: -11.005926132202148
    10. ' .' → logprob: -11.130926132202148

Token 1860: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4001070261001587
    2. '(i' → logprob: -1.1501070261001587
    3. 'cur' → logprob: -4.775106906890869
    4. '   ' → logprob: -6.025106906890869
    5. '(cur' → logprob: -6.275106906890869
    6. ' i' → logprob: -8.900107383728027
    7. '```' → logprob: -10.025107383728027
    8. '[i' → logprob: -10.275107383728027
    9. 'prev' → logprob: -10.400107383728027
    10. '(' → logprob: -10.650107383728027

Token 1861: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017089251428842545
    2. ')!=' → logprob: -5.267089366912842
    3. ' !=' → logprob: -5.517089366912842
    4. ' )' → logprob: -6.017089366912842
    5. '!=' → logprob: -6.517089366912842
    6. ' <' → logprob: -7.517089366912842
    7. '<' → logprob: -7.642089366912842
    8. ')<' → logprob: -7.767089366912842
    9. '   ' → logprob: -7.892089366912842
    10. '```' → logprob: -8.017088890075684

Token 1862: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1811957061290741
    2. ' <' → logprob: -1.8061957359313965
    3. '!=' → logprob: -7.3061957359313965
    4. ' !=' → logprob: -7.5561957359313965
    5. '<=' → logprob: -9.306195259094238
    6. ' <=' → logprob: -9.681195259094238
    7. '()<' → logprob: -10.806195259094238
    8. '   ' → logprob: -10.931195259094238
    9. '```' → logprob: -11.806195259094238
    10. '<int' → logprob: -12.056195259094238

Token 1863: ' INF' (ID: 69196)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0001681405701674521
    2. 'cur' → logprob: -9.000167846679688
    3. 'dp' → logprob: -10.625167846679688
    4. ' cnt' → logprob: -11.375167846679688
    5. '   ' → logprob: -12.625167846679688
    6. '(cnt' → logprob: -13.000167846679688
    7. '-' → logprob: -13.250167846679688
    8. '	cnt' → logprob: -14.375167846679688
    9. '[cnt' → logprob: -14.625167846679688
    10. 'curr' → logprob: -15.250167846679688

Token 1864: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47412681579589844
    2. 'and' → logprob: -0.9741268157958984
    3. '   ' → logprob: -10.599126815795898
    4. '    ' → logprob: -11.849126815795898
    5. '       ' → logprob: -11.974126815795898
    6. '	and' → logprob: -11.974126815795898
    7. ' or' → logprob: -13.474126815795898
    8. ' ' → logprob: -13.849126815795898
    9. '        ' → logprob: -14.849126815795898
    10. '      ' → logprob: -14.974126815795898

Token 1865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0715802013874054
    2. ' and' → logprob: -2.696580171585083
    3. 'and' → logprob: -7.571580410003662
    4. '   ' → logprob: -7.696580410003662
    5. '```' → logprob: -7.821580410003662
    6. '    ' → logprob: -9.821579933166504
    7. ':' → logprob: -10.196579933166504
    8. '           ' → logprob: -10.446579933166504
    9. ' continue' → logprob: -10.446579933166504
    10. ' or' → logprob: -10.696579933166504

Token 1866: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5002549290657043
    2. ' continue' → logprob: -1.2502548694610596
    3. 'continue' (adapté à ' continue') → logprob: -2.2502548694610596
    4. '   ' → logprob: -6.875255107879639
    5. '	continue' → logprob: -7.500255107879639
    6. '           ' → logprob: -9.25025463104248
    7. '```' → logprob: -9.75025463104248
    8. '    ' → logprob: -11.00025463104248
    9. 'break' → logprob: -11.62525463104248
    10. ' break' → logprob: -11.75025463104248

Token 1867: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3230056166648865
    2. ' if' → logprob: -2.1980056762695312
    3. ' and' → logprob: -2.3230056762695312
    4. '       ' → logprob: -3.0730056762695312
    5. 'and' → logprob: -4.448005676269531
    6. 'if' → logprob: -5.698005676269531
    7. '```' → logprob: -5.823005676269531
    8. '<|end|>' → logprob: -7.198005676269531
    9. '    ' → logprob: -7.323005676269531
    10. ',' → logprob: -9.073005676269531

Token 1868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4618169963359833
    2. ' if' → logprob: -1.0868170261383057
    3. 'if' → logprob: -3.9618170261383057
    4. ' and' → logprob: -4.711816787719727
    5. '       ' → logprob: -6.086816787719727
    6. 'and' → logprob: -6.836816787719727
    7. '```' → logprob: -8.461816787719727
    8. ' while' → logprob: -8.836816787719727
    9. '    ' → logprob: -8.961816787719727
    10. '
' → logprob: -9.211816787719727

Token 1869: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.066166877746582
    2. 'if' → logprob: -1.066166877746582
    3. ' if' → logprob: -1.191166877746582
    4. 'while' → logprob: -6.191166877746582
    5. '```' → logprob: -6.191166877746582
    6. '       ' → logprob: -6.316166877746582
    7. ' while' → logprob: -7.441166877746582
    8. 'diff' → logprob: -7.941166877746582
    9. '	if' → logprob: -9.316166877746582
    10. 'd' → logprob: -9.566166877746582

Token 1870: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007053745444864035
    2. '   ' → logprob: -5.882053852081299
    3. ' if' → logprob: -6.257053852081299
    4. 'diff' → logprob: -6.882053852081299
    5. 'while' → logprob: -7.632053852081299
    6. 'd' → logprob: -7.632053852081299
    7. 'step' → logprob: -8.50705337524414
    8. '```' → logprob: -10.38205337524414
    9. 'delta' → logprob: -10.38205337524414
    10. 'steps' → logprob: -11.38205337524414

Token 1871: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0024751818273216486
    2. 'cur' → logprob: -6.377475261688232
    3. 'cnt' → logprob: -7.877475261688232
    4. ' dp' → logprob: -8.502474784851074
    5. '   ' → logprob: -8.752474784851074
    6. '(dp' → logprob: -12.002474784851074
    7. 'prev' → logprob: -12.252474784851074
    8. 'S' → logprob: -12.252474784851074
    9. 'ans' → logprob: -12.252474784851074
    10. ' ' → logprob: -13.502474784851074

Token 1872: ' value' (ID: 1432)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.7482531666755676
    2. '[i' → logprob: -0.9982531666755676
    3. 'get' → logprob: -2.123253107070923
    4. '[' → logprob: -3.873253107070923
    5. '.get' → logprob: -4.248253345489502
    6. '[get' → logprob: -6.498253345489502
    7. 'cur' → logprob: -6.623253345489502
    8. '   ' → logprob: -8.873252868652344
    9. '_get' → logprob: -9.123252868652344
    10. 'i' → logprob: -9.498252868652344

Token 1873: ' drops' (ID: 32321)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.13560813665390015
    2. '[i' → logprob: -2.135608196258545
    3. '[' → logprob: -5.260608196258545
    4. '==' → logprob: -6.135608196258545
    5. 'cur' → logprob: -7.385608196258545
    6. '   ' → logprob: -7.760608196258545
    7. ' ==' → logprob: -9.135607719421387
    8. '```' → logprob: -9.885607719421387
    9. 'i' → logprob: -10.760607719421387
    10. '(cur' → logprob: -11.260607719421387

Token 1874: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012173602357506752
    2. ' ==' → logprob: -5.387173652648926
    3. 'cur' → logprob: -6.012173652648926
    4. '<=' → logprob: -6.512173652648926
    5. '```' → logprob: -7.137173652648926
    6. 'from' → logprob: -7.387173652648926
    7. '[cur' → logprob: -7.512173652648926
    8. '[i' → logprob: -7.887173652648926
    9. '==
' → logprob: -8.262173652648926
    10. '   ' → logprob: -8.512173652648926

Token 1875: ' add' (ID: 1147)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7640244364738464
    2. 'ans' → logprob: -1.8890244960784912
    3. ' if' → logprob: -2.014024496078491
    4. '   ' → logprob: -2.014024496078491
    5. '       ' → logprob: -2.889024496078491
    6. 'if' → logprob: -3.014024496078491
    7. 'prev' → logprob: -5.639024257659912
    8. ' prev' → logprob: -6.014024257659912
    9. '(ans' → logprob: -6.889024257659912
    10. 'cur' → logprob: -7.014024257659912

Token 1876: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13203823566436768
    2. '(i' → logprob: -3.257038116455078
    3. ''' → logprob: -3.382038116455078
    4. ' i' → logprob: -4.007038116455078
    5. '`' → logprob: -4.507038116455078
    6. '[i' → logprob: -4.882038116455078
    7. '   ' → logprob: -5.632038116455078
    8. 'cur' → logprob: -5.882038116455078
    9. 'str' → logprob: -6.132038116455078
    10. ''i' → logprob: -6.257038116455078

Token 1877: ' move' (ID: 5275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0937112420797348
    2. ' i' → logprob: -3.2187111377716064
    3. '[i' → logprob: -3.7187111377716064
    4. 'str' → logprob: -4.7187113761901855
    5. '(i' → logprob: -5.4687113761901855
    6. 'cur' → logprob: -5.4687113761901855
    7. ' str' → logprob: -6.3437113761901855
    8. '`' → logprob: -6.4687113761901855
    9. '   ' → logprob: -6.4687113761901855
    10. ''' → logprob: -7.0937113761901855

Token 1878: ' from' (ID: 591)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20035667717456818
    2. ' =' → logprob: -2.7003567218780518
    3. '=' → logprob: -3.2003567218780518
    4. '   ' → logprob: -3.4503567218780518
    5. 'cur' → logprob: -4.950356483459473
    6. 'ans' → logprob: -5.200356483459473
    7. '.' → logprob: -5.450356483459473
    8. 'i' → logprob: -5.700356483459473
    9. '[i' → logprob: -5.825356483459473
    10. '[cur' → logprob: -5.950356483459473

Token 1879: ' prev' (ID: 10258)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0027679058257490396
    2. 'prev' → logprob: -6.127768039703369
    3. ' cur' → logprob: -8.377767562866211
    4. 'str' → logprob: -8.502767562866211
    5. '`' → logprob: -9.502767562866211
    6. 'i' → logprob: -10.752767562866211
    7. '```' → logprob: -10.877767562866211
    8. 'curr' → logprob: -11.627767562866211
    9. '   ' → logprob: -12.252767562866211
    10. 'pos' → logprob: -12.627767562866211

Token 1880: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9077296853065491
    2. ' =' → logprob: -2.1577296257019043
    3. '(prev' → logprob: -2.5327296257019043
    4. ' ,' → logprob: -2.6577296257019043
    5. 'prev' → logprob: -2.7827296257019043
    6. ' (' → logprob: -3.6577296257019043
    7. '   ' → logprob: -3.6577296257019043
    8. '=' → logprob: -3.6577296257019043
    9. '`' → logprob: -3.7827296257019043
    10. 'to' → logprob: -3.9077296257019043

Token 1881: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10371896624565125
    2. 'cur' → logprob: -2.3537189960479736
    3. ' i' → logprob: -5.8537187576293945
    4. '`' → logprob: -8.728718757629395
    5. ' cur' → logprob: -8.728718757629395
    6. '```' → logprob: -8.978718757629395
    7. 'str' → logprob: -9.978718757629395
    8. 'pos' → logprob: -9.978718757629395
    9. 'curr' → logprob: -9.978718757629395
    10. 'current' → logprob: -11.103718757629395

Token 1882: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45837801694869995
    2. '(ans' → logprob: -2.4583780765533447
    3. ':' → logprob: -2.8333780765533447
    4. '[' → logprob: -3.7083780765533447
    5. '.append' → logprob: -3.8333780765533447
    6. ' =' → logprob: -4.083377838134766
    7. '+' → logprob: -4.083377838134766
    8. '):' → logprob: -4.208377838134766
    9. ':
' → logprob: -4.208377838134766
    10. ' and' → logprob: -4.208377838134766

Token 1883: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8361791372299194
    2. '   ' → logprob: -1.4611791372299194
    3. 'if' → logprob: -1.8361791372299194
    4. '       ' → logprob: -2.586179256439209
    5. ' and' → logprob: -3.086179256439209
    6. '```' → logprob: -4.211179256439209
    7. '(ans' → logprob: -4.711179256439209
    8. ' =' → logprob: -5.461179256439209
    9. 'and' → logprob: -5.586179256439209
    10. ' ans' → logprob: -5.586179256439209

Token 1884: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5219438672065735
    2. ' if' → logprob: -1.7719438076019287
    3. '       ' → logprob: -2.0219438076019287
    4. '   ' → logprob: -2.6469438076019287
    5. '```' → logprob: -3.6469438076019287
    6. '(ans' → logprob: -5.896944046020508
    7. 'ans' → logprob: -6.521944046020508
    8. '``' → logprob: -6.896944046020508
    9. '           ' → logprob: -7.646944046020508
    10. ' ans' → logprob: -8.021944046020508

Token 1885: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009416507557034492
    2. 'cur' → logprob: -5.259416580200195
    3. ' dp' → logprob: -6.134416580200195
    4. 'prev' → logprob: -6.634416580200195
    5. 'i' → logprob: -7.884416580200195
    6. 'S' → logprob: -8.884416580200195
    7. 'cnt' → logprob: -9.759416580200195
    8. '   ' → logprob: -10.259416580200195
    9. 'ans' → logprob: -10.759416580200195
    10. '(dp' → logprob: -11.509416580200195

Token 1886: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.07728007435798645
    2. 'get' → logprob: -2.702280044555664
    3. '[i' → logprob: -5.077280044555664
    4. 'i' → logprob: -8.202280044555664
    5. 'cur' → logprob: -8.327280044555664
    6. '[' → logprob: -8.577280044555664
    7. '[cur' → logprob: -8.577280044555664
    8. '(i' → logprob: -9.327280044555664
    9. '_get' → logprob: -11.077280044555664
    10. '   ' → logprob: -11.327280044555664

Token 1887: '(i' (ID: 3649)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.7004250288009644
    2. 'cur' → logprob: -0.8254250288009644
    3. '(i' → logprob: -2.950425148010254
    4. '(prev' → logprob: -4.825425148010254
    5. 'prev' → logprob: -5.950425148010254
    6. 'i' → logprob: -6.075425148010254
    7. ' cur' → logprob: -9.200425148010254
    8. '   ' → logprob: -9.825425148010254
    9. '[cur' → logprob: -10.200425148010254
    10. '```' → logprob: -10.325425148010254

Token 1888: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00447616633027792
    2. ')<' → logprob: -5.504476070404053
    3. '<' → logprob: -9.004476547241211
    4. ' )' → logprob: -9.879476547241211
    5. '   ' → logprob: -10.004476547241211
    6. '')' → logprob: -10.129476547241211
    7. '`)' → logprob: -10.129476547241211
    8. '")' → logprob: -10.629476547241211
    9. '```' → logprob: -11.129476547241211
    10. '）' → logprob: -12.004476547241211

Token 1889: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.38705432415008545
    2. ' <' → logprob: -1.1370543241500854
    3. '   ' → logprob: -10.762054443359375
    4. '<int' → logprob: -11.262054443359375
    5. '<len' → logprob: -11.262054443359375
    6. '<n' → logprob: -11.512054443359375
    7. '<num' → logprob: -11.762054443359375
    8. '<size' → logprob: -11.762054443359375
    9. '<i' → logprob: -11.762054443359375
    10. '<ll' → logprob: -11.887054443359375

Token 1890: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07715317606925964
    2. 'dp' → logprob: -2.952153205871582
    3. 'INF' → logprob: -4.077153205871582
    4. 'prev' → logprob: -5.577153205871582
    5. 'cur' → logprob: -7.077153205871582
    6. 'curr' → logprob: -8.577153205871582
    7. '-' → logprob: -9.827153205871582
    8. 'inf' → logprob: -10.577153205871582
    9. ' cnt' → logprob: -10.577153205871582
    10. '0' → logprob: -10.952153205871582

Token 1891: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020598648115992546
    2. 'and' → logprob: -3.8955986499786377
    3. ':
' → logprob: -10.895598411560059
    4. '   ' → logprob: -11.520598411560059
    5. ':' → logprob: -11.895598411560059
    6. ' ' → logprob: -12.020598411560059
    7. '    ' → logprob: -12.520598411560059
    8. '<|end|>' → logprob: -12.770598411560059
    9. '       ' → logprob: -13.145598411560059
    10. '-' → logprob: -13.770598411560059

Token 1892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017586354166269302
    2. ' and' → logprob: -4.3925862312316895
    3. '   ' → logprob: -6.5175862312316895
    4. '           ' → logprob: -6.8925862312316895
    5. '```' → logprob: -7.2675862312316895
    6. ' if' → logprob: -7.8925862312316895
    7. ':
' → logprob: -7.8925862312316895
    8. ',' → logprob: -8.642586708068848
    9. 'and' → logprob: -9.017586708068848
    10. '[' → logprob: -9.017586708068848

Token 1893: ' prev' (ID: 10258)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002517277142032981
    2. ' ans' → logprob: -6.002517223358154
    3. '```' → logprob: -11.002517700195312
    4. '   ' → logprob: -11.127517700195312
    5. '	ans' → logprob: -12.752517700195312
    6. '       ' → logprob: -12.752517700195312
    7. '(ans' → logprob: -13.252517700195312
    8. 'if' → logprob: -13.377517700195312
    9. '``' → logprob: -14.627517700195312
    10. 'answer' → logprob: -15.127517700195312

Token 1894: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004575138445943594
    2. ' =' → logprob: -5.504575252532959
    3. '=i' → logprob: -7.629575252532959
    4. '+=' → logprob: -12.8795747756958
    5. 'i' → logprob: -13.0045747756958
    6. ',' → logprob: -13.2545747756958
    7. '   ' → logprob: -13.3795747756958
    8. '＝' → logprob: -14.8795747756958
    9. '.append' → logprob: -15.0045747756958
    10. '=int' → logprob: -15.2545747756958

Token 1895: ' cur' (ID: 4396)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019633667543530464
    2. 'cur' → logprob: -6.251963138580322
    3. ' i' → logprob: -10.37696361541748
    4. '   ' → logprob: -13.37696361541748
    5. '       ' → logprob: -14.12696361541748
    6. '0' → logprob: -14.37696361541748
    7. ' cur' → logprob: -14.62696361541748
    8. 'curr' → logprob: -16.751962661743164
    9. '           ' → logprob: -17.251962661743164
    10. '```' → logprob: -17.501962661743164

Token 1896: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25438743829727173
    2. '           ' → logprob: -2.254387378692627
    3. 'ans' → logprob: -3.129387378692627
    4. ',' → logprob: -4.254387378692627
    5. '+' → logprob: -4.504387378692627
    6. ' +' → logprob: -4.629387378692627
    7. '```' → logprob: -4.879387378692627
    8. '   ' → logprob: -5.004387378692627
    9. 'i' → logprob: -5.254387378692627
    10. '
' → logprob: -5.379387378692627

Token 1897: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16864153742790222
    2. '       ' → logprob: -2.0436415672302246
    3. ' ans' → logprob: -4.793641567230225
    4. '   ' → logprob: -5.168641567230225
    5. '	ans' → logprob: -5.168641567230225
    6. ',' → logprob: -5.668641567230225
    7. '```' → logprob: -6.668641567230225
    8. '           ' → logprob: -7.543641567230225
    9. '(ans' → logprob: -8.918641090393066
    10. 'answer' → logprob: -8.918641090393066

Token 1898: ' cur' (ID: 4396)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0017336098244413733
    2. ' ans' → logprob: -6.626733779907227
    3. 'i' → logprob: -8.001733779907227
    4. '	ans' → logprob: -11.001733779907227
    5. '   ' → logprob: -11.126733779907227
    6. '```' → logprob: -11.376733779907227
    7. 'diff' → logprob: -12.251733779907227
    8. '       ' → logprob: -12.376733779907227
    9. '(ans' → logprob: -12.626733779907227
    10. 'answer' → logprob: -12.626733779907227

Token 1899: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028141476213932037
    2. ' =' → logprob: -5.877814292907715
    3. '=i' → logprob: -11.877814292907715
    4. '+=' → logprob: -13.252814292907715
    5. ' +=' → logprob: -16.0028133392334
    6. '=
' → logprob: -16.1278133392334
    7. ',' → logprob: -16.6278133392334
    8. '<|end|>' → logprob: -16.6278133392334
    9. 'i' → logprob: -16.8778133392334
    10. ' ' → logprob: -17.5028133392334

Token 1900: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4855663721391466e-05
    2. ' i' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.125015258789062
    4. '`' → logprob: -20.000015258789062
    5. '	i' → logprob: -20.250015258789062
    6. '```' → logprob: -20.500015258789062
    7. '{i' → logprob: -21.500015258789062
    8. ')i' → logprob: -21.750015258789062
    9. '=i' → logprob: -22.125015258789062
    10. '       ' → logprob: -22.250015258789062

Token 1901: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10984760522842407
    2. '   ' → logprob: -2.4848475456237793
    3. '
' → logprob: -5.359847545623779
    4. ' ans' → logprob: -5.734847545623779
    5. 'ans' → logprob: -5.734847545623779
    6. '```' → logprob: -5.734847545623779
    7. '	ans' → logprob: -6.109847545623779
    8. '           ' → logprob: -6.359847545623779
    9. '	' → logprob: -7.859847545623779
    10. '`' → logprob: -8.234848022460938

Token 1902: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3127564489841461
    2. '   ' → logprob: -1.6877564191818237
    3. 'ans' → logprob: -2.8127565383911133
    4. ' ans' → logprob: -4.187756538391113
    5. '	ans' → logprob: -5.437756538391113
    6. '```' → logprob: -5.937756538391113
    7. '           ' → logprob: -7.937756538391113
    8. '
' → logprob: -8.187756538391113
    9. '``' → logprob: -8.437756538391113
    10. 'answer' → logprob: -9.062756538391113

Token 1903: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0009476647828705609
    2. ' ans' → logprob: -7.00094747543335
    3. '   ' → logprob: -10.500947952270508
    4. '       ' → logprob: -12.625947952270508
    5. '	ans' → logprob: -13.125947952270508
    6. '```' → logprob: -13.125947952270508
    7. 'answer' → logprob: -14.125947952270508
    8. '           ' → logprob: -15.250947952270508
    9. '(ans' → logprob: -15.500947952270508
    10. 'print' → logprob: -15.750947952270508

Token 1904: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014175969175994396
    2. '.' → logprob: -4.264175891876221
    3. '.app' → logprob: -11.639176368713379
    4. ' .' → logprob: -13.514176368713379
    5. 'append' → logprob: -13.639176368713379
    6. '.ap' → logprob: -14.389176368713379
    7. '.extend' → logprob: -15.889176368713379
    8. '+.' → logprob: -16.139175415039062
    9. '.Append' → logprob: -16.389175415039062
    10. '​.' → logprob: -16.639175415039062

Token 1905: '(cur' (ID: 34723)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3138609230518341
    2. '(cur' → logprob: -1.3138608932495117
    3. '(' → logprob: -7.813860893249512
    4. 'cur' → logprob: -8.813860893249512
    5. 'i' → logprob: -11.313860893249512
    6. ' (' → logprob: -11.438860893249512
    7. '((' → logprob: -11.938860893249512
    8. '(str' → logprob: -11.938860893249512
    9. '('' → logprob: -12.563860893249512
    10. '(c' → logprob: -12.688860893249512

Token 1906: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47447776794433594
    2. '-' → logprob: -0.9744777679443359
    3. '-prev' → logprob: -7.849477767944336
    4. '   ' → logprob: -12.724477767944336
    5. '-cur' → logprob: -12.724477767944336
    6. ' ' → logprob: -13.224477767944336
    7. ' ' → logprob: -14.349477767944336
    8. ')' → logprob: -14.474477767944336
    9. '       ' → logprob: -14.599477767944336
    10. '-pre' → logprob: -15.599477767944336

Token 1907: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -4.5491004129871726e-05
    2. ' prev' → logprob: -10.000045776367188
    3. '	prev' → logprob: -17.250045776367188
    4. '(prev' → logprob: -18.750045776367188
    5. 'pre' → logprob: -19.000045776367188
    6. '.prev' → logprob: -19.750045776367188
    7. '_prev' → logprob: -20.250045776367188
    8. '-prev' → logprob: -21.375045776367188
    9. 'previous' → logprob: -21.625045776367188
    10. 'Prev' → logprob: -22.125045776367188

Token 1908: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9292415749514475e-05
    2. ')
' → logprob: -10.250039100646973
    3. ' )' → logprob: -13.375039100646973
    4. '')' → logprob: -14.625039100646973
    5. '<|end|>' → logprob: -14.750039100646973
    6. '`)' → logprob: -15.125039100646973
    7. ')`' → logprob: -15.375039100646973
    8. '[' → logprob: -15.500039100646973
    9. '```' → logprob: -15.875039100646973
    10. ')return' → logprob: -16.00004005432129

Token 1909: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4317472577095032
    2. 'for' → logprob: -1.5567471981048584
    3. 'print' → logprob: -2.3067471981048584
    4. '
' → logprob: -4.3067474365234375
    5. '<|end|>' → logprob: -4.6817474365234375
    6. '```' → logprob: -5.3067474365234375
    7. 'i' → logprob: -5.4317474365234375
    8. ' if' → logprob: -5.6817474365234375
    9. '   ' → logprob: -6.4317474365234375
    10. 'while' → logprob: -6.9317474365234375

Token 1910: ' cnt' (ID: 27340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07317371666431427
    2. 'print' → logprob: -3.448173761367798
    3. ' if' → logprob: -3.698173761367798
    4. 'for' → logprob: -4.823173522949219
    5. '```' → logprob: -6.073173522949219
    6. '   ' → logprob: -6.323173522949219
    7. '<|end|>' → logprob: -6.823173522949219
    8. 'i' → logprob: -7.823173522949219
    9. 'return' → logprob: -9.573173522949219
    10. '#' → logprob: -9.698173522949219

Token 1911: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5336992144584656
    2. '-' → logprob: -0.9086992144584656
    3. ' -=' → logprob: -4.908699035644531
    4. '=' → logprob: -6.033699035644531
    5. '```' → logprob: -7.408699035644531
    6. '==' → logprob: -9.658699035644531
    7. ' -' → logprob: -10.783699035644531
    8. '+=' → logprob: -10.783699035644531
    9. '<|end|>' → logprob: -11.783699035644531
    10. '   ' → logprob: -12.158699035644531

Token 1912: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.318681188422488e-05
    2. ' dp' → logprob: -11.25001335144043
    3. '	dp' → logprob: -17.25001335144043
    4. '(dp' → logprob: -17.75001335144043
    5. 'dt' → logprob: -17.75001335144043
    6. '`' → logprob: -18.50001335144043
    7. 'dc' → logprob: -18.62501335144043
    8. '_dp' → logprob: -19.00001335144043
    9. 'int' → logprob: -19.12501335144043
    10. 'd' → logprob: -19.37501335144043

Token 1913: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.18449926376342773
    2. 'get' → logprob: -1.8094992637634277
    3. '-' → logprob: -6.184499263763428
    4. 'cnt' → logprob: -6.184499263763428
    5. 'cur' → logprob: -8.809499740600586
    6. '[cnt' → logprob: -9.059499740600586
    7. '[i' → logprob: -9.184499740600586
    8. '_get' → logprob: -10.309499740600586
    9. '[cur' → logprob: -10.309499740600586
    10. '```' → logprob: -10.309499740600586

Token 1914: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002204497577622533
    2. '(i' → logprob: -6.377204418182373
    3. 'cur' → logprob: -7.627204418182373
    4. '(cur' → logprob: -11.627204895019531
    5. '```' → logprob: -12.752204895019531
    6. ' i' → logprob: -13.127204895019531
    7. '`' → logprob: -15.002204895019531
    8. '	i' → logprob: -15.502204895019531
    9. '[cur' → logprob: -15.627204895019531
    10. '{i' → logprob: -15.752204895019531

Token 1915: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007075481698848307
    2. '+' → logprob: -7.500707626342773
    3. ')
' → logprob: -9.750707626342773
    4. '-' → logprob: -10.500707626342773
    5. ' +' → logprob: -10.875707626342773
    6. '       ' → logprob: -11.125707626342773
    7. '   ' → logprob: -11.500707626342773
    8. ')+' → logprob: -11.750707626342773
    9. '<|end|>' → logprob: -12.000707626342773
    10. ' -' → logprob: -12.625707626342773

Token 1916: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024804184213280678
    2. 'for' → logprob: -3.77480411529541
    3. '```' → logprob: -7.27480411529541
    4. '#' → logprob: -7.64980411529541
    5. 'if' → logprob: -8.27480411529541
    6. '
' → logprob: -10.14980411529541
    7. ' for' → logprob: -10.64980411529541
    8. 'while' → logprob: -10.64980411529541
    9. ' print' → logprob: -11.39980411529541
    10. '<|end|>' → logprob: -11.77480411529541

Token 1917: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.65101717156358e-05
    2. 'for' → logprob: -9.250096321105957
    3. ' print' → logprob: -15.750096321105957
    4. '```' → logprob: -15.750096321105957
    5. 'if' → logprob: -16.250097274780273
    6. '
' → logprob: -19.750097274780273
    7. '``' → logprob: -20.000097274780273
    8. '`' → logprob: -20.500097274780273
    9. '#' → logprob: -20.500097274780273
    10. '#print' → logprob: -20.875097274780273

Token 1918: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.537868779967539e-06
    2. '```' → logprob: -12.000008583068848
    3. ''' → logprob: -13.625008583068848
    4. ' print' → logprob: -14.250008583068848
    5. '`' → logprob: -15.250008583068848
    6. 'for' → logprob: -15.375008583068848
    7. '
' → logprob: -16.25000762939453
    8. '``' → logprob: -18.00000762939453
    9. '#print' → logprob: -19.00000762939453
    10. '   ' → logprob: -19.50000762939453

Token 1919: ' answer' (ID: 6052)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02385026030242443
    2. 'print' → logprob: -4.523850440979004
    3. '"' → logprob: -5.273850440979004
    4. 'ans' → logprob: -5.773850440979004
    5. '*' → logprob: -6.023850440979004
    6. '(*' → logprob: -6.648850440979004
    7. '
' → logprob: -8.023850440979004
    8. '(ans' → logprob: -8.523850440979004
    9. '('' → logprob: -9.398850440979004
    10. '#' → logprob: -10.023850440979004

Token 1920: ' as' (ID: 472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0043548718094825745
    2. '```' → logprob: -5.504354953765869
    3. 'for' → logprob: -8.629354476928711
    4. '``' → logprob: -9.254354476928711
    5. ' print' → logprob: -14.129354476928711
    6. '
' → logprob: -14.379354476928711
    7. '`
' → logprob: -15.379354476928711
    8. '`' → logprob: -15.629354476928711
    9. 'if' → logprob: -15.879354476928711
    10. '#' → logprob: -16.87935447692871

Token 1921: ' space' (ID: 4918)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004181209951639175
    2. 'print' → logprob: -5.504181385040283
    3. '"' → logprob: -9.254180908203125
    4. ' '' → logprob: -13.254180908203125
    5. ''s' → logprob: -13.254180908203125
    6. ''m' → logprob: -13.629180908203125
    7. 'str' → logprob: -14.504180908203125
    8. '`' → logprob: -15.004180908203125
    9. ''a' → logprob: -15.629180908203125
    10. ''re' → logprob: -15.879180908203125

Token 1922: '-separated' (ID: 189658)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.7098612189292908
    2. '.join' → logprob: -0.7098612189292908
    3. 'print' → logprob: -4.5848612785339355
    4. '.' → logprob: -6.2098612785339355
    5. ''' → logprob: -6.5848612785339355
    6. '().' → logprob: -6.8348612785339355
    7. 'joined' → logprob: -6.8348612785339355
    8. '('' → logprob: -8.084860801696777
    9. '.print' → logprob: -8.834860801696777
    10. ' join' → logprob: -9.084860801696777

Token 1923: ' move' (ID: 5275)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4758249819278717
    2. 'print' → logprob: -0.9758249521255493
    3. '"' → logprob: -6.72582483291626
    4. '```' → logprob: -8.725825309753418
    5. '`' → logprob: -8.975825309753418
    6. ''s' → logprob: -9.850825309753418
    7. 'str' → logprob: -10.350825309753418
    8. 'join' → logprob: -10.350825309753418
    9. 'ans' → logprob: -10.475825309753418
    10. ''m' → logprob: -10.600825309753418

Token 1924: ' lengths' (ID: 51957)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13450467586517334
    2. 'print' → logprob: -3.009504795074463
    3. 's' → logprob: -3.259504795074463
    4. '('' → logprob: -3.884504795074463
    5. ''s' → logprob: -5.509504795074463
    6. 'join' → logprob: -5.509504795074463
    7. '`' → logprob: -5.759504795074463
    8. '```' → logprob: -6.384504795074463
    9. '()' → logprob: -6.509504795074463
    10. '"' → logprob: -6.634504795074463

Token 1925: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2352385965641588e-05
    2. ''' → logprob: -12.500012397766113
    3. '```' → logprob: -12.750012397766113
    4. ' print' → logprob: -12.875012397766113
    5. '
' → logprob: -12.875012397766113
    6. '`' → logprob: -15.375012397766113
    7. '``' → logprob: -16.125011444091797
    8. 'for' → logprob: -16.500011444091797
    9. '`
' → logprob: -17.250011444091797
    10. ''\' → logprob: -17.500011444091797

Token 1926: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -19.0
    3. ' print' → logprob: -20.0
    4. '`' → logprob: -24.375
    5. '``' → logprob: -25.5
    6. '#print' → logprob: -26.125
    7. '
' → logprob: -27.25
    8. '   ' → logprob: -27.5
    9. '    
' → logprob: -28.25
    10. 'printf' → logprob: -28.375

Token 1927: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.04859872907400131
    2. '('' → logprob: -3.0485987663269043
    3. '(' → logprob: -12.423598289489746
    4. '("' → logprob: -12.673598289489746
    5. '(*)' → logprob: -12.798598289489746
    6. '*' → logprob: -13.923598289489746
    7. ''' → logprob: -14.798598289489746
    8. '(*(' → logprob: -16.423599243164062
    9. '('*' → logprob: -16.923599243164062
    10. '()' → logprob: -17.548599243164062

Token 1928: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -18.25
    3. '(ans' → logprob: -19.25
    4. '[' → logprob: -23.5
    5. 'ANS' → logprob: -24.25
    6. '	ans' → logprob: -24.75
    7. 'answer' → logprob: -25.5
    8. 'ansi' → logprob: -25.875
    9. 'map' → logprob: -26.25
    10. '_ans' → logprob: -26.875

Token 1929: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24703317880630493
    2. '<|end|>' → logprob: -1.7470331192016602
    3. '\n' → logprob: -3.37203311920166
    4. '```' → logprob: -5.12203311920166
    5. '\' → logprob: -6.12203311920166
    6. '()' → logprob: -7.37203311920166
    7. '
' → logprob: -7.74703311920166
    8. ')
' → logprob: -8.62203311920166
    9. '<|end|>' → logprob: -8.99703311920166
    10. '``' → logprob: -9.24703311920166


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1927
Tokens correctement prédits (1ère position, stricte): 514
Tokens correctement prédits (1ère position, avec adaptation): 564
Tokens correctement prédits (top 10): 1331
Précision stricte (1ère position): 26.67%
Précision adaptée (1ère position): 29.27%
Précision (top 10): 69.07%
================================================================================
