================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input())

def read_array():
    return list(map(int, input().split()))

def enumerate_array(A):
    return [(a, i) for i, a in enumerate(A)]

def sort_array(arr):
    return sorted(arr, reverse=True)

def make_dp(N):
    return [0] * (N + 1)

def copy_dp(dp):
    return dp[:]

def update_left(dp2, l, dp, pos, a):
    dp2[l + 1] = max(dp2[l + 1], dp[l] + (pos - l) * a)

def update_right(dp2, l, dp, pos, a, N, i):
    r = i - l + 1
    dp2[l] = max(dp2[l], dp[l] + (N - r - pos) * a)

def process_dp(N, A):
    dp = make_dp(N)
    for i in range(N):
        dp2 = copy_dp(dp)
        for l in range(i + 1):
            a, pos = A[i]
            update_left(dp2, l, dp, pos, a)
            update_right(dp2, l, dp, pos, a, N, i)
        dp = dp2
    return dp

def get_result(dp):
    return max(dp)

def main():
    N = read_input()
    arr = read_array()
    arr_enum = enumerate_array(arr)
    arr_sorted = sort_array(arr_enum)
    dp = process_dp(N, arr_sorted)
    result = get_result(dp)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009755974635481834
    2. '_' → logprob: -4.884756088256836
    3. '():' → logprob: -6.884756088256836
    4. '(:' → logprob: -7.259756088256836
    5. '(_:' → logprob: -8.634756088256836
    6. '(_' → logprob: -9.634756088256836
    7. '```' → logprob: -9.759756088256836
    8. ' (' → logprob: -10.509756088256836
    9. ':' → logprob: -10.759756088256836
    10. '_:' → logprob: -10.884756088256836

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21321910619735718
    2. ' input' → logprob: -2.213219165802002
    3. 'input' → logprob: -3.088219165802002
    4. '"' → logprob: -3.463219165802002
    5. ''' → logprob: -5.588219165802002
    6. ' []' → logprob: -7.588219165802002
    7. '  ' → logprob: -7.963219165802002
    8. ' "' → logprob: -8.463218688964844
    9. ' None' → logprob: -9.088218688964844
    10. '(input' → logprob: -9.213218688964844

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005114490049891174
    2. '('' → logprob: -8.375511169433594
    3. '```' → logprob: -9.500511169433594
    4. ''' → logprob: -9.625511169433594
    5. ' (' → logprob: -10.750511169433594
    6. '`' → logprob: -11.000511169433594
    7. '(open' → logprob: -11.000511169433594
    8. '("("' → logprob: -11.125511169433594
    9. '(input' → logprob: -11.250511169433594
    10. '()' → logprob: -11.500511169433594

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5192275047302246
    2. '(' → logprob: -1.0192275047302246
    3. '()' → logprob: -3.6442275047302246
    4. '()))' → logprob: -4.519227504730225
    5. ')' → logprob: -5.144227504730225
    6. '(""))' → logprob: -8.394227981567383
    7. '('' → logprob: -8.519227981567383
    8. ' ())' → logprob: -8.519227981567383
    9. '))' → logprob: -8.644227981567383
    10. '(
' → logprob: -9.019227981567383

Token 9: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2777926921844482
    2. 'def' → logprob: -1.7777926921844482
    3. '\n' → logprob: -1.7777926921844482
    4. '
' → logprob: -2.4027926921844482
    5. '<|end|>' → logprob: -2.7777926921844482
    6. '```' → logprob: -2.9027926921844482
    7. '(' → logprob: -3.0277926921844482
    8. ' ' → logprob: -3.9027926921844482
    9. ')' → logprob: -4.277792930603027
    10. 'newline' → logprob: -4.402792930603027

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.34841564297676086
    2. ' write' → logprob: -2.4734156131744385
    3. ' main' → logprob: -2.5984156131744385
    4. ' compute' → logprob: -2.7234156131744385
    5. ' process' → logprob: -3.4734156131744385
    6. ' read' → logprob: -4.223415851593018
    7. ' add' → logprob: -4.473415851593018
    8. ' space' → logprob: -5.348415851593018
    9. ' sum' → logprob: -6.348415851593018
    10. ' ' → logprob: -6.848415851593018

Token 11: '_array' (ID: 8766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007796602323651314
    2. '_input' → logprob: -5.132796764373779
    3. '_line' → logprob: -6.632796764373779
    4. '_output' → logprob: -8.507796287536621
    5. '_string' → logprob: -9.132796287536621
    6. '(' → logprob: -9.882796287536621
    7. '_data' → logprob: -10.257796287536621
    8. '_value' → logprob: -10.757796287536621
    9. ' _' → logprob: -11.007796287536621
    10. '()' → logprob: -11.257796287536621

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12626491487026215
    2. '()' → logprob: -2.251264810562134
    3. '_' → logprob: -5.001265048980713
    4. '```' → logprob: -6.376265048980713
    5. '(size' → logprob: -7.251265048980713
    6. '("("' → logprob: -7.501265048980713
    7. '():' → logprob: -8.001264572143555
    8. '_list' → logprob: -8.376264572143555
    9. '(_)' → logprob: -8.626264572143555
    10. '[]' → logprob: -8.876264572143555

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006597306113690138
    2. '[]' → logprob: -5.131597518920898
    3. '[' → logprob: -8.131597518920898
    4. '    ' → logprob: -8.881597518920898
    5. '(' → logprob: -9.131597518920898
    6. ' []' → logprob: -9.881597518920898
    7. '()' → logprob: -10.756597518920898
    8. '    
' → logprob: -11.131597518920898
    9. ' return' → logprob: -11.506597518920898
    10. 'return' → logprob: -11.756597518920898

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02852189913392067
    2. 'return' (adapté à ' return') → logprob: -4.52852201461792
    3. ' return' → logprob: -4.52852201461792
    4. '[]' → logprob: -5.52852201461792
    5. ' []' → logprob: -7.40352201461792
    6. '[' → logprob: -7.65352201461792
    7. 'array' → logprob: -7.65352201461792
    8. ' ' → logprob: -8.528521537780762
    9. '    ' → logprob: -8.653521537780762
    10. '       ' → logprob: -8.778521537780762

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.11843954771757126
    2. 'list' → logprob: -2.3684394359588623
    3. ' [' → logprob: -4.618439674377441
    4. '[' → logprob: -5.368439674377441
    5. '[list' → logprob: -5.743439674377441
    6. ' []' → logprob: -8.743439674377441
    7. ' ' → logprob: -9.243439674377441
    8. '[int' → logprob: -9.993439674377441
    9. '[]' → logprob: -11.368439674377441
    10. '(list' → logprob: -11.743439674377441

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02809394709765911
    2. '(int' → logprob: -3.7780940532684326
    3. '(map' → logprob: -5.7780938148498535
    4. '(input' → logprob: -6.5280938148498535
    5. '(range' → logprob: -8.778094291687012
    6. ' (' → logprob: -10.278094291687012
    7. '(eval' → logprob: -10.653094291687012
    8. '(

' → logprob: -11.153094291687012
    9. '(list' → logprob: -11.778094291687012
    10. '[int' → logprob: -12.028094291687012

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021350083872675896
    2. '(' → logprob: -3.896350145339966
    3. 'int' → logprob: -7.271349906921387
    4. '(
' → logprob: -10.021349906921387
    5. '<int' → logprob: -10.521349906921387
    6. '(input' → logprob: -11.271349906921387
    7. ' int' → logprob: -11.771349906921387
    8. '=int' → logprob: -11.896349906921387
    9. '```' → logprob: -12.771349906921387
    10. ')' → logprob: -13.021349906921387

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05148090422153473
    2. ',input' → logprob: -3.176481008529663
    3. ',' → logprob: -5.301480770111084
    4. 'input' → logprob: -6.426480770111084
    5. '(' → logprob: -6.676480770111084
    6. ' (' → logprob: -8.551481246948242
    7. '=input' → logprob: -8.801481246948242
    8. ' input' → logprob: -8.926481246948242
    9. ' ,' → logprob: -10.551481246948242
    10. '))' → logprob: -10.551481246948242

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25195279717445374
    2. ' input' → logprob: -1.5019527673721313
    3. '(input' → logprob: -11.126953125
    4. ' ' → logprob: -13.126953125
    5. '   ' → logprob: -13.126953125
    6. '	input' → logprob: -13.626953125
    7. ',input' → logprob: -13.626953125
    8. '=input' → logprob: -13.876953125
    9. '<input' → logprob: -14.501953125
    10. '  ' → logprob: -15.626953125

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00164590694475919
    2. '()))' → logprob: -6.751646041870117
    3. '()' → logprob: -8.126646041870117
    4. '())' → logprob: -9.376646041870117
    5. '))' → logprob: -9.626646041870117
    6. ')' → logprob: -11.376646041870117
    7. '())))' → logprob: -11.501646041870117
    8. '()));' → logprob: -13.001646041870117
    9. ')))' → logprob: -13.376646041870117
    10. ' ().' → logprob: -13.626646041870117

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002481127390637994
    2. 'strip' → logprob: -6.002480983734131
    3. 'rstrip' → logprob: -12.252481460571289
    4. ' split' → logprob: -14.377481460571289
    5. '(split' → logprob: -16.87748146057129
    6. 'spl' → logprob: -17.87748146057129
    7. 'read' → logprob: -18.75248146057129
    8. 'startswith' → logprob: -19.25248146057129
    9. ' strip' → logprob: -19.50248146057129
    10. ')' → logprob: -19.62748146057129

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02949531190097332
    2. '()' → logprob: -4.5294952392578125
    3. '())))' → logprob: -4.5294952392578125
    4. '())' → logprob: -5.6544952392578125
    5. '))' → logprob: -5.9044952392578125
    6. ')))' → logprob: -6.7794952392578125
    7. '(' → logprob: -10.029495239257812
    8. ')' → logprob: -10.654495239257812
    9. '()))
' → logprob: -11.154495239257812
    10. '()));' → logprob: -11.654495239257812

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20392493903636932
    2. 'd' → logprob: -1.7039248943328857
    3. 'n' → logprob: -6.828925132751465
    4. '#' → logprob: -7.828925132751465
    5. '
' → logprob: -8.203925132751465
    6. '

' → logprob: -8.578925132751465
    7. '```' → logprob: -8.703925132751465
    8. '\' → logprob: -9.203925132751465
    9. 'de' → logprob: -9.328925132751465
    10. 'a' → logprob: -9.703925132751465

Token 24: ' enumerate' (ID: 29671)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6146044135093689
    2. ' solve' → logprob: -1.3646044731140137
    3. 'solve' → logprob: -2.3646044731140137
    4. ' write' → logprob: -2.8646044731140137
    5. 'main' → logprob: -3.6146044731140137
    6. 'write' → logprob: -4.614604473114014
    7. ' factorial' → logprob: -5.489604473114014
    8. ' binary' → logprob: -6.114604473114014
    9. 'binary' → logprob: -6.364604473114014
    10. ' sum' → logprob: -6.489604473114014

Token 25: '_array' (ID: 8766)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011264264583587646
    2. '_items' → logprob: -5.886264324188232
    3. ')' → logprob: -6.636264324188232
    4. '_range' → logprob: -7.136264324188232
    5. '_' → logprob: -7.261264324188232
    6. '()' → logprob: -7.386264324188232
    7. '<|end|>' → logprob: -8.011263847351074
    8. '(range' → logprob: -8.136263847351074
    9. '```' → logprob: -8.386263847351074
    10. '_elements' → logprob: -8.386263847351074

Token 26: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03175104781985283
    2. 's' → logprob: -3.6567511558532715
    3. '()' → logprob: -6.4067511558532715
    4. '_items' → logprob: -7.7817511558532715
    5. '_array' → logprob: -7.7817511558532715
    6. '_' → logprob: -8.156750679016113
    7. '_list' → logprob: -8.156750679016113
    8. '():' → logprob: -8.281750679016113
    9. '_elements' → logprob: -8.406750679016113
    10. '("("' → logprob: -8.531750679016113

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004495515953749418
    2. ')' → logprob: -5.879495620727539
    3. ')):' → logprob: -6.754495620727539
    4. ' ):' → logprob: -8.129495620727539
    5. ',' → logprob: -8.754495620727539
    6. '):
' → logprob: -10.254495620727539
    7. '))' → logprob: -11.379495620727539
    8. '[]):' → logprob: -12.254495620727539
    9. ']):' → logprob: -12.504495620727539
    10. '():' → logprob: -12.754495620727539

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2321244329214096
    2. '(' → logprob: -2.1071243286132812
    3. ':' → logprob: -3.4821243286132812
    4. ' ' → logprob: -4.482124328613281
    5. '():' → logprob: -4.607124328613281
    6. '    ' → logprob: -5.357124328613281
    7. ' return' → logprob: -5.357124328613281
    8. ' for' → logprob: -5.607124328613281
    9. '    
' → logprob: -5.857124328613281
    10. 'enumer' → logprob: -6.232124328613281

Token 29: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40729832649230957
    2. 'return' (adapté à ' return') → logprob: -2.0322983264923096
    3. '   ' → logprob: -2.2822983264923096
    4. ' for' → logprob: -2.7822983264923096
    5. 'for' → logprob: -4.2822980880737305
    6. ' enumerate' → logprob: -4.4072980880737305
    7. 'enumer' → logprob: -4.9072980880737305
    8. ' yield' → logprob: -6.0322980880737305
    9. 'yield' → logprob: -6.9072980880737305
    10. ' ' → logprob: -7.0322980880737305

Token 30: ' [(' (ID: 43900)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6623567938804626
    2. 'enumer' → logprob: -2.0373568534851074
    3. ' list' → logprob: -2.1623568534851074
    4. '[(' → logprob: -2.1623568534851074
    5. ' [(' → logprob: -2.4123568534851074
    6. 'list' → logprob: -3.4123568534851074
    7. ' (' → logprob: -7.537356853485107
    8. '(' → logprob: -8.53735637664795
    9. '[' → logprob: -9.28735637664795
    10. ' enumer' → logprob: -9.53735637664795

Token 31: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017929133027791977
    2. 'index' → logprob: -5.0179290771484375
    3. 'idx' → logprob: -5.2679290771484375
    4. 'e' → logprob: -5.8929290771484375
    5. 'v' → logprob: -7.0179290771484375
    6. 'val' → logprob: -7.3929290771484375
    7. 'a' → logprob: -7.7679290771484375
    8. ' i' → logprob: -8.017929077148438
    9. '(i' → logprob: -8.267929077148438
    10. 'value' → logprob: -8.517929077148438

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04905897006392479
    2. ',i' → logprob: -3.0490589141845703
    3. ' ,' → logprob: -8.04905891418457
    4. ',index' → logprob: -8.79905891418457
    5. ',)' → logprob: -15.29905891418457
    6. 'i' → logprob: -15.29905891418457
    7. '[i' → logprob: -15.92405891418457
    8. ',j' → logprob: -16.42405891418457
    9. 'index' → logprob: -16.42405891418457
    10. 'idx' → logprob: -16.67405891418457

Token 33: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030020520091056824
    2. ' i' → logprob: -3.5300204753875732
    3. 'idx' → logprob: -8.905020713806152
    4. ' idx' → logprob: -9.655020713806152
    5. ')' → logprob: -10.530020713806152
    6. 'a' → logprob: -10.780020713806152
    7. 'index' → logprob: -11.405020713806152
    8. ')i' → logprob: -12.405020713806152
    9. ' ' → logprob: -13.155020713806152
    10. ' index' → logprob: -13.655020713806152

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -12.875003814697266
    3. 'nd' → logprob: -14.500003814697266
    4. 'n' → logprob: -15.125003814697266
    5. ')
' → logprob: -15.500003814697266
    6. 'nt' → logprob: -16.250003814697266
    7. 'm' → logprob: -16.500003814697266
    8. 'dx' → logprob: -16.500003814697266
    9. ',)' → logprob: -16.625003814697266
    10. ')]' → logprob: -16.750003814697266

Token 35: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30158042907714844
    2. ' for' → logprob: -1.4265804290771484
    3. 'for' → logprob: -4.051580429077148
    4. ')' → logprob: -6.426580429077148
    5. ' ,' → logprob: -6.926580429077148
    6. ' ' → logprob: -9.051580429077148
    7. ' in' → logprob: -9.551580429077148
    8. '   ' → logprob: -10.926580429077148
    9. 'enumer' → logprob: -11.926580429077148
    10. '  ' → logprob: -12.426580429077148

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012517070397734642
    2. 'i' → logprob: -4.387516975402832
    3. '	i' → logprob: -12.262516975402832
    4. ' ' → logprob: -13.512516975402832
    5. ' ' → logprob: -14.262516975402832
    6. ',i' → logprob: -15.637516975402832
    7. '  ' → logprob: -15.887516975402832
    8. '(i' → logprob: -15.887516975402832
    9. ',' → logprob: -16.63751792907715
    10. '<|end|>' → logprob: -16.76251792907715

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008479351177811623
    2. ' in' → logprob: -4.883479118347168
    3. ' ,' → logprob: -7.133479118347168
    4. 'in' → logprob: -9.758479118347168
    5. ',n' → logprob: -12.133479118347168
    6. '<|end|>' → logprob: -12.758479118347168
    7. ',in' → logprob: -13.133479118347168
    8. ',a' → logprob: -13.508479118347168
    9. '‌,' → logprob: -13.758479118347168
    10. ' ' → logprob: -14.008479118347168

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.021198483183979988
    2. 'a' → logprob: -3.8961985111236572
    3. '<|end|>' → logprob: -7.396198272705078
    4. 'enumer' → logprob: -11.021198272705078
    5. ' ' → logprob: -11.896198272705078
    6. '(a' → logprob: -12.021198272705078
    7. '_a' → logprob: -12.896198272705078
    8. '>a' → logprob: -13.021198272705078
    9. '	a' → logprob: -13.146198272705078
    10. ' (' → logprob: -13.646198272705078

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04303024709224701
    2. 'in' → logprob: -3.168030261993408
    3. '<|end|>' → logprob: -11.16802978515625
    4. ' ' → logprob: -11.91802978515625
    5. 'enumer' → logprob: -12.66802978515625
    6. '	in' → logprob: -13.16802978515625
    7. ',' → logprob: -14.04302978515625
    8. ')' → logprob: -14.66802978515625
    9. '<|end|>' → logprob: -14.66802978515625
    10. 'In' → logprob: -14.66802978515625

Token 40: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.06995265930891037
    2. 'enumer' → logprob: -2.6949527263641357
    3. '<|end|>' → logprob: -11.319952964782715
    4. '```' → logprob: -13.069952964782715
    5. 'Enumer' → logprob: -14.319952964782715
    6. ' enumer' → logprob: -14.944952964782715
    7. ' ' → logprob: -15.319952964782715
    8. '.enumer' → logprob: -15.694952964782715
    9. ' en' → logprob: -15.819952964782715
    10. 'en' → logprob: -15.819952964782715

Token 41: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0019299437990412116
    2. '(' → logprob: -6.251929759979248
    3. '(
' → logprob: -14.001930236816406
    4. ')' → logprob: -15.251930236816406
    5. '(a' → logprob: -16.501930236816406
    6. ' (' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.251930236816406
    8. '<|end|>' → logprob: -17.251930236816406
    9. ')]' → logprob: -17.876930236816406
    10. 'A' → logprob: -17.876930236816406

Token 42: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.8219583075260743e-05
    2. ')' → logprob: -10.500038146972656
    3. ' )' → logprob: -11.875038146972656
    4. ']' → logprob: -13.750038146972656
    5. ')])' → logprob: -14.000038146972656
    6. '))' → logprob: -15.000038146972656
    7. '   ' → logprob: -15.000038146972656
    8. ')]
' → logprob: -15.250038146972656
    9. ')}' → logprob: -15.500038146972656
    10. ' ' → logprob: -16.000038146972656

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08369659632444382
    2. '
' → logprob: -3.3336966037750244
    3. '<|end|>' → logprob: -3.5836966037750244
    4. '_' → logprob: -5.083696365356445
    5. '\' → logprob: -6.583696365356445
    6. '

' → logprob: -6.708696365356445
    7. '<|end|>' → logprob: -6.708696365356445
    8. '#' → logprob: -6.833696365356445
    9. '[' → logprob: -6.833696365356445
    10. ' def' → logprob: -6.958696365356445

Token 44: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5432387590408325
    2. ' solve' → logprob: -2.293238639831543
    3. ' count' → logprob: -2.418238639831543
    4. ' max' → logprob: -2.668238639831543
    5. ' process' → logprob: -3.168238639831543
    6. ' find' → logprob: -3.418238639831543
    7. ' reverse' → logprob: -4.293238639831543
    8. ' sum' → logprob: -4.668238639831543
    9. ' binary' → logprob: -5.043238639831543
    10. ' is' → logprob: -5.293238639831543

Token 45: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.000850009499117732
    2. '(' → logprob: -8.000849723815918
    3. 'ed' → logprob: -9.625849723815918
    4. '_' → logprob: -9.875849723815918
    5. '_en' → logprob: -10.000849723815918
    6. '_arr' → logprob: -10.000849723815918
    7. '_arrays' → logprob: -10.000849723815918
    8. '_enum' → logprob: -10.500849723815918
    9. '```' → logprob: -10.500849723815918
    10. '(_' → logprob: -10.625849723815918

Token 46: '(arr' (ID: 19646)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04059039428830147
    2. '(' → logprob: -3.290590286254883
    3. '(arr' → logprob: -7.540590286254883
    4. '(array' → logprob: -7.540590286254883
    5. '(a' → logprob: -8.290590286254883
    6. ' (' → logprob: -8.540590286254883
    7. '_by' → logprob: -8.540590286254883
    8. '(lambda' → logprob: -8.790590286254883
    9. '((' → logprob: -8.915590286254883
    10. '_' → logprob: -9.165590286254883

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47549429535865784
    2. ',' → logprob: -0.9754942655563354
    3. '):
' → logprob: -7.475494384765625
    4. ')' → logprob: -8.725494384765625
    5. ',key' → logprob: -8.975494384765625
    6. ' ,' → logprob: -9.100494384765625
    7. '   ' → logprob: -9.350494384765625
    8. ' ):' → logprob: -9.350494384765625
    9. 's' → logprob: -10.100494384765625
    10. '[]):' → logprob: -10.225494384765625

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3811277151107788
    2. 'sorted' → logprob: -1.6311277151107788
    3. 'arr' → logprob: -2.8811278343200684
    4. ' sorted' → logprob: -3.5061278343200684
    5. 'return' → logprob: -4.256127834320068
    6. '(arr' → logprob: -4.756127834320068
    7. ' return' → logprob: -4.881127834320068
    8. ' arr' → logprob: -6.006127834320068
    9. '(sorted' → logprob: -6.256127834320068
    10. '```' → logprob: -9.50612735748291

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25735846161842346
    2. 'sorted' → logprob: -2.0073585510253906
    3. '   ' → logprob: -2.5073585510253906
    4. ' return' → logprob: -4.632358551025391
    5. ' sorted' → logprob: -7.007358551025391
    6. 'arr' → logprob: -7.882358551025391
    7. '```' → logprob: -9.88235855102539
    8. ' ' → logprob: -12.13235855102539
    9. '  ' → logprob: -12.13235855102539
    10. 'sort' → logprob: -12.88235855102539

Token 50: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.20142386853694916
    2. ' sorted' → logprob: -1.7014238834381104
    3. '(sorted' → logprob: -12.201423645019531
    4. '   ' → logprob: -12.326423645019531
    5. ' ' → logprob: -14.451423645019531
    6. '.sorted' → logprob: -14.826423645019531
    7. '  ' → logprob: -16.45142364501953
    8. '[' → logprob: -17.20142364501953
    9. '[]' → logprob: -17.32642364501953
    10. 'sort' → logprob: -17.57642364501953

Token 51: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.043078094720840454
    2. '(' → logprob: -3.1680781841278076
    3. 'arr' → logprob: -9.668078422546387
    4. '(
' → logprob: -12.418078422546387
    5. '(array' → logprob: -12.918078422546387
    6. '<|end|>' → logprob: -13.543078422546387
    7. '	arr' → logprob: -13.793078422546387
    8. '<arr' → logprob: -13.918078422546387
    9. '<|end|>' → logprob: -13.918078422546387
    10. ' (' → logprob: -14.293078422546387

Token 52: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062087904661893845
    2. ',' → logprob: -2.8120880126953125
    3. ',key' → logprob: -10.312088012695312
    4. ' )' → logprob: -10.437088012695312
    5. ' ,' → logprob: -10.937088012695312
    6. '   ' → logprob: -11.062088012695312
    7. '))' → logprob: -11.812088012695312
    8. ',)' → logprob: -12.312088012695312
    9. ' ' → logprob: -12.812088012695312
    10. '<|end|>' → logprob: -12.937088012695312

Token 53: ' reverse' (ID: 18199)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.20266087353229523
    2. 'key' → logprob: -1.7026609182357788
    3. ' reverse' → logprob: -7.452661037445068
    4. 'reverse' → logprob: -7.452661037445068
    5. ')' → logprob: -10.45266056060791
    6. '   ' → logprob: -10.82766056060791
    7. ' lambda' → logprob: -10.95266056060791
    8. 'lambda' → logprob: -11.32766056060791
    9. ' ' → logprob: -13.20266056060791
    10. '	key' → logprob: -13.32766056060791

Token 54: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.07000390440225601
    2. '=' → logprob: -2.6950039863586426
    3. ')' → logprob: -10.195003509521484
    4. '=False' → logprob: -11.320003509521484
    5. ')=' → logprob: -11.695003509521484
    6. ',' → logprob: -12.195003509521484
    7. 'True' → logprob: -13.320003509521484
    8. ' =' → logprob: -14.070003509521484
    9. '=

' → logprob: -14.320003509521484
    10. ' True' → logprob: -14.695003509521484

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.25
    3. ')
' → logprob: -16.75
    4. ' )' → logprob: -18.0
    5. ')))' → logprob: -18.25
    6. ')return' → logprob: -18.625
    7. '),' → logprob: -19.5
    8. ')`' → logprob: -19.75
    9. ')

' → logprob: -20.625
    10. ').' → logprob: -20.75

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010016605257987976
    2. '
' → logprob: -5.760016441345215
    3. '<|end|>' → logprob: -6.260016441345215
    4. '```' → logprob: -6.510016441345215
    5. '\' → logprob: -6.760016441345215
    6. '#' → logprob: -7.260016441345215
    7. '[' → logprob: -7.635016441345215
    8. '\n' → logprob: -8.510016441345215
    9. '<|end|>' → logprob: -8.635016441345215
    10. '

' → logprob: -9.260016441345215

Token 57: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01670481264591217
    2. ' read' → logprob: -5.76670503616333
    3. ' solve' → logprob: -6.01670503616333
    4. ' calculate' → logprob: -6.39170503616333
    5. 'main' → logprob: -6.51670503616333
    6. ' find' → logprob: -6.64170503616333
    7. ' max' → logprob: -6.76670503616333
    8. ' sort' → logprob: -6.76670503616333
    9. ' process' → logprob: -7.26670503616333
    10. ' factorial' → logprob: -7.39170503616333

Token 58: '_dp' (ID: 133252)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.07045362889766693
    2. '_pair' → logprob: -3.695453643798828
    3. '_pairs' → logprob: -4.445453643798828
    4. '_' → logprob: -5.195453643798828
    5. '_unique' → logprob: -5.570453643798828
    6. '_sorted' → logprob: -5.820453643798828
    7. '_hash' → logprob: -6.195453643798828
    8. '_sum' → logprob: -6.820453643798828
    9. '_list' → logprob: -6.820453643798828
    10. '_arr' → logprob: -7.070453643798828

Token 59: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7898277640342712
    2. '_' → logprob: -0.7898277640342712
    3. '_array' → logprob: -3.039827823638916
    4. '(n' → logprob: -4.039827823638916
    5. '(size' → logprob: -4.664827823638916
    6. '_table' → logprob: -5.289827823638916
    7. '_(' → logprob: -5.664827823638916
    8. '()' → logprob: -5.664827823638916
    9. '(_' → logprob: -7.289827823638916
    10. '(len' → logprob: -7.289827823638916

Token 60: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004007600946351886
    2. '):' → logprob: -8.00040054321289
    3. ' ,' → logprob: -10.50040054321289
    4. '+' → logprob: -10.75040054321289
    5. ',N' → logprob: -12.25040054321289
    6. ',n' → logprob: -12.75040054321289
    7. ')' → logprob: -12.75040054321289
    8. '+,' → logprob: -13.12540054321289
    9. ',size' → logprob: -14.87540054321289
    10. ',int' → logprob: -15.12540054321289

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44173794984817505
    2. '[' → logprob: -1.5667378902435303
    3. ' [' → logprob: -1.9417378902435303
    4. '[n' → logprob: -6.691738128662109
    5. '[
' → logprob: -7.316738128662109
    6. 'dp' → logprob: -7.941738128662109
    7. '[[' → logprob: -8.19173812866211
    8. '[i' → logprob: -8.19173812866211
    9. '[N' → logprob: -8.19173812866211
    10. ' ' → logprob: -8.44173812866211

Token 62: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5112432241439819
    2. ' [' → logprob: -1.136243224143982
    3. '[[' → logprob: -3.2612433433532715
    4. ' [[' → logprob: -3.3862433433532715
    5. '   ' → logprob: -5.1362433433532715
    6. '[
' → logprob: -7.6362433433532715
    7. '[n' → logprob: -8.636242866516113
    8. '[s' → logprob: -9.136242866516113
    9. 'dp' → logprob: -9.261242866516113
    10. '[m' → logprob: -9.886242866516113

Token 63: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.587990403175354
    2. '[' → logprob: -0.837990403175354
    3. ' [[' → logprob: -4.7129902839660645
    4. ' [' → logprob: -5.8379902839660645
    5. '[n' → logprob: -10.087990760803223
    6. '[-' → logprob: -11.587990760803223
    7. '[N' → logprob: -11.962990760803223
    8. '[]' → logprob: -12.212990760803223
    9. '[np' → logprob: -12.462990760803223
    10. '[int' → logprob: -12.962990760803223

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050930462777614594
    2. '[' → logprob: -3.1759305000305176
    3. 'float' → logprob: -5.425930500030518
    4. '-' → logprob: -6.050930500030518
    5. 'False' → logprob: -7.675930500030518
    6. '[-' → logprob: -8.17593002319336
    7. ' [' → logprob: -9.67593002319336
    8. '(' → logprob: -9.67593002319336
    9. '[int' → logprob: -9.67593002319336
    10. ' ' → logprob: -10.30093002319336

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0068464456126093864
    2. ']*(' → logprob: -5.2568464279174805
    3. ']*' → logprob: -6.6318464279174805
    4. ' for' → logprob: -8.38184642791748
    5. 'for' → logprob: -10.25684642791748
    6. ' ]' → logprob: -10.63184642791748
    7. ']+' → logprob: -12.50684642791748
    8. '   ' → logprob: -14.75684642791748
    9. ')' → logprob: -15.50684642791748
    10. '+' → logprob: -15.88184642791748

Token 66: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7137543559074402
    2. ' *' → logprob: -0.7137543559074402
    3. '*(' → logprob: -4.463754177093506
    4. '*[' → logprob: -5.838754177093506
    5. '+' → logprob: -6.213754177093506
    6. '*N' → logprob: -6.588754177093506
    7. '[N' → logprob: -6.963754177093506
    8. ']' → logprob: -7.338754177093506
    9. '[' → logprob: -8.338754653930664
    10. ' for' → logprob: -9.088754653930664

Token 67: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14847227931022644
    2. 'N' → logprob: -2.023472309112549
    3. ' (' → logprob: -5.898472309112549
    4. '(' → logprob: -5.898472309112549
    5. ' N' → logprob: -8.27347183227539
    6. '(n' → logprob: -11.52347183227539
    7. ' ' → logprob: -11.64847183227539
    8. '   ' → logprob: -12.52347183227539
    9. '	N' → logprob: -12.64847183227539
    10. '[N' → logprob: -13.27347183227539

Token 68: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020699729793705046
    2. ' N' → logprob: -8.50020694732666
    3. '(N' → logprob: -13.37520694732666
    4. '   ' → logprob: -13.62520694732666
    5. '	N' → logprob: -15.37520694732666
    6. '(' → logprob: -16.125207901000977
    7. '{' → logprob: -16.500207901000977
    8. ' ' → logprob: -16.625207901000977
    9. ')' → logprob: -17.125207901000977
    10. '  ' → logprob: -17.125207901000977

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002270635450258851
    2. ' +' → logprob: -6.127270698547363
    3. ')' → logprob: -9.377270698547363
    4. '+)' → logprob: -15.377270698547363
    5. '+
' → logprob: -15.502270698547363
    6. '1' → logprob: -15.752270698547363
    7. ' )' → logprob: -16.002269744873047
    8. '))' → logprob: -17.502269744873047
    9. ' ' → logprob: -17.627269744873047
    10. '＋' → logprob: -17.752269744873047

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016639928799122572
    2. ' ' → logprob: -6.501664161682129
    3. '2' → logprob: -8.751664161682129
    4. '   ' → logprob: -13.126664161682129
    5. '10' → logprob: -14.501664161682129
    6. '  ' → logprob: -14.626664161682129
    7. '7' → logprob: -15.876664161682129
    8. '5' → logprob: -16.001663208007812
    9. '3' → logprob: -16.251663208007812
    10. '100' → logprob: -16.501663208007812

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014931005716789514
    2. '2' → logprob: -9.125149726867676
    3. ' ' → logprob: -10.625149726867676
    4. '10' → logprob: -11.375149726867676
    5. '5' → logprob: -13.625149726867676
    6. '100' → logprob: -13.625149726867676
    7. '3' → logprob: -14.625149726867676
    8. '7' → logprob: -15.312649726867676
    9. '   ' → logprob: -15.437649726867676
    10. '50' → logprob: -15.500149726867676

Token 72: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -16.000003814697266
    4. '<|end|>' → logprob: -17.000003814697266
    5. '),' → logprob: -17.750003814697266
    6. ')

' → logprob: -18.000003814697266
    7. '}' → logprob: -18.500003814697266
    8. ')}' → logprob: -19.125003814697266
    9. '))' → logprob: -19.250003814697266
    10. '```' → logprob: -19.375003814697266

Token 73: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024335073248948902
    2. '
' → logprob: -9.375243186950684
    3. '<|end|>' → logprob: -10.000243186950684
    4. '

' → logprob: -10.250243186950684
    5. '```' → logprob: -10.250243186950684
    6. '\' → logprob: -11.250243186950684
    7. '<|end|>' → logprob: -11.375243186950684
    8. '#' → logprob: -12.375243186950684
    9. 'for' → logprob: -13.250243186950684
    10. 'N' → logprob: -13.625243186950684

Token 74: ' copy' (ID: 5150)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5448449850082397
    2. ' max' → logprob: -1.4198449850082397
    3. ' main' → logprob: -2.1698451042175293
    4. ' calculate' → logprob: -4.294845104217529
    5. ' compute' → logprob: -4.919845104217529
    6. ' dp' → logprob: -5.044845104217529
    7. ' process' → logprob: -5.419845104217529
    8. ' maximize' → logprob: -5.419845104217529
    9. ' dfs' → logprob: -5.794845104217529
    10. 'solve' → logprob: -6.169845104217529

Token 75: '_dp' (ID: 133252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2847326099872589
    2. '_array' → logprob: -1.4097325801849365
    3. '_list' → logprob: -6.784732818603516
    4. '_(' → logprob: -7.409732818603516
    5. '.deepcopy' → logprob: -8.159732818603516
    6. '_dp' → logprob: -8.159732818603516
    7. '_p' → logprob: -8.409732818603516
    8. '_copy' → logprob: -9.159732818603516
    9. '_arr' → logprob: -9.159732818603516
    10. '(' → logprob: -9.534732818603516

Token 76: '(dp' (ID: 68843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3368293046951294
    2. '(N' → logprob: -1.8368293046951294
    3. '(dp' → logprob: -2.21182918548584
    4. '(D' → logprob: -4.96182918548584
    5. '():' → logprob: -6.46182918548584
    6. '(arr' → logprob: -7.08682918548584
    7. '()' → logprob: -7.08682918548584
    8. ' (' → logprob: -7.46182918548584
    9. '_(' → logprob: -7.71182918548584
    10. '((' → logprob: -7.71182918548584

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023064350243657827
    2. ')' → logprob: -6.1273064613342285
    3. '):
' → logprob: -9.50230598449707
    4. ' ):' → logprob: -10.12730598449707
    5. '():' → logprob: -13.25230598449707
    6. ')：' → logprob: -14.00230598449707
    7. ')):' → logprob: -14.12730598449707
    8. '[]):' → logprob: -14.50230598449707
    9. '):
' → logprob: -14.62730598449707
    10. '):

' → logprob: -14.62730598449707

Token 78: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5810009837150574
    2. '   ' → logprob: -0.8310009837150574
    3. ' return' → logprob: -5.331000804901123
    4. '[:]' → logprob: -8.956001281738281
    5. '```' → logprob: -10.206001281738281
    6. 'dp' → logprob: -11.206001281738281
    7. '	return' → logprob: -11.706001281738281
    8. ':return' → logprob: -12.331001281738281
    9. 'def' → logprob: -12.706001281738281
    10. '{return' → logprob: -12.956001281738281

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13472265005111694
    2. 'dp' → logprob: -2.2597227096557617
    3. ' return' → logprob: -3.8847227096557617
    4. ' dp' → logprob: -7.134722709655762
    5. '   ' → logprob: -8.134722709655762
    6. '[:]' → logprob: -11.634722709655762
    7. 'import' → logprob: -13.259722709655762
    8. ' ' → logprob: -13.634722709655762
    9. '```' → logprob: -14.134722709655762
    10. '[' → logprob: -14.259722709655762

Token 80: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01817956008017063
    2. ' dp' → logprob: -4.018179416656494
    3. 'list' → logprob: -10.643179893493652
    4. '[' → logprob: -12.643179893493652
    5. ' list' → logprob: -13.518179893493652
    6. '	dp' → logprob: -14.643179893493652
    7. '(dp' → logprob: -15.018179893493652
    8. '[:]' → logprob: -16.018178939819336
    9. '   ' → logprob: -16.393178939819336
    10. '[]' → logprob: -16.893178939819336

Token 81: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.00021831797494087368
    2. '.copy' → logprob: -8.750218391418457
    3. '[:' → logprob: -9.750218391418457
    4. '[' → logprob: -13.500218391418457
    5. '[]' → logprob: -17.00021743774414
    6. 'copy' → logprob: -18.12521743774414
    7. '[::-' → logprob: -18.37521743774414
    8. '```' → logprob: -18.37521743774414
    9. '+' → logprob: -18.50021743774414
    10. '()' → logprob: -19.50021743774414

Token 82: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.1424973713001236e-05
    2. ')' → logprob: -11.250031471252441
    3. ' ]' → logprob: -11.375031471252441
    4. ']
' → logprob: -12.625031471252441
    5. ')]' → logprob: -13.625031471252441
    6. ']

' → logprob: -14.000031471252441
    7. '<|end|>' → logprob: -14.375031471252441
    8. '1' → logprob: -14.750031471252441
    9. '])' → logprob: -15.625031471252441
    10. ']()' → logprob: -15.625031471252441

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.848420551046729e-05
    2. '<|end|>' → logprob: -11.0000581741333
    3. '

' → logprob: -11.1250581741333
    4. '\' → logprob: -11.6250581741333
    5. '
' → logprob: -12.0000581741333
    6. '```' → logprob: -12.1250581741333
    7. ' def' → logprob: -12.8750581741333
    8. '<|end|>' → logprob: -13.5000581741333
    9. '[' → logprob: -15.1250581741333
    10. ' 

' → logprob: -15.2500581741333

Token 84: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.6159570217132568
    2. 'max' → logprob: -1.4909570217132568
    3. ' update' → logprob: -2.740957021713257
    4. ' max' → logprob: -3.365957021713257
    5. 'merge' → logprob: -3.490957021713257
    6. 'solve' → logprob: -3.740957021713257
    7. 'main' → logprob: -3.865957021713257
    8. 'calculate' → logprob: -4.615957260131836
    9. 'process' → logprob: -4.990957260131836
    10. 'combine' → logprob: -4.990957260131836

Token 85: '_left' (ID: 22189)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.005454193335026503
    2. '(dp' → logprob: -5.630454063415527
    3. '(' → logprob: -6.755454063415527
    4. '_' → logprob: -7.630454063415527
    5. '(_' → logprob: -10.130454063415527
    6. '_lp' → logprob: -10.505454063415527
    7. '```' → logprob: -11.130454063415527
    8. '_DP' → logprob: -11.130454063415527
    9. '_(' → logprob: -11.255454063415527
    10. 'dp' → logprob: -11.255454063415527

Token 86: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.26042404770851135
    2. '_dp' → logprob: -1.760424017906189
    3. '(' → logprob: -3.0104241371154785
    4. '(_' → logprob: -5.8854241371154785
    5. '_' → logprob: -6.7604241371154785
    6. 'dp' → logprob: -7.6354241371154785
    7. '(D' → logprob: -7.8854241371154785
    8. '_max' → logprob: -7.8854241371154785
    9. ' (' → logprob: -8.01042366027832
    10. '_left' → logprob: -8.13542366027832

Token 87: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009967254009097815
    2. ' ,' → logprob: -7.3759965896606445
    3. '):' → logprob: -9.500996589660645
    4. ',n' → logprob: -9.500996589660645
    5. ',new' → logprob: -9.875996589660645
    6. ',i' → logprob: -10.250996589660645
    7. ',j' → logprob: -11.375996589660645
    8. ',current' → logprob: -11.375996589660645
    9. ',index' → logprob: -11.375996589660645
    10. ',p' → logprob: -11.750996589660645

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000680265249684453
    2. ' ,' → logprob: -7.625680446624756
    3. '[' → logprob: -9.625679969787598
    4. ')' → logprob: -10.125679969787598
    5. ',i' → logprob: -11.500679969787598
    6. ',d' → logprob: -11.500679969787598
    7. ',n' → logprob: -11.875679969787598
    8. '   ' → logprob: -12.000679969787598
    9. ',j' → logprob: -12.000679969787598
    10. '[],' → logprob: -12.250679969787598

Token 89: ' l' (ID: 305)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.1292839050292969
    2. 'dp' → logprob: -2.004283905029297
    3. ' arr' → logprob: -2.129283905029297
    4. ' a' → logprob: -2.504283905029297
    5. ' A' → logprob: -2.629283905029297
    6. 'arr' → logprob: -2.879283905029297
    7. 'a' → logprob: -3.129283905029297
    8. 'A' → logprob: -3.379283905029297
    9. ' i' → logprob: -3.629283905029297
    10. 'i' → logprob: -4.129283905029297

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058465711772441864
    2. 'eft' → logprob: -3.4334657192230225
    3. ' ,' → logprob: -4.308465480804443
    4. '):' → logprob: -5.808465480804443
    5. '+' → logprob: -6.558465480804443
    6. '-' → logprob: -6.808465480804443
    7. 'ef' → logprob: -6.933465480804443
    8. ')' → logprob: -6.933465480804443
    9. '_idx' → logprob: -7.433465480804443
    10. 'e' → logprob: -7.808465480804443

Token 91: ' dp' (ID: 21546)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5309972167015076
    2. 'r' → logprob: -1.0309972763061523
    3. ' val' → logprob: -4.530997276306152
    4. ' v' → logprob: -4.655997276306152
    5. 'v' → logprob: -4.780997276306152
    6. ' dp' → logprob: -5.655997276306152
    7. 'dp' → logprob: -5.780997276306152
    8. ' value' → logprob: -5.780997276306152
    9. 'val' → logprob: -6.030997276306152
    10. ' ' → logprob: -6.280997276306152

Token 92: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5636140704154968
    2. '2' → logprob: -1.3136141300201416
    3. '1' → logprob: -2.0636141300201416
    4. ',' → logprob: -3.9386141300201416
    5. '[' → logprob: -4.9386138916015625
    6. ')' → logprob: -5.4386138916015625
    7. '):
' → logprob: -6.8136138916015625
    8. 's' → logprob: -7.5636138916015625
    9. '[]):' → logprob: -7.9386138916015625
    10. ' ):' → logprob: -8.063613891601562

Token 93: ' pos' (ID: 1253)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5109521150588989
    2. 'r' → logprob: -1.260952115058899
    3. ' N' → logprob: -4.260951995849609
    4. ' a' → logprob: -4.510951995849609
    5. ' A' → logprob: -4.635951995849609
    6. ' val' → logprob: -4.885951995849609
    7. 'a' → logprob: -4.885951995849609
    8. ' i' → logprob: -5.010951995849609
    9. 'i' → logprob: -5.135951995849609
    10. 'N' → logprob: -5.135951995849609

Token 94: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07329614460468292
    2. ',' → logprob: -2.823296070098877
    3. ')' → logprob: -5.323296070098877
    4. '+' → logprob: -6.448296070098877
    5. '):
' → logprob: -6.448296070098877
    6. ' ):' → logprob: -6.948296070098877
    7. '-' → logprob: -7.323296070098877
    8. 's' → logprob: -7.448296070098877
    9. '=' → logprob: -8.198296546936035
    10. ' ,' → logprob: -8.698296546936035

Token 95: ' a' (ID: 261)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7233203649520874
    2. ' value' → logprob: -2.473320484161377
    3. 'val' → logprob: -2.848320484161377
    4. ' A' → logprob: -3.348320484161377
    5. ' r' → logprob: -3.348320484161377
    6. ' a' → logprob: -3.473320484161377
    7. ' v' → logprob: -3.973320484161377
    8. 'value' → logprob: -4.098320484161377
    9. ' x' → logprob: -4.223320484161377
    10. 'A' → logprob: -4.223320484161377

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06403481215238571
    2. ',' → logprob: -3.4390347003936768
    3. 'l' → logprob: -4.189034938812256
    4. '):
' → logprob: -4.564034938812256
    5. ' ):' → logprob: -6.564034938812256
    6. 's' → logprob: -7.189034938812256
    7. ')' → logprob: -7.314034938812256
    8. '):

' → logprob: -8.439034461975098
    9. '=' → logprob: -8.689034461975098
    10. 'a' → logprob: -8.814034461975098

Token 97: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21228620409965515
    2. '   ' → logprob: -1.8372862339019775
    3. '):' → logprob: -4.837285995483398
    4. ' ' → logprob: -5.337285995483398
    5. ' :' → logprob: -5.462285995483398
    6. ':
' → logprob: -5.712285995483398
    7. ' if' → logprob: -5.962285995483398
    8. ' for' → logprob: -6.712285995483398
    9. ')' → logprob: -6.837285995483398
    10. ',' → logprob: -6.962285995483398

Token 98: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41825488209724426
    2. ' for' → logprob: -1.7932548522949219
    3. ' if' → logprob: -2.668254852294922
    4. 'for' → logprob: -2.793254852294922
    5. 'if' → logprob: -3.793254852294922
    6. '    ' → logprob: -4.668254852294922
    7. ':' → logprob: -5.293254852294922
    8. '
' → logprob: -6.543254852294922
    9. ' ' → logprob: -6.793254852294922
    10. '    
' → logprob: -6.793254852294922

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013361937599256635
    2. '[' → logprob: -6.751336097717285
    3. '[pos' → logprob: -9.626336097717285
    4. ' =' → logprob: -10.376336097717285
    5. '[l' → logprob: -10.876336097717285
    6. '   ' → logprob: -11.376336097717285
    7. ' [' → logprob: -12.126336097717285
    8. ' ' → logprob: -12.126336097717285
    9. '[i' → logprob: -12.501336097717285
    10. '=' → logprob: -12.751336097717285

Token 100: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.1647038608789444
    2. '[' → logprob: -2.414703845977783
    3. '[pos' → logprob: -2.789703845977783
    4. ' [' → logprob: -8.289704322814941
    5. '[:]' → logprob: -8.414704322814941
    6. ' =' → logprob: -8.789704322814941
    7. '[a' → logprob: -9.914704322814941
    8. '=' → logprob: -10.164704322814941
    9. '[p' → logprob: -10.539704322814941
    10. '[:' → logprob: -10.789704322814941

Token 101: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048038288950920105
    2. '+' → logprob: -3.4230382442474365
    3. '-' → logprob: -5.673038482666016
    4. ']=' → logprob: -5.923038482666016
    5. ' +' → logprob: -5.923038482666016
    6. ']+=' → logprob: -6.548038482666016
    7. ' -' → logprob: -6.923038482666016
    8. ' ]' → logprob: -6.923038482666016
    9. '[' → logprob: -7.298038482666016
    10. ']+' → logprob: -7.923038482666016

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08990897238254547
    2. 'a' → logprob: -2.714909076690674
    3. 'pos' → logprob: -3.964909076690674
    4. ' ' → logprob: -8.714908599853516
    5. ' pos' → logprob: -8.839908599853516
    6. ' a' → logprob: -8.839908599853516
    7. '[pos' → logprob: -8.964908599853516
    8. '   ' → logprob: -9.214908599853516
    9. '0' → logprob: -9.839908599853516
    10. ']' → logprob: -10.964908599853516

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020115291699767113
    2. 'a' → logprob: -4.145115375518799
    3. 'pos' → logprob: -5.645115375518799
    4. '[pos' → logprob: -8.39511489868164
    5. '[' → logprob: -8.77011489868164
    6. '[a' → logprob: -9.27011489868164
    7. '0' → logprob: -10.39511489868164
    8. ']' → logprob: -12.02011489868164
    9. '   ' → logprob: -12.14511489868164
    10. ' ' → logprob: -12.27011489868164

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010115911572938785
    2. ']=' → logprob: -10.000101089477539
    3. ' ]' → logprob: -10.000101089477539
    4. ']+=' → logprob: -12.000101089477539
    5. '[' → logprob: -13.000101089477539
    6. '`]' → logprob: -14.875101089477539
    7. '[l' → logprob: -15.375101089477539
    8. '][' → logprob: -15.625101089477539
    9. '=' → logprob: -16.12510108947754
    10. '```' → logprob: -16.12510108947754

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2530091106891632
    2. '=' → logprob: -1.5030090808868408
    3. ' +=' → logprob: -7.37800931930542
    4. '+=' → logprob: -8.128008842468262
    5. '[' → logprob: -9.753008842468262
    6. ']' → logprob: -10.503008842468262
    7. '=max' → logprob: -11.128008842468262
    8. '>' → logprob: -11.503008842468262
    9. '>=' → logprob: -11.503008842468262
    10. ' ' → logprob: -11.753008842468262

Token 106: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009786196984350681
    2. ' max' → logprob: -4.759786128997803
    3. 'dp' → logprob: -6.759786128997803
    4. 'a' → logprob: -12.384786605834961
    5. ' dp' → logprob: -12.384786605834961
    6. '   ' → logprob: -14.384786605834961
    7. 'min' → logprob: -14.509786605834961
    8. '	max' → logprob: -14.509786605834961
    9. '(max' → logprob: -14.759786605834961
    10. 'pos' → logprob: -15.009786605834961

Token 107: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0007152927573770285
    2. '(' → logprob: -7.250715255737305
    3. 'dp' → logprob: -12.500715255737305
    4. ' (' → logprob: -14.500715255737305
    5. '(
' → logprob: -14.750715255737305
    6. ' dp' → logprob: -15.625715255737305
    7. '	dp' → logprob: -16.000715255737305
    8. '(

' → logprob: -16.625715255737305
    9. '(d' → logprob: -16.750715255737305
    10. '_dp' → logprob: -17.000715255737305

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005831979680806398
    2. '[l' → logprob: -5.380832195281982
    3. '[pos' → logprob: -6.880832195281982
    4. '[' → logprob: -9.755831718444824
    5. '   ' → logprob: -11.005831718444824
    6. ']' → logprob: -11.130831718444824
    7. '][' → logprob: -11.380831718444824
    8. ')' → logprob: -11.630831718444824
    9. '```' → logprob: -11.630831718444824
    10. '[left' → logprob: -11.880831718444824

Token 109: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0005812693270854652
    2. '[' → logprob: -7.87558126449585
    3. 'l' → logprob: -8.875581741333008
    4. ' [' → logprob: -10.625581741333008
    5. '	l' → logprob: -12.125581741333008
    6. '[
' → logprob: -12.250581741333008
    7. '(l' → logprob: -12.250581741333008
    8. '   ' → logprob: -12.375581741333008
    9. ' l' → logprob: -12.375581741333008
    10. ')[' → logprob: -13.500581741333008

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1221127063035965
    2. ' +' → logprob: -2.24711275100708
    3. ']' → logprob: -4.74711275100708
    4. '],' → logprob: -8.372112274169922
    5. ']+' → logprob: -8.997112274169922
    6. '+l' → logprob: -9.372112274169922
    7. '   ' → logprob: -9.622112274169922
    8. ' ]' → logprob: -11.497112274169922
    9. '1' → logprob: -11.872112274169922
    10. 'l' → logprob: -12.122112274169922

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041625293670222163
    2. ' ' → logprob: -7.875416278839111
    3. '0' → logprob: -10.750415802001953
    4. '   ' → logprob: -11.750415802001953
    5. '
' → logprob: -13.500415802001953
    6. '```' → logprob: -14.000415802001953
    7. 'l' → logprob: -14.125415802001953
    8. '2' → logprob: -14.312915802001953
    9. '  ' → logprob: -14.625415802001953
    10. '[' → logprob: -15.125415802001953

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.742448022123426e-05
    2. 'a' → logprob: -10.875067710876465
    3. 'pos' → logprob: -10.875067710876465
    4. '0' → logprob: -11.250067710876465
    5. 'l' → logprob: -11.750067710876465
    6. ' ' → logprob: -12.375067710876465
    7. '[pos' → logprob: -13.625067710876465
    8. ']' → logprob: -14.375067710876465
    9. 'dp' → logprob: -14.375067710876465
    10. '   ' → logprob: -14.875067710876465

Token 113: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.10127081722021103
    2. ',' → logprob: -2.351270914077759
    3. ' ,' → logprob: -7.60127067565918
    4. ' ],' → logprob: -7.85127067565918
    5. ']' → logprob: -8.97627067565918
    6. '   ' → logprob: -11.35127067565918
    7. '],
' → logprob: -11.35127067565918
    8. '),' → logprob: -11.47627067565918
    9. 'dp' → logprob: -12.72627067565918
    10. '>,' → logprob: -12.97627067565918

Token 114: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34850355982780457
    2. ' dp' → logprob: -1.223503589630127
    3. '   ' → logprob: -10.348503112792969
    4. ' ' → logprob: -11.598503112792969
    5. '	dp' → logprob: -11.598503112792969
    6. '(dp' → logprob: -12.598503112792969
    7. 'd' → logprob: -13.848503112792969
    8. '  ' → logprob: -13.973503112792969
    9. '    ' → logprob: -14.598503112792969
    10. '_dp' → logprob: -14.723503112792969

Token 115: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.043829116970300674
    2. '[pos' → logprob: -3.1688292026519775
    3. 'pos' → logprob: -7.793828964233398
    4. 'l' → logprob: -8.043828964233398
    5. '[' → logprob: -9.418828964233398
    6. ' l' → logprob: -12.668828964233398
    7. ' [' → logprob: -13.168828964233398
    8. '	l' → logprob: -13.293828964233398
    9. '[left' → logprob: -13.293828964233398
    10. '[position' → logprob: -14.043828964233398

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026991849881596863
    2. ']+' → logprob: -8.500269889831543
    3. ' ]' → logprob: -9.750269889831543
    4. '[' → logprob: -12.750269889831543
    5. '])' → logprob: -13.375269889831543
    6. '']' → logprob: -13.750269889831543
    7. '-' → logprob: -14.750269889831543
    8. 's' → logprob: -15.000269889831543
    9. '   ' → logprob: -15.125269889831543
    10. '[l' → logprob: -15.125269889831543

Token 117: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3135053217411041
    2. '+' → logprob: -1.3135052919387817
    3. '+a' → logprob: -8.688505172729492
    4. ' ' → logprob: -10.813505172729492
    5. ' plus' → logprob: -10.938505172729492
    6. ')' → logprob: -10.938505172729492
    7. 'a' → logprob: -12.313505172729492
    8. 'plus' → logprob: -13.063505172729492
    9. ' ' → logprob: -13.813505172729492
    10. ')+' → logprob: -13.813505172729492

Token 118: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08123117685317993
    2. ' a' → logprob: -2.581231117248535
    3. 'pos' → logprob: -6.206231117248535
    4. ' pos' → logprob: -8.206231117248535
    5. '   ' → logprob: -11.456231117248535
    6. ' (' → logprob: -12.081231117248535
    7. '(pos' → logprob: -12.206231117248535
    8. '(a' → logprob: -12.331231117248535
    9. ' ' → logprob: -12.331231117248535
    10. ' ' → logprob: -12.706231117248535

Token 119: 'pos' (ID: 1103)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06447838991880417
    2. 'pos' → logprob: -3.1894783973693848
    3. ' a' → logprob: -3.9394783973693848
    4. ' pos' → logprob: -7.314478397369385
    5. '(a' → logprob: -8.064477920532227
    6. ' (' → logprob: -8.564477920532227
    7. ')' → logprob: -9.439477920532227
    8. '(pos' → logprob: -9.439477920532227
    9. 'l' → logprob: -9.564477920532227
    10. '1' → logprob: -9.689477920532227

Token 120: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5776388645172119
    2. ' +' → logprob: -1.827638864517212
    3. '*' → logprob: -2.077638864517212
    4. ' *' → logprob: -2.202638864517212
    5. '!=' → logprob: -4.827638626098633
    6. ' -' → logprob: -4.952638626098633
    7. '-' → logprob: -5.202638626098633
    8. '==' → logprob: -5.327638626098633
    9. ')' → logprob: -5.327638626098633
    10. '>=' → logprob: -5.952638626098633

Token 121: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.057133451104164124
    2. ' a' → logprob: -2.932133436203003
    3. '1' → logprob: -6.182133674621582
    4. ' ' → logprob: -9.182133674621582
    5. 'l' → logprob: -10.182133674621582
    6. ' l' → logprob: -10.932133674621582
    7. '0' → logprob: -11.432133674621582
    8. '(a' → logprob: -12.057133674621582
    9. ' (' → logprob: -12.932133674621582
    10. '	a' → logprob: -14.057133674621582

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00904905702918768
    2. '+' → logprob: -5.009048938751221
    3. ' +' → logprob: -6.509048938751221
    4. ')*' → logprob: -7.509048938751221
    5. '*' → logprob: -9.009049415588379
    6. '-' → logprob: -10.009049415588379
    7. ' )' → logprob: -10.009049415588379
    8. 'a' → logprob: -10.509049415588379
    9. ' -' → logprob: -10.884049415588379
    10. '1' → logprob: -11.384049415588379

Token 123: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.683752179145813
    2. ')' → logprob: -1.308752179145813
    3. ' *' → logprob: -1.558752179145813
    4. ')*' → logprob: -4.308752059936523
    5. '+' → logprob: -7.683752059936523
    6. '*a' → logprob: -8.183752059936523
    7. ' )' → logprob: -8.433752059936523
    8. ' ' → logprob: -8.683752059936523
    9. ' +' → logprob: -10.058752059936523
    10. '>' → logprob: -10.433752059936523

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28115639090538025
    2. ' a' → logprob: -1.4061564207077026
    3. ' ' → logprob: -12.531156539916992
    4. '	a' → logprob: -14.156156539916992
    5. ' ' → logprob: -14.406156539916992
    6. '   ' → logprob: -15.406156539916992
    7. ''a' → logprob: -15.656156539916992
    8. '(a' → logprob: -15.906156539916992
    9. ')a' → logprob: -15.906156539916992
    10. '*a' → logprob: -16.031156539916992

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000386105413781479
    2. '))' → logprob: -7.8753862380981445
    3. ' )' → logprob: -12.625386238098145
    4. ')
' → logprob: -13.875386238098145
    5. ')))' → logprob: -14.125386238098145
    6. '   ' → logprob: -14.625386238098145
    7. ')}' → logprob: -15.875386238098145
    8. ' ' → logprob: -16.250385284423828
    9. ')`' → logprob: -16.375385284423828
    10. '})' → logprob: -16.625385284423828

Token 126: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.04799284785985947
    2. 'update' → logprob: -3.1729929447174072
    3. 'def' → logprob: -5.547992706298828
    4. ' def' → logprob: -6.922992706298828
    5. ' main' → logprob: -11.047992706298828
    6. ' ' → logprob: -11.297992706298828
    7. ' write' → logprob: -11.422992706298828
    8. '_update' → logprob: -11.547992706298828
    9. ' sort' → logprob: -12.672992706298828
    10. ' define' → logprob: -12.797992706298828

Token 128: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.011076001450419426
    2. '_left' → logprob: -4.511075973510742
    3. '_r' → logprob: -11.511075973510742
    4. '_middle' → logprob: -12.511075973510742
    5. '_rhs' → logprob: -13.011075973510742
    6. '_center' → logprob: -13.136075973510742
    7. '_bottom' → logprob: -13.261075973510742
    8. '_' → logprob: -13.761075973510742
    9. '_top' → logprob: -14.011075973510742
    10. '_down' → logprob: -14.261075973510742

Token 129: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.625014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(def' → logprob: -15.125014305114746
    5. '(d' → logprob: -15.250014305114746
    6. '(df' → logprob: -16.250015258789062
    7. '_dp' → logprob: -16.375015258789062
    8. '(ds' → logprob: -16.500015258789062
    9. ' dp' → logprob: -16.500015258789062
    10. '(dt' → logprob: -16.625015258789062

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03031616099178791
    2. ',' → logprob: -3.530316114425659
    3. '_,' → logprob: -7.905316352844238
    4. ' ,' → logprob: -9.655316352844238
    5. ',_' → logprob: -10.155316352844238
    6. '```' → logprob: -11.030316352844238
    7. ',
' → logprob: -11.405316352844238
    8. '_' → logprob: -11.780316352844238
    9. '),' → logprob: -12.030316352844238
    10. ')' → logprob: -12.155316352844238

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002812391903717071
    2. ' ,' → logprob: -8.25028133392334
    3. ',l' → logprob: -11.00028133392334
    4. ',
' → logprob: -14.00028133392334
    5. ',d' → logprob: -14.25028133392334
    6. ')' → logprob: -15.25028133392334
    7. ' ' → logprob: -15.75028133392334
    8. '   ' → logprob: -16.250280380249023
    9. ',p' → logprob: -16.375280380249023
    10. ',n' → logprob: -16.375280380249023

Token 132: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6085339784622192
    2. 'l' → logprob: -1.3585339784622192
    3. ' r' → logprob: -1.9835339784622192
    4. ' l' → logprob: -2.8585338592529297
    5. 'N' → logprob: -6.48353385925293
    6. ' N' → logprob: -6.73353385925293
    7. ')' → logprob: -8.23353385925293
    8. 'len' → logprob: -8.60853385925293
    9. 'a' → logprob: -9.17103385925293
    10. ' ' → logprob: -9.29603385925293

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001491411472670734
    2. ' ,' → logprob: -6.876491546630859
    3. '+' → logprob: -8.00149154663086
    4. ' +' → logprob: -9.25149154663086
    5. '   ' → logprob: -11.37649154663086
    6. '+,' → logprob: -12.62649154663086
    7. ',pos' → logprob: -13.37649154663086
    8. ',l' → logprob: -13.37649154663086
    9. '-' → logprob: -13.62649154663086
    10. ' ' → logprob: -14.00149154663086

Token 134: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46404772996902466
    2. 'r' → logprob: -1.7140476703643799
    3. ' dp' → logprob: -1.8390476703643799
    4. ' r' → logprob: -3.58904767036438
    5. 'l' → logprob: -5.964047908782959
    6. 'N' → logprob: -7.339047908782959
    7. ' l' → logprob: -7.964047908782959
    8. ' N' → logprob: -8.7140474319458
    9. 'len' → logprob: -8.9640474319458
    10. 'n' → logprob: -9.0890474319458

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005096645909361541
    2. '2' → logprob: -8.125509262084961
    3. ' ,' → logprob: -8.500509262084961
    4. ',pos' → logprob: -11.875509262084961
    5. '_,' → logprob: -14.625509262084961
    6. 's' → logprob: -14.625509262084961
    7. '[],' → logprob: -14.750509262084961
    8. '[' → logprob: -15.125509262084961
    9. '```' → logprob: -15.250509262084961
    10. ')' → logprob: -16.00050926208496

Token 136: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6091299057006836
    2. ' pos' → logprob: -1.6091299057006836
    3. 'N' → logprob: -2.2341299057006836
    4. ' N' → logprob: -2.6091299057006836
    5. 'len' → logprob: -3.3591299057006836
    6. ' len' → logprob: -3.9841299057006836
    7. 'l' → logprob: -4.484129905700684
    8. ' l' → logprob: -4.984129905700684
    9. '   ' → logprob: -6.359129905700684
    10. '(N' → logprob: -7.859129905700684

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008920480031520128
    2. ' ,' → logprob: -7.125892162322998
    3. '+' → logprob: -10.50089168548584
    4. ',a' → logprob: -10.75089168548584
    5. '   ' → logprob: -11.12589168548584
    6. '+,' → logprob: -12.62589168548584
    7. ' +' → logprob: -12.75089168548584
    8. ',pos' → logprob: -12.87589168548584
    9. ',
' → logprob: -13.37589168548584
    10. 'a' → logprob: -13.50089168548584

Token 138: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6330114603042603
    2. ' a' → logprob: -0.7580114603042603
    3. ' ' → logprob: -8.883011817932129
    4. ' -' → logprob: -9.883011817932129
    5. '   ' → logprob: -10.133011817932129
    6. '-a' → logprob: -10.383011817932129
    7. 'b' → logprob: -10.695511817932129
    8. '-' → logprob: -11.195511817932129
    9. '    ' → logprob: -11.320511817932129
    10. ')' → logprob: -11.320511817932129

Token 139: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048617683351039886
    2. '):
' → logprob: -3.0486176013946533
    3. '   ' → logprob: -10.923617362976074
    4. '):
' → logprob: -12.048617362976074
    5. ')' → logprob: -12.923617362976074
    6. ':' → logprob: -13.298617362976074
    7. '):

' → logprob: -13.923617362976074
    8. ' ):' → logprob: -14.548617362976074
    9. ',' → logprob: -14.798617362976074
    10. ' ' → logprob: -16.42361831665039

Token 140: ' N' (ID: 478)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2481833696365356
    2. ' r' → logprob: -1.2481833696365356
    3. ' N' → logprob: -1.6231833696365356
    4. 'N' → logprob: -1.6231833696365356
    5. 'n' → logprob: -5.623183250427246
    6. '   ' → logprob: -5.873183250427246
    7. ' n' → logprob: -5.873183250427246
    8. ' ' → logprob: -6.123183250427246
    9. ' pos' → logprob: -6.123183250427246
    10. ' length' → logprob: -6.248183250427246

Token 141: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004652861040085554
    2. '):
' → logprob: -5.379652976989746
    3. ')' → logprob: -11.129652976989746
    4. ' ):' → logprob: -11.129652976989746
    5. '):

' → logprob: -13.879652976989746
    6. '):
' → logprob: -13.879652976989746
    7. '   ' → logprob: -14.004652976989746
    8. ':' → logprob: -15.254652976989746
    9. ',' → logprob: -15.629652976989746
    10. ' ' → logprob: -16.62965202331543

Token 142: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7817798852920532
    2. ' r' → logprob: -2.6567797660827637
    3. ')' → logprob: -2.7817797660827637
    4. '):' → logprob: -3.0317797660827637
    5. 'R' → logprob: -3.2817797660827637
    6. 'dp' → logprob: -3.5317797660827637
    7. 'right' → logprob: -3.7817797660827637
    8. ' right' → logprob: -4.094279766082764
    9. 'pos' → logprob: -4.094279766082764
    10. 'k' → logprob: -4.344279766082764

Token 143: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1206574440002441
    2. 'nd' → logprob: -1.4956574440002441
    3. 'x' → logprob: -1.6206574440002441
    4. 'dx' → logprob: -2.370657444000244
    5. '):' → logprob: -2.495657444000244
    6. 'd' → logprob: -3.495657444000244
    7. 'ex' → logprob: -3.745657444000244
    8. 'dex' → logprob: -4.245657444000244
    9. 'n' → logprob: -5.495657444000244
    10. 'f' → logprob: -7.745657444000244

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08301012963056564
    2. 'dp' → logprob: -2.833010196685791
    3. 'if' → logprob: -4.333010196685791
    4. ' if' → logprob: -5.583010196685791
    5. 'for' → logprob: -6.208010196685791
    6. ' dp' → logprob: -6.708010196685791
    7. ' for' → logprob: -7.708010196685791
    8. '	dp' → logprob: -9.583009719848633
    9. '```' → logprob: -9.833009719848633
    10. '   ' → logprob: -9.833009719848633

Token 145: ' r' (ID: 428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31494906544685364
    2. 'if' → logprob: -1.5649490356445312
    3. 'for' → logprob: -2.9399490356445312
    4. '   ' → logprob: -6.439949035644531
    5. 'distance' → logprob: -6.939949035644531
    6. 'offset' → logprob: -7.189949035644531
    7. ' if' → logprob: -7.189949035644531
    8. ' dp' → logprob: -7.439949035644531
    9. 'while' → logprob: -7.939949035644531
    10. 'j' → logprob: -8.189949035644531

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11721515655517578
    2. 'ight' → logprob: -2.367215156555176
    3. '=' → logprob: -4.867215156555176
    4. '_pos' → logprob: -6.242215156555176
    5. 'ange' → logprob: -6.742215156555176
    6. 'ef' → logprob: -6.742215156555176
    7. 'eft' → logprob: -6.867215156555176
    8. '_' → logprob: -7.367215156555176
    9. 'p' → logprob: -8.117215156555176
    10. '   ' → logprob: -8.117215156555176

Token 147: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012267221696674824
    2. 'pos' → logprob: -5.137267112731934
    3. ' N' → logprob: -5.387267112731934
    4. 'i' → logprob: -7.012267112731934
    5. '(N' → logprob: -8.012267112731934
    6. ' ' → logprob: -9.137267112731934
    7. 'max' → logprob: -9.137267112731934
    8. ' pos' → logprob: -10.137267112731934
    9. ' (' → logprob: -10.137267112731934
    10. 'l' → logprob: -10.137267112731934

Token 148: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5211464166641235
    2. '-' → logprob: -1.1461464166641235
    3. ' -' → logprob: -2.646146297454834
    4. ' +' → logprob: -4.146146297454834
    5. '-l' → logprob: -7.021146297454834
    6. '+l' → logprob: -7.646146297454834
    7. '-N' → logprob: -9.271146774291992
    8. '-n' → logprob: -10.896146774291992
    9. ' ' → logprob: -11.271146774291992
    10. '<|end|>' → logprob: -11.771146774291992

Token 149: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.058021146804094315
    2. 'pos' → logprob: -3.933021068572998
    3. '1' → logprob: -4.183021068572998
    4. '(N' → logprob: -4.808021068572998
    5. '(l' → logprob: -4.933021068572998
    6. '(' → logprob: -5.683021068572998
    7. '(pos' → logprob: -6.308021068572998
    8. ' (' → logprob: -7.683021068572998
    9. ' l' → logprob: -8.808021545410156
    10. 'N' → logprob: -9.558021545410156

Token 150: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01856052689254284
    2. '+' → logprob: -4.518560409545898
    3. ' +' → logprob: -5.768560409545898
    4. ' if' → logprob: -6.643560409545898
    5. 'dp' → logprob: -6.893560409545898
    6. 'def' → logprob: -7.518560409545898
    7. 'if' → logprob: -7.768560409545898
    8. '<|end|>' → logprob: -8.643560409545898
    9. '   ' → logprob: -8.768560409545898
    10. ' 
' → logprob: -9.018560409545898

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7083601951599121
    2. 'pos' → logprob: -0.7083601951599121
    3. 'N' → logprob: -4.958360195159912
    4. '(pos' → logprob: -5.333360195159912
    5. '(N' → logprob: -6.083360195159912
    6. ' pos' → logprob: -7.708360195159912
    7. ' ' → logprob: -8.58336067199707
    8. ' (' → logprob: -9.58336067199707
    9. '(' → logprob: -10.08336067199707
    10. ' N' → logprob: -10.20836067199707

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038849301636219025
    2. 'pos' → logprob: -3.288849353790283
    3. '(pos' → logprob: -7.663849353790283
    4. '(N' → logprob: -9.163848876953125
    5. ' ' → logprob: -9.288848876953125
    6. 'N' → logprob: -10.163848876953125
    7. ' pos' → logprob: -10.413848876953125
    8. '0' → logprob: -10.913848876953125
    9. '[pos' → logprob: -11.538848876953125
    10. '(' → logprob: -11.663848876953125

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054969850927591324
    2. '   ' → logprob: -3.0549697875976562
    3. 'dp' → logprob: -5.679969787597656
    4. 'def' → logprob: -7.054969787597656
    5. ' if' → logprob: -7.679969787597656
    6. ')' → logprob: -8.429969787597656
    7. '  
' → logprob: -8.679969787597656
    8. ' 
' → logprob: -8.679969787597656
    9. '
' → logprob: -8.679969787597656
    10. ')
' → logprob: -9.054969787597656

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11484720557928085
    2. '   ' → logprob: -2.864847183227539
    3. 'dp' → logprob: -3.364847183227539
    4. 'if' → logprob: -4.614847183227539
    5. ' if' → logprob: -5.364847183227539
    6. ' dp' → logprob: -6.989847183227539
    7. '	dp' → logprob: -8.239847183227539
    8. '    
' → logprob: -8.489847183227539
    9. '
' → logprob: -9.239847183227539
    10. '(dp' → logprob: -9.364847183227539

Token 155: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.009902349673211575
    2. 'if' → logprob: -4.884902477264404
    3. ' dp' → logprob: -6.634902477264404
    4. '
' → logprob: -7.384902477264404
    5. ' if' → logprob: -8.759902000427246
    6. '   ' → logprob: -9.009902000427246
    7. 'for' → logprob: -10.759902000427246
    8. '	dp' → logprob: -11.634902000427246
    9. ' ' → logprob: -12.009902000427246
    10. '(dp' → logprob: -12.009902000427246

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.625001907348633
    3. '```' → logprob: -14.750001907348633
    4. '[r' → logprob: -15.875001907348633
    5. 'r' → logprob: -16.562501907348633
    6. ' ' → logprob: -17.312501907348633
    7. '₂' → logprob: -17.312501907348633
    8. 'def' → logprob: -17.375001907348633
    9. '_' → logprob: -17.687501907348633
    10. 's' → logprob: -18.000001907348633

Token 157: '[l' (ID: 38286)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00019471932318992913
    2. '[l' → logprob: -8.875194549560547
    3. '[' → logprob: -9.875194549560547
    4. ' [' → logprob: -12.875194549560547
    5. 'r' → logprob: -15.500194549560547
    6. '(r' → logprob: -16.000194549560547
    7. '[s' → logprob: -16.250194549560547
    8. '[right' → logprob: -16.375194549560547
    9. ' r' → logprob: -17.125194549560547
    10. '[m' → logprob: -17.375194549560547

Token 158: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37655454874038696
    2. ']' → logprob: -1.3765544891357422
    3. ' +' → logprob: -3.126554489135742
    4. '-' → logprob: -4.251554489135742
    5. '+r' → logprob: -6.876554489135742
    6. ' -' → logprob: -7.126554489135742
    7. '[r' → logprob: -7.626554489135742
    8. 'r' → logprob: -8.126554489135742
    9. '   ' → logprob: -8.751554489135742
    10. '[' → logprob: -8.876554489135742

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019194437190890312
    2. ' =' → logprob: -4.519194602966309
    3. '[r' → logprob: -5.019194602966309
    4. '[' → logprob: -7.519194602966309
    5. ']' → logprob: -7.769194602966309
    6. '   ' → logprob: -8.269194602966309
    7. '[l' → logprob: -8.894194602966309
    8. '+' → logprob: -10.394194602966309
    9. ']=' → logprob: -11.019194602966309
    10. '       ' → logprob: -11.144194602966309

Token 160: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006715370807796717
    2. ' max' → logprob: -5.006715297698975
    3. '	max' → logprob: -17.881715774536133
    4. '   ' → logprob: -18.256715774536133
    5. '  ' → logprob: -20.256715774536133
    6. ' ' → logprob: -20.381715774536133
    7. '[max' → logprob: -20.881715774536133
    8. '(max' → logprob: -21.131715774536133
    9. '_max' → logprob: -22.006715774536133
    10. '=max' → logprob: -22.131715774536133

Token 161: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.375000953674316
    3. 'dp' → logprob: -15.500000953674316
    4. '(
' → logprob: -16.875
    5. '(d' → logprob: -18.5
    6. '	dp' → logprob: -19.0
    7. '(max' → logprob: -19.875
    8. '(df' → logprob: -20.25
    9. '(dm' → logprob: -20.75
    10. ' (' → logprob: -21.125

Token 162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2233183042553719e-05
    2. 'dp' → logprob: -12.625012397766113
    3. '[' → logprob: -12.875012397766113
    4. '```' → logprob: -12.875012397766113
    5. '[l' → logprob: -14.312512397766113
    6. '[r' → logprob: -14.812512397766113
    7. '
' → logprob: -15.000012397766113
    8. '   ' → logprob: -15.375012397766113
    9. 's' → logprob: -15.625012397766113
    10. ' ' → logprob: -15.625012397766113

Token 163: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.945094355614856e-05
    2. '[' → logprob: -10.250069618225098
    3. 'l' → logprob: -10.625069618225098
    4. '(l' → logprob: -12.500069618225098
    5. '[r' → logprob: -12.625069618225098
    6. '[
' → logprob: -14.125069618225098
    7. '```' → logprob: -14.875069618225098
    8. ',l' → logprob: -15.000069618225098
    9. '	l' → logprob: -15.625069618225098
    10. '[i' → logprob: -15.625069618225098

Token 164: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.14560212194919586
    2. ']' → logprob: -2.020602226257324
    3. '[l' → logprob: -6.770602226257324
    4. '+' → logprob: -7.145602226257324
    5. '[r' → logprob: -8.395602226257324
    6. ' ],' → logprob: -8.645602226257324
    7. '-' → logprob: -9.020602226257324
    8. ']+' → logprob: -9.395602226257324
    9. ' +' → logprob: -9.645602226257324
    10. 'l' → logprob: -9.770602226257324

Token 165: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.02646668627858162
    2. 'dp' → logprob: -3.6514666080474854
    3. ' max' → logprob: -9.276466369628906
    4. '(dp' → logprob: -10.776466369628906
    5. ' ' → logprob: -11.151466369628906
    6. 'max' → logprob: -11.651466369628906
    7. '	dp' → logprob: -12.276466369628906
    8. '   ' → logprob: -12.401466369628906
    9. '    ' → logprob: -12.651466369628906
    10. 'r' → logprob: -12.651466369628906

Token 166: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0007450680714100599
    2. '[' → logprob: -8.250744819641113
    3. '[r' → logprob: -8.500744819641113
    4. 'l' → logprob: -9.000744819641113
    5. '2' → logprob: -9.125744819641113
    6. '(l' → logprob: -11.500744819641113
    7. ')' → logprob: -11.625744819641113
    8. ' [' → logprob: -12.375744819641113
    9. ' l' → logprob: -12.375744819641113
    10. '	l' → logprob: -12.875744819641113

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012917857384309173
    2. '+' → logprob: -7.376291751861572
    3. ']+' → logprob: -7.626291751861572
    4. ' +' → logprob: -9.87629222869873
    5. ' ]' → logprob: -10.00129222869873
    6. '-' → logprob: -10.00129222869873
    7. '   ' → logprob: -11.62629222869873
    8. '']' → logprob: -12.12629222869873
    9. '])' → logprob: -12.75129222869873
    10. ' ' → logprob: -13.12629222869873

Token 168: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5243808031082153
    2. '+' → logprob: -0.8993808031082153
    3. ']' → logprob: -7.024380683898926
    4. '-' → logprob: -9.149380683898926
    5. ')' → logprob: -9.399380683898926
    6. ' ' → logprob: -10.149380683898926
    7. '   ' → logprob: -10.649380683898926
    8. ']+' → logprob: -10.649380683898926
    9. ' -' → logprob: -11.274380683898926
    10. '>' → logprob: -11.649380683898926

Token 169: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.21373918652534485
    2. ' (' → logprob: -2.2137391567230225
    3. '(r' → logprob: -2.5887391567230225
    4. '(a' → logprob: -5.338739395141602
    5. 'r' → logprob: -6.338739395141602
    6. '(N' → logprob: -7.463739395141602
    7. '(' → logprob: -8.713739395141602
    8. ' r' → logprob: -8.963739395141602
    9. ' ' → logprob: -8.963739395141602
    10. '((' → logprob: -9.213739395141602

Token 170: 'N' (ID: 45)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.0088493824005127
    2. 'r' → logprob: -1.2588493824005127
    3. '(pos' → logprob: -1.7588493824005127
    4. '(N' → logprob: -2.0088493824005127
    5. 'pos' → logprob: -3.3838493824005127
    6. ' (' → logprob: -5.008849143981934
    7. '(a' → logprob: -6.883849143981934
    8. 'N' → logprob: -7.258849143981934
    9. ' r' → logprob: -7.258849143981934
    10. '(' → logprob: -7.633849143981934

Token 171: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4743852913379669
    2. '-' → logprob: -0.9743852615356445
    3. '-pos' → logprob: -9.224385261535645
    4. ' ' → logprob: -9.349385261535645
    5. '+' → logprob: -9.349385261535645
    6. '   ' → logprob: -11.599385261535645
    7. 'pos' → logprob: -11.724385261535645
    8. ' +' → logprob: -11.974385261535645
    9. '-r' → logprob: -12.349385261535645
    10. '  ' → logprob: -13.224385261535645

Token 172: ' r' (ID: 428)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17392803728580475
    2. '1' → logprob: -2.5489280223846436
    3. ' pos' → logprob: -2.6739280223846436
    4. '(pos' → logprob: -5.048928260803223
    5. 'r' → logprob: -5.548928260803223
    6. ' r' → logprob: -7.173928260803223
    7. ' ' → logprob: -7.423928260803223
    8. ' (' → logprob: -7.423928260803223
    9. '(r' → logprob: -9.548928260803223
    10. '(' → logprob: -9.548928260803223

Token 173: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1709977686405182
    2. ' -' → logprob: -2.0459978580474854
    3. '-' → logprob: -3.6709978580474854
    4. ' )' → logprob: -6.795997619628906
    5. ' +' → logprob: -7.295997619628906
    6. '+' → logprob: -7.420997619628906
    7. ' ' → logprob: -10.545997619628906
    8. '1' → logprob: -12.045997619628906
    9. '*' → logprob: -12.170997619628906
    10. ')*' → logprob: -12.545997619628906

Token 174: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.11172696202993393
    2. '1' → logprob: -2.486726999282837
    3. ' pos' → logprob: -4.611726760864258
    4. ')' → logprob: -5.486726760864258
    5. 'a' → logprob: -5.861726760864258
    6. '(pos' → logprob: -6.236726760864258
    7. '   ' → logprob: -6.611726760864258
    8. ' ' → logprob: -6.736726760864258
    9. ' (' → logprob: -8.361726760864258
    10. 'p' → logprob: -8.611726760864258

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035665694158524275
    2. ' +' → logprob: -6.378566741943359
    3. '+' → logprob: -7.003566741943359
    4. ' )' → logprob: -7.128566741943359
    5. '-' → logprob: -9.62856674194336
    6. ' -' → logprob: -10.12856674194336
    7. '   ' → logprob: -11.25356674194336
    8. ' ' → logprob: -11.62856674194336
    9. ')*' → logprob: -11.75356674194336
    10. '*' → logprob: -12.75356674194336

Token 176: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23553533852100372
    2. ' *' → logprob: -2.1105353832244873
    3. '*' → logprob: -2.4855353832244873
    4. ')*' → logprob: -5.735535144805908
    5. ' )' → logprob: -6.485535144805908
    6. ' ' → logprob: -7.610535144805908
    7. '   ' → logprob: -9.235535621643066
    8. '+' → logprob: -11.110535621643066
    9. '  ' → logprob: -11.360535621643066
    10. ' ' → logprob: -12.485535621643066

Token 177: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2254357486963272
    2. ' a' → logprob: -1.600435733795166
    3. ' ' → logprob: -11.100436210632324
    4. '   ' → logprob: -13.100436210632324
    5. '	a' → logprob: -13.100436210632324
    6. ' ' → logprob: -13.725436210632324
    7. '    ' → logprob: -13.975436210632324
    8. '  ' → logprob: -14.225436210632324
    9. '*a' → logprob: -15.350436210632324
    10. '(a' → logprob: -15.725436210632324

Token 178: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.125021934509277
    4. '   ' → logprob: -17.25002098083496
    5. '))' → logprob: -17.50002098083496
    6. '
' → logprob: -17.50002098083496
    7. ')

' → logprob: -17.62502098083496
    8. ')`' → logprob: -18.50002098083496
    9. ')
' → logprob: -18.62502098083496
    10. '```' → logprob: -19.87502098083496

Token 179: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7783268094062805
    2. '<|end|>' → logprob: -1.1533267498016357
    3. ')' → logprob: -1.5283267498016357
    4. '```' → logprob: -5.778326988220215
    5. '
' → logprob: -6.778326988220215
    6. '#' → logprob: -7.653326988220215
    7. ']' → logprob: -7.653326988220215
    8. '[' → logprob: -7.778326988220215
    9. 'return' → logprob: -7.903326988220215
    10. '<|end|>' → logprob: -7.903326988220215

Token 180: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1598355919122696
    2. ' main' → logprob: -2.4098355770111084
    3. 'solve' → logprob: -3.1598355770111084
    4. 'max' → logprob: -5.2848358154296875
    5. ' solve' → logprob: -5.4098358154296875
    6. 'process' → logprob: -6.2848358154296875
    7. 'def' → logprob: -7.2848358154296875
    8. 'maximize' → logprob: -7.6598358154296875
    9. 'calculate' → logprob: -8.034835815429688
    10. 'update' → logprob: -8.159835815429688

Token 181: '_dp' (ID: 133252)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.19774030148983002
    2. '(' → logprob: -2.697740316390991
    3. '(N' → logprob: -3.322740316390991
    4. '_input' → logprob: -3.322740316390991
    5. '_' → logprob: -4.322740077972412
    6. '_(' → logprob: -4.947740077972412
    7. '_arrays' → logprob: -5.322740077972412
    8. '(_' → logprob: -5.822740077972412
    9. '_dp' → logprob: -6.072740077972412
    10. '(A' → logprob: -6.572740077972412

Token 182: '(N' (ID: 10564)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.31931445002555847
    2. '(' → logprob: -1.4443144798278809
    3. '(N' → logprob: -3.319314479827881
    4. '():' → logprob: -7.444314479827881
    5. '_' → logprob: -8.694314002990723
    6. '_dp' → logprob: -9.069314002990723
    7. '(df' → logprob: -9.819314002990723
    8. '(def' → logprob: -9.819314002990723
    9. '(n' → logprob: -9.944314002990723
    10. '(_' → logprob: -10.194314002990723

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. '):' → logprob: -10.375039100646973
    3. ' ,' → logprob: -12.500039100646973
    4. ',
' → logprob: -12.875039100646973
    5. ',p' → logprob: -15.250039100646973
    6. ',n' → logprob: -15.750039100646973
    7. '   ' → logprob: -15.875039100646973
    8. ',N' → logprob: -16.000038146972656
    9. ',d' → logprob: -16.125038146972656
    10. ',l' → logprob: -16.250038146972656

Token 184: ' A' (ID: 355)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2703290283679962
    2. ' dp' → logprob: -2.520328998565674
    3. 'A' → logprob: -2.770328998565674
    4. 'arr' → logprob: -3.270328998565674
    5. 'i' → logprob: -4.270328998565674
    6. ' A' → logprob: -4.395328998565674
    7. ' arr' → logprob: -5.145328998565674
    8. 'M' → logprob: -5.270328998565674
    9. ' i' → logprob: -5.520328998565674
    10. 'l' → logprob: -5.770328998565674

Token 185: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030245617032051086
    2. '):' → logprob: -3.530245542526245
    3. '):
' → logprob: -7.655245780944824
    4. ' ,' → logprob: -11.530245780944824
    5. '   ' → logprob: -13.155245780944824
    6. ',i' → logprob: -13.780245780944824
    7. ',
' → logprob: -13.780245780944824
    8. ')' → logprob: -13.780245780944824
    9. '):
' → logprob: -13.780245780944824
    10. '_,' → logprob: -14.030245780944824

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10395950078964233
    2. ' dp' → logprob: -2.353959560394287
    3. 'dp' → logprob: -5.978959560394287
    4. ' def' → logprob: -7.103959560394287
    5. 'def' → logprob: -8.603959083557129
    6. '	dp' → logprob: -8.728959083557129
    7. '```' → logprob: -10.728959083557129
    8. '(dp' → logprob: -11.228959083557129
    9. '   ' → logprob: -12.603959083557129
    10. '_dp' → logprob: -12.728959083557129

Token 187: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.04752381518483162
    2. ' dp' → logprob: -3.2975237369537354
    3. 'arr' → logprob: -5.9225239753723145
    4. 'A' → logprob: -5.9225239753723145
    5. '   ' → logprob: -6.0475239753723145
    6. ' A' → logprob: -7.7975239753723145
    7. ' arr' → logprob: -7.9225239753723145
    8. 'DP' → logprob: -8.797523498535156
    9. 'enumer' → logprob: -9.672523498535156
    10. ' ' → logprob: -9.672523498535156

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024908799678087234
    2. '=' → logprob: -6.002490997314453
    3. ',' → logprob: -12.127490997314453
    4. ' ' → logprob: -12.502490997314453
    5. '[' → logprob: -12.627490997314453
    6. '2' → logprob: -13.877490997314453
    7. ' =[' → logprob: -14.377490997314453
    8. '0' → logprob: -14.877490997314453
    9. '   ' → logprob: -15.252490997314453
    10. '=[' → logprob: -15.502490997314453

Token 189: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.044985249638557434
    2. '[' → logprob: -3.794985294342041
    3. ' make' → logprob: -3.919985294342041
    4. ' [' → logprob: -6.419985294342041
    5. '   ' → logprob: -11.294984817504883
    6. '(make' → logprob: -11.669984817504883
    7. '	make' → logprob: -12.169984817504883
    8. ' ' → logprob: -12.669984817504883
    9. '[m' → logprob: -13.919984817504883
    10. '  ' → logprob: -13.919984817504883

Token 190: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.009193291887640953
    2. 'dp' → logprob: -5.134193420410156
    3. '(N' → logprob: -5.759193420410156
    4. 'DP' → logprob: -9.384193420410156
    5. '_DP' → logprob: -11.884193420410156
    6. '```' → logprob: -12.134193420410156
    7. '_(' → logprob: -13.509193420410156
    8. '(' → logprob: -14.259193420410156
    9. '[N' → logprob: -14.384193420410156
    10. 'Dp' → logprob: -14.384193420410156

Token 191: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.4060561776859686e-05
    2. 'N' → logprob: -10.125043869018555
    3. '(' → logprob: -12.625043869018555
    4. ' (' → logprob: -15.000043869018555
    5. ')(' → logprob: -16.500043869018555
    6. '```' → logprob: -16.500043869018555
    7. '
' → logprob: -17.250043869018555
    8. '(n' → logprob: -17.250043869018555
    9. '(
' → logprob: -17.375043869018555
    10. ')' → logprob: -17.875043869018555

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004641829989850521
    2. ')
' → logprob: -5.379642009735107
    3. ')

' → logprob: -11.50464153289795
    4. '())' → logprob: -12.37964153289795
    5. ' )' → logprob: -12.37964153289795
    6. ')
' → logprob: -13.75464153289795
    7. '()' → logprob: -14.00464153289795
    8. '))' → logprob: -15.12964153289795
    9. ')`' → logprob: -15.50464153289795
    10. '(N' → logprob: -15.62964153289795

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005896442104130983
    2. '
' → logprob: -6.00589656829834
    3. ' for' → logprob: -6.38089656829834
    4. 'dp' → logprob: -7.00589656829834
    5. ' dp' → logprob: -8.00589656829834
    6. 'for' → logprob: -8.38089656829834
    7. '    
' → logprob: -9.13089656829834
    8. 'def' → logprob: -10.38089656829834
    9. '```' → logprob: -10.88089656829834
    10. '    ' → logprob: -11.00589656829834

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36317533254623413
    2. 'enumer' → logprob: -2.113175392150879
    3. 'dp' → logprob: -2.363175392150879
    4. 'arr' → logprob: -2.738175392150879
    5. 'A' → logprob: -4.863175392150879
    6. 'enum' → logprob: -5.363175392150879
    7. ' for' → logprob: -5.863175392150879
    8. 'B' → logprob: -6.113175392150879
    9. 'pairs' → logprob: -6.613175392150879
    10. 'items' → logprob: -6.613175392150879

Token 195: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1881401240825653
    2. 'i' → logprob: -2.1881401538848877
    3. ' a' → logprob: -3.1881401538848877
    4. 'a' → logprob: -4.438139915466309
    5. ' pos' → logprob: -5.563139915466309
    6. 'pos' → logprob: -6.563139915466309
    7. ' ' → logprob: -7.813139915466309
    8. ' (' → logprob: -8.938139915466309
    9. '   ' → logprob: -9.313139915466309
    10. '(i' → logprob: -10.250639915466309

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006966847460716963
    2. 'in' → logprob: -5.006967067718506
    3. ' ' → logprob: -8.631966590881348
    4. ',' → logprob: -9.631966590881348
    5. ' ,' → logprob: -13.381966590881348
    6. '	in' → logprob: -13.381966590881348
    7. '  ' → logprob: -14.131966590881348
    8. ' i' → logprob: -14.756966590881348
    9. '   ' → logprob: -14.756966590881348
    10. '_' → logprob: -14.881966590881348

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890014350414276
    2. ' range' → logprob: -2.578900098800659
    3. ' ' → logprob: -12.703900337219238
    4. '	range' → logprob: -13.203900337219238
    5. '(range' → logprob: -13.328900337219238
    6. 'A' → logprob: -13.703900337219238
    7. '   ' → logprob: -14.328900337219238
    8. '  ' → logprob: -14.578900337219238
    9. ')' → logprob: -14.828900337219238
    10. '[' → logprob: -15.328900337219238

Token 198: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22580000758171082
    2. '(' → logprob: -1.6008000373840332
    3. '(len' → logprob: -8.975799560546875
    4. '1' → logprob: -9.225799560546875
    5. '(n' → logprob: -10.100799560546875
    6. ' (' → logprob: -10.100799560546875
    7. 'N' → logprob: -10.850799560546875
    8. '   ' → logprob: -10.975799560546875
    9. ' N' → logprob: -11.100799560546875
    10. '(
' → logprob: -11.600799560546875

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10066499561071396
    2. '):
' → logprob: -2.3506650924682617
    3. ' ):' → logprob: -7.850665092468262
    4. '+' → logprob: -11.350665092468262
    5. ' ):
' → logprob: -11.350665092468262
    6. '   ' → logprob: -11.350665092468262
    7. '):
' → logprob: -11.725665092468262
    8. '-' → logprob: -11.725665092468262
    9. ':' → logprob: -11.850665092468262
    10. ' ' → logprob: -12.975665092468262

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004205070901662111
    2. ' dp' → logprob: -5.879205226898193
    3. ',' → logprob: -7.504205226898193
    4. 'dp' → logprob: -8.504204750061035
    5. ' a' → logprob: -9.129204750061035
    6. '   ' → logprob: -9.254204750061035
    7. '        
' → logprob: -9.879204750061035
    8. ' for' → logprob: -10.004204750061035
    9. 'a' → logprob: -10.504204750061035
    10. '(dp' → logprob: -10.629204750061035

Token 201: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.09678564965724945
    2. ' dp' → logprob: -2.721785545349121
    3. '   ' → logprob: -3.971785545349121
    4. 'a' → logprob: -5.721785545349121
    5. '       ' → logprob: -6.471785545349121
    6. ' a' → logprob: -6.471785545349121
    7. 'A' → logprob: -7.471785545349121
    8. ' A' → logprob: -8.221785545349121
    9. '	dp' → logprob: -8.596785545349121
    10. ' for' → logprob: -9.721785545349121

Token 202: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7641260027885437
    2. '=' → logprob: -1.2641260623931885
    3. '2' → logprob: -1.3891260623931885
    4. '_new' → logprob: -6.764125823974609
    5. '_copy' → logprob: -7.639125823974609
    6. '_' → logprob: -8.13912582397461
    7. ',' → logprob: -9.26412582397461
    8. 'new' → logprob: -9.38912582397461
    9. '_=' → logprob: -9.76412582397461
    10. '_temp' → logprob: -10.26412582397461

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021119564771652
    2. '=' → logprob: -2.3502111434936523
    3. '	' → logprob: -12.850211143493652
    4. ' ' → logprob: -13.475211143493652
    5. ',' → logprob: -15.975211143493652
    6. '[' → logprob: -16.35021209716797
    7. '＝' → logprob: -16.60021209716797
    8. ' ' → logprob: -16.97521209716797
    9. '=create' → logprob: -17.47521209716797
    10. ' =)' → logprob: -17.60021209716797

Token 204: ' copy' (ID: 5150)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.12273077666759491
    2. ' make' → logprob: -2.3727307319641113
    3. 'copy' → logprob: -3.9977307319641113
    4. ' copy' → logprob: -6.247730731964111
    5. '[' → logprob: -6.997730731964111
    6. 'dp' → logprob: -7.622730731964111
    7. ' [' → logprob: -7.997730731964111
    8. ' dp' → logprob: -8.49773120880127
    9. '(make' → logprob: -11.37273120880127
    10. '	make' → logprob: -11.49773120880127

Token 205: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.04254140704870224
    2. 'dp' → logprob: -3.29254150390625
    3. '(dp' → logprob: -5.41754150390625
    4. ' dp' → logprob: -10.66754150390625
    5. '	dp' → logprob: -11.91754150390625
    6. '```' → logprob: -12.66754150390625
    7. '(' → logprob: -12.91754150390625
    8. 'copy' → logprob: -12.91754150390625
    9. 'DP' → logprob: -13.41754150390625
    10. '(_' → logprob: -14.04254150390625

Token 206: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.896309739408025e-07
    2. 'dp' → logprob: -14.500000953674316
    3. '(' → logprob: -15.125000953674316
    4. ' (' → logprob: -18.625
    5. '	dp' → logprob: -19.125
    6. ' dp' → logprob: -19.125
    7. '(
' → logprob: -19.25
    8. '(df' → logprob: -19.75
    9. '(dx' → logprob: -19.875
    10. '(def' → logprob: -20.0

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520699203014374
    2. ')
' → logprob: -1.5020699501037598
    3. '       ' → logprob: -9.127069473266602
    4. ')
' → logprob: -10.877069473266602
    5. ')

' → logprob: -12.002069473266602
    6. '   ' → logprob: -12.377069473266602
    7. '<|end|>' → logprob: -14.627069473266602
    8. ' )' → logprob: -14.752069473266602
    9. ' )
' → logprob: -15.252069473266602
    10. '),' → logprob: -15.377069473266602

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03807660564780235
    2. ' for' → logprob: -4.038076400756836
    3. '<|end|>' → logprob: -4.288076400756836
    4. '
' → logprob: -5.413076400756836
    5. '   ' → logprob: -7.663076400756836
    6. 'for' → logprob: -8.163076400756836
    7. '	' → logprob: -8.538076400756836
    8. ',' → logprob: -8.663076400756836
    9. '<|end|>' → logprob: -9.163076400756836
    10. '	for' → logprob: -9.788076400756836

Token 209: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6446172595024109
    2. '       ' → logprob: -1.5196173191070557
    3. 'A' → logprob: -1.6446173191070557
    4. 'a' → logprob: -3.3946173191070557
    5. ' for' → logprob: -3.8946173191070557
    6. ' A' → logprob: -5.769617080688477
    7. 'pos' → logprob: -6.394617080688477
    8. '   ' → logprob: -6.519617080688477
    9. 'l' → logprob: -6.769617080688477
    10. ' a' → logprob: -7.394617080688477

Token 210: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4741802215576172
    2. 'l' → logprob: -0.9741802215576172
    3. ' j' → logprob: -10.349180221557617
    4. 'j' → logprob: -10.599180221557617
    5. '   ' → logprob: -11.599180221557617
    6. ' i' → logprob: -12.224180221557617
    7. '	l' → logprob: -12.349180221557617
    8. 'i' → logprob: -12.474180221557617
    9. ' ' → logprob: -12.661680221557617
    10. '_l' → logprob: -12.849180221557617

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03370552510023117
    2. 'in' → logprob: -3.408705472946167
    3. ',' → logprob: -10.033705711364746
    4. ')' → logprob: -12.533705711364746
    5. '	in' → logprob: -12.658705711364746
    6. ' ' → logprob: -12.783705711364746
    7. ' ,' → logprob: -13.283705711364746
    8. '```' → logprob: -14.033705711364746
    9. ' в' → logprob: -14.533705711364746
    10. '    ' → logprob: -15.033705711364746

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1128498837351799
    2. ' range' → logprob: -2.2378499507904053
    3. '(range' → logprob: -10.987850189208984
    4. '   ' → logprob: -12.237850189208984
    5. ' ' → logprob: -12.612850189208984
    6. '0' → logprob: -14.487850189208984
    7. '  ' → logprob: -14.612850189208984
    8. '	range' → logprob: -14.987850189208984
    9. '
' → logprob: -15.362850189208984
    10. ')' → logprob: -15.612850189208984

Token 213: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007598382653668523
    2. '(' → logprob: -7.375759601593018
    3. '(len' → logprob: -9.625760078430176
    4. '(N' → logprob: -9.875760078430176
    5. 'i' → logprob: -12.000760078430176
    6. '(l' → logprob: -12.375760078430176
    7. '0' → logprob: -13.000760078430176
    8. '(n' → logprob: -14.125760078430176
    9. '(dp' → logprob: -14.125760078430176
    10. ' i' → logprob: -14.625760078430176

Token 214: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.348985880613327
    2. ' +' → logprob: -1.2239859104156494
    3. '):' → logprob: -7.97398567199707
    4. '):
' → logprob: -8.97398567199707
    5. '   ' → logprob: -9.72398567199707
    6. ' ):' → logprob: -12.84898567199707
    7. ',' → logprob: -13.47398567199707
    8. '    ' → logprob: -13.72398567199707
    9. '       ' → logprob: -13.97398567199707
    10. '+
' → logprob: -14.09898567199707

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002314645564183593
    2. '2' → logprob: -6.252314567565918
    3. ' ' → logprob: -7.877314567565918
    4. '   ' → logprob: -12.127314567565918
    5. '
' → logprob: -14.127314567565918
    6. '  ' → logprob: -16.689815521240234
    7. '       ' → logprob: -16.877315521240234
    8. '```' → logprob: -17.064815521240234
    9. ')' → logprob: -17.127315521240234
    10. '           ' → logprob: -17.439815521240234

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019486293895170093
    2. '2' → logprob: -6.251948833465576
    3. ' ' → logprob: -10.876948356628418
    4. '   ' → logprob: -14.439448356628418
    5. '
' → logprob: -15.501948356628418
    6. '```' → logprob: -16.751949310302734
    7. '  ' → logprob: -17.376949310302734
    8. '１' → logprob: -17.501949310302734
    9. '

' → logprob: -17.876949310302734
    10. '           ' → logprob: -18.126949310302734

Token 217: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13373689353466034
    2. '):' → logprob: -2.2587368488311768
    3. '+' → logprob: -4.008737087249756
    4. ' +' → logprob: -6.258737087249756
    5. '       ' → logprob: -7.633737087249756
    6. '   ' → logprob: -10.008736610412598
    7. ' ):
' → logprob: -10.383736610412598
    8. '):
' → logprob: -10.633736610412598
    9. '1' → logprob: -11.508736610412598
    10. '):

' → logprob: -11.883736610412598

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008279092609882355
    2. '<|end|>' → logprob: -5.133279323577881
    3. '               ' → logprob: -7.883279323577881
    4. '       ' → logprob: -8.133278846740723
    5. '	       ' → logprob: -8.633278846740723
    6. ',' → logprob: -8.758278846740723
    7. '		' → logprob: -9.008278846740723
    8. '            ' → logprob: -9.008278846740723
    9. '[' → logprob: -9.008278846740723
    10. ' ' → logprob: -9.133278846740723

Token 219: ' a' (ID: 261)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.8723319172859192
    2. 'update' → logprob: -1.1223318576812744
    3. ' if' → logprob: -1.9973318576812744
    4. '           ' → logprob: -2.2473318576812744
    5. 'if' → logprob: -4.4973320960998535
    6. '               ' → logprob: -6.2473320960998535
    7. '(update' → logprob: -7.8723320960998535
    8. ' dp' → logprob: -7.9973320960998535
    9. '   ' → logprob: -8.247331619262695
    10. 'dp' → logprob: -8.372331619262695

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023253168910741806
    2. ' ,' → logprob: -4.273252964019775
    3. ')' → logprob: -5.898252964019775
    4. '=' → logprob: -6.023252964019775
    5. ' =' → logprob: -6.023252964019775
    6. '<|end|>' → logprob: -8.023253440856934
    7. 's' → logprob: -8.398253440856934
    8. '[' → logprob: -8.523253440856934
    9. '   ' → logprob: -9.523253440856934
    10. ',
' → logprob: -9.523253440856934

Token 221: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5530946850776672
    2. ' i' → logprob: -0.9280946850776672
    3. ' pos' → logprob: -4.553094863891602
    4. 'pos' → logprob: -4.803094863891602
    5. '_' → logprob: -5.428094863891602
    6. ' l' → logprob: -6.178094863891602
    7. ' _' → logprob: -6.803094863891602
    8. 'l' → logprob: -7.053094863891602
    9. '_=' → logprob: -7.428094863891602
    10. ' =' → logprob: -8.303094863891602

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326093077659607
    2. '=' → logprob: -0.7576093077659607
    3. ')' → logprob: -12.632609367370605
    4. '<|end|>' → logprob: -12.882609367370605
    5. ' ' → logprob: -13.882609367370605
    6. '<|end|>' → logprob: -14.507609367370605
    7. '=user' → logprob: -14.632609367370605
    8. ']' → logprob: -14.882609367370605
    9. ',' → logprob: -15.007609367370605
    10. 's' → logprob: -15.257609367370605

Token 223: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6261394023895264
    2. ' A' → logprob: -1.3761394023895264
    3. 'enumer' → logprob: -1.6261394023895264
    4. 'arr' → logprob: -4.6261396408081055
    5. ' enumerate' → logprob: -5.3761396408081055
    6. 'dp' → logprob: -7.5011396408081055
    7. 'sort' → logprob: -7.7511396408081055
    8. ' arr' → logprob: -8.751139640808105
    9. '(A' → logprob: -9.126139640808105
    10. '   ' → logprob: -9.251139640808105

Token 224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.027281809598207474
    2. '[l' → logprob: -3.6522817611694336
    3. '[' → logprob: -7.152281761169434
    4. ']' → logprob: -9.777281761169434
    5. 'i' → logprob: -10.277281761169434
    6. '[
' → logprob: -10.902281761169434
    7. '       ' → logprob: -11.277281761169434
    8. '][' → logprob: -11.527281761169434
    9. '[j' → logprob: -11.652281761169434
    10. '   ' → logprob: -11.902281761169434

Token 225: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06506118923425674
    2. ']
' → logprob: -3.190061092376709
    3. ')' → logprob: -4.065061092376709
    4. '][' → logprob: -5.690061092376709
    5. '])' → logprob: -8.065061569213867
    6. ')
' → logprob: -8.190061569213867
    7. ')]' → logprob: -8.440061569213867
    8. '[' → logprob: -8.690061569213867
    9. '       ' → logprob: -9.565061569213867
    10. ' ]' → logprob: -9.690061569213867

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0043557025492191315
    2. '
' → logprob: -5.8793559074401855
    3. '<|end|>' → logprob: -7.1293559074401855
    4. '       ' → logprob: -8.379355430603027
    5. '            
' → logprob: -8.629355430603027
    6. ' 
' → logprob: -9.504355430603027
    7. '               ' → logprob: -9.629355430603027
    8. ' if' → logprob: -10.129355430603027
    9. '          ' → logprob: -10.379355430603027
    10. '   ' → logprob: -11.004355430603027

Token 227: ' update' (ID: 4027)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2890089452266693
    2. 'update' (adapté à ' update') → logprob: -2.039008855819702
    3. ' update' → logprob: -2.664008855819702
    4. ' if' → logprob: -3.414008855819702
    5. 'if' → logprob: -4.164009094238281
    6. '   ' → logprob: -7.414009094238281
    7. '	update' → logprob: -7.789009094238281
    8. '		' → logprob: -8.039009094238281
    9. '	       ' → logprob: -8.164009094238281
    10. '       ' → logprob: -8.164009094238281

Token 228: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0031813981477171183
    2. '_right' → logprob: -5.753181457519531
    3. 'left' → logprob: -12.628181457519531
    4. 'dp' → logprob: -15.003181457519531
    5. '```' → logprob: -17.25318145751953
    6. '(dp' → logprob: -17.62818145751953
    7. 'Left' → logprob: -17.75318145751953
    8. '_LEFT' → logprob: -18.00318145751953
    9. '_Left' → logprob: -18.87818145751953
    10. '_dp' → logprob: -19.00318145751953

Token 229: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -10.250040054321289
    3. ' (' → logprob: -12.750040054321289
    4. '(
' → logprob: -13.625040054321289
    5. '(db' → logprob: -17.75004005432129
    6. '(df' → logprob: -18.00004005432129
    7. '(dt' → logprob: -18.12504005432129
    8. '	dp' → logprob: -18.25004005432129
    9. '(dm' → logprob: -18.25004005432129
    10. '(dispatch' → logprob: -18.62504005432129

Token 230: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '(dp' → logprob: -13.750000953674316
    3. '```' → logprob: -16.000001907348633
    4. ' ' → logprob: -16.875001907348633
    5. ')' → logprob: -17.500001907348633
    6. '
' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '[' → logprob: -18.750001907348633
    9. '₂' → logprob: -19.000001907348633
    10. 'dp' → logprob: -19.250001907348633

Token 231: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.13732179999351501
    2. ',' → logprob: -2.262321710586548
    3. ',l' → logprob: -4.012321949005127
    4. ')' → logprob: -6.262321949005127
    5. '(' → logprob: -6.387321949005127
    6. ' ,' → logprob: -7.137321949005127
    7. '(dp' → logprob: -7.137321949005127
    8. ')(' → logprob: -7.762321949005127
    9. ' (' → logprob: -8.762321472167969
    10. '(lp' → logprob: -9.012321472167969

Token 232: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0028104635421186686
    2. ' l' → logprob: -5.877810478210449
    3. '   ' → logprob: -12.50281047821045
    4. '	l' → logprob: -13.75281047821045
    5. '    ' → logprob: -15.00281047821045
    6. ' ' → logprob: -15.25281047821045
    7. '  ' → logprob: -15.62781047821045
    8. '_l' → logprob: -16.752809524536133
    9. '       ' → logprob: -17.252809524536133
    10. '           ' → logprob: -17.752809524536133

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014478032244369388
    2. ' ,' → logprob: -8.875144958496094
    3. ',
' → logprob: -13.625144958496094
    4. '   ' → logprob: -14.000144958496094
    5. ',pos' → logprob: -14.250144958496094
    6. '‌,' → logprob: -15.250144958496094
    7. ')' → logprob: -15.500144958496094
    8. ',,' → logprob: -15.625144958496094
    9. '```' → logprob: -15.750144958496094
    10. ',

' → logprob: -15.750144958496094

Token 234: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029754776507616043
    2. ' dp' → logprob: -3.529754877090454
    3. 'pos' → logprob: -13.779754638671875
    4. '	dp' → logprob: -14.029754638671875
    5. ' ' → logprob: -14.654754638671875
    6. 'l' → logprob: -14.654754638671875
    7. 'd' → logprob: -14.654754638671875
    8. '   ' → logprob: -14.904754638671875
    9. '(dp' → logprob: -15.654754638671875
    10. '    ' → logprob: -15.654754638671875

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002558561391197145
    2. ' ,' → logprob: -8.500255584716797
    3. ',pos' → logprob: -10.000255584716797
    4. '2' → logprob: -12.000255584716797
    5. '   ' → logprob: -14.875255584716797
    6. ',
' → logprob: -15.875255584716797
    7. ',p' → logprob: -16.375255584716797
    8. '```' → logprob: -16.750255584716797
    9. ',i' → logprob: -17.625255584716797
    10. '=' → logprob: -17.750255584716797

Token 236: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01416398212313652
    2. ' pos' → logprob: -4.264163970947266
    3. '[pos' → logprob: -15.889163970947266
    4. '	pos' → logprob: -16.264163970947266
    5. '
' → logprob: -16.764163970947266
    6. '(pos' → logprob: -16.889163970947266
    7. 'p' → logprob: -17.514163970947266
    8. ',pos' → logprob: -18.014163970947266
    9. '   ' → logprob: -18.139163970947266
    10. '_pos' → logprob: -18.139163970947266

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014611887745559216
    2. ' ,' → logprob: -7.126461029052734
    3. ',a' → logprob: -7.376461029052734
    4. 'a' → logprob: -11.376461029052734
    5. '   ' → logprob: -11.501461029052734
    6. ',
' → logprob: -12.376461029052734
    7. ')' → logprob: -13.876461029052734
    8. '```' → logprob: -14.501461029052734
    9. '       ' → logprob: -15.501461029052734
    10. ' ' → logprob: -15.626461029052734

Token 238: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008614808320999146
    2. ' a' → logprob: -4.758615016937256
    3. '	a' → logprob: -15.883614540100098
    4. '<|end|>' → logprob: -17.008615493774414
    5. ')a' → logprob: -17.258615493774414
    6. '   ' → logprob: -17.258615493774414
    7. ')' → logprob: -18.008615493774414
    8. ' ' → logprob: -18.133615493774414
    9. '    ' → logprob: -18.258615493774414
    10. ' ' → logprob: -18.508615493774414

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019372005481272936
    2. ')
' → logprob: -6.251937389373779
    3. ')

' → logprob: -11.876936912536621
    4. '       ' → logprob: -14.626936912536621
    5. '           ' → logprob: -14.751936912536621
    6. ')
' → logprob: -15.501936912536621
    7. ' )' → logprob: -15.501936912536621
    8. '   ' → logprob: -16.001937866210938
    9. '),' → logprob: -16.626937866210938
    10. ')\' → logprob: -17.001937866210938

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009429076453670859
    2. '       ' → logprob: -7.500942707061768
    3. '<|end|>' → logprob: -8.625943183898926
    4. '
' → logprob: -10.000943183898926
    5. '          ' → logprob: -10.625943183898926
    6. '   ' → logprob: -10.875943183898926
    7. '```' → logprob: -11.000943183898926
    8. '               ' → logprob: -11.000943183898926
    9. '            
' → logprob: -11.250943183898926
    10. '            ' → logprob: -11.250943183898926

Token 241: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.5780469179153442
    2. 'update' (adapté à ' update') → logprob: -1.0780469179153442
    3. '           ' → logprob: -2.3280467987060547
    4. '```' → logprob: -7.453046798706055
    5. '(update' → logprob: -8.828046798706055
    6. '            ' → logprob: -9.328046798706055
    7. '.update' → logprob: -9.703046798706055
    8. ' ' → logprob: -9.703046798706055
    9. '       ' → logprob: -9.828046798706055
    10. '
' → logprob: -9.828046798706055

Token 242: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00021152703266125172
    2. '_left' → logprob: -8.500211715698242
    3. '```' → logprob: -12.625211715698242
    4. '_' → logprob: -14.500211715698242
    5. ' _' → logprob: -14.500211715698242
    6. '_RIGHT' → logprob: -14.625211715698242
    7. ')_' → logprob: -14.750211715698242
    8. '2' → logprob: -14.875211715698242
    9. '_rhs' → logprob: -15.000211715698242
    10. 'Right' → logprob: -15.375211715698242

Token 243: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. ' (' → logprob: -13.875018119812012
    4. '(
' → logprob: -16.000017166137695
    5. '	dp' → logprob: -17.125017166137695
    6. 'dp' → logprob: -18.375017166137695
    7. '(df' → logprob: -18.625017166137695
    8. ' dp' → logprob: -18.625017166137695
    9. '```' → logprob: -18.750017166137695
    10. '(ds' → logprob: -19.750017166137695

Token 244: '2' (ID: 17)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.25772058963775635
    2. '2' → logprob: -1.5077205896377563
    3. 'dp' → logprob: -5.257720470428467
    4. ' dp' → logprob: -8.382720947265625
    5. '	dp' → logprob: -9.007720947265625
    6. ')' → logprob: -9.007720947265625
    7. '(' → logprob: -11.007720947265625
    8. '```' → logprob: -11.007720947265625
    9. ' ' → logprob: -11.132720947265625
    10. '[' → logprob: -11.257720947265625

Token 245: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.43451109528541565
    2. ',' → logprob: -1.0595110654830933
    3. ' dp' → logprob: -5.559511184692383
    4. 'dp' → logprob: -6.809511184692383
    5. ' ,' → logprob: -8.059511184692383
    6. ')' → logprob: -8.559511184692383
    7. '	dp' → logprob: -8.684511184692383
    8. '(' → logprob: -9.059511184692383
    9. ' (' → logprob: -11.684511184692383
    10. '_dp' → logprob: -11.809511184692383

Token 246: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1797567754983902
    2. ' l' → logprob: -1.804756760597229
    3. ' ' → logprob: -12.679757118225098
    4. '<|end|>' → logprob: -13.179757118225098
    5. '	l' → logprob: -13.304757118225098
    6. '   ' → logprob: -14.054757118225098
    7. '    ' → logprob: -14.554757118225098
    8. '(l' → logprob: -14.679757118225098
    9. '_l' → logprob: -14.804757118225098
    10. '  ' → logprob: -14.929757118225098

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002116462419508025
    2. ' ,' → logprob: -8.750211715698242
    3. '(dp' → logprob: -10.000211715698242
    4. ' dp' → logprob: -12.875211715698242
    5. ')' → logprob: -13.625211715698242
    6. 'dp' → logprob: -13.625211715698242
    7. '   ' → logprob: -14.625211715698242
    8. '	dp' → logprob: -14.625211715698242
    9. ',
' → logprob: -14.750211715698242
    10. '=' → logprob: -14.875211715698242

Token 248: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01417032815515995
    2. ' dp' → logprob: -4.264170169830322
    3. '(dp' → logprob: -13.13917064666748
    4. '	dp' → logprob: -13.63917064666748
    5. '_dp' → logprob: -13.88917064666748
    6. 'pos' → logprob: -14.63917064666748
    7. 'def' → logprob: -14.63917064666748
    8. 'i' → logprob: -14.76417064666748
    9. ' ' → logprob: -15.01417064666748
    10. 'd' → logprob: -15.01417064666748

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00612265570089221
    2. '(dp' → logprob: -5.256122589111328
    3. 'dp' → logprob: -7.256122589111328
    4. ' dp' → logprob: -9.131122589111328
    5. ' ,' → logprob: -9.756122589111328
    6. '	dp' → logprob: -12.131122589111328
    7. '```' → logprob: -12.631122589111328
    8. ')' → logprob: -13.506122589111328
    9. '(' → logprob: -13.631122589111328
    10. ',
' → logprob: -13.756122589111328

Token 250: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.16023294627666473
    2. 'pos' → logprob: -1.9102329015731812
    3. '(pos' → logprob: -12.535232543945312
    4. '	pos' → logprob: -13.160232543945312
    5. '[pos' → logprob: -14.035232543945312
    6. ',pos' → logprob: -14.535232543945312
    7. 'i' → logprob: -15.035232543945312
    8. ' ' → logprob: -15.160232543945312
    9. ' ' → logprob: -15.535232543945312
    10. '    ' → logprob: -15.660232543945312

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033303992822766304
    2. ' ,' → logprob: -5.753330230712891
    3. ')' → logprob: -9.12833023071289
    4. '   ' → logprob: -11.12833023071289
    5. ',
' → logprob: -11.87833023071289
    6. ',N' → logprob: -12.50333023071289
    7. ',a' → logprob: -12.87833023071289
    8. '           ' → logprob: -13.00333023071289
    9. '```' → logprob: -13.00333023071289
    10. ',n' → logprob: -13.12833023071289

Token 252: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009777928702533245
    2. ' a' → logprob: -4.634778022766113
    3. 'N' → logprob: -11.509778022766113
    4. 'A' → logprob: -12.634778022766113
    5. '   ' → logprob: -12.634778022766113
    6. ' ' → logprob: -13.384778022766113
    7. ' N' → logprob: -13.509778022766113
    8. '0' → logprob: -14.009778022766113
    9. '	a' → logprob: -14.134778022766113
    10. '  ' → logprob: -15.759778022766113

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034070396795868874
    2. ')' → logprob: -6.003407001495361
    3. ' ,' → logprob: -7.253407001495361
    4. ',N' → logprob: -8.75340747833252
    5. ')
' → logprob: -10.62840747833252
    6. '   ' → logprob: -11.12840747833252
    7. ',
' → logprob: -11.87840747833252
    8. ' ' → logprob: -12.37840747833252
    9. ',n' → logprob: -12.75340747833252
    10. ' )' → logprob: -13.25340747833252

Token 254: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009125363430939615
    2. ' N' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.8759126663208
    4. '	N' → logprob: -17.625911712646484
    5. '    ' → logprob: -18.375911712646484
    6. ' ' → logprob: -18.375911712646484
    7. '  ' → logprob: -18.500911712646484
    8. ')' → logprob: -19.000911712646484
    9. '
' → logprob: -19.500911712646484
    10. 'Ｎ' → logprob: -19.750911712646484

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004870230332016945
    2. ',i' → logprob: -5.379870414733887
    3. ' ,' → logprob: -8.379870414733887
    4. ')' → logprob: -11.129870414733887
    5. 'i' → logprob: -13.254870414733887
    6. ',
' → logprob: -13.379870414733887
    7. '   ' → logprob: -13.379870414733887
    8. ' i' → logprob: -15.379870414733887
    9. ')i' → logprob: -16.00486946105957
    10. '	' → logprob: -16.12986946105957

Token 256: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010914575977949426
    2. ' i' → logprob: -9.12510871887207
    3. '
' → logprob: -17.00010871887207
    4. '   ' → logprob: -17.25010871887207
    5. '	i' → logprob: -17.75010871887207
    6. ')' → logprob: -18.00010871887207
    7. ')i' → logprob: -18.12510871887207
    8. '```' → logprob: -18.37510871887207
    9. '<|end|>' → logprob: -19.62510871887207
    10. 'pos' → logprob: -19.75010871887207

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48294124007225037
    2. ')
' → logprob: -0.9829412698745728
    3. '       ' → logprob: -4.732941150665283
    4. ')
' → logprob: -11.232941627502441
    5. '   ' → logprob: -12.107941627502441
    6. ')`
' → logprob: -13.107941627502441
    7. ' )
' → logprob: -13.982941627502441
    8. ' )' → logprob: -14.107941627502441
    9. ')\
' → logprob: -14.107941627502441
    10. ')

' → logprob: -14.607941627502441

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011486753646750003
    2. '   ' → logprob: -9.625114440917969
    3. '<|end|>' → logprob: -11.125114440917969
    4. '	' → logprob: -11.500114440917969
    5. ')' → logprob: -12.000114440917969
    6. '      ' → logprob: -12.875114440917969
    7. '    ' → logprob: -12.875114440917969
    8. ' return' → logprob: -13.000114440917969
    9. '```' → logprob: -13.125114440917969
    10. '           ' → logprob: -13.250114440917969

Token 259: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07533739507198334
    2. '       ' → logprob: -3.3253374099731445
    3. ' dp' → logprob: -3.3253374099731445
    4. '   ' → logprob: -7.4503374099731445
    5. '	dp' → logprob: -9.825337409973145
    6. ' ' → logprob: -12.575337409973145
    7. '(dp' → logprob: -12.825337409973145
    8. '_dp' → logprob: -13.200337409973145
    9. '    ' → logprob: -13.325337409973145
    10. '```' → logprob: -13.575337409973145

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. ',' → logprob: -15.25192928314209
    4. '2' → logprob: -15.50192928314209
    5. '[:]' → logprob: -16.126930236816406
    6. ' ' → logprob: -17.251930236816406
    7. '   ' → logprob: -17.376930236816406
    8. '＝' → logprob: -17.626930236816406
    9. '=
' → logprob: -18.001930236816406
    10. '=}' → logprob: -18.376930236816406

Token 261: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014199002645909786
    2. ' dp' → logprob: -4.2641987800598145
    3. 'copy' → logprob: -10.389199256896973
    4. ' copy' → logprob: -12.514199256896973
    5. '	dp' → logprob: -14.264199256896973
    6. '(dp' → logprob: -15.639199256896973
    7. '_dp' → logprob: -15.764199256896973
    8. '   ' → logprob: -17.389198303222656
    9. ' ' → logprob: -17.889198303222656
    10. 'dc' → logprob: -17.889198303222656

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '₂' → logprob: -19.5
    3. '_' → logprob: -20.125
    4. '۲' → logprob: -20.5
    5. '２' → logprob: -21.125
    6. ' ' → logprob: -21.5
    7. '```' → logprob: -21.875
    8. 'copy' → logprob: -22.5625
    9. '...' → logprob: -23.1875
    10. '[:]' → logprob: -23.4375

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04717056825757027
    2. '<|end|>' → logprob: -3.172170639038086
    3. ' return' → logprob: -6.172170639038086
    4. '    
' → logprob: -7.047170639038086
    5. '
' → logprob: -7.797170639038086
    6. 'return' → logprob: -8.047170639038086
    7. '	return' → logprob: -8.922170639038086
    8. ')' → logprob: -9.172170639038086
    9. ' ' → logprob: -9.797170639038086
    10. '<|end|>' → logprob: -10.297170639038086

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006163531914353371
    2. '<|end|>' → logprob: -5.631163597106934
    3. 'return' → logprob: -6.506163597106934
    4. ' return' → logprob: -7.381163597106934
    5. ')' → logprob: -8.506163597106934
    6. '    
' → logprob: -9.506163597106934
    7. '	return' → logprob: -10.006163597106934
    8. '[' → logprob: -10.256163597106934
    9. '
' → logprob: -11.006163597106934
    10. ' ' → logprob: -11.381163597106934

Token 265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002495991066098213
    2. 'max' → logprob: -6.877495765686035
    3. ' return' → logprob: -7.252495765686035
    4. '   ' → logprob: -7.502495765686035
    5. 'result' → logprob: -8.627495765686035
    6. 'print' → logprob: -12.252495765686035
    7. 'answer' → logprob: -12.377495765686035
    8. 'ans' → logprob: -12.877495765686035
    9. 'ret' → logprob: -13.127495765686035
    10. 'res' → logprob: -13.127495765686035

Token 266: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04862358421087265
    2. ' max' → logprob: -3.048623561859131
    3. 'dp' → logprob: -10.298624038696289
    4. ' dp' → logprob: -13.798624038696289
    5. '(max' → logprob: -13.923624038696289
    6. '[max' → logprob: -14.923624038696289
    7. '0' → logprob: -17.54862403869629
    8. '	max' → logprob: -17.54862403869629
    9. 'min' → logprob: -17.92362403869629
    10. ',max' → logprob: -18.04862403869629

Token 267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12281490862369537
    2. 'max' → logprob: -2.247814893722534
    3. 'print' → logprob: -5.122815132141113
    4. ')' → logprob: -6.997815132141113
    5. '#' → logprob: -7.122815132141113
    6. ']' → logprob: -7.372815132141113
    7. '```' → logprob: -7.872815132141113
    8. 'result' → logprob: -7.997815132141113
    9. 'dp' → logprob: -8.872815132141113
    10. '[' → logprob: -9.122815132141113

Token 269: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06237992271780968
    2. 'main' → logprob: -2.937379837036133
    3. ' max' → logprob: -5.687379837036133
    4. 'max' → logprob: -6.312379837036133
    5. ' solve' → logprob: -6.812379837036133
    6. 'solve' → logprob: -7.312379837036133
    7. ' find' → logprob: -8.312379837036133
    8. ' maximize' → logprob: -8.812379837036133
    9. 'maximize' → logprob: -9.937379837036133
    10. ' maximum' → logprob: -10.687379837036133

Token 270: '_result' (ID: 11623)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.03137185052037239
    2. '_result' → logprob: -3.906371831893921
    3. 'max' → logprob: -5.0313720703125
    4. '_answer' → logprob: -5.6563720703125
    5. '_best' → logprob: -7.7813720703125
    6. ' max' → logprob: -9.1563720703125
    7. 'result' → logprob: -9.5313720703125
    8. '_final' → logprob: -9.7813720703125
    9. '_ans' → logprob: -10.1563720703125
    10. 'def' → logprob: -11.9063720703125

Token 271: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.23766809701919556
    2. '(N' → logprob: -1.7376680374145508
    3. '():' → logprob: -3.362668037414551
    4. '(' → logprob: -7.362668037414551
    5. '():
' → logprob: -8.73766803741455
    6. '(max' → logprob: -10.23766803741455
    7. '(D' → logprob: -10.36266803741455
    8. '()' → logprob: -10.48766803741455
    9. '(def' → logprob: -11.11266803741455
    10. '(df' → logprob: -11.73766803741455

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20160122215747833
    2. '):
' → logprob: -1.701601266860962
    3. ' ):' → logprob: -9.201601028442383
    4. '   ' → logprob: -10.451601028442383
    5. ')' → logprob: -10.576601028442383
    6. '):
' → logprob: -11.201601028442383
    7. ' ):
' → logprob: -11.201601028442383
    8. '):

' → logprob: -13.201601028442383
    9. '  ' → logprob: -14.076601028442383
    10. ' ' → logprob: -14.201601028442383

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6946743130683899
    2. ' return' → logprob: -0.9446743130683899
    3. 'return' → logprob: -2.194674253463745
    4. 'max' → logprob: -8.194674491882324
    5. ' max' → logprob: -8.194674491882324
    6. '```' → logprob: -11.819674491882324
    7. '`' → logprob: -13.819674491882324
    8. ' ' → logprob: -15.069674491882324
    9. '   ' → logprob: -15.194674491882324
    10. '    ' → logprob: -15.444674491882324

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3161294758319855
    2. ' return' → logprob: -1.316129446029663
    3. '   ' → logprob: -6.066129684448242
    4. 'max' → logprob: -7.691129684448242
    5. ' max' → logprob: -9.566129684448242
    6. '```' → logprob: -11.691129684448242
    7. ' ' → logprob: -12.316129684448242
    8. 'print' → logprob: -14.066129684448242
    9. 'eturn' → logprob: -14.566129684448242
    10. '  ' → logprob: -14.691129684448242

Token 275: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003178901970386505
    2. ' max' → logprob: -5.75317907333374
    3. 'str' → logprob: -13.753178596496582
    4. '(max' → logprob: -16.1281795501709
    5. 'min' → logprob: -16.6281795501709
    6. 'dp' → logprob: -19.1281795501709
    7. ' str' → logprob: -19.6281795501709
    8. '[max' → logprob: -19.7531795501709
    9. '	max' → logprob: -20.6281795501709
    10. '   ' → logprob: -20.8781795501709

Token 276: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. 'dp' → logprob: -15.250000953674316
    4. '(dt' → logprob: -18.75
    5. '(df' → logprob: -19.0
    6. '(
' → logprob: -19.375
    7. '	dp' → logprob: -20.0
    8. '(max' → logprob: -20.375
    9. '(dm' → logprob: -21.0
    10. ' dp' → logprob: -21.25

Token 277: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003961185284424573
    2. '())' → logprob: -7.875396251678467
    3. ')
' → logprob: -11.750395774841309
    4. '()' → logprob: -12.000395774841309
    5. '[])' → logprob: -14.500395774841309
    6. ' )' → logprob: -14.625395774841309
    7. '))' → logprob: -14.750395774841309
    8. ')}' → logprob: -16.375396728515625
    9. '})' → logprob: -16.500396728515625
    10. ')

' → logprob: -16.625396728515625

Token 278: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000965891988016665
    2. 'if' → logprob: -8.12596607208252
    3. '<|end|>' → logprob: -8.12596607208252
    4. '```' → logprob: -8.87596607208252
    5. '#' → logprob: -9.12596607208252
    6. 'print' → logprob: -9.50096607208252
    7. 'N' → logprob: -10.75096607208252
    8. 'a' → logprob: -11.62596607208252
    9. 'n' → logprob: -12.12596607208252
    10. ' def' → logprob: -12.87596607208252

Token 279: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20409494638442993
    2. ' main' → logprob: -1.7040948867797852
    3. 'def' → logprob: -5.954094886779785
    4. ' def' → logprob: -9.454094886779785
    5. 'solve' → logprob: -13.204094886779785
    6. 'process' → logprob: -14.454094886779785
    7. ' solve' → logprob: -14.454094886779785
    8. '_main' → logprob: -14.704094886779785
    9. 'read' → logprob: -14.829094886779785
    10. '__' → logprob: -15.079094886779785

Token 280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005545823951251805
    2. '():
' → logprob: -7.50055456161499
    3. ' ():' → logprob: -14.125555038452148
    4. '():
' → logprob: -14.500555038452148
    5. '()' → logprob: -15.000555038452148
    6. '():

' → logprob: -17.00055503845215
    7. '(' → logprob: -17.50055503845215
    8. 'def' → logprob: -18.37555503845215
    9. ':' → logprob: -18.50055503845215
    10. '()>' → logprob: -18.87555503845215

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003258876968175173
    2. 'N' → logprob: -5.75325870513916
    3. ' N' → logprob: -9.50325870513916
    4. '```' → logprob: -12.12825870513916
    5. 'n' → logprob: -14.00325870513916
    6. '	N' → logprob: -15.62825870513916
    7. 'def' → logprob: -16.503259658813477
    8. '   ' → logprob: -17.753259658813477
    9. '(N' → logprob: -18.003259658813477
    10. ' ' → logprob: -18.128259658813477

Token 282: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0020625919569283724
    2. ' N' → logprob: -6.502062797546387
    3. '   ' → logprob: -7.502062797546387
    4. 'n' → logprob: -11.752062797546387
    5. '```' → logprob: -16.25206184387207
    6. ' ' → logprob: -16.62706184387207
    7. '	N' → logprob: -16.87706184387207
    8. '
' → logprob: -17.00206184387207
    9. 'import' → logprob: -18.25206184387207
    10. '  ' → logprob: -18.50206184387207

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056092582643032
    2. '=' → logprob: -3.8955609798431396
    3. ',' → logprob: -11.270561218261719
    4. ' ' → logprob: -12.645561218261719
    5. '=int' → logprob: -13.270561218261719
    6. '   ' → logprob: -14.145561218261719
    7. '=input' → logprob: -15.270561218261719
    8. ' ,' → logprob: -16.14556121826172
    9. '    ' → logprob: -16.27056121826172
    10. ' =
' → logprob: -16.52056121826172

Token 284: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.061983373016119
    2. 'read' → logprob: -2.811983346939087
    3. ' int' → logprob: -11.311983108520508
    4. 'int' → logprob: -12.561983108520508
    5. '	read' → logprob: -17.561983108520508
    6. '(read' → logprob: -19.936983108520508
    7. '_read' → logprob: -20.186983108520508
    8. '.read' → logprob: -21.186983108520508
    9. '  ' → logprob: -21.311983108520508
    10. ' ' → logprob: -21.561983108520508

Token 285: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42990726232528687
    2. '_input' → logprob: -1.0549073219299316
    3. '_' → logprob: -7.179907321929932
    4. '()
' → logprob: -8.304906845092773
    5. '(' → logprob: -9.429906845092773
    6. '_int' → logprob: -10.054906845092773
    7. 'input' → logprob: -10.804906845092773
    8. 'int' → logprob: -11.179906845092773
    9. '_line' → logprob: -11.804906845092773
    10. '_integer' → logprob: -11.929906845092773

Token 286: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003179259831085801
    2. '()
' → logprob: -5.75317907333374
    3. '()
' → logprob: -13.753179550170898
    4. '()

' → logprob: -15.628179550170898
    5. '()\' → logprob: -16.2531795501709
    6. ' ()' → logprob: -16.3781795501709
    7. '())' → logprob: -17.5031795501709
    8. ')' → logprob: -17.6281795501709
    9. '()`' → logprob: -18.1281795501709
    10. '()<' → logprob: -19.0031795501709

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31399643421173096
    2. 'A' → logprob: -1.313996434211731
    3. ' A' → logprob: -7.313996315002441
    4. '	A' → logprob: -9.938996315002441
    5. ' ' → logprob: -12.188996315002441
    6. '  ' → logprob: -12.313996315002441
    7. '
' → logprob: -12.563996315002441
    8. '```' → logprob: -12.813996315002441
    9. '    
' → logprob: -13.563996315002441
    10. '   ' → logprob: -14.188996315002441

Token 288: ' arr' (ID: 1724)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002728985855355859
    2. ' A' → logprob: -8.250272750854492
    3. '   ' → logprob: -12.000272750854492
    4. 'arr' (adapté à ' arr') → logprob: -12.375272750854492
    5. 'array' → logprob: -14.500272750854492
    6. '```' → logprob: -14.875272750854492
    7. 'a' → logprob: -15.625272750854492
    8. '	A' → logprob: -16.250272750854492
    9. '    
' → logprob: -16.500272750854492
    10. ' ' → logprob: -17.000272750854492

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.535568356513977
    2. '=' → logprob: -0.910568356513977
    3. 'ay' → logprob: -4.4105682373046875
    4. '   ' → logprob: -9.035568237304688
    5. 'ays' → logprob: -9.660568237304688
    6. ',' → logprob: -11.785568237304688
    7. '[:]' → logprob: -12.160568237304688
    8. '=[]' → logprob: -12.535568237304688
    9. 'AY' → logprob: -12.660568237304688
    10. 'a' → logprob: -13.035568237304688

Token 290: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.06196948140859604
    2. ' read' → logprob: -2.811969518661499
    3. 'enumer' → logprob: -14.186969757080078
    4. '	read' → logprob: -14.436969757080078
    5. '   ' → logprob: -15.811969757080078
    6. '(read' → logprob: -15.811969757080078
    7. '  ' → logprob: -16.436969757080078
    8. ' enumerate' → logprob: -16.936969757080078
    9. ' ' → logprob: -16.936969757080078
    10. 'list' → logprob: -17.811969757080078

Token 291: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -8.2994620242971e-06
    2. 'array' → logprob: -12.625008583068848
    3. '_input' → logprob: -13.125008583068848
    4. '()' → logprob: -13.250008583068848
    5. '_' → logprob: -14.625008583068848
    6. '_line' → logprob: -14.875008583068848
    7. '_arr' → logprob: -16.12500762939453
    8. '_code' → logprob: -17.00000762939453
    9. '```' → logprob: -17.12500762939453
    10. '_ARRAY' → logprob: -17.25000762939453

Token 292: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10406457632780075
    2. '
' → logprob: -2.354064464569092
    3. 'A' → logprob: -6.354064464569092
    4. '    
' → logprob: -6.354064464569092
    5. ' A' → logprob: -8.85406494140625
    6. '
' → logprob: -10.47906494140625
    7. '  
' → logprob: -10.85406494140625
    8. '()
' → logprob: -10.85406494140625
    9. '    ' → logprob: -10.97906494140625
    10. '[' → logprob: -11.60406494140625

Token 293: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7514858245849609
    2. '   ' → logprob: -0.7514858245849609
    3. ' A' → logprob: -2.876485824584961
    4. 'enumer' → logprob: -8.876485824584961
    5. '	A' → logprob: -9.501485824584961
    6. '```' → logprob: -10.376485824584961
    7. ' ' → logprob: -10.751485824584961
    8. 'arr' → logprob: -11.126485824584961
    9. '  ' → logprob: -11.501485824584961
    10. ' enumer' → logprob: -12.001485824584961

Token 294: ' arr' (ID: 1724)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06356630474328995
    2. ' A' → logprob: -3.063566207885742
    3. 'arr' (adapté à ' arr') → logprob: -5.313566207885742
    4. 'enumer' → logprob: -5.313566207885742
    5. '   ' → logprob: -5.563566207885742
    6. 'enum' → logprob: -7.688566207885742
    7. ' arr' → logprob: -7.813566207885742
    8. ' enumer' → logprob: -8.688566207885742
    9. ' ' → logprob: -11.126066207885742
    10. '```' → logprob: -11.188566207885742

Token 295: '_enum' (ID: 76984)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05291019007563591
    2. '=' → logprob: -3.302910089492798
    3. '_' → logprob: -5.177910327911377
    4. '_en' → logprob: -5.552910327911377
    5. '_sorted' → logprob: -5.927910327911377
    6. '_enum' → logprob: -6.302910327911377
    7. '_arr' → logprob: -8.802909851074219
    8. '_indices' → logprob: -8.927909851074219
    9. '_index' → logprob: -9.302909851074219
    10. '_with' → logprob: -9.302909851074219

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.042127761989831924
    2. 'er' → logprob: -3.542127847671509
    3. ' =' → logprob: -4.54212760925293
    4. 'uated' → logprob: -6.66712760925293
    5. 'ated' → logprob: -9.29212760925293
    6. 'or' → logprob: -9.66712760925293
    7. '   ' → logprob: -10.04212760925293
    8. 'ar' → logprob: -10.16712760925293
    9. '_=' → logprob: -11.04212760925293
    10. 'um' → logprob: -11.16712760925293

Token 297: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10021423548460007
    2. ' enumerate' → logprob: -2.3502142429351807
    3. '   ' → logprob: -12.975214004516602
    4. 'enum' → logprob: -13.850214004516602
    5. '.enumer' → logprob: -13.850214004516602
    6. ' enumer' → logprob: -13.975214004516602
    7. 'sort' → logprob: -14.600214004516602
    8. 'list' → logprob: -14.850214004516602
    9. ' ' → logprob: -15.100214004516602
    10. 'arr' → logprob: -15.475214004516602

Token 298: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -7.088138227118179e-05
    2. '(arr' → logprob: -9.875070571899414
    3. 'array' → logprob: -11.375070571899414
    4. 'arr' → logprob: -12.000070571899414
    5. '_arr' → logprob: -13.500070571899414
    6. 'Array' → logprob: -15.625070571899414
    7. '_ARRAY' → logprob: -17.750070571899414
    8. '(array' → logprob: -17.750070571899414
    9. '<arr' → logprob: -18.500070571899414
    10. '_arrays' → logprob: -18.625070571899414

Token 299: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -4.320199877838604e-07
    2. 'arr' → logprob: -15.0
    3. '(array' → logprob: -18.25
    4. '(' → logprob: -18.625
    5. '<arr' → logprob: -18.875
    6. '[arr' → logprob: -19.0
    7. ' arr' → logprob: -20.625
    8. ' (' → logprob: -20.75
    9. '	arr' → logprob: -20.875
    10. '(ar' → logprob: -21.875

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020193923264741898
    2. '())' → logprob: -4.145194053649902
    3. ')
' → logprob: -5.645194053649902
    4. '()' → logprob: -8.020194053649902
    5. '())
' → logprob: -8.520194053649902
    6. '()
' → logprob: -9.520194053649902
    7. ' )' → logprob: -12.145194053649902
    8. ')
' → logprob: -12.770194053649902
    9. ')

' → logprob: -13.020194053649902
    10. '   ' → logprob: -13.145194053649902

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10667548328638077
    2. 'arr' → logprob: -2.981675386428833
    3. ' arr' → logprob: -3.231675386428833
    4. ' sorted' → logprob: -5.231675624847412
    5. 'sorted' → logprob: -6.106675624847412
    6. '
' → logprob: -7.481675624847412
    7. '	arr' → logprob: -7.606675624847412
    8. ' A' → logprob: -7.856675624847412
    9. 'A' → logprob: -8.106675148010254
    10. '[arr' → logprob: -8.106675148010254

Token 302: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.08248654007911682
    2. 'sorted' → logprob: -2.707486629486084
    3. ' arr' → logprob: -4.957486629486084
    4. 'A' → logprob: -5.707486629486084
    5. ' sorted' → logprob: -7.082486629486084
    6. '   ' → logprob: -7.082486629486084
    7. ' A' → logprob: -8.332486152648926
    8. 'sort' → logprob: -9.207486152648926
    9. 's' → logprob: -10.332486152648926
    10. '```' → logprob: -11.707486152648926

Token 303: '_sorted' (ID: 104993)
  Prédit: '_enum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_enum' → logprob: -0.6543703675270081
    2. '_sorted' → logprob: -0.9043703675270081
    3. '_sort' → logprob: -2.7793703079223633
    4. '=' → logprob: -4.779370307922363
    5. ' =' → logprob: -5.404370307922363
    6. 'sort' → logprob: -8.529370307922363
    7. 'sorted' → logprob: -9.154370307922363
    8. '=_' → logprob: -9.779370307922363
    9. '_=' → logprob: -10.279370307922363
    10. '_en' → logprob: -11.029370307922363

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014317512512207
    2. '=' → logprob: -1.7014317512512207
    3. 'sorted' → logprob: -11.951431274414062
    4. '(' → logprob: -12.576431274414062
    5. '_sorted' → logprob: -13.451431274414062
    6. '(sorted' → logprob: -13.576431274414062
    7. '(arr' → logprob: -13.826431274414062
    8. '<|end|>' → logprob: -14.201431274414062
    9. '_' → logprob: -14.451431274414062
    10. ')' → logprob: -14.451431274414062

Token 305: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.20141646265983582
    2. ' sort' → logprob: -1.7014164924621582
    3. '   ' → logprob: -13.076416015625
    4. '(sort' → logprob: -14.701416015625
    5. 'sorted' → logprob: -15.076416015625
    6. '	sort' → logprob: -15.826416015625
    7. ' sorted' → logprob: -16.451416015625
    8. ' ' → logprob: -16.826416015625
    9. '.sort' → logprob: -18.201416015625
    10. '  ' → logprob: -18.326416015625

Token 306: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0006379772676154971
    2. '(arr' → logprob: -7.375638008117676
    3. '_arr' → logprob: -11.625638008117676
    4. 'arr' → logprob: -13.375638008117676
    5. 'array' → logprob: -14.250638008117676
    6. 'Array' → logprob: -16.75063705444336
    7. '_ARRAY' → logprob: -17.50063705444336
    8. '<arr' → logprob: -17.50063705444336
    9. '(array' → logprob: -17.75063705444336
    10. '[arr' → logprob: -18.25063705444336

Token 307: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -4.320199877838604e-07
    2. 'arr' → logprob: -14.875
    3. '(' → logprob: -17.5
    4. '[arr' → logprob: -17.625
    5. '<arr' → logprob: -18.375
    6. '((' → logprob: -19.25
    7. '	arr' → logprob: -19.25
    8. '(
' → logprob: -19.25
    9. '```' → logprob: -19.625
    10. ' (' → logprob: -19.75

Token 308: '_enum' (ID: 76984)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.07292228937149048
    2. '_enum' → logprob: -3.3229222297668457
    3. ')' → logprob: -3.9479222297668457
    4. 'arr' → logprob: -4.572922229766846
    5. '_arr' → logprob: -5.572922229766846
    6. 'enum' → logprob: -8.197922706604004
    7. 'Enum' → logprob: -9.322922706604004
    8. ')
' → logprob: -9.447922706604004
    9. '(Enum' → logprob: -9.697922706604004
    10. 'enumer' → logprob: -10.197922706604004

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002892967313528061
    2. ')
' → logprob: -5.877892971038818
    3. '   ' → logprob: -9.37789249420166
    4. ')

' → logprob: -13.12789249420166
    5. ' )' → logprob: -14.12789249420166
    6. ' ' → logprob: -15.25289249420166
    7. ')
' → logprob: -16.002893447875977
    8. '))' → logprob: -16.127893447875977
    9. 'def' → logprob: -16.377893447875977
    10. '[' → logprob: -17.002893447875977

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04507390409708023
    2. ' dp' → logprob: -3.795073986053467
    3. 'dp' → logprob: -4.170073986053467
    4. '
' → logprob: -5.295073986053467
    5. '    
' → logprob: -7.795073986053467
    6. '	dp' → logprob: -8.795073509216309
    7. '```' → logprob: -9.045073509216309
    8. ' result' → logprob: -9.045073509216309
    9. 'result' → logprob: -9.170073509216309
    10. '(dp' → logprob: -9.420073509216309

Token 311: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00010616567305987701
    2. ' dp' → logprob: -9.250105857849121
    3. '   ' → logprob: -11.750105857849121
    4. 'result' → logprob: -13.375105857849121
    5. 'res' → logprob: -14.375105857849121
    6. '	dp' → logprob: -18.125106811523438
    7. 'ans' → logprob: -18.375106811523438
    8. '
' → logprob: -18.625106811523438
    9. '```' → logprob: -19.000106811523438
    10. '_dp' → logprob: -19.375106811523438

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. '＝' → logprob: -15.575940132141113
    4. '2' → logprob: -17.575939178466797
    5. '=result' → logprob: -17.825939178466797
    6. ' =)' → logprob: -18.075939178466797
    7. ' ' → logprob: -18.200939178466797
    8. '=}' → logprob: -18.450939178466797
    9. '=create' → logprob: -18.450939178466797
    10. ',' → logprob: -18.575939178466797

Token 313: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.011047935113310814
    2. ' process' → logprob: -4.511047840118408
    3. '(process' → logprob: -15.886048316955566
    4. '   ' → logprob: -16.76104736328125
    5. '	process' → logprob: -18.13604736328125
    6. '.process' → logprob: -19.63604736328125
    7. '_process' → logprob: -20.01104736328125
    8. 'proces' → logprob: -20.76104736328125
    9. '
' → logprob: -21.01104736328125
    10. '  ' → logprob: -21.38604736328125

Token 314: '_dp' (ID: 133252)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4617365896701813
    2. '_dp' → logprob: -1.0867365598678589
    3. 'dp' → logprob: -3.5867366790771484
    4. '(dp' → logprob: -5.836736679077148
    5. '(' → logprob: -6.461736679077148
    6. ' (' → logprob: -8.586736679077148
    7. '```' → logprob: -10.086736679077148
    8. '_' → logprob: -10.836736679077148
    9. ' dp' → logprob: -11.336736679077148
    10. '_(' → logprob: -11.461736679077148

Token 315: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -11.500021934509277
    3. 'N' → logprob: -12.250021934509277
    4. '
' → logprob: -13.000021934509277
    5. ' (' → logprob: -13.125021934509277
    6. '```' → logprob: -13.875021934509277
    7. '(len' → logprob: -14.000021934509277
    8. 'def' → logprob: -15.000021934509277
    9. '\(' → logprob: -15.375021934509277
    10. 'len' → logprob: -15.625021934509277

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. ' ,' → logprob: -15.375
    3. ',
' → logprob: -16.0
    4. 'arr' → logprob: -18.125
    5. '   ' → logprob: -19.0
    6. '‌,' → logprob: -19.375
    7. ')' → logprob: -19.5
    8. '```' → logprob: -20.625
    9. ',array' → logprob: -20.875
    10. 'import' → logprob: -21.0

Token 317: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0019287518225610256
    2. ' arr' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.626928329467773
    4. '	arr' → logprob: -17.626928329467773
    5. '(arr' → logprob: -17.876928329467773
    6. '[arr' → logprob: -19.001928329467773
    7. '
' → logprob: -19.751928329467773
    8. ')' → logprob: -19.876928329467773
    9. '_arr' → logprob: -20.251928329467773
    10. ' ' → logprob: -20.501928329467773

Token 318: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -7.52919222577475e-05
    2. 'sorted' → logprob: -9.500075340270996
    3. ')' → logprob: -15.750075340270996
    4. 'arr' → logprob: -16.87507438659668
    5. '_' → logprob: -17.00007438659668
    6. 'Sorted' → logprob: -17.25007438659668
    7. ',' → logprob: -17.37507438659668
    8. ' sorted' → logprob: -17.62507438659668
    9. '_arr' → logprob: -17.62507438659668
    10. '_s' → logprob: -17.62507438659668

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014203932136297226
    2. ')
' → logprob: -4.264204025268555
    3. '   ' → logprob: -10.139204025268555
    4. ' )' → logprob: -14.389204025268555
    5. ')
' → logprob: -15.389204025268555
    6. ')

' → logprob: -16.639204025268555
    7. ' )
' → logprob: -17.389204025268555
    8. ' ' → logprob: -18.014204025268555
    9. '),' → logprob: -18.139204025268555
    10. ')\
' → logprob: -18.639204025268555

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16797137260437012
    2. 'print' → logprob: -1.9179713726043701
    3. ' print' → logprob: -5.542971611022949
    4. 'result' → logprob: -5.667971611022949
    5. ' result' → logprob: -8.04297161102295
    6. '```' → logprob: -11.66797161102295
    7. 'res' → logprob: -12.04297161102295
    8. '    
' → logprob: -12.41797161102295
    9. '
' → logprob: -12.41797161102295
    10. ' res' → logprob: -13.41797161102295

Token 321: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09232458472251892
    2. 'result' (adapté à ' result') → logprob: -2.5923244953155518
    3. 'res' → logprob: -4.842324733734131
    4. ' print' → logprob: -5.592324733734131
    5. ' result' → logprob: -6.842324733734131
    6. '   ' → logprob: -7.967324733734131
    7. ' res' → logprob: -8.092324256896973
    8. '```' → logprob: -12.842324256896973
    9. 'answer' → logprob: -12.842324256896973
    10. '
' → logprob: -13.467324256896973

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10036959499120712
    2. '=' → logprob: -2.350369691848755
    3. ' ' → logprob: -8.975369453430176
    4. '_' → logprob: -10.850369453430176
    5. ')' → logprob: -11.850369453430176
    6. '   ' → logprob: -12.975369453430176
    7. '  ' → logprob: -12.975369453430176
    8. ' ' → logprob: -13.600369453430176
    9. '.' → logprob: -13.850369453430176
    10. ',' → logprob: -13.975369453430176

Token 323: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.03804344683885574
    2. 'get' → logprob: -3.28804349899292
    3. ' max' → logprob: -14.163043022155762
    4. ' dp' → logprob: -14.788043022155762
    5. '(get' → logprob: -15.163043022155762
    6. '
' → logprob: -15.413043022155762
    7. '_get' → logprob: -16.038043975830078
    8. 'max' → logprob: -16.663043975830078
    9. ' ' → logprob: -17.038043975830078
    10. '.get' → logprob: -17.288043975830078

Token 324: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.6240566083070007e-06
    2. 'result' → logprob: -13.375001907348633
    3. '_' → logprob: -18.250001907348633
    4. ' _' → logprob: -18.625001907348633
    5. '_res' → logprob: -19.125001907348633
    6. '_RESULT' → logprob: -19.750001907348633
    7. '_results' → logprob: -19.750001907348633
    8. ' result' → logprob: -20.250001907348633
    9. '_max' → logprob: -20.625001907348633
    10. '```' → logprob: -20.625001907348633

Token 325: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -15.250554084777832
    4. ' (' → logprob: -15.250554084777832
    5. '(result' → logprob: -15.875554084777832
    6. '(df' → logprob: -17.750553131103516
    7. '(dx' → logprob: -17.750553131103516
    8. '(dt' → logprob: -18.000553131103516
    9. '(dm' → logprob: -18.375553131103516
    10. '(

' → logprob: -19.000553131103516

Token 326: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048754047602415085
    2. ')' → logprob: -3.0487539768218994
    3. '   ' → logprob: -8.79875373840332
    4. ')
' → logprob: -11.79875373840332
    5. '+' → logprob: -13.04875373840332
    6. '()' → logprob: -13.29875373840332
    7. '()
' → logprob: -13.42375373840332
    8. '())
' → logprob: -13.67375373840332
    9. ' )
' → logprob: -13.79875373840332
    10. ')

' → logprob: -15.04875373840332

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009017392992973328
    2. 'print' → logprob: -4.884017467498779
    3. '
' → logprob: -7.259017467498779
    4. ' print' → logprob: -7.384017467498779
    5. '    
' → logprob: -9.759016990661621
    6. '```' → logprob: -10.884016990661621
    7. '	print' → logprob: -12.009016990661621
    8. ' return' → logprob: -14.009016990661621
    9. 'return' → logprob: -14.759016990661621
    10. ' 
' → logprob: -15.009016990661621

Token 328: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002051885472610593
    2. ' print' → logprob: -6.252051830291748
    3. '   ' → logprob: -9.002052307128906
    4. '```' → logprob: -16.502052307128906
    5. '
' → logprob: -18.127052307128906
    6. 'return' → logprob: -19.002052307128906
    7. '	print' → logprob: -19.127052307128906
    8. '_print' → logprob: -21.002052307128906
    9. 'for' → logprob: -21.377052307128906
    10. '``' → logprob: -22.127052307128906

Token 329: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015042672166600823
    2. '(' → logprob: -6.501504421234131
    3. 'result' → logprob: -13.251503944396973
    4. ' (' → logprob: -15.876503944396973
    5. '()' → logprob: -16.75150489807129
    6. '(
' → logprob: -17.75150489807129
    7. '=result' → logprob: -17.75150489807129
    8. '(res' → logprob: -18.75150489807129
    9. '(results' → logprob: -19.12650489807129
    10. ',result' → logprob: -19.25150489807129

Token 330: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')`' → logprob: -18.375
    5. '()' → logprob: -18.625
    6. '())' → logprob: -18.875
    7. '))' → logprob: -19.5
    8. '   ' → logprob: -19.625
    9. '')' → logprob: -20.25
    10. '`)' → logprob: -20.625

Token 331: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043685585260391235
    2. 'main' → logprob: -3.6686856746673584
    3. '<|end|>' → logprob: -5.043685436248779
    4. '
' → logprob: -5.418685436248779
    5. '#' → logprob: -5.793685436248779
    6. '_' → logprob: -6.543685436248779
    7. '```' → logprob: -6.918685436248779
    8. ' if' → logprob: -8.168685913085938
    9. '\n' → logprob: -8.918685913085938
    10. '__' → logprob: -9.418685913085938

Token 332: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 330
Tokens correctement prédits (1ère position, stricte): 143
Tokens correctement prédits (1ère position, avec adaptation): 157
Tokens correctement prédits (top 10): 297
Précision stricte (1ère position): 43.33%
Précision adaptée (1ère position): 47.58%
Précision (top 10): 90.00%
================================================================================
