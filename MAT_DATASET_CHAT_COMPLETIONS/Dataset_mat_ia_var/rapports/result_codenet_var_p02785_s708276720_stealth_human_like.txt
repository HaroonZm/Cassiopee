================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
h = list(map(int, input().split()))

# Si on veut tout couvrir, problème réglé.
if n <= k:
    print(0)
    exit()

def my_sort(x):
    # bon simple quicksort maison, pas trop optimisé...
    if len(set(x)) <= 1:
        return x
    pivot = x[0]
    lo, hi = [], []
    for elt in x[1:]:
        if elt <= pivot:
            lo.append(elt)
        else:
            hi.append(elt)
    res = my_sort(lo)
    res.append(pivot)
    res += my_sort(hi)
    return res

# tri manuel (j'aurais pu faire sorted mais bon)
h = my_sort(h)

result = 0
for j in range(n - k):
    result = result + h[j] # on additionne

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18331654369831085
    2. ' =' → logprob: -1.9333165884017944
    3. ',' → logprob: -3.933316469192505
    4. ' ' → logprob: -6.433316707611084
    5. '+' → logprob: -7.558316707611084
    6. ')' → logprob: -7.808316707611084
    7. '*' → logprob: -9.308316230773926
    8. ' =
' → logprob: -9.308316230773926
    9. ':' → logprob: -9.433316230773926
    10. '```' → logprob: -9.558316230773926

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2964531481266022
    2. ' ' → logprob: -1.7964531183242798
    3. 'map' → logprob: -2.6714532375335693
    4. ' input' → logprob: -4.67145299911499
    5. '0' → logprob: -4.92145299911499
    6. 'input' → logprob: -5.79645299911499
    7. ' n' → logprob: -7.29645299911499
    8. ' int' → logprob: -7.54645299911499
    9. '10' → logprob: -8.421453475952148
    10. 'int' → logprob: -9.296453475952148

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3105434477329254
    2. '<|end|>' → logprob: -1.685543417930603
    3. '(int' → logprob: -3.1855435371398926
    4. '(lambda' → logprob: -4.185543537139893
    5. '```' → logprob: -5.185543537139893
    6. '<|end|>' → logprob: -5.435543537139893
    7. '(str' → logprob: -5.435543537139893
    8. '[int' → logprob: -6.435543537139893
    9. ')' → logprob: -6.685543537139893
    10. '(len' → logprob: -7.248043537139893

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24169281125068665
    2. '(' → logprob: -2.2416927814483643
    3. '(input' → logprob: -2.3666927814483643
    4. '```' → logprob: -5.741693019866943
    5. '`)' → logprob: -6.241693019866943
    6. '(n' → logprob: -6.366693019866943
    7. '(int' → logprob: -6.366693019866943
    8. ')(' → logprob: -6.741693019866943
    9. '<|end|>' → logprob: -7.241693019866943
    10. '(str' → logprob: -7.241693019866943

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20155970752239227
    2. ' input' → logprob: -1.7015596628189087
    3. '(input' → logprob: -9.201560020446777
    4. ')' → logprob: -10.076560020446777
    5. ',input' → logprob: -13.076560020446777
    6. '=input' → logprob: -14.701560020446777
    7. '<input' → logprob: -15.326560020446777
    8. 'str' → logprob: -15.951560020446777
    9. '[input' → logprob: -15.951560020446777
    10. ' )' → logprob: -16.07655906677246

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1419504880905151
    2. '()' → logprob: -1.5169504880905151
    3. ')' → logprob: -1.8919504880905151
    4. '())' → logprob: -2.0169506072998047
    5. '('' → logprob: -2.7669506072998047
    6. '().' → logprob: -2.7669506072998047
    7. '```' → logprob: -5.016950607299805
    8. '(()' → logprob: -5.266950607299805
    9. '`()' → logprob: -5.391950607299805
    10. '(""))' → logprob: -5.766950607299805

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0025116894394159317
    2. 'strip' → logprob: -6.002511501312256
    3. 'rstrip' → logprob: -10.877511978149414
    4. ' split' → logprob: -11.752511978149414
    5. 'read' → logprob: -12.252511978149414
    6. ')' → logprob: -12.502511978149414
    7. '(split' → logprob: -15.127511978149414
    8. 'spl' → logprob: -15.877511978149414
    9. ' strip' → logprob: -16.627511978149414
    10. 'startswith' → logprob: -16.752511978149414

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08386377990245819
    2. '())' → logprob: -2.9588637351989746
    3. '))' → logprob: -3.5838637351989746
    4. '()' → logprob: -7.708863735198975
    5. '()))' → logprob: -8.583864212036133
    6. '`)' → logprob: -9.458864212036133
    7. '(' → logprob: -10.958864212036133
    8. ')`' → logprob: -11.333864212036133
    9. '')' → logprob: -11.833864212036133
    10. ')))' → logprob: -11.833864212036133

Token 11: 'h' (ID: 71)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34337007999420166
    2. '
' → logprob: -2.718369960784912
    3. 'if' → logprob: -2.968369960784912
    4. 'for' → logprob: -3.593369960784912
    5. 'i' → logprob: -4.218369960784912
    6. 'a' → logprob: -4.218369960784912
    7. '\' → logprob: -4.218369960784912
    8. 'x' → logprob: -4.468369960784912
    9. '#' → logprob: -4.468369960784912
    10. '`' → logprob: -4.468369960784912

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005635808687657118
    2. '[i' → logprob: -5.755635738372803
    3. 'e' → logprob: -6.505635738372803
    4. '[e' → logprob: -8.005636215209961
    5. 's' → logprob: -8.755636215209961
    6. '[n' → logprob: -9.380636215209961
    7. '[]' → logprob: -9.630636215209961
    8. '[int' → logprob: -10.130636215209961
    9. '\[' → logprob: -10.130636215209961
    10. '[:]' → logprob: -10.255636215209961

Token 13: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6079196333885193
    2. ' list' → logprob: -1.107919692993164
    3. '[' → logprob: -3.232919692993164
    4. '[int' → logprob: -3.357919692993164
    5. 'list' → logprob: -3.732919692993164
    6. ' []' → logprob: -3.857919692993164
    7. '[]' → logprob: -5.732919692993164
    8. '[list' → logprob: -6.607919692993164
    9. '[n' → logprob: -7.357919692993164
    10. '[max' → logprob: -8.732919692993164

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020674079656600952
    2. '(range' → logprob: -4.270674228668213
    3. '(h' → logprob: -5.520674228668213
    4. '(map' → logprob: -7.520674228668213
    5. '()' → logprob: -7.645674228668213
    6. '(int' → logprob: -7.895674228668213
    7. '(n' → logprob: -8.270673751831055
    8. '(np' → logprob: -9.020673751831055
    9. '(input' → logprob: -9.145673751831055
    10. '```' → logprob: -9.270673751831055

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023430535569787025
    2. '(' → logprob: -3.773430585861206
    3. '<int' → logprob: -9.523430824279785
    4. '[int' → logprob: -10.648430824279785
    5. 'int' → logprob: -10.898430824279785
    6. '(input' → logprob: -11.273430824279785
    7. ')(' → logprob: -11.398430824279785
    8. '=int' → logprob: -11.648430824279785
    9. '(str' → logprob: -11.898430824279785
    10. '```' → logprob: -12.148430824279785

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1537572145462036
    2. ',input' → logprob: -2.028757095336914
    3. ',int' → logprob: -5.028757095336914
    4. '(input' → logprob: -5.903757095336914
    5. '(' → logprob: -6.778757095336914
    6. '(int' → logprob: -8.153757095336914
    7. ' ,' → logprob: -8.403757095336914
    8. ',(' → logprob: -10.778757095336914
    9. ',float' → logprob: -10.778757095336914
    10. '`,' → logprob: -11.153757095336914

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519415020942688
    2. ' input' → logprob: -1.501941442489624
    3. '(input' → logprob: -11.376941680908203
    4. ',input' → logprob: -14.376941680908203
    5. '=input' → logprob: -16.251941680908203
    6. '<input' → logprob: -16.626941680908203
    7. '	input' → logprob: -16.751941680908203
    8. ')' → logprob: -17.251941680908203
    9. '_input' → logprob: -17.376941680908203
    10. '[input' → logprob: -18.251941680908203

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008605116978287697
    2. '()' → logprob: -4.883605003356934
    3. '(' → logprob: -8.008605003356934
    4. '()))' → logprob: -8.008605003356934
    5. '())' → logprob: -8.508605003356934
    6. '()));' → logprob: -10.133605003356934
    7. '(),' → logprob: -10.883605003356934
    8. '(.' → logprob: -12.008605003356934
    9. '());' → logprob: -12.133605003356934
    10. '()(' → logprob: -12.133605003356934

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -14.375000953674316
    3. 'strip' → logprob: -15.000000953674316
    4. 'rstrip' → logprob: -16.625001907348633
    5. '(split' → logprob: -16.750001907348633
    6. 'spl' → logprob: -18.125001907348633
    7. ')' → logprob: -21.375001907348633
    8. 'plit' → logprob: -22.000001907348633
    9. 's' → logprob: -22.250001907348633
    10. '.split' → logprob: -22.375001907348633

Token 20: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1203124150633812
    2. '))' → logprob: -2.245312452316284
    3. '())' → logprob: -5.120312213897705
    4. '()' → logprob: -7.120312213897705
    5. ')' → logprob: -7.620312213897705
    6. '(' → logprob: -8.745312690734863
    7. '()));' → logprob: -11.745312690734863
    8. '()))
' → logprob: -11.870312690734863
    9. '()))

' → logprob: -12.870312690734863
    10. '()),' → logprob: -13.245312690734863

Token 21: '#' (ID: 2)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.576033890247345
    2. 'dp' → logprob: -1.2010338306427002
    3. 's' → logprob: -3.4510338306427
    4. 'sorted' → logprob: -3.9510338306427
    5. 'count' → logprob: -4.076034069061279
    6. 'd' → logprob: -4.076034069061279
    7. 'result' → logprob: -4.326034069061279
    8. 'ans' → logprob: -4.576034069061279
    9. 'answer' → logprob: -5.201034069061279
    10. 'res' → logprob: -5.326034069061279

Token 22: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3491753935813904
    2. 'h' → logprob: -2.599175453186035
    3. 'for' → logprob: -2.724175453186035
    4. 'max' → logprob: -2.849175453186035
    5. 'd' → logprob: -3.099175453186035
    6. 'count' → logprob: -4.974175453186035
    7. 'ans' → logprob: -5.099175453186035
    8. 'result' → logprob: -5.224175453186035
    9. 'sorted' → logprob: -5.224175453186035
    10. ' dp' → logprob: -5.349175453186035

Token 23: ' on' (ID: 402)
  Prédit: 'ze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ze' → logprob: -0.9136056900024414
    2. 'n' → logprob: -1.6636056900024414
    3. 'z' → logprob: -1.9136056900024414
    4. 'm' → logprob: -2.1636056900024414
    5. 'ng' → logprob: -3.1636056900024414
    6. '#' → logprob: -3.4136056900024414
    7. '=' → logprob: -4.038605690002441
    8. 'e' → logprob: -4.538605690002441
    9. ' =' → logprob: -4.913605690002441
    10. 'zes' → logprob: -5.038605690002441

Token 24: ' veut' (ID: 41653)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4152830839157104
    2. '>' → logprob: -1.5402830839157104
    3. 's' → logprob: -2.040283203125
    4. '<' → logprob: -2.165283203125
    5. ' ' → logprob: -3.915283203125
    6. ' <' → logprob: -4.040283203125
    7. 'i' → logprob: -4.165283203125
    8. 'a' → logprob: -4.290283203125
    9. '<=' → logprob: -4.415283203125
    10. ' >' → logprob: -4.415283203125

Token 25: ' tout' (ID: 5501)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.19761967658996582
    2. 'max' → logprob: -3.072619676589966
    3. ' tr' → logprob: -3.197619676589966
    4. 'faire' → logprob: -4.197619438171387
    5. 'min' → logprob: -4.447619438171387
    6. 's' → logprob: -4.572619438171387
    7. 'que' → logprob: -5.072619438171387
    8. 'calcul' → logprob: -5.447619438171387
    9. 'optim' → logprob: -5.822619438171387
    10. 'p' → logprob: -5.822619438171387

Token 26: ' couvrir' (ID: 197187)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6018279194831848
    2. ' tr' → logprob: -0.8518279194831848
    3. 't' → logprob: -5.351828098297119
    4. ' h' → logprob: -5.351828098297119
    5. 'h' → logprob: -5.851828098297119
    6. 'tri' → logprob: -5.851828098297119
    7. 'comp' → logprob: -6.101828098297119
    8. 'faire' → logprob: -6.351828098297119
    9. ' t' → logprob: -6.726828098297119
    10. 'p' → logprob: -7.101828098297119

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12252756953239441
    2. ' ,' → logprob: -3.247527599334717
    3. ':' → logprob: -3.747527599334717
    4. 'for' → logprob: -4.247527599334717
    5. 's' → logprob: -4.747527599334717
    6. '_' → logprob: -5.122527599334717
    7. ' :' → logprob: -5.747527599334717
    8. 'h' → logprob: -5.872527599334717
    9. '[' → logprob: -6.122527599334717
    10. ' for' → logprob: -6.247527599334717

Token 28: ' problème' (ID: 35630)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.743037760257721
    2. ' on' → logprob: -1.4930377006530762
    3. 'max' → logprob: -1.9930377006530762
    4. ' h' → logprob: -3.118037700653076
    5. ' min' → logprob: -3.618037700653076
    6. ' print' → logprob: -4.368037700653076
    7. ' total' → logprob: -4.493037700653076
    8. 'print' → logprob: -4.618037700653076
    9. 'min' → logprob: -4.743037700653076
    10. ' we' → logprob: -5.368037700653076

Token 29: ' régl' (ID: 91560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5992015600204468
    2. ':' → logprob: -1.5992015600204468
    3. ' ' → logprob: -2.4742016792297363
    4. ' :' → logprob: -2.4742016792297363
    5. ' ,' → logprob: -3.4742016792297363
    6. '.' → logprob: -3.8492016792297363
    7. '_' → logprob: -5.099201679229736
    8. ' =' → logprob: -5.224201679229736
    9. '=' → logprob: -6.099201679229736
    10. '#' → logprob: -6.474201679229736

Token 30: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3540296256542206
    2. '```' → logprob: -2.229029655456543
    3. 'olu' → logprob: -2.604029655456543
    4. 'gl' → logprob: -2.979029655456543
    5. 'è' → logprob: -3.729029655456543
    6. 'u' → logprob: -3.854029655456543
    7. 'e' → logprob: -5.604029655456543
    8. 'out' → logprob: -5.729029655456543
    9. 'gle' → logprob: -5.854029655456543
    10. 'g' → logprob: -6.979029655456543

Token 31: '.
' (ID: 558)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0168218612670898
    2. ':' → logprob: -1.5168218612670898
    3. 'print' → logprob: -2.26682186126709
    4. 'if' → logprob: -2.51682186126709
    5. ' h' → logprob: -3.26682186126709
    6. 'h' → logprob: -3.26682186126709
    7. ' :' → logprob: -3.39182186126709
    8. ',' → logprob: -3.64182186126709
    9. '.' → logprob: -3.64182186126709
    10. ' ' → logprob: -3.89182186126709

Token 32: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6737821698188782
    2. ' if' → logprob: -0.9237821698188782
    3. ':' → logprob: -2.7987821102142334
    4. ' ' → logprob: -5.0487823486328125
    5. '```' → logprob: -5.1737823486328125
    6. 'h' → logprob: -5.9237823486328125
    7. 'n' → logprob: -6.0487823486328125
    8. '
' → logprob: -6.0487823486328125
    9. '.' → logprob: -6.0487823486328125
    10. '\n' → logprob: -6.4237823486328125

Token 33: ' n' (ID: 297)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.018308792263269424
    2. 'k' → logprob: -4.268308639526367
    3. ' n' → logprob: -5.518308639526367
    4. 'n' → logprob: -9.893308639526367
    5. ' ' → logprob: -10.768308639526367
    6. ' sum' → logprob: -11.018308639526367
    7. ' len' → logprob: -11.268308639526367
    8. ' max' → logprob: -11.768308639526367
    9. ' h' → logprob: -12.143308639526367
    10. ' all' → logprob: -12.768308639526367

Token 34: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3321620523929596
    2. ' <=' → logprob: -1.4571620225906372
    3. '==' → logprob: -3.2071621417999268
    4. '<=' → logprob: -4.707161903381348
    5. '=' → logprob: -9.332161903381348
    6. ' =' → logprob: -10.082161903381348
    7. ' ' → logprob: -10.332161903381348
    8. ' <' → logprob: -10.957161903381348
    9. ')' → logprob: -11.332161903381348
    10. ' >=' → logprob: -11.957161903381348

Token 35: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2283002883195877
    2. ' k' → logprob: -1.6033003330230713
    3. '1' → logprob: -6.228300094604492
    4. ' ' → logprob: -7.103300094604492
    5. '0' → logprob: -9.478300094604492
    6. '2' → logprob: -12.228300094604492
    7. '	k' → logprob: -12.728300094604492
    8. ' ' → logprob: -14.103300094604492
    9. '5' → logprob: -14.665800094604492
    10. '3' → logprob: -14.665800094604492

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005904443096369505
    2. ' :' → logprob: -7.6255903244018555
    3. ':
' → logprob: -9.500590324401855
    4. ':return' → logprob: -10.625590324401855
    5. '):' → logprob: -13.625590324401855
    6. ' or' → logprob: -14.625590324401855
    7. ':**' → logprob: -15.375590324401855
    8. ',' → logprob: -15.375590324401855
    9. ' :
' → logprob: -15.500590324401855
    10. '+:' → logprob: -15.625590324401855

Token 37: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.802178144454956
    2. '   ' → logprob: -0.927178144454956
    3. ' print' → logprob: -1.927178144454956
    4. '
' → logprob: -4.677178382873535
    5. ' ' → logprob: -8.552178382873535
    6. '
' → logprob: -8.802178382873535
    7. '    
' → logprob: -8.927178382873535
    8. '	print' → logprob: -8.927178382873535
    9. ':
' → logprob: -9.052178382873535
    10. ':' → logprob: -9.427178382873535

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.055600836873054504
    2. ' print' → logprob: -2.930600881576538
    3. '   ' → logprob: -7.930600643157959
    4. '0' → logprob: -8.305601119995117
    5. '1' → logprob: -10.680601119995117
    6. '```' → logprob: -11.055601119995117
    7. '100' → logprob: -11.305601119995117
    8. '    ' → logprob: -11.430601119995117
    9. '
' → logprob: -11.555601119995117
    10. ' ' → logprob: -11.680601119995117

Token 39: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11415756493806839
    2. '(n' → logprob: -2.2391576766967773
    3. '(k' → logprob: -6.989157676696777
    4. '(len' → logprob: -9.114157676696777
    5. '("' → logprob: -9.489157676696777
    6. '('' → logprob: -9.739157676696777
    7. '()' → logprob: -10.114157676696777
    8. '(*' → logprob: -10.364157676696777
    9. '(h' → logprob: -10.489157676696777
    10. '(sum' → logprob: -10.989157676696777

Token 40: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4090086817741394
    2. '0' → logprob: -1.7840087413787842
    3. '1' → logprob: -1.9090087413787842
    4. 'sum' → logprob: -4.784008502960205
    5. 'max' → logprob: -5.909008502960205
    6. ' n' → logprob: -5.909008502960205
    7. 'h' → logprob: -6.034008502960205
    8. ' ' → logprob: -7.284008502960205
    9. '100' → logprob: -7.409008502960205
    10. '"' → logprob: -7.659008502960205

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004663422703742981
    2. ')
' → logprob: -5.379663467407227
    3. ' )' → logprob: -10.879663467407227
    4. ')
' → logprob: -10.879663467407227
    5. ')return' → logprob: -12.754663467407227
    6. '))' → logprob: -13.754663467407227
    7. '   ' → logprob: -15.004663467407227
    8. ' )
' → logprob: -16.004663467407227
    9. ')`' → logprob: -16.004663467407227
    10. '")' → logprob: -16.129663467407227

Token 42: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0024210833944380283
    2. '   ' → logprob: -6.752420902252197
    3. ' else' → logprob: -7.252420902252197
    4. ')' → logprob: -8.252421379089355
    5. '
' → logprob: -8.752421379089355
    6. 'elif' → logprob: -9.627421379089355
    7. '<|end|>' → logprob: -10.752421379089355
    8. '    
' → logprob: -10.877421379089355
    9. ' ' → logprob: -13.002421379089355
    10. ',' → logprob: -13.252421379089355

Token 43: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23292787373065948
    2. 'exit' (adapté à ' exit') → logprob: -1.607927918434143
    3. ' exit' → logprob: -5.8579277992248535
    4. 'elif' → logprob: -7.1079277992248535
    5. '	exit' → logprob: -7.1079277992248535
    6. '\n' → logprob: -7.3579277992248535
    7. ')' → logprob: -7.4829277992248535
    8. ' else' → logprob: -7.6079277992248535
    9. '   ' → logprob: -8.107928276062012
    10. '```' → logprob: -8.232928276062012

Token 44: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00033999193692579865
    2. '(' → logprob: -8.375340461730957
    3. '()
' → logprob: -9.250340461730957
    4. '()

' → logprob: -12.000340461730957
    5. '()\' → logprob: -12.375340461730957
    6. '()`' → logprob: -13.875340461730957
    7. '())' → logprob: -14.750340461730957
    8. '()
' → logprob: -15.125340461730957
    9. ' ()' → logprob: -15.125340461730957
    10. '(
' → logprob: -15.500340461730957

Token 45: 'def' (ID: 1314)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.4463908672332764
    2. 'diff' → logprob: -1.4463908672332764
    3. 'dp' → logprob: -1.6963908672332764
    4. 'd' → logprob: -2.1963908672332764
    5. '#' → logprob: -2.3213908672332764
    6. 'dist' → logprob: -3.0713908672332764
    7. 'cost' → logprob: -4.1963911056518555
    8. 'sorted' → logprob: -4.3213911056518555
    9. 'interval' → logprob: -4.4463911056518555
    10. 'segments' → logprob: -4.4463911056518555

Token 46: ' my' (ID: 922)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4657852053642273
    2. ' calculate' → logprob: -2.340785264968872
    3. ' cover' → logprob: -2.590785264968872
    4. ' main' → logprob: -3.215785264968872
    5. ' cost' → logprob: -3.590785264968872
    6. ' min' → logprob: -3.965785264968872
    7. ' max' → logprob: -4.090785026550293
    8. ' calc' → logprob: -4.340785026550293
    9. ' compute' → logprob: -4.840785026550293
    10. ' get' → logprob: -4.840785026550293

Token 47: '_sort' (ID: 43815)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39276042580604553
    2. '_sum' → logprob: -2.5177605152130127
    3. '_max' → logprob: -3.0177605152130127
    4. '_func' → logprob: -3.1427605152130127
    5. '_sort' → logprob: -3.2677605152130127
    6. '_min' → logprob: -3.5177605152130127
    7. '_abs' → logprob: -4.392760276794434
    8. '_diff' → logprob: -4.767760276794434
    9. '_split' → logprob: -4.767760276794434
    10. '_factor' → logprob: -5.017760276794434

Token 48: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2091226875782013
    2. '(lst' → logprob: -2.209122657775879
    3. '(a' → logprob: -3.459122657775879
    4. '(arr' → logprob: -3.959122657775879
    5. '(l' → logprob: -4.584122657775879
    6. '(ls' → logprob: -5.709122657775879
    7. '(nums' → logprob: -5.959122657775879
    8. '(h' → logprob: -5.959122657775879
    9. '(array' → logprob: -6.334122657775879
    10. '(s' → logprob: -6.584122657775879

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002547839190810919
    2. ',' → logprob: -6.127547740936279
    3. ':' → logprob: -9.127548217773438
    4. ')' → logprob: -9.252548217773438
    5. ' ):' → logprob: -9.502548217773438
    6. '):
' → logprob: -10.252548217773438
    7. 's' → logprob: -11.752548217773438
    8. '[]):' → logprob: -11.877548217773438
    9. '[' → logprob: -12.002548217773438
    10. '):
' → logprob: -12.502548217773438

Token 50: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3978707492351532
    2. ':' → logprob: -1.6478707790374756
    3. ' return' → logprob: -2.6478707790374756
    4. ':return' → logprob: -2.8978707790374756
    5. 'x' → logprob: -5.1478705406188965
    6. '   ' → logprob: -6.1478705406188965
    7. ' :' → logprob: -6.8978705406188965
    8. ' x' → logprob: -8.772871017456055
    9. '-' → logprob: -9.147871017456055
    10. ':x' → logprob: -9.272871017456055

Token 51: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0020533124916255474
    2. ' return' → logprob: -6.252053260803223
    3. '   ' → logprob: -9.502053260803223
    4. 'x' → logprob: -10.002053260803223
    5. ':return' → logprob: -13.002053260803223
    6. '	return' → logprob: -13.627053260803223
    7. ' ' → logprob: -14.752053260803223
    8. ' x' → logprob: -15.002053260803223
    9. '{return' → logprob: -15.752053260803223
    10. '-return' → logprob: -15.752053260803223

Token 52: ' bon' (ID: 4846)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09144049882888794
    2. ' return' → logprob: -2.466440439224243
    3. 'x' → logprob: -6.716440677642822
    4. '   ' → logprob: -7.466440677642822
    5. ' -' → logprob: -8.966440200805664
    6. 'abs' → logprob: -9.091440200805664
    7. '-' → logprob: -9.216440200805664
    8. '-return' → logprob: -9.966440200805664
    9. ' x' → logprob: -10.091440200805664
    10. '"""' → logprob: -10.216440200805664

Token 53: ' simple' (ID: 4705)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2589019238948822
    2. 'return' → logprob: -1.5089019536972046
    3. '   ' → logprob: -6.133902072906494
    4. 'x' → logprob: -6.383902072906494
    5. '	return' → logprob: -7.633902072906494
    6. ',' → logprob: -8.008901596069336
    7. ' =' → logprob: -8.133901596069336
    8. 'eturn' → logprob: -8.508901596069336
    9. '=' → logprob: -8.633901596069336
    10. ' x' → logprob: -8.633901596069336

Token 54: ' quick' (ID: 4853)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30637937784194946
    2. '   ' → logprob: -1.9313793182373047
    3. ' return' → logprob: -2.3063793182373047
    4. ',' → logprob: -5.681379318237305
    5. '=' → logprob: -6.056379318237305
    6. 'eturn' → logprob: -6.306379318237305
    7. '-' → logprob: -6.431379318237305
    8. ' -' → logprob: -6.681379318237305
    9. 'r' → logprob: -6.806379318237305
    10. ' =' → logprob: -6.806379318237305

Token 55: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0032240566797554493
    2. '_sort' → logprob: -5.878223896026611
    3. ' sort' → logprob: -8.12822437286377
    4. 'ort' → logprob: -9.62822437286377
    5. 's' → logprob: -10.62822437286377
    6. '(sort' → logprob: -11.50322437286377
    7. '_' → logprob: -12.25322437286377
    8. 'Sort' → logprob: -12.25322437286377
    9. '_s' → logprob: -12.75322437286377
    10. 'start' → logprob: -13.12822437286377

Token 56: ' maison' (ID: 22828)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.525136411190033
    2. '(' → logprob: -1.2751364707946777
    3. '(x' → logprob: -2.1501364707946777
    4. 'def' → logprob: -5.775136470794678
    5. '_' → logprob: -6.025136470794678
    6. ' :' → logprob: -7.025136470794678
    7. '(p' → logprob: -7.025136470794678
    8. '(arr' → logprob: -7.025136470794678
    9. ',' → logprob: -7.275136470794678
    10. '):' → logprob: -7.400136470794678

Token 57: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4090171456336975
    2. '(x' → logprob: -1.2840170860290527
    3. '   ' → logprob: -3.4090170860290527
    4. '(' → logprob: -4.409017086029053
    5. ',' → logprob: -5.534017086029053
    6. 'def' → logprob: -6.034017086029053
    7. ' :' → logprob: -6.534017086029053
    8. '(arr' → logprob: -7.034017086029053
    9. '):' → logprob: -7.284017086029053
    10. '(p' → logprob: -7.409017086029053

Token 58: ' pas' (ID: 2173)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29333508014678955
    2. '   ' → logprob: -2.0433349609375
    3. 'return' → logprob: -2.5433349609375
    4. ' if' → logprob: -3.7933349609375
    5. ' pivot' → logprob: -4.1683349609375
    6. 'pivot' → logprob: -6.0433349609375
    7. 'if' → logprob: -6.4183349609375
    8. ' ' → logprob: -6.4183349609375
    9. ' pass' → logprob: -7.9183349609375
    10. ' piv' → logprob: -8.0433349609375

Token 59: ' trop' (ID: 14765)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -2.0961334705352783
    2. ' besoin' → logprob: -2.0961334705352783
    3. ' forcément' → logprob: -2.2211334705352783
    4. ' sûr' → logprob: -2.9711334705352783
    5. ' nécessaire' → logprob: -3.3461334705352783
    6. ' vraiment' → logprob: -3.3461334705352783
    7. ' ' → logprob: -3.4711334705352783
    8. ' mal' → logprob: -3.5961334705352783
    9. ' très' → logprob: -3.7211334705352783
    10. ' for' → logprob: -3.7211334705352783

Token 60: ' optim' (ID: 9367)
  Prédit: 'mal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mal' → logprob: -1.6134179830551147
    2. 'optim' → logprob: -1.7384179830551147
    3. 'com' → logprob: -1.8634179830551147
    4. 'long' → logprob: -2.8634181022644043
    5. 'efficient' → logprob: -3.1134181022644043
    6. ' compliqué' → logprob: -3.1134181022644043
    7. 'd' → logprob: -3.2384181022644043
    8. 'python' → logprob: -3.2384181022644043
    9. 'import' → logprob: -3.7384181022644043
    10. 'optimal' → logprob: -3.7384181022644043

Token 61: 'isé' (ID: 30065)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6338724493980408
    2. 'isé' → logprob: -1.2588725090026855
    3. 'ale' → logprob: -1.8838725090026855
    4. 'isée' → logprob: -4.3838725090026855
    5. 's' → logprob: -5.2588725090026855
    6. 'ized' → logprob: -5.5088725090026855
    7. 'e' → logprob: -6.1338725090026855
    8. 'is' → logprob: -6.5088725090026855
    9. 'a' → logprob: -7.0088725090026855
    10. 'é' → logprob: -7.0088725090026855

Token 62: '...
' (ID: 4908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15750475227832794
    2. '(x' → logprob: -2.4075047969818115
    3. '   ' → logprob: -3.2825047969818115
    4. ',' → logprob: -4.907504558563232
    5. '(' → logprob: -5.782504558563232
    6. '.' → logprob: -6.407504558563232
    7. ' :' → logprob: -7.032504558563232
    8. 'def' → logprob: -7.032504558563232
    9. '):' → logprob: -7.407504558563232
    10. ':return' → logprob: -7.782504558563232

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2272157222032547
    2. '   ' → logprob: -2.2272157669067383
    3. '(x' → logprob: -3.7272157669067383
    4. '<|end|>' → logprob: -3.9772157669067383
    5. ':return' → logprob: -4.727215766906738
    6. '(' → logprob: -4.977215766906738
    7. '):' → logprob: -5.102215766906738
    8. 'def' → logprob: -5.227215766906738
    9. ')' → logprob: -5.227215766906738
    10. '(p' → logprob: -5.727215766906738

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.050045717507600784
    2. 'return' → logprob: -4.050045490264893
    3. '   ' → logprob: -4.050045490264893
    4. ' if' → logprob: -4.800045490264893
    5. 'pivot' → logprob: -5.675045490264893
    6. 'p' → logprob: -7.050045490264893
    7. 'for' → logprob: -7.550045490264893
    8. 'i' → logprob: -7.925045490264893
    9. 'x' → logprob: -9.05004596710205
    10. ' return' → logprob: -9.17504596710205

Token 65: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2519661486148834
    2. 'len' → logprob: -1.501966118812561
    3. ' not' → logprob: -10.75196647644043
    4. ' ' → logprob: -11.25196647644043
    5. ' x' → logprob: -14.12696647644043
    6. '	len' → logprob: -14.50196647644043
    7. 'not' → logprob: -14.75196647644043
    8. '   ' → logprob: -15.00196647644043
    9. '(len' → logprob: -15.00196647644043
    10. '  ' → logprob: -15.25196647644043

Token 66: '(set' (ID: 25904)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00015979631280060858
    2. 'x' → logprob: -8.875160217285156
    3. '(' → logprob: -10.875160217285156
    4. ' x' → logprob: -14.875160217285156
    5. ')' → logprob: -15.000160217285156
    6. ')x' → logprob: -16.250160217285156
    7. ' (' → logprob: -16.750160217285156
    8. '<|end|>' → logprob: -17.125160217285156
    9. '	x' → logprob: -17.750160217285156
    10. ' ' → logprob: -17.750160217285156

Token 67: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.362307223957032e-05
    2. '(' → logprob: -9.625073432922363
    3. 'x' → logprob: -12.500073432922363
    4. ')' → logprob: -12.875073432922363
    5. ' (' → logprob: -14.250073432922363
    6. ')x' → logprob: -15.250073432922363
    7. '(
' → logprob: -15.625073432922363
    8. ')(' → logprob: -16.87507438659668
    9. ' x' → logprob: -17.12507438659668
    10. '(s' → logprob: -17.25007438659668

Token 68: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008494958281517029
    2. '())' → logprob: -5.008494853973389
    3. ')==' → logprob: -6.883494853973389
    4. ' )' → logprob: -8.008495330810547
    5. ')<=' → logprob: -8.008495330810547
    6. '))' → logprob: -9.633495330810547
    7. ')=' → logprob: -12.633495330810547
    8. '(x' → logprob: -12.633495330810547
    9. '   ' → logprob: -12.633495330810547
    10. '）' → logprob: -13.008495330810547

Token 69: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.40226662158966064
    2. ' <=' → logprob: -1.2772666215896606
    3. ')' → logprob: -3.527266502380371
    4. '==' → logprob: -4.152266502380371
    5. ')<=' → logprob: -5.402266502380371
    6. ' ==' → logprob: -6.277266502380371
    7. '()' → logprob: -7.902266502380371
    8. '<' → logprob: -8.652266502380371
    9. ' )' → logprob: -9.027266502380371
    10. '   ' → logprob: -9.652266502380371

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002812124788761139
    2. ' ' → logprob: -5.877811908721924
    3. '2' → logprob: -12.752812385559082
    4. '  ' → logprob: -13.377812385559082
    5. '   ' → logprob: -13.377812385559082
    6. '10' → logprob: -15.440312385559082
    7. '16' → logprob: -15.502812385559082
    8. '3' → logprob: -15.752812385559082
    9. ' ' → logprob: -16.252811431884766
    10. '4' → logprob: -16.315311431884766

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.590104698669165e-05
    2. ' ' → logprob: -10.125085830688477
    3. '2' → logprob: -10.375085830688477
    4. '10' → logprob: -12.375085830688477
    5. '3' → logprob: -12.875085830688477
    6. '16' → logprob: -13.125085830688477
    7. '5' → logprob: -13.625085830688477
    8. '4' → logprob: -14.000085830688477
    9. '15' → logprob: -14.375085830688477
    10. '8' → logprob: -15.187585830688477

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014338025823235512
    2. ':
' → logprob: -5.13933801651001
    3. ':return' → logprob: -5.13933801651001
    4. ' or' → logprob: -6.13933801651001
    5. '   ' → logprob: -8.139338493347168
    6. '):' → logprob: -11.139338493347168
    7. ')' → logprob: -11.264338493347168
    8. ' :' → logprob: -11.889338493347168
    9. '       ' → logprob: -11.889338493347168
    10. ':
' → logprob: -12.264338493347168

Token 73: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7503172755241394
    2. '       ' → logprob: -1.0003173351287842
    3. '   ' → logprob: -2.000317335128784
    4. ':return' → logprob: -4.375317096710205
    5. ':
' → logprob: -4.750317096710205
    6. ' or' → logprob: -6.500317096710205
    7. ',' → logprob: -7.625317096710205
    8. ' return' → logprob: -7.875317096710205
    9. '	return' → logprob: -8.125317573547363
    10. '<|end|>' → logprob: -8.250317573547363

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14469416439533234
    2. 'return' (adapté à ' return') → logprob: -2.1446940898895264
    3. ' return' → logprob: -4.3946943283081055
    4. '       ' → logprob: -5.2696943283081055
    5. '	return' → logprob: -9.644694328308105
    6. ' ' → logprob: -10.019694328308105
    7. ':return' → logprob: -12.519694328308105
    8. '  ' → logprob: -12.644694328308105
    9. '    ' → logprob: -13.769694328308105
    10. '     ' → logprob: -14.019694328308105

Token 75: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.623244553338736e-05
    2. ' x' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.62506675720215
    4. '	x' → logprob: -18.62506675720215
    5. ' ' → logprob: -19.00006675720215
    6. '[' → logprob: -19.37506675720215
    7. '0' → logprob: -19.62506675720215
    8. '1' → logprob: -19.75006675720215
    9. '(x' → logprob: -20.25006675720215
    10. 'len' → logprob: -20.62506675720215

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3713989555835724
    2. '
' → logprob: -1.24639892578125
    3. '    
' → logprob: -3.87139892578125
    4. '<|end|>' → logprob: -7.37139892578125
    5. ',' → logprob: -8.37139892578125
    6. '  
' → logprob: -8.74639892578125
    7. ')' → logprob: -9.37139892578125
    8. '
' → logprob: -9.49639892578125
    9. '[::-' → logprob: -9.49639892578125
    10. 'return' → logprob: -9.74639892578125

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002432024572044611
    2. '<|end|>' → logprob: -7.502431869506836
    3. '    
' → logprob: -8.002431869506836
    4. '
' → logprob: -8.127431869506836
    5. 'n' → logprob: -8.877431869506836
    6. 'if' → logprob: -9.002431869506836
    7. ',' → logprob: -9.127431869506836
    8. '  ' → logprob: -9.127431869506836
    9. 'x' → logprob: -9.377431869506836
    10. '[' → logprob: -9.377431869506836

Token 78: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' (adapté à ' pivot') → logprob: -0.10769660770893097
    2. '   ' → logprob: -2.357696533203125
    3. ' pivot' → logprob: -5.607696533203125
    4. 'p' → logprob: -5.982696533203125
    5. ' piv' → logprob: -8.107696533203125
    6. 'else' → logprob: -8.607696533203125
    7. '	p' → logprob: -9.232696533203125
    8. 'm' → logprob: -9.357696533203125
    9. 'mid' → logprob: -9.357696533203125
    10. '    
' → logprob: -9.482696533203125

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616935461759567
    2. '=' → logprob: -4.758616924285889
    3. ',' → logprob: -13.258617401123047
    4. ' ' → logprob: -15.133617401123047
    5. '=x' → logprob: -16.008617401123047
    6. ')' → logprob: -16.508617401123047
    7. '_' → logprob: -16.633617401123047
    8. '_index' → logprob: -17.133617401123047
    9. '_idx' → logprob: -17.383617401123047
    10. ' =)' → logprob: -17.758617401123047

Token 80: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.34844836592674255
    2. 'x' → logprob: -1.223448395729065
    3. '	x' → logprob: -13.348448753356934
    4. '(x' → logprob: -13.973448753356934
    5. ' ' → logprob: -14.473448753356934
    6. '[x' → logprob: -15.473448753356934
    7. '[' → logprob: -15.723448753356934
    8. 'len' → logprob: -16.035947799682617
    9. ' ' → logprob: -16.660947799682617
    10. ' len' → logprob: -17.035947799682617

Token 81: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004110103938728571
    2. '[len' → logprob: -5.504110336303711
    3. '[-' → logprob: -10.379110336303711
    4. '[int' → logprob: -15.004110336303711
    5. '[random' → logprob: -15.504110336303711
    6. 'len' → logprob: -16.37911033630371
    7. '0' → logprob: -18.37911033630371
    8. '[rand' → logprob: -18.37911033630371
    9. '[
' → logprob: -18.50411033630371
    10. ' [' → logprob: -18.75411033630371

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024620062322355807
    2. 'len' → logprob: -8.375246047973633
    3. '-' → logprob: -11.250246047973633
    4. ' ' → logprob: -13.875246047973633
    5. '[' → logprob: -14.750246047973633
    6. '[len' → logprob: -14.875246047973633
    7. '1' → logprob: -15.000246047973633
    8. ' len' → logprob: -15.250246047973633
    9. '(len' → logprob: -15.875246047973633
    10. 'int' → logprob: -16.250246047973633

Token 83: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019272083416581154
    2. ')
' → logprob: -4.1442718505859375
    3. ']' → logprob: -6.2692718505859375
    4. ' )' → logprob: -6.8942718505859375
    5. '])' → logprob: -9.394271850585938
    6. '   ' → logprob: -9.769271850585938
    7. ' )
' → logprob: -10.019271850585938
    8. ']
' → logprob: -10.269271850585938
    9. ':' → logprob: -10.644271850585938
    10. '[' → logprob: -11.144271850585938

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.183447927236557
    2. '
' → logprob: -2.68344783782959
    3. '[' → logprob: -3.05844783782959
    4. '    
' → logprob: -4.30844783782959
    5. '  
' → logprob: -5.18344783782959
    6. ' 
' → logprob: -5.68344783782959
    7. 'rest' → logprob: -5.68344783782959
    8. 's' → logprob: -6.30844783782959
    9. 'l' → logprob: -6.55844783782959
    10. '   
' → logprob: -6.55844783782959

Token 85: ' lo' (ID: 1445)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.4881680905818939
    2. ' less' → logprob: -1.6131681203842163
    3. 'left' → logprob: -2.2381680011749268
    4. ' left' → logprob: -3.3631680011749268
    5. ' smaller' → logprob: -4.488168239593506
    6. 'sm' → logprob: -4.738168239593506
    7. ' lows' → logprob: -4.988168239593506
    8. 'l' → logprob: -5.613168239593506
    9. ' lesser' → logprob: -5.738168239593506
    10. '   ' → logprob: -5.988168239593506

Token 86: ',' (ID: 11)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.22349950671195984
    2. 'wer' → logprob: -1.8484995365142822
    3. ' =' → logprob: -3.2234995365142822
    4. '=' → logprob: -6.223499298095703
    5. 'wers' → logprob: -7.223499298095703
    6. '=[' → logprob: -9.223499298095703
    7. 'ws' → logprob: -10.223499298095703
    8. '=[]' → logprob: -10.223499298095703
    9. 'west' → logprob: -10.723499298095703
    10. '=w' → logprob: -11.348499298095703

Token 87: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.12952743470668793
    2. ' hi' → logprob: -2.7545273303985596
    3. 'eq' → logprob: -3.1295273303985596
    4. 'e' → logprob: -5.754527568817139
    5. 'mid' → logprob: -6.379527568817139
    6. '=' → logprob: -6.379527568817139
    7. 'mi' → logprob: -6.629527568817139
    8. 'gt' → logprob: -7.254527568817139
    9. ' eq' → logprob: -7.379527568817139
    10. 'equal' → logprob: -7.504527568817139

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40173590183258057
    2. ' =' → logprob: -1.1517359018325806
    3. 'w' → logprob: -4.526735782623291
    4. ',' → logprob: -5.651735782623291
    5. '=[]' → logprob: -7.901735782623291
    6. 'st' → logprob: -11.02673625946045
    7. 's' → logprob: -11.77673625946045
    8. '=[],' → logprob: -12.02673625946045
    9. '=[]
' → logprob: -12.65173625946045
    10. '=w' → logprob: -12.90173625946045

Token 89: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.011522850021719933
    2. ' [],' → logprob: -4.5115227699279785
    3. '[]' → logprob: -8.011523246765137
    4. '[' → logprob: -8.886523246765137
    5. ' [' → logprob: -13.011523246765137
    6. '[]
' → logprob: -13.636523246765137
    7. '([],' → logprob: -14.511523246765137
    8. ',' → logprob: -14.886523246765137
    9. ' ' → logprob: -15.136523246765137
    10. '[],
' → logprob: -15.261523246765137

Token 90: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02328205481171608
    2. ' []' → logprob: -3.773282051086426
    3. '[]>' → logprob: -10.523282051086426
    4. '[]}' → logprob: -12.398282051086426
    5. '[' → logprob: -13.148282051086426
    6. '[])' → logprob: -13.273282051086426
    7. '[],' → logprob: -14.273282051086426
    8. '=[]' → logprob: -14.898282051086426
    9. '[]
' → logprob: -15.148282051086426
    10. '[]=' → logprob: -15.773282051086426

Token 91: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5322144031524658
    2. 'for' → logprob: -1.2822144031524658
    3. '<|end|>' → logprob: -2.407214403152466
    4. ' ' → logprob: -4.032214164733887
    5. '   ' → logprob: -4.157214164733887
    6. '<|end|>' → logprob: -5.907214164733887
    7. '[]' → logprob: -6.407214164733887
    8. '[' → logprob: -6.782214164733887
    9. '	for' → logprob: -6.782214164733887
    10. '  ' → logprob: -6.907214164733887

Token 92: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11289513856172562
    2. ' for' → logprob: -2.2378952503204346
    3. ' ' → logprob: -10.737895011901855
    4. '<|end|>' → logprob: -10.862895011901855
    5. '	for' → logprob: -11.362895011901855
    6. '[' → logprob: -11.612895011901855
    7. '   ' → logprob: -12.612895011901855
    8. '  ' → logprob: -12.987895011901855
    9. 'or' → logprob: -13.112895011901855
    10. ',' → logprob: -13.737895011901855

Token 93: ' elt' (ID: 91460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8137632608413696
    2. 'e' → logprob: -1.1887632608413696
    3. 'v' → logprob: -1.8137632608413696
    4. 'el' → logprob: -2.81376314163208
    5. 'a' → logprob: -5.06376314163208
    6. 'y' → logprob: -5.18876314163208
    7. 'elem' → logprob: -5.31376314163208
    8. 'xi' → logprob: -6.06376314163208
    9. 'val' → logprob: -6.43876314163208
    10. 'item' → logprob: -6.43876314163208

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009833889082074165
    2. 'in' → logprob: -4.634833812713623
    3. ' ' → logprob: -9.759834289550781
    4. 's' → logprob: -12.759834289550781
    5. '  ' → logprob: -12.759834289550781
    6. 'i' → logprob: -13.134834289550781
    7. 'd' → logprob: -13.384834289550781
    8. ' i' → logprob: -13.384834289550781
    9. 'x' → logprob: -13.509834289550781
    10. ',' → logprob: -13.759834289550781

Token 95: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2014152854681015
    2. 'x' → logprob: -1.7014153003692627
    3. '	x' → logprob: -13.701415061950684
    4. '(x' → logprob: -14.576415061950684
    5. ' ' → logprob: -15.451415061950684
    6. '[x' → logprob: -16.201416015625
    7. '   ' → logprob: -16.951416015625
    8. '[' → logprob: -17.201416015625
    9. '{x' → logprob: -18.076416015625
    10. ')x' → logprob: -18.263916015625

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ':' → logprob: -14.125000953674316
    3. '1' → logprob: -14.625000953674316
    4. ':
' → logprob: -16.375001907348633
    5. ' [' → logprob: -17.000001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '(' → logprob: -18.375001907348633
    9. '[:' → logprob: -18.750001907348633
    10. '2' → logprob: -19.125001907348633

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001638885005377233
    2. '[' → logprob: -6.501638889312744
    3. ' ' → logprob: -9.001638412475586
    4. ':' → logprob: -11.751638412475586
    5. '   ' → logprob: -13.626638412475586
    6. '(' → logprob: -14.001638412475586
    7. ' [' → logprob: -14.251638412475586
    8. '```' → logprob: -14.876638412475586
    9. ',' → logprob: -15.439138412475586
    10. ':
' → logprob: -15.564138412475586

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034532451536506414
    2. ':]' → logprob: -5.878453254699707
    3. ']:' → logprob: -8.003453254699707
    4. ']:
' → logprob: -8.378453254699707
    5. ':
' → logprob: -10.003453254699707
    6. ' :' → logprob: -11.128453254699707
    7. ':],' → logprob: -12.503453254699707
    8. 'if' → logprob: -13.003453254699707
    9. '():' → logprob: -13.253453254699707
    10. ':]
' → logprob: -13.378453254699707

Token 99: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0020515278447419405
    2. ']:' → logprob: -6.62705135345459
    3. ':
' → logprob: -8.37705135345459
    4. ']:
' → logprob: -8.37705135345459
    5. ':' → logprob: -8.62705135345459
    6. ']' → logprob: -10.50205135345459
    7. '():
' → logprob: -11.00205135345459
    8. ' ]' → logprob: -11.25205135345459
    9. ']:

' → logprob: -11.62705135345459
    10. '   ' → logprob: -12.62705135345459

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01306317187845707
    2. ' if' → logprob: -5.013062953948975
    3. ':' → logprob: -6.013062953948975
    4. '<|end|>' → logprob: -6.263062953948975
    5. ':
' → logprob: -7.388062953948975
    6. '
' → logprob: -8.388063430786133
    7. '<|end|>' → logprob: -8.388063430786133
    8. 'if' → logprob: -8.888063430786133
    9. '   ' → logprob: -8.888063430786133
    10. ',' → logprob: -8.888063430786133

Token 101: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04866446554660797
    2. '       ' → logprob: -3.6736645698547363
    3. 'if' (adapté à ' if') → logprob: -4.048664569854736
    4. '        ' → logprob: -5.923664569854736
    5. '
' → logprob: -7.298664569854736
    6. '    ' → logprob: -7.423664569854736
    7. ' 
' → logprob: -8.548664093017578
    8. '<|end|>' → logprob: -8.673664093017578
    9. ' lo' → logprob: -9.048664093017578
    10. ' ' → logprob: -9.798664093017578

Token 102: ' elt' (ID: 91460)
  Prédit: ' elt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elt' → logprob: -0.0024758970830589533
    2. 'elt' → logprob: -6.002475738525391
    3. ' ' → logprob: -15.87747573852539
    4. 'Elt' → logprob: -17.75247573852539
    5. '  ' → logprob: -18.00247573852539
    6. ' elm' → logprob: -18.12747573852539
    7. ' el' → logprob: -18.87747573852539
    8. '	' → logprob: -19.12747573852539
    9. ' ' → logprob: -19.25247573852539
    10. ' eft' → logprob: -19.37747573852539

Token 103: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9702358245849609
    2. '<' → logprob: -1.220235824584961
    3. ' <=' → logprob: -1.470235824584961
    4. ' <' → logprob: -2.345235824584961
    5. '>=' → logprob: -9.970235824584961
    6. '>' → logprob: -10.220235824584961
    7. '<p' → logprob: -10.595235824584961
    8. ' ' → logprob: -11.470235824584961
    9. ' >=' → logprob: -11.470235824584961
    10. '<n' → logprob: -11.970235824584961

Token 104: ' pivot' (ID: 44506)
  Prédit: ' pivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.6931522488594055
    2. 'pivot' → logprob: -0.6931522488594055
    3. ' piv' → logprob: -13.31815242767334
    4. ' ' → logprob: -13.31815242767334
    5. 'p' → logprob: -13.69315242767334
    6. '	p' → logprob: -15.69315242767334
    7. 'ivot' → logprob: -16.943151473999023
    8. '  ' → logprob: -17.068151473999023
    9. ' ' → logprob: -17.068151473999023
    10. 'Pivot' → logprob: -17.193151473999023

Token 105: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16023662686347961
    2. ':' → logprob: -1.9102365970611572
    3. '):
' → logprob: -12.410236358642578
    4. '       ' → logprob: -12.535236358642578
    5. ':
' → logprob: -13.285236358642578
    6. '   ' → logprob: -13.785236358642578
    7. ',' → logprob: -14.160236358642578
    8. 'lo' → logprob: -14.285236358642578
    9. '_lo' → logprob: -15.535236358642578
    10. ' :
' → logprob: -15.660236358642578

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6114141345024109
    2. ' lo' → logprob: -0.9864141345024109
    3. 'lo' → logprob: -2.7364141941070557
    4. '           ' → logprob: -3.9864141941070557
    5. '(lo' → logprob: -7.861413955688477
    6. ' hi' → logprob: -8.486413955688477
    7. '_lo' → logprob: -8.986413955688477
    8. '               ' → logprob: -9.611413955688477
    9. ',' → logprob: -9.736413955688477
    10. ' ' → logprob: -10.111413955688477

Token 107: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' (adapté à ' lo') → logprob: -0.576313853263855
    2. ' lo' → logprob: -0.826313853263855
    3. 'hi' → logprob: -8.076313972473145
    4. ' hi' → logprob: -9.951313972473145
    5. '_lo' → logprob: -11.701313972473145
    6. '           ' → logprob: -12.576313972473145
    7. '(lo' → logprob: -13.451313972473145
    8. '               ' → logprob: -14.201313972473145
    9. 'ho' → logprob: -14.576313972473145
    10. '   ' → logprob: -14.701313972473145

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.722539834911004e-05
    2. '.' → logprob: -9.250097274780273
    3. 'append' → logprob: -14.375097274780273
    4. '.app' → logprob: -14.875097274780273
    5. '.Append' → logprob: -16.750097274780273
    6. ' .' → logprob: -16.750097274780273
    7. '.ap' → logprob: -17.000097274780273
    8. ' append' → logprob: -18.250097274780273
    9. 'Append' → logprob: -18.625097274780273
    10. '.extend' → logprob: -18.750097274780273

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.125
    3. 'elt' → logprob: -18.25
    4. '(
' → logprob: -18.625
    5. '(el' → logprob: -18.75
    6. '(ele' → logprob: -20.25
    7. 'eld' → logprob: -20.375
    8. 'ect' → logprob: -20.875
    9. ' elt' → logprob: -21.0
    10. 'el' → logprob: -21.0

Token 110: 'elt' (ID: 3292)
  Prédit: 'elt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elt' → logprob: -9.615255839889869e-05
    2. ' elt' → logprob: -9.250096321105957
    3. 'eld' → logprob: -18.00009536743164
    4. 'ect' → logprob: -18.00009536743164
    5. 'olt' → logprob: -18.50009536743164
    6. 'lt' → logprob: -18.75009536743164
    7. ' ' → logprob: -19.25009536743164
    8. 'eft' → logprob: -19.37509536743164
    9. 'ellt' → logprob: -19.87509536743164
    10. 'edt' → logprob: -20.00009536743164

Token 111: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06207277998328209
    2. ')' → logprob: -2.81207275390625
    3. '       ' → logprob: -9.31207275390625
    4. '   ' → logprob: -12.06207275390625
    5. ')
' → logprob: -12.43707275390625
    6. ' )
' → logprob: -12.56207275390625
    7. ')

' → logprob: -13.81207275390625
    8. ' )' → logprob: -15.56207275390625
    9. 'else' → logprob: -15.81207275390625
    10. ')`
' → logprob: -16.56207275390625

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008882822468876839
    2. 'else' → logprob: -4.883882999420166
    3. ' else' → logprob: -6.758882999420166
    4. '   ' → logprob: -9.258882522583008
    5. '
' → logprob: -12.633882522583008
    6. ')' → logprob: -12.758882522583008
    7. ',' → logprob: -12.883882522583008
    8. 'elif' → logprob: -13.258882522583008
    9. 'continue' → logprob: -13.508882522583008
    10. '<|end|>' → logprob: -13.758882522583008

Token 113: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.707843005657196
    2. 'else' (adapté à ' else') → logprob: -0.707843005657196
    3. '       ' → logprob: -4.582842826843262
    4. '   ' → logprob: -5.457842826843262
    5. '
' → logprob: -10.832842826843262
    6. '	else' → logprob: -11.082842826843262
    7. ')' → logprob: -11.582842826843262
    8. '    ' → logprob: -11.707842826843262
    9. ' s' → logprob: -11.832842826843262
    10. ' elif' → logprob: -11.957842826843262

Token 114: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057489387691020966
    2. ':' → logprob: -3.1824893951416016
    3. ':
' → logprob: -4.807489395141602
    4. ' hi' → logprob: -5.432489395141602
    5. 'hi' → logprob: -7.057489395141602
    6. '       ' → logprob: -7.307489395141602
    7. '   ' → logprob: -8.557489395141602
    8. '               ' → logprob: -10.432489395141602
    9. '          ' → logprob: -10.682489395141602
    10. ',' → logprob: -10.932489395141602

Token 115: '           ' (ID: 352)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.12389658391475677
    2. '           ' → logprob: -2.623896598815918
    3. ' hi' → logprob: -3.123896598815918
    4. '   ' → logprob: -12.123896598815918
    5. 'ho' → logprob: -12.248896598815918
    6. '               ' → logprob: -12.498896598815918
    7. ' ' → logprob: -13.123896598815918
    8. '_hi' → logprob: -13.248896598815918
    9. '		' → logprob: -13.373896598815918
    10. '       ' → logprob: -13.373896598815918

Token 116: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' (adapté à ' hi') → logprob: -0.038042180240154266
    2. ' hi' → logprob: -3.2880420684814453
    3. '   ' → logprob: -14.413042068481445
    4. 'ho' → logprob: -16.288042068481445
    5. '_hi' → logprob: -17.288042068481445
    6. '           ' → logprob: -17.663042068481445
    7. '       ' → logprob: -18.288042068481445
    8. ' ' → logprob: -18.788042068481445
    9. '-hi' → logprob: -19.038042068481445
    10. 'Hi' → logprob: -19.163042068481445

Token 117: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007113590254448354
    2. '.' → logprob: -7.250711441040039
    3. 'append' → logprob: -13.875711441040039
    4. '.app' → logprob: -15.375711441040039
    5. ' .' → logprob: -16.25071144104004
    6. '.add' → logprob: -17.00071144104004
    7. '.setdefault' → logprob: -17.75071144104004
    8. '.Append' → logprob: -18.25071144104004
    9. 'app' → logprob: -18.37571144104004
    10. '.push' → logprob: -18.50071144104004

Token 118: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.625
    3. '(
' → logprob: -18.0
    4. '(el' → logprob: -18.5
    5. '(ele' → logprob: -18.875
    6. '(element' → logprob: -19.75
    7. '(elem' → logprob: -20.25
    8. '<|end|>' → logprob: -20.875
    9. '((' → logprob: -21.0
    10. '(

' → logprob: -21.25

Token 119: 'elt' (ID: 3292)
  Prédit: 'elt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elt' → logprob: -5.5577775128767826e-06
    2. ' elt' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.7500057220459
    4. 'eld' → logprob: -17.0000057220459
    5. ' ' → logprob: -17.8750057220459
    6. ')' → logprob: -18.1250057220459
    7. '  ' → logprob: -18.5000057220459
    8. '(' → logprob: -18.6250057220459
    9. 'ellt' → logprob: -18.6250057220459
    10. 'ert' → logprob: -19.1250057220459

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032595922239124775
    2. ')
' → logprob: -5.753259658813477
    3. '   ' → logprob: -10.003259658813477
    4. ' )' → logprob: -11.628259658813477
    5. ')

' → logprob: -11.628259658813477
    6. 'return' → logprob: -12.128259658813477
    7. 'def' → logprob: -12.628259658813477
    8. ')return' → logprob: -13.003259658813477
    9. ')
' → logprob: -13.128259658813477
    10. '[' → logprob: -13.628259658813477

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03690379858016968
    2. 'return' → logprob: -3.4119038581848145
    3. ' return' → logprob: -6.9119038581848145
    4. '
' → logprob: -6.9119038581848145
    5. 'lo' → logprob: -7.5369038581848145
    6. '[' → logprob: -8.536903381347656
    7. ',' → logprob: -9.286903381347656
    8. '    
' → logprob: -9.536903381347656
    9. '	return' → logprob: -9.661903381347656
    10. '```' → logprob: -9.911903381347656

Token 122: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007732145953923464
    2. ' return' → logprob: -5.257731914520264
    3. '   ' → logprob: -6.007731914520264
    4. 'lo' → logprob: -10.507732391357422
    5. '	return' → logprob: -12.257732391357422
    6. ' lo' → logprob: -13.882732391357422
    7. '
' → logprob: -14.257732391357422
    8. '```' → logprob: -15.007732391357422
    9. ' ' → logprob: -15.132732391357422
    10. '       ' → logprob: -15.132732391357422

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631778717041
    2. '=' → logprob: -1.313263177871704
    3. 'return' → logprob: -13.813262939453125
    4. 'eturn' → logprob: -16.063262939453125
    5. '=my' → logprob: -16.313262939453125
    6. ' =
' → logprob: -16.438262939453125
    7. ' return' → logprob: -17.188262939453125
    8. ' ' → logprob: -17.313262939453125
    9. '.extend' → logprob: -17.563262939453125
    10. ')' → logprob: -17.563262939453125

Token 124: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.02975141443312168
    2. ' my' → logprob: -3.5297513008117676
    3. '(my' → logprob: -14.654751777648926
    4. ' ' → logprob: -15.779751777648926
    5. '   ' → logprob: -16.02975082397461
    6. '	my' → logprob: -16.02975082397461
    7. '=my' → logprob: -17.02975082397461
    8. '[' → logprob: -17.52975082397461
    9. '  ' → logprob: -18.15475082397461
    10. '[]' → logprob: -18.52975082397461

Token 125: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.375001907348633
    3. 'sort' → logprob: -14.500001907348633
    4. ' _' → logprob: -15.250001907348633
    5. '_sorted' → logprob: -16.000001907348633
    6. '_SORT' → logprob: -17.625001907348633
    7. '_s' → logprob: -18.000001907348633
    8. '_merge' → logprob: -18.375001907348633
    9. '_split' → logprob: -18.500001907348633
    10. 'Sort' → logprob: -19.625001907348633

Token 126: '(lo' (ID: 178972)
  Prédit: '(lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lo' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.500003814697266
    3. '(li' → logprob: -14.875003814697266
    4. 'lo' → logprob: -17.500003814697266
    5. '(low' → logprob: -17.625003814697266
    6. '(le' → logprob: -17.750003814697266
    7. '(ll' → logprob: -18.125003814697266
    8. '(ls' → logprob: -18.125003814697266
    9. ' (' → logprob: -18.375003814697266
    10. '((' → logprob: -18.750003814697266

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011752246646210551
    2. ')+' → logprob: -6.751175403594971
    3. ' )' → logprob: -12.251174926757812
    4. '+' → logprob: -16.001174926757812
    5. ')
' → logprob: -16.501174926757812
    6. '+)' → logprob: -17.751174926757812
    7. ')+(' → logprob: -18.126174926757812
    8. ' ' → logprob: -19.001174926757812
    9. ']' → logprob: -19.126174926757812
    10. ')+"' → logprob: -19.751174926757812

Token 128: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47472310066223145
    2. '+' → logprob: -0.9747231006622314
    3. 'res' → logprob: -7.474722862243652
    4. '+[' → logprob: -10.724722862243652
    5. '.extend' → logprob: -10.974722862243652
    6. '+
' → logprob: -11.349722862243652
    7. '   ' → logprob: -11.474722862243652
    8. '
' → logprob: -12.599722862243652
    9. '[::-' → logprob: -12.849722862243652
    10. ' res' → logprob: -13.099722862243652

Token 129: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0002019907406065613
    2. ' res' → logprob: -8.875202178955078
    3. '+' → logprob: -10.000202178955078
    4. '[' → logprob: -11.625202178955078
    5. ' +' → logprob: -12.125202178955078
    6. '
' → logprob: -14.125202178955078
    7. '   ' → logprob: -14.625202178955078
    8. 'ress' → logprob: -15.125202178955078
    9. 'return' → logprob: -15.500202178955078
    10. '(res' → logprob: -16.000202178955078

Token 130: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.011502224020659924
    2. '.append' → logprob: -4.511502265930176
    3. '+=' → logprob: -8.386502265930176
    4. ' +=' → logprob: -8.636502265930176
    5. '+' → logprob: -10.011502265930176
    6. '.' → logprob: -13.511502265930176
    7. 'extend' → logprob: -13.636502265930176
    8. ' .' → logprob: -14.386502265930176
    9. ' +' → logprob: -14.511502265930176
    10. '=' → logprob: -16.13650131225586

Token 131: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.375004768371582
    3. 'pivot' → logprob: -14.250004768371582
    4. ' pivot' → logprob: -19.0000057220459
    5. 'p' → logprob: -19.1250057220459
    6. '(
' → logprob: -20.8750057220459
    7. ' (' → logprob: -21.2500057220459
    8. '	p' → logprob: -22.6250057220459
    9. ' piv' → logprob: -22.6250057220459
    10. 'Pivot' → logprob: -23.1250057220459

Token 132: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -3.702754474943504e-05
    2. 'pivot' → logprob: -10.25003719329834
    3. 'ivo' → logprob: -14.50003719329834
    4. 'i' → logprob: -15.75003719329834
    5. '(p' → logprob: -16.000036239624023
    6. 'iv' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.375036239624023
    8. '(' → logprob: -16.375036239624023
    9. 'ivi' → logprob: -16.500036239624023
    10. '[' → logprob: -16.875036239624023

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06798448413610458
    2. ')
' → logprob: -2.8179845809936523
    3. '   ' → logprob: -5.192984580993652
    4. 'res' → logprob: -8.067984580993652
    5. '
' → logprob: -9.942984580993652
    6. ')return' → logprob: -10.067984580993652
    7. '<|end|>' → logprob: -11.317984580993652
    8. ' res' → logprob: -12.317984580993652
    9. '<|end|>' → logprob: -12.442984580993652
    10. 'return' → logprob: -12.692984580993652

Token 134: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00047487911069765687
    2. '   ' → logprob: -8.25047492980957
    3. ' res' → logprob: -8.62547492980957
    4. '
' → logprob: -11.50047492980957
    5. 'return' → logprob: -12.00047492980957
    6. '    
' → logprob: -12.00047492980957
    7. '	res' → logprob: -12.12547492980957
    8. '(res' → logprob: -13.12547492980957
    9. '+' → logprob: -13.75047492980957
    10. ',res' → logprob: -14.00047492980957

Token 135: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -2.3080716346157715e-05
    2. 'return' → logprob: -11.125022888183594
    3. '
' → logprob: -12.625022888183594
    4. ' res' → logprob: -12.875022888183594
    5. '   ' → logprob: -13.125022888183594
    6. '    
' → logprob: -15.375022888183594
    7. '+' → logprob: -16.875022888183594
    8. '(res' → logprob: -17.250022888183594
    9. '	res' → logprob: -17.500022888183594
    10. ' 
' → logprob: -17.875022888183594

Token 136: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -4.024604277219623e-05
    2. 'extend' → logprob: -10.500040054321289
    3. '+=' → logprob: -11.750040054321289
    4. '.' → logprob: -12.500040054321289
    5. ' +=' → logprob: -14.500040054321289
    6. '.ext' → logprob: -14.875040054321289
    7. 'extends' → logprob: -15.875040054321289
    8. '+' → logprob: -16.62504005432129
    9. 'ext' → logprob: -18.50004005432129
    10. 'extended' → logprob: -18.62504005432129

Token 137: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.0009114635176956654
    2. ' my' → logprob: -7.000911235809326
    3. '(my' → logprob: -18.125911712646484
    4. '	my' → logprob: -20.000911712646484
    5. ' ' → logprob: -21.625911712646484
    6. 'mys' → logprob: -22.250911712646484
    7. '=my' → logprob: -22.250911712646484
    8. '.my' → logprob: -22.375911712646484
    9. '   ' → logprob: -22.500911712646484
    10. 'm' → logprob: -22.500911712646484

Token 138: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -3.650518920039758e-06
    2. 'sort' → logprob: -12.625003814697266
    3. '_' → logprob: -15.250003814697266
    4. 'Sort' → logprob: -18.875003814697266
    5. '_s' → logprob: -18.875003814697266
    6. ' _' → logprob: -19.875003814697266
    7. 'o' → logprob: -19.875003814697266
    8. '_sorted' → logprob: -20.500003814697266
    9. '_SORT' → logprob: -20.625003814697266
    10. '_
' → logprob: -20.875003814697266

Token 139: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. 'hi' → logprob: -17.375
    3. ' (' → logprob: -20.25
    4. '(lo' → logprob: -20.25
    5. '_hi' → logprob: -21.5
    6. '((' → logprob: -21.625
    7. '(h' → logprob: -22.375
    8. '(
' → logprob: -22.375
    9. 'Hi' → logprob: -22.875
    10. '(ht' → logprob: -23.625

Token 140: 'hi' (ID: 3686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693148672580719
    2. 'hi' → logprob: -0.693148672580719
    3. ' hi' → logprob: -13.943148612976074
    4. ')' → logprob: -15.068148612976074
    5. 'ho' → logprob: -15.943148612976074
    6. '_hi' → logprob: -16.94314956665039
    7. 'Hi' → logprob: -17.94314956665039
    8. '-hi' → logprob: -18.06814956665039
    9. '(h' → logprob: -19.19314956665039
    10. 'h' → logprob: -19.94314956665039

Token 141: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759801864624023
    2. ')' → logprob: -0.8259801864624023
    3. ')
' → logprob: -10.700980186462402
    4. '   ' → logprob: -11.825980186462402
    5. ')return' → logprob: -11.950980186462402
    6. 'return' → logprob: -12.700980186462402
    7. ' )
' → logprob: -14.450980186462402
    8. ')

' → logprob: -14.450980186462402
    9. ' )' → logprob: -15.325980186462402
    10. ' return' → logprob: -17.32598114013672

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06340810656547546
    2. 'return' → logprob: -2.813408136367798
    3. ' return' → logprob: -6.563407897949219
    4. '	return' → logprob: -10.563407897949219
    5. '    
' → logprob: -14.438407897949219
    6. ')' → logprob: -14.438407897949219
    7. '       ' → logprob: -15.563407897949219
    8. ':return' → logprob: -15.688407897949219
    9. '   ' → logprob: -15.688407897949219
    10. 'eturn' → logprob: -15.813407897949219

Token 143: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39097514748573303
    2. 'return' (adapté à ' return') → logprob: -1.1409751176834106
    3. ' return' → logprob: -5.515974998474121
    4. '	return' → logprob: -9.640974998474121
    5. ':return' → logprob: -13.015974998474121
    6. '    
' → logprob: -13.140974998474121
    7. '       ' → logprob: -13.765974998474121
    8. ' ' → logprob: -14.265974998474121
    9. '
' → logprob: -14.265974998474121
    10. ')' → logprob: -14.265974998474121

Token 144: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5048530030981055e-06
    2. ' res' → logprob: -13.500001907348633
    3. '(res' → logprob: -21.625001907348633
    4. 're' → logprob: -24.500001907348633
    5. '	res' → logprob: -24.750001907348633
    6. '$res' → logprob: -25.125001907348633
    7. 'ress' → logprob: -25.875001907348633
    8. 'r' → logprob: -26.125001907348633
    9. '[' → logprob: -26.500001907348633
    10. ' ' → logprob: -27.250001907348633

Token 145: '

' (ID: 279)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9935134649276733
    2. 'd' → logprob: -1.4935134649276733
    3. 'interval' → logprob: -1.4935134649276733
    4. 'g' → logprob: -2.868513584136963
    5. 'dist' → logprob: -3.368513584136963
    6. 'dif' → logprob: -3.993513584136963
    7. 'ec' → logprob: -4.118513584136963
    8. 'gap' → logprob: -4.368513584136963
    9. 'h' → logprob: -4.493513584136963
    10. '#' → logprob: -4.618513584136963

Token 146: '#' (ID: 2)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.41135072708129883
    2. 'd' → logprob: -2.036350727081299
    3. 'diff' → logprob: -2.161350727081299
    4. '#' → logprob: -3.286350727081299
    5. 'dist' → logprob: -4.161350727081299
    6. 'dif' → logprob: -4.286350727081299
    7. 'interval' → logprob: -5.161350727081299
    8. 'g' → logprob: -6.161350727081299
    9. 'ec' → logprob: -6.286350727081299
    10. 'dh' → logprob: -6.286350727081299

Token 147: ' tri' (ID: 12665)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1779654324054718
    2. 'diff' → logprob: -2.5529654026031494
    3. 'd' → logprob: -3.4279654026031494
    4. '#' → logprob: -3.5529654026031494
    5. 'dist' → logprob: -5.1779656410217285
    6. 'dif' → logprob: -5.4279656410217285
    7. 'sorted' → logprob: -5.5529656410217285
    8. 'g' → logprob: -5.9279656410217285
    9. 'interval' → logprob: -6.1779656410217285
    10. 'dh' → logprob: -7.1779656410217285

Token 148: ' manuel' (ID: 152919)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13724416494369507
    2. 'd' → logprob: -2.51224422454834
    3. 'diff' → logprob: -3.76224422454834
    4. '_h' → logprob: -4.26224422454834
    5. 'ed' → logprob: -5.38724422454834
    6. 'dif' → logprob: -6.88724422454834
    7. 'dist' → logprob: -7.13724422454834
    8. 'H' → logprob: -8.01224422454834
    9. '_diff' → logprob: -8.13724422454834
    10. 'delta' → logprob: -8.13724422454834

Token 149: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6132758855819702
    2. 'diff' → logprob: -1.4882758855819702
    3. 'd' → logprob: -1.7382758855819702
    4. 'dif' → logprob: -4.23827600479126
    5. 'g' → logprob: -4.48827600479126
    6. 'dist' → logprob: -4.98827600479126
    7. 'delta' → logprob: -5.23827600479126
    8. 'interval' → logprob: -5.73827600479126
    9. 'for' → logprob: -5.86327600479126
    10. 'gap' → logprob: -6.11327600479126

Token 150: 'j' (ID: 73)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0435553640127182
    2. 'd' → logprob: -3.79355525970459
    3. 'diff' → logprob: -4.54355525970459
    4. 'dist' → logprob: -5.66855525970459
    5. 'g' → logprob: -6.66855525970459
    6. 'interval' → logprob: -7.41855525970459
    7. 'dif' → logprob: -7.54355525970459
    8. 'sorted' → logprob: -7.66855525970459
    9. ')' → logprob: -7.79355525970459
    10. 'delta' → logprob: -7.79355525970459

Token 151: ''aurais' (ID: 149917)
  Prédit: 'ust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.4879429340362549
    2. 'uste' → logprob: -1.1129429340362549
    3. '=' → logprob: -3.612942934036255
    4. 'e' → logprob: -4.237942695617676
    5. ''ai' → logprob: -4.487942695617676
    6. ')' → logprob: -7.362942695617676
    7. 'h' → logprob: -7.862942695617676
    8. ''espère' → logprob: -7.862942695617676
    9. 'avascript' → logprob: -8.237942695617676
    10. 'a' → logprob: -8.362942695617676

Token 152: ' pu' (ID: 2923)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fait' → logprob: -1.127610206604004
    2. 'pu' → logprob: -1.252610206604004
    3. 'pré' → logprob: -2.002610206604004
    4. 'util' → logprob: -2.752610206604004
    5. 'pl' → logprob: -3.377610206604004
    6. 'aim' → logprob: -3.377610206604004
    7. 'bien' → logprob: -3.752610206604004
    8. 'pas' → logprob: -4.002610206604004
    9. 'pref' → logprob: -4.627610206604004
    10. 'pe' → logprob: -4.627610206604004

Token 153: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.432596355676651
    2. 'util' → logprob: -1.8075963258743286
    3. 'just' → logprob: -2.057596445083618
    4. 'a' → logprob: -4.057596206665039
    5. 'mettre' → logprob: -4.182596206665039
    6. 'app' → logprob: -4.807596206665039
    7. 'é' → logprob: -5.557596206665039
    8. 'f' → logprob: -5.932596206665039
    9. 'appel' → logprob: -6.182596206665039
    10. 'dire' → logprob: -6.307596206665039

Token 154: ' sorted' (ID: 20099)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1189536303281784
    2. 'print' → logprob: -3.1189537048339844
    3. ' h' → logprob: -3.2439537048339844
    4. 'sorted' → logprob: -3.8689537048339844
    5. 'return' → logprob: -5.243953704833984
    6. ' print' → logprob: -7.368953704833984
    7. ' sorted' → logprob: -7.618953704833984
    8. ' return' → logprob: -8.493953704833984
    9. 'appel' → logprob: -8.618953704833984
    10. 'sort' → logprob: -8.743953704833984

Token 155: ' mais' (ID: 2899)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.021694503724575043
    2. '()' → logprob: -4.521694660186768
    3. ')' → logprob: -4.896694660186768
    4. '())' → logprob: -6.146694660186768
    5. '(' → logprob: -7.771694660186768
    6. 'h' → logprob: -8.77169418334961
    7. 'mais' → logprob: -9.02169418334961
    8. ',' → logprob: -9.39669418334961
    9. '(),' → logprob: -10.27169418334961
    10. '),' → logprob: -10.64669418334961

Token 156: ' bon' (ID: 4846)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.41424131393432617
    2. 'h' → logprob: -1.5392413139343262
    3. ' h' → logprob: -2.914241313934326
    4. ' on' → logprob: -3.539241313934326
    5. '...' → logprob: -5.414241313934326
    6. 'k' → logprob: -5.414241313934326
    7. 'on' → logprob: -5.539241313934326
    8. '()' → logprob: -5.664241313934326
    9. ' k' → logprob: -5.664241313934326
    10. '(k' → logprob: -5.789241313934326

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004736276343464851
    2. ')
' → logprob: -6.379736423492432
    3. '...)' → logprob: -7.129736423492432
    4. 'h' → logprob: -7.379736423492432
    5. '):' → logprob: -7.379736423492432
    6. '(h' → logprob: -7.754736423492432
    7. '),' → logprob: -9.254735946655273
    8. ',' → logprob: -9.254735946655273
    9. ')...' → logprob: -9.504735946655273
    10. ' )' → logprob: -9.879735946655273

Token 158: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09392637014389038
    2. 'd' → logprob: -3.343926429748535
    3. 'diff' → logprob: -3.343926429748535
    4. 'dif' → logprob: -5.718926429748535
    5. 'sorted' → logprob: -5.968926429748535
    6. 'dist' → logprob: -5.968926429748535
    7. 'g' → logprob: -6.343926429748535
    8. 'delta' → logprob: -6.343926429748535
    9. 'gap' → logprob: -6.718926429748535
    10. 'interval' → logprob: -6.968926429748535

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759404897689819
    2. ' =' → logprob: -0.8259404897689819
    3. '=h' → logprob: -14.825940132141113
    4. '=my' → logprob: -15.325940132141113
    5. '＝' → logprob: -15.825940132141113
    6. 'sorted' → logprob: -15.825940132141113
    7. ')' → logprob: -16.95094108581543
    8. '_sorted' → logprob: -16.95094108581543
    9. ',' → logprob: -17.20094108581543
    10. 'h' → logprob: -17.45094108581543

Token 160: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.03804149478673935
    2. ' my' → logprob: -3.288041591644287
    3. '(my' → logprob: -19.288042068481445
    4. ' ' → logprob: -19.538042068481445
    5. '	my' → logprob: -20.413042068481445
    6. '   ' → logprob: -21.163042068481445
    7. 'My' → logprob: -21.663042068481445
    8. 'mys' → logprob: -21.913042068481445
    9. 'm' → logprob: -22.288042068481445
    10. '.my' → logprob: -22.663042068481445

Token 161: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -6.704273118884885e-07
    2. 'sort' → logprob: -15.625000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_sorted' → logprob: -15.750000953674316
    5. 'h' → logprob: -17.125
    6. ' _' → logprob: -17.25
    7. '_SORT' → logprob: -17.875
    8. '_s' → logprob: -17.875
    9. '_h' → logprob: -19.25
    10. 'Sort' → logprob: -20.25

Token 162: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'h' → logprob: -16.375
    4. ' (' → logprob: -16.75
    5. '(n' → logprob: -19.25
    6. '(x' → logprob: -20.5
    7. '(s' → logprob: -20.75
    8. '(k' → logprob: -21.0
    9. '[h' → logprob: -21.125
    10. '(list' → logprob: -21.25

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.37500286102295
    3. '[' → logprob: -14.62500286102295
    4. ')
' → logprob: -15.62500286102295
    5. ')#' → logprob: -16.375001907348633
    6. '))' → logprob: -16.875001907348633
    7. ')`' → logprob: -18.375001907348633
    8. ')[' → logprob: -18.500001907348633
    9. '[:' → logprob: -19.375001907348633
    10. ')

' → logprob: -19.500001907348633

Token 164: 'result' (ID: 2521)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.614456295967102
    2. 'd' → logprob: -1.364456295967102
    3. 'dif' → logprob: -2.8644561767578125
    4. 'ec' → logprob: -3.2394561767578125
    5. 'dist' → logprob: -3.3644561767578125
    6. '#' → logprob: -3.6144561767578125
    7. 'g' → logprob: -4.1144561767578125
    8. 'interval' → logprob: -4.1144561767578125
    9. 'gap' → logprob: -5.9894561767578125
    10. 's' → logprob: -6.8644561767578125

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010890062898397446
    2. '=' → logprob: -5.010890007019043
    3. 's' → logprob: -5.635890007019043
    4. '_' → logprob: -8.260890007019043
    5. '_diff' → logprob: -9.385890007019043
    6. 'diff' → logprob: -9.760890007019043
    7. '_dist' → logprob: -10.135890007019043
    8. ' ' → logprob: -10.885890007019043
    9. '_ranges' → logprob: -11.010890007019043
    10. '_s' → logprob: -11.135890007019043

Token 166: ' ' (ID: 220)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7083593010902405
    2. '0' → logprob: -1.3333592414855957
    3. ' h' → logprob: -2.4583592414855957
    4. 'float' → logprob: -2.5833592414855957
    5. ' ' → logprob: -3.4583592414855957
    6. ' float' → logprob: -3.9583592414855957
    7. '[]' → logprob: -4.208359241485596
    8. 'sum' → logprob: -4.958359241485596
    9. ' []' → logprob: -5.833359241485596
    10. ' sum' → logprob: -6.333359241485596

Token 167: '0' (ID: 15)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.15749506652355194
    2. '0' → logprob: -2.0324950218200684
    3. '[]' → logprob: -5.282495021820068
    4. 'float' → logprob: -5.282495021820068
    5. 'sum' → logprob: -5.907495021820068
    6. '[h' → logprob: -7.532495021820068
    7. '100' → logprob: -8.282495498657227
    8. '10' → logprob: -8.407495498657227
    9. '[' → logprob: -8.782495498657227
    10. 'n' → logprob: -9.032495498657227

Token 168: '
' (ID: 198)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.27067831158638
    2. 'g' → logprob: -2.0206782817840576
    3. 'for' → logprob: -2.8956782817840576
    4. 'dist' → logprob: -4.020678520202637
    5. 'interval' → logprob: -4.645678520202637
    6. 'dif' → logprob: -4.645678520202637
    7. 'd' → logprob: -5.520678520202637
    8. 'gap' → logprob: -6.145678520202637
    9. '#' → logprob: -6.520678520202637
    10. '
' → logprob: -7.270678520202637

Token 169: 'for' (ID: 1938)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2858969271183014
    2. 'g' → logprob: -2.2858970165252686
    3. 'for' → logprob: -2.9108970165252686
    4. 'dist' → logprob: -3.2858970165252686
    5. 'interval' → logprob: -3.6608970165252686
    6. 'dif' → logprob: -4.2858967781066895
    7. 'd' → logprob: -4.9108967781066895
    8. 'i' → logprob: -5.9108967781066895
    9. 'gap' → logprob: -6.2858967781066895
    10. 'cost' → logprob: -7.7858967781066895

Token 170: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015693293884396553
    2. ' i' → logprob: -4.265693187713623
    3. '_i' → logprob: -6.890693187713623
    4. '_' → logprob: -8.015693664550781
    5. '_gap' → logprob: -10.140693664550781
    6. 'gap' → logprob: -10.390693664550781
    7. ' _' → logprob: -10.640693664550781
    8. 'diff' → logprob: -10.640693664550781
    9. 'idx' → logprob: -11.765693664550781
    10. 'interval' → logprob: -12.015693664550781

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001787990448065102
    2. 'in' → logprob: -6.501788139343262
    3. ' ' → logprob: -8.876788139343262
    4. '   ' → logprob: -10.251788139343262
    5. ',' → logprob: -10.626788139343262
    6. '_' → logprob: -11.001788139343262
    7. 'range' → logprob: -11.001788139343262
    8. '	in' → logprob: -11.626788139343262
    9. ' i' → logprob: -12.001788139343262
    10. '1' → logprob: -12.376788139343262

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889077812433243
    2. ' range' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.703890800476074
    4. '   ' → logprob: -15.703890800476074
    5. '(range' → logprob: -15.703890800476074
    6. ' xrange' → logprob: -16.453889846801758
    7. '  ' → logprob: -17.078889846801758
    8. '	range' → logprob: -17.078889846801758
    9. 'rang' → logprob: -18.328889846801758
    10. 'k' → logprob: -18.453889846801758

Token 173: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47883763909339905
    2. '(k' → logprob: -0.9788376092910767
    3. '(n' → logprob: -5.353837490081787
    4. '(len' → logprob: -11.228837966918945
    5. '1' → logprob: -12.853837966918945
    6. '(i' → logprob: -13.728837966918945
    7. 'k' → logprob: -13.978837966918945
    8. ' (' → logprob: -15.228837966918945
    9. '((' → logprob: -15.228837966918945
    10. '(
' → logprob: -15.478837966918945

Token 174: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08946684747934341
    2. ' -' → logprob: -2.4644668102264404
    3. '-k' → logprob: -7.5894670486450195
    4. '1' → logprob: -11.83946704864502
    5. ')' → logprob: -12.33946704864502
    6. '):
' → logprob: -12.71446704864502
    7. ' ' → logprob: -12.71446704864502
    8. '):' → logprob: -13.46446704864502
    9. '
' → logprob: -13.96446704864502
    10. 'k' → logprob: -14.33946704864502

Token 175: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013930540531873703
    2. 'k' → logprob: -4.763930320739746
    3. ' ' → logprob: -5.763930320739746
    4. ' k' → logprob: -6.138930320739746
    5. '   ' → logprob: -12.513930320739746
    6. '2' → logprob: -13.388930320739746
    7. '  ' → logprob: -14.763930320739746
    8. '	k' → logprob: -15.763930320739746
    9. '    ' → logprob: -16.701431274414062
    10. ')' → logprob: -16.951431274414062

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2594511806964874
    2. '):
' → logprob: -1.509451150894165
    3. ' ):' → logprob: -5.759451389312744
    4. '+' → logprob: -6.509451389312744
    5. '-' → logprob: -6.634451389312744
    6. '):
' → logprob: -7.634451389312744
    7. ' -' → logprob: -7.759451389312744
    8. ' ):
' → logprob: -7.884451389312744
    9. ' +' → logprob: -8.634450912475586
    10. ')' → logprob: -10.384450912475586

Token 177: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03906405344605446
    2. '   ' → logprob: -3.7890641689300537
    3. ' result' → logprob: -4.164063930511475
    4. 'diff' → logprob: -10.164064407348633
    5. '	result' → logprob: -10.289064407348633
    6. '
' → logprob: -11.039064407348633
    7. '```' → logprob: -11.164064407348633
    8. '  ' → logprob: -11.539064407348633
    9. '    
' → logprob: -12.164064407348633
    10. ' ' → logprob: -12.289064407348633

Token 178: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.004512600135058165
    2. ' result' → logprob: -5.879512786865234
    3. '   ' → logprob: -6.504512786865234
    4. 'diff' → logprob: -9.004512786865234
    5. 'gap' → logprob: -9.754512786865234
    6. 'h' → logprob: -10.879512786865234
    7. 'res' → logprob: -13.379512786865234
    8. 'interval' → logprob: -13.629512786865234
    9. 'd' → logprob: -13.629512786865234
    10. 'difference' → logprob: -14.004512786865234

Token 179: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014179147779941559
    2. '+=' → logprob: -4.264179229736328
    3. ' ' → logprob: -12.639179229736328
    4. ' =' → logprob: -12.889179229736328
    5. ' -=' → logprob: -13.014179229736328
    6. '=' → logprob: -13.014179229736328
    7. ' ' → logprob: -13.139179229736328
    8. '+=(' → logprob: -13.889179229736328
    9. ']+=' → logprob: -14.139179229736328
    10. '   ' → logprob: -14.389179229736328

Token 180: ' result' (ID: 1534)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19369016587734222
    2. ' max' → logprob: -1.9436901807785034
    3. 'h' → logprob: -4.193690299987793
    4. 'result' → logprob: -4.193690299987793
    5. ' h' → logprob: -6.318690299987793
    6. ' result' → logprob: -7.193690299987793
    7. 'my' → logprob: -8.943690299987793
    8. '(max' → logprob: -11.443690299987793
    9. '+' → logprob: -11.818690299987793
    10. ' my' → logprob: -11.943690299987793

Token 181: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687264919281006
    2. ' +' → logprob: -1.13687264919281
    3. ' ' → logprob: -14.261872291564941
    4. 'max' → logprob: -14.886872291564941
    5. ' max' → logprob: -15.886872291564941
    6. ' plus' → logprob: -15.886872291564941
    7. '-' → logprob: -16.011873245239258
    8. ' ' → logprob: -16.136873245239258
    9. '+=' → logprob: -16.886873245239258
    10. ' +=' → logprob: -17.011873245239258

Token 182: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.012877712026238441
    2. ' h' → logprob: -4.887877941131592
    3. '(h' → logprob: -5.262877941131592
    4. ' (' → logprob: -10.137877464294434
    5. 'abs' → logprob: -10.887877464294434
    6. '   ' → logprob: -11.887877464294434
    7. '(' → logprob: -12.137877464294434
    8. ' ' → logprob: -13.012877464294434
    9. '	h' → logprob: -13.637877464294434
    10. ' abs' → logprob: -14.137877464294434

Token 183: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007693672669120133
    2. '[' → logprob: -7.875769138336182
    3. 'j' → logprob: -8.00076961517334
    4. '[-' → logprob: -11.00076961517334
    5. '[n' → logprob: -11.50076961517334
    6. '[k' → logprob: -11.75076961517334
    7. '[
' → logprob: -11.75076961517334
    8. '[i' → logprob: -12.12576961517334
    9. ' [' → logprob: -13.62576961517334
    10. '
' → logprob: -13.75076961517334

Token 184: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00032366468803957105
    2. ']' → logprob: -8.500323295593262
    3. ' +' → logprob: -9.125323295593262
    4. '[' → logprob: -12.250323295593262
    5. '1' → logprob: -12.250323295593262
    6. '   ' → logprob: -14.000323295593262
    7. ' ' → logprob: -15.625323295593262
    8. '])' → logprob: -16.000324249267578
    9. 's' → logprob: -16.125324249267578
    10. '+]' → logprob: -16.625324249267578

Token 185: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39493879675865173
    2. '-' → logprob: -2.2699387073516846
    3. '[' → logprob: -2.5199387073516846
    4. ']' → logprob: -3.0199387073516846
    5. '   ' → logprob: -3.1449387073516846
    6. '[next' → logprob: -4.519938945770264
    7. '[j' → logprob: -4.644938945770264
    8. '<|end|>' → logprob: -5.144938945770264
    9. '
' → logprob: -5.394938945770264
    10. ' ' → logprob: -5.644938945770264

Token 186: ' on' (ID: 402)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7886256575584412
    2. ']' → logprob: -1.163625717163086
    3. '-' → logprob: -2.538625717163086
    4. '[' → logprob: -2.788625717163086
    5. '   ' → logprob: -3.413625717163086
    6. ']-' → logprob: -4.538625717163086
    7. '[j' → logprob: -4.538625717163086
    8. '1' → logprob: -5.163625717163086
    9. 'diff' → logprob: -5.163625717163086
    10. '<|end|>' → logprob: -5.663625717163086

Token 187: ' addition' (ID: 5856)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7229006290435791
    2. ']' → logprob: -1.097900629043579
    3. 'diff' → logprob: -2.847900629043579
    4. '+' → logprob: -3.597900629043579
    5. 'result' → logprob: -3.597900629043579
    6. 'h' → logprob: -3.972900629043579
    7. ' +=' → logprob: -4.847900390625
    8. '[' → logprob: -5.472900390625
    9. '.append' → logprob: -5.472900390625
    10. '+=' → logprob: -5.472900390625

Token 188: 'ne' (ID: 611)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04241299629211426
    2. ' -' → logprob: -4.167412757873535
    3. '+' → logprob: -4.292412757873535
    4. '   ' → logprob: -5.792412757873535
    5. ' ' → logprob: -6.042412757873535
    6. 'result' → logprob: -6.417412757873535
    7. 'h' → logprob: -6.542412757873535
    8. '_' → logprob: -7.292412757873535
    9. '[' → logprob: -7.542412757873535
    10. 's' → logprob: -7.542412757873535

Token 189: '

' (ID: 279)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20820078253746033
    2. ' h' → logprob: -2.208200693130493
    3. '-' → logprob: -3.708200693130493
    4. ' -' → logprob: -4.333200931549072
    5. '   ' → logprob: -4.708200931549072
    6. ' ' → logprob: -4.958200931549072
    7. '(h' → logprob: -4.958200931549072
    8. ')' → logprob: -5.208200931549072
    9. '  ' → logprob: -5.958200931549072
    10. '
' → logprob: -6.208200931549072

Token 190: 'print' (ID: 1598)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5502364039421082
    2. '-' → logprob: -2.050236463546753
    3. ' -' → logprob: -2.300236463546753
    4. 'result' → logprob: -2.425236463546753
    5. '<|end|>' → logprob: -3.550236463546753
    6. '#' → logprob: -3.925236463546753
    7. '
' → logprob: -4.300236225128174
    8. '+' → logprob: -4.300236225128174
    9. ' ' → logprob: -5.175236225128174
    10. 'print' → logprob: -5.800236225128174

Token 191: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.04860395938158035
    2. '(' → logprob: -3.0486040115356445
    3. 'result' → logprob: -11.423604011535645
    4. '()' → logprob: -13.048604011535645
    5. ' (' → logprob: -13.423604011535645
    6. '(
' → logprob: -14.673604011535645
    7. '(res' → logprob: -14.673604011535645
    8. '(sum' → logprob: -15.548604011535645
    9. '((' → logprob: -15.673604011535645
    10. '(abs' → logprob: -15.798604011535645

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ' )' → logprob: -11.500020027160645
    3. '-' → logprob: -12.250020027160645
    4. '+' → logprob: -13.250020027160645
    5. '))' → logprob: -14.125020027160645
    6. '-)' → logprob: -14.500020027160645
    7. ' -' → logprob: -14.750020027160645
    8. '//' → logprob: -15.000020027160645
    9. ')`' → logprob: -15.750020027160645
    10. '*' → logprob: -16.125019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 190
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 142
Précision stricte (1ère position): 30.53%
Précision adaptée (1ère position): 35.26%
Précision (top 10): 74.74%
================================================================================
