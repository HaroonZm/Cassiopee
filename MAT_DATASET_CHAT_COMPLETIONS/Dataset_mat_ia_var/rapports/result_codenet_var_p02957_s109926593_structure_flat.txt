================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B = (int(x) for x in input().split())
if (A - B) % 2 == 1:
    print("IMPOSSIBLE")
else:
    print((A + B) // 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1851118803024292
    2. '.' → logprob: -2.8101119995117188
    3. '+' → logprob: -3.0601119995117188
    4. ',' → logprob: -4.310111999511719
    5. ' =' → logprob: -4.310111999511719
    6. ')' → logprob: -4.560111999511719
    7. '[' → logprob: -4.810111999511719
    8. ';' → logprob: -5.310111999511719
    9. '<|end|>' → logprob: -6.060111999511719
    10. ':' → logprob: -6.185111999511719

Token 4: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5216236710548401
    2. '10' → logprob: -1.7716236114501953
    3. '0' → logprob: -2.1466236114501953
    4. '1' → logprob: -2.7716236114501953
    5. '5' → logprob: -4.021623611450195
    6. '[]' → logprob: -4.771623611450195
    7. '42' → logprob: -5.896623611450195
    8. '[' → logprob: -6.146623611450195
    9. ' B' → logprob: -6.146623611450195
    10. 'input' → logprob: -6.146623611450195

Token 5: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38910600543022156
    2. ')' → logprob: -1.264106035232544
    3. '0' → logprob: -4.139105796813965
    4. '3' → logprob: -4.889105796813965
    5. 'B' → logprob: -5.139105796813965
    6. '10' → logprob: -6.139105796813965
    7. '4' → logprob: -6.514105796813965
    8. '2' → logprob: -6.764105796813965
    9. '42' → logprob: -6.764105796813965
    10. '5' → logprob: -6.889105796813965

Token 6: '(x' (ID: 4061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.383771687746048
    2. '(' → logprob: -1.2587716579437256
    3. ',' → logprob: -3.5087716579437256
    4. ' ' → logprob: -7.008771896362305
    5. '[' → logprob: -7.133771896362305
    6. '('' → logprob: -7.258771896362305
    7. ',)' → logprob: -7.258771896362305
    8. '()' → logprob: -8.383771896362305
    9. ''' → logprob: -8.633771896362305
    10. 'A' → logprob: -8.883771896362305

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04054025933146477
    2. '(x' → logprob: -4.0405402183532715
    3. '(input' → logprob: -4.9155402183532715
    4. '(' → logprob: -5.4155402183532715
    5. '(token' → logprob: -5.5405402183532715
    6. '))' → logprob: -6.2905402183532715
    7. '(a' → logprob: -7.0405402183532715
    8. '),' → logprob: -7.2905402183532715
    9. '())' → logprob: -7.4155402183532715
    10. '(s' → logprob: -7.6655402183532715

Token 8: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12176878750324249
    2. ',' → logprob: -2.2467687129974365
    3. '(x' → logprob: -6.246768951416016
    4. '(' → logprob: -6.371768951416016
    5. ',)' → logprob: -6.621768951416016
    6. '[' → logprob: -7.121768951416016
    7. '(s' → logprob: -7.621768951416016
    8. '(token' → logprob: -7.746768951416016
    9. '),' → logprob: -8.246768951416016
    10. '<|end|>' → logprob: -8.621768951416016

Token 9: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1521734744310379
    2. ' x' → logprob: -3.5271735191345215
    3. ' line' → logprob: -3.5271735191345215
    4. 'input' → logprob: -3.9021735191345215
    5. ' ' → logprob: -4.2771735191345215
    6. ' range' → logprob: -4.4021735191345215
    7. ' a' → logprob: -4.9021735191345215
    8. ')' → logprob: -4.9021735191345215
    9. ' user' → logprob: -4.9021735191345215
    10. ' )' → logprob: -5.2771735191345215

Token 10: ' in' (ID: 306)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2242155820131302
    2. 'input' → logprob: -2.224215507507324
    3. ' input' → logprob: -2.974215507507324
    4. ' in' → logprob: -4.224215507507324
    5. ')' → logprob: -4.349215507507324
    6. '(' → logprob: -4.974215507507324
    7. '=input' → logprob: -5.599215507507324
    8. '<|end|>' → logprob: -6.974215507507324
    9. '[input' → logprob: -7.599215507507324
    10. 'range' → logprob: -8.224215507507324

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20150554180145264
    2. 'input' → logprob: -1.7015055418014526
    3. '(input' → logprob: -10.201505661010742
    4. ')' → logprob: -11.076505661010742
    5. ' range' → logprob: -11.451505661010742
    6. ' ' → logprob: -11.826505661010742
    7. ' user' → logprob: -12.076505661010742
    8. 'range' → logprob: -12.076505661010742
    9. 'user' → logprob: -13.451505661010742
    10. ' )' → logprob: -13.576505661010742

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2393840104341507
    2. '()' → logprob: -1.6143840551376343
    3. '(' → logprob: -5.114384174346924
    4. '().' → logprob: -5.364384174346924
    5. '('' → logprob: -6.364384174346924
    6. ')' → logprob: -7.739384174346924
    7. '()).' → logprob: -8.614383697509766
    8. '("("' → logprob: -8.614383697509766
    9. '();)' → logprob: -8.864383697509766
    10. '());' → logprob: -9.239383697509766

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001992278266698122
    2. 'strip' → logprob: -6.251992225646973
    3. 'rstrip' → logprob: -10.251992225646973
    4. ' split' → logprob: -10.501992225646973
    5. 'read' → logprob: -14.501992225646973
    6. ')' → logprob: -15.751992225646973
    7. 'replace' → logprob: -16.25199317932129
    8. '(split' → logprob: -16.25199317932129
    9. 'spl' → logprob: -16.87699317932129
    10. ' strip' → logprob: -17.12699317932129

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004177529364824295
    2. '()' → logprob: -5.879177570343018
    3. ')' → logprob: -6.629177570343018
    4. '()))' → logprob: -10.87917709350586
    5. ' ())' → logprob: -11.37917709350586
    6. '(' → logprob: -11.75417709350586
    7. '()]' → logprob: -13.00417709350586
    8. '();)' → logprob: -13.37917709350586
    9. '`)' → logprob: -13.75417709350586
    10. '()),' → logprob: -13.75417709350586

Token 15: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8496875166893005
    2. '+' → logprob: -1.5996875762939453
    3. '#' → logprob: -1.9746875762939453
    4. ',' → logprob: -3.2246875762939453
    5. '*' → logprob: -3.4746875762939453
    6. '\n' → logprob: -3.5996875762939453
    7. '<|end|>' → logprob: -3.7246875762939453
    8. 'if' → logprob: -3.7246875762939453
    9. '
' → logprob: -4.099687576293945
    10. '```' → logprob: -4.349687576293945

Token 16: ' (' (ID: 350)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07247989624738693
    2. 'A' → logprob: -2.6974799633026123
    3. ' ' → logprob: -6.197479724884033
    4. ' B' → logprob: -7.947479724884033
    5. 'B' → logprob: -9.447480201721191
    6. ' not' → logprob: -10.197480201721191
    7. ' ' → logprob: -11.072480201721191
    8. ' (' → logprob: -12.197480201721191
    9. '(A' → logprob: -12.447480201721191
    10. '  ' → logprob: -13.072480201721191

Token 17: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25462985038757324
    2. ' A' → logprob: -1.5046298503875732
    3. 'B' → logprob: -6.379630088806152
    4. ' B' → logprob: -7.254630088806152
    5. ')' → logprob: -9.254630088806152
    6. ' ' → logprob: -9.629630088806152
    7. '(A' → logprob: -10.254630088806152
    8. ' (' → logprob: -10.629630088806152
    9. ' not' → logprob: -10.879630088806152
    10. 'a' → logprob: -11.004630088806152

Token 18: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07391929626464844
    2. ' ==' → logprob: -3.9489192962646484
    3. ' >=' → logprob: -3.9489192962646484
    4. ' <=' → logprob: -4.823919296264648
    5. ' <' → logprob: -4.948919296264648
    6. '>' → logprob: -5.073919296264648
    7. ' %' → logprob: -5.448919296264648
    8. ' ' → logprob: -5.948919296264648
    9. ')' → logprob: -6.948919296264648
    10. '%' → logprob: -7.073919296264648

Token 19: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47581344842910767
    2. ' B' → logprob: -0.9758134484291077
    3. '1' → logprob: -6.725813388824463
    4. ' ' → logprob: -7.850813388824463
    5. '2' → logprob: -9.600813865661621
    6. '3' → logprob: -11.225813865661621
    7. '10' → logprob: -11.475813865661621
    8. '0' → logprob: -11.975813865661621
    9. '4' → logprob: -12.100813865661621
    10. '5' → logprob: -12.225813865661621

Token 20: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00711682578548789
    2. ' )' → logprob: -5.632116794586182
    3. ')>' → logprob: -6.007116794586182
    4. '>' → logprob: -7.257116794586182
    5. ' >' → logprob: -8.25711727142334
    6. ')**' → logprob: -10.63211727142334
    7. ')>=' → logprob: -10.75711727142334
    8. ')<' → logprob: -11.38211727142334
    9. ')==' → logprob: -12.00711727142334
    10. ')!=' → logprob: -12.13211727142334

Token 21: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.390080988407135
    2. ':' → logprob: -2.0150809288024902
    3. ' !=' → logprob: -2.6400809288024902
    4. '>' → logprob: -2.7650809288024902
    5. ' :' → logprob: -3.5150809288024902
    6. ' ==' → logprob: -4.26508092880249
    7. ' ' → logprob: -5.26508092880249
    8. ')' → logprob: -6.39008092880249
    9. ' <' → logprob: -6.89008092880249
    10. '!=' → logprob: -7.14008092880249

Token 22: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32671186327934265
    2. '10' → logprob: -2.076711893081665
    3. '3' → logprob: -2.201711893081665
    4. ' ' → logprob: -3.326711893081665
    5. '4' → logprob: -6.326711654663086
    6. '5' → logprob: -6.701711654663086
    7. '7' → logprob: -7.201711654663086
    8. '19' → logprob: -7.451711654663086
    9. '100' → logprob: -7.576711654663086
    10. '1' → logprob: -7.701711654663086

Token 23: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.544096827507019
    2. '2' → logprob: -0.919096827507019
    3. '3' → logprob: -4.044096946716309
    4. '5' → logprob: -7.044096946716309
    5. '4' → logprob: -7.169096946716309
    6. '1' → logprob: -7.544096946716309
    7. '7' → logprob: -8.169096946716309
    8. ' ' → logprob: -8.419096946716309
    9. '100' → logprob: -8.794096946716309
    10. '19' → logprob: -9.919096946716309

Token 24: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.245350182056427
    2. ' ==' → logprob: -2.1203501224517822
    3. ' :' → logprob: -2.6203501224517822
    4. ' !=' → logprob: -4.245350360870361
    5. '==' → logprob: -4.870350360870361
    6. ' >' → logprob: -7.120350360870361
    7. '>' → logprob: -7.245350360870361
    8. '!=' → logprob: -7.620350360870361
    9. ' ' → logprob: -7.870350360870361
    10. '=' → logprob: -9.370349884033203

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47480636835098267
    2. '0' → logprob: -0.9748063683509827
    3. '1' → logprob: -7.224806308746338
    4. ' ' → logprob: -15.162306785583496
    5. '  ' → logprob: -15.974806785583496
    6. ':' → logprob: -16.91230583190918
    7. '   ' → logprob: -16.97480583190918
    8. ')' → logprob: -17.22480583190918
    9. ' ==' → logprob: -17.22480583190918
    10. ',' → logprob: -17.78730583190918

Token 26: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004499785136431456
    2. '1' → logprob: -5.754499912261963
    3. ' ' → logprob: -6.629499912261963
    4. ':' → logprob: -16.691999435424805
    5. '  ' → logprob: -17.066999435424805
    6. '۰' → logprob: -17.129499435424805
    7. '   ' → logprob: -17.566999435424805
    8. ' ' → logprob: -17.941999435424805
    9. '```' → logprob: -18.066999435424805
    10. ')' → logprob: -18.129499435424805

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.584239938296378e-06
    2. ' :' → logprob: -11.875007629394531
    3. ':
' → logprob: -14.875007629394531
    4. ':**' → logprob: -16.25000762939453
    5. '):' → logprob: -16.87500762939453
    6. '>:' → logprob: -18.25000762939453
    7. ':return' → logprob: -18.37500762939453
    8. ':

' → logprob: -18.50000762939453
    9. ',' → logprob: -18.62500762939453
    10. ' and' → logprob: -19.25000762939453

Token 28: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5733801126480103
    2. ' print' → logprob: -1.5733801126480103
    3. 'print' → logprob: -2.6983799934387207
    4. ' ' → logprob: -3.3233799934387207
    5. ' \' → logprob: -3.4483799934387207
    6. '    ' → logprob: -3.6983799934387207
    7. ' 
' → logprob: -4.073379993438721
    8. '\' → logprob: -4.198379993438721
    9. '   ' → logprob: -4.323379993438721
    10. ':' → logprob: -4.698379993438721

Token 29: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07597586512565613
    2. 'print' (adapté à ' print') → logprob: -2.8259758949279785
    3. '   ' → logprob: -4.7009758949279785
    4. '    ' → logprob: -5.7009758949279785
    5. ' ' → logprob: -7.4509758949279785
    6. '```' → logprob: -8.45097541809082
    7. ' \' → logprob: -9.07597541809082
    8. '\' → logprob: -9.07597541809082
    9. '\n' → logprob: -9.20097541809082
    10. ' 
' → logprob: -9.70097541809082

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07392638176679611
    2. '("' → logprob: -2.8239264488220215
    3. '('' → logprob: -4.9489264488220215
    4. '("("' → logprob: -5.5739264488220215
    5. '()' → logprob: -7.8239264488220215
    6. '(True' → logprob: -8.323925971984863
    7. '"' → logprob: -9.073925971984863
    8. '("")' → logprob: -9.698925971984863
    9. '(False' → logprob: -9.823925971984863
    10. '("(' → logprob: -10.448925971984863

Token 31: 'IMP' (ID: 67171)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2053743600845337
    2. 'im' → logprob: -1.3303743600845337
    3. 'I' → logprob: -2.080374240875244
    4. '0' → logprob: -3.455374240875244
    5. 'No' → logprob: -3.455374240875244
    6. 'D' → logprob: -3.455374240875244
    7. 'Y' → logprob: -3.455374240875244
    8. '-' → logprob: -3.705374240875244
    9. 'Impossible' → logprob: -3.830374240875244
    10. 'B' → logprob: -3.955374240875244

Token 32: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -0.0006180775817483664
    2. 'OS' → logprob: -8.000617980957031
    3. 'O' → logprob: -8.500617980957031
    4. 'oss' → logprob: -9.625617980957031
    5. 'P' → logprob: -12.750617980957031
    6. '```' → logprob: -13.375617980957031
    7. 'R' → logprob: -13.500617980957031
    8. '\' → logprob: -13.875617980957031
    9. 'S' → logprob: -14.250617980957031
    10. '\n' → logprob: -14.500617980957031

Token 33: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -6.2729995988775045e-06
    2. 'IBE' → logprob: -12.500006675720215
    3. 'IB' → logprob: -14.125006675720215
    4. 'ILE' → logprob: -14.250006675720215
    5. 'I' → logprob: -14.750006675720215
    6. 'IPLE' → logprob: -15.000006675720215
    7. 'IVE' → logprob: -15.750006675720215
    8. 'IBILITY' → logprob: -16.5000057220459
    9. 'IBIL' → logprob: -16.6250057220459
    10. 'ible' → logprob: -17.0000057220459

Token 34: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009680375806055963
    2. ')' → logprob: -7.000967979431152
    3. '"' → logprob: -9.875967979431152
    4. '")
' → logprob: -12.625967979431152
    5. ')")' → logprob: -14.000967979431152
    6. '')' → logprob: -14.125967979431152
    7. '```' → logprob: -15.875967979431152
    8. '!")' → logprob: -17.12596893310547
    9. '”)' → logprob: -17.37596893310547
    10. '");' → logprob: -17.75096893310547

Token 35: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005802704952657223
    2. ' else' → logprob: -5.755802631378174
    3. 'elif' → logprob: -6.005802631378174
    4. '<|end|>' → logprob: -9.630803108215332
    5. '```' → logprob: -10.255803108215332
    6. '
' → logprob: -10.630803108215332
    7. '    
' → logprob: -11.380803108215332
    8. '_else' → logprob: -12.505803108215332
    9. '   ' → logprob: -12.630803108215332
    10. ' elif' → logprob: -12.880803108215332

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.958325295476243e-05
    2. ':
' → logprob: -9.500079154968262
    3. '   ' → logprob: -12.750079154968262
    4. ' :' → logprob: -13.375079154968262
    5. ':

' → logprob: -16.750080108642578
    6. '):' → logprob: -17.000080108642578
    7. ':
' → logprob: -17.375080108642578
    8. ':return' → logprob: -17.875080108642578
    9. ':**' → logprob: -18.375080108642578
    10. '():' → logprob: -18.375080108642578

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09105683118104935
    2. '    ' → logprob: -2.5910568237304688
    3. '    
' → logprob: -5.341056823730469
    4. ' ' → logprob: -6.841056823730469
    5. ' 
' → logprob: -6.841056823730469
    6. '\n' → logprob: -7.216056823730469
    7. '[' → logprob: -7.466056823730469
    8. '```' → logprob: -7.591056823730469
    9. '       ' → logprob: -7.716056823730469
    10. '\' → logprob: -7.841056823730469

Token 38: ' print' (ID: 2123)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4300404191017151
    2. ' ' → logprob: -2.9300403594970703
    3. ' x' → logprob: -3.1800403594970703
    4. '   ' → logprob: -3.3050403594970703
    5. ' print' → logprob: -3.3050403594970703
    6. ' n' → logprob: -3.4300403594970703
    7. ' C' → logprob: -3.9300403594970703
    8. ' c' → logprob: -4.05504035949707
    9. ' s' → logprob: -4.05504035949707
    10. ' a' → logprob: -4.18004035949707

Token 39: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053823236376047134
    2. '("' → logprob: -3.553823232650757
    3. '((' → logprob: -3.928823232650757
    4. '("("' → logprob: -5.803823471069336
    5. '('' → logprob: -7.803823471069336
    6. '()' → logprob: -8.303823471069336
    7. '(()' → logprob: -8.928823471069336
    8. '(f' → logprob: -9.303823471069336
    9. '(((' → logprob: -10.428823471069336
    10. '("")' → logprob: -10.553823471069336

Token 40: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.6852657794952393
    2. 'A' → logprob: -0.9352657794952393
    3. ' (' → logprob: -2.4352657794952393
    4. ' A' → logprob: -4.18526554107666
    5. ' ' → logprob: -8.56026554107666
    6. '   ' → logprob: -8.81026554107666
    7. 'f' → logprob: -9.18526554107666
    8. '((' → logprob: -9.43526554107666
    9. '(' → logprob: -9.56026554107666
    10. '(f' → logprob: -10.68526554107666

Token 41: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08782510459423065
    2. '+' → logprob: -2.712825059890747
    3. ' -' → logprob: -4.337825298309326
    4. ' ' → logprob: -5.712825298309326
    5. '-' → logprob: -7.212825298309326
    6. '+B' → logprob: -7.587825298309326
    7. ' //' → logprob: -10.087824821472168
    8. ')' → logprob: -10.212824821472168
    9. ' )' → logprob: -11.087824821472168
    10. '+b' → logprob: -12.337824821472168

Token 42: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07889506965875626
    2. ' B' → logprob: -2.578895092010498
    3. ' ' → logprob: -12.57889461517334
    4. ')' → logprob: -14.07889461517334
    5. '   ' → logprob: -14.95389461517334
    6. ' ' → logprob: -15.20389461517334
    7. '`' → logprob: -16.078895568847656
    8. '  ' → logprob: -16.453895568847656
    9. '>B' → logprob: -16.453895568847656
    10. '	B' → logprob: -16.703895568847656

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003048177808523178
    2. ')//' → logprob: -6.503047943115234
    3. ' )' → logprob: -6.503047943115234
    4. '//' → logprob: -11.753047943115234
    5. '`)' → logprob: -11.753047943115234
    6. ' //' → logprob: -12.003047943115234
    7. '   ' → logprob: -12.003047943115234
    8. '')' → logprob: -12.003047943115234
    9. '")' → logprob: -12.503047943115234
    10. '))' → logprob: -13.003047943115234

Token 44: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.348326712846756
    2. ')' → logprob: -1.3483266830444336
    3. '//' → logprob: -3.5983266830444336
    4. ')//' → logprob: -5.723326683044434
    5. '   ' → logprob: -6.098326683044434
    6. ' ' → logprob: -7.348326683044434
    7. ' )' → logprob: -7.473326683044434
    8. '`' → logprob: -8.723326683044434
    9. '    ' → logprob: -10.598326683044434
    10. '2' → logprob: -10.848326683044434

Token 45: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000491076149046421
    2. ' ' → logprob: -7.625491142272949
    3. '   ' → logprob: -13.25049114227295
    4. '２' → logprob: -15.50049114227295
    5. '۲' → logprob: -15.50049114227295
    6. '  ' → logprob: -15.75049114227295
    7. ')' → logprob: -15.75049114227295
    8. '    ' → logprob: -16.625490188598633
    9. ' ' → logprob: -16.625490188598633
    10. '٢' → logprob: -16.687990188598633

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.125016212463379
    3. '   ' → logprob: -13.625016212463379
    4. '۲' → logprob: -16.250017166137695
    5. '２' → logprob: -16.875017166137695
    6. '٢' → logprob: -17.000017166137695
    7. '  ' → logprob: -17.375017166137695
    8. '```' → logprob: -17.500017166137695
    9. '    ' → logprob: -18.000017166137695
    10. '22' → logprob: -18.250017166137695

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.762356209335849e-05
    2. ' )' → logprob: -10.75003719329834
    3. '))' → logprob: -11.62503719329834
    4. ')
' → logprob: -12.62503719329834
    5. '`)' → logprob: -14.12503719329834
    6. '```' → logprob: -14.50003719329834
    7. '')' → logprob: -15.00003719329834
    8. '#' → logprob: -15.00003719329834
    9. ')))' → logprob: -15.25003719329834
    10. ')#' → logprob: -15.25003719329834


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 35.56%
Précision adaptée (1ère position): 35.56%
Précision (top 10): 82.22%
================================================================================
