================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect_left

def read_input():
    n = get_int()
    l = get_int_list()
    return n, l

def get_int():
    return int(input())

def get_int_list():
    return list(map(int, input().split()))

def sort_list(l):
    return sorted(l)

def calculate_pairs(n, l):
    ans = 0
    for i in generate_range(n-1):
        for j in generate_range2(i+1, n):
            count = count_valid_k(l, i, j)
            ans = add(ans, count)
    return ans

def generate_range(limit):
    return range(limit)

def generate_range2(start, end):
    return range(start, end)

def count_valid_k(l, i, j):
    target = sum_elements(l[i], l[j])
    valid_k = find_bisect_left(l, target)
    diff = subtract(valid_k, j+1)
    return diff

def sum_elements(a, b):
    return a + b

def find_bisect_left(l, value):
    return bisect_left(l, value)

def subtract(a, b):
    return a - b

def add(a, b):
    return a + b

def print_result(ans):
    print(ans)

def main():
    n, l = read_input()
    l = sort_list(l)
    ans = calculate_pairs(n, l)
    print_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05553092807531357
    2. 'import' → logprob: -2.9305310249328613
    3. '.' → logprob: -8.305530548095703
    4. ' ' → logprob: -9.055530548095703
    5. '_' → logprob: -9.055530548095703
    6. '_import' → logprob: -9.180530548095703
    7. '```' → logprob: -10.430530548095703
    8. '.import' → logprob: -11.680530548095703
    9. '._' → logprob: -12.180530548095703
    10. ' _' → logprob: -12.305530548095703

Token 4: ' bis' (ID: 7204)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.3885584771633148
    2. 'bis' → logprob: -1.1385585069656372
    3. ' bis' → logprob: -6.513558387756348
    4. '_ins' → logprob: -8.888558387756348
    5. '_right' → logprob: -10.513558387756348
    6. '```' → logprob: -11.263558387756348
    7. ' ins' → logprob: -11.513558387756348
    8. '_left' → logprob: -12.263558387756348
    9. 'right' → logprob: -12.763558387756348
    10. '.ins' → logprob: -13.388558387756348

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0071336389519274235
    2. 'e' → logprob: -5.007133483886719
    3. 'ct' → logprob: -8.007133483886719
    4. 'n' → logprob: -10.132133483886719
    5. 'ec' → logprob: -10.757133483886719
    6. 't' → logprob: -11.882133483886719
    7. 'r' → logprob: -12.132133483886719
    8. 'ectl' → logprob: -13.007133483886719
    9. 'c' → logprob: -13.257133483886719
    10. 's' → logprob: -13.257133483886719

Token 6: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09003350138664246
    2. '.' → logprob: -2.715033531188965
    3. '_' → logprob: -3.965033531188965
    4. '_left' → logprob: -8.590033531188965
    5. '\(' → logprob: -9.215033531188965
    6. '._' → logprob: -9.340033531188965
    7. '```' → logprob: -9.465033531188965
    8. ' (' → logprob: -9.590033531188965
    9. '`' → logprob: -9.590033531188965
    10. '"' → logprob: -9.590033531188965

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031294001382775605
    2. '(
' → logprob: -8.750312805175781
    3. '\(' → logprob: -9.000312805175781
    4. '\n' → logprob: -11.125312805175781
    5. '(

' → logprob: -12.125312805175781
    6. '\' → logprob: -12.625312805175781
    7. 'newline' → logprob: -13.750312805175781
    8. ' (' → logprob: -14.125312805175781
    9. '"' → logprob: -14.375312805175781
    10. '`' → logprob: -14.375312805175781

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008970508933998644
    2. '(
' → logprob: -7.25089693069458
    3. '\(' → logprob: -9.250897407531738
    4. '(

' → logprob: -10.500897407531738
    5. '\n' → logprob: -10.875897407531738
    6. '\' → logprob: -11.500897407531738
    7. '
' → logprob: -12.250897407531738
    8. 'a' → logprob: -12.375897407531738
    9. '' → logprob: -12.375897407531738
    10. '`' → logprob: -12.500897407531738

Token 9: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041596293449401855
    2. '_' → logprob: -4.166596412658691
    3. ' ' → logprob: -4.666596412658691
    4. ' _' → logprob: -4.916596412658691
    5. ' find' → logprob: -5.916596412658691
    6. '_insert' → logprob: -6.791596412658691
    7. '_find' → logprob: -6.916596412658691
    8. ' insert' → logprob: -7.416596412658691
    9. ' add' → logprob: -8.166596412658691
    10. '_search' → logprob: -8.166596412658691

Token 10: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3939429819583893
    2. '_' → logprob: -1.143942952156067
    3. '_line' → logprob: -5.143942832946777
    4. '_token' → logprob: -8.643942832946777
    5. '_input' → logprob: -9.393942832946777
    6. '_word' → logprob: -9.518942832946777
    7. '_name' → logprob: -9.643942832946777
    8. '_data' → logprob: -9.768942832946777
    9. '_text' → logprob: -9.893942832946777
    10. '_space' → logprob: -10.143942832946777

Token 11: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006510255858302116
    2. '_' → logprob: -5.506510257720947
    3. '():' → logprob: -6.381510257720947
    4. '(:' → logprob: -8.256509780883789
    5. ':' → logprob: -9.131509780883789
    6. '(_:' → logprob: -9.756509780883789
    7. '```' → logprob: -10.131509780883789
    8. '(_' → logprob: -10.506509780883789
    9. '):' → logprob: -10.631509780883789
    10. '_:' → logprob: -10.756509780883789

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1569981873035431
    2. '():' → logprob: -2.9069981575012207
    3. '```' → logprob: -3.2819981575012207
    4. '(' → logprob: -3.5319981575012207
    5. '<|end|>' → logprob: -5.531998157501221
    6. '()' → logprob: -5.906998157501221
    7. '    
' → logprob: -6.281998157501221
    8. 'return' → logprob: -6.406998157501221
    9. '[' → logprob: -6.406998157501221
    10. '(
' → logprob: -6.531998157501221

Token 13: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22705909609794617
    2. 'return' → logprob: -2.2270591259002686
    3. ' return' → logprob: -3.2270591259002686
    4. ' line' → logprob: -3.4770591259002686
    5. 'data' → logprob: -4.6020588874816895
    6. 'line' → logprob: -5.3520588874816895
    7. 'input' → logprob: -5.4770588874816895
    8. ' lines' → logprob: -6.3520588874816895
    9. ' data' → logprob: -6.6020588874816895
    10. 'n' (adapté à ' n') → logprob: -7.3520588874816895

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40117257833480835
    2. '=' → logprob: -1.5261726379394531
    3. ',' → logprob: -2.776172637939453
    4. '_' → logprob: -3.651172637939453
    5. ' ' → logprob: -4.026172637939453
    6. '  ' → logprob: -5.901172637939453
    7. ' ,' → logprob: -6.401172637939453
    8. ')' → logprob: -6.651172637939453
    9. '   ' → logprob: -7.526172637939453
    10. ' _' → logprob: -8.151172637939453

Token 15: ' get' (ID: 717)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.009818658232688904
    2. 'int' → logprob: -4.6348185539245605
    3. ' ' → logprob: -10.009819030761719
    4. ' input' → logprob: -11.884819030761719
    5. ' len' → logprob: -12.884819030761719
    6. '=int' → logprob: -13.009819030761719
    7. '0' → logprob: -13.509819030761719
    8. '   ' → logprob: -14.134819030761719
    9. '  ' → logprob: -14.259819030761719
    10. ' ' → logprob: -14.634819030761719

Token 16: '_int' (ID: 12285)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2918367385864258
    2. '_' → logprob: -2.541836738586426
    3. 'int' → logprob: -3.166836738586426
    4. '_input' → logprob: -3.291836738586426
    5. 'input' → logprob: -3.916836738586426
    6. ' _' → logprob: -3.916836738586426
    7. 'attr' → logprob: -3.916836738586426
    8. ' input' → logprob: -5.166836738586426
    9. ' ' → logprob: -5.416836738586426
    10. 'n' → logprob: -5.666836738586426

Token 17: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2706228196620941
    2. '('' → logprob: -1.6456228494644165
    3. '()' → logprob: -3.645622730255127
    4. '("' → logprob: -4.895622730255127
    5. '("("' → logprob: -5.020622730255127
    6. 's' → logprob: -6.645622730255127
    7. '_' → logprob: -6.770622730255127
    8. '('_' → logprob: -8.770623207092285
    9. '("")' → logprob: -9.020623207092285
    10. 'eger' → logprob: -9.020623207092285

Token 18: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0842665508389473
    2. '(' → logprob: -3.3342666625976562
    3. '()
' → logprob: -3.8342666625976562
    4. '```' → logprob: -4.334266662597656
    5. ')' → logprob: -5.959266662597656
    6. '`' → logprob: -6.334266662597656
    7. '(
' → logprob: -6.334266662597656
    8. '   ' → logprob: -7.084266662597656
    9. '()\' → logprob: -7.834266662597656
    10. '_' → logprob: -7.834266662597656

Token 19: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5881510972976685
    2. ')' → logprob: -2.088150978088379
    3. ' ' → logprob: -2.463150978088379
    4. 'data' → logprob: -3.338150978088379
    5. 's' → logprob: -3.463150978088379
    6. '(' → logprob: -3.963150978088379
    7. '_' → logprob: -4.338150978088379
    8. '[' → logprob: -4.588150978088379
    9. 'return' → logprob: -4.588150978088379
    10. '```' → logprob: -4.588150978088379

Token 20: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.23051154613494873
    2. ' =' → logprob: -3.1055116653442383
    3. 'i' → logprob: -3.2305116653442383
    4. 'ists' → logprob: -3.3555116653442383
    5. 'ength' → logprob: -3.9805116653442383
    6. 'ines' → logprob: -3.9805116653442383
    7. 'ine' → logprob: -4.230511665344238
    8. '=' → logprob: -4.730511665344238
    9. '_' → logprob: -5.480511665344238
    10. 'e' → logprob: -5.480511665344238

Token 21: ' get' (ID: 717)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7134038209915161
    2. ' list' → logprob: -1.2134038209915161
    3. ' [' → logprob: -1.7134038209915161
    4. 'list' → logprob: -4.213403701782227
    5. '[]' → logprob: -4.838403701782227
    6. '[' → logprob: -5.963403701782227
    7. 'ist' → logprob: -5.963403701782227
    8. ' input' → logprob: -6.088403701782227
    9. 'input' → logprob: -7.713403701782227
    10. ' ' → logprob: -7.838403701782227

Token 22: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.288640558719635
    2. 'ist' → logprob: -2.1636404991149902
    3. '_int' → logprob: -2.7886404991149902
    4. '_line' → logprob: -3.6636404991149902
    5. 'ine' → logprob: -4.28864049911499
    6. '_list' → logprob: -4.41364049911499
    7. 'ines' → logprob: -5.78864049911499
    8. 'int' → logprob: -6.78864049911499
    9. '_array' → logprob: -6.78864049911499
    10. '_i' → logprob: -6.78864049911499

Token 23: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008734888397157192
    2. '(' → logprob: -4.883734703063965
    3. '_' → logprob: -7.508734703063965
    4. ')' → logprob: -8.508734703063965
    5. '()
' → logprob: -9.383734703063965
    6. 'open' → logprob: -10.133734703063965
    7. ' ' → logprob: -10.383734703063965
    8. '```' → logprob: -10.383734703063965
    9. '   ' → logprob: -10.633734703063965
    10. '())' → logprob: -11.008734703063965

Token 24: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18007710576057434
    2. '()' → logprob: -1.805077075958252
    3. '("("' → logprob: -9.18007755279541
    4. '('' → logprob: -9.93007755279541
    5. '(
' → logprob: -10.30507755279541
    6. '(()' → logprob: -10.43007755279541
    7. ' (' → logprob: -10.93007755279541
    8. '```' → logprob: -11.43007755279541
    9. '()[' → logprob: -11.68007755279541
    10. '())' → logprob: -12.05507755279541

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1457919180393219
    2. '
' → logprob: -2.270792007446289
    3. '    
' → logprob: -4.895792007446289
    4. '[' → logprob: -5.020792007446289
    5. ' ' → logprob: -5.395792007446289
    6. '<|end|>' → logprob: -5.520792007446289
    7. '```' → logprob: -6.270792007446289
    8. 'return' → logprob: -6.645792007446289
    9. ')' → logprob: -7.270792007446289
    10. '	return' → logprob: -7.270792007446289

Token 26: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10854581743478775
    2. 'return' (adapté à ' return') → logprob: -3.3585457801818848
    3. ' ' → logprob: -3.9835457801818848
    4. '
' → logprob: -4.358545780181885
    5. ' return' → logprob: -4.483545780181885
    6. '<|end|>' → logprob: -4.733545780181885
    7. '	return' → logprob: -5.858545780181885
    8. '    
' → logprob: -5.858545780181885
    9. '  ' → logprob: -6.233545780181885
    10. '[' → logprob: -6.358545780181885

Token 27: ' n' (ID: 297)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.23166914284229279
    2. 'l' → logprob: -1.6066691875457764
    3. ' n' → logprob: -5.606668949127197
    4. ' (' → logprob: -6.731668949127197
    5. 'n' → logprob: -6.856668949127197
    6. '(' → logprob: -9.231669425964355
    7. '(n' → logprob: -9.731669425964355
    8. ' [' → logprob: -10.106669425964355
    9. '(l' → logprob: -10.106669425964355
    10. ' ' → logprob: -10.606669425964355

Token 28: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.07010938227176666
    2. 'l' → logprob: -2.6951093673706055
    3. ' ' → logprob: -9.445109367370605
    4. ' ' → logprob: -9.570109367370605
    5. 'space' → logprob: -12.070109367370605
    6. '	l' → logprob: -12.445109367370605
    7. '[' → logprob: -12.945109367370605
    8. 's' → logprob: -13.570109367370605
    9. '_' → logprob: -13.820109367370605
    10. '_l' → logprob: -13.820109367370605

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6550363302230835
    2. 'def' → logprob: -0.9050363302230835
    3. '```' → logprob: -3.030036449432373
    4. '

' → logprob: -5.155036449432373
    5. '\n' → logprob: -5.280036449432373
    6. '[' → logprob: -5.280036449432373
    7. '' → logprob: -5.905036449432373
    8. '<|end|>' → logprob: -6.030036449432373
    9. '\' → logprob: -6.405036449432373
    10. 'n' → logprob: -6.530036449432373

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06647376716136932
    2. '
' → logprob: -3.0664737224578857
    3. '

' → logprob: -4.691473960876465
    4. '```' → logprob: -6.066473960876465
    5. '\' → logprob: -6.191473960876465
    6. 'd' → logprob: -6.441473960876465
    7. 'n' → logprob: -6.691473960876465
    8. '\n' → logprob: -7.691473960876465
    9. '' → logprob: -8.191473960876465
    10. '
' → logprob: -8.691473960876465

Token 32: ' get' (ID: 717)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.9525236487388611
    2. ' get' → logprob: -1.3275237083435059
    3. ' find' → logprob: -2.702523708343506
    4. ' read' → logprob: -2.827523708343506
    5. ' sort' → logprob: -2.952523708343506
    6. '_' → logprob: -3.077523708343506
    7. ' main' → logprob: -3.577523708343506
    8. ' solve' → logprob: -3.952523708343506
    9. ' bis' → logprob: -4.327523708343506
    10. ' _' → logprob: -4.827523708343506

Token 33: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.023413417860865593
    2. '_' → logprob: -3.7734134197235107
    3. '_input' → logprob: -9.64841365814209
    4. ' _' → logprob: -10.02341365814209
    5. '_in' → logprob: -10.89841365814209
    6. '_i' → logprob: -11.77341365814209
    7. '_integer' → logprob: -12.02341365814209
    8. '_str' → logprob: -12.14841365814209
    9. '_uint' → logprob: -12.52341365814209
    10. '_string' → logprob: -13.02341365814209

Token 34: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6343574523925781
    2. '():' → logprob: -0.7593574523925781
    3. '():
' → logprob: -7.384357452392578
    4. ' ()' → logprob: -7.884357452392578
    5. '(' → logprob: -8.134357452392578
    6. '()>' → logprob: -9.384357452392578
    7. '()">' → logprob: -9.634357452392578
    8. '():

' → logprob: -10.009357452392578
    9. '()<' → logprob: -10.259357452392578
    10. '`()' → logprob: -10.634357452392578

Token 35: '   ' (ID: 271)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.819659948348999
    2. ' return' → logprob: -1.819659948348999
    3. '   ' → logprob: -2.069659948348999
    4. '    ' → logprob: -2.819659948348999
    5. ' int' → logprob: -2.819659948348999
    6. 'int' → logprob: -2.944659948348999
    7. ' ' → logprob: -3.069659948348999
    8. 'return' → logprob: -3.944659948348999
    9. '()' → logprob: -4.694660186767578
    10. '(' → logprob: -4.944660186767578

Token 36: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20678724348545074
    2. 'int' → logprob: -1.7067872285842896
    3. ' return' → logprob: -5.331787109375
    4. 'return' (adapté à ' return') → logprob: -7.831787109375
    5. '   ' → logprob: -9.331787109375
    6. '(int' → logprob: -11.206787109375
    7. ' ' → logprob: -11.956787109375
    8. '=int' → logprob: -12.081787109375
    9. '<int' → logprob: -12.331787109375
    10. '[int' → logprob: -12.581787109375

Token 37: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003716819453984499
    2. 'int' → logprob: -5.628716945648193
    3. ' ' → logprob: -9.128716468811035
    4. '(int' → logprob: -12.628716468811035
    5. '  ' → logprob: -13.003716468811035
    6. '	int' → logprob: -14.253716468811035
    7. '<int' → logprob: -14.378716468811035
    8. '   ' → logprob: -14.753716468811035
    9. '=int' → logprob: -15.128716468811035
    10. ' in' → logprob: -15.253716468811035

Token 38: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07077953964471817
    2. '(input' → logprob: -2.69577956199646
    3. '()' → logprob: -7.820779323577881
    4. '('' → logprob: -8.445779800415039
    5. 'input' → logprob: -9.070779800415039
    6. '("("' → logprob: -9.570779800415039
    7. '(
' → logprob: -11.695779800415039
    8. '(raw' → logprob: -12.070779800415039
    9. ' (' → logprob: -12.570779800415039
    10. '(\' → logprob: -12.695779800415039

Token 39: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005289492197334766
    2. '()' → logprob: -5.255289554595947
    3. '()))' → logprob: -10.880289077758789
    4. '(' → logprob: -11.005289077758789
    5. '().' → logprob: -11.505289077758789
    6. ' ())' → logprob: -12.505289077758789
    7. '();)' → logprob: -13.255289077758789
    8. '())
' → logprob: -13.380289077758789
    9. '()`' → logprob: -14.630289077758789
    10. '());' → logprob: -14.630289077758789

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00048048171447589993
    2. '```' → logprob: -8.125480651855469
    3. ' def' → logprob: -9.125480651855469
    4. '
' → logprob: -10.250480651855469
    5. '

' → logprob: -10.875480651855469
    6. '\' → logprob: -11.750480651855469
    7. '``' → logprob: -12.500480651855469
    8. '_def' → logprob: -12.875480651855469
    9. '()' → logprob: -13.750480651855469
    10. '  
' → logprob: -14.125480651855469

Token 41: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.30822426080703735
    2. '_get' → logprob: -1.5582242012023926
    3. ' get' → logprob: -2.9332242012023926
    4. '_int' → logprob: -7.058224201202393
    5. 'def' → logprob: -8.43322467803955
    6. 'int' → logprob: -8.80822467803955
    7. '_input' → logprob: -9.05822467803955
    8. '_' → logprob: -9.93322467803955
    9. ' def' → logprob: -10.05822467803955
    10. ' _' → logprob: -11.30822467803955

Token 42: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.570319702499546e-05
    2. '_list' → logprob: -11.500025749206543
    3. '_float' → logprob: -12.750025749206543
    4. '_str' → logprob: -13.000025749206543
    5. '_input' → logprob: -13.125025749206543
    6. '_' → logprob: -13.125025749206543
    7. 'int' → logprob: -13.500025749206543
    8. '_string' → logprob: -14.000025749206543
    9. '_uint' → logprob: -14.375025749206543
    10. '_in' → logprob: -14.375025749206543

Token 43: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.363617962459102e-05
    2. '()' → logprob: -10.125083923339844
    3. '_' → logprob: -11.250083923339844
    4. '_lst' → logprob: -11.500083923339844
    5. '_line' → logprob: -11.875083923339844
    6. 'list' → logprob: -12.250083923339844
    7. '_lists' → logprob: -12.875083923339844
    8. '_lista' → logprob: -13.250083923339844
    9. '_l' → logprob: -13.375083923339844
    10. '_array' → logprob: -14.000083923339844

Token 44: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48022976517677307
    2. '():' → logprob: -0.9802297353744507
    3. '():
' → logprob: -5.23022985458374
    4. ' ()' → logprob: -7.85522985458374
    5. '():

' → logprob: -8.855229377746582
    6. '()[' → logprob: -9.230229377746582
    7. '().' → logprob: -10.105229377746582
    8. '`()' → logprob: -10.730229377746582
    9. '()">' → logprob: -11.355229377746582
    10. '()`' → logprob: -11.355229377746582

Token 45: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21172362565994263
    2. 'list' → logprob: -2.086723566055298
    3. ' list' → logprob: -3.836723566055298
    4. 'return' → logprob: -3.836723566055298
    5. '   ' → logprob: -4.211723804473877
    6. '(list' → logprob: -5.086723804473877
    7. ' return' → logprob: -6.586723804473877
    8. '=list' → logprob: -7.836723804473877
    9. '[]' → logprob: -8.711723327636719
    10. '(' → logprob: -9.461723327636719

Token 46: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02327471412718296
    2. ' list' → logprob: -3.7732746601104736
    3. 'return' (adapté à ' return') → logprob: -10.898274421691895
    4. '   ' → logprob: -12.273274421691895
    5. 'map' → logprob: -12.648274421691895
    6. '[list' → logprob: -13.273274421691895
    7. ' return' → logprob: -14.648274421691895
    8. '	list' → logprob: -15.523274421691895
    9. '[' → logprob: -15.773274421691895
    10. '=list' → logprob: -16.39827537536621

Token 47: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1271161437034607
    2. ' list' → logprob: -2.1271162033081055
    3. '[list' → logprob: -8.752116203308105
    4. '(list' → logprob: -10.627116203308105
    5. '[' → logprob: -12.502116203308105
    6. '	list' → logprob: -13.752116203308105
    7. ' [' → logprob: -14.752116203308105
    8. '=list' → logprob: -15.502116203308105
    9. '   ' → logprob: -16.37711524963379
    10. ' ' → logprob: -16.87711524963379

Token 48: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0026446215342730284
    2. '(' → logprob: -6.0026445388793945
    3. '(input' → logprob: -9.127644538879395
    4. '(int' → logprob: -10.127644538879395
    5. '(list' → logprob: -11.502644538879395
    6. '(eval' → logprob: -11.752644538879395
    7. 'map' → logprob: -14.627644538879395
    8. '(s' → logprob: -15.127644538879395
    9. ' map' → logprob: -15.377644538879395
    10. '(filter' → logprob: -15.377644538879395

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012646402465179563
    2. 'int' → logprob: -7.126264572143555
    3. '(' → logprob: -7.876264572143555
    4. ',int' → logprob: -10.626264572143555
    5. '<int' → logprob: -10.876264572143555
    6. '=int' → logprob: -11.376264572143555
    7. ' int' → logprob: -11.751264572143555
    8. ')' → logprob: -12.376264572143555
    9. ' (' → logprob: -12.751264572143555
    10. '(input' → logprob: -13.251264572143555

Token 50: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0707601010799408
    2. ',' → logprob: -2.6957600116729736
    3. '(input' → logprob: -7.320760250091553
    4. 'input' → logprob: -8.945759773254395
    5. ' ,' → logprob: -10.695759773254395
    6. '(' → logprob: -12.820759773254395
    7. ',int' → logprob: -13.070759773254395
    8. ' input' → logprob: -14.070759773254395
    9. ',list' → logprob: -14.445759773254395
    10. ',(' → logprob: -14.820759773254395

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024859998375177383
    2. ' input' → logprob: -6.002486228942871
    3. ',input' → logprob: -12.252486228942871
    4. '   ' → logprob: -13.127486228942871
    5. '(input' → logprob: -13.377486228942871
    6. 'str' → logprob: -14.377486228942871
    7. '	input' → logprob: -14.877486228942871
    8. ' ' → logprob: -15.252486228942871
    9. '=input' → logprob: -15.502486228942871
    10. '<input' → logprob: -15.627486228942871

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003013809327967465
    2. '.split' → logprob: -9.375301361083984
    3. ' .' → logprob: -9.875301361083984
    4. ')' → logprob: -10.125301361083984
    5. '.' → logprob: -10.125301361083984
    6. '()' → logprob: -10.500301361083984
    7. '.strip' → logprob: -10.875301361083984
    8. '))' → logprob: -11.500301361083984
    9. '   ' → logprob: -11.750301361083984
    10. '.readline' → logprob: -12.500301361083984

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007106438861228526
    2. 'strip' → logprob: -7.250710487365723
    3. 'rstrip' → logprob: -14.250710487365723
    4. ' split' → logprob: -17.00071144104004
    5. '(split' → logprob: -18.12571144104004
    6. 'spl' → logprob: -18.62571144104004
    7. 's' → logprob: -20.62571144104004
    8. 'read' → logprob: -20.75071144104004
    9. '.split' → logprob: -21.00071144104004
    10. '_split' → logprob: -22.37571144104004

Token 54: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16736602783203125
    2. '))' → logprob: -1.9173660278320312
    3. '()' → logprob: -5.167366027832031
    4. ')))' → logprob: -7.292366027832031
    5. '())' → logprob: -7.667366027832031
    6. '())))' → logprob: -8.417366027832031
    7. ')' → logprob: -10.542366027832031
    8. '(' → logprob: -11.292366027832031
    9. '()))
' → logprob: -12.417366027832031
    10. '()));' → logprob: -13.917366027832031

Token 55: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.690834273584187e-05
    2. '

' → logprob: -11.37503719329834
    3. '```' → logprob: -11.50003719329834
    4. 'class' → logprob: -12.12503719329834
    5. '\' → logprob: -12.50003719329834
    6. '
' → logprob: -13.25003719329834
    7. ' def' → logprob: -13.87503719329834
    8. '<|end|>' → logprob: -14.12503719329834
    9. '#' → logprob: -14.37503719329834
    10. 'n' → logprob: -14.62503719329834

Token 56: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.3529882431030273
    2. ' find' → logprob: -1.4779882431030273
    3. ' binary' → logprob: -1.6029882431030273
    4. ' lower' → logprob: -1.7279882431030273
    5. 'binary' → logprob: -3.6029882431030273
    6. 'lower' → logprob: -3.7279882431030273
    7. ' solve' → logprob: -3.8529882431030273
    8. ' search' → logprob: -4.852988243103027
    9. ' lis' → logprob: -5.227988243103027
    10. 'main' → logprob: -5.227988243103027

Token 57: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23769938945770264
    2. '(' → logprob: -2.362699508666992
    3. '_list' → logprob: -2.487699508666992
    4. '_l' → logprob: -4.987699508666992
    5. '(_' → logprob: -5.112699508666992
    6. '_array' → logprob: -5.237699508666992
    7. '_(' → logprob: -5.362699508666992
    8. '(l' → logprob: -5.862699508666992
    9. 'ed' → logprob: -6.237699508666992
    10. '(_)' → logprob: -7.237699508666992

Token 58: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0074660624377429485
    2. '_' → logprob: -5.382465839385986
    3. '():' → logprob: -6.632465839385986
    4. '(l' → logprob: -8.257466316223145
    5. '(_' → logprob: -8.382466316223145
    6. '()' → logprob: -8.507466316223145
    7. '_list' → logprob: -9.132466316223145
    8. '(ls' → logprob: -9.132466316223145
    9. '(_)' → logprob: -9.507466316223145
    10. '(lst' → logprob: -9.882466316223145

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009575550211593509
    2. ')' → logprob: -7.000957489013672
    3. ' ):' → logprob: -10.500957489013672
    4. '):
' → logprob: -11.375957489013672
    5. ')):' → logprob: -12.250957489013672
    6. ':' → logprob: -14.750957489013672
    7. '   ' → logprob: -15.000957489013672
    8. '():' → logprob: -15.500957489013672
    9. '))' → logprob: -15.625957489013672
    10. '):
' → logprob: -15.750957489013672

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.211214080452919
    2. 'l' → logprob: -2.461214065551758
    3. '(' → logprob: -3.336214065551758
    4. ' l' → logprob: -3.836214065551758
    5. 'return' → logprob: -4.211214065551758
    6. '(l' → logprob: -4.211214065551758
    7. ' return' → logprob: -4.836214065551758
    8. '(
' → logprob: -6.086214065551758
    9. '[:]' → logprob: -6.211214065551758
    10. '```' → logprob: -6.711214065551758

Token 61: ' return' (ID: 622)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7153902649879456
    2. ' l' → logprob: -1.5903902053833008
    3. ' return' → logprob: -2.215390205383301
    4. 'return' (adapté à ' return') → logprob: -2.215390205383301
    5. '   ' → logprob: -2.465390205383301
    6. 'sorted' → logprob: -5.965390205383301
    7. ' sorted' → logprob: -6.965390205383301
    8. '```' → logprob: -8.4653902053833
    9. ' ' → logprob: -8.9653902053833
    10. '    
' → logprob: -10.0903902053833

Token 62: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2519415020942688
    2. ' sorted' → logprob: -1.501941442489624
    3. ' ' → logprob: -12.126941680908203
    4. '(sorted' → logprob: -12.376941680908203
    5. '   ' → logprob: -13.376941680908203
    6. 'sort' → logprob: -14.751941680908203
    7. '.sorted' → logprob: -15.376941680908203
    8. '  ' → logprob: -15.501941680908203
    9. ' ' → logprob: -16.001941680908203
    10. '```' → logprob: -16.126941680908203

Token 63: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3134221136569977
    2. '(l' → logprob: -1.3134220838546753
    3. '(list' → logprob: -9.438422203063965
    4. '((' → logprob: -10.563422203063965
    5. '(ll' → logprob: -11.563422203063965
    6. '(ls' → logprob: -11.563422203063965
    7. '(
' → logprob: -12.313422203063965
    8. '(

' → logprob: -12.438422203063965
    9. '(_' → logprob: -12.688422203063965
    10. '(s' → logprob: -12.813422203063965

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '))' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.87500286102295
    4. ')
' → logprob: -16.000003814697266
    5. ')))' → logprob: -17.000003814697266
    6. '[' → logprob: -17.375003814697266
    7. ')`' → logprob: -18.500003814697266
    8. '')' → logprob: -18.500003814697266
    9. '),' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.000003814697266

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027048930060118437
    2. 'l' → logprob: -7.127705097198486
    3. 'n' → logprob: -7.127705097198486
    4. '[' → logprob: -8.252704620361328
    5. '(' → logprob: -8.752704620361328
    6. '```' → logprob: -8.877704620361328
    7. '<|end|>' → logprob: -9.127704620361328
    8. '#' → logprob: -9.752704620361328
    9. '<|end|>' → logprob: -9.877704620361328
    10. ' def' → logprob: -10.127704620361328

Token 66: ' calculate' (ID: 17950)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8912630081176758
    2. ' binary' → logprob: -1.1412630081176758
    3. ' main' → logprob: -1.8912630081176758
    4. ' max' → logprob: -3.641263008117676
    5. ' count' → logprob: -4.016263008117676
    6. ' bis' → logprob: -4.141263008117676
    7. ' merge' → logprob: -4.641263008117676
    8. ' reverse' → logprob: -4.891263008117676
    9. ' get' → logprob: -5.016263008117676
    10. ' search' → logprob: -5.141263008117676

Token 67: '_pairs' (ID: 90005)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -1.422959566116333
    2. '_max' → logprob: -2.172959566116333
    3. '_distance' → logprob: -2.172959566116333
    4. '_diff' → logprob: -2.672959566116333
    5. '_dist' → logprob: -2.922959566116333
    6. '_insert' → logprob: -3.172959566116333
    7. '_sum' → logprob: -3.172959566116333
    8. '_m' → logprob: -3.672959566116333
    9. '_possible' → logprob: -3.672959566116333
    10. '_' → logprob: -3.672959566116333

Token 68: '(n' (ID: 2406)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5251699686050415
    2. '(' → logprob: -0.9001699686050415
    3. '(n' → logprob: -6.400169849395752
    4. '(ls' → logprob: -9.77517032623291
    5. '(lst' → logprob: -10.15017032623291
    6. '_count' → logprob: -10.27517032623291
    7. '((' → logprob: -10.77517032623291
    8. '(ll' → logprob: -10.77517032623291
    9. '(s' → logprob: -10.77517032623291
    10. ' (' → logprob: -10.77517032623291

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000965891988016665
    2. ',l' → logprob: -7.0009660720825195
    3. ' ,' → logprob: -10.25096607208252
    4. ',n' → logprob: -12.12596607208252
    5. 'l' → logprob: -12.25096607208252
    6. ')' → logprob: -12.75096607208252
    7. ',s' → logprob: -13.87596607208252
    8. ' l' → logprob: -14.00096607208252
    9. ',k' → logprob: -14.25096607208252
    10. ',p' → logprob: -14.87596607208252

Token 70: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3870655298233032
    2. 'l' → logprob: -1.1370655298233032
    3. 'sorted' → logprob: -9.637065887451172
    4. ' sorted' → logprob: -10.262065887451172
    5. 'arr' → logprob: -10.637065887451172
    6. 'lst' → logprob: -11.824565887451172
    7. ' lst' → logprob: -11.887065887451172
    8. '   ' → logprob: -12.012065887451172
    9. ' ' → logprob: -12.137065887451172
    10. ')' → logprob: -12.137065887451172

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005553185474127531
    2. ',' → logprob: -5.380553245544434
    3. '):
' → logprob: -7.380553245544434
    4. ')' → logprob: -8.380553245544434
    5. ' ):' → logprob: -10.380553245544434
    6. '   ' → logprob: -10.505553245544434
    7. ':' → logprob: -11.630553245544434
    8. '):
' → logprob: -12.255553245544434
    9. '[]):' → logprob: -13.630553245544434
    10. ')):' → logprob: -14.380553245544434

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025851640850305557
    2. ' pairs' → logprob: -4.400851726531982
    3. 'pairs' → logprob: -4.900851726531982
    4. ' count' → logprob: -5.650851726531982
    5. 'count' → logprob: -6.400851726531982
    6. ' counts' → logprob: -9.025851249694824
    7. ' result' → logprob: -9.400851249694824
    8. '```' → logprob: -9.525851249694824
    9. ' res' → logprob: -9.650851249694824
    10. 'result' → logprob: -9.900851249694824

Token 73: ' ans' (ID: 3345)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5351670384407043
    2. 'pairs' → logprob: -2.1601669788360596
    3. '   ' → logprob: -2.2851669788360596
    4. 'l' → logprob: -2.4101669788360596
    5. ' count' → logprob: -3.1601669788360596
    6. 'answer' → logprob: -3.9101669788360596
    7. 'result' → logprob: -4.535167217254639
    8. 'ans' (adapté à ' ans') → logprob: -4.785167217254639
    9. ' pairs' → logprob: -4.910167217254639
    10. 'res' → logprob: -5.535167217254639

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043010830879211426
    2. '=' → logprob: -3.168010711669922
    3. ' +=' → logprob: -12.293010711669922
    4. ' ' → logprob: -13.168010711669922
    5. ')' → logprob: -13.668010711669922
    6. '  ' → logprob: -13.793010711669922
    7. ',' → logprob: -13.793010711669922
    8. ' =
' → logprob: -14.543010711669922
    9. '   ' → logprob: -14.918010711669922
    10. '+=' → logprob: -15.668010711669922

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07899355888366699
    2. ' ' → logprob: -2.578993558883667
    3. ' n' → logprob: -10.578993797302246
    4. ' [' → logprob: -10.828993797302246
    5. '[' → logprob: -10.953993797302246
    6. 'n' → logprob: -11.203993797302246
    7. '   ' → logprob: -11.328993797302246
    8. '[]' → logprob: -12.891493797302246
    9. ' ' → logprob: -13.328993797302246
    10. '  ' → logprob: -13.516493797302246

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.875017166137695
    3. '[' → logprob: -12.500017166137695
    4. '[]' → logprob: -13.125017166137695
    5. 'n' → logprob: -13.750017166137695
    6. '1' → logprob: -14.125017166137695
    7. 'len' → logprob: -14.375017166137695
    8. 'set' → logprob: -14.875017166137695
    9. 'sum' → logprob: -15.000017166137695
    10. 'int' → logprob: -15.875017166137695

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44368070363998413
    2. '   ' → logprob: -1.068680763244629
    3. '    
' → logprob: -5.443680763244629
    4. '<|end|>' → logprob: -5.943680763244629
    5. '' → logprob: -6.693680763244629
    6. ' for' → logprob: -6.818680763244629
    7. '
' → logprob: -6.818680763244629
    8. ',' → logprob: -7.068680763244629
    9. '  
' → logprob: -7.193680763244629
    10. '\n' → logprob: -7.193680763244629

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4424903094768524
    2. '
' → logprob: -1.0674903392791748
    3. ' for' → logprob: -5.192490100860596
    4. '    
' → logprob: -5.317490100860596
    5. '	for' → logprob: -7.442490100860596
    6. '  
' → logprob: -7.567490100860596
    7. 'for' → logprob: -8.067490577697754
    8. '```' → logprob: -8.067490577697754
    9. '<|end|>' → logprob: -8.192490577697754
    10. '\n' → logprob: -8.192490577697754

Token 79: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26994287967681885
    2. ' for' → logprob: -2.2699427604675293
    3. '   ' → logprob: -2.5199427604675293
    4. 'l' → logprob: -3.0199427604675293
    5. ' l' → logprob: -5.769942760467529
    6. 'n' → logprob: -7.269942760467529
    7. ' n' → logprob: -9.519943237304688
    8. ' ' → logprob: -10.144943237304688
    9. '	for' → logprob: -11.769943237304688
    10. 'sorted' → logprob: -11.894943237304688

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04888109117746353
    2. 'i' → logprob: -3.0488810539245605
    3. ' ' → logprob: -9.173881530761719
    4. '	i' → logprob: -9.923881530761719
    5. '_i' → logprob: -10.298881530761719
    6. ' ' → logprob: -10.798881530761719
    7. ')' → logprob: -11.611381530761719
    8. ' j' → logprob: -11.611381530761719
    9. 'range' → logprob: -11.673881530761719
    10. ' range' → logprob: -11.673881530761719

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017183709889650345
    2. 'in' → logprob: -4.142183780670166
    3. ' ' → logprob: -6.892183780670166
    4. '+' → logprob: -9.392183303833008
    5. '  ' → logprob: -11.017183303833008
    6. '	in' → logprob: -11.892183303833008
    7. '1' → logprob: -12.642183303833008
    8. ',' → logprob: -12.642183303833008
    9. '    ' → logprob: -12.892183303833008
    10. 'range' → logprob: -13.017183303833008

Token 82: ' generate' (ID: 10419)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00537237199023366
    2. 'range' → logprob: -5.255372524261475
    3. ' ' → logprob: -9.505372047424316
    4. '	range' → logprob: -10.130372047424316
    5. ' xrange' → logprob: -11.130372047424316
    6. ')' → logprob: -13.130372047424316
    7. '  ' → logprob: -13.630372047424316
    8. ' r' → logprob: -13.880372047424316
    9. '(range' → logprob: -14.005372047424316
    10. '<|end|>' → logprob: -14.005372047424316

Token 83: '_range' (ID: 22022)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3200719356536865
    2. 'range' → logprob: -2.1950719356536865
    3. '(' → logprob: -2.3200719356536865
    4. '_range' → logprob: -3.4450719356536865
    5. '(range' → logprob: -4.320072174072266
    6. ' range' → logprob: -4.945072174072266
    7. '_' → logprob: -6.070072174072266
    8. '(i' → logprob: -6.820072174072266
    9. '(N' → logprob: -6.820072174072266
    10. '(len' → logprob: -6.945072174072266

Token 84: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5330464243888855
    2. '(n' → logprob: -0.9080464243888855
    3. '(len' → logprob: -4.783046245574951
    4. '(i' → logprob: -6.658046245574951
    5. ' (' → logprob: -9.40804672241211
    6. '(range' → logprob: -9.65804672241211
    7. '((' → logprob: -10.53304672241211
    8. '(
' → logprob: -10.65804672241211
    9. 'n' → logprob: -12.78304672241211
    10. '(length' → logprob: -13.03304672241211

Token 85: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35574543476104736
    2. ')' → logprob: -1.7307454347610474
    3. '(' → logprob: -2.605745315551758
    4. ',' → logprob: -4.355745315551758
    5. '-' → logprob: -4.605745315551758
    6. '   ' → logprob: -4.980745315551758
    7. ' ' → logprob: -5.355745315551758
    8. '(i' → logprob: -5.480745315551758
    9. '):
' → logprob: -5.855745315551758
    10. ' -' → logprob: -5.855745315551758

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02927294187247753
    2. '2' → logprob: -3.65427303314209
    3. '3' → logprob: -6.02927303314209
    4. ' ' → logprob: -7.52927303314209
    5. '4' → logprob: -12.09177303314209
    6. '```' → logprob: -12.52927303314209
    7. '-' → logprob: -12.90427303314209
    8. '(' → logprob: -13.09177303314209
    9. '
' → logprob: -13.84177303314209
    10. '5' → logprob: -13.96677303314209

Token 87: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4790888726711273
    2. '):' → logprob: -1.1040889024734497
    3. ')' → logprob: -3.10408878326416
    4. ' ,' → logprob: -6.72908878326416
    5. '(' → logprob: -7.35408878326416
    6. '):
' → logprob: -7.47908878326416
    7. ' ):' → logprob: -7.60408878326416
    8. ' ' → logprob: -8.22908878326416
    9. '   ' → logprob: -8.60408878326416
    10. ',i' → logprob: -8.85408878326416

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6667746901512146
    2. '       ' → logprob: -1.5417747497558594
    3. ' ' → logprob: -2.2917747497558594
    4. '<|end|>' → logprob: -2.9167747497558594
    5. ':' → logprob: -3.0417747497558594
    6. '    ' → logprob: -3.2917747497558594
    7. '  ' → logprob: -4.666774749755859
    8. '        ' → logprob: -5.916774749755859
    9. ' for' → logprob: -6.041774749755859
    10. ',' → logprob: -6.041774749755859

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11672521382570267
    2. '   ' → logprob: -3.241725206375122
    3. ' ' → logprob: -3.366725206375122
    4. 'for' (adapté à ' for') → logprob: -3.616725206375122
    5. '    ' → logprob: -5.741725444793701
    6. '	for' → logprob: -6.366725444793701
    7. '<|end|>' → logprob: -6.491725444793701
    8. '  ' → logprob: -6.991725444793701
    9. '       ' → logprob: -7.366725444793701
    10. ' j' → logprob: -7.616725444793701

Token 90: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04898030683398247
    2. 'j' → logprob: -3.048980236053467
    3. '<|end|>' → logprob: -9.048980712890625
    4. '	j' → logprob: -9.423980712890625
    5. ' ' → logprob: -9.673980712890625
    6. '<|end|>' → logprob: -10.173980712890625
    7. ' ' → logprob: -10.298980712890625
    8. '  ' → logprob: -11.423980712890625
    9. '_j' → logprob: -11.861480712890625
    10. '```' → logprob: -11.986480712890625

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05627210810780525
    2. 'in' → logprob: -2.931272029876709
    3. ' ' → logprob: -6.681272029876709
    4. 'range' → logprob: -9.931272506713867
    5. '  ' → logprob: -10.556272506713867
    6. '    ' → logprob: -11.056272506713867
    7. ' i' → logprob: -11.556272506713867
    8. '	in' → logprob: -11.681272506713867
    9. ' range' → logprob: -11.806272506713867
    10. '	' → logprob: -12.306272506713867

Token 92: ' generate' (ID: 10419)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08767454326152802
    2. ' generate' → logprob: -2.962674617767334
    3. 'range' → logprob: -3.587674617767334
    4. 'generate' → logprob: -5.462674617767334
    5. ' ' → logprob: -9.087674140930176
    6. '	range' → logprob: -9.212674140930176
    7. ' xrange' → logprob: -9.962674140930176
    8. '  ' → logprob: -10.837674140930176
    9. '(range' → logprob: -10.962674140930176
    10. '   ' → logprob: -11.587674140930176

Token 93: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0011785586830228567
    2. 'range' → logprob: -7.251178741455078
    3. '_' → logprob: -8.251178741455078
    4. ' _' → logprob: -10.251178741455078
    5. '_r' → logprob: -10.376178741455078
    6. 'Range' → logprob: -11.001178741455078
    7. '   ' → logprob: -11.251178741455078
    8. ' range' → logprob: -11.376178741455078
    9. '_i' → logprob: -11.751178741455078
    10. '_list' → logprob: -11.751178741455078

Token 94: '2' (ID: 17)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006757290568202734
    2. '(' → logprob: -5.0067572593688965
    3. '(n' → logprob: -11.006757736206055
    4. '((' → logprob: -11.131757736206055
    5. '(j' → logprob: -12.506757736206055
    6. ')' → logprob: -12.756757736206055
    7. ' (' → logprob: -13.631757736206055
    8. '(s' → logprob: -13.756757736206055
    9. '(
' → logprob: -14.631757736206055
    10. 'i' → logprob: -15.631757736206055

Token 95: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18550686538219452
    2. '(n' → logprob: -2.060506820678711
    3. '(' → logprob: -3.185506820678711
    4. ' (' → logprob: -8.310506820678711
    5. '(j' → logprob: -8.310506820678711
    6. '((' → logprob: -10.310506820678711
    7. '(s' → logprob: -11.060506820678711
    8. '(range' → logprob: -11.935506820678711
    9. '(
' → logprob: -12.310506820678711
    10. 'n' → logprob: -12.310506820678711

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10060323029756546
    2. ' +' → logprob: -2.3506033420562744
    3. ',' → logprob: -8.600603103637695
    4. '+,' → logprob: -9.350603103637695
    5. '   ' → logprob: -10.100603103637695
    6. ' ' → logprob: -10.975603103637695
    7. '+
' → logprob: -11.100603103637695
    8. '1' → logprob: -11.600603103637695
    9. ' ,' → logprob: -11.725603103637695
    10. ')' → logprob: -11.850603103637695

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035536551149562
    2. ',' → logprob: -8.62535572052002
    3. ' ' → logprob: -10.00035572052002
    4. '2' → logprob: -10.37535572052002
    5. 'n' → logprob: -10.62535572052002
    6. ')' → logprob: -10.62535572052002
    7. '   ' → logprob: -10.87535572052002
    8. '```' → logprob: -12.25035572052002
    9. '       ' → logprob: -12.50035572052002
    10. ',n' → logprob: -12.87535572052002

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43087196350097656
    2. ',n' → logprob: -1.0558719635009766
    3. '(n' → logprob: -6.430871963500977
    4. ' ,' → logprob: -7.930871963500977
    5. 'n' → logprob: -9.555871963500977
    6. ',j' → logprob: -10.055871963500977
    7. '(' → logprob: -10.680871963500977
    8. '   ' → logprob: -11.305871963500977
    9. ',
' → logprob: -11.430871963500977
    10. ',len' → logprob: -11.430871963500977

Token 99: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006895820144563913
    2. ' n' → logprob: -5.006896018981934
    3. ')' → logprob: -9.756896018981934
    4. '   ' → logprob: -10.381896018981934
    5. '<|end|>' → logprob: -10.506896018981934
    6. ')n' → logprob: -10.756896018981934
    7. ' ' → logprob: -11.756896018981934
    8. '    ' → logprob: -12.256896018981934
    9. '	n' → logprob: -12.506896018981934
    10. '(n' → logprob: -12.756896018981934

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006880545523017645
    2. '):
' → logprob: -5.006880760192871
    3. '       ' → logprob: -9.756880760192871
    4. ' ):' → logprob: -10.256880760192871
    5. ')' → logprob: -10.631880760192871
    6. '   ' → logprob: -11.006880760192871
    7. '+' → logprob: -11.131880760192871
    8. '):
' → logprob: -12.131880760192871
    9. ',' → logprob: -12.506880760192871
    10. ':' → logprob: -13.256880760192871

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018291819840669632
    2. '       ' → logprob: -4.89329195022583
    3. '               ' → logprob: -5.64329195022583
    4. ' ' → logprob: -6.01829195022583
    5. '   ' → logprob: -6.64329195022583
    6. '          ' → logprob: -7.39329195022583
    7. '<|end|>' → logprob: -7.64329195022583
    8. '        ' → logprob: -7.76829195022583
    9. '         ' → logprob: -8.143291473388672
    10. '            ' → logprob: -8.268291473388672

Token 102: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9117576479911804
    2. 'k' → logprob: -1.4117577075958252
    3. ' if' → logprob: -1.7867577075958252
    4. '           ' → logprob: -3.161757707595825
    5. ' k' → logprob: -3.411757707595825
    6. 'x' → logprob: -3.911757707595825
    7. '   ' → logprob: -4.036757469177246
    8. 'left' → logprob: -4.161757469177246
    9. ' left' → logprob: -4.786757469177246
    10. 'a' → logprob: -5.286757469177246

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1553753912448883
    2. '_' → logprob: -2.5303754806518555
    3. '=' → logprob: -2.7803754806518555
    4. '_idx' → logprob: -7.2803754806518555
    5. '_index' → logprob: -7.7803754806518555
    6. '_=' → logprob: -8.905375480651855
    7. '   ' → logprob: -9.030375480651855
    8. ' _' → logprob: -9.155375480651855
    9. '_indices' → logprob: -9.405375480651855
    10. ' +=' → logprob: -9.530375480651855

Token 104: ' count' (ID: 3605)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4854651093482971
    2. ' bis' → logprob: -1.6104650497436523
    3. 'n' → logprob: -2.4854650497436523
    4. ' n' → logprob: -2.7354650497436523
    5. '           ' → logprob: -4.735465049743652
    6. 'len' → logprob: -4.985465049743652
    7. 'j' → logprob: -4.985465049743652
    8. 'l' → logprob: -5.610465049743652
    9. 'k' → logprob: -6.110465049743652
    10. ' j' → logprob: -6.235465049743652

Token 105: '_valid' (ID: 23321)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '_k' (ID: 11637)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.183072566986084
    2. '(l' → logprob: -1.558072566986084
    3. '_pairs' → logprob: -1.933072566986084
    4. '_elements' → logprob: -2.308072566986084
    5. 's' → logprob: -2.808072566986084
    6. '_s' → logprob: -3.808072566986084
    7. '_l' → logprob: -3.808072566986084
    8. '_tokens' → logprob: -3.933072566986084
    9. '_indices' → logprob: -4.183072566986084
    10. '(
' → logprob: -4.183072566986084

Token 107: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.8965948224067688
    2. '(i' → logprob: -1.396594762802124
    3. '(n' → logprob: -2.021594762802124
    4. 'eys' → logprob: -2.396594762802124
    5. '(' → logprob: -2.646594762802124
    6. 's' → logprob: -3.146594762802124
    7. '(s' → logprob: -5.021595001220703
    8. 'ays' → logprob: -9.646595001220703
    9. '((' → logprob: -9.771595001220703
    10. '(j' → logprob: -9.771595001220703

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005878306459635496
    2. ' ,' → logprob: -5.630878448486328
    3. ',j' → logprob: -7.130878448486328
    4. ')' → logprob: -8.005878448486328
    5. ',k' → logprob: -8.005878448486328
    6. ',l' → logprob: -8.630878448486328
    7. ',i' → logprob: -9.130878448486328
    8. '[j' → logprob: -9.380878448486328
    9. '           ' → logprob: -9.505878448486328
    10. '   ' → logprob: -9.755878448486328

Token 109: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9236809015274048
    2. ' j' → logprob: -1.0486809015274048
    3. ' i' → logprob: -2.5486807823181152
    4. 'i' → logprob: -2.5486807823181152
    5. ' l' → logprob: -3.0486807823181152
    6. 'l' → logprob: -3.2986807823181152
    7. ' n' → logprob: -5.048680782318115
    8. 'n' → logprob: -5.923680782318115
    9. ')' → logprob: -6.298680782318115
    10. '   ' → logprob: -8.923681259155273

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016636457294225693
    2. ' ,' → logprob: -4.766636371612549
    3. ',j' → logprob: -4.891636371612549
    4. '+' → logprob: -8.516636848449707
    5. ')' → logprob: -9.891636848449707
    6. ' +' → logprob: -10.266636848449707
    7. 'j' → logprob: -10.391636848449707
    8. '   ' → logprob: -10.516636848449707
    9. '+,' → logprob: -10.766636848449707
    10. '           ' → logprob: -10.891636848449707

Token 111: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.055155664682388306
    2. ' j' → logprob: -2.9301557540893555
    3. '   ' → logprob: -9.305155754089355
    4. '           ' → logprob: -9.930155754089355
    5. 'l' → logprob: -10.055155754089355
    6. ')' → logprob: -10.805155754089355
    7. '	j' → logprob: -11.180155754089355
    8. ' l' → logprob: -11.680155754089355
    9. ',j' → logprob: -11.930155754089355
    10. '    ' → logprob: -11.930155754089355

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01445658691227436
    2. ')
' → logprob: -4.639456748962402
    3. ',' → logprob: -5.514456748962402
    4. ' )' → logprob: -8.514456748962402
    5. '           ' → logprob: -8.639456748962402
    6. ',l' → logprob: -9.889456748962402
    7. '   ' → logprob: -10.139456748962402
    8. '       ' → logprob: -10.264456748962402
    9. ')
' → logprob: -10.389456748962402
    10. '               ' → logprob: -11.014456748962402

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003479785518720746
    2. '<|end|>' → logprob: -8.875348091125488
    3. '               ' → logprob: -9.125348091125488
    4. '            
' → logprob: -10.750348091125488
    5. '       ' → logprob: -11.125348091125488
    6. ')' → logprob: -11.375348091125488
    7. '                   ' → logprob: -11.750348091125488
    8. '<|end|>' → logprob: -11.875348091125488
    9. '          ' → logprob: -12.250348091125488
    10. ' ' → logprob: -12.250348091125488

Token 114: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10774853080511093
    2. ' ans' → logprob: -2.357748508453369
    3. 'ans' (adapté à ' ans') → logprob: -5.982748508453369
    4. '            
' → logprob: -6.607748508453369
    5. ' ' → logprob: -6.857748508453369
    6. '
' → logprob: -7.482748508453369
    7. ' 
' → logprob: -7.607748508453369
    8. '   ' → logprob: -7.982748508453369
    9. '	ans' → logprob: -8.232748985290527
    10. '       ' → logprob: -8.607748985290527

Token 115: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008728263899683952
    2. '+=' → logprob: -4.75872802734375
    3. '+' → logprob: -9.25872802734375
    4. ' +' → logprob: -12.25872802734375
    5. '<|end|>' → logprob: -12.88372802734375
    6. '    ' → logprob: -13.00872802734375
    7. ']+=' → logprob: -13.13372802734375
    8. ' ' → logprob: -13.25872802734375
    9. '	' → logprob: -14.00872802734375
    10. '+='' → logprob: -14.00872802734375

Token 116: ' add' (ID: 1147)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.08509799838066101
    2. '+' → logprob: -3.0850980281829834
    3. ' max' → logprob: -4.835097789764404
    4. ' count' → logprob: -4.835097789764404
    5. 'ans' → logprob: -4.960097789764404
    6. '(ans' → logprob: -5.585097789764404
    7. 'count' → logprob: -6.335097789764404
    8. ' ' → logprob: -6.585097789764404
    9. ' (' → logprob: -6.835097789764404
    10. '0' → logprob: -6.960097789764404

Token 117: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.007752607110887766
    2. '(' → logprob: -4.882752418518066
    3. 'ans' → logprob: -10.257752418518066
    4. ' (' → logprob: -10.382752418518066
    5. '	ans' → logprob: -10.507752418518066
    6. '(
' → logprob: -10.632752418518066
    7. '   ' → logprob: -11.257752418518066
    8. ' ans' → logprob: -13.132752418518066
    9. ' ' → logprob: -13.257752418518066
    10. ')' → logprob: -13.507752418518066

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032305095344781876
    2. '(count' → logprob: -4.4073052406311035
    3. ',count' → logprob: -4.5323052406311035
    4. '(' → logprob: -5.4073052406311035
    5. ' ,' → logprob: -6.1573052406311035
    6. ')' → logprob: -7.0323052406311035
    7. ' count' → logprob: -7.4073052406311035
    8. ' (' → logprob: -8.282304763793945
    9. 'count' → logprob: -9.032304763793945
    10. '(ans' → logprob: -9.657304763793945

Token 119: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.16028982400894165
    2. 'count' → logprob: -1.9102897644042969
    3. ' ' → logprob: -10.910289764404297
    4. '	count' → logprob: -11.285289764404297
    5. ')' → logprob: -11.410289764404297
    6. '(count' → logprob: -12.410289764404297
    7. ' counts' → logprob: -12.910289764404297
    8. '"' → logprob: -13.035289764404297
    9. '    ' → logprob: -13.160289764404297
    10. '   ' → logprob: -13.535289764404297

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005552354734390974
    2. ')
' → logprob: -5.255552291870117
    3. '   ' → logprob: -8.505552291870117
    4. '       ' → logprob: -9.505552291870117
    5. '           ' → logprob: -11.630552291870117
    6. ')return' → logprob: -11.755552291870117
    7. '+' → logprob: -11.880552291870117
    8. ' )' → logprob: -13.005552291870117
    9. ')

' → logprob: -13.005552291870117
    10. ')
' → logprob: -13.130552291870117

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09054279327392578
    2. '    
' → logprob: -2.715542793273926
    3. '       ' → logprob: -4.590542793273926
    4. '\n' → logprob: -5.215542793273926
    5. '(' → logprob: -7.090542793273926
    6. '
' → logprob: -7.090542793273926
    7. '  
' → logprob: -7.090542793273926
    8. 'return' → logprob: -7.965542793273926
    9. '        
' → logprob: -7.965542793273926
    10. '<|end|>' → logprob: -8.340542793273926

Token 122: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08375470340251923
    2. 'return' (adapté à ' return') → logprob: -2.833754777908325
    3. ' return' → logprob: -3.958754777908325
    4. '    
' → logprob: -7.083754539489746
    5. '	return' → logprob: -7.708754539489746
    6. '
' → logprob: -7.833754539489746
    7. ' ' → logprob: -7.958754539489746
    8. '       ' → logprob: -8.583754539489746
    9. '<|end|>' → logprob: -9.333754539489746
    10. '  
' → logprob: -10.333754539489746

Token 123: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0005650650127790868
    2. '(ans' → logprob: -8.125565528869629
    3. 'ans' → logprob: -8.250565528869629
    4. '	ans' → logprob: -11.875565528869629
    5. ' ' → logprob: -14.500565528869629
    6. '_ans' → logprob: -15.000565528869629
    7. ' an' → logprob: -17.750564575195312
    8. 'space' → logprob: -18.250564575195312
    9. ' ' → logprob: -18.875564575195312
    10. ' ast' → logprob: -18.875564575195312

Token 124: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08957377076148987
    2. '
' → logprob: -3.589573860168457
    3. '(' → logprob: -3.714573860168457
    4. '<|end|>' → logprob: -4.339573860168457
    5. '(
' → logprob: -5.339573860168457
    6. '\' → logprob: -5.464573860168457
    7. '_' → logprob: -5.714573860168457
    8. '[' → logprob: -6.214573860168457
    9. ' def' → logprob: -6.339573860168457
    10. '   ' → logprob: -7.089573860168457

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04323462396860123
    2. '_' → logprob: -3.9182345867156982
    3. '(' → logprob: -4.918234825134277
    4. '[' → logprob: -5.293234825134277
    5. '
' → logprob: -5.793234825134277
    6. '(
' → logprob: -5.918234825134277
    7. '\' → logprob: -6.293234825134277
    8. '#' → logprob: -7.793234825134277
    9. '   ' → logprob: -8.043234825134277
    10. '<|end|>' → logprob: -8.043234825134277

Token 126: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.04108557477593422
    2. ' generate' → logprob: -3.2910854816436768
    3. 'calculate' → logprob: -6.166085720062256
    4. 'count' → logprob: -7.416085720062256
    5. 'add' → logprob: -8.916085243225098
    6. ' calculate' → logprob: -9.291085243225098
    7. ' add' → logprob: -10.166085243225098
    8. ' count' → logprob: -10.666085243225098
    9. 'main' → logprob: -11.541085243225098
    10. 'is' → logprob: -11.791085243225098

Token 127: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -9.126521035796031e-05
    2. '_' → logprob: -9.500091552734375
    3. '_r' → logprob: -12.250091552734375
    4. '_ranges' → logprob: -12.250091552734375
    5. ''_' → logprob: -14.125091552734375
    6. ' _' → logprob: -14.125091552734375
    7. 'range' → logprob: -14.250091552734375
    8. '_list' → logprob: -14.375091552734375
    9. '```' → logprob: -14.750091552734375
    10. '_raw' → logprob: -15.000091552734375

Token 128: '(limit' (ID: 112473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5887455940246582
    2. '(n' → logprob: -0.8387455940246582
    3. '(length' → logprob: -5.338745594024658
    4. '(size' → logprob: -6.088745594024658
    5. '(start' → logprob: -6.213745594024658
    6. '(i' → logprob: -6.338745594024658
    7. '(len' → logprob: -7.338745594024658
    8. '(end' → logprob: -7.713745594024658
    9. '(range' → logprob: -7.838745594024658
    10. '(l' → logprob: -10.2137451171875

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06493920087814331
    2. '(limit' → logprob: -2.939939260482788
    3. '):
' → logprob: -4.689939022064209
    4. ')' → logprob: -7.814939022064209
    5. '(' → logprob: -8.064939498901367
    6. '(n' → logprob: -9.939939498901367
    7. ' ):' → logprob: -10.939939498901367
    8. '):
' → logprob: -12.314939498901367
    9. ':' → logprob: -12.314939498901367
    10. '(l' → logprob: -12.689939498901367

Token 130: '   ' (ID: 271)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7451885938644409
    2. ' return' → logprob: -1.495188593864441
    3. 'range' → logprob: -1.995188593864441
    4. 'return' → logprob: -2.4951887130737305
    5. '   ' → logprob: -2.4951887130737305
    6. '(range' → logprob: -8.99518871307373
    7. 'def' → logprob: -10.49518871307373
    8. ' for' → logprob: -11.12018871307373
    9. '```' → logprob: -11.37018871307373
    10. 'for' → logprob: -11.87018871307373

Token 131: ' return' (ID: 622)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05694360285997391
    2. 'return' (adapté à ' return') → logprob: -3.056943655014038
    3. ' range' → logprob: -4.806943416595459
    4. '   ' → logprob: -9.681943893432617
    5. ' return' → logprob: -9.681943893432617
    6. 'for' → logprob: -10.806943893432617
    7. '
' → logprob: -13.306943893432617
    8. '```' → logprob: -14.181943893432617
    9. '(range' → logprob: -14.681943893432617
    10. 'yield' → logprob: -15.181943893432617

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036023214925080538
    2. ' range' → logprob: -5.628602504730225
    3. '(range' → logprob: -13.503602027893066
    4. '	range' → logprob: -15.378602027893066
    5. 'list' → logprob: -15.753602027893066
    6. '   ' → logprob: -15.878602027893066
    7. 'iter' → logprob: -16.003602981567383
    8. ' ' → logprob: -16.753602981567383
    9. '`' → logprob: -17.253602981567383
    10. ' xrange' → logprob: -17.378602981567383

Token 133: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.005234832875430584
    2. '(' → logprob: -5.255234718322754
    3. 'limit' → logprob: -14.255234718322754
    4. '(

' → logprob: -16.63023567199707
    5. '((' → logprob: -16.88023567199707
    6. '(
' → logprob: -17.38023567199707
    7. '(`' → logprob: -17.63023567199707
    8. '(end' → logprob: -18.13023567199707
    9. '('' → logprob: -18.38023567199707
    10. ' (' → logprob: -18.50523567199707

Token 134: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ')
' → logprob: -12.250006675720215
    3. ')

' → logprob: -13.625006675720215
    4. ' )' → logprob: -15.250006675720215
    5. '+' → logprob: -16.7500057220459
    6. '),' → logprob: -17.0000057220459
    7. '<|end|>' → logprob: -17.0000057220459
    8. ')return' → logprob: -17.5000057220459
    9. '))' → logprob: -17.7500057220459
    10. ')`' → logprob: -18.2500057220459

Token 135: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02922096662223339
    2. '(' → logprob: -3.6542210578918457
    3. '(
' → logprob: -6.904221057891846
    4. '(n' → logprob: -7.404221057891846
    5. '(def' → logprob: -7.404221057891846
    6. '<|end|>' → logprob: -8.654220581054688
    7. ' def' → logprob: -8.779220581054688
    8. '```' → logprob: -9.279220581054688
    9. '
' → logprob: -9.529220581054688
    10. ')' → logprob: -10.779220581054688

Token 136: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.5232610106468201
    2. ' generate' → logprob: -0.8982610106468201
    3. '_generate' → logprob: -9.398261070251465
    4. '(generate' → logprob: -10.398261070251465
    5. 'def' → logprob: -12.023261070251465
    6. '_' → logprob: -12.523261070251465
    7. ' ' → logprob: -12.773261070251465
    8. '.generate' → logprob: -13.273261070251465
    9. ' ' → logprob: -13.523261070251465
    10. 'space' → logprob: -13.523261070251465

Token 137: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.0445127372804563e-05
    2. '_' → logprob: -12.62501049041748
    3. '_generate' → logprob: -13.00001049041748
    4. 'range' → logprob: -13.75001049041748
    5. 'def' → logprob: -14.00001049041748
    6. '_ranges' → logprob: -14.37501049041748
    7. ' _' → logprob: -14.50001049041748
    8. '_r' → logprob: -14.87501049041748
    9. '2' → logprob: -15.00001049041748
    10. '_generator' → logprob: -15.62501049041748

Token 138: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5570891499519348
    2. '(limit' → logprob: -1.68208909034729
    3. '2' → logprob: -2.05708909034729
    4. '(start' → logprob: -2.18208909034729
    5. '(lambda' → logprob: -8.682088851928711
    6. '(end' → logprob: -9.432088851928711
    7. '(n' → logprob: -10.057088851928711
    8. '(a' → logprob: -10.182088851928711
    9. ' (' → logprob: -10.307088851928711
    10. '(length' → logprob: -10.432088851928711

Token 139: '(start' (ID: 20008)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.46638962626457214
    2. '(start' → logprob: -1.5913896560668945
    3. '(' → logprob: -1.8413896560668945
    4. '(lambda' → logprob: -4.8413896560668945
    5. '(lower' → logprob: -7.3413896560668945
    6. '(from' → logprob: -7.4663896560668945
    7. '(range' → logprob: -7.8413896560668945
    8. '(i' → logprob: -8.341389656066895
    9. '(begin' → logprob: -8.966389656066895
    10. '(end' → logprob: -9.341389656066895

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.490809417096898e-05
    2. ' ,' → logprob: -10.125055313110352
    3. ',start' → logprob: -11.500055313110352
    4. ',
' → logprob: -13.875055313110352
    5. '‌,' → logprob: -14.250055313110352
    6. ',end' → logprob: -14.500055313110352
    7. ',

' → logprob: -14.875055313110352
    8. ')' → logprob: -15.125055313110352
    9. '(' → logprob: -15.375055313110352
    10. '(limit' → logprob: -15.500055313110352

Token 141: ' end' (ID: 1268)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.06162835657596588
    2. ' limit' → logprob: -3.5616283416748047
    3. 'end' → logprob: -3.8116283416748047
    4. ' end' → logprob: -5.061628341674805
    5. 'stop' → logprob: -5.936628341674805
    6. ' stop' → logprob: -8.186628341674805
    7. '(limit' → logprob: -12.811628341674805
    8. ' ' → logprob: -13.311628341674805
    9. '   ' → logprob: -13.436628341674805
    10. 'finish' → logprob: -14.436628341674805

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12700003385543823
    2. '):
' → logprob: -2.127000093460083
    3. ')' → logprob: -10.001999855041504
    4. '):
' → logprob: -11.251999855041504
    5. '):

' → logprob: -12.001999855041504
    6. '+' → logprob: -12.876999855041504
    7. ' ):' → logprob: -13.251999855041504
    8. '   ' → logprob: -13.501999855041504
    9. '=' → logprob: -15.001999855041504
    10. ' ' → logprob: -15.126999855041504

Token 143: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08876964449882507
    2. ' range' → logprob: -2.5887696743011475
    3. '   ' → logprob: -5.463769435882568
    4. 'return' → logprob: -5.588769435882568
    5. 'range' → logprob: -6.338769435882568
    6. '    ' → logprob: -10.088769912719727
    7. '	range' → logprob: -11.463769912719727
    8. '	return' → logprob: -11.713769912719727
    9. '(range' → logprob: -11.713769912719727
    10. ':return' → logprob: -12.213769912719727

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9835876226425171
    2. ' return' → logprob: -1.233587622642517
    3. 'range' → logprob: -1.483587622642517
    4. ' range' → logprob: -2.2335877418518066
    5. '   ' → logprob: -7.108587741851807
    6. '	range' → logprob: -13.858587265014648
    7. '	return' → logprob: -14.108587265014648
    8. ' ' → logprob: -14.858587265014648
    9. '(range' → logprob: -15.108587265014648
    10. ':return' → logprob: -15.483587265014648

Token 145: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931503415107727
    2. 'range' → logprob: -0.6931503415107727
    3. '	range' → logprob: -13.693150520324707
    4. '   ' → logprob: -13.818150520324707
    5. '(range' → logprob: -14.693150520324707
    6. ' xrange' → logprob: -15.943150520324707
    7. ' ' → logprob: -16.44314956665039
    8. ' ' → logprob: -17.06814956665039
    9. '```' → logprob: -17.31814956665039
    10. '.range' → logprob: -17.44314956665039

Token 146: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3875262141227722
    2. '(start' → logprob: -1.137526273727417
    3. '(end' → logprob: -7.387526035308838
    4. '(
' → logprob: -10.762526512145996
    5. 'start' → logprob: -12.137526512145996
    6. ' (' → logprob: -12.387526512145996
    7. '(s' → logprob: -13.637526512145996
    8. '<|end|>' → logprob: -14.262526512145996
    9. '(begin' → logprob: -14.637526512145996
    10. '(space' → logprob: -14.762526512145996

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03004840575158596
    2. ',end' → logprob: -3.530048370361328
    3. ' ,' → logprob: -8.155048370361328
    4. 'end' → logprob: -11.905048370361328
    5. '(end' → logprob: -13.280048370361328
    6. ')' → logprob: -14.530048370361328
    7. '),' → logprob: -15.530048370361328
    8. ':end' → logprob: -15.780048370361328
    9. '[end' → logprob: -16.030048370361328
    10. ',int' → logprob: -16.030048370361328

Token 148: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10020710527896881
    2. ' end' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.850207328796387
    4. '(end' → logprob: -16.47520637512207
    5. '	end' → logprob: -16.60020637512207
    6. '   ' → logprob: -16.97520637512207
    7. ')' → logprob: -17.10020637512207
    8. ' ' → logprob: -17.97520637512207
    9. '[end' → logprob: -17.97520637512207
    10. ',end' → logprob: -18.10020637512207

Token 149: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. ')

' → logprob: -16.750001907348633
    5. ' )' → logprob: -17.625001907348633
    6. '))' → logprob: -18.000001907348633
    7. '}' → logprob: -18.000001907348633
    8. ')return' → logprob: -18.375001907348633
    9. '),' → logprob: -18.750001907348633
    10. ')#' → logprob: -18.875001907348633

Token 150: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006934931734576821
    2. ' def' → logprob: -7.875693321228027
    3. '<|end|>' → logprob: -8.625693321228027
    4. '[' → logprob: -9.750693321228027
    5. '(' → logprob: -11.000693321228027
    6. ' ' → logprob: -11.250693321228027
    7. '\' → logprob: -12.000693321228027
    8. '   ' → logprob: -12.000693321228027
    9. ')' → logprob: -12.000693321228027
    10. ' 
' → logprob: -12.250693321228027

Token 151: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6516019105911255
    2. ' calculate' → logprob: -1.4016019105911255
    3. ' add' → logprob: -1.7766019105911255
    4. ' sort' → logprob: -2.901601791381836
    5. ' find' → logprob: -6.401601791381836
    6. ' def' → logprob: -6.901601791381836
    7. ' main' → logprob: -7.026601791381836
    8. ' get' → logprob: -7.151601791381836
    9. 'count' → logprob: -7.276601791381836
    10. ' validate' → logprob: -7.901601791381836

Token 152: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -5.085517113911919e-05
    2. '_' → logprob: -10.00005054473877
    3. '_invalid' → logprob: -12.87505054473877
    4. '_val' → logprob: -13.62505054473877
    5. '_VALID' → logprob: -15.25005054473877
    6. '_possible' → logprob: -15.37505054473877
    7. ' _' → logprob: -15.87505054473877
    8. '_final' → logprob: -16.250051498413086
    9. '_count' → logprob: -16.625051498413086
    10. '_value' → logprob: -16.625051498413086

Token 153: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00030948311905376613
    2. '_valid' → logprob: -9.000309944152832
    3. '_' → logprob: -9.750309944152832
    4. '_tokens' → logprob: -9.750309944152832
    5. '_token' → logprob: -10.500309944152832
    6. '```' → logprob: -11.750309944152832
    7. '_count' → logprob: -12.625309944152832
    8. '_range' → logprob: -12.750309944152832
    9. '_suffix' → logprob: -12.875309944152832
    10. '_ke' → logprob: -13.125309944152832

Token 154: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00596624193713069
    2. '(' → logprob: -5.1309661865234375
    3. '(L' → logprob: -11.255966186523438
    4. '(s' → logprob: -12.005966186523438
    5. ' (' → logprob: -12.380966186523438
    6. '_range' → logprob: -12.755966186523438
    7. '_list' → logprob: -12.880966186523438
    8. '(n' → logprob: -13.755966186523438
    9. '(lst' → logprob: -13.755966186523438
    10. 'def' → logprob: -13.880966186523438

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003078142472077161
    2. ' ,' → logprob: -8.1253080368042
    3. ',l' → logprob: -12.5003080368042
    4. ')' → logprob: -12.6253080368042
    5. ',k' → logprob: -14.0003080368042
    6. '):' → logprob: -14.1253080368042
    7. ',n' → logprob: -14.5003080368042
    8. ',
' → logprob: -14.6253080368042
    9. '‌,' → logprob: -15.1253080368042
    10. '_,' → logprob: -15.3753080368042

Token 156: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0716891661286354
    2. 'i' → logprob: -3.5716891288757324
    3. ' j' → logprob: -3.6966891288757324
    4. ')' → logprob: -4.321689128875732
    5. ' i' → logprob: -6.696689128875732
    6. '   ' → logprob: -7.571689128875732
    7. '<|end|>' → logprob: -7.571689128875732
    8. 'l' → logprob: -8.94668960571289
    9. '<|end|>' → logprob: -9.07168960571289
    10. '):
' → logprob: -9.44668960571289

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04162509739398956
    2. '+' → logprob: -3.2916250228881836
    3. ',j' → logprob: -6.166625022888184
    4. ' ,' → logprob: -7.041625022888184
    5. ' +' → logprob: -8.416625022888184
    6. '):' → logprob: -9.416625022888184
    7. ',k' → logprob: -9.416625022888184
    8. ')' → logprob: -9.541625022888184
    9. '+,' → logprob: -10.041625022888184
    10. '   ' → logprob: -10.291625022888184

Token 158: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0017307489179074764
    2. ' j' → logprob: -6.376730918884277
    3. '<|end|>' → logprob: -12.001730918884277
    4. 'i' → logprob: -12.126730918884277
    5. '1' → logprob: -12.501730918884277
    6. ')' → logprob: -13.001730918884277
    7. '   ' → logprob: -13.501730918884277
    8. '0' → logprob: -13.626730918884277
    9. ' ' → logprob: -13.626730918884277
    10. '_j' → logprob: -13.876730918884277

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01823434978723526
    2. '):
' → logprob: -4.0182342529296875
    3. ')' → logprob: -10.143234252929688
    4. ' ):' → logprob: -10.393234252929688
    5. '):
' → logprob: -12.393234252929688
    6. '):

' → logprob: -12.643234252929688
    7. '   ' → logprob: -12.643234252929688
    8. ':' → logprob: -14.143234252929688
    9. ',' → logprob: -14.268234252929688
    10. 'def' → logprob: -14.643234252929688

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.450560599565506
    2. 'k' → logprob: -1.5755605697631836
    3. ' k' → logprob: -2.3255605697631836
    4. 'l' → logprob: -4.450560569763184
    5. ' return' → logprob: -4.950560569763184
    6. ' bis' → logprob: -5.075560569763184
    7. 'bis' → logprob: -5.200560569763184
    8. 'n' → logprob: -5.450560569763184
    9. ' l' → logprob: -5.825560569763184
    10. 'return' → logprob: -6.075560569763184

Token 161: ' target' (ID: 3783)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6922845840454102
    2. 'target' (adapté à ' target') → logprob: -2.19228458404541
    3. '   ' → logprob: -2.69228458404541
    4. 'l' → logprob: -2.69228458404541
    5. 'left' → logprob: -3.06728458404541
    6. ' k' → logprob: -3.44228458404541
    7. ' target' → logprob: -4.06728458404541
    8. 'x' → logprob: -4.06728458404541
    9. 'mid' → logprob: -4.06728458404541
    10. 'r' → logprob: -4.44228458404541

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38719725608825684
    2. ' =' → logprob: -1.1371972560882568
    3. '_val' → logprob: -9.512197494506836
    4. '_value' → logprob: -9.637197494506836
    5. ')' → logprob: -9.762197494506836
    6. '_' → logprob: -10.012197494506836
    7. '   ' → logprob: -10.637197494506836
    8. ',' → logprob: -12.012197494506836
    9. ' =
' → logprob: -12.012197494506836
    10. ' ' → logprob: -12.262197494506836

Token 163: ' sum' (ID: 4215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.017311181873083115
    2. ' l' → logprob: -4.642311096191406
    3. 'bis' → logprob: -5.017311096191406
    4. ' bis' → logprob: -7.892311096191406
    5. '	l' → logprob: -8.017311096191406
    6. '-l' → logprob: -10.954811096191406
    7. ' ' → logprob: -11.017311096191406
    8. '   ' → logprob: -11.204811096191406
    9. 'j' → logprob: -11.329811096191406
    10. '(l' → logprob: -11.392311096191406

Token 164: '_elements' (ID: 53344)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0013585673877969384
    2. '(' → logprob: -7.501358509063721
    3. '([' → logprob: -7.626358509063721
    4. '(
' → logprob: -8.626358985900879
    5. 'l' → logprob: -9.501358985900879
    6. '	l' → logprob: -11.501358985900879
    7. '[l' → logprob: -11.501358985900879
    8. '=l' → logprob: -11.876358985900879
    9. '(i' → logprob: -12.126358985900879
    10. '_l' → logprob: -12.126358985900879

Token 165: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0004984631086699665
    2. '(' → logprob: -7.750498294830322
    3. ' (' → logprob: -10.25049877166748
    4. '[l' → logprob: -10.87549877166748
    5. '(
' → logprob: -12.50049877166748
    6. '([' → logprob: -13.25049877166748
    7. 'l' → logprob: -13.75049877166748
    8. ')' → logprob: -14.12549877166748
    9. '(i' → logprob: -14.12549877166748
    10. '+l' → logprob: -14.25049877166748

Token 166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3851314187049866
    2. ',' → logprob: -1.2601313591003418
    3. '[' → logprob: -3.885131359100342
    4. ' ,' → logprob: -5.510131359100342
    5. '(i' → logprob: -5.635131359100342
    6. '[j' → logprob: -5.760131359100342
    7. ',i' → logprob: -6.135131359100342
    8. ')' → logprob: -6.510131359100342
    9. '   ' → logprob: -8.1351318359375
    10. ' [' → logprob: -8.2601318359375

Token 167: '],' (ID: 2155)
  Prédit: ':j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.08010386675596237
    2. '+' → logprob: -3.205103874206543
    3. ':' → logprob: -3.580103874206543
    4. 'j' → logprob: -5.455103874206543
    5. ' +' → logprob: -6.955103874206543
    6. ' :' → logprob: -7.455103874206543
    7. ':i' → logprob: -7.455103874206543
    8. ']' → logprob: -7.455103874206543
    9. ']+' → logprob: -7.580103874206543
    10. '[j' → logprob: -8.330103874206543

Token 168: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1428043395280838
    2. ' l' → logprob: -2.0178043842315674
    3. '	l' → logprob: -10.267804145812988
    4. '   ' → logprob: -10.892804145812988
    5. ' ' → logprob: -11.267804145812988
    6. ' ' → logprob: -11.392804145812988
    7. ')' → logprob: -11.642804145812988
    8. ',' → logprob: -11.767804145812988
    9. '    ' → logprob: -12.142804145812988
    10. '  ' → logprob: -12.642804145812988

Token 169: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00019591135787777603
    2. '[i' → logprob: -9.500195503234863
    3. 'j' → logprob: -9.750195503234863
    4. '[' → logprob: -10.000195503234863
    5. '[
' → logprob: -12.125195503234863
    6. ' [' → logprob: -12.875195503234863
    7. ']' → logprob: -13.500195503234863
    8. '[l' → logprob: -13.500195503234863
    9. '[k' → logprob: -13.625195503234863
    10. '],' → logprob: -13.875195503234863

Token 170: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23363469541072845
    2. '])' → logprob: -2.1086347103118896
    3. ',' → logprob: -2.9836347103118896
    4. '))' → logprob: -3.6086347103118896
    5. '),' → logprob: -5.3586344718933105
    6. ' )' → logprob: -6.7336344718933105
    7. '})' → logprob: -7.3586344718933105
    8. ')+' → logprob: -7.9836344718933105
    9. '[' → logprob: -8.108634948730469
    10. ']' → logprob: -8.233634948730469

Token 171: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9950355887413025
    2. '+' → logprob: -1.2450356483459473
    3. ' ' → logprob: -1.8700356483459473
    4. ',' → logprob: -2.8700356483459473
    5. '+l' → logprob: -2.9950356483459473
    6. ' l' → logprob: -4.245035648345947
    7. ')' → logprob: -4.245035648345947
    8. '   ' → logprob: -4.745035648345947
    9. '<|end|>' → logprob: -4.870035648345947
    10. '    ' → logprob: -4.995035648345947

Token 172: ' valid' (ID: 4529)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02695602923631668
    2. 'left' → logprob: -4.151956081390381
    3. 'return' → logprob: -5.526956081390381
    4. 'idx' → logprob: -5.901956081390381
    5. 'pos' → logprob: -6.526956081390381
    6. ' k' → logprob: -7.526956081390381
    7. 'index' → logprob: -7.651956081390381
    8. ' return' → logprob: -7.901956081390381
    9. 'def' → logprob: -8.276955604553223
    10. 'l' → logprob: -8.651955604553223

Token 173: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.008646479807794094
    2. '_index' → logprob: -5.758646488189697
    3. '_range' → logprob: -6.383646488189697
    4. '_indices' → logprob: -6.508646488189697
    5. '_count' → logprob: -6.633646488189697
    6. '_idx' → logprob: -8.008646011352539
    7. '=' → logprob: -8.758646011352539
    8. 'k' → logprob: -9.258646011352539
    9. ' =' → logprob: -9.258646011352539
    10. '_start' → logprob: -10.133646011352539

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2594573497772217
    2. '=' → logprob: -1.5094573497772217
    3. '_index' → logprob: -5.134457588195801
    4. '_idx' → logprob: -6.759457588195801
    5. 's' → logprob: -9.0094575881958
    6. '>' → logprob: -9.5094575881958
    7. '_count' → logprob: -9.6344575881958
    8. '_' → logprob: -10.0094575881958
    9. '_indices' → logprob: -10.1344575881958
    10. 'index' → logprob: -11.0094575881958

Token 175: ' find' (ID: 1646)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.16037847101688385
    2. ' bis' → logprob: -1.9103784561157227
    3. 'len' → logprob: -10.035378456115723
    4. '   ' → logprob: -10.410378456115723
    5. 'j' → logprob: -10.660378456115723
    6. 'b' → logprob: -11.035378456115723
    7. ' len' → logprob: -11.660378456115723
    8. 'binary' → logprob: -12.160378456115723
    9. '	b' → logprob: -12.285378456115723
    10. ' j' → logprob: -12.285378456115723

Token 176: '_b' (ID: 1535)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.7210528254508972
    2. '_valid' → logprob: -1.596052885055542
    3. '_position' → logprob: -1.846052885055542
    4. '_insert' → logprob: -2.971052885055542
    5. '_right' → logprob: -3.221052885055542
    6. '_in' → logprob: -4.221052646636963
    7. '_upper' → logprob: -4.596052646636963
    8. '_bound' → logprob: -4.846052646636963
    9. '_k' → logprob: -5.096052646636963
    10. '_pos' → logprob: -5.346052646636963

Token 177: 'is' (ID: 276)
  Prédit: 'ound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ound' → logprob: -0.6925129294395447
    2. 'is' → logprob: -0.9425129294395447
    3. 'insert' → logprob: -2.6925129890441895
    4. 'reak' → logprob: -4.6925129890441895
    5. 'valid' → logprob: -5.5675129890441895
    6. 'in' → logprob: -5.9425129890441895
    7. '_insert' → logprob: -5.9425129890441895
    8. 'ounds' → logprob: -6.0675129890441895
    9. '(target' → logprob: -6.1925129890441895
    10. 'index' → logprob: -6.1925129890441895

Token 178: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.4849443838757e-06
    2. '_left' → logprob: -13.500004768371582
    3. 'ector' → logprob: -14.125004768371582
    4. '```' → logprob: -14.375004768371582
    5. 'ected' → logprob: -14.500004768371582
    6. 'e' → logprob: -15.250004768371582
    7. '_' → logprob: -16.125003814697266
    8. '[' → logprob: -16.250003814697266
    9. 'ection' → logprob: -16.250003814697266
    10. '
' → logprob: -16.375003814697266

Token 179: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.251975417137146
    2. '_right' → logprob: -1.501975417137146
    3. '_' → logprob: -10.376975059509277
    4. '_l' → logprob: -12.001975059509277
    5. '_index' → logprob: -13.001975059509277
    6. 'l' → logprob: -13.126975059509277
    7. '_target' → logprob: -13.751975059509277
    8. '_position' → logprob: -14.626975059509277
    9. '_next' → logprob: -14.751975059509277
    10. '_key' → logprob: -14.876975059509277

Token 180: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005256305448710918
    2. '(' → logprob: -7.87552547454834
    3. ' (' → logprob: -9.00052547454834
    4. '(
' → logprob: -11.37552547454834
    5. '(s' → logprob: -11.62552547454834
    6. '(L' → logprob: -15.50052547454834
    7. '(len' → logprob: -15.75052547454834
    8. ' ' → logprob: -15.87552547454834
    9. '(lst' → logprob: -15.87552547454834
    10. ',l' → logprob: -16.125526428222656

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023382442072033882
    2. ',target' → logprob: -3.8983824253082275
    3. '(target' → logprob: -6.273382663726807
    4. '(' → logprob: -7.773382663726807
    5. ' ,' → logprob: -7.898382663726807
    6. 'target' → logprob: -10.273382186889648
    7. ',l' → logprob: -10.523382186889648
    8. ',
' → logprob: -10.898382186889648
    9. '   ' → logprob: -11.523382186889648
    10. '),' → logprob: -12.023382186889648

Token 182: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.04392313212156296
    2. ' target' → logprob: -3.5439231395721436
    3. 'l' → logprob: -4.4189229011535645
    4. ' l' → logprob: -7.4189229011535645
    5. ',target' → logprob: -7.4189229011535645
    6. ',' → logprob: -8.293923377990723
    7. ')' → logprob: -8.668923377990723
    8. '   ' → logprob: -8.918923377990723
    9. '[target' → logprob: -9.418923377990723
    10. '	target' → logprob: -9.543923377990723

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006325370632112026
    2. ')
' → logprob: -5.1313252449035645
    3. ' )' → logprob: -8.131325721740723
    4. '   ' → logprob: -10.381325721740723
    5. ',' → logprob: -11.006325721740723
    6. ')
' → logprob: -11.506325721740723
    7. ' )
' → logprob: -11.756325721740723
    8. ')+' → logprob: -12.131325721740723
    9. '))' → logprob: -12.256325721740723
    10. ')

' → logprob: -12.256325721740723

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46605023741722107
    2. ' -' → logprob: -1.7160502672195435
    3. ' +' → logprob: -2.466050148010254
    4. '+' → logprob: -3.466050148010254
    5. '-' → logprob: -3.716050148010254
    6. '<|end|>' → logprob: -3.841050148010254
    7. ')' → logprob: -4.716050148010254
    8. 'def' → logprob: -5.341050148010254
    9. '    ' → logprob: -5.841050148010254
    10. '    
' → logprob: -5.966050148010254

Token 185: ' diff' (ID: 8868)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18140293657779694
    2. ')' → logprob: -2.3064029216766357
    3. '-' → logprob: -3.6814029216766357
    4. '(' → logprob: -3.6814029216766357
    5. '<|end|>' → logprob: -5.806403160095215
    6. ' ' → logprob: -6.306403160095215
    7. '(n' → logprob: -6.556403160095215
    8. ' return' → logprob: -6.931403160095215
    9. '(i' → logprob: -7.056403160095215
    10. '   ' → logprob: -7.056403160095215

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016667528077960014
    2. '=' → logprob: -4.141667366027832
    3. 'er' → logprob: -7.391667366027832
    4. '_' → logprob: -12.141667366027832
    5. ' ' → logprob: -12.891667366027832
    6. '	' → logprob: -13.516667366027832
    7. 'ere' → logprob: -14.016667366027832
    8. ')' → logprob: -14.016667366027832
    9. '=_' → logprob: -14.141667366027832
    10. 's' → logprob: -14.641667366027832

Token 187: ' subtract' (ID: 71973)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.3133775293827057
    2. 'valid' → logprob: -1.3133774995803833
    3. '(valid' → logprob: -9.563377380371094
    4. ' max' → logprob: -11.063377380371094
    5. '	valid' → logprob: -11.438377380371094
    6. 'max' → logprob: -11.563377380371094
    7. '_valid' → logprob: -12.438377380371094
    8. ' ' → logprob: -12.938377380371094
    9. 'j' → logprob: -13.938377380371094
    10. ' j' → logprob: -14.063377380371094

Token 188: '(valid' (ID: 76588)
  Prédit: '(valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(valid' → logprob: -0.001098895794712007
    2. '(' → logprob: -6.876099109649658
    3. 'valid' → logprob: -9.8760986328125
    4. '(l' → logprob: -12.1260986328125
    5. ' (' → logprob: -12.3760986328125
    6. ' valid' → logprob: -12.7510986328125
    7. ' ' → logprob: -14.5010986328125
    8. '	valid' → logprob: -14.6260986328125
    9. '((' → logprob: -15.0010986328125
    10. '(len' → logprob: -15.5010986328125

Token 189: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -6.704273118884885e-07
    2. '_valid' → logprob: -14.500000953674316
    3. 'valid' → logprob: -17.0
    4. '_' → logprob: -17.75
    5. 'k' → logprob: -18.0
    6. '_i' → logprob: -18.75
    7. '```' → logprob: -19.125
    8. '
' → logprob: -19.25
    9. '_x' → logprob: -19.75
    10. '[k' → logprob: -19.875

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056578800082206726
    2. ' ,' → logprob: -3.5565788745880127
    3. ',j' → logprob: -3.6815788745880127
    4. 'j' → logprob: -7.556578636169434
    5. ' j' → logprob: -8.306578636169434
    6. '   ' → logprob: -8.306578636169434
    7. ' ' → logprob: -9.431578636169434
    8. '`,' → logprob: -10.431578636169434
    9. '	j' → logprob: -10.806578636169434
    10. ',len' → logprob: -10.931578636169434

Token 191: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14320285618305206
    2. 'j' → logprob: -2.018202781677246
    3. ')' → logprob: -7.893202781677246
    4. '1' → logprob: -9.768202781677246
    5. '	j' → logprob: -10.518202781677246
    6. ' ' → logprob: -11.268202781677246
    7. '    ' → logprob: -11.893202781677246
    8. ',' → logprob: -12.143202781677246
    9. 'k' → logprob: -12.143202781677246
    10. ' k' → logprob: -12.268202781677246

Token 192: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00814654678106308
    2. '   ' → logprob: -5.8831467628479
    3. '+' → logprob: -6.7581467628479
    4. ' )' → logprob: -6.7581467628479
    5. '1' → logprob: -7.0081467628479
    6. ' ' → logprob: -7.1331467628479
    7. ' -' → logprob: -7.2581467628479
    8. ' +' → logprob: -8.508146286010742
    9. ')
' → logprob: -9.133146286010742
    10. '-' → logprob: -9.633146286010742

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -10.00004768371582
    3. ')' → logprob: -13.50004768371582
    4. '```' → logprob: -15.87504768371582
    5. '<|end|>' → logprob: -16.00004768371582
    6. '
' → logprob: -16.75004768371582
    7. ' )' → logprob: -17.93754768371582
    8. ',' → logprob: -18.06254768371582
    9. '   ' → logprob: -18.31254768371582
    10. '[' → logprob: -18.43754768371582

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.4192871175473556e-05
    2. ')
' → logprob: -9.875054359436035
    3. ' )' → logprob: -13.625054359436035
    4. ')return' → logprob: -14.375054359436035
    5. ')

' → logprob: -15.000054359436035
    6. '   ' → logprob: -15.500054359436035
    7. '))' → logprob: -16.12505340576172
    8. ')`' → logprob: -16.12505340576172
    9. 'def' → logprob: -16.87505340576172
    10. ')**' → logprob: -17.12505340576172

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027667438611388206
    2. ' return' → logprob: -4.02766752243042
    3. 'return' → logprob: -4.77766752243042
    4. '	return' → logprob: -7.77766752243042
    5. '    
' → logprob: -8.527667045593262
    6. '  
' → logprob: -9.027667045593262
    7. '
' → logprob: -9.027667045593262
    8. '<|end|>' → logprob: -9.402667045593262
    9. '```' → logprob: -10.027667045593262
    10. ' ' → logprob: -10.902667045593262

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4675622284412384
    2. '   ' → logprob: -1.092562198638916
    3. ' return' → logprob: -3.342562198638916
    4. 'if' → logprob: -6.092562198638916
    5. ' if' → logprob: -8.467562675476074
    6. '
' → logprob: -9.592562675476074
    7. 'result' → logprob: -9.842562675476074
    8. '	return' → logprob: -10.217562675476074
    9. 'max' → logprob: -10.342562675476074
    10. 'def' → logprob: -10.467562675476074

Token 197: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2561523914337158
    2. ' diff' → logprob: -1.6311523914337158
    3. 'max' → logprob: -4.131152153015137
    4. ' max' → logprob: -4.256152153015137
    5. '	diff' → logprob: -11.381152153015137
    6. '0' → logprob: -11.756152153015137
    7. ' ' → logprob: -12.631152153015137
    8. '(diff' → logprob: -13.131152153015137
    9. ' ' → logprob: -13.131152153015137
    10. 'abs' → logprob: -13.631152153015137

Token 198: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.309382373117842e-05
    2. 'd' → logprob: -11.000033378601074
    3. '<|end|>' → logprob: -12.500033378601074
    4. '[' → logprob: -12.625033378601074
    5. ' def' → logprob: -13.000033378601074
    6. 'a' → logprob: -13.250033378601074
    7. '+' → logprob: -13.375033378601074
    8. ')' → logprob: -13.750033378601074
    9. '(' → logprob: -14.625033378601074
    10. '```' → logprob: -15.500033378601074

Token 200: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1446382701396942
    2. ' sum' → logprob: -2.0196382999420166
    3. 'add' → logprob: -6.8946380615234375
    4. ' add' → logprob: -7.5196380615234375
    5. 'subtract' → logprob: -8.144638061523438
    6. 'sub' → logprob: -10.519638061523438
    7. ' ' → logprob: -11.019638061523438
    8. 'multiply' → logprob: -11.769638061523438
    9. ' subtract' → logprob: -11.894638061523438
    10. 'def' → logprob: -12.144638061523438

Token 201: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -6.229872087715194e-05
    2. '_' → logprob: -9.750061988830566
    3. '(_' → logprob: -13.500061988830566
    4. '_(' → logprob: -14.125061988830566
    5. '(' → logprob: -14.125061988830566
    6. '_tokens' → logprob: -15.250061988830566
    7. '_element' → logprob: -15.500061988830566
    8. '_items' → logprob: -15.875061988830566
    9. ' _' → logprob: -16.250062942504883
    10. '_e' → logprob: -16.250062942504883

Token 202: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.23298661410808563
    2. '(l' → logprob: -1.732986569404602
    3. '(' → logprob: -3.4829866886138916
    4. '(x' → logprob: -8.232986450195312
    5. '(i' → logprob: -9.732986450195312
    6. '(lhs' → logprob: -11.357986450195312
    7. '(left' → logprob: -11.732986450195312
    8. ' (' → logprob: -12.607986450195312
    9. '(u' → logprob: -12.607986450195312
    10. '(s' → logprob: -12.982986450195312

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. ' ,' → logprob: -10.875024795532227
    3. ',a' → logprob: -12.500024795532227
    4. ',b' → logprob: -13.500024795532227
    5. 'a' → logprob: -14.625024795532227
    6. '‌,' → logprob: -17.250024795532227
    7. ',
' → logprob: -17.625024795532227
    8. ')' → logprob: -18.625024795532227
    9. '<|end|>' → logprob: -18.875024795532227
    10. 'b' → logprob: -18.875024795532227

Token 204: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2519300878047943
    2. 'b' → logprob: -1.5019301176071167
    3. ' ' → logprob: -14.126930236816406
    4. ' ' → logprob: -15.876930236816406
    5. ',b' → logprob: -17.001930236816406
    6. '<|end|>' → logprob: -17.126930236816406
    7. 'a' → logprob: -17.251930236816406
    8. ',' → logprob: -17.751930236816406
    9. ' a' → logprob: -18.001930236816406
    10. ')b' → logprob: -18.001930236816406

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010488852858543396
    2. '):
' → logprob: -6.876049041748047
    3. ')' → logprob: -11.376049041748047
    4. 'a' → logprob: -13.376049041748047
    5. ',' → logprob: -13.501049041748047
    6. ':' → logprob: -14.376049041748047
    7. ' ):' → logprob: -14.626049041748047
    8. '):
' → logprob: -14.876049041748047
    9. '):

' → logprob: -16.501049041748047
    10. '   ' → logprob: -16.626049041748047

Token 206: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20436698198318481
    2. 'return' → logprob: -1.95436692237854
    3. 'a' → logprob: -3.95436692237854
    4. ' a' → logprob: -4.204367160797119
    5. '   ' → logprob: -4.704367160797119
    6. '    ' → logprob: -11.454366683959961
    7. ' ' → logprob: -11.954366683959961
    8. '	return' → logprob: -12.204366683959961
    9. '    
' → logprob: -13.454366683959961
    10. ' ' → logprob: -14.079366683959961

Token 207: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17781105637550354
    2. ' return' → logprob: -2.6778111457824707
    3. 'return' (adapté à ' return') → logprob: -2.6778111457824707
    4. ' a' → logprob: -3.6778111457824707
    5. '   ' → logprob: -8.552810668945312
    6. ' ' → logprob: -14.302810668945312
    7. '	return' → logprob: -14.927810668945312
    8. '    ' → logprob: -15.802810668945312
    9. '	a' → logprob: -15.802810668945312
    10. ' ' → logprob: -16.802810668945312

Token 208: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01416350994259119
    2. ' a' → logprob: -4.264163494110107
    3. '	a' → logprob: -17.639163970947266
    4. ' ' → logprob: -18.514163970947266
    5. ' ' → logprob: -19.389163970947266
    6. '   ' → logprob: -19.514163970947266
    7. '(a' → logprob: -20.014163970947266
    8. '_a' → logprob: -20.264163970947266
    9. ''a' → logprob: -21.639163970947266
    10. '  ' → logprob: -21.764163970947266

Token 209: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868824541568756
    2. '+' → logprob: -1.1368824243545532
    3. '+b' → logprob: -12.011882781982422
    4. ' ' → logprob: -12.511882781982422
    5. ' ' → logprob: -13.761882781982422
    6. ' +
' → logprob: -15.511882781982422
    7. ' plus' → logprob: -15.636882781982422
    8. '+
' → logprob: -16.136882781982422
    9. '+B' → logprob: -16.761882781982422
    10. '+a' → logprob: -18.011882781982422

Token 210: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326186656951904
    2. ' b' → logprob: -1.313261866569519
    3. ' ' → logprob: -15.938261985778809
    4. ' ' → logprob: -18.438261032104492
    5. '	b' → logprob: -18.813261032104492
    6. '<|end|>' → logprob: -19.313261032104492
    7. ' б' → logprob: -19.563261032104492
    8. ' 
' → logprob: -19.688261032104492
    9. ')b' → logprob: -20.063261032104492
    10. '(b' → logprob: -20.813261032104492

Token 211: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024602625519037247
    2. '<|end|>' → logprob: -3.8996026515960693
    3. ' def' → logprob: -6.77460241317749
    4. '(' → logprob: -6.89960241317749
    5. '```' → logprob: -7.77460241317749
    6. ')' → logprob: -7.89960241317749
    7. '\' → logprob: -8.024602890014648
    8. '+' → logprob: -9.024602890014648
    9. ' 

' → logprob: -9.524602890014648
    10. '<|end|>' → logprob: -9.649602890014648

Token 212: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.438573680294212e-06
    2. ' def' → logprob: -12.375005722045898
    3. 'from' → logprob: -14.125005722045898
    4. '```' → logprob: -14.750005722045898
    5. '	def' → logprob: -19.0000057220459
    6. '1' → logprob: -19.2500057220459
    7. '2' → logprob: -19.6250057220459
    8. '0' → logprob: -19.7500057220459
    9. '-def' → logprob: -20.2500057220459
    10. '7' → logprob: -20.2500057220459

Token 213: ' find' (ID: 1646)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.17020684480667114
    2. 'add' → logprob: -2.6702067852020264
    3. ' subtract' → logprob: -2.7952067852020264
    4. 'subtract' → logprob: -3.7952067852020264
    5. ' def' → logprob: -6.6702070236206055
    6. 'sub' → logprob: -7.0452070236206055
    7. ' find' → logprob: -7.2952070236206055
    8. 'def' → logprob: -7.9202070236206055
    9. ' sub' → logprob: -8.295207023620605
    10. ' sort' → logprob: -10.045207023620605

Token 214: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006507771089673042
    2. '_' → logprob: -5.131507873535156
    3. '_s' → logprob: -9.256507873535156
    4. '_left' → logprob: -9.381507873535156
    5. ' _' → logprob: -9.756507873535156
    6. '```' → logprob: -10.506507873535156
    7. '_a' → logprob: -11.006507873535156
    8. '_bas' → logprob: -11.006507873535156
    9. '_under' → logprob: -11.006507873535156
    10. ''_' → logprob: -11.131507873535156

Token 215: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00032044618274085224
    2. 'sect' → logprob: -8.250320434570312
    3. 'bis' → logprob: -10.625320434570312
    4. '_' → logprob: -11.125320434570312
    5. '```' → logprob: -11.750320434570312
    6. 'ise' → logprob: -13.000320434570312
    7. 'i' → logprob: -13.500320434570312
    8. 'iset' → logprob: -13.500320434570312
    9. 'ис' → logprob: -14.000320434570312
    10. '**' → logprob: -14.000320434570312

Token 216: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.872261317563243e-05
    2. 'sect' → logprob: -9.750059127807617
    3. 'ct' → logprob: -15.125059127807617
    4. 'ec' → logprob: -17.000059127807617
    5. 'ected' → logprob: -17.500059127807617
    6. 'ects' → logprob: -18.125059127807617
    7. 'e' → logprob: -18.250059127807617
    8. 'ject' → logprob: -18.625059127807617
    9. '```' → logprob: -18.625059127807617
    10. 'ecta' → logprob: -19.000059127807617

Token 217: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -11.500011444091797
    3. '_le' → logprob: -14.375011444091797
    4. '_lower' → logprob: -15.500011444091797
    5. '_right' → logprob: -15.750011444091797
    6. '_l' → logprob: -15.875011444091797
    7. '_LEFT' → logprob: -16.000011444091797
    8. 'left' → logprob: -16.375011444091797
    9. '_low' → logprob: -16.375011444091797
    10. ' _' → logprob: -16.500011444091797

Token 218: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.523678183555603
    2. '(l' → logprob: -0.898678183555603
    3. '(
' → logprob: -9.148677825927734
    4. ' (' → logprob: -9.148677825927734
    5. '(ls' → logprob: -9.523677825927734
    6. '(a' → logprob: -9.773677825927734
    7. '(lst' → logprob: -9.773677825927734
    8. '<|end|>' → logprob: -10.273677825927734
    9. '(ll' → logprob: -10.523677825927734
    10. '(b' → logprob: -10.648677825927734

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026545509696006775
    2. ',l' → logprob: -3.651545524597168
    3. '<|end|>' → logprob: -9.276545524597168
    4. '(l' → logprob: -10.401545524597168
    5. ')' → logprob: -10.401545524597168
    6. ',(' → logprob: -10.901545524597168
    7. ' ,' → logprob: -11.151545524597168
    8. '(' → logprob: -11.151545524597168
    9. '‌,' → logprob: -12.526545524597168
    10. '),' → logprob: -12.776545524597168

Token 220: ' value' (ID: 1432)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.46852779388427734
    2. ' l' → logprob: -1.0935277938842773
    3. '0' → logprob: -3.9685277938842773
    4. 'target' → logprob: -5.093527793884277
    5. ' target' → logprob: -5.343527793884277
    6. ')' → logprob: -5.468527793884277
    7. ' ' → logprob: -6.343527793884277
    8. '<|end|>' → logprob: -6.593527793884277
    9. 'a' → logprob: -7.093527793884277
    10. ' a' → logprob: -8.843527793884277

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34939926862716675
    2. ',' → logprob: -1.7243993282318115
    3. ',l' → logprob: -2.9743993282318115
    4. '):
' → logprob: -3.5993993282318115
    5. ')' → logprob: -3.7243993282318115
    6. '(l' → logprob: -4.349399089813232
    7. ')(' → logprob: -7.849399089813232
    8. '(' → logprob: -8.09939956665039
    9. '):

' → logprob: -8.84939956665039
    10. '   ' → logprob: -9.09939956665039

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03638722002506256
    2. 'return' → logprob: -3.5363872051239014
    3. ' return' → logprob: -5.0363874435424805
    4. 'bis' → logprob: -9.28638744354248
    5. ' bis' → logprob: -10.91138744354248
    6. '	return' → logprob: -12.03638744354248
    7. '   ' → logprob: -15.03638744354248
    8. '```' → logprob: -16.161386489868164
    9. '  ' → logprob: -16.411386489868164
    10. ' ' → logprob: -16.786386489868164

Token 223: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012553448788821697
    2. 'bis' → logprob: -4.5125532150268555
    3. ' return' → logprob: -6.5125532150268555
    4. '   ' → logprob: -11.512553215026855
    5. ' bis' → logprob: -11.762553215026855
    6. '```' → logprob: -13.512553215026855
    7. '	return' → logprob: -15.012553215026855
    8. 'b' → logprob: -15.387553215026855
    9. '`' → logprob: -16.387554168701172
    10. ' ' → logprob: -18.012554168701172

Token 224: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.31326597929000854
    2. 'bis' → logprob: -1.3132660388946533
    3. 'b' → logprob: -13.313265800476074
    4. '   ' → logprob: -13.688265800476074
    5. '	b' → logprob: -14.313265800476074
    6. ' ' → logprob: -14.938265800476074
    7. '```' → logprob: -16.31326675415039
    8. '(b' → logprob: -16.81326675415039
    9. ' ' → logprob: -16.93826675415039
    10. 'Bis' → logprob: -17.06326675415039

Token 225: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.05362994223833084
    2. 'ct' → logprob: -3.1786298751831055
    3. 'sect' → logprob: -4.5536298751831055
    4. 't' → logprob: -11.678629875183105
    5. '_ct' → logprob: -12.053629875183105
    6. '_' → logprob: -12.678629875183105
    7. 'с' → logprob: -12.678629875183105
    8. '_left' → logprob: -12.803629875183105
    9. 'ected' → logprob: -12.803629875183105
    10. '```' → logprob: -13.178629875183105

Token 226: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.704273118884885e-07
    2. '_l' → logprob: -15.250000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_le' → logprob: -17.125
    5. 'left' → logprob: -17.625
    6. 'l' → logprob: -18.0
    7. ' _' → logprob: -18.125
    8. '_right' → logprob: -18.25
    9. '_start' → logprob: -19.125
    10. '_LEFT' → logprob: -19.5

Token 227: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.023252584040164948
    2. '(' → logprob: -3.773252487182617
    3. '(
' → logprob: -12.023252487182617
    4. '(ll' → logprob: -15.148252487182617
    5. '(list' → logprob: -15.273252487182617
    6. '(

' → logprob: -15.523252487182617
    7. '(ls' → logprob: -15.773252487182617
    8. ' (' → logprob: -16.648252487182617
    9. '(s' → logprob: -16.898252487182617
    10. '(lst' → logprob: -17.273252487182617

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015506906202062964
    2. ',l' → logprob: -6.501550674438477
    3. 'l' → logprob: -10.626550674438477
    4. ' ,' → logprob: -10.876550674438477
    5. '(l' → logprob: -13.376550674438477
    6. ')' → logprob: -13.501550674438477
    7. ' l' → logprob: -13.876550674438477
    8. ',
' → logprob: -14.501550674438477
    9. '(' → logprob: -15.001550674438477
    10. '   ' → logprob: -16.001550674438477

Token 229: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.31326186656951904
    2. ' value' → logprob: -1.313261866569519
    3. ')value' → logprob: -16.313261032104492
    4. '"value' → logprob: -17.063261032104492
    5. '(value' → logprob: -17.438261032104492
    6. ' ' → logprob: -18.188261032104492
    7. '	value' → logprob: -18.688261032104492
    8. 'alue' → logprob: -18.688261032104492
    9. 'Value' → logprob: -18.813261032104492
    10. ''value' → logprob: -18.813261032104492

Token 230: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.000001907348633
    4. '<|end|>' → logprob: -17.375001907348633
    5. ')return' → logprob: -17.500001907348633
    6. '}' → logprob: -17.750001907348633
    7. ')

' → logprob: -18.375001907348633
    8. ')#' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.750001907348633
    10. ' ' → logprob: -19.000001907348633

Token 231: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.375
    3. '0' → logprob: -18.5
    4. ')' → logprob: -18.875
    5. '<|end|>' → logprob: -19.125
    6. '```' → logprob: -20.125
    7. '1' → logprob: -20.625
    8. 'from' → logprob: -20.75
    9. '[' → logprob: -20.875
    10. '2' → logprob: -21.0

Token 232: ' subtract' (ID: 71973)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.16649752855300903
    2. 'subtract' → logprob: -2.5414974689483643
    3. ' add' → logprob: -2.6664974689483643
    4. ' subtract' → logprob: -5.791497707366943
    5. 'def' → logprob: -6.291497707366943
    6. 'sub' → logprob: -9.166497230529785
    7. ' def' → logprob: -9.291497230529785
    8. 'multiply' → logprob: -11.791497230529785
    9. 'Subtract' → logprob: -12.853997230529785
    10. ' ' → logprob: -12.853997230529785

Token 233: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004035017918795347
    2. '(' → logprob: -7.87540340423584
    3. ' (' → logprob: -11.62540340423584
    4. '(x' → logprob: -11.75040340423584
    5. '(b' → logprob: -12.12540340423584
    6. '(
' → logprob: -14.25040340423584
    7. '(i' → logprob: -16.625404357910156
    8. '(u' → logprob: -17.250404357910156
    9. '(lambda' → logprob: -17.250404357910156
    10. '(lhs' → logprob: -17.375404357910156

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ' ,' → logprob: -10.500042915344238
    3. ',b' → logprob: -11.125042915344238
    4. ',a' → logprob: -14.625042915344238
    5. ',
' → logprob: -16.250043869018555
    6. 'b' → logprob: -16.500043869018555
    7. 'a' → logprob: -17.000043869018555
    8. '‌,' → logprob: -17.625043869018555
    9. '_,' → logprob: -18.375043869018555
    10. '<|end|>' → logprob: -18.500043869018555

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048587486147880554
    2. ' b' → logprob: -3.0485875606536865
    3. '	b' → logprob: -17.048587799072266
    4. '   ' → logprob: -17.173587799072266
    5. ' ' → logprob: -17.423587799072266
    6. '  ' → logprob: -19.798587799072266
    7. '    ' → logprob: -20.923587799072266
    8. ')b' → logprob: -21.548587799072266
    9. ')' → logprob: -21.923587799072266
    10. ' ' → logprob: -22.048587799072266

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01421839278191328
    2. '):
' → logprob: -4.264218330383301
    3. ')' → logprob: -9.8892183303833
    4. '):
' → logprob: -12.7642183303833
    5. ' ):' → logprob: -14.6392183303833
    6. '):

' → logprob: -14.8892183303833
    7. ':' → logprob: -15.0142183303833
    8. ''):' → logprob: -16.764219284057617
    9. '**' → logprob: -17.139219284057617
    10. '}:' → logprob: -17.264219284057617

Token 237: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9063442349433899
    2. 'a' → logprob: -1.1563441753387451
    3. 'return' → logprob: -1.9063441753387451
    4. '   ' → logprob: -2.406344175338745
    5. ' a' → logprob: -3.156344175338745
    6. '	return' → logprob: -11.406344413757324
    7. ' ' → logprob: -12.906344413757324
    8. '	a' → logprob: -13.156344413757324
    9. '    
' → logprob: -13.906344413757324
    10. '    ' → logprob: -14.156344413757324

Token 238: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02616826444864273
    2. ' return' → logprob: -4.526168346405029
    3. ' a' → logprob: -4.776168346405029
    4. 'return' (adapté à ' return') → logprob: -5.026168346405029
    5. '   ' → logprob: -11.151167869567871
    6. ' ' → logprob: -16.401168823242188
    7. '	a' → logprob: -17.026168823242188
    8. '	return' → logprob: -17.401168823242188
    9. '```' → logprob: -18.401168823242188
    10. '{return' → logprob: -18.901168823242188

Token 239: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861456897109747
    2. ' a' → logprob: -4.758614540100098
    3. '	a' → logprob: -18.883615493774414
    4. '(a' → logprob: -21.008615493774414
    5. '   ' → logprob: -21.133615493774414
    6. '_a' → logprob: -21.383615493774414
    7. ' ' → logprob: -22.758615493774414
    8. ' ' → logprob: -23.133615493774414
    9. '>a' → logprob: -23.758615493774414
    10. ''a' → logprob: -24.008615493774414

Token 240: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002479581395164132
    2. '-' → logprob: -6.002479553222656
    3. '-b' → logprob: -13.002479553222656
    4. ' ' → logprob: -13.627479553222656
    5. ' ' → logprob: -15.127479553222656
    6. ' -
' → logprob: -16.002479553222656
    7. ' –' → logprob: -18.377479553222656
    8. ' −' → logprob: -18.377479553222656
    9. ' minus' → logprob: -20.002479553222656
    10. ' ­' → logprob: -20.252479553222656

Token 241: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. '	b' → logprob: -18.148244857788086
    4. ' ' → logprob: -20.148244857788086
    5. ')b' → logprob: -21.773244857788086
    6. ' б' → logprob: -21.898244857788086
    7. '   ' → logprob: -22.023244857788086
    8. '_b' → logprob: -23.398244857788086
    9. '>b' → logprob: -23.648244857788086
    10. '1' → logprob: -24.023244857788086

Token 242: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011594036914175376
    2. '<|end|>' → logprob: -9.250116348266602
    3. ' def' → logprob: -10.875116348266602
    4. '<|end|>' → logprob: -15.000116348266602
    5. '```' → logprob: -16.6251163482666
    6. '	def' → logprob: -16.7501163482666
    7. '    
' → logprob: -16.8751163482666
    8. ':def' → logprob: -16.8751163482666
    9. '-def' → logprob: -17.0001163482666
    10. '  
' → logprob: -17.2501163482666

Token 243: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.34845006465911865
    2. 'add' → logprob: -1.2234500646591187
    3. '	add' → logprob: -13.22344970703125
    4. ' ' → logprob: -13.34844970703125
    5. '_add' → logprob: -14.34844970703125
    6. 'def' → logprob: -15.22344970703125
    7. '(add' → logprob: -15.72344970703125
    8. '```' → logprob: -15.72344970703125
    9. ')add' → logprob: -15.84844970703125
    10. '   ' → logprob: -16.09844970703125

Token 245: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03824517875909805
    2. '(' → logprob: -3.28824520111084
    3. '(ans' → logprob: -8.78824520111084
    4. ' (' → logprob: -9.91324520111084
    5. '(
' → logprob: -13.66324520111084
    6. '(an' → logprob: -16.163244247436523
    7. '(answer' → logprob: -16.288244247436523
    8. ' ' → logprob: -16.663244247436523
    9. '   ' → logprob: -16.788244247436523
    10. 'a' → logprob: -16.913244247436523

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.657694418914616e-05
    2. ' ,' → logprob: -10.250056266784668
    3. ',a' → logprob: -10.875056266784668
    4. ',b' → logprob: -13.125056266784668
    5. ',
' → logprob: -16.500057220458984
    6. 'a' → logprob: -16.625057220458984
    7. ')' → logprob: -19.000057220458984
    8. ' a' → logprob: -19.125057220458984
    9. ',

' → logprob: -19.625057220458984
    10. '‌,' → logprob: -20.250057220458984

Token 247: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ')b' → logprob: -18.389163970947266
    4. ')' → logprob: -22.014163970947266
    5. '	b' → logprob: -22.639163970947266
    6. ' ' → logprob: -22.639163970947266
    7. ' б' → logprob: -23.389163970947266
    8. '>b' → logprob: -23.514163970947266
    9. '   ' → logprob: -24.389163970947266
    10. '<|end|>' → logprob: -24.389163970947266

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10630500316619873
    2. ')' → logprob: -2.3563051223754883
    3. '):
' → logprob: -5.106305122375488
    4. '):

' → logprob: -11.356305122375488
    5. '):
' → logprob: -12.481305122375488
    6. ')a' → logprob: -13.481305122375488
    7. ' ):' → logprob: -13.981305122375488
    8. 'a' → logprob: -14.606305122375488
    9. ')**' → logprob: -14.606305122375488
    10. ')
' → logprob: -14.606305122375488

Token 249: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9289245009422302
    2. ' a' → logprob: -1.178924560546875
    3. 'a' → logprob: -1.428924560546875
    4. 'return' → logprob: -2.928924560546875
    5. '   ' → logprob: -5.428924560546875
    6. '    ' → logprob: -13.428924560546875
    7. ' ' → logprob: -13.678924560546875
    8. '	return' → logprob: -14.428924560546875
    9. '	a' → logprob: -15.178924560546875
    10. '  ' → logprob: -16.178924560546875

Token 250: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016799524426460266
    2. ' a' → logprob: -4.266799449920654
    3. ' return' → logprob: -6.516799449920654
    4. 'return' (adapté à ' return') → logprob: -6.766799449920654
    5. '   ' → logprob: -12.766799926757812
    6. '	a' → logprob: -17.766799926757812
    7. ' ' → logprob: -18.766799926757812
    8. '  ' → logprob: -19.641799926757812
    9. '	return' → logprob: -20.016799926757812
    10. '    ' → logprob: -20.391799926757812

Token 251: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011047814972698689
    2. ' a' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.51104736328125
    4. '	a' → logprob: -19.01104736328125
    5. '_a' → logprob: -20.13604736328125
    6. '(a' → logprob: -20.51104736328125
    7. ' ' → logprob: -20.88604736328125
    8. ' ' → logprob: -21.51104736328125
    9. '  ' → logprob: -21.63604736328125
    10. '0' → logprob: -22.51104736328125

Token 252: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04863039776682854
    2. '+' → logprob: -3.048630475997925
    3. ' ' → logprob: -10.548630714416504
    4. ' +
' → logprob: -11.298630714416504
    5. '+b' → logprob: -13.548630714416504
    6. ' plus' → logprob: -13.923630714416504
    7. 'dd' → logprob: -14.423630714416504
    8. ' +
' → logprob: -14.548630714416504
    9. 'd' → logprob: -14.673630714416504
    10. ' +

' → logprob: -15.673630714416504

Token 253: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141743123531342
    2. ' b' → logprob: -1.7014174461364746
    3. '(b' → logprob: -12.451416969299316
    4. ')b' → logprob: -16.576417922973633
    5. ' ' → logprob: -16.701417922973633
    6. '(' → logprob: -17.326417922973633
    7. ')' → logprob: -17.826417922973633
    8. ' (' → logprob: -18.201417922973633
    9. '	b' → logprob: -18.951417922973633
    10. '_b' → logprob: -19.576417922973633

Token 254: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31734827160835266
    2. 'n' → logprob: -1.8173482418060303
    3. 'if' → logprob: -2.6923482418060303
    4. '<|end|>' → logprob: -3.3173482418060303
    5. '#' → logprob: -5.817348480224609
    6. '```' → logprob: -6.692348480224609
    7. '.' → logprob: -8.44234848022461
    8. '(n' → logprob: -8.56734848022461
    9. '<|end|>' → logprob: -8.81734848022461
    10. '\n' → logprob: -9.19234848022461

Token 255: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14552028477191925
    2. 'if' → logprob: -2.3955202102661133
    3. 'n' → logprob: -3.1455202102661133
    4. '```' → logprob: -7.020520210266113
    5. '<|end|>' → logprob: -8.895520210266113
    6. '(n' → logprob: -9.895520210266113
    7. '#' → logprob: -10.020520210266113
    8. 'print' → logprob: -10.270520210266113
    9. 'from' → logprob: -10.895520210266113
    10. '\' → logprob: -11.020520210266113

Token 256: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04858805239200592
    2. ' main' → logprob: -3.0485880374908447
    3. 'def' → logprob: -15.048587799072266
    4. '_main' → logprob: -15.423587799072266
    5. 'solve' → logprob: -15.798587799072266
    6. '	main' → logprob: -17.048587799072266
    7. 'run' → logprob: -17.423587799072266
    8. ' solve' → logprob: -17.673587799072266
    9. 'process' → logprob: -18.048587799072266
    10. 'print' → logprob: -18.798587799072266

Token 257: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10697920620441437
    2. '(ans' → logprob: -2.3569791316986084
    3. '()' → logprob: -5.6069793701171875
    4. '_result' → logprob: -7.2319793701171875
    5. '(answer' → logprob: -7.4819793701171875
    6. '_' → logprob: -7.8569793701171875
    7. '(result' → logprob: -8.106979370117188
    8. '_ans' → logprob: -8.356979370117188
    9. '(output' → logprob: -8.731979370117188
    10. '_answer' → logprob: -8.981979370117188

Token 258: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.39400866627693176
    2. '(result' → logprob: -1.1440086364746094
    3. '(' → logprob: -5.144008636474609
    4. '(answer' → logprob: -7.019008636474609
    5. '(value' → logprob: -8.76900863647461
    6. '(output' → logprob: -8.89400863647461
    7. '(a' → logprob: -10.64400863647461
    8. '(res' → logprob: -10.64400863647461
    9. '(results' → logprob: -11.76900863647461
    10. ' (' → logprob: -11.76900863647461

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040266621857881546
    2. '):
' → logprob: -3.290266513824463
    3. ')' → logprob: -6.165266513824463
    4. '(ans' → logprob: -9.290266990661621
    5. '):
' → logprob: -10.790266990661621
    6. '(' → logprob: -13.040266990661621
    7. '   ' → logprob: -13.165266990661621
    8. '):

' → logprob: -13.290266990661621
    9. ' ):' → logprob: -13.540266990661621
    10. ',' → logprob: -14.665266990661621

Token 260: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48294323682785034
    2. '   ' → logprob: -0.9829432368278503
    3. ' print' → logprob: -4.732943058013916
    4. '```' → logprob: -11.107943534851074
    5. '(print' → logprob: -11.482943534851074
    6. '	print' → logprob: -14.357943534851074
    7. '(' → logprob: -15.232943534851074
    8. '    
' → logprob: -15.982943534851074
    9. '    ' → logprob: -16.107942581176758
    10. ' ' → logprob: -17.357942581176758

Token 261: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.45848218582978e-06
    2. ' print' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -17.750001907348633
    5. '`' → logprob: -23.250001907348633
    6. 'pr' → logprob: -23.500001907348633
    7. 'def' → logprob: -24.500001907348633
    8. '	print' → logprob: -24.625001907348633
    9. '
' → logprob: -24.875001907348633
    10. 'println' → logprob: -25.125001907348633

Token 262: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004089443478733301
    2. '(' → logprob: -5.50408935546875
    3. '()' → logprob: -11.62908935546875
    4. '(answer' → logprob: -13.62908935546875
    5. ' (' → logprob: -15.12908935546875
    6. '(
' → logprob: -15.75408935546875
    7. 'ans' → logprob: -15.87908935546875
    8. '(abs' → logprob: -16.62908935546875
    9. '('' → logprob: -17.00408935546875
    10. '((' → logprob: -17.12908935546875

Token 263: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.125
    3. '))' → logprob: -16.625
    4. ')`' → logprob: -16.625
    5. '())' → logprob: -17.875
    6. ' )' → logprob: -18.5
    7. '()' → logprob: -18.5
    8. ')}' → logprob: -18.875
    9. '`)' → logprob: -19.375
    10. '),' → logprob: -19.625

Token 264: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026166820898652077
    2. 'if' → logprob: -6.377616882324219
    3. 'n' → logprob: -7.002616882324219
    4. '```' → logprob: -12.877616882324219
    5. '#' → logprob: -14.252616882324219
    6. ' def' → logprob: -15.002616882324219
    7. 'from' → logprob: -15.127616882324219
    8. '(n' → logprob: -15.252616882324219
    9. 'ndef' → logprob: -16.12761688232422
    10. '    
' → logprob: -17.12761688232422

Token 265: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08185626566410065
    2. ' main' → logprob: -2.5818562507629395
    3. 'def' → logprob: -5.8318562507629395
    4. ' def' → logprob: -10.581856727600098
    5. 'if' → logprob: -13.456856727600098
    6. 'run' → logprob: -13.456856727600098
    7. ' run' → logprob: -14.331856727600098
    8. 'read' → logprob: -16.20685577392578
    9. '_main' → logprob: -16.33185577392578
    10. 'solve' → logprob: -16.33185577392578

Token 266: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.372294698550832e-06
    2. ' ():' → logprob: -12.125009536743164
    3. '():
' → logprob: -12.500009536743164
    4. '()' → logprob: -16.125009536743164
    5. '(' → logprob: -18.375009536743164
    6. '():
' → logprob: -18.750009536743164
    7. '():

' → logprob: -19.625009536743164
    8. '_' → logprob: -19.875009536743164
    9. '(":' → logprob: -20.750009536743164
    10. '()>' → logprob: -20.750009536743164

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062000520527362823
    2. 'n' → logprob: -2.8120005130767822
    3. ' n' → logprob: -10.562000274658203
    4. '(n' → logprob: -12.437000274658203
    5. '	n' → logprob: -12.937000274658203
    6. '```' → logprob: -14.812000274658203
    7. ',n' → logprob: -16.062000274658203
    8. '_n' → logprob: -16.312000274658203
    9. '
' → logprob: -16.562000274658203
    10. '   ' → logprob: -16.937000274658203

Token 268: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002211516024544835
    2. ' n' → logprob: -6.502211570739746
    3. '   ' → logprob: -7.252211570739746
    4. '	n' → logprob: -15.002211570739746
    5. ' ' → logprob: -16.75221061706543
    6. '  ' → logprob: -17.75221061706543
    7. '
' → logprob: -18.62721061706543
    8. '(n' → logprob: -20.50221061706543
    9. '```' → logprob: -20.50221061706543
    10. '_n' → logprob: -20.62721061706543

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005309910629875958
    2. '=' → logprob: -8.125531196594238
    3. ' =' → logprob: -8.625531196594238
    4. ' ,' → logprob: -9.875531196594238
    5. ',n' → logprob: -13.750531196594238
    6. ')' → logprob: -13.750531196594238
    7. ',l' → logprob: -14.500531196594238
    8. ' ' → logprob: -15.625531196594238
    9. '   ' → logprob: -15.750531196594238
    10. '‌,' → logprob: -15.875531196594238

Token 270: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.04785807803273201
    2. 'l' → logprob: -3.1728579998016357
    3. ' sort' → logprob: -5.672858238220215
    4. '<|end|>' → logprob: -6.922858238220215
    5. 'sort' → logprob: -8.047858238220215
    6. ' read' → logprob: -10.672858238220215
    7. ' sorted' → logprob: -11.297858238220215
    8. '	l' → logprob: -11.547858238220215
    9. '_l' → logprob: -11.672858238220215
    10. ' get' → logprob: -11.672858238220215

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868817090988159
    2. '=' → logprob: -1.136881709098816
    3. '   ' → logprob: -11.886881828308105
    4. ' ' → logprob: -13.636881828308105
    5. ',' → logprob: -14.136881828308105
    6. '<|end|>' → logprob: -14.386881828308105
    7. '  ' → logprob: -15.511881828308105
    8. ')' → logprob: -15.636881828308105
    9. ' =
' → logprob: -15.636881828308105
    10. '    ' → logprob: -15.886881828308105

Token 272: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.47408154606819153
    2. ' read' → logprob: -0.9740815162658691
    3. '   ' → logprob: -12.474081993103027
    4. '	read' → logprob: -14.974081993103027
    5. '  ' → logprob: -15.474081993103027
    6. ' ' → logprob: -16.09908103942871
    7. 'get' → logprob: -16.72408103942871
    8. ' get' → logprob: -17.09908103942871
    9. '    ' → logprob: -17.84908103942871
    10. '(read' → logprob: -17.97408103942871

Token 273: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.875005722045898
    3. '_inputs' → logprob: -13.500005722045898
    4. '_in' → logprob: -14.500005722045898
    5. '_output' → logprob: -14.875005722045898
    6. 'input' → logprob: -15.500005722045898
    7. '```' → logprob: -16.6250057220459
    8. '_line' → logprob: -17.1250057220459
    9. ' _' → logprob: -17.1250057220459
    10. '_n' → logprob: -17.7500057220459

Token 274: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07899212837219238
    2. '()' → logprob: -2.5789921283721924
    3. '   ' → logprob: -9.578991889953613
    4. '()
' → logprob: -10.828991889953613
    5. '
' → logprob: -11.453991889953613
    6. '()

' → logprob: -13.703991889953613
    7. '()\' → logprob: -14.328991889953613
    8. 'def' → logprob: -15.703991889953613
    9. '(
' → logprob: -15.703991889953613
    10. ' l' → logprob: -15.828991889953613

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3196136951446533
    2. 'l' → logprob: -1.3196136951446533
    3. ' l' → logprob: -5.319613456726074
    4. '
' → logprob: -6.819613456726074
    5. '    
' → logprob: -9.444613456726074
    6. 'n' → logprob: -9.694613456726074
    7. '```' → logprob: -9.819613456726074
    8. '	l' → logprob: -9.944613456726074
    9. ' ' → logprob: -10.069613456726074
    10. '  ' → logprob: -10.319613456726074

Token 276: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0036098056007176638
    2. ' l' → logprob: -5.878609657287598
    3. '   ' → logprob: -7.128609657287598
    4. '	l' → logprob: -13.628609657287598
    5. '
' → logprob: -14.253609657287598
    6. ' ' → logprob: -14.628609657287598
    7. 'sorted' → logprob: -15.753609657287598
    8. '  ' → logprob: -16.003610610961914
    9. '    
' → logprob: -16.128610610961914
    10. 's' → logprob: -16.753610610961914

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. '=l' → logprob: -15.201414108276367
    4. '.sort' → logprob: -16.201414108276367
    5. ' ' → logprob: -16.951414108276367
    6. 'sorted' → logprob: -17.076414108276367
    7. ' =
' → logprob: -17.451414108276367
    8. '.' → logprob: -17.576414108276367
    9. '_sorted' → logprob: -17.576414108276367
    10. '＝' → logprob: -17.701414108276367

Token 278: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.4743664264678955
    2. ' sort' → logprob: -0.9743664264678955
    3. 'sorted' → logprob: -8.849366188049316
    4. ' sorted' → logprob: -8.849366188049316
    5. '   ' → logprob: -13.849366188049316
    6. '	sort' → logprob: -14.599366188049316
    7. ' ' → logprob: -14.724366188049316
    8. '(sort' → logprob: -15.099366188049316
    9. '.sort' → logprob: -15.974366188049316
    10. 's' → logprob: -16.599367141723633

Token 279: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.000634639582131058
    2. '(l' → logprob: -7.375634670257568
    3. '_l' → logprob: -12.00063419342041
    4. '(_' → logprob: -14.12563419342041
    5. 'list' → logprob: -15.00063419342041
    6. 'l' → logprob: -15.12563419342041
    7. '_' → logprob: -15.37563419342041
    8. 'List' → logprob: -15.87563419342041
    9. '	l' → logprob: -17.000635147094727
    10. ' _' → logprob: -17.125635147094727

Token 280: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.750003814697266
    3. 'l' → logprob: -14.250003814697266
    4. '	l' → logprob: -16.375003814697266
    5. ' l' → logprob: -18.125003814697266
    6. ',l' → logprob: -19.500003814697266
    7. '(
' → logprob: -19.625003814697266
    8. '```' → logprob: -20.000003814697266
    9. '(n' → logprob: -20.125003814697266
    10. ';l' → logprob: -20.375003814697266

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03838157653808594
    2. '(l' → logprob: -3.288381576538086
    3. ')
' → logprob: -8.663381576538086
    4. '   ' → logprob: -8.913381576538086
    5. '(' → logprob: -10.788381576538086
    6. ' )' → logprob: -12.663381576538086
    7. '(n' → logprob: -12.913381576538086
    8. 'l' → logprob: -13.038381576538086
    9. ' ' → logprob: -13.788381576538086
    10. ' l' → logprob: -14.163381576538086

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023796353489160538
    2. 'ans' → logprob: -3.773796319961548
    3. ' ans' → logprob: -8.023796081542969
    4. '	ans' → logprob: -9.398796081542969
    5. '```' → logprob: -9.898796081542969
    6. 'result' → logprob: -10.648796081542969
    7. '    
' → logprob: -11.023796081542969
    8. 'answer' → logprob: -11.273796081542969
    9. '(ans' → logprob: -11.398796081542969
    10. 'print' → logprob: -11.398796081542969

Token 283: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.742448022123426e-05
    2. 'result' → logprob: -10.500067710876465
    3. '   ' → logprob: -11.000067710876465
    4. 'answer' → logprob: -11.250067710876465
    5. 'print' → logprob: -12.000067710876465
    6. ' ans' → logprob: -12.500067710876465
    7. '	ans' → logprob: -16.12506675720215
    8. '    
' → logprob: -17.37506675720215
    9. 'res' → logprob: -17.62506675720215
    10. '(ans' → logprob: -18.12506675720215

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020752996206284
    2. '=' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.225207328796387
    4. ' =
' → logprob: -16.600208282470703
    5. ',' → logprob: -16.975208282470703
    6. ' =)' → logprob: -16.975208282470703
    7. '	' → logprob: -17.600208282470703
    8. '  ' → logprob: -17.850208282470703
    9. '＝' → logprob: -17.850208282470703
    10. ' =
' → logprob: -18.100208282470703

Token 285: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.008615042082965374
    2. ' calculate' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.633615493774414
    4. '.calculate' → logprob: -17.883615493774414
    5. 'calcul' → logprob: -20.133615493774414
    6. ' ' → logprob: -20.508615493774414
    7. 'alculate' → logprob: -20.508615493774414
    8. 'cal' → logprob: -20.758615493774414
    9. 'Calculate' → logprob: -20.883615493774414
    10. 'calc' → logprob: -21.008615493774414

Token 286: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.750003814697266
    3. '_p' → logprob: -14.500003814697266
    4. ' _' → logprob: -14.875003814697266
    5. '```' → logprob: -15.000003814697266
    6. '_counts' → logprob: -15.375003814697266
    7. '_parts' → logprob: -15.500003814697266
    8. '_pair' → logprob: -15.875003814697266
    9. '_ranges' → logprob: -16.000003814697266
    10. 's' → logprob: -16.375003814697266

Token 287: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.466968650580384e-05
    2. '(' → logprob: -9.875054359436035
    3. ' (' → logprob: -13.250054359436035
    4. '(
' → logprob: -14.250054359436035
    5. '```' → logprob: -14.750054359436035
    6. '(len' → logprob: -15.875054359436035
    7. '   ' → logprob: -16.62505531311035
    8. '(None' → logprob: -18.00005531311035
    9. '((' → logprob: -18.37505531311035
    10. 'n' → logprob: -18.75005531311035

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014370749704539776
    2. ',l' → logprob: -8.875144004821777
    3. ' ,' → logprob: -12.750144004821777
    4. ',
' → logprob: -14.125144004821777
    5. '   ' → logprob: -15.875144004821777
    6. ' l' → logprob: -17.37514305114746
    7. ')' → logprob: -17.87514305114746
    8. ',n' → logprob: -18.25014305114746
    9. 'l' → logprob: -18.62514305114746
    10. '‌,' → logprob: -18.87514305114746

Token 289: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00671584764495492
    2. ' l' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.006715774536133
    4. '	l' → logprob: -15.881715774536133
    5. ' ' → logprob: -17.381715774536133
    6. ')' → logprob: -18.006715774536133
    7. ' л' → logprob: -19.131715774536133
    8. 'n' → logprob: -19.256715774536133
    9. ',l' → logprob: -19.256715774536133
    10. ',' → logprob: -19.506715774536133

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.547789674485102e-05
    2. ')
' → logprob: -10.250035285949707
    3. ' )' → logprob: -18.000036239624023
    4. ')

' → logprob: -18.500036239624023
    5. '   ' → logprob: -18.625036239624023
    6. ')
' → logprob: -18.625036239624023
    7. ')`' → logprob: -19.000036239624023
    8. '),' → logprob: -19.625036239624023
    9. '))' → logprob: -20.750036239624023
    10. ')n' → logprob: -21.250036239624023

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16099192202091217
    2. '
' → logprob: -2.160991907119751
    3. 'print' → logprob: -3.410991907119751
    4. '```' → logprob: -8.535991668701172
    5. '    
' → logprob: -9.035991668701172
    6. ' print' → logprob: -9.410991668701172
    7. '
' → logprob: -9.660991668701172
    8. '(print' → logprob: -11.785991668701172
    9. '	print' → logprob: -12.160991668701172
    10. '``' → logprob: -12.660991668701172

Token 292: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.2166411478538066e-05
    2. ' print' → logprob: -10.250052452087402
    3. '   ' → logprob: -11.000052452087402
    4. '	print' → logprob: -18.250051498413086
    5. '
' → logprob: -19.625051498413086
    6. '  ' → logprob: -20.500051498413086
    7. '.print' → logprob: -20.750051498413086
    8. ' ' → logprob: -20.875051498413086
    9. '```' → logprob: -21.500051498413086
    10. '_print' → logprob: -22.125051498413086

Token 293: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.500001907348633
    3. '_results' → logprob: -14.625001907348633
    4. '(_' → logprob: -16.250001907348633
    5. '```' → logprob: -16.625001907348633
    6. ' _' → logprob: -16.875001907348633
    7. 'result' → logprob: -17.500001907348633
    8. '_res' → logprob: -18.000001907348633
    9. '_RESULT' → logprob: -18.125001907348633
    10. '(' → logprob: -18.250001907348633

Token 294: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. '(answer' → logprob: -15.625
    3. '(' → logprob: -16.0
    4. ' (' → logprob: -18.0
    5. '(
' → logprob: -19.125
    6. 'ans' → logprob: -19.5
    7. '(an' → logprob: -20.25
    8. '(abs' → logprob: -20.75
    9. '```' → logprob: -21.25
    10. '(ord' → logprob: -21.25

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.625000953674316
    3. '())' → logprob: -15.375000953674316
    4. '()' → logprob: -15.875000953674316
    5. ' )' → logprob: -16.375001907348633
    6. ')`' → logprob: -19.125001907348633
    7. '))' → logprob: -19.250001907348633
    8. '`)' → logprob: -19.875001907348633
    9. ')

' → logprob: -19.875001907348633
    10. '}' → logprob: -20.250001907348633

Token 296: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.494741632603109e-05
    2. '
' → logprob: -10.12508487701416
    3. ' if' → logprob: -10.87508487701416
    4. 'main' → logprob: -11.50008487701416
    5. '<|end|>' → logprob: -11.87508487701416
    6. '```' → logprob: -12.50008487701416
    7. '#' → logprob: -12.62508487701416
    8. '\n' → logprob: -14.75008487701416
    9. '\' → logprob: -15.50008487701416
    10. '_' → logprob: -15.50008487701416

Token 297: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 295
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 43.73%
Précision adaptée (1ère position): 46.78%
Précision (top 10): 84.41%
================================================================================
