================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect

def main():
    N = int(input())
    arr = [int(x) for x in input().split()]
    arr = sorted(arr)

    answer = 0
    idx = 0
    while idx < N-1:
        for j in range(idx+1, N):
            tmp = bisect.bisect_left(arr, arr[idx]+arr[j]) - (j+1)
            answer = answer + tmp
        idx += 1

    print(answer)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018577903392724693
    2. '(' → logprob: -8.7501859664917
    3. '\' → logprob: -12.5001859664917
    4. '\n' → logprob: -12.8751859664917
    5. '.\' → logprob: -13.0001859664917
    6. 'newline' → logprob: -13.0001859664917
    7. ' ' → logprob: -13.3751859664917
    8. '```' → logprob: -13.5001859664917
    9. '[' → logprob: -13.6251859664917
    10. '.b' → logprob: -13.6251859664917

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01644698530435562
    2. '(' → logprob: -4.141447067260742
    3. '.b' → logprob: -9.391447067260742
    4. '```' → logprob: -10.016447067260742
    5. '

' → logprob: -10.141447067260742
    6. '(
' → logprob: -10.266447067260742
    7. '
' → logprob: -10.766447067260742
    8. '.
' → logprob: -10.766447067260742
    9. '\n' → logprob: -10.766447067260742
    10. '\' → logprob: -11.016447067260742

Token 5: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5090293884277344
    2. '_' → logprob: -2.0090293884277344
    3. ' find' → logprob: -2.5090293884277344
    4. ' bis' → logprob: -2.8840293884277344
    5. ' ' → logprob: -3.5090293884277344
    6. ' _' → logprob: -3.6340293884277344
    7. '_find' → logprob: -4.884029388427734
    8. ' add' → logprob: -5.009029388427734
    9. ' insert' → logprob: -5.009029388427734
    10. ' sorted' → logprob: -5.134029388427734

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004341460298746824
    2. ':' → logprob: -6.0043416023254395
    3. '(:' → logprob: -6.6293416023254395
    4. '():' → logprob: -8.254341125488281
    5. '(
' → logprob: -9.254341125488281
    6. ' (' → logprob: -9.754341125488281
    7. '```' → logprob: -10.754341125488281
    8. '('' → logprob: -11.129341125488281
    9. '):' → logprob: -11.129341125488281
    10. '(":' → logprob: -11.379341125488281

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4870535433292389
    2. '   ' → logprob: -1.6120535135269165
    3. '[' → logprob: -2.487053632736206
    4. '    ' → logprob: -3.112053632736206
    5. ' ' → logprob: -3.362053632736206
    6. '(b' → logprob: -4.987053394317627
    7. ' (' → logprob: -5.612053394317627
    8. '\' → logprob: -6.362053394317627
    9. '```' → logprob: -6.487053394317627
    10. ''' → logprob: -6.612053394317627

Token 8: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7786239981651306
    2. '   ' → logprob: -2.2786240577697754
    3. 'array' → logprob: -2.6536240577697754
    4. 'numbers' → logprob: -2.9036240577697754
    5. 'arr' → logprob: -3.0286240577697754
    6. 'data' → logprob: -3.0286240577697754
    7. 'sorted' → logprob: -3.1536240577697754
    8. 'a' → logprob: -3.6536240577697754
    9. 'nums' → logprob: -3.6536240577697754
    10. 'x' → logprob: -3.7786240577697754

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6844700574874878
    2. ' ' → logprob: -1.0594700574874878
    3. '=' → logprob: -2.8094701766967773
    4. '.' → logprob: -3.5594701766967773
    5. '  ' → logprob: -4.184470176696777
    6. ',' → logprob: -4.184470176696777
    7. ')' → logprob: -4.559470176696777
    8. '   ' → logprob: -5.184470176696777
    9. '    ' → logprob: -5.559470176696777
    10. '_' → logprob: -6.059470176696777

Token 10: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.039411935955286026
    2. 'int' → logprob: -3.789412021636963
    3. ' ' → logprob: -4.414412021636963
    4. '10' → logprob: -5.664412021636963
    5. '5' → logprob: -8.539411544799805
    6. ' map' → logprob: -9.539411544799805
    7. ' list' → logprob: -10.039411544799805
    8. '[int' → logprob: -10.289411544799805
    9. '20' → logprob: -10.539411544799805
    10. ' []' → logprob: -11.289411544799805

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00326410005800426
    2. '(input' → logprob: -6.2532639503479
    3. '('' → logprob: -6.7532639503479
    4. '("' → logprob: -9.878264427185059
    5. '()' → logprob: -10.253264427185059
    6. 'input' → logprob: -10.503264427185059
    7. ''' → logprob: -10.753264427185059
    8. ' (' → logprob: -11.253264427185059
    9. '(`' → logprob: -12.253264427185059
    10. '(
' → logprob: -12.878264427185059

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6456006169319153
    2. '()' → logprob: -1.0206005573272705
    3. ')' → logprob: -2.3956005573272705
    4. '(' → logprob: -3.7706005573272705
    5. '('' → logprob: -7.77060079574585
    6. '))' → logprob: -8.645600318908691
    7. '(
' → logprob: -8.895600318908691
    8. '()))' → logprob: -9.020600318908691
    9. '().' → logprob: -10.270600318908691
    10. '(""))' → logprob: -10.270600318908691

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13310985267162323
    2. '    
' → logprob: -3.1331098079681396
    3. '
' → logprob: -4.508110046386719
    4. '\n' → logprob: -4.633110046386719
    5. '   
' → logprob: -4.758110046386719
    6. ' ' → logprob: -5.008110046386719
    7. '\' → logprob: -5.008110046386719
    8. '`' → logprob: -5.383110046386719
    9. '```' → logprob: -5.633110046386719
    10. ' 
' → logprob: -5.633110046386719

Token 14: ' arr' (ID: 1724)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8910557627677917
    2. ' data' → logprob: -2.0160558223724365
    3. ' arr' → logprob: -2.0160558223724365
    4. 'arr' (adapté à ' arr') → logprob: -2.6410558223724365
    5. 'data' → logprob: -3.0160558223724365
    6. ' array' → logprob: -3.0160558223724365
    7. ' numbers' → logprob: -3.3910558223724365
    8. ' heights' → logprob: -3.6410558223724365
    9. ' a' → logprob: -4.391055583953857
    10. 'A' → logprob: -4.391055583953857

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4736403226852417
    2. '.' → logprob: -1.5986403226852417
    3. '[' → logprob: -2.0986404418945312
    4. '=' → logprob: -3.5986404418945312
    5. '.append' → logprob: -3.9736404418945312
    6. '[:]' → logprob: -6.223640441894531
    7. '_' → logprob: -6.723640441894531
    8. '[]' → logprob: -7.098640441894531
    9. ')' → logprob: -7.723640441894531
    10. ',' → logprob: -7.973640441894531

Token 16: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.33062943816185
    2. ' []' → logprob: -2.080629348754883
    3. 'list' → logprob: -2.205629348754883
    4. ' [' → logprob: -3.455629348754883
    5. '[]' → logprob: -4.330629348754883
    6. '[list' → logprob: -6.955629348754883
    7. '[' → logprob: -7.455629348754883
    8. ' ' → logprob: -9.455629348754883
    9. '[input' → logprob: -10.205629348754883
    10. ' sorted' → logprob: -10.330629348754883

Token 17: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01996363140642643
    2. ' int' → logprob: -4.26996374130249
    3. '0' → logprob: -5.39496374130249
    4. ']int' → logprob: -7.76996374130249
    5. ']' → logprob: -8.269963264465332
    6. ')' → logprob: -8.394963264465332
    7. '   ' → logprob: -8.644963264465332
    8. '(int' → logprob: -9.644963264465332
    9. '[int' → logprob: -10.894963264465332
    10. ' ]' → logprob: -11.019963264465332

Token 18: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4819819927215576
    2. '(x' → logprob: -1.3569819927215576
    3. '(input' → logprob: -2.1069819927215576
    4. '(i' → logprob: -5.981982231140137
    5. '()]' → logprob: -8.231982231140137
    6. '()' → logprob: -8.856982231140137
    7. '(
' → logprob: -9.106982231140137
    8. '(a' → logprob: -9.231982231140137
    9. ']' → logprob: -9.356982231140137
    10. '(s' → logprob: -9.856982231140137

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010932037606835365
    2. '(' → logprob: -5.385931968688965
    3. '())' → logprob: -5.885931968688965
    4. '()' → logprob: -7.010931968688965
    5. '(x' → logprob: -7.010931968688965
    6. '(input' → logprob: -7.135931968688965
    7. ')]' → logprob: -8.135931968688965
    8. 'for' → logprob: -8.385931968688965
    9. ' for' → logprob: -8.760931968688965
    10. ' )' → logprob: -8.760931968688965

Token 20: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30785253643989563
    2. ')' → logprob: -1.9328525066375732
    3. 'for' → logprob: -2.1828525066375732
    4. ' )' → logprob: -5.432852745056152
    5. '(' → logprob: -6.682852745056152
    6. ' ' → logprob: -6.807852745056152
    7. ')]' → logprob: -8.557852745056152
    8. '()' → logprob: -8.682852745056152
    9. '(input' → logprob: -8.932852745056152
    10. ']' → logprob: -9.557852745056152

Token 21: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09092067927122116
    2. 'input' → logprob: -2.4659206867218018
    3. ' x' → logprob: -6.965920448303223
    4. ' ' → logprob: -7.715920448303223
    5. ' in' → logprob: -8.965920448303223
    6. 'x' → logprob: -8.965920448303223
    7. ' ' → logprob: -9.590920448303223
    8. '_' → logprob: -9.715920448303223
    9. '=input' → logprob: -9.715920448303223
    10. ' range' → logprob: -10.340920448303223

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004112000111490488
    2. 'in' → logprob: -5.5041117668151855
    3. ' ' → logprob: -10.879112243652344
    4. 'import' → logprob: -11.629112243652344
    5. 'input' → logprob: -13.629112243652344
    6. ')' → logprob: -14.379112243652344
    7. '<|end|>' → logprob: -14.379112243652344
    8. '	in' → logprob: -14.504112243652344
    9. '_' → logprob: -15.254112243652344
    10. 'x' → logprob: -15.254112243652344

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142784714698792
    2. ' input' → logprob: -1.7014278173446655
    3. 'range' → logprob: -11.451427459716797
    4. ' range' → logprob: -12.826427459716797
    5. ' ' → logprob: -15.076427459716797
    6. '(input' → logprob: -15.451427459716797
    7. '=input' → logprob: -15.701427459716797
    8. 'in' → logprob: -16.576427459716797
    9. '	input' → logprob: -16.576427459716797
    10. '<input' → logprob: -16.701427459716797

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001205893131555058
    2. '()' → logprob: -9.250120162963867
    3. '.split' → logprob: -11.375120162963867
    4. '())' → logprob: -12.125120162963867
    5. 'split' → logprob: -12.875120162963867
    6. '(' → logprob: -12.875120162963867
    7. ')' → logprob: -13.875120162963867
    8. '()]' → logprob: -14.000120162963867
    9. ' ().' → logprob: -16.000120162963867
    10. '()].' → logprob: -16.250120162963867

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00034476007567718625
    2. 'strip' → logprob: -8.000345230102539
    3. ' split' → logprob: -12.000345230102539
    4. 'rstrip' → logprob: -12.750345230102539
    5. 'spl' → logprob: -15.750345230102539
    6. '(split' → logprob: -16.75034523010254
    7. ' strip' → logprob: -18.87534523010254
    8. '.split' → logprob: -19.00034523010254
    9. '_split' → logprob: -19.87534523010254
    10. ')' → logprob: -20.62534523010254

Token 26: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.5168914198875427
    2. '())' → logprob: -1.0168914794921875
    3. '()' → logprob: -3.8918914794921875
    4. ')]' → logprob: -4.3918914794921875
    5. '(' → logprob: -4.7668914794921875
    6. ']' → logprob: -8.266891479492188
    7. '('' → logprob: -9.016891479492188
    8. ')' → logprob: -9.016891479492188
    9. '')]' → logprob: -9.766891479492188
    10. '")]' → logprob: -11.266891479492188

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0920424833893776
    2. '
' → logprob: -2.8420424461364746
    3. '    
' → logprob: -3.5920424461364746
    4. '```' → logprob: -7.592042446136475
    5. ' 
' → logprob: -8.342042922973633
    6. '' → logprob: -8.967042922973633
    7. '
' → logprob: -8.967042922973633
    8. '  
' → logprob: -9.217042922973633
    9. '   
' → logprob: -9.342042922973633
    10. ')' → logprob: -9.592042922973633

Token 28: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5024723410606384
    2. 'arr' (adapté à ' arr') → logprob: -1.5024724006652832
    3. ' arr' → logprob: -2.877472400665283
    4. ' for' → logprob: -3.377472400665283
    5. 'for' → logprob: -3.877472400665283
    6. 'pos' → logprob: -4.377472400665283
    7. 'target' → logprob: -4.877472400665283
    8. '    
' → logprob: -5.002472400665283
    9. ' pos' → logprob: -5.127472400665283
    10. ' target' → logprob: -5.127472400665283

Token 29: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.09253674745559692
    2. '.' → logprob: -2.467536687850952
    3. '.append' → logprob: -6.467536926269531
    4. ')' → logprob: -7.467536926269531
    5. '_sorted' → logprob: -7.592536926269531
    6. '=' → logprob: -7.842536926269531
    7. ' =' → logprob: -8.717536926269531
    8. '.reverse' → logprob: -9.717536926269531
    9. 'sort' → logprob: -9.967536926269531
    10. '_' → logprob: -9.967536926269531

Token 30: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.06242349371314049
    2. 'sorted' → logprob: -2.8124234676361084
    3. ' ' → logprob: -8.312423706054688
    4. ' list' → logprob: -9.062423706054688
    5. '   ' → logprob: -10.312423706054688
    6. ' [' → logprob: -10.812423706054688
    7. '[' → logprob: -11.812423706054688
    8. 'list' → logprob: -11.937423706054688
    9. ' ' → logprob: -11.937423706054688
    10. '(sorted' → logprob: -12.374923706054688

Token 31: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.16024108231067657
    2. '(' → logprob: -1.9102411270141602
    3. ' (' → logprob: -12.28524112701416
    4. '(
' → logprob: -12.66024112701416
    5. 'arr' → logprob: -13.53524112701416
    6. '(array' → logprob: -13.66024112701416
    7. '(b' → logprob: -13.78524112701416
    8. '(ord' → logprob: -14.03524112701416
    9. '((' → logprob: -14.28524112701416
    10. '(ar' → logprob: -14.28524112701416

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023107275774236768
    2. '))' → logprob: -8.75023078918457
    3. ',' → logprob: -10.12523078918457
    4. ' )' → logprob: -10.62523078918457
    5. '   ' → logprob: -13.00023078918457
    6. ')
' → logprob: -13.25023078918457
    7. ')))' → logprob: -14.00023078918457
    8. ',)' → logprob: -14.25023078918457
    9. ' ' → logprob: -14.75023078918457
    10. '[' → logprob: -14.87523078918457

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5193120241165161
    2. 'for' → logprob: -2.2693119049072266
    3. '
' → logprob: -2.2693119049072266
    4. '    
' → logprob: -3.1443119049072266
    5. ' for' → logprob: -3.2693119049072266
    6. ' 
' → logprob: -3.5193119049072266
    7. 'n' → logprob: -4.144311904907227
    8. ')' → logprob: -4.519311904907227
    9. 'b' → logprob: -4.519311904907227
    10. 'a' → logprob: -5.019311904907227

Token 34: ' answer' (ID: 6052)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9305621385574341
    2. 'q' → logprob: -1.680562138557434
    3. 'target' → logprob: -1.805562138557434
    4. 'Q' → logprob: -2.8055620193481445
    5. 'for' → logprob: -2.8055620193481445
    6. 'k' → logprob: -3.0555620193481445
    7. 't' → logprob: -3.3055620193481445
    8. '   ' → logprob: -4.4305620193481445
    9. 'key' → logprob: -4.9305620193481445
    10. 'K' → logprob: -5.5555620193481445

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01643373630940914
    2. '=' → logprob: -4.3914337158203125
    3. '_' → logprob: -5.7664337158203125
    4. '[' → logprob: -7.8914337158203125
    5. ' ' → logprob: -9.266433715820312
    6. '(' → logprob: -9.266433715820312
    7. '   ' → logprob: -9.766433715820312
    8. ')' → logprob: -10.516433715820312
    9. '[]' → logprob: -10.641433715820312
    10. ',' → logprob: -11.016433715820312

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42166441679000854
    2. ' ' → logprob: -1.1716644763946533
    3. ' []' → logprob: -4.171664237976074
    4. '[]' → logprob: -5.171664237976074
    5. 'arr' → logprob: -5.671664237976074
    6. ' arr' → logprob: -5.796664237976074
    7. ' len' → logprob: -6.046664237976074
    8. ' float' → logprob: -6.921664237976074
    9. 'len' → logprob: -6.921664237976074
    10. ' bis' → logprob: -7.796664237976074

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035513662733137608
    2. 'arr' → logprob: -6.878551483154297
    3. '[]' → logprob: -7.128551483154297
    4. 'float' → logprob: -7.128551483154297
    5. 'len' → logprob: -8.378551483154297
    6. '[' → logprob: -8.753551483154297
    7. ' ' → logprob: -9.003551483154297
    8. '1' → logprob: -9.128551483154297
    9. 'N' → logprob: -9.253551483154297
    10. '10' → logprob: -9.753551483154297

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6568505167961121
    2. '
' → logprob: -1.1568505764007568
    3. ' for' → logprob: -2.781850576400757
    4. '<|end|>' → logprob: -2.781850576400757
    5. 'for' → logprob: -4.156850337982178
    6. '\n' → logprob: -4.281850337982178
    7. '    
' → logprob: -5.406850337982178
    8. ' ' → logprob: -5.781850337982178
    9. ' 
' → logprob: -6.281850337982178
    10. '<|end|>' → logprob: -6.906850337982178

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12147079408168793
    2. '
' → logprob: -2.4964706897735596
    3. '\n' → logprob: -4.246470928192139
    4. '    
' → logprob: -4.746470928192139
    5. '<|end|>' → logprob: -5.996470928192139
    6. ' for' → logprob: -6.246470928192139
    7. 'for' → logprob: -6.871470928192139
    8. '  
' → logprob: -7.246470928192139
    9. '```' → logprob: -7.246470928192139
    10. ' ' → logprob: -7.871470928192139

Token 40: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8126081824302673
    2. 'for' → logprob: -1.187608242034912
    3. ' for' → logprob: -1.562608242034912
    4. '\n' → logprob: -3.562608242034912
    5. '```' → logprob: -4.937608242034912
    6. '
' → logprob: -6.187608242034912
    7. '\' → logprob: -6.437608242034912
    8. '	for' → logprob: -6.812608242034912
    9. '  ' → logprob: -7.562608242034912
    10. ' ' → logprob: -8.187607765197754

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03799718618392944
    2. '_' → logprob: -3.537997245788574
    3. '1' → logprob: -5.537997245788574
    4. '=' → logprob: -5.912997245788574
    5. ' ' → logprob: -8.037997245788574
    6. ' _' → logprob: -8.412997245788574
    7. 's' → logprob: -8.412997245788574
    8. ')' → logprob: -8.662997245788574
    9. '_to' → logprob: -9.662997245788574
    10. '2' → logprob: -9.662997245788574

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14054718613624573
    2. ' ' → logprob: -2.265547275543213
    3. '1' → logprob: -4.765547275543213
    4. '-' → logprob: -5.390547275543213
    5. 'bis' → logprob: -5.390547275543213
    6. '2' → logprob: -5.640547275543213
    7. ' bis' → logprob: -6.265547275543213
    8. 'len' → logprob: -6.390547275543213
    9. ' -' → logprob: -6.765547275543213
    10. 'N' → logprob: -8.015546798706055

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06467172503471375
    2. 'bis' → logprob: -3.564671754837036
    3. '1' → logprob: -4.314671516418457
    4. '-' → logprob: -4.689671516418457
    5. 'len' → logprob: -4.814671516418457
    6. 'N' → logprob: -6.439671516418457
    7. '2' → logprob: -6.939671516418457
    8. ' ' → logprob: -7.814671516418457
    9. 'b' → logprob: -9.064671516418457
    10. ' bis' → logprob: -9.314671516418457

Token 44: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5582135915756226
    2. '   ' → logprob: -1.4332135915756226
    3. '<|end|>' → logprob: -2.433213710784912
    4. ' 
' → logprob: -3.558213710784912
    5. ' while' → logprob: -4.058213710784912
    6. '
' → logprob: -4.308213710784912
    7. '    ' → logprob: -4.558213710784912
    8. '  ' → logprob: -4.558213710784912
    9. '\n' → logprob: -5.308213710784912
    10. ' for' → logprob: -5.933213710784912

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8888123035430908
    2. '<|end|>' → logprob: -1.8888123035430908
    3. ' 
' → logprob: -2.263812303543091
    4. ' while' → logprob: -2.263812303543091
    5. ' ' → logprob: -2.388812303543091
    6. '   ' → logprob: -2.638812303543091
    7. ' for' → logprob: -3.888812303543091
    8. 'while' → logprob: -4.263812065124512
    9. '    
' → logprob: -5.138812065124512
    10. '\n' → logprob: -5.638812065124512

Token 46: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2969203591346741
    2. ' for' → logprob: -1.9219202995300293
    3. 'while' (adapté à ' while') → logprob: -2.7969202995300293
    4. ' while' → logprob: -3.6719202995300293
    5. '   ' → logprob: -4.421920299530029
    6. '
' → logprob: -5.171920299530029
    7. ' ' → logprob: -5.546920299530029
    8. 'n' → logprob: -7.921920299530029
    9. '```' → logprob: -8.296920776367188
    10. '\n' → logprob: -8.421920776367188

Token 47: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0029484592378139496
    2. 'idx' → logprob: -5.87794828414917
    3. ' answer' → logprob: -10.627948760986328
    4. ' True' → logprob: -10.627948760986328
    5. ' ' → logprob: -11.002948760986328
    6. ' len' → logprob: -11.002948760986328
    7. ' arr' → logprob: -11.377948760986328
    8. '	idx' → logprob: -11.377948760986328
    9. '(idx' → logprob: -11.627948760986328
    10. ' ans' → logprob: -11.877948760986328

Token 48: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.015820961445569992
    2. '<' → logprob: -4.3908209800720215
    3. ' ' → logprob: -6.0158209800720215
    4. '+' → logprob: -7.5158209800720215
    5. ' <=' → logprob: -9.265820503234863
    6. ' +' → logprob: -9.265820503234863
    7. '<len' → logprob: -9.640820503234863
    8. '[' → logprob: -11.140820503234863
    9. '   ' → logprob: -11.890820503234863
    10. '  ' → logprob: -12.140820503234863

Token 49: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4788493812084198
    2. 'N' → logprob: -0.9788494110107422
    3. ' len' → logprob: -5.978849411010742
    4. 'len' → logprob: -6.603849411010742
    5. ' ' → logprob: -7.103849411010742
    6. '   ' → logprob: -10.353849411010742
    7. '  ' → logprob: -12.041349411010742
    8. '	N' → logprob: -12.853849411010742
    9. 'n' → logprob: -13.103849411010742
    10. ' n' → logprob: -13.666349411010742

Token 50: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016920845955610275
    2. ':
' → logprob: -7.251692295074463
    3. ' :' → logprob: -7.501692295074463
    4. ' and' → logprob: -8.251691818237305
    5. '+' → logprob: -10.001691818237305
    6. '   ' → logprob: -10.251691818237305
    7. '+:' → logprob: -10.376691818237305
    8. '):' → logprob: -10.876691818237305
    9. 'and' → logprob: -11.751691818237305
    10. ' :
' → logprob: -12.501691818237305

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12733741104602814
    2. '2' → logprob: -2.1273374557495117
    3. '3' → logprob: -7.877337455749512
    4. ' ' → logprob: -10.627337455749512
    5. '   ' → logprob: -13.752337455749512
    6. '-' → logprob: -14.002337455749512
    7. '１' → logprob: -14.377337455749512
    8. '```' → logprob: -14.439837455749512
    9. '  ' → logprob: -15.502337455749512
    10. '`' → logprob: -15.627337455749512

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008454058319330215
    2. ':
' → logprob: -4.883453845977783
    3. '   ' → logprob: -7.883453845977783
    4. ' and' → logprob: -8.133454322814941
    5. '       ' → logprob: -9.883454322814941
    6. ' :' → logprob: -10.133454322814941
    7. ',' → logprob: -10.758454322814941
    8. '):' → logprob: -11.383454322814941
    9. ':

' → logprob: -11.508454322814941
    10. ' ' → logprob: -11.883454322814941

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21912448108196259
    2. '   ' → logprob: -1.844124436378479
    3. '    ' → logprob: -3.9691245555877686
    4. ' if' → logprob: -5.2191243171691895
    5. '```' → logprob: -5.7191243171691895
    6. ' idx' → logprob: -5.8441243171691895
    7. '    
' → logprob: -6.2191243171691895
    8. 'idx' → logprob: -6.8441243171691895
    9. ',' → logprob: -7.2191243171691895
    10. '        
' → logprob: -7.3441243171691895

Token 54: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7788159847259521
    2. ' if' → logprob: -1.4038159847259521
    3. '       ' → logprob: -2.403815984725952
    4. ' idx' → logprob: -2.653815984725952
    5. '    ' → logprob: -3.778815984725952
    6. ' next' → logprob: -4.403816223144531
    7. 'idx' → logprob: -4.653816223144531
    8. ' left' → logprob: -4.778816223144531
    9. ' i' → logprob: -4.778816223144531
    10. 'if' → logprob: -5.153816223144531

Token 55: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.09016498923301697
    2. ' i' → logprob: -3.34016489982605
    3. 'j' → logprob: -3.46516489982605
    4. ' next' → logprob: -5.090165138244629
    5. ' x' → logprob: -5.590165138244629
    6. 'i' → logprob: -6.965165138244629
    7. 'next' → logprob: -6.965165138244629
    8. ' nxt' → logprob: -6.965165138244629
    9. ' val' → logprob: -7.090165138244629
    10. ' value' → logprob: -7.090165138244629

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01627975143492222
    2. 'in' → logprob: -4.141279697418213
    3. ' ' → logprob: -8.516280174255371
    4. ',' → logprob: -12.016280174255371
    5. '   ' → logprob: -12.016280174255371
    6. '  ' → logprob: -12.016280174255371
    7. 'range' → logprob: -12.266280174255371
    8. '=' → logprob: -13.016280174255371
    9. ')' → logprob: -13.016280174255371
    10. '    ' → logprob: -13.141280174255371

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615872822701931
    2. ' range' → logprob: -4.758615970611572
    3. '	range' → logprob: -14.758615493774414
    4. ' ' → logprob: -14.883615493774414
    5. '(range' → logprob: -15.383615493774414
    6. '   ' → logprob: -15.633615493774414
    7. '  ' → logprob: -16.258615493774414
    8. 'rang' → logprob: -16.758615493774414
    9. ')' → logprob: -17.133615493774414
    10. ' xrange' → logprob: -17.633615493774414

Token 58: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00037383107701316476
    2. 'idx' → logprob: -8.500373840332031
    3. '(' → logprob: -9.500373840332031
    4. ' idx' → logprob: -9.625373840332031
    5. '(N' → logprob: -11.500373840332031
    6. ' (' → logprob: -11.500373840332031
    7. ',' → logprob: -12.875373840332031
    8. ')' → logprob: -13.125373840332031
    9. '   ' → logprob: -13.625373840332031
    10. '	idx' → logprob: -13.750373840332031

Token 59: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1603717803955078
    2. ' +' → logprob: -1.9103717803955078
    3. '   ' → logprob: -9.285371780395508
    4. ',' → logprob: -10.535371780395508
    5. ' ,' → logprob: -11.660371780395508
    6. ' ' → logprob: -12.285371780395508
    7. '+,' → logprob: -12.785371780395508
    8. ')+' → logprob: -13.035371780395508
    9. '    ' → logprob: -13.285371780395508
    10. '  ' → logprob: -13.285371780395508

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004150341730564833
    2. '2' → logprob: -5.504150390625
    3. ' ' → logprob: -9.754150390625
    4. 'N' → logprob: -11.504150390625
    5. '   ' → logprob: -13.629150390625
    6. ' N' → logprob: -15.129150390625
    7. '+' → logprob: -15.191650390625
    8. '0' → logprob: -15.316650390625
    9. '```' → logprob: -15.504150390625
    10. '  ' → logprob: -15.566650390625

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003522859886288643
    2. ',N' → logprob: -6.128522872924805
    3. ' ,' → logprob: -6.628522872924805
    4. '   ' → logprob: -12.003522872924805
    5. ',n' → logprob: -12.253522872924805
    6. ',len' → logprob: -13.628522872924805
    7. '       ' → logprob: -14.378522872924805
    8. 'N' → logprob: -14.753522872924805
    9. ' ' → logprob: -14.878522872924805
    10. ' N' → logprob: -15.128522872924805

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004100485239177942
    2. ' N' → logprob: -5.504100322723389
    3. '   ' → logprob: -10.754100799560547
    4. '	N' → logprob: -15.254100799560547
    5. 'len' → logprob: -15.379100799560547
    6. ' ' → logprob: -16.129100799560547
    7. '  ' → logprob: -17.504100799560547
    8. '       ' → logprob: -17.629100799560547
    9. '    ' → logprob: -17.629100799560547
    10. 'n' → logprob: -17.754100799560547

Token 63: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3491269648075104
    2. '):' → logprob: -1.224126935005188
    3. ':' → logprob: -8.724126815795898
    4. '):
' → logprob: -8.849126815795898
    5. '+' → logprob: -8.974126815795898
    6. '   ' → logprob: -9.099126815795898
    7. '       ' → logprob: -9.724126815795898
    8. ')' → logprob: -10.599126815795898
    9. ',' → logprob: -11.349126815795898
    10. '):

' → logprob: -11.599126815795898

Token 64: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6547837257385254
    2. ':' → logprob: -1.0297837257385254
    3. '           ' → logprob: -2.2797837257385254
    4. ',' → logprob: -5.029783725738525
    5. ':
' → logprob: -5.529783725738525
    6. '):' → logprob: -5.904783725738525
    7. ' if' → logprob: -6.404783725738525
    8. '<|end|>' → logprob: -6.654783725738525
    9. '):
' → logprob: -7.029783725738525
    10. ')' → logprob: -7.529783725738525

Token 65: ' tmp' (ID: 8919)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07687515020370483
    2. 'if' → logprob: -3.7018752098083496
    3. '               ' → logprob: -3.8268752098083496
    4. '           ' → logprob: -4.32687520980835
    5. '       ' → logprob: -5.32687520980835
    6. 'pos' → logprob: -7.07687520980835
    7. ' pos' → logprob: -7.07687520980835
    8. ' k' → logprob: -7.20187520980835
    9. ' x' → logprob: -7.20187520980835
    10. ' val' → logprob: -7.32687520980835

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03376971557736397
    2. '=' → logprob: -3.6587696075439453
    3. '_val' → logprob: -5.283769607543945
    4. '_' → logprob: -7.158769607543945
    5. '_idx' → logprob: -7.658769607543945
    6. '_sum' → logprob: -8.908769607543945
    7. ' ' → logprob: -9.033769607543945
    8. 'val' → logprob: -9.033769607543945
    9. '_value' → logprob: -9.158769607543945
    10. '   ' → logprob: -9.158769607543945

Token 67: ' bis' (ID: 7204)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.44808757305145264
    2. ' arr' → logprob: -1.5730875730514526
    3. 'bis' → logprob: -2.448087692260742
    4. ' bis' → logprob: -3.073087692260742
    5. 'abs' → logprob: -4.198087692260742
    6. ' abs' → logprob: -5.823087692260742
    7. '           ' → logprob: -7.448087692260742
    8. '   ' → logprob: -7.698087692260742
    9. ' ' → logprob: -8.323087692260742
    10. 'b' → logprob: -8.510587692260742

Token 68: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00010032468708232045
    2. 'ct' → logprob: -10.125100135803223
    3. 'e' → logprob: -11.000100135803223
    4. 'ectl' → logprob: -11.375100135803223
    5. '```' → logprob: -11.875100135803223
    6. 'sect' → logprob: -12.375100135803223
    7. '   ' → logprob: -12.625100135803223
    8. 'ects' → logprob: -12.625100135803223
    9. 'ected' → logprob: -13.250100135803223
    10. 'ection' → logprob: -13.625100135803223

Token 69: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.041151583194732666
    2. '_left' → logprob: -3.291151523590088
    3. '.' → logprob: -5.916151523590088
    4. '_right' → logprob: -8.041152000427246
    5. '.ins' → logprob: -10.041152000427246
    6. '.left' → logprob: -11.291152000427246
    7. '._' → logprob: -12.041152000427246
    8. '_' → logprob: -12.416152000427246
    9. ' .' → logprob: -12.541152000427246
    10. '_.' → logprob: -12.666152000427246

Token 70: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.317609578371048
    2. 'sect' → logprob: -1.3176095485687256
    3. 'ect' → logprob: -5.817609786987305
    4. 's' → logprob: -7.442609786987305
    5. 'n' → logprob: -9.067609786987305
    6. 'is' → logprob: -9.317609786987305
    7. 'spect' → logprob: -9.442609786987305
    8. '```' → logprob: -9.692609786987305
    9. '`' → logprob: -9.942609786987305
    10. 'x' → logprob: -10.192609786987305

Token 71: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0005556552205234766
    2. 'ct' → logprob: -7.500555515289307
    3. 'sect' → logprob: -13.875555992126465
    4. 'e' → logprob: -14.750555992126465
    5. '```' → logprob: -15.500555992126465
    6. '   ' → logprob: -15.750555992126465
    7. 'ectl' → logprob: -15.750555992126465
    8. 'ects' → logprob: -16.12555503845215
    9. 'c' → logprob: -16.75055503845215
    10. '<' → logprob: -16.87555503845215

Token 72: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.019391346722841263
    2. '_right' → logprob: -4.2693915367126465
    3. '(arr' → logprob: -5.2693915367126465
    4. 'arr' → logprob: -10.644391059875488
    5. 'left' → logprob: -10.769391059875488
    6. 'Left' → logprob: -11.769391059875488
    7. ' arr' → logprob: -12.769391059875488
    8. '[arr' → logprob: -13.019391059875488
    9. '_arr' → logprob: -13.269391059875488
    10. '<arr' → logprob: -13.394391059875488

Token 73: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. 'arr' → logprob: -13.375077247619629
    4. '(array' → logprob: -15.250077247619629
    5. '(
' → logprob: -15.375077247619629
    6. '(ans' → logprob: -15.750077247619629
    7. ' (' → logprob: -16.500078201293945
    8. '(answer' → logprob: -16.500078201293945
    9. '[arr' → logprob: -16.500078201293945
    10. '<arr' → logprob: -16.500078201293945

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03619455546140671
    2. '(arr' → logprob: -3.9111945629119873
    3. ',(' → logprob: -4.911194324493408
    4. '(' → logprob: -5.536194324493408
    5. ' ,' → logprob: -6.286194324493408
    6. ',[' → logprob: -6.661194324493408
    7. '),(' → logprob: -8.536194801330566
    8. '   ' → logprob: -9.036194801330566
    9. ',j' → logprob: -9.036194801330566
    10. ' (' → logprob: -9.536194801330566

Token 75: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.005957360379397869
    2. ' arr' → logprob: -6.130957126617432
    3. '(arr' → logprob: -6.255957126617432
    4. '-arr' → logprob: -6.505957126617432
    5. '2' → logprob: -9.00595760345459
    6. '[arr' → logprob: -9.88095760345459
    7. '	arr' → logprob: -10.25595760345459
    8. '-' → logprob: -10.75595760345459
    9. '<arr' → logprob: -10.75595760345459
    10. '   ' → logprob: -11.00595760345459

Token 76: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.6328425407409668
    2. '[j' → logprob: -0.7578425407409668
    3. '[' → logprob: -9.507843017578125
    4. 'idx' → logprob: -10.132843017578125
    5. '[arr' → logprob: -10.632843017578125
    6. '[i' → logprob: -11.007843017578125
    7. '[tmp' → logprob: -11.382843017578125
    8. '[index' → logprob: -11.507843017578125
    9. 'j' → logprob: -11.882843017578125
    10. ')' → logprob: -12.257843017578125

Token 77: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20852066576480865
    2. ']+' → logprob: -1.7085206508636475
    3. ' +' → logprob: -5.958520889282227
    4. '[' → logprob: -6.083520889282227
    5. '+' → logprob: -6.833520889282227
    6. ' ]' → logprob: -7.333520889282227
    7. '[j' → logprob: -9.083520889282227
    8. ' ' → logprob: -9.333520889282227
    9. '   ' → logprob: -9.833520889282227
    10. ']*' → logprob: -10.083520889282227

Token 78: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0036596914287656546
    2. ' arr' → logprob: -5.628659725189209
    3. '(arr' → logprob: -11.00365924835205
    4. ' ' → logprob: -11.87865924835205
    5. '	arr' → logprob: -12.00365924835205
    6. '  ' → logprob: -12.62865924835205
    7. '   ' → logprob: -12.62865924835205
    8. '[arr' → logprob: -12.87865924835205
    9. ')' → logprob: -13.00365924835205
    10. '2' → logprob: -13.37865924835205

Token 79: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008056987426243722
    2. '[' → logprob: -7.250805854797363
    3. '[idx' → logprob: -9.875805854797363
    4. '][' → logprob: -11.625805854797363
    5. ')[' → logprob: -11.625805854797363
    6. ' [' → logprob: -12.125805854797363
    7. ')' → logprob: -12.875805854797363
    8. '   ' → logprob: -12.875805854797363
    9. '[i' → logprob: -13.000805854797363
    10. '[arr' → logprob: -13.000805854797363

Token 80: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.46632254123687744
    2. '))' → logprob: -2.091322422027588
    3. ')' → logprob: -2.216322422027588
    4. '[idx' → logprob: -3.341322422027588
    5. '[' → logprob: -3.591322422027588
    6. '])
' → logprob: -3.966322422027588
    7. '[j' → logprob: -4.591322422027588
    8. '))
' → logprob: -4.841322422027588
    9. ']' → logprob: -4.841322422027588
    10. ')+' → logprob: -5.216322422027588

Token 81: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08944058418273926
    2. '       ' → logprob: -3.0894405841827393
    3. ')' → logprob: -4.58944034576416
    4. '   ' → logprob: -5.21444034576416
    5. '<|end|>' → logprob: -5.21444034576416
    6. ' ' → logprob: -5.96444034576416
    7. ')
' → logprob: -5.96444034576416
    8. ' if' → logprob: -5.96444034576416
    9. '            
' → logprob: -6.46444034576416
    10. ',' → logprob: -6.83944034576416

Token 82: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18100762367248535
    2. '(j' → logprob: -2.1810076236724854
    3. 'j' → logprob: -3.4310076236724854
    4. ' (' → logprob: -4.306007385253906
    5. ' j' → logprob: -5.556007385253906
    6. ' ' → logprob: -6.306007385253906
    7. '(' → logprob: -7.556007385253906
    8. 'idx' → logprob: -8.681007385253906
    9. '(idx' → logprob: -8.681007385253906
    10. '0' → logprob: -9.681007385253906

Token 83: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006018148735165596
    2. ' j' → logprob: -5.631018161773682
    3. '(j' → logprob: -6.881018161773682
    4. '1' → logprob: -7.006018161773682
    5. ' (' → logprob: -8.631017684936523
    6. 'idx' → logprob: -8.631017684936523
    7. ')' → logprob: -10.131017684936523
    8. '   ' → logprob: -10.881017684936523
    9. '(' → logprob: -11.256017684936523
    10. '	j' → logprob: -11.381017684936523

Token 84: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20217977464199066
    2. ' +' → logprob: -1.7021797895431519
    3. ')' → logprob: -8.077179908752441
    4. '1' → logprob: -8.327179908752441
    5. '<|end|>' → logprob: -8.827179908752441
    6. '+)' → logprob: -10.702179908752441
    7. '<|end|>' → logprob: -11.577179908752441
    8. '   ' → logprob: -11.952179908752441
    9. ' ' → logprob: -12.202179908752441
    10. ' )' → logprob: -12.577179908752441

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -15.250015258789062
    4. '0' → logprob: -15.875015258789062
    5. '<|end|>' → logprob: -16.125015258789062
    6. '   ' → logprob: -17.000015258789062
    7. '+' → logprob: -17.500015258789062
    8. '```' → logprob: -17.625015258789062
    9. '  ' → logprob: -18.125015258789062
    10. '2' → logprob: -18.375015258789062

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04905863106250763
    2. ')
' → logprob: -3.049058675765991
    3. '       ' → logprob: -9.29905891418457
    4. '<|end|>' → logprob: -9.29905891418457
    5. ' )' → logprob: -9.54905891418457
    6. '           ' → logprob: -10.04905891418457
    7. ')>' → logprob: -10.17405891418457
    8. ')
' → logprob: -10.29905891418457
    9. 'if' → logprob: -10.67405891418457
    10. ' if' → logprob: -10.92405891418457

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017708084487821907
    2. '<|end|>' → logprob: -9.125177383422852
    3. '       ' → logprob: -10.500177383422852
    4. '
' → logprob: -11.250177383422852
    5. '```' → logprob: -11.750177383422852
    6. '<|end|>' → logprob: -12.000177383422852
    7. ')' → logprob: -13.125177383422852
    8. '   ' → logprob: -13.250177383422852
    9. '		' → logprob: -13.500177383422852
    10. '            
' → logprob: -13.500177383422852

Token 88: ' answer' (ID: 6052)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02719120681285858
    2. 'answer' (adapté à ' answer') → logprob: -3.652191162109375
    3. ' answer' → logprob: -7.402191162109375
    4. '       ' → logprob: -8.902191162109375
    5. ' ' → logprob: -10.652191162109375
    6. '0' → logprob: -10.902191162109375
    7. '   ' → logprob: -11.027191162109375
    8. '            
' → logprob: -11.152191162109375
    9. 'if' → logprob: -11.402191162109375
    10. '```' → logprob: -11.527191162109375

Token 89: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008632530458271503
    2. '+=' → logprob: -4.758632659912109
    3. '+' → logprob: -11.50863265991211
    4. ' +' → logprob: -12.38363265991211
    5. '    ' → logprob: -13.50863265991211
    6. '   ' → logprob: -13.88363265991211
    7. ' =' → logprob: -14.00863265991211
    8. ' ' → logprob: -15.63363265991211
    9. '=' → logprob: -16.00863265991211
    10. ']+=' → logprob: -16.00863265991211

Token 90: ' answer' (ID: 6052)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.12756650149822235
    2. 'max' → logprob: -2.1275665760040283
    3. ' answer' → logprob: -8.50256633758545
    4. ' tmp' → logprob: -8.75256633758545
    5. '+' → logprob: -9.50256633758545
    6. 'answer' → logprob: -9.62756633758545
    7. 'tmp' → logprob: -9.75256633758545
    8. ' ' → logprob: -10.62756633758545
    9. '(max' → logprob: -11.37756633758545
    10. '	max' → logprob: -11.50256633758545

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151231110095978
    2. ' +' → logprob: -4.01815128326416
    3. ' ' → logprob: -15.14315128326416
    4. '+=' → logprob: -15.14315128326416
    5. '-' → logprob: -16.393150329589844
    6. '>' → logprob: -16.518150329589844
    7. '+
' → logprob: -16.643150329589844
    8. '+r' → logprob: -16.643150329589844
    9. '+t' → logprob: -16.643150329589844
    10. '   ' → logprob: -17.018150329589844

Token 92: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0067204674705863
    2. ' tmp' → logprob: -5.006720542907715
    3. 'max' → logprob: -12.506720542907715
    4. '	tmp' → logprob: -15.006720542907715
    5. '           ' → logprob: -15.381720542907715
    6. ' max' → logprob: -15.381720542907715
    7. '/tmp' → logprob: -15.506720542907715
    8. '(tmp' → logprob: -16.0067195892334
    9. ' ' → logprob: -16.1317195892334
    10. '$tmp' → logprob: -16.2567195892334

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09073713421821594
    2. '       ' → logprob: -2.5907371044158936
    3. '
' → logprob: -5.465737342834473
    4. '\n' → logprob: -5.590737342834473
    5. '        
' → logprob: -6.215737342834473
    6. '   ' → logprob: -7.590737342834473
    7. '    
' → logprob: -7.590737342834473
    8. '  
' → logprob: -8.840737342834473
    9. '<|end|>' → logprob: -8.965737342834473
    10. '            
' → logprob: -9.090737342834473

Token 94: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3182905614376068
    2. '       ' → logprob: -1.3182905912399292
    3. '<|end|>' → logprob: -6.443290710449219
    4. '   ' → logprob: -6.693290710449219
    5. '        
' → logprob: -6.693290710449219
    6. '
' → logprob: -8.068290710449219
    7. '    
' → logprob: -8.193290710449219
    8. '\n' → logprob: -9.443290710449219
    9. '<|end|>' → logprob: -10.193290710449219
    10. '  
' → logprob: -10.318290710449219

Token 95: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3898342251777649
    2. '   ' → logprob: -1.1398341655731201
    3. 'idx' (adapté à ' idx') → logprob: -5.889834403991699
    4. ' idx' → logprob: -9.1398344039917
    5. '	   ' → logprob: -11.2648344039917
    6. '	idx' → logprob: -11.3898344039917
    7. 'index' → logprob: -11.5148344039917
    8. '	' → logprob: -11.6398344039917
    9. '```' → logprob: -11.6398344039917
    10. '           ' → logprob: -11.6398344039917

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7643071413040161
    2. ' +=' → logprob: -1.0143071413040161
    3. '+' → logprob: -1.7643071413040161
    4. '=' → logprob: -8.264307022094727
    5. ' +' → logprob: -9.139307022094727
    6. '++' → logprob: -11.889307022094727
    7. ' ' → logprob: -12.014307022094727
    8. '1' → logprob: -13.139307022094727
    9. ' =' → logprob: -14.014307022094727
    10. '+='' → logprob: -14.264307022094727

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.750076293945312
    4. '  ' → logprob: -16.750076293945312
    5. '       ' → logprob: -18.375076293945312
    6. '```' → logprob: -18.500076293945312
    7. '0' → logprob: -18.625076293945312
    8. '    ' → logprob: -18.625076293945312
    9. '１' → logprob: -18.812576293945312
    10. '+' → logprob: -19.187576293945312

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.93751049041748
    4. '```' → logprob: -16.000011444091797
    5. '  ' → logprob: -16.937511444091797
    6. '0' → logprob: -17.000011444091797
    7. '１' → logprob: -17.375011444091797
    8. '2' → logprob: -17.625011444091797
    9. '۱' → logprob: -17.812511444091797
    10. '<|end|>' → logprob: -17.812511444091797

Token 99: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12034919112920761
    2. '   ' → logprob: -2.245349168777466
    3. 'return' → logprob: -5.495349407196045
    4. '<|end|>' → logprob: -5.995349407196045
    5. '```' → logprob: -7.620349407196045
    6. ' print' → logprob: -8.995348930358887
    7. ')' → logprob: -9.620348930358887
    8. 'if' → logprob: -10.120348930358887
    9. '#print' → logprob: -10.370348930358887
    10. '#' → logprob: -10.620348930358887

Token 102: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.3873174488544464
    2. '(' → logprob: -1.137317419052124
    3. '()' → logprob: -8.012317657470703
    4. '(ans' → logprob: -9.512317657470703
    5. ' (' → logprob: -11.137317657470703
    6. 'answer' → logprob: -11.262317657470703
    7. '('' → logprob: -12.887317657470703
    8. '(
' → logprob: -13.512317657470703
    9. '(

' → logprob: -13.637317657470703
    10. '("("' → logprob: -13.887317657470703

Token 103: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -14.00000286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')`' → logprob: -15.50000286102295
    5. '`)' → logprob: -15.50000286102295
    6. '))' → logprob: -15.75000286102295
    7. '()' → logprob: -16.375001907348633
    8. '')' → logprob: -16.875001907348633
    9. '())' → logprob: -17.125001907348633
    10. '）' → logprob: -17.625001907348633

Token 104: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5285709500312805
    2. '<|end|>' → logprob: -0.9035709500312805
    3. '```' → logprob: -5.528571128845215
    4. '#' → logprob: -7.653571128845215
    5. '<|end|>' → logprob: -8.153571128845215
    6. '}' → logprob: -8.528571128845215
    7. '
' → logprob: -8.528571128845215
    8. ']' → logprob: -9.528571128845215
    9. '[' → logprob: -10.403571128845215
    10. '+' → logprob: -11.028571128845215

Token 105: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003404687449801713
    2. '__' → logprob: -8.000340461730957
    3. ' _' → logprob: -13.125340461730957
    4. ' ' → logprob: -13.375340461730957
    5. ' ' → logprob: -13.625340461730957
    6. '_' → logprob: -15.625340461730957
    7. '_name' → logprob: -16.125341415405273
    8. ' ___' → logprob: -17.750341415405273
    9. ' name' → logprob: -18.125341415405273
    10. 'name' → logprob: -19.000341415405273

Token 106: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008925003930926323
    2. ' ==' → logprob: -4.883924961090088
    3. '==' → logprob: -7.383924961090088
    4. ' __' → logprob: -7.758924961090088
    5. '__.__' → logprob: -8.758925437927246
    6. '__.' → logprob: -9.883925437927246
    7. '.__' → logprob: -11.258925437927246
    8. '__["' → logprob: -11.508925437927246
    9. '_' → logprob: -12.133925437927246
    10. '__[' → logprob: -12.383925437927246

Token 107: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001462107611587271
    2. '==' → logprob: -9.50014591217041
    3. ' ==' → logprob: -10.37514591217041
    4. '__.__' → logprob: -10.75014591217041
    5. '=="' → logprob: -11.25014591217041
    6. '___' → logprob: -13.50014591217041
    7. '__["' → logprob: -13.87514591217041
    8. '__.' → logprob: -14.12514591217041
    9. '=='' → logprob: -14.62514591217041
    10. ' __' → logprob: -14.87514591217041

Token 108: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03907139226794243
    2. ' ==' → logprob: -3.4140713214874268
    3. '==' → logprob: -5.914071559906006
    4. '.__' → logprob: -6.789071559906006
    5. '__.__' → logprob: -7.039071559906006
    6. '=="' → logprob: -8.039071083068848
    7. '.' → logprob: -9.289071083068848
    8. '__.' → logprob: -9.414071083068848
    9. '__["' → logprob: -9.539071083068848
    10. '__":
' → logprob: -10.664071083068848

Token 109: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5763974189758301
    2. '"' → logprob: -0.8263974189758301
    3. '__' → logprob: -8.576396942138672
    4. ' "__' → logprob: -8.576396942138672
    5. ' '__' → logprob: -9.451396942138672
    6. '"user' → logprob: -14.451396942138672
    7. '('__' → logprob: -15.076396942138672
    8. ''name' → logprob: -15.576396942138672
    9. ''s' → logprob: -15.701396942138672
    10. ''user' → logprob: -15.701396942138672

Token 110: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003122936934232712
    2. 'py' → logprob: -6.878122806549072
    3. '_main' → logprob: -6.878122806549072
    4. 'name' → logprob: -7.003122806549072
    5. '__' → logprob: -9.50312328338623
    6. ' main' → logprob: -11.12812328338623
    7. 'm' → logprob: -11.62812328338623
    8. 'code' → logprob: -11.87812328338623
    9. 'mp' → logprob: -12.25312328338623
    10. 'guard' → logprob: -12.50312328338623

Token 111: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.10041552782058716
    2. '__' → logprob: -2.3504154682159424
    3. '__":
' → logprob: -9.350415229797363
    4. '__.' → logprob: -9.475415229797363
    5. '__:' → logprob: -10.100415229797363
    6. '__.__' → logprob: -13.350415229797363
    7. '__('' → logprob: -13.850415229797363
    8. '__
' → logprob: -14.850415229797363
    9. '('__' → logprob: -15.225415229797363
    10. '_' → logprob: -15.850415229797363

Token 112: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13817426562309265
    2. 'main' → logprob: -2.388174295425415
    3. '   ' → logprob: -3.388174295425415
    4. '	main' → logprob: -6.263174057006836
    5. '    
' → logprob: -6.513174057006836
    6. ' 
' → logprob: -10.513174057006836
    7. '  
' → logprob: -10.763174057006836
    8. '(main' → logprob: -11.013174057006836
    9. '_main' → logprob: -12.013174057006836
    10. '
' → logprob: -12.138174057006836

Token 113: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.7610454708337784e-05
    2. ' main' → logprob: -10.500027656555176
    3. '	main' → logprob: -18.12502670288086
    4. '   ' → logprob: -18.87502670288086
    5. 'import' → logprob: -22.00002670288086
    6. '_main' → logprob: -24.25002670288086
    7. ' ' → logprob: -24.37502670288086
    8. '  ' → logprob: -24.50002670288086
    9. '.main' → logprob: -24.75002670288086
    10. '(main' → logprob: -25.25002670288086

Token 114: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 47.32%
Précision adaptée (1ère position): 49.11%
Précision (top 10): 82.14%
================================================================================
