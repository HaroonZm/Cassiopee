================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A_B_T = input().split()
A = int(A_B_T[0])
B = int(A_B_T[1])
T = int(A_B_T[2])
result = int(((T + 0.5) // A) * B)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: '_B' (ID: 3201)
  → Token d'amorce (pas de prédiction)

Token 2: '_T' (ID: 2154)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.509239673614502
    2. '[' → logprob: -1.634239673614502
    3. '_' → logprob: -2.384239673614502
    4. '=' → logprob: -3.384239673614502
    5. ' =' → logprob: -3.884239673614502
    6. 'A' → logprob: -4.634239673614502
    7. '+' → logprob: -4.634239673614502
    8. '(' → logprob: -5.009239673614502
    9. ':' → logprob: -5.509239673614502
    10. ')' → logprob: -5.634239673614502

Token 4: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8547335267066956
    2. ' ' → logprob: -1.6047334671020508
    3. '[' → logprob: -2.229733467102051
    4. ' [' → logprob: -2.729733467102051
    5. ' {}' → logprob: -2.979733467102051
    6. '"' → logprob: -3.479733467102051
    7. ' "' → logprob: -3.604733467102051
    8. '[]' → logprob: -3.604733467102051
    9. '(' → logprob: -4.854733467102051
    10. ''' → logprob: -4.854733467102051

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0062175593338906765
    2. ''' → logprob: -5.8812174797058105
    3. '('' → logprob: -6.2562174797058105
    4. '[' → logprob: -7.5062174797058105
    5. '"' → logprob: -8.131217956542969
    6. '("("' → logprob: -8.381217956542969
    7. '(
' → logprob: -8.881217956542969
    8. '.' → logprob: -9.006217956542969
    9. '()' → logprob: -10.256217956542969
    10. '('.')' → logprob: -10.881217956542969

Token 6: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32934024930000305
    2. '+' → logprob: -1.5793402194976807
    3. '.strip' → logprob: -3.0793402194976807
    4. '*' → logprob: -4.82934045791626
    5. '.split' → logprob: -5.70434045791626
    6. '[' → logprob: -5.82934045791626
    7. ' ' → logprob: -5.95434045791626
    8. '_' → logprob: -6.32934045791626
    9. '(' → logprob: -6.45434045791626
    10. '**' → logprob: -6.82934045791626

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003308777464553714
    2. '()' → logprob: -5.7533087730407715
    3. '(

' → logprob: -10.37830924987793
    4. '(
' → logprob: -10.87830924987793
    5. '('' → logprob: -11.12830924987793
    6. '"' → logprob: -11.25330924987793
    7. '("("' → logprob: -11.25330924987793
    8. '```' → logprob: -11.62830924987793
    9. '`' → logprob: -11.75330924987793
    10. ' (' → logprob: -12.50330924987793

Token 8: 'A' (ID: 32)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014950293116271496
    2. 'print' → logprob: -4.889950275421143
    3. '#' → logprob: -6.139950275421143
    4. '[
' → logprob: -6.639950275421143
    5. '.' → logprob: -6.764950275421143
    6. 'for' → logprob: -7.764950275421143
    7. '=' → logprob: -7.764950275421143
    8. '```' → logprob: -7.889950275421143
    9. '\[' → logprob: -8.0149507522583
    10. '_' → logprob: -8.5149507522583

Token 9: ' =' (ID: 314)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.05227703973650932
    2. '_' → logprob: -3.302277088165283
    3. '[' → logprob: -4.302277088165283
    4. '[_' → logprob: -7.677277088165283
    5. '_[' → logprob: -10.177276611328125
    6. '_b' → logprob: -11.052276611328125
    7. '_A' → logprob: -11.052276611328125
    8. ' _' → logprob: -11.552276611328125
    9. '```' → logprob: -11.677276611328125
    10. '[]' → logprob: -11.802276611328125

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10044529289007187
    2. ' int' → logprob: -2.35044527053833
    3. 'A' → logprob: -8.850445747375488
    4. ' A' → logprob: -9.725445747375488
    5. 'float' → logprob: -10.850445747375488
    6. ' ' → logprob: -11.975445747375488
    7. 'B' → logprob: -12.975445747375488
    8. '[int' → logprob: -13.100445747375488
    9. ' float' → logprob: -13.350445747375488
    10. '(int' → logprob: -13.850445747375488

Token 11: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521292269229889
    2. '(A' → logprob: -1.5021291971206665
    3. 'A' → logprob: -9.252129554748535
    4. '('' → logprob: -10.252129554748535
    5. '(
' → logprob: -10.377129554748535
    6. '(B' → logprob: -11.377129554748535
    7. '(

' → logprob: -11.877129554748535
    8. '_A' → logprob: -12.252129554748535
    9. '(`' → logprob: -12.877129554748535
    10. '("("' → logprob: -13.127129554748535

Token 12: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0007786541245877743
    2. '[' → logprob: -7.625778675079346
    3. ')' → logprob: -9.000778198242188
    4. '_A' → logprob: -9.625778198242188
    5. '[_' → logprob: -9.750778198242188
    6. ')_' → logprob: -10.875778198242188
    7. '[B' → logprob: -12.250778198242188
    8. '(B' → logprob: -12.375778198242188
    9. 'B' → logprob: -13.000778198242188
    10. '(' → logprob: -13.125778198242188

Token 13: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.005113630089908838
    2. '_B' → logprob: -5.75511360168457
    3. '[' → logprob: -6.75511360168457
    4. '[_' → logprob: -7.88011360168457
    5. ')' → logprob: -8.63011360168457
    6. ')_' → logprob: -9.38011360168457
    7. '_' → logprob: -9.50511360168457
    8. '[T' → logprob: -11.38011360168457
    9. '_[' → logprob: -11.50511360168457
    10. '_S' → logprob: -11.88011360168457

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.372916686814278e-05
    2. '[A' → logprob: -9.8750638961792
    3. ')' → logprob: -11.3750638961792
    4. '[
' → logprob: -15.2500638961792
    5. 'A' → logprob: -16.375062942504883
    6. '[B' → logprob: -16.500062942504883
    7. ' [' → logprob: -16.625062942504883
    8. '```' → logprob: -16.875062942504883
    9. '[T' → logprob: -17.125062942504883
    10. '\[' → logprob: -17.250062942504883

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '1' → logprob: -18.375
    4. ''' → logprob: -18.875
    5. ')' → logprob: -19.875
    6. '۰' → logprob: -20.375
    7. '```' → logprob: -20.75
    8. '"' → logprob: -21.625
    9. '０' → logprob: -21.875
    10. '   ' → logprob: -22.125

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003049127757549286
    2. '])' → logprob: -6.003048896789551
    3. ']' → logprob: -7.628048896789551
    4. ')]' → logprob: -10.25304889678955
    5. ')])' → logprob: -10.62804889678955
    6. ' )' → logprob: -11.75304889678955
    7. ')
' → logprob: -12.50304889678955
    8. '`)' → logprob: -12.87804889678955
    9. '）' → logprob: -13.12804889678955
    10. ''])' → logprob: -13.37804889678955

Token 17: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06656434386968613
    2. ' ' → logprob: -3.4415643215179443
    3. ' B' → logprob: -4.566564559936523
    4. '<|end|>' → logprob: -4.566564559936523
    5. '_' → logprob: -6.066564559936523
    6. 'A' → logprob: -6.316564559936523
    7. ')' → logprob: -6.691564559936523
    8. ',' → logprob: -6.816564559936523
    9. '```' → logprob: -6.941564559936523
    10. ' 
' → logprob: -7.316564559936523

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03857165202498436
    2. '_B' → logprob: -3.91357159614563
    3. ' =' → logprob: -5.288571834564209
    4. '[' → logprob: -5.288571834564209
    5. ')' → logprob: -5.413571834564209
    6. '<|end|>' → logprob: -7.163571834564209
    7. '=' → logprob: -7.288571834564209
    8. '_T' → logprob: -8.03857135772705
    9. ' _' → logprob: -8.66357135772705
    10. '_A' → logprob: -8.78857135772705

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061969030648469925
    2. ' int' → logprob: -2.811969041824341
    3. ' A' → logprob: -15.061968803405762
    4. '=int' → logprob: -15.186968803405762
    5. 'A' → logprob: -15.311968803405762
    6. '(int' → logprob: -15.561968803405762
    7. ' ' → logprob: -15.561968803405762
    8. '	int' → logprob: -17.061969757080078
    9. '<int' → logprob: -17.061969757080078
    10. '  ' → logprob: -18.061969757080078

Token 20: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.25217404961586
    2. '(' → logprob: -1.5021740198135376
    3. '(B' → logprob: -8.377174377441406
    4. ' (' → logprob: -12.627174377441406
    5. '('' → logprob: -12.627174377441406
    6. '(

' → logprob: -12.752174377441406
    7. '(
' → logprob: -12.752174377441406
    8. '("("' → logprob: -14.002174377441406
    9. '((' → logprob: -15.002174377441406
    10. '(a' → logprob: -15.127174377441406

Token 21: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.750005722045898
    3. '_' → logprob: -14.125005722045898
    4. ')_' → logprob: -14.750005722045898
    5. '[_' → logprob: -14.750005722045898
    6. ')' → logprob: -15.000005722045898
    7. ' _' → logprob: -15.125005722045898
    8. '_A' → logprob: -15.375005722045898
    9. '```' → logprob: -15.375005722045898
    10. ']_' → logprob: -15.750005722045898

Token 22: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.003593302331864834
    2. '[' → logprob: -5.753593444824219
    3. '_B' → logprob: -8.253593444824219
    4. '[_' → logprob: -9.253593444824219
    5. '[T' → logprob: -10.003593444824219
    6. '_F' → logprob: -13.003593444824219
    7. ')_' → logprob: -13.003593444824219
    8. '_[' → logprob: -13.378593444824219
    9. ')' → logprob: -13.753593444824219
    10. '```' → logprob: -14.003593444824219

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.125000953674316
    3. ')' → logprob: -15.875000953674316
    4. '[
' → logprob: -16.0
    5. '1' → logprob: -16.125
    6. ']' → logprob: -17.5
    7. '```' → logprob: -17.625
    8. '(' → logprob: -18.125
    9. '][' → logprob: -18.625
    10. '])' → logprob: -18.875

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '0' → logprob: -13.250004768371582
    3. ' ' → logprob: -13.250004768371582
    4. '])' → logprob: -13.875004768371582
    5. ']' → logprob: -15.500004768371582
    6. '2' → logprob: -16.5000057220459
    7. '```' → logprob: -16.5000057220459
    8. ')' → logprob: -17.1875057220459
    9. '   ' → logprob: -17.4375057220459
    10. '' → logprob: -18.1875057220459

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001394161517964676
    2. '])' → logprob: -9.250139236450195
    3. ']' → logprob: -10.375139236450195
    4. '）' → logprob: -12.750139236450195
    5. ')
' → logprob: -13.000139236450195
    6. '[' → logprob: -13.000139236450195
    7. ')])' → logprob: -13.750139236450195
    8. '`)' → logprob: -14.000139236450195
    9. '))' → logprob: -14.375139236450195
    10. ')]' → logprob: -14.750139236450195

Token 26: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.002995885908603668
    2. 'C' → logprob: -6.62799596786499
    3. '\' → logprob: -7.87799596786499
    4. '_T' → logprob: -8.002995491027832
    5. ' T' → logprob: -8.127995491027832
    6. '```' → logprob: -9.002995491027832
    7. '_' → logprob: -9.127995491027832
    8. 'A' → logprob: -9.627995491027832
    9. '`' → logprob: -9.752995491027832
    10. '\n' → logprob: -9.877995491027832

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23108536005020142
    2. '=' → logprob: -2.1060853004455566
    3. ' ' → logprob: -2.8560853004455566
    4. '_' → logprob: -4.106085300445557
    5. ')' → logprob: -5.106085300445557
    6. '.' → logprob: -6.731085300445557
    7. '<|end|>' → logprob: -6.856085300445557
    8. '  ' → logprob: -7.481085300445557
    9. '[' → logprob: -7.481085300445557
    10. 'space' → logprob: -7.981085300445557

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02976900152862072
    2. 'int' → logprob: -3.529768943786621
    3. ' ' → logprob: -11.029768943786621
    4. '=int' → logprob: -14.029768943786621
    5. '(int' → logprob: -15.029768943786621
    6. ' ' → logprob: -15.029768943786621
    7. '[int' → logprob: -15.279768943786621
    8. ' in' → logprob: -15.779768943786621
    9. '<int' → logprob: -16.029769897460938
    10. ' 
' → logprob: -16.279769897460938

Token 29: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6937531232833862
    2. '(A' → logprob: -0.6937531232833862
    3. '(T' → logprob: -7.943753242492676
    4. '(
' → logprob: -8.943753242492676
    5. '(B' → logprob: -10.068753242492676
    6. '('' → logprob: -10.818753242492676
    7. '("("' → logprob: -11.068753242492676
    8. '()' → logprob: -11.568753242492676
    9. '(

' → logprob: -11.693753242492676
    10. '((' → logprob: -12.193753242492676

Token 30: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.1823359578847885
    2. ')' → logprob: -1.9323359727859497
    3. '[' → logprob: -4.30733585357666
    4. '])' → logprob: -5.80733585357666
    5. '_T' → logprob: -6.43233585357666
    6. ')_' → logprob: -6.80733585357666
    7. '_' → logprob: -7.30733585357666
    8. ']' → logprob: -7.30733585357666
    9. '_)' → logprob: -7.68233585357666
    10. ')[' → logprob: -8.43233585357666

Token 31: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.011110070161521435
    2. '[' → logprob: -4.511110305786133
    3. ')' → logprob: -10.261110305786133
    4. '_B' → logprob: -12.136110305786133
    5. 'T' → logprob: -12.636110305786133
    6. '[_' → logprob: -12.761110305786133
    7. '[T' → logprob: -13.011110305786133
    8. '_' → logprob: -13.261110305786133
    9. ']' → logprob: -13.386110305786133
    10. '```' → logprob: -13.386110305786133

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013386933133006096
    2. ')' → logprob: -6.626338481903076
    3. ')[' → logprob: -12.001338958740234
    4. '0' → logprob: -12.876338958740234
    5. '])' → logprob: -13.501338958740234
    6. ']' → logprob: -14.251338958740234
    7. '2' → logprob: -14.501338958740234
    8. '1' → logprob: -15.126338958740234
    9. '[]' → logprob: -15.251338958740234
    10. '[
' → logprob: -15.376338958740234

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -14.000001907348633
    3. '])' → logprob: -14.125001907348633
    4. '0' → logprob: -15.000001907348633
    5. '-' → logprob: -16.500001907348633
    6. '3' → logprob: -17.000001907348633
    7. '２' → logprob: -17.125001907348633
    8. ')' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '1' → logprob: -17.500001907348633

Token 34: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.00000286102295
    3. '')' → logprob: -17.000001907348633
    4. '）' → logprob: -17.125001907348633
    5. '`)' → logprob: -17.250001907348633
    6. ' )' → logprob: -17.250001907348633
    7. ']' → logprob: -18.375001907348633
    8. '```' → logprob: -19.000001907348633
    9. '))' → logprob: -19.125001907348633
    10. '#' → logprob: -19.125001907348633

Token 35: 'result' (ID: 2521)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7705517411231995
    2. 'count' → logprob: -1.6455516815185547
    3. 'answer' → logprob: -2.5205516815185547
    4. 'result' → logprob: -3.1455516815185547
    5. 'n' → logprob: -3.5205516815185547
    6. 'ans' → logprob: -3.7705516815185547
    7. 'for' → logprob: -3.7705516815185547
    8. '```' → logprob: -4.020551681518555
    9. 'cnt' → logprob: -4.020551681518555
    10. 'total' → logprob: -4.020551681518555

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39901289343833923
    2. '=' → logprob: -1.1490129232406616
    3. '_' → logprob: -4.774013042449951
    4. ' ' → logprob: -5.649013042449951
    5. 's' → logprob: -10.399012565612793
    6. ')' → logprob: -11.024012565612793
    7. 'space' → logprob: -11.524012565612793
    8. ' +=' → logprob: -11.774012565612793
    9. '_space' → logprob: -12.149012565612793
    10. '_=' → logprob: -12.274012565612793

Token 37: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05261232703924179
    2. ' ' → logprob: -3.1776123046875
    3. 'A' → logprob: -5.4276123046875
    4. ' A' → logprob: -5.6776123046875
    5. '(A' → logprob: -7.1776123046875
    6. ' (' → logprob: -7.3026123046875
    7. 'B' → logprob: -9.5526123046875
    8. 'max' → logprob: -10.1776123046875
    9. '(max' → logprob: -10.1776123046875
    10. '(' → logprob: -10.3026123046875

Token 38: '(((' (ID: 13163)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005182643886655569
    2. '(T' → logprob: -5.63018274307251
    3. '(A' → logprob: -7.13018274307251
    4. '((' → logprob: -8.005182266235352
    5. '(B' → logprob: -8.755182266235352
    6. '('' → logprob: -9.130182266235352
    7. '()' → logprob: -9.380182266235352
    8. ' (' → logprob: -9.630182266235352
    9. '("' → logprob: -12.005182266235352
    10. '(`' → logprob: -12.880182266235352

Token 39: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.006054174154996872
    2. 'A' → logprob: -6.131054401397705
    3. 'B' → logprob: -6.256054401397705
    4. ' T' → logprob: -6.756054401397705
    5. '(T' → logprob: -8.631053924560547
    6. ' (' → logprob: -8.756053924560547
    7. ' ' → logprob: -9.256053924560547
    8. '100' → logprob: -9.506053924560547
    9. ')' → logprob: -10.256053924560547
    10. '10' → logprob: -10.381053924560547

Token 40: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2575262784957886
    2. ' -' → logprob: -1.7575262784957886
    3. ')' → logprob: -3.382526397705078
    4. ' )' → logprob: -4.757526397705078
    5. '*' → logprob: -5.257526397705078
    6. ' /' → logprob: -6.882526397705078
    7. '/' → logprob: -7.007526397705078
    8. '//' → logprob: -7.007526397705078
    9. ' ' → logprob: -7.382526397705078
    10. ')/' → logprob: -7.757526397705078

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8511053919792175
    2. ' ' → logprob: -1.3511054515838623
    3. '1' → logprob: -1.6011054515838623
    4. 'A' → logprob: -3.3511054515838623
    5. '-' → logprob: -3.9761054515838623
    6. ' -' → logprob: -4.726105213165283
    7. ' A' → logprob: -4.726105213165283
    8. '4' → logprob: -5.226105213165283
    9. 'B' → logprob: -5.226105213165283
    10. '(A' → logprob: -5.351105213165283

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02890635095536709
    2. '1' → logprob: -4.153906345367432
    3. ' ' → logprob: -4.903906345367432
    4. '.' → logprob: -7.028906345367432
    5. '10' → logprob: -7.028906345367432
    6. '5' → logprob: -7.403906345367432
    7. '-' → logprob: -7.403906345367432
    8. '30' → logprob: -7.903906345367432
    9. 'A' → logprob: -8.02890682220459
    10. '4' → logprob: -8.02890682220459

Token 43: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007261329446919262
    2. ' .' → logprob: -7.500726222991943
    3. '1' → logprob: -10.125725746154785
    4. ')' → logprob: -10.375725746154785
    5. '2' → logprob: -11.000725746154785
    6. '4' → logprob: -11.250725746154785
    7. ').' → logprob: -11.375725746154785
    8. '5' → logprob: -11.375725746154785
    9. '9' → logprob: -11.750725746154785
    10. '3' → logprob: -12.250725746154785

Token 44: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.043121714144945145
    2. '99' → logprob: -3.668121814727783
    3. '9' → logprob: -4.168121814727783
    4. '999' → logprob: -8.543121337890625
    5. '98' → logprob: -8.793121337890625
    6. '4' → logprob: -8.918121337890625
    7. '0' → logprob: -9.043121337890625
    8. '1' → logprob: -9.168121337890625
    9. '05' → logprob: -9.668121337890625
    10. '95' → logprob: -9.918121337890625

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059707920998334885
    2. ' )' → logprob: -3.1847078800201416
    3. ')//' → logprob: -4.184708118438721
    4. ')/' → logprob: -7.184708118438721
    5. '-' → logprob: -8.184707641601562
    6. ')*' → logprob: -8.934707641601562
    7. ' -' → logprob: -10.184707641601562
    8. '//' → logprob: -10.184707641601562
    9. ' //' → logprob: -10.434707641601562
    10. '*' → logprob: -10.684707641601562

Token 46: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3379741311073303
    2. '-' → logprob: -2.5879740715026855
    3. '//' → logprob: -2.9629740715026855
    4. ' )' → logprob: -2.9629740715026855
    5. ' -' → logprob: -3.0879740715026855
    6. ' //' → logprob: -3.4629740715026855
    7. '*' → logprob: -3.8379740715026855
    8. ')//' → logprob: -6.0879740715026855
    9. ')*' → logprob: -6.3379740715026855
    10. '/' → logprob: -6.3379740715026855

Token 47: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20463281869888306
    2. ' A' → logprob: -1.7046327590942383
    3. 'B' → logprob: -6.079632759094238
    4. ' ' → logprob: -7.579632759094238
    5. ' B' → logprob: -8.454632759094238
    6. '	A' → logprob: -9.329632759094238
    7. '100' → logprob: -9.954632759094238
    8. '5' → logprob: -11.579632759094238
    9. '1' → logprob: -12.204632759094238
    10. '  ' → logprob: -12.329632759094238

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03272154554724693
    2. ')*' → logprob: -3.532721519470215
    3. ' )' → logprob: -6.157721519470215
    4. '*' → logprob: -7.157721519470215
    5. ' *' → logprob: -9.657721519470215
    6. '))' → logprob: -12.782721519470215
    7. '*)' → logprob: -13.282721519470215
    8. ' ' → logprob: -14.407721519470215
    9. '	' → logprob: -14.907721519470215
    10. '))*' → logprob: -15.657721519470215

Token 49: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46482324600219727
    2. '*' → logprob: -1.3398232460021973
    3. ')*' → logprob: -2.3398232460021973
    4. ' *' → logprob: -4.339823246002197
    5. ' )' → logprob: -7.839823246002197
    6. '*)' → logprob: -10.839822769165039
    7. ' ' → logprob: -10.839822769165039
    8. '	' → logprob: -11.089822769165039
    9. ' ' → logprob: -11.589822769165039
    10. '*A' → logprob: -12.464822769165039

Token 50: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.28121036291122437
    2. ' B' → logprob: -1.4062104225158691
    3. ' ' → logprob: -10.156209945678711
    4. '	B' → logprob: -11.281209945678711
    5. '_B' → logprob: -13.281209945678711
    6. ')' → logprob: -14.031209945678711
    7. '>B' → logprob: -14.156209945678711
    8. 'b' → logprob: -14.281209945678711
    9. '100' → logprob: -14.281209945678711
    10. ' ' → logprob: -14.406209945678711

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.750000953674316
    4. ' )' → logprob: -15.750000953674316
    5. ')`' → logprob: -17.25
    6. '*' → logprob: -17.5
    7. '）' → logprob: -17.875
    8. '`)' → logprob: -18.25
    9. '')' → logprob: -18.25
    10. ')

' → logprob: -19.125

Token 52: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04508814960718155
    2. '
' → logprob: -3.545088052749634
    3. '<|end|>' → logprob: -4.545088291168213
    4. ')' → logprob: -6.295088291168213
    5. '\n' → logprob: -7.295088291168213
    6. '' → logprob: -7.295088291168213
    7. ' print' → logprob: -7.795088291168213
    8. '```' → logprob: -8.420087814331055
    9. ' ' → logprob: -8.795087814331055
    10. '(print' → logprob: -9.295087814331055

Token 53: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004204250581096858
    2. '(result' → logprob: -7.875420570373535
    3. '("("' → logprob: -10.375420570373535
    4. '('' → logprob: -12.000420570373535
    5. '((' → logprob: -14.250420570373535
    6. ' (' → logprob: -14.250420570373535
    7. '(
' → logprob: -14.625420570373535
    8. '(

' → logprob: -15.000420570373535
    9. '()' → logprob: -15.250420570373535
    10. '(f' → logprob: -16.25041961669922

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')`' → logprob: -16.625
    5. '`)' → logprob: -18.25
    6. ')
' → logprob: -19.0
    7. '')' → logprob: -19.125
    8. '）' → logprob: -19.25
    9. '```' → logprob: -19.625
    10. ')**' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 76.92%
================================================================================
