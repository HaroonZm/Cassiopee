================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

# Bon, on va lire l'entrée et bricoler un peu selon le format
chaine = input()
if chaine[0] == '>':
    chaine = '<' + chaine  # oups, obligé d'ajouter un chevron à gauche
if chaine[-1] == '<':
    chaine = chaine + '>'  # ça serait bête d'oublier ce cas !

# Allez, on groupe pour compter les longueurs des séquences successives
compte = []
for k, groupe in itertools.groupby(chaine):
    # Tiens, j'utilise pas k mais bon
    compte.append(len(list(groupe)))

resultat = 0
# On part deux par deux, en zippant. Faut que les tailles soient paires, mais tant pis si ça dépasse.
for a, b in zip(*(iter(compte),) * 2):
    # max-min pour répartir les calculs, c'est logique
    plusgrand = max(a, b)
    pluspetit = min(a, b)

    # Formule magique, ça doit donner la somme attendue
    resultat = resultat + (plusgrand * (plusgrand + 1)) // 2 + (pluspetit * (pluspetit - 1)) // 2

print(resultat)
# Bon, on croise les doigts que ça marche !
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4736459888808895e-05
    2. '```' → logprob: -13.125014305114746
    3. ' as' → logprob: -13.375014305114746
    4. '\' → logprob: -13.625014305114746
    5. 'as' → logprob: -13.750014305114746
    6. 'import' → logprob: -13.875014305114746
    7. '\.' → logprob: -13.875014305114746
    8. '(' → logprob: -14.000014305114746
    9. ',' → logprob: -14.250014305114746
    10. '.as' → logprob: -14.500014305114746

Token 4: ' Bon' (ID: 12658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039337098598480225
    2. ' import' → logprob: -4.289337158203125
    3. ' product' → logprob: -5.039337158203125
    4. ' The' → logprob: -6.039337158203125
    5. ' from' → logprob: -6.289337158203125
    6. ' chain' → logprob: -6.289337158203125
    7. ' combinations' → logprob: -6.789337158203125
    8. ' This' → logprob: -6.789337158203125
    9. ' group' → logprob: -6.914337158203125
    10. ' permutations' → logprob: -6.914337158203125

Token 5: ',' (ID: 11)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.01826314628124237
    2. 'import' → logprob: -5.518263339996338
    3. 'uses' → logprob: -5.768263339996338
    4. 'jour' → logprob: -6.018263339996338
    5. 'use' → logprob: -6.268263339996338
    6. 'ust' → logprob: -6.768263339996338
    7. 'app' → logprob: -7.143263339996338
    8. 'd' → logprob: -7.143263339996338
    9. 'fire' → logprob: -7.643263339996338
    10. 'def' → logprob: -8.01826286315918

Token 6: ' on' (ID: 402)
  Prédit: ' je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' je' → logprob: -0.4383889436721802
    2. ' ' → logprob: -2.3133888244628906
    3. ' voici' → logprob: -2.6883888244628906
    4. ' c' → logprob: -3.0633888244628906
    5. ' voilà' → logprob: -3.5633888244628906
    6. ' on' → logprob: -4.063388824462891
    7. ' ' → logprob: -4.063388824462891
    8. ' j' → logprob: -4.188388824462891
    9. ' continu' → logprob: -5.188388824462891
    10. ' il' → logprob: -5.438388824462891

Token 7: ' va' (ID: 3423)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2892395555973053
    2. ' a' → logprob: -2.7892396450042725
    3. ' continue' → logprob: -2.9142396450042725
    4. 'e' → logprob: -3.2892396450042725
    5. '_continue' → logprob: -4.664239406585693
    6. ' va' → logprob: -4.664239406585693
    7. ' continu' → logprob: -4.789239406585693
    8. ' peut' → logprob: -4.914239406585693
    9. '_a' → logprob: -5.164239406585693
    10. ' veut' → logprob: -5.289239406585693

Token 8: ' lire' (ID: 46082)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2374926805496216
    2. ' itertools' → logprob: -1.8624926805496216
    3. ' utiliser' → logprob: -2.362492561340332
    4. ' continuer' → logprob: -2.862492561340332
    5. ' essayer' → logprob: -2.987492561340332
    6. ' créer' → logprob: -3.612492561340332
    7. ' iter' → logprob: -3.612492561340332
    8. ' faire' → logprob: -3.737492561340332
    9. '_' → logprob: -3.987492561340332
    10. ' import' → logprob: -4.112492561340332

Token 9: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3135582506656647
    2. '_' → logprob: -2.063558340072632
    3. '(' → logprob: -2.438558340072632
    4. 'le' → logprob: -3.438558340072632
    5. 'les' → logprob: -5.438558101654053
    6. 'l' → logprob: -5.563558101654053
    7. ' (' → logprob: -5.688558101654053
    8. ' le' → logprob: -5.688558101654053
    9. ' les' → logprob: -5.688558101654053
    10. ',' → logprob: -7.688558101654053

Token 10: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7191558480262756
    2. 'es' → logprob: -1.0941557884216309
    3. 'a' → logprob: -1.8441557884216309
    4. ' fichier' → logprob: -5.219155788421631
    5. 'f' → logprob: -5.344155788421631
    6. '_' → logprob: -5.594155788421631
    7. ''' → logprob: -6.594155788421631
    8. 's' → logprob: -6.719155788421631
    9. '_f' → logprob: -7.719155788421631
    10. ' e' → logprob: -7.844155788421631

Token 11: ' et' (ID: 859)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1396292448043823
    2. '_' → logprob: -1.6396292448043823
    3. 'input' → logprob: -2.139629364013672
    4. 'user' → logprob: -2.139629364013672
    5. '\n' → logprob: -3.264629364013672
    6. '`' → logprob: -3.389629364013672
    7. 's' → logprob: -3.514629364013672
    8. '(' → logprob: -3.889629364013672
    9. '\' → logprob: -4.514629364013672
    10. '```' → logprob: -4.514629364013672

Token 12: ' bricol' (ID: 181488)
  Prédit: ' traiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traiter' → logprob: -1.2363479137420654
    2. 'trait' → logprob: -1.9863479137420654
    3. 'parser' → logprob: -3.2363479137420654
    4. ' stock' → logprob: -3.6113479137420654
    5. 'contin' → logprob: -3.7363479137420654
    6. 'comp' → logprob: -3.7363479137420654
    7. '#' → logprob: -3.7363479137420654
    8. 'tra' → logprob: -3.8613479137420654
    9. ' parser' → logprob: -3.8613479137420654
    10. ' continuer' → logprob: -4.1113481521606445

Token 13: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000987200066447258
    2. 'age' → logprob: -7.1259870529174805
    3. 'e' → logprob: -8.75098705291748
    4. '```' → logprob: -12.25098705291748
    5. 'r' → logprob: -12.50098705291748
    6. 'ages' → logprob: -12.75098705291748
    7. 'é' → logprob: -13.12598705291748
    8. 'ier' → logprob: -13.62598705291748
    9. 'erb' → logprob: -13.62598705291748
    10. 'ons' → logprob: -14.00098705291748

Token 14: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5295455455780029
    2. 'data' → logprob: -1.654545545578003
    3. '(' → logprob: -3.029545545578003
    4. '\' → logprob: -3.779545545578003
    5. 'for' → logprob: -3.904545545578003
    6. 'input' → logprob: -4.154545783996582
    7. '.' → logprob: -4.404545783996582
    8. 'n' → logprob: -4.529545783996582
    9. 'f' → logprob: -4.654545783996582
    10. '=' → logprob: -4.654545783996582

Token 15: ' peu' (ID: 9235)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.037613578140735626
    2. ' peu' → logprob: -3.5376136302948
    3. ' peut' → logprob: -5.412613391876221
    4. ' ' → logprob: -8.037613868713379
    5. 'tr' → logprob: -8.037613868713379
    6. '```' → logprob: -8.037613868713379
    7. 'for' → logprob: -8.537613868713379
    8. ' code' → logprob: -8.537613868713379
    9. 'code' → logprob: -8.662613868713379
    10. 's' → logprob: -8.662613868713379

Token 16: ' selon' (ID: 27571)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8276938199996948
    2. '\' → logprob: -1.5776938199996948
    3. 'n' → logprob: -2.3276939392089844
    4. '\n' → logprob: -2.4526939392089844
    5. 'input' → logprob: -3.5776939392089844
    6. '(' → logprob: -3.9526939392089844
    7. 'd' → logprob: -4.077693939208984
    8. '`' → logprob: -4.327693939208984
    9. '_' → logprob: -4.327693939208984
    10. 'for' → logprob: -4.702693939208984

Token 17: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4945104122161865
    2. ''' → logprob: -1.7445104122161865
    3. ' ' → logprob: -1.7445104122161865
    4. ' l' → logprob: -1.7445104122161865
    5. ' la' → logprob: -2.6195104122161865
    6. '_' → logprob: -3.1195104122161865
    7. '`' → logprob: -3.1195104122161865
    8. '```' → logprob: -3.4945104122161865
    9. 'la' → logprob: -4.619510650634766
    10. ' '' → logprob: -4.994510650634766

Token 18: ' format' (ID: 6011)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.069006323814392
    2. ' code' → logprob: -1.444006323814392
    3. ' type' → logprob: -1.694006323814392
    4. 'input' → logprob: -3.4440064430236816
    5. ' format' → logprob: -3.9440064430236816
    6. ' besoin' → logprob: -4.319006443023682
    7. 's' → logprob: -4.444006443023682
    8. '```' → logprob: -4.444006443023682
    9. 'nombre' → logprob: -4.694006443023682
    10. 'type' → logprob: -4.694006443023682

Token 19: '
' (ID: 198)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.43757107853889465
    2. 'n' → logprob: -1.6875710487365723
    3. '_' → logprob: -3.3125710487365723
    4. '\n' → logprob: -3.6875710487365723
    5. '(' → logprob: -3.8125710487365723
    6. 's' → logprob: -4.187571048736572
    7. '\' → logprob: -4.312571048736572
    8. 'input' → logprob: -4.437571048736572
    9. ':' → logprob: -5.062571048736572
    10. 'd' → logprob: -5.312571048736572

Token 20: 'chaine' (ID: 68916)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6268587708473206
    2. '\' → logprob: -2.126858711242676
    3. 'data' → logprob: -2.126858711242676
    4. 'n' → logprob: -2.626858711242676
    5. 'input' → logprob: -3.501858711242676
    6. '`' → logprob: -3.751858711242676
    7. 'newline' → logprob: -4.001858711242676
    8. '(' → logprob: -4.126858711242676
    9. '```' → logprob: -4.251858711242676
    10. 's' → logprob: -4.501858711242676

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018434248864650726
    2. '=' → logprob: -4.268434047698975
    3. '_' → logprob: -6.268434047698975
    4. 's' → logprob: -6.518434047698975
    5. '_input' → logprob: -8.268434524536133
    6. ' ' → logprob: -9.268434524536133
    7. '[:]' → logprob: -9.393434524536133
    8. '.' → logprob: -9.518434524536133
    9. 'es' → logprob: -9.643434524536133
    10. '_a' → logprob: -9.768434524536133

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2520589828491211
    2. 'input' → logprob: -1.502058982849121
    3. ' ' → logprob: -10.002058982849121
    4. '=input' → logprob: -10.877058982849121
    5. ' "' → logprob: -11.252058982849121
    6. '"' → logprob: -11.627058982849121
    7. '(input' → logprob: -11.752058982849121
    8. '	input' → logprob: -11.752058982849121
    9. ' ' → logprob: -12.127058982849121
    10. ' '' → logprob: -13.127058982849121

Token 23: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002492999192327261
    2. '('' → logprob: -9.625248908996582
    3. '()' → logprob: -9.625248908996582
    4. '("("' → logprob: -9.875248908996582
    5. '(
' → logprob: -10.625248908996582
    6. '("")' → logprob: -11.500248908996582
    7. ' (' → logprob: -11.625248908996582
    8. '(

' → logprob: -11.625248908996582
    9. ' ' → logprob: -13.000248908996582
    10. 's' → logprob: -13.125248908996582

Token 24: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21134531497955322
    2. '.split' → logprob: -2.4613451957702637
    3. 's' → logprob: -3.7113451957702637
    4. '_' → logprob: -3.7113451957702637
    5. '[' → logprob: -4.211345195770264
    6. '.strip' → logprob: -4.711345195770264
    7. ' ' → logprob: -5.336345195770264
    8. 'for' → logprob: -5.586345195770264
    9. ':' → logprob: -5.711345195770264
    10. ',' → logprob: -5.836345195770264

Token 25: ' chaine' (ID: 192094)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.73541259765625
    2. ' len' → logprob: -0.86041259765625
    3. ' '' → logprob: -3.48541259765625
    4. ' chaine' → logprob: -3.61041259765625
    5. 'chaine' → logprob: -3.86041259765625
    6. ' not' → logprob: -4.86041259765625
    7. 'len' → logprob: -5.61041259765625
    8. ''' → logprob: -6.23541259765625
    9. ' ' → logprob: -6.23541259765625
    10. '  ' → logprob: -6.48541259765625

Token 26: '[' (ID: 58)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11509300023317337
    2. '==' → logprob: -3.3650929927825928
    3. '.startswith' → logprob: -3.4900929927825928
    4. '.' → logprob: -4.115093231201172
    5. ' .' → logprob: -4.240093231201172
    6. '.strip' → logprob: -5.365093231201172
    7. ' !=' → logprob: -6.115093231201172
    8. '[' → logprob: -6.490093231201172
    9. ' in' → logprob: -6.615093231201172
    10. '.endswith' → logprob: -7.240093231201172

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019372403621673584
    2. ' ' → logprob: -4.019372463226318
    3. '1' → logprob: -6.894372463226318
    4. ':' → logprob: -9.14437198638916
    5. ' :' → logprob: -10.14437198638916
    6. '2' → logprob: -10.64437198638916
    7. ' ==' → logprob: -11.76937198638916
    8. '==' → logprob: -11.89437198638916
    9. '[' → logprob: -12.26937198638916
    10. '3' → logprob: -12.64437198638916

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43794018030166626
    2. '==' → logprob: -1.9379401206970215
    3. ' ==' → logprob: -2.1879401206970215
    4. ':' → logprob: -3.4379401206970215
    5. '[' → logprob: -3.9379401206970215
    6. ']==' → logprob: -4.1879401206970215
    7. '=' → logprob: -4.4379401206970215
    8. ' ]' → logprob: -4.6879401206970215
    9. ' ' → logprob: -5.5629401206970215
    10. ' :' → logprob: -6.5629401206970215

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18845701217651367
    2. '==' → logprob: -1.8134570121765137
    3. '=' → logprob: -6.063457012176514
    4. ' in' → logprob: -6.188457012176514
    5. ' !=' → logprob: -6.938457012176514
    6. '.' → logprob: -7.188457012176514
    7. '!=' → logprob: -7.438457012176514
    8. ' ' → logprob: -7.688457012176514
    9. ':' → logprob: -7.813457012176514
    10. '[' → logprob: -8.438457489013672

Token 30: ' '>' (ID: 133732)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03888772055506706
    2. '"' → logprob: -5.0388875007629395
    3. ''A' → logprob: -5.1638875007629395
    4. ''a' → logprob: -5.6638875007629395
    5. ''#' → logprob: -5.6638875007629395
    6. ''{' → logprob: -5.7888875007629395
    7. ' '' → logprob: -6.1638875007629395
    8. ''-' → logprob: -6.6638875007629395
    9. ''C' → logprob: -6.7888875007629395
    10. ' '['' → logprob: -7.1638875007629395

Token 31: '':
' (ID: 7669)
  Prédit: ''>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''>' → logprob: -0.6734982132911682
    2. '>' → logprob: -1.2984981536865234
    3. ''' → logprob: -1.7984981536865234
    4. ' '>' → logprob: -3.4234981536865234
    5. '">' → logprob: -5.673498153686523
    6. '=' → logprob: -5.798498153686523
    7. ' '' → logprob: -5.923498153686523
    8. '?' → logprob: -6.423498153686523
    9. '#' → logprob: -6.798498153686523
    10. '':' → logprob: -7.173498153686523

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7319515347480774
    2. '   ' → logprob: -1.9819514751434326
    3. '=' → logprob: -2.4819514751434326
    4. ':' → logprob: -3.1069514751434326
    5. '>' → logprob: -3.1069514751434326
    6. ' '' → logprob: -3.8569514751434326
    7. ' i' → logprob: -4.106951713562012
    8. '#' → logprob: -4.106951713562012
    9. ' =' → logprob: -4.231951713562012
    10. '  ' → logprob: -4.481951713562012

Token 33: ' chaine' (ID: 192094)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9578083157539368
    2. ' ' → logprob: -2.082808256149292
    3. ' chaine' → logprob: -2.957808256149292
    4. 'chaine' (adapté à ' chaine') → logprob: -3.332808256149292
    5. '   ' → logprob: -3.457808256149292
    6. ' #' → logprob: -3.582808256149292
    7. 'pass' → logprob: -3.582808256149292
    8. ' i' → logprob: -3.582808256149292
    9. ' for' → logprob: -3.832808256149292
    10. '#' → logprob: -4.207808494567871

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38757145404815674
    2. ' =' → logprob: -1.1375714540481567
    3. '[' → logprob: -7.387571334838867
    4. '+=' → logprob: -11.637571334838867
    5. 's' → logprob: -11.887571334838867
    6. ' ' → logprob: -12.137571334838867
    7. '.' → logprob: -12.137571334838867
    8. '=}' → logprob: -12.512571334838867
    9. ' +=' → logprob: -12.512571334838867
    10. '<|end|>' → logprob: -12.762571334838867

Token 35: ' '<' (ID: 8144)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.22576650977134705
    2. ' chaine' → logprob: -1.6007665395736694
    3. ' chaîne' → logprob: -9.1007661819458
    4. ''' → logprob: -9.8507661819458
    5. 'chain' → logprob: -9.8507661819458
    6. ' ' → logprob: -9.8507661819458
    7. '"' → logprob: -10.6007661819458
    8. '   ' → logprob: -11.2257661819458
    9. ' '' → logprob: -11.9757661819458
    10. ' chain' → logprob: -12.2257661819458

Token 36: ''' (ID: 6)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.423183411359787
    2. '=' → logprob: -1.5481834411621094
    3. '>' → logprob: -3.4231834411621094
    4. ''' → logprob: -3.6731834411621094
    5. '+' → logprob: -5.048183441162109
    6. '?' → logprob: -5.048183441162109
    7. '<' → logprob: -5.173183441162109
    8. 'code' → logprob: -5.173183441162109
    9. 's' → logprob: -5.173183441162109
    10. '!' → logprob: -5.298183441162109

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6063240766525269
    2. '/' → logprob: -1.1063240766525269
    3. '>' → logprob: -3.1063241958618164
    4. 'chaine' → logprob: -3.9813241958618164
    5. '=' → logprob: -4.731324195861816
    6. '!' → logprob: -4.731324195861816
    7. '/>' → logprob: -4.731324195861816
    8. ' +' → logprob: -4.981324195861816
    9. '<|end|>' → logprob: -5.606324195861816
    10. ''' → logprob: -5.731324195861816

Token 38: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0702776312828064
    2. ' chaine' → logprob: -2.695277690887451
    3. ' chaîne' → logprob: -9.070277214050293
    4. 'chain' → logprob: -9.320277214050293
    5. ''' → logprob: -10.070277214050293
    6. ' ' → logprob: -10.945277214050293
    7. '>' → logprob: -11.445277214050293
    8. '=' → logprob: -11.695277214050293
    9. 'cha' → logprob: -12.195277214050293
    10. ' chain' → logprob: -12.382777214050293

Token 39: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006439301068894565
    2. '1' → logprob: -8.125643730163574
    3. '[:-' → logprob: -9.250643730163574
    4. 'len' → logprob: -9.750643730163574
    5. '[len' → logprob: -10.375643730163574
    6. 'chaine' → logprob: -10.375643730163574
    7. '.slice' → logprob: -10.750643730163574
    8. '+' → logprob: -11.125643730163574
    9. '(' → logprob: -11.375643730163574
    10. '...' → logprob: -11.500643730163574

Token 40: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016873658751137555
    2. '1' → logprob: -9.375168800354004
    3. '>' → logprob: -10.750168800354004
    4. '[:-' → logprob: -11.250168800354004
    5. ' [' → logprob: -12.125168800354004
    6. '<|end|>' → logprob: -12.125168800354004
    7. 'chain' → logprob: -12.250168800354004
    8. '(' → logprob: -12.375168800354004
    9. '[len' → logprob: -12.500168800354004
    10. 'len' → logprob: -12.750168800354004

Token 41: ' ou' (ID: 2031)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.01617044024169445
    2. 'chain' → logprob: -4.391170501708984
    3. '[' → logprob: -6.016170501708984
    4. ' chaine' → logprob: -7.016170501708984
    5. 'cha' → logprob: -9.641170501708984
    6. '<|end|>' → logprob: -9.891170501708984
    7. ' ' → logprob: -10.516170501708984
    8. '.' → logprob: -10.891170501708984
    9. ' chaîne' → logprob: -10.891170501708984
    10. ' chain' → logprob: -11.016170501708984

Token 42: 'ps' (ID: 947)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.02014240063726902
    2. ' chaine' → logprob: -4.395142555236816
    3. 'chain' → logprob: -6.145142555236816
    4. '<|end|>' → logprob: -6.645142555236816
    5. ' chaîne' → logprob: -6.770142555236816
    6. '>' → logprob: -7.395142555236816
    7. 'cha' → logprob: -7.520142555236816
    8. ' ' → logprob: -8.020142555236816
    9. '<|end|>' → logprob: -8.645142555236816
    10. ' chain' → logprob: -9.020142555236816

Token 43: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0852152481675148
    2. '<|end|>' → logprob: -3.2102153301239014
    3. '>' → logprob: -3.9602153301239014
    4. ' ' → logprob: -5.710215091705322
    5. '[:-' → logprob: -5.960215091705322
    6. 'chaine' → logprob: -5.960215091705322
    7. '<|end|>' → logprob: -6.085215091705322
    8. '.' → logprob: -6.085215091705322
    9. '+' → logprob: -6.210215091705322
    10. 'chain' → logprob: -6.960215091705322

Token 44: ' obligé' (ID: 187574)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.04207896068692207
    2. ' chaine' → logprob: -3.417078971862793
    3. '>' → logprob: -5.792078971862793
    4. '<|end|>' → logprob: -6.667078971862793
    5. ' chaîne' → logprob: -7.292078971862793
    6. 'chain' → logprob: -7.417078971862793
    7. '...' → logprob: -7.667078971862793
    8. '  ' → logprob: -8.042078971862793
    9. '<|end|>' → logprob: -8.292078971862793
    10. ' ' → logprob: -8.292078971862793

Token 45: ' d' (ID: 272)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37808385491371155
    2. '<|end|>' → logprob: -1.6280838251113892
    3. '[' → logprob: -3.0030839443206787
    4. '<|end|>' → logprob: -3.8780839443206787
    5. ' +' → logprob: -4.5030837059021
    6. 'chaine' → logprob: -4.6280837059021
    7. '>' → logprob: -5.2530837059021
    8. '+
' → logprob: -6.0030837059021
    9. ' ' → logprob: -6.0030837059021
    10. 'else' → logprob: -6.2530837059021

Token 46: ''aj' (ID: 116735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04057036340236664
    2. ' e' → logprob: -4.790570259094238
    3. 'éc' → logprob: -5.540570259094238
    4. 'o' → logprob: -5.665570259094238
    5. 'a' → logprob: -5.915570259094238
    6. 'é' → logprob: -5.915570259094238
    7. ''aj' → logprob: -5.915570259094238
    8. ''' → logprob: -6.540570259094238
    9. 'i' → logprob: -6.790570259094238
    10. 'u' → logprob: -6.790570259094238

Token 47: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.006481353659182787
    2. 'o' → logprob: -6.881481170654297
    3. 'out' → logprob: -7.256481170654297
    4. 'ou' → logprob: -7.381481170654297
    5. 'uster' → logprob: -8.006481170654297
    6. 'uter' → logprob: -8.006481170654297
    7. ''' → logprob: -8.131481170654297
    8. '```' → logprob: -8.131481170654297
    9. 'outez' → logprob: -8.131481170654297
    10. 'oute' → logprob: -8.256481170654297

Token 48: ' un' (ID: 537)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9059433341026306
    2. ' ' → logprob: -1.5309433937072754
    3. '<' → logprob: -1.7809433937072754
    4. '<|end|>' → logprob: -2.1559433937072754
    5. '[' → logprob: -3.4059433937072754
    6. '+' → logprob: -4.405943393707275
    7. 'chaine' → logprob: -4.905943393707275
    8. 'chain' → logprob: -5.280943393707275
    9. '<|end|>' → logprob: -5.280943393707275
    10. ''' → logprob: -5.655943393707275

Token 49: ' che' (ID: 1378)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9626976251602173
    2. '>' → logprob: -1.0876976251602173
    3. ' espace' → logprob: -2.4626975059509277
    4. ' ' → logprob: -2.7126975059509277
    5. 'space' → logprob: -3.3376975059509277
    6. ''' → logprob: -4.462697505950928
    7. '.' → logprob: -4.587697505950928
    8. ' <' → logprob: -4.837697505950928
    9. '<
' → logprob: -4.837697505950928
    10. '!' → logprob: -5.212697505950928

Token 50: 'vron' (ID: 52215)
  Prédit: 'vron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vron' → logprob: -0.2904176712036133
    2. 'v' → logprob: -1.6654176712036133
    3. 'vr' → logprob: -3.0404176712036133
    4. 'vel' → logprob: -4.415417671203613
    5. '>' → logprob: -7.540417671203613
    6. '<' → logprob: -7.790417671203613
    7. 'val' → logprob: -7.790417671203613
    8. 'r' → logprob: -7.915417671203613
    9. 'veu' → logprob: -8.415417671203613
    10. 'veau' → logprob: -8.665417671203613

Token 51: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.614667534828186
    2. ' gauche' → logprob: -1.489667534828186
    3. 'la' → logprob: -2.6146674156188965
    4. ' l' → logprob: -2.7396674156188965
    5. ' la' → logprob: -3.2396674156188965
    6. 'g' → logprob: -3.7396674156188965
    7. ' ' → logprob: -4.2396674156188965
    8. ' ' → logprob: -4.7396674156188965
    9. 'dro' → logprob: -6.3646674156188965
    10. ' droite' → logprob: -6.4896674156188965

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' chaine' (ID: 192094)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.42654183506965637
    2. ' chaine' → logprob: -1.426541805267334
    3. ' not' → logprob: -2.926541805267334
    4. ' '' → logprob: -3.301541805267334
    5. ' ' → logprob: -4.551541805267334
    6. 'chaine' → logprob: -5.801541805267334
    7. ' "' → logprob: -7.176541805267334
    8. 'len' → logprob: -7.551541805267334
    9. ''' → logprob: -7.551541805267334
    10. ' chaîne' → logprob: -7.926541805267334

Token 56: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6952258348464966
    2. '[-' → logprob: -0.6952258348464966
    3. '.endswith' → logprob: -7.445225715637207
    4. ' ==' → logprob: -7.820225715637207
    5. '==' → logprob: -8.070225715637207
    6. ' !=' → logprob: -8.695225715637207
    7. '.count' → logprob: -8.820225715637207
    8. '[len' → logprob: -9.320225715637207
    9. ' ' → logprob: -9.570225715637207
    10. ' [' → logprob: -9.820225715637207

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13722774386405945
    2. '']' → logprob: -2.887227773666382
    3. ']' → logprob: -3.262227773666382
    4. ' ' → logprob: -4.012227535247803
    5. ''>' → logprob: -4.762227535247803
    6. ' '>' → logprob: -6.137227535247803
    7. ']>' → logprob: -6.637227535247803
    8. '>' → logprob: -6.762227535247803
    9. ' ']' → logprob: -6.887227535247803
    10. ''' → logprob: -7.887227535247803

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0077521298080682755
    2. ' ]' → logprob: -5.132751941680908
    3. '']' → logprob: -6.882751941680908
    4. ' !=' → logprob: -8.132752418518066
    5. ']!=' → logprob: -9.007752418518066
    6. '!=' → logprob: -9.382752418518066
    7. ' ']' → logprob: -9.757752418518066
    8. ':]' → logprob: -9.757752418518066
    9. ']==' → logprob: -9.757752418518066
    10. ' ' → logprob: -10.507752418518066

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7415496110916138
    2. ' !=' → logprob: -0.9915496110916138
    3. '==' → logprob: -2.116549491882324
    4. '!=' → logprob: -3.491549491882324
    5. ' ' → logprob: -6.991549491882324
    6. '!='' → logprob: -8.241549491882324
    7. '=' → logprob: -9.116549491882324
    8. '  ' → logprob: -9.366549491882324
    9. '=='' → logprob: -9.366549491882324
    10. '   ' → logprob: -9.866549491882324

Token 60: ' '<' (ID: 8144)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9420748949050903
    2. ''<' → logprob: -1.1920748949050903
    3. ''>' → logprob: -1.1920748949050903
    4. ' '<' → logprob: -6.567074775695801
    5. ' '>' → logprob: -6.692074775695801
    6. ' '' → logprob: -9.4420747756958
    7. ''><' → logprob: -9.4420747756958
    8. '<' → logprob: -10.3170747756958
    9. '">' → logprob: -10.5670747756958
    10. '':' → logprob: -10.6920747756958

Token 61: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2600061893463135
    2. '>' → logprob: -1.8850061893463135
    3. ':
' → logprob: -3.5100061893463135
    4. ''>' → logprob: -3.8850061893463135
    5. ''' → logprob: -4.760005950927734
    6. '':' → logprob: -5.385005950927734
    7. ' >' → logprob: -5.760005950927734
    8. ' :' → logprob: -6.260005950927734
    9. ' '>' → logprob: -6.260005950927734
    10. '   ' → logprob: -6.635005950927734

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028715942054986954
    2. 'chaine' → logprob: -4.153716087341309
    3. ' chaine' → logprob: -4.653716087341309
    4. ''' → logprob: -6.528716087341309
    5. '>' → logprob: -7.903716087341309
    6. ' >' → logprob: -8.028716087341309
    7. '  ' → logprob: -8.903716087341309
    8. ' chaîne' → logprob: -8.903716087341309
    9. ' ' → logprob: -9.278716087341309
    10. 'chain' → logprob: -9.528716087341309

Token 63: ' chaine' (ID: 192094)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0979143381118774
    2. ''' → logprob: -1.5979143381118774
    3. '   ' → logprob: -1.7229143381118774
    4. 'chaine' (adapté à ' chaine') → logprob: -2.222914218902588
    5. ' >' → logprob: -2.972914218902588
    6. ''>' → logprob: -3.222914218902588
    7. ' chaine' → logprob: -3.222914218902588
    8. ' '' → logprob: -4.222914218902588
    9. ' ' → logprob: -5.222914218902588
    10. '+' → logprob: -5.597914218902588

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1433841586112976
    2. ' =' → logprob: -2.0183842182159424
    3. '+=' → logprob: -8.018383979797363
    4. ' +=' → logprob: -8.518383979797363
    5. '+' → logprob: -9.143383979797363
    6. '>' → logprob: -9.893383979797363
    7. ' +' → logprob: -12.768383979797363
    8. '   ' → logprob: -12.893383979797363
    9. ' ' → logprob: -13.143383979797363
    10. '.append' → logprob: -13.268383979797363

Token 65: ' chaine' (ID: 192094)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013602959923446178
    2. ''>' → logprob: -4.5136027336120605
    3. ' '' → logprob: -6.1386027336120605
    4. '>'' → logprob: -8.388603210449219
    5. '>' → logprob: -9.013603210449219
    6. '">' → logprob: -11.263603210449219
    7. ' '>' → logprob: -11.888603210449219
    8. ''https' → logprob: -12.763603210449219
    9. '+' → logprob: -13.263603210449219
    10. 's' → logprob: -13.388603210449219

Token 66: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003501596162095666
    2. ' +' → logprob: -6.0035014152526855
    3. '>' → logprob: -7.0035014152526855
    4. ''>' → logprob: -10.128501892089844
    5. ''' → logprob: -10.253501892089844
    6. '[' → logprob: -11.253501892089844
    7. '+'' → logprob: -11.378501892089844
    8. '">' → logprob: -12.003501892089844
    9. '[:-' → logprob: -12.753501892089844
    10. 'gt' → logprob: -14.003501892089844

Token 67: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14989738166332245
    2. ''>' → logprob: -2.024897336959839
    3. ' '' → logprob: -5.024897575378418
    4. '>' → logprob: -8.149897575378418
    5. '">' → logprob: -8.399897575378418
    6. ' '>' → logprob: -9.649897575378418
    7. '>'' → logprob: -11.024897575378418
    8. ' ' → logprob: -12.399897575378418
    9. '   ' → logprob: -13.149897575378418
    10. ''a' → logprob: -13.149897575378418

Token 68: '>'' (ID: 12747)
  Prédit: '>''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>'' → logprob: -0.47867000102996826
    2. '>' → logprob: -0.9786700010299683
    3. ''' → logprob: -5.603670120239258
    4. ''>' → logprob: -7.103670120239258
    5. '>';' → logprob: -10.228670120239258
    6. '>`' → logprob: -11.728670120239258
    7. '>"' → logprob: -12.353670120239258
    8. '&gt' → logprob: -12.478670120239258
    9. '|' → logprob: -12.728670120239258
    10. '>'
' → logprob: -12.853670120239258

Token 69: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1579846143722534
    2. '<|end|>' → logprob: -1.1579846143722534
    3. ' ' → logprob: -2.032984733581543
    4. '
' → logprob: -2.657984733581543
    5. ' 
' → logprob: -2.907984733581543
    6. 'for' → logprob: -3.782984733581543
    7. ' for' → logprob: -3.782984733581543
    8. '  
' → logprob: -4.407984733581543
    9. '<|end|>' → logprob: -4.407984733581543
    10. '*' → logprob: -4.907984733581543

Token 70: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5187768340110779
    2. '#' → logprob: -1.6437768936157227
    3. '<|end|>' → logprob: -2.3937768936157227
    4. '  
' → logprob: -3.3937768936157227
    5. ' ' → logprob: -4.018776893615723
    6. ' 
' → logprob: -4.143776893615723
    7. '>' → logprob: -4.518776893615723
    8. '[' → logprob: -4.768776893615723
    9. '

' → logprob: -5.768776893615723
    10. 'if' → logprob: -5.893776893615723

Token 71: ' ça' (ID: 13590)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7393462061882019
    2. '<|end|>' → logprob: -0.9893462061882019
    3. ''' → logprob: -3.1143462657928467
    4. ' ' → logprob: -3.6143462657928467
    5. '<|end|>' → logprob: -3.7393462657928467
    6. '#' → logprob: -4.489346027374268
    7. '```' → logprob: -4.864346027374268
    8. ' ' → logprob: -5.114346027374268
    9. '   ' → logprob: -5.614346027374268
    10. ' >' → logprob: -5.614346027374268

Token 72: ' serait' (ID: 35762)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' b' (ID: 287)
  Prédit: ' mieux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mieux' → logprob: -1.129958987236023
    2. ' bien' → logprob: -1.254958987236023
    3. 'b' → logprob: -2.3799591064453125
    4. 'bien' → logprob: -2.7549591064453125
    5. ' dommage' → logprob: -2.8799591064453125
    6. ' pas' → logprob: -2.8799591064453125
    7. ' un' → logprob: -3.8799591064453125
    8. ' b' → logprob: -4.1299591064453125
    9. ' cool' → logprob: -4.2549591064453125
    10. ' ' → logprob: -4.5049591064453125

Token 74: 'ête' (ID: 16808)
  Prédit: 'ien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ien' → logprob: -0.001645430107600987
    2. 'e' → logprob: -7.876645565032959
    3. 'bien' → logprob: -8.0016450881958
    4. 'ient' → logprob: -8.2516450881958
    5. 'ién' → logprob: -9.3766450881958
    6. 'i' → logprob: -9.3766450881958
    7. 'iens' → logprob: -9.6266450881958
    8. 'en' → logprob: -9.6266450881958
    9. 'izarre' → logprob: -9.7516450881958
    10. ' mieux' → logprob: -10.0016450881958

Token 75: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ''oubl' (ID: 129254)
  Prédit: ' manquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manquer' → logprob: -0.9952678680419922
    2. ' perdre' → logprob: -1.4952678680419922
    3. ' ne' → logprob: -1.8702678680419922
    4. ' finir' → logprob: -2.370267868041992
    5. ' terminer' → logprob: -3.870267868041992
    6. 'n' → logprob: -4.620267868041992
    7. 'ne' → logprob: -4.620267868041992
    8. '```' → logprob: -4.870267868041992
    9. 'fin' → logprob: -4.995267868041992
    10. ' laisser' → logprob: -5.120267868041992

Token 77: 'ier' (ID: 905)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.5014188799541444e-05
    2. 'ier' → logprob: -10.625044822692871
    3. 'e' → logprob: -10.875044822692871
    4. ''er' → logprob: -14.375044822692871
    5. ' er' → logprob: -15.000044822692871
    6. 'uer' → logprob: -15.375044822692871
    7. '   ' → logprob: -15.875044822692871
    8. 'é' → logprob: -16.250045776367188
    9. '```' → logprob: -16.750045776367188
    10. 'r' → logprob: -17.000045776367188

Token 78: ' ce' (ID: 2357)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7437134385108948
    2. '<|end|>' → logprob: -2.36871337890625
    3. '#' → logprob: -2.49371337890625
    4. ' ' → logprob: -2.61871337890625
    5. '.' → logprob: -3.11871337890625
    6. ')' → logprob: -3.24371337890625
    7. '[' → logprob: -3.49371337890625
    8. ''' → logprob: -3.74371337890625
    9. ':' → logprob: -3.99371337890625
    10. '\n' → logprob: -4.61871337890625

Token 79: ' cas' (ID: 2108)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011194126680493355
    2. ' >' → logprob: -5.636194229125977
    3. 'che' → logprob: -5.886194229125977
    4. ' dernier' → logprob: -6.636194229125977
    5. ' che' → logprob: -7.386194229125977
    6. '```' → logprob: -8.011194229125977
    7. 'car' → logprob: -8.261194229125977
    8. '">' → logprob: -8.511194229125977
    9. ' ' → logprob: -8.761194229125977
    10. '&gt' → logprob: -8.761194229125977

Token 80: ' !

' (ID: 13547)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.806687593460083
    2. ' 
' → logprob: -2.181687593460083
    3. '<|end|>' → logprob: -2.306687593460083
    4. 's' → logprob: -2.556687593460083
    5. 'for' → logprob: -3.181687593460083
    6. ':' → logprob: -3.181687593460083
    7. '
' → logprob: -3.431687593460083
    8. '.' → logprob: -3.681687593460083
    9. ' for' → logprob: -3.806687593460083
    10. '  
' → logprob: -4.056687355041504

Token 81: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4839924573898315
    2. '#' → logprob: -1.6089924573898315
    3. 'result' → logprob: -1.7339924573898315
    4. 'n' → logprob: -2.983992576599121
    5. 'count' → logprob: -3.233992576599121
    6. 'while' → logprob: -3.358992576599121
    7. '```' → logprob: -3.733992576599121
    8. 'i' → logprob: -3.858992576599121
    9. 'chaine' → logprob: -4.233992576599121
    10. 'trans' → logprob: -4.233992576599121

Token 82: ' Al' (ID: 1667)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1679648160934448
    2. 'result' → logprob: -1.9179648160934448
    3. 'dire' → logprob: -3.1679649353027344
    4. 'pairs' → logprob: -3.2929649353027344
    5. 'for' → logprob: -3.4179649353027344
    6. 'direction' → logprob: -3.4179649353027344
    7. 'n' → logprob: -3.4179649353027344
    8. 'trans' → logprob: -3.6679649353027344
    9. 'pos' → logprob: -3.6679649353027344
    10. 'count' → logprob: -3.7929649353027344

Token 83: 'lez' (ID: 20266)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1911243200302124
    2. 'l' → logprob: -1.6911243200302124
    3. 'phabet' → logprob: -2.316124439239502
    4. '#' → logprob: -2.441124439239502
    5. 'import' → logprob: -3.191124439239502
    6. 'len' → logprob: -3.316124439239502
    7. 'result' → logprob: -3.566124439239502
    8. 'res' → logprob: -3.816124439239502
    9. 'ign' → logprob: -4.066124439239502
    10. 'i' → logprob: -4.191124439239502

Token 84: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23989564180374146
    2. ' for' → logprob: -3.1148955821990967
    3. '#' → logprob: -3.2398955821990967
    4. 'result' → logprob: -3.3648955821990967
    5. 'count' → logprob: -4.114895820617676
    6. 'com' → logprob: -4.239895820617676
    7. 'chaine' → logprob: -4.489895820617676
    8. ',' → logprob: -5.114895820617676
    9. 'pour' → logprob: -5.239895820617676
    10. 'tokens' → logprob: -5.614895820617676

Token 85: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8183134198188782
    2. 'for' → logprob: -1.5683133602142334
    3. 'on' → logprob: -2.1933133602142334
    4. ' for' → logprob: -2.5683133602142334
    5. '#' → logprob: -2.8183133602142334
    6. ' continu' → logprob: -4.6933135986328125
    7. 'c' → logprob: -4.8183135986328125
    8. ' maintenant' → logprob: -4.8183135986328125
    9. ' c' → logprob: -5.1933135986328125
    10. 'com' → logprob: -5.5683135986328125

Token 86: ' groupe' (ID: 29494)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.13727867603302002
    2. ' continue' → logprob: -3.3872785568237305
    3. 'continue' → logprob: -4.2622785568237305
    4. '#' → logprob: -4.8872785568237305
    5. ' peut' → logprob: -5.1372785568237305
    6. '_' → logprob: -5.1372785568237305
    7. ' boucle' → logprob: -5.1372785568237305
    8. ' regarde' → logprob: -5.2622785568237305
    9. 'for' → logprob: -5.5122785568237305
    10. ' fait' → logprob: -5.5122785568237305

Token 87: ' pour' (ID: 1930)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3097139894962311
    2. '(' → logprob: -3.0597140789031982
    3. 'for' → logprob: -3.5597140789031982
    4. 'it' → logprob: -3.8097140789031982
    5. 'par' → logprob: -3.8097140789031982
    6. 'chain' → logprob: -3.8097140789031982
    7. 'group' → logprob: -4.184713840484619
    8. ' par' → logprob: -4.559713840484619
    9. ' groupes' → logprob: -4.809713840484619
    10. ' for' → logprob: -5.059713840484619

Token 88: ' compter' (ID: 81694)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.18592217564582825
    2. 'k' → logprob: -2.685922145843506
    3. ' c' → logprob: -3.935922145843506
    4. ' key' → logprob: -4.310922145843506
    5. ' clé' → logprob: -4.685922145843506
    6. ' cle' → logprob: -4.935922145843506
    7. ' char' → logprob: -4.935922145843506
    8. 'key' → logprob: -5.185922145843506
    9. ' _,' → logprob: -5.185922145843506
    10. 'char' → logprob: -5.310922145843506

Token 89: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4817755222320557
    2. 'group' → logprob: -1.8567755222320557
    3. 'chaine' → logprob: -1.9817755222320557
    4. 'groups' → logprob: -2.2317755222320557
    5. 'it' → logprob: -2.9817755222320557
    6. 'tokens' → logprob: -2.9817755222320557
    7. 'result' → logprob: -3.1067755222320557
    8. '[' → logprob: -3.2317755222320557
    9. ')' → logprob: -3.3567755222320557
    10. 'from' → logprob: -3.6067755222320557

Token 90: ' longue' (ID: 59564)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.0402710437774658
    2. 'car' → logprob: -1.1652710437774658
    3. ' groupes' → logprob: -2.415271043777466
    4. ' group' → logprob: -2.790271043777466
    5. 'group' → logprob: -3.540271043777466
    6. ' caracteres' → logprob: -4.040270805358887
    7. 'tokens' → logprob: -4.415270805358887
    8. 'élé' → logprob: -4.540270805358887
    9. '>' → logprob: -4.540270805358887
    10. 'm' → logprob: -4.540270805358887

Token 91: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5276445746421814
    2. 'r' → logprob: -1.4026446342468262
    3. 'urs' → logprob: -1.9026446342468262
    4. 'ss' → logprob: -4.777644634246826
    5. 's' → logprob: -5.402644634246826
    6. 't' → logprob: -7.027644634246826
    7. 'sses' → logprob: -7.777644634246826
    8. 'rs' → logprob: -8.402644157409668
    9. 'es' → logprob: -9.277644157409668
    10. '```' → logprob: -9.402644157409668

Token 92: ' des' (ID: 731)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.7840861082077026
    2. 'groups' → logprob: -1.2840861082077026
    3. 'for' → logprob: -2.284086227416992
    4. 'result' → logprob: -2.909086227416992
    5. 'tokens' → logprob: -3.284086227416992
    6. 'chaine' → logprob: -4.534086227416992
    7. 'g' → logprob: -4.784086227416992
    8. ')' → logprob: -5.034086227416992
    9. ' for' → logprob: -5.284086227416992
    10. ' groupes' → logprob: -5.659086227416992

Token 93: ' sé' (ID: 7462)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.4554389715194702
    2. ' groupes' → logprob: -1.5804389715194702
    3. 'che' → logprob: -2.4554390907287598
    4. ' segments' → logprob: -2.7054390907287598
    5. ' sé' → logprob: -2.9554390907287598
    6. ' che' → logprob: -3.2054390907287598
    7. ' caractères' → logprob: -3.2054390907287598
    8. ' group' → logprob: -3.5804390907287598
    9. 'segments' → logprob: -3.7054390907287598
    10. ' mêmes' → logprob: -3.8304390907287598

Token 94: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0034708285238593817
    2. 'ries' → logprob: -5.7534708976745605
    3. 'q' → logprob: -9.378470420837402
    4. 'quence' → logprob: -9.628470420837402
    5. 'qu' → logprob: -10.128470420837402
    6. 'quent' → logprob: -10.378470420837402
    7. 'gments' → logprob: -11.253470420837402
    8. 'r' → logprob: -11.503470420837402
    9. 'rie' → logprob: -11.878470420837402
    10. '   ' → logprob: -12.253470420837402

Token 95: ' success' (ID: 3505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38929468393325806
    2. 'chaine' → logprob: -1.7642946243286133
    3. 'it' → logprob: -3.7642946243286133
    4. ')' → logprob: -3.7642946243286133
    5. ' for' → logprob: -4.014294624328613
    6. 'result' → logprob: -4.389294624328613
    7. 'group' → logprob: -4.514294624328613
    8. 'chain' → logprob: -4.639294624328613
    9. 'tokens' → logprob: -4.764294624328613
    10. 'groups' → logprob: -4.889294624328613

Token 96: 'ives' (ID: 2264)
  Prédit: 'ves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ves' → logprob: -0.5460317134857178
    2. 'ives' → logprob: -0.9210317134857178
    3. 'ivement' → logprob: -5.296031951904297
    4. 've' → logprob: -5.546031951904297
    5. 'v' → logprob: -5.671031951904297
    6. 'es' → logprob: -5.921031951904297
    7. '```' → logprob: -6.671031951904297
    8. 'vement' → logprob: -7.796031951904297
    9. 'f' → logprob: -7.796031951904297
    10. 'import' → logprob: -7.796031951904297

Token 97: '
' (ID: 198)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.295779824256897
    2. 'result' → logprob: -2.0457797050476074
    3. 'groups' → logprob: -2.4207797050476074
    4. 'se' → logprob: -5.045779705047607
    5. 'for' → logprob: -5.170779705047607
    6. 'counts' → logprob: -5.295779705047607
    7. 'res' → logprob: -5.545779705047607
    8. 'g' → logprob: -6.045779705047607
    9. 'tokens' → logprob: -6.170779705047607
    10. 'segments' → logprob: -6.670779705047607

Token 98: 'comp' (ID: 3697)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5959909558296204
    2. 'result' → logprob: -1.0959908962249756
    3. 'groups' → logprob: -2.8459908962249756
    4. 'res' → logprob: -3.8459908962249756
    5. 'for' → logprob: -4.220991134643555
    6. 'tokens' → logprob: -5.470991134643555
    7. 'g' → logprob: -5.595991134643555
    8. 'counts' → logprob: -6.470991134643555
    9. 'se' → logprob: -6.720991134643555
    10. 's' → logprob: -7.220991134643555

Token 99: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.041651055216789246
    2. 'r' → logprob: -3.9166510105133057
    3. 'ter' → logprob: -5.166651248931885
    4. 'ts' → logprob: -5.416651248931885
    5. 'teur' → logprob: -5.541651248931885
    6. 'te' → logprob: -6.791651248931885
    7. ' =' → logprob: -6.916651248931885
    8. '=' → logprob: -6.916651248931885
    9. 'teurs' → logprob: -6.916651248931885
    10. 'for' → logprob: -7.416651248931885

Token 100: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04352055862545967
    2. '=' → logprob: -3.418520450592041
    3. ' =' → logprob: -5.668520450592041
    4. 'r' → logprob: -5.793520450592041
    5. 'd' → logprob: -6.418520450592041
    6. 'rs' → logprob: -6.793520450592041
    7. 'urs' → logprob: -8.2935209274292
    8. 'ur' → logprob: -9.5435209274292
    9. '=r' → logprob: -9.9185209274292
    10. 'nts' → logprob: -9.9185209274292

Token 101: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6011711359024048
    2. '[it' → logprob: -1.4761711359024048
    3. '[' → logprob: -2.3511710166931152
    4. ' [' → logprob: -3.1011710166931152
    5. '[
' → logprob: -3.7261710166931152
    6. '[list' → logprob: -3.9761710166931152
    7. ' [(' → logprob: -4.601171016693115
    8. '[]
' → logprob: -4.726171016693115
    9. 'it' → logprob: -4.851171016693115
    10. '[]' → logprob: -5.976171016693115

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018368486315011978
    2. ' for' → logprob: -4.643368721008301
    3. 'i' → logprob: -5.643368721008301
    4. 'current' → logprob: -6.143368721008301
    5. 'g' → logprob: -6.768368721008301
    6. 'group' → logprob: -7.643368721008301
    7. 'comp' → logprob: -8.5183687210083
    8. 'long' → logprob: -8.6433687210083
    9. 'car' → logprob: -9.0183687210083
    10. 'n' → logprob: -9.8933687210083

Token 103: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.4366852045059204
    2. ' c' → logprob: -1.8116852045059204
    3. ' cle' → logprob: -1.9366852045059204
    4. ' caract' → logprob: -1.9366852045059204
    5. ' car' → logprob: -2.311685085296631
    6. ' char' → logprob: -2.311685085296631
    7. ' key' → logprob: -3.186685085296631
    8. 'car' → logprob: -4.061685085296631
    9. ' clé' → logprob: -4.561685085296631
    10. 'k' → logprob: -4.936685085296631

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014716439181938767
    2. ',g' → logprob: -9.125146865844727
    3. 'g' → logprob: -11.625146865844727
    4. ' ,' → logprob: -11.875146865844727
    5. ',c' → logprob: -12.125146865844727
    6. '_,' → logprob: -13.125146865844727
    7. 'c' → logprob: -13.375146865844727
    8. '```' → logprob: -13.500146865844727
    9. '1' → logprob: -13.625146865844727
    10. ',val' → logprob: -13.750146865844727

Token 105: ' groupe' (ID: 29494)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.06940718740224838
    2. 'g' → logprob: -2.8194072246551514
    3. ' groupe' → logprob: -6.069406986236572
    4. ' groupes' → logprob: -6.069406986236572
    5. ' group' → logprob: -6.694406986236572
    6. 'group' → logprob: -7.569406986236572
    7. ' v' → logprob: -7.569406986236572
    8. ' grp' → logprob: -8.31940746307373
    9. ' grou' → logprob: -9.31940746307373
    10. 'grp' → logprob: -9.94440746307373

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12711194157600403
    2. 'in' → logprob: -2.1271119117736816
    3. ' ' → logprob: -9.62711238861084
    4. '<|end|>' → logprob: -10.00211238861084
    5. 'import' → logprob: -10.62711238861084
    6. 's' → logprob: -10.87711238861084
    7. '<|end|>' → logprob: -12.00211238861084
    8. ' dans' → logprob: -12.75211238861084
    9. 'dans' → logprob: -12.87711238861084
    10. 'en' → logprob: -13.12711238861084

Token 107: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.023246755823493004
    2. 'it' → logprob: -3.7732467651367188
    3. '```' → logprob: -15.023246765136719
    4. 'import' → logprob: -15.398246765136719
    5. '(it' → logprob: -15.648246765136719
    6. ' ' → logprob: -16.14824676513672
    7. 'group' → logprob: -16.27324676513672
    8. '_it' → logprob: -16.64824676513672
    9. '.it' → logprob: -16.77324676513672
    10. ' it' → logprob: -16.89824676513672

Token 108: '.groupby' (ID: 131013)
  Prédit: '.groupby'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groupby' → logprob: -4.179569077678025e-05
    2. '.' → logprob: -10.250041961669922
    3. ' .' → logprob: -12.500041961669922
    4. '.group' → logprob: -13.875041961669922
    5. '.com' → logprob: -14.750041961669922
    6. '.pyplot' → logprob: -15.250041961669922
    7. '.groups' → logprob: -15.625041961669922
    8. 'import' → logprob: -15.750041961669922
    9. '.c' → logprob: -15.750041961669922
    10. '.chain' → logprob: -16.250041961669922

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.531315314830863e-06
    2. ' (' → logprob: -13.250003814697266
    3. 'chaine' → logprob: -13.750003814697266
    4. '(chain' → logprob: -14.375003814697266
    5. ' chaine' → logprob: -17.375003814697266
    6. '(
' → logprob: -18.625003814697266
    7. '((' → logprob: -18.750003814697266
    8. ' ' → logprob: -18.750003814697266
    9. '```' → logprob: -18.875003814697266
    10. 's' → logprob: -19.000003814697266

Token 110: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0003396343090571463
    2. ' chaine' → logprob: -8.00033950805664
    3. 'chain' → logprob: -12.75033950805664
    4. '   ' → logprob: -15.12533950805664
    5. 'cha' → logprob: -15.12533950805664
    6. ' chaîne' → logprob: -15.75033950805664
    7. '```' → logprob: -16.00033950805664
    8. '
' → logprob: -16.12533950805664
    9. 'liste' → logprob: -16.62533950805664
    10. ' ' → logprob: -16.87533950805664

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1994994878768921
    2. '):
' → logprob: -2.4494996070861816
    3. ':' → logprob: -2.6994996070861816
    4. '(chain' → logprob: -4.324499607086182
    5. ' ):' → logprob: -5.574499607086182
    6. ':
' → logprob: -5.574499607086182
    7. 'chaine' → logprob: -6.074499607086182
    8. '():' → logprob: -7.199499607086182
    9. ' :' → logprob: -7.199499607086182
    10. ')' → logprob: -7.324499607086182

Token 112: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20258553326129913
    2. ':' → logprob: -1.8275855779647827
    3. '   ' → logprob: -3.827585458755493
    4. ' :
' → logprob: -7.702585697174072
    5. 'comp' → logprob: -9.577585220336914
    6. '():
' → logprob: -9.702585220336914
    7. ' :' → logprob: -9.952585220336914
    8. ':

' → logprob: -10.452585220336914
    9. '
' → logprob: -10.702585220336914
    10. '):
' → logprob: -10.827585220336914

Token 113: ' #' (ID: 1069)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.002552242483943701
    2. '   ' → logprob: -7.002552032470703
    3. ' compte' → logprob: -7.127552032470703
    4. 'len' → logprob: -7.877552032470703
    5. 'count' → logprob: -8.627552032470703
    6. ' comp' → logprob: -9.127552032470703
    7. '	comp' → logprob: -9.752552032470703
    8. '
' → logprob: -10.377552032470703
    9. ' ' → logprob: -11.127552032470703
    10. ' compteur' → logprob: -11.377552032470703

Token 114: ' Ti' (ID: 21833)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0571695975959301
    2. 'long' → logprob: -3.5571696758270264
    3. '   ' → logprob: -4.182169437408447
    4. 'length' → logprob: -5.807169437408447
    5. 'tail' → logprob: -5.932169437408447
    6. ' longueur' → logprob: -6.182169437408447
    7. 'count' → logprob: -6.682169437408447
    8. 'len' → logprob: -7.807169437408447
    9. ' compte' → logprob: -8.182169914245605
    10. '    
' → logprob: -8.557169914245605

Token 115: 'ens' (ID: 696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.006155014038086
    2. 'm' → logprob: -1.381155014038086
    3. 'r' → logprob: -2.256155014038086
    4. 'rs' → logprob: -2.256155014038086
    5. 'comp' → logprob: -2.256155014038086
    6. '   ' → logprob: -3.756155014038086
    7. 'res' → logprob: -5.506155014038086
    8. 'me' → logprob: -5.506155014038086
    9. 'mp' → logprob: -5.881155014038086
    10. 'tle' → logprob: -5.881155014038086

Token 116: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061092227697372437
    2. 'comp' → logprob: -3.1860921382904053
    3. '    ' → logprob: -5.061092376708984
    4. ' comp' → logprob: -6.061092376708984
    5. '  ' → logprob: -6.436092376708984
    6. ' compteur' → logprob: -6.561092376708984
    7. '       ' → logprob: -6.686092376708984
    8. 'len' → logprob: -6.811092376708984
    9. ' compte' → logprob: -6.811092376708984
    10. ' compt' → logprob: -7.686092376708984

Token 117: ' j' (ID: 441)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.4702499210834503
    2. ' compte' → logprob: -1.220249891281128
    3. '   ' → logprob: -3.845249891281128
    4. ' longueur' → logprob: -4.220250129699707
    5. 'count' → logprob: -4.345250129699707
    6. 'length' → logprob: -4.470250129699707
    7. 'len' → logprob: -5.345250129699707
    8. 'long' → logprob: -5.470250129699707
    9. ' ' → logprob: -6.470250129699707
    10. 'l' → logprob: -6.720250129699707

Token 118: ''util' (ID: 37761)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.007202766370028257
    2. 's' → logprob: -5.257202625274658
    3. '```' → logprob: -7.882202625274658
    4. 'sé' → logprob: -8.257203102111816
    5. 'set' → logprob: -8.507203102111816
    6. 'ser' → logprob: -8.507203102111816
    7. '   ' → logprob: -8.757203102111816
    8. 'ses' → logprob: -8.757203102111816
    9. '#' → logprob: -9.007203102111816
    10. 'ze' → logprob: -9.507203102111816

Token 120: ' pas' (ID: 2173)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3630533516407013
    2. ' len' → logprob: -1.488053321838379
    3. ' k' → logprob: -3.238053321838379
    4. 'k' → logprob: -4.488053321838379
    5. 'sum' → logprob: -4.613053321838379
    6. ' sum' → logprob: -4.988053321838379
    7. ' la' → logprob: -5.113053321838379
    8. ' ' → logprob: -6.363053321838379
    9. ' une' → logprob: -7.238053321838379
    10. 'la' → logprob: -7.238053321838379

Token 121: ' k' (ID: 372)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0221260786056519
    2. 'k' → logprob: -1.5221260786056519
    3. ' k' → logprob: -1.6471260786056519
    4. ' len' → logprob: -1.7721260786056519
    5. ' la' → logprob: -3.6471261978149414
    6. ' de' → logprob: -4.897126197814941
    7. 'comp' → logprob: -5.147126197814941
    8. 'la' → logprob: -6.147126197814941
    9. 'list' → logprob: -6.147126197814941
    10. 'le' → logprob: -6.647126197814941

Token 122: ' mais' (ID: 2899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19123195111751556
    2. ':
' → logprob: -2.5662319660186768
    3. '   ' → logprob: -2.9412319660186768
    4. 'comp' → logprob: -4.066231727600098
    5. ',' → logprob: -4.441231727600098
    6. 'len' → logprob: -5.316231727600098
    7. '
' → logprob: -5.816231727600098
    8. ' :' → logprob: -6.941231727600098
    9. '):
' → logprob: -6.941231727600098
    10. '  ' → logprob: -7.316231727600098

Token 123: ' bon' (ID: 4846)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7517766952514648
    2. '_' → logprob: -1.6267766952514648
    3. ' len' → logprob: -1.8767766952514648
    4. ' la' → logprob: -3.251776695251465
    5. ' _' → logprob: -3.751776695251465
    6. 'g' → logprob: -3.751776695251465
    7. ' juste' → logprob: -4.001776695251465
    8. ' ' → logprob: -4.376776695251465
    9. ' groupe' → logprob: -4.751776695251465
    10. ' k' → logprob: -5.001776695251465

Token 124: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: '   ' (ID: 271)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7035740613937378
    2. '   ' → logprob: -1.2035740613937378
    3. ' longueur' → logprob: -3.0785741806030273
    4. '<|end|>' → logprob: -3.2035741806030273
    5. 'long' → logprob: -3.3285741806030273
    6. 'count' → logprob: -3.4535741806030273
    7. 'comp' → logprob: -4.203574180603027
    8. 'len' → logprob: -4.828574180603027
    9. ' length' → logprob: -5.078574180603027
    10. '    ' → logprob: -5.953574180603027

Token 126: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.7768030166625977
    2. 'long' → logprob: -1.1518030166625977
    3. 'tail' → logprob: -2.4018030166625977
    4. 'lg' → logprob: -3.1518030166625977
    5. 'l' → logprob: -3.5268030166625977
    6. 'length' → logprob: -4.401803016662598
    7. 'lon' → logprob: -4.526803016662598
    8. 'liste' → logprob: -4.901803016662598
    9. 'count' → logprob: -5.276803016662598
    10. ' longueur' → logprob: -5.401803016662598

Token 127: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012525065802037716
    2. '.' → logprob: -4.3875250816345215
    3. '.extend' → logprob: -11.762524604797363
    4. ' .' → logprob: -13.012524604797363
    5. '=' → logprob: -13.637524604797363
    6. 'append' → logprob: -14.012524604797363
    7. '.app' → logprob: -15.012524604797363
    8. '_append' → logprob: -15.137524604797363
    9. '=len' → logprob: -15.137524604797363
    10. ').' → logprob: -15.262524604797363

Token 128: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0009246804984286427
    2. '((' → logprob: -7.625924587249756
    3. '(sum' → logprob: -7.875924587249756
    4. '(' → logprob: -10.625925064086914
    5. 'len' → logprob: -10.875925064086914
    6. '(list' → logprob: -11.750925064086914
    7. '(next' → logprob: -12.250925064086914
    8. '[len' → logprob: -15.750925064086914
    9. '(tuple' → logprob: -15.875925064086914
    10. '(str' → logprob: -16.250925064086914

Token 129: '(list' (ID: 13116)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.07983248680830002
    2. '(list' → logprob: -2.5798325538635254
    3. '(' → logprob: -7.079832553863525
    4. '(group' → logprob: -9.329832077026367
    5. '(k' → logprob: -12.829832077026367
    6. '(l' → logprob: -13.204832077026367
    7. '(tuple' → logprob: -13.454832077026367
    8. ')' → logprob: -13.704832077026367
    9. '(gr' → logprob: -13.704832077026367
    10. ' (' → logprob: -13.954832077026367

Token 130: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 'g' → logprob: -16.00000762939453
    4. ' (' → logprob: -17.00000762939453
    5. '(group' → logprob: -17.75000762939453
    6. '(gr' → logprob: -18.87500762939453
    7. ')(' → logprob: -19.12500762939453
    8. ')' → logprob: -19.37500762939453
    9. '(k' → logprob: -19.87500762939453
    10. '(
' → logprob: -19.87500762939453

Token 131: 'roupe' (ID: 23290)
  Prédit: 'roupe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roupe' → logprob: -7.123899558791891e-05
    2. 'g' → logprob: -9.75007152557373
    3. 'roup' → logprob: -12.12507152557373
    4. ' groupe' → logprob: -12.75007152557373
    5. 'rou' → logprob: -13.00007152557373
    6. 'oupe' → logprob: -13.75007152557373
    7. 'r' → logprob: -14.12507152557373
    8. 'p' → logprob: -16.750070571899414
    9. '<' → logprob: -17.000070571899414
    10. 'gruppe' → logprob: -17.000070571899414

Token 132: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.034387849271297455
    2. '())))' → logprob: -3.6593878269195557
    3. '))' → logprob: -5.409388065338135
    4. '()))' → logprob: -5.659388065338135
    5. ')' → logprob: -10.409387588500977
    6. '()' → logprob: -10.534387588500977
    7. ' ' → logprob: -11.159387588500977
    8. '())))
' → logprob: -11.659387588500977
    9. ')))
' → logprob: -12.409387588500977
    10. '())' → logprob: -12.534387588500977

Token 133: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028837332502007484
    2. '#' → logprob: -4.903837203979492
    3. 'return' → logprob: -5.403837203979492
    4. 'max' → logprob: -5.653837203979492
    5. 'diff' → logprob: -5.778837203979492
    6. 'result' → logprob: -6.153837203979492
    7. 'for' → logprob: -6.403837203979492
    8. 'count' → logprob: -6.778837203979492
    9. 'pr' → logprob: -7.278837203979492
    10. 'if' → logprob: -7.528837203979492

Token 134: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0160058606415987
    2. '=' → logprob: -4.391005992889404
    3. '.append' → logprob: -5.891005992889404
    4. 's' → logprob: -7.766005992889404
    5. '.' → logprob: -8.641005516052246
    6. '=[]' → logprob: -10.391005516052246
    7. '_' → logprob: -10.766005516052246
    8. '[:]' → logprob: -11.266005516052246
    9. '[]' → logprob: -11.391005516052246
    10. '[' → logprob: -11.641005516052246

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07979164272546768
    2. '=' → logprob: -2.70479154586792
    3. '.append' → logprob: -4.95479154586792
    4. '.' → logprob: -6.82979154586792
    5. '_' → logprob: -7.32979154586792
    6. ')' → logprob: -7.95479154586792
    7. '=[]' → logprob: -9.079792022705078
    8. 's' → logprob: -9.204792022705078
    9. '<|end|>' → logprob: -9.329792022705078
    10. '[:]' → logprob: -9.829792022705078

Token 136: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3294564485549927
    2. 'comp' → logprob: -2.079456329345703
    3. 'max' → logprob: -3.329456329345703
    4. '0' → logprob: -3.454456329345703
    5. '[' → logprob: -3.829456329345703
    6. ' []' → logprob: -4.204456329345703
    7. '[]
' → logprob: -4.829456329345703
    8. '[max' → logprob: -4.829456329345703
    9. ' compte' → logprob: -4.954456329345703
    10. 'min' → logprob: -5.329456329345703

Token 137: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6864248514175415
    2. 'comp' → logprob: -1.3114248514175415
    3. 'max' → logprob: -2.436424732208252
    4. '0' → logprob: -3.436424732208252
    5. '[' → logprob: -3.436424732208252
    6. '[]
' → logprob: -4.061424732208252
    7. 'sum' → logprob: -4.186424732208252
    8. 'min' → logprob: -4.561424732208252
    9. 'len' → logprob: -4.686424732208252
    10. '[max' → logprob: -4.811424732208252

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7072096467018127
    2. 'for' → logprob: -0.7072096467018127
    3. ' for' → logprob: -4.457209587097168
    4. 'i' → logprob: -6.457209587097168
    5. ',' → logprob: -7.707209587097168
    6. ' i' → logprob: -9.457209587097168
    7. '#' → logprob: -9.832209587097168
    8. ',
' → logprob: -10.207209587097168
    9. '
' → logprob: -10.457209587097168
    10. ',i' → logprob: -11.207209587097168

Token 139: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039043646305799484
    2. 'i' → logprob: -3.289043664932251
    3. ' for' → logprob: -8.414043426513672
    4. '#' → logprob: -8.914043426513672
    5. 'current' → logprob: -9.289043426513672
    6. 'max' → logprob: -9.414043426513672
    7. 'prev' → logprob: -9.664043426513672
    8. 'sign' → logprob: -9.789043426513672
    9. 'n' → logprob: -9.914043426513672
    10. 'idx' → logprob: -10.039043426513672

Token 140: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010167429223656654
    2. 'i' → logprob: -4.635167598724365
    3. ' for' → logprob: -8.885167121887207
    4. '#' → logprob: -9.385167121887207
    5. 'prev' → logprob: -10.135167121887207
    6. 'current' → logprob: -10.385167121887207
    7. 'cur' → logprob: -11.510167121887207
    8. 'idx' → logprob: -11.635167121887207
    9. 'For' → logprob: -11.885167121887207
    10. 'pos' → logprob: -12.010167121887207

Token 141: ' part' (ID: 997)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06340742856264114
    2. ' for' → logprob: -2.8134074211120605
    3. 'range' → logprob: -7.0634074211120605
    4. ' range' → logprob: -7.9384074211120605
    5. '#' → logprob: -9.438407897949219
    6. 'len' → logprob: -9.813407897949219
    7. '=' → logprob: -10.938407897949219
    8. 'or' → logprob: -11.188407897949219
    9. 'r' → logprob: -11.313407897949219
    10. '_' → logprob: -11.938407897949219

Token 142: ' deux' (ID: 10301)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9036031365394592
    2. ' de' → logprob: -1.7786030769348145
    3. 'de' → logprob: -2.2786030769348145
    4. 'i' → logprob: -2.9036030769348145
    5. 'd' → logprob: -3.2786030769348145
    6. 'index' → logprob: -3.2786030769348145
    7. 'sur' → logprob: -3.2786030769348145
    8. ' sur' → logprob: -3.6536030769348145
    9. ' du' → logprob: -3.9036030769348145
    10. ' i' → logprob: -3.9036030769348145

Token 143: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2775263786315918
    2. 'i' → logprob: -2.277526378631592
    3. ' for' → logprob: -2.277526378631592
    4. ' i' → logprob: -3.777526378631592
    5. 'range' → logprob: -5.527526378631592
    6. '*' → logprob: -6.152526378631592
    7. '=' → logprob: -6.652526378631592
    8. 'fois' → logprob: -6.777526378631592
    9. ' fois' → logprob: -7.027526378631592
    10. ' *' → logprob: -7.277526378631592

Token 144: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2859787940979004
    2. '2' → logprob: -1.4109787940979004
    3. ' deux' → logprob: -5.4109787940979
    4. ' ' → logprob: -9.910978317260742
    5. 'pas' → logprob: -10.035978317260742
    6. '_de' → logprob: -10.285978317260742
    7. 's' → logprob: -10.410978317260742
    8. 'result' → logprob: -10.535978317260742
    9. '```' → logprob: -10.535978317260742
    10. '1' → logprob: -10.785978317260742

Token 145: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10698315501213074
    2. ' for' → logprob: -2.356983184814453
    3. '<|end|>' → logprob: -5.481983184814453
    4. ',' → logprob: -6.231983184814453
    5. ':' → logprob: -8.481983184814453
    6. ' ' → logprob: -9.481983184814453
    7. '<|end|>' → logprob: -9.606983184814453
    8. 'range' → logprob: -9.606983184814453
    9. '
' → logprob: -9.981983184814453
    10. '.' → logprob: -10.106983184814453

Token 146: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011297976598143578
    2. ' for' → logprob: -4.511298179626465
    3. 'i' → logprob: -8.386298179626465
    4. ' i' → logprob: -10.761298179626465
    5. '
' → logprob: -15.261298179626465
    6. ' 
' → logprob: -16.26129722595215
    7. '	for' → logprob: -16.38629722595215
    8. 'range' → logprob: -16.38629722595215
    9. ' ' → logprob: -16.51129722595215
    10. 'n' → logprob: -16.51129722595215

Token 147: ' z' (ID: 579)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09170874953269958
    2. 'for' → logprob: -2.8417086601257324
    3. ' range' → logprob: -3.5917086601257324
    4. 'zip' → logprob: -7.091708660125732
    5. ' for' → logprob: -7.841708660125732
    6. 'enumer' → logprob: -7.966708660125732
    7. ' zip' → logprob: -10.21670913696289
    8. 're' → logprob: -10.84170913696289
    9. 'rang' → logprob: -10.96670913696289
    10. 'com' → logprob: -10.96670913696289

Token 148: 'ipp' (ID: 3012)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -1.723973582556937e-05
    2. 'ipl' → logprob: -12.750017166137695
    3. 'ipe' → logprob: -12.750017166137695
    4. 'ipping' → logprob: -13.000017166137695
    5. 'ippe' → logprob: -13.000017166137695
    6. 'i' → logprob: -13.250017166137695
    7. 'ipp' → logprob: -14.125017166137695
    8. 'IP' → logprob: -14.250017166137695
    9. '   ' → logprob: -14.500017166137695
    10. 'for' → logprob: -14.625017166137695

Token 149: 'ant' (ID: 493)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5764986872673035
    2. 'ping' → logprob: -0.8264986872673035
    3. 'p' → logprob: -8.076498985290527
    4. '(' → logprob: -9.326498985290527
    5. '(comp' → logprob: -9.951498985290527
    6. '(com' → logprob: -10.951498985290527
    7. 'in' → logprob: -11.076498985290527
    8. '(p' → logprob: -11.076498985290527
    9. 'per' → logprob: -11.451498985290527
    10. 'pant' → logprob: -11.701498985290527

Token 150: '.' (ID: 13)
  Prédit: '(comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.0020945880096405745
    2. 'comp' → logprob: -6.252094745635986
    3. ' (' → logprob: -9.627094268798828
    4. '(range' → logprob: -10.502094268798828
    5. '(' → logprob: -10.627094268798828
    6. ' comp' → logprob: -11.252094268798828
    7. 'for' → logprob: -11.377094268798828
    8. '(
' → logprob: -12.127094268798828
    9. '	comp' → logprob: -12.127094268798828
    10. ' for' → logprob: -12.752094268798828

Token 151: ' F' (ID: 454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014166799373924732
    2. ' for' → logprob: -4.264166831970215
    3. '
' → logprob: -12.889166831970215
    4. '```' → logprob: -15.264166831970215
    5. 'range' → logprob: -16.5141658782959
    6. '(' → logprob: -16.7641658782959
    7. ' 
' → logprob: -17.1391658782959
    8. '(
' → logprob: -17.2641658782959
    9. 'For' → logprob: -17.5141658782959
    10. 'pour' → logprob: -17.6391658782959

Token 152: 'aut' (ID: 1828)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00013381359167397022
    2. 'for' → logprob: -9.000133514404297
    3. '(or' → logprob: -12.625133514404297
    4. '
' → logprob: -12.875133514404297
    5. 'er' → logprob: -14.250133514404297
    6. 'o' → logprob: -14.500133514404297
    7. ' or' → logprob: -14.625133514404297
    8. 'orf' → logprob: -15.000133514404297
    9. 'r' → logprob: -15.250133514404297
    10. 'ir' → logprob: -15.500133514404297

Token 153: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4057817757129669
    2. 'comp' → logprob: -1.4057817459106445
    3. 'result' → logprob: -3.4057817459106445
    4. ' for' → logprob: -4.6557817459106445
    5. ' compter' → logprob: -4.7807817459106445
    6. 'len' → logprob: -5.5307817459106445
    7. 'range' → logprob: -5.6557817459106445
    8. 'que' → logprob: -5.9057817459106445
    9. 'zip' → logprob: -6.2807817459106445
    10. 'pas' → logprob: -6.5307817459106445

Token 154: ' les' (ID: 1341)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.223959282040596
    2. 'for' → logprob: -2.72395920753479
    3. 'len' → logprob: -2.84895920753479
    4. 'i' → logprob: -3.47395920753479
    5. 'result' → logprob: -3.84895920753479
    6. 'on' → logprob: -4.348959445953369
    7. ' i' → logprob: -5.848959445953369
    8. 'le' → logprob: -6.223959445953369
    9. ' for' → logprob: -6.848959445953369
    10. 'not' → logprob: -7.098959445953369

Token 155: ' tailles' (ID: 169460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8141798377037048
    2. 'comp' → logprob: -1.8141798973083496
    3. ' i' → logprob: -2.0641798973083496
    4. ' compte' → logprob: -2.4391798973083496
    5. ' c' → logprob: -3.9391798973083496
    6. 'len' → logprob: -3.9391798973083496
    7. ' longue' → logprob: -4.18917989730835
    8. ' indices' → logprob: -4.18917989730835
    9. 'c' → logprob: -4.68917989730835
    10. ' valeurs' → logprob: -5.06417989730835

Token 156: ' soient' (ID: 59497)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.20417183637619019
    2. 'for' → logprob: -2.079171895980835
    3. ' soient' → logprob: -3.829171895980835
    4. 'comp' → logprob: -3.954171895980835
    5. 'diff' → logprob: -4.579171657562256
    6. 'des' → logprob: -6.204171657562256
    7. '#' → logprob: -6.329171657562256
    8. 's' → logprob: -7.079171657562256
    9. 'de' → logprob: -7.204171657562256
    10. 'd' → logprob: -7.454171657562256

Token 157: ' p' (ID: 275)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6513254046440125
    2. 'com' → logprob: -1.6513254642486572
    3. 'len' → logprob: -2.4013254642486572
    4. 'altern' → logprob: -2.5263254642486572
    5. 'multip' → logprob: -4.026325225830078
    6. 'compatible' → logprob: -4.526325225830078
    7. 'diff' → logprob: -4.776325225830078
    8. 'adj' → logprob: -5.026325225830078
    9. ' compatibles' → logprob: -5.026325225830078
    10. 'range' → logprob: -5.026325225830078

Token 158: 'aires' (ID: 8507)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -1.0361146926879883
    2. 'aires' → logprob: -1.7861146926879883
    3. 'ar' → logprob: -1.9111146926879883
    4. 'aire' → logprob: -2.5361146926879883
    5. 'ro' → logprob: -2.7861146926879883
    6. 'airs' → logprob: -3.5361146926879883
    7. 'a' → logprob: -3.5361146926879883
    8. 'r' → logprob: -3.7861146926879883
    9. 'aired' → logprob: -4.161114692687988
    10. '[' → logprob: -4.286114692687988

Token 159: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02236945554614067
    2. ' for' → logprob: -3.897369384765625
    3. '
' → logprob: -6.772369384765625
    4. ',' → logprob: -8.522369384765625
    5. '(' → logprob: -8.647369384765625
    6. 'if' → logprob: -8.772369384765625
    7. '(
' → logprob: -9.272369384765625
    8. ':' → logprob: -11.272369384765625
    9. '   ' → logprob: -11.522369384765625
    10. ' if' → logprob: -11.647369384765625

Token 160: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09872231632471085
    2. ' for' → logprob: -3.098722219467163
    3. ' car' → logprob: -3.973722219467163
    4. ' donc' → logprob: -4.848722457885742
    5. 'car' → logprob: -4.973722457885742
    6. ' sinon' → logprob: -5.973722457885742
    7. ' ce' → logprob: -6.598722457885742
    8. 'so' → logprob: -6.848722457885742
    9. 'range' → logprob: -7.223722457885742
    10. ' parce' → logprob: -7.223722457885742

Token 161: ' tant' (ID: 16235)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.680298924446106
    2. ' len' → logprob: -1.055298924446106
    3. ' True' → logprob: -2.5552988052368164
    4. 'True' → logprob: -3.4302988052368164
    5. 'comp' → logprob: -4.555298805236816
    6. 'result' → logprob: -4.930298805236816
    7. ' c' → logprob: -5.555298805236816
    8. 'c' → logprob: -6.305298805236816
    9. 'range' → logprob: -6.555298805236816
    10. '...' → logprob: -6.680298805236816

Token 162: ' pis' (ID: 19525)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5971412062644958
    2. 'qu' → logprob: -0.8471412062644958
    3. ' que' → logprob: -4.472141265869141
    4. 'pis' → logprob: -5.222141265869141
    5. ' qu' → logprob: -5.597141265869141
    6. 'quil' → logprob: -9.47214126586914
    7. 'import' → logprob: -9.72214126586914
    8. 'q' → logprob: -9.97214126586914
    9. 'p' → logprob: -10.47214126586914
    10. 'pi' → logprob: -10.47214126586914

Token 163: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01375641580671072
    2. ' for' → logprob: -4.388756275177002
    3. '
' → logprob: -6.763756275177002
    4. '(
' → logprob: -9.63875675201416
    5. '(' → logprob: -11.38875675201416
    6. ',' → logprob: -11.76375675201416
    7. ':' → logprob: -14.01375675201416
    8. '   ' → logprob: -14.51375675201416
    9. 'pour' → logprob: -14.76375675201416
    10. '(zip' → logprob: -14.76375675201416

Token 164: ' ça' (ID: 13590)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.205999493598938
    2. ' len' → logprob: -1.330999493598938
    3. ' True' → logprob: -1.580999493598938
    4. 'True' → logprob: -2.0809993743896484
    5. 'result' → logprob: -3.2059993743896484
    6. 'False' → logprob: -3.9559993743896484
    7. 'comp' → logprob: -4.455999374389648
    8. ' False' → logprob: -4.705999374389648
    9. 'i' → logprob: -5.205999374389648
    10. ' result' → logprob: -5.330999374389648

Token 165: ' dépasse' (ID: 165701)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.9845309853553772
    2. ' ne' → logprob: -1.3595309257507324
    3. 'continue' → logprob: -2.2345309257507324
    4. ' dépasse' → logprob: -2.6095309257507324
    5. 'n' → logprob: -2.8595309257507324
    6. 's' → logprob: -3.2345309257507324
    7. ' continue' → logprob: -4.359530925750732
    8. 'd' → logprob: -4.484530925750732
    9. ' s' → logprob: -4.859530925750732
    10. 'b' → logprob: -4.859530925750732

Token 166: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04336784780025482
    2. ' for' → logprob: -3.168367862701416
    3. '
' → logprob: -8.293367385864258
    4. ',' → logprob: -10.168367385864258
    5. 'pour' → logprob: -10.793367385864258
    6. 'range' → logprob: -11.043367385864258
    7. 'len' → logprob: -12.043367385864258
    8. 'zip' → logprob: -12.168367385864258
    9. 'result' → logprob: -12.168367385864258
    10. ':' → logprob: -12.168367385864258

Token 167: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062109965831041336
    2. '
' → logprob: -3.06210994720459
    3. ' for' → logprob: -4.31210994720459
    4. '```' → logprob: -11.56210994720459
    5. ' 
' → logprob: -11.81210994720459
    6. '  
' → logprob: -12.81210994720459
    7. ',' → logprob: -13.81210994720459
    8. '    
' → logprob: -14.18710994720459
    9. '
' → logprob: -14.31210994720459
    10. ':' → logprob: -14.31210994720459

Token 168: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22801344096660614
    2. ' i' → logprob: -1.8530133962631226
    3. 'a' → logprob: -3.853013515472412
    4. 'c' → logprob: -4.853013515472412
    5. 'x' → logprob: -5.728013515472412
    6. ' a' → logprob: -5.728013515472412
    7. 'long' → logprob: -6.353013515472412
    8. ' c' → logprob: -6.603013515472412
    9. 'comp' → logprob: -6.853013515472412
    10. 'l' → logprob: -7.353013515472412

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016475648153573275
    2. ',b' → logprob: -6.501647472381592
    3. ' ,' → logprob: -9.75164794921875
    4. ',a' → logprob: -10.62664794921875
    5. ',n' → logprob: -11.37664794921875
    6. ',c' → logprob: -11.50164794921875
    7. '_,' → logprob: -11.75164794921875
    8. 'a' → logprob: -12.50164794921875
    9. ',_' → logprob: -12.75164794921875
    10. ',s' → logprob: -12.75164794921875

Token 170: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.676292231422849e-05
    2. ' b' → logprob: -11.000017166137695
    3. '	b' → logprob: -22.250017166137695
    4. 'c' → logprob: -22.875017166137695
    5. ' ' → logprob: -23.125017166137695
    6. 's' → logprob: -23.125017166137695
    7. '```' → logprob: -23.125017166137695
    8. 'p' → logprob: -23.250017166137695
    9. 'a' → logprob: -23.625017166137695
    10. ' ' → logprob: -23.625017166137695

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11284519731998444
    2. 'in' → logprob: -2.2378451824188232
    3. ',' → logprob: -11.737845420837402
    4. ' ' → logprob: -11.862845420837402
    5. 's' → logprob: -13.487845420837402
    6. '	in' → logprob: -13.612845420837402
    7. ')' → logprob: -14.237845420837402
    8. 'ins' → logprob: -14.987845420837402
    9. '  ' → logprob: -15.112845420837402
    10. 'a' → logprob: -15.112845420837402

Token 172: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.07890795916318893
    2. ' zip' → logprob: -2.5789079666137695
    3. 'it' → logprob: -11.32890796661377
    4. '(zip' → logprob: -12.57890796661377
    5. ' ' → logprob: -14.57890796661377
    6. 'comp' → logprob: -14.82890796661377
    7. 'z' → logprob: -14.82890796661377
    8. '   ' → logprob: -14.95390796661377
    9. ' itertools' → logprob: -14.95390796661377
    10. 'pair' → logprob: -15.20390796661377

Token 173: '(*(' (ID: 103513)
  Prédit: '(comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(comp' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.500000953674316
    3. '(' → logprob: -16.625
    4. '(cont' → logprob: -18.125
    5. ' ' → logprob: -18.375
    6. 'comp' → logprob: -19.5
    7. '  ' → logprob: -20.125
    8. '	comp' → logprob: -20.625
    9. '(count' → logprob: -20.75
    10. '(com' → logprob: -21.0

Token 174: 'iter' (ID: 2340)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20928256213665009
    2. 'comp' → logprob: -1.9592825174331665
    3. '(comp' → logprob: -3.709282636642456
    4. '[count' → logprob: -3.834282636642456
    5. '[result' → logprob: -7.084282398223877
    6. 'iter' → logprob: -9.084282875061035
    7. '[c' → logprob: -9.209282875061035
    8. '[it' → logprob: -9.459282875061035
    9. ' [' → logprob: -9.584282875061035
    10. ' compte' → logprob: -9.709282875061035

Token 175: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -7.896309739408025e-07
    2. 'comp' → logprob: -15.250000953674316
    3. ' (' → logprob: -15.625000953674316
    4. ')(' → logprob: -15.875000953674316
    5. ')' → logprob: -16.5
    6. '	comp' → logprob: -17.25
    7. '(' → logprob: -17.375
    8. '(cont' → logprob: -18.125
    9. '```' → logprob: -18.125
    10. '
' → logprob: -18.75

Token 176: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -1.981667537620524e-06
    2. 't' → logprob: -14.375001907348633
    3. 'tes' → logprob: -15.125001907348633
    4. 'e' → logprob: -15.375001907348633
    5. 'pte' → logprob: -15.375001907348633
    6. '(te' → logprob: -15.500001907348633
    7. 'teur' → logprob: -16.000001907348633
    8. 'те' → logprob: -16.375001907348633
    9. 'tep' → logprob: -16.875001907348633
    10. 'ote' → logprob: -17.500001907348633

Token 177: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017174237873405218
    2. 's' → logprob: -7.626717567443848
    3. ')),' → logprob: -7.876717567443848
    4. '))' → logprob: -8.001717567443848
    5. ' ),' → logprob: -8.751717567443848
    6. '```' → logprob: -9.376717567443848
    7. ',' → logprob: -9.751717567443848
    8. ')' → logprob: -9.876717567443848
    9. ' ' → logprob: -10.376717567443848
    10. ')))' → logprob: -10.501717567443848

Token 178: ')' (ID: 8)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.040654730051755905
    2. 'it' → logprob: -3.6656546592712402
    3. ' iter' → logprob: -4.79065465927124
    4. '*(' → logprob: -5.91565465927124
    5. '   ' → logprob: -6.29065465927124
    6. '  ' → logprob: -7.41565465927124
    7. ' ' → logprob: -8.165655136108398
    8. '	iter' → logprob: -9.540655136108398
    9. '[' → logprob: -9.665655136108398
    10. '*' → logprob: -10.290655136108398

Token 179: ' *' (ID: 425)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03856007009744644
    2. ')' → logprob: -3.788560152053833
    3. ')*' → logprob: -5.038559913635254
    4. ' ' → logprob: -5.538559913635254
    5. '[' → logprob: -6.163559913635254
    6. '1' → logprob: -7.163559913635254
    7. ',' → logprob: -7.163559913635254
    8. '```' → logprob: -8.288559913635254
    9. '  ' → logprob: -8.538559913635254
    10. '*' → logprob: -8.663559913635254

Token 180: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '4' → logprob: -16.000076293945312
    4. '   ' → logprob: -16.125076293945312
    5. '  ' → logprob: -16.375076293945312
    6. '２' → logprob: -17.000076293945312
    7. '۲' → logprob: -17.500076293945312
    8. '```' → logprob: -17.875076293945312
    9. '3' → logprob: -18.062576293945312
    10. ' ' → logprob: -18.375076293945312

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.190178904333152e-05
    2. ' ' → logprob: -10.375031471252441
    3. '4' → logprob: -15.250031471252441
    4. '   ' → logprob: -16.812532424926758
    5. '3' → logprob: -16.937532424926758
    6. '  ' → logprob: -17.062532424926758
    7. '```' → logprob: -17.125032424926758
    8. '22' → logprob: -17.312532424926758
    9. '۲' → logprob: -17.437532424926758
    10. '２' → logprob: -17.437532424926758

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009147689677774906
    2. '):
' → logprob: -4.884147644042969
    3. ':' → logprob: -6.509147644042969
    4. ' ):' → logprob: -10.634147644042969
    5. '):
' → logprob: -11.134147644042969
    6. ')' → logprob: -11.634147644042969
    7. ':
' → logprob: -14.009147644042969
    8. '():' → logprob: -14.884147644042969
    9. '):

' → logprob: -15.009147644042969
    10. ' ):
' → logprob: -15.259147644042969

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02801061049103737
    2. ':' → logprob: -3.778010606765747
    3. ':
' → logprob: -5.903010845184326
    4. 'result' → logprob: -6.403010845184326
    5. ' if' → logprob: -9.278010368347168
    6. ' result' → logprob: -9.403010368347168
    7. 'if' → logprob: -9.778010368347168
    8. '  ' → logprob: -10.403010368347168
    9. '    
' → logprob: -10.653010368347168
    10. '):
' → logprob: -11.153010368347168

Token 184: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01479185838252306
    2. '   ' → logprob: -4.389791965484619
    3. 'if' → logprob: -6.389791965484619
    4. ' result' → logprob: -7.639791965484619
    5. ' if' → logprob: -9.264791488647461
    6. ' resultat' → logprob: -11.264791488647461
    7. '	result' → logprob: -12.889791488647461
    8. '
' → logprob: -13.139791488647461
    9. '    
' → logprob: -13.389791488647461
    10. '  ' → logprob: -13.639791488647461

Token 185: ' max' (ID: 2999)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19216139614582062
    2. 'if' → logprob: -1.8171614408493042
    3. '   ' → logprob: -4.442161560058594
    4. ' if' → logprob: -8.067161560058594
    5. ' result' → logprob: -9.317161560058594
    6. ' ' → logprob: -9.942161560058594
    7. 'res' → logprob: -10.942161560058594
    8. '#' → logprob: -11.442161560058594
    9. '  ' → logprob: -11.442161560058594
    10. 'min' → logprob: -11.442161560058594

Token 186: '-min' (ID: 20045)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4691145420074463
    2. '_' → logprob: -2.0941145420074463
    3. '_result' → logprob: -2.2191145420074463
    4. '_val' → logprob: -3.2191145420074463
    5. '=' → logprob: -3.9691145420074463
    6. '(result' → logprob: -4.094114303588867
    7. ' =' → logprob: -4.719114303588867
    8. ' +=' → logprob: -4.844114303588867
    9. '_=' → logprob: -4.844114303588867
    10. '(' → logprob: -4.969114303588867

Token 187: ' pour' (ID: 1930)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4692884385585785
    2. '   ' → logprob: -1.0942884683609009
    3. '(result' → logprob: -3.9692883491516113
    4. ' result' → logprob: -4.844288349151611
    5. ' =' → logprob: -5.219288349151611
    6. '=result' → logprob: -5.719288349151611
    7. '=' → logprob: -7.094288349151611
    8. '	result' → logprob: -7.219288349151611
    9. ',result' → logprob: -7.469288349151611
    10. ' resultat' → logprob: -7.844288349151611

Token 188: ' répart' (ID: 147636)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.8190298080444336
    2. ' abs' → logprob: -1.8190298080444336
    3. ' a' → logprob: -2.0690298080444336
    4. ' min' → logprob: -2.0690298080444336
    5. ' max' → logprob: -2.1940298080444336
    6. 'result' → logprob: -2.3190298080444336
    7. 'a' → logprob: -2.9440298080444336
    8. 'max' → logprob: -3.4440298080444336
    9. 'abs' → logprob: -3.9440298080444336
    10. ' b' → logprob: -3.9440298080444336

Token 189: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.02009589597582817
    2. 'ager' → logprob: -5.0200958251953125
    3. 'asser' → logprob: -5.5200958251953125
    4. 'irer' → logprob: -5.8950958251953125
    5. 'érer' → logprob: -6.3950958251953125
    6. 'iter' → logprob: -7.3950958251953125
    7. 'isser' → logprob: -7.5200958251953125
    8. 'urer' → logprob: -7.6450958251953125
    9. 'iquer' → logprob: -7.6450958251953125
    10. 'uer' → logprob: -8.270095825195312

Token 190: ' les' (ID: 1341)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.037349019199609756
    2. ' resultat' → logprob: -4.537349224090576
    3. ' result' → logprob: -4.662349224090576
    4. '   ' → logprob: -4.787349224090576
    5. '(result' → logprob: -5.037349224090576
    6. ' résultat' → logprob: -8.412348747253418
    7. '=result' → logprob: -8.787348747253418
    8. '(' → logprob: -8.912348747253418
    9. '_result' → logprob: -8.912348747253418
    10. ',result' → logprob: -8.912348747253418

Token 191: ' calcul' (ID: 7559)
  Prédit: ' flux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flux' → logprob: -2.4677345752716064
    2. ' a' → logprob: -2.5927345752716064
    3. 'fl' → logprob: -2.5927345752716064
    4. ' fl' → logprob: -2.7177345752716064
    5. ' ' → logprob: -2.7177345752716064
    6. 'a' → logprob: -2.8427345752716064
    7. ' min' → logprob: -2.8427345752716064
    8. 'flux' → logprob: -3.0927345752716064
    9. ' parts' → logprob: -3.3427345752716064
    10. ' b' → logprob: -3.5302345752716064

Token 192: 's' (ID: 82)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.01608223468065262
    2. '   ' → logprob: -5.516082286834717
    3. 'result' → logprob: -5.891082286834717
    4. 'ateur' → logprob: -5.891082286834717
    5. 'max' → logprob: -6.266082286834717
    6. '#' → logprob: -6.516082286834717
    7. 'ates' → logprob: -7.641082286834717
    8. 'ations' → logprob: -7.766082286834717
    9. 'es' → logprob: -8.266081809997559
    10. 'a' → logprob: -8.891081809997559

Token 193: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5408247709274292
    2. 'result' → logprob: -0.9158247709274292
    3. ' result' → logprob: -4.415824890136719
    4. '<|end|>' → logprob: -6.665824890136719
    5. ',' → logprob: -7.165824890136719
    6. '    
' → logprob: -7.540824890136719
    7. '	result' → logprob: -7.665824890136719
    8. ')' → logprob: -8.040824890136719
    9. ',result' → logprob: -8.040824890136719
    10. '(result' → logprob: -8.165824890136719

Token 194: ' c' (ID: 274)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14769810438156128
    2. '   ' → logprob: -2.022698163986206
    3. ' result' → logprob: -5.397697925567627
    4. ' resultat' → logprob: -7.772697925567627
    5. '	result' → logprob: -10.647698402404785
    6. '  ' → logprob: -11.022698402404785
    7. ' résultat' → logprob: -12.272698402404785
    8. '    
' → logprob: -12.272698402404785
    9. 'res' → logprob: -13.022698402404785
    10. ' ' → logprob: -13.022698402404785

Token 195: ''est' (ID: 6616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.543138861656189
    2. '   ' → logprob: -1.043138861656189
    3. ' result' → logprob: -3.0431389808654785
    4. 'ont' → logprob: -6.0431389808654785
    5. '=result' → logprob: -6.0431389808654785
    6. ''est' → logprob: -6.1681389808654785
    7. ' resultat' → logprob: -6.1681389808654785
    8. '=' → logprob: -6.4181389808654785
    9. 'est' → logprob: -6.4181389808654785
    10. ' résultat' → logprob: -6.7931389808654785

Token 196: ' logique' (ID: 115350)
  Prédit: ' mieux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mieux' → logprob: -1.7207677364349365
    2. ' pas' → logprob: -1.9707677364349365
    3. 'plus' → logprob: -2.4707677364349365
    4. ' plus' → logprob: -2.8457677364349365
    5. 'pas' → logprob: -2.8457677364349365
    6. ' ça' → logprob: -2.9707677364349365
    7. ' toujours' → logprob: -3.0957677364349365
    8. ' un' → logprob: -3.4707677364349365
    9. ' une' → logprob: -3.4707677364349365
    10. ' la' → logprob: -3.5957677364349365

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45757606625556946
    2. 'result' → logprob: -1.082576036453247
    3. '
' → logprob: -4.957576274871826
    4. ')' → logprob: -5.332576274871826
    5. ' result' → logprob: -5.582576274871826
    6. '<|end|>' → logprob: -5.832576274871826
    7. '    
' → logprob: -5.957576274871826
    8. ' ' → logprob: -6.207576274871826
    9. '  ' → logprob: -6.832576274871826
    10. '	result' → logprob: -7.207576274871826

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35600215196609497
    2. 'result' → logprob: -1.2310020923614502
    3. ' result' → logprob: -4.981002330780029
    4. ' resultat' → logprob: -8.356001853942871
    5. '
' → logprob: -8.606001853942871
    6. '    
' → logprob: -9.356001853942871
    7. '	result' → logprob: -9.481001853942871
    8. '  ' → logprob: -11.106001853942871
    9. ',result' → logprob: -11.106001853942871
    10. ' résultat' → logprob: -11.606001853942871

Token 199: ' plus' (ID: 2932)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.002847079187631607
    2. '   ' → logprob: -5.877847194671631
    3. ' result' → logprob: -10.252846717834473
    4. ' resultat' → logprob: -12.377846717834473
    5. '	result' → logprob: -14.252846717834473
    6. 'res' → logprob: -14.752846717834473
    7. '  ' → logprob: -14.877846717834473
    8. '
' → logprob: -14.877846717834473
    9. 'rés' → logprob: -15.127846717834473
    10. '    
' → logprob: -15.127846717834473

Token 200: 'grand' (ID: 85533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7181693315505981
    2. ' =' → logprob: -0.7181693315505981
    3. ' +=' → logprob: -4.718169212341309
    4. '+=' → logprob: -4.968169212341309
    5. '   ' → logprob: -6.218169212341309
    6. ' ' → logprob: -6.218169212341309
    7. '_result' → logprob: -6.468169212341309
    8. '=result' → logprob: -7.218169212341309
    9. 'result' → logprob: -7.468169212341309
    10. '  ' → logprob: -8.343169212341309

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12919066846370697
    2. '=' → logprob: -2.504190683364868
    3. ',' → logprob: -3.254190683364868
    4. '=max' → logprob: -7.754190444946289
    5. ' ,' → logprob: -9.004190444946289
    6. ',max' → logprob: -9.379190444946289
    7. ')' → logprob: -10.004190444946289
    8. '   ' → logprob: -10.254190444946289
    9. ' ' → logprob: -10.254190444946289
    10. 'max' → logprob: -10.629190444946289

Token 202: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889033854007721
    2. ' max' → logprob: -2.578890323638916
    3. 'a' → logprob: -15.453890800476074
    4. '	max' → logprob: -15.828890800476074
    5. '(max' → logprob: -16.328889846801758
    6. ' ' → logprob: -16.578889846801758
    7. '   ' → logprob: -16.953889846801758
    8. '  ' → logprob: -19.078889846801758
    9. 'b' → logprob: -19.328889846801758
    10. 'min' → logprob: -19.328889846801758

Token 203: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.37500286102295
    3. 'a' → logprob: -14.00000286102295
    4. ' (' → logprob: -17.625001907348633
    5. '((' → logprob: -17.750001907348633
    6. '([' → logprob: -19.125001907348633
    7. '(
' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '(b' → logprob: -20.125001907348633
    10. '(A' → logprob: -20.375001907348633

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07708386331796646
    2. ',b' → logprob: -3.0770838260650635
    3. ' ,' → logprob: -3.5770838260650635
    4. 'b' → logprob: -9.202083587646484
    5. ' b' → logprob: -10.452083587646484
    6. ')' → logprob: -12.702083587646484
    7. ',
' → logprob: -13.077083587646484
    8. ' ,
' → logprob: -14.577083587646484
    9. ',a' → logprob: -15.077083587646484
    10. ' ' → logprob: -15.702083587646484

Token 205: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141403377056122
    2. ' b' → logprob: -1.7014139890670776
    3. ' ' → logprob: -14.826414108276367
    4. ')b' → logprob: -15.701414108276367
    5. '   ' → logprob: -16.451414108276367
    6. ')' → logprob: -16.826414108276367
    7. ' ' → logprob: -16.951414108276367
    8. '	b' → logprob: -17.701414108276367
    9. '  ' → logprob: -18.701414108276367
    10. ',b' → logprob: -20.076414108276367

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6328892707824707
    2. ')
' → logprob: -0.7578892707824707
    3. ' )
' → logprob: -9.007888793945312
    4. ')
' → logprob: -9.507888793945312
    5. ' )' → logprob: -9.632888793945312
    6. ')

' → logprob: -11.882888793945312
    7. '-' → logprob: -12.007888793945312
    8. '   ' → logprob: -12.507888793945312
    9. ' -' → logprob: -12.632888793945312
    10. '<|end|>' → logprob: -12.882888793945312

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13315525650978088
    2. 'moins' → logprob: -2.758155345916748
    3. '<|end|>' → logprob: -3.633155345916748
    4. '    
' → logprob: -3.883155345916748
    5. ',' → logprob: -5.508155345916748
    6. 'plus' → logprob: -6.008155345916748
    7. ' moins' → logprob: -6.258155345916748
    8. ' plus' → logprob: -6.508155345916748
    9. '+' → logprob: -7.258155345916748
    10. '
' → logprob: -7.758155345916748

Token 208: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' (adapté à ' plus') → logprob: -0.0955430269241333
    2. 'moins' → logprob: -2.8455429077148438
    3. ' plus' → logprob: -3.8455429077148438
    4. 'pet' → logprob: -4.970542907714844
    5. ' moins' → logprob: -5.720542907714844
    6. 'minus' → logprob: -8.095542907714844
    7. 'mo' → logprob: -8.595542907714844
    8. '    
' → logprob: -8.595542907714844
    9. '+' → logprob: -9.345542907714844
    10. 'result' → logprob: -9.845542907714844

Token 209: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.00016444525681436062
    2. ' petit' → logprob: -9.125164031982422
    3. 'Petit' → logprob: -11.125164031982422
    4. '```' → logprob: -11.375164031982422
    5. 'small' → logprob: -11.875164031982422
    6. 'court' → logprob: -12.375164031982422
    7. '_p' → logprob: -12.500164031982422
    8. 'grand' → logprob: -13.000164031982422
    9. '   ' → logprob: -13.250164031982422
    10. '_' → logprob: -13.500164031982422

Token 210: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -4.320199877838604e-07
    2. '

' → logprob: -16.5
    3. ' it' → logprob: -16.625
    4. 'i' → logprob: -16.75
    5. 'its' → logprob: -17.0
    6. '#' → logprob: -17.75
    7. 'is' → logprob: -18.875
    8. 'itl' → logprob: -18.875
    9. '```' → logprob: -19.125
    10. '
' → logprob: -19.125

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. ',' → logprob: -14.818148612976074
    4. ' ' → logprob: -14.943148612976074
    5. ')' → logprob: -15.443148612976074
    6. '  ' → logprob: -17.318147659301758
    7. '=int' → logprob: -17.568147659301758
    8. '=min' → logprob: -17.818147659301758
    9. ' ' → logprob: -17.943147659301758
    10. '＝' → logprob: -18.193147659301758

Token 212: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006715370807796717
    2. ' min' → logprob: -5.006715297698975
    3. '(min' → logprob: -18.506715774536133
    4. '	min' → logprob: -19.756715774536133
    5. 'mini' → logprob: -21.256715774536133
    6. '.min' → logprob: -21.756715774536133
    7. '=min' → logprob: -22.131715774536133
    8. '[min' → logprob: -22.256715774536133
    9. '_min' → logprob: -22.381715774536133
    10. '-min' → logprob: -22.631715774536133

Token 213: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. '(
' → logprob: -16.875001907348633
    4. 'a' → logprob: -16.875001907348633
    5. ' (' → logprob: -18.750001907348633
    6. '((' → logprob: -19.625001907348633
    7. '(ai' → logprob: -19.875001907348633
    8. '(A' → logprob: -20.375001907348633
    9. '([' → logprob: -21.250001907348633
    10. '```' → logprob: -22.250001907348633

Token 214: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0036865323781967163
    2. ',' → logprob: -5.753686428070068
    3. '(' → logprob: -8.003686904907227
    4. 'a' → logprob: -9.253686904907227
    5. ',a' → logprob: -9.753686904907227
    6. ' (' → logprob: -11.378686904907227
    7. ' ,' → logprob: -12.128686904907227
    8. '(
' → logprob: -13.503686904907227
    9. ')' → logprob: -14.003686904907227
    10. ' a' → logprob: -14.628686904907227

Token 215: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00034964739461429417
    2. ' a' → logprob: -8.125349998474121
    3. 'b' → logprob: -9.875349998474121
    4. ' ' → logprob: -14.250349998474121
    5. '	a' → logprob: -14.750349998474121
    6. '   ' → logprob: -14.750349998474121
    7. ' b' → logprob: -14.875349998474121
    8. '(a' → logprob: -16.000349044799805
    9. ')' → logprob: -16.125349044799805
    10. '  ' → logprob: -16.625349044799805

Token 216: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0803075060248375
    2. ')
' → logprob: -2.5803074836730957
    3. '   ' → logprob: -6.580307483673096
    4. ')
' → logprob: -10.705307960510254
    5. ')

' → logprob: -12.830307960510254
    6. ',' → logprob: -13.455307960510254
    7. '),' → logprob: -14.705307960510254
    8. '<|end|>' → logprob: -14.830307960510254
    9. ' )' → logprob: -15.205307960510254
    10. ')+' → logprob: -15.455307960510254

Token 217: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5797078013420105
    2. '   ' → logprob: -0.8297078013420105
    3. '
' → logprob: -6.079707622528076
    4. '    
' → logprob: -6.954707622528076
    5. ' result' → logprob: -7.829707622528076
    6. 'if' → logprob: -10.079708099365234
    7. '  
' → logprob: -10.829708099365234
    8. '```' → logprob: -11.329708099365234
    9. '  ' → logprob: -11.829708099365234
    10. '   
' → logprob: -12.079708099365234

Token 218: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00160138716455549
    2. 'if' → logprob: -6.626601219177246
    3. '   ' → logprob: -8.376601219177246
    4. '    
' → logprob: -11.126601219177246
    5. '
' → logprob: -11.751601219177246
    6. 'diff' → logprob: -12.001601219177246
    7. 'for' → logprob: -12.626601219177246
    8. 'difference' → logprob: -13.001601219177246
    9. 'while' → logprob: -13.126601219177246
    10. 'res' → logprob: -13.251601219177246

Token 219: ' Form' (ID: 5287)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00046546570956707
    2. 'if' → logprob: -7.875465393066406
    3. '   ' → logprob: -10.000465393066406
    4. '#' → logprob: -11.250465393066406
    5. ' result' → logprob: -11.750465393066406
    6. 'res' → logprob: -12.375465393066406
    7. '
' → logprob: -12.500465393066406
    8. '    
' → logprob: -12.875465393066406
    9. 'rés' → logprob: -13.375465393066406
    10. 'diff' → logprob: -13.750465393066406

Token 220: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00464776111766696
    2. 'e' → logprob: -5.879647731781006
    3. 'ate' → logprob: -7.879647731781006
    4. '=' → logprob: -8.129648208618164
    5. ' =' → logprob: -8.504648208618164
    6. 'ules' → logprob: -8.754648208618164
    7. 'u' → logprob: -8.754648208618164
    8. 'ulaire' → logprob: -9.254648208618164
    9. '   ' → logprob: -9.379648208618164
    10. 'ula' → logprob: -10.004648208618164

Token 221: ' magique' (ID: 154560)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.717420220375061
    2. ' =' → logprob: -1.092420220375061
    3. '=' → logprob: -2.8424201011657715
    4. '   ' → logprob: -3.0924201011657715
    5. ' +=' → logprob: -3.4674201011657715
    6. ' result' → logprob: -4.3424201011657715
    7. '=result' → logprob: -4.3424201011657715
    8. '+=' → logprob: -4.5924201011657715
    9. ' resultat' → logprob: -6.2174201011657715
    10. ':' → logprob: -7.2174201011657715

Token 222: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007854326628148556
    2. '   ' → logprob: -5.132854461669922
    3. '
' → logprob: -6.632854461669922
    4. ' result' → logprob: -8.132854461669922
    5. '    
' → logprob: -8.632854461669922
    6. ' =' → logprob: -10.507854461669922
    7. '=result' → logprob: -11.007854461669922
    8. '=' → logprob: -11.132854461669922
    9. ' +=' → logprob: -11.632854461669922
    10. '[result' → logprob: -11.757854461669922

Token 223: ' ça' (ID: 13590)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0021113590337336063
    2. '   ' → logprob: -6.252111434936523
    3. ' result' → logprob: -9.127111434936523
    4. ' resultat' → logprob: -9.877111434936523
    5. '
' → logprob: -11.877111434936523
    6. '    
' → logprob: -12.252111434936523
    7. 'if' → logprob: -13.002111434936523
    8. '  ' → logprob: -13.377111434936523
    9. 'res' → logprob: -13.502111434936523
    10. 'rés' → logprob: -13.877111434936523

Token 224: ' doit' (ID: 21822)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3914496898651123
    2. ' +=' → logprob: -1.6414496898651123
    3. '=' → logprob: -2.6414496898651123
    4. ' =' → logprob: -3.2664496898651123
    5. 'result' → logprob: -4.391449928283691
    6. '=result' → logprob: -5.141449928283691
    7. 's' → logprob: -7.141449928283691
    8. ' result' → logprob: -7.641449928283691
    9. '   ' → logprob: -7.766449928283691
    10. ':' → logprob: -8.641449928283691

Token 225: ' donner' (ID: 32394)
  Prédit: 'don'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'don' → logprob: -0.14728006720542908
    2. 'faire' → logprob: -3.397279977798462
    3. 'contin' → logprob: -3.897279977798462
    4. 'être' → logprob: -4.147280216217041
    5. 'fonction' → logprob: -4.147280216217041
    6. 's' → logprob: -4.897280216217041
    7. 'sembler' → logprob: -5.522280216217041
    8. ' ' → logprob: -5.647280216217041
    9. 'se' → logprob: -5.647280216217041
    10. ' donner' → logprob: -5.772280216217041

Token 226: ' la' (ID: 557)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2654390335083008
    2. ' plus' → logprob: -1.5154390335083008
    3. '2' → logprob: -5.140439033508301
    4. 'result' → logprob: -5.765439033508301
    5. ' result' → logprob: -7.140439033508301
    6. ' ' → logprob: -7.140439033508301
    7. ' resultat' → logprob: -7.640439033508301
    8. '   ' → logprob: -7.640439033508301
    9. '+' → logprob: -7.765439033508301
    10. 'min' → logprob: -8.0154390335083

Token 227: ' somme' (ID: 64484)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.04800659418106079
    2. 'result' → logprob: -3.548006534576416
    3. 'max' → logprob: -5.173006534576416
    4. '2' → logprob: -5.798006534576416
    5. 'min' → logprob: -5.798006534576416
    6. ' plus' → logprob: -6.173006534576416
    7. 'minimum' → logprob: -6.423006534576416
    8. 'b' → logprob: -7.423006534576416
    9. '0' → logprob: -7.798006534576416
    10. 'nombre' → logprob: -8.298007011413574

Token 228: ' attend' (ID: 13384)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7042922377586365
    2. ' +=' → logprob: -0.8292922377586365
    3. '   ' → logprob: -2.8292922973632812
    4. 'result' → logprob: -5.329292297363281
    5. '=' → logprob: -5.829292297363281
    6. ' =' → logprob: -6.454292297363281
    7. '+=(' → logprob: -8.329292297363281
    8. 'de' → logprob: -8.704292297363281
    9. ' result' → logprob: -9.454292297363281
    10. ' de' → logprob: -9.579292297363281

Token 229: 'ue' (ID: 466)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.9220108985900879
    2. 'e' → logprob: -1.297010898590088
    3. '+=' → logprob: -2.297010898590088
    4. '   ' → logprob: -2.922010898590088
    5. ' +=' → logprob: -3.172010898590088
    6. '=' → logprob: -3.297010898590088
    7. '+' → logprob: -3.797010898590088
    8. 'result' → logprob: -3.922010898590088
    9. 'ee' → logprob: -4.172010898590088
    10. ' =' → logprob: -4.172010898590088

Token 230: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007359448354691267
    2. '   ' → logprob: -5.007359504699707
    3. '
' → logprob: -7.507359504699707
    4. ' result' → logprob: -9.507359504699707
    5. '    
' → logprob: -11.257359504699707
    6. ',result' → logprob: -13.382359504699707
    7. '[result' → logprob: -14.132359504699707
    8. '	result' → logprob: -14.257359504699707
    9. '=result' → logprob: -14.507359504699707
    10. '```' → logprob: -14.507359504699707

Token 231: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.049481332302093506
    2. '   ' → logprob: -3.0494813919067383
    3. ' result' → logprob: -7.799481391906738
    4. '
' → logprob: -7.799481391906738
    5. '    
' → logprob: -9.674481391906738
    6. ',result' → logprob: -13.174481391906738
    7. '```' → logprob: -13.424481391906738
    8. '	result' → logprob: -13.549481391906738
    9. '  
' → logprob: -13.924481391906738
    10. ' resultat' → logprob: -14.049481391906738

Token 232: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0002491807099431753
    2. '   ' → logprob: -8.375248908996582
    3. '
' → logprob: -11.625248908996582
    4. ' result' → logprob: -11.750248908996582
    5. '    
' → logprob: -13.625248908996582
    6. ' resultat' → logprob: -15.375248908996582
    7. '	result' → logprob: -16.1252498626709
    8. '  ' → logprob: -16.7502498626709
    9. 'resultado' → logprob: -17.0002498626709
    10. 'res' → logprob: -17.1252498626709

Token 233: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.251953661441803
    2. '+=' → logprob: -1.5019536018371582
    3. '+=(' → logprob: -11.626954078674316
    4. '=' → logprob: -12.001954078674316
    5. '+' → logprob: -12.876954078674316
    6. ' ' → logprob: -13.376954078674316
    7. ']+=' → logprob: -13.376954078674316
    8. ' ' → logprob: -13.876954078674316
    9. ' =' → logprob: -13.876954078674316
    10. '+='' → logprob: -13.876954078674316

Token 234: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15203657746315002
    2. ' resultat' → logprob: -2.152036666870117
    3. 'plus' → logprob: -4.652036666870117
    4. ' result' → logprob: -5.152036666870117
    5. ' plus' → logprob: -5.527036666870117
    6. 'max' → logprob: -5.777036666870117
    7. '+' → logprob: -6.902036666870117
    8. ' max' → logprob: -7.277036666870117
    9. ' résultat' → logprob: -8.152036666870117
    10. '   ' → logprob: -9.777036666870117

Token 235: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16026079654693604
    2. ' +' → logprob: -1.910260796546936
    3. ' plus' → logprob: -10.410261154174805
    4. 'max' → logprob: -13.035261154174805
    5. 'plus' → logprob: -13.410261154174805
    6. ' ' → logprob: -14.285261154174805
    7. ' max' → logprob: -14.535261154174805
    8. '+(' → logprob: -14.910261154174805
    9. '+b' → logprob: -15.535261154174805
    10. '+
' → logprob: -15.535261154174805

Token 236: ' (' (ID: 350)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.20431742072105408
    2. '2' → logprob: -2.204317331314087
    3. ' plus' → logprob: -2.704317331314087
    4. ' ' → logprob: -5.829317569732666
    5. 'min' → logprob: -6.079317569732666
    6. '(' → logprob: -6.954317569732666
    7. ' min' → logprob: -7.454317569732666
    8. ' (' → logprob: -8.204317092895508
    9. '4' → logprob: -8.829317092895508
    10. '(min' → logprob: -9.454317092895508

Token 237: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.01717456616461277
    2. '2' → logprob: -5.01717472076416
    3. '(' → logprob: -5.26717472076416
    4. ' plus' → logprob: -6.39217472076416
    5. 'min' → logprob: -6.76717472076416
    6. '(min' → logprob: -6.89217472076416
    7. ' (' → logprob: -8.01717472076416
    8. '4' → logprob: -8.14217472076416
    9. ' ' → logprob: -8.51717472076416
    10. '   ' → logprob: -8.64217472076416

Token 238: 'grand' (ID: 85533)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.16070975363254547
    2. 'grand' → logprob: -1.9107097387313843
    3. 'plus' → logprob: -7.910709857940674
    4. 'gr' → logprob: -10.660709381103516
    5. ' petit' → logprob: -11.348209381103516
    6. '-' → logprob: -12.410709381103516
    7. ' grand' → logprob: -12.473209381103516
    8. 'pret' → logprob: -12.473209381103516
    9. '-grand' → logprob: -12.535709381103516
    10. 'g' → logprob: -12.598209381103516

Token 239: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.530116617679596
    2. ' -' → logprob: -0.905116617679596
    3. '+' → logprob: -5.280116558074951
    4. ' +' → logprob: -6.780116558074951
    5. '*' → logprob: -8.03011703491211
    6. ' //' → logprob: -9.40511703491211
    7. ' ' → logprob: -9.53011703491211
    8. ' *' → logprob: -9.90511703491211
    9. '//' → logprob: -10.03011703491211
    10. 'plus' → logprob: -10.03011703491211

Token 240: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1539115607738495
    2. 'plus' → logprob: -2.028911590576172
    3. ' (' → logprob: -5.153911590576172
    4. '2' → logprob: -5.903911590576172
    5. ' plus' → logprob: -6.403911590576172
    6. '(pl' → logprob: -8.653911590576172
    7. '(min' → logprob: -8.653911590576172
    8. ' ' → logprob: -8.778911590576172
    9. '3' → logprob: -9.403911590576172
    10. '4' → logprob: -10.153911590576172

Token 241: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.030491000041365623
    2. '(' → logprob: -3.5304911136627197
    3. '2' → logprob: -7.530490875244141
    4. ' plus' → logprob: -9.28049087524414
    5. '1' → logprob: -10.28049087524414
    6. '+' → logprob: -10.53049087524414
    7. ' (' → logprob: -11.78049087524414
    8. '+(' → logprob: -11.78049087524414
    9. '3' → logprob: -12.15549087524414
    10. 'moins' → logprob: -12.28049087524414

Token 242: 'grand' (ID: 85533)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0015590202528983355
    2. 'grand' → logprob: -6.876559257507324
    3. 'plus' → logprob: -7.626559257507324
    4. ' petit' → logprob: -12.126559257507324
    5. '-' → logprob: -12.251559257507324
    6. '```' → logprob: -12.751559257507324
    7. ' ' → logprob: -13.064059257507324
    8. '+' → logprob: -13.126559257507324
    9. '   ' → logprob: -13.564059257507324
    10. '1' → logprob: -13.689059257507324

Token 243: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5318722128868103
    2. '-' → logprob: -1.031872272491455
    3. ' -' → logprob: -3.406872272491455
    4. ' +' → logprob: -3.781872272491455
    5. ' ' → logprob: -9.281871795654297
    6. 'plus' → logprob: -9.781871795654297
    7. ' plus' → logprob: -11.031871795654297
    8. '+-' → logprob: -11.406871795654297
    9. '
' → logprob: -11.469371795654297
    10. ' ' → logprob: -11.719371795654297

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.468279752880335e-05
    2. ' ' → logprob: -9.750064849853516
    3. 'plus' → logprob: -12.250064849853516
    4. ' plus' → logprob: -14.625064849853516
    5. '   ' → logprob: -15.125064849853516
    6. 'moins' → logprob: -15.250064849853516
    7. '
' → logprob: -15.750064849853516
    8. '  ' → logprob: -16.000064849853516
    9. '-' → logprob: -16.625064849853516
    10. '+' → logprob: -17.125064849853516

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '
' → logprob: -14.750018119812012
    4. 'plus' → logprob: -15.125018119812012
    5. '   ' → logprob: -16.250017166137695
    6. ' plus' → logprob: -16.625017166137695
    7. '  ' → logprob: -17.000017166137695
    8. 'moins' → logprob: -17.250017166137695
    9. '

' → logprob: -17.500017166137695
    10. '+' → logprob: -18.125017166137695

Token 246: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06505292654037476
    2. ' )' → logprob: -3.8150529861450195
    3. ')//' → logprob: -3.9400529861450195
    4. '))' → logprob: -3.9400529861450195
    5. '//' → logprob: -6.6900529861450195
    6. ' //' → logprob: -7.5650529861450195
    7. ' ))' → logprob: -8.19005298614502
    8. '   ' → logprob: -12.56505298614502
    9. ' ' → logprob: -12.81505298614502
    10. ')>>' → logprob: -14.06505298614502

Token 247: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.14424331486225128
    2. '//' → logprob: -2.0192432403564453
    3. ' ' → logprob: -7.019243240356445
    4. ')' → logprob: -8.019243240356445
    5. '   ' → logprob: -9.144243240356445
    6. ' -' → logprob: -10.019243240356445
    7. '  ' → logprob: -10.269243240356445
    8. '#' → logprob: -10.394243240356445
    9. ' ' → logprob: -11.019243240356445
    10. ' +' → logprob: -11.269243240356445

Token 248: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.625261306762695
    4. '4' → logprob: -17.125261306762695
    5. '(' → logprob: -17.750261306762695
    6. '```' → logprob: -17.750261306762695
    7. '1' → logprob: -17.812761306762695
    8. '۲' → logprob: -18.312761306762695
    9. '  ' → logprob: -18.437761306762695
    10. '202' → logprob: -18.437761306762695

Token 249: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -16.125003814697266
    4. '
' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '  ' → logprob: -18.875003814697266
    7. '22' → logprob: -19.062503814697266
    8. '3' → logprob: -19.250003814697266
    9. '```' → logprob: -19.312503814697266
    10. '...' → logprob: -19.375003814697266

Token 250: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15942688286304474
    2. '-' → logprob: -2.2844269275665283
    3. ' +' → logprob: -3.4094269275665283
    4. '+' → logprob: -4.659426689147949
    5. '   ' → logprob: -5.909426689147949
    6. ' ' → logprob: -8.65942668914795
    7. '    ' → logprob: -10.40942668914795
    8. '  ' → logprob: -11.15942668914795
    9. ' plus' → logprob: -11.40942668914795
    10. '-(' → logprob: -11.53442668914795

Token 251: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03409697487950325
    2. ' (' → logprob: -3.4090969562530518
    3. 'plus' → logprob: -8.034096717834473
    4. ' plus' → logprob: -9.909096717834473
    5. '(pl' → logprob: -10.784096717834473
    6. '   ' → logprob: -10.909096717834473
    7. ' ' → logprob: -10.909096717834473
    8. '((' → logprob: -11.659096717834473
    9. '  ' → logprob: -12.784096717834473
    10. '(min' → logprob: -13.659096717834473

Token 252: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.008981835097074509
    2. '(' → logprob: -5.258981704711914
    3. ' plus' → logprob: -5.633981704711914
    4. ' (' → logprob: -9.758981704711914
    5. ' ' → logprob: -10.133981704711914
    6. 'moins' → logprob: -10.758981704711914
    7. '2' → logprob: -11.508981704711914
    8. '   ' → logprob: -11.508981704711914
    9. '  ' → logprob: -12.383981704711914
    10. '1' → logprob: -12.758981704711914

Token 253: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -9.088346359931165e-07
    2. ' petit' → logprob: -14.625000953674316
    3. 'plus' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. 'grand' → logprob: -16.75
    6. ' ' → logprob: -17.0
    7. ' pet' → logprob: -17.5
    8. '   ' → logprob: -18.0
    9. 'pt' → logprob: -18.375
    10. 'pret' → logprob: -18.5

Token 254: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0001872094871941954
    2. 'tit' → logprob: -8.625186920166016
    3. 'iot' → logprob: -12.000186920166016
    4. 'ot' → logprob: -14.250186920166016
    5. 't' → logprob: -14.625186920166016
    6. 'i' → logprob: -16.500186920166016
    7. 'sit' → logprob: -16.750186920166016
    8. 'itl' → logprob: -17.125186920166016
    9. '[' → logprob: -17.250186920166016
    10. 'etit' → logprob: -17.250186920166016

Token 255: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16036547720432281
    2. '*' → logprob: -1.9103654623031616
    3. '*(' → logprob: -9.660365104675293
    4. ' ' → logprob: -10.035365104675293
    5. ')' → logprob: -11.035365104675293
    6. '**' → logprob: -11.410365104675293
    7. '*)' → logprob: -13.535365104675293
    8. ' +' → logprob: -13.785365104675293
    9. ' *(' → logprob: -14.285365104675293
    10. '+' → logprob: -14.285365104675293

Token 256: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10099273920059204
    2. ' (' → logprob: -2.3509926795959473
    3. 'plus' → logprob: -7.600992679595947
    4. ' plus' → logprob: -8.850993156433105
    5. '(pl' → logprob: -10.475993156433105
    6. ' ' → logprob: -10.725993156433105
    7. '1' → logprob: -10.850993156433105
    8. '(max' → logprob: -11.225993156433105
    9. '2' → logprob: -11.350993156433105
    10. '((' → logprob: -11.725993156433105

Token 257: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.31587621569633484
    2. '(' → logprob: -1.3158762454986572
    3. ' plus' → logprob: -6.565876007080078
    4. ' (' → logprob: -7.190876007080078
    5. '1' → logprob: -9.190876007080078
    6. 'moins' → logprob: -9.315876007080078
    7. ' ' → logprob: -9.815876007080078
    8. '2' → logprob: -9.815876007080078
    9. '   ' → logprob: -10.565876007080078
    10. '  ' → logprob: -10.690876007080078

Token 258: 'pet' (ID: 9456)
  Prédit: 'pet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -6.098748053773306e-05
    2. '1' → logprob: -9.87506103515625
    3. ' ' → logprob: -12.50006103515625
    4. ' petit' → logprob: -12.75006103515625
    5. '```' → logprob: -13.62506103515625
    6. '2' → logprob: -15.12506103515625
    7. ')' → logprob: -15.25006103515625
    8. 'pret' → logprob: -15.62506103515625
    9. 'grand' → logprob: -16.00006103515625
    10. ' pet' → logprob: -16.00006103515625

Token 259: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.030427061021327972
    2. 'ot' → logprob: -3.5304269790649414
    3. 'pet' → logprob: -8.780426979064941
    4. 'sit' → logprob: -8.780426979064941
    5. 'oit' → logprob: -9.155426979064941
    6. 'int' → logprob: -10.030426979064941
    7. 'o' → logprob: -10.030426979064941
    8. 'oi' → logprob: -10.155426979064941
    9. 'etit' → logprob: -10.155426979064941
    10. 't' → logprob: -10.405426979064941

Token 260: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23128478229045868
    2. ' +' → logprob: -1.856284737586975
    3. '-' → logprob: -3.4812848567962646
    4. '+' → logprob: -4.1062846183776855
    5. ')' → logprob: -5.9812846183776855
    6. ' ' → logprob: -8.231285095214844
    7. ' )' → logprob: -8.856285095214844
    8. '   ' → logprob: -10.981285095214844
    9. '1' → logprob: -11.106285095214844
    10. '))' → logprob: -11.606285095214844

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. ')' → logprob: -15.250035285949707
    4. '   ' → logprob: -16.875036239624023
    5. '2' → logprob: -17.875036239624023
    6. '0' → logprob: -19.375036239624023
    7. '  ' → logprob: -19.625036239624023
    8. '```' → logprob: -19.750036239624023
    9. ' ' → logprob: -20.500036239624023
    10. '
' → logprob: -20.625036239624023

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -14.250006675720215
    4. '0' → logprob: -17.25000762939453
    5. '2' → logprob: -17.25000762939453
    6. '   ' → logprob: -18.12500762939453
    7. '...' → logprob: -19.75000762939453
    8. '```' → logprob: -20.06250762939453
    9. '  ' → logprob: -20.18750762939453
    10. ' ' → logprob: -20.18750762939453

Token 263: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012507044011726975
    2. ' )' → logprob: -7.001250743865967
    3. ')//' → logprob: -8.001250267028809
    4. '))' → logprob: -13.626250267028809
    5. ')
' → logprob: -14.001250267028809
    6. '//' → logprob: -14.126250267028809
    7. '())' → logprob: -14.501250267028809
    8. '`)' → logprob: -16.126251220703125
    9. '()' → logprob: -16.251251220703125
    10. '   ' → logprob: -16.251251220703125

Token 264: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.15347108244895935
    2. '//' → logprob: -2.028470993041992
    3. ')' → logprob: -4.653470993041992
    4. ')//' → logprob: -7.028470993041992
    5. '   ' → logprob: -9.278470993041992
    6. '()' → logprob: -9.653470993041992
    7. ' ' → logprob: -9.778470993041992
    8. ' )' → logprob: -10.403470993041992
    9. ' ' → logprob: -10.528470993041992
    10. '<|end|>' → logprob: -11.528470993041992

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '1' → logprob: -13.750004768371582
    4. '```' → logprob: -19.1250057220459
    5. '
' → logprob: -19.8750057220459
    6. '   ' → logprob: -20.0000057220459
    7. '<|end|>' → logprob: -20.0000057220459
    8. '۲' → logprob: -20.0625057220459
    9. '0' → logprob: -21.0625057220459
    10. 'import' → logprob: -21.2500057220459

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.875000953674316
    3. '1' → logprob: -15.125000953674316
    4. '۲' → logprob: -16.687501907348633
    5. '212' → logprob: -16.687501907348633
    6. '216' → logprob: -17.500001907348633
    7. '२' → logprob: -17.625001907348633
    8. '210' → logprob: -17.687501907348633
    9. '<|end|>' → logprob: -17.750001907348633
    10. '21' → logprob: -18.000001907348633

Token 267: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7729658540920354e-05
    2. ' print' → logprob: -10.750027656555176
    3. '
' → logprob: -12.500027656555176
    4. ')' → logprob: -13.625027656555176
    5. '<|end|>' → logprob: -14.000027656555176
    6. '```' → logprob: -15.125027656555176
    7. '(print' → logprob: -17.375028610229492
    8. '#' → logprob: -17.500028610229492
    9. ')
' → logprob: -17.875028610229492
    10. '#print' → logprob: -18.125028610229492

Token 268: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -11.875008583068848
    3. 'result' → logprob: -13.750008583068848
    4. '('' → logprob: -15.250008583068848
    5. '(resultado' → logprob: -15.500008583068848
    6. '(res' → logprob: -15.625008583068848
    7. '(r' → logprob: -16.625009536743164
    8. '(f' → logprob: -17.000009536743164
    9. '()' → logprob: -17.250009536743164
    10. '(results' → logprob: -17.750009536743164

Token 270: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -4.320199877838604e-07
    2. 't' → logprob: -15.125
    3. ')' → logprob: -16.0
    4. 'tat' → logprob: -17.25
    5. 'result' → logprob: -17.5
    6. '_at' → logprob: -18.25
    7. 'ат' → logprob: -18.75
    8. 'atat' → logprob: -19.125
    9. 'a' → logprob: -19.5
    10. 'aat' → logprob: -20.5

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ' )' → logprob: -11.50001049041748
    3. ')
' → logprob: -14.25001049041748
    4. ')`' → logprob: -17.000011444091797
    5. '))' → logprob: -17.250011444091797
    6. '')' → logprob: -17.375011444091797
    7. '())' → logprob: -18.875011444091797
    8. '(' → logprob: -19.000011444091797
    9. '")' → logprob: -19.250011444091797
    10. ')#' → logprob: -19.250011444091797

Token 272: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' Bon' (ID: 12658)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' cro' (ID: 11270)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: 'ise' (ID: 1096)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.160028100013733
    2. 'yez' → logprob: -1.660028100013733
    3. '```' → logprob: -1.910028100013733
    4. 'pt' → logprob: -2.1600279808044434
    5. 'ir' → logprob: -3.2850279808044434
    6. 'd' → logprob: -3.4100279808044434
    7. '#' → logprob: -3.9100279808044434
    8. 'ps' → logprob: -4.535027980804443
    9. 'pit' → logprob: -4.785027980804443
    10. 'pped' → logprob: -4.910027980804443

Token 278: ' les' (ID: 1341)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.44171664118766785
    2. 'les' → logprob: -1.6917166709899902
    3. '<|end|>' → logprob: -2.0667166709899902
    4. '#' → logprob: -4.19171667098999
    5. ' les' → logprob: -4.31671667098999
    6. ' ' → logprob: -5.94171667098999
    7. '```' → logprob: -6.19171667098999
    8. '!' → logprob: -6.56671667098999
    9. '_f' → logprob: -6.81671667098999
    10. '_' → logprob: -6.81671667098999

Token 279: ' doigts' (ID: 133066)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4252747595310211
    2. 'do' → logprob: -1.3002747297286987
    3. '```' → logprob: -3.5502748489379883
    4. ' doigts' → logprob: -3.6752748489379883
    5. '#' → logprob: -4.675274848937988
    6. ' ' → logprob: -6.425274848937988
    7. '``' → logprob: -6.550274848937988
    8. '

' → logprob: -7.425274848937988
    9. '   ' → logprob: -7.550274848937988
    10. 'fig' → logprob: -7.800274848937988

Token 280: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' ça' (ID: 13590)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6538636088371277
    2. 'True' → logprob: -1.1538636684417725
    3. '(True' → logprob: -2.9038636684417725
    4. 'tout' → logprob: -3.5288636684417725
    5. 'chaine' → logprob: -4.278863430023193
    6. '#' → logprob: -4.403863430023193
    7. '...' → logprob: -4.528863430023193
    8. '0' → logprob: -5.153863430023193
    9. '<|end|>' → logprob: -5.403863430023193
    10. ' rien' → logprob: -5.403863430023193

Token 282: ' marche' (ID: 58191)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.2820659577846527
    2. 'mar' → logprob: -2.2820658683776855
    3. ' fonctionne' → logprob: -2.9070658683776855
    4. ' marche' → logprob: -3.4070658683776855
    5. 'f' → logprob: -4.1570658683776855
    6. 'continue' → logprob: -4.4070658683776855
    7. 'march' → logprob: -4.6570658683776855
    8. 'works' → logprob: -5.9070658683776855
    9. ' ' → logprob: -6.2820658683776855
    10. 'work' → logprob: -6.4070658683776855

Token 283: ' !' (ID: 1073)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 281
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 157
Précision stricte (1ère position): 23.13%
Précision adaptée (1ère position): 23.49%
Précision (top 10): 55.87%
================================================================================
