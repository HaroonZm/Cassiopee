================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():

    number_of_elements_to_read = input()

    list_of_integers = list(map(int, input().split()))

    sorted_list_of_integers = sorted(list_of_integers)

    length_of_list = len(sorted_list_of_integers)

    middle_index = length_of_list // 2

    value_at_middle_index = sorted_list_of_integers[middle_index]
    value_before_middle_index = sorted_list_of_integers[middle_index - 1]

    difference_between_middle_elements = value_at_middle_index - value_before_middle_index

    print(difference_between_middle_elements)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():

' (ID: 101746)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18983963131904602
    2. '\' → logprob: -2.0648396015167236
    3. '\n' → logprob: -3.8148396015167236
    4. '```' → logprob: -5.439839839935303
    5. ' ' → logprob: -5.564839839935303
    6. '    
' → logprob: -5.689839839935303
    7. '    ' → logprob: -5.814839839935303
    8. ''' → logprob: -6.064839839935303
    9. ' 
' → logprob: -6.689839839935303
    10. ':' → logprob: -6.689839839935303

Token 4: ' number' (ID: 2086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8395035266876221
    2. 'pass' → logprob: -0.9645035266876221
    3. '   ' → logprob: -2.839503526687622
    4. 'p' → logprob: -2.964503526687622
    5. '#' → logprob: -3.214503526687622
    6. 'r' → logprob: -4.339503288269043
    7. 'return' → logprob: -4.464503288269043
    8. 'i' → logprob: -5.339503288269043
    9. 'a' → logprob: -5.714503288269043
    10. 'x' → logprob: -7.464503288269043

Token 5: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9270986318588257
    2. '=' → logprob: -1.4270986318588257
    3. ' =' → logprob: -1.4270986318588257
    4. 's' → logprob: -3.1770987510681152
    5. ')' → logprob: -3.3020987510681152
    6. '.' → logprob: -3.3020987510681152
    7. '_space' → logprob: -6.552098751068115
    8. ',' → logprob: -6.927098751068115
    9. ' ' → logprob: -6.927098751068115
    10. '+' → logprob: -7.302098751068115

Token 6: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24882735311985016
    2. '_items' → logprob: -2.2488274574279785
    3. '_spaces' → logprob: -2.8738274574279785
    4. '_users' → logprob: -3.7488274574279785
    5. ' ' → logprob: -4.3738274574279785
    6. '_s' → logprob: -4.9988274574279785
    7. '_students' → logprob: -5.6238274574279785
    8. 's' → logprob: -6.2488274574279785
    9. '_lines' → logprob: -6.6238274574279785
    10. '_players' → logprob: -7.2488274574279785

Token 7: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12779544293880463
    2. '=' → logprob: -2.127795457839966
    3. '_' → logprob: -7.752795219421387
    4. ')' → logprob: -9.377795219421387
    5. '   ' → logprob: -9.377795219421387
    6. ' ' → logprob: -9.752795219421387
    7. ' +=' → logprob: -10.127795219421387
    8. '_space' → logprob: -10.252795219421387
    9. '  ' → logprob: -10.627795219421387
    10. '.' → logprob: -10.627795219421387

Token 8: '_read' (ID: 14291)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.2222110033035278
    2. '_' → logprob: -1.3472110033035278
    3. '_generate' → logprob: -2.4722108840942383
    4. ' ' → logprob: -2.5972108840942383
    5. '_append' → logprob: -2.5972108840942383
    6. '=' → logprob: -2.8472108840942383
    7. '_insert' → logprob: -3.0972108840942383
    8. ' =' → logprob: -3.5972108840942383
    9. '_create' → logprob: -4.347210884094238
    10. 'add' → logprob: -4.597210884094238

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04997473955154419
    2. ' =' → logprob: -3.0499746799468994
    3. '_' → logprob: -6.9249749183654785
    4. ',' → logprob: -8.67497444152832
    5. ')' → logprob: -9.17497444152832
    6. '_space' → logprob: -10.29997444152832
    7. ' ' → logprob: -10.54997444152832
    8. '.' → logprob: -10.92497444152832
    9. ':' → logprob: -11.17497444152832
    10. 'space' → logprob: -11.92497444152832

Token 10: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03713872283697128
    2. ' int' → logprob: -3.6621387004852295
    3. '10' → logprob: -5.287138938903809
    4. 'int' → logprob: -5.537138938903809
    5. '5' → logprob: -7.162138938903809
    6. '0' → logprob: -7.912138938903809
    7. '20' → logprob: -8.662138938903809
    8. '1' → logprob: -8.912138938903809
    9. '4' → logprob: -9.162138938903809
    10. '100' → logprob: -10.162138938903809

Token 11: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008060562540777028
    2. ''' → logprob: -8.250805854797363
    3. '('' → logprob: -8.625805854797363
    4. '```' → logprob: -9.000805854797363
    5. '("("' → logprob: -10.000805854797363
    6. '(
' → logprob: -10.000805854797363
    7. '"' → logprob: -10.500805854797363
    8. '`' → logprob: -10.500805854797363
    9. ' (' → logprob: -11.000805854797363
    10. 's' → logprob: -11.375805854797363

Token 12: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.520679771900177
    2. ')' → logprob: -2.0206797122955322
    3. '\n' → logprob: -2.7706797122955322
    4. '=' → logprob: -3.1456797122955322
    5. '()' → logprob: -3.3956797122955322
    6. '```' → logprob: -3.3956797122955322
    7. '.strip' → logprob: -3.6456797122955322
    8. '\' → logprob: -4.520679950714111
    9. ' =' → logprob: -4.645679950714111
    10. '#' → logprob: -5.020679950714111

Token 13: ' list' (ID: 1562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4230015277862549
    2. ' =' → logprob: -1.5480015277862549
    3. '.' → logprob: -1.6730015277862549
    4. 'int' → logprob: -2.548001527786255
    5. ')' → logprob: -2.923001527786255
    6. 'if' → logprob: -3.423001527786255
    7. 'try' → logprob: -3.423001527786255
    8. ' ' → logprob: -3.548001527786255
    9. '```' → logprob: -3.548001527786255
    10. '.strip' → logprob: -4.173001289367676

Token 14: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6982783079147339
    2. '(' → logprob: -0.8232783079147339
    3. 's' → logprob: -3.1982784271240234
    4. '[' → logprob: -4.573278427124023
    5. ' =' → logprob: -5.573278427124023
    6. '.' → logprob: -6.073278427124023
    7. '=' → logprob: -6.198278427124023
    8. '_of' → logprob: -7.573278427124023
    9. '_s' → logprob: -7.573278427124023
    10. '_name' → logprob: -7.823278427124023

Token 15: '_in' (ID: 2267)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.6983264684677124
    2. '_' → logprob: -1.5733264684677124
    3. '_values' → logprob: -2.323326587677002
    4. '_numbers' → logprob: -2.448326587677002
    5. '_items' → logprob: -2.698326587677002
    6. '_lists' → logprob: -4.448326587677002
    7. '_list' → logprob: -5.323326587677002
    8. '_data' → logprob: -5.323326587677002
    9. '_strings' → logprob: -5.698326587677002
    10. '_objects' → logprob: -5.948326587677002

Token 16: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.5878657102584839
    2. 't' → logprob: -1.5878657102584839
    3. 'puts' → logprob: -2.4628658294677734
    4. 'put' → logprob: -2.5878658294677734
    5. '_elements' → logprob: -2.5878658294677734
    6. 'elements' → logprob: -5.837865829467773
    7. '_put' → logprob: -7.837865829467773
    8. '_' → logprob: -8.212865829467773
    9. 'e' → logprob: -8.837865829467773
    10. 'teger' → logprob: -9.087865829467773

Token 17: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0002100965939462185
    2. 'g' → logprob: -8.62520980834961
    3. 'gr' → logprob: -11.62520980834961
    4. 'r' → logprob: -12.37520980834961
    5. 'ger' → logprob: -12.37520980834961
    6. '   ' → logprob: -12.50020980834961
    7. 'rs' → logprob: -12.75020980834961
    8. '```' → logprob: -12.87520980834961
    9. 'ers' → logprob: -13.25020980834961
    10. '       ' → logprob: -14.25020980834961

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004204359371215105
    2. '=' → logprob: -5.754204273223877
    3. '[:]' → logprob: -8.254204750061035
    4. '.' → logprob: -8.379204750061035
    5. '_' → logprob: -8.504204750061035
    6. '[' → logprob: -9.129204750061035
    7. 's' → logprob: -9.504204750061035
    8. '.append' → logprob: -10.129204750061035
    9. '[]' → logprob: -10.754204750061035
    10. ' .=' → logprob: -11.379204750061035

Token 19: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.24762101471424103
    2. ' []' → logprob: -1.9976210594177246
    3. 'list' → logprob: -2.9976210594177246
    4. ' [' → logprob: -3.4976210594177246
    5. '[]' → logprob: -6.497621059417725
    6. ' ' → logprob: -7.247621059417725
    7. '[list' → logprob: -7.997621059417725
    8. '[' → logprob: -8.247620582580566
    9. ' input' → logprob: -8.372620582580566
    10. '[int' → logprob: -8.997620582580566

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006638261256739497
    2. '(range' → logprob: -7.875663757324219
    3. '[' → logprob: -10.125663757324219
    4. ' (' → logprob: -10.250663757324219
    5. '(
' → logprob: -10.250663757324219
    6. '[int' → logprob: -10.625663757324219
    7. '(int' → logprob: -10.875663757324219
    8. '(map' → logprob: -11.000663757324219
    9. '```' → logprob: -11.250663757324219
    10. '(input' → logprob: -11.625663757324219

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.024287480860948563
    2. '(' → logprob: -3.774287462234497
    3. 'int' → logprob: -7.899287700653076
    4. '(lambda' → logprob: -8.149287223815918
    5. '<int' → logprob: -9.024287223815918
    6. '(str' → logprob: -9.274287223815918
    7. '<|end|>' → logprob: -9.899287223815918
    8. '=int' → logprob: -10.274287223815918
    9. '(
' → logprob: -10.399287223815918
    10. ')' → logprob: -10.899287223815918

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.045690301805734634
    2. '(' → logprob: -3.5456902980804443
    3. ',input' → logprob: -5.170690536499023
    4. 'input' → logprob: -5.295690536499023
    5. ',' → logprob: -5.420690536499023
    6. ')' → logprob: -9.045690536499023
    7. '))' → logprob: -9.170690536499023
    8. '=input' → logprob: -9.295690536499023
    9. ' (' → logprob: -9.545690536499023
    10. '   ' → logprob: -9.795690536499023

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2521708905696869
    2. ' input' → logprob: -1.5021709203720093
    3. '(input' → logprob: -9.00217056274414
    4. ')' → logprob: -9.50217056274414
    5. ' )' → logprob: -11.75217056274414
    6. '=input' → logprob: -12.00217056274414
    7. ',input' → logprob: -12.12717056274414
    8. ' ' → logprob: -12.50217056274414
    9. '))' → logprob: -12.62717056274414
    10. '	input' → logprob: -13.00217056274414

Token 24: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.409175306558609
    2. '()' → logprob: -1.6591752767562866
    3. '())' → logprob: -2.284175395965576
    4. '().' → logprob: -3.284175395965576
    5. '()));' → logprob: -5.909175395965576
    6. '(' → logprob: -7.159175395965576
    7. '())))' → logprob: -7.159175395965576
    8. '()>' → logprob: -7.409175395965576
    9. '))' → logprob: -8.034174919128418
    10. ')' → logprob: -8.284174919128418

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024931374937295914
    2. 'strip' → logprob: -6.002492904663086
    3. 'rstrip' → logprob: -11.002492904663086
    4. ' split' → logprob: -14.752492904663086
    5. '(split' → logprob: -15.377492904663086
    6. ')' → logprob: -16.002492904663086
    7. 'spl' → logprob: -16.877492904663086
    8. 's' → logprob: -17.627492904663086
    9. 'read' → logprob: -17.627492904663086
    10. '.split' → logprob: -18.627492904663086

Token 26: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06637794524431229
    2. '())' → logprob: -3.441377878189087
    3. '()' → logprob: -3.566377878189087
    4. '())))' → logprob: -6.441378116607666
    5. '(' → logprob: -6.566378116607666
    6. '))' → logprob: -7.316378116607666
    7. '('' → logprob: -8.566377639770508
    8. '()))
' → logprob: -10.816377639770508
    9. ')))' → logprob: -10.816377639770508
    10. ')' → logprob: -11.191377639770508

Token 27: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043426401913166046
    2. '   ' → logprob: -4.293426513671875
    3. ':' → logprob: -4.668426513671875
    4. '[:]' → logprob: -5.668426513671875
    5. '<|end|>' → logprob: -6.043426513671875
    6. ' ' → logprob: -6.043426513671875
    7. 'if' → logprob: -6.418426513671875
    8. '[' → logprob: -6.543426513671875
    9. ' if' → logprob: -6.668426513671875
    10. '```' → logprob: -6.793426513671875

Token 28: ' sorted' (ID: 20099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30999261140823364
    2. 'if' → logprob: -2.559992551803589
    3. ' ' → logprob: -3.059992551803589
    4. 'for' → logprob: -3.184992551803589
    5. '```' → logprob: -3.684992551803589
    6. ' if' → logprob: -4.059992790222168
    7. ')' → logprob: -4.184992790222168
    8. '#' → logprob: -4.684992790222168
    9. '
' → logprob: -4.934992790222168
    10. '  ' → logprob: -5.309992790222168

Token 29: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015047440538182855
    2. '(list' → logprob: -7.126504898071289
    3. '_list' → logprob: -7.376504898071289
    4. '_' → logprob: -10.376504898071289
    5. '_parent' → logprob: -12.126504898071289
    6. 'list' → logprob: -12.501504898071289
    7. '("("' → logprob: -12.501504898071289
    8. ' (' → logprob: -12.876504898071289
    9. '((' → logprob: -13.126504898071289
    10. '(
' → logprob: -13.251504898071289

Token 30: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0046169147826731205
    2. '()' → logprob: -6.129616737365723
    3. '_' → logprob: -6.629616737365723
    4. '=' → logprob: -7.129616737365723
    5. '.' → logprob: -9.504616737365723
    6. ' =' → logprob: -9.629616737365723
    7. '(
' → logprob: -11.004616737365723
    8. '```' → logprob: -11.129616737365723
    9. '<|end|>' → logprob: -11.254616737365723
    10. 's' → logprob: -11.504616737365723

Token 31: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0014369006967172027
    2. '_' → logprob: -7.251436710357666
    3. 'inte' → logprob: -7.626436710357666
    4. ' integers' → logprob: -8.501437187194824
    5. '_int' → logprob: -11.251437187194824
    6. '_numbers' → logprob: -11.751437187194824
    7. '_elements' → logprob: -11.876437187194824
    8. '_list' → logprob: -12.751437187194824
    9. '_integer' → logprob: -13.126437187194824
    10. 'in' → logprob: -14.251437187194824

Token 32: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -3.893480243277736e-05
    2. 't' → logprob: -10.500039100646973
    3. 'tegr' → logprob: -12.375039100646973
    4. 'teger' → logprob: -12.500039100646973
    5. 'teg' → logprob: -13.625039100646973
    6. '_te' → logprob: -14.375039100646973
    7. '```' → logprob: -14.625039100646973
    8. 'eg' → logprob: -14.750039100646973
    9. '­te' → logprob: -15.750039100646973
    10. 'ter' → logprob: -16.000038146972656

Token 33: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.000595447258092463
    2. 'g' → logprob: -7.750595569610596
    3. '_g' → logprob: -9.250595092773438
    4. 'gars' → logprob: -10.875595092773438
    5. '_' → logprob: -11.000595092773438
    6. 'gr' → logprob: -11.625595092773438
    7. '```' → logprob: -12.250595092773438
    8. '   ' → logprob: -12.625595092773438
    9. 'rs' → logprob: -13.000595092773438
    10. 'r' → logprob: -13.375595092773438

Token 34: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.040654730051755905
    2. '.' → logprob: -3.4156546592712402
    3. '_' → logprob: -5.79065465927124
    4. '=' → logprob: -7.04065465927124
    5. '()' → logprob: -7.04065465927124
    6. '.sort' → logprob: -7.54065465927124
    7. '(.)' → logprob: -7.79065465927124
    8. '[:]' → logprob: -8.540655136108398
    9. '().' → logprob: -8.790655136108398
    10. '<|end|>' → logprob: -8.915655136108398

Token 35: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.1269315630197525
    2. 'sorted' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.126931190490723
    4. '(sorted' → logprob: -14.251931190490723
    5. 'sort' → logprob: -15.126931190490723
    6. ' list' → logprob: -15.751931190490723
    7. '   ' → logprob: -16.00193214416504
    8. ' sort' → logprob: -16.37693214416504
    9. 's' → logprob: -16.37693214416504
    10. ' ' → logprob: -16.87693214416504

Token 36: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34874624013900757
    2. '(list' → logprob: -1.2237462997436523
    3. '(sorted' → logprob: -8.973746299743652
    4. '((' → logprob: -10.848746299743652
    5. '(number' → logprob: -10.973746299743652
    6. '(open' → logprob: -11.598746299743652
    7. '(
' → logprob: -11.598746299743652
    8. '(range' → logprob: -11.598746299743652
    9. '_list' → logprob: -11.848746299743652
    10. ' (' → logprob: -11.973746299743652

Token 37: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0006078407750464976
    2. '_' → logprob: -8.12560749053955
    3. '(' → logprob: -8.50060749053955
    4. '(_' → logprob: -9.50060749053955
    5. '_)' → logprob: -11.00060749053955
    6. ')' → logprob: -12.12560749053955
    7. ')_' → logprob: -12.75060749053955
    8. '_for' → logprob: -13.12560749053955
    9. '_(' → logprob: -13.37560749053955
    10. 'of' → logprob: -13.62560749053955

Token 38: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.6656825866666622e-05
    2. '_' → logprob: -11.62502670288086
    3. '_elements' → logprob: -11.75002670288086
    4. '_of' → logprob: -12.75002670288086
    5. '_int' → logprob: -12.75002670288086
    6. 'inte' → logprob: -13.25002670288086
    7. '_integer' → logprob: -14.00002670288086
    8. '_s' → logprob: -14.50002670288086
    9. '_strings' → logprob: -15.87502670288086
    10. '(_' → logprob: -16.12502670288086

Token 39: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.00013762809976469725
    2. '_te' → logprob: -9.125137329101562
    3. 't' → logprob: -10.750137329101562
    4. 'teg' → logprob: -12.750137329101562
    5. 'teger' → logprob: -13.125137329101562
    6. '_' → logprob: -14.375137329101562
    7. '­te' → logprob: -14.500137329101562
    8. '```' → logprob: -15.000137329101562
    9. 'tegr' → logprob: -15.500137329101562
    10. 'те' → logprob: -15.750137329101562

Token 40: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0002128382766386494
    2. 'gr' → logprob: -8.625212669372559
    3. 'g' → logprob: -11.250212669372559
    4. 'r' → logprob: -12.125212669372559
    5. 'ger' → logprob: -12.250212669372559
    6. 'rs' → logprob: -13.000212669372559
    7. '_g' → logprob: -13.000212669372559
    8. '_gr' → logprob: -13.375212669372559
    9. '_' → logprob: -13.750212669372559
    10. '```' → logprob: -14.000212669372559

Token 41: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014025058771949261
    2. '))' → logprob: -9.500140190124512
    3. ',' → logprob: -9.875140190124512
    4. ' )' → logprob: -12.250140190124512
    5. '   ' → logprob: -12.625140190124512
    6. ')))' → logprob: -13.625140190124512
    7. ')
' → logprob: -13.875140190124512
    8. '[' → logprob: -14.000140190124512
    9. ')`' → logprob: -14.750140190124512
    10. '(' → logprob: -14.875140190124512

Token 42: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9649527072906494
    2. '[' → logprob: -2.0899527072906494
    3. '   ' → logprob: -2.0899527072906494
    4. '<|end|>' → logprob: -2.5899527072906494
    5. '(' → logprob: -2.7149527072906494
    6. '
' → logprob: -2.9649527072906494
    7. ':' → logprob: -3.3399527072906494
    8. '.' → logprob: -3.3399527072906494
    9. ' ' → logprob: -3.7149527072906494
    10. '```' → logprob: -3.9649527072906494

Token 43: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8643625378608704
    2. 'for' → logprob: -1.2393624782562256
    3. 'if' → logprob: -2.1143624782562256
    4. 'print' → logprob: -2.6143624782562256
    5. '```' → logprob: -3.9893624782562256
    6. ' for' → logprob: -4.239362716674805
    7. 'return' → logprob: -4.364362716674805
    8. '#' → logprob: -4.739362716674805
    9. ' if' → logprob: -4.989362716674805
    10. ' ' → logprob: -5.239362716674805

Token 44: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6591334342956543
    2. '(' → logprob: -0.7841334342956543
    3. '_of' → logprob: -3.7841334342956543
    4. 'of' → logprob: -7.034133434295654
    5. '(s' → logprob: -7.159133434295654
    6. '_s' → logprob: -7.284133434295654
    7. '_sorted' → logprob: -8.659133911132812
    8. '(sorted' → logprob: -8.784133911132812
    9. '_length' → logprob: -9.659133911132812
    10. '(_)' → logprob: -9.784133911132812

Token 45: '_list' (ID: 4162)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.44750937819480896
    2. '_' → logprob: -1.1975094079971313
    3. 'sorted' → logprob: -3.447509288787842
    4. '_sorted' → logprob: -3.697509288787842
    5. '(sorted' → logprob: -6.822509288787842
    6. ' _' → logprob: -7.822509288787842
    7. ' ' → logprob: -7.947509288787842
    8. ' list' → logprob: -8.572509765625
    9. '_s' → logprob: -9.572509765625
    10. 'space' → logprob: -10.197509765625

Token 46: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017711322754621506
    2. ' =' → logprob: -4.892711162567139
    3. '=' → logprob: -5.267711162567139
    4. ')' → logprob: -6.017711162567139
    5. '(' → logprob: -6.892711162567139
    6. '_=' → logprob: -7.767711162567139
    7. '<|end|>' → logprob: -8.517711639404297
    8. ' _' → logprob: -8.767711639404297
    9. '   ' → logprob: -8.767711639404297
    10. ' ' → logprob: -9.767711639404297

Token 47: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.000936951139010489
    2. 'len' → logprob: -7.000936985015869
    3. ' ' → logprob: -11.125936508178711
    4. '(len' → logprob: -12.000936508178711
    5. '=len' → logprob: -13.500936508178711
    6. ' sorted' → logprob: -13.625936508178711
    7. ' ' → logprob: -14.125936508178711
    8. '[len' → logprob: -14.375936508178711
    9. '	len' → logprob: -15.625936508178711
    10. ' length' → logprob: -15.625936508178711

Token 48: '(sorted' (ID: 92488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.592917799949646
    2. '(sorted' → logprob: -0.842917799949646
    3. '(list' → logprob: -4.0929179191589355
    4. '(s' → logprob: -9.592917442321777
    5. '(length' → logprob: -10.342917442321777
    6. ' (' → logprob: -11.342917442321777
    7. '(
' → logprob: -11.467917442321777
    8. '(number' → logprob: -12.467917442321777
    9. '(sort' → logprob: -12.842917442321777
    10. '(

' → logprob: -12.967917442321777

Token 49: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04746651649475098
    2. '_' → logprob: -3.172466516494751
    3. '_sorted' → logprob: -5.547466278076172
    4. '(_' → logprob: -8.422466278076172
    5. ')_' → logprob: -9.172466278076172
    6. '(' → logprob: -9.672466278076172
    7. '_s' → logprob: -10.297466278076172
    8. '_)' → logprob: -10.297466278076172
    9. ')' → logprob: -10.422466278076172
    10. '_of' → logprob: -10.922466278076172

Token 50: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.6614937782287598
    2. '_list' → logprob: -1.9114937782287598
    3. ')' → logprob: -2.0364937782287598
    4. '_' → logprob: -2.6614937782287598
    5. '_)' → logprob: -2.6614937782287598
    6. ')_' → logprob: -2.7864937782287598
    7. '_s' → logprob: -6.53649377822876
    8. 's' → logprob: -6.66149377822876
    9. '))' → logprob: -7.41149377822876
    10. '_for' → logprob: -8.161493301391602

Token 51: '_in' (ID: 2267)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.017808526754379272
    2. '_in' → logprob: -4.517808437347412
    3. '_sorted' → logprob: -5.642808437347412
    4. 'sorted' → logprob: -6.767808437347412
    5. '_' → logprob: -6.892808437347412
    6. 'list' → logprob: -7.017808437347412
    7. 'inte' → logprob: -9.64280891418457
    8. '_int' → logprob: -10.64280891418457
    9. 'in' → logprob: -11.64280891418457
    10. ' list' → logprob: -12.01780891418457

Token 52: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0003428528143558651
    2. 't' → logprob: -8.250343322753906
    3. 'eg' → logprob: -10.125343322753906
    4. 'teger' → logprob: -11.375343322753906
    5. 'teg' → logprob: -11.500343322753906
    6. '_te' → logprob: -11.625343322753906
    7. 'put' → logprob: -12.375343322753906
    8. 'e' → logprob: -13.250343322753906
    9. '_' → logprob: -13.625343322753906
    10. '```' → logprob: -14.125343322753906

Token 53: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0002278542669955641
    2. 'gr' → logprob: -8.875227928161621
    3. 'r' → logprob: -10.125227928161621
    4. 'ger' → logprob: -10.875227928161621
    5. 'rs' → logprob: -11.375227928161621
    6. 'g' → logprob: -11.375227928161621
    7. '_g' → logprob: -13.750227928161621
    8. '```' → logprob: -13.875227928161621
    9. 'gars' → logprob: -13.875227928161621
    10. '_gr' → logprob: -14.250227928161621

Token 54: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. ')
' → logprob: -11.875016212463379
    3. '   ' → logprob: -12.750016212463379
    4. '()' → logprob: -12.875016212463379
    5. ' )' → logprob: -13.250016212463379
    6. '))' → logprob: -14.875016212463379
    7. '`)' → logprob: -15.625016212463379
    8. '())' → logprob: -15.750016212463379
    9. '```' → logprob: -15.750016212463379
    10. ')))' → logprob: -16.125015258789062

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5303480625152588
    2. '<|end|>' → logprob: -1.5303480625152588
    3. ' ' → logprob: -2.780348062515259
    4. '   ' → logprob: -2.780348062515259
    5. ')' → logprob: -4.28034782409668
    6. '  
' → logprob: -4.53034782409668
    7. '[' → logprob: -4.65534782409668
    8. '    
' → logprob: -4.65534782409668
    9. ' 
' → logprob: -5.03034782409668
    10. '#' → logprob: -5.78034782409668

Token 56: ' middle' (ID: 10006)
  Prédit: 'median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'median' → logprob: -1.3800420761108398
    2. 'if' → logprob: -1.5050420761108398
    3. 'n' → logprob: -2.50504207611084
    4. 'i' → logprob: -2.50504207611084
    5. 'max' → logprob: -2.63004207611084
    6. 'k' → logprob: -2.75504207611084
    7. 'for' → logprob: -3.00504207611084
    8. ' if' → logprob: -3.63004207611084
    9. 'min' → logprob: -4.13004207611084
    10. 'second' → logprob: -4.50504207611084

Token 57: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012286059558391571
    2. '_index' → logprob: -4.512286186218262
    3. ' _' → logprob: -7.387286186218262
    4. '_of' → logprob: -8.512286186218262
    5. ' =' → logprob: -9.512286186218262
    6. '_idx' → logprob: -9.512286186218262
    7. '_position' → logprob: -9.887286186218262
    8. '_point' → logprob: -10.637286186218262
    9. '_name' → logprob: -10.887286186218262
    10. '_=' → logprob: -11.012286186218262

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018800150603055954
    2. '=' → logprob: -4.268800258636475
    3. '_' → logprob: -5.393800258636475
    4. ' ' → logprob: -9.768799781799316
    5. ' _' → logprob: -11.518799781799316
    6. ' =
' → logprob: -12.893799781799316
    7. '_=' → logprob: -12.893799781799316
    8. 's' → logprob: -13.143799781799316
    9. '_space' → logprob: -13.643799781799316
    10. ' ' → logprob: -13.768799781799316

Token 59: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.00031973462319001555
    2. 'length' → logprob: -8.125319480895996
    3. ' len' → logprob: -10.750319480895996
    4. ' int' → logprob: -14.250319480895996
    5. '(length' → logprob: -14.250319480895996
    6. ' ' → logprob: -14.375319480895996
    7. ' lenght' → logprob: -16.500320434570312
    8. ' (' → logprob: -16.625320434570312
    9. 'len' → logprob: -16.875320434570312
    10. ' l' → logprob: -17.125320434570312

Token 60: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.001948271761648357
    2. '_' → logprob: -6.251948356628418
    3. '//' → logprob: -11.751948356628418
    4. '   ' → logprob: -12.501948356628418
    5. '_for' → logprob: -13.126948356628418
    6. ' _' → logprob: -13.376948356628418
    7. ' //' → logprob: -13.501948356628418
    8. '_length' → logprob: -14.501948356628418
    9. 'of' → logprob: -14.751948356628418
    10. '```' → logprob: -14.876948356628418

Token 61: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003370118502061814
    2. 'list' → logprob: -8.000336647033691
    3. 'sorted' → logprob: -13.875336647033691
    4. '_sorted' → logprob: -14.625336647033691
    5. '_' → logprob: -16.625337600708008
    6. ' list' → logprob: -16.875337600708008
    7. 'List' → logprob: -17.625337600708008
    8. '```' → logprob: -19.375337600708008
    9. '(sorted' → logprob: -19.500337600708008
    10. '-list' → logprob: -19.625337600708008

Token 62: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.007178610190749168
    2. '//' → logprob: -5.007178783416748
    3. ' //
' → logprob: -8.25717830657959
    4. ' ' → logprob: -8.88217830657959
    5. '`' → logprob: -10.50717830657959
    6. '```' → logprob: -11.63217830657959
    7. '[' → logprob: -12.13217830657959
    8. ' `' → logprob: -12.13217830657959
    9. '//
' → logprob: -12.38217830657959
    10. '   ' → logprob: -12.50717830657959

Token 63: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.000141143798828
    4. '  ' → logprob: -16.125141143798828
    5. '```' → logprob: -16.875141143798828
    6. '۲' → logprob: -18.500141143798828
    7. '=' → logprob: -19.000141143798828
    8. '    ' → logprob: -19.250141143798828
    9. '२' → logprob: -20.000141143798828
    10. '２' → logprob: -20.250141143798828

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -16.375015258789062
    4. '   ' → logprob: -17.625015258789062
    5. '  ' → logprob: -18.375015258789062
    6. '3' → logprob: -18.625015258789062
    7. '۲' → logprob: -18.875015258789062
    8. '
' → logprob: -20.000015258789062
    9. '２' → logprob: -20.250015258789062
    10. '

' → logprob: -20.500015258789062

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3733504116535187
    2. '<|end|>' → logprob: -2.3733503818511963
    3. ' ' → logprob: -2.9983503818511963
    4. '
' → logprob: -3.2483503818511963
    5. ')' → logprob: -3.6233503818511963
    6. '    
' → logprob: -3.8733503818511963
    7. 'if' → logprob: -3.8733503818511963
    8. ' if' → logprob: -4.373350620269775
    9. '#' → logprob: -4.498350620269775
    10. ' 
' → logprob: -4.748350620269775

Token 67: ' value' (ID: 1432)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43551313877105713
    2. 'median' → logprob: -2.0605130195617676
    3. 'lower' → logprob: -2.8105130195617676
    4. 'm' → logprob: -2.8105130195617676
    5. 'i' → logprob: -3.6855130195617676
    6. '   ' → logprob: -3.8105130195617676
    7. 'return' → logprob: -3.9355130195617676
    8. 'n' → logprob: -4.810513019561768
    9. ' if' → logprob: -4.935513019561768
    10. '#' → logprob: -5.185513019561768

Token 68: '_at' (ID: 8254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09216588735580444
    2. ' =' → logprob: -2.967165946960449
    3. '=' → logprob: -3.717165946960449
    4. '_at' → logprob: -4.967165946960449
    5. 's' → logprob: -6.217165946960449
    6. '_s' → logprob: -6.717165946960449
    7. '_to' → logprob: -7.217165946960449
    8. '_of' → logprob: -7.592165946960449
    9. '_=' → logprob: -8.84216594696045
    10. '_middle' → logprob: -8.84216594696045

Token 69: '_middle' (ID: 155207)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08184516429901123
    2. '_middle' → logprob: -2.956845283508301
    3. 'middle' → logprob: -4.831845283508301
    4. ' ' → logprob: -5.206845283508301
    5. ' middle' → logprob: -5.331845283508301
    6. '_sorted' → logprob: -5.456845283508301
    7. ' _' → logprob: -6.581845283508301
    8. ' =' → logprob: -6.706845283508301
    9. '_index' → logprob: -8.4568452835083
    10. '=' → logprob: -8.5818452835083

Token 70: '_index' (ID: 7748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4523005783557892
    2. '_' → logprob: -1.3273005485534668
    3. ' =' → logprob: -2.327300548553467
    4. '_index' → logprob: -7.952300548553467
    5. 's' → logprob: -8.702301025390625
    6. '_=' → logprob: -8.702301025390625
    7. '[' → logprob: -9.202301025390625
    8. ')' → logprob: -9.702301025390625
    9. '```' → logprob: -9.952301025390625
    10. '   ' → logprob: -10.077301025390625

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6507390141487122
    2. '=' → logprob: -0.7757390141487122
    3. '_' → logprob: -4.5257391929626465
    4. ' ' → logprob: -5.7757391929626465
    5. '<|end|>' → logprob: -6.2757391929626465
    6. '[' → logprob: -6.5257391929626465
    7. ')' → logprob: -8.525738716125488
    8. ']' → logprob: -9.275738716125488
    9. '```' → logprob: -9.525738716125488
    10. ' ==' → logprob: -10.150738716125488

Token 72: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.00977108534425497
    2. 'sorted' → logprob: -4.63477087020874
    3. ' ' → logprob: -12.259771347045898
    4. '(sorted' → logprob: -12.384771347045898
    5. ' ' → logprob: -13.009771347045898
    6. ' value' → logprob: -13.384771347045898
    7. '_sorted' → logprob: -14.509771347045898
    8. '.sorted' → logprob: -15.509771347045898
    9. '```' → logprob: -15.634771347045898
    10. ' middle' → logprob: -15.822271347045898

Token 73: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.141186450899113e-05
    2. '_value' → logprob: -11.625020980834961
    3. '_' → logprob: -11.875020980834961
    4. '(_' → logprob: -13.375020980834961
    5. '_of' → logprob: -13.625020980834961
    6. '```' → logprob: -14.000020980834961
    7. '_sorted' → logprob: -14.625020980834961
    8. ' _' → logprob: -14.750020980834961
    9. '(' → logprob: -14.875020980834961
    10. '(value' → logprob: -15.875020980834961

Token 74: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -9.388769103679806e-05
    2. '[_' → logprob: -9.625093460083008
    3. '_list' → logprob: -12.000093460083008
    4. '[' → logprob: -12.625093460083008
    5. '```' → logprob: -12.625093460083008
    6. '_at' → logprob: -12.875093460083008
    7. '   ' → logprob: -12.875093460083008
    8. '_for' → logprob: -13.000093460083008
    9. '_' → logprob: -13.500093460083008
    10. '_to' → logprob: -13.750093460083008

Token 75: '_in' (ID: 2267)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.1444752812385559
    2. '_in' → logprob: -2.019475221633911
    3. 'in' → logprob: -6.64447546005249
    4. 'int' → logprob: -8.019474983215332
    5. 'n' → logprob: -9.269474983215332
    6. 'ints' → logprob: -10.269474983215332
    7. 'integer' → logprob: -11.269474983215332
    8. 'indices' → logprob: -11.644474983215332
    9. 'intr' → logprob: -13.394474983215332
    10. '_int' → logprob: -13.644474983215332

Token 76: 'te' (ID: 411)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.25793418288230896
    2. 'te' → logprob: -1.5079342126846313
    3. 't' → logprob: -5.632934093475342
    4. 'teger' → logprob: -6.757934093475342
    5. 'tex' → logprob: -7.632934093475342
    6. 'd' → logprob: -8.2579345703125
    7. 'teg' → logprob: -8.6329345703125
    8. '```' → logprob: -9.3829345703125
    9. '   ' → logprob: -10.0079345703125
    10. 'de' → logprob: -10.2579345703125

Token 77: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -4.167648876318708e-05
    2. 'rs' → logprob: -10.250041961669922
    3. 'r' → logprob: -13.000041961669922
    4. 'ger' → logprob: -13.500041961669922
    5. 'ers' → logprob: -13.750041961669922
    6. 'gr' → logprob: -14.375041961669922
    7. 'g' → logprob: -14.500041961669922
    8. 'gars' → logprob: -15.500041961669922
    9. '```' → logprob: -16.875041961669922
    10. '   ' → logprob: -17.125041961669922

Token 78: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.00038920470979064703
    2. '[' → logprob: -7.875389099121094
    3. '```' → logprob: -12.500389099121094
    4. '[
' → logprob: -12.875389099121094
    5. '[mid' → logprob: -13.125389099121094
    6. '[...]' → logprob: -15.625389099121094
    7. 'middle' → logprob: -15.625389099121094
    8. '[`' → logprob: -16.250389099121094
    9. ' [' → logprob: -16.500389099121094
    10. ' middle' → logprob: -17.125389099121094

Token 79: 'iddle' (ID: 5321)
  Prédit: 'iddle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iddle' → logprob: -0.03809623047709465
    2. 'i' → logprob: -3.2880961894989014
    3. 'id' → logprob: -10.16309642791748
    4. 'idd' → logprob: -11.66309642791748
    5. 'idde' → logprob: -12.28809642791748
    6. 'iddel' → logprob: -13.78809642791748
    7. 'e' → logprob: -14.53809642791748
    8. 'idden' → logprob: -14.91309642791748
    9. 'middle' → logprob: -15.03809642791748
    10. '```' → logprob: -15.41309642791748

Token 80: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004898447077721357
    2. '_' → logprob: -5.754898548126221
    3. '_i' → logprob: -6.504898548126221
    4. ' _' → logprob: -9.629898071289062
    5. '_idx' → logprob: -9.754898071289062
    6. ']_' → logprob: -10.754898071289062
    7. '```' → logprob: -11.004898071289062
    8. '_]' → logprob: -11.379898071289062
    9. '__' → logprob: -11.504898071289062
    10. '_
' → logprob: -12.004898071289062

Token 81: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017569332849234343
    2. ')' → logprob: -6.6267571449279785
    3. ')]' → logprob: -8.12675666809082
    4. ' ]' → logprob: -9.62675666809082
    5. '+' → logprob: -10.37675666809082
    6. ']
' → logprob: -10.87675666809082
    7. '])' → logprob: -11.62675666809082
    8. '-' → logprob: -13.12675666809082
    9. '']' → logprob: -13.62675666809082
    10. '}' → logprob: -14.00175666809082

Token 82: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' value' (ID: 1432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '_before' (ID: 56638)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0264795683324337
    2. '_' → logprob: -3.651479482650757
    3. '<|end|>' → logprob: -9.776479721069336
    4. ' _' → logprob: -10.526479721069336
    5. '```' → logprob: -11.526479721069336
    6. '_to' → logprob: -11.776479721069336
    7. '   ' → logprob: -12.026479721069336
    8. '_of' → logprob: -12.026479721069336
    9. 's' → logprob: -12.026479721069336
    10. '_
' → logprob: -12.151479721069336

Token 85: '_middle' (ID: 155207)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14671118557453156
    2. '_middle' → logprob: -2.0217111110687256
    3. '_at' → logprob: -6.271711349487305
    4. '_m' → logprob: -7.646711349487305
    5. '_the' → logprob: -8.021711349487305
    6. '_before' → logprob: -8.271711349487305
    7. '_s' → logprob: -8.271711349487305
    8. '_under' → logprob: -8.646711349487305
    9. '_sorted' → logprob: -8.771711349487305
    10. '_previous' → logprob: -9.646711349487305

Token 86: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25775429606437683
    2. '_index' → logprob: -1.5077543258666992
    3. '```' → logprob: -6.632754325866699
    4. ' =' → logprob: -7.132754325866699
    5. '[' → logprob: -7.507754325866699
    6. ' _' → logprob: -7.507754325866699
    7. ']' → logprob: -8.0077543258667
    8. '=' → logprob: -8.1327543258667
    9. '=_' → logprob: -8.5077543258667
    10. '_=' → logprob: -8.5077543258667

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027574781328439713
    2. '_' → logprob: -4.1525750160217285
    3. '=' → logprob: -4.5275750160217285
    4. ' ' → logprob: -7.7775750160217285
    5. ']' → logprob: -9.52757453918457
    6. '   ' → logprob: -10.02757453918457
    7. '[' → logprob: -10.65257453918457
    8. ' _' → logprob: -10.90257453918457
    9. '  ' → logprob: -11.15257453918457
    10. 's' → logprob: -11.77757453918457

Token 88: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.003297251183539629
    2. 'sorted' → logprob: -5.753297328948975
    3. ' ' → logprob: -9.253296852111816
    4. ' ' → logprob: -11.253296852111816
    5. '(sorted' → logprob: -12.003296852111816
    6. ' value' → logprob: -13.128296852111816
    7. '_sorted' → logprob: -14.253296852111816
    8. '.sorted' → logprob: -14.878296852111816
    9. ' 
' → logprob: -15.753296852111816
    10. 's' → logprob: -15.753296852111816

Token 89: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00013381359167397022
    2. '(_' → logprob: -9.625133514404297
    3. '_' → logprob: -11.500133514404297
    4. '_of' → logprob: -11.500133514404297
    5. '_sorted' → logprob: -11.625133514404297
    6. '(' → logprob: -11.875133514404297
    7. '```' → logprob: -11.875133514404297
    8. '(sorted' → logprob: -12.000133514404297
    9. 'ed' → logprob: -12.125133514404297
    10. '(list' → logprob: -12.250133514404297

Token 90: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.6895233531831764e-05
    2. '_' → logprob: -11.87502670288086
    3. '_for' → logprob: -12.25002670288086
    4. '[_' → logprob: -12.37502670288086
    5. '```' → logprob: -12.62502670288086
    6. '_at' → logprob: -13.50002670288086
    7. '_list' → logprob: -13.75002670288086
    8. '[' → logprob: -13.75002670288086
    9. 'of' → logprob: -14.12502670288086
    10. '_o' → logprob: -15.00002670288086

Token 91: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.002391706220805645
    2. '_sorted' → logprob: -7.002391815185547
    3. '_list' → logprob: -7.377391815185547
    4. 'int' → logprob: -8.252391815185547
    5. 'sorted' → logprob: -8.752391815185547
    6. 'inte' → logprob: -8.752391815185547
    7. '_' → logprob: -9.252391815185547
    8. '_int' → logprob: -9.377391815185547
    9. 'in' → logprob: -9.877391815185547
    10. '_index' → logprob: -11.252391815185547

Token 92: 'te' (ID: 411)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.43820157647132874
    2. 't' → logprob: -1.3132015466690063
    3. 'te' → logprob: -2.563201665878296
    4. 'teger' → logprob: -5.438201427459717
    5. 'tex' → logprob: -6.938201427459717
    6. 'ted' → logprob: -6.938201427459717
    7. 'teg' → logprob: -7.188201427459717
    8. 'sorted' → logprob: -7.313201427459717
    9. 'd' → logprob: -8.063201904296875
    10. '   ' → logprob: -8.563201904296875

Token 93: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.000826421775855124
    2. 'ger' → logprob: -7.625826358795166
    3. 'x' → logprob: -9.000826835632324
    4. 'gr' → logprob: -9.125826835632324
    5. 'r' → logprob: -9.250826835632324
    6. 'rs' → logprob: -12.500826835632324
    7. 'ers' → logprob: -12.875826835632324
    8. 'red' → logprob: -13.500826835632324
    9. 'g' → logprob: -14.000826835632324
    10. 'gres' → logprob: -15.250826835632324

Token 94: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.016099359840154648
    2. '[' → logprob: -4.141099452972412
    3. '```' → logprob: -10.141098976135254
    4. '[
' → logprob: -11.266098976135254
    5. '[mid' → logprob: -12.266098976135254
    6. '[`' → logprob: -12.766098976135254
    7. '[length' → logprob: -13.891098976135254
    8. '`' → logprob: -14.891098976135254
    9. '[...]' → logprob: -14.891098976135254
    10. '\[' → logprob: -14.891098976135254

Token 95: 'iddle' (ID: 5321)
  Prédit: 'iddle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iddle' → logprob: -0.00027099132421426475
    2. 'id' → logprob: -8.62527084350586
    3. 'i' → logprob: -9.50027084350586
    4. 'idd' → logprob: -11.62527084350586
    5. '_id' → logprob: -12.75027084350586
    6. 'iddel' → logprob: -13.25027084350586
    7. 'idde' → logprob: -13.37527084350586
    8. 'idden' → logprob: -15.12527084350586
    9. '```' → logprob: -15.62527084350586
    10. 'e' → logprob: -15.62527084350586

Token 96: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0008359544444829226
    2. '_' → logprob: -7.50083589553833
    3. '```' → logprob: -9.375836372375488
    4. ' _' → logprob: -10.125836372375488
    5. '_idx' → logprob: -10.500836372375488
    6. '-' → logprob: -10.500836372375488
    7. 'index' → logprob: -10.750836372375488
    8. '1' → logprob: -11.000836372375488
    9. '__' → logprob: -11.375836372375488
    10. 's' → logprob: -12.250836372375488

Token 97: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47436225414276123
    2. '-' → logprob: -0.9743622541427612
    3. ']' → logprob: -8.97436237335205
    4. ' ' → logprob: -9.22436237335205
    5. ' ]' → logprob: -9.84936237335205
    6. '1' → logprob: -12.84936237335205
    7. ' ' → logprob: -13.72436237335205
    8. '<|end|>' → logprob: -13.97436237335205
    9. ')' → logprob: -15.22436237335205
    10. ' -
' → logprob: -15.47436237335205

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017029138980433345
    2. ' ' → logprob: -6.376702785491943
    3. '<|end|>' → logprob: -14.376703262329102
    4. '```' → logprob: -15.751703262329102
    5. '    ' → logprob: -17.6267032623291
    6. ' ' → logprob: -17.8767032623291
    7. '۱' → logprob: -18.2517032623291
    8. '   ' → logprob: -18.3767032623291
    9. '<|end|>' → logprob: -18.3767032623291
    10. '0' → logprob: -18.5017032623291

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -16.875003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '0' → logprob: -17.062503814697266
    6. '```' → logprob: -17.125003814697266
    7. '
' → logprob: -17.937503814697266
    8. '3' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.437503814697266
    10. '  ' → logprob: -18.625003814697266

Token 100: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1134730651974678
    2. ']' → logprob: -2.2384731769561768
    3. '<|end|>' → logprob: -7.488472938537598
    4. '}' → logprob: -10.988472938537598
    5. '   ' → logprob: -10.988472938537598
    6. ' )' → logprob: -11.113472938537598
    7. ')]' → logprob: -11.238472938537598
    8. ' ]' → logprob: -11.738472938537598
    9. '']' → logprob: -11.863472938537598
    10. '```' → logprob: -12.613472938537598

Token 101: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4404710531234741
    2. '<|end|>' → logprob: -1.3154710531234741
    3. '   ' → logprob: -3.4404711723327637
    4. ')' → logprob: -3.4404711723327637
    5. ' ' → logprob: -4.940471172332764
    6. '#' → logprob: -5.815471172332764
    7. '    
' → logprob: -6.065471172332764
    8. '  
' → logprob: -6.315471172332764
    9. ':' → logprob: -6.440471172332764
    10. '\n' → logprob: -6.565471172332764

Token 102: ' difference' (ID: 9809)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4516400694847107
    2. 'if' → logprob: -1.9516401290893555
    3. '<|end|>' → logprob: -2.9516401290893555
    4. '#' → logprob: -3.4516401290893555
    5. '    
' → logprob: -3.7016401290893555
    6. '
' → logprob: -3.7016401290893555
    7. ' if' → logprob: -3.9516401290893555
    8. 'print' → logprob: -4.2016401290893555
    9. ')' → logprob: -4.4516401290893555
    10. ' ' → logprob: -4.8266401290893555

Token 103: '_between' (ID: 124874)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11092792451381683
    2. '_' → logprob: -2.3609278202056885
    3. '=' → logprob: -4.860928058624268
    4. 's' → logprob: -6.110928058624268
    5. ' ' → logprob: -8.11092758178711
    6. ' _' → logprob: -8.36092758178711
    7. '_s' → logprob: -10.36092758178711
    8. ')' → logprob: -10.86092758178711
    9. '  ' → logprob: -10.86092758178711
    10. '_space' → logprob: -10.86092758178711

Token 104: '_middle' (ID: 155207)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6545453071594238
    2. '_' → logprob: -1.6545453071594238
    3. '_values' → logprob: -1.9045453071594238
    4. '_value' → logprob: -3.154545307159424
    5. 's' → logprob: -3.279545307159424
    6. ' ' → logprob: -3.904545307159424
    7. ' value' → logprob: -4.154545307159424
    8. 'values' → logprob: -4.279545307159424
    9. ' =' → logprob: -5.404545307159424
    10. '=' → logprob: -7.279545307159424

Token 105: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012402292340993881
    2. '_index' → logprob: -7.126240253448486
    3. '_value' → logprob: -8.376239776611328
    4. '_indices' → logprob: -9.751239776611328
    5. '=' → logprob: -10.126239776611328
    6. '_=' → logprob: -10.626239776611328
    7. '_indexes' → logprob: -10.751239776611328
    8. '_values' → logprob: -11.001239776611328
    9. ' _' → logprob: -11.376239776611328
    10. ' =' → logprob: -11.626239776611328

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858986660838127
    2. '=' → logprob: -3.0485899448394775
    3. ' ' → logprob: -13.423589706420898
    4. ' =
' → logprob: -14.423589706420898
    5. '_' → logprob: -15.673589706420898
    6. 's' → logprob: -15.923589706420898
    7. ' ' → logprob: -16.5485897064209
    8. ',' → logprob: -17.5485897064209
    9. '  ' → logprob: -17.5485897064209
    10. '.' → logprob: -17.9235897064209

Token 107: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.01028247270733118
    2. 'value' → logprob: -4.635282516479492
    3. ' abs' → logprob: -7.885282516479492
    4. 'abs' → logprob: -9.510282516479492
    5. '(value' → logprob: -10.135282516479492
    6. ' ' → logprob: -10.885282516479492
    7. ' sorted' → logprob: -12.385282516479492
    8. '	value' → logprob: -13.010282516479492
    9. '"value' → logprob: -13.135282516479492
    10. ' ' → logprob: -13.635282516479492

Token 108: '_at' (ID: 8254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10884438455104828
    2. '_at' → logprob: -2.35884428024292
    3. '_before' → logprob: -5.10884428024292
    4. '_between' → logprob: -6.35884428024292
    5. '_a' → logprob: -7.48384428024292
    6. '_after' → logprob: -9.483844757080078
    7. ' _' → logprob: -9.733844757080078
    8. '_
' → logprob: -9.733844757080078
    9. '_-' → logprob: -10.983844757080078
    10. '_

' → logprob: -11.733844757080078

Token 109: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -0.16037218272686005
    2. '_' → logprob: -1.9103721380233765
    3. 'middle' → logprob: -8.910371780395508
    4. '_m' → logprob: -12.410371780395508
    5. '_
' → logprob: -12.660371780395508
    6. '```' → logprob: -13.660371780395508
    7. '_medium' → logprob: -13.910371780395508
    8. '_difference' → logprob: -14.035371780395508
    9. ' _' → logprob: -14.910371780395508
    10. '_before' → logprob: -15.160371780395508

Token 110: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.07019995898008347
    2. '_' → logprob: -2.695199966430664
    3. ' _' → logprob: -9.195199966430664
    4. '_idx' → logprob: -10.320199966430664
    5. '_ind' → logprob: -10.945199966430664
    6. '_difference' → logprob: -11.070199966430664
    7. 'index' → logprob: -11.320199966430664
    8. '```' → logprob: -11.445199966430664
    9. '_value' → logprob: -11.570199966430664
    10. '_i' → logprob: -11.570199966430664

Token 111: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1427120417356491
    2. '-' → logprob: -2.017712116241455
    3. ' ' → logprob: -11.142711639404297
    4. ' ' → logprob: -11.142711639404297
    5. ' -
' → logprob: -13.017711639404297
    6. '<|end|>' → logprob: -13.142711639404297
    7. '```' → logprob: -14.517711639404297
    8. '-
' → logprob: -14.642711639404297
    9. '‌' → logprob: -14.767711639404297
    10. '-value' → logprob: -14.892711639404297

Token 112: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.31330424547195435
    2. ' value' → logprob: -1.3133041858673096
    3. ' ' → logprob: -10.68830394744873
    4. '	value' → logprob: -12.31330394744873
    5. '_value' → logprob: -12.68830394744873
    6. '"value' → logprob: -13.18830394744873
    7. '(value' → logprob: -13.43830394744873
    8. ''value' → logprob: -13.56330394744873
    9. ')value' → logprob: -13.56330394744873
    10. 'space' → logprob: -13.93830394744873

Token 113: '_before' (ID: 56638)
  Prédit: '_before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_before' → logprob: -0.0006398845580406487
    2. '_' → logprob: -7.500639915466309
    3. '_after' → logprob: -10.000639915466309
    4. '_between' → logprob: -10.625639915466309
    5. '_at' → logprob: -12.375639915466309
    6. '_be' → logprob: -12.625639915466309
    7. 'before' → logprob: -13.250639915466309
    8. 'Before' → logprob: -13.875639915466309
    9. '_difference' → logprob: -13.875639915466309
    10. '```' → logprob: -14.125639915466309

Token 114: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -0.006888004019856453
    2. 'middle' → logprob: -5.506887912750244
    3. '_' → logprob: -5.881887912750244
    4. '_m' → logprob: -11.631888389587402
    5. '_medium' → logprob: -12.756888389587402
    6. ' middle' → logprob: -14.381888389587402
    7. '_mid' → logprob: -14.381888389587402
    8. 'm' → logprob: -14.506888389587402
    9. '_difference' → logprob: -14.506888389587402
    10. '```' → logprob: -14.631888389587402

Token 115: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.013550277799367905
    2. '_' → logprob: -4.763550281524658
    3. 'index' → logprob: -5.388550281524658
    4. ' _' → logprob: -8.7635498046875
    5. 'ind' → logprob: -10.3885498046875
    6. '_idx' → logprob: -10.5135498046875
    7. '_indexes' → logprob: -11.2635498046875
    8. 's' → logprob: -11.5135498046875
    9. '_indices' → logprob: -11.6385498046875
    10. '_ind' → logprob: -11.6385498046875

Token 116: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6840896010398865
    2. '<|end|>' → logprob: -1.1840896606445312
    3. '   ' → logprob: -2.3090896606445312
    4. ')' → logprob: -4.059089660644531
    5. '```' → logprob: -4.059089660644531
    6. ' ' → logprob: -4.309089660644531
    7. ':' → logprob: -4.559089660644531
    8. '\n' → logprob: -5.184089660644531
    9. '#' → logprob: -5.434089660644531
    10. 'if' → logprob: -5.809089660644531

Token 118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.24886658787727356
    2. 'if' → logprob: -1.6238665580749512
    3. 'return' → logprob: -3.998866558074951
    4. '   ' → logprob: -5.623866558074951
    5. ' if' → logprob: -7.873866558074951
    6. 'for' → logprob: -7.873866558074951
    7. '#' → logprob: -9.12386703491211
    8. '    
' → logprob: -9.74886703491211
    9. '```' → logprob: -9.87386703491211
    10. ' print' → logprob: -10.24886703491211

Token 119: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06286543607711792
    2. '(d' → logprob: -2.8128654956817627
    3. '()' → logprob: -7.187865257263184
    4. '('' → logprob: -9.562865257263184
    5. '(value' → logprob: -10.437865257263184
    6. ' (' → logprob: -11.687865257263184
    7. '(diff' → logprob: -11.812865257263184
    8. 'difference' → logprob: -11.812865257263184
    9. '("' → logprob: -12.312865257263184
    10. '(D' → logprob: -12.562865257263184

Token 120: 'ifference' (ID: 30083)
  Prédit: 'ifference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifference' → logprob: -0.0001537169300718233
    2. 'difference' → logprob: -9.375153541564941
    3. 'iffer' → logprob: -9.875153541564941
    4. 'ifferent' → logprob: -11.875153541564941
    5. '_difference' → logprob: -12.500153541564941
    6. 'iff' → logprob: -13.625153541564941
    7. 'i' → logprob: -13.750153541564941
    8. 'iffe' → logprob: -13.875153541564941
    9. ')' → logprob: -13.875153541564941
    10. 'Difference' → logprob: -14.000153541564941

Token 121: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.062245965003967285
    2. ')' → logprob: -2.8122458457946777
    3. '_)' → logprob: -8.312246322631836
    4. '_' → logprob: -11.937246322631836
    5. '_difference' → logprob: -12.187246322631836
    6. '_b' → logprob: -12.187246322631836
    7. '[' → logprob: -12.937246322631836
    8. '_before' → logprob: -13.312246322631836
    9. 'Between' → logprob: -13.312246322631836
    10. ')_' → logprob: -13.312246322631836

Token 122: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -0.00025204161647707224
    2. 'middle' → logprob: -8.375251770019531
    3. '_' → logprob: -10.875251770019531
    4. '_elements' → logprob: -14.250251770019531
    5. '_m' → logprob: -14.375251770019531
    6. '_mid' → logprob: -14.875251770019531
    7. '_medium' → logprob: -15.000251770019531
    8. ' middle' → logprob: -15.375251770019531
    9. '_between' → logprob: -15.500251770019531
    10. 'Middle' → logprob: -16.87525177001953

Token 123: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.001479505910538137
    2. '_' → logprob: -7.001479625701904
    3. 'elements' → logprob: -7.751479625701904
    4. ')' → logprob: -9.626479148864746
    5. '_)' → logprob: -10.126479148864746
    6. '_e' → logprob: -11.876479148864746
    7. 's' → logprob: -12.126479148864746
    8. 'ele' → logprob: -12.376479148864746
    9. '_element' → logprob: -12.751479148864746
    10. ')_' → logprob: -13.126479148864746

Token 124: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.625003814697266
    4. '))' → logprob: -17.875003814697266
    5. ')`' → logprob: -18.625003814697266
    6. ')

' → logprob: -18.750003814697266
    7. '(' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.250003814697266
    9. '')' → logprob: -19.250003814697266
    10. '()' → logprob: -19.250003814697266

Token 125: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4512936472892761
    2. '<|end|>' → logprob: -1.326293706893921
    3. '
' → logprob: -3.326293706893921
    4. '```' → logprob: -4.076293468475342
    5. ':' → logprob: -4.076293468475342
    6. '\n' → logprob: -4.326293468475342
    7. '#' → logprob: -5.701293468475342
    8. ' ' → logprob: -6.076293468475342
    9. 'newline' → logprob: -6.201293468475342
    10. '(' → logprob: -6.201293468475342

Token 126: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09748955070972443
    2. '_' → logprob: -2.972489595413208
    3. ' ' → logprob: -3.597489595413208
    4. '__' → logprob: -4.347489356994629
    5. ' _' → logprob: -7.097489356994629
    6. ' ' → logprob: -7.972489356994629
    7. ' ' → logprob: -9.597489356994629
    8. '_name' → logprob: -10.347489356994629
    9. ' ​' → logprob: -10.347489356994629
    10. ' ‌' → logprob: -10.722489356994629

Token 127: 'name' (ID: 897)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010735770774772391
    2. '==' → logprob: -9.875107765197754
    3. '_' → logprob: -10.125107765197754
    4. '___' → logprob: -12.125107765197754
    5. '__.__' → logprob: -12.250107765197754
    6. ' ==' → logprob: -12.875107765197754
    7. ' __' → logprob: -13.875107765197754
    8. '____' → logprob: -14.125107765197754
    9. '__.' → logprob: -15.625107765197754
    10. '"' → logprob: -15.750107765197754

Token 129: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6807928085327148
    2. '__' → logprob: -1.0557928085327148
    3. ' ==' → logprob: -1.9307928085327148
    4. '=' → logprob: -8.555792808532715
    5. '=="' → logprob: -8.680792808532715
    6. '_' → logprob: -8.680792808532715
    7. '.' → logprob: -9.180792808532715
    8. '[' → logprob: -9.930792808532715
    9. '=='' → logprob: -10.180792808532715
    10. '.__' → logprob: -10.180792808532715

Token 130: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04864947870373726
    2. ''' → logprob: -3.048649549484253
    3. ' "__' → logprob: -10.423649787902832
    4. '__' → logprob: -10.548649787902832
    5. '"user' → logprob: -12.798649787902832
    6. ' '__' → logprob: -13.298649787902832
    7. ''s' → logprob: -15.173649787902832
    8. '"name' → logprob: -15.173649787902832
    9. ''user' → logprob: -15.423649787902832
    10. ' "' → logprob: -15.798649787902832

Token 131: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028393415734171867
    2. 'main' → logprob: -3.653393507003784
    3. 'name' → logprob: -6.903393268585205
    4. '_' → logprob: -7.528393268585205
    5. '__':
' → logprob: -8.528393745422363
    6. '_main' → logprob: -9.028393745422363
    7. 'm' → logprob: -9.153393745422363
    8. ''' → logprob: -10.028393745422363
    9. '___' → logprob: -10.903393745422363
    10. '_name' → logprob: -11.028393745422363

Token 132: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38708993792533875
    2. '__':
' → logprob: -1.1370899677276611
    3. '_' → logprob: -8.512089729309082
    4. '__:' → logprob: -11.387089729309082
    5. '':' → logprob: -12.387089729309082
    6. '__":
' → logprob: -13.637089729309082
    7. '__.' → logprob: -14.512089729309082
    8. '__('' → logprob: -15.637089729309082
    9. ''' → logprob: -15.887089729309082
    10. '___' → logprob: -16.0120906829834

Token 133: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.019087553024291992
    2. '   ' → logprob: -5.519087791442871
    3. '    
' → logprob: -5.769087791442871
    4. 'main' → logprob: -5.894087791442871
    5. ' 
' → logprob: -6.019087791442871
    6. '<|end|>' → logprob: -6.019087791442871
    7. '	main' → logprob: -6.394087791442871
    8. '(main' → logprob: -7.269087791442871
    9. ' ' → logprob: -8.144087791442871
    10. '  
' → logprob: -8.644087791442871

Token 134: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.28123772144317627
    2. 'main' (adapté à ' main') → logprob: -1.4062377214431763
    3. '	main' → logprob: -9.531237602233887
    4. ' ' → logprob: -12.031237602233887
    5. ' 
' → logprob: -12.781237602233887
    6. '(main' → logprob: -13.031237602233887
    7. '_main' → logprob: -14.031237602233887
    8. ' ' → logprob: -14.031237602233887
    9. '.main' → logprob: -14.406237602233887
    10. '   ' → logprob: -14.906237602233887

Token 135: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021002046763896942
    2. '(' → logprob: -3.8960020542144775
    3. '()
' → logprob: -7.896001815795898
    4. '(
' → logprob: -9.521001815795898
    5. '```' → logprob: -13.021001815795898
    6. '()

' → logprob: -13.146001815795898
    7. '()\' → logprob: -13.521001815795898
    8. ')' → logprob: -13.896001815795898
    9. '#' → logprob: -14.021001815795898
    10. '(

' → logprob: -14.021001815795898


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 133
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 46.62%
Précision adaptée (1ère position): 47.37%
Précision (top 10): 75.19%
================================================================================
