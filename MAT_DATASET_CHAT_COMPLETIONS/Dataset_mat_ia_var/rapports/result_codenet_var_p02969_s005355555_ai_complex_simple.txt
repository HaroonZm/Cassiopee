================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

a = int(input())
b = reduce(lambda x, y: x + y, map(lambda x: mul(x, x), [a]*3))
print(sum([b for _ in range(1)]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025124039500951767
    2. '.' → logprob: -4.0251240730285645
    3. '\' → logprob: -6.4001240730285645
    4. '```' → logprob: -6.5251240730285645
    5. ',' → logprob: -6.6501240730285645
    6. ' (' → logprob: -7.5251240730285645
    7. '(lambda' → logprob: -7.7751240730285645
    8. '[' → logprob: -8.400123596191406
    9. '\(' → logprob: -8.400123596191406
    10. ' ' → logprob: -8.400123596191406

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3170230984687805
    2. ' import' → logprob: -1.9420230388641357
    3. 'add' → logprob: -2.4420230388641357
    4. ' ' → logprob: -4.192023277282715
    5. ' mul' → logprob: -4.192023277282715
    6. 'import' → logprob: -4.817023277282715
    7. 'mul' → logprob: -6.192023277282715
    8. ' item' → logprob: -8.692023277282715
    9. 'item' → logprob: -9.567023277282715
    10. ' ad' → logprob: -9.817023277282715

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3455864191055298
    2. '(
' → logprob: -1.9705864191055298
    3. '\' → logprob: -2.4705862998962402
    4. '\n' → logprob: -3.5955862998962402
    5. '*' → logprob: -4.34558629989624
    6. 'def' → logprob: -5.09558629989624
    7. ',' → logprob: -5.34558629989624
    8. '#' → logprob: -6.09558629989624
    9. 'a' → logprob: -6.22058629989624
    10. '`' → logprob: -6.47058629989624

Token 10: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06361429393291473
    2. '(
' → logprob: -3.3136143684387207
    3. 'def' → logprob: -4.563614368438721
    4. '#' → logprob: -5.313614368438721
    5. '\' → logprob: -5.563614368438721
    6. 'a' → logprob: -6.813614368438721
    7. ',' → logprob: -6.938614368438721
    8. 'result' → logprob: -7.313614368438721
    9. '`' → logprob: -7.438614368438721
    10. '*' → logprob: -8.063613891601562

Token 11: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5410033464431763
    2. '[' → logprob: -1.6660033464431763
    3. '=' → logprob: -1.7910033464431763
    4. ',' → logprob: -2.1660032272338867
    5. 'b' → logprob: -2.6660032272338867
    6. 'r' → logprob: -2.6660032272338867
    7. '*' → logprob: -3.1660032272338867
    8. '.' → logprob: -3.5410032272338867
    9. 's' → logprob: -3.5410032272338867
    10. '_' → logprob: -3.7910032272338867

Token 12: ' int' (ID: 677)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0799744501709938
    2. '[' → logprob: -2.954974412918091
    3. ' ' → logprob: -3.829974412918091
    4. '1' → logprob: -6.07997465133667
    5. '10' → logprob: -8.829974174499512
    6. ' []' → logprob: -8.829974174499512
    7. '5' → logprob: -9.204974174499512
    8. '0' → logprob: -9.329974174499512
    9. ' range' → logprob: -9.829974174499512
    10. '2' → logprob: -9.954974174499512

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002456034068018198
    2. '(a' → logprob: -6.502456188201904
    3. 'a' → logprob: -7.252456188201904
    4. ' (' → logprob: -9.502455711364746
    5. '(input' → logprob: -9.877455711364746
    6. '('' → logprob: -10.127455711364746
    7. '<|end|>' → logprob: -11.127455711364746
    8. '(
' → logprob: -11.752455711364746
    9. '```' → logprob: -11.877455711364746
    10. ')' → logprob: -12.002455711364746

Token 14: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1286538541316986
    2. '()' → logprob: -2.3786537647247314
    3. ')' → logprob: -3.7536537647247314
    4. '())' → logprob: -5.6286540031433105
    5. '('' → logprob: -7.6286540031433105
    6. '(
' → logprob: -9.253653526306152
    7. '(a' → logprob: -9.253653526306152
    8. '(()' → logprob: -9.378653526306152
    9. '(

' → logprob: -9.628653526306152
    10. 'a' → logprob: -9.878653526306152

Token 15: 'b' (ID: 65)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4514852464199066
    2. 'n' → logprob: -1.951485276222229
    3. ')' → logprob: -3.2014851570129395
    4. 'factor' → logprob: -3.3264851570129395
    5. '\n' → logprob: -3.9514851570129395
    6. ' 
' → logprob: -4.0764851570129395
    7. 'b' → logprob: -4.4514851570129395
    8. ' result' → logprob: -4.4514851570129395
    9. 'fact' → logprob: -4.5764851570129395
    10. 'numbers' → logprob: -4.8264851570129395

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012993032112717628
    2. '=' → logprob: -4.762992858886719
    3. ' ' → logprob: -5.512992858886719
    4. ')' → logprob: -8.637992858886719
    5. '.' → logprob: -10.262992858886719
    6. ' )' → logprob: -10.637992858886719
    7. ' *' → logprob: -10.762992858886719
    8. '_' → logprob: -10.887992858886719
    9. '  ' → logprob: -11.012992858886719
    10. ' +=' → logprob: -11.762992858886719

Token 17: ' reduce' (ID: 10389)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4752996265888214
    2. 'int' → logprob: -0.975299596786499
    3. 'a' → logprob: -7.850299835205078
    4. ' input' → logprob: -8.100299835205078
    5. ' a' → logprob: -8.225299835205078
    6. 'input' → logprob: -8.350299835205078
    7. ' ' → logprob: -11.725299835205078
    8. '=int' → logprob: -12.475299835205078
    9. '(int' → logprob: -12.600299835205078
    10. '[int' → logprob: -12.725299835205078

Token 18: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06208207458257675
    2. '(m' → logprob: -2.812082052230835
    3. '(lambda' → logprob: -9.562082290649414
    4. '(operator' → logprob: -10.437082290649414
    5. '(
' → logprob: -11.437082290649414
    6. '(

' → logprob: -14.062082290649414
    7. '(mult' → logprob: -14.062082290649414
    8. ' (' → logprob: -14.812082290649414
    9. '((' → logprob: -15.062082290649414
    10. '(*' → logprob: -15.312082290649414

Token 19: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0297132208943367
    2. 'x' → logprob: -4.279713153839111
    3. ' a' → logprob: -5.029713153839111
    4. ' mul' → logprob: -5.654713153839111
    5. ' ,' → logprob: -6.404713153839111
    6. ' ' → logprob: -7.279713153839111
    7. 'a' → logprob: -7.279713153839111
    8. 'mul' → logprob: -7.404713153839111
    9. ' acc' → logprob: -7.654713153839111
    10. ',' → logprob: -7.779713153839111

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022558800410479307
    2. ' ,' → logprob: -6.252255916595459
    3. ',m' → logprob: -8.5022554397583
    4. ',x' → logprob: -9.2522554397583
    5. 'mul' → logprob: -11.6272554397583
    6. ',b' → logprob: -11.8772554397583
    7. ',y' → logprob: -12.1272554397583
    8. '*,' → logprob: -13.6272554397583
    9. '_,' → logprob: -13.8772554397583
    10. '_mul' → logprob: -14.5022554397583

Token 21: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759590864181519
    2. 'y' → logprob: -0.8259590864181519
    3. ' ' → logprob: -11.200959205627441
    4. 'x' → logprob: -13.450959205627441
    5. ',' → logprob: -13.450959205627441
    6. '	y' → logprob: -13.700959205627441
    7. ',y' → logprob: -13.950959205627441
    8. ' ' → logprob: -15.075959205627441
    9. ' x' → logprob: -15.325959205627441
    10. '  ' → logprob: -15.825959205627441

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013159054331481457
    2. ' :' → logprob: -4.513159275054932
    3. ',' → logprob: -6.513159275054932
    4. ':x' → logprob: -7.513159275054932
    5. ':m' → logprob: -11.138158798217773
    6. ',:' → logprob: -11.388158798217773
    7. ',x' → logprob: -11.388158798217773
    8. ' ,' → logprob: -11.638158798217773
    9. ',y' → logprob: -11.763158798217773
    10. ':y' → logprob: -11.888158798217773

Token 23: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2520482540130615
    2. ' x' → logprob: -1.5020482540130615
    3. 'mul' → logprob: -9.37704849243164
    4. ' ' → logprob: -11.25204849243164
    5. ' mul' → logprob: -11.62704849243164
    6. '  ' → logprob: -12.00204849243164
    7. '	x' → logprob: -12.62704849243164
    8. '   ' → logprob: -14.00204849243164
    9. '(x' → logprob: -14.37704849243164
    10. ' ' → logprob: -15.50204849243164

Token 24: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42959070205688477
    2. ' *' → logprob: -1.0545907020568848
    3. '*y' → logprob: -7.054590702056885
    4. ' ' → logprob: -11.179590225219727
    5. '**' → logprob: -12.429590225219727
    6. '+' → logprob: -13.304590225219727
    7. ' **' → logprob: -13.554590225219727
    8. ' y' → logprob: -13.679590225219727
    9. '*b' → logprob: -13.804590225219727
    10. 'y' → logprob: -14.304590225219727

Token 25: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4301319420337677
    2. 'y' → logprob: -1.0551319122314453
    3. '1' → logprob: -6.680131912231445
    4. ' ' → logprob: -8.805131912231445
    5. 'b' → logprob: -12.805131912231445
    6. ''y' → logprob: -12.805131912231445
    7. '*y' → logprob: -13.180131912231445
    8. 'x' → logprob: -13.242631912231445
    9. ' ' → logprob: -13.617631912231445
    10. '	y' → logprob: -13.680131912231445

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030531694646924734
    2. ')' → logprob: -7.003053188323975
    3. '(range' → logprob: -7.003053188323975
    4. 'range' → logprob: -7.753053188323975
    5. ' ,' → logprob: -8.128052711486816
    6. 'a' → logprob: -8.628052711486816
    7. ',a' → logprob: -8.753052711486816
    8. ',b' → logprob: -10.503052711486816
    9. '(a' → logprob: -10.753052711486816
    10. '(' → logprob: -10.878052711486816

Token 27: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12742997705936432
    2. 'map' → logprob: -3.252429962158203
    3. ' range' → logprob: -3.877429962158203
    4. '[' → logprob: -4.002429962158203
    5. '(range' → logprob: -4.877429962158203
    6. ')' → logprob: -5.002429962158203
    7. '[str' → logprob: -5.377429962158203
    8. 'list' → logprob: -5.502429962158203
    9. 'str' → logprob: -5.502429962158203
    10. '[a' → logprob: -5.502429962158203

Token 28: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.14637377858161926
    2. '(str' → logprob: -2.146373748779297
    3. '(lambda' → logprob: -4.521373748779297
    4. '(' → logprob: -5.396373748779297
    5. '(list' → logprob: -6.271373748779297
    6. '(ord' → logprob: -6.896373748779297
    7. '(range' → logprob: -7.271373748779297
    8. '(len' → logprob: -8.896373748779297
    9. '(chr' → logprob: -10.521373748779297
    10. '(pow' → logprob: -10.771373748779297

Token 29: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.028273344039917
    2. ' int' → logprob: -1.528273344039917
    3. 'x' → logprob: -1.778273344039917
    4. 'int' → logprob: -1.778273344039917
    5. 'a' → logprob: -3.403273344039917
    6. ' a' → logprob: -4.153273582458496
    7. 'lambda' → logprob: -4.653273582458496
    8. ' lambda' → logprob: -4.778273582458496
    9. 'str' → logprob: -5.278273582458496
    10. ' str' → logprob: -5.778273582458496

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07130217552185059
    2. ' :' → logprob: -3.0713021755218506
    3. ',' → logprob: -3.8213021755218506
    4. ':int' → logprob: -8.57130241394043
    5. ' ,' → logprob: -8.82130241394043
    6. 'a' → logprob: -9.44630241394043
    7. ',a' → logprob: -10.19630241394043
    8. ',int' → logprob: -10.69630241394043
    9. ':a' → logprob: -11.44630241394043
    10. ' x' → logprob: -11.69630241394043

Token 31: ' mul' (ID: 9975)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.422446072101593
    2. ' int' → logprob: -1.5474460124969482
    3. 'a' → logprob: -3.2974460124969482
    4. 'x' → logprob: -3.2974460124969482
    5. ' x' → logprob: -3.6724460124969482
    6. 'mul' → logprob: -4.547446250915527
    7. 'pow' → logprob: -4.797446250915527
    8. ' a' → logprob: -4.797446250915527
    9. ' ord' → logprob: -6.922446250915527
    10. ' mul' → logprob: -7.172446250915527

Token 32: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6957932114601135
    2. '(a' → logprob: -0.9457932114601135
    3. '(' → logprob: -2.1957931518554688
    4. '(b' → logprob: -7.195793151855469
    5. 'a' → logprob: -7.695793151855469
    6. '(int' → logprob: -8.820793151855469
    7. ')' → logprob: -9.945793151855469
    8. '(*' → logprob: -10.070793151855469
    9. ',' → logprob: -10.195793151855469
    10. 'x' → logprob: -10.570793151855469

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002049028407782316
    2. ',a' → logprob: -6.752048969268799
    3. ' ,' → logprob: -7.502048969268799
    4. ',x' → logprob: -9.127049446105957
    5. 'a' → logprob: -9.252049446105957
    6. ',b' → logprob: -10.252049446105957
    7. '+' → logprob: -10.752049446105957
    8. '2' → logprob: -11.127049446105957
    9. '1' → logprob: -12.127049446105957
    10. ' +' → logprob: -12.252049446105957

Token 34: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15123777091503143
    2. ' x' → logprob: -2.026237726211548
    3. 'a' → logprob: -5.526237964630127
    4. '2' → logprob: -6.651237964630127
    5. ' ' → logprob: -6.651237964630127
    6. 'b' → logprob: -7.276237964630127
    7. '1' → logprob: -8.401237487792969
    8. ' a' → logprob: -8.401237487792969
    9. '10' → logprob: -8.401237487792969
    10. 'int' → logprob: -9.151237487792969

Token 35: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007946579717099667
    2. '),' → logprob: -5.132946491241455
    3. ',a' → logprob: -6.632946491241455
    4. 'a' → logprob: -7.882946491241455
    5. ',b' → logprob: -9.257946968078613
    6. '(a' → logprob: -9.382946968078613
    7. ' ,' → logprob: -9.507946968078613
    8. 'b' → logprob: -11.257946968078613
    9. ',x' → logprob: -11.382946968078613
    10. ')' → logprob: -11.882946968078613

Token 36: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1012430191040039
    2. ' range' → logprob: -2.351243019104004
    3. '(range' → logprob: -7.976243019104004
    4. 'a' → logprob: -8.351243019104004
    5. '[' → logprob: -8.851243019104004
    6. '[a' → logprob: -9.601243019104004
    7. 'list' → logprob: -9.976243019104004
    8. ' a' → logprob: -9.976243019104004
    9. ' ' → logprob: -10.226243019104004
    10. ' [' → logprob: -10.476243019104004

Token 37: 'a' (ID: 64)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2340749353170395
    2. 'i' → logprob: -1.7340749502182007
    3. 'a' → logprob: -3.609074831008911
    4. 'int' → logprob: -6.35907506942749
    5. ' range' → logprob: -6.35907506942749
    6. 'x' → logprob: -6.98407506942749
    7. ' i' → logprob: -7.98407506942749
    8. '*' → logprob: -9.984074592590332
    9. '*i' → logprob: -10.109074592590332
    10. '_' → logprob: -10.484074592590332

Token 38: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.093024343252182
    2. ']))' → logprob: -3.343024253845215
    3. '+i' → logprob: -3.843024253845215
    4. '+' → logprob: -4.593024253845215
    5. '-' → logprob: -5.218024253845215
    6. ' +' → logprob: -5.468024253845215
    7. ']' → logprob: -5.718024253845215
    8. ' -' → logprob: -6.093024253845215
    9. ' ,' → logprob: -6.093024253845215
    10. ',i' → logprob: -7.343024253845215

Token 39: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11466789990663528
    2. 'a' → logprob: -2.2396678924560547
    3. '3' → logprob: -7.239667892456055
    4. ' ' → logprob: -7.364667892456055
    5. '4' → logprob: -8.614667892456055
    6. ' a' → logprob: -8.739667892456055
    7. '1' → logprob: -9.239667892456055
    8. '5' → logprob: -11.114667892456055
    9. '10' → logprob: -11.864667892456055
    10. '(a' → logprob: -11.864667892456055

Token 40: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04456327110528946
    2. ')' → logprob: -3.1695632934570312
    3. ')))' → logprob: -6.669563293457031
    4. '),' → logprob: -8.544563293457031
    5. ' ))' → logprob: -10.419563293457031
    6. '))
' → logprob: -11.044563293457031
    7. ',' → logprob: -11.419563293457031
    8. ' )' → logprob: -11.794563293457031
    9. ')a' → logprob: -11.919563293457031
    10. 'a' → logprob: -12.294563293457031

Token 41: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001656613196246326
    2. '(' → logprob: -7.501656532287598
    3. '**' → logprob: -8.126656532287598
    4. '+' → logprob: -8.251656532287598
    5. '[' → logprob: -9.001656532287598
    6. '*' → logprob: -9.126656532287598
    7. '<|end|>' → logprob: -9.626656532287598
    8. '```' → logprob: -9.876656532287598
    9. ' ' → logprob: -10.001656532287598
    10. '#' → logprob: -10.501656532287598

Token 42: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16081663966178894
    2. '(b' → logprob: -1.9108166694641113
    3. '()' → logprob: -7.660816669464111
    4. '(a' → logprob: -9.660816192626953
    5. ')' → logprob: -11.535816192626953
    6. '('' → logprob: -11.660816192626953
    7. ' (' → logprob: -11.785816192626953
    8. '(`' → logprob: -12.035816192626953
    9. '(
' → logprob: -12.285816192626953
    10. '((' → logprob: -12.535816192626953

Token 43: '([' (ID: 5194)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.05918234959244728
    2. '(' → logprob: -3.0591824054718018
    3. '(a' → logprob: -4.809182167053223
    4. '([' → logprob: -7.059182167053223
    5. ')' → logprob: -7.309182167053223
    6. '((' → logprob: -8.684182167053223
    7. '()' → logprob: -8.934182167053223
    8. '(range' → logprob: -9.184182167053223
    9. '())' → logprob: -9.434182167053223
    10. '(s' → logprob: -9.559182167053223

Token 44: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08644308894872665
    2. 'a' → logprob: -2.8364431858062744
    3. ' b' → logprob: -4.086442947387695
    4. 'i' → logprob: -5.836442947387695
    5. ' a' → logprob: -6.961442947387695
    6. 'x' → logprob: -7.461442947387695
    7. 'int' → logprob: -7.711442947387695
    8. '   ' → logprob: -7.961442947387695
    9. ' i' → logprob: -8.586442947387695
    10. 'list' → logprob: -8.586442947387695

Token 45: ' for' (ID: 395)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.11277757585048676
    2. ',' → logprob: -2.3627774715423584
    3. '])' → logprob: -5.8627777099609375
    4. ']' → logprob: -6.1127777099609375
    5. '**' → logprob: -6.6127777099609375
    6. ',b' → logprob: -7.1127777099609375
    7. ' ,' → logprob: -7.2377777099609375
    8. '-' → logprob: -7.2377777099609375
    9. '))' → logprob: -7.3627777099609375
    10. ',a' → logprob: -7.3627777099609375

Token 46: ' _' (ID: 1175)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9965356588363647
    2. ' _' → logprob: -1.1215356588363647
    3. ' ' → logprob: -1.2465356588363647
    4. '_' → logprob: -4.871535778045654
    5. ' range' → logprob: -4.871535778045654
    6. ' i' → logprob: -6.871535778045654
    7. '  ' → logprob: -7.496535778045654
    8. ' a' → logprob: -7.996535778045654
    9. 'b' → logprob: -9.621535301208496
    10. '_b' → logprob: -9.996535301208496

Token 47: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015812820056453347
    2. 'range' → logprob: -7.001581192016602
    3. ' ' → logprob: -7.501581192016602
    4. ' in' → logprob: -9.376581192016602
    5. '_' → logprob: -11.626581192016602
    6. '(range' → logprob: -11.876581192016602
    7. ' _' → logprob: -12.251581192016602
    8. ' b' → logprob: -12.626581192016602
    9. ' a' → logprob: -13.001581192016602
    10. '  ' → logprob: -13.376581192016602

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06199311837553978
    2. 'range' → logprob: -2.81199312210083
    3. '[' → logprob: -11.186992645263672
    4. ' ' → logprob: -12.311992645263672
    5. '	range' → logprob: -13.561992645263672
    6. '(range' → logprob: -13.686992645263672
    7. ' ran' → logprob: -13.936992645263672
    8. '  ' → logprob: -14.686992645263672
    9. ' [' → logprob: -15.061992645263672
    10. ' a' → logprob: -15.186992645263672

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020814085379242897
    2. '(a' → logprob: -4.020813941955566
    3. '(b' → logprob: -6.145813941955566
    4. '3' → logprob: -7.770813941955566
    5. ' (' → logprob: -10.520813941955566
    6. '(
' → logprob: -11.520813941955566
    7. '4' → logprob: -11.645813941955566
    8. ' ' → logprob: -11.645813941955566
    9. ' b' → logprob: -11.770813941955566
    10. '10' → logprob: -12.395813941955566

Token 50: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03152017667889595
    2. 'a' → logprob: -4.906520366668701
    3. 'b' → logprob: -5.031520366668701
    4. '2' → logprob: -5.281520366668701
    5. '4' → logprob: -5.406520366668701
    6. '5' → logprob: -6.031520366668701
    7. ' ' → logprob: -6.406520366668701
    8. '10' → logprob: -6.406520366668701
    9. '1' → logprob: -7.031520366668701
    10. '0' → logprob: -8.156519889831543

Token 51: ')]' (ID: 15710)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -1.2923271656036377
    2. ',' → logprob: -1.4173271656036377
    3. ')]' → logprob: -1.5423271656036377
    4. '0' → logprob: -2.0423271656036377
    5. ' )' → logprob: -2.5423271656036377
    6. '3' → logprob: -3.7923271656036377
    7. ' ,' → logprob: -4.542326927185059
    8. ')' → logprob: -4.667326927185059
    9. '2' → logprob: -4.917326927185059
    10. '4' → logprob: -5.792326927185059

Token 52: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0381050631403923
    2. ')' → logprob: -3.288105010986328
    3. ')))' → logprob: -10.038105010986328
    4. '])' → logprob: -11.538105010986328
    5. '))
' → logprob: -12.413105010986328
    6. '),' → logprob: -13.038105010986328
    7. ']))' → logprob: -13.788105010986328
    8. ')
' → logprob: -14.038105010986328
    9. ' ))' → logprob: -14.538105010986328
    10. ')])' → logprob: -15.163105010986328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 50
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 34.00%
Précision adaptée (1ère position): 34.00%
Précision (top 10): 72.00%
================================================================================
