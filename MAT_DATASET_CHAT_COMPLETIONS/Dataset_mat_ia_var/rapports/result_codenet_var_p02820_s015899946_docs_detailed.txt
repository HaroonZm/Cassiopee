================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import math
import sys
import heapq
from collections import Counter
from collections import deque
from fractions import gcd

# Définition d'une très grande valeur pour l'infini
INF = 1 << 60

# Augmentation de la limite de récursion pour éviter les erreurs en cas de récursion profonde
sys.setrecursionlimit(10 ** 6)

def main():
    """
    Fonction principale qui lit les entrées, construit la séquence des coups
    à jouer pour maximiser le score au jeu de pierre-feuille-ciseaux selon
    certaines contraintes, et affiche le score maximal possible.

    Entrées :
    - n : nombre total de rounds
    - k : nombre de rounds consécutifs après lesquels un même coup est interdit
    - r, s, p : points pour vaincre respectivement 'pierre', 'ciseaux', 'feuille'
    - t : séquence des coups de l'adversaire sous forme de chaîne ('r', 's', 'p')

    Sortie :
    - Affiche le score maximal possible
    """
    # Lecture des paramètres n (nombre de coups), k (contrainte d'interdiction d'un même coup)
    n, k = map(int, input().split())
    
    # Lecture des scores associés : r (contre 'pierre'), s (contre 'ciseaux'), p (contre 'feuille')
    r, s, p = map(int, input().split())
    
    # Lecture de la séquence des coups adverses
    t = input()
    
    # Génération de la séquence optimale de coups à jouer contre l'adversaire
    a = create_optimal_moves(t)
    
    # Calcul du score initial sans tenir compte des contraintes
    ans = calculate_initial_score(a, r, s, p)
    
    # Ajustement du score pour respecter la règle d'interdiction (pas deux fois le même 'gagnant' à k d'intervalle)
    ans = adjust_for_constraints(a, n, k, r, s, p, ans)
    
    # Affichage du score final
    print(ans)

def create_optimal_moves(t):
    """
    Génère la séquence des coups optimaux maximisant le score contre la séquence de l'adversaire.
    Pour chaque coup de l'adversaire, on répond par le coup qui gagne contre lui.

    Args:
        t (str): Séquence des coups de l'adversaire ('r', 's', 'p')

    Returns:
        str: Séquence de coups optimaux
    """
    a = ""
    for i in t:
        if i == "r":
            a += "p"  # 'p' bat 'r'
        elif i == "s":
            a += "r"  # 'r' bat 's'
        else:
            a += "s"  # 's' bat 'p'
    return a

def calculate_initial_score(a, r, s, p):
    """
    Calcule le score initial pour la séquence de coups optimaux, sans tenir compte de la contrainte
    sur les coups répétés à intervalles k.

    Args:
        a (str): Séquence des coups joués
        r (int): Score pour 'r'
        s (int): Score pour 's'
        p (int): Score pour 'p'

    Returns:
        int: Score total initial
    """
    ans = 0
    for i in a:
        if i == "r":
            ans += r
        elif i == "s":
            ans += s
        else:
            ans += p
    return ans

def adjust_for_constraints(a, n, k, r, s, p, ans):
    """
    Ajuste le score pour respecter la contrainte qui interdit de jouer deux fois de suite le même
    coup gagnant espacés de k (si c'est le cas, il faut ignorer le deuxième gain).

    Args:
        a (str): Séquence initiale des coups joués
        n (int): Longueur de la séquence
        k (int): Contrainte d'espacement des coups identiques
        r (int): Score pour 'r'
        s (int): Score pour 's'
        p (int): Score pour 'p'
        ans (int): Score initial sans les contraintes

    Returns:
        int: Score ajusté prenant en compte la contrainte
    """
    # Pour pouvoir marquer les coups interdits, il faut un tableau mutable
    a = list(a)
    for i in range(k, n):
        # Si à k intervalles d'écart on retrouve le même coup, on annule le gain du second coup
        if a[i] == a[i - k]:
            if a[i] == "r":
                ans -= r
            elif a[i] == "s":
                ans -= s
            else:
                ans -= p
            # Marque ce coup comme utilisé/annulé en le remplaçant
            a[i] = "a"
    return ans

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00012856863031629473
    2. '```' → logprob: -9.625128746032715
    3. 'import' → logprob: -12.125128746032715
    4. '<|end|>' → logprob: -12.250128746032715
    5. '\' → logprob: -12.375128746032715
    6. ' .' → logprob: -12.375128746032715
    7. '."""' → logprob: -12.375128746032715
    8. '.experimental' → logprob: -12.500128746032715
    9. '.period' → logprob: -12.875128746032715
    10. '\.' → logprob: -12.875128746032715

Token 4: ' math' (ID: 13324)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9696873426437378
    2. ' math' → logprob: -1.3446873426437378
    3. ' collections' → logprob: -1.8446873426437378
    4. ' os' → logprob: -2.0946874618530273
    5. ' functools' → logprob: -2.7196874618530273
    6. ' operator' → logprob: -5.219687461853027
    7. ' ' → logprob: -6.344687461853027
    8. ' numpy' → logprob: -6.719687461853027
    9. 'collections' → logprob: -6.719687461853027
    10. 'os' → logprob: -6.969687461853027

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003669913625344634
    2. '\' → logprob: -6.503669738769531
    3. '\n' → logprob: -7.253669738769531
    4. '```' → logprob: -7.878669738769531
    5. 'import' → logprob: -8.503669738769531
    6. '.

' → logprob: -8.878669738769531
    7. '.
' → logprob: -8.878669738769531
    8. 'def' → logprob: -9.253669738769531
    9. '<|end|>' → logprob: -9.378669738769531
    10. ',' → logprob: -9.503669738769531

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015536853112280369
    2. '.
' → logprob: -6.140536785125732
    3. '```' → logprob: -6.140536785125732
    4. 'import' → logprob: -6.265536785125732
    5. '.

' → logprob: -6.390536785125732
    6. '(' → logprob: -6.390536785125732
    7. '\' → logprob: -6.765536785125732
    8. 'def' → logprob: -6.765536785125732
    9. '
' → logprob: -7.140536785125732
    10. '

' → logprob: -7.390536785125732

Token 7: ' sys' (ID: 12228)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -1.273526906967163
    2. 'random' → logprob: -1.523526906967163
    3. ' os' → logprob: -1.648526906967163
    4. ' statistics' → logprob: -2.523526906967163
    5. ' sys' → logprob: -2.773526906967163
    6. ' numpy' → logprob: -3.023526906967163
    7. 'os' → logprob: -3.148526906967163
    8. ' collections' → logprob: -4.148527145385742
    9. 'statistics' → logprob: -4.273527145385742
    10. 'sys' → logprob: -4.398527145385742

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044338759034872055
    2. '<|end|>' → logprob: -4.669338703155518
    3. '```' → logprob: -4.794338703155518
    4. '
' → logprob: -4.794338703155518
    5. '\n' → logprob: -5.044338703155518
    6. '\' → logprob: -5.794338703155518
    7. '

' → logprob: -6.169338703155518
    8. '<|end|>' → logprob: -6.669338703155518
    9. 'import' → logprob: -6.794338703155518
    10. ',' → logprob: -7.294338703155518

Token 9: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7333562970161438
    2. '.' → logprob: -1.608356237411499
    3. '```' → logprob: -2.108356237411499
    4. '\' → logprob: -2.483356237411499
    5. '
' → logprob: -2.858356237411499
    6. 'def' → logprob: -4.233356475830078
    7. 'import' → logprob: -4.358356475830078
    8. '

' → logprob: -5.233356475830078
    9. '<|end|>' → logprob: -5.483356475830078
    10. '#' → logprob: -5.483356475830078

Token 10: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.12105528265237808
    2. 'os' → logprob: -2.6210553646087646
    3. ' collections' → logprob: -3.3710553646087646
    4. 'collections' → logprob: -5.7460551261901855
    5. ' random' → logprob: -6.8710551261901855
    6. ' functools' → logprob: -7.3710551261901855
    7. ' operator' → logprob: -7.7460551261901855
    8. ' threading' → logprob: -7.9960551261901855
    9. ' time' → logprob: -8.121055603027344
    10. 'random' → logprob: -8.121055603027344

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007705556345172226
    2. 't' → logprob: -7.625770568847656
    3. 'p' → logprob: -9.125770568847656
    4. 'queue' → logprob: -9.625770568847656
    5. '_' → logprob: -10.000770568847656
    6. '_queue' → logprob: -11.000770568847656
    7. '.' → logprob: -11.625770568847656
    8. '#' → logprob: -12.000770568847656
    9. '<|end|>' → logprob: -12.250770568847656
    10. 's' → logprob: -12.500770568847656

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.146174669265747
    2. '\n' → logprob: -1.146174669265747
    3. '

' → logprob: -1.771174669265747
    4. '.' → logprob: -2.396174669265747
    5. '\' → logprob: -2.896174669265747
    6. 'def' → logprob: -4.271174430847168
    7. '#' → logprob: -4.896174430847168
    8. 'import' → logprob: -5.271174430847168
    9. '```' → logprob: -5.396174430847168
    10. '' → logprob: -5.396174430847168

Token 13: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.35938724875450134
    2. '
' → logprob: -1.8593872785568237
    3. '\n' → logprob: -2.734387159347534
    4. 'import' → logprob: -3.859387159347534
    5. '\' → logprob: -4.484387397766113
    6. '.' → logprob: -4.484387397766113
    7. '```' → logprob: -4.609387397766113
    8. 'def' → logprob: -4.734387397766113
    9. '
' → logprob: -5.734387397766113
    10. 'from' → logprob: -5.984387397766113

Token 14: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.03005095385015011
    2. 'collections' → logprob: -3.5300509929656982
    3. ' functools' → logprob: -9.655051231384277
    4. '_' → logprob: -9.655051231384277
    5. ' operator' → logprob: -9.905051231384277
    6. ' queue' → logprob: -9.905051231384277
    7. ' itertools' → logprob: -10.405051231384277
    8. ' ' → logprob: -11.280051231384277
    9. ' typing' → logprob: -11.530051231384277
    10. ' math' → logprob: -12.030051231384277

Token 15: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5278627872467041
    2. ' import' → logprob: -0.9028627872467041
    3. '.' → logprob: -5.402862548828125
    4. ' ' → logprob: -9.652862548828125
    5. '.Counter' → logprob: -9.902862548828125
    6. '	import' → logprob: -10.152862548828125
    7. '<|end|>' → logprob: -10.652862548828125
    8. '.import' → logprob: -11.027862548828125
    9. '```' → logprob: -11.652862548828125
    10. ' defaultdict' → logprob: -12.402862548828125

Token 16: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.6274958848953247
    2. ' deque' → logprob: -0.8774958848953247
    3. 'deque' → logprob: -3.127495765686035
    4. ' abc' → logprob: -5.127495765686035
    5. ' named' → logprob: -8.627495765686035
    6. 'abc' → logprob: -9.127495765686035
    7. ' Counter' → logprob: -9.252495765686035
    8. 'default' → logprob: -10.127495765686035
    9. 'named' → logprob: -11.127495765686035
    10. ' itertools' → logprob: -11.377495765686035

Token 17: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.37784987688064575
    2. '
' → logprob: -1.252849817276001
    3. 'def' → logprob: -4.87785005569458
    4. '\n' → logprob: -4.87785005569458
    5. 'import' → logprob: -5.37785005569458
    6. ' 

' → logprob: -6.25285005569458
    7. '\' → logprob: -7.00285005569458
    8. '```' → logprob: -7.12785005569458
    9. '<|end|>' → logprob: -7.25285005569458
    10. '' → logprob: -7.25285005569458

Token 18: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.43882352113723755
    2. '
' → logprob: -1.4388234615325928
    3. 'def' → logprob: -2.6888234615325928
    4. 'import' → logprob: -4.063823699951172
    5. '\n' → logprob: -4.563823699951172
    6. '```' → logprob: -5.438823699951172
    7. '\' → logprob: -5.938823699951172
    8. '#' → logprob: -6.188823699951172
    9. 'class' → logprob: -6.313823699951172
    10. '' → logprob: -6.438823699951172

Token 19: ' collections' (ID: 22690)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -1.0271093845367432
    2. 'typing' → logprob: -1.0271093845367432
    3. 'collections' → logprob: -1.7771093845367432
    4. ' itertools' → logprob: -2.902109384536743
    5. 'operator' → logprob: -3.652109384536743
    6. ' functools' → logprob: -4.402109146118164
    7. ' collections' → logprob: -4.902109146118164
    8. ' operator' → logprob: -5.777109146118164
    9. 'io' → logprob: -5.902109146118164
    10. 'math' → logprob: -6.152109146118164

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.9471498727798462
    2. '.' → logprob: -1.0721498727798462
    3. 'import' → logprob: -1.3221498727798462
    4. '.import' → logprob: -6.322149753570557
    5. ' .' → logprob: -7.322149753570557
    6. ' ' → logprob: -7.697149753570557
    7. 'abc' → logprob: -9.572150230407715
    8. '```' → logprob: -9.822150230407715
    9. '_import' → logprob: -9.947150230407715
    10. '	import' → logprob: -10.447150230407715

Token 21: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.41043907403945923
    2. ' deque' → logprob: -1.4104390144348145
    3. 'deque' → logprob: -2.4104390144348145
    4. 'default' → logprob: -6.0354390144348145
    5. ' abc' → logprob: -8.410439491271973
    6. ' named' → logprob: -9.410439491271973
    7. 'abc' → logprob: -9.660439491271973
    8. 'named' → logprob: -10.285439491271973
    9. 'de' → logprob: -11.285439491271973
    10. ' default' → logprob: -11.660439491271973

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39465346932411194
    2. '

' → logprob: -1.3946534395217896
    3. '\n' → logprob: -3.894653558731079
    4. 'import' → logprob: -3.894653558731079
    5. '<|end|>' → logprob: -4.2696533203125
    6. '#' → logprob: -5.0196533203125
    7. '' → logprob: -5.1446533203125
    8. '```' → logprob: -5.6446533203125
    9. '\' → logprob: -6.3946533203125
    10. ' 

' → logprob: -7.0196533203125

Token 23: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5728670954704285
    2. '

' → logprob: -1.5728671550750732
    3. '#' → logprob: -2.8228671550750732
    4. '' → logprob: -2.8228671550750732
    5. '\n' → logprob: -3.4478671550750732
    6. '\' → logprob: -3.6978671550750732
    7. 'import' → logprob: -3.6978671550750732
    8. 'def' → logprob: -5.322866916656494
    9. '```' → logprob: -5.447866916656494
    10. 'd' → logprob: -5.697866916656494

Token 24: ' fractions' (ID: 110523)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.42471057176589966
    2. ' queue' → logprob: -2.424710512161255
    3. ' functools' → logprob: -2.549710512161255
    4. ' itertools' → logprob: -2.674710512161255
    5. ' operator' → logprob: -3.549710512161255
    6. ' collections' → logprob: -4.049710750579834
    7. ' threading' → logprob: -4.174710750579834
    8. 'typing' → logprob: -4.424710750579834
    9. ' math' → logprob: -4.924710750579834
    10. ' ' → logprob: -5.549710750579834

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014974257908761501
    2. 'import' → logprob: -4.764974117279053
    3. '<|end|>' → logprob: -5.639974117279053
    4. ' ' → logprob: -6.389974117279053
    5. '.' → logprob: -6.889974117279053
    6. '<|end|>' → logprob: -10.514974594116211
    7. '	import' → logprob: -11.139974594116211
    8. ' ```' → logprob: -11.889974594116211
    9. ' .' → logprob: -12.139974594116211
    10. '_import' → logprob: -12.639974594116211

Token 26: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.011124570854008198
    2. 'Fraction' → logprob: -4.511124610900879
    3. ' gcd' → logprob: -9.636124610900879
    4. ' fractions' → logprob: -13.011124610900879
    5. '```' → logprob: -13.261124610900879
    6. ' ' → logprob: -13.511124610900879
    7. ' F' → logprob: -13.511124610900879
    8. ' Fra' → logprob: -13.636124610900879
    9. ' ' → logprob: -13.761124610900879
    10. ' Rational' → logprob: -14.386124610900879

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5004441738128662
    2. '<|end|>' → logprob: -1.6254441738128662
    3. '_' → logprob: -2.000444173812866
    4. 's' → logprob: -2.125444173812866
    5. '

' → logprob: -2.375444173812866
    6. ')' → logprob: -2.625444173812866
    7. '#' → logprob: -3.625444173812866
    8. ',' → logprob: -3.750444173812866
    9. '(' → logprob: -3.875444173812866
    10. '(
' → logprob: -4.375444412231445

Token 28: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6620813608169556
    2. 's' → logprob: -1.6620813608169556
    3. ')' → logprob: -2.287081241607666
    4. '(' → logprob: -2.287081241607666
    5. '_' → logprob: -2.912081241607666
    6. ',' → logprob: -2.912081241607666
    7. '
' → logprob: -2.912081241607666
    8. '<|end|>' → logprob: -2.912081241607666
    9. '#' → logprob: -3.287081241607666
    10. '

' → logprob: -3.662081241607666

Token 29: ' Dé' (ID: 27247)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2758702337741852
    2. 'def' → logprob: -1.9008702039718628
    3. ' def' → logprob: -3.9008703231811523
    4. '#' → logprob: -3.9008703231811523
    5. 'import' → logprob: -4.650870323181152
    6. ' The' → logprob: -4.775870323181152
    7. 'from' → logprob: -5.650870323181152
    8. ' Define' → logprob: -6.150870323181152
    9. 'define' → logprob: -6.275870323181152
    10. '_' → logprob: -6.275870323181152

Token 30: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007507956121116877
    2. 'fin' → logprob: -5.257507801055908
    3. 'fi' → logprob: -6.257507801055908
    4. 'fl' → logprob: -9.507508277893066
    5. 'fen' → logprob: -9.882508277893066
    6. 'fic' → logprob: -10.007508277893066
    7. 'fa' → logprob: -10.632508277893066
    8. 'fec' → logprob: -10.632508277893066
    9. 'r' → logprob: -11.007508277893066
    10. 'fib' → logprob: -11.382508277893066

Token 31: 'ition' (ID: 868)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.031140778213739395
    2. 'ition' → logprob: -3.7811408042907715
    3. 'ir' → logprob: -5.1561408042907715
    4. 'issant' → logprob: -7.7811408042907715
    5. 'e' → logprob: -8.406140327453613
    6. 'inition' → logprob: -8.406140327453613
    7. 'import' → logprob: -8.656140327453613
    8. 'ti' → logprob: -8.781140327453613
    9. 'it' → logprob: -9.031140327453613
    10. 'is' → logprob: -9.281140327453613

Token 32: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00262321624904871
    2. '_' → logprob: -6.502623081207275
    3. 's' → logprob: -7.377623081207275
    4. ' de' → logprob: -8.377623558044434
    5. '<|end|>' → logprob: -9.502623558044434
    6. ' d' → logprob: -10.627623558044434
    7. '  ' → logprob: -10.752623558044434
    8. ' of' → logprob: -10.877623558044434
    9. 'def' → logprob: -11.002623558044434
    10. ' (' → logprob: -11.252623558044434

Token 33: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09054584056138992
    2. ''' → logprob: -2.715545892715454
    3. 'u' → logprob: -4.090545654296875
    4. ''un' → logprob: -6.590545654296875
    5. ''une' → logprob: -6.715545654296875
    6. ' e' → logprob: -8.215545654296875
    7. 'a' → logprob: -8.590545654296875
    8. ''u' → logprob: -8.840545654296875
    9. ' ' → logprob: -9.215545654296875
    10. 'es' → logprob: -9.340545654296875

Token 34: ' très' (ID: 9412)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.9446127414703369
    2. ' fonction' → logprob: -1.194612741470337
    3. ' class' → logprob: -2.069612741470337
    4. ' classe' → logprob: -2.319612741470337
    5. 'fonction' → logprob: -3.694612741470337
    6. 'classe' → logprob: -4.069612503051758
    7. 'class' → logprob: -4.694612503051758
    8. ' ' → logprob: -4.694612503051758
    9. ' ' → logprob: -5.319612503051758
    10. ' f' → logprob: -5.569612503051758

Token 35: ' grande' (ID: 10094)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0986572876572609
    2. ' bonne' → logprob: -3.3486573696136475
    3. ' longue' → logprob: -4.348657131195068
    4. ' grande' → logprob: -4.848657131195068
    5. 'b' → logprob: -5.223657131195068
    6. ' long' → logprob: -5.473657131195068
    7. 'bonne' → logprob: -5.473657131195068
    8. 'c' → logprob: -5.723657131195068
    9. ' ' → logprob: -6.098657131195068
    10. 'long' → logprob: -6.348657131195068

Token 36: ' valeur' (ID: 41664)
  Prédit: ' constante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constante' → logprob: -1.1249812841415405
    2. ' ' → logprob: -1.4999812841415405
    3. ' valeur' → logprob: -1.8749812841415405
    4. 'nombre' → logprob: -3.24998140335083
    5. 'number' → logprob: -3.37498140335083
    6. 'space' → logprob: -3.74998140335083
    7. 'int' → logprob: -3.74998140335083
    8. ' variable' → logprob: -4.12498140335083
    9. ' quantité' → logprob: -4.12498140335083
    10. ' number' → logprob: -4.24998140335083

Token 37: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08059217780828476
    2. '_MAX' → logprob: -3.705592155456543
    3. 'INF' → logprob: -4.080592155456543
    4. '_INF' → logprob: -4.330592155456543
    5. ' ' → logprob: -4.830592155456543
    6. 'MAX' → logprob: -5.455592155456543
    7. '_INFINITY' → logprob: -6.080592155456543
    8. '_V' → logprob: -6.330592155456543
    9. ':' → logprob: -6.955592155456543
    10. ' _' → logprob: -6.955592155456543

Token 38: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4854673147201538
    2. '_' → logprob: -1.6104673147201538
    3. ' l' → logprob: -1.7354673147201538
    4. 'l' → logprob: -5.610467433929443
    5. '  ' → logprob: -6.610467433929443
    6. '```' → logprob: -7.110467433929443
    7. ' _' → logprob: -7.485467433929443
    8. '_l' → logprob: -7.735467433929443
    9. ' la' → logprob: -8.235466957092285
    10. ' ' → logprob: -8.485466957092285

Token 39: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4655148983001709
    2. ''' → logprob: -1.215514898300171
    3. 'e' → logprob: -3.590514898300171
    4. '_' → logprob: -3.965514898300171
    5. ''in' → logprob: -4.34051513671875
    6. ''a' → logprob: -4.46551513671875
    7. '_inf' → logprob: -7.09051513671875
    8. ''_' → logprob: -7.09051513671875
    9. ''ent' → logprob: -7.34051513671875
    10. 'inf' → logprob: -8.09051513671875

Token 40: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0008860878297127783
    2. 't' → logprob: -7.875885963439941
    3. 'finite' → logprob: -8.500885963439941
    4. 'finity' → logprob: -8.875885963439941
    5. 'fty' → logprob: -9.875885963439941
    6. 'fin' → logprob: -10.125885963439941
    7. 'fi' → logprob: -10.875885963439941
    8. 'float' → logprob: -11.250885963439941
    9. '```' → logprob: -12.625885963439941
    10. 'fine' → logprob: -12.875885963439941

Token 41: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.011220536194741726
    2. 'inie' → logprob: -5.386220455169678
    3. 'i' → logprob: -5.761220455169678
    4. 'init' → logprob: -6.636220455169678
    5. 'inity' → logprob: -7.386220455169678
    6. 'inite' → logprob: -7.511220455169678
    7. '```' → logprob: -8.011220932006836
    8. 'in' → logprob: -8.511220932006836
    9. '#' → logprob: -9.511220932006836
    10. '∞' → logprob: -9.886220932006836

Token 42: '
' (ID: 198)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.1916278749704361
    2. '_INF' → logprob: -2.0666279792785645
    3. '_inf' → logprob: -3.9416279792785645
    4. '_' → logprob: -4.4416279792785645
    5. 'IN' → logprob: -5.3166279792785645
    6. '_INFINITY' → logprob: -5.4416279792785645
    7. 'inf' → logprob: -5.4416279792785645
    8. ' INF' → logprob: -6.9416279792785645
    9. ' =' → logprob: -7.5666279792785645
    10. 'I' → logprob: -8.066627502441406

Token 43: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.14839550852775574
    2. ' INF' → logprob: -2.398395538330078
    3. 'inf' → logprob: -3.773395538330078
    4. 'IN' → logprob: -4.648395538330078
    5. '_inf' → logprob: -5.273395538330078
    6. '_INF' → logprob: -5.648395538330078
    7. '_' → logprob: -6.398395538330078
    8. 'I' → logprob: -6.773395538330078
    9. ' IN' → logprob: -6.898395538330078
    10. ' inf' → logprob: -7.273395538330078

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008218208327889442
    2. '=' → logprob: -4.883218288421631
    3. ' ' → logprob: -7.883218288421631
    4. '_' → logprob: -9.133217811584473
    5. '  ' → logprob: -9.508217811584473
    6. ' =
' → logprob: -10.758217811584473
    7. ' _' → logprob: -11.258217811584473
    8. '   ' → logprob: -12.883217811584473
    9. ' ' → logprob: -13.133217811584473
    10. ' =)' → logprob: -13.508217811584473

Token 45: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.26350945234298706
    2. ' ' → logprob: -1.8885095119476318
    3. 'float' → logprob: -2.888509511947632
    4. '10' → logprob: -4.263509273529053
    5. ' math' → logprob: -4.638509273529053
    6. 'math' → logprob: -7.138509273529053
    7. ' int' → logprob: -9.763509750366211
    8. '1' → logprob: -10.013509750366211
    9. 'int' → logprob: -11.138509750366211
    10. ' ' → logprob: -11.388509750366211

Token 46: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.39064738154411316
    2. '10' → logprob: -1.1406474113464355
    3. 'math' → logprob: -5.6406474113464355
    4. 'int' → logprob: -9.265646934509277
    5. ' float' → logprob: -9.765646934509277
    6. '1' → logprob: -9.765646934509277
    7. 'sys' → logprob: -12.515646934509277
    8. ' ' → logprob: -12.640646934509277
    9. '100' → logprob: -13.765646934509277
    10. '999' → logprob: -14.640646934509277

Token 47: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2910614609718323
    2. '000' → logprob: -1.4160614013671875
    3. '8' → logprob: -4.9160614013671875
    4. '00' → logprob: -6.7910614013671875
    5. '08' → logprob: -8.166061401367188
    6. '012' → logprob: -8.416061401367188
    7. '06' → logprob: -8.416061401367188
    8. 'e' → logprob: -8.916061401367188
    9. '09' → logprob: -9.166061401367188
    10. '018' → logprob: -9.541061401367188

Token 48: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0008678716840222478
    2. '62' → logprob: -7.87586784362793
    3. '63' → logprob: -8.12586784362793
    4. '30' → logprob: -8.87586784362793
    5. '61' → logprob: -10.37586784362793
    6. '50' → logprob: -11.25086784362793
    7. '31' → logprob: -12.25086784362793
    8. '64' → logprob: -14.12586784362793
    9. '59' → logprob: -14.37586784362793
    10. ' ' → logprob: -14.50086784362793

Token 49: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0007723436574451625
    2. '30' → logprob: -8.000772476196289
    3. '63' → logprob: -8.375772476196289
    4. '62' → logprob: -8.875772476196289
    5. '61' → logprob: -10.500772476196289
    6. '50' → logprob: -10.875772476196289
    7. '31' → logprob: -11.125772476196289
    8. '32' → logprob: -13.375772476196289
    9. '64' → logprob: -13.625772476196289
    10. '29' → logprob: -13.625772476196289

Token 50: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1468295454978943
    2. '
' → logprob: -2.021829605102539
    3. '' → logprob: -6.771829605102539
    4. ' 

' → logprob: -7.146829605102539
    5. '


' → logprob: -7.146829605102539
    6. '#' → logprob: -7.396829605102539
    7. '
' → logprob: -7.896829605102539
    8. '

' → logprob: -9.896829605102539
    9. 'def' → logprob: -10.021829605102539
    10. '```' → logprob: -10.146829605102539

Token 51: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054023511707782745
    2. '

' → logprob: -3.179023504257202
    3. '#' → logprob: -5.179023742675781
    4. '
' → logprob: -6.304023742675781
    5. 'def' → logprob: -6.429023742675781
    6. '' → logprob: -7.054023742675781
    7. 'd' → logprob: -7.429023742675781
    8. ' 
' → logprob: -9.679023742675781
    9. '


' → logprob: -10.054023742675781
    10. 'n' → logprob: -10.304023742675781

Token 52: ' Aug' (ID: 6025)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01534246001392603
    2. 'class' → logprob: -4.7653422355651855
    3. '#' → logprob: -5.1403422355651855
    4. ' def' → logprob: -7.8903422355651855
    5. 'd' → logprob: -9.015342712402344
    6. 'de' → logprob: -9.390342712402344
    7. ' class' → logprob: -9.390342712402344
    8. 'import' → logprob: -10.390342712402344
    9. 'from' → logprob: -10.390342712402344
    10. ' ' → logprob: -11.265342712402344

Token 53: 'mentation' (ID: 20004)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.1945948302745819
    2. 'mentation' → logprob: -1.8195948600769043
    3. 'mented' → logprob: -4.319594860076904
    4. 'm' → logprob: -7.069594860076904
    5. 'mentor' → logprob: -8.444594383239746
    6. 'mentar' → logprob: -8.694594383239746
    7. 'mente' → logprob: -9.069594383239746
    8. 'men' → logprob: -9.944594383239746
    9. 'ments' → logprob: -11.569594383239746
    10. '#' → logprob: -11.944594383239746

Token 54: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3387768268585205
    2. ' ' → logprob: -1.3387768268585205
    3. 's' → logprob: -4.463776588439941
    4. '(' → logprob: -5.463776588439941
    5. ' de' → logprob: -5.713776588439941
    6. 'def' → logprob: -6.338776588439941
    7. 'e' → logprob: -7.713776588439941
    8. ' (' → logprob: -7.713776588439941
    9. ')' → logprob: -8.088776588439941
    10. 'd' → logprob: -8.088776588439941

Token 55: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2414330691099167
    2. ' sys' → logprob: -1.991433024406433
    3. ' l' → logprob: -3.3664331436157227
    4. 'l' → logprob: -3.9914331436157227
    5. ' ' → logprob: -4.116433143615723
    6. 'la' → logprob: -5.866433143615723
    7. 'sys' → logprob: -6.366433143615723
    8. 's' → logprob: -6.991433143615723
    9. '_' → logprob: -7.491433143615723
    10. ' the' → logprob: -7.741433143615723

Token 56: ' limite' (ID: 48939)
  Prédit: ' taille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.8759154677391052
    2. ' valeur' → logprob: -2.50091552734375
    3. 'tail' → logprob: -2.62591552734375
    4. ' vitesse' → logprob: -2.75091552734375
    5. ' capacité' → logprob: -2.87591552734375
    6. ' distance' → logprob: -3.00091552734375
    7. ' profondeur' → logprob: -3.00091552734375
    8. ' ' → logprob: -3.62591552734375
    9. ' limite' → logprob: -3.87591552734375
    10. ' fréquence' → logprob: -4.25091552734375

Token 57: ' de' (ID: 334)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8960676789283752
    2. ' de' → logprob: -1.5210676193237305
    3. '_' → logprob: -1.8960676193237305
    4. 'sys' → logprob: -2.2710676193237305
    5. ' ' → logprob: -2.8960676193237305
    6. ' d' → logprob: -4.2710676193237305
    7. 'import' → logprob: -4.6460676193237305
    8. 's' → logprob: -4.7710676193237305
    9. ' _' → logprob: -4.7710676193237305
    10. '  ' → logprob: -5.3960676193237305

Token 58: ' réc' (ID: 36254)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.3735155761241913
    2. 'rec' → logprob: -1.3735156059265137
    3. ' réc' → logprob: -3.3735156059265137
    4. 'r' → logprob: -4.123515605926514
    5. ' la' → logprob: -6.373515605926514
    6. '_rec' → logprob: -6.373515605926514
    7. ' ' → logprob: -7.123515605926514
    8. ' r' → logprob: -7.248515605926514
    9. ' ' → logprob: -7.248515605926514
    10. 're' → logprob: -7.748515605926514

Token 59: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001748246024362743
    2. 'urs' → logprob: -6.751748085021973
    3. 'ur' → logprob: -7.751748085021973
    4. 'ursive' → logprob: -9.751748085021973
    5. 'usion' → logprob: -10.251748085021973
    6. 'u' → logprob: -10.876748085021973
    7. 'urrence' → logprob: -11.626748085021973
    8. 'usr' → logprob: -12.126748085021973
    9. '```' → logprob: -12.501748085021973
    10. '##' → logprob: -12.876748085021973

Token 60: ' pour' (ID: 1930)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.3808213472366333
    2. 'sys' → logprob: -1.3808213472366333
    3. '_' → logprob: -1.6308213472366333
    4. ' ' → logprob: -1.6308213472366333
    5. 's' → logprob: -3.7558212280273438
    6. 'import' → logprob: -4.380821228027344
    7. '\' → logprob: -4.630821228027344
    8. '(sys' → logprob: -5.255821228027344
    9. ' =' → logprob: -5.505821228027344
    10. ' _' → logprob: -5.630821228027344

Token 61: ' éviter' (ID: 64013)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12769441306591034
    2. ' ' → logprob: -2.1276943683624268
    3. ' l' → logprob: -8.752694129943848
    4. 'sys' → logprob: -9.002694129943848
    5. ' la' → logprob: -9.252694129943848
    6. ' ' → logprob: -9.627694129943848
    7. ' recursion' → logprob: -10.002694129943848
    8. ' les' → logprob: -10.127694129943848
    9. ' Python' → logprob: -10.252694129943848
    10. ' le' → logprob: -10.752694129943848

Token 62: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10316217690706253
    2. ' l' → logprob: -3.6031622886657715
    3. ' Rec' → logprob: -4.1031622886657715
    4. ' recursion' → logprob: -4.1031622886657715
    5. ' la' → logprob: -4.3531622886657715
    6. ' sys' → logprob: -5.1031622886657715
    7. 'Rec' → logprob: -5.3531622886657715
    8. ' ' → logprob: -6.1031622886657715
    9. ' the' → logprob: -6.3531622886657715
    10. ' Runtime' → logprob: -6.4781622886657715

Token 63: ' erreurs' (ID: 139891)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.007424649782478809
    2. 'Rec' → logprob: -5.007424831390381
    3. ' Runtime' → logprob: -7.507424831390381
    4. ' recursion' → logprob: -9.507424354553223
    5. ' réc' → logprob: -10.382424354553223
    6. ' erreurs' → logprob: -11.507424354553223
    7. 'Runtime' → logprob: -11.632424354553223
    8. ' ' → logprob: -11.882424354553223
    9. ' dépasse' → logprob: -12.007424354553223
    10. ' maximum' → logprob: -12.382424354553223

Token 64: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0053377151489258
    2. ' sys' → logprob: -1.7553377151489258
    3. '_' → logprob: -2.255337715148926
    4. '\' → logprob: -2.755337715148926
    5. ' _' → logprob: -2.755337715148926
    6. 'sys' → logprob: -2.880337715148926
    7. '  ' → logprob: -3.380337715148926
    8. '```' → logprob: -3.505337715148926
    9. 'import' → logprob: -4.005337715148926
    10. ' \' → logprob: -4.255337715148926

Token 65: ' cas' (ID: 2108)
  Prédit: ' Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -1.617571234703064
    2. ' sys' → logprob: -1.742571234703064
    3. ' recursion' → logprob: -1.742571234703064
    4. ' profondeur' → logprob: -1.992571234703064
    5. ' ' → logprob: -2.1175713539123535
    6. ' cas' → logprob: -3.2425713539123535
    7. ' python' → logprob: -3.2425713539123535
    8. '  ' → logprob: -4.6175713539123535
    9. '   ' → logprob: -4.6175713539123535
    10. 'python' → logprob: -4.6175713539123535

Token 66: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2866877615451813
    2. ' de' → logprob: -1.5366877317428589
    3. ' ' → logprob: -3.6616878509521484
    4. 'd' → logprob: -5.036687850952148
    5. '  ' → logprob: -7.536687850952148
    6. 'de' → logprob: -7.911687850952148
    7. ' of' → logprob: -8.286687850952148
    8. '_' → logprob: -8.411687850952148
    9. ' ' → logprob: -8.786687850952148
    10. '<|end|>' → logprob: -9.161687850952148

Token 67: ' réc' (ID: 36254)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024993248283863068
    2. ' r' → logprob: -4.524993419647217
    3. ' recursion' → logprob: -5.649993419647217
    4. 'r' → logprob: -6.024993419647217
    5. ' réc' → logprob: -6.274993419647217
    6. ' profondeur' → logprob: -6.524993419647217
    7. ' cas' → logprob: -7.149993419647217
    8. '  ' → logprob: -7.399993419647217
    9. ' recursive' → logprob: -7.774993419647217
    10. ' profond' → logprob: -7.899993419647217

Token 68: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.01055110152810812
    2. 'urs' → logprob: -5.1355509757995605
    3. 'ur' → logprob: -5.5105509757995605
    4. 'u' → logprob: -8.385551452636719
    5. '   ' → logprob: -9.510551452636719
    6. 'ursive' → logprob: -9.635551452636719
    7. 'urse' → logprob: -10.260551452636719
    8. ' ' → logprob: -10.510551452636719
    9. 'usion' → logprob: -10.635551452636719
    10. '```' → logprob: -10.885551452636719

Token 69: ' profonde' (ID: 82498)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5817446708679199
    2. '_stack' → logprob: -1.83174467086792
    3. '_depth' → logprob: -2.33174467086792
    4. 'sys' → logprob: -2.58174467086792
    5. '_rec' → logprob: -3.58174467086792
    6. '_sys' → logprob: -4.45674467086792
    7. 'import' → logprob: -4.58174467086792
    8. ' sys' → logprob: -4.58174467086792
    9. 'depth' → logprob: -4.83174467086792
    10. '_s' → logprob: -5.08174467086792

Token 70: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04498479142785072
    2. '
' → logprob: -3.544984817504883
    3. '(sys' → logprob: -4.919984817504883
    4. ' sys' → logprob: -5.669984817504883
    5. '\' → logprob: -6.169984817504883
    6. '\n' → logprob: -7.294984817504883
    7. 'import' → logprob: -7.794984817504883
    8. '
' → logprob: -8.294984817504883
    9. '_sys' → logprob: -8.544984817504883
    10. '' → logprob: -8.794984817504883

Token 71: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.001965270144864917
    2. ' sys' → logprob: -6.251965045928955
    3. 'import' → logprob: -10.501965522766113
    4. '(sys' → logprob: -12.251965522766113
    5. '
' → logprob: -13.251965522766113
    6. '```' → logprob: -13.876965522766113
    7. '=sys' → logprob: -14.126965522766113
    8. '	sys' → logprob: -14.751965522766113
    9. '_sys' → logprob: -15.626965522766113
    10. 'python' → logprob: -15.876965522766113

Token 72: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.09804251790046692
    2. '.' → logprob: -2.9730424880981445
    3. '.setdefault' → logprob: -3.2230424880981445
    4. ' .' → logprob: -7.0980424880981445
    5. '.stdout' → logprob: -7.4730424880981445
    6. '.stdin' → logprob: -7.8480424880981445
    7. '.argv' → logprob: -8.473042488098145
    8. '.exit' → logprob: -8.723042488098145
    9. '.stderr' → logprob: -9.223042488098145
    10. '.rec' → logprob: -11.098042488098145

Token 73: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.006673101335763931
    2. '_rec' → logprob: -5.131673336029053
    3. 'limit' → logprob: -7.881673336029053
    4. '_' → logprob: -9.256672859191895
    5. '_limit' → logprob: -9.506672859191895
    6. ' recursion' → logprob: -10.006672859191895
    7. 'ursion' → logprob: -10.131672859191895
    8. 'set' → logprob: -10.756672859191895
    9. 'ault' → logprob: -11.381672859191895
    10. 's' → logprob: -12.006672859191895

Token 74: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.8444881536415778e-05
    2. 'urs' → logprob: -11.250028610229492
    3. 'ursive' → logprob: -11.750028610229492
    4. 'ur' → logprob: -13.000028610229492
    5. 'usion' → logprob: -13.125028610229492
    6. '_' → logprob: -13.125028610229492
    7. 'ursor' → logprob: -14.750028610229492
    8. '-' → logprob: -15.375028610229492
    9. 'urse' → logprob: -15.625028610229492
    10. '_limit' → logprob: -16.125028610229492

Token 75: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.8087270038668066e-05
    2. '_limit' → logprob: -10.625027656555176
    3. 'lim' → logprob: -13.250027656555176
    4. 'depth' → logprob: -13.250027656555176
    5. ' limit' → logprob: -16.125028610229492
    6. '_' → logprob: -17.500028610229492
    7. '_depth' → logprob: -18.875028610229492
    8. '(limit' → logprob: -19.125028610229492
    9. '-' → logprob: -19.375028610229492
    10. '_LIMIT' → logprob: -19.625028610229492

Token 76: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.3458322731312364e-06
    2. ' (' → logprob: -12.500007629394531
    3. '((' → logprob: -13.250007629394531
    4. '(
' → logprob: -14.000007629394531
    5. '(

' → logprob: -15.250007629394531
    6. '()' → logprob: -15.625007629394531
    7. ')' → logprob: -15.625007629394531
    8. ')(' → logprob: -16.25000762939453
    9. '('' → logprob: -16.50000762939453
    10. ' ' → logprob: -16.62500762939453

Token 77: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001506409258581698
    2. '100' → logprob: -6.501506328582764
    3. ' ' → logprob: -12.501506805419922
    4. '1' → logprob: -15.751506805419922
    5. '300' → logprob: -16.626506805419922
    6. 'int' → logprob: -16.876506805419922
    7. '200' → logprob: -17.001506805419922
    8. '500' → logprob: -17.001506805419922
    9. '400' → logprob: -17.751506805419922
    10. '  ' → logprob: -18.751506805419922

Token 78: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.09134062379598618
    2. '7' → logprob: -3.3413405418395996
    3. '5' → logprob: -3.3413405418395996
    4. '000' → logprob: -4.3413405418396
    5. '00' → logprob: -6.5913405418396
    6. '8' → logprob: -6.7163405418396
    7. '4' → logprob: -7.3413405418396
    8. '**' → logprob: -8.841341018676758
    9. '0' → logprob: -9.841341018676758
    10. '06' → logprob: -10.091341018676758

Token 79: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00883579347282648
    2. '9' → logprob: -4.758835792541504
    3. '8' → logprob: -8.508835792541504
    4. '6' → logprob: -10.883835792541504
    5. '**' → logprob: -14.258835792541504
    6. ' ' → logprob: -16.63383674621582
    7. '```' → logprob: -17.25883674621582
    8. '  ' → logprob: -17.50883674621582
    9. '   ' → logprob: -18.00883674621582
    10. '

' → logprob: -18.13383674621582

Token 80: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.016285846009850502
    2. '9' → logprob: -4.1412858963012695
    3. '8' → logprob: -8.51628589630127
    4. '6' → logprob: -9.89128589630127
    5. '**' → logprob: -14.76628589630127
    6. '

' → logprob: -16.016284942626953
    7. '```' → logprob: -16.641284942626953
    8. ' ' → logprob: -16.891284942626953
    9. '  ' → logprob: -17.141284942626953
    10. '   ' → logprob: -17.828784942626953

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.875003814697266
    3. '))' → logprob: -14.125003814697266
    4. ')
' → logprob: -14.500003814697266
    5. '),' → logprob: -18.125003814697266
    6. ')
' → logprob: -18.625003814697266
    7. ')

' → logprob: -18.875003814697266
    8. '）' → logprob: -19.125003814697266
    9. ')`' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 82: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3290356993675232
    2. 'def' → logprob: -1.829035758972168
    3. '

' → logprob: -2.329035758972168
    4. 'class' → logprob: -4.954035758972168
    5. '
' → logprob: -5.079035758972168
    6. '#' → logprob: -5.329035758972168
    7. '' → logprob: -6.704035758972168
    8. '\' → logprob: -6.954035758972168
    9. '


' → logprob: -7.704035758972168
    10. '\n' → logprob: -7.704035758972168

Token 83: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12009327858686447
    2. ' _' → logprob: -3.12009334564209
    3. ' dfs' → logprob: -3.12009334564209
    4. '_' → logprob: -4.87009334564209
    5. ' factor' → logprob: -5.49509334564209
    6. ' factorial' → logprob: -5.49509334564209
    7. ' main' → logprob: -5.74509334564209
    8. ' calculate' → logprob: -6.62009334564209
    9. ' max' → logprob: -7.49509334564209
    10. ' solve' → logprob: -7.74509334564209

Token 84: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003153003752231598
    2. '():' → logprob: -6.003152847290039
    3. ':' → logprob: -8.378152847290039
    4. '_' → logprob: -8.753152847290039
    5. '()' → logprob: -9.128152847290039
    6. ' (' → logprob: -9.503152847290039
    7. '.' → logprob: -10.003152847290039
    8. '(:' → logprob: -10.628152847290039
    9. '(
' → logprob: -11.878152847290039
    10. '```' → logprob: -12.128152847290039

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05791900306940079
    2. ':' → logprob: -4.307919025421143
    3. 'n' → logprob: -4.307919025421143
    4. ' ' → logprob: -4.557919025421143
    5. '    ' → logprob: -5.182919025421143
    6. '(' → logprob: -5.307919025421143
    7. '(n' → logprob: -5.932919025421143
    8. 'a' → logprob: -6.557919025421143
    9. ')' → logprob: -7.557919025421143
    10. ' :' → logprob: -7.682919025421143

Token 86: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06601477414369583
    2. '(' → logprob: -3.5660147666931152
    3. 'n' → logprob: -4.441014766693115
    4. '   ' → logprob: -5.441014766693115
    5. 'd' → logprob: -5.941014766693115
    6. 'i' → logprob: -5.941014766693115
    7. 'a' → logprob: -6.066014766693115
    8. 'r' → logprob: -6.191014766693115
    9. ' (' → logprob: -6.316014766693115
    10. '    ' → logprob: -6.441014766693115

Token 87: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29736921191215515
    2. '   ' → logprob: -2.5473692417144775
    3. '#' → logprob: -3.2973692417144775
    4. 'n' → logprob: -3.4223692417144775
    5. '"' → logprob: -4.047369003295898
    6. 'def' → logprob: -4.047369003295898
    7. '):' → logprob: -4.422369003295898
    8. '(' → logprob: -4.547369003295898
    9. '"""' → logprob: -4.547369003295898
    10. ' ' → logprob: -5.047369003295898

Token 88: ' Fonction' (ID: 189149)
  Prédit: 'Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calcul' → logprob: -0.6524636149406433
    2. '"""' → logprob: -1.777463674545288
    3. '#' → logprob: -2.277463674545288
    4. 'Calculate' → logprob: -2.902463674545288
    5. 'Pass' → logprob: -3.402463674545288
    6. 'Code' → logprob: -4.402463436126709
    7. 'def' → logprob: -4.777463436126709
    8. '   ' → logprob: -4.902463436126709
    9. ' """' → logprob: -5.027463436126709
    10. 'R' → logprob: -5.152463436126709

Token 89: ' principale' (ID: 68926)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4134616255760193
    2. ' de' → logprob: -1.913461685180664
    3. ' d' → logprob: -2.788461685180664
    4. ' (' → logprob: -3.038461685180664
    5. '(' → logprob: -3.288461685180664
    6. '_' → logprob: -4.288461685180664
    7. '   ' → logprob: -5.538461685180664
    8. ':' → logprob: -6.163461685180664
    9. ')' → logprob: -6.288461685180664
    10. 'def' → logprob: -6.288461685180664

Token 90: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1223088502883911
    2. '   ' → logprob: -1.3723088502883911
    3. 'def' → logprob: -1.8723088502883911
    4. '():' → logprob: -2.2473087310791016
    5. '(' → logprob: -3.1223087310791016
    6. '()' → logprob: -3.1223087310791016
    7. ' :' → logprob: -3.2473087310791016
    8. ' ' → logprob: -4.872308731079102
    9. '    ' → logprob: -5.247308731079102
    10. ' de' → logprob: -5.372308731079102

Token 91: ' lit' (ID: 11980)
  Prédit: ' lit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.8407527804374695
    2. ' traite' → logprob: -2.2157528400421143
    3. ' prend' → logprob: -2.5907528400421143
    4. ' g' → logprob: -2.8407528400421143
    5. ' calc' → logprob: -3.0907528400421143
    6. ' reads' → logprob: -3.2157528400421143
    7. ' analyse' → logprob: -3.9657528400421143
    8. ' continue' → logprob: -4.340752601623535
    9. ' réalise' → logprob: -4.590752601623535
    10. ':' → logprob: -4.715752601623535

Token 92: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5973048210144043
    2. '()' → logprob: -1.0973048210144043
    3. ' les' → logprob: -2.7223048210144043
    4. ' l' → logprob: -3.7223048210144043
    5. ' la' → logprob: -4.597304821014404
    6. '(' → logprob: -5.347304821014404
    7. ' le' → logprob: -5.472304821014404
    8. ' des' → logprob: -6.222304821014404
    9. ' input' → logprob: -6.847304821014404
    10. ' ()' → logprob: -7.347304821014404

Token 93: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.01912262663245201
    2. ' entr' → logprob: -4.76912260055542
    3. ' input' → logprob: -6.26912260055542
    4. ' data' → logprob: -6.39412260055542
    5. ' donnée' → logprob: -6.39412260055542
    6. 'd' → logprob: -6.76912260055542
    7. ' inputs' → logprob: -7.14412260055542
    8. ' donn' → logprob: -7.51912260055542
    9. 'entrée' → logprob: -7.64412260055542
    10. 'entr' → logprob: -7.89412260055542

Token 94: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.008711130358278751
    2. 'ée' → logprob: -4.758711338043213
    3. '   ' → logprob: -10.133710861206055
    4. 'é' → logprob: -10.883710861206055
    5. 'ees' → logprob: -11.008710861206055
    6. 'es' → logprob: -11.383710861206055
    7. 'és' → logprob: -13.008710861206055
    8. 'e' → logprob: -13.383710861206055
    9. '```' → logprob: -13.383710861206055
    10. 'er' → logprob: -13.633710861206055

Token 95: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.285098671913147
    2. ' ' → logprob: -2.1600985527038574
    3. ',' → logprob: -2.6600985527038574
    4. '    ' → logprob: -3.2850985527038574
    5. ' et' → logprob: -4.910098552703857
    6. ' ,' → logprob: -5.160098552703857
    7. ' )' → logprob: -6.285098552703857
    8. ' des' → logprob: -6.285098552703857
    9. ' de' → logprob: -6.410098552703857
    10. '  ' → logprob: -6.660098552703857

Token 96: ' construit' (ID: 119882)
  Prédit: ' traite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traite' → logprob: -0.05658455193042755
    2. '   ' → logprob: -3.931584596633911
    3. ' trie' → logprob: -3.931584596633911
    4. ' calc' → logprob: -5.181584358215332
    5. ' effect' → logprob: -6.306584358215332
    6. ' les' → logprob: -6.931584358215332
    7. ' ex' → logprob: -6.931584358215332
    8. ' et' → logprob: -7.056584358215332
    9. '    ' → logprob: -7.181584358215332
    10. ' puis' → logprob: -7.431584358215332

Token 97: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.0428659915924072
    2. ' les' → logprob: -1.5428659915924072
    3. ' ' → logprob: -2.1678659915924072
    4. ' la' → logprob: -2.1678659915924072
    5. ' l' → logprob: -2.6678659915924072
    6. ' et' → logprob: -3.0428659915924072
    7. '    ' → logprob: -3.2928659915924072
    8. ' un' → logprob: -3.9178659915924072
    9. '   ' → logprob: -4.667865753173828
    10. 'le' → logprob: -4.792865753173828

Token 98: ' sé' (ID: 7462)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3724376857280731
    2. ' ' → logprob: -1.8724377155303955
    3. ' grap' → logprob: -2.1224377155303955
    4. 'graph' → logprob: -4.247437477111816
    5. 's' → logprob: -5.247437477111816
    6. '_' → logprob: -5.497437477111816
    7. ' ' → logprob: -5.872437477111816
    8. ' s' → logprob: -6.372437477111816
    9. '   ' → logprob: -6.497437477111816
    10. '_graph' → logprob: -6.872437477111816

Token 99: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.31240421533584595
    2. 'quences' → logprob: -1.4374041557312012
    3. 'q' → logprob: -3.562404155731201
    4. 'rie' → logprob: -7.562404155731201
    5. 'que' → logprob: -7.937404155731201
    6. 'qu' → logprob: -8.18740463256836
    7. '   ' → logprob: -8.31240463256836
    8. 'r' → logprob: -8.81240463256836
    9. 'ries' → logprob: -8.81240463256836
    10. '#' → logprob: -9.06240463256836

Token 100: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1006050631403923
    2. ' ' → logprob: -3.225605010986328
    3. '    ' → logprob: -3.975605010986328
    4. ',' → logprob: -4.850605010986328
    5. ' ,' → logprob: -5.100605010986328
    6. ' des' → logprob: -5.225605010986328
    7. '_' → logprob: -6.100605010986328
    8. ' de' → logprob: -6.225605010986328
    9. '(' → logprob: -6.350605010986328
    10. ' et' → logprob: -6.475605010986328

Token 101: ' coups' (ID: 98942)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.6085848808288574
    2. ' données' → logprob: -2.4835848808288574
    3. ' tokens' → logprob: -3.2335848808288574
    4. ' valeurs' → logprob: -3.6085848808288574
    5. ' opérations' → logprob: -3.9835848808288574
    6. ' indices' → logprob: -4.108584880828857
    7. ' caractères' → logprob: -4.108584880828857
    8. ' ent' → logprob: -4.108584880828857
    9. ' instructions' → logprob: -4.233584880828857
    10. ' actions' → logprob: -4.358584880828857

Token 102: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8306607604026794
    2. '   ' → logprob: -1.2056608200073242
    3. ' ' → logprob: -1.8306608200073242
    4. ' ,' → logprob: -2.705660820007324
    5. '    ' → logprob: -3.955660820007324
    6. '(' → logprob: -5.080660820007324
    7. ' )' → logprob: -5.955660820007324
    8. ')' → logprob: -6.455660820007324
    9. ' (' → logprob: -6.830660820007324
    10. '  ' → logprob: -6.955660820007324

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22266975045204163
    2. ',' → logprob: -1.7226697206497192
    3. ' ,' → logprob: -4.97266960144043
    4. '    ' → logprob: -5.09766960144043
    5. ' ' → logprob: -5.34766960144043
    6. ''' → logprob: -7.34766960144043
    7. ' et' → logprob: -7.59766960144043
    8. ')' → logprob: -7.72266960144043
    9. 'et' → logprob: -8.09766960144043
    10. '  ' → logprob: -8.59766960144043

Token 104: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7241418957710266
    2. ',' → logprob: -0.8491418957710266
    3. ' et' → logprob: -3.099141836166382
    4. 'et' → logprob: -4.224142074584961
    5. ' ,' → logprob: -4.474142074584961
    6. '    ' → logprob: -4.599142074584961
    7. ' ' → logprob: -6.474142074584961
    8. ' de' → logprob: -7.224142074584961
    9. '"""' → logprob: -7.349142074584961
    10. ' en' → logprob: -7.474142074584961

Token 105: ' jouer' (ID: 48012)
  Prédit: ' partir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.7584425806999207
    2. ' ' → logprob: -1.3834426403045654
    3. ' jouer' → logprob: -1.7584426403045654
    4. 'jou' → logprob: -3.8834426403045654
    5. ' effectuer' → logprob: -4.383442401885986
    6. '   ' → logprob: -5.008442401885986
    7. '  ' → logprob: -5.383442401885986
    8. 'tr' → logprob: -5.633442401885986
    9. ' battre' → logprob: -5.883442401885986
    10. '    ' → logprob: -6.008442401885986

Token 106: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43098288774490356
    2. ' ' → logprob: -1.5559828281402588
    3. ' ,' → logprob: -2.055982828140259
    4. '   ' → logprob: -4.930983066558838
    5. ' et' → logprob: -5.930983066558838
    6. '.' → logprob: -8.30598258972168
    7. ' :' → logprob: -8.68098258972168
    8. ')' → logprob: -9.05598258972168
    9. ' )' → logprob: -9.05598258972168
    10. '  ' → logprob: -9.30598258972168

Token 107: ' maxim' (ID: 29045)
  Prédit: ' résoudre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résoudre' → logprob: -1.2400413751602173
    2. ' gagner' → logprob: -1.8650413751602173
    3. ' maxim' → logprob: -2.3650412559509277
    4. ' battre' → logprob: -2.8650412559509277
    5. ' chaque' → logprob: -2.9900412559509277
    6. ' les' → logprob: -3.3650412559509277
    7. ' ' → logprob: -3.4900412559509277
    8. ' atteindre' → logprob: -3.4900412559509277
    9. ' optimiser' → logprob: -3.7400412559509277
    10. ' le' → logprob: -3.7400412559509277

Token 108: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.017601467669010162
    2. 'al' → logprob: -4.767601490020752
    3. 'is' → logprob: -6.142601490020752
    4. 'um' → logprob: -6.142601490020752
    5. '```' → logprob: -6.517601490020752
    6. 'user' → logprob: -7.267601490020752
    7. 'a' → logprob: -7.517601490020752
    8. '#' → logprob: -7.767601490020752
    9. '   ' → logprob: -8.392601013183594
    10. 'er' → logprob: -8.642601013183594

Token 109: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.28119957447052
    2. ' le' → logprob: -1.40619957447052
    3. ' ' → logprob: -1.53119957447052
    4. ' l' → logprob: -1.53119957447052
    5. ' les' → logprob: -4.0311994552612305
    6. 'le' → logprob: -4.9061994552612305
    7. 'l' → logprob: -5.0311994552612305
    8. '_' → logprob: -5.0311994552612305
    9. '    ' → logprob: -6.6561994552612305
    10. '   ' → logprob: -7.0311994552612305

Token 110: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.09137142449617386
    2. 'score' → logprob: -2.966371536254883
    3. ' nombre' → logprob: -3.591371536254883
    4. ' gain' → logprob: -5.716371536254883
    5. ' points' → logprob: -6.841371536254883
    6. 'nombre' → logprob: -6.966371536254883
    7. '_score' → logprob: -7.216371536254883
    8. 's' → logprob: -7.591371536254883
    9. ' point' → logprob: -7.966371536254883
    10. 'gain' → logprob: -8.591371536254883

Token 111: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21808360517024994
    2. ',' → logprob: -1.7180836200714111
    3. ' ' → logprob: -4.593083381652832
    4. ' ,' → logprob: -6.343083381652832
    5. '    ' → logprob: -6.718083381652832
    6. '.' → logprob: -7.218083381652832
    7. '(' → logprob: -7.718083381652832
    8. ',
' → logprob: -8.093083381652832
    9. ' et' → logprob: -8.343083381652832
    10. ':' → logprob: -8.343083381652832

Token 112: ' jeu' (ID: 24626)
  Prédit: ' jeu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jeu' → logprob: -0.5136896371841431
    2. ' ' → logprob: -2.0136895179748535
    3. ' go' → logprob: -2.7636895179748535
    4. 'jeu' → logprob: -3.5136895179748535
    5. ' pend' → logprob: -3.7636895179748535
    6. ' code' → logprob: -4.5761895179748535
    7. 'pend' → logprob: -4.5761895179748535
    8. ' jeux' → logprob: -4.8886895179748535
    9. ' mor' → logprob: -4.8886895179748535
    10. ' puissance' → logprob: -5.1386895179748535

Token 113: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3951125144958496
    2. ',' → logprob: -1.6451125144958496
    3. ' ,' → logprob: -3.0201125144958496
    4. ' de' → logprob: -3.5201125144958496
    5. '   ' → logprob: -3.8951125144958496
    6. '.' → logprob: -4.64511251449585
    7. ')' → logprob: -5.52011251449585
    8. ' des' → logprob: -5.77011251449585
    9. ' )' → logprob: -6.27011251449585
    10. ' :' → logprob: -6.27011251449585

Token 114: ' pierre' (ID: 70323)
  Prédit: ' go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.3447714149951935
    2. ' ' → logprob: -2.969771385192871
    3. 'go' → logprob: -3.219771385192871
    4. ' pierre' → logprob: -3.469771385192871
    5. ' pierres' → logprob: -3.719771385192871
    6. ' Nim' → logprob: -3.844771385192871
    7. ' cartes' → logprob: -3.969771385192871
    8. ' nim' → logprob: -4.344771385192871
    9. '```' → logprob: -4.344771385192871
    10. 'd' → logprob: -4.594771385192871

Token 115: '-fe' (ID: 13355)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.023636754602193832
    2. '-fe' → logprob: -4.523636817932129
    3. '-' → logprob: -4.773636817932129
    4. 'papier' → logprob: -6.398636817932129
    5. ' -' → logprob: -7.023636817932129
    6. ',' → logprob: -7.648636817932129
    7. '_p' → logprob: -8.523636817932129
    8. 'fe' → logprob: -8.523636817932129
    9. '-paper' → logprob: -8.648636817932129
    10. ' ' → logprob: -8.898636817932129

Token 116: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.00044890373828820884
    2. 'u' → logprob: -7.875448703765869
    3. 'ulle' → logprob: -11.000449180603027
    4. '#' → logprob: -11.125449180603027
    5. 'r' → logprob: -11.500449180603027
    6. 'ille' → logprob: -12.375449180603027
    7. 'n' → logprob: -12.500449180603027
    8. 'uil' → logprob: -12.750449180603027
    9. 'ur' → logprob: -13.000449180603027
    10. 'rr' → logprob: -13.000449180603027

Token 117: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.7115986943244934
    2. 'c' → logprob: -0.9615986943244934
    3. '-p' → logprob: -2.2115986347198486
    4. 'papier' → logprob: -5.086598873138428
    5. ' c' → logprob: -5.586598873138428
    6. '_c' → logprob: -5.711598873138428
    7. '-' → logprob: -7.086598873138428
    8. 'p' → logprob: -7.336598873138428
    9. '	c' → logprob: -7.461598873138428
    10. 's' → logprob: -7.586598873138428

Token 118: 'iseaux' (ID: 131289)
  Prédit: 'iseaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseaux' → logprob: -0.3086746335029602
    2. 'iseau' → logprob: -1.8086745738983154
    3. 'i' → logprob: -2.3086745738983154
    4. 'is' → logprob: -7.6836748123168945
    5. 'iis' → logprob: -7.6836748123168945
    6. 'a' → logprob: -8.683674812316895
    7. 'ise' → logprob: -8.683674812316895
    8. '```' → logprob: -8.808674812316895
    9. '   ' → logprob: -9.183674812316895
    10. 'ii' → logprob: -9.683674812316895

Token 119: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0232008658349514
    2. ',' → logprob: -5.023200988769531
    3. ' ' → logprob: -5.523200988769531
    4. '.' → logprob: -5.648200988769531
    5. ':' → logprob: -5.773200988769531
    6. ' :' → logprob: -6.398200988769531
    7. '    
' → logprob: -6.898200988769531
    8. ')' → logprob: -7.148200988769531
    9. '  ' → logprob: -7.773200988769531
    10. '  
' → logprob: -8.023200988769531

Token 120: '
' (ID: 198)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.29113730788230896
    2. ' le' → logprob: -2.041137218475342
    3. ' les' → logprob: -2.916137218475342
    4. ' l' → logprob: -3.041137218475342
    5. ' ' → logprob: -4.291137218475342
    6. ' ' → logprob: -5.791137218475342
    7. ' une' → logprob: -6.666137218475342
    8. 'le' → logprob: -7.666137218475342
    9. ' un' → logprob: -7.791137218475342
    10. 'l' → logprob: -7.791137218475342

Token 121: '   ' (ID: 271)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6346765756607056
    2. ' le' → logprob: -1.3846765756607056
    3. ' les' → logprob: -2.259676456451416
    4. ' l' → logprob: -2.384676456451416
    5. ' ' → logprob: -5.134676456451416
    6. ' ' → logprob: -5.134676456451416
    7. '    ' → logprob: -5.634676456451416
    8. 'l' → logprob: -6.259676456451416
    9. 'le' → logprob: -6.759676456451416
    10. ' un' → logprob: -7.384676456451416

Token 122: ' certaines' (ID: 46662)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3371177315711975
    2. ' le' → logprob: -1.8371176719665527
    3. ' les' → logprob: -2.3371176719665527
    4. ' l' → logprob: -3.8371176719665527
    5. 'le' → logprob: -5.837117671966553
    6. ' ' → logprob: -6.712117671966553
    7. 'l' → logprob: -7.087117671966553
    8. 'les' → logprob: -7.587117671966553
    9. ' une' → logprob: -7.587117671966553
    10. ' leur' → logprob: -7.587117671966553

Token 123: ' contraintes' (ID: 167366)
  Prédit: ' règles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.42044419050216675
    2. ' contraintes' → logprob: -2.0454442501068115
    3. ' stratégies' → logprob: -2.1704442501068115
    4. ' conditions' → logprob: -2.9204442501068115
    5. ' critères' → logprob: -3.6704442501068115
    6. ' la' → logprob: -5.420444011688232
    7. ' log' → logprob: -5.420444011688232
    8. ' l' → logprob: -6.045444011688232
    9. ' ' → logprob: -6.545444011688232
    10. 'conditions' → logprob: -6.795444011688232

Token 124: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18502311408519745
    2. ':' → logprob: -2.060023069381714
    3. '.' → logprob: -4.935023307800293
    4. ')' → logprob: -5.060023307800293
    5. ' :' → logprob: -5.185023307800293
    6. '
' → logprob: -5.185023307800293
    7. '    
' → logprob: -5.560023307800293
    8. ',' → logprob: -5.685023307800293
    9. '):' → logprob: -5.810023307800293
    10. '  
' → logprob: -6.435023307800293

Token 125: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.29876449704170227
    2. '   ' → logprob: -2.17376446723938
    3. ' puis' → logprob: -2.67376446723938
    4. '    ' → logprob: -2.79876446723938
    5. 'et' → logprob: -4.798764705657959
    6. ' and' → logprob: -6.298764705657959
    7. ' en' → logprob: -6.298764705657959
    8. ' ' → logprob: -7.173764705657959
    9. ' les' → logprob: -8.2987642288208
    10. ' le' → logprob: -8.5487642288208

Token 126: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3542943298816681
    2. ' les' → logprob: -2.2292943000793457
    3. '    ' → logprob: -2.7292943000793457
    4. ' print' → logprob: -2.9792943000793457
    5. ' affiche' → logprob: -4.104294300079346
    6. ' joue' → logprob: -4.854294300079346
    7. ' l' → logprob: -4.854294300079346
    8. ' la' → logprob: -5.104294300079346
    9. ' retourne' → logprob: -5.229294300079346
    10. ' imprime' → logprob: -5.479294300079346

Token 127: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4080817699432373
    2. '()' → logprob: -1.9080817699432373
    3. ' la' → logprob: -2.7830817699432373
    4. '("")' → logprob: -3.1580817699432373
    5. '("' → logprob: -3.4080817699432373
    6. ' ' → logprob: -3.9080817699432373
    7. ' le' → logprob: -4.783082008361816
    8. ' les' → logprob: -5.033082008361816
    9. '("""' → logprob: -5.408082008361816
    10. '('' → logprob: -6.033082008361816

Token 128: ' score' (ID: 8429)
  Prédit: ' résultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.2065611481666565
    2. ' score' → logprob: -1.9565610885620117
    3. ' resultat' → logprob: -4.081561088562012
    4. ' ' → logprob: -4.581561088562012
    5. ' result' → logprob: -5.081561088562012
    6. ' résultats' → logprob: -5.206561088562012
    7. 's' → logprob: -5.831561088562012
    8. ' code' → logprob: -7.206561088562012
    9. ' meilleur' → logprob: -7.456561088562012
    10. '_' → logprob: -7.581561088562012

Token 129: ' maximal' (ID: 65414)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4406636953353882
    2. '.' → logprob: -1.3156636953353882
    3. ',' → logprob: -3.6906638145446777
    4. '   ' → logprob: -3.8156638145446777
    5. ')' → logprob: -4.440663814544678
    6. '  ' → logprob: -4.690663814544678
    7. ' obtenu' → logprob: -5.940663814544678
    8. ' maximale' → logprob: -6.440663814544678
    9. ' possible' → logprob: -6.815663814544678
    10. ' )' → logprob: -6.815663814544678

Token 130: ' possible' (ID: 4149)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11987325549125671
    2. '   ' → logprob: -2.744873285293579
    3. ',' → logprob: -3.744873285293579
    4. ')' → logprob: -4.994873046875
    5. ':' → logprob: -4.994873046875
    6. 'def' → logprob: -5.619873046875
    7. '()' → logprob: -6.869873046875
    8. ' possible' → logprob: -6.994873046875
    9. 'possible' → logprob: -6.994873046875
    10. '.
' → logprob: -7.244873046875

Token 131: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0115686655044556
    2. ':' → logprob: -1.1365686655044556
    3. '   ' → logprob: -1.3865686655044556
    4. ')' → logprob: -2.886568546295166
    5. ',' → logprob: -5.761568546295166
    6. ' ' → logprob: -6.011568546295166
    7. '):' → logprob: -7.136568546295166
    8. ' :' → logprob: -7.261568546295166
    9. '
' → logprob: -7.636568546295166
    10. '  ' → logprob: -8.136569023132324

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01748233661055565
    2. '"""' → logprob: -4.892482280731201
    3. ' """' → logprob: -5.267482280731201
    4. ')' → logprob: -6.392482280731201
    5. '```' → logprob: -7.267482280731201
    6. '    ' → logprob: -7.517482280731201
    7. '
' → logprob: -7.642482280731201
    8. ' ' → logprob: -7.767482280731201
    9. '#' → logprob: -8.76748275756836
    10. 'n' → logprob: -9.26748275756836

Token 133: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011123274452984333
    2. '#' → logprob: -5.261123180389404
    3. '    ' → logprob: -6.636123180389404
    4. '    
' → logprob: -7.261123180389404
    5. '
' → logprob: -7.761123180389404
    6. ' ' → logprob: -7.886123180389404
    7. '"""' → logprob: -8.011123657226562
    8. 'Input' → logprob: -8.011123657226562
    9. ' """' → logprob: -8.261123657226562
    10. 'n' → logprob: -8.386123657226562

Token 134: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.8364441394805908
    2. 'r' → logprob: -1.2114441394805908
    3. 'rée' → logprob: -1.5864441394805908
    4. 'ée' → logprob: -3.586444139480591
    5. 'er' → logprob: -4.211443901062012
    6. 'ré' → logprob: -4.961443901062012
    7. '   ' → logprob: -5.086443901062012
    8. 'rees' → logprob: -5.086443901062012
    9. 'es' → logprob: -7.961443901062012
    10. 'e' → logprob: -7.961443901062012

Token 135: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.565762460231781
    2. '   ' → logprob: -1.1907625198364258
    3. ' :' → logprob: -3.065762519836426
    4. '():' → logprob: -3.440762519836426
    5. ' =' → logprob: -3.940762519836426
    6. '(' → logprob: -5.065762519836426
    7. '()' → logprob: -5.065762519836426
    8. ',' → logprob: -5.690762519836426
    9. ' ' → logprob: -5.815762519836426
    10. '):' → logprob: -6.315762519836426

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19563063979148865
    2. ')' → logprob: -2.5706305503845215
    3. '    ' → logprob: -3.0706305503845215
    4. ' ' → logprob: -3.3206305503845215
    5. ' )' → logprob: -4.4456305503845215
    6. '):' → logprob: -6.4456305503845215
    7. '  ' → logprob: -6.6956305503845215
    8. 'n' → logprob: -7.4456305503845215
    9. ':' → logprob: -7.4456305503845215
    10. ' ):' → logprob: -8.07063102722168

Token 137: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19876950979232788
    2. '    ' → logprob: -2.3237695693969727
    3. ')' → logprob: -3.5737695693969727
    4. 'n' → logprob: -4.073769569396973
    5. ' )' → logprob: -4.073769569396973
    6. ' n' → logprob: -4.823769569396973
    7. ' ' → logprob: -5.573769569396973
    8. ' """' → logprob: -5.823769569396973
    9. '"""' → logprob: -6.573769569396973
    10. ' input' → logprob: -7.448769569396973

Token 138: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7176814675331116
    2. '   ' → logprob: -1.0926814079284668
    3. 'n' → logprob: -1.9676814079284668
    4. ')' → logprob: -3.842681407928467
    5. ' ' → logprob: -5.842681407928467
    6. ' sys' → logprob: -6.342681407928467
    7. ' N' → logprob: -6.592681407928467
    8. ' )' → logprob: -6.592681407928467
    9. '()' → logprob: -6.842681407928467
    10. '    ' → logprob: -7.092681407928467

Token 139: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21038562059402466
    2. ' =' → logprob: -1.7103855609893799
    3. '=' → logprob: -5.460385799407959
    4. ')' → logprob: -6.335385799407959
    5. '=int' → logprob: -6.960385799407959
    6. ' ,' → logprob: -7.085385799407959
    7. ':' → logprob: -7.335385799407959
    8. '   ' → logprob: -9.0853853225708
    9. '<|end|>' → logprob: -10.0853853225708
    10. ' )' → logprob: -10.0853853225708

Token 140: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01863599196076393
    2. ' int' → logprob: -4.393636226654053
    3. ' n' → logprob: -5.768636226654053
    4. '  ' → logprob: -7.268636226654053
    5. 'int' → logprob: -7.518636226654053
    6. ' ' → logprob: -7.893636226654053
    7. '   ' → logprob: -8.143635749816895
    8. ' )' → logprob: -8.518635749816895
    9. 'n' → logprob: -8.643635749816895
    10. ' l' → logprob: -9.268635749816895

Token 141: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0949290469288826
    2. ' des' → logprob: -2.9699289798736572
    3. ' de' → logprob: -4.344929218292236
    4. '_' → logprob: -4.969929218292236
    5. ' =' → logprob: -5.469929218292236
    6. ',' → logprob: -6.094929218292236
    7. ')' → logprob: -6.219929218292236
    8. '<|end|>' → logprob: -6.344929218292236
    9. '_des' → logprob: -6.844929218292236
    10. '  ' → logprob: -6.844929218292236

Token 142: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029566608369350433
    2. ' des' → logprob: -4.279566764831543
    3. ' de' → logprob: -5.154566764831543
    4. '_' → logprob: -5.779566764831543
    5. ')' → logprob: -6.904566764831543
    6. ',' → logprob: -7.279566764831543
    7. ' )' → logprob: -7.404566764831543
    8. '  ' → logprob: -7.529566764831543
    9. ' (' → logprob: -7.654566764831543
    10. 's' → logprob: -7.654566764831543

Token 143: ' rounds' (ID: 37740)
  Prédit: ' coups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coups' → logprob: -0.18396912515163422
    2. ' joueurs' → logprob: -3.183969020843506
    3. 'c' → logprob: -3.308969020843506
    4. ' ' → logprob: -3.433969020843506
    5. ' tours' → logprob: -4.183969020843506
    6. 'cou' → logprob: -4.683969020843506
    7. ' parties' → logprob: -5.433969020843506
    8. 'jou' → logprob: -5.558969020843506
    9. ' rounds' → logprob: -6.058969020843506
    10. ' ' → logprob: -6.308969020843506

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37533149123191833
    2. ',' → logprob: -1.6253315210342407
    3. ' =' → logprob: -2.875331401824951
    4. ')' → logprob: -4.000331401824951
    5. '=' → logprob: -4.375331401824951
    6. 'n' → logprob: -4.500331401824951
    7. ' ' → logprob: -5.250331401824951
    8. ':' → logprob: -5.875331401824951
    9. '<|end|>' → logprob: -6.750331401824951
    10. '<|end|>' → logprob: -7.000331401824951

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0914653092622757
    2. ',' → logprob: -2.7164652347564697
    3. ')' → logprob: -4.466465473175049
    4. 'n' → logprob: -5.091465473175049
    5. ',
' → logprob: -6.841465473175049
    6. ' ' → logprob: -7.716465473175049
    7. ':' → logprob: -8.34146499633789
    8. '  ' → logprob: -8.34146499633789
    9. ' n' → logprob: -8.34146499633789
    10. ' ,' → logprob: -8.34146499633789

Token 146: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05241992324590683
    2. ',' → logprob: -3.177419900894165
    3. 'n' → logprob: -5.427420139312744
    4. ')' → logprob: -6.177420139312744
    5. ',
' → logprob: -7.927420139312744
    6. '
' → logprob: -8.052419662475586
    7. ' ,' → logprob: -8.177419662475586
    8. '    
' → logprob: -8.302419662475586
    9. ' ' → logprob: -8.427419662475586
    10. '    ' → logprob: -8.427419662475586

Token 147: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.5958876609802246
    2. ' m' → logprob: -2.0958876609802246
    3. ' A' → logprob: -2.0958876609802246
    4. ' a' → logprob: -2.4708876609802246
    5. 'k' → logprob: -2.9708876609802246
    6. 'r' → logprob: -3.3458876609802246
    7. ' t' → logprob: -3.3458876609802246
    8. 'a' → logprob: -3.3458876609802246
    9. ' T' → logprob: -3.4708876609802246
    10. 'm' → logprob: -3.4708876609802246

Token 148: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07021773606538773
    2. ',' → logprob: -3.0702178478240967
    3. ' ' → logprob: -4.320217609405518
    4. '=' → logprob: -5.070217609405518
    5. ' ,' → logprob: -6.695217609405518
    6. ')' → logprob: -8.695218086242676
    7. '=int' → logprob: -8.695218086242676
    8. '  ' → logprob: -9.320218086242676
    9. ' :' → logprob: -10.070218086242676
    10. '   ' → logprob: -10.695218086242676

Token 149: ' nombre' (ID: 9733)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.27975404262542725
    2. ' ' → logprob: -2.029754161834717
    3. 'int' → logprob: -2.529754161834717
    4. ' n' → logprob: -4.529754161834717
    5. ' l' → logprob: -4.779754161834717
    6. ' max' → logprob: -5.529754161834717
    7. '  ' → logprob: -6.654754161834717
    8. 'n' → logprob: -6.904754161834717
    9. ' ' → logprob: -6.904754161834717
    10. ' "' → logprob: -7.029754161834717

Token 150: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2852092683315277
    2. ' des' → logprob: -2.2852091789245605
    3. ' d' → logprob: -2.7852091789245605
    4. ' ' → logprob: -3.5352091789245605
    5. ' =' → logprob: -3.7852091789245605
    6. 'de' → logprob: -5.4102091789245605
    7. '=' → logprob: -5.5352091789245605
    8. '  ' → logprob: -5.5352091789245605
    9. '_' → logprob: -6.0352091789245605
    10. ')' → logprob: -6.1602091789245605

Token 151: ' rounds' (ID: 37740)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.5439786911010742
    2. 'spaces' → logprob: -1.9189786911010742
    3. ' ' → logprob: -2.043978691101074
    4. ' l' → logprob: -2.168978691101074
    5. ' spaces' → logprob: -3.293978691101074
    6. ' coups' → logprob: -3.293978691101074
    7. 's' → logprob: -3.793978691101074
    8. 'l' → logprob: -3.918978691101074
    9. ' rounds' → logprob: -4.043978691101074
    10. 'space' → logprob: -4.293978691101074

Token 152: ' cons' (ID: 1473)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7859519124031067
    2. '    ' → logprob: -1.660951852798462
    3. ' ' → logprob: -2.285951852798462
    4. '_' → logprob: -3.660951852798462
    5. ',' → logprob: -4.285952091217041
    6. ' restantes' → logprob: -4.535952091217041
    7. ' ' → logprob: -4.660952091217041
    8. ' =' → logprob: -4.660952091217041
    9. '   ' → logprob: -4.785952091217041
    10. ' 
' → logprob: -4.848452091217041

Token 153: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.003957055509090424
    2. 'ecut' → logprob: -5.628957271575928
    3. 'éc' → logprob: -8.37895679473877
    4. 'é' → logprob: -9.37895679473877
    5. '```' → logprob: -11.75395679473877
    6. '   ' → logprob: -11.75395679473877
    7. 'e' → logprob: -12.12895679473877
    8. '{' → logprob: -12.25395679473877
    9. 'ec' → logprob: -12.37895679473877
    10. 'ecu' → logprob: -12.62895679473877

Token 154: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.11942271143198013
    2. 'u' → logprob: -2.994422674179077
    3. 'utive' → logprob: -3.369422674179077
    4. ' ut' → logprob: -4.369422912597656
    5. ' u' → logprob: -4.619422912597656
    6. '   ' → logprob: -5.619422912597656
    7. ' ' → logprob: -7.744422912597656
    8. 'uts' → logprob: -7.994422912597656
    9. 'uti' → logprob: -8.119422912597656
    10. ' cut' → logprob: -9.244422912597656

Token 155: ' après' (ID: 16460)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7084939479827881
    2. ')' → logprob: -1.708493947982788
    3. ',' → logprob: -2.333493947982788
    4. ' ' → logprob: -3.208493947982788
    5. ' )' → logprob: -3.333493947982788
    6. ' ,' → logprob: -3.958493947982788
    7. ' que' → logprob: -4.333494186401367
    8. '    ' → logprob: -4.583494186401367
    9. '   ' → logprob: -4.583494186401367
    10. ' (' → logprob: -4.708494186401367

Token 156: ' lesquels' (ID: 106476)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.727318286895752
    2. ' which' → logprob: -1.852318286895752
    3. 'le' → logprob: -2.102318286895752
    4. ' lequel' → logprob: -2.477318286895752
    5. 'les' → logprob: -2.977318286895752
    6. '```' → logprob: -3.352318286895752
    7. ' lesquelles' → logprob: -4.352318286895752
    8. ' lesquels' → logprob: -4.477318286895752
    9. 'la' → logprob: -4.602318286895752
    10. ' laquelle' → logprob: -5.352318286895752

Token 157: ' un' (ID: 537)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.06312467157840729
    2. ' l' → logprob: -4.313124656677246
    3. ' la' → logprob: -4.438124656677246
    4. ' il' → logprob: -4.813124656677246
    5. ' une' → logprob: -4.938124656677246
    6. ' le' → logprob: -4.938124656677246
    7. 'on' → logprob: -5.938124656677246
    8. ' a' → logprob: -6.063124656677246
    9. ' un' → logprob: -6.313124656677246
    10. ' ' → logprob: -6.813124656677246

Token 158: ' même' (ID: 9679)
  Prédit: ' joueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.24187739193439484
    2. ' espace' → logprob: -2.241877317428589
    3. ' ' → logprob: -2.741877317428589
    4. 'e' → logprob: -5.241877555847168
    5. ' player' → logprob: -5.616877555847168
    6. 'jou' → logprob: -5.741877555847168
    7. ' coup' → logprob: -5.741877555847168
    8. '_' → logprob: -5.866877555847168
    9. ''' → logprob: -5.991877555847168
    10. 'es' → logprob: -6.116877555847168

Token 159: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4370689392089844
    2. ' coup' → logprob: -1.1870689392089844
    3. ' geste' → logprob: -3.6870689392089844
    4. ' ' → logprob: -5.187068939208984
    5. ' move' → logprob: -5.687068939208984
    6. '_c' → logprob: -6.062068939208984
    7. ' c' → logprob: -6.687068939208984
    8. 'move' → logprob: -6.687068939208984
    9. '```' → logprob: -6.687068939208984
    10. '_' → logprob: -6.687068939208984

Token 160: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0449393130838871
    2. ' est' → logprob: -4.9199395179748535
    3. ' peut' → logprob: -5.1699395179748535
    4. ' doit' → logprob: -5.2949395179748535
    5. ' n' → logprob: -5.4199395179748535
    6. '<|end|>' → logprob: -5.5449395179748535
    7. '   ' → logprob: -6.0449395179748535
    8. '  ' → logprob: -6.2949395179748535
    9. ' devra' → logprob: -6.5449395179748535
    10. ' a' → logprob: -6.7949395179748535

Token 161: ' interdit' (ID: 129427)
  Prédit: ' interdit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interdit' → logprob: -0.6729692220687866
    2. ' ' → logprob: -1.0479692220687866
    3. ' possible' → logprob: -3.297969341278076
    4. ' autor' → logprob: -3.672969341278076
    5. ' allowed' → logprob: -4.172969341278076
    6. ' permis' → logprob: -4.547969341278076
    7. 'possible' → logprob: -4.672969341278076
    8. ' prohibited' → logprob: -5.172969341278076
    9. 'per' → logprob: -5.297969341278076
    10. ' rép' → logprob: -5.797969341278076

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.711381733417511
    2. ')' → logprob: -1.2113816738128662
    3. ',' → logprob: -2.711381673812866
    4. ' ' → logprob: -2.836381673812866
    5. '\n' → logprob: -4.086381912231445
    6. '
' → logprob: -4.586381912231445
    7. '<|end|>' → logprob: -4.586381912231445
    8. 'def' → logprob: -4.836381912231445
    9. ':' → logprob: -5.086381912231445
    10. '.' → logprob: -5.336381912231445

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02919931150972843
    2. ')' → logprob: -3.6541993618011475
    3. '
' → logprob: -6.654199123382568
    4. ',' → logprob: -7.529199123382568
    5. '    
' → logprob: -8.404199600219727
    6. ')
' → logprob: -8.529199600219727
    7. 'def' → logprob: -8.779199600219727
    8. 'n' → logprob: -9.404199600219727
    9. '```' → logprob: -9.404199600219727
    10. ' )' → logprob: -10.154199600219727

Token 164: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1420956552028656
    2. ')' → logprob: -2.1420955657958984
    3. ',' → logprob: -5.142095565795898
    4. '
' → logprob: -5.767095565795898
    5. 'def' → logprob: -6.017095565795898
    6. ')
' → logprob: -6.642095565795898
    7. ' )' → logprob: -8.017095565795898
    8. 'n' → logprob: -8.142095565795898
    9. '\n' → logprob: -8.142095565795898
    10. '```' → logprob: -8.142095565795898

Token 165: ' r' (ID: 428)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.32024502754211426
    2. 'n' → logprob: -1.4452450275421143
    3. '   ' → logprob: -3.8202450275421143
    4. ' input' → logprob: -6.570244789123535
    5. ' t' → logprob: -6.945244789123535
    6. ' score' → logprob: -6.945244789123535
    7. ' s' → logprob: -7.070244789123535
    8. 'm' → logprob: -7.320244789123535
    9. 'input' → logprob: -7.320244789123535
    10. ' m' → logprob: -7.445244789123535

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4954274296760559
    2. ' =' → logprob: -0.9954274296760559
    3. ',n' → logprob: -4.99542760848999
    4. ' ,' → logprob: -4.99542760848999
    5. ' ' → logprob: -5.62042760848999
    6. '=' → logprob: -6.62042760848999
    7. 'e' → logprob: -7.74542760848999
    8. 'n' → logprob: -7.99542760848999
    9. '  ' → logprob: -8.245427131652832
    10. ',
' → logprob: -8.620427131652832

Token 167: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008421902544796467
    2. 'p' → logprob: -5.008421897888184
    3. ' s' → logprob: -6.383421897888184
    4. ' p' → logprob: -11.758421897888184
    5. 'e' → logprob: -13.258421897888184
    6. 'k' → logprob: -13.758421897888184
    7. 'h' → logprob: -14.008421897888184
    8. 'P' → logprob: -14.258421897888184
    9. 'S' → logprob: -14.383421897888184
    10. 'b' → logprob: -14.383421897888184

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009795872494578362
    2. ' ,' → logprob: -4.634795665740967
    3. ' ' → logprob: -10.759796142578125
    4. ',
' → logprob: -11.634796142578125
    5. ':' → logprob: -13.259796142578125
    6. ' =' → logprob: -13.884796142578125
    7. ' :' → logprob: -13.884796142578125
    8. ',r' → logprob: -13.884796142578125
    9. ',k' → logprob: -14.259796142578125
    10. '=' → logprob: -14.384796142578125

Token 169: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06203915923833847
    2. ' p' → logprob: -2.8120391368865967
    3. ' ' → logprob: -9.937039375305176
    4. '	p' → logprob: -11.437039375305176
    5. '_p' → logprob: -11.687039375305176
    6. ''p' → logprob: -13.437039375305176
    7. 'P' → logprob: -14.187039375305176
    8. '   ' → logprob: -14.562039375305176
    9. '
' → logprob: -14.562039375305176
    10. '  ' → logprob: -15.437039375305176

Token 170: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018886130303144455
    2. ',' → logprob: -4.518886089324951
    3. '=' → logprob: -5.393886089324951
    4. ':' → logprob: -6.018886089324951
    5. ' :' → logprob: -8.26888656616211
    6. ')' → logprob: -8.64388656616211
    7. ' ' → logprob: -8.64388656616211
    8. '):' → logprob: -9.76888656616211
    9. ' ,' → logprob: -9.89388656616211
    10. '  ' → logprob: -10.39388656616211

Token 171: ' points' (ID: 5571)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2757173180580139
    2. ' nombres' → logprob: -1.5257172584533691
    3. 'nombre' → logprob: -5.150717258453369
    4. ' integers' → logprob: -5.400717258453369
    5. ' int' → logprob: -5.525717258453369
    6. ' map' → logprob: -5.775717258453369
    7. ' le' → logprob: -6.775717258453369
    8. ' n' → logprob: -6.775717258453369
    9. ' initial' → logprob: -7.400717258453369
    10. ' les' → logprob: -7.775717258453369

Token 172: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6904587149620056
    2. ' attrib' → logprob: -1.1904587745666504
    3. ' gagn' → logprob: -2.8154587745666504
    4. ' obten' → logprob: -3.1904587745666504
    5. ' pour' → logprob: -3.9404587745666504
    6. ' par' → logprob: -4.06545877456665
    7. ' accord' → logprob: -4.94045877456665
    8. ',' → logprob: -5.31545877456665
    9. ' assign' → logprob: -5.31545877456665
    10. ' =' → logprob: -5.44045877456665

Token 173: ' vain' (ID: 34253)
  Prédit: ' pierre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pierre' → logprob: -1.27065110206604
    2. ' chaque' → logprob: -1.77065110206604
    3. ' jouer' → logprob: -1.77065110206604
    4. ' gagner' → logprob: -2.39565110206604
    5. ' gagn' → logprob: -3.27065110206604
    6. ' each' → logprob: -3.39565110206604
    7. ' ' → logprob: -3.64565110206604
    8. 'r' → logprob: -3.89565110206604
    9. ' rock' → logprob: -3.89565110206604
    10. ' victoire' → logprob: -4.145650863647461

Token 174: 'cre' (ID: 894)
  Prédit: 'cre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cre' → logprob: -0.04800477251410484
    2. 'dre' → logprob: -3.5480048656463623
    3. 'ir' → logprob: -5.048004627227783
    4. 'c' → logprob: -6.048004627227783
    5. 'ire' → logprob: -6.423004627227783
    6. 'que' → logprob: -6.673004627227783
    7. 'oire' → logprob: -7.048004627227783
    8. 'indre' → logprob: -7.173004627227783
    9. 'r' → logprob: -7.173004627227783
    10. 're' → logprob: -7.548004627227783

Token 175: ' respect' (ID: 5618)
  Prédit: ' pierre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pierre' → logprob: -0.8090418577194214
    2. ' ' → logprob: -1.0590418577194214
    3. ' rock' → logprob: -2.684041976928711
    4. ' ,' → logprob: -3.309041976928711
    5. ' roca' → logprob: -3.309041976928711
    6. ',' → logprob: -3.934041976928711
    7. ' piedra' → logprob: -4.934041976928711
    8. '<|end|>' → logprob: -5.309041976928711
    9. ' scissors' → logprob: -5.434041976928711
    10. ' pedra' → logprob: -5.684041976928711

Token 176: 'ivement' (ID: 37978)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6808558702468872
    2. 'ivement' → logprob: -1.5558558702468872
    3. 'u' → logprob: -2.4308557510375977
    4. 'e' → logprob: -2.4308557510375977
    5. 'r' → logprob: -3.0558557510375977
    6. ' les' → logprob: -3.9308557510375977
    7. 'ant' → logprob: -4.555855751037598
    8. ' r' → logprob: -5.055855751037598
    9. 'eux' → logprob: -5.430855751037598
    10. 'é' → logprob: -5.930855751037598

Token 177: ' '' (ID: 461)
  Prédit: ' pierre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pierre' → logprob: -0.32667437195777893
    2. ' la' → logprob: -1.8266743421554565
    3. ' ' → logprob: -3.201674461364746
    4. ' rock' → logprob: -4.076674461364746
    5. 'p' → logprob: -4.201674461364746
    6. ' p' → logprob: -4.451674461364746
    7. ' les' → logprob: -5.451674461364746
    8. ' ' → logprob: -5.701674461364746
    9. ' c' → logprob: -6.076674461364746
    10. ' '' → logprob: -6.201674461364746

Token 178: 'p' (ID: 79)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5378793478012085
    2. ' pierre' → logprob: -1.5378793478012085
    3. ' ' → logprob: -1.7878793478012085
    4. ''' → logprob: -2.037879467010498
    5. ' c' → logprob: -2.287879467010498
    6. 'p' → logprob: -2.662879467010498
    7. 'rock' → logprob: -4.037879467010498
    8. 'r' → logprob: -4.037879467010498
    9. '   ' → logprob: -4.162879467010498
    10. ' rock' → logprob: -4.912879467010498

Token 179: 'ierre' (ID: 26825)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005253680050373077
    2. 'a' → logprob: -6.505253791809082
    3. ''a' → logprob: -7.380253791809082
    4. 'e' → logprob: -7.505253791809082
    5. ''ap' → logprob: -7.630253791809082
    6. 'ierre' → logprob: -8.005253791809082
    7. ''''' → logprob: -8.130253791809082
    8. '<|end|>' → logprob: -8.130253791809082
    9. 'r' → logprob: -8.880253791809082
    10. '',' → logprob: -9.130253791809082

Token 180: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.10116782039403915
    2. ''' → logprob: -2.351167917251587
    3. ',' → logprob: -7.726167678833008
    4. ' ',' → logprob: -7.851167678833008
    5. '','' → logprob: -9.476167678833008
    6. ' '' → logprob: -11.851167678833008
    7. '(',' → logprob: -12.351167678833008
    8. ','' → logprob: -12.601167678833008
    9. ' (' → logprob: -12.726167678833008
    10. '',
' → logprob: -12.851167678833008

Token 181: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.26216137409210205
    2. ''' → logprob: -1.512161374092102
    3. ''s' → logprob: -5.5121612548828125
    4. ' ' → logprob: -6.2621612548828125
    5. '   ' → logprob: -6.8871612548828125
    6. ''p' → logprob: -7.6371612548828125
    7. ''f' → logprob: -7.7621612548828125
    8. ''q' → logprob: -8.012161254882812
    9. ''r' → logprob: -8.762161254882812
    10. '"' → logprob: -8.762161254882812

Token 182: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.37349337339401245
    2. 'fe' → logprob: -1.3734934329986572
    3. ' c' → logprob: -3.4984934329986572
    4. ''' → logprob: -4.373493194580078
    5. ' feuille' → logprob: -4.873493194580078
    6. 'papier' → logprob: -5.498493194580078
    7. 'f' → logprob: -7.123493194580078
    8. ' ' → logprob: -7.248493194580078
    9. '   ' → logprob: -8.373493194580078
    10. ''s' → logprob: -8.373493194580078

Token 183: 'iseaux' (ID: 131289)
  Prédit: 'iseaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseaux' → logprob: -0.2862189710140228
    2. 'iseau' → logprob: -1.6612190008163452
    3. 'a' → logprob: -3.5362188816070557
    4. 'i' → logprob: -4.286219120025635
    5. 'o' → logprob: -5.161219120025635
    6. '`' → logprob: -6.661219120025635
    7. 'is' → logprob: -6.911219120025635
    8. '{'' → logprob: -7.036219120025635
    9. 'ha' → logprob: -7.161219120025635
    10. '#' → logprob: -7.286219120025635

Token 184: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.13599787652492523
    2. ''' → logprob: -2.135997772216797
    3. ',' → logprob: -4.760997772216797
    4. 'et' → logprob: -8.510997772216797
    5. '',
' → logprob: -9.635997772216797
    6. '','' → logprob: -9.885997772216797
    7. ' ',' → logprob: -10.135997772216797
    8. ' et' → logprob: -10.385997772216797
    9. ','' → logprob: -10.760997772216797
    10. ' ,' → logprob: -11.385997772216797

Token 185: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.43351656198501587
    2. ''' → logprob: -1.058516502380371
    3. ' ' → logprob: -6.558516502380371
    4. ''espace' → logprob: -6.808516502380371
    5. ''s' → logprob: -7.933516502380371
    6. '   ' → logprob: -8.183516502380371
    7. ''un' → logprob: -8.183516502380371
    8. ''une' → logprob: -8.933516502380371
    9. ''u' → logprob: -9.183516502380371
    10. ''o' → logprob: -9.308516502380371

Token 186: 'fe' (ID: 2302)
  Prédit: 'papier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'papier' → logprob: -0.22287458181381226
    2. 'p' → logprob: -2.097874641418457
    3. 'fe' → logprob: -3.097874641418457
    4. ''' → logprob: -4.722874641418457
    5. 'pa' → logprob: -4.722874641418457
    6. ' pierre' → logprob: -5.097874641418457
    7. 'pap' → logprob: -5.722874641418457
    8. ' papier' → logprob: -7.222874641418457
    9. ' feuille' → logprob: -7.222874641418457
    10. 'c' → logprob: -7.597874641418457

Token 187: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.00013762809976469725
    2. 'uil' → logprob: -9.750137329101562
    3. 'u' → logprob: -9.875137329101562
    4. 'r' → logprob: -10.625137329101562
    5. 'a' → logprob: -14.500137329101562
    6. 'uillez' → logprob: -14.625137329101562
    7. '#' → logprob: -14.750137329101562
    8. 'uillet' → logprob: -15.000137329101562
    9. '**' → logprob: -15.125137329101562
    10. 'ua' → logprob: -15.500137329101562

Token 188: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22743794322013855
    2. '')' → logprob: -1.727437973022461
    3. ')'' → logprob: -3.852437973022461
    4. ')' → logprob: -6.227437973022461
    5. '',' → logprob: -7.477437973022461
    6. '')
' → logprob: -8.352437973022461
    7. ' '' → logprob: -8.477437973022461
    8. ''''' → logprob: -8.602437973022461
    9. '')"' → logprob: -8.727437973022461
    10. '')
' → logprob: -9.102437973022461

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05904728174209595
    2. ')' → logprob: -3.434047222137451
    3. '
' → logprob: -4.559047222137451
    4. ')
' → logprob: -4.934047222137451
    5. ',' → logprob: -6.059047222137451
    6. '):
' → logprob: -6.684047222137451
    7. ' ' → logprob: -6.809047222137451
    8. 'def' → logprob: -7.309047222137451
    9. '):' → logprob: -7.434047222137451
    10. '    
' → logprob: -8.68404769897461

Token 190: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07756350189447403
    2. ')' → logprob: -3.077563524246216
    3. ',' → logprob: -4.077563285827637
    4. ')
' → logprob: -5.702563285827637
    5. '
' → logprob: -6.077563285827637
    6. ' ' → logprob: -6.702563285827637
    7. '"""' → logprob: -7.077563285827637
    8. 'def' → logprob: -7.202563285827637
    9. ',
' → logprob: -7.577563285827637
    10. '"' → logprob: -7.827563285827637

Token 191: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02247844822704792
    2. 'T' → logprob: -4.7724785804748535
    3. ' t' → logprob: -4.8974785804748535
    4. 'h' → logprob: -5.8974785804748535
    5. 'hand' → logprob: -6.3974785804748535
    6. 'seq' → logprob: -7.7724785804748535
    7. 'hands' → logprob: -8.272478103637695
    8. '   ' → logprob: -9.147478103637695
    9. 'a' → logprob: -9.709978103637695
    10. 'f' → logprob: -9.772478103637695

Token 192: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02679402381181717
    2. '=' → logprob: -3.651793956756592
    3. 's' → logprob: -8.77679443359375
    4. ' ' → logprob: -8.90179443359375
    5. ')' → logprob: -9.77679443359375
    6. 'ypes' → logprob: -10.77679443359375
    7. '   ' → logprob: -11.15179443359375
    8. 'imes' → logprob: -11.27679443359375
    9. '  ' → logprob: -11.40179443359375
    10. ' =
' → logprob: -11.40179443359375

Token 193: ' sé' (ID: 7462)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9154011011123657
    2. ' sys' → logprob: -1.1654011011123657
    3. 'input' → logprob: -1.6654011011123657
    4. 'sys' → logprob: -3.165400981903076
    5. ' [' → logprob: -4.040400981903076
    6. '[]' → logprob: -4.040400981903076
    7. ' list' → logprob: -5.165400981903076
    8. '[' → logprob: -5.665400981903076
    9. 'list' → logprob: -5.665400981903076
    10. ' []' → logprob: -5.665400981903076

Token 194: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.02317885123193264
    2. 'rie' → logprob: -4.023179054260254
    3. 'q' → logprob: -5.648179054260254
    4. 'quences' → logprob: -6.773179054260254
    5. 'ries' → logprob: -9.023179054260254
    6. 'r' → logprob: -9.648179054260254
    7. 'QUENCE' → logprob: -9.773179054260254
    8. 'que' → logprob: -9.898179054260254
    9. '   ' → logprob: -10.898179054260254
    10. 'ance' → logprob: -11.648179054260254

Token 195: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.456839919090271
    2. ' de' → logprob: -1.456839919090271
    3. ' =' → logprob: -2.2068400382995605
    4. ' ' → logprob: -5.0818400382995605
    5. ' d' → logprob: -5.7068400382995605
    6. 's' → logprob: -6.0818400382995605
    7. 'des' → logprob: -6.2068400382995605
    8. ' of' → logprob: -6.2068400382995605
    9. 'de' → logprob: -6.7068400382995605
    10. '_des' → logprob: -6.9568400382995605

Token 196: ' coups' (ID: 98942)
  Prédit: ' coups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coups' → logprob: -0.018619973212480545
    2. ' coup' → logprob: -5.143620014190674
    3. 'c' → logprob: -5.393620014190674
    4. ' mouvements' → logprob: -6.268620014190674
    5. ' gestes' → logprob: -6.768620014190674
    6. ' advers' → logprob: -7.143620014190674
    7. 'cou' → logprob: -7.393620014190674
    8. ' tours' → logprob: -7.643620014190674
    9. 'm' → logprob: -8.268619537353516
    10. ' mains' → logprob: -8.393619537353516

Token 197: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326205730438232
    2. '_j' → logprob: -1.8826205730438232
    3. '   ' → logprob: -2.3826205730438232
    4. ' ' → logprob: -2.5076205730438232
    5. 'jou' → logprob: -3.7576205730438232
    6. '_' → logprob: -4.007620811462402
    7. '[]' → logprob: -4.257620811462402
    8. '\' → logprob: -5.007620811462402
    9. '  
' → logprob: -5.007620811462402
    10. '\n' → logprob: -5.132620811462402

Token 198: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.28726351261138916
    2. 'l' → logprob: -1.4122635126113892
    3. ' advers' → logprob: -6.7872633934021
    4. ' sys' → logprob: -7.0372633934021
    5. 'op' → logprob: -7.1622633934021
    6. ' la' → logprob: -7.5372633934021
    7. 'input' → logprob: -7.7872633934021
    8. ' input' → logprob: -8.037263870239258
    9. 'jou' → logprob: -8.162263870239258
    10. 'la' → logprob: -8.162263870239258

Token 199: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.05151611566543579
    2. 'ad' → logprob: -3.426516056060791
    3. ''' → logprob: -4.801516056060791
    4. ''utilisateur' → logprob: -5.676516056060791
    5. 'a' → logprob: -6.426516056060791
    6. 'jou' → logprob: -6.926516056060791
    7. '   ' → logprob: -7.551516056060791
    8. ' advers' → logprob: -7.801516056060791
    9. '’ad' → logprob: -7.801516056060791
    10. '')' → logprob: -8.05151653289795

Token 200: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.0009761215187609196
    2. 'v' → logprob: -8.1259765625
    3. 'ver' → logprob: -8.1259765625
    4. 'verse' → logprob: -8.2509765625
    5. ' vers' → logprob: -9.5009765625
    6. 'd' → logprob: -11.3759765625
    7. 'Vers' → logprob: -11.7509765625
    8. 've' → logprob: -12.2509765625
    9. 'vs' → logprob: -12.8759765625
    10. 'j' → logprob: -12.8759765625

Token 201: 'aire' (ID: 8189)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.27501997351646423
    2. '   ' → logprob: -2.275019884109497
    3. 'enant' → logprob: -3.400019884109497
    4. 'ant' → logprob: -3.900019884109497
    5. 'ent' → logprob: -4.275020122528076
    6. 'e' → logprob: -4.650020122528076
    7. 'eur' → logprob: -4.650020122528076
    8. 'uent' → logprob: -5.400020122528076
    9. 'resse' → logprob: -5.400020122528076
    10. 'ponent' → logprob: -5.525020122528076

Token 202: ' sous' (ID: 14487)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09666206687688828
    2. '   ' → logprob: -2.7216620445251465
    3. '
' → logprob: -4.5966620445251465
    4. '=' → logprob: -4.8466620445251465
    5. '):
' → logprob: -6.8466620445251465
    6. '    
' → logprob: -6.9716620445251465
    7. ' =
' → logprob: -6.9716620445251465
    8. '=
' → logprob: -7.3466620445251465
    9. 'def' → logprob: -7.5966620445251465
    10. 'n' → logprob: -7.7216620445251465

Token 203: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.03927474468946457
    2. 'forme' → logprob: -3.6642746925354004
    3. ' form' → logprob: -4.5392746925354
    4. 'form' → logprob: -7.4142746925354
    5. 'str' → logprob: -7.9142746925354
    6. ' ' → logprob: -8.164275169372559
    7. 'chaine' → logprob: -8.414275169372559
    8. ' forma' → logprob: -8.664275169372559
    9. ' la' → logprob: -9.164275169372559
    10. 'forma' → logprob: -9.164275169372559

Token 204: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0005984273157082498
    2. ' de' → logprob: -8.000597953796387
    3. 'd' → logprob: -8.250597953796387
    4. 'de' → logprob: -13.750597953796387
    5. 's' → logprob: -15.500597953796387
    6. ' ' → logprob: -15.750597953796387
    7. ' string' → logprob: -15.750597953796387
    8. ' of' → logprob: -16.250598907470703
    9. 'string' → logprob: -17.250598907470703
    10. 'str' → logprob: -17.250598907470703

Token 205: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5614414215087891
    2. ' chaîne' → logprob: -1.436441421508789
    3. 'str' → logprob: -2.561441421508789
    4. ' string' → logprob: -3.811441421508789
    5. ' chaine' → logprob: -3.936441421508789
    6. 'string' → logprob: -4.061441421508789
    7. 's' → logprob: -4.186441421508789
    8. 'cha' → logprob: -4.311441421508789
    9. ' str' → logprob: -4.436441421508789
    10. 'une' → logprob: -5.436441421508789

Token 206: ' ('' (ID: 9906)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08161403238773346
    2. '
' → logprob: -3.3316140174865723
    3. '    
' → logprob: -3.4566140174865723
    4. ' =' → logprob: -5.206614017486572
    5. '  
' → logprob: -6.706614017486572
    6. '   
' → logprob: -7.581614017486572
    7. ',' → logprob: -7.831614017486572
    8. '=' → logprob: -7.831614017486572
    9. ')
' → logprob: -8.08161449432373
    10. ' 
' → logprob: -8.20661449432373

Token 207: 'r' (ID: 81)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7656154632568359
    2. 'P' → logprob: -1.890615463256836
    3. 'R' → logprob: -2.140615463256836
    4. 'r' → logprob: -2.265615463256836
    5. '')' → logprob: -2.640615463256836
    6. 'p' → logprob: -2.765615463256836
    7. '"' → logprob: -5.140615463256836
    8. '''' → logprob: -5.640615463256836
    9. ''r' → logprob: -6.390615463256836
    10. 'PS' → logprob: -6.515615463256836

Token 208: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -1.1634877920150757
    2. 'p' → logprob: -1.5384877920150757
    3. 's' → logprob: -1.6634877920150757
    4. 'ps' → logprob: -2.0384879112243652
    5. ''' → logprob: -2.1634879112243652
    6. 't' → logprob: -4.413487911224365
    7. 'sp' → logprob: -5.413487911224365
    8. ''),' → logprob: -5.913487911224365
    9. 'r' → logprob: -6.038487911224365
    10. '').' → logprob: -6.413487911224365

Token 209: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6305689215660095
    2. ' s' → logprob: -1.0055689811706543
    3. ' p' → logprob: -3.1305689811706543
    4. 'p' → logprob: -3.8805689811706543
    5. ' '' → logprob: -4.130568981170654
    6. ''s' → logprob: -4.880568981170654
    7. ' ' → logprob: -5.255568981170654
    8. ''' → logprob: -5.380568981170654
    9. ''p' → logprob: -6.130568981170654
    10. '   ' → logprob: -7.005568981170654

Token 210: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17976832389831543
    2. 'p' → logprob: -1.8047683238983154
    3. ' s' → logprob: -11.429768562316895
    4. '')' → logprob: -12.679768562316895
    5. ' p' → logprob: -13.304768562316895
    6. '

' → logprob: -13.304768562316895
    7. '
' → logprob: -13.804768562316895
    8. '"' → logprob: -13.929768562316895
    9. ''' → logprob: -14.179768562316895
    10. ' ' → logprob: -14.304768562316895

Token 211: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.17851682007312775
    2. ''' → logprob: -2.5535168647766113
    3. '')' → logprob: -2.5535168647766113
    4. ',' → logprob: -5.803516864776611
    5. 'r' → logprob: -5.803516864776611
    6. ')' → logprob: -7.553516864776611
    7. 'p' → logprob: -7.678516864776611
    8. '','' → logprob: -8.553516387939453
    9. ' ',' → logprob: -8.678516387939453
    10. 't' → logprob: -9.428516387939453

Token 212: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35527166724205017
    2. ' '' → logprob: -1.8552716970443726
    3. ''p' → logprob: -1.9802716970443726
    4. ''r' → logprob: -6.355271816253662
    5. ' p' → logprob: -6.980271816253662
    6. 'p' → logprob: -7.355271816253662
    7. ''i' → logprob: -8.605271339416504
    8. ''t' → logprob: -8.730271339416504
    9. ''q' → logprob: -9.230271339416504
    10. ')' → logprob: -9.355271339416504

Token 213: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004031441640108824
    2. ''p' → logprob: -8.00040340423584
    3. ' p' → logprob: -9.62540340423584
    4. ''' → logprob: -13.62540340423584
    5. '')' → logprob: -14.75040340423584
    6. ' '' → logprob: -17.125402450561523
    7. '	p' → logprob: -17.625402450561523
    8. '
' → logprob: -17.750402450561523
    9. '_p' → logprob: -17.875402450561523
    10. 'r' → logprob: -17.875402450561523

Token 214: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.14625070989131927
    2. '')
' → logprob: -2.0212507247924805
    3. ''' → logprob: -6.1462507247924805
    4. ')' → logprob: -8.14625072479248
    5. '')
' → logprob: -8.52125072479248
    6. '")' → logprob: -8.52125072479248
    7. 'r' → logprob: -8.77125072479248
    8. '')

' → logprob: -9.02125072479248
    9. '')"' → logprob: -9.14625072479248
    10. 't' → logprob: -10.02125072479248

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011256840080022812
    2. ')' → logprob: -4.636256694793701
    3. '"""' → logprob: -6.886256694793701
    4. '
' → logprob: -8.38625717163086
    5. ')
' → logprob: -9.63625717163086
    6. '"' → logprob: -9.88625717163086
    7. '")' → logprob: -10.51125717163086
    8. '"""
' → logprob: -10.76125717163086
    9. '    
' → logprob: -10.88625717163086
    10. '""' → logprob: -11.51125717163086

Token 216: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02452155202627182
    2. '
' → logprob: -4.524521350860596
    3. '"""' → logprob: -5.399521350860596
    4. '"""
' → logprob: -5.524521350860596
    5. '    
' → logprob: -6.649521350860596
    6. 'n' → logprob: -6.899521350860596
    7. ')' → logprob: -7.399521350860596
    8. ' """
' → logprob: -7.899521350860596
    9. ')
' → logprob: -7.899521350860596
    10. '""' → logprob: -8.024521827697754

Token 217: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.01187466736882925
    2. ' ie' → logprob: -5.511874675750732
    3. 'ies' → logprob: -5.761874675750732
    4. 'i' → logprob: -6.261874675750732
    5. '   ' → logprob: -6.261874675750732
    6. 'u' → logprob: -8.386874198913574
    7. 'ur' → logprob: -8.636874198913574
    8. 'e' → logprob: -8.886874198913574
    9. 'ir' → logprob: -10.636874198913574
    10. 'ant' → logprob: -10.761874198913574

Token 218: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.04336681589484215
    2. ':' → logprob: -3.4183669090270996
    3. ' :
' → logprob: -4.6683669090271
    4. ':
' → logprob: -8.543366432189941
    5. ' ' → logprob: -10.543366432189941
    6. ' :
' → logprob: -10.918366432189941
    7. ' ' → logprob: -11.293366432189941
    8. '   ' → logprob: -11.418366432189941
    9. ' :

' → logprob: -11.418366432189941
    10. ' =' → logprob: -12.168366432189941

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007485945709049702
    2. '    ' → logprob: -5.007485866546631
    3. ' ' → logprob: -8.507486343383789
    4. '  ' → logprob: -9.132486343383789
    5. ' ' → logprob: -9.257486343383789
    6. '   ' → logprob: -9.632486343383789
    7. ' None' → logprob: -10.007486343383789
    8. '   ' → logprob: -10.132486343383789
    9. ' def' → logprob: -10.257486343383789
    10. '"' → logprob: -10.882486343383789

Token 220: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017507405951619148
    2. '    ' → logprob: -4.267507553100586
    3. ' None' → logprob: -7.267507553100586
    4. ' ' → logprob: -7.892507553100586
    5. ' """
' → logprob: -7.892507553100586
    6. ' def' → logprob: -8.142507553100586
    7. '  ' → logprob: -8.392507553100586
    8. ' 
' → logprob: -8.642507553100586
    9. '    
' → logprob: -8.642507553100586
    10. ' ' → logprob: -8.767507553100586

Token 221: ' Aff' (ID: 13741)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05734824016690254
    2. '   ' → logprob: -3.4323482513427734
    3. 'int' → logprob: -4.182348251342773
    4. ' score' → logprob: -6.432348251342773
    5. ' print' → logprob: -6.682348251342773
    6. ' None' → logprob: -6.807348251342773
    7. ' max' → logprob: -7.432348251342773
    8. ' return' → logprob: -7.557348251342773
    9. ' l' → logprob: -7.807348251342773
    10. ' le' → logprob: -7.932348251342773

Token 222: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -1.0405381917953491
    2. 'ichage' → logprob: -1.0405381917953491
    3. 'iche' → logprob: -1.4155381917953491
    4. 'ich' → logprob: -3.4155383110046387
    5. 'ic' → logprob: -4.915538311004639
    6. '#' → logprob: -5.290538311004639
    7. 'iché' → logprob: -5.415538311004639
    8. 'ice' → logprob: -8.79053783416748
    9. 'i' → logprob: -8.91553783416748
    10. 'ichier' → logprob: -8.91553783416748

Token 223: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2811223566532135
    2. ' la' → logprob: -1.9061223268508911
    3. '   ' → logprob: -3.2811224460601807
    4. '(' → logprob: -3.9061224460601807
    5. ' ' → logprob: -4.406122207641602
    6. ' l' → logprob: -4.656122207641602
    7. '(max' → logprob: -5.031122207641602
    8. 'max' → logprob: -6.281122207641602
    9. ' the' → logprob: -6.406122207641602
    10. ' maximal' → logprob: -6.656122207641602

Token 224: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.002451161155477166
    2. 'score' → logprob: -6.502450942993164
    3. ' ' → logprob: -8.002450942993164
    4. '   ' → logprob: -8.752450942993164
    5. ' meilleur' → logprob: -8.752450942993164
    6. ' maximum' → logprob: -8.752450942993164
    7. ' nombre' → logprob: -10.002450942993164
    8. ' code' → logprob: -10.752450942993164
    9. ' résultat' → logprob: -10.877450942993164
    10. ' ' → logprob: -11.252450942993164

Token 225: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.35328948497772217
    2. 'max' → logprob: -1.9782894849777222
    3. '_max' → logprob: -2.8532896041870117
    4. '   ' → logprob: -3.3532896041870117
    5. ' max' → logprob: -4.103289604187012
    6. ' ' → logprob: -4.228289604187012
    7. '_' → logprob: -4.353289604187012
    8. ' maximum' → logprob: -5.478289604187012
    9. ' maximale' → logprob: -5.603289604187012
    10. ' 
' → logprob: -5.853289604187012

Token 226: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.14597921073436737
    2. ' possible' → logprob: -2.145979166030884
    3. '_possible' → logprob: -4.770979404449463
    4. '   ' → logprob: -5.395979404449463
    5. 'poss' → logprob: -5.645979404449463
    6. '    
' → logprob: -7.895979404449463
    7. '\n' → logprob: -8.145978927612305
    8. ' achievable' → logprob: -9.145978927612305
    9. '<|end|>' → logprob: -9.145978927612305
    10. '\' → logprob: -9.270978927612305

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12672239542007446
    2. '.' → logprob: -2.6267223358154297
    3. '    
' → logprob: -4.37672233581543
    4. 'def' → logprob: -4.50172233581543
    5. ',' → logprob: -5.37672233581543
    6. ')' → logprob: -5.37672233581543
    7. '"""' → logprob: -5.75172233581543
    8. '```' → logprob: -6.12672233581543
    9. '
' → logprob: -6.37672233581543
    10. '"""
' → logprob: -6.50172233581543

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18619948625564575
    2. ')' → logprob: -1.936199426651001
    3. '"""' → logprob: -4.43619966506958
    4. ')
' → logprob: -5.18619966506958
    5. '"""
' → logprob: -5.31119966506958
    6. '
' → logprob: -6.31119966506958
    7. '"' → logprob: -7.81119966506958
    8. '")' → logprob: -8.436199188232422
    9. '```' → logprob: -8.561199188232422
    10. '    ' → logprob: -8.686199188232422

Token 229: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6820988655090332
    2. '"""
' (adapté à ' """
') → logprob: -0.9320988655090332
    3. '"""' → logprob: -2.557098865509033
    4. ' """
' → logprob: -5.057098865509033
    5. ')
' → logprob: -5.182098865509033
    6. ')' → logprob: -6.057098865509033
    7. '
' → logprob: -6.307098865509033
    8. '    ' → logprob: -6.807098865509033
    9. '"""

' → logprob: -6.932098865509033
    10. ' """' → logprob: -6.932098865509033

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0779888853430748
    2. 'n' → logprob: -2.702988862991333
    3. '    
' → logprob: -5.327989101409912
    4. '
' → logprob: -5.952989101409912
    5. ' n' → logprob: -8.327988624572754
    6. '	n' → logprob: -8.827988624572754
    7. 'import' → logprob: -9.577988624572754
    8. '    ' → logprob: -10.077988624572754
    9. ' 
' → logprob: -11.077988624572754
    10. ',n' → logprob: -11.702988624572754

Token 231: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0096707409247756
    2. '   ' → logprob: -4.759670734405518
    3. ' n' → logprob: -6.884670734405518
    4. '#' (adapté à ' #') → logprob: -11.509671211242676
    5. '
' → logprob: -11.634671211242676
    6. 'import' → logprob: -12.134671211242676
    7. '    
' → logprob: -12.634671211242676
    8. '	n' → logprob: -12.759671211242676
    9. 'input' → logprob: -14.634671211242676
    10. '(n' → logprob: -14.759671211242676

Token 232: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020457562059164047
    2. ' n' → logprob: -4.145457744598389
    3. '   ' → logprob: -5.770457744598389
    4. 'input' → logprob: -6.895457744598389
    5. '#' → logprob: -8.52045726776123
    6. 'import' → logprob: -10.39545726776123
    7. ' input' → logprob: -10.52045726776123
    8. '	n' → logprob: -11.77045726776123
    9. '(n' → logprob: -12.27045726776123
    10. 'def' → logprob: -13.02045726776123

Token 233: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24504317343235016
    2. 'n' → logprob: -2.1200432777404785
    3. '(' → logprob: -2.6200432777404785
    4. '()' → logprob: -4.6200432777404785
    5. ' n' → logprob: -5.2450432777404785
    6. '(n' → logprob: -5.2450432777404785
    7. ' =' → logprob: -6.4950432777404785
    8. ' (' → logprob: -6.6200432777404785
    9. '(
' → logprob: -7.8700432777404785
    10. '  ' → logprob: -8.62004280090332

Token 234: ' paramètres' (ID: 130696)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0055478475987911224
    2. ' n' → logprob: -5.255548000335693
    3. '   ' → logprob: -8.755547523498535
    4. 'l' → logprob: -10.255547523498535
    5. 'ent' → logprob: -10.630547523498535
    6. 'import' → logprob: -11.255547523498535
    7. '#' → logprob: -11.755547523498535
    8. 'int' → logprob: -11.880547523498535
    9. 'val' → logprob: -12.005547523498535
    10. ' ' → logprob: -12.130547523498535

Token 235: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3897358179092407
    2. 'n' → logprob: -1.1397358179092407
    3. ' n' → logprob: -6.139735698699951
    4. '    
' → logprob: -7.514735698699951
    5. '
' → logprob: -9.51473617553711
    6. '	n' → logprob: -10.51473617553711
    7. '(n' → logprob: -10.88973617553711
    8. '  ' → logprob: -12.26473617553711
    9. ',n' → logprob: -12.26473617553711
    10. '\n' → logprob: -12.26473617553711

Token 236: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024071864783763885
    2. ' =' → logprob: -4.27407169342041
    3. ' ,' → logprob: -4.64907169342041
    4. '=' → logprob: -8.52407169342041
    5. ',n' → logprob: -10.64907169342041
    6. ' ' → logprob: -10.89907169342041
    7. ',p' → logprob: -11.52407169342041
    8. ',k' → logprob: -11.64907169342041
    9. ',r' → logprob: -11.77407169342041
    10. ',
' → logprob: -12.27407169342041

Token 237: 'nombre' (ID: 28576)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7622226476669312
    2. ',' → logprob: -1.0122226476669312
    3. ')' → logprob: -2.2622227668762207
    4. 'int' → logprob: -3.6372227668762207
    5. '=int' → logprob: -4.137222766876221
    6. '   ' → logprob: -5.887222766876221
    7. ' ),' → logprob: -6.012222766876221
    8. ',int' → logprob: -6.012222766876221
    9. '=' → logprob: -6.137222766876221
    10. ',n' → logprob: -6.387222766876221

Token 238: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.257242888212204
    2. '_total' → logprob: -2.7572429180145264
    3. ' =' → logprob: -3.1322429180145264
    4. '_' → logprob: -3.3822429180145264
    5. '_de' → logprob: -3.6322429180145264
    6. '_des' → logprob: -4.507242679595947
    7. ' ,' → logprob: -4.757242679595947
    8. ')' → logprob: -5.007242679595947
    9. '   ' → logprob: -5.382242679595947
    10. '=' → logprob: -5.507242679595947

Token 239: ' coups' (ID: 98942)
  Prédit: ' rounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rounds' → logprob: -0.5205879807472229
    2. 'round' → logprob: -1.3955879211425781
    3. 'part' → logprob: -3.020587921142578
    4. ')' → logprob: -3.395587921142578
    5. 'r' → logprob: -3.770587921142578
    6. 'l' → logprob: -4.770587921142578
    7. 'jou' → logprob: -5.020587921142578
    8. ' joueurs' → logprob: -5.645587921142578
    9. 'rou' → logprob: -5.770587921142578
    10. 'participants' → logprob: -5.770587921142578

Token 240: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03499627113342285
    2. '),' → logprob: -4.284996032714844
    3. ' ,' → logprob: -4.409996032714844
    4. ' ),' → logprob: -5.409996032714844
    5. ' =' → logprob: -6.284996032714844
    6. '   ' → logprob: -7.909996032714844
    7. ',n' → logprob: -8.034996032714844
    8. ')' → logprob: -8.034996032714844
    9. 's' → logprob: -8.659996032714844
    10. 'n' → logprob: -8.784996032714844

Token 241: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5760862231254578
    2. ' k' → logprob: -0.8260862231254578
    3. '   ' → logprob: -9.326086044311523
    4. '	k' → logprob: -11.076086044311523
    5. ',k' → logprob: -11.701086044311523
    6. ',' → logprob: -11.951086044311523
    7. ' n' → logprob: -12.326086044311523
    8. ' 
' → logprob: -12.826086044311523
    9. ' ' → logprob: -12.951086044311523
    10. '    
' → logprob: -13.076086044311523

Token 242: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003113068640232086
    2. ' =' → logprob: -6.128113269805908
    3. ' ,' → logprob: -8.00311279296875
    4. '=' → logprob: -8.12811279296875
    5. ',n' → logprob: -8.75311279296875
    6. ',k' → logprob: -10.00311279296875
    7. ',p' → logprob: -10.37811279296875
    8. ',r' → logprob: -11.00311279296875
    9. ' ' → logprob: -11.50311279296875
    10. ',int' → logprob: -12.00311279296875

Token 243: 'contr' (ID: 8677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5571224093437195
    2. ' )' → logprob: -1.1821224689483643
    3. 'int' → logprob: -3.1821224689483643
    4. ' n' → logprob: -3.5571224689483643
    5. ' int' → logprob: -3.5571224689483643
    6. ' ' → logprob: -5.432122230529785
    7. ' ' → logprob: -5.557122230529785
    8. ' nombre' → logprob: -6.057122230529785
    9. ',' → logprob: -6.307122230529785
    10. 'n' → logprob: -6.307122230529785

Token 244: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.03183764964342117
    2. 'a' → logprob: -4.281837463378906
    3. 'ôle' → logprob: -4.531837463378906
    4. '#' → logprob: -6.531837463378906
    5. 'aint' → logprob: -7.156837463378906
    6. '```' → logprob: -7.281837463378906
    7. 'o' → logprob: -7.406837463378906
    8. '``' → logprob: -7.531837463378906
    9. 'aine' → logprob: -7.656837463378906
    10. '' → logprob: -8.406837463378906

Token 245: ' d' (ID: 272)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9479837417602539
    2. ',' → logprob: -1.572983741760254
    3. ')' → logprob: -1.947983741760254
    4. ' ),' → logprob: -2.572983741760254
    5. ' de' → logprob: -2.697983741760254
    6. '=' → logprob: -3.447983741760254
    7. ' =' → logprob: -3.572983741760254
    8. ' )' → logprob: -3.947983741760254
    9. 'de' → logprob: -4.447983741760254
    10. '   ' → logprob: -4.697983741760254

Token 246: ''inter' (ID: 55731)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2778831422328949
    2. ''inter' → logprob: -1.6528831720352173
    3. ''espace' → logprob: -4.902883052825928
    4. ''' → logprob: -5.152883052825928
    5. ''entrée' → logprob: -5.652883052825928
    6. ''utilisation' → logprob: -5.902883052825928
    7. ''ex' → logprob: -5.902883052825928
    8. '')' → logprob: -6.152883052825928
    9. ''in' → logprob: -6.152883052825928
    10. ''é' → logprob: -6.152883052825928

Token 247: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009588662651367486
    2. 'val' → logprob: -7.7509589195251465
    3. 'ruption' → logprob: -8.125958442687988
    4. 'dic' → logprob: -10.000958442687988
    5. 'dict' → logprob: -10.250958442687988
    6. 'dit' → logprob: -10.500958442687988
    7. 'v' → logprob: -11.125958442687988
    8. 'vention' → logprob: -11.250958442687988
    9. 'polation' → logprob: -11.375958442687988
    10. 'n' → logprob: -11.500958442687988

Token 248: 'iction' (ID: 4090)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011141903698444366
    2. 'dit' → logprob: -4.886141777038574
    3. 'ite' → logprob: -6.511141777038574
    4. 'iction' → logprob: -6.636141777038574
    5. 'dict' → logprob: -9.011141777038574
    6. ')' → logprob: -9.261141777038574
    7. 'dis' → logprob: -9.511141777038574
    8. 'n' → logprob: -9.636141777038574
    9. 'it' → logprob: -9.636141777038574
    10. '   ' → logprob: -9.761141777038574

Token 249: ' d' (ID: 272)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8411116600036621
    2. ')' → logprob: -1.341111660003662
    3. ',' → logprob: -1.466111660003662
    4. ' ),' → logprob: -3.216111660003662
    5. ' )' → logprob: -4.216111660003662
    6. '   ' → logprob: -4.216111660003662
    7. ' =' → logprob: -6.466111660003662
    8. '=' → logprob: -6.466111660003662
    9. ' ,' → logprob: -6.716111660003662
    10. 'n' → logprob: -7.716111660003662

Token 250: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.6183009147644043
    2. ''utilisation' → logprob: -2.8683009147644043
    3. ''une' → logprob: -3.1183009147644043
    4. 'e' → logprob: -3.3683009147644043
    5. ' répét' → logprob: -3.3683009147644043
    6. ' usage' → logprob: -3.3683009147644043
    7. ')' → logprob: -3.7433009147644043
    8. ''' → logprob: -3.7433009147644043
    9. 'un' → logprob: -3.8683009147644043
    10. ' )' → logprob: -3.9933009147644043

Token 251: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.43372318148612976
    2. 'm' → logprob: -1.8087232112884521
    3. 'c' → logprob: -2.808723211288452
    4. 'same' → logprob: -2.933723211288452
    5. ' coup' → logprob: -3.433723211288452
    6. ' even' → logprob: -4.683722972869873
    7. ' same' → logprob: -4.808722972869873
    8. 'even' → logprob: -5.308722972869873
    9. '```' → logprob: -5.433722972869873
    10. 'es' → logprob: -5.558722972869873

Token 252: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2877838611602783
    2. ')' → logprob: -2.2877838611602783
    3. '_c' → logprob: -2.4127838611602783
    4. ' coup' → logprob: -4.037783622741699
    5. '_' → logprob: -4.662783622741699
    6. '```' → logprob: -4.787783622741699
    7. ' )' → logprob: -5.162783622741699
    8. 'cou' → logprob: -6.037783622741699
    9. 'move' → logprob: -6.537783622741699
    10. 'es' → logprob: -6.662783622741699

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40539097785949707
    2. '),' → logprob: -1.780390977859497
    3. ',' → logprob: -2.530390977859497
    4. ' )' → logprob: -2.780390977859497
    5. ' ),' → logprob: -4.030390739440918
    6. '   ' → logprob: -6.155390739440918
    7. ' ,' → logprob: -6.655390739440918
    8. '=' → logprob: -8.155390739440918
    9. ' =' → logprob: -8.405390739440918
    10. ' après' → logprob: -8.655390739440918

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6595345735549927
    2. ',' → logprob: -0.7845345735549927
    3. ' =' → logprob: -3.784534454345703
    4. ',n' → logprob: -6.784534454345703
    5. '=' → logprob: -7.159534454345703
    6. 'n' → logprob: -7.284534454345703
    7. ' ,' → logprob: -7.409534454345703
    8. '    
' → logprob: -8.534534454345703
    9. ' n' → logprob: -8.784534454345703
    10. ')' → logprob: -9.409534454345703

Token 255: ' n' (ID: 297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3130478858947754
    2. ' =' → logprob: -1.5630478858947754
    3. ' ,' → logprob: -3.8130478858947754
    4. 'n' (adapté à ' n') → logprob: -3.9380478858947754
    5. ' n' → logprob: -4.688047885894775
    6. '=' → logprob: -5.563047885894775
    7. ',n' → logprob: -6.063047885894775
    8. '   ' → logprob: -6.188047885894775
    9. ' ' → logprob: -8.688047409057617
    10. '=n' → logprob: -10.313047409057617

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.360996485454962e-05
    2. ' ,' → logprob: -10.7500638961792
    3. ',k' → logprob: -10.8750638961792
    4. ' =' → logprob: -11.5000638961792
    5. '=' → logprob: -11.5000638961792
    6. ',n' → logprob: -13.8750638961792
    7. ',
' → logprob: -14.2500638961792
    8. '   ' → logprob: -14.3750638961792
    9. ')' → logprob: -15.1250638961792
    10. ',p' → logprob: -16.375062942504883

Token 257: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.08915647119283676
    2. 'k' → logprob: -2.46415638923645
    3. ' ' → logprob: -8.589156150817871
    4. '<|end|>' → logprob: -11.214156150817871
    5. ' ' → logprob: -11.589156150817871
    6. '=k' → logprob: -13.714156150817871
    7. '	k' → logprob: -13.839156150817871
    8. ' =' → logprob: -13.839156150817871
    9. ' 
' → logprob: -14.089156150817871
    10. ' n' → logprob: -14.214156150817871

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932815313339233
    2. ' =' → logprob: -0.6932815313339233
    3. ',' → logprob: -8.943281173706055
    4. '=input' → logprob: -13.318281173706055
    5. ')' → logprob: -14.443281173706055
    6. '=int' → logprob: -14.818281173706055
    7. ')=' → logprob: -15.193281173706055
    8. '=

' → logprob: -15.568281173706055
    9. ' =
' → logprob: -15.693281173706055
    10. ' ' → logprob: -15.818281173706055

Token 259: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0031793788075447083
    2. 'map' → logprob: -5.753179550170898
    3. ' ' → logprob: -14.128179550170898
    4. '	map' → logprob: -14.753179550170898
    5. ' list' → logprob: -15.378179550170898
    6. '[' → logprob: -16.7531795501709
    7. '   ' → logprob: -17.1281795501709
    8. ' ' → logprob: -17.1281795501709
    9. '(map' → logprob: -18.2531795501709
    10. ' sys' → logprob: -18.3781795501709

Token 260: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007996133528649807
    2. '(' → logprob: -5.007996082305908
    3. '(str' → logprob: -6.757996082305908
    4. '(input' → logprob: -9.257996559143066
    5. '(list' → logprob: -11.507996559143066
    6. '(in' → logprob: -12.257996559143066
    7. '(
' → logprob: -13.632996559143066
    8. '(tuple' → logprob: -13.882996559143066
    9. '(lambda' → logprob: -13.882996559143066
    10. 'int' → logprob: -14.007996559143066

Token 261: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.043622925877571106
    2. 'input' → logprob: -3.2936229705810547
    3. '(sys' → logprob: -6.043622970581055
    4. ')' → logprob: -6.668622970581055
    5. '(' → logprob: -7.043622970581055
    6. ',input' → logprob: -7.293622970581055
    7. ' input' → logprob: -8.418622970581055
    8. 'sys' → logprob: -9.793622970581055
    9. ',' → logprob: -10.043622970581055
    10. '=input' → logprob: -10.668622970581055

Token 262: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012279117479920387
    2. ' input' → logprob: -4.512279033660889
    3. 'sys' → logprob: -6.762279033660889
    4. ' sys' → logprob: -9.512279510498047
    5. '(input' → logprob: -17.387279510498047
    6. ')' → logprob: -17.637279510498047
    7. ' ' → logprob: -18.262279510498047
    8. '=input' → logprob: -18.262279510498047
    9. ',input' → logprob: -18.637279510498047
    10. 'stdin' → logprob: -19.262279510498047

Token 263: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.36574100604048e-06
    2. '()' → logprob: -12.375004768371582
    3. '())' → logprob: -17.000003814697266
    4. '(' → logprob: -17.125003814697266
    5. ' ().' → logprob: -18.250003814697266
    6. '()
' → logprob: -18.500003814697266
    7. ')' → logprob: -20.375003814697266
    8. '()[' → logprob: -21.125003814697266
    9. '()?.' → logprob: -21.375003814697266
    10. '().
' → logprob: -21.500003814697266

Token 264: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.688212614681106e-05
    2. 'strip' → logprob: -11.000017166137695
    3. 'rstrip' → logprob: -16.375017166137695
    4. '(split' → logprob: -17.250017166137695
    5. ' split' → logprob: -17.375017166137695
    6. 'spl' → logprob: -18.500017166137695
    7. 'read' → logprob: -20.250017166137695
    8. '().' → logprob: -20.875017166137695
    9. ')' → logprob: -21.875017166137695
    10. '.split' → logprob: -21.875017166137695

Token 265: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08246985822916031
    2. ')' → logprob: -2.582469940185547
    3. '()' → logprob: -5.707469940185547
    4. '(' → logprob: -8.332469940185547
    5. '())
' → logprob: -12.707469940185547
    6. '('' → logprob: -12.957469940185547
    7. '()))' → logprob: -13.332469940185547
    8. ' )' → logprob: -13.832469940185547
    9. '))' → logprob: -13.957469940185547
    10. '(','' → logprob: -14.082469940185547

Token 266: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2254151701927185
    2. 'r' → logprob: -1.7254152297973633
    3. '    
' → logprob: -5.350415229797363
    4. 'n' → logprob: -5.475415229797363
    5. '  ' → logprob: -5.600415229797363
    6. ' ' → logprob: -6.225415229797363
    7. '
' → logprob: -6.225415229797363
    8. ' r' → logprob: -6.600415229797363
    9. '	r' → logprob: -6.725415229797363
    10. '  
' → logprob: -6.975415229797363

Token 267: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003896815178450197
    2. '   ' → logprob: -7.875389575958252
    3. ' r' → logprob: -11.62539005279541
    4. '	r' → logprob: -15.00039005279541
    5. '    
' → logprob: -16.125389099121094
    6. 'R' → logprob: -16.250389099121094
    7. '#' → logprob: -17.250389099121094
    8. '  ' → logprob: -17.625389099121094
    9. 'rs' → logprob: -18.125389099121094
    10. ' ' → logprob: -18.250389099121094

Token 268: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.080963092041202e-06
    2. ' r' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '#' (adapté à ' #') → logprob: -15.375004768371582
    5. 'rs' → logprob: -16.7500057220459
    6. 'R' → logprob: -17.3750057220459
    7. '[r' → logprob: -17.7500057220459
    8. '(r' → logprob: -17.8750057220459
    9. '    
' → logprob: -17.8750057220459
    10. '	r' → logprob: -18.0000057220459

Token 269: ' Lecture' (ID: 106534)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006750239408574998
    2. ' r' → logprob: -7.375675201416016
    3. '   ' → logprob: -10.375675201416016
    4. 'R' → logprob: -12.250675201416016
    5. 'rs' → logprob: -12.375675201416016
    6. '#' → logprob: -12.750675201416016
    7. 'points' → logprob: -13.875675201416016
    8. '	r' → logprob: -14.500675201416016
    9. ' ' → logprob: -14.875675201416016
    10. 'score' → logprob: -15.000675201416016

Token 270: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.1782344579696655
    2. 'r' → logprob: -1.5532344579696655
    3. '()' → logprob: -2.053234577178955
    4. '   ' → logprob: -2.428234577178955
    5. ' des' → logprob: -2.428234577178955
    6. 's' → logprob: -2.428234577178955
    7. '(' → logprob: -3.178234577178955
    8. '(r' → logprob: -3.928234577178955
    9. '(n' → logprob: -4.178234577178955
    10. ' de' → logprob: -5.803234577178955

Token 271: ' scores' (ID: 18923)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2692791819572449
    2. ' r' → logprob: -1.7692792415618896
    3. ' points' → logprob: -3.0192792415618896
    4. 'points' → logprob: -4.3942790031433105
    5. ' scores' → logprob: -5.7692790031433105
    6. 'scores' → logprob: -7.8942790031433105
    7. 'p' → logprob: -8.519279479980469
    8. 'params' → logprob: -8.519279479980469
    9. ' p' → logprob: -9.394279479980469
    10. ' ' → logprob: -10.269279479980469

Token 272: ' associés' (ID: 154470)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32900524139404297
    2. ' r' → logprob: -1.329005241394043
    3. ',' → logprob: -4.829005241394043
    4. ' =' → logprob: -5.079005241394043
    5. '   ' → logprob: -7.329005241394043
    6. ',r' → logprob: -8.454005241394043
    7. '=' → logprob: -8.704005241394043
    8. ' ,' → logprob: -8.829005241394043
    9. '	r' → logprob: -9.204005241394043
    10. '=r' → logprob: -10.454005241394043

Token 273: ' :' (ID: 712)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7241349816322327
    2. '   ' → logprob: -1.224134922027588
    3. ' r' → logprob: -2.724134922027588
    4. '(r' → logprob: -2.849134922027588
    5. ' =' → logprob: -2.974134922027588
    6. ',' → logprob: -3.724134922027588
    7. '(' → logprob: -4.974134922027588
    8. ',r' → logprob: -5.349134922027588
    9. '=' → logprob: -6.099134922027588
    10. ' ,' → logprob: -6.349134922027588

Token 274: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005532711511477828
    2. ' r' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.125553131103516
    4. '	r' → logprob: -17.625553131103516
    5. ' ' → logprob: -19.250553131103516
    6. '[r' → logprob: -19.250553131103516
    7. '  ' → logprob: -19.375553131103516
    8. '_r' → logprob: -19.625553131103516
    9. 'R' → logprob: -20.000553131103516
    10. '(r' → logprob: -20.625553131103516

Token 275: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011870148591697216
    2. ' ,' → logprob: -7.001186847686768
    3. ',s' → logprob: -8.626187324523926
    4. ',r' → logprob: -9.376187324523926
    5. ',p' → logprob: -12.501187324523926
    6. ',k' → logprob: -13.001187324523926
    7. 's' → logprob: -13.376187324523926
    8. ',
' → logprob: -13.751187324523926
    9. ',n' → logprob: -13.751187324523926
    10. '‌,' → logprob: -14.876187324523926

Token 276: 'contre' (ID: 26389)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24383503198623657
    2. 'r' → logprob: -2.118834972381592
    3. ')' → logprob: -3.618834972381592
    4. 'rock' → logprob: -3.618834972381592
    5. 'p' → logprob: -3.868834972381592
    6. ' int' → logprob: -5.118834972381592
    7. '   ' → logprob: -5.743834972381592
    8. ',' → logprob: -6.118834972381592
    9. '),' → logprob: -6.493834972381592
    10. ' rock' → logprob: -6.618834972381592

Token 277: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.30502668023109436
    2. 'r' → logprob: -1.805026650428772
    3. ' pierre' → logprob: -3.5550267696380615
    4. 'le' → logprob: -3.6800267696380615
    5. ' p' → logprob: -4.805026531219482
    6. ' la' → logprob: -5.055026531219482
    7. ')' → logprob: -5.180026531219482
    8. 'la' → logprob: -5.680026531219482
    9. '<|end|>' → logprob: -5.805026531219482
    10. ' r' → logprob: -6.055026531219482

Token 278: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8164268136024475
    2. 'r' → logprob: -1.0664267539978027
    3. 's' → logprob: -1.5664267539978027
    4. 'rock' → logprob: -6.316426753997803
    5. '   ' → logprob: -7.316426753997803
    6. '')' → logprob: -8.066427230834961
    7. ' ' → logprob: -8.316427230834961
    8. ''p' → logprob: -8.566427230834961
    9. ' pierre' → logprob: -8.816427230834961
    10. ''' → logprob: -8.878927230834961

Token 279: 'ierre' (ID: 26825)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.6250628232955933
    2. '')' → logprob: -1.2500628232955933
    3. 'ierre' → logprob: -2.500062942504883
    4. ''' → logprob: -2.625062942504883
    5. 'i' → logprob: -4.625062942504883
    6. 'r' → logprob: -5.500062942504883
    7. 'ier' → logprob: -5.500062942504883
    8. 'ie' → logprob: -7.000062942504883
    9. ''),
' → logprob: -7.375062942504883
    10. ' ')' → logprob: -7.625062942504883

Token 280: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.007775325793772936
    2. '),' → logprob: -5.38277530670166
    3. ''' → logprob: -6.25777530670166
    4. ',' → logprob: -7.50777530670166
    5. '')' → logprob: -8.38277530670166
    6. '',' → logprob: -8.75777530670166
    7. ' '' → logprob: -9.50777530670166
    8. ','' → logprob: -9.63277530670166
    9. ')' → logprob: -9.88277530670166
    10. ''),
' → logprob: -10.13277530670166

Token 281: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931613087654114
    2. ' s' → logprob: -0.6931613087654114
    3. '   ' → logprob: -12.193161010742188
    4. ' p' → logprob: -12.818161010742188
    5. 'p' → logprob: -13.193161010742188
    6. ' ' → logprob: -13.443161010742188
    7. ',' → logprob: -14.193161010742188
    8. '    ' → logprob: -14.568161010742188
    9. '  ' → logprob: -14.693161010742188
    10. ' ' → logprob: -14.693161010742188

Token 282: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012990460963919759
    2. ' ,' → logprob: -7.376298904418945
    3. ' (' → logprob: -7.876298904418945
    4. '(' → logprob: -8.376298904418945
    5. '),' → logprob: -11.001298904418945
    6. ')' → logprob: -11.126298904418945
    7. ',p' → logprob: -12.126298904418945
    8. '(p' → logprob: -12.251298904418945
    9. '(int' → logprob: -12.376298904418945
    10. '<|end|>' → logprob: -12.626298904418945

Token 283: 'contre' (ID: 26389)
  Prédit: 'contre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contre' → logprob: -0.3380036950111389
    2. 'int' → logprob: -1.8380036354064941
    3. ' contre' → logprob: -2.213003635406494
    4. ' int' → logprob: -4.088003635406494
    5. 'counter' → logprob: -7.713003635406494
    6. 'cont' → logprob: -7.963003635406494
    7. 'contra' → logprob: -8.963004112243652
    8. ' counter' → logprob: -9.088004112243652
    9. 'against' → logprob: -9.213004112243652
    10. ' ' → logprob: -9.838004112243652

Token 284: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5166029930114746
    2. ''s' → logprob: -1.7666029930114746
    3. ''p' → logprob: -2.1416029930114746
    4. ' '' → logprob: -2.6416029930114746
    5. '   ' → logprob: -3.3916029930114746
    6. ' ' → logprob: -5.766602993011475
    7. ''l' → logprob: -6.516602993011475
    8. '('' → logprob: -7.141602993011475
    9. '  ' → logprob: -7.891602993011475
    10. ''int' → logprob: -7.891602993011475

Token 285: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07324139773845673
    2. ' c' → logprob: -3.0732414722442627
    3. 's' → logprob: -4.073241233825684
    4. 'fe' → logprob: -6.323241233825684
    5. 'p' → logprob: -6.448241233825684
    6. ' s' → logprob: -6.948241233825684
    7. 'sc' → logprob: -7.198241233825684
    8. ' ' → logprob: -7.573241233825684
    9. ''' → logprob: -7.698241233825684
    10. '   ' → logprob: -8.448241233825684

Token 286: 'iseaux' (ID: 131289)
  Prédit: 'iseaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseaux' → logprob: -0.0021098130382597446
    2. 'iseau' → logprob: -7.252110004425049
    3. 's' → logprob: -8.25210952758789
    4. 'o' → logprob: -8.37710952758789
    5. 'a' → logprob: -8.62710952758789
    6. 'i' → logprob: -8.62710952758789
    7. '')' → logprob: -8.75210952758789
    8. ''' → logprob: -9.62710952758789
    9. 'issors' → logprob: -9.62710952758789
    10. 'c' → logprob: -10.00210952758789

Token 287: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.023423777893185616
    2. '),' → logprob: -3.898423671722412
    3. ',' → logprob: -6.023423671722412
    4. ','' → logprob: -8.39842414855957
    5. '   ' → logprob: -9.27342414855957
    6. 'p' → logprob: -10.39842414855957
    7. '',' → logprob: -10.64842414855957
    8. ''' → logprob: -10.64842414855957
    9. ' '' → logprob: -11.27342414855957
    10. 'r' → logprob: -11.27342414855957

Token 288: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00038014890742488205
    2. ' p' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.62537956237793
    4. ' ' → logprob: -18.37537956237793
    5. ',' → logprob: -18.75037956237793
    6. '_p' → logprob: -19.12537956237793
    7. '  ' → logprob: -19.12537956237793
    8. '	p' → logprob: -19.12537956237793
    9. 't' → logprob: -19.37537956237793
    10. ' ' → logprob: -19.50037956237793

Token 289: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24279814958572388
    2. '=' → logprob: -1.617798089981079
    3. ')' → logprob: -4.617798328399658
    4. ',' → logprob: -4.992798328399658
    5. '(' → logprob: -7.992798328399658
    6. ')=' → logprob: -9.3677978515625
    7. '=int' → logprob: -10.1177978515625
    8. ' (' → logprob: -10.7427978515625
    9. '(int' → logprob: -10.8677978515625
    10. ' ' → logprob: -11.3677978515625

Token 290: 'contre' (ID: 26389)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12694795429706573
    2. ' int' → logprob: -2.1269478797912598
    3. '(int' → logprob: -11.501948356628418
    4. '=int' → logprob: -12.251948356628418
    5. '[int' → logprob: -13.376948356628418
    6. ')' → logprob: -14.126948356628418
    7. '	int' → logprob: -14.126948356628418
    8. ',int' → logprob: -14.626948356628418
    9. 'p' → logprob: -14.626948356628418
    10. ']int' → logprob: -14.626948356628418

Token 291: ' '' (ID: 461)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016810661181807518
    2. '(int' → logprob: -4.766810894012451
    3. '('' → logprob: -6.141810894012451
    4. ''' → logprob: -6.141810894012451
    5. ' int' → logprob: -6.266810894012451
    6. ''int' → logprob: -6.766810894012451
    7. 'input' → logprob: -8.766810417175293
    8. '   ' → logprob: -9.016810417175293
    9. ''s' → logprob: -9.141810417175293
    10. '=int' → logprob: -9.516810417175293

Token 292: 'fe' (ID: 2302)
  Prédit: 'fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.15604813396930695
    2. 'p' → logprob: -2.031048059463501
    3. 'papier' → logprob: -4.40604829788208
    4. 'pi' → logprob: -7.65604829788208
    5. 'po' → logprob: -8.531047821044922
    6. '
' → logprob: -9.031047821044922
    7. 'pa' → logprob: -9.156047821044922
    8. 'pap' → logprob: -9.781047821044922
    9. 'pie' → logprob: -10.906047821044922
    10. '"' → logprob: -10.906047821044922

Token 293: 'uille' (ID: 47118)
  Prédit: 'uille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uille' → logprob: -0.12622593343257904
    2. 'u' → logprob: -2.5012259483337402
    3. 'a' → logprob: -4.50122594833374
    4. 'ule' → logprob: -5.50122594833374
    5. '')' → logprob: -5.75122594833374
    6. 'e' → logprob: -6.00122594833374
    7. ')' → logprob: -6.00122594833374
    8. 'ure' → logprob: -6.12622594833374
    9. 'uil' → logprob: -6.50122594833374
    10. 'ile' → logprob: -6.50122594833374

Token 294: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47821736335754395
    2. '')' → logprob: -0.978217363357544
    3. '')
' → logprob: -5.728217124938965
    4. ')
' → logprob: -7.353217124938965
    5. ')')
' → logprob: -9.103217124938965
    6. '   ' → logprob: -10.478217124938965
    7. '')
' → logprob: -10.978217124938965
    8. ''' → logprob: -11.353217124938965
    9. ')'' → logprob: -11.478217124938965
    10. '")' → logprob: -11.603217124938965

Token 295: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25440046191215515
    2. '   ' → logprob: -1.5044004917144775
    3. ',r' → logprob: -7.129400253295898
    4. ' r' → logprob: -7.254400253295898
    5. ',' → logprob: -7.254400253295898
    6. '    
' → logprob: -9.379400253295898
    7. ')' → logprob: -10.004400253295898
    8. '	r' → logprob: -10.629400253295898
    9. '
' → logprob: -10.754400253295898
    10. ' =' → logprob: -11.254400253295898

Token 296: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -11.750009536743164
    3. ' r' → logprob: -13.125009536743164
    4. '    
' → logprob: -18.875009536743164
    5. '	r' → logprob: -19.000009536743164
    6. ',' → logprob: -19.500009536743164
    7. ',r' → logprob: -19.625009536743164
    8. '  ' → logprob: -20.000009536743164
    9. '[r' → logprob: -20.375009536743164
    10. '(r' → logprob: -21.500009536743164

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023631771910004318
    2. ' ,' → logprob: -9.125236511230469
    3. ',s' → logprob: -9.375236511230469
    4. ',p' → logprob: -10.125236511230469
    5. 's' → logprob: -14.375236511230469
    6. '=' → logprob: -14.500236511230469
    7. 'p' → logprob: -15.500236511230469
    8. ',
' → logprob: -15.500236511230469
    9. ',k' → logprob: -15.500236511230469
    10. ',r' → logprob: -15.625236511230469

Token 298: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011047814972698689
    2. ' s' → logprob: -4.511047840118408
    3. 'p' → logprob: -16.76104736328125
    4. ' p' → logprob: -19.51104736328125
    5. '_s' → logprob: -19.76104736328125
    6. '	s' → logprob: -20.63604736328125
    7. '  ' → logprob: -21.26104736328125
    8. 'swer' → logprob: -21.51104736328125
    9. ' ' → logprob: -22.38604736328125
    10. '   ' → logprob: -22.38604736328125

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.889424836728722e-05
    2. ',p' → logprob: -9.375099182128906
    3. '=' → logprob: -11.750099182128906
    4. ' ,' → logprob: -12.125099182128906
    5. 'p' → logprob: -14.750099182128906
    6. ' =' → logprob: -15.250099182128906
    7. ',s' → logprob: -16.000099182128906
    8. ' p' → logprob: -18.000099182128906
    9. ')' → logprob: -18.125099182128906
    10. ',k' → logprob: -18.500099182128906

Token 300: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0067154900170862675
    2. ' p' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.256715774536133
    4. '	p' → logprob: -18.381715774536133
    5. '  ' → logprob: -19.006715774536133
    6. ' ' → logprob: -19.381715774536133
    7. 'and' → logprob: -19.631715774536133
    8. '_p' → logprob: -19.631715774536133
    9. ',p' → logprob: -19.756715774536133
    10. 'int' → logprob: -20.381715774536133

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026302501559257507
    2. ' =' → logprob: -3.6513025760650635
    3. ',' → logprob: -13.651302337646484
    4. ')' → logprob: -14.026302337646484
    5. ')=' → logprob: -15.526302337646484
    6. '=input' → logprob: -17.276302337646484
    7. '＝' → logprob: -17.401302337646484
    8. ' ' → logprob: -18.651302337646484
    9. ' ' → logprob: -18.776302337646484
    10. '=int' → logprob: -18.901302337646484

Token 302: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0380416102707386
    2. ' map' → logprob: -3.288041591644287
    3. '	map' → logprob: -15.788042068481445
    4. '   ' → logprob: -16.538042068481445
    5. '(map' → logprob: -18.038042068481445
    6. '  ' → logprob: -18.038042068481445
    7. ' ' → logprob: -18.163042068481445
    8. '.map' → logprob: -19.288042068481445
    9. '_map' → logprob: -20.288042068481445
    10. 'list' → logprob: -20.538042068481445

Token 303: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.600714161526412e-05
    2. 'int' → logprob: -9.500076293945312
    3. '(' → logprob: -14.250076293945312
    4. '[int' → logprob: -15.000076293945312
    5. '=int' → logprob: -17.125076293945312
    6. ' int' → logprob: -17.250076293945312
    7. ' (' → logprob: -17.375076293945312
    8. '<int' → logprob: -17.625076293945312
    9. ']int' → logprob: -18.875076293945312
    10. ',int' → logprob: -19.125076293945312

Token 304: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23292380571365356
    2. ',int' → logprob: -1.8579237461090088
    3. ',' → logprob: -2.982923746109009
    4. '(' → logprob: -7.857923984527588
    5. ',input' → logprob: -8.10792350769043
    6. 'int' → logprob: -8.85792350769043
    7. '[int' → logprob: -9.10792350769043
    8. '(input' → logprob: -9.60792350769043
    9. ' ,' → logprob: -9.60792350769043
    10. '=int' → logprob: -10.48292350769043

Token 305: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012047011114191264
    2. 'input' → logprob: -9.500120162963867
    3. ' int' → logprob: -10.000120162963867
    4. '(int' → logprob: -16.500120162963867
    5. ' input' → logprob: -17.125120162963867
    6. '[int' → logprob: -17.750120162963867
    7. '=int' → logprob: -20.375120162963867
    8. ' ' → logprob: -20.375120162963867
    9. 'map' → logprob: -21.000120162963867
    10. ',int' → logprob: -21.250120162963867

Token 306: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012535318732261658
    2. '()' → logprob: -4.387535095214844
    3. '(),' → logprob: -12.012535095214844
    4. '())' → logprob: -12.387535095214844
    5. '(' → logprob: -12.762535095214844
    6. ')' → logprob: -13.387535095214844
    7. '()-' → logprob: -13.637535095214844
    8. '()[' → logprob: -13.637535095214844
    9. '();' → logprob: -13.762535095214844
    10. '()
' → logprob: -14.012535095214844

Token 307: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. '(split' → logprob: -18.875
    4. 'strip' → logprob: -19.125
    5. '.split' → logprob: -21.0
    6. 'rstrip' → logprob: -22.0
    7. 'spl' → logprob: -22.125
    8. 'plit' → logprob: -22.375
    9. ')' → logprob: -23.375
    10. '_split' → logprob: -23.75

Token 308: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1828012615442276
    2. '())' → logprob: -1.9328012466430664
    3. '()' → logprob: -3.8078012466430664
    4. '(' → logprob: -9.307801246643066
    5. ' )' → logprob: -10.557801246643066
    6. '(),' → logprob: -12.807801246643066
    7. '())
' → logprob: -12.807801246643066
    8. ')
' → logprob: -13.557801246643066
    9. '))' → logprob: -14.307801246643066
    10. ' ())' → logprob: -14.307801246643066

Token 309: '    
' (ID: 1944)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38772639632225037
    2. '   ' → logprob: -1.1377264261245728
    3. ' t' → logprob: -7.887726306915283
    4. '    
' → logprob: -8.012726783752441
    5. '	t' → logprob: -8.887726783752441
    6. '  ' → logprob: -13.637726783752441
    7. '    ' → logprob: -13.637726783752441
    8. '   ' → logprob: -13.637726783752441
    9. '
' → logprob: -13.887726783752441
    10. '\t' → logprob: -14.012726783752441

Token 310: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2519839406013489
    2. '   ' → logprob: -1.501983880996704
    3. ' t' → logprob: -9.876983642578125
    4. '	t' → logprob: -13.001983642578125
    5. '    
' → logprob: -14.376983642578125
    6. '   ' → logprob: -14.876983642578125
    7. '  ' → logprob: -16.001983642578125
    8. '`t' → logprob: -16.251983642578125
    9. ' ' → logprob: -17.126983642578125
    10. '#' → logprob: -17.376983642578125

Token 311: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.619311974034645e-05
    2. '   ' → logprob: -10.375036239624023
    3. ' t' → logprob: -12.500036239624023
    4. 'T' → logprob: -13.750036239624023
    5. '	t' → logprob: -17.375036239624023
    6. '    
' → logprob: -17.500036239624023
    7. '#' (adapté à ' #') → logprob: -17.875036239624023
    8. '_t' → logprob: -18.000036239624023
    9. '
' → logprob: -18.125036239624023
    10. '`t' → logprob: -18.500036239624023

Token 312: ' Lecture' (ID: 106534)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0008685869397595525
    2. ' t' → logprob: -7.125868797302246
    3. '   ' → logprob: -10.500868797302246
    4. 'T' → logprob: -11.125868797302246
    5. 'op' → logprob: -11.875868797302246
    6. 'a' → logprob: -12.500868797302246
    7. '#' → logprob: -13.375868797302246
    8. 'enemy' → logprob: -13.750868797302246
    9. ' opponent' → logprob: -14.000868797302246
    10. 'tt' → logprob: -14.000868797302246

Token 313: ' de' (ID: 334)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.043818049132823944
    2. '   ' → logprob: -3.6688179969787598
    3. 'de' → logprob: -4.91881799697876
    4. '()' → logprob: -5.66881799697876
    5. 'du' → logprob: -6.16881799697876
    6. '_t' → logprob: -6.54381799697876
    7. 'des' → logprob: -6.91881799697876
    8. 's' → logprob: -7.41881799697876
    9. '(t' → logprob: -7.54381799697876
    10. ' de' → logprob: -8.418818473815918

Token 314: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.049286749213933945
    2. 'input' → logprob: -3.0492868423461914
    3. ' t' → logprob: -7.424286842346191
    4. ' input' → logprob: -9.299286842346191
    5. 'str' → logprob: -12.549286842346191
    6. '(input' → logprob: -12.924286842346191
    7. '   ' → logprob: -13.049286842346191
    8. 's' → logprob: -13.799286842346191
    9. '(t' → logprob: -14.549286842346191
    10. 'ti' → logprob: -15.049286842346191

Token 315: ' sé' (ID: 7462)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.056308843195438385
    2. 'input' → logprob: -3.1813087463378906
    3. 'str' → logprob: -4.681308746337891
    4. 'string' → logprob: -6.056308746337891
    5. 's' → logprob: -6.556308746337891
    6. ' t' → logprob: -9.30630874633789
    7. 'tring' → logprob: -11.30630874633789
    8. ' input' → logprob: -11.55630874633789
    9. 'import' → logprob: -11.68130874633789
    10. 'T' → logprob: -11.68130874633789

Token 316: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.002048197668045759
    2. 'q' → logprob: -6.252048015594482
    3. '   ' → logprob: -10.00204849243164
    4. 'quences' → logprob: -10.00204849243164
    5. 'qu' → logprob: -12.00204849243164
    6. 'r' → logprob: -12.75204849243164
    7. 'rie' → logprob: -12.87704849243164
    8. '#' → logprob: -13.00204849243164
    9. 'n' → logprob: -13.12704849243164
    10. 't' → logprob: -13.50204849243164

Token 317: ' des' (ID: 731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002258277963846922
    2. ' t' → logprob: -8.875226020812988
    3. '   ' → logprob: -9.500226020812988
    4. 'de' → logprob: -12.000226020812988
    5. ' =' → logprob: -13.125226020812988
    6. 's' → logprob: -14.750226020812988
    7. ' advers' → logprob: -14.750226020812988
    8. 'of' → logprob: -15.000226020812988
    9. 'd' → logprob: -15.125226020812988
    10. ' of' → logprob: -15.750226020812988

Token 318: ' coups' (ID: 98942)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7133267521858215
    2. 'input' → logprob: -0.8383267521858215
    3. 'ad' → logprob: -3.7133266925811768
    4. 'op' → logprob: -3.9633266925811768
    5. 'inputs' → logprob: -4.338326930999756
    6. 'str' → logprob: -4.588326930999756
    7. ' advers' → logprob: -5.588326930999756
    8. 'tr' → logprob: -6.588326930999756
    9. 'tir' → logprob: -6.963326930999756
    10. 'l' → logprob: -7.088326930999756

Token 319: ' advers' (ID: 33091)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.026133082807064056
    2. ' advers' → logprob: -4.901133060455322
    3. ' =' → logprob: -5.026133060455322
    4. '   ' → logprob: -5.276133060455322
    5. 'ad' → logprob: -5.651133060455322
    6. ' t' → logprob: -5.901133060455322
    7. 'de' → logprob: -9.02613353729248
    8. '_ad' → logprob: -9.52613353729248
    9. '=' → logprob: -10.02613353729248
    10. 'op' → logprob: -10.27613353729248

Token 320: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3804099559783936
    2. 'i' → logprob: -2.2554099559783936
    3. 'enant' → logprob: -2.2554099559783936
    4. 'ess' → logprob: -2.3804099559783936
    5. 't' → logprob: -3.0054099559783936
    6. 'ent' → logprob: -3.0054099559783936
    7. 'es' → logprob: -3.0054099559783936
    8. '   ' → logprob: -3.2554099559783936
    9. 'ec' → logprob: -3.2554099559783936
    10. 'is' → logprob: -3.5054099559783936

Token 321: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07530134916305542
    2. '   ' → logprob: -2.8253014087677
    3. ' t' → logprob: -4.325301170349121
    4. '
' → logprob: -11.575301170349121
    5. '	t' → logprob: -13.200301170349121
    6. '`t' → logprob: -14.075301170349121
    7. ' ' → logprob: -14.200301170349121
    8. '    
' → logprob: -14.325301170349121
    9. '  ' → logprob: -14.700301170349121
    10. ',' → logprob: -15.325301170349121

Token 322: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4072378873825073
    2. '   ' → logprob: -1.1572378873825073
    3. ' t' → logprob: -3.907238006591797
    4. '	t' → logprob: -9.907238006591797
    5. '  ' → logprob: -12.532238006591797
    6. '    
' → logprob: -12.657238006591797
    7. '    ' → logprob: -13.282238006591797
    8. '
' → logprob: -13.407238006591797
    9. ' ' → logprob: -13.532238006591797
    10. '`t' → logprob: -13.907238006591797

Token 323: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00040898515726439655
    2. ' t' → logprob: -8.500409126281738
    3. '   ' → logprob: -8.500409126281738
    4. 'T' → logprob: -13.500409126281738
    5. '`t' → logprob: -15.250409126281738
    6. 'input' → logprob: -15.500409126281738
    7. '	t' → logprob: -15.875409126281738
    8. 's' → logprob: -17.375408172607422
    9. 'ts' → logprob: -17.500408172607422
    10. '  ' → logprob: -17.750408172607422

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759470462799072
    2. '=' → logprob: -0.8259470462799072
    3. '=input' → logprob: -11.825946807861328
    4. ' ' → logprob: -15.950946807861328
    5. '＝' → logprob: -16.450946807861328
    6. '=int' → logprob: -17.825946807861328
    7. 's' → logprob: -18.575946807861328
    8. ' ' → logprob: -18.700946807861328
    9. 't' → logprob: -18.950946807861328
    10. ',' → logprob: -19.075946807861328

Token 325: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0380416102707386
    2. ' input' → logprob: -3.288041591644287
    3. 'list' → logprob: -16.663042068481445
    4. '(input' → logprob: -17.663042068481445
    5. 'str' → logprob: -17.913042068481445
    6. '	input' → logprob: -18.288042068481445
    7. '=input' → logprob: -18.538042068481445
    8. '<input' → logprob: -19.663042068481445
    9. '入力' → logprob: -19.663042068481445
    10. ' ' → logprob: -19.663042068481445

Token 326: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006097480072639883
    2. '().' → logprob: -7.500609874725342
    3. ' ()' → logprob: -10.500609397888184
    4. '(' → logprob: -11.250609397888184
    5. '())' → logprob: -12.750609397888184
    6. '()?>' → logprob: -13.250609397888184
    7. '();' → logprob: -13.625609397888184
    8. ')' → logprob: -13.875609397888184
    9. '()]' → logprob: -14.000609397888184
    10. '()='' → logprob: -14.125609397888184

Token 327: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5097274780273438
    2. '    
' → logprob: -1.5097274780273438
    3. '   ' → logprob: -1.7597274780273438
    4. 'n' → logprob: -7.259727478027344
    5. '  
' → logprob: -7.259727478027344
    6. '   
' → logprob: -7.509727478027344
    7. 's' → logprob: -7.759727478027344
    8. 'score' → logprob: -7.759727478027344
    9. '```' → logprob: -7.884727478027344
    10. '<|end|>' → logprob: -8.009727478027344

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005267668981105089
    2. 'dp' → logprob: -5.63026762008667
    3. 'score' → logprob: -6.75526762008667
    4. '    
' → logprob: -8.755268096923828
    5. '#' → logprob: -9.755268096923828
    6. 'moves' → logprob: -9.755268096923828
    7. 'scores' → logprob: -10.130268096923828
    8. ' dp' → logprob: -10.380268096923828
    9. 'choices' → logprob: -10.630268096923828
    10. 'answers' → logprob: -10.755268096923828

Token 329: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010088120587170124
    2. '#' (adapté à ' #') → logprob: -5.010087966918945
    3. 'score' → logprob: -6.260087966918945
    4. 'res' → logprob: -7.260087966918945
    5. 'ans' → logprob: -8.135087966918945
    6. 'answer' → logprob: -8.760087966918945
    7. 'result' → logprob: -9.010087966918945
    8. 'points' → logprob: -10.135087966918945
    9. ' dp' → logprob: -10.385087966918945
    10. '   ' → logprob: -10.760087966918945

Token 330: ' Gén' (ID: 71828)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0243994053453207
    2. '#' → logprob: -4.024399280548096
    3. 'score' → logprob: -5.649399280548096
    4. 'answer' → logprob: -7.274399280548096
    5. ' dp' → logprob: -7.274399280548096
    6. 'result' → logprob: -7.774399280548096
    7. 'res' → logprob: -8.149399757385254
    8. 'ans' → logprob: -8.524399757385254
    9. 'answers' → logprob: -9.524399757385254
    10. 'scores' → logprob: -9.649399757385254

Token 331: 'ération' (ID: 24977)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.14462125301361084
    2. 'er' → logprob: -2.1446213722229004
    3. 'ération' → logprob: -4.7696213722229
    4. '#' → logprob: -5.8946213722229
    5. 'rer' → logprob: -6.8946213722229
    6. 'érateur' → logprob: -6.8946213722229
    7. 'r' → logprob: -7.1446213722229
    8. 'éral' → logprob: -7.2696213722229
    9. 'def' → logprob: -7.3946213722229
    10. 'érations' → logprob: -8.144620895385742

Token 332: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.45585888624191284
    2. ' des' → logprob: -2.0808589458465576
    3. ' de' → logprob: -2.7058589458465576
    4. '[' → logprob: -2.9558589458465576
    5. ' of' → logprob: -3.0808589458465576
    6. '(' → logprob: -3.7058589458465576
    7. '[]' → logprob: -4.5808587074279785
    8. ' =' → logprob: -4.5808587074279785
    9. 'd' → logprob: -5.0808587074279785
    10. 'des' → logprob: -5.4558587074279785

Token 333: ' la' (ID: 557)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.2574053704738617
    2. '[]' → logprob: -3.0074052810668945
    3. '[' → logprob: -3.2574052810668945
    4. ' ['' → logprob: -3.5074052810668945
    5. 'score' → logprob: -4.0074052810668945
    6. 'result' → logprob: -4.7574052810668945
    7. ' [' → logprob: -4.7574052810668945
    8. '["' → logprob: -5.0074052810668945
    9. 'a' → logprob: -5.1324052810668945
    10. ' a' → logprob: -5.3824052810668945

Token 334: ' sé' (ID: 7462)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12836094200611115
    2. '[' → logprob: -3.0033609867095947
    3. '['' → logprob: -3.1283609867095947
    4. '["' → logprob: -4.128360748291016
    5. 'list' → logprob: -5.878360748291016
    6. 'result' → logprob: -6.378360748291016
    7. 'score' → logprob: -6.503360748291016
    8. '[next' → logprob: -7.128360748291016
    9. '[t' → logprob: -7.753360748291016
    10. '[n' → logprob: -8.003360748291016

Token 335: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0005163363530300558
    2. 'q' → logprob: -7.625516414642334
    3. 'quences' → logprob: -11.375515937805176
    4. 'rie' → logprob: -11.875515937805176
    5. 'QUENCE' → logprob: -12.750515937805176
    6. 'que' → logprob: -12.875515937805176
    7. 'qu' → logprob: -13.500515937805176
    8. '#' → logprob: -14.250515937805176
    9. 'p' → logprob: -14.250515937805176
    10. '`' → logprob: -14.750515937805176

Token 336: ' optimale' (ID: 72604)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9065068364143372
    2. ' de' → logprob: -1.9065067768096924
    3. 'des' → logprob: -2.2815067768096924
    4. ' optimale' → logprob: -2.4065067768096924
    5. '_' → logprob: -2.6565067768096924
    6. 'result' → logprob: -3.2815067768096924
    7. 'de' → logprob: -3.4065067768096924
    8. 'answer' → logprob: -4.2815070152282715
    9. '   ' → logprob: -4.5315070152282715
    10. 'optimal' → logprob: -4.7815070152282715

Token 337: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5114836692810059
    2. ' dp' → logprob: -2.011483669281006
    3. '_' → logprob: -3.261483669281006
    4. ' optimale' → logprob: -3.386483669281006
    5. 'answer' → logprob: -3.511483669281006
    6. '   ' → logprob: -3.636483669281006
    7. 'optimal' → logprob: -3.636483669281006
    8. 'result' → logprob: -4.261483669281006
    9. ' answer' → logprob: -4.636483669281006
    10. ' =' → logprob: -4.761483669281006

Token 338: ' coups' (ID: 98942)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.02523331344127655
    2. 't' → logprob: -4.525233268737793
    3. ' coups' → logprob: -5.525233268737793
    4. 'jou' → logprob: -5.775233268737793
    5. 'c' → logprob: -5.900233268737793
    6. 'm' → logprob: -6.525233268737793
    7. 'ré' → logprob: -7.650233268737793
    8. 'moves' → logprob: -7.900233268737793
    9. '```' → logprob: -8.150233268737793
    10. 'jeu' → logprob: -8.275233268737793

Token 339: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3421984910964966
    2. 'optimal' → logprob: -1.7171984910964966
    3. 'dp' → logprob: -2.217198371887207
    4. '   ' → logprob: -2.592198371887207
    5. 'answer' → logprob: -2.717198371887207
    6. '=' → logprob: -2.967198371887207
    7. 'result' → logprob: -3.342198371887207
    8. ' optimal' → logprob: -3.467198371887207
    9. 'jou' → logprob: -3.842198371887207
    10. ' optimale' → logprob: -3.967198371887207

Token 340: ' jouer' (ID: 48012)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.020737260580062866
    2. ' jouer' → logprob: -3.8957371711730957
    3. 'j' → logprob: -9.020737648010254
    4. 'produ' → logprob: -10.770737648010254
    5. '```' → logprob: -11.020737648010254
    6. 'cho' → logprob: -12.770737648010254
    7. 'jong' → logprob: -12.895737648010254
    8. ' jou' → logprob: -13.145737648010254
    9. 'jug' → logprob: -13.145737648010254
    10. 'J' → logprob: -13.145737648010254

Token 341: ' contre' (ID: 17771)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6177594661712646
    2. 'dp' → logprob: -1.8677594661712646
    3. 'result' → logprob: -1.8677594661712646
    4. 'answer' → logprob: -2.6177594661712646
    5. ' result' → logprob: -3.1177594661712646
    6. ' ans' → logprob: -3.2427594661712646
    7. ' =' → logprob: -3.2427594661712646
    8. 'optimal' → logprob: -3.2427594661712646
    9. ',' → logprob: -3.3677594661712646
    10. ' dp' → logprob: -3.4927594661712646

Token 342: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006788551341742277
    2. 'l' → logprob: -5.006788730621338
    3. ' t' → logprob: -9.63178825378418
    4. ' l' → logprob: -13.00678825378418
    5. '`t' → logprob: -13.13178825378418
    6. 'la' → logprob: -14.25678825378418
    7. '[t' → logprob: -14.38178825378418
    8. 'the' → logprob: -15.13178825378418
    9. '(t' → logprob: -15.13178825378418
    10. 'les' → logprob: -15.63178825378418

Token 343: ''ad' (ID: 36162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005215143784880638
    2. ' t' → logprob: -5.505215167999268
    3. ''t' → logprob: -8.13021469116211
    4. 'range' → logprob: -8.75521469116211
    5. '[t' → logprob: -9.00521469116211
    6. ''ad' → logprob: -9.25521469116211
    7. ' advers' → logprob: -9.50521469116211
    8. '`t' → logprob: -9.75521469116211
    9. '(t' → logprob: -9.88021469116211
    10. 'a' → logprob: -10.00521469116211

Token 344: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.018229663372039795
    2. 'v' → logprob: -4.2682294845581055
    3. 'ver' → logprob: -6.8932294845581055
    4. 'verse' → logprob: -7.2682294845581055
    5. '(t' → logprob: -7.5182294845581055
    6. 't' → logprob: -7.7682294845581055
    7. '   ' → logprob: -8.518229484558105
    8. ' advers' → logprob: -8.768229484558105
    9. 'ers' → logprob: -9.018229484558105
    10. 'vs' → logprob: -9.143229484558105

Token 345: 'aire' (ID: 8189)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.17190983891487122
    2. 'ers' → logprob: -1.9219098091125488
    3. 'e' → logprob: -5.296909809112549
    4. 'erse' → logprob: -6.046909809112549
    5. 'ir' → logprob: -7.046909809112549
    6. 't' → logprob: -7.171909809112549
    7. 'es' → logprob: -7.546909809112549
    8. 'erso' → logprob: -8.296910285949707
    9. 'ersi' → logprob: -8.296910285949707
    10. 'i' → logprob: -8.546910285949707

Token 346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07451441884040833
    2. 'optimal' → logprob: -4.074514389038086
    3. ',' → logprob: -4.449514389038086
    4. 'result' → logprob: -4.824514389038086
    5. 'answer' → logprob: -5.199514389038086
    6. 'player' → logprob: -5.574514389038086
    7. ' optimal' → logprob: -6.074514389038086
    8. ' =' → logprob: -6.324514389038086
    9. 'jou' → logprob: -6.324514389038086
    10. 'dp' → logprob: -6.324514389038086

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014816515613347292
    2. '    
' → logprob: -7.876481533050537
    3. ' =' → logprob: -8.251482009887695
    4. 'optimal' → logprob: -9.001482009887695
    5. ',' → logprob: -9.251482009887695
    6. '_' → logprob: -9.626482009887695
    7. 's' → logprob: -9.626482009887695
    8. '=' → logprob: -9.751482009887695
    9. '  ' → logprob: -9.876482009887695
    10. ' ' → logprob: -9.876482009887695

Token 348: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47844529151916504
    2. 'answer' → logprob: -2.103445291519165
    3. 'res' → logprob: -2.228445291519165
    4. 'result' → logprob: -2.353445291519165
    5. 'ans' → logprob: -3.353445291519165
    6. '   ' → logprob: -5.603445053100586
    7. 'answers' → logprob: -5.728445053100586
    8. 'play' → logprob: -6.103445053100586
    9. 'optimal' → logprob: -6.478445053100586
    10. ' dp' → logprob: -6.728445053100586

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11290323734283447
    2. '=' → logprob: -2.237903118133545
    3. ' ' → logprob: -9.487903594970703
    4. '=[]' → logprob: -13.362903594970703
    5. ' =[' → logprob: -14.862903594970703
    6. 'ss' → logprob: -14.987903594970703
    7. ' ' → logprob: -15.112903594970703
    8. 's' → logprob: -15.112903594970703
    9. '=[' → logprob: -15.237903594970703
    10. '  ' → logprob: -15.362903594970703

Token 350: ' create' (ID: 2501)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.04560704901814461
    2. '[]' → logprob: -3.795607089996338
    3. '["' → logprob: -3.920607089996338
    4. '[' → logprob: -6.545607089996338
    5. ' ['' → logprob: -7.420607089996338
    6. 'list' → logprob: -8.67060661315918
    7. '""' → logprob: -10.79560661315918
    8. ' []' → logprob: -11.54560661315918
    9. '[n' → logprob: -11.79560661315918
    10. '['_' → logprob: -11.92060661315918

Token 351: '_opt' (ID: 41733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4881133437156677
    2. '_sequence' → logprob: -2.1131134033203125
    3. '_a' → logprob: -2.6131134033203125
    4. 'a' → logprob: -2.8631134033203125
    5. '_array' → logprob: -3.4881134033203125
    6. '_move' → logprob: -3.4881134033203125
    7. 'd' → logprob: -4.2381134033203125
    8. '_moves' → logprob: -4.3631134033203125
    9. '_game' → logprob: -5.1131134033203125
    10. '_opt' → logprob: -5.2381134033203125

Token 352: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.00048167374916374683
    2. 'a' → logprob: -8.625481605529785
    3. '```' → logprob: -9.875481605529785
    4. '_' → logprob: -10.250481605529785
    5. '(' → logprob: -10.250481605529785
    6. '(a' → logprob: -10.500481605529785
    7. 'optimal' → logprob: -10.625481605529785
    8. '_sequence' → logprob: -10.750481605529785
    9. 'imum' → logprob: -10.875481605529785
    10. 'al' → logprob: -11.000481605529785

Token 353: '_moves' (ID: 110706)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.019894331693649292
    2. '_move' → logprob: -4.394894123077393
    3. '_strategy' → logprob: -6.394894123077393
    4. '_moves' → logprob: -6.519894123077393
    5. 'sequence' → logprob: -6.644894123077393
    6. '_' → logprob: -6.894894123077393
    7. '_seq' → logprob: -7.894894123077393
    8. 'a' → logprob: -7.894894123077393
    9. '_array' → logprob: -8.76989459991455
    10. '_list' → logprob: -8.76989459991455

Token 354: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.20341897010803223
    2. '(n' → logprob: -2.3284189701080322
    3. '(' → logprob: -2.4534189701080322
    4. '(k' → logprob: -9.078418731689453
    5. '((' → logprob: -9.203418731689453
    6. '(
' → logprob: -9.203418731689453
    7. ' (' → logprob: -9.453418731689453
    8. '(len' → logprob: -10.078418731689453
    9. '_list' → logprob: -10.203418731689453
    10. '('' → logprob: -10.578418731689453

Token 355: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001921014511026442
    2. ',k' → logprob: -7.1269211769104
    3. ')' → logprob: -7.2519211769104
    4. ' ,' → logprob: -8.001920700073242
    5. ',n' → logprob: -9.626920700073242
    6. ',
' → logprob: -13.876920700073242
    7. ' )' → logprob: -14.501920700073242
    8. '[' → logprob: -14.501920700073242
    9. '(' → logprob: -14.501920700073242
    10. ' ' → logprob: -14.626920700073242

Token 356: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1646438091993332
    2. '    
' → logprob: -2.0396437644958496
    3. '()' → logprob: -4.78964376449585
    4. '
' → logprob: -4.91464376449585
    5. '(' → logprob: -6.53964376449585
    6. 'def' → logprob: -7.03964376449585
    7. '    ' → logprob: -7.28964376449585
    8. '[' → logprob: -7.53964376449585
    9. '()
' → logprob: -7.66464376449585
    10. '   
' → logprob: -7.78964376449585

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11840799450874329
    2. '    
' → logprob: -2.368407964706421
    3. '
' → logprob: -4.368408203125
    4. '[' → logprob: -6.493408203125
    5. ' 
' → logprob: -7.368408203125
    6. '   
' → logprob: -7.493408203125
    7. '  
' → logprob: -7.493408203125
    8. '    ' → logprob: -7.743408203125
    9. '```' → logprob: -8.368408203125
    10. '     
' → logprob: -8.618408203125

Token 358: ' #' (ID: 1069)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0037276302464306355
    2. ' score' → logprob: -6.128727436065674
    3. 'total' → logprob: -7.003727436065674
    4. '   ' → logprob: -8.003727912902832
    5. '#' (adapté à ' #') → logprob: -8.378727912902832
    6. 'result' → logprob: -11.253727912902832
    7. '    
' → logprob: -11.253727912902832
    8. '
' → logprob: -11.378727912902832
    9. ' total' → logprob: -11.503727912902832
    10. 'def' → logprob: -11.878727912902832

Token 359: ' Calcul' (ID: 57243)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.007203113287687302
    2. ' score' → logprob: -5.632203102111816
    3. 'total' → logprob: -5.882203102111816
    4. '#' → logprob: -7.507203102111816
    5. ' total' → logprob: -9.632203102111816
    6. 'result' → logprob: -9.882203102111816
    7. 'def' → logprob: -10.132203102111816
    8. 'print' → logprob: -10.382203102111816
    9. 'max' → logprob: -10.382203102111816
    10. ' #' → logprob: -11.632203102111816

Token 360: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.3112373352050781
    2. '   ' → logprob: -1.9362373352050781
    3. 'du' → logprob: -2.186237335205078
    4. '_' → logprob: -5.811237335205078
    5. '_score' → logprob: -6.311237335205078
    6. ' =' → logprob: -6.561237335205078
    7. 'score' → logprob: -6.561237335205078
    8. '_du' → logprob: -7.061237335205078
    9. '=' → logprob: -7.311237335205078
    10. ' de' → logprob: -7.311237335205078

Token 361: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.002734858775511384
    2. ' score' → logprob: -6.502734661102295
    3. 'total' → logprob: -6.752734661102295
    4. 'sum' → logprob: -10.502735137939453
    5. ' total' → logprob: -10.627735137939453
    6. 'result' → logprob: -11.502735137939453
    7. 'max' → logprob: -13.752735137939453
    8. '0' → logprob: -15.002735137939453
    9. '	score' → logprob: -15.127735137939453
    10. 's' → logprob: -15.502735137939453

Token 362: ' initial' (ID: 4871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35536450147628784
    2. '=' → logprob: -2.3553645610809326
    3. 'score' → logprob: -2.4803645610809326
    4. '   ' → logprob: -2.8553645610809326
    5. 'total' → logprob: -3.1053645610809326
    6. ' total' → logprob: -4.8553643226623535
    7. ' score' → logprob: -4.9803643226623535
    8. 'result' → logprob: -6.8553643226623535
    9. '_' → logprob: -7.3553643226623535
    10. ',' → logprob: -7.4803643226623535

Token 363: ' sans' (ID: 9828)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.5824608206748962
    2. ' =' → logprob: -0.9574608206748962
    3. '=' → logprob: -2.957460880279541
    4. ' score' → logprob: -5.332460880279541
    5. 'total' → logprob: -7.832460880279541
    6. '   ' → logprob: -8.957460403442383
    7. ',' → logprob: -9.082460403442383
    8. 'result' → logprob: -9.707460403442383
    9. '_score' → logprob: -10.332460403442383
    10. 's' → logprob: -10.582460403442383

Token 364: ' tenir' (ID: 57709)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2431455850601196
    2. 'a' → logprob: -1.8681455850601196
    3. 'double' → logprob: -2.11814546585083
    4. 'dou' → logprob: -2.24314546585083
    5. 're' → logprob: -2.49314546585083
    6. 'duplicates' → logprob: -2.74314546585083
    7. 'dup' → logprob: -3.49314546585083
    8. 'duplicate' → logprob: -3.61814546585083
    9. '#' → logprob: -4.11814546585083
    10. 'any' → logprob: -4.24314546585083

Token 365: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.8488991260528564
    2. 'pas' → logprob: -0.8488991260528564
    3. 'comp' → logprob: -2.0988991260528564
    4. 'account' → logprob: -3.9738991260528564
    5. '```' → logprob: -6.973898887634277
    6. '   ' → logprob: -7.223898887634277
    7. '#' → logprob: -8.598898887634277
    8. '    ' → logprob: -8.848898887634277
    9. 'count' → logprob: -9.223898887634277
    10. '     ' → logprob: -9.348898887634277

Token 366: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.009715016931295395
    2. 'des' → logprob: -5.0097150802612305
    3. ' de' → logprob: -6.3847150802612305
    4. ' du' → logprob: -6.7597150802612305
    5. 'de' → logprob: -9.88471508026123
    6. 'du' → logprob: -10.38471508026123
    7. '_des' → logprob: -10.63471508026123
    8. '    ' → logprob: -11.00971508026123
    9. ' of' → logprob: -11.75971508026123
    10. '<|end|>' → logprob: -12.13471508026123

Token 367: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -1.2678983211517334
    2. 'contra' → logprob: -1.3928983211517334
    3. 'restr' → logprob: -1.5178983211517334
    4. 'con' → logprob: -2.1428983211517334
    5. 'k' → logprob: -2.8928983211517334
    6. 'inter' → logprob: -3.6428983211517334
    7. 'contr' → logprob: -4.2678985595703125
    8. ' répét' → logprob: -4.7678985595703125
    9. ' k' → logprob: -5.5178985595703125
    10. 'constraints' → logprob: -5.5178985595703125

Token 368: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45010706782341003
    2. 'score' → logprob: -1.3251070976257324
    3. '=' → logprob: -3.3251070976257324
    4. ' score' → logprob: -3.7001070976257324
    5. '   ' → logprob: -3.8251070976257324
    6. ',' → logprob: -4.950107097625732
    7. 'total' → logprob: -5.575107097625732
    8. 'result' → logprob: -7.200107097625732
    9. ' total' → logprob: -7.575107097625732
    10. ' ' → logprob: -7.825107097625732

Token 369: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7797142863273621
    2. 'score' → logprob: -0.7797142863273621
    3. '=' → logprob: -3.279714345932007
    4. ' score' → logprob: -4.029714107513428
    5. '_' → logprob: -4.654714107513428
    6. '_score' → logprob: -4.904714107513428
    7. 'total' → logprob: -6.029714107513428
    8. ' ' → logprob: -6.154714107513428
    9. ',' → logprob: -6.279714107513428
    10. '   ' → logprob: -7.029714107513428

Token 370: ' ans' (ID: 3345)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0022545759566128254
    2. 'total' → logprob: -6.127254486083984
    3. 'ans' (adapté à ' ans') → logprob: -10.627254486083984
    4. ' score' → logprob: -10.877254486083984
    5. 'initial' → logprob: -11.377254486083984
    6. 'result' → logprob: -12.002254486083984
    7. 'res' → logprob: -12.502254486083984
    8. 'answer' → logprob: -12.752254486083984
    9. 'print' → logprob: -14.877254486083984
    10. 'max' → logprob: -15.002254486083984

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14285901188850403
    2. '=' → logprob: -2.0178589820861816
    3. '_' → logprob: -8.89285945892334
    4. ')' → logprob: -11.26785945892334
    5. ' ' → logprob: -12.01785945892334
    6. ' ' → logprob: -12.26785945892334
    7. ',' → logprob: -12.26785945892334
    8. '  ' → logprob: -13.01785945892334
    9. '=int' → logprob: -13.14285945892334
    10. '_=' → logprob: -13.14285945892334

Token 372: ' calculate' (ID: 17950)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009145628428086638
    2. ' ' → logprob: -7.000914573669434
    3. 'sum' → logprob: -12.875914573669434
    4. '   ' → logprob: -15.875914573669434
    5. ' sum' → logprob: -16.125913619995117
    6. ' ' → logprob: -16.750913619995117
    7. 'math' → logprob: -17.500913619995117
    8. '  ' → logprob: -18.063413619995117
    9. '100' → logprob: -18.250913619995117
    10. '[' → logprob: -18.313413619995117

Token 373: '_initial' (ID: 45740)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0038276296108961105
    2. 'score' → logprob: -7.0038275718688965
    3. '_scores' → logprob: -7.0038275718688965
    4. '_total' → logprob: -7.2538275718688965
    5. '_initial' → logprob: -7.7538275718688965
    6. '_opt' → logprob: -7.8788275718688965
    7. '_max' → logprob: -9.003828048706055
    8. '_points' → logprob: -9.128828048706055
    9. '_sum' → logprob: -9.878828048706055
    10. '(' → logprob: -9.878828048706055

Token 374: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0027588685043156147
    2. '_' → logprob: -6.002758979797363
    3. 'score' → logprob: -9.127758979797363
    4. '_scores' → logprob: -9.127758979797363
    5. '(' → logprob: -10.502758979797363
    6. '_points' → logprob: -10.877758979797363
    7. '_s' → logprob: -12.752758979797363
    8. '_max' → logprob: -12.752758979797363
    9. '_token' → logprob: -13.127758979797363
    10. 'Score' → logprob: -13.627758979797363

Token 375: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7177770733833313
    2. '(a' → logprob: -0.7177770733833313
    3. '(t' → logprob: -3.7177770137786865
    4. '(
' → logprob: -10.967777252197266
    5. 'a' → logprob: -11.967777252197266
    6. '(n' → logprob: -12.217777252197266
    7. ' (' → logprob: -12.342777252197266
    8. '(r' → logprob: -12.967777252197266
    9. '(s' → logprob: -13.342777252197266
    10. '((' → logprob: -14.467777252197266

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032156186643987894
    2. ')' → logprob: -5.753215789794922
    3. ' ,' → logprob: -10.378215789794922
    4. ',t' → logprob: -12.378215789794922
    5. ',a' → logprob: -14.128215789794922
    6. ',)' → logprob: -14.378215789794922
    7. ' )' → logprob: -14.753215789794922
    8. ',n' → logprob: -15.503215789794922
    9. ',
' → logprob: -16.253215789794922
    10. '   ' → logprob: -16.503215789794922

Token 377: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40891167521476746
    2. 't' → logprob: -1.1589117050170898
    3. 'n' → logprob: -4.28391170501709
    4. 'p' → logprob: -6.03391170501709
    5. ' t' → logprob: -6.03391170501709
    6. ' r' → logprob: -6.28391170501709
    7. 'k' → logprob: -7.03391170501709
    8. 'a' → logprob: -8.90891170501709
    9. ' n' → logprob: -8.90891170501709
    10. 'INF' → logprob: -9.53391170501709

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008728709071874619
    2. ',s' → logprob: -7.75087308883667
    3. ' ,' → logprob: -7.87587308883667
    4. ')' → logprob: -10.875872611999512
    5. ',p' → logprob: -11.000872611999512
    6. 's' → logprob: -11.375872611999512
    7. ',
' → logprob: -11.875872611999512
    8. ' s' → logprob: -12.500872611999512
    9. '   ' → logprob: -13.625872611999512
    10. 'p' → logprob: -14.125872611999512

Token 379: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804149478673935
    2. ' s' → logprob: -3.288041591644287
    3. '_s' → logprob: -16.913042068481445
    4. '<|end|>' → logprob: -17.788042068481445
    5. ',s' → logprob: -18.163042068481445
    6. '	s' → logprob: -18.913042068481445
    7. ',' → logprob: -19.538042068481445
    8. '(s' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.038042068481445
    10. '  ' → logprob: -20.038042068481445

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003664404503069818
    2. ',p' → logprob: -8.1253662109375
    3. ' ,' → logprob: -9.6253662109375
    4. ',
' → logprob: -12.7503662109375
    5. 'p' → logprob: -13.8753662109375
    6. ')' → logprob: -14.7503662109375
    7. ' p' → logprob: -16.5003662109375
    8. ',

' → logprob: -17.5003662109375
    9. ',P' → logprob: -18.3753662109375
    10. '   ' → logprob: -18.7503662109375

Token 381: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015023599844425917
    2. ' p' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.751502990722656
    4. '	p' → logprob: -19.501502990722656
    5. ',' → logprob: -20.751502990722656
    6. ',p' → logprob: -20.876502990722656
    7. ' ' → logprob: -21.376502990722656
    8. '_p' → logprob: -22.126502990722656
    9. '
' → logprob: -22.751502990722656
    10. '  ' → logprob: -22.876502990722656

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.75000286102295
    3. ' )' → logprob: -14.37500286102295
    4. ')
' → logprob: -14.62500286102295
    5. ',' → logprob: -15.25000286102295
    6. '))' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.125001907348633
    8. ')`' → logprob: -18.875001907348633
    9. ' ' → logprob: -19.125001907348633
    10. ',)' → logprob: -19.500001907348633

Token 383: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14936313033103943
    2. '    
' → logprob: -2.6493630409240723
    3. '
' → logprob: -2.8993630409240723
    4. '<|end|>' → logprob: -4.399363040924072
    5. ')' → logprob: -8.89936351776123
    6. '  
' → logprob: -9.14936351776123
    7. '\n' → logprob: -9.27436351776123
    8. '```' → logprob: -9.52436351776123
    9. '<|end|>' → logprob: -9.64936351776123
    10. '   
' → logprob: -10.39936351776123

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48360586166381836
    2. '
' → logprob: -1.4836058616638184
    3. '    
' → logprob: -1.8586058616638184
    4. 'for' → logprob: -7.858605861663818
    5. '        
' → logprob: -9.233606338500977
    6. '   
' → logprob: -9.858606338500977
    7. ' 
' → logprob: -10.233606338500977
    8. '    
    
' → logprob: -10.358606338500977
    9. '```' → logprob: -10.733606338500977
    10. '     
' → logprob: -10.733606338500977

Token 385: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.332884430885315
    2. 'for' → logprob: -1.332884430885315
    3. 'used' → logprob: -1.457884430885315
    4. 'print' → logprob: -1.957884430885315
    5. '   ' → logprob: -3.4578843116760254
    6. 'prev' → logprob: -3.7078843116760254
    7. 'last' → logprob: -3.8328843116760254
    8. 'played' → logprob: -5.582884311676025
    9. 'score' → logprob: -5.832884311676025
    10. 'a' → logprob: -6.207884311676025

Token 386: ' Ajust' (ID: 197708)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27243772149086
    2. 'for' → logprob: -2.147437810897827
    3. 'used' → logprob: -3.022437810897827
    4. 'a' → logprob: -4.022437572479248
    5. 'ans' → logprob: -4.522437572479248
    6. 'score' → logprob: -4.522437572479248
    7. 'memo' → logprob: -5.272437572479248
    8. 'visited' → logprob: -5.772437572479248
    9. 'print' → logprob: -5.897437572479248
    10. ' #' → logprob: -6.022437572479248

Token 387: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0032676649279892445
    2. 'er' → logprob: -5.878267765045166
    3. 'e' → logprob: -8.753267288208008
    4. '#' → logprob: -9.253267288208008
    5. 'ements' → logprob: -9.378267288208008
    6. 'ment' → logprob: -9.503267288208008
    7. 'ation' → logprob: -10.753267288208008
    8. '_' → logprob: -12.003267288208008
    9. '
' → logprob: -12.378267288208008
    10. 'em' → logprob: -12.378267288208008

Token 388: ' du' (ID: 1462)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1596946716308594
    2. ' de' → logprob: -1.2846946716308594
    3. ' des' → logprob: -1.7846946716308594
    4. 'for' → logprob: -2.0346946716308594
    5. ' du' → logprob: -3.4096946716308594
    6. '_' → logprob: -3.9096946716308594
    7. '   ' → logprob: -4.534694671630859
    8. ' of' → logprob: -4.659694671630859
    9. '<|end|>' → logprob: -5.034694671630859
    10. ' ' → logprob: -5.284694671630859

Token 389: ' score' (ID: 8429)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25002169609069824
    2. 'for' → logprob: -2.3750216960906982
    3. 'score' → logprob: -2.6250216960906982
    4. ' ans' → logprob: -4.000021934509277
    5. ' for' → logprob: -4.250021934509277
    6. 'prev' → logprob: -5.000021934509277
    7. ' score' → logprob: -5.375021934509277
    8. 'last' → logprob: -6.125021934509277
    9. 'answer' → logprob: -6.375021934509277
    10. ' last' → logprob: -6.375021934509277

Token 390: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3222893178462982
    2. ' for' → logprob: -1.5722893476486206
    3. ' =' → logprob: -3.197289228439331
    4. '=' → logprob: -4.32228946685791
    5. '   ' → logprob: -4.82228946685791
    6. ' -=' → logprob: -6.44728946685791
    7. 'prev' → logprob: -7.07228946685791
    8. '#' → logprob: -7.57228946685791
    9. 'ans' → logprob: -8.19728946685791
    10. ',' → logprob: -8.32228946685791

Token 391: ' respecter' (ID: 107203)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7527512907981873
    2. ' account' → logprob: -2.002751350402832
    3. ' tenir' → logprob: -2.252751350402832
    4. ' respect' → logprob: -3.252751350402832
    5. ' k' → logprob: -3.252751350402832
    6. ' take' → logprob: -3.627751350402832
    7. ' prendre' → logprob: -3.877751350402832
    8. ' respecter' → logprob: -4.002751350402832
    9. ' handle' → logprob: -4.127751350402832
    10. ' avoid' → logprob: -4.252751350402832

Token 392: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.28350165486335754
    2. ' la' → logprob: -1.4085016250610352
    3. ' l' → logprob: -6.783501625061035
    4. 'les' → logprob: -7.158501625061035
    5. ' constraints' → logprob: -9.283501625061035
    6. ' the' → logprob: -9.408501625061035
    7. ' k' → logprob: -9.658501625061035
    8. ' ' → logprob: -10.408501625061035
    9. ' le' → logprob: -10.658501625061035
    10. ' ' → logprob: -10.658501625061035

Token 393: ' règle' (ID: 115826)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05578868091106415
    2. 'constraint' → logprob: -3.93078875541687
    3. 'contr' → logprob: -3.93078875541687
    4. 'con' → logprob: -4.930788516998291
    5. ' k' → logprob: -5.555788516998291
    6. 'contra' → logprob: -6.180788516998291
    7. 'constraints' → logprob: -7.805788516998291
    8. '```' → logprob: -8.05578899383545
    9. ' contraintes' → logprob: -8.18078899383545
    10. 'restr' → logprob: -8.68078899383545

Token 394: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7377907633781433
    2. ' des' → logprob: -0.7377907633781433
    3. 'des' → logprob: -4.112790584564209
    4. ' du' → logprob: -4.487790584564209
    5. '   ' → logprob: -5.487790584564209
    6. 'de' → logprob: -5.862790584564209
    7. ' d' → logprob: -5.987790584564209
    8. 's' → logprob: -6.612790584564209
    9. ' of' → logprob: -6.987790584564209
    10. 'd' → logprob: -7.112790584564209

Token 395: ''inter' (ID: 55731)
  Prédit: ''inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.16360856592655182
    2. ''une' → logprob: -2.5386085510253906
    3. ''un' → logprob: -2.9136085510253906
    4. 'e' → logprob: -5.413608551025391
    5. ''' → logprob: -5.538608551025391
    6. ''arrêt' → logprob: -6.288608551025391
    7. ''in' → logprob: -6.413608551025391
    8. ''utilisation' → logprob: -7.163608551025391
    9. ''ordre' → logprob: -7.413608551025391
    10. ''ex' → logprob: -7.538608551025391

Token 396: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00015217094914987683
    2. 'dit' → logprob: -9.250152587890625
    3. 'dic' → logprob: -10.625152587890625
    4. 'duction' → logprob: -12.375152587890625
    5. 'dict' → logprob: -12.375152587890625
    6. '
' → logprob: -12.625152587890625
    7. 'dis' → logprob: -12.750152587890625
    8. ' diction' → logprob: -13.000152587890625
    9. 'dice' → logprob: -13.250152587890625
    10. 'iction' → logprob: -13.375152587890625

Token 397: 'iction' (ID: 4090)
  Prédit: 'iction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iction' → logprob: -0.09256020933389664
    2. 'ition' → logprob: -3.217560291290283
    3. 'd' → logprob: -3.467560291290283
    4. 'itation' → logprob: -6.092560291290283
    5. 'ic' → logprob: -6.717560291290283
    6. '#' → logprob: -6.717560291290283
    7. '```' → logprob: -6.717560291290283
    8. 'izione' → logprob: -6.842560291290283
    9. '-' → logprob: -7.092560291290283
    10. 'it' → logprob: -7.092560291290283

Token 398: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.138837456703186
    2. ' for' → logprob: -1.638837456703186
    3. ' des' → logprob: -1.888837456703186
    4. '   ' → logprob: -2.2638373374938965
    5. 'for' → logprob: -2.3888373374938965
    6. ' d' → logprob: -2.6388373374938965
    7. 'des' → logprob: -3.6388373374938965
    8. 'd' → logprob: -4.0138373374938965
    9. 'de' → logprob: -4.8888373374938965
    10. ' of' → logprob: -5.0138373374938965

Token 399: 'pas' (ID: 21122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7975852489471436
    2. '#' → logprob: -1.6725852489471436
    3. ' for' → logprob: -1.6725852489471436
    4. ')' → logprob: -3.0475852489471436
    5. ' k' → logprob: -3.4225852489471436
    6. 'a' → logprob: -4.297585487365723
    7. 'same' → logprob: -4.297585487365723
    8. ' #' → logprob: -4.297585487365723
    9. ' a' → logprob: -4.547585487365723
    10. 'k' → logprob: -4.672585487365723

Token 400: ' deux' (ID: 10301)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.023722436279058456
    2. '_' → logprob: -5.1487226486206055
    3. ')' → logprob: -5.3987226486206055
    4. 'de' → logprob: -5.7737226486206055
    5. ' d' → logprob: -5.8987226486206055
    6. ' des' → logprob: -6.1487226486206055
    7. ' of' → logprob: -6.7737226486206055
    8. ' a' → logprob: -7.1487226486206055
    9. '   ' → logprob: -7.5237226486206055
    10. ' )' → logprob: -7.8987226486206055

Token 401: ' fois' (ID: 14697)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028260840103030205
    2. ' _' → logprob: -4.528260707855225
    3. ' ' → logprob: -4.653260707855225
    4. ' espaces' → logprob: -6.153260707855225
    5. ' mêmes' → logprob: -6.903260707855225
    6. '_same' → logprob: -6.903260707855225
    7. ' de' → logprob: -6.903260707855225
    8. '_con' → logprob: -7.903260707855225
    9. ' tokens' → logprob: -8.028261184692383
    10. ' même' → logprob: -8.403261184692383

Token 402: ' le' (ID: 505)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.042166393250226974
    2. 'de' → logprob: -3.6671664714813232
    3. ' cons' → logprob: -4.542166233062744
    4. '_' → logprob: -6.417166233062744
    5. ' d' → logprob: -6.542166233062744
    6. 'd' → logprob: -7.042166233062744
    7. 'con' → logprob: -7.542166233062744
    8. ' ' → logprob: -8.292166709899902
    9. '_con' → logprob: -9.542166709899902
    10. '_de' → logprob: -10.042166709899902

Token 403: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.034655600786209106
    2. ' même' → logprob: -3.4096555709838867
    3. ' m' → logprob: -7.284655570983887
    4. '```' → logprob: -8.784655570983887
    5. 'Même' → logprob: -10.409655570983887
    6. ' ' → logprob: -10.409655570983887
    7. 'same' → logprob: -10.784655570983887
    8. 'mé' → logprob: -10.909655570983887
    9. '  ' → logprob: -11.159655570983887
    10. ' ' → logprob: -11.284655570983887

Token 404: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.979703426361084
    2. '_c' → logprob: -1.354703426361084
    3. '_' → logprob: -1.604703426361084
    4. ' coup' → logprob: -2.354703426361084
    5. '```' → logprob: -4.229703426361084
    6. 'move' → logprob: -4.729703426361084
    7. ' move' → logprob: -5.104703426361084
    8. 'es' → logprob: -5.229703426361084
    9. ' de' → logprob: -5.604703426361084
    10. '
' → logprob: -5.729703426361084

Token 405: 'g' (ID: 70)
  Prédit: ' coup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coup' → logprob: -1.016610860824585
    2. 'move' → logprob: -1.391610860824585
    3. 'c' → logprob: -1.891610860824585
    4. ' move' → logprob: -1.891610860824585
    5. 'token' → logprob: -3.766610860824585
    6. ' ' → logprob: -4.516611099243164
    7. 'm' → logprob: -4.641611099243164
    8. '_c' → logprob: -4.891611099243164
    9. '   ' → logprob: -5.641611099243164
    10. 'a' → logprob: -5.641611099243164

Token 406: 'agn' (ID: 4894)
  Prédit: 'esture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esture' → logprob: -1.404984474182129
    2. 'este' → logprob: -1.779984474182129
    3. 'a' → logprob: -1.904984474182129
    4. 'u' → logprob: -2.654984474182129
    5. 'e' → logprob: -2.904984474182129
    6. 'est' → logprob: -3.154984474182129
    7. 'un' → logprob: -3.529984474182129
    8. 'o' → logprob: -3.779984474182129
    9. 'c' → logprob: -4.154984474182129
    10. 'i' → logprob: -4.279984474182129

Token 407: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13237632811069489
    2. 'ant' → logprob: -2.1323764324188232
    3. 'er' → logprob: -5.382376194000244
    4. 'é' → logprob: -8.132376670837402
    5. 'ent' → logprob: -9.132376670837402
    6. 'a' → logprob: -9.132376670837402
    7. 'le' → logprob: -10.007376670837402
    8. '```' → logprob: -10.132376670837402
    9. 'es' → logprob: -10.757376670837402
    10. '_' → logprob: -10.757376670837402

Token 408: ''' (ID: 6)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.905733048915863
    2. 'move' → logprob: -1.9057331085205078
    3. '_c' → logprob: -1.9057331085205078
    4. ' move' → logprob: -2.905733108520508
    5. '_move' → logprob: -3.030733108520508
    6. '')' → logprob: -3.030733108520508
    7. ' coup' → logprob: -3.155733108520508
    8. 'e' → logprob: -3.905733108520508
    9. ')' → logprob: -4.030733108520508
    10. '_' → logprob: -4.280733108520508

Token 409: ' à' (ID: 1221)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.22721487283706665
    2. '_' → logprob: -3.477214813232422
    3. '_move' → logprob: -3.477214813232422
    4. ' de' → logprob: -3.852214813232422
    5. ' coup' → logprob: -3.977214813232422
    6. ')' → logprob: -4.227214813232422
    7. ' dans' → logprob: -4.227214813232422
    8. 'move' → logprob: -4.227214813232422
    9. ' ' → logprob: -4.477214813232422
    10. 'dans' → logprob: -4.727214813232422

Token 410: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0317407846450806
    2. 'distance' → logprob: -1.1567407846450806
    3. 'la' → logprob: -2.531740665435791
    4. 'une' → logprob: -2.781740665435791
    5. 'con' → logprob: -3.031740665435791
    6. 'l' → logprob: -3.281740665435791
    7. 'moins' → logprob: -3.281740665435791
    8. 'suite' → logprob: -4.531740665435791
    9. 'c' → logprob: -4.906740665435791
    10. '```' → logprob: -5.031740665435791

Token 411: ' d' (ID: 272)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1293585300445557
    2. '=' → logprob: -1.6293585300445557
    3. 'interval' → logprob: -2.1293585300445557
    4. ')' → logprob: -2.6293585300445557
    5. 'positions' → logprob: -3.1293585300445557
    6. '_' → logprob: -3.3793585300445557
    7. ' -' → logprob: -3.7543585300445557
    8. '
' → logprob: -4.004358291625977
    9. '```' → logprob: -4.379358291625977
    10. ' )' → logprob: -4.504358291625977

Token 412: ''' (ID: 6)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.3511349856853485
    2. 'éc' → logprob: -2.351135015487671
    3. 'interval' → logprob: -2.976135015487671
    4. 'e' → logprob: -3.101135015487671
    5. 'ans' → logprob: -3.351135015487671
    6. ''éc' → logprob: -4.101134777069092
    7. 'distance' → logprob: -4.726134777069092
    8. 'istant' → logprob: -4.851134777069092
    9. 'é' → logprob: -5.351134777069092
    10. 'iff' → logprob: -5.476134777069092

Token 413: 'interval' (ID: 37558)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.39024820923805237
    2. 'interval' → logprob: -1.39024817943573
    3. 'distance' → logprob: -3.1402482986450195
    4. 'istant' → logprob: -4.0152482986450195
    5. 'éc' → logprob: -4.7652482986450195
    6. 'e' → logprob: -7.5152482986450195
    7. '```' → logprob: -7.6402482986450195
    8. 'ist' → logprob: -7.7652482986450195
    9. 'esp' → logprob: -8.01524829864502
    10. 'é' → logprob: -8.14024829864502

Token 414: 'le' (ID: 282)
  Prédit: 'ence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.0859939455986023
    2. 'ance' → logprob: -2.710994005203247
    3. 'e' → logprob: -4.460993766784668
    4. 'ce' → logprob: -6.460993766784668
    5. 'ace' → logprob: -6.960993766784668
    6. 'rence' → logprob: -7.585993766784668
    7. 'n' → logprob: -8.460993766784668
    8. 'en' → logprob: -8.710993766784668
    9. '```' → logprob: -8.835993766784668
    10. 'le' → logprob: -8.960993766784668

Token 415: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013679873198270798
    2. ')
' → logprob: -5.2636799812316895
    3. ' )' → logprob: -5.3886799812316895
    4. '')' → logprob: -6.6386799812316895
    5. '   ' → logprob: -7.0136799812316895
    6. ',' → logprob: -7.2636799812316895
    7. ' )
' → logprob: -9.013679504394531
    8. '):' → logprob: -9.388679504394531
    9. '`)' → logprob: -9.388679504394531
    10. 's' → logprob: -9.513679504394531

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008829887956380844
    2. 'for' → logprob: -5.1338300704956055
    3. ' for' → logprob: -6.5088300704956055
    4. '
' → logprob: -7.0088300704956055
    5. '    
' → logprob: -8.258830070495605
    6. '<|end|>' → logprob: -10.133830070495605
    7. 'a' → logprob: -10.258830070495605
    8. ',' → logprob: -10.383830070495605
    9. ')' → logprob: -10.633830070495605
    10. '#' → logprob: -11.133830070495605

Token 417: ' ans' (ID: 3345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7050322890281677
    2. 'for' → logprob: -0.7050322890281677
    3. ' ans' → logprob: -6.0800323486328125
    4. '   ' → logprob: -6.2050323486328125
    5. ' used' → logprob: -6.2050323486328125
    6. 'a' → logprob: -6.4550323486328125
    7. ' a' → logprob: -6.9550323486328125
    8. 'used' → logprob: -7.4550323486328125
    9. 'ans' (adapté à ' ans') → logprob: -7.9550323486328125
    10. 'score' → logprob: -8.205032348632812

Token 418: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0061989580281078815
    2. ' =' → logprob: -5.381198883056641
    3. '-=' → logprob: -6.881198883056641
    4. '=' → logprob: -8.13119888305664
    5. ' -' → logprob: -9.00619888305664
    6. ' +=' → logprob: -9.38119888305664
    7. '-' → logprob: -10.75619888305664
    8. '_' → logprob: -11.63119888305664
    9. ' ' → logprob: -12.13119888305664
    10. ',' → logprob: -12.38119888305664

Token 419: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.12250172346830368
    2. ' adjust' → logprob: -2.3725016117095947
    3. 'ans' → logprob: -4.497501850128174
    4. ' ans' → logprob: -5.372501850128174
    5. 'apply' → logprob: -6.122501850128174
    6. '0' → logprob: -7.497501850128174
    7. 'en' → logprob: -7.622501850128174
    8. 'correct' → logprob: -7.622501850128174
    9. 'fix' → logprob: -7.747501850128174
    10. ' apply' → logprob: -7.872501850128174

Token 420: '_for' (ID: 11903)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.015637783333659172
    2. '_' → logprob: -5.1406378746032715
    3. '_scores' → logprob: -5.5156378746032715
    4. '(ans' → logprob: -5.6406378746032715
    5. '_ans' → logprob: -7.8906378746032715
    6. '(' → logprob: -7.8906378746032715
    7. '_final' → logprob: -8.140637397766113
    8. '_for' → logprob: -8.890637397766113
    9. '(score' → logprob: -8.890637397766113
    10. '_answer' → logprob: -9.015637397766113

Token 421: '_constraints' (ID: 153522)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.6735357046127319
    2. '_constraints' → logprob: -2.2985358238220215
    3. '_repeat' → logprob: -2.5485358238220215
    4. '_inter' → logprob: -2.9235358238220215
    5. '_k' → logprob: -3.0485358238220215
    6. '_constraint' → logprob: -3.2985358238220215
    7. 'k' → logprob: -3.2985358238220215
    8. '_for' → logprob: -3.6735358238220215
    9. '_rule' → logprob: -4.2985358238220215
    10. '_same' → logprob: -4.2985358238220215

Token 422: '(a' (ID: 6271)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03458132594823837
    2. '(a' → logprob: -3.409581422805786
    3. '(' → logprob: -7.034581184387207
    4. ' (' → logprob: -10.784581184387207
    5. '(answer' → logprob: -11.034581184387207
    6. '(t' → logprob: -11.659581184387207
    7. '(n' → logprob: -13.409581184387207
    8. '(an' → logprob: -13.534581184387207
    9. '(
' → logprob: -13.784581184387207
    10. '(s' → logprob: -13.909581184387207

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ' ,' → logprob: -10.625051498413086
    3. ',k' → logprob: -11.125051498413086
    4. ')' → logprob: -11.875051498413086
    5. ',
' → logprob: -12.500051498413086
    6. ',n' → logprob: -14.125051498413086
    7. '   ' → logprob: -15.125051498413086
    8. '[' → logprob: -15.750051498413086
    9. '‌,' → logprob: -16.125051498413086
    10. 'k' → logprob: -16.625051498413086

Token 424: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5759885907173157
    2. ' k' → logprob: -0.8259885907173157
    3. ' n' → logprob: -11.07598876953125
    4. 'n' → logprob: -11.32598876953125
    5. ' ' → logprob: -12.20098876953125
    6. 'INF' → logprob: -12.70098876953125
    7. '	k' → logprob: -12.95098876953125
    8. 't' → logprob: -13.20098876953125
    9. ' INF' → logprob: -13.32598876953125
    10. ' t' → logprob: -13.45098876953125

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026300468016415834
    2. ',k' → logprob: -8.500263214111328
    3. ',
' → logprob: -10.750263214111328
    4. ' ,' → logprob: -10.875263214111328
    5. ')' → logprob: -11.625263214111328
    6. '-' → logprob: -12.625263214111328
    7. '   ' → logprob: -12.750263214111328
    8. ' -' → logprob: -14.875263214111328
    9. ',K' → logprob: -14.875263214111328
    10. ',n' → logprob: -15.000263214111328

Token 426: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024773201439529657
    2. ' k' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.252477645874023
    4. ' ' → logprob: -15.252477645874023
    5. ')' → logprob: -15.752477645874023
    6. '	k' → logprob: -16.002477645874023
    7. '  ' → logprob: -17.002477645874023
    8. '```' → logprob: -17.064977645874023
    9. '
' → logprob: -17.189977645874023
    10. ',' → logprob: -17.189977645874023

Token 427: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16263742744922638
    2. ',' → logprob: -1.91263747215271
    3. '   ' → logprob: -6.787637233734131
    4. ' )' → logprob: -6.912637233734131
    5. ' ,' → logprob: -8.537637710571289
    6. ',)' → logprob: -10.412637710571289
    7. '-' → logprob: -11.287637710571289
    8. ',a' → logprob: -12.537637710571289
    9. ',r' → logprob: -12.537637710571289
    10. '<|end|>' → logprob: -12.537637710571289

Token 428: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4931436777114868
    2. ' r' → logprob: -0.9931436777114868
    3. ' ans' → logprob: -4.493143558502197
    4. 'ans' → logprob: -5.118143558502197
    5. ')' → logprob: -7.868143558502197
    6. 'INF' → logprob: -7.868143558502197
    7. ' INF' → logprob: -8.243144035339355
    8. ' ' → logprob: -8.743144035339355
    9. '   ' → logprob: -9.805644035339355
    10. '(ans' → logprob: -10.243144035339355

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023149994667619467
    2. ',s' → logprob: -6.502315044403076
    3. ' ,' → logprob: -7.127315044403076
    4. ',
' → logprob: -12.252314567565918
    5. 's' → logprob: -13.377314567565918
    6. ' s' → logprob: -13.502314567565918
    7. ')' → logprob: -14.002314567565918
    8. ',p' → logprob: -14.377314567565918
    9. '   ' → logprob: -16.502315521240234
    10. ',S' → logprob: -16.752315521240234

Token 430: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.42871561646461487
    2. 's' → logprob: -1.0537155866622925
    3. ',' → logprob: -12.428715705871582
    4. 'p' → logprob: -13.053715705871582
    5. ' p' → logprob: -13.053715705871582
    6. '
' → logprob: -13.678715705871582
    7. ' ' → logprob: -13.803715705871582
    8. ',s' → logprob: -13.803715705871582
    9. ' ' → logprob: -13.928715705871582
    10. '   ' → logprob: -13.928715705871582

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036965898470953107
    2. ',p' → logprob: -8.500370025634766
    3. ' ,' → logprob: -8.750370025634766
    4. ')' → logprob: -12.750370025634766
    5. ',
' → logprob: -12.750370025634766
    6. 'p' → logprob: -13.250370025634766
    7. ' p' → logprob: -16.875370025634766
    8. ',P' → logprob: -17.250370025634766
    9. '   ' → logprob: -17.375370025634766
    10. ',s' → logprob: -17.625370025634766

Token 432: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14268113672733307
    2. ' p' → logprob: -2.017681121826172
    3. 's' → logprob: -13.017681121826172
    4. '   ' → logprob: -13.392681121826172
    5. ' ' → logprob: -13.892681121826172
    6. ' s' → logprob: -15.267681121826172
    7. ')' → logprob: -15.267681121826172
    8. '
' → logprob: -15.642681121826172
    9. ',' → logprob: -15.767681121826172
    10. '    ' → logprob: -16.017681121826172

Token 433: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001410850090906024
    2. ',' → logprob: -9.125141143798828
    3. ')
' → logprob: -11.000141143798828
    4. '   ' → logprob: -11.875141143798828
    5. ' )' → logprob: -11.875141143798828
    6. ')

' → logprob: -15.500141143798828
    7. ')`' → logprob: -15.500141143798828
    8. ')
' → logprob: -15.625141143798828
    9. ',)' → logprob: -15.625141143798828
    10. ')#' → logprob: -15.750141143798828

Token 434: ' ans' (ID: 3345)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01112091913819313
    2. ' t' → logprob: -4.511120796203613
    3. ')' → logprob: -10.386120796203613
    4. 'INF' → logprob: -11.136120796203613
    5. '   ' → logprob: -12.011120796203613
    6. ' ' → logprob: -12.261120796203613
    7. ')t' → logprob: -12.261120796203613
    8. 'a' → logprob: -12.761120796203613
    9. '	t' → logprob: -13.011120796203613
    10. '    ' → logprob: -13.386120796203613

Token 435: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ' )' → logprob: -11.750017166137695
    3. ',' → logprob: -12.500017166137695
    4. ')
' → logprob: -12.875017166137695
    5. '   ' → logprob: -13.375017166137695
    6. '),' → logprob: -15.500017166137695
    7. ')`' → logprob: -15.500017166137695
    8. ')#' → logprob: -15.875017166137695
    9. '+' → logprob: -16.000017166137695
    10. ')\
' → logprob: -16.125017166137695

Token 436: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06210605427622795
    2. '<|end|>' → logprob: -3.437106132507324
    3. ')' → logprob: -4.562106132507324
    4. '    
' → logprob: -4.937106132507324
    5. '
' → logprob: -5.062106132507324
    6. 'def' → logprob: -6.687106132507324
    7. '    ' → logprob: -7.187106132507324
    8. '\' → logprob: -8.062106132507324
    9. '[' → logprob: -8.437106132507324
    10. ':' → logprob: -8.562106132507324

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024869529530405998
    2. '<|end|>' → logprob: -3.774869441986084
    3. 'def' → logprob: -7.774869441986084
    4. '
' → logprob: -7.899869441986084
    5. '    
' → logprob: -8.274869918823242
    6. 'return' → logprob: -8.399869918823242
    7. ')' → logprob: -9.399869918823242
    8. '#' → logprob: -9.399869918823242
    9. '<|end|>' → logprob: -10.024869918823242
    10. 'if' → logprob: -10.524869918823242

Token 438: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.277553620748222e-05
    2. '   ' → logprob: -9.750062942504883
    3. ' print' → logprob: -12.375062942504883
    4. 'return' → logprob: -15.500062942504883
    5. '
' → logprob: -18.000062942504883
    6. '    
' → logprob: -18.500062942504883
    7. '#' (adapté à ' #') → logprob: -18.625062942504883
    8. '#print' → logprob: -18.750062942504883
    9. ' ' → logprob: -19.000062942504883
    10. '```' → logprob: -19.125062942504883

Token 439: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.718606891809031e-05
    2. ' print' → logprob: -10.000066757202148
    3. '   ' → logprob: -10.750066757202148
    4. 'return' → logprob: -15.250066757202148
    5. 'if' → logprob: -18.50006675720215
    6. '#' → logprob: -18.87506675720215
    7. 'pr' → logprob: -19.25006675720215
    8. '#print' → logprob: -19.62506675720215
    9. '```' → logprob: -19.87506675720215
    10. ' ' → logprob: -20.00006675720215

Token 440: 'ichage' (ID: 118475)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04790818318724632
    2. ' print' → logprob: -3.672908067703247
    3. '   ' → logprob: -5.547908306121826
    4. '#print' → logprob: -5.672908306121826
    5. 'l' → logprob: -5.922908306121826
    6. 'ic' → logprob: -6.047908306121826
    7. '_print' → logprob: -6.547908306121826
    8. 'lace' → logprob: -6.547908306121826
    9. '.print' → logprob: -7.172908306121826
    10. 'la' → logprob: -7.172908306121826

Token 441: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0032004083041101694
    2. '(' → logprob: -5.753200531005859
    3. 'ans' → logprob: -11.37820053100586
    4. '(
' → logprob: -11.87820053100586
    5. '   ' → logprob: -13.00320053100586
    6. '()' → logprob: -13.62820053100586
    7. ' ans' → logprob: -15.37820053100586
    8. ' (' → logprob: -15.62820053100586
    9. '(answer' → logprob: -15.87820053100586
    10. '	ans' → logprob: -16.12820053100586

Token 442: ' score' (ID: 8429)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13861997425556183
    2. '(ans' → logprob: -2.138619899749756
    3. ' ans' → logprob: -4.888619899749756
    4. 'final' → logprob: -6.013619899749756
    5. ' final' → logprob: -7.513619899749756
    6. 'score' → logprob: -8.013620376586914
    7. '(' → logprob: -8.013620376586914
    8. 'result' → logprob: -9.138620376586914
    9. 'answer' → logprob: -9.763620376586914
    10. 'a' → logprob: -10.013620376586914

Token 443: ' final' (ID: 1721)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5516563057899475
    2. '(ans' → logprob: -1.3016562461853027
    3. '   ' → logprob: -1.9266562461853027
    4. '(
' → logprob: -5.301656246185303
    5. '=' → logprob: -7.676656246185303
    6. ')' → logprob: -7.801656246185303
    7. ',' → logprob: -8.676656723022461
    8. '(a' → logprob: -10.301656723022461
    9. '()' → logprob: -10.301656723022461
    10. '(an' → logprob: -10.551656723022461

Token 444: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023036282509565353
    2. 'print' → logprob: -4.023036479949951
    3. '(ans' → logprob: -6.023036479949951
    4. '
' → logprob: -6.898036479949951
    5. '    
' → logprob: -8.023036003112793
    6. '(' → logprob: -8.273036003112793
    7. ' print' → logprob: -8.273036003112793
    8. ')' → logprob: -8.398036003112793
    9. '(print' → logprob: -9.648036003112793
    10. ',' → logprob: -9.898036003112793

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071632275357842445
    2. 'print' → logprob: -5.007163047790527
    3. ' print' → logprob: -7.757163047790527
    4. '
' → logprob: -11.257163047790527
    5. '    
' → logprob: -12.007163047790527
    6. '```' → logprob: -14.132163047790527
    7. '	print' → logprob: -15.632163047790527
    8. '       ' → logprob: -16.507164001464844
    9. '    ' → logprob: -17.257164001464844
    10. '
' → logprob: -17.382164001464844

Token 446: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. ' print' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '```' → logprob: -20.500001907348633
    5. 'pr' → logprob: -23.125001907348633
    6. '`' → logprob: -24.750001907348633
    7. '	print' → logprob: -24.875001907348633
    8. 'println' → logprob: -26.250001907348633
    9. '
' → logprob: -26.375001907348633
    10. 'prin' → logprob: -26.625001907348633

Token 447: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12694889307022095
    2. '(' → logprob: -2.126948833465576
    3. '()' → logprob: -11.001949310302734
    4. '(
' → logprob: -14.001949310302734
    5. '('' → logprob: -14.251949310302734
    6. ' (' → logprob: -14.251949310302734
    7. '(abs' → logprob: -14.376949310302734
    8. '(answer' → logprob: -14.751949310302734
    9. '(int' → logprob: -15.626949310302734
    10. '(a' → logprob: -15.751949310302734

Token 448: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')`' → logprob: -16.0
    4. ')
' → logprob: -16.625
    5. '`)' → logprob: -17.75
    6. '))' → logprob: -18.625
    7. '')' → logprob: -18.875
    8. '()' → logprob: -19.375
    9. '),' → logprob: -19.625
    10. '())' → logprob: -19.75

Token 449: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0495833158493042
    2. '_' → logprob: -3.2995834350585938
    3. '(' → logprob: -4.924583435058594
    4. ':' → logprob: -6.549583435058594
    5. '()' → logprob: -7.799583435058594
    6. '[' → logprob: -7.799583435058594
    7. '#' → logprob: -7.924583435058594
    8. ' def' → logprob: -8.049583435058594
    9. '
' → logprob: -8.174583435058594
    10. '_def' → logprob: -8.549583435058594

Token 450: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.0014132121577858925
    2. 'create' → logprob: -7.251413345336914
    3. ' calculate' → logprob: -7.876413345336914
    4. '_' → logprob: -8.751413345336914
    5. ' _' → logprob: -9.626413345336914
    6. '_create' → logprob: -10.501413345336914
    7. ' ' → logprob: -10.876413345336914
    8. ' adjust' → logprob: -11.501413345336914
    9. ' ' → logprob: -11.626413345336914
    10. ' compute' → logprob: -12.001413345336914

Token 451: '_opt' (ID: 41733)
  Prédit: '_opt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_opt' → logprob: -0.0017133781220763922
    2. '_' → logprob: -6.376713275909424
    3. '_a' → logprob: -12.376713752746582
    4. ' _' → logprob: -13.126713752746582
    5. '_optimizer' → logprob: -13.376713752746582
    6. '_OPT' → logprob: -14.001713752746582
    7. 'optimal' → logprob: -15.001713752746582
    8. '_best' → logprob: -15.001713752746582
    9. 'Optimal' → logprob: -15.001713752746582
    10. '```' → logprob: -15.376713752746582

Token 452: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.125003814697266
    3. 'imum' → logprob: -13.750003814697266
    4. 'IMAL' → logprob: -15.500003814697266
    5. '```' → logprob: -16.875003814697266
    6. '_im' → logprob: -17.500003814697266
    7. 'mal' → logprob: -18.125003814697266
    8. 'im' → logprob: -18.125003814697266
    9. 'ima' → logprob: -18.125003814697266
    10. '__' → logprob: -18.250003814697266

Token 453: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.00016432604752480984
    2. '_move' → logprob: -8.875164031982422
    3. '_mov' → logprob: -11.625164031982422
    4. '_' → logprob: -12.250164031982422
    5. '_m' → logprob: -13.250164031982422
    6. '_mv' → logprob: -13.625164031982422
    7. '_s' → logprob: -14.125164031982422
    8. '_matches' → logprob: -14.125164031982422
    9. '```' → logprob: -14.375164031982422
    10. '_possible' → logprob: -14.750164031982422

Token 454: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.9040898880339228e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -13.625028610229492
    4. '(s' → logprob: -15.500028610229492
    5. '(
' → logprob: -18.875028610229492
    6. 't' → logprob: -19.125028610229492
    7. '(T' → logprob: -19.375028610229492
    8. '(a' → logprob: -20.250028610229492
    9. '(te' → logprob: -20.375028610229492
    10. '(n' → logprob: -21.000028610229492

Token 455: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026514052879065275
    2. '):
' → logprob: -6.002651214599609
    3. ')' → logprob: -9.25265121459961
    4. ':' → logprob: -9.62765121459961
    5. ' ):' → logprob: -11.75265121459961
    6. '):
' → logprob: -12.37765121459961
    7. '():' → logprob: -14.25265121459961
    8. '):

' → logprob: -15.25265121459961
    9. '}:' → logprob: -15.87765121459961
    10. ' :' → logprob: -16.25265121459961

Token 456: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03563228249549866
    2. ':
' → logprob: -3.660632371902466
    3. '   ' → logprob: -5.285632133483887
    4. ' :' → logprob: -5.660632133483887
    5. ' :
' → logprob: -8.410632133483887
    6. '():' → logprob: -8.535632133483887
    7. '():
' → logprob: -10.035632133483887
    8. '):' → logprob: -10.285632133483887
    9. '":' → logprob: -10.410632133483887
    10. ':return' → logprob: -10.535632133483887

Token 457: ' """
' (ID: 7037)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24562548100948334
    2. ' a' → logprob: -1.7456254959106445
    3. ' moves' → logprob: -3.8706254959106445
    4. 'moves' → logprob: -4.7456254959106445
    5. '   ' → logprob: -4.9956254959106445
    6. ' res' → logprob: -5.2456254959106445
    7. 'res' → logprob: -6.8706254959106445
    8. ' result' → logprob: -8.495625495910645
    9. 'result' → logprob: -9.120625495910645
    10. ' optimal' → logprob: -9.995625495910645

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013337409123778343
    2. 'a' → logprob: -4.8883376121521
    3. '#' → logprob: -5.8883376121521
    4. '    ' → logprob: -6.8883376121521
    5. ' a' → logprob: -8.513337135314941
    6. ' ' → logprob: -8.638337135314941
    7. '  ' → logprob: -8.888337135314941
    8. '    
' → logprob: -9.138337135314941
    9. 'token' → logprob: -9.263337135314941
    10. '"""' → logprob: -9.263337135314941

Token 459: ' Gén' (ID: 71828)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5221855640411377
    2. ' moves' → logprob: -2.2721855640411377
    3. 'moves' → logprob: -2.3971855640411377
    4. ' a' → logprob: -2.6471855640411377
    5. ' res' → logprob: -2.8971855640411377
    6. '   ' → logprob: -3.6471855640411377
    7. ' optimal' → logprob: -4.522185325622559
    8. 'res' → logprob: -4.772185325622559
    9. '#' → logprob: -4.772185325622559
    10. 'result' → logprob: -5.147185325622559

Token 460: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03572891652584076
    2. '   ' → logprob: -4.535728931427002
    3. '```' → logprob: -4.785728931427002
    4. 'érer' → logprob: -5.535728931427002
    5. 'enerate' → logprob: -6.160728931427002
    6. 'èr' → logprob: -6.910728931427002
    7. 'def' → logprob: -7.035728931427002
    8. 'ère' → logprob: -7.160728931427002
    9. '
' → logprob: -7.285728931427002
    10. 'érateur' → logprob: -7.410728931427002

Token 461: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6973674297332764
    2. ' a' → logprob: -1.6973674297332764
    3. 'a' → logprob: -2.1973674297332764
    4. '[]' → logprob: -2.3223674297332764
    5. ' [' → logprob: -3.3223674297332764
    6. '[a' → logprob: -3.9473674297332764
    7. '[
' → logprob: -4.3223676681518555
    8. '['' → logprob: -4.3223676681518555
    9. '   ' → logprob: -5.3223676681518555
    10. '[t' → logprob: -5.3223676681518555

Token 462: ' sé' (ID: 7462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2579339742660522
    2. '[]' → logprob: -1.3829339742660522
    3. 'optimal' → logprob: -1.5079339742660522
    4. '[' → logprob: -1.8829339742660522
    5. 'next' → logprob: -3.257934093475342
    6. 'moves' → logprob: -4.257934093475342
    7. 'result' → logprob: -4.632934093475342
    8. '['' → logprob: -4.757934093475342
    9. '[
' → logprob: -5.007934093475342
    10. ' next' → logprob: -6.257934093475342

Token 463: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.4021237802808173e-05
    2. 'q' → logprob: -12.250014305114746
    3. 'QUENCE' → logprob: -12.625014305114746
    4. 'quences' → logprob: -13.500014305114746
    5. 'que' → logprob: -13.500014305114746
    6. 'quent' → logprob: -14.250014305114746
    7. 'rie' → logprob: -14.375014305114746
    8. 'qu' → logprob: -14.625014305114746
    9. '#' → logprob: -14.625014305114746
    10. '   ' → logprob: -14.875014305114746

Token 464: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0806543156504631
    2. ' optimale' → logprob: -3.2056543827056885
    3. '[' → logprob: -4.330654144287109
    4. '<|end|>' → logprob: -5.455654144287109
    5. ' suivante' → logprob: -5.455654144287109
    6. ' de' → logprob: -5.580654144287109
    7. '[]' → logprob: -5.830654144287109
    8. '_des' → logprob: -6.330654144287109
    9. '_' → logprob: -6.330654144287109
    10. ' of' → logprob: -6.705654144287109

Token 465: ' coups' (ID: 98942)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.9475193023681641
    2. ' coups' → logprob: -1.072519302368164
    3. 'cou' → logprob: -2.447519302368164
    4. ' moves' → logprob: -3.197519302368164
    5. 'next' → logprob: -3.447519302368164
    6. 'me' → logprob: -3.697519302368164
    7. 'tokens' → logprob: -4.197519302368164
    8. '[' → logprob: -4.197519302368164
    9. ' next' → logprob: -4.447519302368164
    10. 'c' → logprob: -4.697519302368164

Token 466: ' optim' (ID: 9367)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9090621471405029
    2. '<|end|>' → logprob: -1.909062147140503
    3. '   ' → logprob: -2.159062147140503
    4. ' à' → logprob: -2.409062147140503
    5. ' ' → logprob: -2.784062147140503
    6. '_a' → logprob: -3.284062147140503
    7. ' optimale' → logprob: -3.534062147140503
    8. 'def' → logprob: -4.284062385559082
    9. 'a' → logprob: -4.284062385559082
    10. ' =' → logprob: -4.409062385559082

Token 467: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.06225447729229927
    2. 'im' → logprob: -3.1872544288635254
    3. 'ales' → logprob: -4.687254428863525
    4. 'al' → logprob: -5.687254428863525
    5. 'um' → logprob: -6.437254428863525
    6. 'ale' → logprob: -6.687254428863525
    7. 'om' → logprob: -7.062254428863525
    8. 'isés' → logprob: -7.062254428863525
    9. 'imes' → logprob: -7.687254428863525
    10. 'def' → logprob: -8.062254905700684

Token 468: ' maxim' (ID: 29045)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2843751311302185
    2. 'def' → logprob: -2.5343751907348633
    3. '<|end|>' → logprob: -3.0343751907348633
    4. ' ' → logprob: -3.6593751907348633
    5. '_' → logprob: -3.9093751907348633
    6. ' =' → logprob: -4.034375190734863
    7. '  ' → logprob: -4.784375190734863
    8. '(' → logprob: -5.159375190734863
    9. '(t' → logprob: -5.159375190734863
    10. '_a' → logprob: -5.409375190734863

Token 469: 'isant' (ID: 56111)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.12717598676681519
    2. 'ale' → logprob: -2.75217604637146
    3. 'isant' → logprob: -3.50217604637146
    4. 'is' → logprob: -4.877175807952881
    5. 'al' → logprob: -5.627175807952881
    6. 'ales' → logprob: -5.627175807952881
    7. '```' → logprob: -5.752175807952881
    8. 'iser' → logprob: -6.502175807952881
    9. 'isés' → logprob: -6.752175807952881
    10. 'a' → logprob: -7.002175807952881

Token 470: ' le' (ID: 505)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.29281485080719
    2. 'le' → logprob: -1.41781485080719
    3. 'la' → logprob: -2.0428147315979004
    4. 't' → logprob: -2.5428147315979004
    5. 'score' → logprob: -2.9178147315979004
    6. '[' → logprob: -3.0428147315979004
    7. ' the' → logprob: -3.5428147315979004
    8. 'l' → logprob: -3.7928147315979004
    9. '[]' → logprob: -3.7928147315979004
    10. 'points' → logprob: -4.0428147315979

Token 471: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.011674025095999241
    2. ' score' → logprob: -4.761673927307129
    3. 'gain' → logprob: -5.886673927307129
    4. ' gain' → logprob: -9.261673927307129
    5. 'g' → logprob: -9.511673927307129
    6. 'points' → logprob: -9.636673927307129
    7. 'point' → logprob: -10.761673927307129
    8. 'scores' → logprob: -11.261673927307129
    9. 's' → logprob: -12.886673927307129
    10. ' gains' → logprob: -13.386673927307129

Token 472: ' contre' (ID: 17771)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.193793386220932
    2. ' ' → logprob: -2.943793296813965
    3. ' pour' → logprob: -4.193793296813965
    4. 'possible' → logprob: -4.318793296813965
    5. ' contre' → logprob: -4.443793296813965
    6. 'def' → logprob: -4.568793296813965
    7. ' possible' → logprob: -4.693793296813965
    8. ' à' → logprob: -4.818793296813965
    9. ',' → logprob: -4.943793296813965
    10. '_possible' → logprob: -5.068793296813965

Token 473: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018194660544395447
    2. ' t' → logprob: -4.018194675445557
    3. ''t' → logprob: -11.518194198608398
    4. ''' → logprob: -11.893194198608398
    5. '   ' → logprob: -12.018194198608398
    6. ' ' → logprob: -12.643194198608398
    7. 'def' → logprob: -12.768194198608398
    8. '`t' → logprob: -12.893194198608398
    9. '(t' → logprob: -13.143194198608398
    10. '['' → logprob: -13.768194198608398

Token 474: ' sé' (ID: 7462)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.40787243843078613
    2. ' advers' → logprob: -1.9078724384307861
    3. 't' → logprob: -2.157872438430786
    4. 'op' → logprob: -3.157872438430786
    5. ''' → logprob: -5.282872200012207
    6. ''ad' → logprob: -5.782872200012207
    7. 'c' → logprob: -6.157872200012207
    8. ' t' → logprob: -6.157872200012207
    9. 'def' → logprob: -6.282872200012207
    10. 'cho' → logprob: -6.282872200012207

Token 475: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -5.5577775128767826e-06
    2. 'QUENCE' → logprob: -12.875005722045898
    3. 'q' → logprob: -13.250005722045898
    4. 'quences' → logprob: -14.250005722045898
    5. '_' → logprob: -16.0000057220459
    6. '`' → logprob: -16.2500057220459
    7. 'qu' → logprob: -16.2500057220459
    8. '#' → logprob: -16.6250057220459
    9. 'quent' → logprob: -17.0000057220459
    10. 'que' → logprob: -17.1250057220459

Token 476: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1568081378936768
    2. ' t' → logprob: -1.5318081378936768
    3. '   ' → logprob: -1.9068081378936768
    4. ' de' → logprob: -2.5318081378936768
    5. 't' → logprob: -2.6568081378936768
    6. 'des' → logprob: -3.4068081378936768
    7. ' advers' → logprob: -3.5318081378936768
    8. ' of' → logprob: -3.7818081378936768
    9. 'def' → logprob: -4.156807899475098
    10. 'de' → logprob: -4.281807899475098

Token 477: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22423473000526428
    2. ' l' → logprob: -1.724234700202942
    3. 'ad' → logprob: -4.099234580993652
    4. 't' → logprob: -5.724234580993652
    5. ' advers' → logprob: -7.099234580993652
    6. ' coups' → logprob: -7.224234580993652
    7. 'cou' → logprob: -7.349234580993652
    8. ' t' → logprob: -9.099234580993652
    9. 'op' → logprob: -9.224234580993652
    10. 'moves' → logprob: -9.349234580993652

Token 478: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.084286168217659
    2. 'ad' → logprob: -2.5842862129211426
    3. ' advers' → logprob: -5.709286212921143
    4. ''' → logprob: -6.334286212921143
    5. '’ad' → logprob: -9.084285736083984
    6. 'a' → logprob: -9.584285736083984
    7. '_ad' → logprob: -10.459285736083984
    8. ''op' → logprob: -10.834285736083984
    9. ''a' → logprob: -11.584285736083984
    10. 'adj' → logprob: -11.834285736083984

Token 479: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.0004527182609308511
    2. 'v' → logprob: -8.000452995300293
    3. 'verse' → logprob: -9.125452995300293
    4. 'ver' → logprob: -12.625452995300293
    5. ' advers' → logprob: -13.625452995300293
    6. ' vers' → logprob: -14.125452995300293
    7. 'ves' → logprob: -14.250452995300293
    8. 'ers' → logprob: -14.250452995300293
    9. 'vs' → logprob: -14.375452995300293
    10. 'versa' → logprob: -15.375452995300293

Token 480: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.013070817105472088
    2. 'e' → logprob: -5.888070583343506
    3. 'ent' → logprob: -6.263070583343506
    4. 'a' → logprob: -6.263070583343506
    5. 'ateur' → logprob: -7.388070583343506
    6. 'ire' → logprob: -7.513070583343506
    7. 'ir' → logprob: -7.888070583343506
    8. '   ' → logprob: -8.013071060180664
    9. 'oire' → logprob: -8.138071060180664
    10. 'aine' → logprob: -8.263071060180664

Token 481: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2235463261604309
    2. ':' → logprob: -2.348546266555786
    3. ',' → logprob: -3.223546266555786
    4. 'def' → logprob: -3.723546266555786
    5. '.' → logprob: -4.723546504974365
    6. ' :' → logprob: -5.098546504974365
    7. '(t' → logprob: -5.098546504974365
    8. 't' → logprob: -5.348546504974365
    9. '):' → logprob: -5.848546504974365
    10. ':
' → logprob: -6.098546504974365

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023078618105500937
    2. '    
' → logprob: -6.877307891845703
    3. '
' → logprob: -8.002307891845703
    4. 'def' → logprob: -8.502307891845703
    5. ':' → logprob: -8.627307891845703
    6. '\n' → logprob: -8.877307891845703
    7. ' :' → logprob: -9.377307891845703
    8. '    ' → logprob: -9.502307891845703
    9. ' 
' → logprob: -10.002307891845703
    10. '"' → logprob: -10.627307891845703

Token 483: ' Pour' (ID: 13931)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5260314345359802
    2. '   ' → logprob: -1.026031494140625
    3. ':
' → logprob: -4.026031494140625
    4. ' :' → logprob: -4.026031494140625
    5. ' :
' → logprob: -5.651031494140625
    6. '
' → logprob: -6.026031494140625
    7. '```' → logprob: -6.901031494140625
    8. '    
' → logprob: -7.026031494140625
    9. '\n' → logprob: -7.151031494140625
    10. '    ' → logprob: -7.276031494140625

Token 484: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11308306455612183
    2. 'i' → logprob: -2.2380831241607666
    3. ' ' → logprob: -8.738082885742188
    4. ' c' → logprob: -10.613082885742188
    5. 'c' → logprob: -10.988082885742188
    6. ' chaque' → logprob: -11.113082885742188
    7. ' idx' → logprob: -11.238082885742188
    8. ' _' → logprob: -12.363082885742188
    9. '_i' → logprob: -12.613082885742188
    10. '_' → logprob: -12.738082885742188

Token 485: ' coup' (ID: 25465)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.6477428078651428
    2. ' advers' → logprob: -1.897742748260498
    3. ' ' → logprob: -2.772742748260498
    4. 'c' → logprob: -2.772742748260498
    5. ' caract' → logprob: -2.897742748260498
    6. 'car' → logprob: -3.522742748260498
    7. ' i' → logprob: -3.897742748260498
    8. ' coup' → logprob: -4.147742748260498
    9. ' position' → logprob: -4.147742748260498
    10. 'char' → logprob: -4.397742748260498

Token 486: ' de' (ID: 334)
  Prédit: ' advers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' advers' → logprob: -0.09472867846488953
    2. ' in' → logprob: -3.094728708267212
    3. ' de' → logprob: -3.469728708267212
    4. ',' → logprob: -4.969728469848633
    5. ' enn' → logprob: -6.594728469848633
    6. ' en' → logprob: -6.969728469848633
    7. ' t' → logprob: -7.344728469848633
    8. '_' → logprob: -7.469728469848633
    9. ' ' → logprob: -7.469728469848633
    10. 'ad' → logprob: -7.719728469848633

Token 487: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6156460642814636
    2. 't' → logprob: -0.8656460642814636
    3. ' l' → logprob: -3.6156461238861084
    4. ' t' → logprob: -4.615645885467529
    5. 'ad' → logprob: -6.615645885467529
    6. ' ' → logprob: -8.365646362304688
    7. 'a' → logprob: -8.615646362304688
    8. ' advers' → logprob: -9.740646362304688
    9. 'op' → logprob: -9.990646362304688
    10. 'la' → logprob: -9.990646362304688

Token 488: ''ad' (ID: 36162)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.2986629009246826
    2. ' advers' → logprob: -1.5486629009246826
    3. ''ad' → logprob: -3.7986629009246826
    4. 't' → logprob: -3.9236629009246826
    5. 'a' → logprob: -6.548663139343262
    6. '_ad' → logprob: -7.173663139343262
    7. 'enn' → logprob: -7.173663139343262
    8. '’ad' → logprob: -9.048663139343262
    9. ' t' → logprob: -9.798663139343262
    10. ''utilisateur' → logprob: -9.923663139343262

Token 489: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.02399144321680069
    2. 'ers' → logprob: -4.148991584777832
    3. 'verse' → logprob: -6.523991584777832
    4. 'def' → logprob: -6.523991584777832
    5. 'f' → logprob: -7.273991584777832
    6. 'v' → logprob: -7.273991584777832
    7. ' advers' → logprob: -7.273991584777832
    8. 'é' → logprob: -7.898991584777832
    9. 'erso' → logprob: -8.023991584777832
    10. 'ver' → logprob: -8.148991584777832

Token 490: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.004112830851227045
    2. 'ire' → logprob: -7.879112720489502
    3. 're' → logprob: -8.00411319732666
    4. 'arre' → logprob: -8.00411319732666
    5. 'def' → logprob: -8.12911319732666
    6. 'ière' → logprob: -8.25411319732666
    7. 'iaire' → logprob: -8.25411319732666
    8. 'arr' → logprob: -8.37911319732666
    9. 'a' → logprob: -8.50411319732666
    10. 'oire' → logprob: -8.50411319732666

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07825855910778046
    2. ':' → logprob: -2.828258514404297
    3. '   ' → logprob: -4.953258514404297
    4. '):' → logprob: -6.078258514404297
    5. ' :' → logprob: -6.328258514404297
    6. ' ,' → logprob: -6.703258514404297
    7. 't' → logprob: -7.078258514404297
    8. ')' → logprob: -7.328258514404297
    9. ':
' → logprob: -7.953258514404297
    10. 'def' → logprob: -8.078258514404297

Token 492: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03227034956216812
    2. 'if' → logprob: -3.5322704315185547
    3. '   ' → logprob: -7.032270431518555
    4. 'def' → logprob: -7.032270431518555
    5. ' on' → logprob: -8.157270431518555
    6. '    ' → logprob: -9.907270431518555
    7. ' return' → logprob: -10.032270431518555
    8. '    
' → logprob: -10.157270431518555
    9. 'result' → logprob: -10.282270431518555
    10. ' ' → logprob: -10.907270431518555

Token 493: ' répond' (ID: 35079)
  Prédit: ' chois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.20488548278808594
    2. ' joue' → logprob: -2.204885482788086
    3. 'cho' → logprob: -3.704885482788086
    4. ' rem' → logprob: -3.704885482788086
    5. ' return' → logprob: -5.579885482788086
    6. 'jou' → logprob: -5.829885482788086
    7. ' retourne' → logprob: -6.079885482788086
    8. ' choisi' → logprob: -6.204885482788086
    9. ' cho' → logprob: -6.454885482788086
    10. 'choose' → logprob: -6.704885482788086

Token 494: ' par' (ID: 686)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20318755507469177
    2. ' par' → logprob: -2.0781874656677246
    3. ' '' → logprob: -3.9531874656677246
    4. ' ' → logprob: -4.078187465667725
    5. ''r' → logprob: -5.453187465667725
    6. ''u' → logprob: -5.828187465667725
    7. ' with' → logprob: -6.203187465667725
    8. ' by' → logprob: -6.453187465667725
    9. ''a' → logprob: -6.828187465667725
    10. '_' → logprob: -7.078187465667725

Token 495: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.534772515296936
    2. '{'' → logprob: -1.659772515296936
    3. '{
' → logprob: -2.5347723960876465
    4. ''p' → logprob: -3.4097723960876465
    5. ''un' → logprob: -3.5347723960876465
    6. '{' → logprob: -3.9097723960876465
    7. ''s' → logprob: -4.5347723960876465
    8. '   ' → logprob: -4.6597723960876465
    9. ''g' → logprob: -5.4097723960876465
    10. 'le' → logprob: -5.4097723960876465

Token 496: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32697030901908875
    2. ' coup' → logprob: -2.076970338821411
    3. ''' → logprob: -2.326970338821411
    4. 'g' → logprob: -3.826970338821411
    5. 'me' → logprob: -4.701970100402832
    6. '```' → logprob: -5.951970100402832
    7. 'cou' → logprob: -6.076970100402832
    8. 'move' → logprob: -6.076970100402832
    9. '"' → logprob: -6.201970100402832
    10. 'token' → logprob: -6.201970100402832

Token 497: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3875565826892853
    2. ' ' → logprob: -1.887556552886963
    3. ''' → logprob: -2.012556552886963
    4. '"' → logprob: -4.887556552886963
    5. ' that' → logprob: -5.262556552886963
    6. ' gagn' → logprob: -5.387556552886963
    7. '<|end|>' → logprob: -5.637556552886963
    8. '  ' → logprob: -6.512556552886963
    9. '   ' → logprob: -6.887556552886963
    10. ' rival' → logprob: -7.137556552886963

Token 498: ' gagne' (ID: 141776)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13365326821804047
    2. 'bat' → logprob: -2.258653163909912
    3. ' bat' → logprob: -4.758653163909912
    4. 'le' → logprob: -5.133653163909912
    5. ' gagne' → logprob: -6.508653163909912
    6. '_b' → logprob: -6.758653163909912
    7. '```' → logprob: -7.383653163909912
    8. '
' → logprob: -8.25865364074707
    9. ' ' → logprob: -8.38365364074707
    10. 'l' → logprob: -8.50865364074707

Token 499: ' contre' (ID: 17771)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21612149477005005
    2. '_' → logprob: -1.9661214351654053
    3. ' ' → logprob: -3.7161214351654053
    4. ' '' → logprob: -3.9661214351654053
    5. ' a' → logprob: -5.591121673583984
    6. '"' → logprob: -6.716121673583984
    7. ' contre' → logprob: -6.841121673583984
    8. '[' → logprob: -7.841121673583984
    9. ' against' → logprob: -7.966121673583984
    10. ',' → logprob: -7.966121673583984

Token 500: ' lui' (ID: 10623)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.7623801231384277
    2. ' celui' → logprob: -1.5123801231384277
    3. 't' → logprob: -1.7623801231384277
    4. ' ' → logprob: -2.6373801231384277
    5. 'it' → logprob: -3.2623801231384277
    6. 'l' → logprob: -4.137380123138428
    7. ' lui' → logprob: -5.762380123138428
    8. ''' → logprob: -6.137380123138428
    9. '_' → logprob: -6.262380123138428
    10. ' t' → logprob: -6.387380123138428

Token 501: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6328425407409668
    2. '   ' → logprob: -1.1328425407409668
    3. ':' → logprob: -2.382842540740967
    4. '.' → logprob: -3.757842540740967
    5. ',' → logprob: -4.757842540740967
    6. 's' → logprob: -5.507842540740967
    7. '[' → logprob: -6.007842540740967
    8. '_' → logprob: -6.132842540740967
    9. ' ' → logprob: -6.632842540740967
    10. ''' → logprob: -6.632842540740967

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002659839577972889
    2. ':' → logprob: -6.502659797668457
    3. 'def' → logprob: -8.002659797668457
    4. ' :' → logprob: -8.877659797668457
    5. '):
' → logprob: -9.252659797668457
    6. '_' → logprob: -9.377659797668457
    7. '    
' → logprob: -9.377659797668457
    8. '
' → logprob: -9.502659797668457
    9. ':
' → logprob: -9.502659797668457
    10. ')' → logprob: -10.252659797668457

Token 503: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6599652767181396
    2. 'a' → logprob: -0.9099652767181396
    3. 'moves' → logprob: -3.7849652767181396
    4. ' moves' → logprob: -4.284965515136719
    5. ' a' → logprob: -4.534965515136719
    6. 'res' → logprob: -5.034965515136719
    7. ' res' → logprob: -5.034965515136719
    8. 'optimal' → logprob: -5.284965515136719
    9. 'result' → logprob: -5.784965515136719
    10. ' optimal' → logprob: -6.034965515136719

Token 504: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6596524715423584
    2. ':' → logprob: -1.4096524715423584
    3. '=' → logprob: -1.6596524715423584
    4. ',' → logprob: -3.6596524715423584
    5. '   ' → logprob: -4.7846527099609375
    6. '[' → logprob: -5.4096527099609375
    7. '(t' → logprob: -5.6596527099609375
    8. ' (' → logprob: -6.2846527099609375
    9. '.' → logprob: -6.4096527099609375
    10. ')' → logprob: -6.9096527099609375

Token 505: '       ' (ID: 309)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5397196412086487
    2. '    ' → logprob: -1.789719581604004
    3. 't' → logprob: -1.914719581604004
    4. '   ' → logprob: -2.414719581604004
    5. ' self' → logprob: -5.664719581604004
    6. ' def' → logprob: -6.039719581604004
    7. ' n' → logprob: -6.664719581604004
    8. 'n' → logprob: -7.039719581604004
    9. 'self' → logprob: -7.039719581604004
    10. '    
' → logprob: -7.039719581604004

Token 506: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.14284391701221466
    2. ' t' → logprob: -2.0178439617156982
    3. 'self' → logprob: -9.267844200134277
    4. '   ' → logprob: -10.017844200134277
    5. ' self' → logprob: -10.642844200134277
    6. ' advers' → logprob: -14.142844200134277
    7. '    ' → logprob: -14.267844200134277
    8. 'a' → logprob: -14.267844200134277
    9. '`t' → logprob: -14.392844200134277
    10. '	t' → logprob: -14.642844200134277

Token 507: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05522098392248154
    2. '):
' → logprob: -3.4302210807800293
    3. ':' → logprob: -3.9302210807800293
    4. '   ' → logprob: -7.180221080780029
    5. ' ):' → logprob: -7.805221080780029
    6. ')' → logprob: -7.930221080780029
    7. ' :' → logprob: -9.555220603942871
    8. ':str' → logprob: -10.430220603942871
    9. '):
' → logprob: -10.680220603942871
    10. ' ' → logprob: -11.430220603942871

Token 508: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4037006199359894
    2. ')' → logprob: -1.278700590133667
    3. '):' → logprob: -3.153700590133667
    4. ' str' → logprob: -4.903700828552246
    5. 's' → logprob: -6.528700828552246
    6. '[str' → logprob: -6.903700828552246
    7. ':str' → logprob: -7.278700828552246
    8. '):
' → logprob: -8.778700828552246
    9. ':' → logprob: -9.028700828552246
    10. '   ' → logprob: -9.528700828552246

Token 509: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046507395803928375
    2. ')' → logprob: -3.6715073585510254
    3. '):
' → logprob: -3.9215073585510254
    4. '   ' → logprob: -8.796507835388184
    5. ' ):' → logprob: -10.796507835388184
    6. '[' → logprob: -11.546507835388184
    7. '):
' → logprob: -12.921507835388184
    8. ':' → logprob: -13.046507835388184
    9. ')
' → logprob: -13.796507835388184
    10. '):

' → logprob: -13.796507835388184

Token 510: ' Sé' (ID: 53058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38428109884262085
    2. ' advers' → logprob: -1.8842811584472656
    3. '    ' → logprob: -2.3842811584472656
    4. ' str' → logprob: -4.134281158447266
    5. '"' → logprob: -4.384281158447266
    6. ' #' → logprob: -5.009281158447266
    7. ' ' → logprob: -5.384281158447266
    8. ')' → logprob: -5.509281158447266
    9. 't' → logprob: -5.634281158447266
    10. ' t' → logprob: -5.634281158447266

Token 511: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00016146517009474337
    2. 'q' → logprob: -8.875161170959473
    3. 'qu' → logprob: -11.500161170959473
    4. 'QUENCE' → logprob: -12.625161170959473
    5. 'que' → logprob: -12.750161170959473
    6. '   ' → logprob: -13.125161170959473
    7. 'quences' → logprob: -13.625161170959473
    8. 'quent' → logprob: -14.250161170959473
    9. 'rie' → logprob: -14.375161170959473
    10. '#' → logprob: -15.875161170959473

Token 512: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38313961029052734
    2. '   ' → logprob: -1.6331396102905273
    3. ' advers' → logprob: -2.7581396102905273
    4. ' de' → logprob: -4.133139610290527
    5. '[' → logprob: -4.258139610290527
    6. ' des' → logprob: -4.633139610290527
    7. '<|end|>' → logprob: -4.883139610290527
    8. 'des' → logprob: -6.383139610290527
    9. ' of' → logprob: -6.633139610290527
    10. 'def' → logprob: -6.758139610290527

Token 513: ' coups' (ID: 98942)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.34119004011154175
    2. ' coups' → logprob: -1.3411900997161865
    3. ' advers' → logprob: -4.466189861297607
    4. 'l' → logprob: -4.841189861297607
    5. 'ad' → logprob: -5.966189861297607
    6. 'moves' → logprob: -6.841189861297607
    7. ' l' → logprob: -7.091189861297607
    8. 'c' → logprob: -7.466189861297607
    9. ' caractères' → logprob: -7.466189861297607
    10. ' mouvements' → logprob: -7.966189861297607

Token 514: ' de' (ID: 334)
  Prédit: ' advers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' advers' → logprob: -0.34299394488334656
    2. '   ' → logprob: -1.842993974685669
    3. ' de' → logprob: -2.342993974685669
    4. 'ad' → logprob: -3.967993974685669
    5. 'de' → logprob: -4.34299373626709
    6. ')' → logprob: -6.59299373626709
    7. '    ' → logprob: -7.71799373626709
    8. 'jou' → logprob: -7.71799373626709
    9. ' ' → logprob: -8.09299373626709
    10. '_ad' → logprob: -8.21799373626709

Token 515: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.015258286148309708
    2. ' l' → logprob: -4.265258312225342
    3. 'lad' → logprob: -8.015257835388184
    4. ''l' → logprob: -8.765257835388184
    5. 'ad' → logprob: -9.015257835388184
    6. ''ad' → logprob: -9.640257835388184
    7. '	l' → logprob: -9.765257835388184
    8. 'lass' → logprob: -10.077757835388184
    9. ' ' → logprob: -10.390257835388184
    10. 'lap' → logprob: -10.577757835388184

Token 516: ''ad' (ID: 36162)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.3820284307003021
    2. ''ad' → logprob: -1.3820284605026245
    3. ' advers' → logprob: -2.757028341293335
    4. 'a' → logprob: -6.257028579711914
    5. ''' → logprob: -7.882028579711914
    6. '_ad' → logprob: -8.257028579711914
    7. 'adv' → logprob: -8.632028579711914
    8. '’ad' → logprob: -9.007028579711914
    9. 'adj' → logprob: -10.382028579711914
    10. ''a' → logprob: -10.507028579711914

Token 517: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.017186040058732033
    2. ' advers' → logprob: -5.017186164855957
    3. '   ' → logprob: -5.142186164855957
    4. '  ' → logprob: -7.142186164855957
    5. 'ers' → logprob: -7.142186164855957
    6. ')' → logprob: -7.767186164855957
    7. 'verse' → logprob: -7.892186164855957
    8. 't' → logprob: -8.017186164855957
    9. 'erso' → logprob: -8.392186164855957
    10. 'a' → logprob: -8.517186164855957

Token 518: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.019106490537524223
    2. 'a' → logprob: -4.394106388092041
    3. 'ête' → logprob: -6.644106388092041
    4. 'taire' → logprob: -7.144106388092041
    5. 'ete' → logprob: -7.269106388092041
    6. 'def' → logprob: -7.769106388092041
    7. 'ataire' → logprob: -7.769106388092041
    8. 're' → logprob: -8.0191068649292
    9. '   ' → logprob: -8.2691068649292
    10. 't' → logprob: -8.3941068649292

Token 519: ' ('' (ID: 9906)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7557698488235474
    2. '   ' → logprob: -1.5057698488235474
    3. '):
' → logprob: -1.7557698488235474
    4. '):' → logprob: -2.005769729614258
    5. ')
' → logprob: -7.630769729614258
    6. '):
' → logprob: -8.880769729614258
    7. '')' → logprob: -9.130769729614258
    8. ''):' → logprob: -9.380769729614258
    9. ''):
' → logprob: -9.505769729614258
    10. '):

' → logprob: -9.880769729614258

Token 520: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003467025002464652
    2. 'rsp' → logprob: -5.753467082977295
    3. ''r' → logprob: -8.878466606140137
    4. 'rs' → logprob: -9.378466606140137
    5. ''' → logprob: -10.628466606140137
    6. ' r' → logprob: -10.878466606140137
    7. 'p' → logprob: -11.878466606140137
    8. 'rp' → logprob: -12.753466606140137
    9. 'rst' → logprob: -13.128466606140137
    10. '')' → logprob: -13.753466606140137

Token 521: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.29668229818344116
    2. '',' → logprob: -2.546682357788086
    3. ''' → logprob: -2.671682357788086
    4. '')
' → logprob: -3.171682357788086
    5. ',' → logprob: -4.046682357788086
    6. ')' → logprob: -4.171682357788086
    7. ''),' → logprob: -4.796682357788086
    8. '   ' → logprob: -4.921682357788086
    9. 'p' → logprob: -5.296682357788086
    10. ''):' → logprob: -5.671682357788086

Token 522: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6621518731117249
    2. ''s' → logprob: -1.03715181350708
    3. ' '' → logprob: -2.53715181350708
    4. ''' → logprob: -3.41215181350708
    5. ' s' → logprob: -4.16215181350708
    6. ')' → logprob: -7.28715181350708
    7. ''p' → logprob: -8.037152290344238
    8. 'p' → logprob: -8.162152290344238
    9. ',' → logprob: -8.412152290344238
    10. '   ' → logprob: -8.912152290344238

Token 523: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015628274995833635
    2. ' s' → logprob: -6.501562595367432
    3. ''s' → logprob: -9.75156307220459
    4. 'p' → logprob: -13.62656307220459
    5. ''' → logprob: -15.00156307220459
    6. '_s' → logprob: -15.12656307220459
    7. '`s' → logprob: -15.25156307220459
    8. 'r' → logprob: -16.001562118530273
    9. ',s' → logprob: -16.876562118530273
    10. '')' → logprob: -17.001562118530273

Token 524: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.284959077835083
    2. '')' → logprob: -1.784959077835083
    3. ''' → logprob: -3.159959077835083
    4. ')' → logprob: -4.034958839416504
    5. ',' → logprob: -5.034958839416504
    6. ''p' → logprob: -5.159958839416504
    7. 'p' → logprob: -5.659958839416504
    8. ')',' → logprob: -6.159958839416504
    9. '')
' → logprob: -6.909958839416504
    10. ''):' → logprob: -8.409958839416504

Token 525: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.589084804058075
    2. 'p' → logprob: -1.2140848636627197
    3. ' '' → logprob: -2.5890848636627197
    4. ' p' → logprob: -2.9640848636627197
    5. ''' → logprob: -3.9640848636627197
    6. '   ' → logprob: -7.339084625244141
    7. '       ' → logprob: -7.339084625244141
    8. ')' → logprob: -8.21408462524414
    9. ' ' → logprob: -8.71408462524414
    10. '    ' → logprob: -9.46408462524414

Token 526: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004331725067459047
    2. ''p' → logprob: -7.750432968139648
    3. ' p' → logprob: -13.000432968139648
    4. ''' → logprob: -16.25043296813965
    5. '
' → logprob: -16.87543296813965
    6. '`' → logprob: -17.37543296813965
    7. ' '' → logprob: -17.50043296813965
    8. '')' → logprob: -18.12543296813965
    9. '	p' → logprob: -18.12543296813965
    10. '   ' → logprob: -18.37543296813965

Token 527: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5761273503303528
    2. '')
' → logprob: -1.451127290725708
    3. ')' → logprob: -1.701127290725708
    4. ')')
' → logprob: -3.951127290725708
    5. ''):
' → logprob: -7.451127529144287
    6. ')
' → logprob: -7.451127529144287
    7. ''' → logprob: -7.951127529144287
    8. '')

' → logprob: -9.451127052307129
    9. '')")
' → logprob: -9.451127052307129
    10. '')
' → logprob: -9.826127052307129

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044643983244895935
    2. ')' → logprob: -3.4196438789367676
    3. '
' → logprob: -5.419643878936768
    4. '):
' → logprob: -5.919643878936768
    5. '    
' → logprob: -6.669643878936768
    6. '):' → logprob: -6.794643878936768
    7. ':' → logprob: -7.169643878936768
    8. '```' → logprob: -8.544644355773926
    9. '"""' → logprob: -9.419644355773926
    10. ':
' → logprob: -9.544644355773926

Token 529: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22811231017112732
    2. '):
' → logprob: -2.22811222076416
    3. ')' → logprob: -2.60311222076416
    4. '):' → logprob: -4.72811222076416
    5. ':' → logprob: -5.10311222076416
    6. '
' → logprob: -6.72811222076416
    7. '    
' → logprob: -6.85311222076416
    8. ' :' → logprob: -6.97811222076416
    9. '```' → logprob: -6.97811222076416
    10. ':
' → logprob: -7.10311222076416

Token 530: ':
' (ID: 734)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7897570133209229
    2. '[' → logprob: -1.1647570133209229
    3. ':' → logprob: -2.289757013320923
    4. ' =' → logprob: -4.039756774902344
    5. ' []' → logprob: -4.039756774902344
    6. 'a' → logprob: -4.289756774902344
    7. ' [
' → logprob: -4.414756774902344
    8. ' a' → logprob: -4.414756774902344
    9. ' ' → logprob: -4.539756774902344
    10. ' ['' → logprob: -4.664756774902344

Token 531: '       ' (ID: 309)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.5121876001358032
    2. ' list' → logprob: -1.8871876001358032
    3. ' [' → logprob: -2.3871874809265137
    4. '   ' → logprob: -3.0121874809265137
    5. 'list' → logprob: -3.5121874809265137
    6. ' a' → logprob: -3.6371874809265137
    7. '['' → logprob: -3.8871874809265137
    8. 'List' → logprob: -4.512187480926514
    9. '[' → logprob: -5.137187480926514
    10. 'a' → logprob: -5.387187480926514

Token 532: ' str' (ID: 989)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1071038767695427
    2. ' list' → logprob: -2.8571038246154785
    3. 'List' → logprob: -3.3571038246154785
    4. '[List' → logprob: -5.9821038246154785
    5. '[str' → logprob: -6.3571038246154785
    6. ' List' → logprob: -6.3571038246154785
    7. '[a' → logprob: -6.7321038246154785
    8. 'a' → logprob: -7.2321038246154785
    9. '['' → logprob: -7.8571038246154785
    10. '[list' → logprob: -7.9821038246154785

Token 533: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9280607104301453
    2. 'a' → logprob: -1.55306077003479
    3. '<|end|>' → logprob: -1.80306077003479
    4. ' a' → logprob: -2.55306077003479
    5. '=' → logprob: -2.55306077003479
    6. ':' → logprob: -4.178060531616211
    7. '   ' → logprob: -4.428060531616211
    8. '[' → logprob: -5.303060531616211
    9. '<|end|>' → logprob: -5.303060531616211
    10. ')' → logprob: -5.303060531616211

Token 534: ' Sé' (ID: 53058)
  Prédit: ' ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.27027207612991333
    2. '''.' → logprob: -1.5202720165252686
    3. ' "".' → logprob: -5.020272254943848
    4. '"' → logprob: -5.770272254943848
    5. ' a' → logprob: -5.895272254943848
    6. 'a' → logprob: -5.895272254943848
    7. '''' → logprob: -6.895272254943848
    8. ' ' → logprob: -7.395272254943848
    9. '```' → logprob: -8.395272254943848
    10. '""' → logprob: -8.395272254943848

Token 535: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -3.666993507067673e-05
    2. 'q' → logprob: -10.875036239624023
    3. 'QUENCE' → logprob: -12.125036239624023
    4. 'qu' → logprob: -12.250036239624023
    5. 'quences' → logprob: -12.750036239624023
    6. ''' → logprob: -13.750036239624023
    7. '   ' → logprob: -14.125036239624023
    8. 'quent' → logprob: -14.125036239624023
    9. 'que' → logprob: -14.250036239624023
    10. '```' → logprob: -14.750036239624023

Token 536: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' coups' (ID: 98942)
  Prédit: ' coups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coups' → logprob: -0.23654481768608093
    2. 'cou' → logprob: -1.9865448474884033
    3. ' moves' → logprob: -3.3615448474884033
    4. 'moves' → logprob: -4.361544609069824
    5. ' réponses' → logprob: -4.986544609069824
    6. ' mouvements' → logprob: -5.861544609069824
    7. 'c' → logprob: -6.236544609069824
    8. 'l' → logprob: -6.361544609069824
    9. 'str' → logprob: -6.611544609069824
    10. '```' → logprob: -6.736544609069824

Token 538: ' optim' (ID: 9367)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7063614130020142
    2. ' optimale' → logprob: -1.3313614130020142
    3. '   ' → logprob: -3.2063612937927246
    4. ' optimal' → logprob: -3.5813612937927246
    5. ' gagn' → logprob: -3.5813612937927246
    6. '_' → logprob: -3.7063612937927246
    7. 'à' → logprob: -3.8313612937927246
    8. ' optim' → logprob: -3.8313612937927246
    9. 'optimal' → logprob: -3.8313612937927246
    10. 'jou' → logprob: -4.706361293792725

Token 539: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.024652177467942238
    2. 'ale' → logprob: -3.7746522426605225
    3. 'ales' → logprob: -6.649652004241943
    4. 'al' → logprob: -9.274652481079102
    5. '```' → logprob: -11.399652481079102
    6. 'als' → logprob: -13.274652481079102
    7. 'a' → logprob: -13.649652481079102
    8. '
' → logprob: -14.024652481079102
    9. ''''
' → logprob: -14.399652481079102
    10. '"""
' → logprob: -14.899652481079102

Token 540: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28781265020370483
    2. ' =' → logprob: -1.5378127098083496
    3. '=' → logprob: -4.28781270980835
    4. ':' → logprob: -5.16281270980835
    5. '
' → logprob: -5.16281270980835
    6. '"' → logprob: -5.78781270980835
    7. ')' → logprob: -6.16281270980835
    8. '_' → logprob: -7.53781270980835
    9. '    
' → logprob: -7.78781270980835
    10. ' ' → logprob: -7.91281270980835

Token 541: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2205519676208496
    2. '   ' → logprob: -1.7205519676208496
    3. ':
' → logprob: -4.84555196762085
    4. ' :' → logprob: -6.22055196762085
    5. '_' → logprob: -6.47055196762085
    6. ' =' → logprob: -6.84555196762085
    7. '[' → logprob: -6.84555196762085
    8. ')' → logprob: -7.09555196762085
    9. 'def' → logprob: -7.22055196762085
    10. '):' → logprob: -7.34555196762085

Token 542: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19049124419689178
    2. ':' → logprob: -2.065491199493408
    3. ':
' → logprob: -3.690491199493408
    4. '):
' → logprob: -4.815491199493408
    5. ')' → logprob: -4.940491199493408
    6. '):' → logprob: -5.440491199493408
    7. ' :' → logprob: -7.815491199493408
    8. ' :
' → logprob: -8.065491676330566
    9. '
' → logprob: -8.315491676330566
    10. '":' → logprob: -8.690491676330566

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08672720193862915
    2. 'a' → logprob: -2.9617271423339844
    3. 'res' → logprob: -4.336727142333984
    4. 'result' → logprob: -5.086727142333984
    5. 'moves' → logprob: -5.336727142333984
    6. ' moves' → logprob: -5.961727142333984
    7. ' res' → logprob: -6.211727142333984
    8. ' a' → logprob: -6.836727142333984
    9. ' result' → logprob: -7.211727142333984
    10. 'b' → logprob: -8.961727142333984

Token 544: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08983661979436874
    2. 'res' → logprob: -3.589836597442627
    3. 'result' → logprob: -3.964836597442627
    4. ' return' → logprob: -4.839836597442627
    5. 'moves' → logprob: -4.839836597442627
    6. 'optimal' → logprob: -4.964836597442627
    7. '   ' → logprob: -5.214836597442627
    8. 'mapping' → logprob: -5.589836597442627
    9. 'move' → logprob: -5.964836597442627
    10. 'a' (adapté à ' a') → logprob: -6.089836597442627

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602262556552887
    2. '=' → logprob: -1.9102262258529663
    3. ' +=' → logprob: -14.160225868225098
    4. ' ' → logprob: -14.660225868225098
    5. ' ="' → logprob: -15.785225868225098
    6. ' ' → logprob: -15.910225868225098
    7. ' ='' → logprob: -15.910225868225098
    8. '=""' → logprob: -16.285226821899414
    9. ' =
' → logprob: -16.285226821899414
    10. '_' → logprob: -16.410226821899414

Token 546: ' ""
' (ID: 18061)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6104645729064941
    2. '""' → logprob: -1.4854645729064941
    3. '''' → logprob: -1.7354645729064941
    4. '['' → logprob: -3.485464572906494
    5. '''.' → logprob: -3.985464572906494
    6. '"' → logprob: -6.235464572906494
    7. '["' → logprob: -6.485464572906494
    8. '[]
' → logprob: -7.235464572906494
    9. '[' → logprob: -7.735464572906494
    10. ''' → logprob: -9.360464096069336

Token 547: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7037323713302612
    2. 'for' → logprob: -0.7037323713302612
    3. '   ' → logprob: -4.578732490539551
    4. '	for' → logprob: -8.82873249053955
    5. '    
' → logprob: -10.32873249053955
    6. ' ' → logprob: -10.57873249053955
    7. ' 
' → logprob: -11.20373249053955
    8. '
' → logprob: -11.70373249053955
    9. '_for' → logprob: -12.20373249053955
    10. 'f' → logprob: -12.45373249053955

Token 548: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011119149625301361
    2. ' for' → logprob: -4.511119365692139
    3. '   ' → logprob: -9.63611888885498
    4. '	for' → logprob: -12.13611888885498
    5. '
' → logprob: -14.76111888885498
    6. '    
' → logprob: -16.386119842529297
    7. ' 
' → logprob: -17.386119842529297
    8. ' ' → logprob: -17.886119842529297
    9. '  
' → logprob: -19.011119842529297
    10. '_for' → logprob: -19.136119842529297

Token 549: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1174749881029129
    2. 'ch' → logprob: -3.3674750328063965
    3. 'c' → logprob: -3.4924750328063965
    4. ' i' → logprob: -3.4924750328063965
    5. 'ti' → logprob: -4.6174750328063965
    6. ' ch' → logprob: -6.2424750328063965
    7. ' c' → logprob: -6.8674750328063965
    8. 'x' → logprob: -7.4924750328063965
    9. 'tt' → logprob: -7.4924750328063965
    10. 'char' → logprob: -7.6174750328063965

Token 550: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.081981360912323
    2. 'in' → logprob: -2.5819814205169678
    3. ' ' → logprob: -5.831981182098389
    4. ',' → logprob: -9.081981658935547
    5. ' ,' → logprob: -11.206981658935547
    6. 'import' → logprob: -12.206981658935547
    7. '  ' → logprob: -12.206981658935547
    8. '	in' → logprob: -12.956981658935547
    9. 'n' → logprob: -13.081981658935547
    10. ' ' → logprob: -13.206981658935547

Token 551: ' t' (ID: 260)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.040195416659116745
    2. ' range' → logprob: -3.2901954650878906
    3. 't' → logprob: -6.165195465087891
    4. ' t' → logprob: -9.91519546508789
    5. 'a' → logprob: -15.04019546508789
    6. ' ' → logprob: -16.04019546508789
    7. '	range' → logprob: -16.29019546508789
    8. 'r' → logprob: -16.66519546508789
    9. '(range' → logprob: -16.91519546508789
    10. '   ' → logprob: -17.16519546508789

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03705175966024399
    2. ' in' → logprob: -4.537051677703857
    3. 'in' → logprob: -4.662051677703857
    4. '+' → logprob: -4.787051677703857
    5. ':
' → logprob: -5.912051677703857
    6. ',' → logprob: -6.412051677703857
    7. '+=' → logprob: -6.787051677703857
    8. ' +=' → logprob: -7.037051677703857
    9. ' :' → logprob: -7.662051677703857
    10. '=' → logprob: -8.787052154541016

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013857175596058369
    2. ' if' → logprob: -4.638857364654541
    3. '    ' → logprob: -6.513857364654541
    4. '   ' → logprob: -6.763857364654541
    5. 'if' → logprob: -7.513857364654541
    6. '        
' → logprob: -8.763856887817383
    7. 'a' → logprob: -8.888856887817383
    8. '	' → logprob: -9.138856887817383
    9. ' ' → logprob: -9.638856887817383
    10. '  ' → logprob: -9.888856887817383

Token 554: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002929174806922674
    2. ' if' → logprob: -8.625292778015137
    3. 'a' → logprob: -9.500292778015137
    4. '   ' → logprob: -10.250292778015137
    5. '       ' → logprob: -12.875292778015137
    6. '	if' → logprob: -15.375292778015137
    7. 'i' → logprob: -15.750292778015137
    8. '           ' → logprob: -16.625293731689453
    9. 'b' → logprob: -16.750293731689453
    10. '
' → logprob: -18.500293731689453

Token 555: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07890785485506058
    2. 'i' → logprob: -2.5789079666137695
    3. ' ' → logprob: -11.20390796661377
    4. '	i' → logprob: -12.70390796661377
    5. ' ' → logprob: -14.20390796661377
    6. '   ' → logprob: -14.70390796661377
    7. '  ' → logprob: -16.078907012939453
    8. '(i' → logprob: -16.203907012939453
    9. '    ' → logprob: -17.078907012939453
    10. '[i' → logprob: -17.578907012939453

Token 556: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014241892844438553
    2. '==' → logprob: -4.264241695404053
    3. ' =='' → logprob: -10.389242172241211
    4. '=='' → logprob: -10.764242172241211
    5. ' ' → logprob: -11.639242172241211
    6. '=' → logprob: -11.639242172241211
    7. ' ' → logprob: -12.639242172241211
    8. '=="' → logprob: -12.889242172241211
    9. ' =="' → logprob: -13.889242172241211
    10. '[' → logprob: -14.764242172241211

Token 557: ' "' (ID: 392)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.0076085166074335575
    2. ''p' → logprob: -5.257608413696289
    3. ''' → logprob: -6.507608413696289
    4. '"' → logprob: -7.632608413696289
    5. ''s' → logprob: -8.632608413696289
    6. 'r' → logprob: -8.882608413696289
    7. ' '' → logprob: -9.632608413696289
    8. ''q' → logprob: -12.007608413696289
    9. '`' → logprob: -13.757608413696289
    10. ''o' → logprob: -13.757608413696289

Token 558: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.043617796152830124
    2. 's' → logprob: -3.5436177253723145
    3. 'p' → logprob: -4.2936177253723145
    4. ''' → logprob: -10.043618202209473
    5. ''r' → logprob: -10.043618202209473
    6. ''p' → logprob: -11.043618202209473
    7. '"' → logprob: -11.418618202209473
    8. '"s' → logprob: -14.168618202209473
    9. ''s' → logprob: -14.293618202209473
    10. '_r' → logprob: -15.293618202209473

Token 559: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.20511943101882935
    2. '":
' → logprob: -1.8301193714141846
    3. '"' → logprob: -3.7051193714141846
    4. '":
' → logprob: -7.830119609832764
    5. ' "' → logprob: -10.955119132995605
    6. ''' → logprob: -11.330119132995605
    7. '":

' → logprob: -11.455119132995605
    8. ':' → logprob: -11.580119132995605
    9. '':' → logprob: -13.330119132995605
    10. ':
' → logprob: -13.455119132995605

Token 560: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22799302637577057
    2. 'p' → logprob: -1.6029930114746094
    3. 's' → logprob: -6.102993011474609
    4. ' a' → logprob: -8.97799301147461
    5. '           ' → logprob: -8.97799301147461
    6. '       ' → logprob: -10.47799301147461
    7. ' p' → logprob: -10.97799301147461
    8. '   ' → logprob: -11.72799301147461
    9. '<|end|>' → logprob: -11.72799301147461
    10. '"' → logprob: -12.22799301147461

Token 561: ' a' (ID: 261)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01953865773975849
    2. 'a' (adapté à ' a') → logprob: -4.269538879394531
    3. 's' → logprob: -5.269538879394531
    4. ' p' → logprob: -8.894538879394531
    5. '"' → logprob: -10.144538879394531
    6. ')p' → logprob: -11.394538879394531
    7. ''p' → logprob: -12.144538879394531
    8. ' a' → logprob: -12.144538879394531
    9. '	p' → logprob: -12.894538879394531
    10. '"s' → logprob: -13.144538879394531

Token 562: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21431614458560944
    2. ' +=' → logprob: -1.9643161296844482
    3. '+' → logprob: -3.2143161296844482
    4. '+="' → logprob: -4.714316368103027
    5. 'p' → logprob: -6.589316368103027
    6. ' +' → logprob: -6.964316368103027
    7. '+p' → logprob: -7.464316368103027
    8. '+='' → logprob: -8.089316368103027
    9. '=' → logprob: -8.714316368103027
    10. ' p' → logprob: -9.964316368103027

Token 563: ' "' (ID: 392)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5934401750564575
    2. '"' → logprob: -0.8434401750564575
    3. ''p' → logprob: -4.093440055847168
    4. ' p' → logprob: -7.718440055847168
    5. ''' → logprob: -8.593440055847168
    6. ' "' → logprob: -11.218440055847168
    7. '"s' → logprob: -11.593440055847168
    8. '	p' → logprob: -12.593440055847168
    9. '<p' → logprob: -12.843440055847168
    10. '_p' → logprob: -13.218440055847168

Token 564: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00029029499273747206
    2. '"' → logprob: -8.500289916992188
    3. ''p' → logprob: -9.375289916992188
    4. ''' → logprob: -13.375289916992188
    5. ' p' → logprob: -15.000289916992188
    6. '	p' → logprob: -16.375289916992188
    7. '_p' → logprob: -17.375289916992188
    8. '(p' → logprob: -17.750289916992188
    9. 's' → logprob: -18.125289916992188
    10. '<p' → logprob: -18.250289916992188

Token 565: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02325037121772766
    2. '"
' → logprob: -3.7732503414154053
    3. '"
' → logprob: -12.648250579833984
    4. '"

' → logprob: -14.273250579833984
    5. ' "' → logprob: -15.023250579833984
    6. 's' → logprob: -15.148250579833984
    7. '"s' → logprob: -15.773250579833984
    8. '")' → logprob: -16.898250579833984
    9. '"#' → logprob: -17.023250579833984
    10. ''' → logprob: -17.023250579833984

Token 566: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38752374053001404
    2. 'elif' → logprob: -1.2625237703323364
    3. '<|end|>' → logprob: -3.512523651123047
    4. ' elif' → logprob: -5.012523651123047
    5. '
' → logprob: -6.887523651123047
    6. '	elif' → logprob: -8.012523651123047
    7. '   ' → logprob: -9.262523651123047
    8. 'else' → logprob: -9.387523651123047
    9. '<|end|>' → logprob: -9.512523651123047
    10. ' else' → logprob: -10.637523651123047

Token 567: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11526446044445038
    2. 'elif' → logprob: -2.240264415740967
    3. '
' → logprob: -6.740264415740967
    4. ' elif' → logprob: -6.990264415740967
    5. '<|end|>' → logprob: -8.865264892578125
    6. '	elif' → logprob: -9.865264892578125
    7. '   ' → logprob: -10.365264892578125
    8. '")' → logprob: -10.865264892578125
    9. 'else' → logprob: -11.115264892578125
    10. '"' → logprob: -11.240264892578125

Token 568: ' '' (ID: 461)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16965898871421814
    2. 'elif' → logprob: -2.294658899307251
    3. '       ' → logprob: -4.04465913772583
    4. '"' → logprob: -4.16965913772583
    5. ' elif' → logprob: -4.66965913772583
    6. ' 
' → logprob: -4.79465913772583
    7. '\n' → logprob: -6.91965913772583
    8. '")' → logprob: -7.66965913772583
    9. 's' → logprob: -7.66965913772583
    10. 'p' → logprob: -7.79465913772583

Token 569: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.095302700996399
    2. 'ierre' → logprob: -1.595302700996399
    3. '"' → logprob: -2.2203025817871094
    4. '")' → logprob: -2.7203025817871094
    5. 'aper' → logprob: -3.0953025817871094
    6. 'ap' → logprob: -3.5953025817871094
    7. 'papier' → logprob: -3.5953025817871094
    8. 'paper' → logprob: -3.8453025817871094
    9. '')' → logprob: -3.9703025817871094
    10. 'a' → logprob: -4.095302581787109

Token 570: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.055832985788583755
    2. ''' → logprob: -2.930833101272583
    3. '<|end|>' → logprob: -7.680832862854004
    4. '")' → logprob: -8.930832862854004
    5. ' "' → logprob: -9.930832862854004
    6. 'r' → logprob: -10.055832862854004
    7. '">' → logprob: -10.430832862854004
    8. 'e' → logprob: -10.555832862854004
    9. ''''' → logprob: -10.555832862854004
    10. 'i' → logprob: -10.805832862854004

Token 571: ' bat' (ID: 10639)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4626612663269043
    2. ''r' → logprob: -1.7126612663269043
    3. 'r' → logprob: -1.9626612663269043
    4. ' "' → logprob: -3.7126612663269043
    5. ' '' → logprob: -4.337661266326904
    6. ''' → logprob: -5.087661266326904
    7. ' r' → logprob: -5.837661266326904
    8. ''s' → logprob: -6.837661266326904
    9. '"s' → logprob: -7.837661266326904
    10. ' ' → logprob: -7.962661266326904

Token 573: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.3451433409936726e-05
    2. 'rock' → logprob: -10.625033378601074
    3. '"' → logprob: -12.125033378601074
    4. ''r' → logprob: -13.500033378601074
    5. 'ri' → logprob: -15.000033378601074
    6. 'rr' → logprob: -15.250033378601074
    7. ''' → logprob: -15.250033378601074
    8. ' r' → logprob: -15.500033378601074
    9. 'ro' → logprob: -15.625033378601074
    10. ' pierre' → logprob: -15.750033378601074

Token 574: ''
' (ID: 2207)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01268775574862957
    2. '"
' → logprob: -4.387687683105469
    3. ''' → logprob: -8.762687683105469
    4. '"
' → logprob: -11.262687683105469
    5. ' "' → logprob: -12.887687683105469
    6. ''
' → logprob: -13.137687683105469
    7. '"\' → logprob: -14.137687683105469
    8. '\n' → logprob: -14.262687683105469
    9. ''"' → logprob: -14.262687683105469
    10. '```' → logprob: -15.012687683105469

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00858514104038477
    2. 'elif' → logprob: -4.883584976196289
    3. '
' → logprob: -7.508584976196289
    4. ' elif' → logprob: -8.258584976196289
    5. '<|end|>' → logprob: -9.508584976196289
    6. '        
' → logprob: -10.383584976196289
    7. '\n' → logprob: -11.383584976196289
    8. 'else' → logprob: -12.008584976196289
    9. '   ' → logprob: -12.008584976196289
    10. '	elif' → logprob: -12.258584976196289

Token 576: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.03405642509460449
    2. '       ' → logprob: -3.7840564250946045
    3. ' elif' → logprob: -4.534056663513184
    4. 'el' → logprob: -12.034056663513184
    5. '	elif' → logprob: -12.159056663513184
    6. 'else' → logprob: -12.784056663513184
    7. '   ' → logprob: -13.659056663513184
    8. 'if' → logprob: -16.159055709838867
    9. 'e' → logprob: -16.159055709838867
    10. 'elseif' → logprob: -16.534055709838867

Token 577: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016171613708138466
    2. 'i' → logprob: -4.141171455383301
    3. 's' → logprob: -9.7661714553833
    4. ' s' → logprob: -9.8911714553833
    5. ' "' → logprob: -11.6411714553833
    6. '	i' → logprob: -11.8911714553833
    7. ' ' → logprob: -12.6411714553833
    8. ' ' → logprob: -12.6411714553833
    9. '"' → logprob: -12.7661714553833
    10. '    ' → logprob: -13.2661714553833

Token 578: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859520494937897
    2. '==' → logprob: -3.0485951900482178
    3. '=="' → logprob: -12.048595428466797
    4. ' =="' → logprob: -14.423595428466797
    5. ' ' → logprob: -14.798595428466797
    6. ' ' → logprob: -15.048595428466797
    7. '=' → logprob: -15.423595428466797
    8. '=='' → logprob: -16.048595428466797
    9. '===' → logprob: -16.548595428466797
    10. ' =' → logprob: -16.673595428466797

Token 579: ' "' (ID: 392)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.5972338318824768
    2. '"' → logprob: -1.347233772277832
    3. ' "' → logprob: -2.347233772277832
    4. 's' → logprob: -2.972233772277832
    5. ''s' → logprob: -3.847233772277832
    6. ' s' → logprob: -3.847233772277832
    7. ''' → logprob: -9.847233772277832
    8. ' '' → logprob: -10.347233772277832
    9. ' 
' → logprob: -10.597233772277832
    10. '`s' → logprob: -10.597233772277832

Token 580: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011932061752304435
    2. '"s' → logprob: -7.001193046569824
    3. ''s' → logprob: -8.251193046569824
    4. '"' → logprob: -11.376193046569824
    5. '`s' → logprob: -12.501193046569824
    6. ' s' → logprob: -12.501193046569824
    7. '	s' → logprob: -14.501193046569824
    8. 'sc' → logprob: -15.376193046569824
    9. '_s' → logprob: -15.626193046569824
    10. 'p' → logprob: -16.12619400024414

Token 581: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5603383183479309
    2. '":
' → logprob: -1.0603382587432861
    3. ':' → logprob: -3.060338258743286
    4. '"' → logprob: -3.435338258743286
    5. ':
' → logprob: -6.435338497161865
    6. '           ' → logprob: -7.560338497161865
    7. '":
' → logprob: -7.810338497161865
    8. '   ' → logprob: -7.935338497161865
    9. ' "' → logprob: -8.435338020324707
    10. '):
' → logprob: -8.810338020324707

Token 582: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07705450803041458
    2. '           ' → logprob: -2.952054500579834
    3. ':
' → logprob: -4.702054500579834
    4. '       ' → logprob: -4.952054500579834
    5. ' a' → logprob: -6.327054500579834
    6. ' :' → logprob: -6.577054500579834
    7. ' =' → logprob: -6.827054500579834
    8. 'a' → logprob: -7.577054500579834
    9. '=' → logprob: -8.452054977416992
    10. ',' → logprob: -8.952054977416992

Token 583: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04875291511416435
    2. 'p' → logprob: -3.298753023147583
    3. ' "' → logprob: -5.173752784729004
    4. '"a' → logprob: -6.423752784729004
    5. ''p' → logprob: -6.548752784729004
    6. 'a' (adapté à ' a') → logprob: -6.923752784729004
    7. ' p' → logprob: -7.548752784729004
    8. ''' → logprob: -9.048752784729004
    9. ''a' → logprob: -9.298752784729004
    10. '   ' → logprob: -9.673752784729004

Token 584: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3870531916618347
    2. ' +=' → logprob: -1.1370532512664795
    3. '=' → logprob: -8.762053489685059
    4. '+' → logprob: -11.637053489685059
    5. ' =' → logprob: -12.012053489685059
    6. '+="' → logprob: -12.012053489685059
    7. ' +' → logprob: -12.512053489685059
    8. ']+=' → logprob: -15.262053489685059
    9. '+='' → logprob: -15.387053489685059
    10. '!=' → logprob: -16.012052536010742

Token 585: ' "' (ID: 392)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002486715093255043
    2. '"' → logprob: -6.002486705780029
    3. ''r' → logprob: -11.627487182617188
    4. '	r' → logprob: -13.752487182617188
    5. ' r' → logprob: -14.377487182617188
    6. 'rock' → logprob: -15.252487182617188
    7. '_r' → logprob: -15.252487182617188
    8. ' "' → logprob: -16.877487182617188
    9. ''' → logprob: -17.877487182617188
    10. '`' → logprob: -18.127487182617188

Token 586: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.787507714354433e-05
    2. '"' → logprob: -10.00004768371582
    3. ''r' → logprob: -13.25004768371582
    4. ' r' → logprob: -14.87504768371582
    5. '	r' → logprob: -15.12504768371582
    6. '_r' → logprob: -17.12504768371582
    7. 'rock' → logprob: -17.50004768371582
    8. '-r' → logprob: -18.87504768371582
    9. '­r' → logprob: -20.37504768371582
    10. '`' → logprob: -20.62504768371582

Token 587: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00026860725483857095
    2. '"
' → logprob: -8.250268936157227
    3. ' "' → logprob: -12.375268936157227
    4. ''' → logprob: -12.875268936157227
    5. ' ' → logprob: -16.000268936157227
    6. '   ' → logprob: -16.250268936157227
    7. '"
' → logprob: -16.500268936157227
    8. '"#' → logprob: -16.750268936157227
    9. '#' → logprob: -17.250268936157227
    10. 's' → logprob: -17.500268936157227

Token 588: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19229565560817719
    2. 'else' → logprob: -2.942295551300049
    3. 'elif' → logprob: -3.192295551300049
    4. '<|end|>' → logprob: -3.442295551300049
    5. ' else' → logprob: -3.692295551300049
    6. '   ' → logprob: -4.442295551300049
    7. ' elif' → logprob: -5.192295551300049
    8. ' ' → logprob: -5.817295551300049
    9. '	elif' → logprob: -6.567295551300049
    10. '"' → logprob: -7.442295551300049

Token 590: ' '' (ID: 461)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.3266841769218445
    2. '"' → logprob: -1.8266842365264893
    3. ''s' → logprob: -2.4516842365264893
    4. ' "' → logprob: -3.5766842365264893
    5. 's' → logprob: -6.45168399810791
    6. ' s' → logprob: -7.70168399810791
    7. ''' → logprob: -7.82668399810791
    8. ' ' → logprob: -8.20168399810791
    9. '`s' → logprob: -8.20168399810791
    10. ''p' → logprob: -8.20168399810791

Token 591: 'r' (ID: 81)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009591046255081892
    2. 'p' → logprob: -7.0009589195251465
    3. ' s' → logprob: -10.000959396362305
    4. '"' → logprob: -13.625959396362305
    5. '"s' → logprob: -14.250959396362305
    6. '_s' → logprob: -16.375959396362305
    7. ''s' → logprob: -16.875959396362305
    8. '	s' → logprob: -17.125959396362305
    9. '`s' → logprob: -17.375959396362305
    10. ''' → logprob: -17.500959396362305

Token 592: ''' (ID: 6)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.16922195255756378
    2. '"' → logprob: -2.044221878051758
    3. ' bat' → logprob: -4.044221878051758
    4. '<|end|>' → logprob: -5.294221878051758
    5. ''' → logprob: -6.044221878051758
    6. ' '' → logprob: -8.294221878051758
    7. ' ")' → logprob: -8.544221878051758
    8. 'bat' → logprob: -8.919221878051758
    9. ' ">' → logprob: -9.169221878051758
    10. ' bata' → logprob: -9.294221878051758

Token 593: ' bat' (ID: 10639)
  Prédit: ' bat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bat' → logprob: -0.009293925948441029
    2. 'bat' → logprob: -5.009294033050537
    3. '<|end|>' → logprob: -7.009294033050537
    4. ' bata' → logprob: -7.259294033050537
    5. ' bats' → logprob: -7.884294033050537
    6. ' batt' → logprob: -8.009293556213379
    7. ' battre' → logprob: -9.884293556213379
    8. ' +=' → logprob: -9.884293556213379
    9. ' bate' → logprob: -10.134293556213379
    10. '"' → logprob: -10.759293556213379

Token 594: ' '' (ID: 461)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.7498246431350708
    2. '"' → logprob: -1.1248246431350708
    3. ''s' → logprob: -1.8748246431350708
    4. ''p' → logprob: -3.3748245239257812
    5. ' "' → logprob: -4.374824523925781
    6. 's' → logprob: -6.999824523925781
    7. 'p' → logprob: -7.749824523925781
    8. '`s' → logprob: -7.874824523925781
    9. ' p' → logprob: -7.999824523925781
    10. ' ' → logprob: -8.624824523925781

Token 595: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048655495047569275
    2. 'p' → logprob: -3.0486555099487305
    3. ' s' → logprob: -10.04865550994873
    4. ''s' → logprob: -11.54865550994873
    5. '"' → logprob: -11.92365550994873
    6. '"s' → logprob: -12.54865550994873
    7. ''p' → logprob: -13.04865550994873
    8. ' p' → logprob: -13.29865550994873
    9. '<|end|>' → logprob: -15.54865550994873
    10. ''' → logprob: -15.67365550994873

Token 596: ''
' (ID: 2207)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003776811994612217
    2. '"
' → logprob: -5.628777027130127
    3. ''' → logprob: -9.003776550292969
    4. '       ' → logprob: -10.378776550292969
    5. ' "' → logprob: -11.753776550292969
    6. '")' → logprob: -12.253776550292969
    7. 's' → logprob: -12.378776550292969
    8. '"
' → logprob: -13.378776550292969
    9. ')' → logprob: -14.003776550292969
    10. '   ' → logprob: -14.253776550292969

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002446509897708893
    2. 'elif' → logprob: -9.250245094299316
    3. 'else' → logprob: -9.250245094299316
    4. '	' → logprob: -10.500245094299316
    5. ' else' → logprob: -11.000245094299316
    6. ' elif' → logprob: -12.000245094299316
    7. '	elif' → logprob: -14.000245094299316
    8. ' ' → logprob: -15.000245094299316
    9. '      ' → logprob: -15.750245094299316
    10. '	else' → logprob: -15.875245094299316

Token 598: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8215864300727844
    2. 'else' (adapté à ' else') → logprob: -0.8215864300727844
    3. '       ' → logprob: -2.4465863704681396
    4. 'elif' → logprob: -3.6965863704681396
    5. ' elif' → logprob: -4.696586608886719
    6. '	else' → logprob: -12.821586608886719
    7. '	elif' → logprob: -12.946586608886719
    8. '   ' → logprob: -13.446586608886719
    9. ' ' → logprob: -14.071586608886719
    10. '	' → logprob: -14.196586608886719

Token 599: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03949536010622978
    2. ':
' → logprob: -3.6644954681396484
    3. '           ' → logprob: -4.664495468139648
    4. ' :' → logprob: -6.164495468139648
    5. '"' → logprob: -7.414495468139648
    6. ' "' → logprob: -8.414495468139648
    7. '=' → logprob: -9.039495468139648
    8. '   ' → logprob: -9.164495468139648
    9. ' :
' → logprob: -9.164495468139648
    10. ' =' → logprob: -9.539495468139648

Token 600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08526046574115753
    2. '"' → logprob: -3.2102603912353516
    3. ' a' → logprob: -4.335260391235352
    4. 'a' → logprob: -4.460260391235352
    5. 'p' → logprob: -5.710260391235352
    6. ' p' → logprob: -5.835260391235352
    7. ' "' → logprob: -5.960260391235352
    8. '"a' → logprob: -6.210260391235352
    9. '		' → logprob: -6.585260391235352
    10. '       ' → logprob: -6.710260391235352

Token 601: ' a' (ID: 261)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.6513127088546753
    2. 's' → logprob: -1.7763127088546753
    3. '"' → logprob: -1.9013127088546753
    4. ' "' → logprob: -2.651312828063965
    5. '"a' → logprob: -3.401312828063965
    6. 'a' (adapté à ' a') → logprob: -3.526312828063965
    7. ' s' → logprob: -4.401312828063965
    8. ''s' → logprob: -5.026312828063965
    9. ''a' → logprob: -5.401312828063965
    10. ' a' → logprob: -6.651312828063965

Token 602: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004156756680458784
    2. ' +=' → logprob: -5.504156589508057
    3. '=' → logprob: -9.504157066345215
    4. '+' → logprob: -13.004157066345215
    5. '+="' → logprob: -13.754157066345215
    6. ' =' → logprob: -15.629157066345215
    7. '+='' → logprob: -16.1291561126709
    8. ' +' → logprob: -16.6291561126709
    9. ']+=' → logprob: -16.6291561126709
    10. 's' → logprob: -16.7541561126709

Token 603: ' "' (ID: 392)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.013099287636578083
    2. 's' → logprob: -4.513099193572998
    3. ''s' → logprob: -6.263099193572998
    4. '"' → logprob: -9.013099670410156
    5. '`s' → logprob: -10.888099670410156
    6. ' s' → logprob: -13.013099670410156
    7. '"S' → logprob: -14.013099670410156
    8. ' "' → logprob: -14.888099670410156
    9. '	s' → logprob: -17.138099670410156
    10. ''' → logprob: -17.513099670410156

Token 604: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001199158956296742
    2. '"s' → logprob: -6.751199245452881
    3. ''s' → logprob: -10.501198768615723
    4. '"' → logprob: -14.251198768615723
    5. '`s' → logprob: -14.626198768615723
    6. ' s' → logprob: -15.001198768615723
    7. '	s' → logprob: -18.25119972229004
    8. '_s' → logprob: -18.87619972229004
    9. '"S' → logprob: -18.87619972229004
    10. ''' → logprob: -20.00119972229004

Token 605: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005509077105671167
    2. ' "' → logprob: -6.380508899688721
    3. ''' → logprob: -6.505508899688721
    4. '<|end|>' → logprob: -6.755508899688721
    5. '")' → logprob: -7.380508899688721
    6. ' ' → logprob: -8.755509376525879
    7. ')' → logprob: -8.880509376525879
    8. '"""' → logprob: -9.255509376525879
    9. '```' → logprob: -10.130509376525879
    10. '""' → logprob: -10.505509376525879

Token 606: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004290896002203226
    2. ''p' → logprob: -5.75429105758667
    3. '"' → logprob: -6.87929105758667
    4. '_p' → logprob: -10.254290580749512
    5. ' p' → logprob: -11.129290580749512
    6. ''' → logprob: -11.379290580749512
    7. ' "' → logprob: -11.879290580749512
    8. '   ' → logprob: -11.879290580749512
    9. '	p' → logprob: -12.629290580749512
    10. 'r' → logprob: -13.004290580749512

Token 609: 's' (ID: 82)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ''p' → logprob: -16.0
    3. ' p' → logprob: -17.5
    4. 'r' → logprob: -18.25
    5. '_p' → logprob: -20.75
    6. '	p' → logprob: -20.75
    7. '`' → logprob: -20.75
    8. '"' → logprob: -21.25
    9. 'paper' → logprob: -22.375
    10. 'pp' → logprob: -23.25

Token 610: ''' (ID: 6)
  Prédit: ' bat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bat' → logprob: -0.12601903080940247
    2. '"' → logprob: -2.50101900100708
    3. 'bat' → logprob: -3.87601900100708
    4. ''' → logprob: -4.25101900100708
    5. ' batt' → logprob: -7.12601900100708
    6. ' bats' → logprob: -8.501019477844238
    7. ' "' → logprob: -8.751019477844238
    8. ' bata' → logprob: -9.126019477844238
    9. ' bate' → logprob: -9.876019477844238
    10. ' battre' → logprob: -10.626019477844238

Token 611: ' bat' (ID: 10639)
  Prédit: ' bat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bat' → logprob: -0.5395469069480896
    2. 'bat' → logprob: -0.9145469069480896
    3. '<|end|>' → logprob: -5.164546966552734
    4. ' batt' → logprob: -5.414546966552734
    5. ' bata' → logprob: -6.289546966552734
    6. ' battre' → logprob: -6.664546966552734
    7. 'beat' → logprob: -7.789546966552734
    8. ' beats' → logprob: -8.039546966552734
    9. ' ' → logprob: -8.164546966552734
    10. ' bate' → logprob: -8.164546966552734

Token 612: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.49270546436309814
    2. ''p' → logprob: -0.9927054643630981
    3. 'p' → logprob: -3.9927053451538086
    4. ''' → logprob: -13.242705345153809
    5. '`' → logprob: -13.867705345153809
    6. ' "' → logprob: -14.117705345153809
    7. '"P' → logprob: -14.617705345153809
    8. '	p' → logprob: -14.617705345153809
    9. ' p' → logprob: -14.742705345153809
    10. '_p' → logprob: -15.242705345153809

Token 613: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001502636878285557
    2. ''p' → logprob: -8.875150680541992
    3. '"' → logprob: -11.625150680541992
    4. ' p' → logprob: -14.000150680541992
    5. ''' → logprob: -14.250150680541992
    6. 'r' → logprob: -18.000150680541992
    7. '	p' → logprob: -18.125150680541992
    8. '_p' → logprob: -19.750150680541992
    9. '<p' → logprob: -20.750150680541992
    10. '`' → logprob: -21.125150680541992

Token 614: ''
' (ID: 2207)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -9.317247167928144e-05
    2. ')"' → logprob: -10.000093460083008
    3. '")' → logprob: -10.625093460083008
    4. '"
' → logprob: -11.250093460083008
    5. ')' → logprob: -12.250093460083008
    6. ''' → logprob: -12.875093460083008
    7. ' "' → logprob: -13.500093460083008
    8. ''"' → logprob: -13.750093460083008
    9. 's' → logprob: -15.375093460083008
    10. '```' → logprob: -15.500093460083008

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06234487146139145
    2. 'return' → logprob: -2.812344789505005
    3. ' return' → logprob: -7.937345027923584
    4. '	return' → logprob: -11.187344551086426
    5. '
' → logprob: -12.562344551086426
    6. '    
' → logprob: -13.812344551086426
    7. '       ' → logprob: -14.812344551086426
    8. ':return' → logprob: -15.062344551086426
    9. ' ' → logprob: -15.437344551086426
    10. '```' → logprob: -15.687344551086426

Token 616: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26194506883621216
    2. 'return' (adapté à ' return') → logprob: -1.8869450092315674
    3. ' return' → logprob: -2.7619450092315674
    4. '
' → logprob: -4.3869452476501465
    5. '	return' → logprob: -6.2619452476501465
    6. '    
' → logprob: -7.1369452476501465
    7. '\n' → logprob: -8.136944770812988
    8. ':return' → logprob: -9.386944770812988
    9. '  
' → logprob: -9.886944770812988
    10. ' ' → logprob: -10.261944770812988

Token 617: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004306692280806601
    2. ' a' → logprob: -7.750430583953857
    3. '_a' → logprob: -19.875431060791016
    4. '	a' → logprob: -20.125431060791016
    5. ''a' → logprob: -20.375431060791016
    6. '(a' → logprob: -20.625431060791016
    7. '"a' → logprob: -20.625431060791016
    8. ' ' → logprob: -21.500431060791016
    9. '`' → logprob: -22.125431060791016
    10. ' ' → logprob: -22.250431060791016

Token 618: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004107732092961669
    2. '<|end|>' → logprob: -7.875410556793213
    3. '
' → logprob: -11.250411033630371
    4. ' def' → logprob: -11.750411033630371
    5. '<|end|>' → logprob: -12.500411033630371
    6. '```' → logprob: -12.500411033630371
    7. '#' → logprob: -14.000411033630371
    8. ')' → logprob: -14.750411033630371
    9. '[' → logprob: -15.125411033630371
    10. 'import' → logprob: -16.250410079956055

Token 619: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3782830137643032e-05
    2. '```' → logprob: -12.12501335144043
    3. '#' → logprob: -12.37501335144043
    4. '<|end|>' → logprob: -13.62501335144043
    5. ' def' → logprob: -13.87501335144043
    6. 'import' → logprob: -14.00001335144043
    7. '
' → logprob: -15.75001335144043
    8. 'from' → logprob: -15.87501335144043
    9. '\' → logprob: -16.12501335144043
    10. '[' → logprob: -16.37501335144043

Token 620: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6326662302017212
    2. 'calculate' → logprob: -0.7576662302017212
    3. ' initial' → logprob: -11.13266658782959
    4. 'score' → logprob: -11.38266658782959
    5. 'initial' → logprob: -11.75766658782959
    6. 'def' → logprob: -12.00766658782959
    7. 'g' → logprob: -12.00766658782959
    8. ' score' → logprob: -12.38266658782959
    9. 'c' → logprob: -12.63266658782959
    10. 'calc' → logprob: -13.00766658782959

Token 621: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.0002546641044318676
    2. '_score' → logprob: -8.37525463104248
    3. '_' → logprob: -10.87525463104248
    4. '_init' → logprob: -13.37525463104248
    5. '_scores' → logprob: -14.00025463104248
    6. '_in' → logprob: -14.62525463104248
    7. '_original' → logprob: -14.75025463104248
    8. '_final' → logprob: -15.00025463104248
    9. '_opt' → logprob: -15.12525463104248
    10. '_a' → logprob: -15.62525463104248

Token 622: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00015669701679144055
    2. '_' → logprob: -9.25015640258789
    3. '_scores' → logprob: -9.87515640258789
    4. '_s' → logprob: -12.75015640258789
    5. '_points' → logprob: -13.37515640258789
    6. 'score' → logprob: -13.75015640258789
    7. '_sc' → logprob: -14.00015640258789
    8. '_max' → logprob: -14.87515640258789
    9. '_sum' → logprob: -15.37515640258789
    10. '_total' → logprob: -15.62515640258789

Token 623: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001170225441455841
    2. '(' → logprob: -6.7511701583862305
    3. '(
' → logprob: -17.376171112060547
    4. '(s' → logprob: -19.376171112060547
    5. '(A' → logprob: -19.751171112060547
    6. '(ai' → logprob: -20.501171112060547
    7. '(

' → logprob: -21.251171112060547
    8. 'a' → logprob: -21.501171112060547
    9. '(t' → logprob: -21.501171112060547
    10. '(def' → logprob: -21.501171112060547

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033749574795365334
    2. ',a' → logprob: -5.753375053405762
    3. '(a' → logprob: -9.128375053405762
    4. '):' → logprob: -10.128375053405762
    5. 'a' → logprob: -10.128375053405762
    6. '(' → logprob: -12.378375053405762
    7. ' ,' → logprob: -13.003375053405762
    8. ')' → logprob: -14.753375053405762
    9. '   ' → logprob: -14.878375053405762
    10. ':' → logprob: -15.378375053405762

Token 625: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00034630970912985504
    2. 'n' → logprob: -8.625346183776855
    3. ' r' → logprob: -8.750346183776855
    4. ')' → logprob: -12.625346183776855
    5. 't' → logprob: -12.875346183776855
    6. '   ' → logprob: -14.250346183776855
    7. 'a' → logprob: -14.250346183776855
    8. 'k' → logprob: -15.375346183776855
    9. '_r' → logprob: -15.500346183776855
    10. ' n' → logprob: -15.625346183776855

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',s' → logprob: -13.875014305114746
    4. ',p' → logprob: -16.00001335144043
    5. ',
' → logprob: -17.12501335144043
    6. '‌,' → logprob: -17.50001335144043
    7. ',r' → logprob: -17.62501335144043
    8. 's' → logprob: -17.87501335144043
    9. ')' → logprob: -18.37501335144043
    10. '=' → logprob: -18.37501335144043

Token 627: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750484973192215
    2. ' s' → logprob: -3.5297505855560303
    3. ',s' → logprob: -20.52975082397461
    4. '_s' → logprob: -20.65475082397461
    5. '	s' → logprob: -20.90475082397461
    6. '   ' → logprob: -21.40475082397461
    7. 'p' → logprob: -21.40475082397461
    8. ' ' → logprob: -21.52975082397461
    9. ',' → logprob: -22.40475082397461
    10. ' ' → logprob: -22.65475082397461

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ',p' → logprob: -13.250003814697266
    3. ' ,' → logprob: -13.375003814697266
    4. ',
' → logprob: -17.625003814697266
    5. 'p' → logprob: -18.125003814697266
    6. '‌,' → logprob: -19.750003814697266
    7. '_,' → logprob: -21.000003814697266
    8. '=' → logprob: -21.000003814697266
    9. ',

' → logprob: -21.125003814697266
    10. ',P' → logprob: -22.000003814697266

Token 629: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005233882926404476
    2. ' p' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.255233764648438
    4. ' ' → logprob: -20.255233764648438
    5. ' ' → logprob: -21.130233764648438
    6. '	p' → logprob: -21.255233764648438
    7. '  ' → logprob: -21.255233764648438
    8. '_p' → logprob: -21.630233764648438
    9. '<p' → logprob: -22.505233764648438
    10. '    ' → logprob: -22.630233764648438

Token 630: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002655079588294029
    2. '):
' → logprob: -8.375265121459961
    3. ',' → logprob: -10.875265121459961
    4. ')' → logprob: -11.250265121459961
    5. ' ):' → logprob: -13.750265121459961
    6. ':' → logprob: -14.125265121459961
    7. '):
' → logprob: -14.500265121459961
    8. '   ' → logprob: -14.625265121459961
    9. '):

' → logprob: -16.75026512145996
    10. '}:' → logprob: -17.12526512145996

Token 631: '   ' (ID: 271)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.11097316443920135
    2. '   ' → logprob: -2.3609731197357178
    3. 'ans' → logprob: -4.735973358154297
    4. ' score' → logprob: -6.485973358154297
    5. '_score' → logprob: -8.860973358154297
    6. '    
' → logprob: -9.860973358154297
    7. ' ans' → logprob: -10.110973358154297
    8. '
' → logprob: -10.110973358154297
    9. '	score' → logprob: -10.485973358154297
    10. '(score' → logprob: -10.735973358154297

Token 632: ' """
' (ID: 7037)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.02235780656337738
    2. 'ans' → logprob: -4.022357940673828
    3. ' score' → logprob: -6.272357940673828
    4. '   ' → logprob: -6.272357940673828
    5. ' ans' → logprob: -8.522357940673828
    6. 'answer' → logprob: -9.647357940673828
    7. '
' → logprob: -10.272357940673828
    8. '```' → logprob: -10.522357940673828
    9. 'total' → logprob: -10.897357940673828
    10. '    
' → logprob: -11.022357940673828

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008707251981832087
    2. '    ' → logprob: -7.875870704650879
    3. '"' → logprob: -8.625870704650879
    4. 'score' → logprob: -8.875870704650879
    5. ' score' → logprob: -9.875870704650879
    6. '  ' → logprob: -10.375870704650879
    7. '_' → logprob: -10.500870704650879
    8. '"""' → logprob: -11.000870704650879
    9. '    
' → logprob: -11.250870704650879
    10. 'def' → logprob: -12.000870704650879

Token 634: ' Cal' (ID: 4453)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0020843585953116417
    2. 'ans' → logprob: -6.252084255218506
    3. '   ' → logprob: -9.377084732055664
    4. 'def' → logprob: -10.252084732055664
    5. 'total' → logprob: -10.627084732055664
    6. '
' → logprob: -12.127084732055664
    7. ' score' → logprob: -12.752084732055664
    8. 'result' → logprob: -14.127084732055664
    9. 'answer' → logprob: -14.252084732055664
    10. '"""
' → logprob: -14.377084732055664

Token 635: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.13782690465450287
    2. 'cule' → logprob: -2.137826919555664
    3. 'culate' → logprob: -4.637826919555664
    4. 'c' → logprob: -7.637826919555664
    5. 'cula' → logprob: -7.887826919555664
    6. 'cules' → logprob: -8.262826919555664
    7. 'cut' → logprob: -11.637826919555664
    8. 'cular' → logprob: -11.637826919555664
    9. 'cu' → logprob: -11.887826919555664
    10. 'culus' → logprob: -12.512826919555664

Token 636: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.0679198503494263
    2. 'the' → logprob: -1.9429198503494263
    3. 'score' → logprob: -2.3179197311401367
    4. ' the' → logprob: -2.4429197311401367
    5. ' la' → logprob: -2.5679197311401367
    6. 'le' → logprob: -2.5679197311401367
    7. 'l' → logprob: -3.5679197311401367
    8. '0' → logprob: -3.6929197311401367
    9. 'initial' → logprob: -3.6929197311401367
    10. 'sum' → logprob: -3.6929197311401367

Token 637: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -5.4192871175473556e-05
    2. ' score' → logprob: -9.875054359436035
    3. 'total' → logprob: -13.000054359436035
    4. 's' → logprob: -16.25005340576172
    5. 'sum' → logprob: -16.50005340576172
    6. '   ' → logprob: -16.62505340576172
    7. '	score' → logprob: -17.12505340576172
    8. '"""
' → logprob: -17.50005340576172
    9. '```' → logprob: -17.62505340576172
    10. 'ans' → logprob: -17.75005340576172

Token 638: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.42782580852508545
    2. '   ' → logprob: -1.6778258085250854
    3. ' initial' → logprob: -2.552825927734375
    4. '_initial' → logprob: -3.302825927734375
    5. '(initial' → logprob: -4.427825927734375
    6. 'final' → logprob: -5.052825927734375
    7. 'max' → logprob: -5.302825927734375
    8. 'def' → logprob: -5.552825927734375
    9. '=' → logprob: -5.802825927734375
    10. ' =' → logprob: -5.802825927734375

Token 639: ' pour' (ID: 1930)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6660965085029602
    2. 'def' → logprob: -2.2910964488983154
    3. ' (' → logprob: -2.5410964488983154
    4. '(
' → logprob: -2.6660964488983154
    5. '(' → logprob: -2.7910964488983154
    6. ' en' → logprob: -3.0410964488983154
    7. '   ' → logprob: -3.2910964488983154
    8. ' pour' → logprob: -4.2910966873168945
    9. 'en' → logprob: -4.5410966873168945
    10. ' a' → logprob: -4.7910966873168945

Token 640: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.058783531188964844
    2. 'i' → logprob: -3.433783531188965
    3. '0' → logprob: -4.183783531188965
    4. 'la' → logprob: -6.058783531188965
    5. 'the' → logprob: -6.433783531188965
    6. 'le' → logprob: -7.058783531188965
    7. 'def' → logprob: -7.308783531188965
    8. ' a' → logprob: -7.558783531188965
    9. '
' → logprob: -7.683783531188965
    10. ' i' → logprob: -7.808783531188965

Token 641: ' sé' (ID: 7462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18663132190704346
    2. 'score' → logprob: -1.8116313219070435
    3. '""' → logprob: -6.936631202697754
    4. '"""' → logprob: -6.936631202697754
    5. 'def' → logprob: -7.186631202697754
    6. 'sequence' → logprob: -7.561631202697754
    7. 'sum' → logprob: -7.686631202697754
    8. 'ans' → logprob: -7.811631202697754
    9. 's' → logprob: -7.936631202697754
    10. '"' → logprob: -7.936631202697754

Token 642: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00011546355381142348
    2. 'quences' → logprob: -9.750115394592285
    3. 'q' → logprob: -10.625115394592285
    4. 'qu' → logprob: -11.750115394592285
    5. '   ' → logprob: -11.750115394592285
    6. 'a' → logprob: -12.000115394592285
    7. 'QUENCE' → logprob: -12.500115394592285
    8. 'sequence' → logprob: -13.250115394592285
    9. 'quent' → logprob: -13.750115394592285
    10. '_' → logprob: -14.250115394592285

Token 643: ' de' (ID: 334)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5433139204978943
    2. ' des' → logprob: -1.168313980102539
    3. ' de' → logprob: -2.668313980102539
    4. 'a' → logprob: -3.293313980102539
    5. ' à' → logprob: -7.668313980102539
    6. ' of' → logprob: -8.043313980102539
    7. 'des' → logprob: -8.168313980102539
    8. '   ' → logprob: -8.918313980102539
    9. ' ' → logprob: -9.168313980102539
    10. '_a' → logprob: -9.543313980102539

Token 644: ' coups' (ID: 98942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5978681445121765
    2. 'cou' → logprob: -0.9728681445121765
    3. 'moves' → logprob: -3.2228682041168213
    4. ' coups' → logprob: -3.4728682041168213
    5. ' a' → logprob: -7.847867965698242
    6. ' moves' → logprob: -8.972867965698242
    7. 'm' → logprob: -9.222867965698242
    8. 'actions' → logprob: -9.347867965698242
    9. 'jou' → logprob: -9.597867965698242
    10. ' mouvements' → logprob: -9.847867965698242

Token 645: ' optim' (ID: 9367)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6468333601951599
    2. '   ' → logprob: -1.1468334197998047
    3. 'jou' → logprob: -2.2718334197998047
    4. ' a' → logprob: -3.8968334197998047
    5. ' jou' → logprob: -4.396833419799805
    6. 'optim' → logprob: -4.521833419799805
    7. ' optimale' → logprob: -5.771833419799805
    8. 'à' → logprob: -5.896833419799805
    9. ' optim' → logprob: -6.396833419799805
    10. ' à' → logprob: -6.521833419799805

Token 646: 'aux' (ID: 5454)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.38839462399482727
    2. 'aux' → logprob: -1.1383945941925049
    3. 'ales' → logprob: -6.888394832611084
    4. '```' → logprob: -8.388394355773926
    5. 'a' → logprob: -9.888394355773926
    6. 'al' → logprob: -10.013394355773926
    7. '
' → logprob: -10.013394355773926
    8. 'isée' → logprob: -10.388394355773926
    9. 'als' → logprob: -10.513394355773926
    10. 'isés' → logprob: -10.763394355773926

Token 647: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09510313719511032
    2. '(' → logprob: -3.3451030254364014
    3. 'a' → logprob: -4.2201032638549805
    4. ',' → logprob: -4.3451032638549805
    5. '   ' → logprob: -4.7201032638549805
    6. '(
' → logprob: -5.2201032638549805
    7. '.' → logprob: -5.4701032638549805
    8. 'def' → logprob: -6.2201032638549805
    9. '[a' → logprob: -6.3451032638549805
    10. ' (' → logprob: -6.4701032638549805

Token 648: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3559260070323944
    2. 'a' → logprob: -1.8559260368347168
    3. ' ans' → logprob: -2.980926036834717
    4. 'ans' → logprob: -2.980926036834717
    5. 'score' → logprob: -3.605926036834717
    6. ' a' → logprob: -5.855926036834717
    7. ' score' → logprob: -5.980926036834717
    8. '    
' → logprob: -6.230926036834717
    9. 'n' → logprob: -6.355926036834717
    10. '
' → logprob: -6.605926036834717

Token 649: ' tenir' (ID: 57709)
  Prédit: ' tenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tenir' → logprob: -0.04299714043736458
    2. 'tenir' → logprob: -3.542997121810913
    3. ' prendre' → logprob: -5.917997360229492
    4. 'respect' → logprob: -6.042997360229492
    5. 'prendre' → logprob: -6.042997360229492
    6. '_t' → logprob: -6.792997360229492
    7. ' respecter' → logprob: -6.792997360229492
    8. '_' → logprob: -7.167997360229492
    9. ' compter' → logprob: -7.417997360229492
    10. 'consider' → logprob: -7.667997360229492

Token 650: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.07888659089803696
    2. 'comp' → logprob: -2.7038865089416504
    3. '   ' → logprob: -4.82888650894165
    4. 'account' → logprob: -8.328886985778809
    5. '    ' → logprob: -8.703886985778809
    6. '```' → logprob: -8.703886985778809
    7. ' ' → logprob: -9.203886985778809
    8. '  ' → logprob: -9.578886985778809
    9. '_comp' → logprob: -10.078886985778809
    10. 'count' → logprob: -10.453886985778809

Token 651: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.4424862861633301
    2. ' des' → logprob: -1.06748628616333
    3. '   ' → logprob: -4.94248628616333
    4. ' de' → logprob: -5.69248628616333
    5. 'de' → logprob: -6.44248628616333
    6. 'du' → logprob: -7.06748628616333
    7. '(des' → logprob: -8.192485809326172
    8. ' du' → logprob: -8.442485809326172
    9. '_des' → logprob: -9.192485809326172
    10. '```' → logprob: -10.067485809326172

Token 652: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1323515772819519
    2. ' l' → logprob: -3.0073516368865967
    3. 'l' → logprob: -3.6323516368865967
    4. 'la' → logprob: -4.132351398468018
    5. 'constraints' → logprob: -4.382351398468018
    6. ' constraints' → logprob: -4.757351398468018
    7. ' contraintes' → logprob: -5.007351398468018
    8. 'les' → logprob: -6.757351398468018
    9. ' les' → logprob: -6.882351398468018
    10. 'contra' → logprob: -8.007351875305176

Token 653: ' contr' (ID: 6030)
  Prédit: 'contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contr' → logprob: -0.8619893193244934
    2. ' contraintes' → logprob: -1.2369892597198486
    3. 'contra' → logprob: -1.3619892597198486
    4. 'con' → logprob: -4.236989498138428
    5. 'restr' → logprob: -5.361989498138428
    6. ' contr' → logprob: -5.611989498138428
    7. 'constraints' → logprob: -5.611989498138428
    8. 'r' → logprob: -6.111989498138428
    9. 'restriction' → logprob: -6.986989498138428
    10. 'constraint' → logprob: -7.486989498138428

Token 654: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0005673298146575689
    2. 'a' → logprob: -8.125567436218262
    3. 'aint' → logprob: -8.750567436218262
    4. 'aints' → logprob: -9.250567436218262
    5. 'ain' → logprob: -11.875567436218262
    6. 'aine' → logprob: -12.250567436218262
    7. '#' → logprob: -13.500567436218262
    8. 'aiste' → logprob: -14.000567436218262
    9. '   ' → logprob: -14.500567436218262
    10. 'ained' → logprob: -14.875567436218262

Token 655: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7429779171943665
    2. ' de' → logprob: -1.7429778575897217
    3. 'des' → logprob: -2.1179778575897217
    4. '.' → logprob: -2.2429778575897217
    5. ' d' → logprob: -3.1179778575897217
    6. 'd' → logprob: -3.4929778575897217
    7. 'de' → logprob: -3.9929778575897217
    8. ',' → logprob: -4.742978096008301
    9. 's' → logprob: -4.742978096008301
    10. '   ' → logprob: -5.617978096008301

Token 656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6323169469833374
    2. ' de' → logprob: -1.6323169469833374
    3. ' des' → logprob: -1.8823169469833374
    4. '.' → logprob: -3.507317066192627
    5. ',' → logprob: -4.507317066192627
    6. 'de' → logprob: -4.632317066192627
    7. '_' → logprob: -4.757317066192627
    8. 'des' → logprob: -4.757317066192627
    9. 's' → logprob: -4.882317066192627
    10. ' d' → logprob: -4.882317066192627

Token 657: ' sur' (ID: 1512)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.207944393157959
    2. 'de' → logprob: -1.332944393157959
    3. ' de' → logprob: -1.457944393157959
    4. 'd' → logprob: -2.582944393157959
    5. 'sur' (adapté à ' sur') → logprob: -2.957944393157959
    6. 'des' → logprob: -3.582944393157959
    7. ' d' → logprob: -4.457944393157959
    8. ',' → logprob: -4.582944393157959
    9. 's' → logprob: -4.707944393157959
    10. ' des' → logprob: -5.332944393157959

Token 658: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3294118642807007
    2. ' les' → logprob: -2.2044119834899902
    3. ' la' → logprob: -2.2044119834899902
    4. 'la' → logprob: -3.2044119834899902
    5. 'l' → logprob: -4.70441198348999
    6. 'le' → logprob: -4.95441198348999
    7. ' l' → logprob: -6.82941198348999
    8. ' le' → logprob: -7.20441198348999
    9. '#' → logprob: -7.70441198348999
    10. 'a' → logprob: -8.079411506652832

Token 659: ' coups' (ID: 98942)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.4826774597167969
    2. 'm' → logprob: -1.9826774597167969
    3. ' coups' → logprob: -3.357677459716797
    4. 'de' → logprob: -3.357677459716797
    5. 'c' → logprob: -3.607677459716797
    6. 'cons' → logprob: -3.857677459716797
    7. 'k' → logprob: -3.857677459716797
    8. 'moves' → logprob: -3.982677459716797
    9. 'ré' → logprob: -4.357677459716797
    10. 'ret' → logprob: -4.482677459716797

Token 660: ' rép' (ID: 64372)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -1.2915886640548706
    2. ' jou' → logprob: -1.4165886640548706
    3. '   ' → logprob: -2.16658878326416
    4. ' cons' → logprob: -2.29158878326416
    5. ' à' → logprob: -2.79158878326416
    6. 'cons' → logprob: -3.04158878326416
    7. '.' → logprob: -3.79158878326416
    8. 'à' → logprob: -3.79158878326416
    9. ' rép' → logprob: -3.91658878326416
    10. '  ' → logprob: -4.54158878326416

Token 661: 'étés' (ID: 54751)
  Prédit: 'étés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étés' → logprob: -0.0005018008523620665
    2. 'et' → logprob: -8.25050163269043
    3. 'ét' → logprob: -9.12550163269043
    4. 'etés' → logprob: -9.12550163269043
    5. '{' → logprob: -11.75050163269043
    6. 'été' → logprob: -12.50050163269043
    7. 'êt' → logprob: -12.62550163269043
    8. '"' → logprob: -13.75050163269043
    9. '{"' → logprob: -13.75050163269043
    10. 'it' → logprob: -13.75050163269043

Token 662: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01481311209499836
    2. 'def' → logprob: -5.01481294631958
    3. ',' → logprob: -6.01481294631958
    4. ' à' → logprob: -6.63981294631958
    5. 's' → logprob: -6.88981294631958
    6. ')' → logprob: -7.13981294631958
    7. '.
' → logprob: -7.88981294631958
    8. 'sur' → logprob: -8.139813423156738
    9. 'dans' → logprob: -8.389813423156738
    10. 'à' → logprob: -8.514813423156738

Token 663: ' interv' (ID: 37413)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01881629042327404
    2. ' k' → logprob: -4.0188164710998535
    3. 'distance' → logprob: -7.7688164710998535
    4. 'interval' → logprob: -9.143815994262695
    5. 'l' → logprob: -10.268815994262695
    6. '_k' → logprob: -10.643815994262695
    7. ' ' → logprob: -11.143815994262695
    8. 'con' → logprob: -11.268815994262695
    9. ' distance' → logprob: -11.768815994262695
    10. '```' → logprob: -11.768815994262695

Token 664: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.32396748661994934
    2. 'ale' → logprob: -1.698967456817627
    3. 'ales' → logprob: -3.198967456817627
    4. 'alles' → logprob: -3.948967456817627
    5. 'alent' → logprob: -4.573967456817627
    6. 'alue' → logprob: -5.323967456817627
    7. 'alité' → logprob: -5.573967456817627
    8. 'alle' → logprob: -5.698967456817627
    9. '```' → logprob: -5.823967456817627
    10. 'als' → logprob: -6.823967456817627

Token 665: ' k' (ID: 372)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8247677087783813
    2. 'k' → logprob: -1.4497677087783813
    3. ' de' → logprob: -1.9497677087783813
    4. 'inf' → logprob: -2.074767589569092
    5. ' k' → logprob: -4.449767589569092
    6. ' inf' → logprob: -4.574767589569092
    7. '```' → logprob: -4.699767589569092
    8. 'import' → logprob: -5.324767589569092
    9. 'sup' → logprob: -5.324767589569092
    10. '   ' → logprob: -5.699767589569092

Token 666: '.

' (ID: 364)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.33974575996398926
    2. '   ' → logprob: -1.9647457599639893
    3. '(' → logprob: -2.2147457599639893
    4. '.' → logprob: -3.7147457599639893
    5. '(
' → logprob: -5.46474552154541
    6. ',' → logprob: -5.71474552154541
    7. '_' → logprob: -6.08974552154541
    8. 'a' → logprob: -6.33974552154541
    9. 'def' → logprob: -7.33974552154541
    10. ' (' → logprob: -7.58974552154541

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16492678225040436
    2. 'score' → logprob: -1.9149267673492432
    3. 'ans' → logprob: -5.789927005767822
    4. '
' → logprob: -7.664927005767822
    5. ' score' → logprob: -7.914927005767822
    6. '    
' → logprob: -8.289926528930664
    7. '```' → logprob: -8.914926528930664
    8. 'def' → logprob: -9.039926528930664
    9. 'a' → logprob: -9.164926528930664
    10. '	score' → logprob: -10.414926528930664

Token 668: ' Args' (ID: 39185)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.7109270095825195
    2. '   ' → logprob: -1.2109270095825195
    3. 'ans' → logprob: -1.7109270095825195
    4. '
' → logprob: -3.8359270095825195
    5. ' score' → logprob: -5.2109270095825195
    6. ' ans' → logprob: -6.0859270095825195
    7. '    
' → logprob: -7.4609270095825195
    8. 'def' → logprob: -9.33592700958252
    9. 'answer' → logprob: -9.83592700958252
    10. '	ans' → logprob: -10.33592700958252

Token 669: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3910028636455536
    2. ',' → logprob: -1.516002893447876
    3. '   ' → logprob: -3.016002893447876
    4. '(a' → logprob: -3.766002893447876
    5. ':' → logprob: -4.391002655029297
    6. '(
' → logprob: -5.016002655029297
    7. ')' → logprob: -5.141002655029297
    8. '):' → logprob: -5.516002655029297
    9. '=' → logprob: -6.766002655029297
    10. 'def' → logprob: -7.766002655029297

Token 670: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6020758152008057
    2. 'a' → logprob: -0.9770758152008057
    3. ' a' → logprob: -2.7270758152008057
    4. 'self' → logprob: -5.102075576782227
    5. ' self' → logprob: -5.977075576782227
    6. ' ' → logprob: -7.227075576782227
    7. '       ' → logprob: -8.477075576782227
    8. ' ' → logprob: -8.727075576782227
    9. '    ' → logprob: -8.852075576782227
    10. '[' → logprob: -8.977075576782227

Token 671: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -7.73183855926618e-05
    2. ' a' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.125077247619629
    4. '```' → logprob: -16.000078201293945
    5. ' ' → logprob: -16.500078201293945
    6. '`' → logprob: -16.750078201293945
    7. ')' → logprob: -17.250078201293945
    8. '	a' → logprob: -17.500078201293945
    9. '
' → logprob: -18.000078201293945
    10. ''a' → logprob: -18.125078201293945

Token 672: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015502138994634151
    2. ' (' → logprob: -6.751550197601318
    3. ' ,' → logprob: -8.001550674438477
    4. ':' → logprob: -11.251550674438477
    5. ',a' → logprob: -12.126550674438477
    6. ',n' → logprob: -12.251550674438477
    7. '   ' → logprob: -12.501550674438477
    8. '(' → logprob: -12.751550674438477
    9. ')' → logprob: -12.876550674438477
    10. ',
' → logprob: -13.001550674438477

Token 673: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.36574100604048e-06
    2. 'list' → logprob: -12.625004768371582
    3. ' str' → logprob: -14.625004768371582
    4. ')' → logprob: -15.000004768371582
    5. '[str' → logprob: -15.875004768371582
    6. 'string' → logprob: -17.250003814697266
    7. 'List' → logprob: -17.500003814697266
    8. '```' → logprob: -17.750003814697266
    9. '(str' → logprob: -18.125003814697266
    10. '`' → logprob: -18.250003814697266

Token 674: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -13.000004768371582
    3. ')' → logprob: -13.750004768371582
    4. ' ,' → logprob: -13.875004768371582
    5. '):' → logprob: -16.1250057220459
    6. ',
' → logprob: -16.1250057220459
    7. ',a' → logprob: -16.6250057220459
    8. '‌,' → logprob: -16.6250057220459
    9. '),' → logprob: -16.8750057220459
    10. 'a' → logprob: -18.2500057220459

Token 675: ' Sé' (ID: 53058)
  Prédit: 'Sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sé' → logprob: -0.45525896549224854
    2. 'La' → logprob: -1.9552589654922485
    3. 'Sequence' → logprob: -2.205258846282959
    4. '   ' → logprob: -3.080258846282959
    5. '#' → logprob: -3.455258846282959
    6. ' Sé' → logprob: -4.330258846282959
    7. 'sequence' → logprob: -5.205258846282959
    8. ' sé' → logprob: -5.705258846282959
    9. 'sé' → logprob: -6.080258846282959
    10. 'la' → logprob: -6.080258846282959

Token 676: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00025883622583933175
    2. 'q' → logprob: -8.750258445739746
    3. 'quences' → logprob: -10.250258445739746
    4. 'qu' → logprob: -10.750258445739746
    5. '   ' → logprob: -10.875258445739746
    6. 'QUENCE' → logprob: -10.875258445739746
    7. '#' → logprob: -13.500258445739746
    8. ' ' → logprob: -13.750258445739746
    9. '  ' → logprob: -14.250258445739746
    10. ' qu' → logprob: -14.625258445739746

Token 677: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3023431897163391
    2. ' de' → logprob: -2.1773431301116943
    3. '_des' → logprob: -2.6773431301116943
    4. 'des' → logprob: -3.5523431301116943
    5. ' of' → logprob: -4.552343368530273
    6. '   ' → logprob: -4.552343368530273
    7. ')' → logprob: -5.052343368530273
    8. '[' → logprob: -5.427343368530273
    9. 'a' → logprob: -5.677343368530273
    10. '_' → logprob: -5.802343368530273

Token 678: ' coups' (ID: 98942)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.08012598007917404
    2. ' coups' → logprob: -2.5801260471343994
    3. 'moves' → logprob: -6.95512580871582
    4. ' moves' → logprob: -9.45512580871582
    5. ' ' → logprob: -10.33012580871582
    6. 'a' → logprob: -10.45512580871582
    7. ' coup' → logprob: -10.45512580871582
    8. 'c' → logprob: -10.70512580871582
    9. ' cou' → logprob: -11.20512580871582
    10. 'g' → logprob: -11.20512580871582

Token 679: ' jou' (ID: 10865)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7472198009490967
    2. ' à' → logprob: -1.8722198009490967
    3. '   ' → logprob: -2.2472198009490967
    4. ' optim' → logprob: -2.7472198009490967
    5. ' optimal' → logprob: -3.2472198009490967
    6. 'optimal' → logprob: -3.3722198009490967
    7. ' )' → logprob: -3.8722198009490967
    8. 'à' → logprob: -3.9972198009490967
    9. 'optim' → logprob: -4.122220039367676
    10. ' optimale' → logprob: -4.247220039367676

Token 680: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0005426656571216881
    2. 'ées' → logprob: -7.875542640686035
    3. 'es' → logprob: -8.875542640686035
    4. 'ée' → logprob: -11.000542640686035
    5. '```' → logprob: -13.000542640686035
    6. 'ees' → logprob: -14.125542640686035
    7. 'é' → logprob: -14.625542640686035
    8. '[' → logprob: -14.875542640686035
    9. '``' → logprob: -15.000542640686035
    10. '#' → logprob: -15.000542640686035

Token 681: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03462059423327446
    2. '   ' → logprob: -3.409620523452759
    3. ' )' → logprob: -7.909620761871338
    4. ')
' → logprob: -8.03462028503418
    5. 'def' → logprob: -10.15962028503418
    6. '):
' → logprob: -10.65962028503418
    7. '  ' → logprob: -10.65962028503418
    8. '<|end|>' → logprob: -10.78462028503418
    9. '    ' → logprob: -10.90962028503418
    10. '):' → logprob: -10.90962028503418

Token 682: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11813951283693314
    2. '   ' → logprob: -2.2431395053863525
    3. ')' → logprob: -5.493139743804932
    4. '       ' → logprob: -7.743139743804932
    5. ',
' → logprob: -7.993139743804932
    6. ' ,' → logprob: -8.618139266967773
    7. ' ' → logprob: -9.743139266967773
    8. '<|end|>' → logprob: -9.743139266967773
    9. '    
' → logprob: -10.368139266967773
    10. '    ' → logprob: -10.743139266967773

Token 683: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00030817187507636845
    2. ' r' → logprob: -8.6253080368042
    3. '   ' → logprob: -9.0003080368042
    4. 'n' → logprob: -13.5003080368042
    5. '
' → logprob: -13.7503080368042
    6. 'a' → logprob: -14.1253080368042
    7. '       ' → logprob: -14.8753080368042
    8. '    
' → logprob: -15.1253080368042
    9. ')' → logprob: -15.2503080368042
    10. '```' → logprob: -15.5003080368042

Token 684: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016365008195862174
    2. ' ,' → logprob: -6.751636505126953
    3. ',p' → logprob: -8.376636505126953
    4. ',
' → logprob: -9.001636505126953
    5. ',s' → logprob: -9.876636505126953
    6. ')' → logprob: -11.001636505126953
    7. ':' → logprob: -11.751636505126953
    8. ',r' → logprob: -11.876636505126953
    9. 's' → logprob: -12.126636505126953
    10. '   ' → logprob: -12.126636505126953

Token 685: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005538671393878758
    2. ' int' → logprob: -7.500554084777832
    3. ')' → logprob: -14.250554084777832
    4. ':int' → logprob: -16.125553131103516
    5. '=int' → logprob: -16.625553131103516
    6. '(int' → logprob: -17.250553131103516
    7. '[int' → logprob: -17.625553131103516
    8. ''int' → logprob: -17.875553131103516
    9. ',int' → logprob: -18.125553131103516
    10. ',' → logprob: -18.375553131103516

Token 686: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8692346811294556
    2. '):' → logprob: -0.9942346811294556
    3. ')' → logprob: -1.6192346811294556
    4. '),' → logprob: -5.244234561920166
    5. '):
' → logprob: -5.619234561920166
    6. '   ' → logprob: -5.744234561920166
    7. ',
' → logprob: -8.119235038757324
    8. '):

' → logprob: -9.994235038757324
    9. ' ):' → logprob: -10.494235038757324
    10. '=' → logprob: -10.869235038757324

Token 687: ' Score' (ID: 30731)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8639414310455322
    2. 'Points' → logprob: -0.9889414310455322
    3. 'score' → logprob: -2.2389414310455322
    4. ' points' → logprob: -2.8639414310455322
    5. 'Score' → logprob: -3.6139414310455322
    6. ' Points' → logprob: -5.238941192626953
    7. '#' → logprob: -5.363941192626953
    8. ' score' → logprob: -5.613941192626953
    9. '_points' → logprob: -7.863941192626953
    10. ' #' → logprob: -8.238941192626953

Token 688: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3050178587436676
    2. ' for' → logprob: -2.0550179481506348
    3. ' ' → logprob: -3.0550179481506348
    4. ' pour' → logprob: -4.180017948150635
    5. 'for' → logprob: -4.305017948150635
    6. ' )' → logprob: -4.305017948150635
    7. ' if' → logprob: -4.680017948150635
    8. ' *' → logprob: -4.930017948150635
    9. '   ' → logprob: -5.055017948150635
    10. '=' → logprob: -5.055017948150635

Token 689: ' '' (ID: 461)
  Prédit: 'vain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vain' → logprob: -0.6945228576660156
    2. 'b' → logprob: -0.8195228576660156
    3. ' vain' → logprob: -3.0695228576660156
    4. 'contre' → logprob: -5.569522857666016
    5. ' battre' → logprob: -5.569522857666016
    6. '   ' → logprob: -6.194522857666016
    7. 'vic' → logprob: -7.444522857666016
    8. ' ' → logprob: -7.569522857666016
    9. '```' → logprob: -8.069522857666016
    10. 'g' → logprob: -8.319522857666016

Token 690: 'r' (ID: 81)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6901952624320984
    2. 'b' → logprob: -0.9401952624320984
    3. 'vain' → logprob: -2.565195322036743
    4. 'r' → logprob: -4.940195083618164
    5. 'g' → logprob: -5.190195083618164
    6. 'vic' → logprob: -5.440195083618164
    7. 'contre' → logprob: -5.940195083618164
    8. ''' → logprob: -6.065195083618164
    9. 'pier' → logprob: -6.315195083618164
    10. ''p' → logprob: -6.440195083618164

Token 691: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.22965489327907562
    2. ')' → logprob: -2.2296547889709473
    3. '')
' → logprob: -2.9796547889709473
    4. ' contre' → logprob: -4.229654788970947
    5. ')
' → logprob: -4.854654788970947
    6. 'contre' → logprob: -4.979654788970947
    7. ' pour' → logprob: -5.729654788970947
    8. ''' → logprob: -5.729654788970947
    9. '')
' → logprob: -6.354654788970947
    10. '   ' → logprob: -6.479654788970947

Token 692: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44596317410469055
    2. '   ' → logprob: -1.1959631443023682
    3. 's' → logprob: -3.695963144302368
    4. ')' → logprob: -3.695963144302368
    5. ',s' → logprob: -6.195963382720947
    6. ',
' → logprob: -6.320963382720947
    7. ':' → logprob: -6.570963382720947
    8. ' ,' → logprob: -6.820963382720947
    9. ' s' → logprob: -7.445963382720947
    10. 'p' → logprob: -8.445962905883789

Token 693: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.31326824426651
    2. ' s' → logprob: -1.3132681846618652
    3. '   ' → logprob: -12.813268661499023
    4. 'p' → logprob: -12.938268661499023
    5. ' p' → logprob: -14.063268661499023
    6. ' ' → logprob: -15.063268661499023
    7. ' ' → logprob: -16.438268661499023
    8. '_s' → logprob: -17.063268661499023
    9. '	s' → logprob: -17.188268661499023
    10. '  ' → logprob: -17.563268661499023

Token 694: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8780876994132996
    2. ' (' → logprob: -0.8780876994132996
    3. '(int' → logprob: -2.7530877590179443
    4. ')' → logprob: -3.0030877590179443
    5. '<|end|>' → logprob: -3.6280877590179443
    6. ':' → logprob: -4.878087520599365
    7. '   ' → logprob: -5.003087520599365
    8. '=' → logprob: -6.128087520599365
    9. '[int' → logprob: -6.253087520599365
    10. '=int' → logprob: -6.378087520599365

Token 695: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.236549335066229e-05
    2. ' int' → logprob: -10.875021934509277
    3. '=int' → logprob: -13.125021934509277
    4. '(int' → logprob: -14.000021934509277
    5. '[int' → logprob: -15.000021934509277
    6. ':int' → logprob: -15.250021934509277
    7. '   ' → logprob: -16.750022888183594
    8. '<int' → logprob: -18.250022888183594
    9. ',int' → logprob: -18.875022888183594
    10. '           ' → logprob: -18.875022888183594

Token 696: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13115151226520538
    2. '):' → logprob: -2.3811514377593994
    3. '   ' → logprob: -4.0061516761779785
    4. ':' → logprob: -4.8811516761779785
    5. ')' → logprob: -5.7561516761779785
    6. '):
' → logprob: -8.13115119934082
    7. ' ,' → logprob: -8.13115119934082
    8. ',int' → logprob: -8.75615119934082
    9. ':int' → logprob: -8.88115119934082
    10. '=' → logprob: -8.88115119934082

Token 697: ' Score' (ID: 30731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5534982681274414
    2. 's' → logprob: -1.3034982681274414
    3. ' int' → logprob: -2.6784982681274414
    4. ' s' → logprob: -2.6784982681274414
    5. 'Score' → logprob: -4.553498268127441
    6. '(int' → logprob: -6.553498268127441
    7. 'p' → logprob: -7.053498268127441
    8. ' Score' → logprob: -7.053498268127441
    9. 'score' → logprob: -7.428498268127441
    10. ' (' → logprob: -7.553498268127441

Token 698: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27526888251304626
    2. 'for' → logprob: -1.6502689123153687
    3. '=' → logprob: -3.650268793106079
    4. ' pour' → logprob: -5.025269031524658
    5. '   ' → logprob: -5.400269031524658
    6. ')' → logprob: -5.775269031524658
    7. '<|end|>' → logprob: -6.150269031524658
    8. ',' → logprob: -6.525269031524658
    9. ' ' → logprob: -6.775269031524658
    10. 'pour' → logprob: -6.900269031524658

Token 699: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.16612200438976288
    2. 's' → logprob: -2.2911219596862793
    3. '"s' → logprob: -3.5411219596862793
    4. '`s' → logprob: -3.7911219596862793
    5. ' s' → logprob: -8.041122436523438
    6. '"' → logprob: -12.416122436523438
    7. '   ' → logprob: -12.666122436523438
    8. ' ' → logprob: -12.791122436523438
    9. ''' → logprob: -13.041122436523438
    10. '<s' → logprob: -13.166122436523438

Token 700: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005633997498080134
    2. 'p' → logprob: -7.500563621520996
    3. ' s' → logprob: -11.625563621520996
    4. ''s' → logprob: -14.375563621520996
    5. 'c' → logprob: -14.875563621520996
    6. 'r' → logprob: -15.875563621520996
    7. 'sc' → logprob: -16.25056266784668
    8. 'u' → logprob: -16.62556266784668
    9. '`s' → logprob: -17.00056266784668
    10. 't' → logprob: -17.12556266784668

Token 701: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8772507905960083
    2. '   ' → logprob: -1.1272507905960083
    3. ',' → logprob: -2.0022506713867188
    4. ')
' → logprob: -2.2522506713867188
    5. '):
' → logprob: -4.252250671386719
    6. '):' → logprob: -6.252250671386719
    7. '       ' → logprob: -7.002250671386719
    8. ''' → logprob: -8.127250671386719
    9. ':' → logprob: -8.377250671386719
    10. '```' → logprob: -8.502250671386719

Token 702: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018536293879151344
    2. '   ' → logprob: -4.14353609085083
    3. ' ,' → logprob: -6.89353609085083
    4. ',p' → logprob: -7.51853609085083
    5. 'p' → logprob: -8.143536567687988
    6. ',
' → logprob: -8.268536567687988
    7. ' p' → logprob: -8.268536567687988
    8. '       ' → logprob: -9.518536567687988
    9. ')' → logprob: -10.768536567687988
    10. '[' → logprob: -12.018536567687988

Token 703: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.3750057220459
    4. '       ' → logprob: -22.2500057220459
    5. '
' → logprob: -22.8750057220459
    6. '	p' → logprob: -23.0000057220459
    7. '  ' → logprob: -24.2500057220459
    8. '_p' → logprob: -24.5000057220459
    9. ' ' → logprob: -24.7500057220459
    10. '```' → logprob: -25.5000057220459

Token 704: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9492228031158447
    2. '):' → logprob: -1.1992228031158447
    3. '(int' → logprob: -1.8242228031158447
    4. ')' → logprob: -2.8242228031158447
    5. ':' → logprob: -2.9492228031158447
    6. ',' → logprob: -4.199222564697266
    7. '):
' → logprob: -4.949222564697266
    8. ':int' → logprob: -5.449222564697266
    9. '   ' → logprob: -5.699222564697266
    10. '(' → logprob: -5.949222564697266

Token 705: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.375
    3. '[int' → logprob: -17.625
    4. ')' → logprob: -19.0
    5. '(int' → logprob: -19.0
    6. '=int' → logprob: -19.375
    7. '```' → logprob: -20.0
    8. ':int' → logprob: -20.25
    9. '<int' → logprob: -21.5
    10. '   ' → logprob: -22.0

Token 706: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26666584610939026
    2. '):' → logprob: -1.5166658163070679
    3. ':' → logprob: -4.766665935516357
    4. '):
' → logprob: -5.266665935516357
    5. '   ' → logprob: -7.391665935516357
    6. ',' → logprob: -8.8916654586792
    7. ')
' → logprob: -9.8916654586792
    8. ')**' → logprob: -10.8916654586792
    9. '):

' → logprob: -10.8916654586792
    10. '):
' → logprob: -11.2666654586792

Token 707: ' Score' (ID: 30731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9981420336989686e-05
    2. ' int' → logprob: -11.750020027160645
    3. '(int' → logprob: -11.750020027160645
    4. '[int' → logprob: -13.000020027160645
    5. '   ' → logprob: -14.500020027160645
    6. ')' → logprob: -15.000020027160645
    7. 'return' → logprob: -15.125020027160645
    8. ']int' → logprob: -15.625020027160645
    9. 'Int' → logprob: -16.000019073486328
    10. '<int' → logprob: -16.375019073486328

Token 708: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7511706948280334
    2. '<|end|>' → logprob: -1.2511706352233887
    3. '):' → logprob: -1.7511706352233887
    4. '   ' → logprob: -3.3761706352233887
    5. '):
' → logprob: -4.626170635223389
    6. '<|end|>' → logprob: -5.376170635223389
    7. '=' → logprob: -5.751170635223389
    8. ' =' → logprob: -5.876170635223389
    9. ':' → logprob: -5.876170635223389
    10. ',' → logprob: -6.251170635223389

Token 709: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.26314282417297363
    2. 'p' → logprob: -1.6381428241729736
    3. ''' → logprob: -4.1381425857543945
    4. ''p' → logprob: -4.6381425857543945
    5. 'a' → logprob: -5.3881425857543945
    6. ''a' → logprob: -6.0131425857543945
    7. ')' → logprob: -6.5131425857543945
    8. '"a' → logprob: -7.5131425857543945
    9. '(p' → logprob: -7.8881425857543945
    10. '`' → logprob: -7.8881425857543945

Token 710: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.292907877039397e-06
    2. ''p' → logprob: -12.87500286102295
    3. ' p' → logprob: -15.75000286102295
    4. ''' → logprob: -15.87500286102295
    5. 'int' → logprob: -16.000003814697266
    6. '```' → logprob: -16.250003814697266
    7. '"' → logprob: -16.500003814697266
    8. '`' → logprob: -16.750003814697266
    9. 'r' → logprob: -17.000003814697266
    10. ''''' → logprob: -18.125003814697266

Token 711: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30503809452056885
    2. '):' → logprob: -1.4300380945205688
    3. '):
' → logprob: -3.8050379753112793
    4. '   ' → logprob: -6.805037975311279
    5. ')
' → logprob: -8.805038452148438
    6. '):
' → logprob: -10.430038452148438
    7. '
' → logprob: -10.680038452148438
    8. ' )' → logprob: -11.930038452148438
    9. ' ' → logprob: -12.055038452148438
    10. ' ):' → logprob: -12.555038452148438

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01924472488462925
    2. '):
' → logprob: -4.64424467086792
    3. '
' → logprob: -5.39424467086792
    4. '):' → logprob: -6.39424467086792
    5. '    
' → logprob: -6.89424467086792
    6. ':
' → logprob: -7.26924467086792
    7. ':' → logprob: -7.76924467086792
    8. '```' → logprob: -7.76924467086792
    9. ')' → logprob: -7.89424467086792
    10. '  
' → logprob: -9.269245147705078

Token 713: ' Returns' (ID: 9609)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.25836753845214844
    2. 'ans' → logprob: -2.0083675384521484
    3. '   ' → logprob: -2.3833675384521484
    4. ' score' → logprob: -8.133367538452148
    5. ' ans' → logprob: -8.508367538452148
    6. '    
' → logprob: -8.883367538452148
    7. 'answer' → logprob: -9.008367538452148
    8. 'def' → logprob: -9.133367538452148
    9. '```' → logprob: -9.258367538452148
    10. 'result' → logprob: -9.508367538452148

Token 714: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1388217210769653
    2. '=' → logprob: -1.6388217210769653
    3. '   ' → logprob: -1.8888217210769653
    4. '(a' → logprob: -2.513821601867676
    5. ' =' → logprob: -2.763821601867676
    6. '):' → logprob: -2.888821601867676
    7. ')' → logprob: -3.013821601867676
    8. '(' → logprob: -3.263821601867676
    9. 'a' → logprob: -4.638821601867676
    10. ' :' → logprob: -5.013821601867676

Token 715: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43929946422576904
    2. '   ' → logprob: -1.314299464225769
    3. 'sum' → logprob: -2.9392995834350586
    4. 'ans' → logprob: -4.064299583435059
    5. 'score' → logprob: -4.814299583435059
    6. ' ans' → logprob: -5.189299583435059
    7. ' sum' → logprob: -6.564299583435059
    8. 'total' → logprob: -7.814299583435059
    9. ' score' → logprob: -7.814299583435059
    10. '    ' → logprob: -8.939299583435059

Token 716: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -1.981667537620524e-06
    2. '   ' → logprob: -14.000001907348633
    3. '0' → logprob: -14.625001907348633
    4. ' int' → logprob: -14.625001907348633
    5. '
' → logprob: -15.750001907348633
    6. '[int' → logprob: -17.375001907348633
    7. 'return' → logprob: -17.875001907348633
    8. '(int' → logprob: -18.250001907348633
    9. '```' → logprob: -18.250001907348633
    10. ''int' → logprob: -18.750001907348633

Token 717: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020568810869008303
    2. ':
' → logprob: -7.377057075500488
    3. ' =' → logprob: -7.502057075500488
    4. '):' → logprob: -8.127057075500488
    5. '   ' → logprob: -8.377057075500488
    6. '=' → logprob: -8.502057075500488
    7. ' :' → logprob: -9.377057075500488
    8. ')' → logprob: -10.877057075500488
    9. ',' → logprob: -11.877057075500488
    10. '<|end|>' → logprob: -11.877057075500488

Token 718: ' Score' (ID: 30731)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.05394376814365387
    2. ' score' → logprob: -3.5539438724517822
    3. 'ans' → logprob: -4.178943634033203
    4. 'total' → logprob: -5.678943634033203
    5. 'sum' → logprob: -6.678943634033203
    6. ' total' → logprob: -6.803943634033203
    7. 'result' → logprob: -7.053943634033203
    8. 'initial' → logprob: -7.178943634033203
    9. ' ans' → logprob: -7.303943634033203
    10. '0' → logprob: -8.553943634033203

Token 719: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1900383234024048
    2. '<|end|>' → logprob: -1.4400383234024048
    3. ' =' → logprob: -1.5650383234024048
    4. ' ' → logprob: -1.9400383234024048
    5. ')' → logprob: -3.0650382041931152
    6. '_' → logprob: -3.6900382041931152
    7. '+' → logprob: -4.815038204193115
    8. ' +=' → logprob: -4.815038204193115
    9. '<|end|>' → logprob: -5.440038204193115
    10. '0' → logprob: -5.690038204193115

Token 720: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29630228877067566
    2. ' =' → logprob: -1.796302318572998
    3. ')' → logprob: -3.921302318572998
    4. '
' → logprob: -4.046302318572998
    5. '   ' → logprob: -4.546302318572998
    6. '(' → logprob: -4.671302318572998
    7. '+' → logprob: -4.796302318572998
    8. '(
' → logprob: -5.046302318572998
    9. '_' → logprob: -5.546302318572998
    10. '```' → logprob: -6.046302318572998

Token 721: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1814597100019455
    2. ' =' → logprob: -2.681459665298462
    3. '   ' → logprob: -2.806459665298462
    4. ')' → logprob: -4.556459903717041
    5. '
' → logprob: -5.056459903717041
    6. ':
' → logprob: -5.681459903717041
    7. 'ans' → logprob: -5.681459903717041
    8. ':' → logprob: -6.056459903717041
    9. ' ans' → logprob: -6.181459903717041
    10. '```' → logprob: -6.431459903717041

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07418331503868103
    2. 'def' → logprob: -3.949183225631714
    3. '```' → logprob: -4.074183464050293
    4. ')' → logprob: -4.699183464050293
    5. 'score' → logprob: -5.199183464050293
    6. ':' → logprob: -5.699183464050293
    7. '#' → logprob: -5.699183464050293
    8. '
' → logprob: -5.949183464050293
    9. '):
' → logprob: -6.199183464050293
    10. ':
' → logprob: -6.574183464050293

Token 723: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029716704040765762
    2. ':' → logprob: -4.279716491699219
    3. 'score' → logprob: -5.029716491699219
    4. 'def' → logprob: -5.529716491699219
    5. 'a' → logprob: -7.029716491699219
    6. ':
' → logprob: -7.154716491699219
    7. '
' → logprob: -7.154716491699219
    8. '```' → logprob: -7.529716491699219
    9. ')' → logprob: -7.779716491699219
    10. '{' → logprob: -7.904716491699219

Token 724: '   ' (ID: 271)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.009805197827517986
    2. 'ans' → logprob: -5.009805202484131
    3. '   ' → logprob: -6.009805202484131
    4. 'total' → logprob: -7.509805202484131
    5. '```' → logprob: -10.384804725646973
    6. 'result' → logprob: -10.634804725646973
    7. 'answer' → logprob: -10.759804725646973
    8. ' score' → logprob: -12.509804725646973
    9. 'res' → logprob: -14.134804725646973
    10. '    
' → logprob: -14.384804725646973

Token 725: ' ans' (ID: 3345)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.009892434813082218
    2. 'ans' (adapté à ' ans') → logprob: -5.009892463684082
    3. 'total' → logprob: -5.759892463684082
    4. 'res' → logprob: -11.884892463684082
    5. '   ' → logprob: -12.384892463684082
    6. 'result' → logprob: -12.384892463684082
    7. 'answer' → logprob: -12.509892463684082
    8. ' score' → logprob: -14.134892463684082
    9. 'sum' → logprob: -15.509892463684082
    10. 'tot' → logprob: -15.884892463684082

Token 726: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519306540489197
    2. '=' → logprob: -1.5019307136535645
    3. ' +=' → logprob: -13.626930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '+=' → logprob: -16.376930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '_' → logprob: -17.126930236816406
    8. ')' → logprob: -17.876930236816406
    9. '  ' → logprob: -17.876930236816406
    10. '	' → logprob: -18.751930236816406

Token 727: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'sum' → logprob: -14.500001907348633
    4. '   ' → logprob: -19.750001907348633
    5. ' sum' → logprob: -21.250001907348633
    6. 'len' → logprob: -21.875001907348633
    7. '000' → logprob: -21.875001907348633
    8. '
' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.250001907348633
    10. '０' → logprob: -22.375001907348633

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. 'sum' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.375000953674316
    4. 'len' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.125001907348633
    6. '０' → logprob: -21.750001907348633
    7. '000' → logprob: -21.875001907348633
    8. '```' → logprob: -21.875001907348633
    9. '=' → logprob: -22.000001907348633
    10. ' ' → logprob: -22.125001907348633

Token 729: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07585952430963516
    2. '   ' → logprob: -2.825859546661377
    3. ' for' → logprob: -4.950859546661377
    4. '    
' → logprob: -5.825859546661377
    5. 'for' → logprob: -5.825859546661377
    6. '  
' → logprob: -8.450859069824219
    7. '	
' → logprob: -8.700859069824219
    8. ' 
' → logprob: -9.075859069824219
    9. '	for' → logprob: -9.075859069824219
    10. '   
' → logprob: -10.075859069824219

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020261851605027914
    2. 'for' → logprob: -6.252026081085205
    3. ' for' → logprob: -9.252026557922363
    4. '	for' → logprob: -13.377026557922363
    5. '   ' → logprob: -16.752025604248047
    6. '    
' → logprob: -17.877025604248047
    7. '```' → logprob: -18.127025604248047
    8. '
' → logprob: -18.127025604248047
    9. '       ' → logprob: -18.502025604248047
    10. '  ' → logprob: -19.002025604248047

Token 731: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.576873758807778e-05
    2. '   ' → logprob: -9.500075340270996
    3. ' for' → logprob: -14.000075340270996
    4. '	for' → logprob: -19.000076293945312
    5. '```' → logprob: -19.875076293945312
    6. 'n' → logprob: -20.375076293945312
    7. 'i' → logprob: -21.625076293945312
    8. 'length' → logprob: -21.625076293945312
    9. '    
' → logprob: -22.250076293945312
    10. '  ' → logprob: -22.375076293945312

Token 732: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017514435574412346
    2. ' i' → logprob: -4.767514228820801
    3. 'ch' → logprob: -6.017514228820801
    4. 'c' → logprob: -6.142514228820801
    5. 'move' → logprob: -6.267514228820801
    6. 'ai' → logprob: -7.017514228820801
    7. ' move' → logprob: -7.517514228820801
    8. 'x' → logprob: -8.2675142288208
    9. 'ac' → logprob: -8.3925142288208
    10. 'idx' → logprob: -8.6425142288208

Token 733: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030001908540725708
    2. 'in' → logprob: -3.5300018787384033
    3. ',' → logprob: -8.905001640319824
    4. ' ' → logprob: -9.155001640319824
    5. ' ,' → logprob: -12.155001640319824
    6. '	in' → logprob: -13.655001640319824
    7. ' ' → logprob: -14.280001640319824
    8. ' i' → logprob: -14.530001640319824
    9. ',in' → logprob: -15.280001640319824
    10. 'range' → logprob: -15.530001640319824

Token 734: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00019853383128065616
    2. 'a' → logprob: -8.750198364257812
    3. ' range' → logprob: -10.125198364257812
    4. '(range' → logprob: -17.625198364257812
    5. 'enumer' → logprob: -18.500198364257812
    6. ' a' → logprob: -20.000198364257812
    7. '	range' → logprob: -20.000198364257812
    8. '   ' → logprob: -20.375198364257812
    9. '
' → logprob: -21.500198364257812
    10. 'r' → logprob: -21.750198364257812

Token 735: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11184870451688766
    2. ' in' → logprob: -2.8618485927581787
    3. ':
' → logprob: -3.7368485927581787
    4. '   ' → logprob: -5.611848831176758
    5. '[' → logprob: -5.611848831176758
    6. 'in' → logprob: -5.861848831176758
    7. '=' → logprob: -5.861848831176758
    8. ' ==' → logprob: -6.361848831176758
    9. ' =' → logprob: -6.486848831176758
    10. '==' → logprob: -6.611848831176758

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029421692714095116
    2. ' if' → logprob: -4.279421806335449
    3. '   ' → logprob: -4.654421806335449
    4. 'if' → logprob: -5.279421806335449
    5. '    ' → logprob: -8.15442180633545
    6. '	if' → logprob: -9.77942180633545
    7. '[' → logprob: -10.27942180633545
    8. '<|end|>' → logprob: -10.52942180633545
    9. '	' → logprob: -11.02942180633545
    10. '      ' → logprob: -11.15442180633545

Token 737: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001394161517964676
    2. '   ' → logprob: -9.250139236450195
    3. '       ' → logprob: -10.250139236450195
    4. ' if' → logprob: -11.750139236450195
    5. '           ' → logprob: -17.375139236450195
    6. '	if' → logprob: -17.750139236450195
    7. 'ans' → logprob: -18.125139236450195
    8. '    ' → logprob: -18.500139236450195
    9. '     ' → logprob: -19.625139236450195
    10. '  ' → logprob: -19.875139236450195

Token 738: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003177952254191041
    2. ' i' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.378177642822266
    4. ' ' → logprob: -16.753177642822266
    5. '  ' → logprob: -17.628177642822266
    6. '	i' → logprob: -18.128177642822266
    7. 'a' → logprob: -18.753177642822266
    8. '(i' → logprob: -19.003177642822266
    9. '     ' → logprob: -19.253177642822266
    10. '    ' → logprob: -19.378177642822266

Token 739: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17990455031394958
    2. '==' → logprob: -1.804904580116272
    3. '=' → logprob: -9.17990493774414
    4. '=='' → logprob: -11.17990493774414
    5. ' =='' → logprob: -11.17990493774414
    6. '[' → logprob: -11.55490493774414
    7. '=="' → logprob: -11.80490493774414
    8. ' =' → logprob: -12.55490493774414
    9. ' =="' → logprob: -12.92990493774414
    10. ' ' → logprob: -13.05490493774414

Token 740: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10797122865915298
    2. ''r' → logprob: -2.73297119140625
    3. ''p' → logprob: -3.48297119140625
    4. 'r' → logprob: -5.23297119140625
    5. 'p' → logprob: -6.85797119140625
    6. ''' → logprob: -8.85797119140625
    7. ' '' → logprob: -11.10797119140625
    8. '`' → logprob: -11.35797119140625
    9. ''s' → logprob: -11.48297119140625
    10. ' "' → logprob: -11.85797119140625

Token 741: 'r' (ID: 81)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17520581185817719
    2. 'r' → logprob: -1.9252058267593384
    3. ''p' → logprob: -4.425205707550049
    4. ''' → logprob: -6.300205707550049
    5. ''r' → logprob: -7.050205707550049
    6. '"' → logprob: -8.925206184387207
    7. 's' → logprob: -9.925206184387207
    8. ''s' → logprob: -11.550206184387207
    9. '_r' → logprob: -13.675206184387207
    10. ''re' → logprob: -14.925206184387207

Token 742: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9336106181144714
    2. ':' → logprob: -1.1836106777191162
    3. '":
' → logprob: -1.5586106777191162
    4. '":' → logprob: -2.808610677719116
    5. '"' → logprob: -3.683610677719116
    6. '):
' → logprob: -6.183610439300537
    7. ' "' → logprob: -7.058610439300537
    8. '   ' → logprob: -7.433610439300537
    9. '":
' → logprob: -7.683610439300537
    10. '"):
' → logprob: -8.308610916137695

Token 743: '           ' (ID: 352)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12976114451885223
    2. ' ans' → logprob: -2.254761219024658
    3. '           ' → logprob: -4.879761219024658
    4. '	ans' → logprob: -5.254761219024658
    5. '       ' → logprob: -6.254761219024658
    6. '(ans' → logprob: -7.504761219024658
    7. '               ' → logprob: -7.504761219024658
    8. '+' → logprob: -7.879761219024658
    9. '=' → logprob: -8.8797607421875
    10. '+=' → logprob: -9.1297607421875

Token 744: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.004166014492511749
    2. ' ans' → logprob: -5.504166126251221
    3. '           ' → logprob: -10.004165649414062
    4. '	ans' → logprob: -10.379165649414062
    5. '+=' → logprob: -11.879165649414062
    6. 'answer' → logprob: -13.629165649414062
    7. '(ans' → logprob: -13.754165649414062
    8. '_ans' → logprob: -13.879165649414062
    9. '       ' → logprob: -14.879165649414062
    10. '
' → logprob: -15.379165649414062

Token 745: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048598386347293854
    2. ' +=' → logprob: -3.048598289489746
    3. '+' → logprob: -11.548598289489746
    4. ']+=' → logprob: -13.798598289489746
    5. '+="' → logprob: -16.298599243164062
    6. '+=(' → logprob: -16.423599243164062
    7. '=' → logprob: -16.548599243164062
    8. '+='' → logprob: -16.798599243164062
    9. '	' → logprob: -18.048599243164062
    10. '   ' → logprob: -18.548599243164062

Token 746: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07889363914728165
    2. 's' → logprob: -2.5788936614990234
    3. ' r' → logprob: -12.953893661499023
    4. ' s' → logprob: -13.453893661499023
    5. 'p' → logprob: -16.703893661499023
    6. 'rs' → logprob: -17.453893661499023
    7. '	r' → logprob: -17.703893661499023
    8. '_r' → logprob: -18.703893661499023
    9. '	s' → logprob: -19.453893661499023
    10. '   ' → logprob: -19.453893661499023

Token 747: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048669010400772095
    2. '<|end|>' → logprob: -3.1736690998077393
    3. 'elif' → logprob: -5.29866886138916
    4. ' elif' → logprob: -7.79866886138916
    5. '<|end|>' → logprob: -9.54866886138916
    6. '
' → logprob: -10.54866886138916
    7. '	elif' → logprob: -10.67366886138916
    8. '      ' → logprob: -10.92366886138916
    9. '   ' → logprob: -11.17366886138916
    10. ')' → logprob: -11.17366886138916

Token 749: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.19179990887641907
    2. '       ' → logprob: -1.8167998790740967
    3. ' elif' → logprob: -4.441800117492676
    4. '	elif' → logprob: -9.191800117492676
    5. '<|end|>' → logprob: -9.316800117492676
    6. '   ' → logprob: -12.566800117492676
    7. '.' → logprob: -13.191800117492676
    8. ',' → logprob: -13.316800117492676
    9. '<|end|>' → logprob: -13.566800117492676
    10. ')' → logprob: -13.941800117492676

Token 750: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021260380744934
    2. ' i' → logprob: -2.350212574005127
    3. '   ' → logprob: -13.225213050842285
    4. 's' → logprob: -13.225213050842285
    5. '	i' → logprob: -13.725213050842285
    6. ' ' → logprob: -14.600213050842285
    7. '(i' → logprob: -15.600213050842285
    8. ' s' → logprob: -15.975213050842285
    9. '  ' → logprob: -16.10021209716797
    10. '    ' → logprob: -16.10021209716797

Token 751: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859213903546333
    2. '==' → logprob: -3.0485920906066895
    3. '=' → logprob: -13.048592567443848
    4. ' =' → logprob: -13.798592567443848
    5. '=="' → logprob: -14.798592567443848
    6. ' ' → logprob: -14.923592567443848
    7. ' =="' → logprob: -15.548592567443848
    8. '[' → logprob: -16.42359161376953
    9. '=='' → logprob: -16.54859161376953
    10. ' ' → logprob: -16.79859161376953

Token 752: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023466166108846664
    2. ' s' → logprob: -3.773466110229492
    3. '"s' → logprob: -8.523466110229492
    4. ''s' → logprob: -11.648466110229492
    5. 'p' → logprob: -12.023466110229492
    6. '"' → logprob: -12.648466110229492
    7. ' "' → logprob: -13.648466110229492
    8. '`s' → logprob: -14.023466110229492
    9. ' p' → logprob: -14.148466110229492
    10. '   ' → logprob: -14.273466110229492

Token 753: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.1008713702030946e-06
    2. 'p' → logprob: -13.250001907348633
    3. ' s' → logprob: -15.625001907348633
    4. '"s' → logprob: -18.125001907348633
    5. '"' → logprob: -19.875001907348633
    6. ''s' → logprob: -20.125001907348633
    7. '_s' → logprob: -20.125001907348633
    8. '`s' → logprob: -20.250001907348633
    9. '	s' → logprob: -20.500001907348633
    10. 'sc' → logprob: -21.750001907348633

Token 754: '":
' (ID: 9213)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15247628092765808
    2. ':' → logprob: -2.2774763107299805
    3. ' +=' → logprob: -3.7774763107299805
    4. ':
' → logprob: -4.9024763107299805
    5. ' +' → logprob: -5.9024763107299805
    6. '<|end|>' → logprob: -6.0274763107299805
    7. ' s' → logprob: -7.4024763107299805
    8. '       ' → logprob: -7.6524763107299805
    9. '          ' → logprob: -7.6524763107299805
    10. '+=' → logprob: -8.02747631072998

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005817461642436683
    2. ' s' → logprob: -7.750581741333008
    3. ' ' → logprob: -10.500581741333008
    4. '       ' → logprob: -10.750581741333008
    5. '<|end|>' → logprob: -10.875581741333008
    6. '          ' → logprob: -11.250581741333008
    7. '		' → logprob: -11.375581741333008
    8. 's' → logprob: -11.500581741333008
    9. ' ans' → logprob: -11.625581741333008
    10. ' +=' → logprob: -11.750581741333008

Token 756: ' ans' (ID: 3345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16158641874790192
    2. 'ans' (adapté à ' ans') → logprob: -1.9115864038467407
    3. ' ans' → logprob: -6.661586284637451
    4. ' s' → logprob: -9.53658676147461
    5. '           ' → logprob: -12.28658676147461
    6. '+' → logprob: -13.16158676147461
    7. '	ans' → logprob: -13.16158676147461
    8. '       ' → logprob: -14.66158676147461
    9. '+=' → logprob: -15.16158676147461
    10. '(ans' → logprob: -15.28658676147461

Token 757: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030452387407422066
    2. '+=' → logprob: -3.5304524898529053
    3. ' +' → logprob: -7.405452251434326
    4. '+' → logprob: -9.280452728271484
    5. ' ' → logprob: -15.280452728271484
    6. ']+=' → logprob: -16.280452728271484
    7. ' ' → logprob: -16.780452728271484
    8. '=' → logprob: -17.155452728271484
    9. 's' → logprob: -18.030452728271484
    10. ' =' → logprob: -18.155452728271484

Token 758: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1472419600977446e-06
    2. ' s' → logprob: -13.750000953674316
    3. 'p' → logprob: -18.375001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '	s' → logprob: -21.375001907348633
    6. '`s' → logprob: -23.375001907348633
    7. 't' → logprob: -24.250001907348633
    8. '    ' → logprob: -24.250001907348633
    9. '(s' → logprob: -24.750001907348633
    10. '_s' → logprob: -24.875001907348633

Token 759: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019586095586419106
    2. '<|end|>' → logprob: -6.251958847045898
    3. '<|end|>' → logprob: -11.376958847045898
    4. '.' → logprob: -12.251958847045898
    5. 'else' → logprob: -12.751958847045898
    6. 'elif' → logprob: -13.126958847045898
    7. ' else' → logprob: -13.751958847045898
    8. '	' → logprob: -13.751958847045898
    9. ',' → logprob: -14.126958847045898
    10. '      ' → logprob: -14.126958847045898

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002927187830209732
    2. 'else' → logprob: -6.002927303314209
    3. ' else' → logprob: -7.752927303314209
    4. 'elif' → logprob: -11.75292682647705
    5. '<|end|>' → logprob: -12.37792682647705
    6. '	' → logprob: -12.62792682647705
    7. '        
' → logprob: -14.00292682647705
    8. ' ' → logprob: -14.12792682647705
    9. ' elif' → logprob: -14.12792682647705
    10. '	else' → logprob: -14.62792682647705

Token 761: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7054916024208069
    2. 'else' (adapté à ' else') → logprob: -0.7054916024208069
    3. ' else' → logprob: -4.455491542816162
    4. 'elif' → logprob: -7.455491542816162
    5. '	' → logprob: -10.33049201965332
    6. ' ' → logprob: -10.83049201965332
    7. ' elif' → logprob: -11.58049201965332
    8. '	else' → logprob: -12.20549201965332
    9. '    ' → logprob: -12.70549201965332
    10. '   ' → logprob: -13.45549201965332

Token 762: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2581700384616852
    2. ':' → logprob: -1.7581700086593628
    3. ' +=' → logprob: -3.1331701278686523
    4. ':
' → logprob: -4.883170127868652
    5. '          ' → logprob: -6.758170127868652
    6. '+=' → logprob: -6.758170127868652
    7. ' +' → logprob: -7.258170127868652
    8. '+' → logprob: -7.383170127868652
    9. '            ' → logprob: -10.008170127868652
    10. ' p' → logprob: -10.133170127868652

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11622761189937592
    2. ' ans' → logprob: -2.741227626800537
    3. ' p' → logprob: -3.366227626800537
    4. 'p' → logprob: -5.116227626800537
    5. 'ans' → logprob: -5.616227626800537
    6. ' ' → logprob: -7.366227626800537
    7. '(ans' → logprob: -9.116227149963379
    8. '          ' → logprob: -9.366227149963379
    9. ' ' → logprob: -9.991227149963379
    10. '   ' → logprob: -10.241227149963379

Token 764: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.0445127372804563e-05
    2. ' ans' → logprob: -12.00001049041748
    3. '           ' → logprob: -13.12501049041748
    4. 'p' → logprob: -13.50001049041748
    5. '   ' → logprob: -14.75001049041748
    6. '	ans' → logprob: -15.25001049041748
    7. '       ' → logprob: -15.87501049041748
    8. '(ans' → logprob: -17.875009536743164
    9. '  ' → logprob: -20.250009536743164
    10. ' ' → logprob: -20.750009536743164

Token 765: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007113590254448354
    2. ' +=' → logprob: -7.250711441040039
    3. '+' → logprob: -13.625711441040039
    4. ']+=' → logprob: -15.500711441040039
    5. '=' → logprob: -18.25071144104004
    6. '   ' → logprob: -18.75071144104004
    7. '+=(' → logprob: -18.75071144104004
    8. '           ' → logprob: -18.75071144104004
    9. '+="' → logprob: -18.87571144104004
    10. '+='' → logprob: -19.62571144104004

Token 766: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.676292231422849e-05
    2. ' p' → logprob: -11.000017166137695
    3. '	p' → logprob: -23.000017166137695
    4. '   ' → logprob: -23.250017166137695
    5. '           ' → logprob: -23.625017166137695
    6. '+p' → logprob: -24.875017166137695
    7. '<p' → logprob: -25.875017166137695
    8. '_p' → logprob: -26.000017166137695
    9. '  ' → logprob: -26.125017166137695
    10. '+' → logprob: -26.250017166137695

Token 767: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13912391662597656
    2. 'return' → logprob: -2.7641239166259766
    3. ' return' → logprob: -3.1391239166259766
    4. '
' → logprob: -3.7641239166259766
    5. '    
' → logprob: -9.014123916625977
    6. ' 
' → logprob: -9.264123916625977
    7. '	return' → logprob: -10.014123916625977
    8. '  
' → logprob: -10.889123916625977
    9. '  ' → logprob: -11.389123916625977
    10. '
' → logprob: -11.389123916625977

Token 768: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25230515003204346
    2. 'return' → logprob: -2.127305030822754
    3. '
' → logprob: -2.502305030822754
    4. ' return' → logprob: -4.002305030822754
    5. '	return' → logprob: -6.252305030822754
    6. '    
' → logprob: -6.627305030822754
    7. '  
' → logprob: -8.752305030822754
    8. ' 
' → logprob: -9.377305030822754
    9. '\n' → logprob: -10.627305030822754
    10. ':return' → logprob: -10.752305030822754

Token 769: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2058515101671219
    2. 'return' (adapté à ' return') → logprob: -1.7058515548706055
    3. ' return' → logprob: -5.4558515548706055
    4. '	return' → logprob: -9.330851554870605
    5. '
' → logprob: -9.705851554870605
    6. '    
' → logprob: -12.080851554870605
    7. '       ' → logprob: -14.580851554870605
    8. ' ' → logprob: -14.955851554870605
    9. ':return' → logprob: -15.080851554870605
    10. 'eturn' → logprob: -15.955851554870605

Token 770: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.836499985889532e-05
    2. ' ans' → logprob: -9.7500581741333
    3. '(ans' → logprob: -17.625059127807617
    4. '	ans' → logprob: -18.750059127807617
    5. '_ans' → logprob: -21.500059127807617
    6. 'answer' → logprob: -22.875059127807617
    7. 'anst' → logprob: -23.500059127807617
    8. 'a' → logprob: -23.500059127807617
    9. 'ann' → logprob: -23.875059127807617
    10. 'Ans' → logprob: -24.250059127807617

Token 771: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25580915808677673
    2. 'def' → logprob: -1.5058091878890991
    3. '<|end|>' → logprob: -6.005809307098389
    4. '

' → logprob: -6.755809307098389
    5. '
' → logprob: -9.38080883026123
    6. '```' → logprob: -10.13080883026123
    7. '<|end|>' → logprob: -10.25580883026123
    8. ' def' → logprob: -10.63080883026123
    9. '  
' → logprob: -10.63080883026123
    10. '    
' → logprob: -11.63080883026123

Token 772: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.375000953674316
    3. '
' → logprob: -14.750000953674316
    4. 'from' → logprob: -16.625001907348633
    5. 'import' → logprob: -17.000001907348633
    6. 'de' → logprob: -17.500001907348633
    7. 'ndef' → logprob: -18.000001907348633
    8. ':def' → logprob: -18.375001907348633
    9. ' def' → logprob: -18.500001907348633
    10. 'k' → logprob: -18.875001907348633

Token 773: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.023249439895153046
    2. ' adjust' → logprob: -3.773249387741089
    3. 'def' → logprob: -12.773249626159668
    4. 'modify' → logprob: -15.148249626159668
    5. 'main' → logprob: -15.773249626159668
    6. 'adj' → logprob: -16.14824867248535
    7. 'reduce' → logprob: -16.27324867248535
    8. 'solve' → logprob: -16.52324867248535
    9. ' ajust' → logprob: -16.64824867248535
    10. 'avoid' → logprob: -16.89824867248535

Token 774: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -2.2007883671903983e-05
    2. '_' → logprob: -10.750021934509277
    3. '```' → logprob: -16.250022888183594
    4. 'for' → logprob: -16.500022888183594
    5. ')_' → logprob: -16.625022888183594
    6. '_to' → logprob: -17.125022888183594
    7. '_FOR' → logprob: -17.250022888183594
    8. '##_' → logprob: -17.500022888183594
    9. '(_' → logprob: -17.625022888183594
    10. '(' → logprob: -17.625022888183594

Token 775: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -0.011051355861127377
    2. 'constraints' → logprob: -4.511051177978516
    3. '_conf' → logprob: -13.636051177978516
    4. '_duplicates' → logprob: -14.011051177978516
    5. '_con' → logprob: -14.886051177978516
    6. '_constraint' → logprob: -15.011051177978516
    7. ' constraints' → logprob: -15.886051177978516
    8. '_' → logprob: -16.011051177978516
    9. '_same' → logprob: -16.136051177978516
    10. 'a' → logprob: -16.511051177978516

Token 776: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -18.250017166137695
    4. '(
' → logprob: -19.750017166137695
    5. '(ai' → logprob: -20.625017166137695
    6. '(_' → logprob: -21.250017166137695
    7. '(A' → logprob: -21.375017166137695
    8. '((' → logprob: -22.125017166137695
    9. '(

' → logprob: -22.625017166137695
    10. '(arr' → logprob: -22.875017166137695

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ',n' → logprob: -13.25000286102295
    3. ' ,' → logprob: -13.87500286102295
    4. ',a' → logprob: -16.500003814697266
    5. ',
' → logprob: -17.250003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '‌,' → logprob: -18.000003814697266
    8. '_,' → logprob: -18.500003814697266
    9. '):' → logprob: -19.125003814697266
    10. ',i' → logprob: -19.250003814697266

Token 778: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38691654801368713
    2. ' n' → logprob: -1.1369165182113647
    3. ')' → logprob: -10.761916160583496
    4. 'len' → logprob: -12.011916160583496
    5. ')n' → logprob: -12.261916160583496
    6. 'a' → logprob: -13.011916160583496
    7. ' len' → logprob: -13.261916160583496
    8. '(n' → logprob: -13.761916160583496
    9. '_n' → logprob: -13.761916160583496
    10. '	n' → logprob: -14.136916160583496

Token 779: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.641841820150148e-05
    2. ',k' → logprob: -10.75002670288086
    3. ',n' → logprob: -12.87502670288086
    4. ' ,' → logprob: -13.62502670288086
    5. ',a' → logprob: -14.87502670288086
    6. ',s' → logprob: -15.37502670288086
    7. ',
' → logprob: -15.62502670288086
    8. ',p' → logprob: -16.50002670288086
    9. '   ' → logprob: -16.50002670288086
    10. ',int' → logprob: -16.75002670288086

Token 780: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015023599844425917
    2. ' k' → logprob: -6.501502513885498
    3. '	k' → logprob: -17.876502990722656
    4. ' ' → logprob: -19.751502990722656
    5. '```' → logprob: -19.751502990722656
    6. ',k' → logprob: -20.126502990722656
    7. ')' → logprob: -20.251502990722656
    8. '   ' → logprob: -21.626502990722656
    9. '[k' → logprob: -21.876502990722656
    10. '<|end|>' → logprob: -22.001502990722656

Token 781: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -14.000001907348633
    3. ',a' → logprob: -15.000001907348633
    4. '):' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ',p' → logprob: -17.250001907348633
    7. ',
' → logprob: -17.375001907348633
    8. '‌,' → logprob: -18.375001907348633
    9. ')' → logprob: -19.000001907348633
    10. ',s' → logprob: -19.625001907348633

Token 782: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0036056553944945335
    2. ' r' → logprob: -5.628605842590332
    3. 'ans' → logprob: -12.503605842590332
    4. 'a' → logprob: -13.878605842590332
    5. ' ans' → logprob: -15.128605842590332
    6. '   ' → logprob: -15.503605842590332
    7. 'p' → logprob: -16.128604888916016
    8. 'rs' → logprob: -16.503604888916016
    9. '	r' → logprob: -16.503604888916016
    10. 's' → logprob: -16.628604888916016

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1054253011243418e-05
    2. ' ,' → logprob: -11.250020980834961
    3. ',s' → logprob: -12.250020980834961
    4. ',
' → logprob: -13.625020980834961
    5. ',p' → logprob: -14.000020980834961
    6. ')' → logprob: -14.875020980834961
    7. '   ' → logprob: -15.625020980834961
    8. 's' → logprob: -16.62502098083496
    9. '‌,' → logprob: -16.62502098083496
    10. ',k' → logprob: -16.87502098083496

Token 784: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004082197323441505
    2. ' s' → logprob: -5.504082202911377
    3. 'p' → logprob: -12.504081726074219
    4. ' p' → logprob: -16.75408172607422
    5. ',' → logprob: -19.87908172607422
    6. '   ' → logprob: -20.00408172607422
    7. ' ' → logprob: -20.25408172607422
    8. '_s' → logprob: -20.37908172607422
    9. ',s' → logprob: -21.00408172607422
    10. 'def' → logprob: -21.12908172607422

Token 785: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.41866585687967e-06
    2. ',p' → logprob: -12.250008583068848
    3. ' ,' → logprob: -12.750008583068848
    4. ',
' → logprob: -14.500008583068848
    5. 'p' → logprob: -16.62500762939453
    6. ',

' → logprob: -18.50000762939453
    7. '_,' → logprob: -19.75000762939453
    8. '‌,' → logprob: -19.75000762939453
    9. ',
' → logprob: -20.00000762939453
    10. ',\
' → logprob: -20.37500762939453

Token 786: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006266565760597587
    2. ' p' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.125627517700195
    4. ',' → logprob: -17.875627517700195
    5. ' ' → logprob: -18.000627517700195
    6. '
' → logprob: -18.250627517700195
    7. '    ' → logprob: -19.375627517700195
    8. '_p' → logprob: -19.500627517700195
    9. '	p' → logprob: -19.500627517700195
    10. '  ' → logprob: -19.750627517700195

Token 787: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017206385964527726
    2. ',' → logprob: -6.626720428466797
    3. '):
' → logprob: -7.876720428466797
    4. ')' → logprob: -11.876720428466797
    5. '):
' → logprob: -12.626720428466797
    6. ' ):' → logprob: -13.501720428466797
    7. ':' → logprob: -13.501720428466797
    8. '   ' → logprob: -13.501720428466797
    9. ',a' → logprob: -15.876720428466797
    10. '):

' → logprob: -16.001720428466797

Token 788: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01347441878169775
    2. 'a' → logprob: -4.638474464416504
    3. ' ans' → logprob: -5.888474464416504
    4. ')' → logprob: -7.013474464416504
    5. 't' → logprob: -11.138474464416504
    6. ' a' → logprob: -11.763474464416504
    7. ' )' → logprob: -12.263474464416504
    8. '	ans' → logprob: -12.763474464416504
    9. '_ans' → logprob: -13.263474464416504
    10. '):' → logprob: -13.513474464416504

Token 789: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002529290970414877
    2. '):
' → logprob: -6.002529144287109
    3. ':' → logprob: -10.37752914428711
    4. '   ' → logprob: -11.62752914428711
    5. ')' → logprob: -12.00252914428711
    6. '):
' → logprob: -12.37752914428711
    7. ',' → logprob: -13.62752914428711
    8. '[]):' → logprob: -14.12752914428711
    9. '):

' → logprob: -15.12752914428711
    10. ' ):' → logprob: -15.37752914428711

Token 790: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00887986458837986
    2. '(a' → logprob: -5.008879661560059
    3. '():' → logprob: -7.008879661560059
    4. ':
' → logprob: -7.633879661560059
    5. ' :' → logprob: -8.633879661560059
    6. 'a' → logprob: -9.258879661560059
    7. '(' → logprob: -9.383879661560059
    8. '):' → logprob: -9.508879661560059
    9. '[:]' → logprob: -9.883879661560059
    10. '(":' → logprob: -10.508879661560059

Token 791: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17754147946834564
    2. '   ' → logprob: -2.177541494369507
    3. 'a' → logprob: -3.927541494369507
    4. ':
' → logprob: -4.177541255950928
    5. 'def' → logprob: -5.802541255950928
    6. '```' → logprob: -6.427541255950928
    7. ' a' → logprob: -6.802541255950928
    8. '_' → logprob: -6.927541255950928
    9. '_a' → logprob: -7.052541255950928
    10. '):
' → logprob: -7.177541255950928

Token 792: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19502544403076172
    2. '_' → logprob: -2.5700254440307617
    3. '=' → logprob: -3.5700254440307617
    4. '   ' → logprob: -3.8200254440307617
    5. 'a' → logprob: -4.445025444030762
    6. ' _' → logprob: -4.445025444030762
    7. ' a' → logprob: -4.820025444030762
    8. ' 
' → logprob: -5.445025444030762
    9. '    ' → logprob: -5.945025444030762
    10. ' ' → logprob: -6.445025444030762

Token 793: ' Ajust' (ID: 197708)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8129599094390869
    2. 'a' → logprob: -1.687959909439087
    3. ' a' → logprob: -2.312959909439087
    4. '   ' → logprob: -2.437959909439087
    5. ' 
' → logprob: -2.937959909439087
    6. '  
' → logprob: -3.437959909439087
    7. ' ans' → logprob: -4.062959671020508
    8. ' ' → logprob: -4.187959671020508
    9. 'def' → logprob: -4.562959671020508
    10. '_' → logprob: -4.562959671020508

Token 794: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0015742563409730792
    2. 'er' → logprob: -6.5015740394592285
    3. '_for' → logprob: -9.751574516296387
    4. '_e' → logprob: -12.126574516296387
    5. '_' → logprob: -13.001574516296387
    6. '#' → logprob: -13.501574516296387
    7. 'def' → logprob: -13.751574516296387
    8. '   ' → logprob: -13.876574516296387
    9. 'for' → logprob: -14.376574516296387
    10. ' for' → logprob: -15.126574516296387

Token 795: ' le' (ID: 505)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.03236084058880806
    2. '_' → logprob: -4.157361030578613
    3. '(a' → logprob: -4.282361030578613
    4. 'for' → logprob: -6.657361030578613
    5. '(' → logprob: -7.657361030578613
    6. 'def' → logprob: -9.032361030578613
    7. 'a' → logprob: -9.532361030578613
    8. 'For' → logprob: -9.532361030578613
    9. ' for' → logprob: -9.532361030578613
    10. '(
' → logprob: -10.032361030578613

Token 796: ' score' (ID: 8429)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6571050882339478
    2. 'a' → logprob: -0.7821050882339478
    3. 'for' → logprob: -4.532104969024658
    4. '_ans' → logprob: -5.032104969024658
    5. '_' → logprob: -6.282104969024658
    6. ' ans' → logprob: -6.907104969024658
    7. 'score' → logprob: -6.907104969024658
    8. '_a' → logprob: -7.032104969024658
    9. 'used' → logprob: -8.157105445861816
    10. ' a' → logprob: -8.157105445861816

Token 797: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.527034342288971
    2. ' pour' → logprob: -2.152034282684326
    3. ' =' → logprob: -2.652034282684326
    4. 'a' → logprob: -3.027034282684326
    5. ' for' → logprob: -3.277034282684326
    6. '_' → logprob: -3.402034282684326
    7. 'for' → logprob: -3.652034282684326
    8. '=' → logprob: -3.902034282684326
    9. 'pour' → logprob: -4.277034282684326
    10. ',' → logprob: -4.527034282684326

Token 798: ' respecter' (ID: 107203)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3485851585865021
    2. ' i' → logprob: -1.2235851287841797
    3. 'a' → logprob: -10.47358512878418
    4. ' éviter' → logprob: -10.97358512878418
    5. '_' → logprob: -11.34858512878418
    6. '_i' → logprob: -11.47358512878418
    7. ' idx' → logprob: -11.59858512878418
    8. 't' → logprob: -12.59858512878418
    9. ' ajust' → logprob: -12.72358512878418
    10. 'index' → logprob: -12.84858512878418

Token 799: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1406502723693848
    2. 'for' → logprob: -1.3906502723693848
    3. ' for' → logprob: -1.5156502723693848
    4. '   ' → logprob: -2.8906502723693848
    5. ' les' → logprob: -2.8906502723693848
    6. ' the' → logprob: -3.0156502723693848
    7. 'the' → logprob: -4.390650272369385
    8. '_for' → logprob: -4.390650272369385
    9. ' le' → logprob: -5.140650272369385
    10. ' l' → logprob: -5.515650272369385

Token 800: ' contr' (ID: 6030)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3908839225769043
    2. 'constraint' → logprob: -1.6408839225769043
    3. 'contr' → logprob: -2.3908839225769043
    4. ' k' → logprob: -2.5158839225769043
    5. 'for' → logprob: -2.6408839225769043
    6. ' contraintes' → logprob: -2.8908839225769043
    7. 'constraints' → logprob: -2.8908839225769043
    8. 'contra' → logprob: -3.0158839225769043
    9. 'a' → logprob: -3.2658839225769043
    10. ' for' → logprob: -3.6408839225769043

Token 801: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.000883833912666887
    2. 'a' → logprob: -7.250884056091309
    3. 'aint' → logprob: -9.875884056091309
    4. '#' → logprob: -10.125884056091309
    5. 'ain' → logprob: -10.875884056091309
    6. 'aine' → logprob: -11.375884056091309
    7. '```' → logprob: -11.625884056091309
    8. 'ai' → logprob: -11.750884056091309
    9. '
' → logprob: -11.750884056091309
    10. '``' → logprob: -12.000884056091309

Token 802: ' qui' (ID: 2780)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.8903183937072754
    2. ' de' → logprob: -1.2653183937072754
    3. ' d' → logprob: -2.1403183937072754
    4. ' des' → logprob: -2.5153183937072754
    5. '   ' → logprob: -3.1403183937072754
    6. ' that' → logprob: -3.5153183937072754
    7. ' ' → logprob: -4.265318393707275
    8. ',' → logprob: -5.265318393707275
    9. 'd' → logprob: -5.515318393707275
    10. ' qu' → logprob: -5.640318393707275

Token 803: ' interdit' (ID: 129427)
  Prédit: ' interdit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interdit' → logprob: -0.03870091214776039
    2. ' emp' → logprob: -3.538700819015503
    3. ' impose' → logprob: -5.038701057434082
    4. 'emp' → logprob: -6.913701057434082
    5. ' empe' → logprob: -7.663701057434082
    6. ' inter' → logprob: -8.288701057434082
    7. ' oblige' → logprob: -8.663701057434082
    8. ' forbid' → logprob: -8.788701057434082
    9. ' forb' → logprob: -9.038701057434082
    10. ' empê' → logprob: -9.913701057434082

Token 804: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1731009483337402
    2. 'de' → logprob: -1.1731009483337402
    3. ' que' → logprob: -1.7981009483337402
    4. ' de' → logprob: -2.5481009483337402
    5. 'que' → logprob: -2.9231009483337402
    6. ' d' → logprob: -3.4231009483337402
    7. 'qu' → logprob: -3.7981009483337402
    8. ' qu' → logprob: -4.04810094833374
    9. '   ' → logprob: -5.42310094833374
    10. 'le' → logprob: -6.54810094833374

Token 805: ' jouer' (ID: 48012)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.5878218412399292
    2. 'util' → logprob: -2.2128219604492188
    3. ' jouer' → logprob: -2.2128219604492188
    4. 'avoir' → logprob: -2.7128219604492188
    5. 'mettre' → logprob: -2.9628219604492188
    6. 'cho' → logprob: -3.3378219604492188
    7. 'ré' → logprob: -3.5878219604492188
    8. 'de' → logprob: -4.587821960449219
    9. '```' → logprob: -5.337821960449219
    10. ' rép' → logprob: -5.587821960449219

Token 806: ' deux' (ID: 10301)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.09692221134901047
    2. ' un' → logprob: -2.5969221591949463
    3. 'le' → logprob: -5.096922397613525
    4. ' la' → logprob: -5.846922397613525
    5. ' deux' → logprob: -5.971922397613525
    6. ' the' → logprob: -6.346922397613525
    7. '   ' → logprob: -7.096922397613525
    8. ' a' → logprob: -7.221922397613525
    9. ' exactement' → logprob: -7.346922397613525
    10. 'un' → logprob: -7.971922397613525

Token 807: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.3169308006763458
    2. 'fois' → logprob: -1.3169307708740234
    3. ' ' → logprob: -6.066930770874023
    4. 'fo' → logprob: -7.566930770874023
    5. ' coups' → logprob: -8.566930770874023
    6. '_' → logprob: -8.816930770874023
    7. '```' → logprob: -9.191930770874023
    8. ' ' → logprob: -9.441930770874023
    9. '   ' → logprob: -9.566930770874023
    10. 'c' → logprob: -10.191930770874023

Token 808: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2593739628791809
    2. 'de' → logprob: -2.259373903274536
    3. ' le' → logprob: -2.634373903274536
    4. 'le' → logprob: -3.134373903274536
    5. ' cons' → logprob: -5.009374141693115
    6. ' la' → logprob: -7.259374141693115
    7. '```' → logprob: -7.759374141693115
    8. 'la' → logprob: -7.884374141693115
    9. ' ' → logprob: -8.634373664855957
    10. 'con' → logprob: -8.884373664855957

Token 809: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.0003554847207851708
    2. ' suite' → logprob: -8.50035572052002
    3. 'la' → logprob: -9.00035572052002
    4. 'm' → logprob: -11.62535572052002
    5. '```' → logprob: -11.75035572052002
    6. 'su' → logprob: -12.25035572052002
    7. 'rang' → logprob: -13.50035572052002
    8. '
' → logprob: -14.12535572052002
    9. '   ' → logprob: -14.25035572052002
    10. 's' → logprob: -14.25035572052002

Token 810: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2972669303417206
    2. 'le' → logprob: -1.422266960144043
    3. ' un' → logprob: -4.422266960144043
    4. 'un' → logprob: -6.172266960144043
    5. ' the' → logprob: -7.547266960144043
    6. ' la' → logprob: -7.922266960144043
    7. 'the' → logprob: -8.297266960144043
    8. 'au' → logprob: -8.422266960144043
    9. ' au' → logprob: -8.797266960144043
    10. ',' → logprob: -9.672266960144043

Token 811: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01610897295176983
    2. ' même' → logprob: -4.141108989715576
    3. '```' → logprob: -10.266108512878418
    4. ' m' → logprob: -11.266108512878418
    5. 'Même' → logprob: -11.266108512878418
    6. 'even' → logprob: -12.641108512878418
    7. 'same' → logprob: -12.766108512878418
    8. 'mé' → logprob: -13.141108512878418
    9. ' ' → logprob: -14.516108512878418
    10. 'mme' → logprob: -14.516108512878418

Token 812: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5808737277984619
    2. ' coup' → logprob: -1.455873727798462
    3. '_c' → logprob: -2.330873727798462
    4. '_g' → logprob: -2.830873727798462
    5. '_token' → logprob: -4.330873489379883
    6. 'g' → logprob: -5.080873489379883
    7. '```' → logprob: -5.455873489379883
    8. '
' → logprob: -5.580873489379883
    9. ' _' → logprob: -5.580873489379883
    10. ' token' → logprob: -5.830873489379883

Token 813: '   ' (ID: 271)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.1540277004241943
    2. '_' → logprob: -1.6540277004241943
    3. ' coup' → logprob: -1.6540277004241943
    4. '_c' → logprob: -2.0290277004241943
    5. '```' → logprob: -3.5290277004241943
    6. ' _' → logprob: -3.6540277004241943
    7. ' token' → logprob: -3.9040277004241943
    8. '_a' → logprob: -4.154027938842773
    9. 'token' → logprob: -4.279027938842773
    10. '_s' → logprob: -4.529027938842773

Token 814: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.33239367604255676
    2. ' coup' → logprob: -1.3323936462402344
    3. '```' → logprob: -4.832393646240234
    4. 'g' → logprob: -5.332393646240234
    5. '_c' → logprob: -5.832393646240234
    6. 'cou' → logprob: -7.082393646240234
    7. '_' → logprob: -7.457393646240234
    8. ' move' → logprob: -8.207393646240234
    9. 'token' → logprob: -8.957393646240234
    10. ' type' → logprob: -8.957393646240234

Token 815: ' gagn' (ID: 58408)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04281670227646828
    2. 'à' → logprob: -3.667816638946533
    3. ',' → logprob: -5.417816638946533
    4. '   ' → logprob: -5.667816638946533
    5. ' ' → logprob: -5.792816638946533
    6. ' aux' → logprob: -7.042816638946533
    7. ' au' → logprob: -7.167816638946533
    8. '_' → logprob: -7.292816638946533
    9. ' a' → logprob: -7.792816638946533
    10. '  ' → logprob: -7.917816638946533

Token 816: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.024773480370640755
    2. 'a' → logprob: -3.774773597717285
    3. 'é' → logprob: -7.649773597717285
    4. '```' → logprob: -8.274773597717285
    5. 'nant' → logprob: -8.649773597717285
    6. 'e' → logprob: -8.774773597717285
    7. '_' → logprob: -8.899773597717285
    8. '   ' → logprob: -9.274773597717285
    9. ' ant' → logprob: -9.899773597717285
    10. 'an' → logprob: -10.649773597717285

Token 817: ' espac' (ID: 195747)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03189723566174507
    2. ' ' → logprob: -4.531897068023682
    3. 'à' → logprob: -4.906897068023682
    4. ' au' → logprob: -5.656897068023682
    5. ',' → logprob: -6.156897068023682
    6. ' dans' → logprob: -6.406897068023682
    7. ' aux' → logprob: -7.031897068023682
    8. ' a' → logprob: -7.156897068023682
    9. 'dans' → logprob: -7.531897068023682
    10. '```' → logprob: -7.656897068023682

Token 818: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.009240657091140747
    2. 'és' → logprob: -5.259240627288818
    3. 'ed' → logprob: -5.634240627288818
    4. 'e' → logprob: -8.134241104125977
    5. '```' → logprob: -9.634241104125977
    6. '   ' → logprob: -11.259241104125977
    7. 'es' → logprob: -11.634241104125977
    8. 'ré' → logprob: -11.759241104125977
    9. 'i' → logprob: -12.259241104125977
    10. 'è' → logprob: -12.509241104125977

Token 819: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14004501700401306
    2. ' par' → logprob: -2.640044927597046
    3. ' d' → logprob: -3.515044927597046
    4. ' k' → logprob: -4.015045166015625
    5. 'de' → logprob: -5.390045166015625
    6. '   ' → logprob: -6.390045166015625
    7. '_' → logprob: -7.265045166015625
    8. 'd' → logprob: -7.515045166015625
    9. ',' → logprob: -7.640045166015625
    10. 'k' → logprob: -7.765045166015625

Token 820: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2811789810657501
    2. ' k' → logprob: -1.4061789512634277
    3. 'exact' → logprob: -12.406179428100586
    4. ' ' → logprob: -12.531179428100586
    5. 'moins' → logprob: -12.781179428100586
    6. '`' → logprob: -12.781179428100586
    7. '```' → logprob: -13.031179428100586
    8. ' exactement' → logprob: -13.281179428100586
    9. ' exactly' → logprob: -13.406179428100586
    10. ' moins' → logprob: -13.531179428100586

Token 821: ' (' (ID: 350)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.2271915078163147
    2. 'tokens' → logprob: -2.97719144821167
    3. ' positions' → logprob: -2.97719144821167
    4. ')' → logprob: -3.47719144821167
    5. ' espaces' → logprob: -3.72719144821167
    6. ' caractères' → logprob: -4.60219144821167
    7. ' token' → logprob: -5.22719144821167
    8. ' places' → logprob: -5.22719144821167
    9. ' )' → logprob: -5.35219144821167
    10. 'positions' → logprob: -5.60219144821167

Token 822: 'si' (ID: 4778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10345405340194702
    2. ' )' → logprob: -2.353454113006592
    3. '')' → logprob: -7.478454113006592
    4. '):
' → logprob: -7.978454113006592
    5. '+' → logprob: -8.353453636169434
    6. ')_' → logprob: -8.353453636169434
    7. '")' → logprob: -8.603453636169434
    8. ')
' → logprob: -8.728453636169434
    9. ' ' → logprob: -9.228453636169434
    10. 'k' → logprob: -9.228453636169434

Token 823: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48919010162353516
    2. ' a' → logprob: -1.1141901016235352
    3. ' i' → logprob: -3.489190101623535
    4. 'i' → logprob: -3.739190101623535
    5. ')' → logprob: -7.239190101623535
    6. ' ans' → logprob: -7.239190101623535
    7. 'k' → logprob: -7.864190101623535
    8. ' k' → logprob: -8.114190101623535
    9. 'n' → logprob: -8.239190101623535
    10. 'ans' → logprob: -8.364190101623535

Token 824: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.4957680404186249
    2. '_' → logprob: -2.6207680702209473
    3. ''' → logprob: -2.7457680702209473
    4. 'a' → logprob: -2.8707680702209473
    5. 'i' → logprob: -2.8707680702209473
    6. '==' → logprob: -3.2457680702209473
    7. 'ont' → logprob: -3.9957680702209473
    8. 'est' → logprob: -4.620768070220947
    9. '#' → logprob: -4.870768070220947
    10. ' ==' → logprob: -5.120768070220947

Token 825: ' le' (ID: 505)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5759220123291016
    2. ')' → logprob: -2.9509220123291016
    3. ''' → logprob: -3.0759220123291016
    4. ' possible' → logprob: -3.0759220123291016
    5. ' not' → logprob: -3.2009220123291016
    6. 'possible' → logprob: -3.2009220123291016
    7. '")' → logprob: -4.200922012329102
    8. ' le' → logprob: -4.325922012329102
    9. 'not' → logprob: -4.450922012329102
    10. 'une' → logprob: -4.450922012329102

Token 826: ' cas' (ID: 2108)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.6389039158821106
    2. 'same' → logprob: -0.8889039158821106
    3. 'k' → logprob: -4.138904094696045
    4. ' same' → logprob: -4.388904094696045
    5. '```' → logprob: -4.888904094696045
    6. 'even' → logprob: -5.013904094696045
    7. 'm' → logprob: -5.263904094696045
    8. '"' → logprob: -6.138904094696045
    9. ''' → logprob: -6.138904094696045
    10. ' even' → logprob: -6.763904094696045

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23732973635196686
    2. '):' → logprob: -1.9873297214508057
    3. '):
' → logprob: -3.8623297214508057
    4. ' ):' → logprob: -3.8623297214508057
    5. ')' → logprob: -4.112329959869385
    6. ' ,' → logprob: -5.487329959869385
    7. ' )' → logprob: -5.612329959869385
    8. ':' → logprob: -5.737329959869385
    9. ' ):
' → logprob: -5.737329959869385
    10. '),' → logprob: -8.112329483032227

Token 828: ' il' (ID: 1793)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.02936057187616825
    2. 'ans' → logprob: -4.029360771179199
    3. ' on' → logprob: -5.404360771179199
    4. ' ' → logprob: -6.154360771179199
    5. '    ' → logprob: -6.279360771179199
    6. '   ' → logprob: -7.279360771179199
    7. '	ans' → logprob: -7.654360771179199
    8. ' for' → logprob: -8.4043607711792
    9. ' if' → logprob: -8.4043607711792
    10. ')' → logprob: -8.7793607711792

Token 829: ' faut' (ID: 17821)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10961515456438065
    2. '=' → logprob: -3.1096150875091553
    3. '-=' → logprob: -3.3596150875091553
    4. ' =' → logprob: -4.359615325927734
    5. ')' → logprob: -5.234615325927734
    6. '-' → logprob: -5.984615325927734
    7. '   ' → logprob: -6.484615325927734
    8. ' ans' → logprob: -7.859615325927734
    9. ' )' → logprob: -8.109615325927734
    10. ' +=' → logprob: -8.484615325927734

Token 830: ' ign' (ID: 8769)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.8720661997795105
    2. 'sou' → logprob: -2.3720662593841553
    3. 'sub' → logprob: -2.4970662593841553
    4. '   ' → logprob: -2.6220662593841553
    5. '```' → logprob: -2.6220662593841553
    6. ' retirer' → logprob: -2.8720662593841553
    7. 'ré' → logprob: -2.9970662593841553
    8. 'ret' → logprob: -3.2470662593841553
    9. 'ded' → logprob: -3.3720662593841553
    10. 'd' → logprob: -4.372066020965576

Token 831: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.0008454833878204226
    2. 'or' → logprob: -7.250845432281494
    3. 'ore' → logprob: -9.625845909118652
    4. 'o' → logprob: -11.375845909118652
    5. 'érer' → logprob: -11.375845909118652
    6. 'orrer' → logprob: -11.500845909118652
    7. 'orera' → logprob: -12.125845909118652
    8. '```' → logprob: -12.750845909118652
    9. 'orero' → logprob: -13.000845909118652
    10. '"' → logprob: -13.125845909118652

Token 832: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.619126796722412
    2. ')' → logprob: -1.869126796722412
    3. ' la' → logprob: -2.119126796722412
    4. '_' → logprob: -2.119126796722412
    5. ' les' → logprob: -2.369126796722412
    6. ' the' → logprob: -2.619126796722412
    7. 'e' → logprob: -3.494126796722412
    8. 'es' → logprob: -3.744126796722412
    9. ' l' → logprob: -3.744126796722412
    10. '_le' → logprob: -3.744126796722412

Token 833: ' deuxième' (ID: 51664)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.3507046699523926
    2. ' score' → logprob: -1.7257046699523926
    3. 'point' → logprob: -2.8507046699523926
    4. ' point' → logprob: -4.350704669952393
    5. 's' → logprob: -4.975704669952393
    6. 'p' → logprob: -5.225704669952393
    7. 'points' → logprob: -5.350704669952393
    8. '```' → logprob: -5.600704669952393
    9. 'k' → logprob: -5.850704669952393
    10. '+' → logprob: -5.850704669952393

Token 834: ' gain' (ID: 11621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9156132340431213
    2. ')' → logprob: -1.1656131744384766
    3. ' )' → logprob: -2.9156131744384766
    4. 'occur' → logprob: -3.1656131744384766
    5. 'occ' → logprob: -3.6656131744384766
    6. 'token' → logprob: -3.7906131744384766
    7. '_occ' → logprob: -3.7906131744384766
    8. ' occurrence' → logprob: -4.290613174438477
    9. ' token' → logprob: -4.290613174438477
    10. ' ' → logprob: -4.415613174438477

Token 835: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030912192538380623
    2. ' )' → logprob: -3.530912160873413
    3. ',' → logprob: -7.905912399291992
    4. ').' → logprob: -8.405912399291992
    5. '   ' → logprob: -9.155912399291992
    6. ')
' → logprob: -10.155912399291992
    7. ' pour' → logprob: -10.405912399291992
    8. '):
' → logprob: -10.530912399291992
    9. '')' → logprob: -10.530912399291992
    10. '),' → logprob: -10.530912399291992

Token 836: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003622404532507062
    2. '
' → logprob: -5.753622531890869
    3. '    
' → logprob: -9.128622055053711
    4. 'def' → logprob: -9.628622055053711
    5. '\n' → logprob: -10.003622055053711
    6. 'a' → logprob: -10.253622055053711
    7. '  
' → logprob: -10.503622055053711
    8. '```' → logprob: -10.628622055053711
    9. ' for' → logprob: -10.753622055053711
    10. '\' → logprob: -10.878622055053711

Token 837: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05810607224702835
    2. ' used' → logprob: -4.308105945587158
    3. 'for' → logprob: -4.433105945587158
    4. ' for' → logprob: -4.683105945587158
    5. 'used' → logprob: -4.808105945587158
    6. 'visited' → logprob: -6.058105945587158
    7. 'seen' → logprob: -6.183105945587158
    8. ' last' → logprob: -6.183105945587158
    9. ' seen' → logprob: -6.558105945587158
    10. 'dp' → logprob: -6.558105945587158

Token 838: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6296525597572327
    2. ',' → logprob: -1.004652500152588
    3. '   ' → logprob: -3.129652500152588
    4. ':' → logprob: -3.379652500152588
    5. '):
' → logprob: -4.004652500152588
    6. ')' → logprob: -6.379652500152588
    7. '<|end|>' → logprob: -6.504652500152588
    8. 'def' → logprob: -7.879652500152588
    9. ',
' → logprob: -8.254652976989746
    10. '       ' → logprob: -8.629652976989746

Token 839: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018979942426085472
    2. 'a' → logprob: -4.143980026245117
    3. ' a' → logprob: -6.393980026245117
    4. '       ' → logprob: -6.893980026245117
    5. 'self' → logprob: -9.518980026245117
    6. 'n' → logprob: -9.768980026245117
    7. 'def' → logprob: -10.143980026245117
    8. ' self' → logprob: -10.768980026245117
    9. '    ' → logprob: -11.018980026245117
    10. '```' → logprob: -11.768980026245117

Token 840: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0003993296413682401
    2. '   ' → logprob: -8.375399589538574
    3. 'str' → logprob: -9.625399589538574
    4. ' a' → logprob: -10.375399589538574
    5. ')' → logprob: -10.875399589538574
    6. 'n' → logprob: -11.250399589538574
    7. 't' → logprob: -11.875399589538574
    8. '#' → logprob: -12.000399589538574
    9. '```' → logprob: -12.125399589538574
    10. 's' → logprob: -13.250399589538574

Token 841: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007207724265754223
    2. ' ,' → logprob: -7.500720977783203
    3. ' (' → logprob: -9.625720977783203
    4. '[' → logprob: -10.375720977783203
    5. ':' → logprob: -10.500720977783203
    6. '<|end|>' → logprob: -11.250720977783203
    7. '   ' → logprob: -12.000720977783203
    8. ')' → logprob: -12.125720977783203
    9. ',
' → logprob: -12.625720977783203
    10. ',n' → logprob: -12.875720977783203

Token 842: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -5.3954463510308415e-05
    2. 'a' → logprob: -10.625054359436035
    3. ')' → logprob: -11.375054359436035
    4. ' str' → logprob: -11.625054359436035
    5. '[str' → logprob: -13.125054359436035
    6. 'int' → logprob: -13.375054359436035
    7. 's' → logprob: -14.250054359436035
    8. 'list' → logprob: -14.250054359436035
    9. 'st' → logprob: -14.375054359436035
    10. ':str' → logprob: -14.625054359436035

Token 843: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37093695998191833
    2. '):' → logprob: -1.2459369897842407
    3. '):
' → logprob: -4.370936870574951
    4. '   ' → logprob: -5.120936870574951
    5. ')' → logprob: -5.870936870574951
    6. ':' → logprob: -8.49593734741211
    7. '[' → logprob: -8.99593734741211
    8. '       ' → logprob: -9.37093734741211
    9. '):
' → logprob: -9.49593734741211
    10. '),' → logprob: -9.99593734741211

Token 844: ' Sé' (ID: 53058)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5678467154502869
    2. ' a' → logprob: -1.6928467750549316
    3. 'a' → logprob: -2.0678467750549316
    4. 'n' → logprob: -2.1928467750549316
    5. '   ' → logprob: -5.317846775054932
    6. ' str' → logprob: -6.192846775054932
    7. ' ' → logprob: -6.817846775054932
    8. ',' → logprob: -7.192846775054932
    9. ')' → logprob: -7.817846775054932
    10. '       ' → logprob: -8.442846298217773

Token 845: 'quence' (ID: 6975)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4760971665382385
    2. 'quence' → logprob: -0.9760971665382385
    3. 'qu' → logprob: -7.476097106933594
    4. 'quences' → logprob: -7.601097106933594
    5. ' q' → logprob: -7.851097106933594
    6. 'eq' → logprob: -8.101097106933594
    7. '   ' → logprob: -9.976097106933594
    8. ' qu' → logprob: -10.476097106933594
    9. '
' → logprob: -10.601097106933594
    10. '#' → logprob: -10.851097106933594

Token 846: ' initial' (ID: 4871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8764219284057617
    2. ' des' → logprob: -1.3764219284057617
    3. '   ' → logprob: -2.1264219284057617
    4. '[' → logprob: -2.1264219284057617
    5. ' de' → logprob: -4.001421928405762
    6. '[a' → logprob: -4.501421928405762
    7. ' )' → logprob: -4.751421928405762
    8. '    ' → logprob: -4.876421928405762
    9. '
' → logprob: -5.001421928405762
    10. ' of' → logprob: -5.126421928405762

Token 847: 'e' (ID: 68)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4026489555835724
    2. '   ' → logprob: -1.77764892578125
    3. ')' → logprob: -3.27764892578125
    4. ' de' → logprob: -4.27764892578125
    5. '_des' → logprob: -4.52764892578125
    6. ' joué' → logprob: -4.52764892578125
    7. 'des' → logprob: -4.65264892578125
    8. ' a' → logprob: -5.02764892578125
    9. ' played' → logprob: -5.02764892578125
    10. 'a' → logprob: -5.02764892578125

Token 848: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7095255851745605
    2. '   ' → logprob: -1.0845255851745605
    3. ')' → logprob: -2.2095255851745605
    4. ',
' → logprob: -3.5845255851745605
    5. '
' → logprob: -4.5845255851745605
    6. '):
' → logprob: -4.9595255851745605
    7. '<|end|>' → logprob: -5.7095255851745605
    8. '[' → logprob: -5.9595255851745605
    9. '[n' → logprob: -6.3345255851745605
    10. 'a' → logprob: -6.3345255851745605

Token 849: ' coups' (ID: 98942)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5784998536109924
    2. 'cou' → logprob: -1.4534997940063477
    3. ' coups' → logprob: -1.9534997940063477
    4. '_' → logprob: -3.0784997940063477
    5. ' _' → logprob: -4.828499794006348
    6. ' ' → logprob: -5.828499794006348
    7. 'a' → logprob: -6.578499794006348
    8. 'c' → logprob: -6.953499794006348
    9. 'moves' → logprob: -7.203499794006348
    10. '_moves' → logprob: -7.328499794006348

Token 850: ' jou' (ID: 10865)
  Prédit: ' jou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jou' → logprob: -0.14964205026626587
    2. 'jou' → logprob: -2.024641990661621
    3. '   ' → logprob: -6.024641990661621
    4. ' joué' → logprob: -6.149641990661621
    5. ',' → logprob: -6.774641990661621
    6. ' played' → logprob: -8.024641990661621
    7. ' à' → logprob: -8.399641990661621
    8. ' Jou' → logprob: -9.024641990661621
    9. '```' → logprob: -9.399641990661621
    10. ')' → logprob: -9.524641990661621

Token 851: 'és' (ID: 1756)
  Prédit: 'oué'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oué' → logprob: -0.999982476234436
    2. 'ou' → logprob: -1.124982476234436
    3. 'jou' → logprob: -1.499982476234436
    4. 'és' → logprob: -2.9999823570251465
    5. ' joué' → logprob: -3.9999823570251465
    6. 'played' → logprob: -5.2499823570251465
    7. 'é' → logprob: -5.7499823570251465
    8. 'ées' → logprob: -5.9999823570251465
    9. '```' → logprob: -6.9999823570251465
    10. ' jou' → logprob: -7.4999823570251465

Token 852: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05110718309879303
    2. '   ' → logprob: -3.551107168197632
    3. ',
' → logprob: -4.051107406616211
    4. ')' → logprob: -5.926107406616211
    5. '
' → logprob: -7.801107406616211
    6. '       ' → logprob: -7.801107406616211
    7. ' ,' → logprob: -9.176107406616211
    8. ')
' → logprob: -10.926107406616211
    9. '<|end|>' → logprob: -10.926107406616211
    10. '),' → logprob: -11.051107406616211

Token 853: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3615866005420685
    2. ',' → logprob: -1.361586570739746
    3. '       ' → logprob: -4.236586570739746
    4. ',
' → logprob: -4.486586570739746
    5. 'n' → logprob: -4.611586570739746
    6. 'b' → logprob: -5.111586570739746
    7. ' n' → logprob: -6.986586570739746
    8. '
' → logprob: -6.986586570739746
    9. ')' → logprob: -7.611586570739746
    10. ' ,' → logprob: -7.736586570739746

Token 854: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1932584047317505
    2. 'k' → logprob: -1.6932584047317505
    3. 'prev' → logprob: -1.9432584047317505
    4. 'a' → logprob: -2.568258285522461
    5. ' k' → logprob: -2.943258285522461
    6. 't' → logprob: -3.193258285522461
    7. ' last' → logprob: -3.693258285522461
    8. 'last' → logprob: -3.943258285522461
    9. 'n' (adapté à ' n') → logprob: -3.943258285522461
    10. ' t' → logprob: -4.193258285522461

Token 855: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016218608943745494
    2. '   ' → logprob: -7.376621723175049
    3. ' ,' → logprob: -7.376621723175049
    4. ',
' → logprob: -9.001622200012207
    5. ',n' → logprob: -9.376622200012207
    6. ')' → logprob: -9.876622200012207
    7. '):' → logprob: -10.626622200012207
    8. ':' → logprob: -10.876622200012207
    9. '<|end|>' → logprob: -10.876622200012207
    10. '=' → logprob: -11.376622200012207

Token 856: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002096197713399306
    2. ' int' → logprob: -8.50020980834961
    3. ':int' → logprob: -13.37520980834961
    4. ')' → logprob: -13.62520980834961
    5. '=int' → logprob: -13.87520980834961
    6. ',' → logprob: -14.00020980834961
    7. 'str' → logprob: -14.25020980834961
    8. ''int' → logprob: -14.87520980834961
    9. '[int' → logprob: -15.25020980834961
    10. ',int' → logprob: -15.62520980834961

Token 857: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046382686123251915
    2. '):' → logprob: -6.004638195037842
    3. ')' → logprob: -7.004638195037842
    4. ' ,' → logprob: -7.629638195037842
    5. '   ' → logprob: -7.879638195037842
    6. '):
' → logprob: -9.129638671875
    7. ',
' → logprob: -9.379638671875
    8. '<|end|>' → logprob: -9.504638671875
    9. '),' → logprob: -10.004638671875
    10. ':' → logprob: -11.254638671875

Token 858: ' Long' (ID: 7790)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.162119060754776
    2. 'n' → logprob: -1.9121190309524536
    3. ' int' → logprob: -7.037118911743164
    4. ' ' → logprob: -7.537118911743164
    5. ' len' → logprob: -8.162118911743164
    6. 'int' → logprob: -8.912118911743164
    7. ' ' → logprob: -10.662118911743164
    8. 'len' → logprob: -11.162118911743164
    9. '   ' → logprob: -12.162118911743164
    10. '  ' → logprob: -12.412118911743164

Token 859: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.005354955326765776
    2. 'eur' → logprob: -5.505354881286621
    3. 'u' → logprob: -7.630354881286621
    4. 'a' → logprob: -8.755354881286621
    5. 'ue' → logprob: -8.755354881286621
    6. 'e' → logprob: -9.005354881286621
    7. '```' → logprob: -9.255354881286621
    8. '#' → logprob: -9.880354881286621
    9. 'er' → logprob: -9.880354881286621
    10. 't' → logprob: -10.130354881286621

Token 860: ' de' (ID: 334)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.35142651200294495
    2. 'a' → logprob: -2.101426601409912
    3. '   ' → logprob: -2.101426601409912
    4. ')' → logprob: -4.226426601409912
    5. '=' → logprob: -4.726426601409912
    6. ' of' → logprob: -5.226426601409912
    7. '[a' → logprob: -5.476426601409912
    8. '_a' → logprob: -5.726426601409912
    9. ' a' → logprob: -6.101426601409912
    10. 'of' → logprob: -6.476426601409912

Token 861: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00463945372030139
    2. ' a' → logprob: -5.379639625549316
    3. '(a' → logprob: -11.129639625549316
    4. 'n' → logprob: -13.754639625549316
    5. ' the' → logprob: -14.129639625549316
    6. ''a' → logprob: -14.379639625549316
    7. 'the' → logprob: -14.629639625549316
    8. '```' → logprob: -15.004639625549316
    9. ')a' → logprob: -15.254639625549316
    10. '   ' → logprob: -15.254639625549316

Token 862: ' sé' (ID: 7462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001652796781854704
    2. ' a' → logprob: -8.750164985656738
    3. '```' → logprob: -13.125164985656738
    4. ''a' → logprob: -13.875164985656738
    5. ' ' → logprob: -14.000164985656738
    6. '`' → logprob: -14.125164985656738
    7. '   ' → logprob: -14.500164985656738
    8. 'n' → logprob: -14.875164985656738
    9. ')' → logprob: -15.000164985656738
    10. ''' → logprob: -15.500164985656738

Token 863: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -9.233804303221405e-05
    2. 'q' → logprob: -9.375092506408691
    3. 'QUENCE' → logprob: -12.750092506408691
    4. 'a' → logprob: -12.875092506408691
    5. 'quences' → logprob: -14.125092506408691
    6. 'qu' → logprob: -15.000092506408691
    7. '`' → logprob: -15.375092506408691
    8. 'que' → logprob: -15.875092506408691
    9. '#' → logprob: -15.875092506408691
    10. '
' → logprob: -16.000091552734375

Token 864: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8188954591751099
    2. ',' → logprob: -1.1938954591751099
    3. ')' → logprob: -1.8188954591751099
    4. '       ' → logprob: -2.5688953399658203
    5. ',
' → logprob: -4.94389533996582
    6. '<|end|>' → logprob: -5.56889533996582
    7. '
' → logprob: -6.19389533996582
    8. '```' → logprob: -6.69389533996582
    9. ')
' → logprob: -7.19389533996582
    10. '):
' → logprob: -7.31889533996582

Token 865: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5202498435974121
    2. ',' → logprob: -1.645249843597412
    3. 'k' → logprob: -2.395249843597412
    4. '       ' → logprob: -2.520249843597412
    5. ' k' → logprob: -4.520249843597412
    6. 'b' → logprob: -4.645249843597412
    7. '```' → logprob: -5.145249843597412
    8. ',k' → logprob: -5.895249843597412
    9. ' ,' → logprob: -6.020249843597412
    10. ',
' → logprob: -6.520249843597412

Token 866: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.007624372839927673
    2. ' k' → logprob: -4.88262414932251
    3. '   ' → logprob: -11.007624626159668
    4. '	k' → logprob: -13.632624626159668
    5. '
' → logprob: -15.257624626159668
    6. '```' → logprob: -16.38262367248535
    7. 'a' → logprob: -16.88262367248535
    8. '    ' → logprob: -17.00762367248535
    9. ' ' → logprob: -17.13262367248535
    10. '    
' → logprob: -18.13262367248535

Token 867: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22071382403373718
    2. '):' → logprob: -1.8457138538360596
    3. ':' → logprob: -3.7207138538360596
    4. ')' → logprob: -4.8457136154174805
    5. '):
' → logprob: -5.7207136154174805
    6. '   ' → logprob: -6.0957136154174805
    7. '=' → logprob: -7.3457136154174805
    8. '<|end|>' → logprob: -7.7207136154174805
    9. ',
' → logprob: -8.09571361541748
    10. ' ,' → logprob: -8.09571361541748

Token 868: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00871195737272501
    2. ')' → logprob: -4.758711814880371
    3. ' int' → logprob: -9.633711814880371
    4. '):' → logprob: -11.383711814880371
    5. ':int' → logprob: -12.133711814880371
    6. '):
' → logprob: -12.258711814880371
    7. ']int' → logprob: -12.633711814880371
    8. '[int' → logprob: -13.133711814880371
    9. '=int' → logprob: -13.758711814880371
    10. 'n' → logprob: -13.758711814880371

Token 869: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6976532936096191
    2. '):' → logprob: -0.6976532936096191
    3. ')' → logprob: -5.947653293609619
    4. ',' → logprob: -6.572653293609619
    5. '   ' → logprob: -8.697652816772461
    6. '):
' → logprob: -8.947652816772461
    7. '):

' → logprob: -9.322652816772461
    8. ' ):' → logprob: -10.072652816772461
    9. ' ):
' → logprob: -10.947652816772461
    10. ':' → logprob: -11.197652816772461

Token 870: ' Con' (ID: 1532)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8462467193603516
    2. ' ' → logprob: -1.9712467193603516
    3. ' k' → logprob: -1.9712467193603516
    4. ' ' → logprob: -2.5962467193603516
    5. 'int' → logprob: -2.8462467193603516
    6. ' n' → logprob: -2.9712467193603516
    7. 'n' → logprob: -3.0962467193603516
    8. 'k' → logprob: -3.7212467193603516
    9. ')' → logprob: -4.596246719360352
    10. ' """' → logprob: -5.096246719360352

Token 871: 'train' (ID: 21362)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.010373324155807495
    2. 't' → logprob: -5.385373115539551
    3. 's' → logprob: -6.010373115539551
    4. 'train' → logprob: -6.385373115539551
    5. 'tra' → logprob: -7.010373115539551
    6. 'STRAINT' → logprob: -8.26037311553955
    7. 'str' → logprob: -8.63537311553955
    8. 'strain' → logprob: -8.63537311553955
    9. '```' → logprob: -11.01037311553955
    10. 'tr' → logprob: -11.38537311553955

Token 872: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023729421198368073
    2. 'tra' → logprob: -4.52372932434082
    3. 'raint' → logprob: -5.02372932434082
    4. 'st' → logprob: -6.14872932434082
    5. 'e' → logprob: -6.52372932434082
    6. 'u' → logprob: -6.64872932434082
    7. ' t' → logprob: -8.39872932434082
    8. '   ' → logprob: -8.89872932434082
    9. 'train' → logprob: -9.27372932434082
    10. 'aint' → logprob: -9.27372932434082

Token 873: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09521142393350601
    2. '):
' → logprob: -2.9702115058898926
    3. '):' → logprob: -3.5952115058898926
    4. ':' → logprob: -5.220211505889893
    5. ')' → logprob: -6.095211505889893
    6. ',' → logprob: -6.345211505889893
    7. '+' → logprob: -7.720211505889893
    8. '=' → logprob: -7.845211505889893
    9. '
' → logprob: -7.970211505889893
    10. ':
' → logprob: -8.345211029052734

Token 874: ''esp' (ID: 73244)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.21554461121559143
    2. 'éc' → logprob: -2.9655447006225586
    3. 'istance' → logprob: -3.2155447006225586
    4. 'inter' → logprob: -3.4655447006225586
    5. 'esp' → logprob: -3.4655447006225586
    6. ''inter' → logprob: -4.715544700622559
    7. 'distance' → logprob: -4.840544700622559
    8. 'istant' → logprob: -4.965544700622559
    9. '_interval' → logprob: -6.215544700622559
    10. ' interval' → logprob: -6.340544700622559

Token 875: 'acement' (ID: 27929)
  Prédit: 'acement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acement' → logprob: -0.000305310997646302
    2. 'ace' → logprob: -8.25030517578125
    3. 'ec' → logprob: -11.37530517578125
    4. 'acé' → logprob: -11.50030517578125
    5. 'a' → logprob: -12.37530517578125
    6. 'aced' → logprob: -12.50030517578125
    7. '```' → logprob: -12.75030517578125
    8. 'ac' → logprob: -12.75030517578125
    9. 'acing' → logprob: -13.25030517578125
    10. 'acer' → logprob: -14.12530517578125

Token 876: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28489693999290466
    2. ')' → logprob: -2.4098968505859375
    3. '):
' → logprob: -2.4098968505859375
    4. ',' → logprob: -3.2848968505859375
    5. '):' → logprob: -4.1598968505859375
    6. ')
' → logprob: -5.4098968505859375
    7. '```' → logprob: -5.7848968505859375
    8. '<|end|>' → logprob: -6.2848968505859375
    9. '
' → logprob: -6.9098968505859375
    10. ' entre' → logprob: -7.1598968505859375

Token 877: ' coups' (ID: 98942)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.17950057983398438
    2. 'm' → logprob: -2.5545005798339844
    3. ' coups' → logprob: -3.3045005798339844
    4. ' mêmes' → logprob: -4.179500579833984
    5. 'moves' → logprob: -4.554500579833984
    6. 'same' → logprob: -5.179500579833984
    7. '```' → logprob: -5.304500579833984
    8. ' même' → logprob: -5.429500579833984
    9. 'g' → logprob: -5.804500579833984
    10. 'tokens' → logprob: -6.179500579833984

Token 878: ' ident' (ID: 3951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09137305617332458
    2. '):
' → logprob: -3.4663729667663574
    3. ')' → logprob: -3.5913729667663574
    4. '):' → logprob: -4.216372966766357
    5. '
' → logprob: -5.591372966766357
    6. '```' → logprob: -5.716372966766357
    7. ')
' → logprob: -5.966372966766357
    8. ',' → logprob: -6.966372966766357
    9. '    
' → logprob: -7.966372966766357
    10. '<|end|>' → logprob: -8.341373443603516

Token 879: 'iques' (ID: 11654)
  Prédit: 'érés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érés' → logprob: -0.23089374601840973
    2. 'iques' → logprob: -2.855893850326538
    3. 'érées' → logprob: -3.855893850326538
    4. 'ere' → logprob: -4.105893611907959
    5. 'éré' → logprob: -4.105893611907959
    6. 'é' → logprob: -4.230893611907959
    7. 'è' → logprob: -4.355893611907959
    8. 'er' → logprob: -4.480893611907959
    9. 'étés' → logprob: -5.230893611907959
    10. 'ifiés' → logprob: -5.230893611907959

Token 880: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49875661730766296
    2. '):
' → logprob: -1.4987566471099854
    3. ')' → logprob: -2.2487566471099854
    4. '):' → logprob: -3.1237566471099854
    5. '
' → logprob: -4.998756408691406
    6. ')
' → logprob: -5.248756408691406
    7. ',' → logprob: -5.373756408691406
    8. '```' → logprob: -6.623756408691406
    9. '):

' → logprob: -7.748756408691406
    10. 'def' → logprob: -8.373756408691406

Token 881: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18092624843120575
    2. ',' → logprob: -2.4309263229370117
    3. ')' → logprob: -2.6809263229370117
    4. '```' → logprob: -5.805926322937012
    5. '
' → logprob: -6.555926322937012
    6. '       ' → logprob: -6.930926322937012
    7. '):' → logprob: -7.180926322937012
    8. ',
' → logprob: -7.305926322937012
    9. '):
' → logprob: -7.930926322937012
    10. 'r' → logprob: -8.555926322937012

Token 882: ' r' (ID: 428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10864442586898804
    2. 'ans' → logprob: -2.608644485473633
    3. '   ' → logprob: -4.483644485473633
    4. 'r' (adapté à ' r') → logprob: -4.608644485473633
    5. 'p' → logprob: -6.108644485473633
    6. 't' → logprob: -6.608644485473633
    7. ' ans' → logprob: -7.108644485473633
    8. ' a' → logprob: -7.358644485473633
    9. 'used' → logprob: -7.608644485473633
    10. '
' → logprob: -7.858644485473633

Token 883: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015380734112113714
    2. '=' → logprob: -7.751538276672363
    3. ' ,' → logprob: -7.876538276672363
    4. ' =' → logprob: -8.126538276672363
    5. ',s' → logprob: -9.001538276672363
    6. '   ' → logprob: -9.501538276672363
    7. ')' → logprob: -10.001538276672363
    8. ',
' → logprob: -10.001538276672363
    9. '<|end|>' → logprob: -10.501538276672363
    10. ',p' → logprob: -10.751538276672363

Token 884: 'int' (ID: 491)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08536040037870407
    2. ' s' → logprob: -2.835360288619995
    3. ',' → logprob: -4.210360527038574
    4. 'int' → logprob: -5.335360527038574
    5. '   ' → logprob: -7.085360527038574
    6. ' int' → logprob: -7.335360527038574
    7. ')' → logprob: -7.460360527038574
    8. ' ,' → logprob: -7.710360527038574
    9. ',s' → logprob: -8.960360527038574
    10. 'str' → logprob: -9.335360527038574

Token 885: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04108946770429611
    2. '):' → logprob: -4.0410895347595215
    3. '   ' → logprob: -4.2910895347595215
    4. ' ,' → logprob: -5.2910895347595215
    5. '):
' → logprob: -6.2910895347595215
    6. ',
' → logprob: -6.7910895347595215
    7. ')' → logprob: -7.7910895347595215
    8. ':' → logprob: -9.166089057922363
    9. '    ' → logprob: -9.666089057922363
    10. '  ' → logprob: -9.916089057922363

Token 886: ' Score' (ID: 30731)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06804753094911575
    2. 'int' → logprob: -2.818047523498535
    3. ' s' → logprob: -6.193047523498535
    4. 's' → logprob: -6.943047523498535
    5. ' ' → logprob: -6.943047523498535
    6. ' r' → logprob: -7.693047523498535
    7. '[int' → logprob: -7.693047523498535
    8. ' ' → logprob: -7.943047523498535
    9. 'r' → logprob: -8.193047523498535
    10. ' 
' → logprob: -9.193047523498535

Token 887: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6144592761993408
    2. 'for' → logprob: -1.4894592761993408
    3. ',' → logprob: -2.739459276199341
    4. '   ' → logprob: -3.114459276199341
    5. ' =' → logprob: -3.114459276199341
    6. '=' → logprob: -3.614459276199341
    7. ' ' → logprob: -3.739459276199341
    8. ' ,' → logprob: -4.989459037780762
    9. ' if' → logprob: -4.989459037780762
    10. '<|end|>' → logprob: -5.614459037780762

Token 888: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7070786356925964
    2. ''r' → logprob: -0.7070786356925964
    3. ''' → logprob: -4.832078456878662
    4. 'r' → logprob: -5.457078456878662
    5. ' '' → logprob: -7.332078456878662
    6. ' "' → logprob: -8.08207893371582
    7. ''s' → logprob: -8.33207893371582
    8. ''p' → logprob: -9.70707893371582
    9. ' r' → logprob: -9.83207893371582
    10. '`' → logprob: -9.95707893371582

Token 889: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006267757853493094
    2. '"' → logprob: -7.875626564025879
    3. ''r' → logprob: -8.375626564025879
    4. ''' → logprob: -11.750626564025879
    5. ' r' → logprob: -12.750626564025879
    6. 's' → logprob: -13.125626564025879
    7. 'p' → logprob: -13.500626564025879
    8. ''p' → logprob: -14.375626564025879
    9. ''s' → logprob: -15.000626564025879
    10. 'a' → logprob: -15.000626564025879

Token 890: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20741792023181915
    2. '):
' → logprob: -2.9574179649353027
    3. '')
' → logprob: -3.5824179649353027
    4. ')
' → logprob: -3.7074179649353027
    5. ''):
' → logprob: -3.7074179649353027
    6. ''
' → logprob: -4.082417964935303
    7. ',' → logprob: -4.332417964935303
    8. '       ' → logprob: -4.582417964935303
    9. ''' → logprob: -4.707417964935303
    10. '',' → logprob: -6.082417964935303

Token 891: '       ' (ID: 309)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01806987076997757
    2. 's' → logprob: -4.143069744110107
    3. ' ' → logprob: -7.018069744110107
    4. '   ' → logprob: -7.518069744110107
    5. '    ' → logprob: -8.268070220947266
    6. ',' → logprob: -8.893070220947266
    7. ' ,' → logprob: -9.643070220947266
    8. ' ' → logprob: -9.768070220947266
    9. ',s' → logprob: -11.643070220947266
    10. '  ' → logprob: -11.768070220947266

Token 892: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6932327747344971
    2. ' s' → logprob: -0.6932327747344971
    3. '   ' → logprob: -9.568232536315918
    4. '	s' → logprob: -11.443232536315918
    5. ' ' → logprob: -13.318232536315918
    6. ' ' → logprob: -14.193232536315918
    7. '_s' → logprob: -14.318232536315918
    8. '    ' → logprob: -14.818232536315918
    9. ' p' → logprob: -15.193232536315918
    10. '  ' → logprob: -15.443232536315918

Token 893: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09452511370182037
    2. ':' → logprob: -2.969525098800659
    3. ' (' → logprob: -3.969525098800659
    4. '   ' → logprob: -4.719525337219238
    5. '(int' → logprob: -5.844525337219238
    6. '<|end|>' → logprob: -6.344525337219238
    7. '=' → logprob: -6.719525337219238
    8. ' =' → logprob: -6.719525337219238
    9. '(' → logprob: -6.719525337219238
    10. ' ,' → logprob: -7.219525337219238

Token 894: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020520923135336488
    2. ' int' → logprob: -8.500205039978027
    3. '[int' → logprob: -14.000205039978027
    4. '=int' → logprob: -14.875205039978027
    5. 's' → logprob: -15.875205039978027
    6. ':int' → logprob: -16.375205993652344
    7. '<int' → logprob: -16.375205993652344
    8. '(int' → logprob: -16.375205993652344
    9. ',int' → logprob: -16.750205993652344
    10. ',' → logprob: -17.125205993652344

Token 895: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05339670926332474
    2. ',' → logprob: -3.803396701812744
    3. '):' → logprob: -3.803396701812744
    4. '   ' → logprob: -5.803396701812744
    5. ')' → logprob: -6.553396701812744
    6. '':' → logprob: -7.303396701812744
    7. '):
' → logprob: -7.553396701812744
    8. '=' → logprob: -8.053397178649902
    9. ' :' → logprob: -8.178397178649902
    10. ':int' → logprob: -8.303397178649902

Token 896: ' Score' (ID: 30731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023260388523340225
    2. ' s' → logprob: -3.7732603549957275
    3. 'p' → logprob: -11.523260116577148
    4. ' p' → logprob: -13.023260116577148
    5. '   ' → logprob: -13.273260116577148
    6. 'int' → logprob: -14.648260116577148
    7. ' ' → logprob: -15.273260116577148
    8. ' ' → logprob: -16.02326011657715
    9. '	s' → logprob: -16.77326011657715
    10. '    ' → logprob: -16.89826011657715

Token 897: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5376980304718018
    2. '   ' → logprob: -2.0376980304718018
    3. 'for' → logprob: -2.4126980304718018
    4. ',' → logprob: -3.0376980304718018
    5. ' =' → logprob: -3.2876980304718018
    6. '    ' → logprob: -3.9126980304718018
    7. ' +=' → logprob: -4.037697792053223
    8. ' ' → logprob: -4.287697792053223
    9. '<|end|>' → logprob: -4.412697792053223
    10. ' -=' → logprob: -4.537697792053223

Token 898: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2032395899295807
    2. ''s' → logprob: -1.7032395601272583
    3. '"s' → logprob: -6.328239440917969
    4. '`s' → logprob: -10.453239440917969
    5. ' s' → logprob: -11.703239440917969
    6. '"' → logprob: -13.328239440917969
    7. '_s' → logprob: -14.703239440917969
    8. '   ' → logprob: -16.57823944091797
    9. '‘s' → logprob: -17.45323944091797
    10. '$s' → logprob: -17.57823944091797

Token 899: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.77627644513268e-06
    2. ''s' → logprob: -11.750008583068848
    3. '"s' → logprob: -15.000008583068848
    4. '"' → logprob: -15.375008583068848
    5. ' s' → logprob: -15.500008583068848
    6. '   ' → logprob: -16.750009536743164
    7. ''' → logprob: -17.125009536743164
    8. 'r' → logprob: -17.250009536743164
    9. '`s' → logprob: -17.375009536743164
    10. 'a' → logprob: -17.500009536743164

Token 900: ''
' (ID: 2207)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20726436376571655
    2. '   ' → logprob: -1.7072644233703613
    3. '',' → logprob: -5.957264423370361
    4. ')' → logprob: -6.832264423370361
    5. ' ,' → logprob: -7.457264423370361
    6. ',p' → logprob: -7.457264423370361
    7. 'p' → logprob: -8.832263946533203
    8. ',
' → logprob: -8.832263946533203
    9. '       ' → logprob: -9.082263946533203
    10. 'def' → logprob: -9.332263946533203

Token 901: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4304831922054291
    2. ',' → logprob: -1.4304832220077515
    3. 'p' → logprob: -2.555483102798462
    4. '	p' → logprob: -4.055483341217041
    5. ' p' → logprob: -5.555483341217041
    6. '```' → logprob: -5.930483341217041
    7. ',p' → logprob: -6.180483341217041
    8. ' ' → logprob: -6.305483341217041
    9. '[' → logprob: -6.555483341217041
    10. ' ,' → logprob: -7.430483341217041

Token 902: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.011088847182691097
    2. ' p' → logprob: -4.511088848114014
    3. '   ' → logprob: -10.136088371276855
    4. '
' → logprob: -15.261088371276855
    5. '       ' → logprob: -15.261088371276855
    6. '	p' → logprob: -15.636088371276855
    7. ' ' → logprob: -15.761088371276855
    8. '  ' → logprob: -16.386089324951172
    9. 'def' → logprob: -16.823589324951172
    10. ' ' → logprob: -16.886089324951172

Token 903: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005257952958345413
    2. ':' → logprob: -6.755258083343506
    3. '   ' → logprob: -6.880258083343506
    4. ' ,' → logprob: -7.130258083343506
    5. ' =' → logprob: -7.505258083343506
    6. '<|end|>' → logprob: -7.755258083343506
    7. '=' → logprob: -8.255257606506348
    8. ')' → logprob: -8.505257606506348
    9. '(int' → logprob: -8.505257606506348
    10. ',
' → logprob: -9.130257606506348

Token 904: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.45848218582978e-06
    2. '[int' → logprob: -13.00000286102295
    3. ' int' → logprob: -16.500001907348633
    4. '(int' → logprob: -17.625001907348633
    5. '<int' → logprob: -18.125001907348633
    6. ':int' → logprob: -18.125001907348633
    7. '=int' → logprob: -18.625001907348633
    8. ']int' → logprob: -19.000001907348633
    9. '```' → logprob: -20.000001907348633
    10. ''int' → logprob: -20.750001907348633

Token 905: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8002102375030518
    2. ')' → logprob: -1.3002102375030518
    3. '):' → logprob: -1.9252102375030518
    4. ':' → logprob: -2.6752102375030518
    5. '):
' → logprob: -3.4252102375030518
    6. '   ' → logprob: -4.175209999084473
    7. 'int' → logprob: -5.550209999084473
    8. '[int' → logprob: -6.425209999084473
    9. ':int' → logprob: -6.675209999084473
    10. '```' → logprob: -6.800209999084473

Token 906: ' Score' (ID: 30731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02995041385293007
    2. 'p' → logprob: -3.5299503803253174
    3. '   ' → logprob: -9.279950141906738
    4. '       ' → logprob: -10.029950141906738
    5. ' int' → logprob: -10.404950141906738
    6. '           ' → logprob: -11.404950141906738
    7. 's' → logprob: -11.904950141906738
    8. '[int' → logprob: -12.529950141906738
    9. 'ans' → logprob: -12.904950141906738
    10. ' p' → logprob: -13.029950141906738

Token 907: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1765352487564087
    2. ' for' → logprob: -1.3015352487564087
    3. ',' → logprob: -2.301535129547119
    4. '   ' → logprob: -2.426535129547119
    5. ' -=' → logprob: -2.551535129547119
    6. ')' → logprob: -3.426535129547119
    7. '    ' → logprob: -4.176535129547119
    8. ' ' → logprob: -4.176535129547119
    9. ' +=' → logprob: -4.426535129547119
    10. ' -' → logprob: -4.676535129547119

Token 908: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23633751273155212
    2. ''p' → logprob: -1.8613375425338745
    3. ''s' → logprob: -3.361337423324585
    4. '"' → logprob: -4.736337661743164
    5. ''' → logprob: -5.111337661743164
    6. ' p' → logprob: -5.736337661743164
    7. 's' → logprob: -6.611337661743164
    8. '"s' → logprob: -7.111337661743164
    9. ' '' → logprob: -9.736337661743164
    10. ' "' → logprob: -10.986337661743164

Token 909: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020866614067927003
    2. 's' → logprob: -8.875208854675293
    3. 'r' → logprob: -9.875208854675293
    4. ''p' → logprob: -12.375208854675293
    5. ' p' → logprob: -12.500208854675293
    6. '"' → logprob: -13.750208854675293
    7. '   ' → logprob: -14.000208854675293
    8. ')' → logprob: -14.062708854675293
    9. 'int' → logprob: -14.687708854675293
    10. 'print' → logprob: -14.750208854675293

Token 910: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09014320373535156
    2. '):
' → logprob: -2.7151432037353516
    3. ''):
' → logprob: -4.465143203735352
    4. ')
' → logprob: -5.590143203735352
    5. ')' → logprob: -5.840143203735352
    6. '
' → logprob: -7.715143203735352
    7. '')' → logprob: -8.465143203735352
    8. '"""
' → logprob: -8.590143203735352
    9. ''
' → logprob: -8.715143203735352
    10. '"):
' → logprob: -8.840143203735352

Token 911: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004425251390784979
    2. ')' → logprob: -6.254425048828125
    3. 'def' → logprob: -6.879425048828125
    4. '):
' → logprob: -7.129425048828125
    5. '
' → logprob: -8.129425048828125
    6. '    
' → logprob: -8.879425048828125
    7. '):' → logprob: -8.879425048828125
    8. ':' → logprob: -10.754425048828125
    9. '```' → logprob: -11.129425048828125
    10. ',' → logprob: -11.379425048828125

Token 912: ' ans' (ID: 3345)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22257186472415924
    2. 'ans' (adapté à ' ans') → logprob: -2.722571849822998
    3. '   ' → logprob: -2.972571849822998
    4. '
' → logprob: -3.222571849822998
    5. 'last' → logprob: -4.347571849822998
    6. 'used' → logprob: -4.722571849822998
    7. 'visited' → logprob: -5.222571849822998
    8. 't' → logprob: -5.472571849822998
    9. 'prev' → logprob: -6.097571849822998
    10. ' a' → logprob: -6.972571849822998

Token 913: ' (' (ID: 350)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.007036812603473663
    2. ' =' → logprob: -5.3820366859436035
    3. '-=' → logprob: -6.5070366859436035
    4. '=' → logprob: -7.2570366859436035
    5. ' +=' → logprob: -9.382037162780762
    6. '-' → logprob: -10.132037162780762
    7. '   ' → logprob: -10.382037162780762
    8. ' -' → logprob: -10.757037162780762
    9. ')' → logprob: -11.007037162780762
    10. ' ' → logprob: -11.382037162780762

Token 914: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2238672375679016
    2. '):' → logprob: -2.723867177963257
    3. ':int' → logprob: -2.848867177963257
    4. 'int' → logprob: -2.848867177963257
    5. ':' → logprob: -4.848867416381836
    6. ' )' → logprob: -5.223867416381836
    7. '[int' → logprob: -6.473867416381836
    8. '):
' → logprob: -6.723867416381836
    9. ' int' → logprob: -7.098867416381836
    10. '   ' → logprob: -7.223867416381836

Token 915: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07308152318000793
    2. ')' → logprob: -3.0730814933776855
    3. '):
' → logprob: -3.8230814933776855
    4. '   ' → logprob: -6.8230814933776855
    5. ' ):' → logprob: -7.8230814933776855
    6. '):
' → logprob: -8.073081970214844
    7. ',' → logprob: -8.823081970214844
    8. '-' → logprob: -8.948081970214844
    9. ':' → logprob: -9.823081970214844
    10. ' -' → logprob: -10.198081970214844

Token 916: ' Score' (ID: 30731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03832019865512848
    2. ' int' → logprob: -3.288320302963257
    3. 'ans' → logprob: -8.788320541381836
    4. '[int' → logprob: -9.288320541381836
    5. ' ans' → logprob: -10.913320541381836
    6. ':int' → logprob: -12.538320541381836
    7. 'initial' → logprob: -12.788320541381836
    8. '(int' → logprob: -13.038320541381836
    9. 'score' → logprob: -14.288320541381836
    10. '   ' → logprob: -14.288320541381836

Token 917: ' initial' (ID: 4871)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.12414395809173584
    2. ' ' → logprob: -2.3741440773010254
    3. ' =' → logprob: -4.874144077301025
    4. '=' → logprob: -5.499144077301025
    5. '-=' → logprob: -5.999144077301025
    6. '_' → logprob: -6.374144077301025
    7. '-' → logprob: -6.374144077301025
    8. ' -' → logprob: -6.624144077301025
    9. ' +=' → logprob: -7.124144077301025
    10. '[' → logprob: -7.124144077301025

Token 918: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30212104320526123
    2. '
' → logprob: -2.802121162414551
    3. '):' → logprob: -2.802121162414551
    4. ')' → logprob: -3.302121162414551
    5. ':' → logprob: -3.302121162414551
    6. '):
' → logprob: -3.302121162414551
    7. ' =' → logprob: -4.177121162414551
    8. ',' → logprob: -5.927121162414551
    9. '    
' → logprob: -6.177121162414551
    10. '```' → logprob: -6.302121162414551

Token 919: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005457866471260786
    2. 'adjust' → logprob: -6.005457878112793
    3. ')' → logprob: -7.005457878112793
    4. '#' → logprob: -7.380457878112793
    5. ' adjustment' → logprob: -7.880457878112793
    6. ' =' → logprob: -8.255457878112793
    7. '+=' → logprob: -9.380457878112793
    8. 'a' → logprob: -9.380457878112793
    9. '=
' → logprob: -9.505457878112793
    10. 'ans' → logprob: -9.880457878112793

Token 920: ' contraintes' (ID: 167366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5072225332260132
    2. '=' → logprob: -2.0072226524353027
    3. '
' → logprob: -2.7572226524353027
    4. ')' → logprob: -3.3822226524353027
    5. ' adjustment' → logprob: -3.5072226524353027
    6. 'adjust' → logprob: -4.007222652435303
    7. ' constraints' → logprob: -4.132222652435303
    8. '-' → logprob: -4.132222652435303
    9. ' adjustments' → logprob: -4.257222652435303
    10. '#' → logprob: -4.382222652435303

Token 921: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03164064511656761
    2. '
' → logprob: -4.656640529632568
    3. '):
' → logprob: -4.656640529632568
    4. ':' → logprob: -5.531640529632568
    5. '):' → logprob: -5.781640529632568
    6. ')' → logprob: -6.031640529632568
    7. '    
' → logprob: -6.406640529632568
    8. ':
' → logprob: -7.531640529632568
    9. 'for' → logprob: -9.406641006469727
    10. ',' → logprob: -9.531641006469727

Token 922: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043815311044454575
    2. '
' → logprob: -3.4188153743743896
    3. '    
' → logprob: -5.0438151359558105
    4. ')' → logprob: -6.7938151359558105
    5. '):
' → logprob: -7.0438151359558105
    6. ':' → logprob: -7.5438151359558105
    7. 'for' → logprob: -7.7938151359558105
    8. ':
' → logprob: -7.9188151359558105
    9. ')
' → logprob: -9.668815612792969
    10. '):' → logprob: -9.918815612792969

Token 923: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050841521471738815
    2. '):
' → logprob: -3.4258415699005127
    3. '
' → logprob: -5.175841331481934
    4. '    
' → logprob: -5.675841331481934
    5. 'def' → logprob: -6.300841331481934
    6. 'visited' → logprob: -6.675841331481934
    7. ':
' → logprob: -6.800841331481934
    8. 'for' → logprob: -7.050841331481934
    9. '):' → logprob: -7.425841331481934
    10. ':' → logprob: -7.425841331481934

Token 924: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 925: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.005797247868031263
    2. ' int' → logprob: -5.255797386169434
    3. 'ans' → logprob: -8.255797386169434
    4. 'int' → logprob: -9.130797386169434
    5. ' 
' → logprob: -9.755797386169434
    6. '   ' → logprob: -10.380797386169434
    7. '(ans' → logprob: -10.380797386169434
    8. ' ' → logprob: -10.880797386169434
    9. '	ans' → logprob: -11.380797386169434
    10. '_ans' → logprob: -11.505797386169434

Token 926: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -1.9146995327901095e-05
    2. ' int' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.125019073486328
    4. '
' → logprob: -17.625019073486328
    5. '[int' → logprob: -18.500019073486328
    6. '```' → logprob: -19.375019073486328
    7. ']int' → logprob: -20.750019073486328
    8. '    
' → logprob: -20.875019073486328
    9. '<int' → logprob: -20.875019073486328
    10. ' 
' → logprob: -21.625019073486328

Token 927: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033736536279320717
    2. ':
' → logprob: -5.753373622894287
    3. ':return' → logprob: -9.253374099731445
    4. ' :' → logprob: -9.503374099731445
    5. '   ' → logprob: -11.753374099731445
    6. ' :
' → logprob: -12.003374099731445
    7. '<|end|>' → logprob: -12.128374099731445
    8. '```' → logprob: -13.128374099731445
    9. ':int' → logprob: -14.503374099731445
    10. '
' → logprob: -14.628374099731445

Token 928: ' Score' (ID: 30731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011051828041672707
    2. ' int' → logprob: -4.886051654815674
    3. 'ans' → logprob: -5.761051654815674
    4. ' ans' → logprob: -8.761052131652832
    5. 'Score' → logprob: -10.011052131652832
    6. 'Adjusted' → logprob: -10.011052131652832
    7. '[int' → logprob: -11.511052131652832
    8. '   ' → logprob: -11.761052131652832
    9. ' adjusted' → logprob: -12.511052131652832
    10. 'adjust' → logprob: -12.761052131652832

Token 929: ' ajust' (ID: 32650)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.0275368690490723
    2. ' final' → logprob: -1.2775368690490723
    3. '
' → logprob: -1.4025368690490723
    4. '_final' → logprob: -2.6525368690490723
    5. ' ajust' → logprob: -3.7775368690490723
    6. 'adjust' → logprob: -4.527536869049072
    7. ' corrig' → logprob: -6.152536869049072
    8. '   ' → logprob: -6.277536869049072
    9. '_adjust' → logprob: -6.277536869049072
    10. ' adjusted' → logprob: -6.402536869049072

Token 930: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007801569066941738
    2. '   ' → logprob: -5.507801532745361
    3. 'ed' → logprob: -7.132801532745361
    4. '=' → logprob: -7.132801532745361
    5. 'e' → logprob: -7.132801532745361
    6. 'final' → logprob: -8.00780200958252
    7. '```' → logprob: -8.88280200958252
    8. ' final' → logprob: -9.50780200958252
    9. ' =' → logprob: -9.50780200958252
    10. 'ée' → logprob: -9.63280200958252

Token 931: ' prenant' (ID: 140375)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07020273059606552
    2. '):' → logprob: -3.6952028274536133
    3. '   ' → logprob: -3.6952028274536133
    4. ':
' → logprob: -4.195202827453613
    5. ')' → logprob: -6.570202827453613
    6. ',' → logprob: -7.820202827453613
    7. '):
' → logprob: -8.070202827453613
    8. 'def' → logprob: -8.820202827453613
    9. '_' → logprob: -9.195202827453613
    10. '(a' → logprob: -9.445202827453613

Token 932: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.10087893903255463
    2. ' en' → logprob: -2.350878953933716
    3. '```' → logprob: -7.850878715515137
    4. '_en' → logprob: -9.725878715515137
    5. '(en' → logprob: -10.225878715515137
    6. 'into' → logprob: -10.225878715515137
    7. ' into' → logprob: -10.600878715515137
    8. ''en' → logprob: -10.600878715515137
    9. '   ' → logprob: -10.975878715515137
    10. '_' → logprob: -11.475878715515137

Token 933: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -5.7053759519476444e-05
    2. 'cons' → logprob: -10.250057220458984
    3. 'com' → logprob: -11.875057220458984
    4. 'charge' → logprob: -12.625057220458984
    5. ' compte' → logprob: -13.000057220458984
    6. 'account' → logprob: -13.000057220458984
    7. 'count' → logprob: -13.250057220458984
    8. '
' → logprob: -13.500057220458984
    9. '```' → logprob: -13.500057220458984
    10. '   ' → logprob: -14.375057220458984

Token 934: ' la' (ID: 557)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.350712388753891
    2. ' les' → logprob: -2.350712299346924
    3. ' la' → logprob: -2.850712299346924
    4. ' constraints' → logprob: -2.975712299346924
    5. 'des' → logprob: -2.975712299346924
    6. 'constraints' → logprob: -4.475712299346924
    7. ' l' → logprob: -5.350712299346924
    8. ' the' → logprob: -5.475712299346924
    9. 'les' → logprob: -5.975712299346924
    10. ' le' → logprob: -6.225712299346924

Token 935: ' contr' (ID: 6030)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.18112826347351074
    2. 'constraints' → logprob: -2.4311282634735107
    3. ' contraintes' → logprob: -2.6811282634735107
    4. 'contra' → logprob: -6.43112850189209
    5. ' constraint' → logprob: -6.43112850189209
    6. 'contr' → logprob: -6.55612850189209
    7. ' contra' → logprob: -6.68112850189209
    8. 'constraint' → logprob: -7.05612850189209
    9. 'con' → logprob: -7.68112850189209
    10. '_constraints' → logprob: -7.80612850189209

Token 936: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0010810409439727664
    2. 'a' → logprob: -6.8760809898376465
    3. 'aint' → logprob: -10.376081466674805
    4. '
' → logprob: -12.126081466674805
    5. 'ain' → logprob: -12.501081466674805
    6. 'aine' → logprob: -12.751081466674805
    7. '``' → logprob: -13.876081466674805
    8. '```' → logprob: -14.001081466674805
    9. 'aise' → logprob: -14.001081466674805
    10. 'ai' → logprob: -14.876081466674805

Token 937: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.660126268863678
    2. ':' → logprob: -1.4101262092590332
    3. ':
' → logprob: -1.5351262092590332
    4. '):
' → logprob: -4.160126209259033
    5. '):' → logprob: -5.660126209259033
    6. ')' → logprob: -6.535126209259033
    7. '    
' → logprob: -6.785126209259033
    8. '
' → logprob: -7.035126209259033
    9. ' :
' → logprob: -8.535126686096191
    10. 'a' → logprob: -8.910126686096191

Token 938: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004499904345721006
    2. ':
' → logprob: -5.879499912261963
    3. '):' → logprob: -6.504499912261963
    4. '   ' → logprob: -9.504499435424805
    5. ')' → logprob: -10.004499435424805
    6. '):
' → logprob: -10.254499435424805
    7. ':def' → logprob: -10.879499435424805
    8. '```' → logprob: -12.254499435424805
    9. 'def' → logprob: -12.504499435424805
    10. '":' → logprob: -12.754499435424805

Token 939: ' """
' (ID: 7037)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5524026155471802
    2. ':' → logprob: -0.9274026155471802
    3. '   ' → logprob: -4.302402496337891
    4. '):
' → logprob: -4.677402496337891
    5. 'def' → logprob: -5.552402496337891
    6. ')' → logprob: -7.427402496337891
    7. ' :
' → logprob: -7.552402496337891
    8. ':def' → logprob: -7.927402496337891
    9. '```' → logprob: -8.42740249633789
    10. '):' → logprob: -9.17740249633789

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023344943299889565
    2. '
' → logprob: -4.023344993591309
    3. '    
' → logprob: -5.773344993591309
    4. ' 
' → logprob: -7.273344993591309
    5. '```' → logprob: -8.273344993591309
    6. 'i' → logprob: -8.773344993591309
    7. 'n' → logprob: -9.023344993591309
    8. 'a' → logprob: -9.523344993591309
    9. 'for' → logprob: -9.648344993591309
    10. '' → logprob: -9.648344993591309

Token 941: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.09312449395656586
    2. 'visited' → logprob: -3.0931243896484375
    3. 'seen' → logprob: -4.4681243896484375
    4. 'played' → logprob: -4.5931243896484375
    5. 'a' → logprob: -5.0931243896484375
    6. 'memo' → logprob: -5.9681243896484375
    7. 'dp' → logprob: -6.2181243896484375
    8. 'for' → logprob: -6.2181243896484375
    9. 'ans' → logprob: -6.2181243896484375
    10. '   ' → logprob: -6.9681243896484375

Token 942: ' Pour' (ID: 13931)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.19752508401870728
    2. 'a' → logprob: -2.5725250244140625
    3. 'visited' → logprob: -3.1975250244140625
    4. 'b' → logprob: -4.4475250244140625
    5. 'played' → logprob: -4.4475250244140625
    6. 'dp' → logprob: -4.6975250244140625
    7. 'ans' → logprob: -5.3225250244140625
    8. 'seen' → logprob: -5.3225250244140625
    9. 'memo' → logprob: -5.3225250244140625
    10. 'for' → logprob: -5.3225250244140625

Token 943: ' pouvoir' (ID: 27197)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11436502635478973
    2. ' i' → logprob: -2.2393651008605957
    3. 'j' → logprob: -7.614365100860596
    4. ' j' → logprob: -8.864364624023438
    5. 'idx' → logprob: -8.864364624023438
    6. '_i' → logprob: -9.489364624023438
    7. 'mod' → logprob: -9.864364624023438
    8. ' idx' → logprob: -9.864364624023438
    9. '_' → logprob: -9.989364624023438
    10. 'pos' → logprob: -9.989364624023438

Token 944: ' mar' (ID: 2674)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013830957002937794
    2. ' i' → logprob: -5.26383113861084
    3. 'modifier' → logprob: -5.76383113861084
    4. 'for' → logprob: -7.38883113861084
    5. 'mod' → logprob: -7.88883113861084
    6. 'j' → logprob: -8.01383113861084
    7. 'idx' → logprob: -8.38883113861084
    8. 'tr' → logprob: -8.51383113861084
    9. 'util' → logprob: -8.51383113861084
    10. '_' → logprob: -8.51383113861084

Token 945: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -6.539801688631997e-05
    2. 'qu' → logprob: -10.000065803527832
    3. 'que' → logprob: -11.750065803527832
    4. 'r' → logprob: -12.000065803527832
    5. '#' → logprob: -13.625065803527832
    6. 'q' → logprob: -13.750065803527832
    7. 'ker' → logprob: -14.125065803527832
    8. '   ' → logprob: -14.500065803527832
    9. '-' → logprob: -14.875065803527832
    10. '=' → logprob: -15.250065803527832

Token 946: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7996981143951416
    2. 'des' → logprob: -2.4246981143951416
    3. 'for' → logprob: -2.5496981143951416
    4. 'a' → logprob: -2.6746981143951416
    5. 'ans' → logprob: -2.7996981143951416
    6. 'score' → logprob: -2.7996981143951416
    7. 'les' → logprob: -2.9246981143951416
    8. 'visited' → logprob: -3.7996981143951416
    9. ' i' → logprob: -4.2996978759765625
    10. 'le' → logprob: -4.5496978759765625

Token 947: ' coups' (ID: 98942)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.039080023765564
    2. 'g' → logprob: -1.664080023765564
    3. 'i' → logprob: -1.789080023765564
    4. ' coups' → logprob: -2.2890801429748535
    5. 'points' → logprob: -2.9140801429748535
    6. 'positions' → logprob: -3.0390801429748535
    7. 'indices' → logprob: -3.5390801429748535
    8. 'm' → logprob: -5.0390801429748535
    9. 't' → logprob: -5.2890801429748535
    10. ' i' → logprob: -5.2890801429748535

Token 948: ' interd' (ID: 84840)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.767050564289093
    2. 'jou' → logprob: -1.1420505046844482
    3. ' mar' → logprob: -2.6420505046844482
    4. 'used' → logprob: -3.0170505046844482
    5. 'a' → logprob: -3.8920505046844482
    6. ' jou' → logprob: -4.392050743103027
    7. 'util' → logprob: -4.642050743103027
    8. ' utilisés' → logprob: -4.642050743103027
    9. '_used' → logprob: -5.142050743103027
    10. 'g' → logprob: -5.142050743103027

Token 949: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.6433581709861755
    2. 'uits' → logprob: -1.1433582305908203
    3. 'iqu' → logprob: -1.8933582305908203
    4. 'qués' → logprob: -5.89335823059082
    5. 'it' → logprob: -7.76835823059082
    6. 'iques' → logprob: -8.01835823059082
    7. 'is' → logprob: -8.39335823059082
    8. 'qu' → logprob: -8.64335823059082
    9. 'es' → logprob: -9.01835823059082
    10. 'q' → logprob: -9.01835823059082

Token 950: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1656092405319214
    2. ',' → logprob: -1.4156092405319214
    3. 'used' → logprob: -2.040609359741211
    4. ' a' → logprob: -2.415609359741211
    5. 'visited' → logprob: -2.915609359741211
    6. '   ' → logprob: -3.165609359741211
    7. ' used' → logprob: -3.165609359741211
    8. 'for' → logprob: -4.040609359741211
    9. ' for' → logprob: -4.165609359741211
    10. 'played' → logprob: -4.915609359741211

Token 951: ' il' (ID: 1793)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3279268741607666
    2. 'used' → logprob: -1.7029268741607666
    3. 'visited' → logprob: -3.3279268741607666
    4. 'for' → logprob: -3.4529268741607666
    5. 'b' → logprob: -5.0779266357421875
    6. 'ans' → logprob: -5.3279266357421875
    7. 'marked' → logprob: -5.5779266357421875
    8. '   ' → logprob: -5.7029266357421875
    9. ' a' → logprob: -5.8279266357421875
    10. ' used' → logprob: -6.0779266357421875

Token 952: ' faut' (ID: 17821)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08351128548383713
    2. ' =' → logprob: -2.5835113525390625
    3. 'a' → logprob: -5.9585113525390625
    4. ' a' → logprob: -7.3335113525390625
    5. '   ' → logprob: -7.8335113525390625
    6. 'should' → logprob: -8.833511352539062
    7. ' faut' → logprob: -9.458511352539062
    8. 's' → logprob: -9.583511352539062
    9. ' est' → logprob: -9.583511352539062
    10. '_=' → logprob: -9.583511352539062

Token 953: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029614752158522606
    2. ' a' → logprob: -3.6546146869659424
    3. 'list' → logprob: -6.2796149253845215
    4. ' list' → logprob: -8.904614448547363
    5. 'liste' → logprob: -8.904614448547363
    6. 'marked' → logprob: -9.529614448547363
    7. 'modifier' → logprob: -9.654614448547363
    8. '#' → logprob: -9.904614448547363
    9. ' ans' → logprob: -10.029614448547363
    10. 'ans' → logprob: -10.029614448547363

Token 954: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27715399861335754
    2. 'table' → logprob: -2.527153968811035
    3. 'mar' → logprob: -3.027153968811035
    4. 'liste' → logprob: -3.402153968811035
    5. 'set' → logprob: -3.902153968811035
    6. 'list' → logprob: -4.152153968811035
    7. 'mutable' → logprob: -4.152153968811035
    8. 'ans' → logprob: -5.777153968811035
    9. 'marked' → logprob: -5.902153968811035
    10. 'tab' → logprob: -5.902153968811035

Token 955: ' mutable' (ID: 54987)
  Prédit: ' interdit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interdit' → logprob: -0.07998072355985641
    2. '   ' → logprob: -4.079980850219727
    3. 'visited' → logprob: -4.079980850219727
    4. 'used' → logprob: -4.829980850219727
    5. ' forbidden' → logprob: -5.579980850219727
    6. ' banned' → logprob: -5.579980850219727
    7. ' used' → logprob: -5.704980850219727
    8. ' visited' → logprob: -5.829980850219727
    9. ' des' → logprob: -6.079980850219727
    10. 'b' → logprob: -6.079980850219727

Token 956: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5753429532051086
    2. ' interdit' → logprob: -2.075342893600464
    3. 'used' → logprob: -2.950342893600464
    4. ' a' → logprob: -2.950342893600464
    5. ',' → logprob: -3.200342893600464
    6. 'visited' → logprob: -3.450342893600464
    7. 'marked' → logprob: -3.575342893600464
    8. 'b' → logprob: -4.450343132019043
    9. 'dp' → logprob: -4.450343132019043
    10. ' used' → logprob: -4.575343132019043

Token 957: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1280629187822342
    2. 'a' → logprob: -2.3780629634857178
    3. ' a' → logprob: -4.253062725067139
    4. '
' → logprob: -5.878062725067139
    5. ' interdit' → logprob: -6.253062725067139
    6. '    
' → logprob: -6.753062725067139
    7. ' forbidden' → logprob: -6.878062725067139
    8. ',' → logprob: -7.128062725067139
    9. 'used' → logprob: -7.253062725067139
    10. ' prohibited' → logprob: -7.503062725067139

Token 958: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.12333191186189651
    2. 'used' → logprob: -2.6233320236206055
    3. 'for' → logprob: -3.4983320236206055
    4. 'b' → logprob: -5.4983320236206055
    5. 'allowed' → logprob: -5.8733320236206055
    6. 'ans' → logprob: -6.4983320236206055
    7. 'marked' → logprob: -6.7483320236206055
    8. 'visited' → logprob: -7.3733320236206055
    9. 'played' → logprob: -7.3733320236206055
    10. '   ' → logprob: -7.7483320236206055

Token 959: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6401301026344299
    2. '=' → logprob: -0.7651301026344299
    3. '_list' → logprob: -5.390130043029785
    4. '_' → logprob: -6.640130043029785
    5. 'a' → logprob: -6.640130043029785
    6. '_lst' → logprob: -9.765130043029785
    7. '_a' → logprob: -9.890130043029785
    8. '=list' → logprob: -10.140130043029785
    9. '_=' → logprob: -10.265130043029785
    10. '_chars' → logprob: -10.515130043029785

Token 960: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.60414821645827e-06
    2. '[list' → logprob: -12.375004768371582
    3. ' list' → logprob: -15.125004768371582
    4. 'a' → logprob: -17.125003814697266
    5. '[' → logprob: -18.375003814697266
    6. '[a' → logprob: -18.750003814697266
    7. '["' → logprob: -19.125003814697266
    8. '(list' → logprob: -19.375003814697266
    9. '['' → logprob: -19.875003814697266
    10. '=list' → logprob: -20.875003814697266

Token 961: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.180258191714529e-06
    2. 'a' → logprob: -11.750008583068848
    3. '(' → logprob: -15.125008583068848
    4. '```' → logprob: -18.50000762939453
    5. '(
' → logprob: -18.75000762939453
    6. ' (' → logprob: -18.75000762939453
    7. '[a' → logprob: -19.12500762939453
    8. '((' → logprob: -20.00000762939453
    9. ' a' → logprob: -20.12500762939453
    10. '(an' → logprob: -20.62500762939453

Token 962: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')
' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. ' )' → logprob: -15.250006675720215
    5. ')
' → logprob: -17.37500762939453
    6. ')a' → logprob: -17.37500762939453
    7. '[' → logprob: -17.50000762939453
    8. ')

' → logprob: -17.62500762939453
    9. 'a' → logprob: -17.87500762939453
    10. ')`' → logprob: -18.00000762939453

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0333716906607151
    2. 'for' → logprob: -4.033371925354004
    3. ' for' → logprob: -4.408371925354004
    4. '	for' → logprob: -6.908371925354004
    5. '
' → logprob: -7.033371925354004
    6. '    
' → logprob: -7.158371925354004
    7. '```' → logprob: -8.783371925354004
    8. '\n' → logprob: -10.408371925354004
    9. '  
' → logprob: -10.908371925354004
    10. ' 
' → logprob: -11.283371925354004

Token 964: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009275498799979687
    2. 'used' → logprob: -5.009275436401367
    3. 'visited' → logprob: -7.009275436401367
    4. '   ' → logprob: -7.384275436401367
    5. 'marked' → logprob: -7.759275436401367
    6. 'b' → logprob: -8.509275436401367
    7. 'seen' → logprob: -8.634275436401367
    8. 'played' → logprob: -9.134275436401367
    9. 'i' → logprob: -10.884275436401367
    10. 'checked' → logprob: -10.884275436401367

Token 965: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023375799879431725
    2. 'i' → logprob: -3.7733757495880127
    3. ' range' → logprob: -10.398375511169434
    4. ' _' → logprob: -11.023375511169434
    5. ' idx' → logprob: -11.023375511169434
    6. '   ' → logprob: -11.148375511169434
    7. ' ' → logprob: -11.398375511169434
    8. ' index' → logprob: -11.398375511169434
    9. ' j' → logprob: -12.023375511169434
    10. 'range' → logprob: -12.648375511169434

Token 966: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006739526987075806
    2. 'in' → logprob: -5.006739616394043
    3. ' ' → logprob: -11.131739616394043
    4. ' i' → logprob: -13.131739616394043
    5. 'import' → logprob: -13.756739616394043
    6. '   ' → logprob: -13.756739616394043
    7. 'range' → logprob: -13.881739616394043
    8. '	in' → logprob: -13.881739616394043
    9. '  ' → logprob: -14.131739616394043
    10. '    ' → logprob: -14.381739616394043

Token 967: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00317783304490149
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -17.003177642822266
    4. 'r' → logprob: -17.378177642822266
    5. ' ' → logprob: -17.628177642822266
    6. '   ' → logprob: -18.253177642822266
    7. '	range' → logprob: -18.253177642822266
    8. 'k' → logprob: -18.753177642822266
    9. 'rang' → logprob: -18.878177642822266
    10. 'ra' → logprob: -19.253177642822266

Token 968: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.015291625633835793
    2. '(n' → logprob: -4.640291690826416
    3. 'k' → logprob: -5.515291690826416
    4. '(' → logprob: -6.640291690826416
    5. ' (' → logprob: -10.015291213989258
    6. '(i' → logprob: -10.015291213989258
    7. 'n' → logprob: -10.140291213989258
    8. ' k' → logprob: -10.515291213989258
    9. '(len' → logprob: -11.390291213989258
    10. ')' → logprob: -11.890291213989258

Token 969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. ',n' → logprob: -9.625072479248047
    3. ',len' → logprob: -12.500072479248047
    4. ' ,' → logprob: -13.000072479248047
    5. ',
' → logprob: -16.625072479248047
    6. '   ' → logprob: -17.875072479248047
    7. 'n' → logprob: -18.000072479248047
    8. '‌,' → logprob: -18.250072479248047
    9. ')' → logprob: -18.875072479248047
    10. ',)' → logprob: -19.375072479248047

Token 970: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.7697225252486533e-06
    2. ' n' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.500003814697266
    4. 'len' → logprob: -20.000003814697266
    5. '	n' → logprob: -20.250003814697266
    6. ')n' → logprob: -22.250003814697266
    7. '_n' → logprob: -23.750003814697266
    8. '```' → logprob: -24.375003814697266
    9. ')' → logprob: -24.750003814697266
    10. '[n' → logprob: -25.000003814697266

Token 971: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25207677483558655
    2. '):
' → logprob: -1.5020767450332642
    3. ':' → logprob: -9.002077102661133
    4. '   ' → logprob: -11.877077102661133
    5. '):
' → logprob: -11.877077102661133
    6. ',' → logprob: -12.627077102661133
    7. ' ):' → logprob: -12.752077102661133
    8. ')' → logprob: -13.002077102661133
    9. '):

' → logprob: -14.127077102661133
    10. ' ):
' → logprob: -14.252077102661133

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.957014556974173e-05
    2. ' if' → logprob: -10.250069618225098
    3. '   ' → logprob: -10.625069618225098
    4. '	' → logprob: -12.500069618225098
    5. '	   ' → logprob: -12.500069618225098
    6. '```' → logprob: -14.375069618225098
    7. 'if' → logprob: -14.625069618225098
    8. '	if' → logprob: -15.000069618225098
    9. '           ' → logprob: -15.000069618225098
    10. '    ' → logprob: -16.00006866455078

Token 973: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.060434311628341675
    2. '       ' → logprob: -3.310434341430664
    3. ' if' → logprob: -3.810434341430664
    4. '	if' → logprob: -12.310434341430664
    5. '#' (adapté à ' #') → logprob: -14.435434341430664
    6. '   ' → logprob: -15.560434341430664
    7. '	' → logprob: -16.310434341430664
    8. '           ' → logprob: -16.935434341430664
    9. ' ' → logprob: -17.060434341430664
    10. 'If' → logprob: -17.060434341430664

Token 974: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.15441757265944e-05
    2. ' if' → logprob: -10.500031471252441
    3. '       ' → logprob: -12.500031471252441
    4. '   ' → logprob: -15.500031471252441
    5. '	if' → logprob: -18.500032424926758
    6. '           ' → logprob: -18.500032424926758
    7. 'If' → logprob: -20.000032424926758
    8. '#' → logprob: -21.500032424926758
    9. ' ' → logprob: -22.000032424926758
    10. '     ' → logprob: -22.250032424926758

Token 975: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011743901995941997
    2. ' a' → logprob: -6.751174449920654
    3. '   ' → logprob: -12.626173973083496
    4. '(a' → logprob: -15.001173973083496
    5. '	a' → logprob: -15.126173973083496
    6. '_a' → logprob: -16.751174926757812
    7. '    ' → logprob: -16.751174926757812
    8. ''a' → logprob: -17.001174926757812
    9. '#a' → logprob: -17.376174926757812
    10. '[a' → logprob: -17.626174926757812

Token 976: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04901980981230736
    2. 'i' → logprob: -3.0490198135375977
    3. ' a' → logprob: -7.924019813537598
    4. ' i' → logprob: -10.049019813537598
    5. '   ' → logprob: -11.424019813537598
    6. '(a' → logprob: -12.424019813537598
    7. '(i' → logprob: -12.424019813537598
    8. '[i' → logprob: -12.924019813537598
    9. '#' → logprob: -14.049019813537598
    10. '```' → logprob: -14.174019813537598

Token 977: ' interv' (ID: 37413)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5567489862442017
    2. 'indices' → logprob: -2.306748867034912
    3. '   ' → logprob: -2.931748867034912
    4. ' i' → logprob: -3.306748867034912
    5. 'positions' → logprob: -3.306748867034912
    6. 'éc' → logprob: -3.681748867034912
    7. 'avant' → logprob: -4.181748867034912
    8. 'l' → logprob: -4.181748867034912
    9. '-distance' → logprob: -4.306748867034912
    10. ']' → logprob: -4.431748867034912

Token 978: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7740356922149658
    2. 'ale' → logprob: -1.2740356922149658
    3. 'alle' → logprob: -1.3990356922149658
    4. 'alne' → logprob: -6.274035453796387
    5. '   ' → logprob: -6.399035453796387
    6. '[' → logprob: -6.649035453796387
    7. 'alve' → logprob: -7.461535453796387
    8. '```' → logprob: -7.711535453796387
    9. '>' → logprob: -7.961535453796387
    10. 'alent' → logprob: -7.961535453796387

Token 979: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6523273587226868
    2. 'a' → logprob: -1.402327299118042
    3. ' a' → logprob: -1.777327299118042
    4. ' la' → logprob: -3.902327299118042
    5. 'la' → logprob: -4.277327537536621
    6. '   ' → logprob: -4.402327537536621
    7. 'le' → logprob: -5.402327537536621
    8. 'l' → logprob: -6.652327537536621
    9. ' ,' → logprob: -6.777327537536621
    10. 'i' → logprob: -7.027327537536621

Token 980: ''éc' (ID: 91629)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.10749761015176773
    2. 'i' → logprob: -2.4824976921081543
    3. 'a' → logprob: -4.607497692108154
    4. '[i' → logprob: -6.107497692108154
    5. 'distance' → logprob: -6.232497692108154
    6. 'istant' → logprob: -6.607497692108154
    7. 'ist' → logprob: -7.357497692108154
    8. 'e' → logprob: -7.607497692108154
    9. ''i' → logprob: -8.607497215270996
    10. 'indice' → logprob: -8.607497215270996

Token 981: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.01857280731201172
    2. 'ance' → logprob: -5.143572807312012
    3. 'a' → logprob: -5.393572807312012
    4. 't' → logprob: -5.643572807312012
    5. 'ar' → logprob: -7.143572807312012
    6. 'arte' → logprob: -7.143572807312012
    7. 'ace' → logprob: -7.893572807312012
    8. '   ' → logprob: -8.518572807312012
    9. '```' → logprob: -8.643572807312012
    10. 'at' → logprob: -8.893572807312012

Token 982: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5566675662994385
    2. ',' → logprob: -1.0566675662994385
    3. ' a' → logprob: -2.8066675662994385
    4. 'et' → logprob: -5.181667327880859
    5. '   ' → logprob: -6.056667327880859
    6. 'le' → logprob: -6.306667327880859
    7. ' et' → logprob: -6.431667327880859
    8. '(a' → logprob: -6.681667327880859
    9. 'la' → logprob: -6.806667327880859
    10. ' la' → logprob: -6.931667327880859

Token 983: ' retrouve' (ID: 70617)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14843323826789856
    2. ' a' → logprob: -2.148433208465576
    3. ' have' → logprob: -4.148433208465576
    4. 'have' → logprob: -6.148433208465576
    5. '[a' → logprob: -7.648433208465576
    6. 'i' → logprob: -7.648433208465576
    7. 'e' → logprob: -8.273433685302734
    8. ' trouve' → logprob: -8.398433685302734
    9. ''a' → logprob: -8.398433685302734
    10. '(a' → logprob: -8.898433685302734

Token 984: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008058178937062621
    2. ' a' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.125805854797363
    4. ' ' → logprob: -16.375804901123047
    5. 'the' → logprob: -16.625804901123047
    6. '(a' → logprob: -16.750804901123047
    7. ''a' → logprob: -16.875804901123047
    8. ' the' → logprob: -17.000804901123047
    9. 'la' → logprob: -17.750804901123047
    10. '[a' → logprob: -18.000804901123047

Token 985: ' même' (ID: 9679)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.049673955887556076
    2. 'm' → logprob: -3.4246740341186523
    3. ' même' → logprob: -4.174674034118652
    4. 'same' → logprob: -8.549674034118652
    5. 'even' → logprob: -8.924674034118652
    6. 'Même' → logprob: -9.549674034118652
    7. ' a' → logprob: -10.299674034118652
    8. 'i' → logprob: -11.174674034118652
    9. '   ' → logprob: -11.299674034118652
    10. '```' → logprob: -11.424674034118652

Token 986: ' coup' (ID: 25465)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4542781114578247
    2. 'c' → logprob: -1.3292781114578247
    3. ' a' → logprob: -2.954277992248535
    4. ' coup' → logprob: -3.704277992248535
    5. '   ' → logprob: -4.954277992248535
    6. 'move' → logprob: -5.704277992248535
    7. 'cou' → logprob: -5.704277992248535
    8. ' ' → logprob: -5.954277992248535
    9. ' move' → logprob: -6.829277992248535
    10. 'token' → logprob: -6.954277992248535

Token 987: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33075231313705444
    2. ' ==' → logprob: -2.330752372741699
    3. 'a' → logprob: -3.205752372741699
    4. '==' → logprob: -3.455752372741699
    5. 'and' → logprob: -3.580752372741699
    6. '       ' → logprob: -3.830752372741699
    7. ' a' → logprob: -4.080752372741699
    8. ' et' → logprob: -4.205752372741699
    9. 'et' → logprob: -4.330752372741699
    10. '[a' → logprob: -5.330752372741699

Token 988: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8770535588264465
    2. ' if' → logprob: -0.8770535588264465
    3. '       ' → logprob: -2.1270534992218018
    4. '           ' → logprob: -3.2520534992218018
    5. '   ' → logprob: -5.752053737640381
    6. '	   ' → logprob: -6.127053737640381
    7. '	       ' → logprob: -6.627053737640381
    8. '	if' → logprob: -6.877053737640381
    9. '		' → logprob: -7.877053737640381
    10. '	' → logprob: -7.877053737640381

Token 989: ' ann' (ID: 3041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1239365339279175
    2. ' if' → logprob: -1.2489365339279175
    3. '       ' → logprob: -1.3739365339279175
    4. '    ' → logprob: -2.998936653137207
    5. '           ' → logprob: -3.873936653137207
    6. '   ' → logprob: -4.123936653137207
    7. ' continue' → logprob: -4.373936653137207
    8. '#' → logprob: -4.623936653137207
    9. '        ' → logprob: -5.123936653137207
    10. ' #' → logprob: -5.998936653137207

Token 990: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -2.856408536899835e-05
    2. 'uler' → logprob: -11.125028610229492
    3. 'ul' → logprob: -11.750028610229492
    4. 'ulle' → logprob: -13.000028610229492
    5. 'ulé' → logprob: -13.000028610229492
    6. 'ules' → logprob: -15.125028610229492
    7. '[i' → logprob: -15.875028610229492
    8. 'u' → logprob: -15.875028610229492
    9. 'ote' → logprob: -16.250028610229492
    10. '[' → logprob: -16.500028610229492

Token 991: ' le' (ID: 505)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.425216555595398
    2. ' the' → logprob: -1.550216555595398
    3. '   ' → logprob: -2.4252166748046875
    4. ' le' → logprob: -2.6752166748046875
    5. 'le' → logprob: -2.8002166748046875
    6. '       ' → logprob: -3.0502166748046875
    7. 'ans' → logprob: -3.0502166748046875
    8. '    ' → logprob: -3.1752166748046875
    9. ' la' → logprob: -3.1752166748046875
    10. '           ' → logprob: -3.1752166748046875

Token 992: ' gain' (ID: 11621)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gain' → logprob: -0.4067564308643341
    2. 'score' → logprob: -1.1567564010620117
    3. ' gain' → logprob: -5.156756401062012
    4. 'if' → logprob: -5.156756401062012
    5. 'g' → logprob: -5.531756401062012
    6. 'point' → logprob: -6.906756401062012
    7. ' score' → logprob: -7.031756401062012
    8. '           ' → logprob: -7.406756401062012
    9. '   ' → logprob: -7.781756401062012
    10. ' if' → logprob: -7.906756401062012

Token 993: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005983070004731417
    2. ' =' → logprob: -6.630982875823975
    3. ' if' → logprob: -6.755982875823975
    4. ':' → logprob: -6.880982875823975
    5. '           ' → logprob: -7.255982875823975
    6. ',' → logprob: -7.880982875823975
    7. '.' → logprob: -8.130983352661133
    8. '[' → logprob: -8.380983352661133
    9. '=' → logprob: -9.130983352661133
    10. '        ' → logprob: -9.255983352661133

Token 994: ' second' (ID: 3099)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8075922131538391
    2. 'i' → logprob: -0.8075922131538391
    3. 'c' → logprob: -2.8075921535491943
    4. 'second' → logprob: -3.6825921535491943
    5. ' i' → logprob: -4.432592391967773
    6. ' coup' → logprob: -6.057592391967773
    7. 'de' → logprob: -6.182592391967773
    8. '[i' → logprob: -6.682592391967773
    9. ' a' → logprob: -7.057592391967773
    10. ' second' → logprob: -7.182592391967773

Token 995: ' coup' (ID: 25465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007954503409564495
    2. ':' → logprob: -5.8829545974731445
    3. ' if' → logprob: -6.3829545974731445
    4. ' =' → logprob: -7.0079545974731445
    5. ' and' → logprob: -7.8829545974731445
    6. '           ' → logprob: -8.007954597473145
    7. '=' → logprob: -8.382954597473145
    8. ',' → logprob: -8.632954597473145
    9. '.' → logprob: -8.632954597473145
    10. 'if' → logprob: -8.632954597473145

Token 996: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007767393719404936
    2. ' and' → logprob: -5.632767200469971
    3. ':' → logprob: -5.757767200469971
    4. '           ' → logprob: -8.007767677307129
    5. ',' → logprob: -8.257767677307129
    6. ':
' → logprob: -9.132767677307129
    7. ' =' → logprob: -9.882767677307129
    8. '   ' → logprob: -10.132767677307129
    9. 'and' → logprob: -10.257767677307129
    10. ' if' → logprob: -10.257767677307129

Token 997: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023631771910004318
    2. '   ' → logprob: -8.875236511230469
    3. '	' → logprob: -9.750236511230469
    4. '	   ' → logprob: -11.500236511230469
    5. ':' → logprob: -12.000236511230469
    6. ' if' → logprob: -12.125236511230469
    7. ',' → logprob: -12.125236511230469
    8. '           ' → logprob: -12.250236511230469
    9. ' and' → logprob: -13.375236511230469
    10. '    ' → logprob: -13.375236511230469

Token 998: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07085216790437698
    2. '       ' → logprob: -3.070852279663086
    3. ' if' → logprob: -3.820852279663086
    4. '   ' → logprob: -9.570852279663086
    5. '	if' → logprob: -10.445852279663086
    6. '	' → logprob: -11.945852279663086
    7. '	   ' → logprob: -12.820852279663086
    8. '           ' → logprob: -14.445852279663086
    9. ' ' → logprob: -14.945852279663086
    10. '    ' → logprob: -15.070852279663086

Token 999: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016037534922361374
    2. ' a' → logprob: -4.141037464141846
    3. '   ' → logprob: -12.766037940979004
    4. '	a' → logprob: -14.766037940979004
    5. '(a' → logprob: -17.141036987304688
    6. '    ' → logprob: -17.516036987304688
    7. '_a' → logprob: -17.891036987304688
    8. ' ' → logprob: -18.516036987304688
    9. '[a' → logprob: -18.641036987304688
    10. ''a' → logprob: -18.891036987304688

Token 1000: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.75000286102295
    3. 'i' → logprob: -14.00000286102295
    4. ' [' → logprob: -14.87500286102295
    5. '[
' → logprob: -15.37500286102295
    6. '```' → logprob: -15.50000286102295
    7. '[a' → logprob: -15.62500286102295
    8. '   ' → logprob: -16.125003814697266
    9. '[j' → logprob: -16.500003814697266
    10. '[k' → logprob: -16.625003814697266

Token 1001: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04368181526660919
    2. ']==' → logprob: -3.1686818599700928
    3. '==' → logprob: -7.543681621551514
    4. ' ]' → logprob: -10.043682098388672
    5. '[' → logprob: -10.043682098388672
    6. ' ==' → logprob: -10.418682098388672
    7. '[i' → logprob: -11.168682098388672
    8. '][' → logprob: -12.043682098388672
    9. ']=' → logprob: -12.418682098388672
    10. '']' → logprob: -13.043682098388672

Token 1002: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22625388205051422
    2. ' ==' → logprob: -1.601253867149353
    3. '=' → logprob: -7.476253986358643
    4. '[' → logprob: -8.476253509521484
    5. ']==' → logprob: -10.851253509521484
    6. '===' → logprob: -10.976253509521484
    7. 'a' → logprob: -11.851253509521484
    8. '==
' → logprob: -11.976253509521484
    9. ' =' → logprob: -12.351253509521484
    10. ')==' → logprob: -12.351253509521484

Token 1003: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.623244553338736e-05
    2. ' a' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.50006675720215
    4. '#a' → logprob: -18.25006675720215
    5. '	a' → logprob: -18.50006675720215
    6. '_a' → logprob: -18.87506675720215
    7. ''a' → logprob: -19.25006675720215
    8. '[a' → logprob: -19.87506675720215
    9. ' ' → logprob: -20.37506675720215
    10. '(a' → logprob: -20.62506675720215

Token 1004: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -12.87500286102295
    3. 'a' → logprob: -16.000001907348633
    4. ' [' → logprob: -16.875001907348633
    5. '[' → logprob: -17.250001907348633
    6. '[
' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '
' → logprob: -18.500001907348633
    9. '[a' → logprob: -18.625001907348633
    10. '```' → logprob: -19.125001907348633

Token 1005: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043984793592244387
    2. 'i' → logprob: -8.125439643859863
    3. '-i' → logprob: -9.875439643859863
    4. '-' → logprob: -9.875439643859863
    5. ' -' → logprob: -10.625439643859863
    6. '   ' → logprob: -12.000439643859863
    7. '[' → logprob: -12.625439643859863
    8. '[-' → logprob: -12.875439643859863
    9. '(i' → logprob: -13.000439643859863
    10. '[
' → logprob: -14.625439643859863

Token 1006: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.36574100604048e-06
    2. ' k' → logprob: -12.375004768371582
    3. '	k' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '{k' → logprob: -19.500003814697266
    6. ' ' → logprob: -21.000003814697266
    7. ' к' → logprob: -21.625003814697266
    8. '"k' → logprob: -21.750003814697266
    9. '```' → logprob: -21.750003814697266
    10. ']' → logprob: -22.250003814697266

Token 1007: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.42993611097335815
    2. ']:' → logprob: -1.304936170578003
    3. ']' → logprob: -2.554936170578003
    4. ']:
' → logprob: -8.179936408996582
    5. ' ]' → logprob: -8.429936408996582
    6. ']:

' → logprob: -10.304936408996582
    7. ']==' → logprob: -10.929936408996582
    8. '"]:
' → logprob: -12.929936408996582
    9. '']:
' → logprob: -13.679936408996582
    10. ']:


' → logprob: -13.804936408996582

Token 1008: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.133603572845459
    2. ' and' → logprob: -1.133603572845459
    3. '       ' → logprob: -1.258603572845459
    4. '           ' → logprob: -3.633603572845459
    5. ':
' → logprob: -3.758603572845459
    6. 'and' → logprob: -5.133603572845459
    7. '=' → logprob: -5.258603572845459
    8. ' :' → logprob: -5.508603572845459
    9. ' =' → logprob: -5.633603572845459
    10. ' :
' → logprob: -7.883603572845459

Token 1009: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.740315318107605
    2. 'ans' → logprob: -0.865315318107605
    3. '       ' → logprob: -2.4903154373168945
    4. '           ' → logprob: -4.1153154373168945
    5. 'a' → logprob: -6.7403154373168945
    6. '#' → logprob: -7.6153154373168945
    7. '   ' → logprob: -8.240315437316895
    8. ' if' → logprob: -8.365315437316895
    9. 'c' → logprob: -8.740315437316895
    10. ' ans' → logprob: -9.365315437316895

Token 1010: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0037034007254987955
    2. ' a' → logprob: -5.628703594207764
    3. '   ' → logprob: -9.628703117370605
    4. '           ' → logprob: -11.003703117370605
    5. 'i' → logprob: -11.753703117370605
    6. '       ' → logprob: -12.628703117370605
    7. '                   ' → logprob: -13.253703117370605
    8. '    ' → logprob: -13.753703117370605
    9. 'ans' → logprob: -14.003703117370605
    10. '               ' → logprob: -14.003703117370605

Token 1011: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.1424973713001236e-05
    2. '[' → logprob: -11.000031471252441
    3. ' [' → logprob: -12.375031471252441
    4. '   ' → logprob: -12.375031471252441
    5. '```' → logprob: -13.500031471252441
    6. 'i' → logprob: -13.750031471252441
    7. '       ' → logprob: -14.125031471252441
    8. '           ' → logprob: -14.750031471252441
    9. '==' → logprob: -14.875031471252441
    10. '[a' → logprob: -15.000031471252441

Token 1012: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18361152708530426
    2. ']==' → logprob: -2.0586116313934326
    3. '==' → logprob: -3.5586116313934326
    4. ' ==' → logprob: -5.1836113929748535
    5. '[i' → logprob: -6.0586113929748535
    6. ']=='' → logprob: -6.9336113929748535
    7. ' ]' → logprob: -7.3086113929748535
    8. '[' → logprob: -7.3086113929748535
    9. ']=="' → logprob: -8.058611869812012
    10. ']!=' → logprob: -8.808611869812012

Token 1013: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7027860283851624
    2. '!=' → logprob: -0.8277860283851624
    3. ' ==' → logprob: -3.5777859687805176
    4. 'in' → logprob: -4.077785968780518
    5. ' !=' → logprob: -4.202785968780518
    6. ' in' → logprob: -5.077785968780518
    7. '=='' → logprob: -7.702785968780518
    8. '=="' → logprob: -8.202786445617676
    9. '!='' → logprob: -8.827786445617676
    10. 'is' → logprob: -9.265286445617676

Token 1014: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06262606382369995
    2. ''r' → logprob: -2.8126261234283447
    3. ''p' → logprob: -7.687625885009766
    4. 'r' → logprob: -8.562625885009766
    5. ''' → logprob: -13.187625885009766
    6. ''s' → logprob: -13.312625885009766
    7. ' '' → logprob: -13.562625885009766
    8. ' "' → logprob: -13.562625885009766
    9. '   ' → logprob: -14.562625885009766
    10. '`' → logprob: -14.937625885009766

Token 1015: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008289250545203686
    2. 'p' → logprob: -7.125828742980957
    3. 's' → logprob: -11.625828742980957
    4. '"' → logprob: -12.125828742980957
    5. ''' → logprob: -12.375828742980957
    6. ''r' → logprob: -12.750828742980957
    7. ''p' → logprob: -12.750828742980957
    8. ' r' → logprob: -16.375829696655273
    9. '_r' → logprob: -16.625829696655273
    10. '`' → logprob: -17.125829696655273

Token 1016: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.17182791233062744
    2. '):
' → logprob: -2.921827793121338
    3. '"):
' → logprob: -3.421827793121338
    4. '"' → logprob: -3.671827793121338
    5. ':
' → logprob: -4.046827793121338
    6. '           ' → logprob: -4.171827793121338
    7. ' "' → logprob: -5.796827793121338
    8. '":' → logprob: -5.796827793121338
    9. ':' → logprob: -5.921827793121338
    10. '       ' → logprob: -6.671827793121338

Token 1017: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5442363023757935
    2. '-=' → logprob: -1.2942363023757935
    3. 'ans' → logprob: -2.169236183166504
    4. ' ans' → logprob: -3.919236183166504
    5. ' -=' → logprob: -5.044236183166504
    6. '-' → logprob: -6.169236183166504
    7. '               ' → logprob: -6.294236183166504
    8. '=' → logprob: -7.794236183166504
    9. '	ans' → logprob: -8.294236183166504
    10. '```' → logprob: -8.544236183166504

Token 1018: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.009287540800869465
    2. ' ans' → logprob: -4.759287357330322
    3. '           ' → logprob: -7.384287357330322
    4. '	ans' → logprob: -10.38428783416748
    5. '               ' → logprob: -11.00928783416748
    6. '(ans' → logprob: -12.75928783416748
    7. '                   ' → logprob: -14.25928783416748
    8. '```' → logprob: -15.25928783416748
    9. '_ans' → logprob: -15.63428783416748
    10. 'r' → logprob: -16.009286880493164

Token 1019: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.006743674166500568
    2. ' -=' → logprob: -5.006743907928467
    3. '-' → logprob: -10.506743431091309
    4. '   ' → logprob: -14.256743431091309
    5. ' -' → logprob: -15.381743431091309
    6. '+=' → logprob: -17.506744384765625
    7. '=' → logprob: -18.506744384765625
    8. '           ' → logprob: -19.631744384765625
    9. '```' → logprob: -19.881744384765625
    10. '    ' → logprob: -20.006744384765625

Token 1020: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. ' r' → logprob: -17.75
    3. '	r' → logprob: -22.375
    4. '_r' → logprob: -23.5
    5. '­r' → logprob: -24.25
    6. '           ' → logprob: -25.5
    7. '$r' → logprob: -25.5
    8. 's' → logprob: -25.875
    9. '   ' → logprob: -26.625
    10. '+r' → logprob: -26.75

Token 1021: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7325316071510315
    2. '<|end|>' → logprob: -0.7325316071510315
    3. 'elif' → logprob: -3.7325315475463867
    4. '<|end|>' → logprob: -4.482531547546387
    5. ' elif' → logprob: -6.732531547546387
    6. '       ' → logprob: -6.982531547546387
    7. '
' → logprob: -7.857531547546387
    8. '            
' → logprob: -7.982531547546387
    9. '               ' → logprob: -9.107531547546387
    10. ')' → logprob: -9.357531547546387

Token 1022: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04498855397105217
    2. 'elif' → logprob: -3.9199886322021484
    3. '<|end|>' → logprob: -3.9199886322021484
    4. '       ' → logprob: -6.294988632202148
    5. '            
' → logprob: -7.044988632202148
    6. '               ' → logprob: -7.294988632202148
    7. ' elif' → logprob: -8.294988632202148
    8. '
' → logprob: -9.044988632202148
    9. '<|end|>' → logprob: -9.044988632202148
    10. '```' → logprob: -9.294988632202148

Token 1023: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3587283492088318
    2. 'elif' (adapté à ' elif') → logprob: -1.2337284088134766
    3. ' elif' → logprob: -5.108728408813477
    4. '       ' → logprob: -5.483728408813477
    5. '	elif' → logprob: -11.233728408813477
    6. '		' → logprob: -12.483728408813477
    7. '   ' → logprob: -12.858728408813477
    8. '               ' → logprob: -13.108728408813477
    9. '            
' → logprob: -13.108728408813477
    10. '<|end|>' → logprob: -13.108728408813477

Token 1024: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3880910873413086
    2. ' a' → logprob: -1.1380910873413086
    3. 's' → logprob: -7.388091087341309
    4. '           ' → logprob: -8.013091087341309
    5. ' s' → logprob: -8.638091087341309
    6. '               ' → logprob: -10.013091087341309
    7. '"a' → logprob: -11.013091087341309
    8. '	a' → logprob: -11.638091087341309
    9. '                   ' → logprob: -12.388091087341309
    10. '"' → logprob: -12.388091087341309

Token 1025: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007966428529471159
    2. ' ==' → logprob: -7.875796794891357
    3. '[' → logprob: -9.1257963180542
    4. ' [' → logprob: -9.2507963180542
    5. 'i' → logprob: -9.8757963180542
    6. ' i' → logprob: -10.2507963180542
    7. 'a' → logprob: -10.2507963180542
    8. '==' → logprob: -10.5007963180542
    9. '"' → logprob: -10.8757963180542
    10. 's' → logprob: -11.5007963180542

Token 1026: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759605169296265
    2. '==' → logprob: -0.8259605169296265
    3. '           ' → logprob: -11.200960159301758
    4. ']==' → logprob: -12.950960159301758
    5. '=="' → logprob: -13.575960159301758
    6. '=' → logprob: -13.950960159301758
    7. '=='' → logprob: -14.075960159301758
    8. ')==' → logprob: -15.075960159301758
    9. ']' → logprob: -15.325960159301758
    10. '===' → logprob: -15.450960159301758

Token 1027: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1798100769519806
    2. '==' → logprob: -1.8048100471496582
    3. '=="' → logprob: -9.929810523986816
    4. ' =="' → logprob: -11.804810523986816
    5. '=' → logprob: -12.179810523986816
    6. ' =' → logprob: -13.929810523986816
    7. '"' → logprob: -14.554810523986816
    8. '=='' → logprob: -14.554810523986816
    9. '           ' → logprob: -15.179810523986816
    10. ' ' → logprob: -15.304810523986816

Token 1028: ' "' (ID: 392)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.031281162053346634
    2. 's' → logprob: -4.031280994415283
    3. ' "' → logprob: -5.031280994415283
    4. ''s' → logprob: -5.781280994415283
    5. '"' → logprob: -6.156280994415283
    6. ' s' → logprob: -6.656280994415283
    7. '`s' → logprob: -11.531281471252441
    8. ' ' → logprob: -12.281281471252441
    9. ' ' → logprob: -12.656281471252441
    10. '	s' → logprob: -13.656281471252441

Token 1029: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.2127087504486553e-05
    2. ''s' → logprob: -11.000021934509277
    3. '"s' → logprob: -12.250021934509277
    4. ' s' → logprob: -14.875021934509277
    5. '"' → logprob: -16.250022888183594
    6. '`s' → logprob: -17.000022888183594
    7. ''' → logprob: -18.750022888183594
    8. 'p' → logprob: -19.250022888183594
    9. ' ' → logprob: -19.250022888183594
    10. 'r' → logprob: -19.500022888183594

Token 1030: '":
' (ID: 9213)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09023785591125488
    2. ':' → logprob: -2.715237855911255
    3. ':
' → logprob: -3.965237855911255
    4. '<|end|>' → logprob: -7.715237617492676
    5. '           ' → logprob: -8.215237617492676
    6. '              ' → logprob: -8.965237617492676
    7. '            ' → logprob: -10.340237617492676
    8. '                ' → logprob: -10.465237617492676
    9. '	           ' → logprob: -10.465237617492676
    10. '<|end|>' → logprob: -10.465237617492676

Token 1031: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004825145471841097
    2. 's' → logprob: -5.629825115203857
    3. ' s' → logprob: -6.754825115203857
    4. '           ' → logprob: -10.629825592041016
    5. '-' → logprob: -11.879825592041016
    6. '			' → logprob: -12.504825592041016
    7. '              ' → logprob: -12.629825592041016
    8. '	           ' → logprob: -12.629825592041016
    9. '(s' → logprob: -12.879825592041016
    10. '<s' → logprob: -13.129825592041016

Token 1032: ' ans' (ID: 3345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889143377542496
    2. ' s' → logprob: -2.5788915157318115
    3. '           ' → logprob: -13.95389175415039
    4. '               ' → logprob: -14.32889175415039
    5. '                   ' → logprob: -16.57889175415039
    6. '	s' → logprob: -16.95389175415039
    7. '_s' → logprob: -18.32889175415039
    8. '   ' → logprob: -18.82889175415039
    9. '(s' → logprob: -19.20389175415039
    10. '
' → logprob: -19.20389175415039

Token 1033: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.004557696171104908
    2. ' -' → logprob: -6.0045576095581055
    3. '-=' → logprob: -6.7545576095581055
    4. '-' → logprob: -7.0045576095581055
    5. ' ' → logprob: -13.004557609558105
    6. '    ' → logprob: -13.379557609558105
    7. '   ' → logprob: -14.129557609558105
    8. '           ' → logprob: -14.754557609558105
    9. '        ' → logprob: -14.879557609558105
    10. '  ' → logprob: -15.629557609558105

Token 1034: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750484973192215
    2. ' s' → logprob: -3.5297505855560303
    3. '	s' → logprob: -18.77975082397461
    4. '_s' → logprob: -19.27975082397461
    5. '   ' → logprob: -20.40475082397461
    6. ' ' → logprob: -21.27975082397461
    7. '(s' → logprob: -21.77975082397461
    8. '`s' → logprob: -22.27975082397461
    9. '    ' → logprob: -22.40475082397461
    10. '{s' → logprob: -22.52975082397461

Token 1035: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.027225754223764e-05
    2. 'else' → logprob: -10.750060081481934
    3. '		' → logprob: -11.250060081481934
    4. '<|end|>' → logprob: -11.250060081481934
    5. 'elif' → logprob: -12.875060081481934
    6. ' else' → logprob: -12.875060081481934
    7. '          ' → logprob: -13.000060081481934
    8. '               ' → logprob: -13.375060081481934
    9. '```' → logprob: -13.625060081481934
    10. '<|end|>' → logprob: -14.750060081481934

Token 1036: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.315936429426074e-05
    2. 'else' → logprob: -9.625082969665527
    3. '		' → logprob: -11.625082969665527
    4. 'elif' → logprob: -12.250082969665527
    5. ' else' → logprob: -13.375082969665527
    6. '               ' → logprob: -14.250082969665527
    7. '```' → logprob: -14.875082969665527
    8. '          ' → logprob: -15.250082969665527
    9. ' elif' → logprob: -16.250083923339844
    10. '	       ' → logprob: -16.250083923339844

Token 1037: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47493159770965576
    2. 'else' (adapté à ' else') → logprob: -0.9749315977096558
    3. ' else' → logprob: -7.099931716918945
    4. '		' → logprob: -11.224931716918945
    5. 'elif' → logprob: -11.224931716918945
    6. '	else' → logprob: -14.099931716918945
    7. '               ' → logprob: -14.724931716918945
    8. '```' → logprob: -14.974931716918945
    9. '	       ' → logprob: -15.099931716918945
    10. ' ' → logprob: -15.349931716918945

Token 1038: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6111568808555603
    2. '               ' → logprob: -1.486156940460205
    3. ':
' → logprob: -1.486156940460205
    4. '           ' → logprob: -5.486156940460205
    5. '              ' → logprob: -8.486156463623047
    6. ' :
' → logprob: -9.111156463623047
    7. ' :' → logprob: -9.486156463623047
    8. ':
' → logprob: -9.611156463623047
    9. '                   ' → logprob: -10.486156463623047
    10. '          ' → logprob: -10.611156463623047

Token 1039: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009930337546393275
    2. ' ans' → logprob: -7.125993251800537
    3. 'ans' → logprob: -8.875992774963379
    4. '           ' → logprob: -10.500992774963379
    5. '(ans' → logprob: -11.625992774963379
    6. '              ' → logprob: -12.000992774963379
    7. '	ans' → logprob: -13.000992774963379
    8. '   ' → logprob: -14.000992774963379
    9. '                   ' → logprob: -14.250992774963379
    10. '             ' → logprob: -14.375992774963379

Token 1040: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.3782830137643032e-05
    2. 'p' → logprob: -11.50001335144043
    3. ' ans' → logprob: -12.75001335144043
    4. '           ' → logprob: -14.50001335144043
    5. '	ans' → logprob: -15.62501335144043
    6. '(ans' → logprob: -17.00001335144043
    7. '   ' → logprob: -18.87501335144043
    8. '               ' → logprob: -20.25001335144043
    9. '_ans' → logprob: -20.25001335144043
    10. '       ' → logprob: -20.37501335144043

Token 1041: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.14418087899684906
    2. ' -=' → logprob: -2.0191807746887207
    3. '-' → logprob: -7.519180774688721
    4. '           ' → logprob: -7.644180774688721
    5. '               ' → logprob: -8.644181251525879
    6. '=' → logprob: -8.769181251525879
    7. '          ' → logprob: -9.769181251525879
    8. '       ' → logprob: -11.019181251525879
    9. '   ' → logprob: -11.269181251525879
    10. '                   ' → logprob: -11.519181251525879

Token 1042: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.15310683415737e-05
    2. ' p' → logprob: -10.750021934509277
    3. '_p' → logprob: -23.12502098083496
    4. '   ' → logprob: -23.25002098083496
    5. '	p' → logprob: -23.25002098083496
    6. '           ' → logprob: -24.12502098083496
    7. '<p' → logprob: -24.75002098083496
    8. '       ' → logprob: -25.25002098083496
    9. '(p' → logprob: -26.00002098083496
    10. ''p' → logprob: -26.37502098083496

Token 1043: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011467679869383574
    2. '   ' → logprob: -7.2511467933654785
    3. '       ' → logprob: -8.75114631652832
    4. '               ' → logprob: -9.37614631652832
    5. 'a' → logprob: -9.87614631652832
    6. 'return' → logprob: -10.75114631652832
    7. '            
' → logprob: -11.12614631652832
    8. '		' → logprob: -11.25114631652832
    9. '          ' → logprob: -11.25114631652832
    10. '
' → logprob: -11.25114631652832

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.674858301877975e-05
    2. '       ' → logprob: -9.625096321105957
    3. '		' → logprob: -11.250096321105957
    4. 'a' → logprob: -12.000096321105957
    5. '               ' → logprob: -12.125096321105957
    6. '```' → logprob: -13.125096321105957
    7. '          ' → logprob: -13.750096321105957
    8. '   ' → logprob: -14.250096321105957
    9. '            
' → logprob: -14.500096321105957
    10. '	       ' → logprob: -14.875096321105957

Token 1045: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04908415675163269
    2. 'a' → logprob: -3.049084186553955
    3. ' a' → logprob: -8.299083709716797
    4. '		' → logprob: -8.924083709716797
    5. '	a' → logprob: -10.299083709716797
    6. '	       ' → logprob: -10.674083709716797
    7. '       ' → logprob: -10.799083709716797
    8. '   ' → logprob: -11.674083709716797
    9. '               ' → logprob: -12.174083709716797
    10. '          ' → logprob: -12.174083709716797

Token 1046: ' Mar' (ID: 3145)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6240566083070007e-06
    2. ' a' → logprob: -13.625001907348633
    3. '           ' → logprob: -15.000001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '       ' → logprob: -17.750001907348633
    6. '#' → logprob: -18.125001907348633
    7. '               ' → logprob: -18.750001907348633
    8. '	a' → logprob: -19.875001907348633
    9. '                   ' → logprob: -20.250001907348633
    10. '#a' → logprob: -20.500001907348633

Token 1047: 'que' (ID: 1126)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.24570800364017487
    2. 'a' → logprob: -1.6207079887390137
    3. '           ' → logprob: -5.120707988739014
    4. 'ker' → logprob: -5.245707988739014
    5. 'quer' → logprob: -5.495707988739014
    6. 'que' → logprob: -6.370707988739014
    7. '   ' → logprob: -7.245707988739014
    8. 'q' → logprob: -7.370707988739014
    9. '               ' → logprob: -7.495707988739014
    10. 'r' → logprob: -8.370708465576172

Token 1048: ' ce' (ID: 2357)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03194434940814972
    2. 'a' → logprob: -3.9069442749023438
    3. '   ' → logprob: -5.406944274902344
    4. 'er' → logprob: -6.031944274902344
    5. 'None' → logprob: -7.031944274902344
    6. '[' → logprob: -7.156944274902344
    7. '"' → logprob: -7.406944274902344
    8. '=' → logprob: -7.781944274902344
    9. '[a' → logprob: -8.406944274902344
    10. 'e' → logprob: -8.406944274902344

Token 1049: ' coup' (ID: 25465)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4524981379508972
    2. ' a' → logprob: -1.702498197555542
    3. 'a' → logprob: -1.952498197555542
    4. 'i' → logprob: -4.202497959136963
    5. '[a' → logprob: -4.327497959136963
    6. ' i' → logprob: -6.327497959136963
    7. '_a' → logprob: -6.577497959136963
    8. 'u' → logprob: -7.202497959136963
    9. ' ' → logprob: -7.327497959136963
    10. '[' → logprob: -7.327497959136963

Token 1050: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15791140496730804
    2. ' =' → logprob: -2.4079113006591797
    3. '[i' → logprob: -2.9079113006591797
    4. 'a' → logprob: -7.65791130065918
    5. '[a' → logprob: -8.03291130065918
    6. '[' → logprob: -8.53291130065918
    7. '           ' → logprob: -8.65791130065918
    8. '"' → logprob: -9.53291130065918
    9. '   ' → logprob: -9.65791130065918
    10. '=None' → logprob: -9.78291130065918

Token 1051: ' utilisé' (ID: 53138)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1245753765106201
    2. '""' → logprob: -1.6245753765106201
    3. '"-' → logprob: -1.6245753765106201
    4. 'None' → logprob: -2.74957537651062
    5. ''-' → logprob: -2.87457537651062
    6. ''n' → logprob: -2.99957537651062
    7. '"x' → logprob: -3.62457537651062
    8. ''' → logprob: -3.74957537651062
    9. '"N' → logprob: -4.624575614929199
    10. ''N' → logprob: -4.999575614929199

Token 1052: '/' (ID: 14)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1340986043214798
    2. ' =' → logprob: -2.259098529815674
    3. '"' → logprob: -3.884098529815674
    4. 'None' → logprob: -9.009099006652832
    5. '=None' → logprob: -9.759099006652832
    6. '"#' → logprob: -9.884099006652832
    7. '   ' → logprob: -10.634099006652832
    8. 'a' → logprob: -10.634099006652832
    9. ''' → logprob: -10.634099006652832
    10. ' "' → logprob: -10.759099006652832

Token 1053: 'ann' (ID: 934)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.7746747136116028
    2. '"' → logprob: -1.149674654006958
    3. 'None' → logprob: -2.024674654006958
    4. '_' → logprob: -4.149674892425537
    5. '"#' → logprob: -4.149674892425537
    6. '"*' → logprob: -4.524674892425537
    7. ''' → logprob: -5.024674892425537
    8. '"-' → logprob: -5.149674892425537
    9. '"."' → logprob: -5.524674892425537
    10. 'X' → logprob: -5.524674892425537

Token 1054: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.015215786173939705
    2. 'ul' → logprob: -4.265215873718262
    3. 'ull' → logprob: -7.390215873718262
    4. 'uler' → logprob: -8.140215873718262
    5. 'ule' → logprob: -9.390215873718262
    6. 'ulated' → logprob: -10.390215873718262
    7. 'u' → logprob: -12.390215873718262
    8. 'UL' → logprob: -12.515215873718262
    9. 'ulado' → logprob: -13.015215873718262
    10. 'oué' → logprob: -13.015215873718262

Token 1055: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4961389899253845
    2. ' =' → logprob: -1.3711390495300293
    3. '"' → logprob: -2.7461390495300293
    4. '   ' → logprob: -3.7461390495300293
    5. 'a' → logprob: -3.9961390495300293
    6. 'None' → logprob: -4.621139049530029
    7. '"a' → logprob: -4.871139049530029
    8. '=None' → logprob: -5.496139049530029
    9. '"#' → logprob: -6.371139049530029
    10. ' a' → logprob: -6.496139049530029

Token 1056: ' le' (ID: 505)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8014422655105591
    2. 'a' → logprob: -1.801442265510559
    3. '""' → logprob: -1.926442265510559
    4. 'None' → logprob: -2.3014421463012695
    5. '_' → logprob: -3.1764421463012695
    6. '"*' → logprob: -3.5514421463012695
    7. '"a' → logprob: -3.9264421463012695
    8. ''' → logprob: -4.9264421463012695
    9. 'X' → logprob: -5.5514421463012695
    10. '"_' → logprob: -5.6764421463012695

Token 1057: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.7525514364242554
    2. '_' → logprob: -1.5025514364242554
    3. ' None' → logprob: -2.252551555633545
    4. ' rem' → logprob: -3.627551555633545
    5. ' mettant' → logprob: -3.752551555633545
    6. 'None' → logprob: -3.752551555633545
    7. 'met' → logprob: -3.877551555633545
    8. ' remplac' → logprob: -4.002551555633545
    9. 'b' → logprob: -4.127551555633545
    10. 'vid' → logprob: -4.127551555633545

Token 1058: 'pla' (ID: 24939)
  Prédit: 'pla'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pla' → logprob: -0.544299304485321
    2. 'pl' → logprob: -1.1692993640899658
    3. 'plac' → logprob: -2.294299364089966
    4. 'placer' → logprob: -5.169299125671387
    5. 'p' → logprob: -7.169299125671387
    6. 'placement' → logprob: -7.294299125671387
    7. 'place' → logprob: -7.794299125671387
    8. 'pliant' → logprob: -8.544299125671387
    9. 'plass' → logprob: -9.044299125671387
    10. 'ov' → logprob: -9.544299125671387

Token 1059: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.0012936893617734313
    2. 'ant' → logprob: -7.251293659210205
    3. 'a' → logprob: -8.376294136047363
    4. 'acé' → logprob: -8.751294136047363
    5. 'ç' → logprob: -9.376294136047363
    6. 'cé' → logprob: -10.126294136047363
    7. 'é' → logprob: -10.376294136047363
    8. 'c' → logprob: -11.501294136047363
    9. 'ac' → logprob: -11.626294136047363
    10. 'érant' → logprob: -12.001294136047363

Token 1060: '
' (ID: 198)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.07735808938741684
    2. ' par' → logprob: -2.7023580074310303
    3. '"' → logprob: -5.577358245849609
    4. '=' → logprob: -6.327358245849609
    5. 'by' → logprob: -7.577358245849609
    6. '   ' → logprob: -7.952358245849609
    7. '           ' → logprob: -8.57735824584961
    8. '"#' → logprob: -9.07735824584961
    9. '"_' → logprob: -9.45235824584961
    10. '       ' → logprob: -9.57735824584961

Token 1061: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3994160294532776
    2. '"' → logprob: -1.2744159698486328
    3. '"\' → logprob: -4.774415969848633
    4. '"#' → logprob: -4.899415969848633
    5. 'None' → logprob: -5.149415969848633
    6. '   ' → logprob: -5.524415969848633
    7. ' =' → logprob: -6.024415969848633
    8. ''' → logprob: -6.024415969848633
    9. '="\' → logprob: -6.024415969848633
    10. 'with' → logprob: -6.524415969848633

Token 1062: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5837873220443726
    2. ''' → logprob: -1.9587873220443726
    3. '""' → logprob: -3.083787441253662
    4. '"-' → logprob: -3.583787441253662
    5. ''a' → logprob: -3.708787441253662
    6. ''-' → logprob: -3.833787441253662
    7. '"x' → logprob: -3.833787441253662
    8. ''.' → logprob: -3.958787441253662
    9. '"a' → logprob: -3.958787441253662
    10. 'a' (adapté à ' a') → logprob: -3.958787441253662

Token 1063: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[a' → logprob: -16.875
    3. '[' → logprob: -18.625
    4. '[
' → logprob: -19.125
    5. '[I' → logprob: -20.25
    6. '[j' → logprob: -20.375
    7. '[k' → logprob: -20.625
    8. '
' → logprob: -20.875
    9. '=' → logprob: -21.0
    10. ' [' → logprob: -21.125

Token 1064: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40449193120002747
    2. ']' → logprob: -1.529491901397705
    3. ']=' → logprob: -2.154491901397705
    4. ' =' → logprob: -10.529492378234863
    5. ']='' → logprob: -11.404492378234863
    6. ')=' → logprob: -11.404492378234863
    7. ']+=' → logprob: -11.529492378234863
    8. ')' → logprob: -11.904492378234863
    9. ']="' → logprob: -12.279492378234863
    10. '}=' → logprob: -13.029492378234863

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. ' =' → logprob: -18.125
    3. '=""' → logprob: -20.375
    4. '+=' → logprob: -20.875
    5. '.=' → logprob: -21.25
    6. '=

' → logprob: -21.5
    7. '=}' → logprob: -21.75
    8. '＝' → logprob: -22.0
    9. '=
' → logprob: -22.625
    10. '=''' → logprob: -22.875

Token 1066: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42161861062049866
    2. '""' → logprob: -1.7966185808181763
    3. ''' → logprob: -2.796618700027466
    4. ''*' → logprob: -3.421618700027466
    5. '''' → logprob: -4.171618461608887
    6. '"-' → logprob: -4.296618461608887
    7. '"*' → logprob: -4.296618461608887
    8. '"x' → logprob: -4.296618461608887
    9. ''-' → logprob: -4.921618461608887
    10. '"."' → logprob: -5.921618461608887

Token 1067: 'a' (ID: 64)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3879980742931366
    2. 'x' → logprob: -2.137998104095459
    3. '""' → logprob: -2.887998104095459
    4. ''' → logprob: -3.137998104095459
    5. '"x' → logprob: -3.512998104095459
    6. '0' → logprob: -4.512998104095459
    7. '-' → logprob: -4.762998104095459
    8. ''x' → logprob: -4.887998104095459
    9. 'X' → logprob: -5.012998104095459
    10. '_' → logprob: -5.012998104095459

Token 1068: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0776829719543457
    2. ' "' → logprob: -2.7026829719543457
    3. '#"' → logprob: -6.452682971954346
    4. 'n' → logprob: -6.577682971954346
    5. 'a' → logprob: -6.827682971954346
    6. 'b' → logprob: -6.952682971954346
    7. 'x' → logprob: -7.452682971954346
    8. '0' → logprob: -7.702682971954346
    9. '*"' → logprob: -7.702682971954346
    10. '#' → logprob: -8.077682495117188

Token 1069: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1070: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1071: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.7610454708337784e-05
    2. ' ans' → logprob: -10.500027656555176
    3. '(ans' → logprob: -17.87502670288086
    4. '	ans' → logprob: -18.75002670288086
    5. '_ans' → logprob: -22.00002670288086
    6. 'answer' → logprob: -22.50002670288086
    7. 'Ans' → logprob: -23.12502670288086
    8. '   ' → logprob: -24.12502670288086
    9. 'ann' → logprob: -24.37502670288086
    10. '
' → logprob: -24.50002670288086

Token 1072: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0699685588479042
    2. 'main' → logprob: -3.1949684619903564
    3. '<|end|>' → logprob: -3.8199684619903564
    4. '#' → logprob: -6.1949687004089355
    5. '```' → logprob: -6.8199687004089355
    6. '
' → logprob: -7.6949687004089355
    7. ' if' → logprob: -7.9449687004089355
    8. ')' → logprob: -9.069968223571777
    9. '__' → logprob: -9.194968223571777
    10. '<|end|>' → logprob: -9.319968223571777

Token 1073: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1074: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07892999798059464
    2. '__' → logprob: -2.578929901123047
    3. 'name' → logprob: -10.203929901123047
    4. '_name' → logprob: -14.453929901123047
    5. ' ' → logprob: -14.578929901123047
    6. 'Name' → logprob: -14.703929901123047
    7. ' ' → logprob: -14.953929901123047
    8. '___' → logprob: -15.203929901123047
    9. '_' → logprob: -15.328929901123047
    10. ''' → logprob: -15.328929901123047

Token 1075: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3906368017196655
    2. '__' → logprob: -1.3906368017196655
    3. '==' → logprob: -2.765636920928955
    4. ' __' → logprob: -4.765636920928955
    5. '=="' → logprob: -6.390636920928955
    6. 'main' → logprob: -8.015636444091797
    7. '[' → logprob: -9.015636444091797
    8. '.__' → logprob: -9.140636444091797
    9. '_main' → logprob: -9.140636444091797
    10. ' main' → logprob: -9.140636444091797

Token 1076: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2664456789934775e-06
    2. '__.__' → logprob: -14.750000953674316
    3. '==' → logprob: -15.125000953674316
    4. '__('' → logprob: -15.875000953674316
    5. '__("' → logprob: -16.375001907348633
    6. ' ==' → logprob: -16.375001907348633
    7. '=="' → logprob: -16.875001907348633
    8. '__.' → logprob: -16.875001907348633
    9. '____' → logprob: -17.375001907348633
    10. '___' → logprob: -17.375001907348633

Token 1077: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.019129300490021706
    2. '==' → logprob: -4.019129276275635
    3. ' ==' → logprob: -7.394129276275635
    4. '=="' → logprob: -8.019129753112793
    5. '__.__' → logprob: -11.269129753112793
    6. '=='' → logprob: -11.769129753112793
    7. '_' → logprob: -12.519129753112793
    8. '=' → logprob: -13.019129753112793
    9. '____' → logprob: -13.644129753112793
    10. '___' → logprob: -13.769129753112793

Token 1078: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006759305950254202
    2. ''' → logprob: -5.006759166717529
    3. ' "__' → logprob: -10.131759643554688
    4. '__' → logprob: -12.506759643554688
    5. ' '__' → logprob: -14.881759643554688
    6. '   ' → logprob: -17.006759643554688
    7. '"user' → logprob: -17.256759643554688
    8. '"name' → logprob: -17.381759643554688
    9. '("__' → logprob: -18.131759643554688
    10. ' ' → logprob: -18.131759643554688

Token 1079: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.17597909271717072
    2. '__' → logprob: -2.4259791374206543
    3. '"' → logprob: -2.6759791374206543
    4. ''' → logprob: -5.550979137420654
    5. 'name' → logprob: -8.550978660583496
    6. ' "__' → logprob: -10.550978660583496
    7. '"name' → logprob: -11.675978660583496
    8. '_main' → logprob: -12.050978660583496
    9. ' main' → logprob: -12.675978660583496
    10. '   ' → logprob: -13.175978660583496

Token 1080: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07387412339448929
    2. '__' → logprob: -2.6988742351531982
    3. '__':
' → logprob: -5.573873996734619
    4. '__:' → logprob: -9.823874473571777
    5. '():
' → logprob: -10.948874473571777
    6. '__["' → logprob: -11.073874473571777
    7. ':' → logprob: -11.448874473571777
    8. '__
' → logprob: -11.823874473571777
    9. '__()
' → logprob: -12.198874473571777
    10. '__
' → logprob: -12.448874473571777

Token 1081: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12559571862220764
    2. 'main' → logprob: -2.500595808029175
    3. '	main' → logprob: -3.375595808029175
    4. ' main' → logprob: -6.375595569610596
    5. '(main' → logprob: -10.625596046447754
    6. '_main' → logprob: -10.625596046447754
    7. '    
' → logprob: -10.750596046447754
    8. '   ' → logprob: -11.375596046447754
    9. ' ' → logprob: -13.250596046447754
    10. '```' → logprob: -13.375596046447754

Token 1082: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.696889623621246e-06
    2. ' main' → logprob: -13.25000286102295
    3. '	main' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.62500286102295
    5. '_main' → logprob: -19.125001907348633
    6. '(main' → logprob: -19.875001907348633
    7. '    
' → logprob: -20.875001907348633
    8. '.main' → logprob: -21.250001907348633
    9. '
' → logprob: -22.000001907348633
    10. 'Main' → logprob: -23.250001907348633

Token 1083: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1081
Tokens correctement prédits (1ère position, stricte): 316
Tokens correctement prédits (1ère position, avec adaptation): 346
Tokens correctement prédits (top 10): 753
Précision stricte (1ère position): 29.23%
Précision adaptée (1ère position): 32.01%
Précision (top 10): 69.66%
================================================================================
