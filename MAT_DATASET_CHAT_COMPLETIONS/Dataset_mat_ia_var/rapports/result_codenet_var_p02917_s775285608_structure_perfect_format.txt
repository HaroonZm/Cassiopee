================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
B = list(map(int, input().split()))
B += [max(B)]
A = [0] * N
A[0] = B[0]
for i in range(1, N):
    A[i] = min(B[i - 1], B[i])
print(sum(A))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.346993088722229
    2. ')' → logprob: -1.346993088722229
    3. '()' → logprob: -3.5969929695129395
    4. '())' → logprob: -5.3469929695129395
    5. '(
' → logprob: -8.096993446350098
    6. '```' → logprob: -9.221993446350098
    7. '))' → logprob: -9.346993446350098
    8. '")' → logprob: -9.596993446350098
    9. '('' → logprob: -9.721993446350098
    10. '(

' → logprob: -9.971993446350098

Token 5: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2070285826921463
    2. 'if' → logprob: -2.95702862739563
    3. 's' → logprob: -3.33202862739563
    4. 'a' → logprob: -3.58202862739563
    5. ' for' → logprob: -4.582028388977051
    6. 'x' → logprob: -4.582028388977051
    7. '`' → logprob: -4.957028388977051
    8. 'result' → logprob: -5.207028388977051
    9. 'sum' → logprob: -5.457028388977051
    10. 'data' → logprob: -5.707028388977051

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4309883415699005
    2. '=' → logprob: -1.8059883117675781
    3. '[i' → logprob: -1.9309883117675781
    4. '[' → logprob: -4.305988311767578
    5. '.' → logprob: -4.805988311767578
    6. '**' → logprob: -5.555988311767578
    7. '[]' → logprob: -5.805988311767578
    8. ',' → logprob: -6.305988311767578
    9. '-' → logprob: -6.430988311767578
    10. 'i' → logprob: -6.805988311767578

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0030744075775146
    2. '[]' → logprob: -1.5030744075775146
    3. 'list' → logprob: -1.6280744075775146
    4. ' []' → logprob: -2.8780744075775146
    5. ' input' → logprob: -3.5030744075775146
    6. ' list' → logprob: -3.6280744075775146
    7. '[input' → logprob: -3.7530744075775146
    8. '[' → logprob: -3.8780744075775146
    9. '0' → logprob: -4.003074645996094
    10. 'int' → logprob: -4.503074645996094

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017179005080834031
    2. '[' → logprob: -7.126718044281006
    3. '(range' → logprob: -7.876718044281006
    4. '[(' → logprob: -8.126717567443848
    5. '```' → logprob: -9.001717567443848
    6. ' (' → logprob: -10.501717567443848
    7. '(
' → logprob: -11.251717567443848
    8. '`' → logprob: -11.376717567443848
    9. ')' → logprob: -11.501717567443848
    10. ''s' → logprob: -11.751717567443848

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02179376408457756
    2. '(' → logprob: -4.021793842315674
    3. '(str' → logprob: -6.021793842315674
    4. '(input' → logprob: -7.896793842315674
    5. '(lambda' → logprob: -8.521793365478516
    6. 'int' → logprob: -8.771793365478516
    7. '<int' → logprob: -9.146793365478516
    8. ')' → logprob: -9.146793365478516
    9. '<|end|>' → logprob: -9.896793365478516
    10. '(eval' → logprob: -10.021793365478516

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09591372311115265
    2. '(' → logprob: -2.8459136486053467
    3. ',input' → logprob: -3.7209136486053467
    4. ',' → logprob: -5.845913887023926
    5. ')' → logprob: -6.220913887023926
    6. '))' → logprob: -6.220913887023926
    7. '(int' → logprob: -6.970913887023926
    8. 'input' → logprob: -8.095913887023926
    9. '<input' → logprob: -8.720913887023926
    10. '=input' → logprob: -9.095913887023926

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891413569450378
    2. ' input' → logprob: -2.578914165496826
    3. '(input' → logprob: -10.828913688659668
    4. ')' → logprob: -13.328913688659668
    5. ',input' → logprob: -13.328913688659668
    6. '=input' → logprob: -14.203913688659668
    7. '	input' → logprob: -15.453913688659668
    8. 'str' → logprob: -15.953913688659668
    9. ' ' → logprob: -16.328914642333984
    10. '<input' → logprob: -16.578914642333984

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.9118441939353943
    2. '()' → logprob: -1.161844253540039
    3. '().' → logprob: -2.036844253540039
    4. '())' → logprob: -2.036844253540039
    5. '(' → logprob: -4.286844253540039
    6. '()));' → logprob: -5.786844253540039
    7. '(),' → logprob: -6.036844253540039
    8. ')' → logprob: -6.286844253540039
    9. '))' → logprob: -6.286844253540039
    10. '());' → logprob: -7.911844253540039

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004493805463425815
    2. 'strip' → logprob: -7.750449180603027
    3. 'rstrip' → logprob: -11.000449180603027
    4. ' split' → logprob: -13.500449180603027
    5. '(split' → logprob: -14.625449180603027
    6. 'spl' → logprob: -16.125450134277344
    7. ')' → logprob: -16.375450134277344
    8. 'replace' → logprob: -18.000450134277344
    9. '```' → logprob: -18.875450134277344
    10. 'sp' → logprob: -19.000450134277344

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.604354202747345
    2. ')' → logprob: -0.854354202747345
    3. '()))' → logprob: -4.354354381561279
    4. '(' → logprob: -4.729354381561279
    5. '())' → logprob: -5.229354381561279
    6. ')))' → logprob: -7.854354381561279
    7. '()' → logprob: -8.104353904724121
    8. '('' → logprob: -8.854353904724121
    9. ')>' → logprob: -10.729353904724121
    10. '(','' → logprob: -11.104353904724121

Token 15: 'B' (ID: 33)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1976207494735718
    2. 's' → logprob: -1.3226207494735718
    3. 'C' → logprob: -2.0726208686828613
    4. 'S' → logprob: -2.8226208686828613
    5. 'B' → logprob: -3.4476208686828613
    6. 'M' → logprob: -3.5726208686828613
    7. 'a' → logprob: -3.6976208686828613
    8. 'A' → logprob: -3.8226208686828613
    9. 'd' → logprob: -3.9476208686828613
    10. 'dp' → logprob: -4.197620868682861

Token 16: ' +=' (ID: 2757)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0669422596693039
    2. '.' → logprob: -2.9419422149658203
    3. '<|end|>' → logprob: -5.44194221496582
    4. '```' → logprob: -6.56694221496582
    5. '\[' → logprob: -6.69194221496582
    6. '[:]' → logprob: -6.94194221496582
    7. '[
' → logprob: -7.19194221496582
    8. '#' → logprob: -7.19194221496582
    9. ')' → logprob: -7.56694221496582
    10. '[::-' → logprob: -7.56694221496582

Token 17: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8346208333969116
    2. 'B' → logprob: -1.0846208333969116
    3. ' B' → logprob: -2.084620952606201
    4. ' [' → logprob: -2.334620952606201
    5. '[B' → logprob: -5.084620952606201
    6. '[-' → logprob: -9.084620475769043
    7. ' ' → logprob: -9.209620475769043
    8. '[len' → logprob: -9.334620475769043
    9. '[::-' → logprob: -10.709620475769043
    10. '[i' → logprob: -10.959620475769043

Token 18: 'max' (ID: 3228)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021993199363350868
    2. ' ' → logprob: -4.396993160247803
    3. 'B' → logprob: -5.271993160247803
    4. '-' → logprob: -6.521993160247803
    5. ' B' → logprob: -7.146993160247803
    6. ')' → logprob: -7.521993160247803
    7. ']' → logprob: -7.771993160247803
    8. '])' → logprob: -8.396993637084961
    9. ' -' → logprob: -8.896993637084961
    10. 'N' → logprob: -9.021993637084961

Token 19: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0028394684195518494
    2. '(' → logprob: -5.8778395652771
    3. '(A' → logprob: -10.627839088439941
    4. '(max' → logprob: -13.127839088439941
    5. '(N' → logprob: -13.252839088439941
    6. ' (' → logprob: -13.377839088439941
    7. '(
' → logprob: -13.627839088439941
    8. '((' → logprob: -14.377839088439941
    9. 'B' → logprob: -15.002839088439941
    10. ')' → logprob: -15.127839088439941

Token 20: ')]
' (ID: 11587)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.1261968612670898
    2. '())' → logprob: -1.3761968612670898
    3. '()' → logprob: -2.25119686126709
    4. ')]' → logprob: -2.50119686126709
    5. '()]' → logprob: -2.62619686126709
    6. '(),' → logprob: -2.87619686126709
    7. ')' → logprob: -3.12619686126709
    8. ')])' → logprob: -3.87619686126709
    9. '()+' → logprob: -4.25119686126709
    10. ')+' → logprob: -4.50119686126709

Token 21: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5720416307449341
    2. '
' → logprob: -1.322041630744934
    3. '\n' → logprob: -3.4470415115356445
    4. '[' → logprob: -3.4470415115356445
    5. '```' → logprob: -4.1970415115356445
    6. ' for' → logprob: -4.4470415115356445
    7. '[
' → logprob: -4.4470415115356445
    8. '`
' → logprob: -4.8220415115356445
    9. 'if' → logprob: -4.8220415115356445
    10. 'A' → logprob: -5.3220415115356445

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0030575692653656006
    2. '=' → logprob: -6.503057479858398
    3. '_' → logprob: -7.003057479858398
    4. '.append' → logprob: -7.878057479858398
    5. '.' → logprob: -9.878057479858398
    6. ' ' → logprob: -10.003057479858398
    7. ')' → logprob: -10.253057479858398
    8. 's' → logprob: -10.378057479858398
    9. '[' → logprob: -10.378057479858398
    10. '(' → logprob: -11.378057479858398

Token 23: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16083522140979767
    2. ' [' → logprob: -1.9108352661132812
    3. '[B' → logprob: -8.035835266113281
    4. '[]' → logprob: -8.410835266113281
    5. ' []' → logprob: -10.785835266113281
    6. '[len' → logprob: -11.410835266113281
    7. ' B' → logprob: -11.910835266113281
    8. '[b' → logprob: -12.160835266113281
    9. ' ' → logprob: -12.160835266113281
    10. '[-' → logprob: -12.410835266113281

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12746410071849823
    2. 'B' → logprob: -2.1274640560150146
    3. ' ' → logprob: -8.502464294433594
    4. '1' → logprob: -9.002464294433594
    5. ' B' → logprob: -9.002464294433594
    6. 'max' → logprob: -10.002464294433594
    7. '(B' → logprob: -11.002464294433594
    8. ']' → logprob: -11.877464294433594
    9. '   ' → logprob: -13.002464294433594
    10. '(' → logprob: -13.002464294433594

Token 25: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004271307960152626
    2. ',' → logprob: -5.629271507263184
    3. ']*' → logprob: -7.754271507263184
    4. ' ]' → logprob: -9.879271507263184
    5. '])' → logprob: -10.004271507263184
    6. ')' → logprob: -10.129271507263184
    7. ']*(' → logprob: -10.254271507263184
    8. ']+' → logprob: -10.754271507263184
    9. ')]' → logprob: -10.754271507263184
    10. ' for' → logprob: -11.254271507263184

Token 26: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31773215532302856
    2. ' for' → logprob: -1.8177320957183838
    3. ' ' → logprob: -2.692732095718384
    4. '0' → logprob: -3.567732095718384
    5. ' ]' → logprob: -5.942732334136963
    6. ',' → logprob: -6.067732334136963
    7. ')' → logprob: -6.192732334136963
    8. ']' → logprob: -6.192732334136963
    9. '+' → logprob: -6.942732334136963
    10. '<|end|>' → logprob: -7.567732334136963

Token 27: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0922584980726242
    2. '(' → logprob: -2.9672584533691406
    3. '(len' → logprob: -3.4672584533691406
    4. '(n' → logprob: -5.592258453369141
    5. ' (' → logprob: -6.967258453369141
    6. 'N' → logprob: -7.967258453369141
    7. 'len' → logprob: -9.34225845336914
    8. '((' → logprob: -9.46725845336914
    9. '(max' → logprob: -9.46725845336914
    10. '9' → logprob: -10.59225845336914

Token 28: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1628977656364441
    2. ' for' → logprob: -1.9128978252410889
    3. 'A' → logprob: -6.53789758682251
    4. 'current' → logprob: -8.537898063659668
    5. 'prev' → logprob: -8.787898063659668
    6. '+' → logprob: -8.912898063659668
    7. 'i' → logprob: -9.037898063659668
    8. 'max' → logprob: -9.162898063659668
    9. '```' → logprob: -9.287898063659668
    10. 's' → logprob: -9.287898063659668

Token 29: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02580377459526062
    2. ' for' → logprob: -4.025803565979004
    3. 'A' → logprob: -5.025803565979004
    4. 'i' → logprob: -7.150803565979004
    5. '```' → logprob: -9.650803565979004
    6. ' A' → logprob: -10.025803565979004
    7. 'max' → logprob: -10.900803565979004
    8. '_' → logprob: -11.025803565979004
    9. 's' → logprob: -11.025803565979004
    10. '+' → logprob: -11.025803565979004

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018770545721054077
    2. '=' → logprob: -5.018770694732666
    3. '0' → logprob: -5.893770694732666
    4. '[i' → logprob: -5.893770694732666
    5. '+' → logprob: -6.268770694732666
    6. '<|end|>' → logprob: -7.018770694732666
    7. ' ' → logprob: -7.393770694732666
    8. ' =' → logprob: -7.518770694732666
    9. '[
' → logprob: -7.643770694732666
    10. '[N' → logprob: -7.893770694732666

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010795372509164736
    2. ' ' → logprob: -9.250107765197754
    3. '1' → logprob: -11.375107765197754
    4. ']' → logprob: -15.625107765197754
    5. ')' → logprob: -17.37510871887207
    6. '-' → logprob: -17.50010871887207
    7. '2' → logprob: -17.87510871887207
    8. '[' → logprob: -19.00010871887207
    9. '4' → logprob: -19.37510871887207
    10. 'N' → logprob: -19.50010871887207

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02674143947660923
    2. ' ]' → logprob: -3.6517415046691895
    3. ']=' → logprob: -7.7767415046691895
    4. '=' → logprob: -11.151741027832031
    5. ' =' → logprob: -13.026741027832031
    6. '`]' → logprob: -13.776741027832031
    7. ' ' → logprob: -14.776741027832031
    8. '],' → logprob: -14.776741027832031
    9. ',' → logprob: -14.776741027832031
    10. '']' → logprob: -14.901741027832031

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282624304294586
    2. '=' → logprob: -2.237826347351074
    3. ' +=' → logprob: -13.862826347351074
    4. '=B' → logprob: -14.362826347351074
    5. '=int' → logprob: -14.487826347351074
    6. '=A' → logprob: -14.737826347351074
    7. ' ' → logprob: -14.862826347351074
    8. ' =
' → logprob: -15.862826347351074
    9. '＝' → logprob: -15.862826347351074
    10. ',' → logprob: -16.112825393676758

Token 34: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015153385465964675
    2. ' B' → logprob: -6.5015153884887695
    3. '0' → logprob: -11.37651538848877
    4. ' ' → logprob: -14.25151538848877
    5. '1' → logprob: -14.62651538848877
    6. 'b' → logprob: -15.37651538848877
    7. 'min' → logprob: -16.501514434814453
    8. '<|end|>' → logprob: -16.626514434814453
    9. '10' → logprob: -17.751514434814453
    10. '_B' → logprob: -18.126514434814453

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010513884481042624
    2. '0' → logprob: -6.876051425933838
    3. '```' → logprob: -11.87605094909668
    4. '1' → logprob: -12.12605094909668
    5. '\[' → logprob: -13.25105094909668
    6. ' ' → logprob: -13.87605094909668
    7. ' [' → logprob: -14.00105094909668
    8. '[
' → logprob: -14.25105094909668
    9. '`' → logprob: -15.25105094909668
    10. '2' → logprob: -15.25105094909668

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.12500286102295
    3. '1' → logprob: -14.87500286102295
    4. '[' → logprob: -15.25000286102295
    5. '<|end|>' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -17.125001907348633
    7. '۰' → logprob: -17.562501907348633
    8. '০' → logprob: -17.937501907348633
    9. '-' → logprob: -18.125001907348633
    10. '０' → logprob: -18.250001907348633

Token 37: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18835105001926422
    2. '<|end|>' → logprob: -2.0633511543273926
    3. ']' → logprob: -3.4383511543273926
    4. '<|end|>' → logprob: -4.688351154327393
    5. '
' → logprob: -6.188351154327393
    6. ' )' → logprob: -7.063351154327393
    7. ' ]' → logprob: -9.063350677490234
    8. ' ' → logprob: -9.438350677490234
    9. '}' → logprob: -9.938350677490234
    10. '' → logprob: -10.313350677490234

Token 38: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023252932354807854
    2. 'i' → logprob: -3.7732529640197754
    3. ' ' → logprob: -12.648252487182617
    4. '	i' → logprob: -13.148252487182617
    5. ' ' → logprob: -14.398252487182617
    6. '(i' → logprob: -14.398252487182617
    7. ' range' → logprob: -15.023252487182617
    8. ' in' → logprob: -15.023252487182617
    9. 'x' → logprob: -16.148252487182617
    10. ' x' → logprob: -16.523252487182617

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004518177360296249
    2. 'in' → logprob: -5.504518032073975
    3. ' ' → logprob: -7.754518032073975
    4. '	in' → logprob: -12.379518508911133
    5. '1' → logprob: -12.754518508911133
    6. 'range' → logprob: -13.754518508911133
    7. '  ' → logprob: -14.879518508911133
    8. ' i' → logprob: -15.129518508911133
    9. '+' → logprob: -15.504518508911133
    10. ' ' → logprob: -15.504518508911133

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009175319573841989
    2. 'range' → logprob: -7.000917434692383
    3. ' ' → logprob: -12.625917434692383
    4. '	range' → logprob: -13.000917434692383
    5. ' xrange' → logprob: -14.750917434692383
    6. '(range' → logprob: -15.875917434692383
    7. ' ' → logprob: -18.250917434692383
    8. '_range' → logprob: -18.750917434692383
    9. '1' → logprob: -19.625917434692383
    10. '.range' → logprob: -19.750917434692383

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.9650025428272784e-05
    2. '(N' → logprob: -10.250040054321289
    3. ' (' → logprob: -12.625040054321289
    4. ' ' → logprob: -14.875040054321289
    5. '(n' → logprob: -15.375040054321289
    6. '(
' → logprob: -15.625040054321289
    7. '(len' → logprob: -16.37504005432129
    8. ' range' → logprob: -17.00004005432129
    9. '(i' → logprob: -17.12504005432129
    10. '(range' → logprob: -18.12504005432129

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. 'N' → logprob: -9.750110626220703
    3. ' ' → logprob: -9.875110626220703
    4. '0' → logprob: -14.750110626220703
    5. ' N' → logprob: -15.625110626220703
    6. 'i' → logprob: -17.250110626220703
    7. '   ' → logprob: -17.500110626220703
    8. 'len' → logprob: -18.500110626220703
    9. '2' → logprob: -18.625110626220703
    10. '(' → logprob: -19.500110626220703

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03595054894685745
    2. ' ,' → logprob: -3.5359506607055664
    3. ',N' → logprob: -5.785950660705566
    4. ' N' → logprob: -6.285950660705566
    5. ' ' → logprob: -6.910950660705566
    6. ' )' → logprob: -8.910950660705566
    7. ',len' → logprob: -10.785950660705566
    8. ' range' → logprob: -11.035950660705566
    9. ')' → logprob: -11.035950660705566
    10. '<|end|>' → logprob: -11.535950660705566

Token 45: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019289902411401272
    2. ' N' → logprob: -6.251928806304932
    3. 'n' → logprob: -15.50192928314209
    4. 'len' → logprob: -16.001928329467773
    5. ' ' → logprob: -18.251928329467773
    6. ')' → logprob: -18.376928329467773
    7. ' len' → logprob: -18.626928329467773
    8. '	N' → logprob: -19.126928329467773
    9. '   ' → logprob: -20.126928329467773
    10. ' n' → logprob: -21.126928329467773

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005698277615010738
    2. '):
' → logprob: -5.755698204040527
    3. '+' → logprob: -6.005698204040527
    4. ':' → logprob: -10.130698204040527
    5. ')' → logprob: -12.005698204040527
    6. ' ):' → logprob: -13.005698204040527
    7. '):
' → logprob: -13.630698204040527
    8. '-' → logprob: -14.505698204040527
    9. '```' → logprob: -14.755698204040527
    10. '}:' → logprob: -14.880698204040527

Token 47: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.030833249911665916
    2. ' A' → logprob: -3.7808332443237305
    3. '   ' → logprob: -4.9058332443237305
    4. '```' → logprob: -9.03083324432373
    5. '    
' → logprob: -11.40583324432373
    6. '``' → logprob: -12.15583324432373
    7. '	A' → logprob: -12.65583324432373
    8. ' 
' → logprob: -12.78083324432373
    9. '<|end|>' → logprob: -13.03083324432373
    10. '`' → logprob: -13.15583324432373

Token 48: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0002858881198335439
    2. ' A' → logprob: -8.250286102294922
    3. '   ' → logprob: -11.375286102294922
    4. '```' → logprob: -11.500286102294922
    5. 'min' → logprob: -13.500286102294922
    6. '`' → logprob: -14.500286102294922
    7. ' ' → logprob: -15.500286102294922
    8. '	A' → logprob: -15.625286102294922
    9. '``' → logprob: -15.750286102294922
    10. '>A' → logprob: -16.000286102294922

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.943783253314905e-05
    2. '[' → logprob: -9.750059127807617
    3. '[I' → logprob: -14.250059127807617
    4. 'i' → logprob: -16.000059127807617
    5. '```' → logprob: -16.375059127807617
    6. '[j' → logprob: -16.875059127807617
    7. '[min' → logprob: -17.125059127807617
    8. '\[' → logprob: -17.250059127807617
    9. '[idx' → logprob: -17.375059127807617
    10. '[...]' → logprob: -17.625059127807617

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003820741316303611
    2. '=' → logprob: -6.503820896148682
    3. ')' → logprob: -7.003820896148682
    4. ']=' → logprob: -7.253820896148682
    5. ' =' → logprob: -7.378820896148682
    6. ' ]' → logprob: -9.878820419311523
    7. '=max' → logprob: -11.628820419311523
    8. 'max' → logprob: -12.753820419311523
    9. ')=' → logprob: -12.878820419311523
    10. '=min' → logprob: -13.003820419311523

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134467899799347
    2. '=' → logprob: -1.3134467601776123
    3. '=min' → logprob: -8.688446998596191
    4. '=max' → logprob: -11.188446998596191
    5. 'min' → logprob: -13.938446998596191
    6. '+=' → logprob: -15.188446998596191
    7. '=int' → logprob: -15.313446998596191
    8. ' +=' → logprob: -15.438446998596191
    9. '=

' → logprob: -15.438446998596191
    10. 'max' → logprob: -15.938446998596191

Token 52: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11648938804864883
    2. ' min' → logprob: -2.2414894104003906
    3. 'max' → logprob: -5.741489410400391
    4. ' max' → logprob: -7.866489410400391
    5. '   ' → logprob: -10.24148941040039
    6. '	min' → logprob: -11.36648941040039
    7. ' ' → logprob: -11.61648941040039
    8. 'B' → logprob: -12.49148941040039
    9. ' B' → logprob: -13.61648941040039
    10. '[min' → logprob: -13.74148941040039

Token 53: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.006897235754877329
    2. '(A' → logprob: -5.006897449493408
    3. '(' → logprob: -8.63189697265625
    4. 'B' → logprob: -13.38189697265625
    5. '((' → logprob: -14.50689697265625
    6. '(min' → logprob: -14.88189697265625
    7. 'A' → logprob: -15.25689697265625
    8. ' (' → logprob: -15.38189697265625
    9. '(
' → logprob: -15.63189697265625
    10. '(max' → logprob: -15.88189697265625

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.000000953674316
    3. ')' → logprob: -15.500000953674316
    4. '(i' → logprob: -16.750001907348633
    5. '[
' → logprob: -17.875001907348633
    6. 'i' → logprob: -18.250001907348633
    7. '[j' → logprob: -18.250001907348633
    8. ')i' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '[A' → logprob: -19.750001907348633

Token 55: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36406373977661133
    2. '-' → logprob: -1.2390637397766113
    3. '],' → logprob: -4.739063739776611
    4. ' -' → logprob: -5.489063739776611
    5. '[i' → logprob: -6.739063739776611
    6. ' ,' → logprob: -7.614063739776611
    7. '),' → logprob: -7.989063739776611
    8. 'A' → logprob: -8.739063262939453
    9. '[' → logprob: -8.739063262939453
    10. '   ' → logprob: -9.739063262939453

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017274183919653296
    2. ' ' → logprob: -7.37672758102417
    3. ']' → logprob: -7.37672758102417
    4. 'i' → logprob: -8.501727104187012
    5. ' i' → logprob: -9.001727104187012
    6. '],' → logprob: -9.251727104187012
    7. '   ' → logprob: -11.001727104187012
    8. '])' → logprob: -11.876727104187012
    9. '```' → logprob: -12.001727104187012
    10. ' ]' → logprob: -12.626727104187012

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.62501335144043
    3. 'i' → logprob: -12.62501335144043
    4. '   ' → logprob: -16.31251335144043
    5. ' i' → logprob: -16.37501335144043
    6. '(i' → logprob: -16.43751335144043
    7. '0' → logprob: -17.00001335144043
    8. ']' → logprob: -17.43751335144043
    9. '2' → logprob: -17.43751335144043
    10. '  ' → logprob: -17.56251335144043

Token 58: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027169028762727976
    2. '],' → logprob: -6.252717018127441
    3. ' ,' → logprob: -7.502717018127441
    4. '),' → logprob: -8.502717018127441
    5. ',B' → logprob: -10.752717018127441
    6. ')' → logprob: -12.877717018127441
    7. 'B' → logprob: -13.127717018127441
    8. ']' → logprob: -13.502717018127441
    9. '},' → logprob: -13.502717018127441
    10. '   ' → logprob: -14.002717018127441

Token 59: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07044796645641327
    2. 'B' → logprob: -2.6954479217529297
    3. ' ' → logprob: -8.44544792175293
    4. ' ' → logprob: -8.44544792175293
    5. ')' → logprob: -9.69544792175293
    6. ' )' → logprob: -11.07044792175293
    7. '_B' → logprob: -13.19544792175293
    8. '	B' → logprob: -15.07044792175293
    9. 'A' → logprob: -15.57044792175293
    10. ' ‌' → logprob: -15.57044792175293

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.250006675720215
    3. ')' → logprob: -13.500006675720215
    4. '[
' → logprob: -15.000006675720215
    5. 'i' → logprob: -16.37500762939453
    6. '[I' → logprob: -16.87500762939453
    7. ')[' → logprob: -17.37500762939453
    8. ' [' → logprob: -17.62500762939453
    9. '```' → logprob: -17.87500762939453
    10. '   ' → logprob: -17.87500762939453

Token 61: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07022440433502197
    2. ')' → logprob: -2.6952242851257324
    3. '))' → logprob: -9.44522476196289
    4. ')])' → logprob: -9.69522476196289
    5. '})' → logprob: -9.82022476196289
    6. ')]' → logprob: -10.57022476196289
    7. ']' → logprob: -11.07022476196289
    8. ' ])' → logprob: -11.19522476196289
    9. '])
' → logprob: -11.44522476196289
    10. ' )' → logprob: -11.69522476196289

Token 62: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01875205710530281
    2. '<|end|>' → logprob: -4.018752098083496
    3. 'for' → logprob: -7.893752098083496
    4. '```' → logprob: -9.393752098083496
    5. ' print' → logprob: -10.143752098083496
    6. ')' → logprob: -10.393752098083496
    7. '#' → logprob: -10.643752098083496
    8. '
' → logprob: -10.893752098083496
    9. '#print' → logprob: -11.393752098083496
    10. '\n' → logprob: -11.893752098083496

Token 63: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0797509178519249
    2. '(A' → logprob: -2.5797510147094727
    3. '(sum' → logprob: -8.579751014709473
    4. '('' → logprob: -8.579751014709473
    5. '(*' → logprob: -8.704751014709473
    6. '("("' → logprob: -9.079751014709473
    7. '(len' → logprob: -9.204751014709473
    8. '()' → logprob: -9.579751014709473
    9. '((' → logprob: -11.704751014709473
    10. '(max' → logprob: -12.204751014709473

Token 64: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -15.750554084777832
    4. '(a' → logprob: -15.875554084777832
    5. ')' → logprob: -16.125553131103516
    6. '()' → logprob: -16.625553131103516
    7. '(B' → logprob: -17.125553131103516
    8. 'A' → logprob: -17.125553131103516
    9. '(`' → logprob: -17.875553131103516
    10. ' (' → logprob: -17.875553131103516

Token 65: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005239683669060469
    2. ')' → logprob: -5.255239486694336
    3. '))
' → logprob: -12.755239486694336
    4. ')))' → logprob: -13.005239486694336
    5. ')
' → logprob: -15.005239486694336
    6. ' ))' → logprob: -15.380239486694336
    7. '()))' → logprob: -16.505239486694336
    8. '),' → logprob: -16.880239486694336
    9. '(' → logprob: -17.505239486694336
    10. '])' → logprob: -17.880239486694336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 63
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 47.62%
Précision adaptée (1ère position): 49.21%
Précision (top 10): 80.95%
================================================================================
