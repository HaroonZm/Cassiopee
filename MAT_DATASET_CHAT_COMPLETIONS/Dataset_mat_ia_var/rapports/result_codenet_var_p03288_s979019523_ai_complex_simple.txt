================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
R = int(input())
labels = {0: "ABC", 1: "ARC", 2: "AGC"}
print(labels[sum(map(lambda x: R >= x, [1200, 2800]))])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'R' (ID: 49)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002429644111543894
    2. ''' → logprob: -6.252429485321045
    3. '('' → logprob: -8.627429962158203
    4. ')' → logprob: -9.502429962158203
    5. '[' → logprob: -10.002429962158203
    6. '"' → logprob: -10.252429962158203
    7. ' (' → logprob: -10.377429962158203
    8. 'R' → logprob: -10.377429962158203
    9. '(
' → logprob: -10.627429962158203
    10. '(R' → logprob: -10.752429962158203

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008964820764958858
    2. ')' → logprob: -5.008965015411377
    3. '()' → logprob: -6.508965015411377
    4. '(
' → logprob: -8.008964538574219
    5. '```' → logprob: -9.633964538574219
    6. '())' → logprob: -9.758964538574219
    7. ''' → logprob: -9.883964538574219
    8. '('' → logprob: -10.258964538574219
    9. '(

' → logprob: -10.758964538574219
    10. '`' → logprob: -10.758964538574219

Token 5: 'labels' (ID: 37054)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8880174160003662
    2. '+' → logprob: -1.0130174160003662
    3. '*' → logprob: -1.7630174160003662
    4. '\n' → logprob: -3.763017416000366
    5. '#' → logprob: -4.763017654418945
    6. ')' → logprob: -5.263017654418945
    7. 'if' → logprob: -5.388017654418945
    8. '\' → logprob: -6.388017654418945
    9. ''' → logprob: -6.513017654418945
    10. '```' → logprob: -6.638017654418945

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7458828687667847
    2. '_' → logprob: -1.9958828687667847
    3. '.' → logprob: -2.245882987976074
    4. ' =' → logprob: -2.495882987976074
    5. '=' → logprob: -2.620882987976074
    6. ')' → logprob: -2.870882987976074
    7. '[:]' → logprob: -3.120882987976074
    8. 's' → logprob: -5.495882987976074
    9. '(' → logprob: -5.745882987976074
    10. ',' → logprob: -5.870882987976074

Token 7: ' {' (ID: 354)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2024303376674652
    2. '[]' → logprob: -1.8274303674697876
    3. '{}' → logprob: -5.327430248260498
    4. '[' → logprob: -5.327430248260498
    5. ' {}' → logprob: -5.577430248260498
    6. ' [' → logprob: -5.702430248260498
    7. 'list' → logprob: -6.327430248260498
    8. '[input' → logprob: -6.827430248260498
    9. ' list' → logprob: -7.327430248260498
    10. '['' → logprob: -7.702430248260498

Token 8: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14677251875400543
    2. '"' → logprob: -2.771772623062134
    3. ''\' → logprob: -3.646772623062134
    4. '   ' → logprob: -4.271772384643555
    5. '0' → logprob: -4.396772384643555
    6. '}' → logprob: -5.396772384643555
    7. '"\' → logprob: -5.646772384643555
    8. ''}' → logprob: -6.146772384643555
    9. '1' → logprob: -6.271772384643555
    10. '')' → logprob: -6.896772384643555

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039063513395376503
    2. ' :' → logprob: -8.125391006469727
    3. ':'' → logprob: -10.125391006469727
    4. ':''' → logprob: -11.125391006469727
    5. ',' → logprob: -11.375391006469727
    6. ':'#' → logprob: -12.125391006469727
    7. ':"' → logprob: -12.125391006469727
    8. ':[' → logprob: -12.875391006469727
    9. ':['' → logprob: -12.875391006469727
    10. ':`' → logprob: -13.875391006469727

Token 10: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2058003842830658
    2. '"' → logprob: -1.8308004140853882
    3. ' '' → logprob: -5.330800533294678
    4. ''O' → logprob: -5.705800533294678
    5. ''A' → logprob: -5.705800533294678
    6. ''"' → logprob: -6.330800533294678
    7. ''s' → logprob: -6.705800533294678
    8. '')' → logprob: -6.955800533294678
    9. ''S' → logprob: -6.955800533294678
    10. ' "' → logprob: -6.955800533294678

Token 11: 'ABC' (ID: 44197)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5719073414802551
    2. ''' → logprob: -2.5094072818756104
    3. 'Red' → logprob: -3.4469072818756104
    4. ' "' → logprob: -4.0719075202941895
    5. 'No' → logprob: -4.6969075202941895
    6. 'B' → logprob: -4.7594075202941895
    7. '")' → logprob: -4.8844075202941895
    8. 'None' → logprob: -4.8844075202941895
    9. '"B' → logprob: -5.0094075202941895
    10. '"No' → logprob: -5.0719075202941895

Token 12: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.006332702003419399
    2. '"' → logprob: -5.756332874298096
    3. '"}' → logprob: -6.131332874298096
    4. 'D' → logprob: -8.381332397460938
    5. '",
' → logprob: -8.756332397460938
    6. '}' → logprob: -8.881332397460938
    7. '}",' → logprob: -9.881332397460938
    8. '0' → logprob: -9.881332397460938
    9. 'A' → logprob: -10.006332397460938
    10. '",
' → logprob: -10.256332397460938

Token 13: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519911527633667
    2. ' ' → logprob: -1.5019911527633667
    3. ' ' → logprob: -10.751991271972656
    4. '   ' → logprob: -11.001991271972656
    5. '```' → logprob: -11.251991271972656
    6. '2' → logprob: -13.376991271972656
    7. '`' → logprob: -13.376991271972656
    8. ')' → logprob: -13.751991271972656
    9. '0' → logprob: -14.064491271972656
    10. '4' → logprob: -14.314491271972656

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005314985755831003
    2. ' ' → logprob: -5.255314826965332
    3. '   ' → logprob: -10.630314826965332
    4. '```' → logprob: -11.755314826965332
    5. '2' → logprob: -11.880314826965332
    6. ''' → logprob: -12.005314826965332
    7. '4' → logprob: -12.067814826965332
    8. '0' → logprob: -12.755314826965332
    9. '"' → logprob: -12.880314826965332
    10. '3' → logprob: -12.942814826965332

Token 15: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016098834748845547
    2. ' :' → logprob: -8.750161170959473
    3. ',' → logprob: -14.250161170959473
    4. '```' → logprob: -15.000161170959473
    5. ' ' → logprob: -15.250161170959473
    6. ')' → logprob: -15.500161170959473
    7. '}:' → logprob: -15.625161170959473
    8. '}' → logprob: -15.625161170959473
    9. '2' → logprob: -15.750161170959473
    10. '0' → logprob: -16.625160217285156

Token 16: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08037703484296799
    2. ' "' → logprob: -2.5803771018981934
    3. ''' → logprob: -6.955377101898193
    4. ' ' → logprob: -8.330376625061035
    5. ' '' → logprob: -9.580376625061035
    6. '")' → logprob: -9.705376625061035
    7. ')' → logprob: -10.767876625061035
    8. ' ' → logprob: -10.767876625061035
    9. '0' → logprob: -11.080376625061035
    10. ' ")' → logprob: -11.892876625061035

Token 17: 'ARC' (ID: 64758)
  Prédit: 'DEF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -0.6553636789321899
    2. 'BCD' → logprob: -1.40536367893219
    3. 'XYZ' → logprob: -1.90536367893219
    4. 'B' → logprob: -3.7803635597229004
    5. ' DEF' → logprob: -4.4053635597229
    6. 'ABD' → logprob: -4.9053635597229
    7. ' B' → logprob: -5.2803635597229
    8. ' XYZ' → logprob: -5.2803635597229
    9. 'AB' → logprob: -5.4053635597229
    10. 'BC' → logprob: -5.9053635597229

Token 18: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.4335872232913971
    2. '"}' → logprob: -1.0585871934890747
    3. '}' → logprob: -5.433587074279785
    4. '"' → logprob: -8.933587074279785
    5. '")' → logprob: -9.933587074279785
    6. ',' → logprob: -10.308587074279785
    7. '`}' → logprob: -10.433587074279785
    8. '```' → logprob: -10.433587074279785
    9. '2' → logprob: -10.558587074279785
    10. '")}' → logprob: -10.558587074279785

Token 19: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3484759032726288
    2. ' ' → logprob: -1.2234759330749512
    3. '```' → logprob: -11.098475456237793
    4. '   ' → logprob: -11.723475456237793
    5. '    ' → logprob: -13.098475456237793
    6. ' ' → logprob: -13.223475456237793
    7. '...' → logprob: -14.660975456237793
    8. '  ' → logprob: -14.723475456237793
    9. '}' → logprob: -14.785975456237793
    10. ',' → logprob: -14.848475456237793

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04300525784492493
    2. ' ' → logprob: -3.1680052280426025
    3. '```' → logprob: -12.918004989624023
    4. '   ' → logprob: -14.168004989624023
    5. '    ' → logprob: -14.543004989624023
    6. ',' → logprob: -14.855504989624023
    7. '２' → logprob: -15.418004989624023
    8. ' ' → logprob: -15.605504989624023
    9. '        ' → logprob: -15.730504989624023
    10. '       ' → logprob: -15.918004989624023

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.7755875129951164e-05
    2. ',' → logprob: -10.37504768371582
    3. ' :' → logprob: -11.50004768371582
    4. '```' → logprob: -12.62504768371582
    5. '":' → logprob: -14.25004768371582
    6. '}' → logprob: -14.62504768371582
    7. '3' → logprob: -14.62504768371582
    8. ')' → logprob: -14.87504768371582
    9. '<|end|>' → logprob: -15.25004768371582
    10. '}:' → logprob: -15.50004768371582

Token 22: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0010679395636543632
    2. ' "' → logprob: -7.001068115234375
    3. ''' → logprob: -9.501068115234375
    4. ' ' → logprob: -10.376068115234375
    5. '"D' → logprob: -10.376068115234375
    6. '"A' → logprob: -12.626068115234375
    7. ' ' → logprob: -13.001068115234375
    8. '")' → logprob: -13.376068115234375
    9. '"B' → logprob: -13.376068115234375
    10. '```' → logprob: -13.501068115234375

Token 23: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.0018197664758190513
    2. 'ABC' → logprob: -7.001819610595703
    3. 'ARC' → logprob: -8.126819610595703
    4. 'AH' → logprob: -8.251819610595703
    5. ' AG' → logprob: -8.876819610595703
    6. '"' → logprob: -10.001819610595703
    7. 'AGN' → logprob: -10.376819610595703
    8. 'ag' → logprob: -10.751819610595703
    9. '120' → logprob: -11.876819610595703
    10. ''' → logprob: -12.376819610595703

Token 24: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -9.567575034452602e-05
    2. '```' → logprob: -10.87509536743164
    3. 'I' → logprob: -11.00009536743164
    4. 'Ｃ' → logprob: -11.62509536743164
    5. ' C' → logprob: -12.37509536743164
    6. '")' → logprob: -12.37509536743164
    7. 'E' → logprob: -12.50009536743164
    8. '"C' → logprob: -12.93759536743164
    9. '}' → logprob: -13.00009536743164
    10. '``' → logprob: -13.18759536743164

Token 25: '"}
' (ID: 31085)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.038246773183345795
    2. '"}' → logprob: -3.2882468700408936
    3. '}' → logprob: -9.288247108459473
    4. '"' → logprob: -9.538247108459473
    5. '"}

' → logprob: -11.788247108459473
    6. '"}
' → logprob: -11.913247108459473
    7. '3' → logprob: -11.913247108459473
    8. '")' → logprob: -12.538247108459473
    9. '}",' → logprob: -12.788247108459473
    10. '```' → logprob: -12.913247108459473

Token 26: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05257624760270119
    2. '3' → logprob: -4.552576065063477
    3. '.get' → logprob: -4.677576065063477
    4. '[r' → logprob: -5.427576065063477
    5. '[R' → logprob: -5.677576065063477
    6. '[
' → logprob: -5.802576065063477
    7. 'if' → logprob: -6.302576065063477
    8. 'for' → logprob: -6.302576065063477
    9. 'R' → logprob: -6.427576065063477
    10. '```' → logprob: -6.552576065063477

Token 27: '(labels' (ID: 88024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004007600946351886
    2. '("("' → logprob: -8.12540054321289
    3. '('' → logprob: -9.87540054321289
    4. '(f' → logprob: -10.87540054321289
    5. '("""' → logprob: -12.00040054321289
    6. '(.' → logprob: -12.00040054321289
    7. '((' → logprob: -12.50040054321289
    8. '("' → logprob: -12.50040054321289
    9. '(
' → logprob: -12.62540054321289
    10. '(`' → logprob: -13.25040054321289

Token 28: '[' (ID: 58)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.20146410167217255
    2. '[' → logprob: -1.701464056968689
    3. '[r' → logprob: -10.45146369934082
    4. '[
' → logprob: -11.82646369934082
    5. ')' → logprob: -11.95146369934082
    6. ')[' → logprob: -13.07646369934082
    7. '[(' → logprob: -13.70146369934082
    8. '[T' → logprob: -14.45146369934082
    9. 'R' → logprob: -14.70146369934082
    10. '[int' → logprob: -14.70146369934082

Token 29: 'sum' (ID: 12298)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006874029990285635
    2. ' R' → logprob: -5.006874084472656
    3. '0' → logprob: -8.881874084472656
    4. ' ' → logprob: -11.756874084472656
    5. ')' → logprob: -12.506874084472656
    6. 'r' → logprob: -12.631874084472656
    7. '(R' → logprob: -13.506874084472656
    8. '1' → logprob: -14.006874084472656
    9. '(' → logprob: -14.819374084472656
    10. ' (' → logprob: -15.069374084472656

Token 30: '(map' (ID: 16946)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.15484926104545593
    2. '([' → logprob: -2.5298492908477783
    3. '(' → logprob: -3.2798492908477783
    4. '(range' → logprob: -3.7798492908477783
    5. ' (' → logprob: -7.279849052429199
    6. '((' → logprob: -7.279849052429199
    7. '(r' → logprob: -7.904849052429199
    8. '({' → logprob: -8.2798490524292
    9. 'R' → logprob: -8.6548490524292
    10. '(i' → logprob: -8.9048490524292

Token 31: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1656961441040039
    2. '(lambda' → logprob: -1.915696144104004
    3. '(' → logprob: -6.040696144104004
    4. ' (' → logprob: -6.165696144104004
    5. 'lambda' → logprob: -8.415696144104004
    6. 'int' → logprob: -8.540696144104004
    7. ' int' → logprob: -8.790696144104004
    8. ' lambda' → logprob: -9.165696144104004
    9. ',int' → logprob: -10.165696144104004
    10. ' ' → logprob: -10.290696144104004

Token 32: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.460012286901474
    2. 'lambda' → logprob: -1.4600123167037964
    3. '(lambda' → logprob: -2.585012197494507
    4. 'int' → logprob: -3.210012197494507
    5. ' int' → logprob: -3.960012197494507
    6. '(int' → logprob: -7.085012435913086
    7. '=lambda' → logprob: -8.335012435913086
    8. '<int' → logprob: -8.710012435913086
    9. ':int' → logprob: -9.085012435913086
    10. ':' → logprob: -9.210012435913086

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1270887404680252
    2. ':int' → logprob: -2.252088785171509
    3. ' :' → logprob: -4.75208854675293
    4. ',' → logprob: -5.62708854675293
    5. ',int' → logprob: -7.12708854675293
    6. ':x' → logprob: -8.12708854675293
    7. ':R' → logprob: -8.50208854675293
    8. ',x' → logprob: -9.37708854675293
    9. '=int' → logprob: -9.62708854675293
    10. 'int' → logprob: -9.75208854675293

Token 34: ' R' (ID: 460)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.36927416920661926
    2. ' int' → logprob: -1.7442741394042969
    3. ' x' → logprob: -3.244274139404297
    4. 'lambda' → logprob: -3.369274139404297
    5. ' lambda' → logprob: -3.369274139404297
    6. 'x' → logprob: -4.119274139404297
    7. '(int' → logprob: -5.744274139404297
    8. 'bool' → logprob: -5.869274139404297
    9. '(lambda' → logprob: -6.994274139404297
    10. ' bool' → logprob: -6.994274139404297

Token 35: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.86837238073349
    2. '>' → logprob: -1.3683724403381348
    3. ' !=' → logprob: -2.7433724403381348
    4. ' >=' → logprob: -3.2433724403381348
    5. ',' → logprob: -3.6183724403381348
    6. ':' → logprob: -3.8683724403381348
    7. '>x' → logprob: -3.9933724403381348
    8. '!=' → logprob: -4.118372440338135
    9. ' <=' → logprob: -4.118372440338135
    10. ' ==' → logprob: -4.118372440338135

Token 36: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3622226417064667
    2. ' x' → logprob: -1.487222671508789
    3. ' ' → logprob: -3.987222671508789
    4. '1' → logprob: -4.487222671508789
    5. '10' → logprob: -5.362222671508789
    6. 'i' → logprob: -5.737222671508789
    7. '3' → logprob: -5.737222671508789
    8. '2' → logprob: -5.862222671508789
    9. '100' → logprob: -5.862222671508789
    10. '[' → logprob: -5.987222671508789

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037462007254362106
    2. ' ,' → logprob: -3.662461996078491
    3. ':' → logprob: -6.16246223449707
    4. '+' → logprob: -6.41246223449707
    5. ' :' → logprob: -7.03746223449707
    6. '))' → logprob: -7.03746223449707
    7. ' ' → logprob: -7.03746223449707
    8. ')' → logprob: -7.41246223449707
    9. ' +' → logprob: -7.78746223449707
    10. '),' → logprob: -8.16246223449707

Token 38: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.647499144077301
    2. 'range' → logprob: -1.7724990844726562
    3. '[' → logprob: -1.8974990844726562
    4. ' [' → logprob: -2.1474990844726562
    5. 'labels' → logprob: -3.6474990844726562
    6. ' labels' → logprob: -4.522499084472656
    7. '(range' → logprob: -6.272499084472656
    8. ' (' → logprob: -8.272499084472656
    9. '(' → logprob: -8.272499084472656
    10. ')' → logprob: -8.647499084472656

Token 39: '120' (ID: 6106)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7738057374954224
    2. '100' → logprob: -1.6488057374954224
    3. ' ' → logprob: -2.148805618286133
    4. '0' → logprob: -2.398805618286133
    5. '[' → logprob: -3.023805618286133
    6. '10' → logprob: -3.898805618286133
    7. '2' → logprob: -4.023805618286133
    8. '3' → logprob: -4.773805618286133
    9. ' [' → logprob: -4.898805618286133
    10. '200' → logprob: -5.648805618286133

Token 40: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024577854201197624
    2. ' ,' → logprob: -4.274577617645264
    3. ']))' → logprob: -5.774577617645264
    4. '0' → logprob: -6.024577617645264
    5. ' ' → logprob: -6.524577617645264
    6. ' ]' → logprob: -7.274577617645264
    7. '1' → logprob: -7.649577617645264
    8. ',
' → logprob: -7.649577617645264
    9. ']' → logprob: -7.774577617645264
    10. '  ' → logprob: -8.774578094482422

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00784107856452465
    2. ' ,' → logprob: -4.882841110229492
    3. ']))' → logprob: -9.257841110229492
    4. ',
' → logprob: -10.132841110229492
    5. ' ]' → logprob: -11.007841110229492
    6. ',

' → logprob: -11.382841110229492
    7. ' ' → logprob: -11.507841110229492
    8. ')))' → logprob: -11.507841110229492
    9. ']' → logprob: -11.632841110229492
    10. '))' → logprob: -11.882841110229492

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5254080295562744
    2. '160' → logprob: -1.0254080295562744
    3. '180' → logprob: -3.2754080295562744
    4. '200' → logprob: -5.275407791137695
    5. '170' → logprob: -5.275407791137695
    6. '150' → logprob: -7.150407791137695
    7. '240' → logprob: -7.525407791137695
    8. '140' → logprob: -8.400407791137695
    9. '220' → logprob: -9.025407791137695
    10. '190' → logprob: -9.462907791137695

Token 43: '280' (ID: 17713)
  Prédit: '160'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '160' → logprob: -0.6690977811813354
    2. '280' → logprob: -0.7940977811813354
    3. '180' → logprob: -4.419097900390625
    4. '240' → logprob: -4.919097900390625
    5. '220' → logprob: -5.294097900390625
    6. '200' → logprob: -5.669097900390625
    7. '140' → logprob: -6.044097900390625
    8. '170' → logprob: -6.169097900390625
    9. ' ' → logprob: -6.669097900390625
    10. '150' → logprob: -7.294097900390625

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.906711546937004e-05
    2. ' ' → logprob: -10.875048637390137
    3. ',' → logprob: -12.062548637390137
    4. '1' → logprob: -12.437548637390137
    5. '00' → logprob: -12.812548637390137
    6. ']))' → logprob: -12.875048637390137
    7. '000' → logprob: -13.000048637390137
    8. '   ' → logprob: -13.500048637390137
    9. '5' → logprob: -13.750048637390137
    10. '8' → logprob: -14.062548637390137

Token 45: ']))' (ID: 20259)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029920801520347595
    2. ']))' → logprob: -3.654920816421509
    3. ' ,' → logprob: -6.65492057800293
    4. ' ]' → logprob: -6.90492057800293
    5. ']' → logprob: -7.40492057800293
    6. '])))' → logprob: -7.65492057800293
    7. ' ' → logprob: -9.90492057800293
    8. ',
' → logprob: -10.15492057800293
    9. '3' → logprob: -10.27992057800293
    10. '])),' → logprob: -11.02992057800293

Token 46: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07114752382040024
    2. ')' → logprob: -2.6961474418640137
    3. ']' → logprob: -7.571147441864014
    4. '))' → logprob: -7.946147441864014
    5. '})' → logprob: -8.946147918701172
    6. ')])' → logprob: -9.321147918701172
    7. ']))' → logprob: -10.196147918701172
    8. '>)' → logprob: -11.071147918701172
    9. '）' → logprob: -11.446147918701172
    10. '1' → logprob: -11.571147918701172


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 34.09%
Précision adaptée (1ère position): 34.09%
Précision (top 10): 70.45%
================================================================================
