================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque, Counter
from heapq import heappush, heappop, heapify
import math
import bisect
import random
from itertools import permutations, accumulate, combinations, product
import sys
import string
from bisect import bisect_left, bisect_right
from math import factorial, ceil, floor
from operator import mul
from functools import reduce
from operator import mul

# Augmenter la limite de récursion maximale, utile pour les grands arbres
sys.setrecursionlimit(2147483647)
# Utilisé pour l'infini
INF = 10 ** 20
# Constante pour le modulo
mod = 1000000007

def LI():
    """
    Lit une ligne de l'entrée standard et retourne une liste d'entiers.
    """
    return list(map(int, sys.stdin.readline().split()))

def I():
    """
    Lit une ligne de l'entrée standard et retourne un entier.
    """
    return int(sys.stdin.readline())

def LS():
    """
    Lit une ligne de l'entrée standard (bufferisée) et retourne une liste de chaînes (mots séparés).
    """
    return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()

def S():
    """
    Lit une ligne de l'entrée standard (bufferisée) et retourne une chaîne décodée en UTF-8.
    """
    return sys.stdin.buffer.readline().rstrip().decode('utf-8')

def IR(n):
    """
    Lit n entiers (un entier par ligne).
    Args:
        n (int): Nombre de lignes à lire.
    Returns:
        list[int]: Liste d'entiers lus.
    """
    return [I() for i in range(n)]

def LIR(n):
    """
    Lit n listes d'entiers (une liste par ligne).
    Args:
        n (int): Nombre de listes à lire.
    Returns:
        list[list[int]]: Liste de listes d'entiers.
    """
    return [LI() for i in range(n)]

def SR(n):
    """
    Lit n chaînes de caractères (une par ligne).
    Args:
        n (int): Nombre de lignes à lire.
    Returns:
        list[str]: Liste de chaînes lues.
    """
    return [S() for i in range(n)]

def LSR(n):
    """
    Lit n listes de mots (une liste par ligne, mots séparés par des espaces).
    Args:
        n (int): Nombre de lignes à lire.
    Returns:
        list[list[str]]: Liste de listes de mots.
    """
    return [LS() for i in range(n)]

def SRL(n):
    """
    Lit n chaînes, et les convertit en listes de caractères.
    Args:
        n (int): Nombre de lignes à lire.
    Returns:
        list[list[str]]: Liste de listes de caractères.
    """
    return [list(S()) for i in range(n)]

def MSRL(n):
    """
    Lit n chaînes et convertit chaque caractère en un entier.
    Args:
        n (int): Nombre de lignes à lire.
    Returns:
        list[list[int]]: Liste de listes d'entiers.
    """
    return [[int(j) for j in list(S())] for i in range(n)]

# Lecture du nombre de sommets
n = I()
# Initialisation de la structure du graphe G comme une liste d'adjacence vide
G = [[] for _ in range(n)]
# Lecture des arêtes du graphe et construction de la liste d'adjacence
for _ in range(n - 1):
    a, b = LI()
    G[a - 1].append(b - 1)  # On convertit à un indice basé sur 0
    G[b - 1].append(a - 1)  # Même chose pour l'autre extrémité

# Initialisation des tableaux pour les parents et les tailles de sous-arbres
par = [-1] * n   # par[u]: parent de u dans l'arbre
cnt = [0] * n    # cnt[u]: nombre de sommets dans le sous-arbre enraciné à u

def f(u):
    """
    Calcule la taille du sous-arbre enraciné à u en utilisant un DFS récursif.
    Args:
        u (int): Le sommet courant.
    Returns:
        int: La taille du sous-arbre enraciné à u.
    Side effect:
        Remplit les tableaux par (parent) et cnt (taille du sous-arbre) pour tous les sommets.
    """
    ret = 1  # Compte le sommet courant
    for v in G[u]:
        if v == par[u]:  # Ne pas revenir vers le parent
            continue
        par[v] = u
        ret += f(v)  # Ajoute la taille du sous-arbre du fils v
    cnt[u] = ret  # Enregistre la taille du sous-arbre enraciné à u
    return ret

# Détermine le parent de chaque sommet et la taille des sous-arbres pour tous les sommets, à partir de la racine 0
f(0)

# Précalcule les puissances de 2 modulo 'mod' jusqu'à n inclus
pow2 = [1] * (n + 1)
for i in range(1, n + 1):
    pow2[i] = pow2[i - 1] * 2 % mod

# Parcours BFS ou DFS itératif pour calculer la réponse finale
q = deque([0])  # Commence à la racine
ans = 0         # Accumulateur de la réponse finale

while q:
    u = q.pop()
    # Initialiser ret au nombre de sous-ensembles non-vides sur les n-1 autres sommets
    ret = pow2[n - 1] - 1

    for v in G[u]:
        if v == par[u]:  # Ne pas retourner vers le parent
            continue
        # On exclut les sous-ensembles contenus dans le sous-arbre de v
        ret -= pow2[cnt[v]] - 1
        q.append(v)  # Ajoute v à la queue pour visite ultérieure

    # On exclut les sous-ensembles contenus dans la composante extérieure au sous-arbre de u
    ret -= pow2[n - cnt[u]] - 1

    # Accumule le résultat en prenant soin du modulo
    ans = (ans + ret) % mod

# On corrige la réponse en la divisant par le nombre total de sous-ensembles (hors vide)
# Cela correspond à une multiplication par l'inverse modulaire de pow2[n] (nombre total de sous-ensembles)
# La formule pow(pow2[n], mod - 2, mod) donne l'inverse modulaire de pow2[n] modulo mod
print(ans * pow(pow2[n], mod - 2, mod) % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007800268009305
    2. '(
' → logprob: -5.382800102233887
    3. '\n' → logprob: -7.007800102233887
    4. '\' → logprob: -7.382800102233887
    5. '```' → logprob: -7.507800102233887
    6. '\(' → logprob: -7.632800102233887
    7. '
' → logprob: -9.257800102233887
    8. '`' → logprob: -9.507800102233887
    9. 'newline' → logprob: -9.757800102233887
    10. '()' → logprob: -9.882800102233887

Token 5: ' deque' (ID: 90347)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.3504667282104492
    2. 'Counter' → logprob: -1.6004667282104492
    3. ' deque' → logprob: -2.975466728210449
    4. 'deque' → logprob: -3.475466728210449
    5. ' Ordered' → logprob: -4.725466728210449
    6. 'Ordered' → logprob: -5.975466728210449
    7. ' named' → logprob: -8.72546672821045
    8. ' abc' → logprob: -8.97546672821045
    9. 'named' → logprob: -9.60046672821045
    10. 'abc' → logprob: -10.35046672821045

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00790258776396513
    2. '(
' → logprob: -5.8829026222229
    3. '\' → logprob: -6.5079026222229
    4. '\n' → logprob: -6.8829026222229
    5. ',' → logprob: -7.5079026222229
    6. '```' → logprob: -7.8829026222229
    7. 'newline' → logprob: -8.257902145385742
    8. '\(' → logprob: -8.382902145385742
    9. '' → logprob: -8.757902145385742
    10. '
' → logprob: -8.882902145385742

Token 7: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.36274489760398865
    2. 'Counter' → logprob: -1.612744927406311
    3. ' Ordered' → logprob: -2.8627448081970215
    4. 'Ordered' → logprob: -3.7377448081970215
    5. ' named' → logprob: -4.2377448081970215
    6. ' defaultdict' → logprob: -5.7377448081970215
    7. ' Chain' → logprob: -5.8627448081970215
    8. 'named' → logprob: -6.7377448081970215
    9. ' deque' → logprob: -7.1127448081970215
    10. 'Chain' → logprob: -7.2377448081970215

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24142640829086304
    2. '.' → logprob: -1.6164264678955078
    3. ',' → logprob: -5.491426467895508
    4. '\' → logprob: -5.741426467895508
    5. '```' → logprob: -5.866426467895508
    6. '(
' → logprob: -6.616426467895508
    7. '\(' → logprob: -6.616426467895508
    8. ' (' → logprob: -7.491426467895508
    9. '[' → logprob: -7.741426467895508
    10. '\n' → logprob: -7.866426467895508

Token 9: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7524330615997314
    2. '
' → logprob: -1.6274330615997314
    3. '.' → logprob: -2.3774330615997314
    4. '\' → logprob: -2.8774330615997314
    5. '```' → logprob: -3.1274330615997314
    6. ',' → logprob: -3.5024330615997314
    7. 'import' → logprob: -4.002432823181152
    8. '' → logprob: -4.127432823181152
    9. '

' → logprob: -4.502432823181152
    10. '#' → logprob: -4.502432823181152

Token 10: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.2459748238325119
    2. ' typing' → logprob: -1.7459747791290283
    3. ' heap' → logprob: -3.2459747791290283
    4. ' math' → logprob: -6.995975017547607
    5. ' queue' → logprob: -7.370975017547607
    6. ' sys' → logprob: -7.370975017547607
    7. 'typing' → logprob: -7.495975017547607
    8. ' collections' → logprob: -7.620975017547607
    9. ' functools' → logprob: -7.620975017547607
    10. ' os' → logprob: -8.12097454071045

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. 'queue' → logprob: -14.250000953674316
    3. 'import' → logprob: -14.375000953674316
    4. ' queue' → logprob: -17.875001907348633
    5. 'space' → logprob: -19.000001907348633
    6. ' import' → logprob: -19.250001907348633
    7. 's' → logprob: -19.375001907348633
    8. ' q' → logprob: -20.500001907348633
    9. 'dict' → logprob: -20.500001907348633
    10. 'que' → logprob: -20.875001907348633

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10036852210760117
    2. 'import' → logprob: -2.3503684997558594
    3. ' ' → logprob: -9.35036849975586
    4. '	import' → logprob: -10.35036849975586
    5. '_import' → logprob: -10.60036849975586
    6. '.import' → logprob: -11.97536849975586
    7. ' ' → logprob: -12.97536849975586
    8. '<|end|>' → logprob: -13.35036849975586
    9. '  ' → logprob: -13.85036849975586
    10. ' importar' → logprob: -14.10036849975586

Token 13: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.20302815735340118
    2. 'he' → logprob: -1.7030282020568848
    3. 'heap' → logprob: -6.828028202056885
    4. 'import' → logprob: -8.578027725219727
    5. ' heap' → logprob: -8.953027725219727
    6. 'nl' → logprob: -9.953027725219727
    7. ' ' → logprob: -10.078027725219727
    8. ' n' → logprob: -10.078027725219727
    9. '```' → logprob: -10.203027725219727
    10. 'n' → logprob: -10.828027725219727

Token 14: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00523719098418951
    2. 'ap' → logprob: -5.255237102508545
    3. 'a' → logprob: -12.755237579345703
    4. 'apl' → logprob: -15.880237579345703
    5. 'appen' → logprob: -16.130237579345703
    6. 'ап' → logprob: -16.880237579345703
    7. 'q' → logprob: -17.130237579345703
    8. 'aq' → logprob: -17.380237579345703
    9. 'aps' → logprob: -18.005237579345703
    10. '[' → logprob: -18.005237579345703

Token 15: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.02333783730864525
    2. 'op' → logprob: -3.7733378410339355
    3. 'us' → logprob: -9.648337364196777
    4. 'u' → logprob: -10.898337364196777
    5. 'o' → logprob: -11.648337364196777
    6. 'opleft' → logprob: -15.898337364196777
    7. '```' → logprob: -16.648338317871094
    8. '   ' → logprob: -16.898338317871094
    9. 'osh' → logprob: -17.023338317871094
    10. 'ut' → logprob: -17.148338317871094

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05536163970828056
    2. 'he' → logprob: -3.555361747741699
    3. ',' → logprob: -3.930361747741699
    4. '(heap' → logprob: -5.930361747741699
    5. '(
' → logprob: -6.180361747741699
    6. ' he' → logprob: -8.4303617477417
    7. ')' → logprob: -8.6803617477417
    8. ' (' → logprob: -8.9303617477417
    9. '(h' → logprob: -10.1803617477417
    10. '```' → logprob: -10.3053617477417

Token 17: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.4742039144039154
    2. ' he' → logprob: -0.9742039442062378
    3. 'heap' → logprob: -9.099204063415527
    4. ' heap' → logprob: -12.099204063415527
    5. ' ' → logprob: -12.599204063415527
    6. '.he' → logprob: -12.849204063415527
    7. '```' → logprob: -13.474204063415527
    8. '_he' → logprob: -14.849204063415527
    9. 'hep' → logprob: -15.349204063415527
    10. 'pop' → logprob: -15.599204063415527

Token 18: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.306760805164231e-05
    2. 'ap' → logprob: -11.25001335144043
    3. 'appen' → logprob: -18.25001335144043
    4. ' app' → logprob: -18.37501335144043
    5. 'APP' → logprob: -19.12501335144043
    6. 'appt' → logprob: -19.12501335144043
    7. 'a' → logprob: -19.50001335144043
    8. '_app' → logprob: -20.75001335144043
    9. '	app' → logprob: -20.75001335144043
    10. 'App' → logprob: -21.00001335144043

Token 19: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0005897291121073067
    2. 'ush' → logprob: -7.625589847564697
    3. 'o' → logprob: -9.875589370727539
    4. 'p' → logprob: -10.000589370727539
    5. 'opp' → logprob: -13.250589370727539
    6. 'app' → logprob: -14.250589370727539
    7. 'opleft' → logprob: -14.375589370727539
    8. 'sh' → logprob: -15.125589370727539
    9. 'pop' → logprob: -15.250589370727539
    10. 'pp' → logprob: -15.250589370727539

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34824228286743164
    2. '(' → logprob: -2.5982422828674316
    3. 'def' → logprob: -2.9732422828674316
    4. '

' → logprob: -3.0982422828674316
    5. '(
' → logprob: -3.2232422828674316
    6. '' → logprob: -3.7232422828674316
    7. '```' → logprob: -4.223242282867432
    8. '\n' → logprob: -4.473242282867432
    9. '\' → logprob: -4.723242282867432
    10. '
' → logprob: -5.348242282867432

Token 21: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5410853028297424
    2. ' heap' → logprob: -0.9160853028297424
    3. 'he' → logprob: -4.666085243225098
    4. ' he' → logprob: -4.791085243225098
    5. '```' → logprob: -10.666085243225098
    6. '.heap' → logprob: -10.791085243225098
    7. ' n' → logprob: -11.166085243225098
    8. ' heaps' → logprob: -11.791085243225098
    9. 'n' → logprob: -12.166085243225098
    10. 'import' → logprob: -12.666085243225098

Token 22: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.4861237704753876
    2. 'q' → logprob: -0.98612380027771
    3. 's' → logprob: -5.236123561859131
    4. 'queue' → logprob: -6.111123561859131
    5. 'replace' → logprob: -6.361123561859131
    6. '[' → logprob: -7.236123561859131
    7. 'lify' → logprob: -8.111124038696289
    8. '=' → logprob: -8.236124038696289
    9. 'push' → logprob: -8.736124038696289
    10. 'sort' → logprob: -8.986124038696289

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12511785328388214
    2. '\n' → logprob: -3.500117778778076
    3. '\' → logprob: -3.875117778778076
    4. 'def' → logprob: -4.375117778778076
    5. '(' → logprob: -4.500117778778076
    6. '(
' → logprob: -4.500117778778076
    7. '

' → logprob: -4.875117778778076
    8. '```' → logprob: -5.000117778778076
    9. '' → logprob: -5.125117778778076
    10. '
' → logprob: -5.250117778778076

Token 24: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.675939679145813
    2. '
' → logprob: -1.300939679145813
    3. 'def' → logprob: -2.3009395599365234
    4. '```' → logprob: -3.4259395599365234
    5. '' → logprob: -3.5509395599365234
    6. '\' → logprob: -3.8009395599365234
    7. '

' → logprob: -4.550939559936523
    8. '#' → logprob: -5.175939559936523
    9. '`' → logprob: -5.300939559936523
    10. '
' → logprob: -5.675939559936523

Token 25: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5236085057258606
    2. ' itertools' → logprob: -1.7736084461212158
    3. ' math' → logprob: -2.523608446121216
    4. ' collections' → logprob: -2.648608446121216
    5. ' ' → logprob: -3.273608446121216
    6. ' sys' → logprob: -3.773608446121216
    7. ' re' → logprob: -4.773608684539795
    8. ' heap' → logprob: -5.523608684539795
    9. ' ' → logprob: -5.648608684539795
    10. ' space' → logprob: -5.898608684539795

Token 26: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.786175012588501
    2. '
' → logprob: -1.036175012588501
    3. 'def' → logprob: -2.661175012588501
    4. 'd' → logprob: -3.286175012588501
    5. '\n' → logprob: -3.536175012588501
    6. '

' → logprob: -3.911175012588501
    7. '```' → logprob: -4.786174774169922
    8. '#' → logprob: -5.036174774169922
    9. '' → logprob: -5.036174774169922
    10. '.' → logprob: -6.036174774169922

Token 27: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48010414838790894
    2. '
' → logprob: -1.3551042079925537
    3. '\' → logprob: -2.9801042079925537
    4. '```' → logprob: -3.6051042079925537
    5. '\n' → logprob: -4.480103969573975
    6. '' → logprob: -4.855103969573975
    7. 'd' → logprob: -4.980103969573975
    8. '

' → logprob: -4.980103969573975
    9. '(
' → logprob: -6.480103969573975
    10. '#' → logprob: -6.730103969573975

Token 28: ' bis' (ID: 7204)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1934569627046585
    2. ' itertools' → logprob: -1.943457007408142
    3. ' random' → logprob: -4.193457126617432
    4. ' os' → logprob: -5.193457126617432
    5. ' collections' → logprob: -5.318457126617432
    6. ' operator' → logprob: -6.193457126617432
    7. ' functools' → logprob: -6.318457126617432
    8. ' heap' → logprob: -6.818457126617432
    9. ' bis' → logprob: -7.318457126617432
    10. ' ' → logprob: -7.818457126617432

Token 29: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.988221684878226e-06
    2. 't' → logprob: -12.375006675720215
    3. 'ected' → logprob: -13.250006675720215
    4. 'e' → logprob: -14.500006675720215
    5. 'ec' → logprob: -15.875006675720215
    6. 'ection' → logprob: -16.25000762939453
    7. 'ects' → logprob: -16.62500762939453
    8. 'ector' → logprob: -17.00000762939453
    9. 'ectl' → logprob: -17.25000762939453
    10. 'ective' → logprob: -17.87500762939453

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25225576758384705
    2. '

' → logprob: -2.00225567817688
    3. 'def' → logprob: -4.002255916595459
    4. '' → logprob: -4.252255916595459
    5. '#' → logprob: -4.377255916595459
    6. '\n' → logprob: -4.502255916595459
    7. '\' → logprob: -4.752255916595459
    8. ' 

' → logprob: -5.502255916595459
    9. 'import' → logprob: -5.502255916595459
    10. '.' → logprob: -5.752255916595459

Token 31: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8532309532165527
    2. 'def' → logprob: -1.3532309532165527
    3. '\' → logprob: -2.1032309532165527
    4. '\n' → logprob: -2.7282309532165527
    5. 'd' → logprob: -2.8532309532165527
    6. '```' → logprob: -3.9782309532165527
    7. '
' → logprob: -4.103230953216553
    8. '' → logprob: -4.478230953216553
    9. 'class' → logprob: -5.478230953216553
    10. '`' → logprob: -5.478230953216553

Token 32: ' random' (ID: 7526)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.608814001083374
    2. ' itertools' → logprob: -0.858814001083374
    3. ' random' → logprob: -3.608814001083374
    4. ' functools' → logprob: -6.233814239501953
    5. ' heap' → logprob: -6.858814239501953
    6. ' os' → logprob: -7.358814239501953
    7. ' collections' → logprob: -8.108814239501953
    8. ' re' → logprob: -8.233814239501953
    9. ' string' → logprob: -8.358814239501953
    10. 'random' → logprob: -8.483814239501953

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2637109160423279
    2. '#' → logprob: -2.3887109756469727
    3. '\n' → logprob: -3.1387109756469727
    4. '\' → logprob: -3.6387109756469727
    5. '```' → logprob: -4.013710975646973
    6. '

' → logprob: -4.263710975646973
    7. '' → logprob: -4.638710975646973
    8. 'd' → logprob: -4.888710975646973
    9. '<|end|>' → logprob: -5.013710975646973
    10. 'def' → logprob: -5.388710975646973

Token 34: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9219462871551514
    2. 'd' → logprob: -1.1719462871551514
    3. '
' → logprob: -2.1719462871551514
    4. 'def' → logprob: -2.5469462871551514
    5. '\' → logprob: -2.7969462871551514
    6. '```' → logprob: -4.4219465255737305
    7. '' → logprob: -4.6719465255737305
    8. '\n' → logprob: -4.9219465255737305
    9. '

' → logprob: -5.6719465255737305
    10. '`' → logprob: -5.9219465255737305

Token 35: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6835865378379822
    2. ' collections' → logprob: -0.8085865378379822
    3. ' ' → logprob: -4.183586597442627
    4. ' functools' → logprob: -4.433586597442627
    5. ' typing' → logprob: -4.933586597442627
    6. ' sys' → logprob: -5.683586597442627
    7. ' statistics' → logprob: -5.808586597442627
    8. ' datetime' → logprob: -5.933586597442627
    9. ' copy' → logprob: -6.308586597442627
    10. ' math' → logprob: -7.183586597442627

Token 36: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.15803904831409454
    2. 'import' → logprob: -2.533039093017578
    3. '.' → logprob: -2.783039093017578
    4. ' ' → logprob: -6.158039093017578
    5. ' .' → logprob: -6.283039093017578
    6. ' itertools' → logprob: -8.033039093017578
    7. '.import' → logprob: -8.783039093017578
    8. '.im' → logprob: -9.033039093017578
    9. '<|end|>' → logprob: -9.033039093017578
    10. '	import' → logprob: -9.533039093017578

Token 37: ' permutations' (ID: 174595)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.206093668937683
    2. ' accumulate' → logprob: -1.456093668937683
    3. 'com' → logprob: -1.956093668937683
    4. ' permutations' → logprob: -1.956093668937683
    5. ' ' → logprob: -2.8310937881469727
    6. ' chain' → logprob: -3.0810937881469727
    7. ' product' → logprob: -3.8310937881469727
    8. ' count' → logprob: -4.206093788146973
    9. ' cycle' → logprob: -4.331093788146973
    10. 'count' → logprob: -4.831093788146973

Token 38: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3766812086105347
    2. '\n' → logprob: -1.6266812086105347
    3. 'def' → logprob: -1.7516812086105347
    4. '<|end|>' → logprob: -2.001681327819824
    5. '\' → logprob: -2.876681327819824
    6. '#' → logprob: -3.001681327819824
    7. ',' → logprob: -3.126681327819824
    8. 'import' → logprob: -3.501681327819824
    9. '' → logprob: -4.126681327819824
    10. '.' → logprob: -4.626681327819824

Token 39: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.23691505193710327
    2. ' combinations' → logprob: -1.736915111541748
    3. 'product' → logprob: -3.986915111541748
    4. ' product' → logprob: -4.236915111541748
    5. '	com' → logprob: -7.611915111541748
    6. 'chain' → logprob: -7.986915111541748
    7. ' chain' → logprob: -8.23691463470459
    8. ' accumulate' → logprob: -9.11191463470459
    9. 'comb' → logprob: -9.36191463470459
    10. ' group' → logprob: -9.36191463470459

Token 40: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38176217675209045
    2. 'def' → logprob: -2.5067622661590576
    3. '

' → logprob: -2.7567622661590576
    4. '#' → logprob: -3.1317622661590576
    5. '' → logprob: -3.3817622661590576
    6. 'import' → logprob: -3.6317622661590576
    7. '\n' → logprob: -3.7567622661590576
    8. ',' → logprob: -4.1317620277404785
    9. '\' → logprob: -4.5067620277404785
    10. '<|end|>' → logprob: -5.5067620277404785

Token 41: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.33892327547073364
    2. 'com' → logprob: -1.8389232158660889
    3. 'group' → logprob: -2.463923215866089
    4. ' product' → logprob: -3.713923215866089
    5. ' group' → logprob: -5.088923454284668
    6. 'chain' → logprob: -5.088923454284668
    7. ' combinations' → logprob: -5.838923454284668
    8. 'cycle' → logprob: -5.963923454284668
    9. ' chain' → logprob: -7.338923454284668
    10. 'compress' → logprob: -9.088923454284668

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7344116568565369
    2. '
' → logprob: -1.1094117164611816
    3. '

' → logprob: -2.7344117164611816
    4. ',
' → logprob: -2.7344117164611816
    5. 'import' → logprob: -3.8594117164611816
    6. '\n' → logprob: -3.9844117164611816
    7. ',

' → logprob: -5.234411716461182
    8. '<|end|>' → logprob: -5.609411716461182
    9. 'def' → logprob: -5.859411716461182
    10. '' → logprob: -6.234411716461182

Token 43: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.1448267102241516
    2. 'product' → logprob: -2.519826650619507
    3. ' group' → logprob: -3.144826650619507
    4. ' chain' → logprob: -4.894826889038086
    5. 'com' → logprob: -6.644826889038086
    6. 'group' → logprob: -6.894826889038086
    7. ' cycle' → logprob: -7.894826889038086
    8. ' combinations' → logprob: -8.394826889038086
    9. 'chain' → logprob: -8.769826889038086
    10. ' ' → logprob: -8.769826889038086

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7171851396560669
    2. 'd' → logprob: -1.717185139656067
    3. 'def' → logprob: -1.842185139656067
    4. '#' → logprob: -3.0921850204467773
    5. '

' → logprob: -3.2171850204467773
    6. '\' → logprob: -3.7171850204467773
    7. '' → logprob: -3.9671850204467773
    8. '\n' → logprob: -3.9671850204467773
    9. 'import' → logprob: -4.467185020446777
    10. '```' → logprob: -4.967185020446777

Token 46: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06779658794403076
    2. 'sys' → logprob: -2.8177967071533203
    3. ' os' → logprob: -5.69279670715332
    4. ' functools' → logprob: -6.56779670715332
    5. ' operator' → logprob: -7.69279670715332
    6. 'os' → logprob: -8.44279670715332
    7. 'operator' → logprob: -8.69279670715332
    8. ' re' → logprob: -9.19279670715332
    9. 're' → logprob: -9.81779670715332
    10. ' numpy' → logprob: -11.94279670715332

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16955505311489105
    2. '

' → logprob: -2.0445549488067627
    3. '\n' → logprob: -4.169555187225342
    4. '\' → logprob: -5.544555187225342
    5. '' → logprob: -6.044555187225342
    6. 'import' → logprob: -6.794555187225342
    7. 'def' → logprob: -7.044555187225342
    8. '```' → logprob: -7.544555187225342
    9. '<|end|>' → logprob: -7.669555187225342
    10. '
' → logprob: -7.794555187225342

Token 48: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17823246121406555
    2. '

' → logprob: -2.303232431411743
    3. 'def' → logprob: -3.178232431411743
    4. '\n' → logprob: -4.928232669830322
    5. '\' → logprob: -5.553232669830322
    6. '' → logprob: -5.678232669830322
    7. '```' → logprob: -6.428232669830322
    8. 'import' → logprob: -6.678232669830322
    9. 'd' → logprob: -6.928232669830322
    10. '#' → logprob: -7.178232669830322

Token 49: ' string' (ID: 1621)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.010422284714877605
    2. ' threading' → logprob: -5.010422229766846
    3. ' io' → logprob: -5.635422229766846
    4. 'os' → logprob: -9.510422706604004
    5. ' functools' → logprob: -10.760422706604004
    6. ' operator' → logprob: -11.760422706604004
    7. ' heap' → logprob: -12.385422706604004
    8. ' time' → logprob: -12.510422706604004
    9. ' collections' → logprob: -12.760422706604004
    10. 'io' → logprob: -12.760422706604004

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21464283764362335
    2. '

' → logprob: -1.714642882347107
    3. '\n' → logprob: -4.9646430015563965
    4. '#' → logprob: -6.7146430015563965
    5. '\' → logprob: -6.8396430015563965
    6. '```' → logprob: -7.0896430015563965
    7. '' → logprob: -7.2146430015563965
    8. 'def' → logprob: -7.4646430015563965
    9. 'import' → logprob: -7.5896430015563965
    10. '
' → logprob: -7.9646430015563965

Token 51: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11791101843118668
    2. '

' → logprob: -2.4929111003875732
    3. '\n' → logprob: -4.742910861968994
    4. 'def' → logprob: -4.992910861968994
    5. 'd' → logprob: -5.492910861968994
    6. '#' → logprob: -6.242910861968994
    7. 'import' → logprob: -6.492910861968994
    8. '' → logprob: -6.617910861968994
    9. 'class' → logprob: -6.742910861968994
    10. '\' → logprob: -6.992910861968994

Token 52: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.753099262714386
    2. ' os' → logprob: -1.7530992031097412
    3. ' math' → logprob: -2.003099203109741
    4. ' io' → logprob: -2.378099203109741
    5. ' functools' → logprob: -2.753099203109741
    6. ' typing' → logprob: -3.503099203109741
    7. ' itertools' → logprob: -4.75309944152832
    8. 'collections' → logprob: -4.87809944152832
    9. ' operator' → logprob: -6.00309944152832
    10. '_' → logprob: -6.25309944152832

Token 53: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0012144023785367608
    2. 'ct' → logprob: -7.376214504241943
    3. 'sect' → logprob: -8.376214027404785
    4. 'ects' → logprob: -9.376214027404785
    5. 'ent' → logprob: -9.626214027404785
    6. 'ort' → logprob: -9.626214027404785
    7. 'import' → logprob: -10.001214027404785
    8. 'ert' → logprob: -10.751214027404785
    9. 'ict' → logprob: -11.376214027404785
    10. 'ext' → logprob: -11.626214027404785

Token 54: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06949715316295624
    2. 'import' → logprob: -2.8194971084594727
    3. '.' → logprob: -5.444497108459473
    4. ' ' → logprob: -6.444497108459473
    5. '_' → logprob: -7.194497108459473
    6. '_import' → logprob: -7.694497108459473
    7. '<|end|>' → logprob: -8.444497108459473
    8. '	import' → logprob: -10.194497108459473
    9. '.import' → logprob: -10.444497108459473
    10. ' .' → logprob: -10.444497108459473

Token 55: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4796743094921112
    2. ' bis' → logprob: -0.9796743392944336
    3. 'ins' → logprob: -5.229674339294434
    4. ' ins' → logprob: -8.479674339294434
    5. '_ins' → logprob: -12.479674339294434
    6. 'bl' → logprob: -12.604674339294434
    7. '	b' → logprob: -12.604674339294434
    8. 'b' → logprob: -12.854674339294434
    9. '```' → logprob: -13.354674339294434
    10. ' ' → logprob: -13.604674339294434

Token 56: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.771655115589965e-05
    2. 'e' → logprob: -11.125018119812012
    3. 'ected' → logprob: -14.250018119812012
    4. 'ectl' → logprob: -14.250018119812012
    5. 'ecta' → logprob: -15.000018119812012
    6. 'ects' → logprob: -15.250018119812012
    7. 'ec' → logprob: -15.375018119812012
    8. 'sect' → logprob: -15.500018119812012
    9. '```' → logprob: -15.875018119812012
    10. 'ext' → logprob: -16.125017166137695

Token 57: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.2205096036195755
    2. '_' → logprob: -2.0955095291137695
    3. '_right' → logprob: -2.5955095291137695
    4. 'left' → logprob: -10.47050952911377
    5. '_LEFT' → logprob: -10.47050952911377
    6. '_ins' → logprob: -10.59550952911377
    7. 'Left' → logprob: -10.97050952911377
    8. '_RIGHT' → logprob: -11.22050952911377
    9. 'right' → logprob: -11.22050952911377
    10. '.' → logprob: -11.34550952911377

Token 58: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12439819425344467
    2. '

' → logprob: -2.7493982315063477
    3. 'def' → logprob: -3.7493982315063477
    4. ',' → logprob: -4.624398231506348
    5. '\n' → logprob: -5.124398231506348
    6. '' → logprob: -5.874398231506348
    7. 'newline' → logprob: -6.499398231506348
    8. '


' → logprob: -6.749398231506348
    9. '<|end|>' → logprob: -6.874398231506348
    10. '
' → logprob: -7.249398231506348

Token 59: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.07891479134559631
    2. ' bis' → logprob: -2.5789148807525635
    3. 'ins' → logprob: -10.953914642333984
    4. 'b' → logprob: -12.703914642333984
    5. '```' → logprob: -13.328914642333984
    6. ' ins' → logprob: -13.703914642333984
    7. ' ' → logprob: -14.953914642333984
    8. '	b' → logprob: -15.078914642333984
    9. 'bs' → logprob: -15.891414642333984
    10. 'import' → logprob: -16.453914642333984

Token 60: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.0010457895696163177
    2. 's' → logprob: -7.8760457038879395
    3. 'ect' → logprob: -8.001046180725098
    4. '```' → logprob: -9.251046180725098
    5. 'n' → logprob: -9.876046180725098
    6. 'se' → logprob: -10.501046180725098
    7. '_' → logprob: -10.626046180725098
    8. 'section' → logprob: -10.626046180725098
    9. '_right' → logprob: -10.751046180725098
    10. 'ct' → logprob: -11.501046180725098

Token 61: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0710396096110344
    2. 'ght' → logprob: -3.3210396766662598
    3. 'ight' → logprob: -3.6960396766662598
    4. 'right' → logprob: -4.94603967666626
    5. 'Right' → logprob: -8.696039199829102
    6. 't' → logprob: -9.571039199829102
    7. '_' → logprob: -9.946039199829102
    8. 'ect' → logprob: -10.196039199829102
    9. 'ort' → logprob: -10.321039199829102
    10. '_RIGHT' → logprob: -10.321039199829102

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.537674069404602
    2. '

' → logprob: -0.912674069404602
    3. 'def' → logprob: -4.7876739501953125
    4. '\n' → logprob: -6.5376739501953125
    5. '' → logprob: -6.9126739501953125
    6. '
' → logprob: -7.2876739501953125
    7. '#' → logprob: -7.4126739501953125
    8. '```' → logprob: -7.4126739501953125
    9. '<|end|>' → logprob: -7.5376739501953125
    10. '


' → logprob: -7.7876739501953125

Token 63: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5413188338279724
    2. '

' → logprob: -1.0413188934326172
    3. 'def' → logprob: -3.166318893432617
    4. '' → logprob: -5.041318893432617
    5. '#' → logprob: -5.541318893432617
    6. 'import' → logprob: -5.916318893432617
    7. '\n' → logprob: -6.041318893432617
    8. '```' → logprob: -6.291318893432617
    9. 'd' → logprob: -6.666318893432617
    10. '
' → logprob: -7.041318893432617

Token 64: ' math' (ID: 13324)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.2799171209335327
    2. ' functools' → logprob: -1.5299171209335327
    3. 'os' → logprob: -2.0299172401428223
    4. 'operator' → logprob: -2.4049172401428223
    5. ' typing' → logprob: -2.7799172401428223
    6. 'math' → logprob: -3.1549172401428223
    7. 'typing' → logprob: -3.1549172401428223
    8. 'io' → logprob: -3.5299172401428223
    9. ' operator' → logprob: -3.6549172401428223
    10. ' collections' → logprob: -3.7799172401428223

Token 65: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04939556121826172
    2. 'import' → logprob: -3.5493955612182617
    3. ' ' → logprob: -4.299395561218262
    4. '<|end|>' → logprob: -5.299395561218262
    5. '.' → logprob: -8.049395561218262
    6. '<|end|>' → logprob: -8.549395561218262
    7. '	import' → logprob: -9.424395561218262
    8. '```' → logprob: -9.549395561218262
    9. '_import' → logprob: -9.799395561218262
    10. '_' → logprob: -9.924395561218262

Token 66: ' factorial' (ID: 111204)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -1.4160380363464355
    2. 'sqrt' → logprob: -1.4160380363464355
    3. ' ceil' → logprob: -1.6660380363464355
    4. ' sqrt' → logprob: -2.1660380363464355
    5. ' inf' → logprob: -2.4160380363464355
    6. ' gcd' → logprob: -2.5410380363464355
    7. 'inf' → logprob: -4.0410380363464355
    8. ' factorial' → logprob: -4.2910380363464355
    9. 'log' → logprob: -5.9160380363464355
    10. 'is' → logprob: -6.1660380363464355

Token 67: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41099199652671814
    2. '

' → logprob: -1.5359920263290405
    3. 'def' → logprob: -2.410991907119751
    4. '#' → logprob: -4.53599214553833
    5. '' → logprob: -4.91099214553833
    6. ',' → logprob: -5.41099214553833
    7. '\' → logprob: -6.28599214553833
    8. '\n' → logprob: -6.53599214553833
    9. '<|end|>' → logprob: -7.16099214553833
    10. '
' → logprob: -7.66099214553833

Token 68: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.26263707876205444
    2. 'g' → logprob: -2.387637138366699
    3. 'ceil' → logprob: -2.762637138366699
    4. 'is' → logprob: -3.637637138366699
    5. 'log' → logprob: -3.887637138366699
    6. 'comb' → logprob: -3.887637138366699
    7. 'inf' → logprob: -6.512637138366699
    8. 'pow' → logprob: -6.512637138366699
    9. '```' → logprob: -6.637637138366699
    10. ' gcd' → logprob: -6.887637138366699

Token 69: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23726336658000946
    2. ',' → logprob: -2.1122634410858154
    3. '

' → logprob: -3.1122634410858154
    4. '<|end|>' → logprob: -3.9872634410858154
    5. 'def' → logprob: -4.487263202667236
    6. '(
' → logprob: -5.487263202667236
    7. ',
' → logprob: -5.737263202667236
    8. '(' → logprob: -6.487263202667236
    9. '
' → logprob: -6.612263202667236
    10. '\n' → logprob: -6.737263202667236

Token 70: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.044613100588321686
    2. ' floor' → logprob: -3.2946131229400635
    3. 'sqrt' → logprob: -5.544612884521484
    4. 'log' → logprob: -6.294612884521484
    5. 'inf' → logprob: -7.544612884521484
    6. 'fabs' → logprob: -9.169612884521484
    7. ' sqrt' → logprob: -9.669612884521484
    8. 'g' → logprob: -10.419612884521484
    9. ' inf' → logprob: -11.169612884521484
    10. 'pow' → logprob: -11.294612884521484

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6380462050437927
    2. '

' → logprob: -0.7630462050437927
    3. 'def' → logprob: -6.7630462646484375
    4. '\n' → logprob: -7.0130462646484375
    5. '


' → logprob: -7.2630462646484375
    6. '\' → logprob: -7.8880462646484375
    7. '' → logprob: -8.013046264648438
    8. '#' → logprob: -8.013046264648438
    9. '
' → logprob: -8.138046264648438
    10. ' 

' → logprob: -8.388046264648438

Token 72: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24350783228874207
    2. 'def' → logprob: -1.8685078620910645
    3. '

' → logprob: -3.6185078620910645
    4. 'd' → logprob: -3.6185078620910645
    5. '#' → logprob: -6.4935078620910645
    6. '
' → logprob: -6.4935078620910645
    7. '' → logprob: -6.7435078620910645
    8. '\' → logprob: -7.1185078620910645
    9. 'import' → logprob: -7.4935078620910645
    10. 'n' → logprob: -7.6185078620910645

Token 73: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.28939583897590637
    2. ' fractions' → logprob: -2.539395809173584
    3. ' functools' → logprob: -3.039395809173584
    4. ' decimal' → logprob: -3.164395809173584
    5. ' typing' → logprob: -3.289395809173584
    6. 'operator' → logprob: -4.289395809173584
    7. ' statistics' → logprob: -4.414395809173584
    8. ' collections' → logprob: -5.414395809173584
    9. '_' → logprob: -6.039395809173584
    10. ' os' → logprob: -6.164395809173584

Token 74: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.015808522701263428
    2. 'import' → logprob: -4.265808582305908
    3. '<|end|>' → logprob: -6.515808582305908
    4. ' ' → logprob: -9.39080810546875
    5. '	import' → logprob: -10.14080810546875
    6. '<|end|>' → logprob: -11.64080810546875
    7. ' as' → logprob: -11.89080810546875
    8. '_import' → logprob: -12.14080810546875
    9. '.' → logprob: -12.14080810546875
    10. ',' → logprob: -12.51580810546875

Token 75: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.10269232839345932
    2. 'item' → logprob: -2.3526923656463623
    3. ' mul' → logprob: -7.102692127227783
    4. ' attr' → logprob: -7.852692127227783
    5. ' ' → logprob: -8.227692604064941
    6. 'mul' → logprob: -8.602692604064941
    7. '	item' → logprob: -8.852692604064941
    8. 'getitem' → logprob: -8.977692604064941
    9. 'attr' → logprob: -9.102692604064941
    10. ' method' → logprob: -9.352692604064941

Token 76: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028814634308218956
    2. ',
' → logprob: -3.9038145542144775
    3. '
' → logprob: -5.403814792633057
    4. 'import' → logprob: -7.028814792633057
    5. '<|end|>' → logprob: -7.153814792633057
    6. '' → logprob: -7.778814792633057
    7. '\n' → logprob: -7.903814792633057
    8. '\' → logprob: -8.278814315795898
    9. ' ,' → logprob: -8.403814315795898
    10. '  
' → logprob: -9.028814315795898

Token 77: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6491536498069763
    2. '
' → logprob: -1.774153709411621
    3. '<|end|>' → logprob: -2.274153709411621
    4. '\n' → logprob: -2.774153709411621
    5. '\' → logprob: -3.024153709411621
    6. 'import' → logprob: -3.524153709411621
    7. 'def' → logprob: -3.899153709411621
    8. ',
' → logprob: -4.524153709411621
    9. '

' → logprob: -4.649153709411621
    10. ' 
' → logprob: -5.274153709411621

Token 78: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.005033086519688368
    2. 'fun' → logprob: -5.630033016204834
    3. ' itertools' → logprob: -6.755033016204834
    4. '_' → logprob: -9.505033493041992
    5. 'operator' → logprob: -9.880033493041992
    6. ' operator' → logprob: -10.130033493041992
    7. ' math' → logprob: -10.880033493041992
    8. '_fun' → logprob: -10.880033493041992
    9. ' ' → logprob: -10.880033493041992
    10. '```' → logprob: -11.755033493041992

Token 79: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04339204356074333
    2. 'import' → logprob: -3.1683919429779053
    3. '_import' → logprob: -8.793392181396484
    4. '<|end|>' → logprob: -8.918392181396484
    5. '	import' → logprob: -10.043392181396484
    6. ' ' → logprob: -10.668392181396484
    7. '.' → logprob: -11.543392181396484
    8. '.import' → logprob: -11.543392181396484
    9. '<|end|>' → logprob: -12.043392181396484
    10. ' imports' → logprob: -12.293392181396484

Token 80: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.4832026958465576
    2. ' reduce' → logprob: -0.9832026958465576
    3. ' l' → logprob: -4.983202934265137
    4. 'l' → logprob: -6.233202934265137
    5. 'partial' → logprob: -9.108202934265137
    6. ' partial' → logprob: -9.983202934265137
    7. 'redu' → logprob: -10.358202934265137
    8. 'wrap' → logprob: -10.608202934265137
    9. ' wraps' → logprob: -10.733202934265137
    10. ' cmp' → logprob: -11.983202934265137

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16376696527004242
    2. '

' → logprob: -1.9137669801712036
    3. '' → logprob: -7.038766860961914
    4. 'def' → logprob: -7.288766860961914
    5. '\n' → logprob: -7.788766860961914
    6. '
' → logprob: -8.038766860961914
    7. '\' → logprob: -8.413766860961914
    8. '


' → logprob: -8.538766860961914
    9. ' 

' → logprob: -9.038766860961914
    10. 'n' → logprob: -9.163766860961914

Token 82: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1931038349866867
    2. 'def' → logprob: -2.693103790283203
    3. '

' → logprob: -3.568103790283203
    4. 'd' → logprob: -3.943103790283203
    5. '\n' → logprob: -4.193103790283203
    6. 'n' → logprob: -4.568103790283203
    7. '\' → logprob: -4.818103790283203
    8. '' → logprob: -5.068103790283203
    9. '#' → logprob: -5.068103790283203
    10. ' 
' → logprob: -5.568103790283203

Token 83: ' operator' (ID: 11019)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0769628956913948
    2. ' operator' → logprob: -3.701962947845459
    3. ' io' → logprob: -3.951962947845459
    4. ' typing' → logprob: -4.826962947845459
    5. ' math' → logprob: -4.826962947845459
    6. ' collections' → logprob: -5.701962947845459
    7. ' time' → logprob: -5.826962947845459
    8. ' random' → logprob: -5.951962947845459
    9. ' ' → logprob: -6.451962947845459
    10. ' functools' → logprob: -7.451962947845459

Token 84: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.033313680440187454
    2. 'import' → logprob: -3.658313751220703
    3. '.' → logprob: -5.658313751220703
    4. ' ' → logprob: -6.533313751220703
    5. '<|end|>' → logprob: -6.908313751220703
    6. ',' → logprob: -7.533313751220703
    7. '_' → logprob: -8.158313751220703
    8. ' ,' → logprob: -9.408313751220703
    9. '_import' → logprob: -9.658313751220703
    10. '	import' → logprob: -11.158313751220703

Token 85: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5830765962600708
    2. ' add' → logprob: -1.0830765962600708
    3. ' ' → logprob: -3.5830764770507812
    4. 'add' → logprob: -4.208076477050781
    5. 'item' → logprob: -4.208076477050781
    6. ' icon' → logprob: -4.458076477050781
    7. ' mul' → logprob: -4.583076477050781
    8. ' attr' → logprob: -5.208076477050781
    9. ' i' → logprob: -5.833076477050781
    10. '   ' → logprob: -5.958076477050781

Token 86: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2649043798446655
    2. '

' → logprob: -1.6399043798446655
    3. ',' → logprob: -4.514904499053955
    4. '\n' → logprob: -4.639904499053955
    5. ' 

' → logprob: -5.639904499053955
    6. ',
' → logprob: -5.889904499053955
    7. '' → logprob: -6.014904499053955
    8. '


' → logprob: -6.264904499053955
    9. 'n' → logprob: -6.389904499053955
    10. ' 
' → logprob: -6.514904499053955

Token 87: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5578621625900269
    2. ' 
' → logprob: -2.3078622817993164
    3. 'def' → logprob: -2.6828622817993164
    4. '#' → logprob: -3.0578622817993164
    5. ' 

' → logprob: -3.0578622817993164
    6. ',' → logprob: -3.1828622817993164
    7. ' ' → logprob: -3.3078622817993164
    8. '

' → logprob: -3.5578622817993164
    9. 'n' → logprob: -3.8078622817993164
    10. ' 
 
' → logprob: -5.557862281799316

Token 88: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006010498036630452
    2. '_' → logprob: -7.750600814819336
    3. '#' → logprob: -10.000600814819336
    4. 'def' → logprob: -10.250600814819336
    5. ' def' → logprob: -11.500600814819336
    6. 'd' → logprob: -11.625600814819336
    7. ' ​' → logprob: -12.000600814819336
    8. '-' → logprob: -12.125600814819336
    9. ' `' → logprob: -12.125600814819336
    10. ' d' → logprob: -12.250600814819336

Token 89: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.6411053538322449
    2. 'mented' → logprob: -0.7661053538322449
    3. 'mentation' → logprob: -5.2661051750183105
    4. 'm' → logprob: -6.3911051750183105
    5. '#' → logprob: -6.7661051750183105
    6. 'men' → logprob: -8.641105651855469
    7. 'ments' → logprob: -9.516105651855469
    8. 'mentor' → logprob: -9.891105651855469
    9. 'ument' → logprob: -10.266105651855469
    10. 'me' → logprob: -10.391105651855469

Token 90: 'er' (ID: 259)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.050128698348999
    2. 'ation' → logprob: -1.550128698348999
    3. 'ing' → logprob: -1.800128698348999
    4. '_' → logprob: -2.550128698348999
    5. 'def' → logprob: -2.550128698348999
    6. ' ' → logprob: -2.675128698348999
    7. 'er' → logprob: -4.050128936767578
    8. 'class' → logprob: -4.925128936767578
    9. 'd' → logprob: -5.675128936767578
    10. '  ' → logprob: -6.050128936767578

Token 91: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19757340848445892
    2. '(' → logprob: -2.94757342338562
    3. 's' → logprob: -2.94757342338562
    4. ' ' → logprob: -3.19757342338562
    5. '_' → logprob: -4.697573184967041
    6. 'class' → logprob: -4.947573184967041
    7. '=' → logprob: -5.697573184967041
    8. 'def' → logprob: -5.947573184967041
    9. ' =' → logprob: -6.072573184967041
    10. '-' → logprob: -6.072573184967041

Token 92: ' limite' (ID: 48939)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.2720139026641846
    2. 'performance' → logprob: -1.3970139026641846
    3. 'tail' → logprob: -2.2720139026641846
    4. 'lis' → logprob: -2.2720139026641846
    5. 'pr' → logprob: -2.3970139026641846
    6. 'fonction' → logprob: -3.6470139026641846
    7. 'list' → logprob: -3.8970139026641846
    8. ' liste' → logprob: -4.3970136642456055
    9. 'v' → logprob: -4.6470136642456055
    10. 'product' → logprob: -5.1470136642456055

Token 93: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02823963388800621
    2. 'import' → logprob: -4.278239727020264
    3. 'sys' → logprob: -5.528239727020264
    4. 's' → logprob: -5.653239727020264
    5. '(sys' → logprob: -6.028239727020264
    6. '(' → logprob: -7.153239727020264
    7. '_s' → logprob: -7.403239727020264
    8. '_sys' → logprob: -7.653239727020264
    9. ' sys' → logprob: -8.028239250183105
    10. '#' → logprob: -8.028239250183105

Token 94: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.006753967143595219
    2. 're' → logprob: -5.256753921508789
    3. ' recursion' → logprob: -7.131753921508789
    4. 'r' → logprob: -7.506753921508789
    5. '_rec' → logprob: -9.256753921508789
    6. 'recursive' → logprob: -10.381753921508789
    7. 's' → logprob: -11.631753921508789
    8. 'rc' → logprob: -12.006753921508789
    9. 'sys' → logprob: -12.256753921508789
    10. ' réc' → logprob: -12.506753921508789

Token 95: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.008986089378595352
    2. 'ur' → logprob: -5.633985996246338
    3. 'urs' → logprob: -5.883985996246338
    4. 'ursive' → logprob: -6.383985996246338
    5. 'u' → logprob: -7.758985996246338
    6. '```' → logprob: -8.508986473083496
    7. 'urse' → logprob: -9.008986473083496
    8. '**' → logprob: -10.508986473083496
    9. '#' → logprob: -10.633986473083496
    10. 'c' → logprob: -11.758986473083496

Token 96: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07588526606559753
    2. ':' → logprob: -3.82588529586792
    3. 'import' → logprob: -4.07588529586792
    4. '\' → logprob: -4.20088529586792
    5. 's' → logprob: -5.95088529586792
    6. '\n' → logprob: -5.95088529586792
    7. 'sys' → logprob: -6.20088529586792
    8. '
' → logprob: -6.32588529586792
    9. '```' → logprob: -6.45088529586792
    10. ' ' → logprob: -6.82588529586792

Token 97: ',' (ID: 11)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.40455812215805054
    2. '\' → logprob: -2.2795581817626953
    3. 'import' → logprob: -2.2795581817626953
    4. ' sys' → logprob: -3.1545581817626953
    5. '\n' → logprob: -3.2795581817626953
    6. '' → logprob: -4.279558181762695
    7. '
' → logprob: -4.404558181762695
    8. ':' → logprob: -5.654558181762695
    9. '`' → logprob: -5.654558181762695
    10. '```' → logprob: -5.779558181762695

Token 98: ' utile' (ID: 68237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014764256775379181
    2. '_' → logprob: -4.889764308929443
    3. ' 
' → logprob: -6.389764308929443
    4. '    ' → logprob: -7.264764308929443
    5. ' )' → logprob: -7.264764308929443
    6. '  
' → logprob: -7.389764308929443
    7. ' sys' → logprob: -7.389764308929443
    8. '  ' → logprob: -7.764764308929443
    9. ' _' → logprob: -8.014763832092285
    10. '<|end|>' → logprob: -8.514763832092285

Token 99: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022583581507205963
    2. '_' → logprob: -4.772583484649658
    3. ' for' → logprob: -5.522583484649658
    4. '  ' → logprob: -6.272583484649658
    5. ' ' → logprob: -6.272583484649658
    6. ' pour' → logprob: -6.647583484649658
    7. ' sys' → logprob: -6.897583484649658
    8. ' _' → logprob: -7.647583484649658
    9. ',' → logprob: -8.022583961486816
    10. 'import' → logprob: -8.147583961486816

Token 100: ' les' (ID: 1341)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13840794563293457
    2. ' les' → logprob: -2.5134079456329346
    3. ' l' → logprob: -3.3884079456329346
    4. 'sys' → logprob: -5.7634077072143555
    5. ' la' → logprob: -5.8884077072143555
    6. 'les' → logprob: -6.5134077072143555
    7. ' ' → logprob: -6.6384077072143555
    8. ' recursion' → logprob: -7.0134077072143555
    9. ' dfs' → logprob: -7.1384077072143555
    10. 'l' → logprob: -7.3884077072143555

Token 101: ' grands' (ID: 43085)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -1.1347572803497314
    2. ' tests' → logprob: -2.0097572803497314
    3. ' problèmes' → logprob: -2.0097572803497314
    4. ' appels' → logprob: -2.2597572803497314
    5. ' réc' → logprob: -3.0097572803497314
    6. 'pro' → logprob: -3.0097572803497314
    7. ' sys' → logprob: -3.1347572803497314
    8. 'tests' → logprob: -3.8847572803497314
    9. ' DFS' → logprob: -4.134757041931152
    10. ' grands' → logprob: -4.384757041931152

Token 102: ' arbres' (ID: 127011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10812103748321533
    2. '_depth' → logprob: -4.233120918273926
    3. ' arbres' → logprob: -4.233120918273926
    4. '_input' → logprob: -4.733120918273926
    5. '_rec' → logprob: -5.108120918273926
    6. 'dfs' → logprob: -5.483120918273926
    7. '_inputs' → logprob: -5.483120918273926
    8. ' inputs' → logprob: -5.858120918273926
    9. 'inputs' → logprob: -5.858120918273926
    10. 's' → logprob: -5.983120918273926

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5937440395355225
    2. 'sys' → logprob: -1.2187440395355225
    3. 'import' → logprob: -3.2187440395355225
    4. '(sys' → logprob: -3.4687440395355225
    5. ':' → logprob: -4.218744277954102
    6. '  
' → logprob: -4.343744277954102
    7. '(
' → logprob: -4.343744277954102
    8. '\n' → logprob: -4.718744277954102
    9. '(' → logprob: -4.968744277954102
    10. ':
' → logprob: -5.093744277954102

Token 104: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.015433666296303272
    2. 'import' → logprob: -4.5154337882995605
    3. ' sys' → logprob: -6.3904337882995605
    4. '
' → logprob: -6.5154337882995605
    5. '=sys' → logprob: -8.015433311462402
    6. '\n' → logprob: -8.265433311462402
    7. '(sys' → logprob: -8.390433311462402
    8. '\' → logprob: -9.265433311462402
    9. '' → logprob: -9.515433311462402
    10. '`' → logprob: -9.515433311462402

Token 105: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25044068694114685
    2. '.setdefault' → logprob: -2.0004405975341797
    3. '.set' → logprob: -2.5004405975341797
    4. '.argv' → logprob: -6.37544059753418
    5. '.stdout' → logprob: -7.37544059753418
    6. '.stdin' → logprob: -7.62544059753418
    7. '.stderr' → logprob: -7.75044059753418
    8. ' .' → logprob: -8.00044059753418
    9. '.exit' → logprob: -8.37544059753418
    10. '.append' → logprob: -10.12544059753418

Token 106: 'rec' (ID: 9285)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.22571364045143127
    2. 'rec' → logprob: -1.8507136106491089
    3. '_rec' → logprob: -3.6007137298583984
    4. ' recursion' → logprob: -5.475713729858398
    5. 'ection' → logprob: -5.600713729858398
    6. '_limit' → logprob: -5.600713729858398
    7. '_' → logprob: -6.225713729858398
    8. ' _' → logprob: -7.350713729858398
    9. 'ault' → logprob: -7.475713729858398
    10. 'limit' → logprob: -7.975713729858398

Token 107: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -6.153795766294934e-06
    2. 'urs' → logprob: -13.125005722045898
    3. 'ur' → logprob: -13.250005722045898
    4. 'ursive' → logprob: -13.875005722045898
    5. 'limit' → logprob: -13.875005722045898
    6. 'usion' → logprob: -15.000005722045898
    7. 'ursor' → logprob: -16.6250057220459
    8. '_limit' → logprob: -16.8750057220459
    9. '_' → logprob: -17.5000057220459
    10. 'urse' → logprob: -18.5000057220459

Token 108: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.6938179731369019
    2. '_limit' → logprob: -0.6938179731369019
    3. 'lim' → logprob: -7.568818092346191
    4. '_lim' → logprob: -9.818818092346191
    5. '_depth' → logprob: -10.068818092346191
    6. '_' → logprob: -10.568818092346191
    7. '_li' → logprob: -11.568818092346191
    8. '_LIMIT' → logprob: -12.818818092346191
    9. 'al' → logprob: -13.068818092346191
    10. 'depth' → logprob: -13.068818092346191

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5570885807392187e-05
    2. '(
' → logprob: -11.250015258789062
    3. ' (' → logprob: -14.000015258789062
    4. '((' → logprob: -14.375015258789062
    5. '(

' → logprob: -14.625015258789062
    6. '()' → logprob: -15.750015258789062
    7. '```' → logprob: -15.750015258789062
    8. '<|end|>' → logprob: -16.375015258789062
    9. '(`' → logprob: -16.625015258789062
    10. '(int' → logprob: -16.875015258789062

Token 110: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006766056176275015
    2. '100' → logprob: -5.006765842437744
    3. ' ' → logprob: -10.006766319274902
    4. '200' → logprob: -13.256766319274902
    5. '1' → logprob: -13.631766319274902
    6. '250' → logprob: -13.881766319274902
    7. '300' → logprob: -14.381766319274902
    8. '400' → logprob: -14.631766319274902
    9. '500' → logprob: -14.881766319274902
    10. '410' → logprob: -16.131765365600586

Token 111: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.0011111628264188766
    2. '7' → logprob: -7.376111030578613
    3. '700' → logprob: -8.126111030578613
    4. '743' → logprob: -9.501111030578613
    5. '747' → logprob: -10.001111030578613
    6. '74' → logprob: -10.126111030578613
    7. '738' → logprob: -11.001111030578613
    8. '728' → logprob: -12.626111030578613
    9. '000' → logprob: -13.751111030578613
    10. '737' → logprob: -13.876111030578613

Token 112: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -4.954393079970032e-05
    2. '363' → logprob: -10.000049591064453
    3. '3' → logprob: -13.125049591064453
    4. '36' → logprob: -13.625049591064453
    5. '362' → logprob: -14.625049591064453
    6. '360' → logprob: -15.500049591064453
    7. '367' → logprob: -16.750049591064453
    8. '    
' → logprob: -16.750049591064453
    9. '361' → logprob: -17.125049591064453
    10. '366' → logprob: -17.875049591064453

Token 113: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.842555426876061e-06
    2. '6' → logprob: -12.375004768371582
    3. ')' → logprob: -14.500004768371582
    4. ' ' → logprob: -18.5000057220459
    5. '0' → logprob: -18.7500057220459
    6. '   ' → logprob: -19.5000057220459
    7. '  ' → logprob: -19.5000057220459
    8. '۷' → logprob: -19.5000057220459
    9. '8' → logprob: -19.7500057220459
    10. '5' → logprob: -20.2500057220459

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -13.37500286102295
    4. '))' → logprob: -17.250003814697266
    5. ')

' → logprob: -18.625003814697266
    6. '),' → logprob: -18.750003814697266
    7. '}' → logprob: -19.000003814697266
    8. ')`' → logprob: -19.000003814697266
    9. ')#' → logprob: -19.375003814697266
    10. '+' → logprob: -19.375003814697266

Token 115: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.08294825255870819
    2. '
' → logprob: -2.5829482078552246
    3. '


' → logprob: -6.332948207855225
    4. '
' → logprob: -6.457948207855225
    5. '

' → logprob: -7.832948207855225
    6. '

' → logprob: -8.707948684692383
    7. '' → logprob: -9.707948684692383
    8. '
 
' → logprob: -10.707948684692383
    9. '

' → logprob: -10.832948684692383
    10. ' 

' → logprob: -11.207948684692383

Token 116: ' Util' (ID: 13564)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3597920536994934
    2. ' input' → logprob: -1.8597919940948486
    3. 'stdin' → logprob: -2.6097919940948486
    4. 'import' → logprob: -3.4847919940948486
    5. ' threading' → logprob: -3.8597919940948486
    6. 'thread' → logprob: -4.984792232513428
    7. ' stdin' → logprob: -5.234792232513428
    8. '#' → logprob: -5.609792232513428
    9. 'sys' → logprob: -6.609792232513428
    10. ' import' → logprob: -7.109792232513428

Token 117: 'isé' (ID: 30065)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.12216059118509293
    2. 'ser' → logprob: -2.6221606731414795
    3. 'isateur' → logprob: -3.8721606731414795
    4. 's' → logprob: -5.1221604347229
    5. 'isez' → logprob: -5.1221604347229
    6. 'isation' → logprob: -5.6221604347229
    7. 'se' → logprob: -5.9971604347229
    8. 'import' → logprob: -6.8721604347229
    9. '#' → logprob: -7.2471604347229
    10. 'isé' → logprob: -8.122160911560059

Token 118: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8565993905067444
    2. ' pour' → logprob: -0.8565993905067444
    3. ' for' → logprob: -2.9815993309020996
    4. ' ' → logprob: -3.2315993309020996
    5. 'pour' → logprob: -3.8565993309020996
    6. 'e' → logprob: -4.2315993309021
    7. '_' → logprob: -4.6065993309021
    8. ':' → logprob: -6.8565993309021
    9. 'for' → logprob: -6.8565993309021
    10. '=' → logprob: -6.9815993309021

Token 119: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.1192800998687744
    2. ' sys' → logprob: -1.6192800998687744
    3. ' les' → logprob: -1.8692800998687744
    4. ' l' → logprob: -1.9942800998687744
    5. ' lire' → logprob: -3.3692800998687744
    6. ' la' → logprob: -3.4942800998687744
    7. ' éviter' → logprob: -4.244279861450195
    8. ' ' → logprob: -4.244279861450195
    9. ' optimiser' → logprob: -4.244279861450195
    10. ' le' → logprob: -4.369279861450195

Token 120: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23424971103668213
    2. 'e' → logprob: -3.1092495918273926
    3. 'input' → logprob: -3.2342495918273926
    4. 'imiter' → logprob: -3.2342495918273926
    5. ''entrée' → logprob: -4.109249591827393
    6. 'ire' → logprob: -4.359249591827393
    7. 'es' → logprob: -4.734249591827393
    8. 'im' → logprob: -5.234249591827393
    9. 'import' → logprob: -5.234249591827393
    10. 'ecture' → logprob: -5.359249591827393

Token 121: 'f' (ID: 69)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.0024662634823471308
    2. 'puts' → logprob: -6.127466201782227
    3. 'f' → logprob: -8.502466201782227
    4. 'finity' → logprob: -11.002466201782227
    5. 't' → logprob: -11.127466201782227
    6. 'p' → logprob: -11.127466201782227
    7. 'pute' → logprob: -11.752466201782227
    8. 'ter' → logprob: -11.752466201782227
    9. '[' → logprob: -12.877466201782227
    10. 'PUT' → logprob: -13.127466201782227

Token 122: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.13648918271064758
    2. 'inity' → logprob: -2.386489152908325
    3. 'i' → logprob: -4.761489391326904
    4. 'float' → logprob: -5.011489391326904
    5. 'inite' → logprob: -5.261489391326904
    6. 'init' → logprob: -5.636489391326904
    7. 'ity' → logprob: -6.386489391326904
    8. 'loat' → logprob: -6.636489391326904
    9. 'inty' → logprob: -6.636489391326904
    10. 'it' → logprob: -7.011489391326904

Token 123: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0205006655305624
    2. '_inf' → logprob: -4.270500659942627
    3. '=' → logprob: -6.020500659942627
    4. '_' → logprob: -6.145500659942627
    5. ' ' → logprob: -7.395500659942627
    6. '=float' → logprob: -7.770500659942627
    7. '_INF' → logprob: -8.520501136779785
    8. 'inf' → logprob: -8.895501136779785
    9. ' _' → logprob: -9.520501136779785
    10. '_float' → logprob: -9.645501136779785

Token 124: 'INF' (ID: 64358)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.17233999073505402
    2. ' ' → logprob: -1.9223400354385376
    3. 'float' → logprob: -4.797339916229248
    4. ' inf' → logprob: -6.672339916229248
    5. ' math' → logprob: -6.672339916229248
    6. '=float' → logprob: -7.672339916229248
    7. 'inf' → logprob: -7.922339916229248
    8. ' )' → logprob: -9.172340393066406
    9. ' _' → logprob: -9.297340393066406
    10. '_inf' → logprob: -10.172340393066406

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038209136575460434
    2. '=' → logprob: -3.2882091999053955
    3. ' =
' → logprob: -9.788208961486816
    4. ' ' → logprob: -10.038208961486816
    5. ')' → logprob: -10.538208961486816
    6. ',' → logprob: -11.163208961486816
    7. '_' → logprob: -12.288208961486816
    8. ' =)' → logprob: -12.538208961486816
    9. ' ' → logprob: -12.663208961486816
    10. '=int' → logprob: -12.788208961486816

Token 126: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.00978501234203577
    2. 'float' → logprob: -4.634785175323486
    3. ' math' → logprob: -11.384784698486328
    4. ' ' → logprob: -11.509784698486328
    5. '10' → logprob: -12.509784698486328
    6. '	float' → logprob: -13.134784698486328
    7. '=float' → logprob: -14.509784698486328
    8. ' flo' → logprob: -14.759784698486328
    9. ' ' → logprob: -15.134784698486328
    10. ' inf' → logprob: -15.259784698486328

Token 127: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0061013237573206425
    2. ' float' → logprob: -5.506101131439209
    3. '10' → logprob: -6.256101131439209
    4. 'math' → logprob: -9.256101608276367
    5. ' ' → logprob: -12.881101608276367
    6. 'int' → logprob: -13.256101608276367
    7. '1' → logprob: -13.881101608276367
    8. '	float' → logprob: -15.131101608276367
    9. ' math' → logprob: -15.381101608276367
    10. 'inf' → logprob: -15.381101608276367

Token 128: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.8007021546363831
    2. '9' → logprob: -0.9257021546363831
    3. '**' → logprob: -2.0507020950317383
    4. '10' → logprob: -4.550702095031738
    5. '12' → logprob: -4.550702095031738
    6. '15' → logprob: -6.300702095031738
    7. '20' → logprob: -6.675702095031738
    8. '000' → logprob: -6.925702095031738
    9. '19' → logprob: -7.800702095031738
    10. '09' → logprob: -8.300702095031738

Token 129: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.19117426872253418
    2. '15' → logprob: -2.441174268722534
    3. '9' → logprob: -2.691174268722534
    4. '20' → logprob: -4.191174507141113
    5. '10' → logprob: -5.816174507141113
    6. '16' → logprob: -7.316174507141113
    7. '19' → logprob: -8.691174507141113
    8. '12' → logprob: -8.941174507141113
    9. '14' → logprob: -10.191174507141113
    10. '17' → logprob: -10.441174507141113

Token 130: '20' (ID: 455)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.19668662548065186
    2. '15' → logprob: -1.9466866254806519
    3. '9' → logprob: -3.5716867446899414
    4. '20' → logprob: -5.446686744689941
    5. '10' → logprob: -6.071686744689941
    6. '16' → logprob: -7.196686744689941
    7. '12' → logprob: -8.946686744689941
    8. '19' → logprob: -9.071686744689941
    9. '14' → logprob: -9.821686744689941
    10. '17' → logprob: -10.696686744689941

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007476836442947388
    2. '

' → logprob: -5.007476806640625
    3. '
' → logprob: -7.882476806640625
    4. '<|end|>' → logprob: -8.132476806640625
    5. '' → logprob: -10.757476806640625
    6. '\n' → logprob: -11.257476806640625
    7. '


' → logprob: -11.507476806640625
    8. '<|end|>' → logprob: -11.632476806640625
    9. '0' → logprob: -11.757476806640625
    10. ' 
' → logprob: -12.257476806640625

Token 132: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013058819808065891
    2. '

' → logprob: -4.638058662414551
    3. '
' → logprob: -6.638058662414551
    4. '#' → logprob: -6.763058662414551
    5. ' 
' → logprob: -8.51305866241455
    6. 'def' → logprob: -8.51305866241455
    7. '' → logprob: -9.38805866241455
    8. '


' → logprob: -9.76305866241455
    9. '\n' → logprob: -10.01305866241455
    10. '
 
' → logprob: -10.38805866241455

Token 133: ' Const' (ID: 19594)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12413152307271957
    2. 'MOD' → logprob: -2.749131441116333
    3. '#' → logprob: -4.249131679534912
    4. 'mod' → logprob: -4.999131679534912
    5. 'class' → logprob: -5.249131679534912
    6. 'input' → logprob: -5.374131679534912
    7. 'EPS' → logprob: -5.374131679534912
    8. ' def' → logprob: -5.749131679534912
    9. 'DEBUG' → logprob: -5.999131679534912
    10. ' MOD' → logprob: -6.249131679534912

Token 134: 'ante' (ID: 2116)
  Prédit: 'ANTS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -1.0861705541610718
    2. 'ANT' → logprob: -1.2111705541610718
    3. 'S' → logprob: -1.8361705541610718
    4. 'MOD' → logprob: -2.5861706733703613
    5. 'MAX' → logprob: -2.8361706733703613
    6. '=' → logprob: -4.336170673370361
    7. 'E' → logprob: -4.461170673370361
    8. 'EPS' → logprob: -4.586170673370361
    9. '#' → logprob: -4.961170673370361
    10. 'T' → logprob: -5.211170673370361

Token 135: ' pour' (ID: 1930)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.2622277736663818
    2. 'mod' → logprob: -1.5122277736663818
    3. ' mod' → logprob: -2.262227773666382
    4. 's' → logprob: -2.387227773666382
    5. ' =' → logprob: -2.512227773666382
    6. ' MOD' → logprob: -3.012227773666382
    7. 'PI' → logprob: -3.262227773666382
    8. '<|end|>' → logprob: -3.637227773666382
    9. '_mod' → logprob: -4.012228012084961
    10. 'pi' → logprob: -4.262228012084961

Token 136: ' le' (ID: 505)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0417566299438477
    2. ' MOD' → logprob: -1.1667566299438477
    3. ' la' → logprob: -2.2917566299438477
    4. ' modulo' → logprob: -2.5417566299438477
    5. ' mod' → logprob: -2.6667566299438477
    6. 'mod' → logprob: -2.9167566299438477
    7. ' le' → logprob: -4.416756629943848
    8. ' l' → logprob: -4.916756629943848
    9. ' les' → logprob: -5.166756629943848
    10. ' modulus' → logprob: -6.416756629943848

Token 137: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.6104273796081543
    2. 'mod' → logprob: -1.1104273796081543
    3. ' nombre' → logprob: -3.1104273796081543
    4. ' mod' → logprob: -3.1104273796081543
    5. ' modulus' → logprob: -3.7354273796081543
    6. ' module' → logprob: -5.110427379608154
    7. 'nombre' → logprob: -5.485427379608154
    8. 'MOD' → logprob: -6.860427379608154
    9. 'Modulo' → logprob: -7.610427379608154
    10. ' number' → logprob: -7.860427379608154

Token 138: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020515378564596176
    2. ' =' → logprob: -4.145515441894531
    3. '=' → logprob: -6.270515441894531
    4. '_' → logprob: -7.395515441894531
    5. ':' → logprob: -8.020515441894531
    6. ' :' → logprob: -8.145515441894531
    7. ' ,' → logprob: -8.270515441894531
    8. '  ' → logprob: -8.395515441894531
    9. ',' → logprob: -8.395515441894531
    10. 'MOD' → logprob: -9.020515441894531

Token 139: 'mod' (ID: 4847)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016675653168931603
    2. ' MOD' → logprob: -7.251667499542236
    3. 'MOD' → logprob: -8.501667976379395
    4. '_' → logprob: -8.876667976379395
    5. ' 
' → logprob: -9.126667976379395
    6. '10' → logprob: -9.126667976379395
    7. ' ,' → logprob: -9.501667976379395
    8. '  ' → logprob: -9.876667976379395
    9. '<|end|>' → logprob: -10.126667976379395
    10. ' =' → logprob: -10.376667976379395

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08114445954561234
    2. '=' → logprob: -2.5811445713043213
    3. ' ' → logprob: -6.706144332885742
    4. '_' → logprob: -8.206144332885742
    5. 'ulus' → logprob: -8.456144332885742
    6. 'uler' → logprob: -8.831144332885742
    7. 'ular' → logprob: -9.456144332885742
    8. 'ulu' → logprob: -10.206144332885742
    9. 'ulous' → logprob: -10.331144332885742
    10. 'ulo' → logprob: -10.581144332885742

Token 141: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005942898336797953
    2. '10' → logprob: -5.1309428215026855
    3. '1' → logprob: -11.755943298339844
    4. '100' → logprob: -12.380943298339844
    5. '998' → logprob: -13.880943298339844
    6. ' ' → logprob: -14.880943298339844
    7. '0' → logprob: -15.380943298339844
    8. ' 
' → logprob: -15.380943298339844
    9. ' int' → logprob: -16.380943298339844
    10. ' (' → logprob: -16.755943298339844

Token 142: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008450981229543686
    2. '998' → logprob: -5.008450984954834
    3. '100' → logprob: -6.383450984954834
    4. '1' → logprob: -10.258450508117676
    5. ' ' → logprob: -11.633450508117676
    6. 'int' → logprob: -14.758450508117676
    7. '999' → logprob: -16.133451461791992
    8. '(' → logprob: -16.258451461791992
    9. '2' → logprob: -16.633451461791992
    10. '123' → logprob: -17.008451461791992

Token 143: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.004164353013038635
    2. '9' → logprob: -5.504164218902588
    3. ' ' → logprob: -10.254164695739746
    4. '0' → logprob: -10.754164695739746
    5. '+' → logprob: -11.504164695739746
    6. '_' → logprob: -11.754164695739746
    7. '00' → logprob: -12.379164695739746
    8. '009' → logprob: -12.629164695739746
    9. '09' → logprob: -12.879164695739746
    10. '
' → logprob: -14.379164695739746

Token 144: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00021045419271104038
    2. '007' → logprob: -8.500210762023926
    3. '19' → logprob: -13.375210762023926
    4. '+' → logprob: -13.750210762023926
    5. '3' → logprob: -13.750210762023926
    6. '7' → logprob: -14.375210762023926
    7. '009' → logprob: -14.625210762023926
    8. '0' → logprob: -14.625210762023926
    9. '_' → logprob: -14.875210762023926
    10. '003' → logprob: -15.250210762023926

Token 145: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. '9' → logprob: -14.500000953674316
    3. '+' → logprob: -16.25
    4. '07' → logprob: -17.625
    5. ' ' → logprob: -20.25
    6. '007' → logprob: -20.5
    7. '79' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '19' → logprob: -21.125
    10. '
' → logprob: -21.375

Token 146: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23104609549045563
    2. '

' → logprob: -1.6060460805892944
    3. '<|end|>' → logprob: -5.356046199798584
    4. '


' → logprob: -8.106045722961426
    5. '
' → logprob: -8.231045722961426
    6. '<|end|>' → logprob: -8.481045722961426
    7. 'def' → logprob: -10.731045722961426
    8. '
    
' → logprob: -11.356045722961426
    9. '\n' → logprob: -11.356045722961426
    10. '#' → logprob: -11.356045722961426

Token 147: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03726482391357422
    2. 'def' → logprob: -3.662264823913574
    3. 'd' → logprob: -5.912264823913574
    4. 'n' → logprob: -6.037264823913574
    5. '

' → logprob: -6.037264823913574
    6. ' 
' → logprob: -6.537264823913574
    7. '\' → logprob: -7.412264823913574
    8. '#' → logprob: -7.787264823913574
    9. '\n' → logprob: -7.787264823913574
    10. '
' → logprob: -8.912264823913574

Token 148: ' LI' (ID: 14875)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.0518780946731567
    2. ' ' → logprob: -1.3018780946731567
    3. ' main' → logprob: -1.3018780946731567
    4. ' factorial' → logprob: -3.176877975463867
    5. ' dfs' → logprob: -3.801877975463867
    6. ' _' → logprob: -4.551877975463867
    7. '_' → logprob: -4.551877975463867
    8. ' factor' → logprob: -5.301877975463867
    9. ' binary' → logprob: -6.176877975463867
    10. ' solution' → logprob: -6.301877975463867

Token 149: '():
' (ID: 8595)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.12918156385421753
    2. 'st' → logprob: -2.8791816234588623
    3. 'N' → logprob: -3.2541816234588623
    4. '()' → logprob: -4.629181385040283
    5. '():' → logprob: -4.629181385040283
    6. 'NE' → logprob: -6.254181385040283
    7. '():
' → logprob: -6.879181385040283
    8. 'S' → logprob: -7.379181385040283
    9. 'ne' → logprob: -7.629181385040283
    10. 'St' → logprob: -7.754181385040283

Token 150: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022419938817620277
    2. ' return' → logprob: -4.1474199295043945
    3. 'list' → logprob: -6.1474199295043945
    4. 'eturn' → logprob: -6.8974199295043945
    5. '[]' → logprob: -7.2724199295043945
    6. ' list' → logprob: -7.3974199295043945
    7. 'n' → logprob: -7.7724199295043945
    8. 'map' → logprob: -8.147419929504395
    9. ':' → logprob: -8.397419929504395
    10. ':return' → logprob: -8.397419929504395

Token 151: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001633643638342619
    2. ' return' → logprob: -6.751633644104004
    3. 'list' → logprob: -7.751633644104004
    4. 'map' → logprob: -10.626633644104004
    5. 'eturn' → logprob: -12.626633644104004
    6. 'ret' → logprob: -12.626633644104004
    7. ' list' → logprob: -13.126633644104004
    8. 're' → logprob: -15.626633644104004
    9. '	return' → logprob: -16.376632690429688
    10. ' map' → logprob: -16.501632690429688

Token 152: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01339009776711464
    2. ' return' → logprob: -4.888390064239502
    3. 'eturn' → logprob: -5.513390064239502
    4. '   ' → logprob: -6.388390064239502
    5. 'ret' → logprob: -10.76339054107666
    6. '	return' → logprob: -11.76339054107666
    7. 'list' → logprob: -12.13839054107666
    8. ' ' → logprob: -12.63839054107666
    9. 'map' → logprob: -12.88839054107666
    10. 'n' → logprob: -12.88839054107666

Token 153: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018347883597016335
    2. ' return' → logprob: -4.01834774017334
    3. '   ' → logprob: -9.26834774017334
    4. 'ret' → logprob: -9.51834774017334
    5. 'eturn' → logprob: -11.01834774017334
    6. 'r' → logprob: -12.14334774017334
    7. '	return' → logprob: -12.89334774017334
    8. ' ' → logprob: -14.26834774017334
    9. 'Return' → logprob: -14.39334774017334
    10. 'n' → logprob: -14.51834774017334

Token 154: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6587874293327332
    2. 'ne' → logprob: -1.408787488937378
    3. '():' → logprob: -2.658787488937378
    4. 'n' → logprob: -2.783787488937378
    5. '   ' → logprob: -3.283787488937378
    6. 'e' → logprob: -4.408787250518799
    7. 'ine' → logprob: -4.783787250518799
    8. 'une' → logprob: -4.908787250518799
    9. 'eturn' → logprob: -5.033787250518799
    10. 'nt' → logprob: -5.283787250518799

Token 155: ' ligne' (ID: 19583)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.504839301109314
    2. ' ligne' → logprob: -1.754839301109314
    3. 'ligne' → logprob: -2.3798394203186035
    4. 'ine' → logprob: -3.5048394203186035
    5. ' ' → logprob: -3.7548394203186035
    6. '   ' → logprob: -4.1298394203186035
    7. 'ignée' → logprob: -5.0048394203186035
    8. 'ign' → logprob: -5.1298394203186035
    9. 'ig' → logprob: -5.5048394203186035
    10. '  ' → logprob: -5.6298394203186035

Token 156: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22827087342739105
    2. '().' → logprob: -1.6032708883285522
    3. '.strip' → logprob: -7.478271007537842
    4. '()
' → logprob: -7.603271007537842
    5. ',' → logprob: -7.603271007537842
    6. '.' → logprob: -7.853271007537842
    7. '   ' → logprob: -7.978271007537842
    8. ' ()' → logprob: -8.978270530700684
    9. '.split' → logprob: -9.853270530700684
    10. '()

' → logprob: -10.478270530700684

Token 157: ' l' (ID: 305)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.1260179281234741
    2. 'input' → logprob: -1.7510179281234741
    3. 'int' → logprob: -1.8760179281234741
    4. 'ints' → logprob: -2.3760180473327637
    5. 'stdin' → logprob: -2.5010180473327637
    6. 'entrée' → logprob: -3.0010180473327637
    7. 'code' → logprob: -3.2510180473327637
    8. 'n' → logprob: -4.001018047332764
    9. 'inte' → logprob: -4.251018047332764
    10. ' input' → logprob: -4.251018047332764

Token 158: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.8382150530815125
    2. 'entrée' → logprob: -1.3382151126861572
    3. 'input' → logprob: -1.5882151126861572
    4. ''' → logprob: -3.0882151126861572
    5. 'e' → logprob: -3.9632151126861572
    6. 'es' → logprob: -4.338214874267578
    7. ''ent' → logprob: -5.088214874267578
    8. 'ent' → logprob: -5.963214874267578
    9. 'iste' → logprob: -6.088214874267578
    10. 'a' → logprob: -6.088214874267578

Token 159: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3900505602359772
    2. '().' → logprob: -1.1400505304336548
    3. ')' → logprob: -7.765050411224365
    4. '())' → logprob: -7.890050411224365
    5. 'input' → logprob: -8.140050888061523
    6. '.' → logprob: -8.390050888061523
    7. '   ' → logprob: -8.390050888061523
    8. '()
' → logprob: -8.640050888061523
    9. '.strip' → logprob: -8.765050888061523
    10. ' ()' → logprob: -9.015050888061523

Token 160: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6356101632118225
    2. '()' → logprob: -0.7606101632118225
    3. ')' → logprob: -6.260610103607178
    4. '.' → logprob: -7.885610103607178
    5. '()
' → logprob: -8.510610580444336
    6. '.strip' → logprob: -8.885610580444336
    7. ',' → logprob: -9.510610580444336
    8. ').' → logprob: -9.885610580444336
    9. ' ()' → logprob: -10.135610580444336
    10. '())' → logprob: -10.510610580444336

Token 161: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -1.318848967552185
    2. ' return' → logprob: -1.443848967552185
    3. ' ren' → logprob: -1.943848967552185
    4. ' la' → logprob: -1.943848967552185
    5. 'return' → logprob: -2.0688490867614746
    6. 'ren' → logprob: -3.3188490867614746
    7. 'ret' → logprob: -3.4438490867614746
    8. 'la' → logprob: -4.443849086761475
    9. ' ret' → logprob: -6.693849086761475
    10. '   ' → logprob: -7.193849086761475

Token 162: ' une' (ID: 2463)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3511958122253418
    2. ' une' → logprob: -1.4761958122253418
    3. ' la' → logprob: -2.851195812225342
    4. 'list' → logprob: -4.976195812225342
    5. 'une' → logprob: -7.226195812225342
    6. ' liste' → logprob: -7.351195812225342
    7. '[]' → logprob: -8.1011962890625
    8. '   ' → logprob: -8.1011962890625
    9. ' un' → logprob: -8.3511962890625
    10. ' ' → logprob: -8.7261962890625

Token 163: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.13083644211292267
    2. ' liste' → logprob: -2.1308364868164062
    3. 'list' → logprob: -5.630836486816406
    4. 'Liste' → logprob: -9.505836486816406
    5. ' list' → logprob: -9.630836486816406
    6. 'int' → logprob: -9.755836486816406
    7. 'l' → logprob: -10.505836486816406
    8. 's' → logprob: -11.130836486816406
    9. 'lst' → logprob: -11.255836486816406
    10. ' ' → logprob: -11.755836486816406

Token 164: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6813791394233704
    2. '[int' → logprob: -1.4313790798187256
    3. '<|end|>' → logprob: -2.4313790798187256
    4. '()' → logprob: -2.8063790798187256
    5. '[]' → logprob: -3.6813790798187256
    6. ' of' → logprob: -3.8063790798187256
    7. ' de' → logprob: -4.306379318237305
    8. '(' → logprob: -4.806379318237305
    9. ' ' → logprob: -5.056379318237305
    10. '[str' → logprob: -5.306379318237305

Token 165: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6001149415969849
    2. 'int' → logprob: -0.9751149415969849
    3. ''ent' → logprob: -3.1001148223876953
    4. ' ent' → logprob: -4.600114822387695
    5. ' int' → logprob: -4.975114822387695
    6. 'ints' → logprob: -5.600114822387695
    7. ' integers' → logprob: -6.350114822387695
    8. '(int' → logprob: -6.725114822387695
    9. '’ent' → logprob: -7.225114822387695
    10. '[int' → logprob: -7.225114822387695

Token 166: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.011032730340957642
    2. 't' → logprob: -4.636032581329346
    3. 'i' → logprob: -7.386032581329346
    4. 'ières' → logprob: -7.886032581329346
    5. 'ier' → logprob: -8.761033058166504
    6. 'ers' → logprob: -10.386033058166504
    7. 'ti' → logprob: -10.511033058166504
    8. 'e' → logprob: -11.386033058166504
    9. 'ié' → logprob: -11.511033058166504
    10. '```' → logprob: -12.136033058166504

Token 167: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007850540801882744
    2. ',' → logprob: -6.507850646972656
    3. ')' → logprob: -6.757850646972656
    4. 'map' → logprob: -7.007850646972656
    5. ' ()' → logprob: -7.257850646972656
    6. '(' → logprob: -7.507850646972656
    7. '(map' → logprob: -7.632850646972656
    8. ' map' → logprob: -8.007850646972656
    9. '()
' → logprob: -8.257850646972656
    10. '.' → logprob: -8.507850646972656

Token 168: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.645629346370697
    2. '()
' → logprob: -1.2706294059753418
    3. 'return' → logprob: -3.020629405975342
    4. '\n' → logprob: -3.395629405975342
    5. ' return' → logprob: -3.645629405975342
    6. '"""
' → logprob: -4.020629405975342
    7. ')' → logprob: -4.770629405975342
    8. '   ' → logprob: -4.895629405975342
    9. '"""' → logprob: -5.145629405975342
    10. 'def' → logprob: -5.145629405975342

Token 169: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2292410284280777
    2. ' return' → logprob: -1.8542410135269165
    3. '()' → logprob: -3.354241132736206
    4. '   ' → logprob: -4.979240894317627
    5. '()
' → logprob: -6.604240894317627
    6. ':return' → logprob: -7.229240894317627
    7. ')' → logprob: -7.604240894317627
    8. '
' → logprob: -7.729240894317627
    9. '(' → logprob: -7.729240894317627
    10. '\n' → logprob: -7.979240894317627

Token 170: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024544237181544304
    2. ' return' → logprob: -3.7745442390441895
    3. '   ' → logprob: -6.6495442390441895
    4. '    
' → logprob: -14.149543762207031
    5. '	return' → logprob: -14.149543762207031
    6. 'int' → logprob: -14.774543762207031
    7. 'ret' → logprob: -14.774543762207031
    8. ' ' → logprob: -15.149543762207031
    9. 'map' → logprob: -16.14954376220703
    10. '[]' → logprob: -16.27454376220703

Token 171: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019289902411401272
    2. ' return' → logprob: -6.251928806304932
    3. '   ' → logprob: -14.75192928314209
    4. 'list' → logprob: -18.376928329467773
    5. 'ret' → logprob: -18.751928329467773
    6. '	return' → logprob: -20.126928329467773
    7. '
' → logprob: -21.626928329467773
    8. 'import' → logprob: -21.626928329467773
    9. ' ' → logprob: -21.626928329467773
    10. 'r' → logprob: -21.751928329467773

Token 172: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3132646679878235
    2. 'list' → logprob: -1.3132646083831787
    3. 'map' → logprob: -13.563264846801758
    4. '[list' → logprob: -14.063264846801758
    5. ' map' → logprob: -15.188264846801758
    6. '	list' → logprob: -15.438264846801758
    7. '[' → logprob: -15.813264846801758
    8. ' ' → logprob: -16.688264846801758
    9. 'List' → logprob: -17.188264846801758
    10. '(list' → logprob: -17.938264846801758

Token 173: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007108822464942932
    2. '(' → logprob: -7.250710964202881
    3. 'map' → logprob: -14.500710487365723
    4. '(m' → logprob: -15.625710487365723
    5. '(
' → logprob: -16.25071144104004
    6. '	map' → logprob: -16.62571144104004
    7. '(ma' → logprob: -16.62571144104004
    8. '()' → logprob: -17.00071144104004
    9. ' map' → logprob: -17.00071144104004
    10. '(int' → logprob: -17.37571144104004

Token 174: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043615259346552193
    2. '(' → logprob: -7.875436305999756
    3. 'int' → logprob: -9.875435829162598
    4. '<int' → logprob: -13.000435829162598
    5. ',int' → logprob: -14.500435829162598
    6. '(
' → logprob: -14.500435829162598
    7. ' int' → logprob: -14.625435829162598
    8. '[int' → logprob: -14.875435829162598
    9. '=int' → logprob: -15.000435829162598
    10. ']int' → logprob: -17.000436782836914

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03935921937227249
    2. '(sys' → logprob: -4.164359092712402
    3. ',input' → logprob: -4.164359092712402
    4. 'sys' → logprob: -5.164359092712402
    5. 'input' → logprob: -7.414359092712402
    6. '(' → logprob: -7.539359092712402
    7. '(input' → logprob: -7.664359092712402
    8. ' ,' → logprob: -9.539359092712402
    9. ' sys' → logprob: -9.789359092712402
    10. '	sys' → logprob: -10.789359092712402

Token 176: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8417805433273315
    2. 'input' → logprob: -1.0917805433273315
    3. ' sys' → logprob: -1.8417805433273315
    4. ' input' → logprob: -2.591780662536621
    5. 'stdin' → logprob: -11.841780662536621
    6. '=sys' → logprob: -12.591780662536621
    7. '(sys' → logprob: -12.716780662536621
    8. '	sys' → logprob: -13.341780662536621
    9. ' ' → logprob: -14.341780662536621
    10. '   ' → logprob: -14.591780662536621

Token 177: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -11.75001049041748
    3. '.std' → logprob: -14.00001049041748
    4. '.stdout' → logprob: -14.50001049041748
    5. '.argv' → logprob: -14.87501049041748
    6. 'stdin' → logprob: -15.75001049041748
    7. '.readline' → logprob: -16.125009536743164
    8. '.st' → logprob: -17.000009536743164
    9. '.input' → logprob: -17.375009536743164
    10. ' stdin' → logprob: -18.125009536743164

Token 178: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.040457421680912e-05
    2. '.' → logprob: -9.625070571899414
    3. '.read' → logprob: -12.625070571899414
    4. '.stdin' → logprob: -14.125070571899414
    5. '.readlines' → logprob: -15.250070571899414
    6. ' .' → logprob: -17.750070571899414
    7. '.buffer' → logprob: -18.125070571899414
    8. ')' → logprob: -18.625070571899414
    9. '().' → logprob: -18.750070571899414
    10. '.)' → logprob: -19.000070571899414

Token 179: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7968066206085496e-05
    2. '()' → logprob: -10.500027656555176
    3. ' ().' → logprob: -15.000027656555176
    4. '()))' → logprob: -17.500028610229492
    5. '())' → logprob: -18.875028610229492
    6. '(' → logprob: -18.875028610229492
    7. '()
' → logprob: -19.125028610229492
    8. '().__' → logprob: -19.125028610229492
    9. '.readline' → logprob: -20.000028610229492
    10. '.strip' → logprob: -20.000028610229492

Token 180: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.009325695224106312
    2. 'rstrip' → logprob: -4.7593255043029785
    3. 'split' → logprob: -7.2593255043029785
    4. 'read' → logprob: -12.259325981140137
    5. ' strip' → logprob: -13.259325981140137
    6. 'decode' → logprob: -14.134325981140137
    7. ')' → logprob: -18.00932502746582
    8. 'rs' → logprob: -18.25932502746582
    9. '(strip' → logprob: -19.38432502746582
    10. 'r' → logprob: -19.38432502746582

Token 181: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03063102625310421
    2. '()' → logprob: -3.6556310653686523
    3. '))' → logprob: -5.530631065368652
    4. '()))
' → logprob: -8.530631065368652
    5. '())' → logprob: -9.405631065368652
    6. '(' → logprob: -9.655631065368652
    7. '()));' → logprob: -12.155631065368652
    8. '()
' → logprob: -12.905631065368652
    9. '()))

' → logprob: -13.030631065368652
    10. '())))' → logprob: -13.905631065368652

Token 182: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12780164182186127
    2. '
' → logprob: -2.1278016567230225
    3. '

' → logprob: -7.752801418304443
    4. '\n' → logprob: -9.127801895141602
    5. '
' → logprob: -10.002801895141602
    6. '\' → logprob: -10.127801895141602
    7. 'd' → logprob: -10.127801895141602
    8. '#' → logprob: -10.252801895141602
    9. ' def' → logprob: -10.252801895141602
    10. ' 
' → logprob: -10.252801895141602

Token 183: ' I' (ID: 357)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.3144820034503937
    2. 'S' → logprob: -2.1894819736480713
    3. 'I' → logprob: -2.4394819736480713
    4. ' LS' → logprob: -3.0644819736480713
    5. 'LO' → logprob: -5.31448221206665
    6. 'L' → logprob: -5.43948221206665
    7. 'input' → logprob: -5.56448221206665
    8. 'SI' → logprob: -5.68948221206665
    9. ' S' → logprob: -5.93948221206665
    10. ' input' → logprob: -6.68948221206665

Token 184: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24254077672958374
    2. 'nt' → logprob: -1.8675408363342285
    3. '()' → logprob: -3.1175408363342285
    4. 'N' → logprob: -4.7425408363342285
    5. '():' → logprob: -5.3675408363342285
    6. 'nit' → logprob: -6.3675408363342285
    7. 'np' → logprob: -6.9925408363342285
    8. '():
' → logprob: -8.11754035949707
    9. 'L' → logprob: -9.99254035949707
    10. 'P' → logprob: -10.24254035949707

Token 185: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01972907781600952
    2. '()' → logprob: -4.269729137420654
    3. '():
' → logprob: -5.644729137420654
    4. ':' → logprob: -6.519729137420654
    5. ' ():' → logprob: -8.519728660583496
    6. '(' → logprob: -9.144728660583496
    7. 'return' → logprob: -9.144728660583496
    8. ' ()' → logprob: -10.269728660583496
    9. '):' → logprob: -10.644728660583496
    10. ':
' → logprob: -11.519728660583496

Token 186: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.049921322613954544
    2. ' return' → logprob: -3.1749212741851807
    3. 'int' → logprob: -5.04992151260376
    4. '
' → logprob: -9.049921035766602
    5. 'sys' → logprob: -9.174921035766602
    6. '   ' → logprob: -9.299921035766602
    7. ' ' → logprob: -9.799921035766602
    8. 'eturn' → logprob: -10.049921035766602
    9. '    ' → logprob: -10.674921035766602
    10. '    
' → logprob: -11.174921035766602

Token 187: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00658380426466465
    2. '):' → logprob: -6.0065836906433105
    3. '")' → logprob: -6.0065836906433105
    4. '   ' → logprob: -7.5065836906433105
    5. 'return' → logprob: -7.8815836906433105
    6. '"""' → logprob: -8.131584167480469
    7. ' )' → logprob: -9.131584167480469
    8. '""' → logprob: -9.381584167480469
    9. '"' → logprob: -10.006584167480469
    10. '()' → logprob: -10.256584167480469

Token 188: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016051262617111206
    2. ' return' → logprob: -4.141051292419434
    3. 'Return' → logprob: -11.891051292419434
    4. 'ret' → logprob: -12.766051292419434
    5. 'Retour' → logprob: -13.391051292419434
    6. '   ' → logprob: -13.516051292419434
    7. '"""' → logprob: -13.891051292419434
    8. 'read' → logprob: -14.391051292419434
    9. ' ' → logprob: -14.516051292419434
    10. 'r' → logprob: -14.766051292419434

Token 189: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00306577212177217
    2. ' ()' → logprob: -6.128065586090088
    3. 'int' → logprob: -7.878065586090088
    4. ' une' → logprob: -8.628066062927246
    5. 'n' → logprob: -9.878066062927246
    6. 'une' → logprob: -10.128066062927246
    7. 'a' → logprob: -10.253066062927246
    8. ' ' → logprob: -10.503066062927246
    9. '()<' → logprob: -11.378066062927246
    10. '(' → logprob: -11.503066062927246

Token 190: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.23780688643455505
    2. ' ligne' → logprob: -1.8628069162368774
    3. 'l' → logprob: -3.362806797027588
    4. 'int' → logprob: -5.112806797027588
    5. 'se' → logprob: -5.112806797027588
    6. ' ' → logprob: -5.487806797027588
    7. ' seule' → logprob: -5.862806797027588
    8. 'n' → logprob: -6.487806797027588
    9. 'line' → logprob: -7.737806797027588
    10. '()' → logprob: -8.612807273864746

Token 191: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015605044551193714
    2. 'de' → logprob: -4.3906049728393555
    3. ' de' → logprob: -6.2656049728393555
    4. '().' → logprob: -7.2656049728393555
    5. '()
' → logprob: -8.765604972839355
    6. ')' → logprob: -9.015604972839355
    7. ' ()' → logprob: -9.765604972839355
    8. '.' → logprob: -10.015604972839355
    9. '(' → logprob: -11.015604972839355
    10. '()

' → logprob: -11.140604972839355

Token 192: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3783659338951111
    2. 'n' → logprob: -2.128365993499756
    3. 'sys' → logprob: -2.378365993499756
    4. ' l' → logprob: -3.253365993499756
    5. 'input' → logprob: -3.378365993499756
    6. '(sys' → logprob: -4.378365993499756
    7. '()' → logprob: -4.628365993499756
    8. ' input' → logprob: -6.003365993499756
    9. ' sys' → logprob: -6.128365993499756
    10. 'stdin' → logprob: -7.003365993499756

Token 193: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.0076017379760742
    2. 'n' → logprob: -1.1326017379760742
    3. ''entrée' → logprob: -1.2576017379760742
    4. 'put' → logprob: -3.757601737976074
    5. 'input' → logprob: -5.882601737976074
    6. 'stdin' → logprob: -7.382601737976074
    7. '’entrée' → logprob: -7.632601737976074
    8. ' entrée' → logprob: -8.132601737976074
    9. 't' → logprob: -8.257601737976074
    10. 'nt' → logprob: -9.132601737976074

Token 194: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6516042351722717
    2. 'de' → logprob: -1.151604175567627
    3. 'standard' → logprob: -2.526604175567627
    4. ' standard' → logprob: -3.276604175567627
    5. ' de' → logprob: -3.526604175567627
    6. '().' → logprob: -5.151604175567627
    7. '()
' → logprob: -5.651604175567627
    8. '   ' → logprob: -5.776604175567627
    9. 'def' → logprob: -7.026604175567627
    10. ')' → logprob: -7.901604175567627

Token 195: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.24434147775173187
    2. ')' → logprob: -2.1193413734436035
    3. '()' → logprob: -2.7443413734436035
    4. 'et' → logprob: -3.6193413734436035
    5. ' et' → logprob: -6.4943413734436035
    6. '()
' → logprob: -6.7443413734436035
    7. '())' → logprob: -6.7443413734436035
    8. ',' → logprob: -7.3693413734436035
    9. '.strip' → logprob: -7.6193413734436035
    10. ').' → logprob: -8.119341850280762

Token 196: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16751828789710999
    2. ' return' → logprob: -1.9175182580947876
    3. ' retourne' → logprob: -5.417518138885498
    4. 'eturn' → logprob: -6.917518138885498
    5. 'ret' → logprob: -7.417518138885498
    6. 'returns' → logprob: -7.417518138885498
    7. ' returns' → logprob: -8.042518615722656
    8. 'int' → logprob: -8.667518615722656
    9. ' retour' → logprob: -9.417518615722656
    10. ' int' → logprob: -11.667518615722656

Token 197: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0974535346031189
    2. 'int' → logprob: -3.0974535942077637
    3. ' int' → logprob: -3.0974535942077637
    4. 'un' → logprob: -6.472453594207764
    5. ' an' → logprob: -8.222453117370605
    6. '   ' → logprob: -8.347453117370605
    7. ' ' → logprob: -8.597453117370605
    8. ' l' → logprob: -9.472453117370605
    9. ' une' → logprob: -9.847453117370605
    10. 'l' → logprob: -9.847453117370605

Token 198: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.35002729296684265
    2. 'int' → logprob: -1.475027322769165
    3. ' entier' → logprob: -2.725027322769165
    4. ' int' → logprob: -7.225027084350586
    5. ' ent' → logprob: -9.350027084350586
    6. 'e' → logprob: -10.100027084350586
    7. ' seul' → logprob: -10.350027084350586
    8. 'se' → logprob: -10.350027084350586
    9. 'enti' → logprob: -10.475027084350586
    10. 'nombre' → logprob: -11.600027084350586

Token 199: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061027076095342636
    2. '.' → logprob: -3.3110270500183105
    3. '().' → logprob: -3.8110270500183105
    4. ')' → logprob: -8.061027526855469
    5. '()
' → logprob: -8.811027526855469
    6. '.
' → logprob: -10.686027526855469
    7. ',' → logprob: -10.936027526855469
    8. ' ()' → logprob: -10.936027526855469
    9. '().
' → logprob: -11.561027526855469
    10. '())' → logprob: -11.686027526855469

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5168772339820862
    2. '()' → logprob: -1.1418771743774414
    3. ')' → logprob: -3.1418771743774414
    4. '()
' → logprob: -3.7668771743774414
    5. 'return' → logprob: -5.016877174377441
    6. '(' → logprob: -6.016877174377441
    7. ' return' → logprob: -6.141877174377441
    8. ' ()' → logprob: -6.266877174377441
    9. '
' → logprob: -7.016877174377441
    10. '\n' → logprob: -7.391877174377441

Token 201: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22916710376739502
    2. 'return' → logprob: -2.6041669845581055
    3. '()' → logprob: -3.1041669845581055
    4. ')' → logprob: -3.2291669845581055
    5. '():' → logprob: -4.3541669845581055
    6. ' return' → logprob: -4.7291669845581055
    7. '()
' → logprob: -5.2291669845581055
    8. '"""' → logprob: -5.2291669845581055
    9. 'def' → logprob: -5.8541669845581055
    10. '():
' → logprob: -5.9791669845581055

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006781688891351223
    2. ' return' → logprob: -5.631781578063965
    3. 'return' → logprob: -5.756781578063965
    4. ' ' → logprob: -12.631781578063965
    5. '   ' → logprob: -12.881781578063965
    6. '	return' → logprob: -13.256781578063965
    7. '
' → logprob: -13.256781578063965
    8. ' 
' → logprob: -13.381781578063965
    9. '    
' → logprob: -13.381781578063965
    10. '    ' → logprob: -13.881781578063965

Token 203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009122979827225208
    2. ' return' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.2509126663208
    4. '
' → logprob: -15.8759126663208
    5. '    
' → logprob: -18.625911712646484
    6. 'ret' → logprob: -18.625911712646484
    7. 'eturn' → logprob: -19.125911712646484
    8. ' ' → logprob: -19.250911712646484
    9. '	return' → logprob: -19.500911712646484
    10. 'int' → logprob: -19.625911712646484

Token 204: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38687121868133545
    2. ' int' → logprob: -1.1368712186813354
    3. ' ' → logprob: -15.386871337890625
    4. '	int' → logprob: -17.136871337890625
    5. '(int' → logprob: -18.011871337890625
    6. 'in' → logprob: -18.261871337890625
    7. '  ' → logprob: -18.636871337890625
    8. ' in' → logprob: -19.136871337890625
    9. ' ' → logprob: -20.011871337890625
    10. 'i' → logprob: -20.386871337890625

Token 205: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.018150994554162025
    2. '(' → logprob: -4.018150806427002
    3. 'sys' → logprob: -14.89315128326416
    4. '(Sys' → logprob: -15.14315128326416
    5. '(
' → logprob: -16.143150329589844
    6. ' (' → logprob: -16.518150329589844
    7. '(

' → logprob: -16.518150329589844
    8. '(system' → logprob: -16.643150329589844
    9. '(s' → logprob: -17.018150329589844
    10. ' sys' → logprob: -17.143150329589844

Token 206: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013846253568772227
    2. '.' → logprob: -9.500138282775879
    3. '.stdout' → logprob: -10.125138282775879
    4. '.readline' → logprob: -11.375138282775879
    5. '.std' → logprob: -12.250138282775879
    6. 'stdin' → logprob: -12.625138282775879
    7. '.argv' → logprob: -13.500138282775879
    8. ' .' → logprob: -13.500138282775879
    9. '(stdin' → logprob: -14.250138282775879
    10. ' stdin' → logprob: -15.750138282775879

Token 207: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6881875991821289
    2. '(sys' → logprob: -1.313187599182129
    3. '()' → logprob: -1.688187599182129
    4. '.readline' → logprob: -3.313187599182129
    5. '())' → logprob: -5.688187599182129
    6. '(' → logprob: -6.563187599182129
    7. '(stdin' → logprob: -6.938187599182129
    8. 'sys' → logprob: -7.813187599182129
    9. '=sys' → logprob: -7.938187599182129
    10. '()
' → logprob: -8.313187599182129

Token 208: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31424835324287415
    2. '().' → logprob: -1.3142483234405518
    3. '()' → logprob: -6.939248561859131
    4. '()))' → logprob: -11.564248085021973
    5. ' ())' → logprob: -12.564248085021973
    6. ')' → logprob: -13.439248085021973
    7. '(' → logprob: -14.314248085021973
    8. '()[' → logprob: -14.564248085021973
    9. '())
' → logprob: -14.814248085021973
    10. '();)' → logprob: -15.439248085021973

Token 209: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.245724504580721e-05
    2. 'd' → logprob: -9.750092506408691
    3. '\' → logprob: -10.750092506408691
    4. 'n' → logprob: -12.250092506408691
    5. 'class' → logprob: -13.000092506408691
    6. '

' → logprob: -13.125092506408691
    7. '
' → logprob: -13.250092506408691
    8. '#' → logprob: -13.875092506408691
    9. '\n' → logprob: -15.375092506408691
    10. ' def' → logprob: -15.750092506408691

Token 210: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5936706066131592
    2. '()' → logprob: -1.9686706066131592
    3. '():' → logprob: -2.093670606613159
    4. 'LI' → logprob: -2.593670606613159
    5. 'L' → logprob: -3.468670606613159
    6. 's' → logprob: -3.843670606613159
    7. 'M' → logprob: -4.468670845031738
    8. 'A' → logprob: -4.593670845031738
    9. 'Q' → logprob: -4.968670845031738
    10. 'LS' → logprob: -5.218670845031738

Token 211: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.052047234028577805
    2. '()' → logprob: -3.0520472526550293
    3. '():
' → logprob: -5.677047252655029
    4. ' ():' → logprob: -12.052046775817871
    5. '():

' → logprob: -12.427046775817871
    6. '()>' → logprob: -12.427046775817871
    7. ' ()' → logprob: -12.552046775817871
    8. '():
' → logprob: -12.802046775817871
    9. '().' → logprob: -12.927046775817871
    10. '):' → logprob: -13.427046775817871

Token 212: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -3.2020991056924686e-05
    2. '():
' → logprob: -10.375032424926758
    3. ' ():' → logprob: -14.625032424926758
    4. '()' → logprob: -15.375032424926758
    5. ':' → logprob: -17.625032424926758
    6. '():
' → logprob: -17.750032424926758
    7. '):' → logprob: -18.375032424926758
    8. '():

' → logprob: -18.500032424926758
    9. 'def' → logprob: -18.875032424926758
    10. '(' → logprob: -19.750032424926758

Token 213: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001761809689924121
    2. '()' → logprob: -6.8767619132995605
    3. '():
' → logprob: -7.2517619132995605
    4. '):' → logprob: -11.501761436462402
    5. '():

' → logprob: -13.001761436462402
    6. '(' → logprob: -13.251761436462402
    7. ':' → logprob: -13.376761436462402
    8. 'def' → logprob: -13.501761436462402
    9. ' ():' → logprob: -13.501761436462402
    10. '():
' → logprob: -15.001761436462402

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7931171655654907
    2. 'def' → logprob: -1.2931171655654907
    3. '"""
' → logprob: -1.5431171655654907
    4. '()
' → logprob: -3.793117046356201
    5. 'return' → logprob: -4.043117046356201
    6. '"
' → logprob: -4.918117046356201
    7. ' return' → logprob: -5.293117046356201
    8. '()' → logprob: -6.543117046356201
    9. 'eturn' → logprob: -6.793117046356201
    10. ' ' → logprob: -7.043117046356201

Token 215: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14813846349716187
    2. 'return' → logprob: -2.7731385231018066
    3. '"""
' → logprob: -3.1481385231018066
    4. '   ' → logprob: -4.148138523101807
    5. 'Lit' (adapté à ' Lit') → logprob: -5.273138523101807
    6. '"""' → logprob: -5.398138523101807
    7. '()
' → logprob: -5.898138523101807
    8. ' return' → logprob: -6.523138523101807
    9. '()' → logprob: -6.898138523101807
    10. '
' → logprob: -6.898138523101807

Token 216: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20449650287628174
    2. '().' → logprob: -1.7044965028762817
    3. 'a' → logprob: -6.079496383666992
    4. 'une' → logprob: -8.079496383666992
    5. ' une' → logprob: -9.704496383666992
    6. ' ()' → logprob: -9.829496383666992
    7. '().__' → logprob: -9.954496383666992
    8. '()[' → logprob: -10.079496383666992
    9. '(sys' → logprob: -10.204496383666992
    10. 'line' → logprob: -10.329496383666992

Token 217: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.12011263519525528
    2. ' ligne' → logprob: -2.245112657546997
    3. 'line' → logprob: -5.370112419128418
    4. 'l' → logprob: -6.370112419128418
    5. 'liste' → logprob: -7.620112419128418
    6. ' line' → logprob: -8.245112419128418
    7. '()' → logprob: -10.620112419128418
    8. 'ine' → logprob: -10.870112419128418
    9. ' liste' → logprob: -11.120112419128418
    10. 'chaine' → logprob: -11.495112419128418

Token 218: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13276910781860352
    2. 'de' → logprob: -2.8827691078186035
    3. ' de' → logprob: -3.1327691078186035
    4. '().' → logprob: -3.7577691078186035
    5. '()[' → logprob: -8.007768630981445
    6. '()
' → logprob: -8.507768630981445
    7. '<|end|>' → logprob: -8.882768630981445
    8. ' ()' → logprob: -9.132768630981445
    9. 'd' → logprob: -9.132768630981445
    10. ' ' → logprob: -10.132768630981445

Token 219: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011392387561500072
    2. 'sys' → logprob: -4.761392593383789
    3. '(sys' → logprob: -7.136392593383789
    4. '()' → logprob: -7.136392593383789
    5. 'la' → logprob: -7.761392593383789
    6. ' l' → logprob: -8.386392593383789
    7. 'entrée' → logprob: -8.886392593383789
    8. 's' → logprob: -9.261392593383789
    9. 'input' → logprob: -9.761392593383789
    10. '().' → logprob: -10.136392593383789

Token 220: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.032287660986185074
    2. ''entrée' → logprob: -3.53228759765625
    3. 'input' → logprob: -7.40728759765625
    4. 'n' → logprob: -8.15728759765625
    5. 'chaine' → logprob: -8.15728759765625
    6. 'ent' → logprob: -8.40728759765625
    7. 'e' → logprob: -8.40728759765625
    8. 'ligne' → logprob: -8.78228759765625
    9. '()' → logprob: -8.90728759765625
    10. '_' → logprob: -9.03228759765625

Token 221: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.20563636720180511
    2. ' standard' → logprob: -1.7056363821029663
    3. '_standard' → logprob: -5.705636501312256
    4. '()' → logprob: -7.580636501312256
    5. 'de' → logprob: -8.705636024475098
    6. ' de' → logprob: -10.205636024475098
    7. 'def' → logprob: -10.330636024475098
    8. '().' → logprob: -11.080636024475098
    9. 'stand' → logprob: -11.080636024475098
    10. 'split' → logprob: -11.205636024475098

Token 222: ' (' (ID: 350)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.016122346743941307
    2. '()' → logprob: -4.141122341156006
    3. ')' → logprob: -9.516122817993164
    4. ').' → logprob: -12.141122817993164
    5. '()
' → logprob: -12.641122817993164
    6. '())' → logprob: -13.391122817993164
    7. '()).' → logprob: -14.016122817993164
    8. 'def' → logprob: -14.141122817993164
    9. '.' → logprob: -14.641122817993164
    10. ' ().' → logprob: -14.641122817993164

Token 223: 'buffer' (ID: 15967)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.049491312354803085
    2. ')' → logprob: -3.0494914054870605
    3. '().' → logprob: -7.6744914054870605
    4. ' ).' → logprob: -8.549490928649902
    5. 'et' → logprob: -10.174490928649902
    6. ')
' → logprob: -10.424490928649902
    7. '
' → logprob: -10.424490928649902
    8. '   ' → logprob: -10.549490928649902
    9. 'rstrip' → logprob: -10.674490928649902
    10. ' ' → logprob: -11.174490928649902

Token 224: 'isée' (ID: 59331)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05850720405578613
    2. '=' → logprob: -4.558506965637207
    3. ')' → logprob: -4.683506965637207
    4. '())' → logprob: -4.808506965637207
    5. '=True' → logprob: -5.183506965637207
    6. '()' → logprob: -5.308506965637207
    7. 'ed' → logprob: -5.433506965637207
    8. 'e' → logprob: -5.683506965637207
    9. '=sys' → logprob: -6.183506965637207
    10. 'ing' → logprob: -6.433506965637207

Token 225: ')' (ID: 8)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.36639752984046936
    2. '().' → logprob: -1.741397500038147
    3. ')' → logprob: -2.1163976192474365
    4. '()).' → logprob: -4.741397380828857
    5. '())' → logprob: -6.366397380828857
    6. '()' → logprob: -7.491397380828857
    7. ' ).' → logprob: -11.491397857666016
    8. ' )' → logprob: -12.741397857666016
    9. '   ' → logprob: -13.116397857666016
    10. '(' → logprob: -13.116397857666016

Token 226: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005708119831979275
    2. '()' → logprob: -5.38070821762085
    3. ')' → logprob: -7.63070821762085
    4. '   ' → logprob: -7.88070821762085
    5. ').' → logprob: -9.255707740783691
    6. 'def' → logprob: -10.380707740783691
    7. '():' → logprob: -10.505707740783691
    8. '.strip' → logprob: -11.005707740783691
    9. '.' → logprob: -11.255707740783691
    10. '()
' → logprob: -11.630707740783691

Token 227: ' retourne' (ID: 178818)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.3797059953212738
    2. 'return' → logprob: -1.3797060251235962
    3. ' retourne' → logprob: -3.0047059059143066
    4. 'strip' → logprob: -5.004705905914307
    5. 'rstrip' → logprob: -5.504705905914307
    6. ' return' → logprob: -6.254705905914307
    7. 'split' → logprob: -6.879705905914307
    8. 'ren' → logprob: -8.129706382751465
    9. 'returns' → logprob: -8.254706382751465
    10. ' ret' → logprob: -9.379706382751465

Token 228: ' une' (ID: 2463)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3057970702648163
    2. 'sys' → logprob: -1.8057971000671387
    3. ' list' → logprob: -2.4307971000671387
    4. 'list' → logprob: -5.180797100067139
    5. ' une' → logprob: -5.430797100067139
    6. '(sys' → logprob: -8.05579662322998
    7. ' la' → logprob: -8.18079662322998
    8. 'une' → logprob: -8.80579662322998
    9. 'string' → logprob: -9.68079662322998
    10. ' ' → logprob: -10.05579662322998

Token 229: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.71251380443573
    2. 'liste' → logprob: -0.71251380443573
    3. 'string' → logprob: -4.8375139236450195
    4. 'str' → logprob: -5.0875139236450195
    5. ' liste' → logprob: -6.0875139236450195
    6. 'strip' → logprob: -6.5875139236450195
    7. ' list' → logprob: -7.4625139236450195
    8. 'ligne' → logprob: -8.46251392364502
    9. 'chaine' → logprob: -8.71251392364502
    10. 's' → logprob: -9.21251392364502

Token 230: ' de' (ID: 334)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.7761546969413757
    2. '(sys' → logprob: -1.2761547565460205
    3. '(' → logprob: -2.0261547565460205
    4. '(map' → logprob: -2.6511547565460205
    5. '[str' → logprob: -3.2761547565460205
    6. '(s' → logprob: -5.276154518127441
    7. ' of' → logprob: -5.776154518127441
    8. 'de' → logprob: -5.901154518127441
    9. 'of' → logprob: -6.401154518127441
    10. '(strip' → logprob: -6.651154518127441

Token 231: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.22257691621780396
    2. 'sys' → logprob: -2.347576856613159
    3. 'strings' → logprob: -2.472576856613159
    4. 'string' → logprob: -4.472577095031738
    5. '(sys' → logprob: -5.347577095031738
    6. '(str' → logprob: -6.347577095031738
    7. 's' → logprob: -7.222577095031738
    8. 'chaine' → logprob: -7.597577095031738
    9. '[str' → logprob: -9.847577095031738
    10. 'chain' → logprob: -9.847577095031738

Token 232: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6351426243782043
    2. 'de' → logprob: -0.7601426243782043
    3. '_de' → logprob: -7.010142803192139
    4. '()' → logprob: -8.01014232635498
    5. 's' → logprob: -8.38514232635498
    6. ' caractères' → logprob: -8.63514232635498
    7. '[str' → logprob: -8.76014232635498
    8. ')' → logprob: -9.01014232635498
    9. '_' → logprob: -9.26014232635498
    10. 'car' → logprob: -9.63514232635498

Token 233: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009016446769237518
    2. '())' → logprob: -4.884016513824463
    3. '[str' → logprob: -7.759016513824463
    4. 'str' → logprob: -7.759016513824463
    5. ' )' → logprob: -8.509016036987305
    6. '(str' → logprob: -9.134016036987305
    7. '()' → logprob: -9.634016036987305
    8. 's' → logprob: -10.134016036987305
    9. ').' → logprob: -10.134016036987305
    10. 'def' → logprob: -10.634016036987305

Token 234: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.04146534949541092
    2. 'ot' → logprob: -3.2914652824401855
    3. ')' → logprob: -6.2914652824401855
    4. 'é' → logprob: -8.416465759277344
    5. 'ethod' → logprob: -8.416465759277344
    6. 'in' → logprob: -8.541465759277344
    7. 'str' → logprob: -8.916465759277344
    8. '[str' → logprob: -9.666465759277344
    9. 'a' → logprob: -9.791465759277344
    10. 'essages' → logprob: -10.166465759277344

Token 235: ' sépar' (ID: 97160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1328563690185547
    2. '())' → logprob: -2.1328563690185547
    3. ').' → logprob: -5.382856369018555
    4. '()' → logprob: -7.382856369018555
    5. '   ' → logprob: -8.007856369018555
    6. '().' → logprob: -8.757856369018555
    7. '()).' → logprob: -10.007856369018555
    8. 'def' → logprob: -10.257856369018555
    9. ' )' → logprob: -10.382856369018555
    10. '):' → logprob: -10.507856369018555

Token 236: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.308771550655365
    2. 'é' → logprob: -1.6837716102600098
    3. 'és' → logprob: -3.0587716102600098
    4. 'ée' → logprob: -3.4337716102600098
    5. 'ed' → logprob: -8.308771133422852
    6. 'es' → logprob: -8.683771133422852
    7. 'par' → logprob: -9.558771133422852
    8. 'e' → logprob: -9.808771133422852
    9. ')' → logprob: -10.558771133422852
    10. ' par' → logprob: -10.558771133422852

Token 237: ').
' (ID: 6294)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11531927436590195
    2. '()' → logprob: -2.24031925201416
    3. ')' → logprob: -6.11531925201416
    4. 'par' → logprob: -8.61531925201416
    5. ' )' → logprob: -11.11531925201416
    6. ' par' → logprob: -11.11531925201416
    7. '()]' → logprob: -11.11531925201416
    8. '().' → logprob: -11.24031925201416
    9. '())
' → logprob: -11.24031925201416
    10. '()
' → logprob: -11.61531925201416

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2243746668100357
    2. '()' → logprob: -2.474374771118164
    3. '():' → logprob: -2.974374771118164
    4. '():
' → logprob: -3.099374771118164
    5. '()
' → logprob: -4.224374771118164
    6. 'def' → logprob: -6.349374771118164
    7. ')' → logprob: -6.724374771118164
    8. '):' → logprob: -6.724374771118164
    9. '):
' → logprob: -6.974374771118164
    10. 'return' → logprob: -8.099374771118164

Token 239: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009540736675262451
    2. 'return' → logprob: -5.509540557861328
    3. 'def' → logprob: -6.134540557861328
    4. ')' → logprob: -6.759540557861328
    5. '
' → logprob: -7.009540557861328
    6. '()
' → logprob: -8.009540557861328
    7. ' return' → logprob: -8.134540557861328
    8. '```' → logprob: -8.634540557861328
    9. ')
' → logprob: -8.759540557861328
    10. '()' → logprob: -10.009540557861328

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006089136004447937
    2. 'return' → logprob: -7.500608921051025
    3. ' return' → logprob: -9.875608444213867
    4. '	return' → logprob: -13.000608444213867
    5. ' ' → logprob: -13.625608444213867
    6. '```' → logprob: -15.250608444213867
    7. '  ' → logprob: -15.375608444213867
    8. '    
' → logprob: -15.375608444213867
    9. '
' → logprob: -16.625608444213867
    10. '       ' → logprob: -16.875608444213867

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00016182278341148049
    2. ' return' → logprob: -8.750162124633789
    3. '   ' → logprob: -12.625162124633789
    4. '
' → logprob: -18.25016212463379
    5. '	return' → logprob: -18.25016212463379
    6. 'ret' → logprob: -19.50016212463379
    7. ' ' → logprob: -19.62516212463379
    8. '```' → logprob: -19.75016212463379
    9. 'def' → logprob: -20.25016212463379
    10. 'eturn' → logprob: -20.37516212463379

Token 242: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019379158038645983
    2. ' sys' → logprob: -6.2519378662109375
    3. 'list' → logprob: -11.626937866210938
    4. '(sys' → logprob: -15.626937866210938
    5. ' list' → logprob: -16.501937866210938
    6. 'input' → logprob: -17.251937866210938
    7. '	sys' → logprob: -17.376937866210938
    8. 'string' → logprob: -17.626937866210938
    9. '=sys' → logprob: -18.501937866210938
    10. 'str' → logprob: -18.876937866210938

Token 243: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.668304245569743e-05
    2. '.stdout' → logprob: -10.000046730041504
    3. '.std' → logprob: -14.750046730041504
    4. '.' → logprob: -14.875046730041504
    5. 'stdin' → logprob: -15.375046730041504
    6. '.argv' → logprob: -15.500046730041504
    7. '.readline' → logprob: -17.000045776367188
    8. '.stderr' → logprob: -18.000045776367188
    9. ' stdin' → logprob: -18.750045776367188
    10. '(stdin' → logprob: -18.875045776367188

Token 244: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.130576806142926e-05
    2. '.stdin' → logprob: -10.500031471252441
    3. '.' → logprob: -12.750031471252441
    4. '.stdout' → logprob: -14.250031471252441
    5. '.read' → logprob: -16.250030517578125
    6. '.readlines' → logprob: -17.000030517578125
    7. ' .' → logprob: -17.250030517578125
    8. ' readline' → logprob: -18.000030517578125
    9. '().' → logprob: -18.750030517578125
    10. '.buffer' → logprob: -18.875030517578125

Token 245: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.5716304410016164e-05
    2. '.read' → logprob: -10.250035285949707
    3. '.readlines' → logprob: -15.500035285949707
    4. '.raw' → logprob: -17.375036239624023
    5. '.' → logprob: -17.500036239624023
    6. ' readline' → logprob: -17.625036239624023
    7. '.rstrip' → logprob: -17.625036239624023
    8. '.decode' → logprob: -18.000036239624023
    9. '.peek' → logprob: -19.875036239624023
    10. 'read' → logprob: -21.500036239624023

Token 246: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020401719666551799
    2. '()' → logprob: -8.500204086303711
    3. '(' → logprob: -15.375204086303711
    4. ' ().' → logprob: -15.375204086303711
    5. '.rstrip' → logprob: -17.25020408630371
    6. '()).' → logprob: -18.37520408630371
    7. '()
' → logprob: -18.37520408630371
    8. '.strip' → logprob: -18.62520408630371
    9. '().__' → logprob: -18.62520408630371
    10. ')' → logprob: -19.50020408630371

Token 247: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.35917261242866516
    2. 'decode' → logprob: -1.3591725826263428
    3. 'strip' → logprob: -3.1091725826263428
    4. 'split' → logprob: -8.359172821044922
    5. '.rstrip' → logprob: -14.609172821044922
    6. '[:-' → logprob: -15.734172821044922
    7. 'raw' → logprob: -16.609172821044922
    8. ' decode' → logprob: -16.984172821044922
    9. '.decode' → logprob: -16.984172821044922
    10. 'replace' → logprob: -17.359172821044922

Token 248: '().' (ID: 1454)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.583488404750824
    2. 'b' → logprob: -1.0834884643554688
    3. '()' → logprob: -2.4584884643554688
    4. '().' → logprob: -4.083488464355469
    5. '(' → logprob: -6.833488464355469
    6. '())' → logprob: -9.958488464355469
    7. '()
' → logprob: -10.958488464355469
    8. ' b' → logprob: -11.208488464355469
    9. '(),' → logprob: -11.583488464355469
    10. '()\' → logprob: -11.958488464355469

Token 249: 'decode' (ID: 44196)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3868713080883026
    2. 'decode' → logprob: -1.136871337890625
    3. '.decode' → logprob: -16.511871337890625
    4. 'rstrip' → logprob: -16.511871337890625
    5. 'spl' → logprob: -16.761871337890625
    6. ' split' → logprob: -17.136871337890625
    7. '.split' → logprob: -17.261871337890625
    8. ' decode' → logprob: -17.636871337890625
    9. 'strip' → logprob: -18.011871337890625
    10. 'dec' → logprob: -18.636871337890625

Token 250: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10963224619626999
    2. '('' → logprob: -2.3596322536468506
    3. '().' → logprob: -4.8596320152282715
    4. '(' → logprob: -6.8596320152282715
    5. '("' → logprob: -7.8596320152282715
    6. '()[' → logprob: -9.23463249206543
    7. '()='' → logprob: -10.73463249206543
    8. ' ()' → logprob: -11.23463249206543
    9. '();' → logprob: -11.85963249206543
    10. '()>' → logprob: -11.98463249206543

Token 251: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.0015043864259496331
    2. 'ascii' → logprob: -6.501504421234131
    3. ' utf' → logprob: -14.001503944396973
    4. 'UTF' → logprob: -14.001503944396973
    5. 'unicode' → logprob: -15.376503944396973
    6. '_utf' → logprob: -17.25150489807129
    7. 'Utf' → logprob: -17.37650489807129
    8. 'latin' → logprob: -17.50150489807129
    9. '')' → logprob: -18.00150489807129
    10. ' ascii' → logprob: -18.12650489807129

Token 252: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023246178403496742
    2. '8' → logprob: -3.7732462882995605
    3. '‑' → logprob: -15.148245811462402
    4. '')' → logprob: -15.273245811462402
    5. '_' → logprob: -16.02324676513672
    6. ''-' → logprob: -16.89824676513672
    7. '−' → logprob: -17.64824676513672
    8. ''' → logprob: -18.02324676513672
    9. 'utf' → logprob: -18.27324676513672
    10. '--' → logprob: -18.39824676513672

Token 253: '8' (ID: 23)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.0023487689904868603
    2. 'ascii' → logprob: -6.127348899841309
    3. '8' → logprob: -8.877348899841309
    4. 'UTF' → logprob: -11.252348899841309
    5. ' utf' → logprob: -11.627348899841309
    6. 'Utf' → logprob: -14.252348899841309
    7. '_utf' → logprob: -14.752348899841309
    8. 'uft' → logprob: -15.502348899841309
    9. 'decode' → logprob: -15.627348899841309
    10. 'ut' → logprob: -15.752348899841309

Token 254: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.016770217567682266
    2. '')' → logprob: -4.266770362854004
    3. ').' → logprob: -6.641770362854004
    4. ')' → logprob: -7.391770362854004
    5. '()' → logprob: -8.016770362854004
    6. '()).' → logprob: -9.141770362854004
    7. '").' → logprob: -9.141770362854004
    8. '().' → logprob: -10.391770362854004
    9. ' ').' → logprob: -10.391770362854004
    10. ''' → logprob: -10.891770362854004

Token 255: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02353859879076481
    2. 'strip' → logprob: -3.773538589477539
    3. 'decode' → logprob: -8.523538589477539
    4. 'rstrip' → logprob: -9.273538589477539
    5. 'spl' → logprob: -14.648538589477539
    6. ' split' → logprob: -16.89853858947754
    7. '(split' → logprob: -17.39853858947754
    8. 'read' → logprob: -17.77353858947754
    9. 'startswith' → logprob: -19.27353858947754
    10. '.split' → logprob: -19.64853858947754

Token 256: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017568140756338835
    2. '(' → logprob: -6.37675666809082
    3. '('' → logprob: -10.00175666809082
    4. '()]' → logprob: -12.62675666809082
    5. '())' → logprob: -13.00175666809082
    6. ' ()' → logprob: -13.87675666809082
    7. '()
' → logprob: -13.87675666809082
    8. '(),' → logprob: -15.12675666809082
    9. '()[' → logprob: -15.50175666809082
    10. '()"' → logprob: -15.75175666809082

Token 257: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001290454383706674
    2. '\' → logprob: -10.125128746032715
    3. '#' → logprob: -10.375128746032715
    4. '
' → logprob: -10.875128746032715
    5. '\n' → logprob: -11.250128746032715
    6. '<|end|>' → logprob: -11.375128746032715
    7. 'de' → logprob: -12.750128746032715
    8. '```' → logprob: -13.000128746032715
    9. 'd' → logprob: -13.125128746032715
    10. '' → logprob: -13.750128746032715

Token 258: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07966935634613037
    2. 'I' → logprob: -3.95466947555542
    3. 'input' → logprob: -4.07966947555542
    4. 'L' → logprob: -4.95466947555542
    5. 'main' → logprob: -4.95466947555542
    6. 'SS' → logprob: -5.07966947555542
    7. 's' → logprob: -5.70466947555542
    8. 'LI' → logprob: -6.07966947555542
    9. 'LS' → logprob: -6.20466947555542
    10. 'print' → logprob: -6.32966947555542

Token 259: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002593130338937044
    2. '()' → logprob: -8.750259399414062
    3. '():
' → logprob: -9.250259399414062
    4. ' ():' → logprob: -12.500259399414062
    5. '():

' → logprob: -15.375259399414062
    6. '(' → logprob: -15.500259399414062
    7. ':' → logprob: -15.500259399414062
    8. '()>' → logprob: -16.125259399414062
    9. '():
' → logprob: -16.500259399414062
    10. '):' → logprob: -16.500259399414062

Token 260: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004952482995577157
    2. '():
' → logprob: -7.750495433807373
    3. '()' → logprob: -9.875494956970215
    4. ' ():' → logprob: -12.125494956970215
    5. ':' → logprob: -12.625494956970215
    6. '):' → logprob: -12.875494956970215
    7. '(' → logprob: -14.125494956970215
    8. '():
' → logprob: -14.375494956970215
    9. '():

' → logprob: -14.625494956970215
    10. '   ' → logprob: -17.87549591064453

Token 261: ' """
' (ID: 7037)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7970389127731323
    2. 'return' → logprob: -1.0470389127731323
    3. '()' → logprob: -1.6720389127731323
    4. '   ' → logprob: -6.172039031982422
    5. '()
' → logprob: -6.422039031982422
    6. '():' → logprob: -7.047039031982422
    7. '
' → logprob: -7.172039031982422
    8. 'def' → logprob: -7.172039031982422
    9. '=sys' → logprob: -7.172039031982422
    10. ' return' → logprob: -7.422039031982422

Token 262: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10161633044481277
    2. 'sys' → logprob: -2.351616382598877
    3. '   ' → logprob: -6.851616382598877
    4. '"""
' → logprob: -8.601615905761719
    5. ' return' → logprob: -9.101615905761719
    6. '"""' → logprob: -10.351615905761719
    7. ' sys' → logprob: -11.726615905761719
    8. '""' → logprob: -12.601615905761719
    9. 'def' → logprob: -12.851615905761719
    10. '
' → logprob: -13.226615905761719

Token 263: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009696120396256447
    2. 'def' → logprob: -5.009696006774902
    3. '"""
' → logprob: -6.884696006774902
    4. '"""' → logprob: -7.009696006774902
    5. ' return' → logprob: -7.759696006774902
    6. '   ' → logprob: -8.634696006774902
    7. 'Lit' (adapté à ' Lit') → logprob: -9.009696006774902
    8. 'sys' → logprob: -9.259696006774902
    9. 'Lire' → logprob: -9.509696006774902
    10. '""' → logprob: -10.259696006774902

Token 264: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05176496133208275
    2. ' une' → logprob: -3.551764965057373
    3. 'une' → logprob: -4.051764965057373
    4. 'a' → logprob: -6.551764965057373
    5. '():' → logprob: -7.176764965057373
    6. '<|end|>' → logprob: -7.551764965057373
    7. ' ()' → logprob: -7.676764965057373
    8. '()>' → logprob: -8.051764488220215
    9. '()<' → logprob: -8.926764488220215
    10. '().' → logprob: -9.051764488220215

Token 265: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.4290352761745453
    2. ' ligne' → logprob: -1.0540353059768677
    3. 'l' → logprob: -8.179035186767578
    4. ' ' → logprob: -11.054035186767578
    5. 'lig' → logprob: -11.679035186767578
    6. 'L' → logprob: -11.804035186767578
    7. 'line' → logprob: -11.929035186767578
    8. '()' → logprob: -12.304035186767578
    9. ' chaîne' → logprob: -13.304035186767578
    10. ' line' → logprob: -13.929035186767578

Token 266: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00701124407351017
    2. '().' → logprob: -5.632011413574219
    3. 'de' → logprob: -6.632011413574219
    4. ' de' → logprob: -7.132011413574219
    5. '()
' → logprob: -7.132011413574219
    6. '<|end|>' → logprob: -8.757011413574219
    7. '   ' → logprob: -9.757011413574219
    8. 'def' → logprob: -9.882011413574219
    9. '()\' → logprob: -10.507011413574219
    10. '.' → logprob: -10.882011413574219

Token 267: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05727001279592514
    2. 'sys' → logprob: -2.932270050048828
    3. ' l' → logprob: -6.307270050048828
    4. 'input' → logprob: -8.682270050048828
    5. ' sys' → logprob: -8.932270050048828
    6. '(sys' → logprob: -9.057270050048828
    7. '()' → logprob: -9.932270050048828
    8. 'entrée' → logprob: -10.682270050048828
    9. 'chaine' → logprob: -11.182270050048828
    10. '=sys' → logprob: -11.182270050048828

Token 268: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.05013132840394974
    2. 'entrée' → logprob: -3.425131320953369
    3. '()' → logprob: -4.800131320953369
    4. 'input' → logprob: -6.050131320953369
    5. '_' → logprob: -6.175131320953369
    6. ''' → logprob: -6.675131320953369
    7. '_input' → logprob: -7.550131320953369
    8. '’entrée' → logprob: -7.550131320953369
    9. '()
' → logprob: -8.300131797790527
    10. 'sys' → logprob: -8.550131797790527

Token 269: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.2525773048400879
    2. ' standard' → logprob: -1.502577304840088
    3. '_standard' → logprob: -7.752577304840088
    4. '()' → logprob: -9.00257682800293
    5. 'std' → logprob: -10.50257682800293
    6. 'def' → logprob: -11.75257682800293
    7. ' estándar' → logprob: -11.75257682800293
    8. '.standard' → logprob: -11.87757682800293
    9. '标准' → logprob: -11.87757682800293
    10. '_std' → logprob: -11.87757682800293

Token 270: ' (' (ID: 350)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6329114437103271
    2. '()' → logprob: -0.7579114437103271
    3. ')' → logprob: -8.632911682128906
    4. '()
' → logprob: -10.007911682128906
    5. '())' → logprob: -11.007911682128906
    6. ' ()' → logprob: -11.632911682128906
    7. 'def' → logprob: -11.632911682128906
    8. 'rstrip' → logprob: -11.757911682128906
    9. '.' → logprob: -12.132911682128906
    10. '   ' → logprob: -12.257911682128906

Token 271: 'buffer' (ID: 15967)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04052835702896118
    2. 'rstrip' → logprob: -3.5405282974243164
    3. ').' → logprob: -4.790528297424316
    4. '().' → logprob: -6.665528297424316
    5. '.rstrip' → logprob: -7.165528297424316
    6. '   ' → logprob: -9.290528297424316
    7. 'r' → logprob: -9.790528297424316
    8. 'buffer' → logprob: -10.540528297424316
    9. ' )' → logprob: -10.915528297424316
    10. '()' → logprob: -10.915528297424316

Token 272: 'isée' (ID: 59331)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6541026830673218
    2. '().' → logprob: -1.0291026830673218
    3. 'isée' → logprob: -3.0291028022766113
    4. '.read' → logprob: -3.9041028022766113
    5. ')' → logprob: -4.404102802276611
    6. 'isé' → logprob: -4.779102802276611
    7. '   ' → logprob: -4.779102802276611
    8. '.' → logprob: -4.779102802276611
    9. 'ée' → logprob: -5.904102802276611
    10. 'def' → logprob: -6.029102802276611

Token 273: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010139930061995983
    2. '()' → logprob: -4.8851399421691895
    3. '())' → logprob: -6.5101399421691895
    4. ').' → logprob: -7.3851399421691895
    5. '):
' → logprob: -9.010139465332031
    6. '):' → logprob: -9.635139465332031
    7. ' )' → logprob: -9.885139465332031
    8. ')
' → logprob: -10.135139465332031
    9. '()
' → logprob: -10.135139465332031
    10. 'def' → logprob: -10.260139465332031

Token 274: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.16660945117473602
    2. '()' → logprob: -2.541609525680542
    3. ')' → logprob: -2.791609525680542
    4. ').' → logprob: -4.666609287261963
    5. '   ' → logprob: -6.291609287261963
    6. 'def' → logprob: -7.416609287261963
    7. '()
' → logprob: -7.666609287261963
    8. 'return' → logprob: -8.166609764099121
    9. '.rstrip' → logprob: -8.791609764099121
    10. 'rstrip' → logprob: -8.791609764099121

Token 275: ' retourne' (ID: 178818)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.5584532618522644
    2. ' return' → logprob: -1.1834533214569092
    3. 'return' → logprob: -2.183453321456909
    4. '.rstrip' → logprob: -4.93345308303833
    5. 'eturn' → logprob: -7.05845308303833
    6. ' retourne' → logprob: -8.183453559875488
    7. '.return' → logprob: -8.683453559875488
    8. ':return' → logprob: -9.683453559875488
    9. ' returns' → logprob: -9.808453559875488
    10. 'def' → logprob: -10.058453559875488

Token 276: ' une' (ID: 2463)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47656914591789246
    2. ' sys' → logprob: -0.9765691757202148
    3. '(sys' → logprob: -6.101569175720215
    4. 'a' → logprob: -9.726569175720215
    5. '	sys' → logprob: -10.101569175720215
    6. ' a' → logprob: -10.226569175720215
    7. 's' → logprob: -10.226569175720215
    8. 'str' → logprob: -10.976569175720215
    9. '=sys' → logprob: -11.101569175720215
    10. ' ' → logprob: -11.101569175720215

Token 277: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.35404789447784424
    2. 'string' → logprob: -1.6040478944778442
    3. 'chaine' → logprob: -2.3540477752685547
    4. ' chaîne' → logprob: -6.604047775268555
    5. ' string' → logprob: -7.854047775268555
    6. ' chaine' → logprob: -8.854047775268555
    7. 'cha' → logprob: -9.854047775268555
    8. 'stri' → logprob: -10.104047775268555
    9. 's' → logprob: -10.229047775268555
    10. ' str' → logprob: -10.354047775268555

Token 278: ' déc' (ID: 8498)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2019120454788208
    2. '().' → logprob: -1.7019120454788208
    3. '.strip' → logprob: -8.326911926269531
    4. '()
' → logprob: -9.576911926269531
    5. '.' → logprob: -9.701911926269531
    6. '.rstrip' → logprob: -10.076911926269531
    7. '()\' → logprob: -10.826911926269531
    8. ')' → logprob: -11.951911926269531
    9. '();' → logprob: -12.076911926269531
    10. '(' → logprob: -12.326911926269531

Token 279: 'od' (ID: 368)
  Prédit: 'lar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lar' → logprob: -0.3774387836456299
    2. 'al' → logprob: -3.00243878364563
    3. 'hale' → logprob: -3.00243878364563
    4. 'ale' → logprob: -3.12743878364563
    5. 'u' → logprob: -3.87743878364563
    6. 'l' → logprob: -4.377438545227051
    7. '```' → logprob: -4.377438545227051
    8. 'r' → logprob: -4.502438545227051
    9. 'ar' → logprob: -4.502438545227051
    10. 'h' → logprob: -4.752438545227051

Token 280: 'ée' (ID: 2894)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.07763807475566864
    2. 'rée' → logprob: -3.4526381492614746
    3. 'ode' → logprob: -4.202638149261475
    4. 'lée' → logprob: -4.452638149261475
    5. 'oded' → logprob: -5.202638149261475
    6. 'ée' → logprob: -5.702638149261475
    7. 'r' → logprob: -5.827638149261475
    8. '```' → logprob: -6.827638149261475
    9. 'oder' → logprob: -7.452638149261475
    10. 'or' → logprob: -7.952638149261475

Token 281: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009910613298416138
    2. '().' → logprob: -4.634910583496094
    3. '()
' → logprob: -9.259910583496094
    4. '('' → logprob: -10.384910583496094
    5. '(' → logprob: -11.634910583496094
    6. ' ()' → logprob: -12.009910583496094
    7. '   ' → logprob: -13.009910583496094
    8. '.' → logprob: -13.009910583496094
    9. '().'' → logprob: -13.259910583496094
    10. '()

' → logprob: -13.384910583496094

Token 282: ' UTF' (ID: 52888)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.12807142734527588
    2. 'str' → logprob: -3.0030713081359863
    3. 'UTF' → logprob: -4.003071308135986
    4. 'string' → logprob: -4.253071308135986
    5. ' utf' → logprob: -4.503071308135986
    6. 'texte' → logprob: -5.003071308135986
    7. 'chaine' → logprob: -5.128071308135986
    8. ' UTF' → logprob: -5.378071308135986
    9. '_utf' → logprob: -5.503071308135986
    10. 'cha' → logprob: -6.128071308135986

Token 283: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011787971016019583
    2. '8' → logprob: -6.751178741455078
    3. ''-' → logprob: -12.376178741455078
    4. '-
' → logprob: -13.251178741455078
    5. '_' → logprob: -13.876178741455078
    6. '('-' → logprob: -14.876178741455078
    7. ''' → logprob: -15.001178741455078
    8. '-)' → logprob: -15.251178741455078
    9. '-'' → logprob: -15.876178741455078
    10. '-​' → logprob: -16.251178741455078

Token 284: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '-' → logprob: -17.0
    3. '```' → logprob: -17.375
    4. 'utf' → logprob: -17.625
    5. ' ' → logprob: -19.125
    6. '
' → logprob: -19.375
    7. '۸' → logprob: -20.0
    8. '   ' → logprob: -20.875
    9. '８' → logprob: -20.875
    10. '"""' → logprob: -21.375

Token 285: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6218301653862
    2. '():' → logprob: -0.8718301653862
    3. '():
' → logprob: -3.1218302249908447
    4. '().' → logprob: -7.746829986572266
    5. '()
' → logprob: -8.621829986572266
    6. ')' → logprob: -9.746829986572266
    7. '):' → logprob: -10.746829986572266
    8. '())' → logprob: -10.871829986572266
    9. '():
' → logprob: -11.496829986572266
    10. '(' → logprob: -11.746829986572266

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44901740550994873
    2. '()' → logprob: -1.1990174055099487
    3. '()
' → logprob: -2.9490175247192383
    4. 'def' → logprob: -5.824017524719238
    5. ')' → logprob: -6.449017524719238
    6. '():
' → logprob: -7.074017524719238
    7. '
' → logprob: -7.199017524719238
    8. '():' → logprob: -7.449017524719238
    9. 'return' → logprob: -7.949017524719238
    10. '```' → logprob: -8.199017524719238

Token 287: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2878415286540985
    2. '()' → logprob: -1.912841558456421
    3. '():' → logprob: -2.662841558456421
    4. '():
' → logprob: -4.037841320037842
    5. ')' → logprob: -5.287841320037842
    6. '()
' → logprob: -5.287841320037842
    7. 'def' → logprob: -6.287841320037842
    8. '):' → logprob: -6.662841320037842
    9. 'return' → logprob: -7.662841320037842
    10. '
' → logprob: -7.912841320037842

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005850838497281075
    2. ' return' → logprob: -8.000585556030273
    3. 'return' → logprob: -8.875585556030273
    4. ' ' → logprob: -10.750585556030273
    5. '	return' → logprob: -11.000585556030273
    6. '()' → logprob: -11.125585556030273
    7. '    ' → logprob: -11.375585556030273
    8. 'def' → logprob: -11.375585556030273
    9. '(' → logprob: -11.500585556030273
    10. '    
' → logprob: -12.250585556030273

Token 289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017049367306753993
    2. ' return' → logprob: -6.376705169677734
    3. 's' → logprob: -13.501705169677734
    4. '   ' → logprob: -14.251705169677734
    5. 'def' → logprob: -14.501705169677734
    6. 'line' → logprob: -16.376705169677734
    7. '
' → logprob: -16.751705169677734
    8. 'sys' → logprob: -17.626705169677734
    9. 'eturn' → logprob: -17.751705169677734
    10. 'ret' → logprob: -18.126705169677734

Token 290: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0002036595979006961
    2. ' sys' → logprob: -8.500204086303711
    3. '(sys' → logprob: -15.875204086303711
    4. '	sys' → logprob: -18.62520408630371
    5. '=sys' → logprob: -19.37520408630371
    6. 'input' → logprob: -20.25020408630371
    7. 'Sys' → logprob: -20.50020408630371
    8. '.sys' → logprob: -20.62520408630371
    9. 's' → logprob: -20.87520408630371
    10. 'str' → logprob: -21.12520408630371

Token 291: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.35706390615087e-05
    2. '.stdout' → logprob: -10.375033378601074
    3. 'stdin' → logprob: -13.625033378601074
    4. '.std' → logprob: -14.250033378601074
    5. '.' → logprob: -15.250033378601074
    6. '.argv' → logprob: -15.625033378601074
    7. '.readline' → logprob: -16.75003433227539
    8. '.sys' → logprob: -17.00003433227539
    9. '.stderr' → logprob: -17.87503433227539
    10. '(stdin' → logprob: -18.25003433227539

Token 292: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3870511054992676
    2. '.buffer' → logprob: -1.1370511054992676
    3. '.' → logprob: -9.01205062866211
    4. '.stdin' → logprob: -10.38705062866211
    5. 'buffer' → logprob: -10.63705062866211
    6. '.read' → logprob: -13.38705062866211
    7. '.stdout' → logprob: -14.26205062866211
    8. ' buffer' → logprob: -15.01205062866211
    9. '.buf' → logprob: -15.51205062866211
    10. '.input' → logprob: -16.01205062866211

Token 293: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1041145626222715e-05
    2. '.read' → logprob: -11.750011444091797
    3. 'read' → logprob: -12.875011444091797
    4. ' readline' → logprob: -14.500011444091797
    5. '.readlines' → logprob: -17.500011444091797
    6. '.' → logprob: -18.250011444091797
    7. '_read' → logprob: -21.750011444091797
    8. '.decode' → logprob: -22.125011444091797
    9. 'raw' → logprob: -22.625011444091797
    10. '.rstrip' → logprob: -22.875011444091797

Token 294: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018006093159783632
    2. '()' → logprob: -8.6251802444458
    3. '.rstrip' → logprob: -15.8751802444458
    4. ' ().' → logprob: -16.375179290771484
    5. 'rstrip' → logprob: -16.750179290771484
    6. '(' → logprob: -16.875179290771484
    7. '()
' → logprob: -17.625179290771484
    8. '().'' → logprob: -17.750179290771484
    9. '()).' → logprob: -18.125179290771484
    10. '.' → logprob: -18.250179290771484

Token 295: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0015034328680485487
    2. 'decode' → logprob: -6.5015034675598145
    3. 'read' → logprob: -14.001502990722656
    4. 'strip' → logprob: -15.501502990722656
    5. '.rstrip' → logprob: -16.501502990722656
    6. 'rst' → logprob: -18.376502990722656
    7. 'r' → logprob: -19.751502990722656
    8. '```' → logprob: -19.751502990722656
    9. 'rcode' → logprob: -20.126502990722656
    10. '
' → logprob: -20.501502990722656

Token 296: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38709884881973267
    2. '()' → logprob: -1.137098789215088
    3. '(b' → logprob: -9.637099266052246
    4. '(' → logprob: -10.387099266052246
    5. '(),' → logprob: -10.512099266052246
    6. 'b' → logprob: -10.637099266052246
    7. '()
' → logprob: -10.762099266052246
    8. '()\' → logprob: -10.762099266052246
    9. '.decode' → logprob: -11.262099266052246
    10. '())' → logprob: -12.012099266052246

Token 297: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -3.128163257315464e-07
    2. ' decode' → logprob: -15.625
    3. '.decode' → logprob: -17.0
    4. 'rstrip' → logprob: -19.75
    5. '```' → logprob: -22.0
    6. 'encode' → logprob: -22.875
    7. 'raw' → logprob: -23.375
    8. 'utf' → logprob: -23.375
    9. 'read' → logprob: -23.5
    10. 'deserialize' → logprob: -24.125

Token 298: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005234848940744996
    2. '(' → logprob: -7.625523567199707
    3. '("' → logprob: -10.375523567199707
    4. '()' → logprob: -12.875523567199707
    5. '(
' → logprob: -15.000523567199707
    6. '('_' → logprob: -15.125523567199707
    7. ' ('' → logprob: -15.500523567199707
    8. '(\'' → logprob: -15.500523567199707
    9. ' (' → logprob: -15.875523567199707
    10. '__('' → logprob: -16.37552261352539

Token 299: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.0052362410351634026
    2. ''' → logprob: -5.2552361488342285
    3. ''u' → logprob: -13.255236625671387
    4. ' utf' → logprob: -15.880236625671387
    5. 'uft' → logprob: -16.13023567199707
    6. '=utf' → logprob: -16.13023567199707
    7. '')' → logprob: -16.13023567199707
    8. '_utf' → logprob: -16.25523567199707
    9. ''use' → logprob: -17.25523567199707
    10. 'UTF' → logprob: -17.25523567199707

Token 300: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.1080467781284824e-05
    2. '8' → logprob: -10.125041007995605
    3. '-'' → logprob: -15.000041007995605
    4. '')' → logprob: -15.125041007995605
    5. ''-' → logprob: -15.125041007995605
    6. ''' → logprob: -15.750041007995605
    7. '_' → logprob: -18.625041961669922
    8. '('' → logprob: -19.375041961669922
    9. 'utf' → logprob: -19.500041961669922
    10. '‑' → logprob: -19.625041961669922

Token 301: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00017112065688706934
    2. 'utf' → logprob: -8.750170707702637
    3. '-' → logprob: -11.625170707702637
    4. ''' → logprob: -12.625170707702637
    5. '')' → logprob: -14.750170707702637
    6. '```' → logprob: -18.250171661376953
    7. '
' → logprob: -19.000171661376953
    8. ''-' → logprob: -19.625171661376953
    9. '=utf' → logprob: -19.625171661376953
    10. ' utf' → logprob: -19.750171661376953

Token 302: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03555911406874657
    2. '())' → logprob: -3.7855591773986816
    3. '()' → logprob: -4.410559177398682
    4. '')' → logprob: -10.035558700561523
    5. ' )' → logprob: -10.285558700561523
    6. '")' → logprob: -12.035558700561523
    7. '`)' → logprob: -13.285558700561523
    8. ')`' → logprob: -14.035558700561523
    9. ')
' → logprob: -14.160558700561523
    10. '))' → logprob: -14.535558700561523

Token 303: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005171616096049547
    2. 'class' → logprob: -5.505171775817871
    3. 'd' → logprob: -7.255171775817871
    4. '#' → logprob: -8.755171775817871
    5. '
' → logprob: -9.130171775817871
    6. '\' → logprob: -9.630171775817871
    7. 'de' → logprob: -11.380171775817871
    8. '

' → logprob: -11.505171775817871
    9. 'from' → logprob: -12.630171775817871
    10. '\n' → logprob: -12.880171775817871

Token 304: ' IR' (ID: 23712)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09979430586099625
    2. ' main' → logprob: -2.724794387817383
    3. 'print' → logprob: -3.849794387817383
    4. ' print' → logprob: -6.849794387817383
    5. 'G' → logprob: -6.974794387817383
    6. 'input' → logprob: -6.974794387817383
    7. 'pow' → logprob: -7.224794387817383
    8. 'g' → logprob: -7.474794387817383
    9. 'dfs' → logprob: -7.474794387817383
    10. 'debug' → logprob: -8.224794387817383

Token 305: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06870393455028534
    2. '():
' → logprob: -2.9437038898468018
    3. '()' → logprob: -4.318704128265381
    4. 'ange' → logprob: -8.693703651428223
    5. 'E' → logprob: -9.568703651428223
    6. '():
' → logprob: -10.193703651428223
    7. ' ():' → logprob: -10.318703651428223
    8. 'ANGE' → logprob: -10.443703651428223
    9. 'ead' → logprob: -11.193703651428223
    10. 'e' → logprob: -11.568703651428223

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013280104845762253
    2. '):
' → logprob: -4.513279914855957
    3. ')' → logprob: -6.138279914855957
    4. ' ):' → logprob: -10.888279914855957
    5. '):
' → logprob: -10.888279914855957
    6. ',' → logprob: -11.263279914855957
    7. '(n' → logprob: -11.388279914855957
    8. ',n' → logprob: -12.388279914855957
    9. 'n' → logprob: -12.888279914855957
    10. '):

' → logprob: -14.388279914855957

Token 307: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21321968734264374
    2. ':
' → logprob: -2.58821964263916
    3. '(n' → logprob: -2.96321964263916
    4. '   ' → logprob: -3.71321964263916
    5. ' :' → logprob: -4.08821964263916
    6. '):' → logprob: -4.83821964263916
    7. '(' → logprob: -6.21321964263916
    8. 'def' → logprob: -6.21321964263916
    9. 'return' → logprob: -6.21321964263916
    10. ' return' → logprob: -6.33821964263916

Token 308: ' """
' (ID: 7037)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5788534283638
    2. 'return' → logprob: -1.4538533687591553
    3. '   ' → logprob: -2.5788533687591553
    4. '[
' → logprob: -3.0788533687591553
    5. 'for' → logprob: -3.9538533687591553
    6. 'def' → logprob: -4.078853607177734
    7. '[r' → logprob: -4.453853607177734
    8. '[]' → logprob: -4.703853607177734
    9. ' return' → logprob: -4.828853607177734
    10. '[i' → logprob: -5.703853607177734

Token 309: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2773114442825317
    2. ' return' → logprob: -1.4023114442825317
    3. 'def' → logprob: -1.5273114442825317
    4. 'for' → logprob: -2.527311325073242
    5. '   ' → logprob: -3.027311325073242
    6. 'range' → logprob: -3.152311325073242
    7. ' range' → logprob: -3.277311325073242
    8. ' for' → logprob: -3.652311325073242
    9. ' def' → logprob: -5.527311325073242
    10. 'n' → logprob: -5.777311325073242

Token 310: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03478962555527687
    2. 'for' → logprob: -3.534789562225342
    3. '"""
' → logprob: -6.034789562225342
    4. 'def' → logprob: -6.909789562225342
    5. ' return' → logprob: -7.284789562225342
    6. '"""' → logprob: -7.659789562225342
    7. '   ' → logprob: -8.4097900390625
    8. ' for' → logprob: -8.9097900390625
    9. '
' → logprob: -9.5347900390625
    10. 'result' → logprob: -11.6597900390625

Token 311: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09795723855495453
    2. 'n' → logprob: -2.722957134246826
    3. ' n' → logprob: -4.097957134246826
    4. 's' → logprob: -5.972957134246826
    5. '[n' → logprob: -5.972957134246826
    6. '
' → logprob: -6.597957134246826
    7. 'def' → logprob: -6.597957134246826
    8. 'ange' → logprob: -7.347957134246826
    9. '   ' → logprob: -7.972957134246826
    10. 'a' → logprob: -7.972957134246826

Token 312: ' ent' (ID: 1121)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.4267375469207764
    2. '()' → logprob: -1.9267375469207764
    3. '(n' → logprob: -2.0517375469207764
    4. 's' → logprob: -2.1767375469207764
    5. '():
' → logprob: -2.4267375469207764
    6. '():' → logprob: -2.8017375469207764
    7. ' lines' → logprob: -3.1767375469207764
    8. '
' → logprob: -3.4267375469207764
    9. '(' → logprob: -3.6767375469207764
    10. '_lines' → logprob: -3.9267375469207764

Token 313: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.08021047711372375
    2. 'ières' → logprob: -2.5802104473114014
    3. 'ieres' → logprob: -6.9552106857299805
    4. 'i' → logprob: -8.20521068572998
    5. 'ier' → logprob: -9.45521068572998
    6. 'ière' → logprob: -11.83021068572998
    7. 'ires' → logprob: -12.70521068572998
    8. 'eg' → logprob: -14.20521068572998
    9. 'ié' → logprob: -14.33021068572998
    10. 'etes' → logprob: -14.58021068572998

Token 314: ' (' (ID: 350)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.33558765053749084
    2. '():' → logprob: -1.7105876207351685
    3. '(n' → logprob: -2.460587739944458
    4. '()' → logprob: -4.835587501525879
    5. '
' → logprob: -5.835587501525879
    6. 's' → logprob: -6.210587501525879
    7. 'et' → logprob: -7.335587501525879
    8. '(i' → logprob: -7.585587501525879
    9. '(' → logprob: -7.710587501525879
    10. ':' → logprob: -7.710587501525879

Token 315: 'un' (ID: 373)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2771332859992981
    2. ')' → logprob: -1.9021332263946533
    3. '):
' → logprob: -2.4021332263946533
    4. 'n' → logprob: -7.027133464813232
    5. '
' → logprob: -7.652133464813232
    6. '   ' → logprob: -8.152132987976074
    7. 'lines' → logprob: -9.027132987976074
    8. ')n' → logprob: -9.277132987976074
    9. ' ):' → logprob: -9.402132987976074
    10. '):
' → logprob: -9.652132987976074

Token 316: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25135403871536255
    2. '
' → logprob: -2.5013539791107178
    3. '[]' → logprob: -3.2513539791107178
    4. ' par' → logprob: -4.376354217529297
    5. ' range' → logprob: -4.501354217529297
    6. '[' → logprob: -4.626354217529297
    7. ' def' → logprob: -4.751354217529297
    8. 'es' → logprob: -4.876354217529297
    9. 'range' → logprob: -4.876354217529297
    10. 'i' → logprob: -5.501354217529297

Token 317: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03258921205997467
    2. ' par' → logprob: -3.9075891971588135
    3. 'par' → logprob: -5.032589435577393
    4. ')' → logprob: -6.282589435577393
    5. 'es' → logprob: -6.907589435577393
    6. '()' → logprob: -7.782589435577393
    7. '_par' → logprob: -8.532588958740234
    8. '   ' → logprob: -8.657588958740234
    9. 'for' → logprob: -8.782588958740234
    10. '[]' → logprob: -9.032588958740234

Token 318: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.500464141368866
    2. 'ligne' → logprob: -1.2504642009735107
    3. ' line' → logprob: -3.3754642009735107
    4. 'line' → logprob: -3.6254642009735107
    5. ')' → logprob: -4.250463962554932
    6. '_' → logprob: -4.625463962554932
    7. '_l' → logprob: -5.500463962554932
    8. '_line' → logprob: -6.000463962554932
    9. 'l' → logprob: -6.125463962554932
    10. 'import' → logprob: -6.250463962554932

Token 319: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05959954485297203
    2. '):' → logprob: -3.6845996379852295
    3. '   ' → logprob: -4.30959939956665
    4. ').' → logprob: -4.43459939956665
    5. '):
' → logprob: -5.43459939956665
    6. 'def' → logprob: -5.93459939956665
    7. ')
' → logprob: -9.059599876403809
    8. '),' → logprob: -9.309599876403809
    9. ',' → logprob: -10.059599876403809
    10. ' )' → logprob: -10.434599876403809

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004423113074153662
    2. '	for' → logprob: -6.004423141479492
    3. ' for' → logprob: -7.254423141479492
    4. '	return' → logprob: -7.629423141479492
    5. '
' → logprob: -8.129423141479492
    6. ')' → logprob: -9.004423141479492
    7. 'for' → logprob: -9.754423141479492
    8. ' ' → logprob: -9.879423141479492
    9. '    ' → logprob: -10.629423141479492
    10. '```' → logprob: -11.004423141479492

Token 321: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006204616511240602
    2. ' for' → logprob: -7.750620365142822
    3. ' return' → logprob: -8.75062084197998
    4. 'for' → logprob: -11.12562084197998
    5. 'return' → logprob: -12.00062084197998
    6. ' ' → logprob: -13.00062084197998
    7. 'def' → logprob: -13.37562084197998
    8. '    ' → logprob: -13.50062084197998
    9. '	return' → logprob: -13.87562084197998
    10. '  ' → logprob: -14.00062084197998

Token 322: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38810181617736816
    2. '(n' → logprob: -1.5131018161773682
    3. ':' → logprob: -2.513101816177368
    4. ':
' → logprob: -5.263101577758789
    5. 'def' → logprob: -5.513101577758789
    6. ' n' → logprob: -6.013101577758789
    7. ' :' → logprob: -6.138101577758789
    8. ',' → logprob: -6.263101577758789
    9. 'n' → logprob: -6.513101577758789
    10. '):
' → logprob: -6.888101577758789

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8329001069068909
    2. 'n' → logprob: -1.207900047302246
    3. ' n' → logprob: -1.332900047302246
    4. '	n' → logprob: -6.957900047302246
    5. '(n' → logprob: -7.332900047302246
    6. '    ' → logprob: -7.457900047302246
    7. '       ' → logprob: -8.332900047302246
    8. '    
' → logprob: -9.582900047302246
    9. ' ' → logprob: -9.957900047302246
    10. '
' → logprob: -9.957900047302246

Token 324: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01461412850767374
    2. ' n' → logprob: -4.264614105224609
    3. '   ' → logprob: -8.13961410522461
    4. 'self' → logprob: -9.13961410522461
    5. '	n' → logprob: -10.63961410522461
    6. ')' → logprob: -11.76461410522461
    7. ')n' → logprob: -12.26461410522461
    8. '
' → logprob: -12.38961410522461
    9. ' ' → logprob: -13.26461410522461
    10. ' self' → logprob: -13.51461410522461

Token 325: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4448523223400116
    2. ':' → logprob: -1.069852352142334
    3. ':int' → logprob: -4.944852352142334
    4. ')' → logprob: -5.069852352142334
    5. '):
' → logprob: -6.319852352142334
    6. 'int' → logprob: -8.319851875305176
    7. '(int' → logprob: -8.444851875305176
    8. ' :' → logprob: -8.819851875305176
    9. '   ' → logprob: -10.319851875305176
    10. ' ):' → logprob: -10.444851875305176

Token 326: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9862216504407115e-05
    2. ' int' → logprob: -12.000020027160645
    3. '):' → logprob: -12.125020027160645
    4. '):
' → logprob: -12.250020027160645
    5. ')' → logprob: -13.500020027160645
    6. '[int' → logprob: -14.375020027160645
    7. 'n' → logprob: -14.500020027160645
    8. ':int' → logprob: -15.000020027160645
    9. '=int' → logprob: -15.250020027160645
    10. '
' → logprob: -15.500020027160645

Token 327: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1537199169397354
    2. '):
' → logprob: -2.528719902038574
    3. ')' → logprob: -2.778719902038574
    4. '   ' → logprob: -8.028719902038574
    5. '):
' → logprob: -9.028719902038574
    6. ':' → logprob: -9.278719902038574
    7. '(n' → logprob: -10.903719902038574
    8. '):

' → logprob: -11.403719902038574
    9. 'n' → logprob: -12.278719902038574
    10. ')n' → logprob: -12.653719902038574

Token 328: ' Nombre' (ID: 70208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5775654315948486
    2. ' int' → logprob: -1.7025654315948486
    3. ' number' → logprob: -2.0775654315948486
    4. 'int' → logprob: -3.5775654315948486
    5. 'Nombre' → logprob: -3.8275654315948486
    6. '    ' → logprob: -3.8275654315948486
    7. ' Number' → logprob: -4.4525651931762695
    8. ')' → logprob: -4.7025651931762695
    9. ' nombre' → logprob: -4.9525651931762695
    10. 'Number' → logprob: -5.0775651931762695

Token 329: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8558529019355774
    2. ')' → logprob: -1.4808528423309326
    3. 'de' → logprob: -2.4808528423309326
    4. '   ' → logprob: -2.8558528423309326
    5. '<|end|>' → logprob: -3.2308528423309326
    6. ' d' → logprob: -3.3558528423309326
    7. '=' → logprob: -3.8558528423309326
    8. 'def' → logprob: -3.9808528423309326
    9. '  ' → logprob: -4.105853080749512
    10. 'd' → logprob: -4.355853080749512

Token 330: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3274064064025879
    2. 'lines' → logprob: -1.702406406402588
    3. 'n' → logprob: -3.077406406402588
    4. ')' → logprob: -3.702406406402588
    5. 'ent' → logprob: -4.577406406402588
    6. ' lignes' → logprob: -4.702406406402588
    7. ' lines' → logprob: -6.452406406402588
    8. 'élé' → logprob: -6.577406406402588
    9. 'ligne' → logprob: -6.827406406402588
    10. ')n' → logprob: -7.327406406402588

Token 331: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8780514597892761
    2. '   ' → logprob: -0.8780514597892761
    3. '):
' → logprob: -2.628051519393921
    4. '):' → logprob: -3.378051519393921
    5. 'def' → logprob: -3.628051519393921
    6. '
' → logprob: -4.128051280975342
    7. ' à' → logprob: -4.253051280975342
    8. 'à' → logprob: -7.128051280975342
    9. '```' → logprob: -7.128051280975342
    10. '    
' → logprob: -7.378051280975342

Token 332: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.04197929799556732
    2. 'l' → logprob: -3.2919793128967285
    3. 'read' → logprob: -6.2919793128967285
    4. 'r' → logprob: -7.5419793128967285
    5. ' read' → logprob: -7.7919793128967285
    6. 'Lire' → logprob: -8.04197883605957
    7. 'lect' → logprob: -8.41697883605957
    8. 'lit' → logprob: -8.41697883605957
    9. '   ' → logprob: -8.91697883605957
    10. 'import' → logprob: -10.29197883605957

Token 333: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6928068995475769
    2. '):
' → logprob: -1.3178069591522217
    3. '   ' → logprob: -1.9428069591522217
    4. ')
' → logprob: -2.9428069591522217
    5. '):' → logprob: -3.5678069591522217
    6. '
' → logprob: -5.317806720733643
    7. '"""
' → logprob: -6.692806720733643
    8. '```' → logprob: -7.442806720733643
    9. '    
' → logprob: -8.0678071975708
    10. '):
' → logprob: -8.3178071975708

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04481463506817818
    2. '
' → logprob: -3.5448145866394043
    3. ')' → logprob: -5.294814586639404
    4. '"""
' → logprob: -5.294814586639404
    5. '    
' → logprob: -6.544814586639404
    6. '```' → logprob: -6.669814586639404
    7. ')
' → logprob: -6.794814586639404
    8. '"""' → logprob: -7.294814586639404
    9. '  
' → logprob: -8.919815063476562
    10. '``' → logprob: -9.919815063476562

Token 335: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016486376989632845
    2. '
' → logprob: -7.626648426055908
    3. ' return' → logprob: -8.126648902893066
    4. '"""
' → logprob: -8.251648902893066
    5. 'def' → logprob: -8.876648902893066
    6. '```' → logprob: -9.126648902893066
    7. '    
' → logprob: -9.501648902893066
    8. '"""' → logprob: -10.001648902893066
    9. ')' → logprob: -10.251648902893066
    10. ' for' → logprob: -10.251648902893066

Token 336: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1605677306652069
    2. ' [' → logprob: -2.5355677604675293
    3. '[' → logprob: -3.7855677604675293
    4. ' list' → logprob: -3.7855677604675293
    5. '[list' → logprob: -4.160567760467529
    6. '[
' → logprob: -5.910567760467529
    7. ' [
' → logprob: -6.285567760467529
    8. '
' → logprob: -7.160567760467529
    9. '    ' → logprob: -7.410567760467529
    10. 'list' → logprob: -7.535567760467529

Token 337: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4103054106235504
    2. ' [' → logprob: -1.660305380821228
    3. '[list' → logprob: -2.1603055000305176
    4. '[' → logprob: -3.7853055000305176
    5. '[
' → logprob: -6.160305500030518
    6. '[n' → logprob: -6.660305500030518
    7. '[line' → logprob: -6.785305500030518
    8. '[List' → logprob: -7.285305500030518
    9. ' list' → logprob: -7.410305500030518
    10. '[int' → logprob: -8.03530502319336

Token 338: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.12951956689357758
    2. 'List' → logprob: -2.129519462585449
    3. ' list' → logprob: -7.004519462585449
    4. 'generator' → logprob: -7.129519462585449
    5. 'Generator' → logprob: -7.379519462585449
    6. '   ' → logprob: -9.25451946258545
    7. '[list' → logprob: -9.87951946258545
    8. '[List' → logprob: -10.00451946258545
    9. ' List' → logprob: -10.62951946258545
    10. ' generator' → logprob: -11.12951946258545

Token 339: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0006136707379482687
    2. ' of' → logprob: -8.25061321258545
    3. '<int' → logprob: -9.00061321258545
    4. '   ' → logprob: -10.12561321258545
    5. '[' → logprob: -10.25061321258545
    6. '[List' → logprob: -10.25061321258545
    7. '
' → logprob: -10.37561321258545
    8. 'int' → logprob: -10.50061321258545
    9. ':' → logprob: -11.00061321258545
    10. 'of' → logprob: -11.25061321258545

Token 340: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4599939286708832
    2. ']' → logprob: -1.2099939584732056
    3. '[int' → logprob: -3.084993839263916
    4. ']:
' → logprob: -3.709993839263916
    5. ']:
' → logprob: -9.459994316101074
    6. ']
' → logprob: -9.834994316101074
    7. ']int' → logprob: -10.209994316101074
    8. 'int' → logprob: -10.709994316101074
    9. '[' → logprob: -10.709994316101074
    10. '[List' → logprob: -11.334994316101074

Token 341: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5645306706428528
    2. ' [' → logprob: -1.314530611038208
    3. '[int' → logprob: -2.564530611038208
    4. '[' → logprob: -2.814530611038208
    5. '[list' → logprob: -4.064530849456787
    6. '[List' → logprob: -5.814530849456787
    7. ' return' → logprob: -6.314530849456787
    8. '[n' → logprob: -6.564530849456787
    9. '[Int' → logprob: -7.689530849456787
    10. '[line' → logprob: -7.689530849456787

Token 342: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.009035704657435417
    2. '[
' → logprob: -5.884035587310791
    3. ' of' → logprob: -6.384035587310791
    4. '
' → logprob: -6.759035587310791
    5. '[Int' → logprob: -7.134035587310791
    6. '(int' → logprob: -7.634035587310791
    7. '[' → logprob: -7.759035587310791
    8. '[]' → logprob: -7.759035587310791
    9. '(
' → logprob: -8.13403606414795
    10. '<int' → logprob: -8.88403606414795

Token 343: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5742639899253845
    2. '<int' → logprob: -2.3242640495300293
    3. ''ent' → logprob: -2.4492640495300293
    4. 'ent' → logprob: -2.5742640495300293
    5. 'e' → logprob: -2.6992640495300293
    6. 's' → logprob: -3.0742640495300293
    7. 'ints' → logprob: -4.324264049530029
    8. 'es' → logprob: -4.449264049530029
    9. ' des' → logprob: -4.949264049530029
    10. 'ents' → logprob: -5.199264049530029

Token 344: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.8590300139039755e-05
    2. 'ières' → logprob: -10.125048637390137
    3. 'i' → logprob: -12.125048637390137
    4. 'ers' → logprob: -13.500048637390137
    5. ' ints' → logprob: -15.000048637390137
    6. 'gers' → logprob: -15.750048637390137
    7. 'ires' → logprob: -15.750048637390137
    8. 'eurs' → logprob: -15.875048637390137
    9. '```' → logprob: -16.00004768371582
    10. 'ints' → logprob: -16.00004768371582

Token 345: ' lus' (ID: 54762)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8074591755867004
    2. '   ' → logprob: -0.8074591755867004
    3. '[int' → logprob: -3.4324591159820557
    4. '[' → logprob: -4.057459354400635
    5. '```' → logprob: -4.432459354400635
    6. '[n' → logprob: -4.932459354400635
    7. 'def' → logprob: -5.182459354400635
    8. '[
' → logprob: -5.182459354400635
    9. ':
' → logprob: -5.307459354400635
    10. '(n' → logprob: -5.432459354400635

Token 346: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5494424700737
    2. '   ' → logprob: -1.1744425296783447
    3. ':
' → logprob: -3.2994425296783447
    4. '(n' → logprob: -3.6744425296783447
    5. ' =' → logprob: -4.174442291259766
    6. 'def' → logprob: -5.299442291259766
    7. '    
' → logprob: -5.424442291259766
    8. '()
' → logprob: -5.424442291259766
    9. ':' → logprob: -6.174442291259766
    10. ']' → logprob: -6.299442291259766

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004532538820058107
    2. '```' → logprob: -6.254532337188721
    3. '[]
' → logprob: -7.254532337188721
    4. '    
' → logprob: -7.379532337188721
    5. '[]' → logprob: -8.004532814025879
    6. '
' → logprob: -8.129532814025879
    7. '[
' → logprob: -8.754532814025879
    8. '[' → logprob: -9.254532814025879
    9. '"""
' → logprob: -9.504532814025879
    10. '  
' → logprob: -10.004532814025879

Token 348: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04390396922826767
    2. '
' → logprob: -3.4189040660858154
    3. '"""
' (adapté à ' """
') → logprob: -5.293903827667236
    4. '```' → logprob: -6.293903827667236
    5. '    
' → logprob: -6.543903827667236
    6. ' 
' → logprob: -7.293903827667236
    7. '  
' → logprob: -8.418904304504395
    8. '``' → logprob: -8.918904304504395
    9. '[]
' → logprob: -8.918904304504395
    10. '"""' → logprob: -9.168904304504395

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001306787133216858
    2. 'return' → logprob: -7.001307010650635
    3. '	return' → logprob: -8.001306533813477
    4. ' return' → logprob: -9.751306533813477
    5. 'def' → logprob: -14.501306533813477
    6. 'result' → logprob: -15.251306533813477
    7. 'ret' → logprob: -15.501306533813477
    8. '	ret' → logprob: -15.501306533813477
    9. '   ' → logprob: -15.626306533813477
    10. '```' → logprob: -15.876306533813477

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0051991320215165615
    2. '   ' → logprob: -5.505198955535889
    3. ' return' → logprob: -7.130198955535889
    4. 'res' → logprob: -8.630199432373047
    5. 'result' → logprob: -9.005199432373047
    6. 'ret' → logprob: -11.755199432373047
    7. '	return' → logprob: -12.505199432373047
    8. 'r' → logprob: -12.880199432373047
    9. 'data' → logprob: -14.005199432373047
    10. '
' → logprob: -14.130199432373047

Token 351: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.1407807469367981
    2. '[' → logprob: -2.1407806873321533
    3. '[int' → logprob: -4.390780925750732
    4. '[List' → logprob: -7.015780925750732
    5. '[I' → logprob: -8.265780448913574
    6. '[L' → logprob: -9.765780448913574
    7. '[Int' → logprob: -10.390780448913574
    8. '[n' → logprob: -10.515780448913574
    9. '[line' → logprob: -11.015780448913574
    10. ' [' → logprob: -11.015780448913574

Token 352: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38687410950660706
    2. 'I' → logprob: -1.1368740797042847
    3. ' int' → logprob: -13.761874198913574
    4. ' I' → logprob: -14.011874198913574
    5. 'Int' → logprob: -15.386874198913574
    6. '
' → logprob: -15.886874198913574
    7. '[int' → logprob: -15.886874198913574
    8. '   ' → logprob: -16.011873245239258
    9. 'i' → logprob: -16.136873245239258
    10. '(int' → logprob: -16.386873245239258

Token 353: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. '()
' → logprob: -14.000001907348633
    3. '()]' → logprob: -14.625001907348633
    4. ' ()' → logprob: -15.750001907348633
    5. '(' → logprob: -17.500001907348633
    6. '（）' → logprob: -19.000001907348633
    7. '(
' → logprob: -20.000001907348633
    8. '
' → logprob: -20.625001907348633
    9. '()

' → logprob: -20.625001907348633
    10. 'for' → logprob: -20.875001907348633

Token 354: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.297462171758525e-05
    2. 'for' → logprob: -10.375033378601074
    3. '(' → logprob: -14.125033378601074
    4. ' for' → logprob: -14.500033378601074
    5. ' ()' → logprob: -14.750033378601074
    6. '()
' → logprob: -16.375032424926758
    7. '()]' → logprob: -17.375032424926758
    8. '	for' → logprob: -18.250032424926758
    9. '```' → logprob: -18.250032424926758
    10. '
' → logprob: -18.750032424926758

Token 355: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08894655108451843
    2. ' _' → logprob: -2.463946580886841
    3. ' ' → logprob: -12.838946342468262
    4. ' ' → logprob: -12.963946342468262
    5. '_i' → logprob: -14.588946342468262
    6. '	' → logprob: -15.088946342468262
    7. 'n' → logprob: -15.588946342468262
    8. '_n' → logprob: -16.088947296142578
    9. '_=' → logprob: -16.088947296142578
    10. '<|end|>' → logprob: -16.463947296142578

Token 356: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.24831342697143555
    2. ' in' → logprob: -1.9983134269714355
    3. 'n' → logprob: -2.9983134269714355
    4. '_' → logprob: -3.4983134269714355
    5. ' ' → logprob: -5.9983134269714355
    6. ' n' → logprob: -6.9983134269714355
    7. '(n' → logprob: -7.9983134269714355
    8. '(' → logprob: -8.123313903808594
    9. ' _' → logprob: -9.873313903808594
    10. 'i' → logprob: -10.123313903808594

Token 357: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043782114982605
    2. ' range' → logprob: -3.288043737411499
    3. '_' → logprob: -13.913043975830078
    4. 'rang' → logprob: -14.413043975830078
    5. '	range' → logprob: -14.788043975830078
    6. '_range' → logprob: -15.663043975830078
    7. '(range' → logprob: -15.788043975830078
    8. ' ' → logprob: -16.413043975830078
    9. 'ra' → logprob: -16.788043975830078
    10. 'ran' → logprob: -17.538043975830078

Token 358: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006767230574041605
    2. '(' → logprob: -5.006767272949219
    3. 'n' → logprob: -10.131767272949219
    4. '(
' → logprob: -11.881767272949219
    5. ' n' → logprob: -12.256767272949219
    6. ' (' → logprob: -15.256767272949219
    7. ')n' → logprob: -15.881767272949219
    8. '	n' → logprob: -17.75676727294922
    9. '(

' → logprob: -18.25676727294922
    10. ']' → logprob: -19.13176727294922

Token 359: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.537868779967539e-06
    2. ')' → logprob: -11.875008583068848
    3. ' )' → logprob: -14.500008583068848
    4. ')]
' → logprob: -14.875008583068848
    5. ']' → logprob: -15.000008583068848
    6. ')],' → logprob: -16.75000762939453
    7. '   ' → logprob: -17.25000762939453
    8. '')]' → logprob: -17.50000762939453
    9. ')])' → logprob: -17.62500762939453
    10. '])' → logprob: -17.87500762939453

Token 360: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36516860127449036
    2. '
' → logprob: -1.240168571472168
    3. '<|end|>' → logprob: -4.490168571472168
    4. '

' → logprob: -5.490168571472168
    5. '<|end|>' → logprob: -7.240168571472168
    6. '#' → logprob: -7.990168571472168
    7. '```' → logprob: -10.615168571472168
    8. '
' → logprob: -10.865168571472168
    9. '


' → logprob: -10.990168571472168
    10. 'newline' → logprob: -11.240168571472168

Token 361: ' L' (ID: 451)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.3084847033023834
    2. 'LI' → logprob: -1.933484673500061
    3. 'L' → logprob: -3.0584847927093506
    4. 'LR' → logprob: -3.1834847927093506
    5. 'LS' → logprob: -3.6834847927093506
    6. 'IRS' → logprob: -5.4334845542907715
    7. 'IS' → logprob: -6.1834845542907715
    8. 'ISR' → logprob: -8.30848503112793
    9. 'SR' → logprob: -9.30848503112793
    10. 'I' → logprob: -9.30848503112793

Token 362: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00023250321100931615
    2. 'R' → logprob: -9.000232696533203
    3. 'IR' → logprob: -9.375232696533203
    4. 'S' → logprob: -11.500232696533203
    5. 'IST' → logprob: -13.250232696533203
    6. 'ist' → logprob: -13.250232696533203
    7. 'def' → logprob: -13.750232696533203
    8. '```' → logprob: -13.750232696533203
    9. 'ambda' → logprob: -13.750232696533203
    10. '()' → logprob: -14.000232696533203

Token 363: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.500006675720215
    4. '(N' → logprob: -17.1250057220459
    5. '(i' → logprob: -17.1250057220459
    6. '(num' → logprob: -17.2500057220459
    7. 'def' → logprob: -17.3750057220459
    8. 'ange' → logprob: -17.6250057220459
    9. '(k' → logprob: -17.6250057220459
    10. '(nb' → logprob: -17.8750057220459

Token 364: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10419250279664993
    2. '):
' → logprob: -2.3541924953460693
    3. '(n' → logprob: -5.604192733764648
    4. ')' → logprob: -8.229192733764648
    5. '):
' → logprob: -10.729192733764648
    6. 'n' → logprob: -12.979192733764648
    7. ' ):' → logprob: -13.229192733764648
    8. '):

' → logprob: -13.604192733764648
    9. ',n' → logprob: -15.229192733764648
    10. ':' → logprob: -15.354192733764648

Token 365: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005740015767514706
    2. '(' → logprob: -8.000574111938477
    3. '(
' → logprob: -8.750574111938477
    4. ':' → logprob: -9.875574111938477
    5. ':
' → logprob: -11.000574111938477
    6. '   ' → logprob: -11.875574111938477
    7. ' (' → logprob: -13.500574111938477
    8. 'n' → logprob: -13.875574111938477
    9. 'def' → logprob: -14.125574111938477
    10. '(N' → logprob: -15.000574111938477

Token 366: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06370813399553299
    2. 'def' → logprob: -3.4387080669403076
    3. ':
' → logprob: -4.563708305358887
    4. 'n' → logprob: -4.813708305358887
    5. '   ' → logprob: -5.063708305358887
    6. '(
' → logprob: -6.313708305358887
    7. ':' → logprob: -7.188708305358887
    8. ' n' → logprob: -7.438708305358887
    9. '(' → logprob: -8.063708305358887
    10. ' def' → logprob: -8.688708305358887

Token 367: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.3955630660057068
    2. '   ' → logprob: -1.1455631256103516
    3. 'def' → logprob: -4.770563125610352
    4. '"
' → logprob: -10.020563125610352
    5. '"""' → logprob: -10.020563125610352
    6. '
' → logprob: -10.520563125610352
    7. ' def' → logprob: -11.145563125610352
    8. 'n' → logprob: -11.395563125610352
    9. '"""
' → logprob: -11.395563125610352
    10. ' """
' → logprob: -11.520563125610352

Token 368: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6961678862571716
    2. '"""
' → logprob: -0.6961678862571716
    3. '   ' → logprob: -6.071167945861816
    4. ' def' → logprob: -7.696167945861816
    5. '"""' → logprob: -9.196167945861816
    6. '
' → logprob: -10.071167945861816
    7. '"
' → logprob: -10.196167945861816
    8. '("""
' → logprob: -11.196167945861816
    9. ''''
' → logprob: -11.571167945861816
    10. '    
' → logprob: -11.571167945861816

Token 369: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0851069763302803
    2. '(n' → logprob: -2.5851070880889893
    3. ' n' → logprob: -5.08510684967041
    4. '[n' → logprob: -12.33510684967041
    5. '	n' → logprob: -12.96010684967041
    6. 'def' → logprob: -13.46010684967041
    7. '
' → logprob: -14.33510684967041
    8. '   ' → logprob: -15.71010684967041
    9. ' (' → logprob: -15.83510684967041
    10. '_n' → logprob: -16.085107803344727

Token 370: ' listes' (ID: 179198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02277575246989727
    2. '(' → logprob: -4.647775650024414
    3. ' lines' → logprob: -4.897775650024414
    4. 'lines' → logprob: -6.272775650024414
    5. ' lignes' → logprob: -7.022775650024414
    6. '_lines' → logprob: -7.272775650024414
    7. ' (' → logprob: -7.397775650024414
    8. 'ines' → logprob: -7.897775650024414
    9. '(lines' → logprob: -8.397775650024414
    10. 'Lines' → logprob: -8.897775650024414

Token 371: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3045313060283661
    2. '[list' → logprob: -1.8045313358306885
    3. '[List' → logprob: -2.6795313358306885
    4. '[' → logprob: -3.8045313358306885
    5. '[
' → logprob: -6.054531097412109
    6. ' de' → logprob: -7.179531097412109
    7. 'de' → logprob: -7.179531097412109
    8. '[str' → logprob: -7.679531097412109
    9. ' of' → logprob: -7.679531097412109
    10. 'of' → logprob: -7.804531097412109

Token 372: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.2249305546283722
    2. 'ent' → logprob: -2.09993052482605
    3. '[int' → logprob: -3.22493052482605
    4. '(int' → logprob: -3.97493052482605
    5. 'int' → logprob: -4.599930763244629
    6. ''int' → logprob: -5.599930763244629
    7. '(ent' → logprob: -5.974930763244629
    8. '<int' → logprob: -6.349930763244629
    9. '’ent' → logprob: -7.099930763244629
    10. 'e' → logprob: -7.224930763244629

Token 373: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.26333126425743103
    2. 'ières' → logprob: -1.5133312940597534
    3. 'i' → logprob: -5.388331413269043
    4. 't' → logprob: -5.513331413269043
    5. 'ier' → logprob: -7.013331413269043
    6. 'ent' → logprob: -7.888331413269043
    7. 'e' → logprob: -8.513331413269043
    8. 'ieres' → logprob: -8.763331413269043
    9. 'ière' → logprob: -9.013331413269043
    10. 'I' → logprob: -9.138331413269043

Token 374: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000895620440132916
    2. 'def' → logprob: -7.2508955001831055
    3. ' (' → logprob: -9.250895500183105
    4. '   ' → logprob: -10.625895500183105
    5. '(' → logprob: -10.875895500183105
    6. 's' → logprob: -11.625895500183105
    7. '[n' → logprob: -11.875895500183105
    8. 'de' → logprob: -12.375895500183105
    9. '(N' → logprob: -12.750895500183105
    10. '(
' → logprob: -12.750895500183105

Token 375: 'une' (ID: 2561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7982308864593506
    2. '):
' → logprob: -1.6732308864593506
    3. ')' → logprob: -1.7982308864593506
    4. '   ' → logprob: -2.7982308864593506
    5. ' n' → logprob: -2.9232308864593506
    6. '):' → logprob: -3.0482308864593506
    7. 'def' → logprob: -4.54823112487793
    8. '(n' → logprob: -4.92323112487793
    9. ' un' → logprob: -5.42323112487793
    10. '
' → logprob: -5.79823112487793

Token 376: ' liste' (ID: 31719)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.33339017629623413
    2. ' ligne' → logprob: -2.333390235900879
    3. 'par' → logprob: -2.708390235900879
    4. 'ligne' → logprob: -3.833390235900879
    5. '   ' → logprob: -4.083390235900879
    6. 'def' → logprob: -4.083390235900879
    7. ' liste' → logprob: -4.458390235900879
    8. ' for' → logprob: -4.958390235900879
    9. '()' → logprob: -5.083390235900879
    10. ' line' → logprob: -5.208390235900879

Token 377: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.655256986618042
    2. 'par' → logprob: -1.530256986618042
    3. ')' → logprob: -1.905256986618042
    4. ' for' → logprob: -4.030257225036621
    5. ' par' → logprob: -4.155257225036621
    6. 'def' → logprob: -4.280257225036621
    7. '
' → logprob: -4.655257225036621
    8. '[int' → logprob: -4.655257225036621
    9. '()' → logprob: -4.780257225036621
    10. '   ' → logprob: -4.780257225036621

Token 378: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.047661472111940384
    2. ' ligne' → logprob: -3.172661542892456
    3. 'n' → logprob: -5.922661304473877
    4. 'line' → logprob: -7.047661304473877
    5. 'l' → logprob: -7.172661304473877
    6. 'range' → logprob: -8.797661781311035
    7. ' ' → logprob: -9.672661781311035
    8. 'lin' → logprob: -10.297661781311035
    9. ' line' → logprob: -10.547661781311035
    10. ' n' → logprob: -10.797661781311035

Token 379: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.32853955030441284
    2. ')' → logprob: -1.9535396099090576
    3. '   ' → logprob: -2.8285396099090576
    4. '):
' → logprob: -3.4535396099090576
    5. '):' → logprob: -4.0785393714904785
    6. '(n' → logprob: -4.3285393714904785
    7. ').
' → logprob: -4.8285393714904785
    8. 'def' → logprob: -5.5785393714904785
    9. '[n' → logprob: -6.3285393714904785
    10. ',' → logprob: -6.9535393714904785

Token 380: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027033647522330284
    2. '(n' → logprob: -3.777033567428589
    3. '   ' → logprob: -5.777033805847168
    4. '```' → logprob: -7.777033805847168
    5. ' def' → logprob: -8.527033805847168
    6. '
' → logprob: -10.652033805847168
    7. '(' → logprob: -10.902033805847168
    8. '(
' → logprob: -12.027033805847168
    9. '``' → logprob: -12.402033805847168
    10. '(def' → logprob: -12.902033805847168

Token 381: ' Args' (ID: 39185)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47455519437789917
    2. 'def' → logprob: -0.9745551943778992
    3. ' def' → logprob: -8.474555015563965
    4. '   ' → logprob: -8.599555015563965
    5. '```' → logprob: -10.224555015563965
    6. '(' → logprob: -10.974555015563965
    7. '
' → logprob: -11.724555015563965
    8. 'n' → logprob: -11.849555015563965
    9. '(def' → logprob: -11.849555015563965
    10. '(
' → logprob: -13.099555015563965

Token 382: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1480070799589157
    2. 'def' → logprob: -2.6480071544647217
    3. '   ' → logprob: -2.8980071544647217
    4. ':' → logprob: -5.398006916046143
    5. ':
' → logprob: -6.273006916046143
    6. '):
' → logprob: -6.398006916046143
    7. '(' → logprob: -6.523006916046143
    8. '(
' → logprob: -7.023006916046143
    9. '       ' → logprob: -7.398006916046143
    10. ',' → logprob: -9.6480073928833

Token 383: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038555359933525324
    2. '       ' → logprob: -6.7538557052612305
    3. '(n' → logprob: -6.8788557052612305
    4. 'n' → logprob: -7.1288557052612305
    5. '
' → logprob: -7.5038557052612305
    6. 'def' → logprob: -8.50385570526123
    7. '    
' → logprob: -10.50385570526123
    8. '(
' → logprob: -10.62885570526123
    9. ' n' → logprob: -10.75385570526123
    10. '    ' → logprob: -11.87885570526123

Token 384: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.7848862373502925e-05
    2. ' n' → logprob: -10.875027656555176
    3. '   ' → logprob: -11.750027656555176
    4. '
' → logprob: -14.875027656555176
    5. 'def' → logprob: -15.250027656555176
    6. '	n' → logprob: -16.125028610229492
    7. '```' → logprob: -16.250028610229492
    8. '(n' → logprob: -16.500028610229492
    9. '       ' → logprob: -17.125028610229492
    10. 'ndef' → logprob: -17.625028610229492

Token 385: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.013902796432375908
    2. ':' → logprob: -5.13890266418457
    3. '(int' → logprob: -5.38890266418457
    4. ':int' → logprob: -6.01390266418457
    5. ')' → logprob: -7.51390266418457
    6. '):
' → logprob: -9.01390266418457
    7. '):' → logprob: -9.51390266418457
    8. 'int' → logprob: -9.63890266418457
    9. '=int' → logprob: -10.38890266418457
    10. ' int' → logprob: -10.51390266418457

Token 386: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5451681974809617e-05
    2. ' int' → logprob: -11.500015258789062
    3. '(int' → logprob: -13.125015258789062
    4. ':int' → logprob: -13.250015258789062
    5. '=int' → logprob: -14.625015258789062
    6. '):
' → logprob: -15.125015258789062
    7. ')' → logprob: -15.250015258789062
    8. '):' → logprob: -15.500015258789062
    9. '   ' → logprob: -15.875015258789062
    10. 'n' → logprob: -16.125015258789062

Token 387: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11324263364076614
    2. '):
' → logprob: -2.3632426261901855
    3. ':' → logprob: -4.3632426261901855
    4. '   ' → logprob: -9.738243103027344
    5. ')' → logprob: -9.863243103027344
    6. ':int' → logprob: -9.863243103027344
    7. '):
' → logprob: -10.488243103027344
    8. '):

' → logprob: -11.488243103027344
    9. 'int' → logprob: -12.863243103027344
    10. '
' → logprob: -12.863243103027344

Token 388: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00025800178991630673
    2. ' int' → logprob: -8.375258445739746
    3. '   ' → logprob: -10.625258445739746
    4. '(int' → logprob: -13.250258445739746
    5. 'Int' → logprob: -15.250258445739746
    6. 'n' → logprob: -15.250258445739746
    7. '[int' → logprob: -15.250258445739746
    8. ':int' → logprob: -15.625258445739746
    9. '
' → logprob: -15.875258445739746
    10. 'def' → logprob: -16.50025749206543

Token 389: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16541984677314758
    2. '   ' → logprob: -2.915419816970825
    3. 'de' → logprob: -3.665419816970825
    4. ' de' → logprob: -3.665419816970825
    5. 'def' → logprob: -3.790419816970825
    6. 'n' → logprob: -5.290420055389404
    7. '=n' → logprob: -5.540420055389404
    8. 'd' → logprob: -5.665420055389404
    9. ')' → logprob: -6.040420055389404
    10. '[n' → logprob: -6.415420055389404

Token 390: ' listes' (ID: 179198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11057140678167343
    2. 'int' → logprob: -2.8605713844299316
    3. 'lines' → logprob: -3.1105713844299316
    4. 'range' → logprob: -6.610571384429932
    5. 'n' → logprob: -7.360571384429932
    6. ' lignes' → logprob: -8.61057186126709
    7. 'ligne' → logprob: -8.61057186126709
    8. 'line' → logprob: -9.11057186126709
    9. ')' → logprob: -9.61057186126709
    10. 'ent' → logprob: -9.73557186126709

Token 391: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5226534605026245
    2. ')' → logprob: -1.8976534605026245
    3. 'à' → logprob: -2.522653579711914
    4. ' à' → logprob: -2.772653579711914
    5. '[int' → logprob: -3.522653579711914
    6. '(n' → logprob: -3.647653579711914
    7. 'd' → logprob: -4.022653579711914
    8. 'def' → logprob: -4.772653579711914
    9. '(int' → logprob: -5.147653579711914
    10. '):
' → logprob: -5.397653579711914

Token 392: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08892954885959625
    2. ' lire' → logprob: -2.5889296531677246
    3. 'lit' → logprob: -5.213929653167725
    4. 'read' → logprob: -5.713929653167725
    5. 'Lire' → logprob: -7.338929653167725
    6. '```' → logprob: -9.213929176330566
    7. 'n' → logprob: -9.713929176330566
    8. 'range' → logprob: -9.838929176330566
    9. 'r' → logprob: -10.088929176330566
    10. '   ' → logprob: -10.088929176330566

Token 393: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7183383703231812
    2. '):
' → logprob: -0.8433383703231812
    3. '(n' → logprob: -2.9683384895324707
    4. '):' → logprob: -3.7183384895324707
    5. 'def' → logprob: -5.968338489532471
    6. ')' → logprob: -5.968338489532471
    7. '
' → logprob: -7.218338489532471
    8. '):
' → logprob: -8.468338012695312
    9. 'n' → logprob: -8.593338012695312
    10. ',' → logprob: -9.968338012695312

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027472192887216806
    2. 'def' → logprob: -6.002747058868408
    3. '
' → logprob: -9.002747535705566
    4. ')' → logprob: -10.127747535705566
    5. '    
' → logprob: -10.127747535705566
    6. '"""
' → logprob: -11.127747535705566
    7. '    ' → logprob: -11.252747535705566
    8. '       ' → logprob: -11.627747535705566
    9. '```' → logprob: -11.627747535705566
    10. ')
' → logprob: -11.752747535705566

Token 395: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023399800062179565
    2. 'def' → logprob: -4.148399829864502
    3. '
' → logprob: -5.148399829864502
    4. ')' → logprob: -7.648399829864502
    5. ' def' → logprob: -8.023399353027344
    6. ')
' → logprob: -8.523399353027344
    7. 'Returns' (adapté à ' Returns') → logprob: -8.523399353027344
    8. '       ' → logprob: -9.273399353027344
    9. '    
' → logprob: -9.648399353027344
    10. '"""
' → logprob: -10.023399353027344

Token 396: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032975904643535614
    2. '[' → logprob: -5.032975673675537
    3. '[
' → logprob: -5.032975673675537
    4. '[List' → logprob: -5.407975673675537
    5. '[list' → logprob: -5.532975673675537
    6. ':' → logprob: -5.782975673675537
    7. '       ' → logprob: -6.157975673675537
    8. ':
' → logprob: -6.407975673675537
    9. ' list' → logprob: -6.532975673675537
    10. '[n' → logprob: -7.157975673675537

Token 397: '       ' (ID: 309)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.10495366156101227
    2. '   ' → logprob: -2.3549537658691406
    3. ' [' → logprob: -6.229953765869141
    4. '[List' → logprob: -6.354953765869141
    5. '[' → logprob: -7.104953765869141
    6. '[line' → logprob: -9.60495376586914
    7. '[
' → logprob: -9.85495376586914
    8. '       ' → logprob: -11.35495376586914
    9. '[L' → logprob: -11.35495376586914
    10. '[n' → logprob: -11.60495376586914

Token 398: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.000573167169932276
    2. ' list' → logprob: -7.75057315826416
    3. 'List' → logprob: -9.25057315826416
    4. '[list' → logprob: -10.00057315826416
    5. '   ' → logprob: -14.12557315826416
    6. '[List' → logprob: -15.62557315826416
    7. ' List' → logprob: -15.87557315826416
    8. '_list' → logprob: -18.750574111938477
    9. '
' → logprob: -19.125574111938477
    10. '[' → logprob: -19.625574111938477

Token 399: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0009286141721531749
    2. '[List' → logprob: -7.0009284019470215
    3. 'list' → logprob: -11.12592887878418
    4. '[' → logprob: -13.87592887878418
    5. '[[' → logprob: -14.50092887878418
    6. '(list' → logprob: -15.25092887878418
    7. 'of' → logprob: -15.62592887878418
    8. '[
' → logprob: -15.62592887878418
    9. '
' → logprob: -16.00092887878418
    10. '   ' → logprob: -16.00092887878418

Token 400: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -14.000000953674316
    3. ']int' → logprob: -15.500000953674316
    4. '<int' → logprob: -15.625000953674316
    5. '[List' → logprob: -16.875001907348633
    6. '[list' → logprob: -17.250001907348633
    7. '(int' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.250001907348633
    9. '[' → logprob: -19.500001907348633
    10. '=int' → logprob: -19.750001907348633

Token 401: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0037866546772420406
    2. ']]:
' → logprob: -5.628786563873291
    3. ']]]' → logprob: -9.25378704071045
    4. ']' → logprob: -9.87878704071045
    5. ']])' → logprob: -11.12878704071045
    6. '[int' → logprob: -11.50378704071045
    7. ']):' → logprob: -12.00378704071045
    8. ']]=' → logprob: -13.25378704071045
    9. ')]' → logprob: -13.62878704071045
    10. ']]
' → logprob: -14.25378704071045

Token 402: ':' (ID: 25)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.054497189819812775
    2. '   ' → logprob: -3.304497241973877
    3. '[n' → logprob: -5.179497241973877
    4. ':
' → logprob: -5.304497241973877
    5. 'def' → logprob: -6.179497241973877
    6. '
' → logprob: -6.679497241973877
    7. ':' → logprob: -7.179497241973877
    8. ']' → logprob: -8.179496765136719
    9. 'for' → logprob: -8.804496765136719
    10. 'n' → logprob: -8.804496765136719

Token 403: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026178598403930664
    2. '[' → logprob: -4.651178359985352
    3. '[List' → logprob: -5.276178359985352
    4. ' return' → logprob: -5.901178359985352
    5. 'return' → logprob: -5.901178359985352
    6. '[list' → logprob: -6.026178359985352
    7. ' [' → logprob: -6.526178359985352
    8. '[
' → logprob: -7.776178359985352
    9. '[line' → logprob: -7.901178359985352
    10. '[str' → logprob: -8.276178359985352

Token 404: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6857694983482361
    2. '[' → logprob: -1.9357695579528809
    3. '[list' → logprob: -2.560769557952881
    4. ' of' → logprob: -2.685769557952881
    5. '[List' → logprob: -2.935769557952881
    6. ' de' → logprob: -3.060769557952881
    7. '[
' → logprob: -3.685769557952881
    8. '[int' → logprob: -3.810769557952881
    9. '[n' → logprob: -4.310769557952881
    10. '
' → logprob: -4.435769557952881

Token 405: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05910696089267731
    2. 'lists' → logprob: -3.1841070652008057
    3. 'n' → logprob: -4.684106826782227
    4. ' listes' → logprob: -5.434106826782227
    5. 'listas' → logprob: -7.559106826782227
    6. 's' → logprob: -7.809106826782227
    7. 'liste' → logprob: -7.934106826782227
    8. 'l' → logprob: -8.309106826782227
    9. ' list' → logprob: -8.559106826782227
    10. '[n' → logprob: -8.684106826782227

Token 406: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.12157509475946426
    2. '   ' → logprob: -2.496575117111206
    3. '[n' → logprob: -4.871574878692627
    4. 'd' → logprob: -5.371574878692627
    5. ' de' → logprob: -5.871574878692627
    6. '[List' → logprob: -5.871574878692627
    7. ' of' → logprob: -5.996574878692627
    8. '[' → logprob: -6.121574878692627
    9. '[list' → logprob: -6.496574878692627
    10. 'de' → logprob: -6.496574878692627

Token 407: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4233643710613251
    2. '[int' → logprob: -1.9233644008636475
    3. 'ent' → logprob: -2.4233644008636475
    4. ''ent' → logprob: -2.5483644008636475
    5. 'ints' → logprob: -4.048364162445068
    6. 'list' → logprob: -5.548364162445068
    7. 'ents' → logprob: -5.923364162445068
    8. 'inte' → logprob: -6.298364162445068
    9. 'lists' → logprob: -6.548364162445068
    10. ''int' → logprob: -6.923364162445068

Token 408: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.044820331037044525
    2. 'ières' → logprob: -3.1698203086853027
    3. 'ier' → logprob: -6.794820308685303
    4. 'es' → logprob: -9.044820785522461
    5. 'ents' → logprob: -9.169820785522461
    6. 'i' → logprob: -9.169820785522461
    7. 'ires' → logprob: -9.294820785522461
    8. 'ieres' → logprob: -9.544820785522461
    9. 'ière' → logprob: -9.919820785522461
    10. 'lists' → logprob: -10.544820785522461

Token 409: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5407800674438477
    2. '   ' → logprob: -1.7907800674438477
    3. '(n' → logprob: -2.0407800674438477
    4. '[n' → logprob: -2.7907800674438477
    5. ']
' → logprob: -4.415780067443848
    6. '
' → logprob: -4.665780067443848
    7. '```' → logprob: -4.665780067443848
    8. ')' → logprob: -4.790780067443848
    9. 'read' → logprob: -5.915780067443848
    10. 'for' → logprob: -6.290780067443848

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0057742539793252945
    2. 'def' → logprob: -5.255774021148682
    3. '(n' → logprob: -8.38077449798584
    4. '```' → logprob: -8.75577449798584
    5. 'return' → logprob: -10.38077449798584
    6. '    
' → logprob: -10.38077449798584
    7. '
' → logprob: -11.00577449798584
    8. '(' → logprob: -11.13077449798584
    9. ')' → logprob: -11.38077449798584
    10. '):
' → logprob: -11.50577449798584

Token 411: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007528193295001984
    2. '"""
' (adapté à ' """
') → logprob: -5.757528305053711
    3. '
' → logprob: -6.132528305053711
    4. 'def' → logprob: -7.257528305053711
    5. '```' → logprob: -7.507528305053711
    6. 'return' → logprob: -7.507528305053711
    7. ']
' → logprob: -10.007528305053711
    8. '):
' → logprob: -10.007528305053711
    9. ')
' → logprob: -10.007528305053711
    10. ')' → logprob: -10.257528305053711

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004197236616164446
    2. 'return' → logprob: -5.504197120666504
    3. ' return' → logprob: -9.254197120666504
    4. '	return' → logprob: -11.379197120666504
    5. 'def' → logprob: -11.504197120666504
    6. '
' → logprob: -13.629197120666504
    7. '       ' → logprob: -16.37919807434082
    8. '{return' → logprob: -16.87919807434082
    9. '   ' → logprob: -17.00419807434082
    10. '```' → logprob: -17.00419807434082

Token 413: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.302704761968926e-05
    2. ' return' → logprob: -10.000073432922363
    3. '   ' → logprob: -10.500073432922363
    4. '	return' → logprob: -17.750072479248047
    5. '
' → logprob: -18.375072479248047
    6. 'def' → logprob: -19.750072479248047
    7. 'Return' → logprob: -20.750072479248047
    8. 'result' → logprob: -21.000072479248047
    9. 'ret' → logprob: -21.500072479248047
    10. ':return' → logprob: -21.875072479248047

Token 414: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02417309582233429
    2. '[list' → logprob: -3.7741730213165283
    3. '[L' → logprob: -7.274173259735107
    4. '[List' → logprob: -8.52417278289795
    5. '[line' → logprob: -10.77417278289795
    6. ' [' → logprob: -12.02417278289795
    7. '[array' → logprob: -13.64917278289795
    8. '[l' → logprob: -13.77417278289795
    9. '[result' → logprob: -13.89917278289795
    10. '[I' → logprob: -13.89917278289795

Token 415: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.2664456789934775e-06
    2. 'list' → logprob: -14.375000953674316
    3. ' LI' → logprob: -14.625000953674316
    4. 'li' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.500001907348633
    6. 'L' → logprob: -19.000001907348633
    7. 'LIST' → logprob: -19.500001907348633
    8. 'LS' → logprob: -19.625001907348633
    9. 'Li' → logprob: -20.750001907348633
    10. '
' → logprob: -21.625001907348633

Token 416: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16092635691165924
    2. '()' → logprob: -1.910926342010498
    3. '(' → logprob: -8.035926818847656
    4. '(i' → logprob: -8.285926818847656
    5. 'for' → logprob: -9.035926818847656
    6. '()]' → logprob: -13.160926818847656
    7. ' ()' → logprob: -13.535926818847656
    8. 'n' → logprob: -13.785926818847656
    9. ' (' → logprob: -13.910926818847656
    10. ' for' → logprob: -14.660926818847656

Token 417: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023685645312070847
    2. '()' → logprob: -3.7736856937408447
    3. 'for' → logprob: -8.148685455322266
    4. '(' → logprob: -9.273685455322266
    5. '(i' → logprob: -9.898685455322266
    6. ' for' → logprob: -12.398685455322266
    7. 'n' → logprob: -13.523685455322266
    8. ' (' → logprob: -14.273685455322266
    9. ' ()' → logprob: -15.648685455322266
    10. '()]' → logprob: -15.898685455322266

Token 418: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030338017269968987
    2. 'i' → logprob: -3.5303380489349365
    3. '_i' → logprob: -7.905337810516357
    4. ' i' → logprob: -8.780338287353516
    5. ' _' → logprob: -9.655338287353516
    6. '_=' → logprob: -15.280338287353516
    7. '_
' → logprob: -15.780338287353516
    8. '_in' → logprob: -16.655338287353516
    9. '_range' → logprob: -16.655338287353516
    10. ' ' → logprob: -16.905338287353516

Token 419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3151306211948395
    2. 'in' → logprob: -1.315130591392517
    3. '(' → logprob: -7.565130710601807
    4. 'range' → logprob: -7.690130710601807
    5. '(n' → logprob: -7.815130710601807
    6. 'n' → logprob: -8.315130233764648
    7. ' range' → logprob: -9.315130233764648
    8. ' ' → logprob: -9.565130233764648
    9. ' i' → logprob: -10.690130233764648
    10. '(range' → logprob: -11.190130233764648

Token 420: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019291093340143561
    2. ' range' → logprob: -6.25192928314209
    3. '(range' → logprob: -14.50192928314209
    4. '(' → logprob: -19.501928329467773
    5. '	range' → logprob: -19.626928329467773
    6. 'n' → logprob: -19.751928329467773
    7. 'in' → logprob: -19.751928329467773
    8. 'rang' → logprob: -19.876928329467773
    9. '(n' → logprob: -20.501928329467773
    10. ' ' → logprob: -20.751928329467773

Token 421: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07948891818523407
    2. 'n' → logprob: -2.57948899269104
    3. 'range' → logprob: -8.329488754272461
    4. ' n' → logprob: -8.454488754272461
    5. '(' → logprob: -9.079488754272461
    6. ' range' → logprob: -10.704488754272461
    7. ' (' → logprob: -11.829488754272461
    8. '(range' → logprob: -14.829488754272461
    9. '	n' → logprob: -15.579488754272461
    10. ')n' → logprob: -15.829488754272461

Token 422: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013833323027938604
    2. ']' → logprob: -6.751383304595947
    3. '()]' → logprob: -8.876383781433105
    4. '(n' → logprob: -10.501383781433105
    5. ')' → logprob: -10.626383781433105
    6. 'n' → logprob: -11.001383781433105
    7. ' ]' → logprob: -14.001383781433105
    8. ')n' → logprob: -14.001383781433105
    9. ')],' → logprob: -14.751383781433105
    10. ']()' → logprob: -14.751383781433105

Token 423: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007845928892493248
    2. '
' → logprob: -4.882845878601074
    3. 'class' → logprob: -8.507845878601074
    4. '\' → logprob: -11.132845878601074
    5. '

' → logprob: -11.632845878601074
    6. '#' → logprob: -12.382845878601074
    7. '
' → logprob: -12.632845878601074
    8. '```' → logprob: -12.882845878601074
    9. 'import' → logprob: -14.257845878601074
    10. '\n' → logprob: -14.507845878601074

Token 424: ' SR' (ID: 30704)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.7504817843437195
    2. 'LS' → logprob: -1.3754818439483643
    3. 'main' → logprob: -2.7504818439483643
    4. 'I' → logprob: -3.0004818439483643
    5. 'RS' → logprob: -3.6254818439483643
    6. 'LI' → logprob: -3.8754818439483643
    7. 'L' → logprob: -4.000481605529785
    8. 'LR' → logprob: -4.000481605529785
    9. 'SR' → logprob: -4.875481605529785
    10. 'M' → logprob: -4.875481605529785

Token 425: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009139667963609099
    2. '():' → logprob: -7.750914096832275
    3. '():
' → logprob: -7.750914096832275
    4. '(' → logprob: -11.000913619995117
    5. '()' → logprob: -11.375913619995117
    6. '(N' → logprob: -11.500913619995117
    7. '(size' → logprob: -12.000913619995117
    8. 'Q' → logprob: -12.625913619995117
    9. '(name' → logprob: -14.500913619995117
    10. '(num' → logprob: -14.500913619995117

Token 426: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38793596625328064
    2. '):
' → logprob: -1.137935996055603
    3. '(n' → logprob: -7.012936115264893
    4. '):
' → logprob: -9.387935638427734
    5. ')' → logprob: -9.512935638427734
    6. 'n' → logprob: -12.637935638427734
    7. '):

' → logprob: -13.387935638427734
    8. ':' → logprob: -14.637935638427734
    9. ' ):' → logprob: -14.887935638427734
    10. 'def' → logprob: -15.137935638427734

Token 427: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03317058086395264
    2. 'def' → logprob: -3.533170700073242
    3. '   ' → logprob: -5.908170700073242
    4. 'n' → logprob: -8.033170700073242
    5. ' def' → logprob: -8.908170700073242
    6. '(
' → logprob: -8.908170700073242
    7. '(' → logprob: -10.158170700073242
    8. ':
' → logprob: -10.908170700073242
    9. '
' → logprob: -11.658170700073242
    10. '):
' → logprob: -11.783170700073242

Token 428: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27571985125541687
    2. '(n' → logprob: -1.5257198810577393
    3. '"""
' (adapté à ' """
') → logprob: -4.65071964263916
    4. '   ' → logprob: -5.02571964263916
    5. '(
' → logprob: -5.65071964263916
    6. ' def' → logprob: -6.40071964263916
    7. '(' → logprob: -6.90071964263916
    8. 'n' → logprob: -7.40071964263916
    9. '[
' → logprob: -8.90071964263916
    10. '(s' → logprob: -9.15071964263916

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3145051598548889
    2. '"""
' → logprob: -1.5645051002502441
    3. 'def' → logprob: -2.814505100250244
    4. '"""' → logprob: -7.689505100250244
    5. '"
' → logprob: -8.814505577087402
    6. '"' → logprob: -9.689505577087402
    7. '"""
' → logprob: -11.189505577087402
    8. '
' → logprob: -11.439505577087402
    9. ' def' → logprob: -11.564505577087402
    10. 'n' → logprob: -11.939505577087402

Token 430: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06276523321866989
    2. '"""
' → logprob: -2.812765121459961
    3. '   ' → logprob: -7.562765121459961
    4. '"""' → logprob: -8.937765121459961
    5. '
' → logprob: -9.437765121459961
    6. ' def' → logprob: -10.062765121459961
    7. ''''
' → logprob: -11.187765121459961
    8. '"""
' → logprob: -13.062765121459961
    9. '```' → logprob: -13.687765121459961
    10. '	def' → logprob: -13.937765121459961

Token 431: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2354660928249359
    2. '(n' → logprob: -1.6104661226272583
    3. ' n' → logprob: -4.610466003417969
    4. 'def' → logprob: -10.985466003417969
    5. 's' → logprob: -11.360466003417969
    6. '[n' → logprob: -12.235466003417969
    7. 'lines' → logprob: -12.485466003417969
    8. '
' → logprob: -12.610466003417969
    9. ' (' → logprob: -12.860466003417969
    10. 'SR' → logprob: -12.985466003417969

Token 432: ' chaînes' (ID: 179904)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.0094192028045654
    2. ' lines' → logprob: -1.1344192028045654
    3. 'lines' → logprob: -1.5094192028045654
    4. 'strings' → logprob: -3.6344192028045654
    5. ' strings' → logprob: -3.7594192028045654
    6. 'l' → logprob: -3.8844192028045654
    7. 's' → logprob: -5.2594194412231445
    8. '(n' → logprob: -5.8844194412231445
    9. 'string' → logprob: -6.1344194412231445
    10. ' string' → logprob: -6.2594194412231445

Token 433: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0031579919159412384
    2. 'def' → logprob: -6.378158092498779
    3. '(' → logprob: -7.378158092498779
    4. ' (' → logprob: -7.753158092498779
    5. '(
' → logprob: -8.503157615661621
    6. '   ' → logprob: -9.503157615661621
    7. '(lines' → logprob: -10.628157615661621
    8. '_lines' → logprob: -11.003157615661621
    9. '```' → logprob: -11.128157615661621
    10. ' def' → logprob: -12.003157615661621

Token 434: ' caractères' (ID: 183106)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006300365086644888
    2. 'ligne' → logprob: -5.381300449371338
    3. ' l' → logprob: -7.506300449371338
    4. 'chaine' → logprob: -8.13129997253418
    5. 'lines' → logprob: -8.63129997253418
    6. 'la' → logprob: -8.88129997253418
    7. 'cha' → logprob: -9.25629997253418
    8. ' lignes' → logprob: -9.38129997253418
    9. 'car' → logprob: -9.88129997253418
    10. 'string' → logprob: -10.00629997253418

Token 435: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.290784560609609e-05
    2. 'def' → logprob: -9.625072479248047
    3. ' (' → logprob: -12.500072479248047
    4. '(' → logprob: -14.000072479248047
    5. '(
' → logprob: -14.625072479248047
    6. '(s' → logprob: -14.875072479248047
    7. '(lines' → logprob: -15.125072479248047
    8. '   ' → logprob: -15.250072479248047
    9. '```' → logprob: -16.125072479248047
    10. 'n' → logprob: -16.125072479248047

Token 436: 'une' (ID: 2561)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2987622916698456
    2. 'une' → logprob: -1.673762321472168
    3. 'n' → logprob: -3.798762321472168
    4. ' un' → logprob: -3.923762321472168
    5. ')' → logprob: -4.423762321472168
    6. 'def' → logprob: -5.423762321472168
    7. '):
' → logprob: -5.923762321472168
    8. '
' → logprob: -6.048762321472168
    9. '   ' → logprob: -6.048762321472168
    10. 'ligne' → logprob: -6.048762321472168

Token 437: ' par' (ID: 686)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6680220365524292
    2. 'ligne' → logprob: -0.7930220365524292
    3. '   ' → logprob: -4.418022155761719
    4. 'chaine' → logprob: -5.043022155761719
    5. ' chaîne' → logprob: -5.043022155761719
    6. '
' → logprob: -5.793022155761719
    7. 'l' → logprob: -6.418022155761719
    8. ' chaine' → logprob: -6.418022155761719
    9. 'fois' → logprob: -7.793022155761719
    10. 'n' → logprob: -7.918022155761719

Token 438: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0062772673554718494
    2. ' ligne' → logprob: -5.506277084350586
    3. 'line' → logprob: -6.256277084350586
    4. 'l' → logprob: -8.756277084350586
    5. 'lig' → logprob: -9.881277084350586
    6. 'lin' → logprob: -10.131277084350586
    7. '   ' → logprob: -12.006277084350586
    8. 'li' → logprob: -12.506277084350586
    9. '```' → logprob: -12.756277084350586
    10. '
' → logprob: -13.006277084350586

Token 439: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.02708156779408455
    2. ').
' → logprob: -3.7770814895629883
    3. ')' → logprob: -6.277081489562988
    4. '):
' → logprob: -6.402081489562988
    5. '):' → logprob: -8.402081489562988
    6. '   ' → logprob: -10.527081489562988
    7. 'def' → logprob: -11.152081489562988
    8. ').
' → logprob: -11.527081489562988
    9. ').

' → logprob: -11.902081489562988
    10. '.' → logprob: -12.652081489562988

Token 440: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12876945734024048
    2. '   ' → logprob: -2.1287693977355957
    3. ' def' → logprob: -6.503769397735596
    4. '
' → logprob: -8.253769874572754
    5. '(' → logprob: -10.253769874572754
    6. '```' → logprob: -10.628769874572754
    7. '(
' → logprob: -12.253769874572754
    8. '"""
' → logprob: -13.003769874572754
    9. '``' → logprob: -13.003769874572754
    10. '(n' → logprob: -13.003769874572754

Token 441: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0057376292534172535
    2. '   ' → logprob: -5.255737781524658
    3. ' def' → logprob: -7.630737781524658
    4. '
' → logprob: -11.2557373046875
    5. '"""
' → logprob: -12.5057373046875
    6. '```' → logprob: -14.6307373046875
    7. '	def' → logprob: -14.8807373046875
    8. '(def' → logprob: -15.1307373046875
    9. 'Def' → logprob: -15.8807373046875
    10. ''''
' → logprob: -15.8807373046875

Token 442: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20258241891860962
    2. '(n' → logprob: -2.452582359313965
    3. ':' → logprob: -3.452582359313965
    4. '       ' → logprob: -3.577582359313965
    5. '(' → logprob: -4.327582359313965
    6. ':
' → logprob: -4.452582359313965
    7. '(
' → logprob: -5.202582359313965
    8. '):
' → logprob: -6.327582359313965
    9. 'def' → logprob: -6.452582359313965
    10. '```' → logprob: -6.577582359313965

Token 443: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24180081486701965
    2. '       ' → logprob: -2.1168007850646973
    3. 'n' → logprob: -2.3668007850646973
    4. ' n' → logprob: -7.991800785064697
    5. '
' → logprob: -9.116801261901855
    6. '     ' → logprob: -10.116801261901855
    7. 'def' → logprob: -10.491801261901855
    8. '(n' → logprob: -10.866801261901855
    9. '      ' → logprob: -11.116801261901855
    10. '	n' → logprob: -11.366801261901855

Token 444: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -5.9153885558771435e-06
    2. ' n' → logprob: -12.750005722045898
    3. '
' → logprob: -13.375005722045898
    4. '   ' → logprob: -13.625005722045898
    5. '```' → logprob: -16.1250057220459
    6. '       ' → logprob: -17.3750057220459
    7. '	n' → logprob: -17.7500057220459
    8. 'def' → logprob: -17.8750057220459
    9. 'int' → logprob: -19.1250057220459
    10. '    
' → logprob: -19.5000057220459

Token 445: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08667190372943878
    2. '):
' → logprob: -3.211671829223633
    3. ':int' → logprob: -3.961671829223633
    4. '):' → logprob: -4.211671829223633
    5. '(int' → logprob: -5.836671829223633
    6. ' :' → logprob: -6.211671829223633
    7. ':
' → logprob: -6.711671829223633
    8. '   ' → logprob: -7.086671829223633
    9. ')' → logprob: -7.336671829223633
    10. ' (' → logprob: -7.711671829223633

Token 446: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ':int' → logprob: -17.375
    3. ' int' → logprob: -17.5
    4. '(int' → logprob: -18.5
    5. '
' → logprob: -19.375
    6. '=int' → logprob: -19.375
    7. '[int' → logprob: -20.125
    8. '   ' → logprob: -20.875
    9. ')' → logprob: -20.875
    10. '):' → logprob: -21.0

Token 447: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033148206770420074
    2. '):
' → logprob: -3.5331482887268066
    3. ':' → logprob: -5.783148288726807
    4. ')' → logprob: -8.533147811889648
    5. '   ' → logprob: -9.783147811889648
    6. ':int' → logprob: -10.658147811889648
    7. '):

' → logprob: -11.533147811889648
    8. '
' → logprob: -11.658147811889648
    9. 'int' → logprob: -11.783147811889648
    10. '):
' → logprob: -12.783147811889648

Token 448: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00045902872807346284
    2. '   ' → logprob: -7.87545919418335
    3. ' int' → logprob: -10.500458717346191
    4. 'def' → logprob: -10.500458717346191
    5. '
' → logprob: -12.125458717346191
    6. '       ' → logprob: -12.625458717346191
    7. '[int' → logprob: -12.750458717346191
    8. 'Int' → logprob: -12.875458717346191
    9. '(int' → logprob: -13.125458717346191
    10. 'return' → logprob: -13.500458717346191

Token 449: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.582493007183075
    2. '=' → logprob: -1.7074930667877197
    3. ' de' → logprob: -1.9574930667877197
    4. ')' → logprob: -2.8324930667877197
    5. 'def' → logprob: -3.0824930667877197
    6. ':' → logprob: -5.582492828369141
    7. '):' → logprob: -6.207492828369141
    8. 'd' → logprob: -6.457492828369141
    9. '  ' → logprob: -6.707492828369141
    10. 'des' → logprob: -6.832492828369141

Token 450: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.20398014783859253
    2. 'l' → logprob: -1.7039802074432373
    3. ' lignes' → logprob: -6.703979969024658
    4. 'ligne' → logprob: -6.703979969024658
    5. ' lines' → logprob: -9.578980445861816
    6. 'lin' → logprob: -11.203980445861816
    7. 'line' → logprob: -11.953980445861816
    8. 'strings' → logprob: -11.953980445861816
    9. '```' → logprob: -12.578980445861816
    10. 'range' → logprob: -13.078980445861816

Token 451: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8252553343772888
    2. 'à' → logprob: -1.2002553939819336
    3. '   ' → logprob: -2.5752553939819336
    4. ':' → logprob: -2.8252553939819336
    5. ')' → logprob: -3.0752553939819336
    6. '):' → logprob: -3.3252553939819336
    7. '):
' → logprob: -3.4502553939819336
    8. 'def' → logprob: -5.575255393981934
    9. ''à' → logprob: -5.700255393981934
    10. '=' → logprob: -6.950255393981934

Token 452: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03807878866791725
    2. 'read' → logprob: -3.288078784942627
    3. ' range' → logprob: -10.663079261779785
    4. ' lire' → logprob: -12.288079261779785
    5. 'rang' → logprob: -13.038079261779785
    6. 'r' → logprob: -13.163079261779785
    7. 'continue' → logprob: -13.788079261779785
    8. 'write' → logprob: -14.163079261779785
    9. '
' → logprob: -14.913079261779785
    10. 'leer' → logprob: -15.038079261779785

Token 453: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.45237597823143005
    2. '):' → logprob: -1.0773760080337524
    3. '   ' → logprob: -4.452375888824463
    4. 'def' → logprob: -5.577375888824463
    5. ')' → logprob: -5.702375888824463
    6. '(n' → logprob: -6.452375888824463
    7. 'n' → logprob: -6.702375888824463
    8. '):
' → logprob: -6.952375888824463
    9. ').' → logprob: -7.327375888824463
    10. ':' → logprob: -9.827376365661621

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002123614540323615
    2. 'def' → logprob: -8.750212669372559
    3. ')' → logprob: -10.750212669372559
    4. '```' → logprob: -11.250212669372559
    5. '"""
' → logprob: -12.000212669372559
    6. '
' → logprob: -12.250212669372559
    7. ')
' → logprob: -12.625212669372559
    8. '  ' → logprob: -14.000212669372559
    9. '       ' → logprob: -14.000212669372559
    10. ' ' → logprob: -14.625212669372559

Token 455: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16806268692016602
    2. '"""
' → logprob: -2.043062686920166
    3. ')
' → logprob: -4.918062686920166
    4. ')' → logprob: -5.168062686920166
    5. 'Returns' (adapté à ' Returns') → logprob: -5.418062686920166
    6. 'def' → logprob: -5.543062686920166
    7. '```' → logprob: -6.293062686920166
    8. ''''
' → logprob: -7.793062686920166
    9. '):
' → logprob: -8.168062210083008
    10. '
' → logprob: -8.168062210083008

Token 456: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02853209525346756
    2. '[' → logprob: -4.028532028198242
    3. 'def' → logprob: -5.528532028198242
    4. '[
' → logprob: -5.528532028198242
    5. '[n' → logprob: -7.528532028198242
    6. '    ' → logprob: -8.028532028198242
    7. '[List' → logprob: -8.403532028198242
    8. ' [' → logprob: -8.403532028198242
    9. '       ' → logprob: -8.528532028198242
    10. '
' → logprob: -8.778532028198242

Token 457: '       ' (ID: 309)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.09543684124946594
    2. '[' → logprob: -2.7204368114471436
    3. '   ' → logprob: -4.345437049865723
    4. '[s' → logprob: -4.595437049865723
    5. ' [' → logprob: -6.345437049865723
    6. '[str' → logprob: -9.345437049865723
    7. '[L' → logprob: -9.970437049865723
    8. '[String' → logprob: -9.970437049865723
    9. '[string' → logprob: -9.970437049865723
    10. '[List' → logprob: -10.345437049865723

Token 458: ' list' (ID: 1562)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.18291603028774261
    2. 'list' (adapté à ' list') → logprob: -2.3079159259796143
    3. '[list' → logprob: -3.3079159259796143
    4. '[str' → logprob: -4.307916164398193
    5. '[List' → logprob: -4.432916164398193
    6. '[' → logprob: -5.807916164398193
    7. '[s' → logprob: -6.932916164398193
    8. ' list' → logprob: -7.432916164398193
    9. 'List' → logprob: -7.557916164398193
    10. ' [' → logprob: -8.557915687561035

Token 459: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. 'str' → logprob: -16.0
    3. '[list' → logprob: -17.125
    4. '[string' → logprob: -18.25
    5. '[List' → logprob: -18.5
    6. '[' → logprob: -18.875
    7. '
' → logprob: -19.625
    8. '[String' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '(str' → logprob: -20.25

Token 460: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08772050589323044
    2. ']' → logprob: -3.2127203941345215
    3. '[str' → logprob: -3.2127203941345215
    4. ']:
' → logprob: -5.9627203941345215
    5. '   ' → logprob: -8.21272087097168
    6. '):' → logprob: -8.71272087097168
    7. '(str' → logprob: -9.83772087097168
    8. ']):' → logprob: -9.96272087097168
    9. ']:
' → logprob: -10.21272087097168
    10. ']string' → logprob: -10.33772087097168

Token 461: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1531871557235718
    2. '[S' → logprob: -1.5281871557235718
    3. '[s' → logprob: -1.7781871557235718
    4. ' [' → logprob: -1.9031871557235718
    5. '[str' → logprob: -3.0281872749328613
    6. '   ' → logprob: -3.2781872749328613
    7. ' return' → logprob: -3.7781872749328613
    8. 'return' → logprob: -3.9031872749328613
    9. '[string' → logprob: -4.653187274932861
    10. '[String' → logprob: -5.153187274932861

Token 462: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -9.849109119386412e-06
    2. 'of' → logprob: -12.625009536743164
    3. ' of' → logprob: -12.875009536743164
    4. '(str' → logprob: -13.375009536743164
    5. '[' → logprob: -14.125009536743164
    6. '   ' → logprob: -14.250009536743164
    7. '[String' → logprob: -14.875009536743164
    8. '[S' → logprob: -15.125009536743164
    9. 'str' → logprob: -16.375009536743164
    10. '[s' → logprob: -16.875009536743164

Token 463: ' chaînes' (ID: 179904)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004408015520311892
    2. 'strings' → logprob: -8.75044059753418
    3. '[str' → logprob: -8.75044059753418
    4. '[S' → logprob: -9.12544059753418
    5. 'str' → logprob: -12.25044059753418
    6. 's' → logprob: -13.00044059753418
    7. '```' → logprob: -13.25044059753418
    8. '[' → logprob: -13.25044059753418
    9. '[string' → logprob: -13.62544059753418
    10. '
' → logprob: -14.00044059753418

Token 464: ' l' (ID: 305)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.024828488007187843
    2. '[n' → logprob: -4.3998284339904785
    3. 'for' → logprob: -5.0248284339904785
    4. 's' → logprob: -7.0248284339904785
    5. '[' → logprob: -7.1498284339904785
    6. '   ' → logprob: -7.2748284339904785
    7. '[s' → logprob: -7.5248284339904785
    8. '(n' → logprob: -7.8998284339904785
    9. 'de' → logprob: -8.024828910827637
    10. '(s' → logprob: -8.524828910827637

Token 465: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.000145137935760431
    2. 'ue' → logprob: -9.125144958496094
    3. 'us' → logprob: -10.625144958496094
    4. 'u' → logprob: -11.625144958496094
    5. '```' → logprob: -14.250144958496094
    6. '[' → logprob: -14.625144958496094
    7. 'is' → logprob: -14.750144958496094
    8. '#' → logprob: -15.000144958496094
    9. 'es' → logprob: -15.125144958496094
    10. 'ies' → logprob: -15.375144958496094

Token 466: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011947466060519218
    2. 'for' → logprob: -5.2619476318359375
    3. '   ' → logprob: -5.3869476318359375
    4. ']' → logprob: -7.0119476318359375
    5. '
' → logprob: -7.7619476318359375
    6. '(' → logprob: -8.511947631835938
    7. '[n' → logprob: -8.511947631835938
    8. ' for' → logprob: -9.386947631835938
    9. '](' → logprob: -9.886947631835938
    10. 'def' → logprob: -9.886947631835938

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006482214666903019
    2. 'def' → logprob: -7.500648021697998
    3. '
' → logprob: -9.875648498535156
    4. '```' → logprob: -10.500648498535156
    5. '    
' → logprob: -12.625648498535156
    6. '(' → logprob: -12.750648498535156
    7. '  ' → logprob: -13.250648498535156
    8. '"""
' → logprob: -13.375648498535156
    9. '(n' → logprob: -13.625648498535156
    10. ' ' → logprob: -13.875648498535156

Token 468: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005299181793816388
    2. '"""
' (adapté à ' """
') → logprob: -8.375530242919922
    3. 'return' → logprob: -8.750530242919922
    4. 'def' → logprob: -9.750530242919922
    5. ' return' → logprob: -10.125530242919922
    6. '```' → logprob: -10.750530242919922
    7. '	return' → logprob: -12.375530242919922
    8. ']' → logprob: -12.500530242919922
    9. '"""' → logprob: -12.750530242919922
    10. '
' → logprob: -12.750530242919922

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007318547577597201
    2. 'return' → logprob: -7.250731945037842
    3. ' return' → logprob: -11.750731468200684
    4. 'def' → logprob: -11.875731468200684
    5. '	return' → logprob: -11.875731468200684
    6. '   ' → logprob: -17.125732421875
    7. '```' → logprob: -17.375732421875
    8. '{return' → logprob: -18.750732421875
    9. ':return' → logprob: -19.500732421875
    10. '_return' → logprob: -19.875732421875

Token 470: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.5776860184123507e-06
    2. ' return' → logprob: -13.50000286102295
    3. '   ' → logprob: -13.75000286102295
    4. 'def' → logprob: -17.875001907348633
    5. '
' → logprob: -20.625001907348633
    6. '```' → logprob: -21.375001907348633
    7. '	return' → logprob: -22.500001907348633
    8. 'result' → logprob: -23.750001907348633
    9. '``' → logprob: -24.250001907348633
    10. 'Return' → logprob: -24.500001907348633

Token 471: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.0003382038848940283
    2. '[' → logprob: -8.000338554382324
    3. ' [' → logprob: -13.125338554382324
    4. '[String' → logprob: -14.500338554382324
    5. '[s' → logprob: -15.750338554382324
    6. '[L' → logprob: -16.250337600708008
    7. '[str' → logprob: -16.625337600708008
    8. '[I' → logprob: -17.875337600708008
    9. '[R' → logprob: -18.375337600708008
    10. '[T' → logprob: -18.375337600708008

Token 472: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. ' S' → logprob: -19.0
    3. 's' → logprob: -22.25
    4. '	S' → logprob: -22.25
    5. 'Ｓ' → logprob: -23.0
    6. 'input' → logprob: -24.875
    7. '_S' → logprob: -25.0
    8. '   ' → logprob: -25.375
    9. 'sys' → logprob: -25.5
    10. '`' → logprob: -25.5

Token 473: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.008129963040119e-06
    2. '()]' → logprob: -12.875003814697266
    3. ' ()' → logprob: -13.625003814697266
    4. '()
' → logprob: -16.250003814697266
    5. '(' → logprob: -17.250003814697266
    6. 'for' → logprob: -17.750003814697266
    7. '（）' → logprob: -18.000003814697266
    8. '().' → logprob: -18.375003814697266
    9. '()[' → logprob: -18.875003814697266
    10. '()`' → logprob: -19.000003814697266

Token 474: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06048785150051117
    2. '()' → logprob: -3.060487747192383
    3. 'for' → logprob: -4.560487747192383
    4. '(' → logprob: -6.935487747192383
    5. ' for' → logprob: -8.185487747192383
    6. '(i' → logprob: -9.060487747192383
    7. 'n' → logprob: -13.310487747192383
    8. ' (' → logprob: -13.810487747192383
    9. '(for' → logprob: -13.935487747192383
    10. ' ()' → logprob: -14.060487747192383

Token 475: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16079938411712646
    2. '_' → logprob: -2.160799503326416
    3. ' i' → logprob: -3.410799503326416
    4. ' _' → logprob: -8.785799026489258
    5. '_i' → logprob: -8.910799026489258
    6. ' in' → logprob: -13.785799026489258
    7. ' ' → logprob: -14.910799026489258
    8. '	i' → logprob: -16.285799026489258
    9. 'in' → logprob: -17.410799026489258
    10. '   ' → logprob: -17.660799026489258

Token 476: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055083245038986206
    2. 'in' → logprob: -2.9300832748413086
    3. ' i' → logprob: -9.430083274841309
    4. '(' → logprob: -10.305083274841309
    5. ' ' → logprob: -10.805083274841309
    6. '_' → logprob: -10.805083274841309
    7. 'n' → logprob: -11.055083274841309
    8. 'i' → logprob: -11.555083274841309
    9. 'range' → logprob: -11.680083274841309
    10. '(n' → logprob: -12.805083274841309

Token 477: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -17.756715774536133
    4. '	range' → logprob: -20.381715774536133
    5. 'in' → logprob: -21.006715774536133
    6. '_range' → logprob: -21.381715774536133
    7. '
' → logprob: -22.381715774536133
    8. ' ' → logprob: -22.631715774536133
    9. 'Range' → logprob: -22.756715774536133
    10. '   ' → logprob: -22.881715774536133

Token 478: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013295256067067385
    2. ' range' → logprob: -6.75132942199707
    3. '(n' → logprob: -9.00132942199707
    4. '(range' → logprob: -10.37632942199707
    5. 'n' → logprob: -12.62632942199707
    6. '(' → logprob: -13.50132942199707
    7. 'rang' → logprob: -16.25132942199707
    8. '	range' → logprob: -16.25132942199707
    9. '_range' → logprob: -18.25132942199707
    10. 'in' → logprob: -19.12632942199707

Token 479: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019546831026673317
    2. '(n' → logprob: -7.251954555511475
    3. 'range' → logprob: -7.626954555511475
    4. ')' → logprob: -8.001955032348633
    5. 'n' → logprob: -8.251955032348633
    6. '()]' → logprob: -9.626955032348633
    7. ']' → logprob: -9.876955032348633
    8. ' range' → logprob: -11.376955032348633
    9. ')n' → logprob: -11.376955032348633
    10. ')],' → logprob: -12.626955032348633

Token 480: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.0259150157216936e-05
    2. '#' → logprob: -10.62505054473877
    3. 'class' → logprob: -11.75005054473877
    4. '<|end|>' → logprob: -11.75005054473877
    5. '
' → logprob: -11.87505054473877
    6. '\' → logprob: -14.00005054473877
    7. 'from' → logprob: -14.37505054473877
    8. '@' → logprob: -14.62505054473877
    9. '```' → logprob: -15.25005054473877
    10. 'import' → logprob: -15.62505054473877

Token 481: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02361963875591755
    2. 'print' → logprob: -5.148619651794434
    3. 'LS' → logprob: -5.273619651794434
    4. 'input' → logprob: -6.398619651794434
    5. 'DR' → logprob: -6.523619651794434
    6. 'MS' → logprob: -7.148619651794434
    7. 'D' → logprob: -7.148619651794434
    8. 'I' → logprob: -7.273619651794434
    9. 'IR' → logprob: -7.398619651794434
    10. 'P' → logprob: -7.523619651794434

Token 482: 'SR' (ID: 22892)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.022081367671489716
    2. 'S' → logprob: -3.8970813751220703
    3. 'IR' → logprob: -7.27208137512207
    4. 'R' → logprob: -8.14708137512207
    5. 'IS' → logprob: -8.14708137512207
    6. 'def' → logprob: -9.77208137512207
    7. 'E' → logprob: -10.27208137512207
    8. 'SI' → logprob: -10.39708137512207
    9. 'L' → logprob: -11.14708137512207
    10. '=[]' → logprob: -11.14708137512207

Token 483: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.625096321105957
    3. '():' → logprob: -10.875096321105957
    4. 'def' → logprob: -11.750096321105957
    5. ' (' → logprob: -13.250096321105957
    6. '():
' → logprob: -15.125096321105957
    7. '(N' → logprob: -15.500096321105957
    8. ' def' → logprob: -15.500096321105957
    9. '(def' → logprob: -15.500096321105957
    10. 'n' → logprob: -16.250097274780273

Token 484: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019625280052423477
    2. '):
' → logprob: -4.519625186920166
    3. '(n' → logprob: -5.269625186920166
    4. '():' → logprob: -5.769625186920166
    5. '()' → logprob: -9.269625663757324
    6. '():
' → logprob: -9.519625663757324
    7. ')' → logprob: -9.769625663757324
    8. 'def' → logprob: -10.519625663757324
    9. '):
' → logprob: -11.894625663757324
    10. ' ):' → logprob: -12.269625663757324

Token 485: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00678796274587512
    2. '(' → logprob: -5.0067877769470215
    3. '(
' → logprob: -9.63178825378418
    4. 'def' → logprob: -12.63178825378418
    5. ':' → logprob: -12.88178825378418
    6. 'n' → logprob: -14.75678825378418
    7. '   ' → logprob: -15.75678825378418
    8. '(def' → logprob: -15.75678825378418
    9. '(N' → logprob: -16.63178825378418
    10. '((' → logprob: -16.63178825378418

Token 486: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06925848126411438
    2. 'def' → logprob: -3.694258451461792
    3. 'n' → logprob: -3.819258451461792
    4. '(
' → logprob: -3.944258451461792
    5. '(' → logprob: -8.444258689880371
    6. '   ' → logprob: -8.569258689880371
    7. ' def' → logprob: -9.319258689880371
    8. '
' → logprob: -9.319258689880371
    9. '[
' → logprob: -9.319258689880371
    10. ' n' → logprob: -10.694258689880371

Token 487: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12479391694068909
    2. '   ' → logprob: -2.8747940063476562
    3. '(n' → logprob: -3.4997940063476562
    4. 'n' → logprob: -3.4997940063476562
    5. ' def' → logprob: -8.374794006347656
    6. '
' → logprob: -8.499794006347656
    7. '"""
' → logprob: -10.999794006347656
    8. ' n' → logprob: -11.999794006347656
    9. '(
' → logprob: -12.249794006347656
    10. '  ' → logprob: -12.624794006347656

Token 488: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030452614650130272
    2. '"""
' → logprob: -3.5304527282714844
    3. '   ' → logprob: -8.030452728271484
    4. ' def' → logprob: -8.405452728271484
    5. '"""' → logprob: -9.905452728271484
    6. '(
' → logprob: -10.405452728271484
    7. '
' → logprob: -10.905452728271484
    8. '[
' → logprob: -10.905452728271484
    9. ''''
' → logprob: -11.030452728271484
    10. '("""
' → logprob: -12.530452728271484

Token 489: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017455976456403732
    2. '(n' → logprob: -4.2674560546875
    3. ' n' → logprob: -5.7674560546875
    4. 'def' → logprob: -9.3924560546875
    5. '[n' → logprob: -9.5174560546875
    6. '	n' → logprob: -13.6424560546875
    7. 'LS' → logprob: -14.2674560546875
    8. 'int' → logprob: -15.8924560546875
    9. '   ' → logprob: -16.1424560546875
    10. '```' → logprob: -16.2674560546875

Token 490: ' listes' (ID: 179198)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.4673008918762207
    2. 'lines' → logprob: -1.8423008918762207
    3. ' lignes' → logprob: -2.0923008918762207
    4. '(n' → logprob: -2.3423008918762207
    5. ' lists' → logprob: -2.4673008918762207
    6. 'LS' → logprob: -2.4673008918762207
    7. '_lists' → logprob: -2.9673008918762207
    8. 'lists' → logprob: -2.9673008918762207
    9. '_lines' → logprob: -3.0923008918762207
    10. ' listes' → logprob: -4.467300891876221

Token 491: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.158466100692749
    2. 'of' → logprob: -1.283466100692749
    3. 'def' → logprob: -1.533466100692749
    4. '[' → logprob: -2.783466100692749
    5. '(' → logprob: -3.158466100692749
    6. '(n' → logprob: -3.283466100692749
    7. '[int' → logprob: -3.783466100692749
    8. '[n' → logprob: -5.658466339111328
    9. ' of' → logprob: -6.033466339111328
    10. '[]' → logprob: -6.033466339111328

Token 492: ' mots' (ID: 38338)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.011835903860628605
    2. 'strings' → logprob: -5.386836051940918
    3. 'string' → logprob: -5.511836051940918
    4. '(str' → logprob: -6.386836051940918
    5. 's' → logprob: -7.261836051940918
    6. ' chaînes' → logprob: -8.136836051940918
    7. '[str' → logprob: -8.386836051940918
    8. 'chaine' → logprob: -10.386836051940918
    9. 'm' → logprob: -10.511836051940918
    10. ' strings' → logprob: -10.636836051940918

Token 493: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0047610728070139885
    2. '()' → logprob: -6.129761219024658
    3. 'def' → logprob: -6.379761219024658
    4. '(' → logprob: -7.504761219024658
    5. '```' → logprob: -9.3797607421875
    6. '<|end|>' → logprob: -9.7547607421875
    7. '   ' → logprob: -10.0047607421875
    8. 's' → logprob: -10.3797607421875
    9. '<|end|>' → logprob: -11.1297607421875
    10. ')' → logprob: -11.3797607421875

Token 494: 'une' (ID: 2561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0070707788690924644
    2. '(n' → logprob: -6.132070541381836
    3. 'int' → logprob: -6.132070541381836
    4. ')' → logprob: -6.507070541381836
    5. '   ' → logprob: -7.757070541381836
    6. 'def' → logprob: -7.882070541381836
    7. ')n' → logprob: -8.757070541381836
    8. ' n' → logprob: -8.882070541381836
    9. '):
' → logprob: -10.007070541381836
    10. 'str' → logprob: -10.757070541381836

Token 495: ' liste' (ID: 31719)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029553882777690887
    2. ')' → logprob: -4.1545538902282715
    3. 'n' → logprob: -5.4045538902282715
    4. 'ligne' → logprob: -5.9045538902282715
    5. '```' → logprob: -6.6545538902282715
    6. 'for' → logprob: -6.6545538902282715
    7. 'par' → logprob: -6.9045538902282715
    8. 'line' → logprob: -7.1545538902282715
    9. ')n' → logprob: -7.7795538902282715
    10. '   ' → logprob: -8.404553413391113

Token 496: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.020787576213479042
    2. ' par' → logprob: -4.895787715911865
    3. 'def' → logprob: -4.895787715911865
    4. ')' → logprob: -6.895787715911865
    5. 'de' → logprob: -6.895787715911865
    6. '<|end|>' → logprob: -6.895787715911865
    7. 'for' → logprob: -7.395787715911865
    8. 'per' → logprob: -7.520787715911865
    9. '   ' → logprob: -8.520787239074707
    10. '(par' → logprob: -8.645787239074707

Token 497: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.012841705232858658
    2. 'line' → logprob: -4.762841701507568
    3. ' ligne' → logprob: -5.512841701507568
    4. 'l' → logprob: -9.637842178344727
    5. 'lin' → logprob: -10.012842178344727
    6. 'lig' → logprob: -10.512842178344727
    7. 'liste' → logprob: -11.512842178344727
    8. 'li' → logprob: -11.637842178344727
    9. 'n' → logprob: -11.637842178344727
    10. ' line' → logprob: -12.387842178344727

Token 498: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8078296184539795
    2. '(n' → logprob: -1.0578296184539795
    3. '):' → logprob: -2.0578296184539795
    4. '):
' → logprob: -2.8078296184539795
    5. 'def' → logprob: -4.307829856872559
    6. ')
' → logprob: -6.057829856872559
    7. '   ' → logprob: -6.557829856872559
    8. ').' → logprob: -7.432829856872559
    9. '):
' → logprob: -7.932829856872559
    10. '[n' → logprob: -8.307829856872559

Token 499: ' mots' (ID: 38338)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04982050508260727
    2. 'n' → logprob: -3.2998204231262207
    3. ' n' → logprob: -5.549820423126221
    4. ')' → logprob: -6.174820423126221
    5. '```' → logprob: -6.299820423126221
    6. '
' → logprob: -6.674820423126221
    7. ' def' → logprob: -6.674820423126221
    8. '   ' → logprob: -7.549820423126221
    9. '`' → logprob: -8.799820899963379
    10. 'for' → logprob: -9.049820899963379

Token 500: ' sépar' (ID: 97160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9975300431251526
    2. ')' → logprob: -1.4975299835205078
    3. 'pour' → logprob: -1.6225299835205078
    4. 'par' → logprob: -2.497529983520508
    5. '   ' → logprob: -3.622529983520508
    6. ' pour' → logprob: -3.622529983520508
    7. ' for' → logprob: -3.622529983520508
    8. ' par' → logprob: -4.497529983520508
    9. ' sépar' → logprob: -4.622529983520508
    10. '=' → logprob: -4.997529983520508

Token 501: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.040020644664764404
    2. 'ées' → logprob: -3.290020704269409
    3. 'é' → logprob: -6.41502046585083
    4. 'es' → logprob: -8.165020942687988
    5. 'ée' → logprob: -10.665020942687988
    6. 's' → logprob: -11.665020942687988
    7. 'ed' → logprob: -11.665020942687988
    8. 'ès' → logprob: -11.790020942687988
    9. 'e' → logprob: -13.290020942687988
    10. 'éd' → logprob: -14.040020942687988

Token 502: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.254095196723938
    2. '(n' → logprob: -1.879095196723938
    3. ').' → logprob: -3.6290950775146484
    4. '())' → logprob: -4.379095077514648
    5. ')
' → logprob: -4.504095077514648
    6. '()' → logprob: -4.754095077514648
    7. 'def' → logprob: -5.129095077514648
    8. '):
' → logprob: -6.254095077514648
    9. ').
' → logprob: -6.379095077514648
    10. '):' → logprob: -7.379095077514648

Token 503: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9112687110900879
    2. 'es' → logprob: -1.786268711090088
    3. 'esp' → logprob: -2.036268711090088
    4. ''' → logprob: -2.286268711090088
    5. ')' → logprob: -2.661268711090088
    6. ''espace' → logprob: -3.661268711090088
    7. 'space' → logprob: -4.161268711090088
    8. ' des' → logprob: -4.411268711090088
    9. ' espaces' → logprob: -4.411268711090088
    10. 'spaces' → logprob: -4.536268711090088

Token 504: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.22875644266605377
    2. 'es' → logprob: -1.6037564277648926
    3. ' espaces' → logprob: -6.478756427764893
    4. ''espace' → logprob: -6.978756427764893
    5. 'spaces' → logprob: -8.10375690460205
    6. ''esp' → logprob: -8.10375690460205
    7. 'space' → logprob: -8.97875690460205
    8. ''' → logprob: -9.97875690460205
    9. ' espace' → logprob: -10.22875690460205
    10. '’espace' → logprob: -11.35375690460205

Token 505: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028284480795264244
    2. ')
' → logprob: -4.653284549713135
    3. ').' → logprob: -4.903284549713135
    4. '):
' → logprob: -5.153284549713135
    5. '):' → logprob: -5.778284549713135
    6. 'def' → logprob: -6.778284549713135
    7. '(n' → logprob: -8.403284072875977
    8. ').
' → logprob: -8.778284072875977
    9. '   ' → logprob: -8.903284072875977
    10. '()' → logprob: -9.528284072875977

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7257333397865295
    2. 'def' → logprob: -0.7257333397865295
    3. '(n' → logprob: -3.4757332801818848
    4. ' def' → logprob: -7.725733280181885
    5. '(' → logprob: -7.850733280181885
    6. '```' → logprob: -9.475733757019043
    7. '(def' → logprob: -10.100733757019043
    8. '
' → logprob: -10.225733757019043
    9. ')' → logprob: -10.475733757019043
    10. '<|end|>' → logprob: -10.850733757019043

Token 507: ' Args' (ID: 39185)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18076716363430023
    2. 'def' → logprob: -1.8057671785354614
    3. '   ' → logprob: -7.430767059326172
    4. '(' → logprob: -9.055767059326172
    5. 'return' → logprob: -9.180767059326172
    6. 'n' → logprob: -9.305767059326172
    7. '```' → logprob: -10.055767059326172
    8. ' def' → logprob: -10.555767059326172
    9. '
' → logprob: -11.055767059326172
    10. '(
' → logprob: -11.180767059326172

Token 508: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008841113187372684
    2. '(
' → logprob: -5.133841037750244
    3. '(' → logprob: -6.758841037750244
    4. '   ' → logprob: -7.008841037750244
    5. 'def' → logprob: -7.633841037750244
    6. '       ' → logprob: -9.133841514587402
    7. ':' → logprob: -9.633841514587402
    8. '):' → logprob: -9.758841514587402
    9. '):
' → logprob: -10.133841514587402
    10. '```' → logprob: -10.258841514587402

Token 509: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27300095558166504
    2. '       ' → logprob: -1.773000955581665
    3. '   ' → logprob: -2.773000955581665
    4. 'def' → logprob: -5.148000717163086
    5. '(n' → logprob: -7.398000717163086
    6. ' n' → logprob: -9.648000717163086
    7. '	n' → logprob: -9.773000717163086
    8. '     ' → logprob: -10.773000717163086
    9. '      ' → logprob: -11.648000717163086
    10. '    ' → logprob: -12.148000717163086

Token 510: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.935296834039036e-06
    2. ' n' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.500003814697266
    4. '	n' → logprob: -20.250003814697266
    5. '
' → logprob: -20.375003814697266
    6. 'self' → logprob: -21.625003814697266
    7. 'def' → logprob: -22.000003814697266
    8. '```' → logprob: -22.125003814697266
    9. '(n' → logprob: -22.250003814697266
    10. 'int' → logprob: -22.250003814697266

Token 511: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16316473484039307
    2. ' (' → logprob: -1.913164734840393
    3. '(
' → logprob: -7.1631646156311035
    4. '(int' → logprob: -7.4131646156311035
    5. ':' → logprob: -7.5381646156311035
    6. '   ' → logprob: -8.288165092468262
    7. 'n' → logprob: -8.413165092468262
    8. ')' → logprob: -8.788165092468262
    9. '```' → logprob: -9.038165092468262
    10. '(' → logprob: -9.163165092468262

Token 512: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759406685829163
    2. 'n' → logprob: -0.8259406685829163
    3. '(n' → logprob: -14.82594108581543
    4. ')' → logprob: -15.45094108581543
    5. '(int' → logprob: -16.07594108581543
    6. '[int' → logprob: -16.32594108581543
    7. ' int' → logprob: -16.32594108581543
    8. ' n' → logprob: -16.57594108581543
    9. '=int' → logprob: -16.82594108581543
    10. ':int' → logprob: -17.07594108581543

Token 513: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01818096451461315
    2. ')' → logprob: -5.018180847167969
    3. '):
' → logprob: -5.018180847167969
    4. ':' → logprob: -5.393180847167969
    5. '(n' → logprob: -8.768180847167969
    6. 'n' → logprob: -10.518180847167969
    7. ':int' → logprob: -11.518180847167969
    8. '):
' → logprob: -11.643180847167969
    9. '):

' → logprob: -11.768180847167969
    10. ')n' → logprob: -12.268180847167969

Token 514: ' Nombre' (ID: 70208)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008389271679334342
    2. 'int' → logprob: -7.375838756561279
    3. ' n' → logprob: -9.250839233398438
    4. '(n' → logprob: -9.500839233398438
    5. '   ' → logprob: -10.750839233398438
    6. 'def' → logprob: -11.500839233398438
    7. '       ' → logprob: -12.125839233398438
    8. '	n' → logprob: -13.000839233398438
    9. '
' → logprob: -14.375839233398438
    10. '[n' → logprob: -15.125839233398438

Token 515: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8987975716590881
    2. 'de' → logprob: -1.3987975120544434
    3. ' de' → logprob: -1.5237975120544434
    4. 'def' → logprob: -2.5237975120544434
    5. '=n' → logprob: -4.023797512054443
    6. '_de' → logprob: -4.648797512054443
    7. '=' → logprob: -5.023797512054443
    8. 'd' → logprob: -5.523797512054443
    9. ')' → logprob: -5.523797512054443
    10. '[n' → logprob: -7.023797512054443

Token 516: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07762627303600311
    2. 'l' → logprob: -2.9526262283325195
    3. 'range' → logprob: -4.5776262283325195
    4. 'ligne' → logprob: -4.8276262283325195
    5. '(n' → logprob: -6.9526262283325195
    6. ' lignes' → logprob: -7.2026262283325195
    7. 'ls' → logprob: -7.5776262283325195
    8. 'line' → logprob: -7.7026262283325195
    9. 'n' → logprob: -7.8276262283325195
    10. 'lin' → logprob: -7.9526262283325195

Token 517: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7506256699562073
    2. '):' → logprob: -1.1256256103515625
    3. ':' → logprob: -2.2506256103515625
    4. '):
' → logprob: -2.5006256103515625
    5. ')' → logprob: -5.2506256103515625
    6. 'def' → logprob: -5.6256256103515625
    7. '=' → logprob: -6.3756256103515625
    8. '(n' → logprob: -6.7506256103515625
    9. ' à' → logprob: -7.0006256103515625
    10. 'à' → logprob: -7.1256256103515625

Token 518: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.635402500629425
    2. 'n' → logprob: -1.6354024410247803
    3. 'read' → logprob: -1.7604024410247803
    4. '(n' → logprob: -2.5104024410247803
    5. ' range' → logprob: -4.635402679443359
    6. 'int' → logprob: -5.385402679443359
    7. 'def' → logprob: -5.510402679443359
    8. ' n' → logprob: -6.635402679443359
    9. ' read' → logprob: -7.260402679443359
    10. 'return' → logprob: -7.260402679443359

Token 519: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3618011474609375
    2. '(n' → logprob: -1.3618011474609375
    3. '):' → logprob: -3.3618011474609375
    4. '   ' → logprob: -4.7368011474609375
    5. 'def' → logprob: -5.8618011474609375
    6. '):
' → logprob: -7.6118011474609375
    7. ')' → logprob: -7.8618011474609375
    8. 'n' → logprob: -8.986801147460938
    9. ')
' → logprob: -9.736801147460938
    10. ')n' → logprob: -11.611801147460938

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004013561410829425
    2. ')' → logprob: -8.500401496887207
    3. 'def' → logprob: -9.125401496887207
    4. 'return' → logprob: -10.750401496887207
    5. '	return' → logprob: -11.000401496887207
    6. ')
' → logprob: -11.125401496887207
    7. '
' → logprob: -11.625401496887207
    8. '    
' → logprob: -11.625401496887207
    9. '):
' → logprob: -11.750401496887207
    10. '	' → logprob: -12.750401496887207

Token 521: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08482950925827026
    2. ')' → logprob: -3.209829568862915
    3. 'def' → logprob: -3.584829568862915
    4. '):
' → logprob: -4.834829330444336
    5. 'n' → logprob: -6.209829330444336
    6. 'return' → logprob: -6.709829330444336
    7. ')
' → logprob: -7.084829330444336
    8. '):' → logprob: -7.459829330444336
    9. '
' → logprob: -7.959829330444336
    10. '    ' → logprob: -10.084829330444336

Token 522: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7558492422103882
    2. '       ' → logprob: -1.0058492422103882
    3. ':' → logprob: -2.8808493614196777
    4. '[
' → logprob: -3.5058493614196777
    5. '[' → logprob: -3.8808493614196777
    6. ':
' → logprob: -4.130849361419678
    7. 'def' → logprob: -4.630849361419678
    8. '[n' → logprob: -4.755849361419678
    9. '        ' → logprob: -5.630849361419678
    10. '=' → logprob: -5.880849361419678

Token 523: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2130558341741562
    2. '[' → logprob: -1.8380558490753174
    3. ' [' → logprob: -3.5880558490753174
    4. '       ' → logprob: -5.963055610656738
    5. '[L' → logprob: -6.963055610656738
    6. '[n' → logprob: -7.213055610656738
    7. '[List' → logprob: -8.338055610656738
    8. '    ' → logprob: -8.963055610656738
    9. '[list' → logprob: -9.088055610656738
    10. '[len' → logprob: -9.463055610656738

Token 524: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.054024867713451385
    2. '[List' → logprob: -3.5540249347686768
    3. '[' → logprob: -3.8040249347686768
    4. '[line' → logprob: -7.554024696350098
    5. '[str' → logprob: -8.179024696350098
    6. 'list' (adapté à ' list') → logprob: -8.179024696350098
    7. '[s' → logprob: -8.804024696350098
    8. '[n' → logprob: -9.054024696350098
    9. ' [' → logprob: -9.804024696350098
    10. '[result' → logprob: -9.929024696350098

Token 525: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.09032760560512543
    2. '[List' → logprob: -2.465327501296997
    3. '[' → logprob: -7.340327739715576
    4. '[
' → logprob: -7.590327739715576
    5. '[str' → logprob: -9.465327262878418
    6. '<List' → logprob: -10.215327262878418
    7. 'list' → logprob: -10.215327262878418
    8. '```' → logprob: -10.840327262878418
    9. '[int' → logprob: -10.965327262878418
    10. '(list' → logprob: -11.090327262878418

Token 526: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -2.339278580620885e-06
    2. 'str' → logprob: -13.000001907348633
    3. '(str' → logprob: -17.750001907348633
    4. '[
' → logprob: -20.375001907348633
    5. '=str' → logprob: -20.375001907348633
    6. ']' → logprob: -20.875001907348633
    7. '[int' → logprob: -20.875001907348633
    8. '[' → logprob: -21.250001907348633
    9. '	str' → logprob: -21.250001907348633
    10. '[string' → logprob: -22.000001907348633

Token 527: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.007499435916543007
    2. ']]:
' → logprob: -5.6324992179870605
    3. ']' → logprob: -5.8824992179870605
    4. ']):' → logprob: -7.6324992179870605
    5. ')]' → logprob: -8.382499694824219
    6. '(n' → logprob: -9.007499694824219
    7. ']])' → logprob: -9.382499694824219
    8. ']]]' → logprob: -9.882499694824219
    9. '])' → logprob: -10.257499694824219
    10. ']:' → logprob: -10.382499694824219

Token 528: ':' (ID: 25)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.034419186413288116
    2. ']' → logprob: -4.534419059753418
    3. '   ' → logprob: -4.534419059753418
    4. '[n' → logprob: -4.909419059753418
    5. 'def' → logprob: -6.409419059753418
    6. '
' → logprob: -6.534419059753418
    7. 'for' → logprob: -7.409419059753418
    8. ')' → logprob: -8.159419059753418
    9. ' for' → logprob: -8.409419059753418
    10. '[' → logprob: -8.784419059753418

Token 529: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45723196864128113
    2. '[List' → logprob: -1.3322319984436035
    3. ' [' → logprob: -3.0822319984436035
    4. '[L' → logprob: -4.2072319984436035
    5. 'return' → logprob: -4.4572319984436035
    6. '   ' → logprob: -4.8322319984436035
    7. '[str' → logprob: -5.0822319984436035
    8. 'LS' → logprob: -5.5822319984436035
    9. '[String' → logprob: -6.0822319984436035
    10. '[S' → logprob: -6.3322319984436035

Token 530: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5809894800186157
    2. '[str' → logprob: -1.8309894800186157
    3. '[List' → logprob: -2.330989360809326
    4. ' of' → logprob: -3.080989360809326
    5. '[list' → logprob: -3.080989360809326
    6. '[
' → logprob: -3.330989360809326
    7. '   ' → logprob: -3.580989360809326
    8. 'of' → logprob: -4.830989360809326
    9. ']' → logprob: -5.080989360809326
    10. '[int' → logprob: -6.080989360809326

Token 531: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01589159667491913
    2. 'lists' → logprob: -4.2658915519714355
    3. '[list' → logprob: -7.3908915519714355
    4. 'LS' → logprob: -7.6408915519714355
    5. '[str' → logprob: -7.8908915519714355
    6. 'listas' → logprob: -9.640892028808594
    7. 'liste' → logprob: -9.890892028808594
    8. 'ls' → logprob: -10.015892028808594
    9. ' listes' → logprob: -10.515892028808594
    10. '[' → logprob: -10.640892028808594

Token 532: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00495337788015604
    2. ']' → logprob: -5.379953384399414
    3. '[int' → logprob: -8.879953384399414
    4. '[' → logprob: -9.629953384399414
    5. '[List' → logprob: -10.254953384399414
    6. '[n' → logprob: -10.879953384399414
    7. '[]' → logprob: -11.129953384399414
    8. '[list' → logprob: -11.254953384399414
    9. '   ' → logprob: -11.504953384399414
    10. '[
' → logprob: -11.879953384399414

Token 533: ' mots' (ID: 38338)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0021244457457214594
    2. 'strings' → logprob: -6.252124309539795
    3. 'string' → logprob: -9.877124786376953
    4. '[str' → logprob: -10.127124786376953
    5. 'chain' → logprob: -10.127124786376953
    6. ' chaînes' → logprob: -10.377124786376953
    7. 'cha' → logprob: -11.002124786376953
    8. 'm' → logprob: -11.752124786376953
    9. 'chaine' → logprob: -12.752124786376953
    10. 'chains' → logprob: -12.752124786376953

Token 534: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06435644626617432
    2. '[n' → logprob: -3.1893563270568848
    3. 'for' → logprob: -4.189356327056885
    4. ']' → logprob: -6.314356327056885
    5. '   ' → logprob: -6.689356327056885
    6. '[' → logprob: -6.814356327056885
    7. '[(' → logprob: -7.564356327056885
    8. ' for' → logprob: -7.814356327056885
    9. '
' → logprob: -8.564356803894043
    10. 'def' → logprob: -8.689356803894043

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061777859926223755
    2. '(n' → logprob: -2.9367778301239014
    3. 'def' → logprob: -5.4367780685424805
    4. '```' → logprob: -6.6867780685424805
    5. '[n' → logprob: -7.9367780685424805
    6. '
' → logprob: -8.06177806854248
    7. '"""
' → logprob: -9.31177806854248
    8. 'for' → logprob: -9.31177806854248
    9. 'return' → logprob: -9.56177806854248
    10. '[' → logprob: -9.81177806854248

Token 536: ' """
' (ID: 7037)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5364001393318176
    2. '   ' → logprob: -1.0364000797271729
    3. '"""' → logprob: -3.411400079727173
    4. '"""
' (adapté à ' """
') → logprob: -4.286400318145752
    5. '```' → logprob: -4.911400318145752
    6. '<|end|>' → logprob: -6.036400318145752
    7. '"]' → logprob: -6.536400318145752
    8. 'return' → logprob: -7.161400318145752
    9. '    ' → logprob: -8.286399841308594
    10. '  ' → logprob: -8.411399841308594

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026217024424113333
    2. 'return' → logprob: -8.250262260437012
    3. ' return' → logprob: -14.500262260437012
    4. 'def' → logprob: -15.000262260437012
    5. '	return' → logprob: -17.000261306762695
    6. '
' → logprob: -17.500261306762695
    7. '       ' → logprob: -19.250261306762695
    8. '{return' → logprob: -19.875261306762695
    9. '   ' → logprob: -20.125261306762695
    10. '[' → logprob: -20.250261306762695

Token 538: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005663428921252489
    2. '   ' → logprob: -5.2556633949279785
    3. ' return' → logprob: -7.7556633949279785
    4. '
' → logprob: -14.505663871765137
    5. '	return' → logprob: -14.505663871765137
    6. 'def' → logprob: -15.380663871765137
    7. '{return' → logprob: -18.38066291809082
    8. '[' → logprob: -19.38066291809082
    9. '```' → logprob: -20.13066291809082
    10. ' ' → logprob: -20.75566291809082

Token 539: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7014437364414334e-05
    2. '[S' → logprob: -11.12502670288086
    3. '[List' → logprob: -12.00002670288086
    4. '[list' → logprob: -12.50002670288086
    5. ' [' → logprob: -13.37502670288086
    6. '[L' → logprob: -14.37502670288086
    7. '[str' → logprob: -16.50002670288086
    8. '[String' → logprob: -16.50002670288086
    9. '[line' → logprob: -17.37502670288086
    10. '[[' → logprob: -17.75002670288086

Token 540: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -1.9361264946837764e-07
    2. ' LS' → logprob: -16.125
    3. 'L' → logprob: -21.25
    4. 'ls' → logprob: -22.125
    5. 'S' → logprob: -22.625
    6. '
' → logprob: -23.0
    7. '[' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. '(' → logprob: -24.625
    10. 'LC' → logprob: -24.75

Token 541: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013516645412892103
    2. '(' → logprob: -7.376351833343506
    3. '()' → logprob: -7.376351833343506
    4. '(i' → logprob: -9.376351356506348
    5. 'for' → logprob: -11.376351356506348
    6. ' (' → logprob: -13.501351356506348
    7. 'n' → logprob: -14.376351356506348
    8. ')' → logprob: -15.126351356506348
    9. ' for' → logprob: -15.876351356506348
    10. '()(' → logprob: -16.376352310180664

Token 542: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015652115689590573
    2. 'for' → logprob: -6.501564979553223
    3. '(' → logprob: -10.376564979553223
    4. ' for' → logprob: -10.626564979553223
    5. '(i' → logprob: -12.376564979553223
    6. ' (' → logprob: -12.876564979553223
    7. '(for' → logprob: -14.876564979553223
    8. 'n' → logprob: -15.001564979553223
    9. ')' → logprob: -16.87656593322754
    10. '((' → logprob: -18.50156593322754

Token 543: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005539863486774266
    2. ' i' → logprob: -7.500554084777832
    3. '_' → logprob: -14.000554084777832
    4. '_i' → logprob: -15.375554084777832
    5. ' _' → logprob: -17.375553131103516
    6. 'n' → logprob: -18.750553131103516
    7. ' in' → logprob: -19.000553131103516
    8. ' ' → logprob: -19.500553131103516
    9. 'in' → logprob: -19.625553131103516
    10. '(i' → logprob: -19.875553131103516

Token 544: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11311500519514084
    2. 'in' → logprob: -2.238115072250366
    3. '(' → logprob: -8.613115310668945
    4. '(n' → logprob: -10.488115310668945
    5. ' i' → logprob: -10.988115310668945
    6. 'n' → logprob: -10.988115310668945
    7. '_' → logprob: -11.238115310668945
    8. ' ' → logprob: -11.738115310668945
    9. 'range' → logprob: -11.988115310668945
    10. ' (' → logprob: -12.113115310668945

Token 545: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009162207134068012
    2. ' range' → logprob: -7.000916004180908
    3. '(range' → logprob: -12.250916481018066
    4. '(n' → logprob: -17.75091552734375
    5. 'rang' → logprob: -18.37591552734375
    6. 'n' → logprob: -18.87591552734375
    7. 'in' → logprob: -19.12591552734375
    8. '	range' → logprob: -19.75091552734375
    9. '(' → logprob: -19.87591552734375
    10. '
' → logprob: -20.50091552734375

Token 546: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5761269330978394
    2. 'n' → logprob: -0.8261269330978394
    3. '(' → logprob: -8.701127052307129
    4. '(
' → logprob: -11.701127052307129
    5. ' n' → logprob: -11.826127052307129
    6. ')n' → logprob: -13.326127052307129
    7. ' (' → logprob: -13.451127052307129
    8. ')' → logprob: -14.701127052307129
    9. 'range' → logprob: -14.951127052307129
    10. '	n' → logprob: -15.076127052307129

Token 547: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.466968650580384e-05
    2. ']' → logprob: -10.125054359436035
    3. ')]
' → logprob: -11.750054359436035
    4. ')' → logprob: -12.375054359436035
    5. '()]' → logprob: -13.375054359436035
    6. '')]' → logprob: -15.625054359436035
    7. ')]
' → logprob: -15.625054359436035
    8. ')]

' → logprob: -16.37505531311035
    9. '(n' → logprob: -16.37505531311035
    10. '   ' → logprob: -16.50005531311035

Token 548: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07575708627700806
    2. '
' → logprob: -3.2007570266723633
    3. '

' → logprob: -3.7007570266723633
    4. '#' → logprob: -5.450757026672363
    5. '\n' → logprob: -6.325757026672363
    6. '\' → logprob: -7.825757026672363
    7. '


' → logprob: -8.200757026672363
    8. '<|end|>' → logprob: -8.575757026672363
    9. 'n' → logprob: -9.325757026672363
    10. 'class' → logprob: -9.450757026672363

Token 549: ' SR' (ID: 30704)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007494816090911627
    2. ' main' → logprob: -5.632494926452637
    3. 'print' → logprob: -6.257494926452637
    4. 'G' → logprob: -7.882494926452637
    5. 'max' → logprob: -8.382494926452637
    6. 'debug' → logprob: -8.757494926452637
    7. 'input' → logprob: -9.132494926452637
    8. 'default' → logprob: -9.132494926452637
    9. 'dfs' → logprob: -9.257494926452637
    10. 'count' → logprob: -9.382494926452637

Token 550: 'L' (ID: 43)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.39615398645401
    2. '(n' → logprob: -1.6461539268493652
    3. '(' → logprob: -2.0211539268493652
    4. 'r' → logprob: -7.021153926849365
    5. 'n' → logprob: -7.771153926849365
    6. '()' → logprob: -8.646154403686523
    7. 'S' → logprob: -10.146154403686523
    8. ')' → logprob: -10.521154403686523
    9. 'def' → logprob: -10.521154403686523
    10. 's' → logprob: -10.521154403686523

Token 551: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.065608562901616e-05
    2. '(' → logprob: -9.500081062316895
    3. 'def' → logprob: -12.750081062316895
    4. ' (' → logprob: -13.750081062316895
    5. '(N' → logprob: -14.875081062316895
    6. '():' → logprob: -15.125081062316895
    7. '()' → logprob: -15.500081062316895
    8. 'R' → logprob: -15.500081062316895
    9. '():
' → logprob: -16.250080108642578
    10. 'n' → logprob: -16.625080108642578

Token 552: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10340997576713562
    2. '(n' → logprob: -2.603410005569458
    3. '):
' → logprob: -3.728410005569458
    4. ')' → logprob: -8.853409767150879
    5. 'n' → logprob: -10.728409767150879
    6. '):
' → logprob: -11.728409767150879
    7. ' ):' → logprob: -12.728409767150879
    8. 'def' → logprob: -12.853409767150879
    9. ':' → logprob: -13.103409767150879
    10. '=' → logprob: -13.478409767150879

Token 553: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014336821623146534
    2. '(' → logprob: -6.876433849334717
    3. 'def' → logprob: -8.126433372497559
    4. '(
' → logprob: -9.376433372497559
    5. 'n' → logprob: -11.501433372497559
    6. ':' → logprob: -12.001433372497559
    7. '   ' → logprob: -13.001433372497559
    8. '(def' → logprob: -14.501433372497559
    9. ' def' → logprob: -14.626433372497559
    10. '[n' → logprob: -15.751433372497559

Token 554: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08469139039516449
    2. '(n' → logprob: -3.084691286087036
    3. '   ' → logprob: -4.084691524505615
    4. 'n' → logprob: -4.584691524505615
    5. ' def' → logprob: -5.334691524505615
    6. '[
' → logprob: -6.709691524505615
    7. '[n' → logprob: -7.334691524505615
    8. 'return' → logprob: -7.334691524505615
    9. ':
' → logprob: -8.084691047668457
    10. '(
' → logprob: -8.959691047668457

Token 555: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.30669891834259033
    2. 'def' → logprob: -1.8066989183425903
    3. '   ' → logprob: -2.306698799133301
    4. '"""' → logprob: -8.5566987991333
    5. '"
' → logprob: -9.0566987991333
    6. '"' → logprob: -11.8066987991333
    7. ' def' → logprob: -11.8066987991333
    8. '"""
' → logprob: -12.3066987991333
    9. ''''
' → logprob: -12.8066987991333
    10. '  ' → logprob: -12.8066987991333

Token 556: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.18239565193653107
    2. '   ' → logprob: -1.9323956966400146
    3. 'def' → logprob: -3.9323956966400146
    4. '"""' → logprob: -6.6823954582214355
    5. '
' → logprob: -7.9323954582214355
    6. '(
' → logprob: -8.557395935058594
    7. ' ' → logprob: -9.182395935058594
    8. ''''
' → logprob: -9.557395935058594
    9. '"
' → logprob: -9.807395935058594
    10. '"' → logprob: -9.932395935058594

Token 557: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.049437541514635086
    2. '(n' → logprob: -3.0494375228881836
    3. ' n' → logprob: -7.424437522888184
    4. '[n' → logprob: -8.299437522888184
    5. '	n' → logprob: -13.549437522888184
    6. 'int' → logprob: -14.424437522888184
    7. 's' → logprob: -14.424437522888184
    8. 'def' → logprob: -14.674437522888184
    9. ',n' → logprob: -15.424437522888184
    10. '[' → logprob: -15.549437522888184

Token 558: ' chaînes' (ID: 179904)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6971818208694458
    2. 'lines' → logprob: -1.8221818208694458
    3. ' lines' → logprob: -2.1971817016601562
    4. ' lignes' → logprob: -2.9471817016601562
    5. 's' → logprob: -3.4471817016601562
    6. 'l' → logprob: -3.6971817016601562
    7. '(str' → logprob: -3.8221817016601562
    8. 'n' → logprob: -4.197181701660156
    9. '(' → logprob: -4.572181701660156
    10. 'str' → logprob: -5.197181701660156

Token 559: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34530389308929443
    2. '(n' → logprob: -2.095304012298584
    3. ' de' → logprob: -2.345304012298584
    4. 'def' → logprob: -3.470304012298584
    5. 'de' → logprob: -3.970304012298584
    6. '_de' → logprob: -5.095304012298584
    7. '_' → logprob: -5.345304012298584
    8. 's' → logprob: -5.720304012298584
    9. '[' → logprob: -5.970304012298584
    10. '()' → logprob: -6.720304012298584

Token 560: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.171784445643425
    2. 'n' → logprob: -2.4217844009399414
    3. '   ' → logprob: -4.171784400939941
    4. '[]' → logprob: -4.421784400939941
    5. '<|end|>' → logprob: -4.921784400939941
    6. '[
' → logprob: -5.171784400939941
    7. ' n' → logprob: -5.796784400939941
    8. '
' → logprob: -5.796784400939941
    9. 's' → logprob: -5.796784400939941
    10. ')' → logprob: -5.921784400939941

Token 561: ' les' (ID: 1341)
  Prédit: ' leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -1.2540582418441772
    2. 'return' → logprob: -1.3790582418441772
    3. ' leur' → logprob: -2.129058361053467
    4. '[' → logprob: -2.129058361053467
    5. ' [' → logprob: -2.754058361053467
    6. ' return' → logprob: -3.504058361053467
    7. ' retourne' → logprob: -3.754058361053467
    8. '   ' → logprob: -4.379058361053467
    9. '[
' → logprob: -4.754058361053467
    10. ' returns' → logprob: -4.754058361053467

Token 562: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44397932291030884
    2. 'ret' → logprob: -1.568979263305664
    3. 'split' → logprob: -2.568979263305664
    4. 'les' → logprob: -4.693979263305664
    5. 'spl' → logprob: -4.818979263305664
    6. 'div' → logprob: -5.068979263305664
    7. 'returns' → logprob: -5.193979263305664
    8. 'tr' → logprob: -5.318979263305664
    9. 'range' → logprob: -5.443979263305664
    10. 's' → logprob: -5.443979263305664

Token 563: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.000676096766255796
    2. 'ies' → logprob: -7.875676155090332
    3. '
' → logprob: -10.000676155090332
    4. '```' → logprob: -10.250676155090332
    5. '[it' → logprob: -10.250676155090332
    6. 'i' → logprob: -10.375676155090332
    7. '_it' → logprob: -10.625676155090332
    8. 'is' → logprob: -10.750676155090332
    9. '"""
' → logprob: -10.875676155090332
    10. '"""' → logprob: -11.625676155090332

Token 564: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0295586585998535
    2. ' =' → logprob: -1.1545586585998535
    3. 'def' → logprob: -2.4045586585998535
    4. '[:]' → logprob: -2.7795586585998535
    5. '   ' → logprob: -3.0295586585998535
    6. '()' → logprob: -3.1545586585998535
    7. '=' → logprob: -3.6545586585998535
    8. '[]' → logprob: -4.0295586585998535
    9. '[
' → logprob: -4.7795586585998535
    10. 'en' → logprob: -5.2795586585998535

Token 565: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5858830213546753
    2. 'lower' → logprob: -1.7108830213546753
    3. 'str' → logprob: -1.9608830213546753
    4. '[str' → logprob: -3.085883140563965
    5. 'liste' → logprob: -3.585883140563965
    6. 'lists' → logprob: -4.210883140563965
    7. 'strings' → logprob: -5.085883140563965
    8. 'rstrip' → logprob: -5.460883140563965
    9. 's' → logprob: -5.710883140563965
    10. ' list' → logprob: -5.835883140563965

Token 566: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.654057502746582
    2. '[str' → logprob: -1.654057502746582
    3. 'def' → logprob: -2.154057502746582
    4. '()
' → logprob: -2.279057502746582
    5. 'de' → logprob: -2.404057502746582
    6. ' de' → logprob: -2.904057502746582
    7. '   ' → logprob: -3.154057502746582
    8. '[' → logprob: -3.404057502746582
    9. 's' → logprob: -3.654057502746582
    10. '(
' → logprob: -3.779057502746582

Token 567: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5533303022384644
    2. 'car' → logprob: -0.9283303022384644
    3. 'chars' → logprob: -4.303330421447754
    4. 'list' → logprob: -4.678330421447754
    5. 'char' → logprob: -5.303330421447754
    6. 'int' → logprob: -7.803330421447754
    7. ' caractères' → logprob: -7.803330421447754
    8. 'tokens' → logprob: -8.178330421447754
    9. 'strings' → logprob: -8.178330421447754
    10. '```' → logprob: -8.553330421447754

Token 568: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003592825261875987
    2. 'def' → logprob: -6.0035929679870605
    3. '(' → logprob: -7.1285929679870605
    4. '   ' → logprob: -8.253592491149902
    5. '(
' → logprob: -10.503592491149902
    6. 's' → logprob: -11.878592491149902
    7. ' (' → logprob: -12.128592491149902
    8. '.' → logprob: -12.503592491149902
    9. '(s' → logprob: -13.128592491149902
    10. ',' → logprob: -13.378592491149902

Token 569: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5309785008430481
    2. 'def' → logprob: -1.2809784412384033
    3. '   ' → logprob: -2.0309784412384033
    4. '(' → logprob: -6.155978679656982
    5. '(
' → logprob: -7.905978679656982
    6. ' def' → logprob: -8.530978202819824
    7. '```' → logprob: -9.405978202819824
    8. ':' → logprob: -9.905978202819824
    9. ':
' → logprob: -10.280978202819824
    10. '(def' → logprob: -10.405978202819824

Token 570: ' Args' (ID: 39185)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13612304627895355
    2. 'def' → logprob: -2.136122941970825
    3. '   ' → logprob: -4.761123180389404
    4. ':
' → logprob: -8.636122703552246
    5. '(' → logprob: -9.011122703552246
    6. '(
' → logprob: -9.136122703552246
    7. ':' → logprob: -9.136122703552246
    8. ' def' → logprob: -10.511122703552246
    9. '(def' → logprob: -11.136122703552246
    10. '```' → logprob: -11.511122703552246

Token 571: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13425610959529877
    2. 'def' → logprob: -2.13425612449646
    3. '   ' → logprob: -5.259255886077881
    4. '(' → logprob: -7.259255886077881
    5. '(
' → logprob: -7.384255886077881
    6. '(def' → logprob: -8.384256362915039
    7. ':' → logprob: -8.759256362915039
    8. '(defun' → logprob: -9.509256362915039
    9. '       ' → logprob: -10.009256362915039
    10. ' def' → logprob: -10.259256362915039

Token 572: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07967684417963028
    2. '   ' → logprob: -2.579676866531372
    3. '(n' → logprob: -8.454676628112793
    4. ' def' → logprob: -8.579676628112793
    5. '
' → logprob: -8.829676628112793
    6. 'n' → logprob: -8.829676628112793
    7. '       ' → logprob: -9.454676628112793
    8. '    ' → logprob: -11.829676628112793
    9. '	def' → logprob: -13.454676628112793
    10. '(
' → logprob: -13.704676628112793

Token 573: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002062830375507474
    2. ' n' → logprob: -6.252062797546387
    3. '   ' → logprob: -9.127062797546387
    4. 'def' → logprob: -10.752062797546387
    5. '	n' → logprob: -12.627062797546387
    6. '```' → logprob: -15.127062797546387
    7. '(n' → logprob: -15.377062797546387
    8. ' def' → logprob: -15.877062797546387
    9. '       ' → logprob: -16.252063751220703
    10. '
' → logprob: -16.377063751220703

Token 574: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.27367284893989563
    2. ':' → logprob: -2.3986728191375732
    3. ')' → logprob: -2.6486728191375732
    4. '):' → logprob: -3.1486728191375732
    5. '(int' → logprob: -4.148673057556152
    6. '):
' → logprob: -4.523673057556152
    7. '   ' → logprob: -5.898673057556152
    8. ' (' → logprob: -6.148673057556152
    9. ':int' → logprob: -6.648673057556152
    10. '(' → logprob: -7.273673057556152

Token 575: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.750000953674316
    4. ' int' → logprob: -17.125
    5. '[int' → logprob: -17.375
    6. '(int' → logprob: -17.5
    7. ':int' → logprob: -17.625
    8. ')' → logprob: -18.0
    9. '):
' → logprob: -19.25
    10. '):' → logprob: -19.375

Token 576: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01580054499208927
    2. '):
' → logprob: -4.390800476074219
    3. ':' → logprob: -6.015800476074219
    4. ')' → logprob: -7.140800476074219
    5. '   ' → logprob: -10.640800476074219
    6. '):

' → logprob: -11.140800476074219
    7. '):
' → logprob: -12.265800476074219
    8. 'def' → logprob: -13.015800476074219
    9. 'int' → logprob: -13.265800476074219
    10. ':int' → logprob: -13.390800476074219

Token 577: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03257524222135544
    2. '   ' → logprob: -4.1575751304626465
    3. 'def' → logprob: -4.5325751304626465
    4. '       ' → logprob: -5.9075751304626465
    5. 'return' → logprob: -7.0325751304626465
    6. '
' → logprob: -7.1575751304626465
    7. 'n' → logprob: -7.5325751304626465
    8. ' int' → logprob: -8.907575607299805
    9. '(int' → logprob: -9.032575607299805
    10. '[int' → logprob: -9.157575607299805

Token 578: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20394495129585266
    2. ':' → logprob: -2.4539449214935303
    3. ')' → logprob: -3.5789449214935303
    4. '):
' → logprob: -4.453945159912109
    5. '=' → logprob: -4.578945159912109
    6. '=n' → logprob: -4.578945159912109
    7. '):' → logprob: -4.828945159912109
    8. '=int' → logprob: -4.953945159912109
    9. ')n' → logprob: -5.453945159912109
    10. '   ' → logprob: -5.453945159912109

Token 579: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3715529143810272
    2. 'l' → logprob: -1.3715529441833496
    3. '(n' → logprob: -3.7465529441833496
    4. 'n' → logprob: -4.74655294418335
    5. ' lignes' → logprob: -4.99655294418335
    6. '):' → logprob: -5.12155294418335
    7. '(lines' → logprob: -5.87155294418335
    8. ')' → logprob: -5.87155294418335
    9. '):
' → logprob: -6.62155294418335
    10. 'int' → logprob: -6.62155294418335

Token 580: ' à' (ID: 1221)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16483499109745026
    2. '   ' → logprob: -2.164834976196289
    3. '):' → logprob: -3.789834976196289
    4. ')' → logprob: -5.539834976196289
    5. ':
' → logprob: -5.539834976196289
    6. ':' → logprob: -5.664834976196289
    7. 'def' → logprob: -6.664834976196289
    8. '(n' → logprob: -7.164834976196289
    9. '):
' → logprob: -8.414834976196289
    10. '():
' → logprob: -9.039834976196289

Token 581: ' lire' (ID: 46082)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.002382188104093075
    2. ' lire' → logprob: -6.377382278442383
    3. ' read' → logprob: -7.877382278442383
    4. 'l' → logprob: -8.627382278442383
    5. 'write' → logprob: -10.502382278442383
    6. 'Lire' → logprob: -10.627382278442383
    7. 'r' → logprob: -10.752382278442383
    8. '_read' → logprob: -11.127382278442383
    9. '```' → logprob: -12.502382278442383
    10. '読む' → logprob: -12.502382278442383

Token 582: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03622662276029587
    2. '   ' → logprob: -3.911226511001587
    3. '):' → logprob: -4.286226749420166
    4. ')' → logprob: -6.911226749420166
    5. '):
' → logprob: -7.786226749420166
    6. 'def' → logprob: -8.661226272583008
    7. '(n' → logprob: -9.286226272583008
    8. '
' → logprob: -9.911226272583008
    9. ')
' → logprob: -10.411226272583008
    10. '"):
' → logprob: -11.161226272583008

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.921253225300461e-05
    2. '"""
' → logprob: -10.250069618225098
    3. 'def' → logprob: -10.500069618225098
    4. '"""' → logprob: -13.000069618225098
    5. '       ' → logprob: -14.250069618225098
    6. '
' → logprob: -14.375069618225098
    7. '  ' → logprob: -14.500069618225098
    8. '    ' → logprob: -14.500069618225098
    9. ')' → logprob: -14.500069618225098
    10. '```' → logprob: -14.750069618225098

Token 584: ' Returns' (ID: 9609)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.6105748414993286
    2. '   ' → logprob: -0.8605748414993286
    3. 'def' → logprob: -3.485574722290039
    4. ')
' → logprob: -6.360574722290039
    5. '):
' → logprob: -7.485574722290039
    6. 'return' → logprob: -7.985574722290039
    7. ')' → logprob: -8.235574722290039
    8. '"""' → logprob: -8.735574722290039
    9. '
' → logprob: -8.860574722290039
    10. ''''
' → logprob: -9.360574722290039

Token 585: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8080264329910278
    2. '[' → logprob: -1.8080264329910278
    3. '[
' → logprob: -1.9330264329910278
    4. '[List' → logprob: -2.6830263137817383
    5. '[list' → logprob: -2.9330263137817383
    6. ' [' → logprob: -2.9330263137817383
    7. ' =' → logprob: -3.3080263137817383
    8. 'def' → logprob: -4.933026313781738
    9. '=' → logprob: -4.933026313781738
    10. ' [
' → logprob: -5.308026313781738

Token 586: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033117424696683884
    2. '[' → logprob: -4.408117294311523
    3. ' [' → logprob: -4.658117294311523
    4. '[list' → logprob: -5.658117294311523
    5. '[
' → logprob: -5.783117294311523
    6. '[List' → logprob: -6.533117294311523
    7. '[line' → logprob: -7.158117294311523
    8. '[n' → logprob: -7.783117294311523
    9. '[s' → logprob: -8.158117294311523
    10. '[S' → logprob: -8.408117294311523

Token 587: ' list' (ID: 1562)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.37166377902030945
    2. '[list' → logprob: -1.6216638088226318
    3. '[' → logprob: -2.621663808822632
    4. '[List' → logprob: -3.871663808822632
    5. ' [' → logprob: -4.871663570404053
    6. '[str' → logprob: -5.746663570404053
    7. '[line' → logprob: -5.871663570404053
    8. '[s' → logprob: -5.996663570404053
    9. '[L' → logprob: -6.746663570404053
    10. '[i' → logprob: -7.371663570404053

Token 588: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.10648709535598755
    2. '[List' → logprob: -2.6064870357513428
    3. '[str' → logprob: -3.6064870357513428
    4. '[' → logprob: -10.356487274169922
    5. '[int' → logprob: -11.856487274169922
    6. 'of' → logprob: -11.856487274169922
    7. '[[' → logprob: -11.981487274169922
    8. '(list' → logprob: -12.106487274169922
    9. 'list' → logprob: -12.356487274169922
    10. '[
' → logprob: -12.481487274169922

Token 589: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.008129963040119e-06
    2. 'str' → logprob: -13.000003814697266
    3. '[
' → logprob: -14.500003814697266
    4. '[int' → logprob: -14.625003814697266
    5. '<char' → logprob: -15.250003814697266
    6. '```' → logprob: -15.875003814697266
    7. '[' → logprob: -16.000003814697266
    8. '
' → logprob: -16.750003814697266
    9. '[list' → logprob: -17.000003814697266
    10. '(str' → logprob: -17.500003814697266

Token 590: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.35813024640083313
    2. ']]:
' → logprob: -1.2331302165985107
    3. ']' → logprob: -5.35813045501709
    4. ']:' → logprob: -5.98313045501709
    5. ']:
' → logprob: -6.60813045501709
    6. ']]]' → logprob: -7.98313045501709
    7. ']]
' → logprob: -8.73313045501709
    8. '()]' → logprob: -8.85813045501709
    9. '()' → logprob: -8.98313045501709
    10. '(n' → logprob: -9.73313045501709

Token 591: ':' (ID: 25)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0570366196334362
    2. '   ' → logprob: -3.4320366382598877
    3. 'def' → logprob: -3.9320366382598877
    4. '
' → logprob: -6.932036399841309
    5. '[' → logprob: -7.682036399841309
    6. '(S' → logprob: -7.682036399841309
    7. '[n' → logprob: -7.932036399841309
    8. ']' → logprob: -8.557036399841309
    9. '(
' → logprob: -8.807036399841309
    10. 'SR' → logprob: -8.807036399841309

Token 592: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8241108655929565
    2. 'return' → logprob: -1.5741108655929565
    3. '[str' → logprob: -2.199110984802246
    4. '[S' → logprob: -2.199110984802246
    5. ' return' → logprob: -3.324110984802246
    6. '[' → logprob: -3.449110984802246
    7. '[List' → logprob: -3.824110984802246
    8. '[
' → logprob: -4.199110984802246
    9. ' [' → logprob: -5.074110984802246
    10. '[s' → logprob: -5.324110984802246

Token 593: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.013408324681222439
    2. '[
' → logprob: -5.638408184051514
    3. '[int' → logprob: -6.263408184051514
    4. ' of' → logprob: -6.388408184051514
    5. '[list' → logprob: -6.388408184051514
    6. '[List' → logprob: -6.638408184051514
    7. ' de' → logprob: -7.513408184051514
    8. '[' → logprob: -7.763408184051514
    9. 'of' → logprob: -7.763408184051514
    10. '
' → logprob: -7.763408184051514

Token 594: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.609831690788269
    2. '[str' → logprob: -1.109831690788269
    3. 'lists' → logprob: -2.3598318099975586
    4. 'str' → logprob: -3.9848318099975586
    5. '[list' → logprob: -4.609831809997559
    6. '[' → logprob: -6.859831809997559
    7. '[S' → logprob: -7.359831809997559
    8. ' list' → logprob: -7.484831809997559
    9. ' lists' → logprob: -7.859831809997559
    10. ' listes' → logprob: -7.984831809997559

Token 595: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0012086842907592654
    2. '[' → logprob: -8.126208305358887
    3. '[list' → logprob: -8.501208305358887
    4. ' of' → logprob: -8.751208305358887
    5. '[
' → logprob: -9.126208305358887
    6. 'of' → logprob: -9.126208305358887
    7. '(str' → logprob: -9.376208305358887
    8. '[List' → logprob: -9.751208305358887
    9. '[int' → logprob: -10.126208305358887
    10. ']' → logprob: -10.251208305358887

Token 596: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4695613980293274
    2. 'chars' → logprob: -1.7195613384246826
    3. '[str' → logprob: -1.9695613384246826
    4. 'car' → logprob: -3.5945613384246826
    5. ' caractères' → logprob: -4.344561576843262
    6. 'char' → logprob: -4.844561576843262
    7. ' str' → logprob: -5.844561576843262
    8. 'characters' → logprob: -6.594561576843262
    9. 'list' → logprob: -6.719561576843262
    10. ' chars' → logprob: -7.469561576843262

Token 597: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10262453556060791
    2. ']' → logprob: -3.2276244163513184
    3. '   ' → logprob: -3.6026244163513184
    4. ']
' → logprob: -4.227624416351318
    5. '(
' → logprob: -5.102624416351318
    6. 'def' → logprob: -5.227624416351318
    7. '
' → logprob: -6.477624416351318
    8. '(' → logprob: -6.977624416351318
    9. '](' → logprob: -7.227624416351318
    10. 'for' → logprob: -8.352624893188477

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01594802923500538
    2. '(n' → logprob: -4.7659478187561035
    3. 'def' → logprob: -5.5159478187561035
    4. '```' → logprob: -7.1409478187561035
    5. ']' → logprob: -7.5159478187561035
    6. ')' → logprob: -7.6409478187561035
    7. '(' → logprob: -7.8909478187561035
    8. '(
' → logprob: -8.265948295593262
    9. '"""
' → logprob: -8.390948295593262
    10. '<|end|>' → logprob: -9.265948295593262

Token 599: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.2982713282108307
    2. '   ' → logprob: -1.4232712984085083
    3. '"""' → logprob: -4.548271179199219
    4. '```' → logprob: -5.673271179199219
    5. 'def' → logprob: -6.048271179199219
    6. ']' → logprob: -8.298271179199219
    7. ''''
' → logprob: -9.423271179199219
    8. '  ' → logprob: -10.048271179199219
    9. ' """
' → logprob: -10.173271179199219
    10. ']
' → logprob: -10.173271179199219

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.126521035796031e-05
    2. 'return' → logprob: -9.500091552734375
    3. 'def' → logprob: -11.125091552734375
    4. ' return' → logprob: -14.000091552734375
    5. '	return' → logprob: -15.000091552734375
    6. '[' → logprob: -15.750091552734375
    7. '[
' → logprob: -16.625091552734375
    8. '[]' → logprob: -16.750091552734375
    9. '```' → logprob: -16.875091552734375
    10. '       ' → logprob: -17.500091552734375

Token 601: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00024263552040793002
    2. ' return' → logprob: -8.750242233276367
    3. 'def' → logprob: -9.750242233276367
    4. '   ' → logprob: -10.875242233276367
    5. '[S' → logprob: -12.500242233276367
    6. '[
' → logprob: -13.750242233276367
    7. '
' → logprob: -14.000242233276367
    8. '[' → logprob: -14.125242233276367
    9. '```' → logprob: -15.125242233276367
    10. '	return' → logprob: -16.625242233276367

Token 602: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.5761767625808716
    2. '[' → logprob: -0.8261767625808716
    3. ' [' → logprob: -9.451176643371582
    4. '[list' → logprob: -9.701176643371582
    5. '[List' → logprob: -9.951176643371582
    6. '[L' → logprob: -10.326176643371582
    7. '[str' → logprob: -12.201176643371582
    8. '[[' → logprob: -12.201176643371582
    9. '[String' → logprob: -12.326176643371582
    10. '[s' → logprob: -14.326176643371582

Token 603: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0802738870552275e-05
    2. '[list' → logprob: -11.50001049041748
    3. '(list' → logprob: -15.37501049041748
    4. ' list' → logprob: -15.87501049041748
    5. '[S' → logprob: -16.375011444091797
    6. '
' → logprob: -16.500011444091797
    7. 'S' → logprob: -17.750011444091797
    8. '[' → logprob: -18.750011444091797
    9. '=list' → logprob: -19.750011444091797
    10. '```' → logprob: -19.875011444091797

Token 604: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.000007629394531
    3. 'S' → logprob: -13.750007629394531
    4. '(s' → logprob: -14.375007629394531
    5. '()' → logprob: -16.75000762939453
    6. '(str' → logprob: -17.12500762939453
    7. '(sys' → logprob: -17.75000762939453
    8. '(
' → logprob: -18.37500762939453
    9. '((' → logprob: -18.62500762939453
    10. 's' → logprob: -18.87500762939453

Token 605: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20162928104400635
    2. '())' → logprob: -1.7016292810440063
    3. '()
' → logprob: -9.451629638671875
    4. '()]' → logprob: -9.451629638671875
    5. '().' → logprob: -10.826629638671875
    6. '()[' → logprob: -11.951629638671875
    7. ')' → logprob: -12.076629638671875
    8. '()`' → logprob: -12.076629638671875
    9. '())
' → logprob: -12.326629638671875
    10. ' ()' → logprob: -12.701629638671875

Token 606: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22869016230106354
    2. ' for' → logprob: -1.9786901473999023
    3. '()' → logprob: -3.1036901473999023
    4. '(n' → logprob: -3.8536901473999023
    5. '(' → logprob: -10.353690147399902
    6. ')' → logprob: -10.853690147399902
    7. '   ' → logprob: -10.853690147399902
    8. '(i' → logprob: -11.728690147399902
    9. '	for' → logprob: -12.853690147399902
    10. 'n' → logprob: -13.228690147399902

Token 607: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012581822462379932
    2. '_' → logprob: -4.512581825256348
    3. ' i' → logprob: -6.512581825256348
    4. '_i' → logprob: -10.012581825256348
    5. ' _' → logprob: -12.762581825256348
    6. 'range' → logprob: -15.512581825256348
    7. ' in' → logprob: -15.512581825256348
    8. 'in' → logprob: -16.88758087158203
    9. '
' → logprob: -17.51258087158203
    10. ' range' → logprob: -17.63758087158203

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22570429742336273
    2. 'in' → logprob: -1.600704312324524
    3. '(n' → logprob: -9.225704193115234
    4. 'n' → logprob: -9.350704193115234
    5. 'range' → logprob: -9.600704193115234
    6. '(' → logprob: -11.225704193115234
    7. ' i' → logprob: -11.725704193115234
    8. ' range' → logprob: -12.475704193115234
    9. ' ' → logprob: -12.475704193115234
    10. '_' → logprob: -12.975704193115234

Token 609: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -20.000158309936523
    4. 'in' → logprob: -22.250158309936523
    5. '	range' → logprob: -22.250158309936523
    6. '_range' → logprob: -22.750158309936523
    7. '
' → logprob: -22.750158309936523
    8. 'Range' → logprob: -23.250158309936523
    9. '_' → logprob: -23.250158309936523
    10. 'rang' → logprob: -23.375158309936523

Token 610: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3964405953884125
    2. '(n' → logprob: -1.1464406251907349
    3. '(range' → logprob: -4.896440505981445
    4. ' range' → logprob: -6.271440505981445
    5. 'n' → logprob: -8.896440505981445
    6. '(' → logprob: -10.771440505981445
    7. 'in' → logprob: -13.646440505981445
    8. ' (' → logprob: -14.146440505981445
    9. '	range' → logprob: -15.021440505981445
    10. ' in' → logprob: -15.146440505981445

Token 611: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002736138121690601
    2. ')' → logprob: -9.000273704528809
    3. '(n' → logprob: -9.125273704528809
    4. ']' → logprob: -10.875273704528809
    5. 'n' → logprob: -11.375273704528809
    6. ')n' → logprob: -12.375273704528809
    7. ')]
' → logprob: -13.125273704528809
    8. '   ' → logprob: -13.375273704528809
    9. ' )' → logprob: -13.625273704528809
    10. '()]' → logprob: -15.000273704528809

Token 612: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1960269957780838
    2. '
' → logprob: -2.6960270404815674
    3. '<|end|>' → logprob: -2.6960270404815674
    4. '#' → logprob: -3.4460270404815674
    5. '\n' → logprob: -5.571026802062988
    6. 'class' → logprob: -5.821026802062988
    7. '<|end|>' → logprob: -6.571026802062988
    8. '\' → logprob: -6.821026802062988
    9. '```' → logprob: -8.071026802062988
    10. '

' → logprob: -8.321026802062988

Token 613: ' MS' (ID: 15861)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.17249739170074463
    2. 'input' → logprob: -3.297497272491455
    3. 'print' → logprob: -3.672497272491455
    4. 'YES' → logprob: -4.297497272491455
    5. 'WR' → logprob: -4.422497272491455
    6. 'Yes' → logprob: -5.047497272491455
    7. 'G' → logprob: -5.672497272491455
    8. 'DR' → logprob: -5.672497272491455
    9. 'Y' → logprob: -5.672497272491455
    10. 'R' → logprob: -5.797497272491455

Token 614: 'RL' (ID: 40408)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.749149739742279
    2. '()' → logprob: -1.4991497993469238
    3. '(n' → logprob: -1.9991497993469238
    4. 'R' → logprob: -2.999149799346924
    5. 'A' → logprob: -3.249149799346924
    6. '():
' → logprob: -3.499149799346924
    7. 'E' → logprob: -4.124149799346924
    8. '(' → logprob: -4.249149799346924
    9. 'P' → logprob: -5.249149799346924
    10. 'V' → logprob: -5.749149799346924

Token 615: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001305950863752514
    2. '(' → logprob: -9.000130653381348
    3. ' (' → logprob: -12.000130653381348
    4. 'def' → logprob: -14.750130653381348
    5. '(
' → logprob: -15.000130653381348
    6. 'n' → logprob: -16.50012969970703
    7. '(N' → logprob: -17.12512969970703
    8. ':' → logprob: -17.50012969970703
    9. '("("' → logprob: -18.00012969970703
    10. '(i' → logprob: -18.50012969970703

Token 616: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12139034271240234
    2. '):
' → logprob: -2.3713903427124023
    3. '(n' → logprob: -3.8713903427124023
    4. ')' → logprob: -9.496390342712402
    5. '):
' → logprob: -10.121390342712402
    6. 'n' → logprob: -11.621390342712402
    7. 'def' → logprob: -12.871390342712402
    8. '):

' → logprob: -13.496390342712402
    9. '=' → logprob: -13.871390342712402
    10. ':' → logprob: -14.621390342712402

Token 617: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003658983623608947
    2. 'def' → logprob: -5.753658771514893
    3. ':' → logprob: -8.50365924835205
    4. '(' → logprob: -9.25365924835205
    5. '(
' → logprob: -9.25365924835205
    6. '   ' → logprob: -10.00365924835205
    7. 'n' → logprob: -10.87865924835205
    8. ':
' → logprob: -11.75365924835205
    9. ' def' → logprob: -12.00365924835205
    10. 's' → logprob: -13.25365924835205

Token 618: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034015171229839325
    2. '(n' → logprob: -4.28401517868042
    3. '   ' → logprob: -4.65901517868042
    4. '"""
' (adapté à ' """
') → logprob: -4.90901517868042
    5. ' def' → logprob: -7.40901517868042
    6. 'n' → logprob: -7.40901517868042
    7. '
' → logprob: -7.40901517868042
    8. 'return' → logprob: -7.53401517868042
    9. '"
' → logprob: -9.284014701843262
    10. '[n' → logprob: -9.284014701843262

Token 619: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9919978976249695
    2. '"""
' → logprob: -0.9919978976249695
    3. '   ' → logprob: -1.3669979572296143
    4. 'return' → logprob: -6.491997718811035
    5. 'n' → logprob: -7.116997718811035
    6. ' def' → logprob: -8.116997718811035
    7. ''''
' → logprob: -8.491997718811035
    8. '"""' → logprob: -8.741997718811035
    9. '  ' → logprob: -8.991997718811035
    10. '[
' → logprob: -9.741997718811035

Token 620: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.5075365900993347
    2. 'return' → logprob: -1.7575366497039795
    3. 'def' → logprob: -1.8825366497039795
    4. '   ' → logprob: -2.7575366497039795
    5. '
' → logprob: -5.1325364112854
    6. ' return' → logprob: -6.1325364112854
    7. ''''
' → logprob: -7.2575364112854
    8. '"""' → logprob: -7.3825364112854
    9. '"
' → logprob: -9.507536888122559
    10. '"' → logprob: -9.757536888122559

Token 621: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014351891353726387
    2. ' n' → logprob: -4.389351844787598
    3. '[n' → logprob: -6.764351844787598
    4. '(n' → logprob: -7.639351844787598
    5. 'MS' → logprob: -9.764351844787598
    6. 'm' → logprob: -9.889351844787598
    7. 'list' → logprob: -10.514351844787598
    8. 'def' → logprob: -11.014351844787598
    9. ' MS' → logprob: -11.639351844787598
    10. 'ms' → logprob: -11.764351844787598

Token 622: ' chaînes' (ID: 179904)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3298541009426117
    2. 'SR' → logprob: -1.954854130744934
    3. 'S' → logprob: -3.2048540115356445
    4. 'list' → logprob: -3.9548540115356445
    5. 'strings' → logprob: -4.2048540115356445
    6. '(n' → logprob: -4.4548540115356445
    7. ' lists' → logprob: -4.9548540115356445
    8. 'sr' → logprob: -5.2048540115356445
    9. 'lists' → logprob: -5.5798540115356445
    10. 'str' → logprob: -5.5798540115356445

Token 623: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0068642012774944305
    2. 'def' → logprob: -6.006864070892334
    3. '(' → logprob: -6.756864070892334
    4. ' de' → logprob: -7.006864070892334
    5. 'de' → logprob: -7.506864070892334
    6. ' (' → logprob: -7.631864070892334
    7. '[' → logprob: -8.256864547729492
    8. 's' → logprob: -8.381864547729492
    9. '[n' → logprob: -8.631864547729492
    10. 'R' → logprob: -9.756864547729492

Token 624: ' convert' (ID: 8452)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.86687833070755
    2. 'ret' → logprob: -0.99187833070755
    3. 'return' → logprob: -2.3668782711029053
    4. 'ren' → logprob: -3.2418782711029053
    5. 'leurs' → logprob: -3.6168782711029053
    6. ' retourne' → logprob: -4.241878509521484
    7. ' leurs' → logprob: -4.491878509521484
    8. 'convert' → logprob: -4.741878509521484
    9. 'leur' → logprob: -5.366878509521484
    10. ' les' → logprob: -5.616878509521484

Token 625: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00014692598779220134
    2. ' it' → logprob: -9.875146865844727
    3. '[it' → logprob: -10.250146865844727
    4. '_it' → logprob: -10.875146865844727
    5. '   ' → logprob: -11.500146865844727
    6. '
' → logprob: -11.875146865844727
    7. '=' → logprob: -12.125146865844727
    8. '(it' → logprob: -12.125146865844727
    9. '```' → logprob: -13.375146865844727
    10. 'ит' → logprob: -13.500146865844727

Token 626: ' chaque' (ID: 21194)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.7570496797561646
    2. '(n' → logprob: -1.5070496797561646
    3. '[' → logprob: -1.7570496797561646
    4. '(list' → logprob: -2.757049560546875
    5. '[list' → logprob: -3.382049560546875
    6. ' [' → logprob: -4.257049560546875
    7. 'n' → logprob: -5.007049560546875
    8. 'list' → logprob: -5.632049560546875
    9. ' (' → logprob: -5.882049560546875
    10. '```' → logprob: -6.257049560546875

Token 627: ' caractère' (ID: 80509)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.837662935256958
    2. 'en' → logprob: -2.087662935256958
    3. 'ligne' → logprob: -2.212662935256958
    4. '(S' → logprob: -2.837662935256958
    5. '(s' → logprob: -3.337662935256958
    6. ' liste' → logprob: -3.462662935256958
    7. ' chaîne' → logprob: -3.587662935256958
    8. ' ligne' → logprob: -3.712662935256958
    9. '(' → logprob: -3.712662935256958
    10. 's' → logprob: -3.837662935256958

Token 628: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08921828866004944
    2. 's' → logprob: -3.2142183780670166
    3. '()' → logprob: -3.3392183780670166
    4. ' in' → logprob: -6.0892181396484375
    5. '(s' → logprob: -6.0892181396484375
    6. '<|end|>' → logprob: -6.7142181396484375
    7. ')' → logprob: -6.8392181396484375
    8. 'en' → logprob: -7.2142181396484375
    9. '(en' → logprob: -8.464218139648438
    10. ']' → logprob: -8.714218139648438

Token 629: ' un' (ID: 537)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.30185452103614807
    2. 'int' → logprob: -1.4268544912338257
    3. 'str' → logprob: -5.051854610443115
    4. 'ord' → logprob: -5.176854610443115
    5. 'MS' → logprob: -6.051854610443115
    6. ' list' → logprob: -6.176854610443115
    7. '[int' → logprob: -6.801854610443115
    8. 'ints' → logprob: -7.426854610443115
    9. 'S' → logprob: -7.801854610443115
    10. 'ms' → logprob: -8.176854133605957

Token 630: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.32488247752189636
    2. '[int' → logprob: -2.3248825073242188
    3. 'list' → logprob: -3.1998825073242188
    4. 'ord' → logprob: -3.3248825073242188
    5. 'ent' → logprob: -3.4498825073242188
    6. '
' → logprob: -4.074882507324219
    7. ' int' → logprob: -4.449882507324219
    8. '```' → logprob: -4.949882507324219
    9. 'str' → logprob: -5.824882507324219
    10. '   ' → logprob: -5.824882507324219

Token 631: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03804642707109451
    2. ' for' → logprob: -4.538046360015869
    3. '[' → logprob: -4.663046360015869
    4. '[i' → logprob: -5.413046360015869
    5. 's' → logprob: -5.788046360015869
    6. '(i' → logprob: -6.163046360015869
    7. '(n' → logprob: -6.413046360015869
    8. '   ' → logprob: -6.913046360015869
    9. '(' → logprob: -7.163046360015869
    10. '(ord' → logprob: -7.413046360015869

Token 632: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12853235006332397
    2. 'def' → logprob: -2.1285324096679688
    3. '   ' → logprob: -6.503532409667969
    4. ' def' → logprob: -9.753532409667969
    5. '(
' → logprob: -11.128532409667969
    6. ' (' → logprob: -11.503532409667969
    7. ':
' → logprob: -11.753532409667969
    8. '
' → logprob: -12.128532409667969
    9. '```' → logprob: -13.128532409667969
    10. '(' → logprob: -13.253532409667969

Token 633: ' Args' (ID: 39185)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3528282046318054
    2. 'def' → logprob: -1.2278282642364502
    3. '   ' → logprob: -6.102828025817871
    4. ' def' → logprob: -6.852828025817871
    5. '(' → logprob: -7.727828025817871
    6. ':
' → logprob: -8.477828025817871
    7. '(
' → logprob: -8.852828025817871
    8. '
' → logprob: -9.852828025817871
    9. '```' → logprob: -9.852828025817871
    10. ' (' → logprob: -10.352828025817871

Token 634: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001957894302904606
    2. '(' → logprob: -6.626957893371582
    3. '   ' → logprob: -8.001957893371582
    4. '(
' → logprob: -8.376957893371582
    5. 'def' → logprob: -9.876957893371582
    6. ',' → logprob: -13.001957893371582
    7. ':' → logprob: -13.126957893371582
    8. '(i' → logprob: -13.376957893371582
    9. ' (' → logprob: -13.751957893371582
    10. '(self' → logprob: -13.751957893371582

Token 635: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4066096842288971
    2. '   ' → logprob: -1.4066096544265747
    3. '(n' → logprob: -3.4066097736358643
    4. '       ' → logprob: -3.5316097736358643
    5. 'n' → logprob: -3.6566097736358643
    6. '
' → logprob: -7.781609535217285
    7. '    ' → logprob: -9.156609535217285
    8. ' def' → logprob: -9.156609535217285
    9. '	n' → logprob: -9.531609535217285
    10. ' n' → logprob: -9.906609535217285

Token 636: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -4.60414821645827e-06
    2. ' n' → logprob: -13.000004768371582
    3. 'def' → logprob: -13.375004768371582
    4. '   ' → logprob: -15.000004768371582
    5. '(n' → logprob: -15.125004768371582
    6. '```' → logprob: -16.125003814697266
    7. '
' → logprob: -17.125003814697266
    8. 'ndef' → logprob: -17.750003814697266
    9. '	n' → logprob: -17.875003814697266
    10. '[n' → logprob: -18.125003814697266

Token 637: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003381961490958929
    2. '):
' → logprob: -6.628381729125977
    3. '):' → logprob: -6.878381729125977
    4. ':' → logprob: -7.628381729125977
    5. 'def' → logprob: -8.503381729125977
    6. ')' → logprob: -8.503381729125977
    7. '(' → logprob: -10.253381729125977
    8. '   ' → logprob: -10.253381729125977
    9. ':
' → logprob: -11.128381729125977
    10. '(
' → logprob: -11.378381729125977

Token 638: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -17.0
    3. '[int' → logprob: -17.25
    4. '(int' → logprob: -17.5
    5. '
' → logprob: -17.625
    6. ':int' → logprob: -17.75
    7. '   ' → logprob: -19.0
    8. '=int' → logprob: -19.125
    9. ')' → logprob: -20.0
    10. 'n' → logprob: -20.125

Token 639: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10181748121976852
    2. '):
' → logprob: -2.3518173694610596
    3. ')' → logprob: -6.601817607879639
    4. ':' → logprob: -8.72681713104248
    5. '):
' → logprob: -9.47681713104248
    6. '(n' → logprob: -12.35181713104248
    7. '):

' → logprob: -12.60181713104248
    8. '   ' → logprob: -13.35181713104248
    9. 'n' → logprob: -14.72681713104248
    10. 'def' → logprob: -14.97681713104248

Token 640: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02967029996216297
    2. '   ' → logprob: -4.154670238494873
    3. '
' → logprob: -5.779670238494873
    4. 'n' → logprob: -5.779670238494873
    5. '       ' → logprob: -6.404670238494873
    6. 'MS' → logprob: -6.404670238494873
    7. ' int' → logprob: -6.529670238494873
    8. '(int' → logprob: -6.904670238494873
    9. '[int' → logprob: -8.529670715332031
    10. '        
' → logprob: -8.529670715332031

Token 641: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9058024287223816
    2. '(n' → logprob: -1.2808024883270264
    3. '   ' → logprob: -2.1558024883270264
    4. ':' → logprob: -2.1558024883270264
    5. '):
' → logprob: -3.5308024883270264
    6. ')' → logprob: -3.7808024883270264
    7. '):' → logprob: -4.905802249908447
    8. '=n' → logprob: -5.155802249908447
    9. 'def' → logprob: -5.280802249908447
    10. ':
' → logprob: -5.405802249908447

Token 642: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2060452550649643
    2. ' lignes' → logprob: -2.456045150756836
    3. 'l' → logprob: -2.581045150756836
    4. ' lines' → logprob: -3.831045150756836
    5. 'range' → logprob: -7.081045150756836
    6. 'ligne' → logprob: -7.081045150756836
    7. 'line' → logprob: -7.581045150756836
    8. 'int' → logprob: -8.456045150756836
    9. 'list' → logprob: -8.581045150756836
    10. ' range' → logprob: -8.831045150756836

Token 643: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8231984376907349
    2. ':' → logprob: -1.1981984376907349
    3. '):
' → logprob: -1.9481984376907349
    4. ')' → logprob: -2.5731983184814453
    5. '   ' → logprob: -3.9481983184814453
    6. '(n' → logprob: -4.448198318481445
    7. ':
' → logprob: -5.823198318481445
    8. 'n' → logprob: -6.323198318481445
    9. '
' → logprob: -6.698198318481445
    10. 'def' → logprob: -7.573198318481445

Token 644: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023968050256371498
    2. 'read' → logprob: -3.773967981338501
    3. ' range' → logprob: -7.27396821975708
    4. ' read' → logprob: -11.398967742919922
    5. 'int' → logprob: -12.023967742919922
    6. 'return' → logprob: -12.398967742919922
    7. ' lire' → logprob: -12.648967742919922
    8. '(range' → logprob: -13.648967742919922
    9. '   ' → logprob: -14.148967742919922
    10. '
' → logprob: -14.523967742919922

Token 645: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5673403739929199
    2. '(n' → logprob: -1.44234037399292
    3. '   ' → logprob: -1.69234037399292
    4. '):' → logprob: -5.19234037399292
    5. ':
' → logprob: -6.19234037399292
    6. 'def' → logprob: -6.31734037399292
    7. ')' → logprob: -6.94234037399292
    8. ':' → logprob: -7.44234037399292
    9. '
' → logprob: -7.69234037399292
    10. 'n' → logprob: -8.442340850830078

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024569829925894737
    2. 'def' → logprob: -3.8995697498321533
    3. '):
' → logprob: -6.524569988250732
    4. '(n' → logprob: -6.649569988250732
    5. ')' → logprob: -7.149569988250732
    6. '
' → logprob: -8.399569511413574
    7. '"""
' → logprob: -9.774569511413574
    8. ':
' → logprob: -10.149569511413574
    9. '```' → logprob: -10.149569511413574
    10. 'return' → logprob: -10.649569511413574

Token 647: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0684097409248352
    2. 'def' → logprob: -3.1934096813201904
    3. '
' → logprob: -3.8184096813201904
    4. 'return' → logprob: -6.0684099197387695
    5. '"""
' → logprob: -8.19340991973877
    6. '```' → logprob: -8.94340991973877
    7. ' return' → logprob: -9.81840991973877
    8. '  ' → logprob: -9.81840991973877
    9. ' def' → logprob: -9.94340991973877
    10. '    
' → logprob: -9.94340991973877

Token 648: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2142564058303833
    2. '[n' → logprob: -1.8392564058303833
    3. ' (' → logprob: -3.8392562866210938
    4. ' [' → logprob: -5.839256286621094
    5. '(
' → logprob: -6.089256286621094
    6. '   ' → logprob: -6.214256286621094
    7. '[
' → logprob: -6.214256286621094
    8. '[' → logprob: -6.464256286621094
    9. 'def' → logprob: -6.714256286621094
    10. ' [
' → logprob: -9.464256286621094

Token 649: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015667827799916267
    2. '[n' → logprob: -4.890667915344238
    3. '[' → logprob: -5.640667915344238
    4. ' [' → logprob: -5.890667915344238
    5. '[list' → logprob: -7.140667915344238
    6. '[int' → logprob: -8.015667915344238
    7. '[
' → logprob: -8.515667915344238
    8. '[List' → logprob: -9.265667915344238
    9. '    ' → logprob: -9.390667915344238
    10. 'MS' → logprob: -10.265667915344238

Token 650: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0093745868653059
    2. 'list' (adapté à ' list') → logprob: -5.259374618530273
    3. '[List' → logprob: -5.509374618530273
    4. 'return' → logprob: -10.759374618530273
    5. '[int' → logprob: -11.009374618530273
    6. '[' → logprob: -11.134374618530273
    7. 'List' → logprob: -11.384374618530273
    8. ' list' → logprob: -11.884374618530273
    9. '[
' → logprob: -12.634374618530273
    10. '[[' → logprob: -13.009374618530273

Token 651: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.024881508201360703
    2. '[List' → logprob: -3.774881601333618
    3. '[[' → logprob: -7.024881362915039
    4. '[int' → logprob: -7.524881362915039
    5. '   ' → logprob: -9.274881362915039
    6. '
' → logprob: -10.024881362915039
    7. '[
' → logprob: -10.649881362915039
    8. '[' → logprob: -10.899881362915039
    9. 'list' → logprob: -12.024881362915039
    10. '=list' → logprob: -12.274881362915039

Token 652: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.7432603272027336e-06
    2. 'int' → logprob: -13.375001907348633
    3. '<int' → logprob: -17.000001907348633
    4. '(int' → logprob: -17.625001907348633
    5. ']int' → logprob: -17.875001907348633
    6. '[List' → logprob: -18.125001907348633
    7. '[Int' → logprob: -19.750001907348633
    8. '[str' → logprob: -20.125001907348633
    9. '=int' → logprob: -20.875001907348633
    10. '[
' → logprob: -21.125001907348633

Token 653: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8045671582221985
    2. ']]' → logprob: -1.0545670986175537
    3. ')]' → logprob: -2.1795670986175537
    4. ']]:
' → logprob: -2.6795670986175537
    5. '()]' → logprob: -4.929567337036133
    6. ']):' → logprob: -5.054567337036133
    7. '])' → logprob: -5.679567337036133
    8. ']):
' → logprob: -6.429567337036133
    9. '])]' → logprob: -6.679567337036133
    10. '(n' → logprob: -7.304567337036133

Token 654: ':' (ID: 25)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2488112896680832
    2. '(S' → logprob: -1.6238112449645996
    3. 'for' → logprob: -4.9988112449646
    4. '   ' → logprob: -5.6238112449646
    5. 'def' → logprob: -5.8738112449646
    6. '[' → logprob: -5.8738112449646
    7. '(
' → logprob: -6.7488112449646
    8. ']' → logprob: -6.8738112449646
    9. '[n' → logprob: -6.8738112449646
    10. '=' → logprob: -6.9988112449646

Token 655: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6344318985939026
    2. '[list' → logprob: -1.8844318389892578
    3. '[int' → logprob: -2.009431838989258
    4. '   ' → logprob: -2.634431838989258
    5. 'return' → logprob: -3.009431838989258
    6. '[M' → logprob: -4.134431838989258
    7. ' [' → logprob: -4.259431838989258
    8. ' return' → logprob: -4.759431838989258
    9. '[List' → logprob: -4.759431838989258
    10. '[
' → logprob: -5.509431838989258

Token 656: ' de' (ID: 334)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.22057634592056274
    2. '[list' → logprob: -1.845576286315918
    3. '[List' → logprob: -3.970576286315918
    4. '[' → logprob: -4.595576286315918
    5. '[
' → logprob: -5.470576286315918
    6. '[str' → logprob: -6.470576286315918
    7. '   ' → logprob: -6.595576286315918
    8. 'of' → logprob: -6.720576286315918
    9. ' of' → logprob: -6.845576286315918
    10. '[[' → logprob: -7.470576286315918

Token 657: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018348470330238342
    2. '[list' → logprob: -4.393348693847656
    3. '[int' → logprob: -5.268348693847656
    4. 'lists' → logprob: -7.893348693847656
    5. 'int' → logprob: -9.393348693847656
    6. 'MS' → logprob: -9.518348693847656
    7. 'liste' → logprob: -10.393348693847656
    8. '[
' → logprob: -10.393348693847656
    9. '[List' → logprob: -10.643348693847656
    10. '[' → logprob: -11.018348693847656

Token 658: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.01239450741559267
    2. '[
' → logprob: -5.262394428253174
    3. '[' → logprob: -5.512394428253174
    4. '[str' → logprob: -6.637394428253174
    5. '[i' → logprob: -7.137394428253174
    6. 'of' → logprob: -8.012394905090332
    7. '[list' → logprob: -8.012394905090332
    8. 'for' → logprob: -9.387394905090332
    9. '[Int' → logprob: -10.137394905090332
    10. '[[' → logprob: -10.387394905090332

Token 659: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.008337614126503468
    2. '[' → logprob: -5.258337497711182
    3. '[str' → logprob: -6.008337497711182
    4. '(int' → logprob: -8.25833797454834
    5. ']' → logprob: -8.75833797454834
    6. '[
' → logprob: -10.75833797454834
    7. '[list' → logprob: -10.75833797454834
    8. 'int' → logprob: -10.88333797454834
    9. '[[' → logprob: -10.88333797454834
    10. 'ist' → logprob: -10.88333797454834

Token 660: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.6995161771774292
    2. 't' → logprob: -1.3245161771774292
    3. '[int' → logprob: -2.4495162963867188
    4. '[' → logprob: -3.5745162963867188
    5. 'eg' → logprob: -3.8245162963867188
    6. 'iert' → logprob: -3.8245162963867188
    7. 'i' → logprob: -3.9495162963867188
    8. 'ier' → logprob: -4.074516296386719
    9. 'er' → logprob: -4.324516296386719
    10. 'e' → logprob: -5.074516296386719

Token 661: '.
' (ID: 558)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.7826350331306458
    2. ']' → logprob: -0.9076350331306458
    3. 'for' → logprob: -2.907634973526001
    4. '   ' → logprob: -3.532634973526001
    5. '(n' → logprob: -4.40763521194458
    6. '[S' → logprob: -4.53263521194458
    7. '[i' → logprob: -5.40763521194458
    8. '(i' → logprob: -5.40763521194458
    9. '([' → logprob: -5.65763521194458
    10. ' for' → logprob: -5.90763521194458

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0906003937125206
    2. '(S' → logprob: -2.7156004905700684
    3. 'def' → logprob: -5.215600490570068
    4. '(n' → logprob: -5.215600490570068
    5. '[' → logprob: -5.965600490570068
    6. '```' → logprob: -6.090600490570068
    7. ']' → logprob: -6.840600490570068
    8. '(' → logprob: -6.965600490570068
    9. '[S' → logprob: -7.465600490570068
    10. '(
' → logprob: -8.21560001373291

Token 663: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.07396746426820755
    2. '```' → logprob: -3.323967456817627
    3. '   ' → logprob: -3.698967456817627
    4. '"""' → logprob: -5.823967456817627
    5. 'def' → logprob: -6.073967456817627
    6. ''''
' → logprob: -6.198967456817627
    7. '(n' → logprob: -7.073967456817627
    8. '("""
' → logprob: -7.698967456817627
    9. '=' → logprob: -8.198967933654785
    10. ']' → logprob: -8.323967933654785

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7954958821064793e-05
    2. 'return' → logprob: -11.125018119812012
    3. 'def' → logprob: -13.375018119812012
    4. '	return' → logprob: -14.125018119812012
    5. ' return' → logprob: -14.250018119812012
    6. '
' → logprob: -15.500018119812012
    7. '   ' → logprob: -16.750017166137695
    8. '```' → logprob: -17.375017166137695
    9. '       ' → logprob: -17.750017166137695
    10. '{return' → logprob: -18.250017166137695

Token 665: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008657260332256556
    2. ' return' → logprob: -7.750865936279297
    3. '   ' → logprob: -7.750865936279297
    4. '
' → logprob: -13.125865936279297
    5. 'def' → logprob: -13.125865936279297
    6. '	return' → logprob: -14.625865936279297
    7. '```' → logprob: -16.375865936279297
    8. 'MS' → logprob: -17.750865936279297
    9. '{return' → logprob: -17.875865936279297
    10. ':return' → logprob: -18.125865936279297

Token 666: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20436659455299377
    2. '[list' → logprob: -1.7043665647506714
    3. ' [' → logprob: -6.454366683959961
    4. '[List' → logprob: -6.954366683959961
    5. '[L' → logprob: -8.329366683959961
    6. '[[' → logprob: -9.204366683959961
    7. '[int' → logprob: -10.204366683959961
    8. 'LS' → logprob: -11.579366683959961
    9. '[array' → logprob: -11.704366683959961
    10. '[M' → logprob: -12.204366683959961

Token 667: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.531315314830863e-06
    2. 'ord' → logprob: -13.500003814697266
    3. '(int' → logprob: -13.625003814697266
    4. '
' → logprob: -15.375003814697266
    5. 'c' → logprob: -15.500003814697266
    6. ' int' → logprob: -15.875003814697266
    7. 'floor' → logprob: -16.000003814697266
    8. '*' → logprob: -16.250003814697266
    9. '[int' → logprob: -16.625003814697266
    10. '```' → logprob: -17.750003814697266

Token 668: '(j' (ID: 4997)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0012644019443541765
    2. '(ch' → logprob: -6.751264572143555
    3. '(x' → logprob: -9.626264572143555
    4. '(char' → logprob: -10.876264572143555
    5. '(car' → logprob: -12.751264572143555
    6. 'c' → logprob: -13.001264572143555
    7. '(' → logprob: -13.126264572143555
    8. '(
' → logprob: -14.251264572143555
    9. '(chr' → logprob: -15.126264572143555
    10. '(C' → logprob: -15.376264572143555

Token 669: ')' (ID: 8)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.11047161370515823
    2. '(ch' → logprob: -2.360471725463867
    3. '(char' → logprob: -5.360471725463867
    4. '(' → logprob: -6.485471725463867
    5. 'for' → logprob: -6.860471725463867
    6. '()' → logprob: -6.985471725463867
    7. '(j' → logprob: -6.985471725463867
    8. '(k' → logprob: -7.860471725463867
    9. 'char' → logprob: -8.485471725463867
    10. '(x' → logprob: -9.235471725463867

Token 670: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010593677870929241
    2. ' for' → logprob: -7.001059532165527
    3. '(j' → logprob: -9.251059532165527
    4. '(' → logprob: -10.876059532165527
    5. 'char' → logprob: -11.251059532165527
    6. '(char' → logprob: -12.251059532165527
    7. '()' → logprob: -12.501059532165527
    8. '(c' → logprob: -12.626059532165527
    9. 'c' → logprob: -13.501059532165527
    10. '
' → logprob: -13.751059532165527

Token 671: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006266565760597587
    2. ' j' → logprob: -7.375626564025879
    3. '	j' → logprob: -16.625627517700195
    4. ' ' → logprob: -18.125627517700195
    5. '
' → logprob: -19.500627517700195
    6. '$j' → logprob: -19.875627517700195
    7. ' ' → logprob: -20.750627517700195
    8. '_j' → logprob: -21.250627517700195
    9. 'jj' → logprob: -21.250627517700195
    10. '

' → logprob: -21.500627517700195

Token 672: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05488589033484459
    2. ' in' → logprob: -2.9298858642578125
    3. ' ' → logprob: -14.054885864257812
    4. 'j' → logprob: -14.679885864257812
    5. ' j' → logprob: -14.679885864257812
    6. '
' → logprob: -14.929885864257812
    7. 'i' → logprob: -15.179885864257812
    8. 'for' → logprob: -15.429885864257812
    9. 's' → logprob: -15.554885864257812
    10. '	in' → logprob: -16.054885864257812

Token 673: ' list' (ID: 1562)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01840452291071415
    2. 'list' → logprob: -4.018404483795166
    3. ' S' → logprob: -8.518404960632324
    4. ' list' → logprob: -9.893404960632324
    5. 's' → logprob: -13.143404960632324
    6. 'c' → logprob: -14.643404960632324
    7. 'range' → logprob: -14.643404960632324
    8. '(list' → logprob: -14.768404960632324
    9. '(S' → logprob: -16.018404006958008
    10. 'l' → logprob: -16.268404006958008

Token 674: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.375000953674316
    3. '(s' → logprob: -14.500000953674316
    4. 'S' → logprob: -15.375000953674316
    5. '((' → logprob: -18.000001907348633
    6. '(str' → logprob: -19.125001907348633
    7. ' (' → logprob: -19.500001907348633
    8. '(sys' → logprob: -19.625001907348633
    9. '(
' → logprob: -20.125001907348633
    10. ']' → logprob: -21.500001907348633

Token 675: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4742954969406128
    2. '())' → logprob: -0.9742954969406128
    3. '()[' → logprob: -9.099295616149902
    4. '()]' → logprob: -9.724295616149902
    5. '()
' → logprob: -11.599295616149902
    6. ')' → logprob: -11.599295616149902
    7. ')]' → logprob: -11.849295616149902
    8. ' ()' → logprob: -12.599295616149902
    9. ' ())' → logprob: -12.974295616149902
    10. '())[' → logprob: -12.974295616149902

Token 676: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15485498309135437
    2. '()]' → logprob: -2.2798550128936768
    3. 'for' → logprob: -4.029854774475098
    4. '()' → logprob: -4.279854774475098
    5. '(i' → logprob: -5.029854774475098
    6. '(n' → logprob: -6.529854774475098
    7. ' for' → logprob: -6.779854774475098
    8. '   ' → logprob: -8.404854774475098
    9. ' ]' → logprob: -9.279854774475098
    10. '[i' → logprob: -10.404854774475098

Token 677: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5800454020500183
    2. ' for' → logprob: -0.8300454020500183
    3. ']' → logprob: -5.955045223236084
    4. '   ' → logprob: -6.830045223236084
    5. '(i' → logprob: -8.955045700073242
    6. '()' → logprob: -9.205045700073242
    7. '(n' → logprob: -9.205045700073242
    8. '    ' → logprob: -10.705045700073242
    9. '       ' → logprob: -10.955045700073242
    10. '	for' → logprob: -11.080045700073242

Token 678: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030389362946152687
    2. ' i' → logprob: -3.5303893089294434
    3. '_' → logprob: -7.405389308929443
    4. '_i' → logprob: -10.530389785766602
    5. 'range' → logprob: -13.155389785766602
    6. ' _' → logprob: -13.780389785766602
    7. ' range' → logprob: -14.405389785766602
    8. '
' → logprob: -15.655389785766602
    9. ' ' → logprob: -15.780389785766602
    10. '	i' → logprob: -15.905389785766602

Token 679: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014922797679901
    2. 'in' → logprob: -1.7014923095703125
    3. 'range' → logprob: -9.576492309570312
    4. 'n' → logprob: -12.951492309570312
    5. '(' → logprob: -13.076492309570312
    6. ' range' → logprob: -13.326492309570312
    7. '(range' → logprob: -13.701492309570312
    8. ' ' → logprob: -14.326492309570312
    9. '(n' → logprob: -14.951492309570312
    10. '	in' → logprob: -15.076492309570312

Token 680: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -16.876171112060547
    4. ' ' → logprob: -20.376171112060547
    5. 'rang' → logprob: -20.626171112060547
    6. '	range' → logprob: -20.876171112060547
    7. '
' → logprob: -21.001171112060547
    8. 'in' → logprob: -21.626171112060547
    9. '   ' → logprob: -21.626171112060547
    10. 'rank' → logprob: -22.001171112060547

Token 681: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16023783385753632
    2. 'n' → logprob: -1.9102377891540527
    3. '(' → logprob: -11.910238265991211
    4. ' n' → logprob: -12.285238265991211
    5. ' (' → logprob: -13.785238265991211
    6. 'range' → logprob: -14.160238265991211
    7. '	n' → logprob: -15.285238265991211
    8. '(
' → logprob: -15.410238265991211
    9. ')n' → logprob: -15.910238265991211
    10. '
' → logprob: -17.41023826599121

Token 682: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.5822400857578032e-05
    2. ']' → logprob: -10.625025749206543
    3. ')' → logprob: -14.875025749206543
    4. ')]
' → logprob: -15.000025749206543
    5. '   ' → logprob: -15.250025749206543
    6. '])]' → logprob: -15.750025749206543
    7. '')]' → logprob: -16.50002670288086
    8. ']]' → logprob: -16.50002670288086
    9. '}]' → logprob: -16.75002670288086
    10. '])' → logprob: -16.87502670288086

Token 683: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5389195680618286
    2. '
' → logprob: -1.1639195680618286
    3. '<|end|>' → logprob: -2.663919448852539
    4. '#' → logprob: -3.913919448852539
    5. 'class' → logprob: -5.288919448852539
    6. '

' → logprob: -5.538919448852539
    7. '<|end|>' → logprob: -6.038919448852539
    8. '\n' → logprob: -6.538919448852539
    9. '```' → logprob: -7.163919448852539
    10. '\' → logprob: -7.788919448852539

Token 684: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01291937381029129
    2. 'd' → logprob: -4.6379194259643555
    3. '#' → logprob: -6.2629194259643555
    4. 'n' → logprob: -7.6379194259643555
    5. '
' → logprob: -8.512919425964355
    6. 'de' → logprob: -8.887919425964355
    7. '(' → logprob: -8.887919425964355
    8. 'class' → logprob: -9.262919425964355
    9. '(
' → logprob: -10.512919425964355
    10. '\' → logprob: -10.762919425964355

Token 685: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08566737174987793
    2. 'def' → logprob: -2.710667371749878
    3. 'n' → logprob: -4.710667610168457
    4. '(' → logprob: -5.710667610168457
    5. '#' → logprob: -6.585667610168457
    6. '()
' → logprob: -7.710667610168457
    7. '(n' → logprob: -7.710667610168457
    8. '(
' → logprob: -8.335667610168457
    9. 'data' → logprob: -9.210667610168457
    10. '();' → logprob: -9.210667610168457

Token 686: ' nombre' (ID: 9733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3117639720439911
    2. 'n' → logprob: -1.5617640018463135
    3. 'input' → logprob: -3.3117640018463135
    4. 't' → logprob: -4.186763763427734
    5. 'nombre' → logprob: -6.061763763427734
    6. 'int' → logprob: -6.936763763427734
    7. 'if' → logprob: -7.561763763427734
    8. '#' → logprob: -7.686763763427734
    9. '_' → logprob: -7.936763763427734
    10. 'd' → logprob: -8.061763763427734

Token 687: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0673828125
    2. 'n' → logprob: -1.1923828125
    3. '()' → logprob: -1.8173828125
    4. ' =' → logprob: -2.5673828125
    5. 'def' → logprob: -3.3173828125
    6. 'd' → logprob: -3.8173828125
    7. '(' → logprob: -4.0673828125
    8. 'de' → logprob: -4.3173828125
    9. '_' → logprob: -4.8173828125
    10. 'of' → logprob: -5.0673828125

Token 688: ' somm' (ID: 44830)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.6231392621994019
    2. 't' → logprob: -1.2481392621994019
    3. 'tests' → logprob: -1.8731392621994019
    4. 'cases' → logprob: -4.123139381408691
    5. 'queries' → logprob: -6.373139381408691
    6. ' test' → logprob: -6.873139381408691
    7. 'n' → logprob: -7.248139381408691
    8. 'l' → logprob: -7.248139381408691
    9. 'cas' → logprob: -7.373139381408691
    10. 's' → logprob: -7.373139381408691

Token 689: 'ets' (ID: 1719)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.7356882095336914
    2. 'ets' → logprob: -1.8606882095336914
    3. 'ètres' → logprob: -1.9856882095336914
    4. '#' → logprob: -2.9856882095336914
    5. 'aires' → logprob: -2.9856882095336914
    6. 'it' → logprob: -3.2356882095336914
    7. 'ètes' → logprob: -3.3606882095336914
    8. 'êtres' → logprob: -4.110688209533691
    9. 'è' → logprob: -4.735688209533691
    10. 't' → logprob: -4.860688209533691

Token 690: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048746559768915176
    2. '=' → logprob: -3.7987465858459473
    3. ' =' → logprob: -4.048746585845947
    4. 'N' → logprob: -4.923746585845947
    5. '=n' → logprob: -8.673746109008789
    6. '(n' → logprob: -8.923746109008789
    7. '()' → logprob: -9.673746109008789
    8. '=
' → logprob: -10.798746109008789
    9. '()
' → logprob: -11.173746109008789
    10. '
' → logprob: -11.298746109008789

Token 691: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004353690892457962
    2. 'N' → logprob: -5.5043535232543945
    3. 'V' → logprob: -8.254353523254395
    4. 'def' → logprob: -11.879353523254395
    5. 'v' → logprob: -12.379353523254395
    6. '   ' → logprob: -14.004353523254395
    7. ' n' → logprob: -14.004353523254395
    8. '
' → logprob: -14.004353523254395
    9. '```' → logprob: -14.129353523254395
    10. '#' → logprob: -15.379353523254395

Token 692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198393553495407
    2. ' =' → logprob: -2.811983823776245
    3. '=int' → logprob: -11.936984062194824
    4. ',' → logprob: -12.061984062194824
    5. '()' → logprob: -13.436984062194824
    6. '=n' → logprob: -13.686984062194824
    7. '   ' → logprob: -14.436984062194824
    8. ')' → logprob: -15.561984062194824
    9. '(' → logprob: -15.686984062194824
    10. '=input' → logprob: -15.936984062194824

Token 693: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.28171443939208984
    2. ' I' → logprob: -1.5317144393920898
    3. 'int' → logprob: -3.78171443939209
    4. ' int' → logprob: -5.03171443939209
    5. ' ' → logprob: -10.65671443939209
    6. ' 
' → logprob: -12.53171443939209
    7. '=int' → logprob: -12.65671443939209
    8. ' ' → logprob: -14.03171443939209
    9. '	I' → logprob: -14.40671443939209
    10. '[int' → logprob: -14.53171443939209

Token 694: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030640270560979843
    2. ')' → logprob: -4.405640125274658
    3. '#' → logprob: -4.780640125274658
    4. '()
' → logprob: -5.280640125274658
    5. '
' → logprob: -5.905640125274658
    6. 'n' → logprob: -7.655640125274658
    7. '())' → logprob: -8.530640602111816
    8. '(n' → logprob: -8.905640602111816
    9. 'def' → logprob: -9.155640602111816
    10. 's' → logprob: -9.280640602111816

Token 695: '#' (ID: 2)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.16673699021339417
    2. 'graph' → logprob: -2.5417370796203613
    3. '#' → logprob: -3.4167370796203613
    4. 'adj' → logprob: -4.041737079620361
    5. 'a' → logprob: -5.291737079620361
    6. 'tree' → logprob: -5.541737079620361
    7. 'g' → logprob: -5.666737079620361
    8. ' edges' → logprob: -5.791737079620361
    9. 'nodes' → logprob: -6.416737079620361
    10. 'u' → logprob: -6.666737079620361

Token 696: ' Initial' (ID: 9209)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3107992112636566
    2. 'graph' → logprob: -1.935799241065979
    3. 'adj' → logprob: -2.4357991218566895
    4. 'g' → logprob: -3.5607991218566895
    5. '#' → logprob: -5.4357991218566895
    6. 'parents' → logprob: -6.6857991218566895
    7. 'G' → logprob: -7.5607991218566895
    8. 'parent' → logprob: -8.310799598693848
    9. 'tree' → logprob: -9.185799598693848
    10. 'gr' → logprob: -9.810799598693848

Token 697: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -1.0024839639663696
    2. '_edges' → logprob: -1.5024839639663696
    3. 'iser' → logprob: -2.00248384475708
    4. 'ization' → logprob: -2.87748384475708
    5. 'e' → logprob: -3.00248384475708
    6. 'ize' → logprob: -3.12748384475708
    7. 'ise' → logprob: -3.87748384475708
    8. 'graph' → logprob: -4.25248384475708
    9. 'edges' → logprob: -4.37748384475708
    10. 'ze' → logprob: -4.62748384475708

Token 698: ' de' (ID: 334)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4334627687931061
    2. '(' → logprob: -1.6834627389907837
    3. 'adj' → logprob: -2.5584628582000732
    4. '(
' → logprob: -3.3084628582000732
    5. '(graph' → logprob: -4.558462619781494
    6. '_graph' → logprob: -4.808462619781494
    7. '()' → logprob: -4.808462619781494
    8. 'g' → logprob: -5.308462619781494
    9. ' graph' → logprob: -5.433462619781494
    10. 'G' → logprob: -6.058462619781494

Token 699: ' la' (ID: 557)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.47619444131851196
    2. 'g' → logprob: -1.8511943817138672
    3. 'adj' → logprob: -1.8511943817138672
    4. ' graph' → logprob: -3.351194381713867
    5. '[]' → logprob: -4.601194381713867
    6. ' g' → logprob: -4.976194381713867
    7. 'edges' → logprob: -5.726194381713867
    8. 'G' → logprob: -6.226194381713867
    9. 'gr' → logprob: -6.476194381713867
    10. ' adjacency' → logprob: -6.476194381713867

Token 700: ' structure' (ID: 8866)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.009792213328182697
    2. 'adj' → logprob: -4.759792327880859
    3. 'tree' → logprob: -7.759792327880859
    4. 'g' → logprob: -8.00979232788086
    5. ' graph' → logprob: -8.25979232788086
    6. 'edges' → logprob: -9.88479232788086
    7. 'gr' → logprob: -10.38479232788086
    8. 'default' → logprob: -10.88479232788086
    9. 'deque' → logprob: -11.13479232788086
    10. 'queue' → logprob: -11.63479232788086

Token 701: ' du' (ID: 1462)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.33312636613845825
    2. 'd' → logprob: -2.7081263065338135
    3. ' d' → logprob: -2.7081263065338135
    4. ' =' → logprob: -3.8331263065338135
    5. 'g' → logprob: -3.8331263065338135
    6. '[]' → logprob: -4.083126544952393
    7. 'adj' → logprob: -4.083126544952393
    8. ' graph' → logprob: -4.208126544952393
    9. ' de' → logprob: -4.333126544952393
    10. '_graph' → logprob: -4.708126544952393

Token 702: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.25364333391189575
    2. 'gr' → logprob: -1.503643274307251
    3. ' grap' → logprob: -7.00364351272583
    4. ' graph' → logprob: -8.503643035888672
    5. 'tree' → logprob: -8.503643035888672
    6. 'ar' → logprob: -8.503643035888672
    7. 'g' → logprob: -9.503643035888672
    8. '
' → logprob: -10.128643035888672
    9. 'gra' → logprob: -10.378643035888672
    10. '```' → logprob: -11.253643035888672

Token 703: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.14674009382724762
    2. 'he' → logprob: -2.646740198135376
    3. 'h' → logprob: -2.896740198135376
    4. 'phe' → logprob: -5.896739959716797
    5. 'ph' → logprob: -6.396739959716797
    6. '#' → logprob: -6.521739959716797
    7. '
' → logprob: -6.771739959716797
    8. '   ' → logprob: -7.771739959716797
    9. '_' → logprob: -8.146739959716797
    10. 'hé' → logprob: -8.271739959716797

Token 704: ' G' (ID: 499)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.028077255934476852
    2. 'g' → logprob: -4.278077125549316
    3. 'adj' → logprob: -5.153077125549316
    4. 'G' → logprob: -5.278077125549316
    5. '
' → logprob: -7.028077125549316
    6. 'edges' → logprob: -7.153077125549316
    7. 'gr' → logprob: -7.903077125549316
    8. ' graph' → logprob: -8.153077125549316
    9. ' =' → logprob: -8.278077125549316
    10. '=' → logprob: -8.778077125549316

Token 705: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023316869512200356
    2. '=' → logprob: -3.7733168601989746
    3. ' =
' → logprob: -10.398317337036133
    4. ' ' → logprob: -11.398317337036133
    5. 'G' → logprob: -11.648317337036133
    6. 's' → logprob: -12.398317337036133
    7. '=
' → logprob: -12.898317337036133
    8. '
' → logprob: -13.023317337036133
    9. 'graph' → logprob: -13.273317337036133
    10. ',' → logprob: -13.398317337036133

Token 706: ' une' (ID: 2463)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -8.7689099018462e-05
    2. '[' → logprob: -9.37508773803711
    3. '[]' → logprob: -13.87508773803711
    4. ' defaultdict' → logprob: -14.87508773803711
    5. 'def' → logprob: -15.00008773803711
    6. ' [[]' → logprob: -15.00008773803711
    7. '```' → logprob: -15.12508773803711
    8. '.default' → logprob: -15.12508773803711
    9. '"default' → logprob: -16.00008773803711
    10. '   ' → logprob: -16.50008773803711

Token 707: ' liste' (ID: 31719)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.27099974633893e-05
    2. 'def' → logprob: -12.500012397766113
    3. '[]' → logprob: -13.125012397766113
    4. '[' → logprob: -13.500012397766113
    5. '```' → logprob: -13.750012397766113
    6. ' defaultdict' → logprob: -14.000012397766113
    7. '"default' → logprob: -14.250012397766113
    8. '
' → logprob: -14.375012397766113
    9. 'deque' → logprob: -14.375012397766113
    10. '.default' → logprob: -14.625012397766113

Token 708: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.013511300086975
    2. '[n' → logprob: -1.513511300086975
    3. 'of' → logprob: -1.763511300086975
    4. '=' → logprob: -2.7635111808776855
    5. '[]' → logprob: -2.8885111808776855
    6. ' of' → logprob: -3.2635111808776855
    7. 'de' → logprob: -4.0135111808776855
    8. ' =' → logprob: -4.3885111808776855
    9. '(n' → logprob: -4.6385111808776855
    10. ' de' → logprob: -4.7635111808776855

Token 709: ''ad' (ID: 36162)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0028441029135137796
    2. 'list' → logprob: -6.502844333648682
    3. 'lists' → logprob: -7.752844333648682
    4. ' []' → logprob: -8.252843856811523
    5. 'default' → logprob: -8.377843856811523
    6. '[' → logprob: -8.502843856811523
    7. 'n' → logprob: -9.752843856811523
    8. 'deque' → logprob: -10.627843856811523
    9. '[]}' → logprob: -10.877843856811523
    10. 'empty' → logprob: -11.377843856811523

Token 710: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006620417116209865
    2. 'jac' → logprob: -8.000661849975586
    3. '[j' → logprob: -8.500661849975586
    4. 'd' → logprob: -9.500661849975586
    5. '[' → logprob: -10.750661849975586
    6. 'dj' → logprob: -10.750661849975586
    7. 'js' → logprob: -13.500661849975586
    8. 'jc' → logprob: -14.250661849975586
    9. 'jec' → logprob: -14.500661849975586
    10. 'ja' → logprob: -14.750661849975586

Token 711: 'ence' (ID: 1082)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.16664829850196838
    2. 'ence' → logprob: -2.6666483879089355
    3. 'es' → logprob: -3.5416483879089355
    4. 's' → logprob: -3.7916483879089355
    5. 'ences' → logprob: -4.0416483879089355
    6. 'escence' → logprob: -5.2916483879089355
    7. '[' → logprob: -6.0416483879089355
    8. '[]' → logprob: -6.2916483879089355
    9. 'ac' → logprob: -6.6666483879089355
    10. 'list' → logprob: -7.0416483879089355

Token 712: ' vide' (ID: 21835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5100125074386597
    2. 'G' → logprob: -1.3850125074386597
    3. '=' → logprob: -2.510012626647949
    4. 'graph' → logprob: -3.510012626647949
    5. '(G' → logprob: -3.760012626647949
    6. 'g' → logprob: -6.135012626647949
    7. '[' → logprob: -6.260012626647949
    8. '[G' → logprob: -6.260012626647949
    9. '=[' → logprob: -6.510012626647949
    10. 'adj' → logprob: -6.760012626647949

Token 713: '
' (ID: 198)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.2848483324050903
    2. ' =' → logprob: -1.2848483324050903
    3. '(G' → logprob: -1.7848483324050903
    4. '(n' → logprob: -2.284848213195801
    5. '[n' → logprob: -3.159848213195801
    6. 'graph' → logprob: -3.534848213195801
    7. '[G' → logprob: -3.909848213195801
    8. 's' → logprob: -4.409848213195801
    9. '=' → logprob: -4.409848213195801
    10. 'for' → logprob: -4.534848213195801

Token 714: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00219735992141068
    2. 'graph' → logprob: -6.252197265625
    3. '[' → logprob: -8.627197265625
    4. '[G' → logprob: -9.877197265625
    5. ' [[]' → logprob: -11.127197265625
    6. 'g' → logprob: -11.627197265625
    7. '[]' → logprob: -12.502197265625
    8. 'Graph' → logprob: -12.627197265625
    9. 'adj' → logprob: -12.877197265625
    10. ' G' → logprob: -13.127197265625

Token 715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759475827217102
    2. '=' → logprob: -0.8259475827217102
    3. '=[' → logprob: -12.825947761535645
    4. '=[]' → logprob: -13.075947761535645
    5. ' =[' → logprob: -13.825947761535645
    6. '[' → logprob: -14.075947761535645
    7. ' =
' → logprob: -14.825947761535645
    8. '＝' → logprob: -15.075947761535645
    9. '=
' → logprob: -15.825947761535645
    10. '=[]
' → logprob: -15.950947761535645

Token 716: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00862143188714981
    2. ' [[]' → logprob: -4.7586212158203125
    3. 'default' → logprob: -12.508621215820312
    4. '[]' → logprob: -13.008621215820312
    5. '[n' → logprob: -15.383621215820312
    6. '   ' → logprob: -15.383621215820312
    7. ' [' → logprob: -15.508621215820312
    8. '[[' → logprob: -15.758621215820312
    9. ' ' → logprob: -16.508621215820312
    10. '[]
' → logprob: -17.883621215820312

Token 717: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760114192962646
    2. 'for' → logprob: -0.8260114192962646
    3. ']' → logprob: -10.701011657714844
    4. 'n' → logprob: -10.951011657714844
    5. '(n' → logprob: -11.451011657714844
    6. ' ' → logprob: -11.951011657714844
    7. '	for' → logprob: -12.826011657714844
    8. '()' → logprob: -13.201011657714844
    9. ')' → logprob: -13.326011657714844
    10. ' n' → logprob: -13.451011657714844

Token 718: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00130738306324929
    2. 'range' → logprob: -6.751307487487793
    3. '_range' → logprob: -9.376307487487793
    4. '_i' → logprob: -10.751307487487793
    5. 'i' → logprob: -11.251307487487793
    6. ' range' → logprob: -12.001307487487793
    7. ' _' → logprob: -12.626307487487793
    8. '(range' → logprob: -12.876307487487793
    9. '_in' → logprob: -13.501307487487793
    10. 'in' → logprob: -13.626307487487793

Token 719: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6977991461753845
    2. 'range' → logprob: -0.6977991461753845
    3. ' in' → logprob: -5.572799205780029
    4. ' range' → logprob: -7.322799205780029
    5. '(range' → logprob: -9.197798728942871
    6. 'i' → logprob: -9.947798728942871
    7. 'n' → logprob: -10.947798728942871
    8. 'ran' → logprob: -13.322798728942871
    9. '_' → logprob: -13.322798728942871
    10. '(n' → logprob: -13.322798728942871

Token 720: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. 'rang' → logprob: -16.875335693359375
    4. 'r' → logprob: -17.125335693359375
    5. 'ra' → logprob: -17.500335693359375
    6. 'ran' → logprob: -18.500335693359375
    7. '(range' → logprob: -18.500335693359375
    8. ' ' → logprob: -19.500335693359375
    9. '   ' → logprob: -19.500335693359375
    10. '	range' → logprob: -20.000335693359375

Token 721: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.30207520723342896
    2. 'range' → logprob: -1.5520751476287842
    3. '(range' → logprob: -3.052075147628784
    4. ' range' → logprob: -6.427075386047363
    5. '(' → logprob: -10.677075386047363
    6. 'n' → logprob: -11.802075386047363
    7. '	range' → logprob: -14.677075386047363
    8. 'Range' → logprob: -15.052075386047363
    9. ' (' → logprob: -15.802075386047363
    10. '_range' → logprob: -16.177074432373047

Token 722: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.961759259458631e-06
    2. ')]
' → logprob: -12.375004768371582
    3. ')' → logprob: -15.125004768371582
    4. ')]
' → logprob: -15.750004768371582
    5. ')]

' → logprob: -16.3750057220459
    6. ']' → logprob: -16.5000057220459
    7. ' )' → logprob: -16.7500057220459
    8. ')],' → logprob: -16.7500057220459
    9. ')].' → logprob: -17.6250057220459
    10. ')])' → logprob: -18.6250057220459

Token 723: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004930600989609957
    2. 'u' → logprob: -5.50493049621582
    3. 'm' → logprob: -8.25493049621582
    4. 'e' → logprob: -8.62993049621582
    5. ' for' → logprob: -9.00493049621582
    6. '#' → logprob: -9.12993049621582
    7. 'edge' → logprob: -9.87993049621582
    8. 'edges' → logprob: -10.00493049621582
    9. 'a' → logprob: -10.37993049621582
    10. 'v' → logprob: -11.37993049621582

Token 724: ' Lecture' (ID: 106534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.8889261304575484e-06
    2. '#' → logprob: -13.375003814697266
    3. '
' → logprob: -13.500003814697266
    4. ' for' → logprob: -14.750003814697266
    5. 'm' → logprob: -16.000003814697266
    6. 'fo' → logprob: -16.125003814697266
    7. 'edges' → logprob: -16.625003814697266
    8. 'f' → logprob: -17.125003814697266
    9. '```' → logprob: -17.750003814697266
    10. 'For' → logprob: -18.125003814697266

Token 725: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030200624838471413
    2. ' for' → logprob: -3.905200719833374
    3. '_' → logprob: -5.655200481414795
    4. 'n' → logprob: -6.530200481414795
    5. '(n' → logprob: -6.530200481414795
    6. '()' → logprob: -6.780200481414795
    7. '
' → logprob: -7.405200481414795
    8. 'pour' → logprob: -8.155200958251953
    9. ' of' → logprob: -8.655200958251953
    10. '(' → logprob: -9.155200958251953

Token 726: ' ar' (ID: 646)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0313756465911865
    2. 'n' → logprob: -1.1563756465911865
    3. ' n' → logprob: -2.2813756465911865
    4. ' edges' → logprob: -2.9063756465911865
    5. '_edges' → logprob: -2.9063756465911865
    6. 'edges' → logprob: -3.1563756465911865
    7. ' ar' → logprob: -3.4063756465911865
    8. ' _' → logprob: -3.9063756465911865
    9. '_are' → logprob: -5.031375885009766
    10. 'ar' → logprob: -5.656375885009766

Token 727: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.01824605092406273
    2. 'cs' → logprob: -4.268246173858643
    3. 'etes' → logprob: -6.518246173858643
    4. 'ê' → logprob: -7.393246173858643
    5. '^' → logprob: -7.643246173858643
    6. 'tes' → logprob: -8.143245697021484
    7. 'c' → logprob: -8.268245697021484
    8. 'e' → logprob: -8.268245697021484
    9. 'es' → logprob: -9.018245697021484
    10. 'êts' → logprob: -9.018245697021484

Token 728: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008191577508114278
    2. '
' → logprob: -7.250819206237793
    3. ' for' → logprob: -9.125819206237793
    4. '
' → logprob: -16.375818252563477
    5. '	for' → logprob: -16.750818252563477
    6. 'f' → logprob: -16.875818252563477
    7. 'n' → logprob: -17.625818252563477
    8. 's' → logprob: -17.625818252563477
    9. '

' → logprob: -17.875818252563477
    10. 'fo' → logprob: -17.875818252563477

Token 729: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5910801291465759
    2. 'gr' → logprob: -0.8410801291465759
    3. ' grap' → logprob: -4.341080188751221
    4. ' graph' → logprob: -7.216080188751221
    5. 'g' → logprob: -7.966080188751221
    6. 'for' → logprob: -8.091079711914062
    7. 'ar' → logprob: -8.591079711914062
    8. 'range' → logprob: -8.716079711914062
    9. 'n' → logprob: -8.966079711914062
    10. 'gra' → logprob: -10.216079711914062

Token 730: 'he' (ID: 273)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.6039668321609497
    2. 'aphe' → logprob: -1.2289668321609497
    3. 'phe' → logprob: -2.10396671295166
    4. 'he' → logprob: -4.10396671295166
    5. 'che' → logprob: -4.47896671295166
    6. 'h' → logprob: -5.97896671295166
    7. '   ' → logprob: -6.60396671295166
    8. '```' → logprob: -6.72896671295166
    9. 'f' → logprob: -7.35396671295166
    10. 'p' → logprob: -7.47896671295166

Token 731: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002931106835603714
    2. '
' → logprob: -5.877931118011475
    3. ' for' → logprob: -9.002930641174316
    4. 'n' → logprob: -14.002930641174316
    5. '
' → logprob: -14.002930641174316
    6. 's' → logprob: -14.877930641174316
    7. 'f' → logprob: -15.252930641174316
    8. '\n' → logprob: -15.502930641174316
    9. '

' → logprob: -16.252931594848633
    10. 'fo' → logprob: -16.377931594848633

Token 732: ' construction' (ID: 9770)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1705387979745865
    2. ' for' → logprob: -2.920538902282715
    3. 'aj' → logprob: -2.920538902282715
    4. ' ajout' → logprob: -3.670538902282715
    5. '
' → logprob: -4.920538902282715
    6. ' rempl' → logprob: -6.170538902282715
    7. '_' → logprob: -6.420538902282715
    8. ' ajouter' → logprob: -6.545538902282715
    9. 'range' → logprob: -7.295538902282715
    10. 'u' → logprob: -7.420538902282715

Token 733: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14696107804775238
    2. ' for' → logprob: -2.021960973739624
    3. ' du' → logprob: -6.146961212158203
    4. ' des' → logprob: -7.146961212158203
    5. ' pour' → logprob: -7.271961212158203
    6. ' de' → logprob: -8.896961212158203
    7. '
' → logprob: -9.021961212158203
    8. 'pour' → logprob: -9.396961212158203
    9. 'range' → logprob: -9.646961212158203
    10. ' of' → logprob: -10.021961212158203

Token 734: ' la' (ID: 557)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.016568340361118317
    2. ' G' → logprob: -4.891568183898926
    3. 'range' → logprob: -5.516568183898926
    4. 'for' → logprob: -5.766568183898926
    5. ' range' → logprob: -6.891568183898926
    6. ' for' → logprob: -7.766568183898926
    7. ' la' → logprob: -9.391568183898926
    8. '
' → logprob: -10.266568183898926
    9. 'graph' → logprob: -10.266568183898926
    10. 'l' → logprob: -10.641568183898926

Token 735: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7054019570350647
    2. 'for' → logprob: -0.8304019570350647
    3. 'G' → logprob: -2.95540189743042
    4. ' graph' → logprob: -4.58040189743042
    5. ' for' → logprob: -5.33040189743042
    6. 'gr' → logprob: -6.58040189743042
    7. '
' → logprob: -7.45540189743042
    8. ' grap' → logprob: -7.58040189743042
    9. 'g' → logprob: -8.330402374267578
    10. ' G' → logprob: -8.580402374267578

Token 736: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01186276413500309
    2. ' for' → logprob: -4.511862754821777
    3. '_edges' → logprob: -7.886862754821777
    4. ' des' → logprob: -8.636862754821777
    5. 'G' → logprob: -9.511862754821777
    6. 'd' → logprob: -10.261862754821777
    7. 'edges' → logprob: -10.386862754821777
    8. 's' → logprob: -10.511862754821777
    9. 'des' → logprob: -10.886862754821777
    10. 'pour' → logprob: -11.386862754821777

Token 737: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.31369733810424805
    2. ''ad' → logprob: -1.313697338104248
    3. 'ad' → logprob: -8.313697814941406
    4. '’ad' → logprob: -8.938697814941406
    5. '_adj' → logprob: -10.688697814941406
    6. '_ad' → logprob: -11.063697814941406
    7. ' adjacency' → logprob: -12.438697814941406
    8. ''' → logprob: -12.813697814941406
    9. '-ad' → logprob: -13.063697814941406
    10. ''ar' → logprob: -13.188697814941406

Token 738: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.3869625926017761
    2. 'j' → logprob: -1.136962652206421
    3. 'ja' → logprob: -10.511962890625
    4. 'js' → logprob: -11.136962890625
    5. '[j' → logprob: -11.386962890625
    6. 'd' → logprob: -11.636962890625
    7. 'Jac' → logprob: -12.011962890625
    8. 'J' → logprob: -12.136962890625
    9. 'jc' → logprob: -12.636962890625
    10. 'jec' → logprob: -12.761962890625

Token 739: 'ence' (ID: 1082)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7098710536956787
    2. 'escence' → logprob: -0.8348710536956787
    3. 'ac' → logprob: -3.5848710536956787
    4. 'acency' → logprob: -3.8348710536956787
    5. 'ence' → logprob: -4.459871292114258
    6. 'ences' → logprob: -5.084871292114258
    7. 'esc' → logprob: -6.334871292114258
    8. '(G' → logprob: -6.334871292114258
    9. '#' → logprob: -7.084871292114258
    10. '```' → logprob: -7.834871292114258

Token 740: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008634661324322224
    2. '
' → logprob: -4.758634567260742
    3. ' for' → logprob: -10.883634567260742
    4. '
' → logprob: -13.633634567260742
    5. '

' → logprob: -16.133634567260742
    6. '```' → logprob: -17.008634567260742
    7. ' 
' → logprob: -17.508634567260742
    8. '\n' → logprob: -17.758634567260742
    9. 'n' → logprob: -17.883634567260742
    10. 'f' → logprob: -18.258634567260742

Token 741: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.5
    3. ' for' → logprob: -16.625
    4. '	for' → logprob: -22.625
    5. '```' → logprob: -22.75
    6. '

' → logprob: -23.25
    7. '   ' → logprob: -23.625
    8. '    
' → logprob: -24.0
    9. 'f' → logprob: -24.125
    10. 'fo' → logprob: -24.25

Token 742: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1269443929195404
    2. ' _' → logprob: -2.1269443035125732
    3. ' i' → logprob: -11.751944541931152
    4. '_i' → logprob: -12.001944541931152
    5. 'i' → logprob: -13.501944541931152
    6. ' _
' → logprob: -14.751944541931152
    7. '_=' → logprob: -15.751944541931152
    8. ' ' → logprob: -15.876944541931152
    9. '_
' → logprob: -16.251943588256836
    10. '   ' → logprob: -16.501943588256836

Token 743: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034722961485385895
    2. ' _' → logprob: -3.7847230434417725
    3. 'in' → logprob: -4.659722805023193
    4. ' i' → logprob: -7.034722805023193
    5. '_' → logprob: -7.909722805023193
    6. ' ' → logprob: -8.034723281860352
    7. 'i' → logprob: -8.659723281860352
    8. 'n' → logprob: -9.034723281860352
    9. 'range' → logprob: -10.159723281860352
    10. '  ' → logprob: -11.284723281860352

Token 744: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010344763286411762
    2. ' range' → logprob: -6.876034259796143
    3. 'r' → logprob: -14.5010347366333
    4. ' ' → logprob: -15.0010347366333
    5. 'rang' → logprob: -15.0010347366333
    6. 'ra' → logprob: -16.001033782958984
    7. '   ' → logprob: -16.251033782958984
    8. '
' → logprob: -16.376033782958984
    9. '	range' → logprob: -16.501033782958984
    10. '  ' → logprob: -16.876033782958984

Token 745: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000559108448214829
    2. '(' → logprob: -8.250558853149414
    3. ' n' → logprob: -8.750558853149414
    4. ' (' → logprob: -9.125558853149414
    5. 'n' → logprob: -10.875558853149414
    6. '(
' → logprob: -11.375558853149414
    7. '	n' → logprob: -16.500558853149414
    8. '(range' → logprob: -17.000558853149414
    9. ' (
' → logprob: -17.375558853149414
    10. '
' → logprob: -17.625558853149414

Token 746: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06995511054992676
    2. ' -' → logprob: -2.6949551105499268
    3. '):' → logprob: -11.569954872131348
    4. '):
' → logprob: -11.944954872131348
    5. ')' → logprob: -13.694954872131348
    6. ' ):' → logprob: -14.944954872131348
    7. ' ' → logprob: -15.194954872131348
    8. '-
' → logprob: -15.319954872131348
    9. '()-' → logprob: -15.319954872131348
    10. ' ):
' → logprob: -15.694954872131348

Token 747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012512002140283585
    2. ' ' → logprob: -4.38751220703125
    3. ')' → logprob: -13.51251220703125
    4. ' )' → logprob: -14.38751220703125
    5. '   ' → logprob: -16.13751220703125
    6. '<|end|>' → logprob: -16.26251220703125
    7. '
' → logprob: -16.38751220703125
    8. ' 
' → logprob: -17.26251220703125
    9. ' ' → logprob: -18.20001220703125
    10. '  ' → logprob: -18.32501220703125

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -14.750123977661133
    4. '
' → logprob: -16.375123977661133
    5. '   ' → logprob: -17.562623977661133
    6. '2' → logprob: -18.062623977661133
    7. '  ' → logprob: -18.312623977661133
    8. ' )' → logprob: -18.375123977661133
    9. '１' → logprob: -18.562623977661133
    10. '):
' → logprob: -18.625123977661133

Token 749: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47430619597435
    2. '):' → logprob: -0.9743062257766724
    3. '):
' → logprob: -9.224306106567383
    4. ')' → logprob: -9.349306106567383
    5. ' ):
' → logprob: -10.849306106567383
    6. ' ):' → logprob: -10.974306106567383
    7. ':' → logprob: -12.224306106567383
    8. ':
' → logprob: -13.724306106567383
    9. '):

' → logprob: -14.974306106567383
    10. ' )' → logprob: -15.974306106567383

Token 750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36374545097351074
    2. ' u' → logprob: -1.4887454509735107
    3. 'u' → logprob: -2.6137454509735107
    4. 'a' → logprob: -5.73874568939209
    5. '	u' → logprob: -6.48874568939209
    6. ' a' → logprob: -6.73874568939209
    7. '    
' → logprob: -10.23874568939209
    8. '	a' → logprob: -10.61374568939209
    9. 'v' → logprob: -11.48874568939209
    10. ' v' → logprob: -11.98874568939209

Token 751: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1602337658405304
    2. 'a' (adapté à ' a') → logprob: -1.910233736038208
    3. ' u' → logprob: -12.285233497619629
    4. 'x' → logprob: -12.535233497619629
    5. 'v' → logprob: -14.160233497619629
    6. '   ' → logprob: -14.535233497619629
    7. ' a' → logprob: -16.410234451293945
    8. 'b' → logprob: -16.535234451293945
    9. '	u' → logprob: -17.910234451293945
    10. '
' → logprob: -18.035234451293945

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021747693419456482
    2. ' ,' → logprob: -4.271747589111328
    3. ',b' → logprob: -4.896747589111328
    4. ',a' → logprob: -9.646747589111328
    5. 'b' → logprob: -12.146747589111328
    6. '_,' → logprob: -12.271747589111328
    7. ',v' → logprob: -12.896747589111328
    8. ',
' → logprob: -13.896747589111328
    9. ',n' → logprob: -14.271747589111328
    10. ',t' → logprob: -14.396747589111328

Token 753: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0788901224732399
    2. ' b' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.078889846801758
    4. '=' → logprob: -16.953889846801758
    5. '=b' → logprob: -18.078889846801758
    6. ' =' → logprob: -18.203889846801758
    7. ' 
' → logprob: -18.828889846801758
    8. '	b' → logprob: -18.828889846801758
    9. '_' → logprob: -18.953889846801758
    10. '_b' → logprob: -19.703889846801758

Token 754: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042180240154266
    2. ' =' → logprob: -3.2880420684814453
    3. ',' → logprob: -15.288042068481445
    4. ' ' → logprob: -15.788042068481445
    5. '   ' → logprob: -16.413042068481445
    6. ')' → logprob: -16.538042068481445
    7. '=
' → logprob: -16.663042068481445
    8. ' =
' → logprob: -17.163042068481445
    9. ')=' → logprob: -17.663042068481445
    10. '＝' → logprob: -17.913042068481445

Token 755: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0016329283826053143
    2. ' LI' → logprob: -6.5016326904296875
    3. 'I' → logprob: -9.001632690429688
    4. 'L' → logprob: -12.126632690429688
    5. 'LS' → logprob: -13.751632690429688
    6. 'Li' → logprob: -15.001632690429688
    7. 'map' → logprob: -15.376632690429688
    8. ' I' → logprob: -15.501632690429688
    9. ' ' → logprob: -16.626632690429688
    10. ' L' → logprob: -17.126632690429688

Token 756: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013970223953947425
    2. '()
' → logprob: -6.626397132873535
    3. '()
' → logprob: -10.751397132873535
    4. '();' → logprob: -11.001397132873535
    5. ')' → logprob: -11.126397132873535
    6. '(' → logprob: -11.501397132873535
    7. '())' → logprob: -12.501397132873535
    8. '().' → logprob: -13.876397132873535
    9. '()

' → logprob: -14.126397132873535
    10. '()]' → logprob: -14.126397132873535

Token 757: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3139035403728485
    2. '   ' → logprob: -1.313903570175171
    3. ' a' → logprob: -8.18890380859375
    4. '
' → logprob: -8.56390380859375
    5. '    
' → logprob: -9.68890380859375
    6. '	a' → logprob: -10.06390380859375
    7. '  
' → logprob: -11.68890380859375
    8. '   
' → logprob: -11.68890380859375
    9. '  ' → logprob: -11.81390380859375
    10. ' 
' → logprob: -11.81390380859375

Token 758: ' G' (ID: 499)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030780307948589325
    2. '   ' → logprob: -3.53078031539917
    3. ' a' → logprob: -6.90578031539917
    4. 'G' (adapté à ' G') → logprob: -11.655779838562012
    5. '	a' → logprob: -11.655779838562012
    6. '
' → logprob: -11.780779838562012
    7. ' G' → logprob: -14.530779838562012
    8. '#a' → logprob: -15.030779838562012
    9. ' ' → logprob: -15.280779838562012
    10. '_a' → logprob: -15.405779838562012

Token 759: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.5928495486150496e-05
    2. 'a' → logprob: -11.750016212463379
    3. '[' → logprob: -12.250016212463379
    4. ' [' → logprob: -13.500016212463379
    5. '   ' → logprob: -14.125016212463379
    6. '[b' → logprob: -14.500016212463379
    7. '[
' → logprob: -16.625015258789062
    8. '
' → logprob: -16.625015258789062
    9. '[int' → logprob: -16.750015258789062
    10. '[G' → logprob: -16.875015258789062

Token 760: ' -' (ID: 533)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.1875172257423401
    2. '[' → logprob: -2.5625171661376953
    3. '-' → logprob: -2.6875171661376953
    4. 'a' → logprob: -4.562517166137695
    5. '[b' → logprob: -5.687517166137695
    6. '   ' → logprob: -5.937517166137695
    7. '[-' → logprob: -6.187517166137695
    8. '[
' → logprob: -6.312517166137695
    9. '[u' → logprob: -6.937517166137695
    10. ' -' → logprob: -7.437517166137695

Token 761: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.62500762939453
    4. ']' → logprob: -19.62500762939453
    5. ')' → logprob: -20.18750762939453
    6. '```' → logprob: -20.31250762939453
    7. '2' → logprob: -20.43750762939453
    8. '=' → logprob: -20.50000762939453
    9. '<|end|>' → logprob: -20.56250762939453
    10. '１' → logprob: -20.62500762939453

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -17.125017166137695
    4. '   ' → logprob: -17.625017166137695
    5. ']' → logprob: -19.125017166137695
    6. ')' → logprob: -19.375017166137695
    7. ',' → logprob: -19.875017166137695
    8. '
' → logprob: -20.000017166137695
    9. '  ' → logprob: -20.125017166137695
    10. '0' → logprob: -20.250017166137695

Token 763: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.994086627149954e-05
    2. ']' → logprob: -9.875080108642578
    3. '.' → logprob: -11.125080108642578
    4. ' ].' → logprob: -11.375080108642578
    5. '.append' → logprob: -13.500080108642578
    6. ']
' → logprob: -15.250080108642578
    7. ').' → logprob: -15.500080108642578
    8. ''].' → logprob: -16.750080108642578
    9. '   ' → logprob: -17.125080108642578
    10. '}.' → logprob: -17.250080108642578

Token 764: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. 'appen' → logprob: -16.5
    3. '.append' → logprob: -17.25
    4. ' append' → logprob: -17.625
    5. 'app' → logprob: -19.125
    6. 'appe' → logprob: -20.125
    7. 'ap' → logprob: -20.375
    8. '	append' → logprob: -21.125
    9. 'add' → logprob: -21.25
    10. 'push' → logprob: -21.75

Token 765: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00033677343162707984
    2. 'b' → logprob: -8.000336647033691
    3. '(' → logprob: -13.875336647033691
    4. '(
' → logprob: -15.250336647033691
    5. ' b' → logprob: -17.125337600708008
    6. ' (' → logprob: -17.250337600708008
    7. '	b' → logprob: -17.500337600708008
    8. '((' → logprob: -19.500337600708008
    9. ')b' → logprob: -20.625337600708008
    10. '(
' → logprob: -22.000337600708008

Token 766: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17982180416584015
    2. '-' → logprob: -1.8048218488693237
    3. ')' → logprob: -10.179821968078613
    4. ' ' → logprob: -10.429821968078613
    5. ' -
' → logprob: -13.054821968078613
    6. '
' → logprob: -13.429821968078613
    7. '[' → logprob: -13.554821968078613
    8. '   ' → logprob: -13.554821968078613
    9. '<|end|>' → logprob: -13.554821968078613
    10. '-
' → logprob: -14.304821968078613

Token 767: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.87504005432129
    4. '<|end|>' → logprob: -17.25004005432129
    5. '```' → logprob: -17.31254005432129
    6. '
' → logprob: -17.93754005432129
    7. ')' → logprob: -18.12504005432129
    8. ',' → logprob: -19.18754005432129
    9. '۱' → logprob: -19.31254005432129
    10. '１' → logprob: -19.62504005432129

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.1875057220459
    4. '   ' → logprob: -17.2500057220459
    5. '2' → logprob: -18.0000057220459
    6. ')' → logprob: -18.1250057220459
    7. '１' → logprob: -18.7500057220459
    8. '<|end|>' → logprob: -18.8125057220459
    9. '১' → logprob: -18.9375057220459
    10. '۱' → logprob: -19.0000057220459

Token 769: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004194148350507021
    2. ')
' → logprob: -5.504194259643555
    3. '   ' → logprob: -9.379194259643555
    4. ' )' → logprob: -10.504194259643555
    5. ')
' → logprob: -13.629194259643555
    6. ' )
' → logprob: -13.879194259643555
    7. '),' → logprob: -14.504194259643555
    8. ')#' → logprob: -15.254194259643555
    9. ');' → logprob: -15.629194259643555
    10. ')a' → logprob: -16.379194259643555

Token 770: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.539801688631997e-05
    2. ' G' → logprob: -9.875065803527832
    3. '    
' → logprob: -12.500065803527832
    4. 'G' → logprob: -12.625065803527832
    5. '	G' → logprob: -13.125065803527832
    6. '<|end|>' → logprob: -13.375065803527832
    7. '
' → logprob: -14.750065803527832
    8. ',' → logprob: -14.750065803527832
    9. '  ' → logprob: -14.750065803527832
    10. '   ' → logprob: -14.750065803527832

Token 771: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001378329354338348
    2. 'G' → logprob: -7.001378536224365
    3. ' G' → logprob: -7.751378536224365
    4. '	G' → logprob: -11.251378059387207
    5. '  ' → logprob: -12.001378059387207
    6. ',' → logprob: -12.376378059387207
    7. ' ' → logprob: -12.501378059387207
    8. '    
' → logprob: -12.501378059387207
    9. ',G' → logprob: -13.001378059387207
    10. '
' → logprob: -13.876378059387207

Token 772: ' On' (ID: 2160)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.019635679200291634
    2. ' G' → logprob: -4.0196356773376465
    3. '   ' → logprob: -6.5196356773376465
    4. '	G' → logprob: -12.269636154174805
    5. '  ' → logprob: -13.269636154174805
    6. '<|end|>' → logprob: -13.269636154174805
    7. ' ' → logprob: -14.019636154174805
    8. '
' → logprob: -14.394636154174805
    9. '```' → logprob: -15.769636154174805
    10. '       ' → logprob: -15.894636154174805

Token 773: ' convert' (ID: 8452)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.09126468747854233
    2. 'a' → logprob: -3.0912647247314453
    3. 'i' → logprob: -3.8412647247314453
    4. '(a' → logprob: -4.216264724731445
    5. '(' → logprob: -6.591264724731445
    6. 'is' → logprob: -6.716264724731445
    7. '   ' → logprob: -7.591264724731445
    8. '-' → logprob: -7.591264724731445
    9. ' a' → logprob: -7.716264724731445
    10. 'ir' → logprob: -7.966264724731445

Token 775: ' à' (ID: 1221)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20426124334335327
    2. 'a' → logprob: -2.204261302947998
    3. '(' → logprob: -2.704261302947998
    4. '<|end|>' → logprob: -5.454261302947998
    5. ' a' → logprob: -6.579261302947998
    6. '(
' → logprob: -7.079261302947998
    7. '()' → logprob: -8.82926082611084
    8. ' (' → logprob: -9.20426082611084
    9. ')a' → logprob: -9.20426082611084
    10. '(b' → logprob: -9.20426082611084

Token 776: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010625054128468037
    2. ' ' → logprob: -4.635624885559082
    3. 'a' → logprob: -7.635624885559082
    4. '1' → logprob: -9.135624885559082
    5. ' zéro' → logprob: -9.260624885559082
    6. ' zero' → logprob: -9.510624885559082
    7. 'zero' → logprob: -10.760624885559082
    8. ' a' → logprob: -10.885624885559082
    9. ' -' → logprob: -11.135624885559082
    10. '-' → logprob: -11.135624885559082

Token 777: ' indice' (ID: 90848)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21676698327064514
    2. ' ' → logprob: -2.4667670726776123
    3. 'a' → logprob: -3.3417670726776123
    4. 'zero' → logprob: -3.7167670726776123
    5. ' zero' → logprob: -4.341766834259033
    6. 'base' → logprob: -4.841766834259033
    7. ' zéro' → logprob: -5.091766834259033
    8. '-' → logprob: -5.341766834259033
    9. 'indice' → logprob: -6.091766834259033
    10. '<|end|>' → logprob: -6.466766834259033

Token 778: ' basé' (ID: 139381)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.433760643005371
    2. ' ' → logprob: -1.433760643005371
    3. ' -' → logprob: -1.433760643005371
    4. 'a' → logprob: -2.558760643005371
    5. '1' → logprob: -2.933760643005371
    6. '-' → logprob: -3.058760643005371
    7. ' a' → logprob: -3.433760643005371
    8. ' à' → logprob: -4.308760643005371
    9. 's' → logprob: -4.558760643005371
    10. '   ' → logprob: -4.683760643005371

Token 779: ' sur' (ID: 1512)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018768629524856806
    2. 'sur' → logprob: -9.125187873840332
    3. 'z' → logprob: -9.625187873840332
    4. ' sur' → logprob: -11.875187873840332
    5. ' ' → logprob: -12.625187873840332
    6. 'à' → logprob: -13.375187873840332
    7. ' zéro' → logprob: -15.750187873840332
    8. '#' → logprob: -16.250186920166016
    9. '=' → logprob: -16.375186920166016
    10. 'zero' → logprob: -16.500186920166016

Token 780: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.17420256882906e-05
    2. ' ' → logprob: -9.875091552734375
    3. 'z' → logprob: -10.500091552734375
    4. ' zéro' → logprob: -11.750091552734375
    5. ' z' → logprob: -12.875091552734375
    6. 'zero' → logprob: -13.375091552734375
    7. ' zero' → logprob: -14.250091552734375
    8. ' ' → logprob: -19.500091552734375
    9. '1' → logprob: -20.250091552734375
    10. '۰' → logprob: -20.750091552734375

Token 781: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.624555291840807e-05
    2. 'z' → logprob: -9.500076293945312
    3. 'zero' → logprob: -13.625076293945312
    4. ' zéro' → logprob: -16.625076293945312
    5. 'zer' → logprob: -20.500076293945312
    6. 'Z' → logprob: -20.750076293945312
    7. ' ' → logprob: -21.000076293945312
    8. '1' → logprob: -21.000076293945312
    9. ' z' → logprob: -21.250076293945312
    10. '
' → logprob: -21.750076293945312

Token 782: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037013579276390374
    2. '<|end|>' → logprob: -9.125370025634766
    3. ' G' → logprob: -9.625370025634766
    4. 'G' → logprob: -9.625370025634766
    5. '	G' → logprob: -10.125370025634766
    6. '    
' → logprob: -10.500370025634766
    7. '  ' → logprob: -10.750370025634766
    8. ',' → logprob: -10.875370025634766
    9. ' ' → logprob: -12.125370025634766
    10. ',G' → logprob: -12.375370025634766

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018411019118502736
    2. 'G' → logprob: -8.750184059143066
    3. ' G' → logprob: -11.125184059143066
    4. '	G' → logprob: -11.875184059143066
    5. '  ' → logprob: -13.375184059143066
    6. ' ' → logprob: -13.750184059143066
    7. '    
' → logprob: -14.875184059143066
    8. '    ' → logprob: -15.000184059143066
    9. ',' → logprob: -16.000185012817383
    10. '<|end|>' → logprob: -16.125185012817383

Token 784: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.00012773419439326972
    2. ' G' → logprob: -9.000127792358398
    3. '   ' → logprob: -12.500127792358398
    4. '	G' → logprob: -14.625127792358398
    5. ' ' → logprob: -19.5001277923584
    6. '  ' → logprob: -19.6251277923584
    7. '       ' → logprob: -21.0001277923584
    8. '[G' → logprob: -21.0001277923584
    9. '```' → logprob: -21.0001277923584
    10. '    ' → logprob: -21.1251277923584

Token 785: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.1756367712223437e-05
    2. '[a' → logprob: -11.875011444091797
    3. 'b' → logprob: -12.625011444091797
    4. '[' → logprob: -13.625011444091797
    5. ' [' → logprob: -15.750011444091797
    6. '[B' → logprob: -17.750011444091797
    7. ' b' → logprob: -18.625011444091797
    8. '[s' → logprob: -18.625011444091797
    9. '   ' → logprob: -19.000011444091797
    10. '	b' → logprob: -19.375011444091797

Token 786: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4755152463912964
    2. '-' → logprob: -1.2255152463912964
    3. '[' → logprob: -2.475515365600586
    4. '[-' → logprob: -8.350515365600586
    5. ' [' → logprob: -8.600515365600586
    6. ' ' → logprob: -8.975515365600586
    7. '   ' → logprob: -9.475515365600586
    8. '[
' → logprob: -10.475515365600586
    9. ']' → logprob: -11.350515365600586
    10. '
' → logprob: -11.600515365600586

Token 787: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015040287980809808
    2. ' ' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.751503944396973
    4. '[' → logprob: -15.876503944396973
    5. '0' → logprob: -16.00150489807129
    6. '
' → logprob: -16.12650489807129
    7. ')' → logprob: -17.18900489807129
    8. ' [' → logprob: -17.25150489807129
    9. '<|end|>' → logprob: -17.37650489807129
    10. '-' → logprob: -17.50150489807129

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'a' → logprob: -16.000059127807617
    4. '
' → logprob: -18.500059127807617
    5. '   ' → logprob: -18.750059127807617
    6. '<|end|>' → logprob: -19.000059127807617
    7. '0' → logprob: -19.250059127807617
    8. 'b' → logprob: -19.625059127807617
    9. '-' → logprob: -19.625059127807617
    10. '[' → logprob: -19.750059127807617

Token 789: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03612106665968895
    2. '.append' → logprob: -3.786121129989624
    3. ').' → logprob: -4.411120891571045
    4. '.' → logprob: -7.661120891571045
    5. ']' → logprob: -9.661121368408203
    6. ' .' → logprob: -10.036121368408203
    7. ' ].' → logprob: -10.036121368408203
    8. ')' → logprob: -11.286121368408203
    9. '}.' → logprob: -12.036121368408203
    10. ' ).' → logprob: -13.411121368408203

Token 790: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. ' append' → logprob: -13.875001907348633
    3. 'appen' → logprob: -14.625001907348633
    4. '.append' → logprob: -16.875001907348633
    5. 'app' → logprob: -18.500001907348633
    6. '	append' → logprob: -19.125001907348633
    7. 'a' → logprob: -20.125001907348633
    8. 'add' → logprob: -20.500001907348633
    9. ' ' → logprob: -21.375001907348633
    10. 'Append' → logprob: -21.500001907348633

Token 791: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.875009536743164
    3. '(
' → logprob: -13.500009536743164
    4. 'a' → logprob: -14.250009536743164
    5. ' (' → logprob: -17.000009536743164
    6. '((' → logprob: -17.625009536743164
    7. '(s' → logprob: -19.750009536743164
    8. ' a' → logprob: -20.125009536743164
    9. '(A' → logprob: -20.625009536743164
    10. '(ai' → logprob: -20.750009536743164

Token 792: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16036751866340637
    2. '-' → logprob: -1.910367488861084
    3. ' ' → logprob: -9.535367965698242
    4. ')' → logprob: -10.285367965698242
    5. '[' → logprob: -10.660367965698242
    6. '<|end|>' → logprob: -12.410367965698242
    7. '   ' → logprob: -12.785367965698242
    8. ' ' → logprob: -13.535367965698242
    9. '
' → logprob: -13.910367965698242
    10. 's' → logprob: -14.410367965698242

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020556366071105003
    2. ' ' → logprob: -3.8955564498901367
    3. '-' → logprob: -11.395556449890137
    4. ' -' → logprob: -13.020556449890137
    5. ')' → logprob: -14.895556449890137
    6. '0' → logprob: -15.020556449890137
    7. '   ' → logprob: -15.520556449890137
    8. ' ' → logprob: -16.14555549621582
    9. '  ' → logprob: -17.45805549621582
    10. '```' → logprob: -17.77055549621582

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -8.875141143798828
    3. '-' → logprob: -14.125141143798828
    4. '0' → logprob: -16.375141143798828
    5. ' -' → logprob: -16.375141143798828
    6. ')' → logprob: -16.500141143798828
    7. '   ' → logprob: -18.000141143798828
    8. '<|end|>' → logprob: -19.000141143798828
    9. '```' → logprob: -19.875141143798828
    10. ' ' → logprob: -20.250141143798828

Token 795: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.452426608419046e-05
    2. ')
' → logprob: -10.62503433227539
    3. ' )' → logprob: -11.87503433227539
    4. '   ' → logprob: -13.00003433227539
    5. ')#' → logprob: -15.50003433227539
    6. '#' → logprob: -15.75003433227539
    7. ')

' → logprob: -16.00003433227539
    8. ']' → logprob: -16.37503433227539
    9. '()' → logprob: -17.12503433227539
    10. '[' → logprob: -17.37503433227539

Token 796: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6629629135131836
    2. 'visited' → logprob: -2.0379629135131836
    3. 'depth' → logprob: -2.0379629135131836
    4. 'distance' → logprob: -2.1629629135131836
    5. 'dist' → logprob: -3.1629629135131836
    6. '#' → logprob: -3.4129629135131836
    7. 'parent' → logprob: -4.662962913513184
    8. '

' → logprob: -5.412962913513184
    9. 'vis' → logprob: -5.537962913513184
    10. 'stack' → logprob: -5.662962913513184

Token 797: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31978124380111694
    2. '#' → logprob: -1.4447813034057617
    3. ')' → logprob: -4.444781303405762
    4. 'def' → logprob: -4.569781303405762
    5. '

' → logprob: -5.194781303405762
    6. 'visited' → logprob: -5.444781303405762
    7. '
' → logprob: -6.444781303405762
    8. 'n' → logprob: -6.819781303405762
    9. '```' → logprob: -7.444781303405762
    10. '<|end|>' → logprob: -7.819781303405762

Token 798: ' Même' (ID: 89628)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 799: ' chose' (ID: 15505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 800: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5729848146438599
    2. '<|end|>' → logprob: -1.1979848146438599
    3. '#' → logprob: -2.6979846954345703
    4. ')' → logprob: -3.8229846954345703
    5. '

' → logprob: -3.8229846954345703
    6. 'visited' → logprob: -4.57298469543457
    7. 'def' → logprob: -5.57298469543457
    8. '```' → logprob: -6.44798469543457
    9. 'parent' → logprob: -6.57298469543457
    10. 'distance' → logprob: -6.82298469543457

Token 801: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028326958417892456
    2. ' a' → logprob: -5.877832889556885
    3. '[a' → logprob: -11.502832412719727
    4. '(a' → logprob: -11.877832412719727
    5. ')' → logprob: -12.252832412719727
    6. ')a' → logprob: -13.752832412719727
    7. '```' → logprob: -14.002832412719727
    8. 'l' → logprob: -14.127832412719727
    9. '   ' → logprob: -14.252832412719727
    10. '#a' → logprob: -14.752832412719727

Token 802: ''autre' (ID: 52145)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19924741983413696
    2. ''autre' → logprob: -2.199247360229492
    3. 'b' → logprob: -3.199247360229492
    4. '-' → logprob: -4.324247360229492
    5. '_' → logprob: -5.574247360229492
    6. ' b' → logprob: -5.574247360229492
    7. '1' → logprob: -6.199247360229492
    8. ')' → logprob: -6.324247360229492
    9. 'e' → logprob: -7.199247360229492
    10. ' a' → logprob: -7.449247360229492

Token 803: ' extr' (ID: 15674)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 804: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00032712158281356096
    2. 'ême' → logprob: -9.125327110290527
    3. 'ém' → logprob: -9.875327110290527
    4. 'ê' → logprob: -10.250327110290527
    5. '#' → logprob: -10.375327110290527
    6. 'émie' → logprob: -11.000327110290527
    7. 'imité' → logprob: -11.250327110290527
    8. 'ité' → logprob: -11.500327110290527
    9. 'em' → logprob: -11.625327110290527
    10. 'e' → logprob: -11.875327110290527

Token 805: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.04562230408191681
    2. 'mite' → logprob: -3.2956223487854004
    3. 'm' → logprob: -4.9206223487854
    4. 'ité' → logprob: -9.920621871948242
    5. 'mé' → logprob: -10.045621871948242
    6. 'imité' → logprob: -10.295621871948242
    7. 'mie' → logprob: -11.170621871948242
    8. 'me' → logprob: -11.295621871948242
    9. 'mitt' → logprob: -11.545621871948242
    10. 'мит' → logprob: -11.545621871948242

Token 806: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.39761149883270264
    2. 'ty' → logprob: -1.6476114988327026
    3. 'té' → logprob: -2.147611618041992
    4. 'e' → logprob: -4.522611618041992
    5. 'te' → logprob: -5.647611618041992
    6. 'm' → logprob: -7.272611618041992
    7. 't' → logprob: -7.272611618041992
    8. 'tie' → logprob: -7.647611618041992
    9. 's' → logprob: -8.022611618041992
    10. 'ité' → logprob: -8.147611618041992

Token 807: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20698875188827515
    2. '<|end|>' → logprob: -2.33198881149292
    3. '#' → logprob: -2.70698881149292
    4. 'def' → logprob: -5.33198881149292
    5. ')' → logprob: -5.45698881149292
    6. '```' → logprob: -5.70698881149292
    7. '

' → logprob: -5.83198881149292
    8. 'parent' → logprob: -6.58198881149292
    9. '
' → logprob: -6.83198881149292
    10. 'visited' → logprob: -7.08198881149292

Token 808: '#' (ID: 2)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.33059823513031
    2. 'visited' → logprob: -1.33059823513031
    3. '#' → logprob: -1.83059823513031
    4. 'dist' → logprob: -2.3305983543395996
    5. 'parent' → logprob: -2.3305983543395996
    6. 'distance' → logprob: -2.7055983543395996
    7. '
' → logprob: -4.2055983543396
    8. 'color' → logprob: -4.5805983543396
    9. 'vis' → logprob: -4.8305983543396
    10. 'dp' → logprob: -5.5805983543396

Token 809: ' Initial' (ID: 9209)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7295846939086914
    2. 'depth' → logprob: -1.4795846939086914
    3. 'parent' → logprob: -2.2295846939086914
    4. 'dist' → logprob: -2.3545846939086914
    5. '#' → logprob: -3.7295846939086914
    6. 'stack' → logprob: -4.229584693908691
    7. 'vis' → logprob: -4.604584693908691
    8. 'color' → logprob: -4.604584693908691
    9. 'def' → logprob: -4.604584693908691
    10. 'sub' → logprob: -5.979584693908691

Token 810: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.0018806851003319025
    2. 'ization' → logprob: -6.501880645751953
    3. '#' → logprob: -8.251880645751953
    4. 'visited' → logprob: -10.251880645751953
    5. 'isations' → logprob: -10.501880645751953
    6. 'is' → logprob: -11.501880645751953
    7. 'isé' → logprob: -11.626880645751953
    8. 'isateur' → logprob: -11.751880645751953
    9. 'iser' → logprob: -12.126880645751953
    10. 'isierung' → logprob: -13.376880645751953

Token 811: ' des' (ID: 731)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23624736070632935
    2. 'visited' → logprob: -2.3612473011016846
    3. 'depth' → logprob: -3.6112473011016846
    4. 'color' → logprob: -3.9862473011016846
    5. 'distance' → logprob: -3.9862473011016846
    6. 'dp' → logprob: -4.611247539520264
    7. 'vis' → logprob: -4.736247539520264
    8. 'd' → logprob: -4.736247539520264
    9. 'de' → logprob: -5.486247539520264
    10. 'used' → logprob: -5.861247539520264

Token 812: ' tableaux' (ID: 176599)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1537153124809265
    2. 'visited' → logprob: -2.6537153720855713
    3. ' distances' → logprob: -3.9037153720855713
    4. 'parent' → logprob: -4.153715133666992
    5. 'vis' → logprob: -4.653715133666992
    6. 'prof' → logprob: -5.028715133666992
    7. 'parents' → logprob: -5.278715133666992
    8. 'distance' → logprob: -5.528715133666992
    9. 'depth' → logprob: -5.653715133666992
    10. 'par' → logprob: -7.028715133666992

Token 813: ' pour' (ID: 1930)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5561618208885193
    2. 'visited' → logprob: -2.181161880493164
    3. 'parent' → logprob: -2.306161880493164
    4. 'vis' → logprob: -3.181161880493164
    5. 'depth' → logprob: -3.181161880493164
    6. 'd' → logprob: -3.431161880493164
    7. 'dp' → logprob: -3.431161880493164
    8. 'de' → logprob: -4.056161880493164
    9. 'par' → logprob: -4.306161880493164
    10. 'used' → logprob: -4.556161880493164

Token 814: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1492568701505661
    2. 'les' → logprob: -3.274256944656372
    3. 'le' → logprob: -3.524256944656372
    4. 'stock' → logprob: -3.649256944656372
    5. 'visited' → logprob: -4.649256706237793
    6. 'l' → logprob: -4.774256706237793
    7. 'vis' → logprob: -4.899256706237793
    8. 'dist' → logprob: -5.274256706237793
    9. 'mar' → logprob: -5.399256706237793
    10. 'parent' → logprob: -5.524256706237793

Token 815: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.43234267830848694
    2. 'dist' → logprob: -1.6823426485061646
    3. 'parent' → logprob: -2.557342767715454
    4. 'prof' → logprob: -3.307342767715454
    5. 'pro' → logprob: -4.307342529296875
    6. 'ta' → logprob: -4.682342529296875
    7. 'n' → logprob: -5.182342529296875
    8. 'par' → logprob: -5.307342529296875
    9. 'cou' → logprob: -5.807342529296875
    10. ' distances' → logprob: -6.057342529296875

Token 816: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03474104031920433
    2. ' =' → logprob: -4.159740924835205
    3. ',
' → logprob: -5.159740924835205
    4. ',parent' → logprob: -5.284740924835205
    5. 'parent' → logprob: -5.909740924835205
    6. 'p' → logprob: -6.034740924835205
    7. 'par' → logprob: -6.784740924835205
    8. 'et' → logprob: -7.909740924835205
    9. ',p' → logprob: -7.909740924835205
    10. '=' → logprob: -8.659741401672363

Token 817: ' les' (ID: 1341)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.8122420310974121
    2. 'les' → logprob: -1.187242031097412
    3. 'prof' → logprob: -2.437242031097412
    4. 'la' → logprob: -2.937242031097412
    5. 'n' → logprob: -2.937242031097412
    6. 'dist' → logprob: -3.937242031097412
    7. 'depth' → logprob: -4.562242031097412
    8. 'ta' → logprob: -5.062242031097412
    9. 'niveau' → logprob: -5.187242031097412
    10. 'ha' → logprob: -6.437242031097412

Token 818: ' tailles' (ID: 169460)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.3164040744304657
    2. 'n' → logprob: -2.316404104232788
    3. 'prof' → logprob: -2.316404104232788
    4. 'dist' → logprob: -3.441404104232788
    5. 'depth' → logprob: -4.316403865814209
    6. 'niveau' → logprob: -4.941403865814209
    7. 'niv' → logprob: -5.191403865814209
    8. 'distance' → logprob: -5.566403865814209
    9. 'visited' → logprob: -5.941403865814209
    10. 'ta' → logprob: -6.191403865814209

Token 819: ' de' (ID: 334)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.8568453192710876
    2. 'p' → logprob: -1.3568453788757324
    3. 'par' → logprob: -1.8568453788757324
    4. 'sub' → logprob: -2.7318453788757324
    5. ' =' → logprob: -3.3568453788757324
    6. 'size' → logprob: -4.731845378875732
    7. 'dp' → logprob: -4.856845378875732
    8. '=' → logprob: -4.856845378875732
    9. ',parent' → logprob: -5.106845378875732
    10. 'sz' → logprob: -5.356845378875732

Token 820: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5309064388275146
    2. 'sub' → logprob: -0.9059064388275146
    3. 'ss' → logprob: -5.405906677246094
    4. ' subtree' → logprob: -6.030906677246094
    5. '```' → logprob: -8.530906677246094
    6. 'subs' → logprob: -9.155906677246094
    7. '[]' → logprob: -9.405906677246094
    8. 'la' → logprob: -9.405906677246094
    9. 'sou' → logprob: -9.405906677246094
    10. '#' → logprob: -9.655906677246094

Token 821: '-ar' (ID: 31325)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.08766253292560577
    2. 'ar' → logprob: -2.8376624584198
    3. 'trees' → logprob: -3.9626624584198
    4. 'arb' → logprob: -5.087662696838379
    5. 'graph' → logprob: -9.587662696838379
    6. ' arbres' → logprob: -10.087662696838379
    7. '```' → logprob: -10.837662696838379
    8. 't' → logprob: -11.712662696838379
    9. ' tree' → logprob: -11.837662696838379
    10. ' arbre' → logprob: -11.837662696838379

Token 822: 'bres' (ID: 88684)
  Prédit: 'bres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.009068307466804981
    2. 'bre' → logprob: -5.884068489074707
    3. 'b' → logprob: -6.009068489074707
    4. 'bo' → logprob: -6.259068489074707
    5. 'e' → logprob: -7.009068489074707
    6. 'r' → logprob: -8.009068489074707
    7. '```' → logprob: -8.259068489074707
    8. 'bor' → logprob: -9.634068489074707
    9. 'bors' → logprob: -10.009068489074707
    10. 'g' → logprob: -10.134068489074707

Token 823: '
' (ID: 198)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4058206081390381
    2. 'par' → logprob: -1.655820608139038
    3. 'p' → logprob: -2.030820608139038
    4. 'P' → logprob: -5.655820846557617
    5. 'pa' → logprob: -5.905820846557617
    6. 'parents' → logprob: -6.280820846557617
    7. 'paren' → logprob: -6.655820846557617
    8. 'size' → logprob: -8.155820846557617
    9. 'pai' → logprob: -8.280820846557617
    10. ',' → logprob: -8.530820846557617

Token 824: 'par' (ID: 796)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2170679122209549
    2. 'par' → logprob: -1.9670679569244385
    3. 'p' → logprob: -3.7170679569244385
    4. 'pa' → logprob: -4.092067718505859
    5. 'P' → logprob: -4.467067718505859
    6. 'parents' → logprob: -6.592067718505859
    7. 'fa' → logprob: -7.717067718505859
    8. 'pr' → logprob: -8.34206771850586
    9. 'size' → logprob: -8.84206771850586
    10. 'paren' → logprob: -8.96706771850586

Token 825: ' =' (ID: 314)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.008954782970249653
    2. 'ents' → logprob: -4.758955001831055
    3. 'e' → logprob: -8.758955001831055
    4. 't' → logprob: -9.008955001831055
    5. 'en' → logprob: -10.508955001831055
    6. '=' → logprob: -11.883955001831055
    7. 'nt' → logprob: -12.383955001831055
    8. 'et' → logprob: -12.758955001831055
    9. ' =' → logprob: -12.758955001831055
    10. '```' → logprob: -12.883955001831055

Token 826: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0009137284359894693
    2. '[' → logprob: -7.000913619995117
    3. '[n' → logprob: -13.625913619995117
    4. ' [-' → logprob: -14.750913619995117
    5. '[p' → logprob: -15.750913619995117
    6. '[a' → logprob: -15.875913619995117
    7. '[i' → logprob: -17.125913619995117
    8. '[N' → logprob: -17.250913619995117
    9. '[parent' → logprob: -17.750913619995117
    10. '[node' → logprob: -18.125913619995117

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '2' → logprob: -19.375
    4. '   ' → logprob: -19.875
    5. '１' → logprob: -20.0
    6. '
' → logprob: -20.75
    7. '

' → logprob: -20.875
    8. '```' → logprob: -21.25
    9. '১' → logprob: -21.375
    10. '۱' → logprob: -21.75

Token 828: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01590133085846901
    2. ' ]' → logprob: -4.890901565551758
    3. ' for' → logprob: -5.140901565551758
    4. ']*' → logprob: -6.265901565551758
    5. 'for' → logprob: -7.640901565551758
    6. ']*(' → logprob: -11.140901565551758
    7. ',' → logprob: -11.640901565551758
    8. ']+' → logprob: -13.390901565551758
    9. ')' → logprob: -14.015901565551758
    10. '[]' → logprob: -15.140901565551758

Token 829: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4857034981250763
    2. ',' → logprob: -1.985703468322754
    3. ')' → logprob: -2.985703468322754
    4. ' *' → logprob: -3.110703468322754
    5. ']' → logprob: -3.235703468322754
    6. 'for' → logprob: -3.485703468322754
    7. '*' → logprob: -3.610703468322754
    8. '
' → logprob: -3.860703468322754
    9. '[' → logprob: -4.610703468322754
    10. '[n' → logprob: -4.860703468322754

Token 830: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.375
    3. '(n' → logprob: -21.5
    4. '	n' → logprob: -21.875
    5. ')n' → logprob: -23.0
    6. '
' → logprob: -24.375
    7. '_n' → logprob: -26.375
    8. '[n' → logprob: -26.5
    9. '<n' → logprob: -26.75
    10. ',n' → logprob: -26.875

Token 831: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23767560720443726
    2. 'size' → logprob: -1.987675666809082
    3. 'sz' → logprob: -3.112675666809082
    4. 'sub' → logprob: -3.987675666809082
    5. '
' → logprob: -5.987675666809082
    6. 's' → logprob: -5.987675666809082
    7. 'siz' → logprob: -5.987675666809082
    8. 'sizes' → logprob: -6.612675666809082
    9. ',' → logprob: -7.237675666809082
    10. ',
' → logprob: -7.362675666809082

Token 832: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016558608040213585
    2. 'size' → logprob: -4.891558647155762
    3. '<|end|>' → logprob: -5.641558647155762
    4. 's' → logprob: -6.016558647155762
    5. 'sizes' → logprob: -7.141558647155762
    6. '#' (adapté à ' #') → logprob: -8.141558647155762
    7. '
' → logprob: -8.141558647155762
    8. ')' → logprob: -8.141558647155762
    9. '  
' → logprob: -8.266558647155762
    10. ',' → logprob: -8.266558647155762

Token 833: ' par' (ID: 686)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.9291724562644958
    2. 'sz' → logprob: -0.9291724562644958
    3. 'sub' → logprob: -1.6791725158691406
    4. 'siz' → logprob: -3.9291725158691406
    5. 's' → logprob: -6.804172515869141
    6. 'tam' → logprob: -7.304172515869141
    7. 'sizes' → logprob: -7.429172515869141
    8. 'ts' → logprob: -7.679172515869141
    9. 't' → logprob: -7.929172515869141
    10. ' sz' → logprob: -8.42917251586914

Token 834: '[u' (ID: 48750)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -1.0747147798538208
    2. 'ent' → logprob: -2.0747146606445312
    3. ' =' → logprob: -2.0747146606445312
    4. '#' → logprob: -2.1997146606445312
    5. 'size' → logprob: -2.4497146606445312
    6. '=' → logprob: -2.9497146606445312
    7. '
' → logprob: -3.1997146606445312
    8. '[' → logprob: -3.4497146606445312
    9. 't' → logprob: -3.9497146606445312
    10. 'sizes' → logprob: -4.324714660644531

Token 835: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016272829845547676
    2. ']
' → logprob: -4.391273021697998
    3. ' ]' → logprob: -6.391273021697998
    4. 'for' → logprob: -7.516273021697998
    5. ']=' → logprob: -8.14127254486084
    6. ' =' → logprob: -8.14127254486084
    7. '=' → logprob: -8.39127254486084
    8. '#' → logprob: -9.01627254486084
    9. ' ]
' → logprob: -9.26627254486084
    10. '
' → logprob: -9.64127254486084

Token 836: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4340532422065735
    2. 'le' → logprob: -1.3090531826019287
    3. ' parent' → logprob: -3.0590531826019287
    4. ' le' → logprob: -3.8090531826019287
    5. 'Le' → logprob: -5.309053421020508
    6. 'par' → logprob: -6.309053421020508
    7. 'u' → logprob: -6.684053421020508
    8. 'The' → logprob: -7.434053421020508
    9. 'int' → logprob: -7.559053421020508
    10. 'the' → logprob: -7.684053421020508

Token 837: ' de' (ID: 334)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.05567694827914238
    2. ' de' → logprob: -4.4306769371032715
    3. 'de' → logprob: -4.5556769371032715
    4. ')' → logprob: -5.0556769371032715
    5. ' of' → logprob: -5.0556769371032715
    6. 'u' → logprob: -5.5556769371032715
    7. '#' → logprob: -5.8056769371032715
    8. '<|end|>' → logprob: -6.0556769371032715
    9. '[]' → logprob: -6.3056769371032715
    10. 'def' → logprob: -6.4306769371032715

Token 838: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0336998775601387
    2. ' u' → logprob: -3.4086999893188477
    3. '[u' → logprob: -9.908699989318848
    4. '	u' → logprob: -14.158699989318848
    5. '
' → logprob: -14.158699989318848
    6. '(u' → logprob: -14.283699989318848
    7. 'l' → logprob: -14.533699989318848
    8. ']' → logprob: -14.783699989318848
    9. ')' → logprob: -15.033699989318848
    10. ' ' → logprob: -15.658699989318848

Token 839: ' dans' (ID: 2671)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2753363251686096
    2. 'sz' → logprob: -1.9003362655639648
    3. 'sub' → logprob: -2.650336265563965
    4. 'siz' → logprob: -4.525336265563965
    5. 's' → logprob: -5.775336265563965
    6. 'sizes' → logprob: -6.150336265563965
    7. '
' → logprob: -6.275336265563965
    8. 't' → logprob: -7.150336265563965
    9. 'tail' → logprob: -8.150336265563965
    10. ' sz' → logprob: -8.275336265563965

Token 840: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4486847221851349
    2. 'la' → logprob: -1.3236846923828125
    3. 'le' → logprob: -3.0736846923828125
    4. 'dfs' → logprob: -3.5736846923828125
    5. 'DFS' → logprob: -4.6986846923828125
    6. ' la' → logprob: -4.9486846923828125
    7. ' l' → logprob: -6.6986846923828125
    8. 'G' → logprob: -6.9486846923828125
    9. 'une' → logprob: -7.3236846923828125
    10. ' DFS' → logprob: -7.9486846923828125

Token 841: ''ar' (ID: 54307)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.6256155967712402
    2. 'range' → logprob: -1.7506155967712402
    3. 'dfs' → logprob: -2.5006155967712402
    4. 'graph' → logprob: -2.5006155967712402
    5. 'la' → logprob: -2.7506155967712402
    6. 'DFS' → logprob: -2.7506155967712402
    7. '#' → logprob: -2.8756155967712402
    8. 'ar' → logprob: -3.0006155967712402
    9. '   ' → logprob: -3.2506155967712402
    10. ' range' → logprob: -4.00061559677124

Token 842: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.007083922158926725
    2. 'b' → logprob: -5.757083892822266
    3. 'bo' → logprob: -6.507083892822266
    4. 'r' → logprob: -7.507083892822266
    5. 'bor' → logprob: -7.882083892822266
    6. 'e' → logprob: -8.007083892822266
    7. '[]' → logprob: -8.632083892822266
    8. '[' → logprob: -9.007083892822266
    9. '**' → logprob: -9.382083892822266
    10. 'vore' → logprob: -9.382083892822266

Token 843: '
' (ID: 198)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3395901918411255
    2. '
' → logprob: -1.5895901918411255
    3. 'sz' → logprob: -3.339590072631836
    4. 's' → logprob: -3.714590072631836
    5. 'sizes' → logprob: -4.964590072631836
    6. 'dist' → logprob: -5.089590072631836
    7. ',' → logprob: -5.964590072631836
    8. 'sub' → logprob: -6.464590072631836
    9. 'depth' → logprob: -6.589590072631836
    10. 'siz' → logprob: -6.964590072631836

Token 844: 'cnt' (ID: 33160)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.5221641659736633
    2. 'sub' → logprob: -1.1471641063690186
    3. 'siz' → logprob: -2.8971641063690186
    4. 'size' → logprob: -3.3971641063690186
    5. 'dep' → logprob: -8.147164344787598
    6. 'tam' → logprob: -9.897164344787598
    7. 's' → logprob: -10.397164344787598
    8. 'child' → logprob: -10.397164344787598
    9. 'sizes' → logprob: -10.647164344787598
    10. 'son' → logprob: -10.897164344787598

Token 845: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31426358222961426
    2. '=' → logprob: -1.3142635822296143
    3. 'sub' → logprob: -7.689263343811035
    4. 's' → logprob: -8.564263343811035
    5. '[' → logprob: -9.314263343811035
    6. '=[' → logprob: -9.564263343811035
    7. '_sub' → logprob: -10.064263343811035
    8. '=sub' → logprob: -10.439263343811035
    9. '[u' → logprob: -10.814263343811035
    10. '[]' → logprob: -11.314263343811035

Token 846: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024257178883999586
    2. ' [' → logprob: -6.377425670623779
    3. '[n' → logprob: -7.252425670623779
    4. '[-' → logprob: -11.252426147460938
    5. '[u' → logprob: -13.502426147460938
    6. 'n' → logprob: -15.752426147460938
    7. '[N' → logprob: -15.752426147460938
    8. '0' → logprob: -16.752426147460938
    9. '[node' → logprob: -17.002426147460938
    10. ' n' → logprob: -17.627426147460938

Token 847: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014731764793396
    2. '1' → logprob: -1.7014732360839844
    3. ' ' → logprob: -9.826473236083984
    4. '-' → logprob: -12.701473236083984
    5. '[' → logprob: -13.951473236083984
    6. ']' → logprob: -14.076473236083984
    7. '   ' → logprob: -15.138973236083984
    8. ' -' → logprob: -16.013973236083984
    9. '```' → logprob: -16.451473236083984
    10. '(' → logprob: -16.513973236083984

Token 848: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001458927639760077
    2. '(n' → logprob: -7.126459121704102
    3. ']*' → logprob: -7.626459121704102
    4. ' ]' → logprob: -9.126459121704102
    5. '(' → logprob: -10.251459121704102
    6. 'n' → logprob: -11.876459121704102
    7. ']*(' → logprob: -12.751459121704102
    8. ' (' → logprob: -12.876459121704102
    9. ')' → logprob: -13.001459121704102
    10. ' ' → logprob: -13.126459121704102

Token 849: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3957907557487488
    2. '(n' → logprob: -1.7707908153533936
    3. '*' → logprob: -2.8957908153533936
    4. ']' → logprob: -3.0207908153533936
    5. '*n' → logprob: -3.2707908153533936
    6. ' n' → logprob: -5.3957905769348145
    7. ']*' → logprob: -5.3957905769348145
    8. ')' → logprob: -6.1457905769348145
    9. 'n' → logprob: -6.7707905769348145
    10. ' ]' → logprob: -7.3957905769348145

Token 850: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. ' n' → logprob: -12.75000286102295
    3. '(n' → logprob: -17.375003814697266
    4. '	n' → logprob: -20.625003814697266
    5. '(' → logprob: -22.125003814697266
    6. ')n' → logprob: -22.125003814697266
    7. '   ' → logprob: -22.500003814697266
    8. '$n' → logprob: -23.375003814697266
    9. '
' → logprob: -24.000003814697266
    10. ' ' → logprob: -24.000003814697266

Token 851: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37988781929016113
    2. 'def' → logprob: -1.2548878192901611
    3. '  
' → logprob: -4.754887580871582
    4. '<|end|>' → logprob: -5.129887580871582
    5. ' 
' → logprob: -5.379887580871582
    6. '#' → logprob: -5.504887580871582
    7. ' ' → logprob: -6.004887580871582
    8. '
' → logprob: -6.379887580871582
    9. ' def' → logprob: -7.004887580871582
    10. '<|end|>' → logprob: -7.629887580871582

Token 852: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.18170833587646484
    2. '
' → logprob: -2.181708335876465
    3. ' ' → logprob: -3.681708335876465
    4. ' #' → logprob: -4.306708335876465
    5. '<|end|>' → logprob: -5.056708335876465
    6. 'def' → logprob: -6.431708335876465
    7. '  
' → logprob: -6.681708335876465
    8. '<|end|>' → logprob: -6.931708335876465
    9. ' 
' → logprob: -7.056708335876465
    10. '   ' → logprob: -7.306708335876465

Token 853: ' cnt' (ID: 27340)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015528402291238308
    2. 'sub' → logprob: -4.765528202056885
    3. 'size' → logprob: -6.140528202056885
    4. 'sz' → logprob: -6.515528202056885
    5. '1' → logprob: -6.765528202056885
    6. '
' → logprob: -7.640528202056885
    7. '0' → logprob: -7.765528202056885
    8. '(n' → logprob: -8.640528678894043
    9. 'G' → logprob: -9.390528678894043
    10. '[n' → logprob: -9.390528678894043

Token 854: '[u' (ID: 48750)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004511685692705214
    2. ' ]' → logprob: -7.75045108795166
    3. ']
' → logprob: -11.50045108795166
    4. ']=' → logprob: -12.62545108795166
    5. ')' → logprob: -12.87545108795166
    6. '#' → logprob: -13.37545108795166
    7. '
' → logprob: -14.12545108795166
    8. '   ' → logprob: -14.50045108795166
    9. '=' → logprob: -14.62545108795166
    10. ']
' → logprob: -15.00045108795166

Token 856: ' nombre' (ID: 9733)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.014617888256907463
    2. 'la' → logprob: -4.889617919921875
    3. '1' → logprob: -5.389617919921875
    4. 'nombre' → logprob: -7.264617919921875
    5. 'size' → logprob: -7.514617919921875
    6. '0' → logprob: -7.514617919921875
    7. ' taille' → logprob: -8.389617919921875
    8. 'ta' → logprob: -8.889617919921875
    9. 'le' → logprob: -9.139617919921875
    10. 's' → logprob: -9.764617919921875

Token 857: ' de' (ID: 334)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.02981598675251007
    2. '<|end|>' → logprob: -4.279816150665283
    3. '(u' → logprob: -5.154816150665283
    4. '   ' → logprob: -6.279816150665283
    5. ' u' → logprob: -6.654816150665283
    6. '<|end|>' → logprob: -7.279816150665283
    7. 'des' → logprob: -7.404816150665283
    8. ' of' → logprob: -7.404816150665283
    9. ' des' → logprob: -7.654816150665283
    10. '[node' → logprob: -7.779816150665283

Token 858: ' somm' (ID: 44830)
  Prédit: 'desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'desc' → logprob: -0.15530355274677277
    2. 'no' → logprob: -2.905303478240967
    3. 's' → logprob: -3.405303478240967
    4. ' noe' → logprob: -3.905303478240967
    5. 'n' → logprob: -4.030303478240967
    6. 'nodes' → logprob: -4.530303478240967
    7. 'f' → logprob: -5.655303478240967
    8. 'u' → logprob: -6.780303478240967
    9. 'des' → logprob: -7.030303478240967
    10. '```' → logprob: -7.905303478240967

Token 859: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.10382487624883652
    2. 'et' → logprob: -2.3538248538970947
    3. 'e' → logprob: -6.728825092315674
    4. 'è' → logprob: -6.978825092315674
    5. 'ettes' → logprob: -7.978825092315674
    6. '`' → logprob: -8.353824615478516
    7. 'eurs' → logprob: -8.478824615478516
    8. 'es' → logprob: -8.603824615478516
    9. 'ètres' → logprob: -8.728824615478516
    10. 'ètes' → logprob: -9.603824615478516

Token 860: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.3052845299243927
    2. ' dans' → logprob: -2.1802845001220703
    3. '<|end|>' → logprob: -2.3052845001220703
    4. 's' → logprob: -4.18028450012207
    5. 'du' → logprob: -4.93028450012207
    6. 'de' → logprob: -5.30528450012207
    7. 'sub' → logprob: -5.43028450012207
    8. ' du' → logprob: -5.68028450012207
    9. 'des' → logprob: -6.43028450012207
    10. '   ' → logprob: -6.43028450012207

Token 861: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.26023632287979126
    2. ' u' → logprob: -1.7602362632751465
    3. 'le' → logprob: -4.3852362632751465
    4. '[u' → logprob: -4.5102362632751465
    5. 'l' → logprob: -4.7602362632751465
    6. ' subtree' → logprob: -5.0102362632751465
    7. 'sub' → logprob: -5.6352362632751465
    8. ' la' → logprob: -5.8852362632751465
    9. '<|end|>' → logprob: -6.0102362632751465
    10. 'la' → logprob: -6.1352362632751465

Token 862: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026748403906822205
    2. 'sub' → logprob: -3.9017484188079834
    3. ' subtree' → logprob: -5.651748180389404
    4. 'u' → logprob: -6.026748180389404
    5. 'sou' → logprob: -9.151748657226562
    6. '[u' → logprob: -10.526748657226562
    7. ' sous' → logprob: -10.526748657226562
    8. '_s' → logprob: -10.901748657226562
    9. '_sub' → logprob: -11.151748657226562
    10. '```' → logprob: -11.276748657226562

Token 863: '-ar' (ID: 31325)
  Prédit: '_ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.2039109319448471
    2. 'ar' → logprob: -2.8289108276367188
    3. '[u' → logprob: -3.2039108276367188
    4. '_tree' → logprob: -3.3289108276367188
    5. '-ar' → logprob: -4.453910827636719
    6. '_' → logprob: -4.703910827636719
    7. 'tree' → logprob: -4.703910827636719
    8. ' arbre' → logprob: -4.828910827636719
    9. '-' → logprob: -5.203910827636719
    10. '_t' → logprob: -6.828910827636719

Token 864: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0010124455438926816
    2. 'bres' → logprob: -7.376012325286865
    3. 'b' → logprob: -9.001012802124023
    4. 'tre' → logprob: -9.376012802124023
    5. 'r' → logprob: -10.001012802124023
    6. 'tree' → logprob: -10.251012802124023
    7. '#' → logprob: -10.876012802124023
    8. 'e' → logprob: -11.126012802124023
    9. 'c' → logprob: -11.876012802124023
    10. 'che' → logprob: -11.876012802124023

Token 865: ' enr' (ID: 143893)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.06511916220188141
    2. 'u' → logprob: -2.8151192665100098
    3. ' u' → logprob: -6.56511926651001
    4. '(u' → logprob: -7.19011926651001
    5. 'de' → logprob: -7.81511926651001
    6. 'du' → logprob: -8.440118789672852
    7. ' rooted' → logprob: -9.315118789672852
    8. '_u' → logprob: -9.315118789672852
    9. 'root' → logprob: -10.690118789672852
    10. ' de' → logprob: -10.690118789672852

Token 866: 'acin' (ID: 18829)
  Prédit: 'acin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acin' → logprob: -0.19137096405029297
    2. 'ac' → logprob: -2.316370964050293
    3. 'ic' → logprob: -4.191370964050293
    4. 'c' → logprob: -4.191370964050293
    5. 'ich' → logprob: -4.191370964050293
    6. 'oot' → logprob: -5.066370964050293
    7. 'iché' → logprob: -5.191370964050293
    8. 'ed' → logprob: -5.566370964050293
    9. 'ec' → logprob: -6.191370964050293
    10. 'acé' → logprob: -6.316370964050293

Token 867: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007425837218761444
    2. 'ré' → logprob: -5.257425785064697
    3. 'né' → logprob: -6.382425785064697
    4. 'u' → logprob: -8.382426261901855
    5. '[u' → logprob: -10.132426261901855
    6. 'iné' → logprob: -10.382426261901855
    7. 'r' → logprob: -10.507426261901855
    8. 'root' → logprob: -10.507426261901855
    9. 'n' → logprob: -10.757426261901855
    10. '   ' → logprob: -10.882426261901855

Token 868: ' à' (ID: 1221)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0004972710739821196
    2. 'u' → logprob: -8.125496864318848
    3. '(u' → logprob: -8.875496864318848
    4. ' à' → logprob: -10.625496864318848
    5. 'à' → logprob: -10.625496864318848
    6. 'de' → logprob: -12.250496864318848
    7. 'au' → logprob: -12.250496864318848
    8. '   ' → logprob: -13.750496864318848
    9. 'at' → logprob: -14.250496864318848
    10. ' u' → logprob: -14.750496864318848

Token 869: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006724602542817593
    2. ' u' → logprob: -5.006724834442139
    3. '[u' → logprob: -12.00672435760498
    4. '   ' → logprob: -13.38172435760498
    5. '	u' → logprob: -13.63172435760498
    6. '
' → logprob: -15.50672435760498
    7. '```' → logprob: -17.006725311279297
    8. ' ' → logprob: -17.131725311279297
    9. '`' → logprob: -17.506725311279297
    10. '    
' → logprob: -17.631725311279297

Token 870: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5645268559455872
    2. 'def' → logprob: -0.9395268559455872
    3. 'stack' → logprob: -3.9395267963409424
    4. '
' → logprob: -5.0645270347595215
    5. 'q' → logprob: -5.6895270347595215
    6. 'visited' → logprob: -5.6895270347595215
    7. '#' → logprob: -5.9395270347595215
    8. '

' → logprob: -6.4395270347595215
    9. 'depth' → logprob: -6.4395270347595215
    10. 'queue' → logprob: -7.5645270347595215

Token 871: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000639765290543437
    2. 'stack' → logprob: -7.375639915466309
    3. 'q' → logprob: -12.375639915466309
    4. '
' → logprob: -13.250639915466309
    5. 'deque' → logprob: -13.250639915466309
    6. 'u' → logprob: -13.375639915466309
    7. 'queue' → logprob: -13.375639915466309
    8. 'd' → logprob: -14.500639915466309
    9. 'visited' → logprob: -14.875639915466309
    10. '#' → logprob: -15.375639915466309

Token 872: ' f' (ID: 285)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.014168680645525455
    2. ' dfs' → logprob: -4.264168739318848
    3. 'df' → logprob: -12.514168739318848
    4. 'DFS' → logprob: -14.139168739318848
    5. 'd' → logprob: -14.514168739318848
    6. 'D' → logprob: -16.76416778564453
    7. 'calc' → logprob: -16.76416778564453
    8. ' DFS' → logprob: -16.88916778564453
    9. '_d' → logprob: -17.51416778564453
    10. 'b' → logprob: -17.63916778564453

Token 873: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3714427053928375
    2. 'or' → logprob: -2.2464427947998047
    3. 'f' → logprob: -2.8714427947998047
    4. 's' → logprob: -3.1214427947998047
    5. 'ill' → logprob: -3.8714427947998047
    6. 'a' → logprob: -4.121442794799805
    7. 'lood' → logprob: -4.246442794799805
    8. 'ind' → logprob: -5.371442794799805
    9. 'dfs' → logprob: -5.371442794799805
    10. 'l' → logprob: -5.371442794799805

Token 874: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012058269931003451
    2. '):' → logprob: -6.751205921173096
    3. ' ,' → logprob: -11.251205444335938
    4. ',u' → logprob: -11.251205444335938
    5. ')' → logprob: -12.626205444335938
    6. ',v' → logprob: -13.001205444335938
    7. ',p' → logprob: -13.751205444335938
    8. ',d' → logprob: -13.876205444335938
    9. ',k' → logprob: -14.751205444335938
    10. ':' → logprob: -14.876205444335938

Token 875: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18002575635910034
    2. ':' → logprob: -1.8050258159637451
    3. ':
' → logprob: -9.305026054382324
    4. '    
' → logprob: -9.555026054382324
    5. ':return' → logprob: -10.555026054382324
    6. '[' → logprob: -11.180026054382324
    7. '       ' → logprob: -11.930026054382324
    8. '   ' → logprob: -12.055026054382324
    9. '```' → logprob: -12.055026054382324
    10. '[:]' → logprob: -12.180026054382324

Token 876: ' """
' (ID: 7037)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.525251567363739
    2. ' cnt' → logprob: -1.2752516269683838
    3. '   ' → logprob: -2.275251626968384
    4. 'global' → logprob: -4.775251388549805
    5. ' global' → logprob: -5.150251388549805
    6. ' stack' → logprob: -5.400251388549805
    7. 'stack' → logprob: -5.525251388549805
    8. 'par' → logprob: -6.275251388549805
    9. '	cnt' → logprob: -7.650251388549805
    10. ' par' → logprob: -8.150251388549805

Token 877: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025918271858245134
    2. '\t' → logprob: -7.127591609954834
    3. ' for' → logprob: -7.752591609954834
    4. '    ' → logprob: -8.252592086791992
    5. '"' → logprob: -8.752592086791992
    6. ':' → logprob: -9.127592086791992
    7. '	' → logprob: -9.252592086791992
    8. '       ' → logprob: -9.252592086791992
    9. '   ' → logprob: -9.502592086791992
    10. ')' → logprob: -9.627592086791992

Token 878: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7645395398139954
    2. 'cnt' → logprob: -1.7645394802093506
    3. 'par' → logprob: -2.2645394802093506
    4. ' stack' → logprob: -2.3895394802093506
    5. ' par' → logprob: -2.6395394802093506
    6. 'stack' → logprob: -3.1395394802093506
    7. ' cnt' → logprob: -3.5145394802093506
    8. ' global' → logprob: -5.63953971862793
    9. ' visited' → logprob: -5.76453971862793
    10. 'visited' → logprob: -5.76453971862793

Token 879: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.01033863052725792
    2. 'cul' → logprob: -4.76033878326416
    3. 'c' → logprob: -6.76033878326416
    4. 'cules' → logprob: -7.76033878326416
    5. 'culate' → logprob: -9.01033878326416
    6. 'cula' → logprob: -11.76033878326416
    7. '"""
' → logprob: -14.01033878326416
    8. '
' → logprob: -14.01033878326416
    9. '```' → logprob: -14.01033878326416
    10. 'cu' → logprob: -14.01033878326416

Token 880: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1363227665424347
    2. ':' → logprob: -2.3863227367401123
    3. ' ' → logprob: -4.636322975158691
    4. '(u' → logprob: -4.886322975158691
    5. '(' → logprob: -5.761322975158691
    6. ' :' → logprob: -5.886322975158691
    7. 'cnt' → logprob: -6.386322975158691
    8. '    ' → logprob: -6.761322975158691
    9. ' cnt' → logprob: -6.761322975158691
    10. ' u' → logprob: -6.886322975158691

Token 881: ' taille' (ID: 41644)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0010985381668433547
    2. ' cnt' → logprob: -7.3760986328125
    3. '"""' → logprob: -9.0010986328125
    4. '   ' → logprob: -9.2510986328125
    5. 'def' → logprob: -9.5010986328125
    6. 'size' → logprob: -9.5010986328125
    7. 'tail' → logprob: -10.0010986328125
    8. '"' → logprob: -11.0010986328125
    9. 'sz' → logprob: -11.3760986328125
    10. '"""
' → logprob: -12.0010986328125

Token 882: ' du' (ID: 1462)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.04846188426017761
    2. ' de' → logprob: -4.2984619140625
    3. ' (' → logprob: -4.2984619140625
    4. '(' → logprob: -4.9234619140625
    5. 'de' → logprob: -5.0484619140625
    6. ' du' → logprob: -6.5484619140625
    7. '_' → logprob: -6.5484619140625
    8. '   ' → logprob: -6.6734619140625
    9. 'du' → logprob: -7.5484619140625
    10. ' ' → logprob: -7.6734619140625

Token 883: ' sous' (ID: 14487)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.910942554473877
    2. 's' → logprob: -1.160942554473877
    3. 'u' → logprob: -1.410942554473877
    4. ' sous' → logprob: -4.160942554473877
    5. ' subtree' → logprob: -4.410942554473877
    6. 'sub' → logprob: -4.660942554473877
    7. ' ' → logprob: -6.660942554473877
    8. 'sou' → logprob: -6.910942554473877
    9. '[u' → logprob: -7.910942554473877
    10. ' sub' → logprob: -8.285942077636719

Token 884: '-ar' (ID: 31325)
  Prédit: '_ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.5330178737640381
    2. '_' → logprob: -1.158017873764038
    3. '-' → logprob: -2.658017873764038
    4. '-ar' → logprob: -4.783018112182617
    5. '_tree' → logprob: -4.783018112182617
    6. '-_' → logprob: -5.408018112182617
    7. '_-' → logprob: -5.783018112182617
    8. '_t' → logprob: -6.408018112182617
    9. 'ar' → logprob: -7.408018112182617
    10. '_s' → logprob: -8.408018112182617

Token 885: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -3.047134305234067e-05
    2. '_' → logprob: -11.000030517578125
    3. 'b' → logprob: -12.125030517578125
    4. 'bres' → logprob: -13.125030517578125
    5. 'bo' → logprob: -13.875030517578125
    6. 'br' → logprob: -13.875030517578125
    7. 'e' → logprob: -13.875030517578125
    8. '__' → logprob: -14.250030517578125
    9. 'être' → logprob: -14.750030517578125
    10. '_t' → logprob: -15.375030517578125

Token 886: ' enr' (ID: 143893)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.10028980672359467
    2. '[u' → logprob: -2.475289821624756
    3. ' de' → logprob: -5.600289821624756
    4. '   ' → logprob: -5.850289821624756
    5. 'u' → logprob: -6.725289821624756
    6. 'de' → logprob: -7.100289821624756
    7. ' u' → logprob: -7.225289821624756
    8. ' (' → logprob: -7.475289821624756
    9. ',' → logprob: -7.850289821624756
    10. '(' → logprob: -8.350289344787598

Token 887: 'acin' (ID: 18829)
  Prédit: 'acin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acin' → logprob: -0.027568873018026352
    2. 'ac' → logprob: -4.777568817138672
    3. '   ' → logprob: -5.027568817138672
    4. 'c' → logprob: -5.402568817138672
    5. 'a' → logprob: -6.027568817138672
    6. 'cin' → logprob: -6.152568817138672
    7. '
' → logprob: -7.277568817138672
    8. 'acé' → logprob: -7.402568817138672
    9. '  ' → logprob: -8.277568817138672
    10. 'd' → logprob: -8.402568817138672

Token 888: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.12493743002414703
    2. 'à' → logprob: -2.6249375343322754
    3. 'i' → logprob: -4.124937534332275
    4. ' à' → logprob: -4.124937534332275
    5. 'u' → logprob: -5.749937534332275
    6. 'e' → logprob: -5.749937534332275
    7. 'ée' → logprob: -5.874937534332275
    8. 'ré' → logprob: -6.874937534332275
    9. ' ' → logprob: -7.249937534332275
    10. 'ed' → logprob: -8.374937057495117

Token 889: ' à' (ID: 1221)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.09886150062084198
    2. ' à' → logprob: -2.7238614559173584
    3. 'à' → logprob: -4.3488616943359375
    4. 'au' → logprob: -4.5988616943359375
    5. '   ' → logprob: -5.9738616943359375
    6. 'en' → logprob: -7.3488616943359375
    7. ' en' → logprob: -7.7238616943359375
    8. '[u' → logprob: -7.7238616943359375
    9. 'u' → logprob: -7.8488616943359375
    10. ' ' → logprob: -8.473861694335938

Token 890: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4740847051143646
    2. ' u' → logprob: -0.974084734916687
    3. '	u' → logprob: -12.474084854125977
    4. '
' → logprob: -13.474084854125977
    5. ' ' → logprob: -13.849084854125977
    6. '[u' → logprob: -14.474084854125977
    7. '(u' → logprob: -14.724084854125977
    8. '   ' → logprob: -15.224084854125977
    9. ')' → logprob: -16.224084854125977
    10. ' ' → logprob: -16.474084854125977

Token 891: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4539373815059662
    2. '(u' → logprob: -1.0789374113082886
    3. ':' → logprob: -4.453937530517578
    4. ',' → logprob: -5.328937530517578
    5. '.' → logprob: -5.578937530517578
    6. ')' → logprob: -6.703937530517578
    7. '
' → logprob: -7.078937530517578
    8. ':
' → logprob: -7.203937530517578
    9. '):' → logprob: -7.328937530517578
    10. '[u' → logprob: -8.453937530517578

Token 892: ' utilisant' (ID: 92474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7985933423042297
    2. ' parcour' → logprob: -1.798593282699585
    3. 'comp' → logprob: -2.423593282699585
    4. 'dfs' → logprob: -2.673593282699585
    5. 'def' → logprob: -3.048593282699585
    6. ' recursive' → logprob: -4.048593521118164
    7. ' profondeur' → logprob: -4.048593521118164
    8. 's' → logprob: -4.173593521118164
    9. 'rec' → logprob: -4.673593521118164
    10. ' compt' → logprob: -5.048593521118164

Token 893: ' un' (ID: 537)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.4374995529651642
    2. 'rec' → logprob: -2.062499523162842
    3. 'dfs' → logprob: -2.187499523162842
    4. '1' → logprob: -2.937499523162842
    5. ' la' → logprob: -4.062499523162842
    6. 'def' → logprob: -5.062499523162842
    7. '   ' → logprob: -5.187499523162842
    8. ' dfs' → logprob: -5.687499523162842
    9. ' DFS' → logprob: -5.812499523162842
    10. 'u' → logprob: -5.937499523162842

Token 894: ' DFS' (ID: 115767)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2441210299730301
    2. ' stack' → logprob: -2.8691210746765137
    3. 'def' → logprob: -3.2441210746765137
    4. 'dfs' → logprob: -3.2441210746765137
    5. 'for' → logprob: -3.3691210746765137
    6. 'depth' → logprob: -4.494121074676514
    7. ' for' → logprob: -5.119121074676514
    8. ' DFS' → logprob: -5.244121074676514
    9. 'DFS' → logprob: -5.494121074676514
    10. ')' → logprob: -5.869121074676514

Token 895: ' réc' (ID: 36254)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.31720003485679626
    2. '   ' → logprob: -1.9422000646591187
    3. '.' → logprob: -2.942199945449829
    4. ':' → logprob: -3.067199945449829
    5. ',' → logprob: -4.067200183868408
    6. ':
' → logprob: -5.067200183868408
    7. ')' → logprob: -6.317200183868408
    8. '.
' → logprob: -7.567200183868408
    9. ' :' → logprob: -7.692200183868408
    10. 'def' → logprob: -7.817200183868408

Token 896: 'urs' (ID: 1628)
  Prédit: 'ursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.13266856968402863
    2. 'urs' → logprob: -2.6326684951782227
    3. 'u' → logprob: -3.3826684951782227
    4. 'ursion' → logprob: -4.257668495178223
    5. 'ur' → logprob: -6.132668495178223
    6. '_' → logprob: -7.132668495178223
    7. 'urse' → logprob: -8.257668495178223
    8. 'ursor' → logprob: -8.257668495178223
    9. 'def' → logprob: -8.757668495178223
    10. '   ' → logprob: -9.007668495178223

Token 897: 'if' (ID: 366)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.5664288997650146
    2. 'ursive' → logprob: -1.1914288997650146
    3. '(u' → logprob: -3.1914288997650146
    4. '   ' → logprob: -3.1914288997650146
    5. ' u' → logprob: -4.316429138183594
    6. 'ursion' → logprob: -4.441429138183594
    7. 'ur' → logprob: -4.816429138183594
    8. 'u' → logprob: -5.191429138183594
    9. 'def' → logprob: -5.816429138183594
    10. ' ' → logprob: -7.191429138183594

Token 898: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20642992854118347
    2. ':' → logprob: -2.456429958343506
    3. '.' → logprob: -2.581429958343506
    4. ',' → logprob: -4.081429958343506
    5. ':
' → logprob: -6.206429958343506
    6. ')' → logprob: -6.581429958343506
    7. '
' → logprob: -6.706429958343506
    8. '):' → logprob: -7.206429958343506
    9. 'u' → logprob: -7.706429958343506
    10. '(u' → logprob: -7.831429958343506

Token 899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004019753076136112
    2. '
' → logprob: -5.629019737243652
    3. ':' → logprob: -8.254019737243652
    4. '    
' → logprob: -9.254019737243652
    5. '  
' → logprob: -11.504019737243652
    6. '\n' → logprob: -11.504019737243652
    7. ')' → logprob: -11.879019737243652
    8. ' ' → logprob: -12.379019737243652
    9. '       ' → logprob: -12.379019737243652
    10. '    ' → logprob: -12.504019737243652

Token 900: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5960158109664917
    2. ':' → logprob: -0.8460158109664917
    3. '):' → logprob: -4.971015930175781
    4. '
' → logprob: -5.346015930175781
    5. ')' → logprob: -6.221015930175781
    6. ':
' → logprob: -6.346015930175781
    7. '():' → logprob: -6.721015930175781
    8. '(u' → logprob: -6.971015930175781
    9. '```' → logprob: -7.721015930175781
    10. '    
' → logprob: -7.971015930175781

Token 901: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12101081758737564
    2. '(u' → logprob: -2.2460107803344727
    3. ':' → logprob: -5.496010780334473
    4. ',' → logprob: -6.246010780334473
    5. ')' → logprob: -7.121010780334473
    6. '):' → logprob: -7.746010780334473
    7. ' (' → logprob: -7.871010780334473
    8. '):
' → logprob: -8.246010780334473
    9. ' :' → logprob: -9.496010780334473
    10. ':
' → logprob: -9.996010780334473

Token 902: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031973462319001555
    2. 'u' → logprob: -8.125319480895996
    3. ' u' → logprob: -11.125319480895996
    4. '    ' → logprob: -12.500319480895996
    5. '       ' → logprob: -13.500319480895996
    6. '
' → logprob: -14.000319480895996
    7. '	u' → logprob: -14.250319480895996
    8. '(u' → logprob: -14.250319480895996
    9. '    
' → logprob: -14.625319480895996
    10. ',' → logprob: -15.000319480895996

Token 903: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.00014847563579678535
    2. 'int' → logprob: -9.25014877319336
    3. '   ' → logprob: -10.25014877319336
    4. ' u' → logprob: -11.00014877319336
    5. '
' → logprob: -16.12514877319336
    6. '	u' → logprob: -16.50014877319336
    7. '`' → logprob: -16.87514877319336
    8. 'self' → logprob: -17.87514877319336
    9. '```' → logprob: -18.37514877319336
    10. '    
' → logprob: -18.62514877319336

Token 904: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6999143958091736
    2. ',' → logprob: -0.8249143958091736
    3. ':' → logprob: -3.5749144554138184
    4. '):
' → logprob: -3.8249144554138184
    5. '   ' → logprob: -4.449914455413818
    6. ')' → logprob: -6.074914455413818
    7. ':int' → logprob: -6.949914455413818
    8. '):
' → logprob: -9.57491397857666
    9. ',int' → logprob: -9.94991397857666
    10. ',
' → logprob: -10.32491397857666

Token 905: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.080963092041202e-06
    2. ' int' → logprob: -12.875004768371582
    3. '   ' → logprob: -14.250004768371582
    4. ':int' → logprob: -14.250004768371582
    5. ')' → logprob: -14.375004768371582
    6. 'u' → logprob: -15.125004768371582
    7. '):' → logprob: -15.375004768371582
    8. '[int' → logprob: -15.875004768371582
    9. '):
' → logprob: -17.2500057220459
    10. '0' → logprob: -18.3750057220459

Token 906: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15848281979560852
    2. '):
' → logprob: -2.033482789993286
    3. ')' → logprob: -4.283483028411865
    4. ',' → logprob: -6.533483028411865
    5. '   ' → logprob: -8.283482551574707
    6. '):
' → logprob: -9.033482551574707
    7. '):

' → logprob: -10.658482551574707
    8. ':' → logprob: -11.658482551574707
    9. ' ):' → logprob: -11.783482551574707
    10. '<|end|>' → logprob: -12.408482551574707

Token 907: ' Le' (ID: 2018)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9380118250846863
    2. '   ' → logprob: -1.813011884689331
    3. 'u' → logprob: -1.938011884689331
    4. 'Le' → logprob: -2.063011884689331
    5. 'L' → logprob: -2.438011884689331
    6. ' Le' → logprob: -3.438011884689331
    7. ' int' → logprob: -4.313011646270752
    8. ' u' → logprob: -4.313011646270752
    9. 'No' → logprob: -5.188011646270752
    10. 'le' → logprob: -5.563011646270752

Token 908: ' sommet' (ID: 130502)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.4738362729549408
    2. ')' → logprob: -1.5988363027572632
    3. ' sommet' → logprob: -2.5988361835479736
    4. ' noe' → logprob: -3.4738361835479736
    5. ' u' → logprob: -3.5988361835479736
    6. 'u' → logprob: -4.598836421966553
    7. ' n' → logprob: -4.973836421966553
    8. ' )' → logprob: -5.098836421966553
    9. '):' → logprob: -5.098836421966553
    10. 'node' → logprob: -5.598836421966553

Token 909: ' courant' (ID: 74694)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.143580362200737
    2. '   ' → logprob: -2.518580436706543
    3. ',' → logprob: -4.143580436706543
    4. '):
' → logprob: -4.393580436706543
    5. ')' → logprob: -4.643580436706543
    6. ':' → logprob: -4.768580436706543
    7. ' ):' → logprob: -5.518580436706543
    8. 'u' → logprob: -7.643580436706543
    9. ' ' → logprob: -8.143580436706543
    10. '
' → logprob: -8.143580436706543

Token 910: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19641417264938354
    2. ')' → logprob: -2.0714142322540283
    3. '):
' → logprob: -3.1964142322540283
    4. '   ' → logprob: -4.571413993835449
    5. ',' → logprob: -7.321413993835449
    6. '):
' → logprob: -8.07141399383545
    7. ' ):' → logprob: -10.94641399383545
    8. '
' → logprob: -11.44641399383545
    9. ' ' → logprob: -11.57141399383545
    10. '<|end|>' → logprob: -12.32141399383545

Token 911: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03812388703227043
    2. '\n' → logprob: -4.663124084472656
    3. '    
' → logprob: -4.663124084472656
    4. '
' → logprob: -5.288124084472656
    5. ')' → logprob: -5.538124084472656
    6. ':' → logprob: -6.038124084472656
    7. ' 
' → logprob: -6.163124084472656
    8. '```' → logprob: -6.288124084472656
    9. '  
' → logprob: -6.413124084472656
    10. '   
' → logprob: -8.038124084472656

Token 912: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031389365904033184
    2. ')' → logprob: -9.250313758850098
    3. '    
' → logprob: -9.250313758850098
    4. '
' → logprob: -9.750313758850098
    5. '"""' → logprob: -10.750313758850098
    6. '```' → logprob: -11.500313758850098
    7. ')
' → logprob: -11.750313758850098
    8. '       ' → logprob: -12.500313758850098
    9. '"""
' → logprob: -12.875313758850098
    10. '   ' → logprob: -13.125313758850098

Token 913: ':
' (ID: 734)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6246234774589539
    2. '   ' → logprob: -1.1246235370635986
    3. 'cnt' → logprob: -2.4996235370635986
    4. '    ' → logprob: -4.1246232986450195
    5. ')' → logprob: -4.7496232986450195
    6. ' 
' → logprob: -4.8746232986450195
    7. ' ' → logprob: -5.1246232986450195
    8. ':' → logprob: -5.4996232986450195
    9. ' counter' → logprob: -5.7496232986450195
    10. ' None' → logprob: -6.1246232986450195

Token 914: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34214645624160767
    2. 'int' → logprob: -1.467146396636963
    3. ' int' → logprob: -3.467146396636963
    4. 'cnt' → logprob: -3.717146396636963
    5. ' cnt' → logprob: -5.842146396636963
    6. 'None' → logprob: -8.342146873474121
    7. '0' → logprob: -8.717146873474121
    8. ' None' → logprob: -9.217146873474121
    9. ' ' → logprob: -9.717146873474121
    10. '  ' → logprob: -9.842146873474121

Token 915: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -6.432518421206623e-05
    2. ' int' → logprob: -10.3750638961792
    3. '   ' → logprob: -11.0000638961792
    4. 'None' → logprob: -11.1250638961792
    5. 'cnt' → logprob: -14.3750638961792
    6. 'void' → logprob: -14.8750638961792
    7. '[int' → logprob: -15.0000638961792
    8. '<int' → logprob: -16.625064849853516
    9. '(int' → logprob: -16.875064849853516
    10. 'The' → logprob: -17.375064849853516

Token 916: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6510247588157654
    2. ':' → logprob: -1.6510248184204102
    3. '):' → logprob: -1.6510248184204102
    4. ')' → logprob: -2.40102481842041
    5. '    ' → logprob: -6.52602481842041
    6. '):
' → logprob: -6.65102481842041
    7. ':
' → logprob: -8.15102481842041
    8. '  ' → logprob: -8.27602481842041
    9. ' :' → logprob: -8.27602481842041
    10. ' ' → logprob: -9.15102481842041

Token 917: ' La' (ID: 3038)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5758540630340576
    2. 'cnt' → logprob: -0.9508540630340576
    3. '1' → logprob: -3.2008540630340576
    4. '   ' → logprob: -4.700854301452637
    5. '0' → logprob: -7.200854301452637
    6. '(cnt' → logprob: -8.075854301452637
    7. ' ' → logprob: -8.325854301452637
    8. '[cnt' → logprob: -10.450854301452637
    9. '	cnt' → logprob: -10.575854301452637
    10. 'sum' → logprob: -10.950854301452637

Token 918: ' taille' (ID: 41644)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.36922141909599304
    2. ' cnt' → logprob: -1.3692214488983154
    3. ' taille' → logprob: -3.4942214488983154
    4. 'tail' → logprob: -4.369221210479736
    5. ' size' → logprob: -5.369221210479736
    6. 'size' → logprob: -6.369221210479736
    7. ' nombre' → logprob: -7.744221210479736
    8. ' sum' → logprob: -7.869221210479736
    9. 'count' → logprob: -7.869221210479736
    10. 'nombre' → logprob: -7.994221210479736

Token 919: ' du' (ID: 1462)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.16990040242671967
    2. '(' → logprob: -1.9199004173278809
    3. '   ' → logprob: -6.294900417327881
    4. ' de' → logprob: -6.544900417327881
    5. '(
' → logprob: -6.544900417327881
    6. ' (' → logprob: -6.669900417327881
    7. ' of' → logprob: -6.794900417327881
    8. 'de' → logprob: -7.044900417327881
    9. ')' → logprob: -7.544900417327881
    10. '(f' → logprob: -8.669899940490723

Token 920: ' sous' (ID: 14487)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.04046526923775673
    2. 's' → logprob: -3.7904653549194336
    3. '1' → logprob: -4.915465354919434
    4. 'sub' → logprob: -5.415465354919434
    5. ' cnt' → logprob: -5.540465354919434
    6. 'u' → logprob: -8.040465354919434
    7. 'sou' → logprob: -8.165465354919434
    8. ' ' → logprob: -8.665465354919434
    9. ' sous' → logprob: -9.415465354919434
    10. '   ' → logprob: -9.415465354919434

Token 921: '-ar' (ID: 31325)
  Prédit: '-ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ar' → logprob: -0.31824538111686707
    2. '_ar' → logprob: -1.3182454109191895
    3. 'ar' → logprob: -6.1932454109191895
    4. '_tree' → logprob: -6.4432454109191895
    5. '```' → logprob: -8.318244934082031
    6. ' arbre' → logprob: -8.443244934082031
    7. 'tree' → logprob: -8.818244934082031
    8. '-' → logprob: -9.193244934082031
    9. '   ' → logprob: -9.318244934082031
    10. ''ar' → logprob: -9.318244934082031

Token 922: 'bre' (ID: 9945)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.4027693569660187
    2. '_ar' → logprob: -1.1527693271636963
    3. ' arbre' → logprob: -5.402769565582275
    4. '_tree' → logprob: -5.402769565582275
    5. ''ar' → logprob: -6.402769565582275
    6. 'tree' → logprob: -6.527769565582275
    7. 'u' → logprob: -6.652769565582275
    8. '_' → logprob: -7.527769565582275
    9. '-ar' → logprob: -8.277769088745117
    10. '```' → logprob: -8.527769088745117

Token 923: ' enr' (ID: 143893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7706280946731567
    2. 'du' → logprob: -2.395627975463867
    3. '(u' → logprob: -2.770627975463867
    4. '[u' → logprob: -2.770627975463867
    5. ' du' → logprob: -3.020627975463867
    6. 'u' → logprob: -3.145627975463867
    7. ')' → logprob: -3.520627975463867
    8. '
' → logprob: -3.645627975463867
    9. ' rooted' → logprob: -3.770627975463867
    10. ' enr' → logprob: -4.020627975463867

Token 924: 'acin' (ID: 18829)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.830927312374115
    2. '(u' → logprob: -1.2059273719787598
    3. '   ' → logprob: -1.9559273719787598
    4. 'être' → logprob: -3.0809273719787598
    5. 'u' → logprob: -3.8309273719787598
    6. '_u' → logprob: -5.20592737197876
    7. 'e' → logprob: -5.20592737197876
    8. '*u' → logprob: -5.20592737197876
    9. 'œ' → logprob: -5.33092737197876
    10. '```' → logprob: -5.83092737197876

Token 925: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.37787118554115295
    2. 'ée' → logprob: -1.2528711557388306
    3. '   ' → logprob: -4.127871036529541
    4. 'ed' → logprob: -5.252871036529541
    5. 'e' → logprob: -5.877871036529541
    6. 'è' → logprob: -6.627871036529541
    7. '[u' → logprob: -6.877871036529541
    8. 'u' → logprob: -8.1278715133667
    9. '```' → logprob: -8.3778715133667
    10. '__' → logprob: -8.3778715133667

Token 926: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.808788537979126
    2. '(u' → logprob: -1.308788537979126
    3. 'à' → logprob: -1.558788537979126
    4. '   ' → logprob: -3.558788537979126
    5. 'u' → logprob: -3.683788537979126
    6. ')' → logprob: -4.558788299560547
    7. ' ' → logprob: -5.933788299560547
    8. 'de' → logprob: -6.183788299560547
    9. ' u' → logprob: -6.433788299560547
    10. ''à' → logprob: -7.558788299560547

Token 927: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5759491920471191
    2. ' u' → logprob: -0.8259491920471191
    3. '	u' → logprob: -12.700948715209961
    4. ' ' → logprob: -12.950948715209961
    5. '(u' → logprob: -13.325948715209961
    6. ' ' → logprob: -13.575948715209961
    7. '[u' → logprob: -14.450948715209961
    8. ',u' → logprob: -15.575948715209961
    9. '
' → logprob: -16.32594871520996
    10. '`' → logprob: -16.32594871520996

Token 928: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5011337995529175
    2. ')' → logprob: -1.2511337995529175
    3. '):' → logprob: -2.501133918762207
    4. '):
' → logprob: -3.876133918762207
    5. '
' → logprob: -5.501133918762207
    6. ')
' → logprob: -8.126133918762207
    7. ':' → logprob: -8.251133918762207
    8. '    
' → logprob: -9.376133918762207
    9. ',' → logprob: -9.626133918762207
    10. '```' → logprob: -9.751133918762207

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013390209525823593
    2. '
' → logprob: -4.763390064239502
    3. ':' → logprob: -5.513390064239502
    4. '    
' → logprob: -7.888390064239502
    5. ' 
' → logprob: -9.76339054107666
    6. '\n' → logprob: -9.88839054107666
    7. '  
' → logprob: -10.13839054107666
    8. ':
' → logprob: -10.13839054107666
    9. '    ' → logprob: -10.26339054107666
    10. '```' → logprob: -10.63839054107666

Token 930: ' Side' (ID: 20914)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005249887239187956
    2. ':' → logprob: -5.630249977111816
    3. ')' → logprob: -7.380249977111816
    4. '
' → logprob: -7.630249977111816
    5. '):' → logprob: -8.380249977111816
    6. '```' → logprob: -9.255249977111816
    7. '):
' → logprob: -9.630249977111816
    8. '    
' → logprob: -10.130249977111816
    9. '\n' → logprob: -11.005249977111816
    10. ':
' → logprob: -11.255249977111816

Token 931: ' effect' (ID: 3159)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0485116243362427
    2. ' effect' → logprob: -1.6735116243362427
    3. '_effect' → logprob: -2.048511505126953
    4. ' def' → logprob: -2.673511505126953
    5. 'def' → logprob: -2.798511505126953
    6. 'e' → logprob: -3.173511505126953
    7. ':' → logprob: -3.673511505126953
    8. ' effects' → logprob: -3.673511505126953
    9. 'effects' → logprob: -3.673511505126953
    10. 'effect' → logprob: -4.173511505126953

Token 932: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045647818595170975
    2. '   ' → logprob: -3.6706478595733643
    3. ' :' → logprob: -4.170647621154785
    4. ':
' → logprob: -6.045647621154785
    5. '):' → logprob: -8.045647621154785
    6. ' :
' → logprob: -8.295647621154785
    7. ')' → logprob: -9.045647621154785
    8. ' 
' → logprob: -9.295647621154785
    9. '    
' → logprob: -9.420647621154785
    10. '):
' → logprob: -9.670647621154785

Token 933: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0262004304677248
    2. '    
' → logprob: -3.776200532913208
    3. '
' → logprob: -6.776200294494629
    4. ' 
' → logprob: -6.901200294494629
    5. '    ' → logprob: -8.401200294494629
    6. '     
' → logprob: -8.651200294494629
    7. '   
' → logprob: -8.651200294494629
    8. '  
' → logprob: -9.901200294494629
    9. '```' → logprob: -10.276200294494629
    10. '       ' → logprob: -10.401200294494629

Token 934: ' Rem' (ID: 6890)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5496190190315247
    2. 'cnt' → logprob: -0.9246190190315247
    3. '   ' → logprob: -3.92461895942688
    4. ' par' → logprob: -6.049619197845459
    5. '	cnt' → logprob: -6.549619197845459
    6. 'par' → logprob: -7.049619197845459
    7. 'count' → logprob: -8.4246187210083
    8. 'c' → logprob: -8.5496187210083
    9. ' for' → logprob: -8.5496187210083
    10. ' ' → logprob: -8.6746187210083

Token 935: 'plit' (ID: 4059)
  Prédit: 'plit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.002276104176416993
    2. 'pl' → logprob: -6.1272759437561035
    3. 'p' → logprob: -9.877276420593262
    4. 'place' → logprob: -10.502276420593262
    5. 'plies' → logprob: -12.252276420593262
    6. 'plt' → logprob: -13.502276420593262
    7. '   ' → logprob: -13.752276420593262
    8. 'ple' → logprob: -14.002276420593262
    9. 'plits' → logprob: -14.127276420593262
    10. 'et' → logprob: -14.252276420593262

Token 936: ' les' (ID: 1341)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6855804324150085
    2. '   ' → logprob: -0.9355804324150085
    3. 'cnt' → logprob: -2.5605804920196533
    4. '[cnt' → logprob: -4.310580253601074
    5. '	cnt' → logprob: -5.435580253601074
    6. ' ' → logprob: -6.060580253601074
    7. '(cnt' → logprob: -6.435580253601074
    8. ' ' → logprob: -6.810580253601074
    9. '[]' → logprob: -7.685580253601074
    10. '    ' → logprob: -7.685580253601074

Token 937: ' tableaux' (ID: 176599)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5849628448486328
    2. ' cnt' → logprob: -0.8349628448486328
    3. ' espaces' → logprob: -4.959962844848633
    4. '   ' → logprob: -7.459962844848633
    5. ' spaces' → logprob: -7.459962844848633
    6. ' ' → logprob: -8.959962844848633
    7. 'spaces' → logprob: -9.084962844848633
    8. '	cnt' → logprob: -9.209962844848633
    9. 'par' → logprob: -9.334962844848633
    10. ' par' → logprob: -9.459962844848633

Token 938: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1674267202615738
    2. ' cnt' → logprob: -2.167426824569702
    3. 'cnt' → logprob: -3.917426824569702
    4. 'par' → logprob: -4.417426586151123
    5. '   ' → logprob: -5.917426586151123
    6. '[cnt' → logprob: -6.167426586151123
    7. ' des' → logprob: -6.542426586151123
    8. ' de' → logprob: -7.792426586151123
    9. '(cnt' → logprob: -8.042427062988281
    10. '	par' → logprob: -8.417427062988281

Token 939: ' (' (ID: 350)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.008312786929309368
    2. 'ent' → logprob: -6.133312702178955
    3. '[]' → logprob: -6.258312702178955
    4. ',' → logprob: -6.758312702178955
    5. '   ' → logprob: -7.258312702178955
    6. 'ents' → logprob: -7.508312702178955
    7. 'u' → logprob: -7.508312702178955
    8. 'nt' → logprob: -8.008313179016113
    9. '[:]' → logprob: -8.758313179016113
    10. '[' → logprob: -9.133313179016113

Token 940: 'parent' (ID: 4903)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3545868694782257
    2. 'u' → logprob: -1.7295868396759033
    3. ' u' → logprob: -2.8545868396759033
    4. ')' → logprob: -3.1045868396759033
    5. ',' → logprob: -4.354587078094482
    6. ',u' → logprob: -5.854587078094482
    7. ' )' → logprob: -6.729587078094482
    8. ' ,' → logprob: -7.229587078094482
    9. '   ' → logprob: -7.604587078094482
    10. ' and' → logprob: -8.604586601257324

Token 941: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04931227117776871
    2. '[u' → logprob: -3.1743123531341553
    3. ',' → logprob: -5.174312114715576
    4. ')
' → logprob: -8.799312591552734
    5. ' )' → logprob: -8.924312591552734
    6. '),' → logprob: -8.924312591552734
    7. '   ' → logprob: -9.924312591552734
    8. ')`' → logprob: -10.924312591552734
    9. ' et' → logprob: -11.049312591552734
    10. 'u' → logprob: -11.049312591552734

Token 942: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035172796342521906
    2. ',' → logprob: -6.003517150878906
    3. '[u' → logprob: -7.378517150878906
    4. '(u' → logprob: -9.128517150878906
    5. ')' → logprob: -9.503517150878906
    6. ' and' → logprob: -10.503517150878906
    7. ',u' → logprob: -10.628517150878906
    8. '    
' → logprob: -10.878517150878906
    9. '       ' → logprob: -10.878517150878906
    10. '[]' → logprob: -11.003517150878906

Token 943: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20150981843471527
    2. ' cnt' → logprob: -1.7015098333358765
    3. '	cnt' → logprob: -10.076509475708008
    4. '   ' → logprob: -11.076509475708008
    5. '
' → logprob: -11.451509475708008
    6. 'counter' → logprob: -11.701509475708008
    7. 'count' → logprob: -12.451509475708008
    8. '    
' → logprob: -12.701509475708008
    9. '```' → logprob: -13.201509475708008
    10. '(cnt' → logprob: -13.201509475708008

Token 944: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2972675561904907
    2. '(u' → logprob: -1.6722675561904907
    3. '[u' → logprob: -3.297267436981201
    4. '.' → logprob: -4.422267436981201
    5. ')' → logprob: -4.797267436981201
    6. '.
' → logprob: -5.922267436981201
    7. ',' → logprob: -6.172267436981201
    8. 'def' → logprob: -6.422267436981201
    9. '):
' → logprob: -6.547267436981201
    10. ')
' → logprob: -6.922267436981201

Token 945: 'tail' (ID: 20472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23469647765159607
    2. 'sub' → logprob: -2.609696388244629
    3. ' )' → logprob: -2.609696388244629
    4. ' subtree' → logprob: -3.859696388244629
    5. 'u' → logprob: -4.484696388244629
    6. 's' → logprob: -4.984696388244629
    7. 'count' → logprob: -5.609696388244629
    8. ')s' → logprob: -6.109696388244629
    9. 'cnt' → logprob: -6.109696388244629
    10. ' u' → logprob: -6.359696388244629

Token 946: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.004082674626260996
    2. 'e' → logprob: -6.254082679748535
    3. 'lé' → logprob: -7.129082679748535
    4. '   ' → logprob: -7.879082679748535
    5. '[u' → logprob: -9.004082679748535
    6. 'l' → logprob: -9.254082679748535
    7. '`' → logprob: -9.379082679748535
    8. 'être' → logprob: -9.504082679748535
    9. '#' → logprob: -9.504082679748535
    10. 'é' → logprob: -9.754082679748535

Token 947: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.18782690167427063
    2. ' de' → logprob: -2.4378268718719482
    3. ' des' → logprob: -3.3128268718719482
    4. '[u' → logprob: -3.9378268718719482
    5. ')' → logprob: -4.312827110290527
    6. 'de' → logprob: -5.437827110290527
    7. 'du' → logprob: -5.437827110290527
    8. ' )' → logprob: -6.187827110290527
    9. '   ' → logprob: -6.687827110290527
    10. 'des' → logprob: -6.812827110290527

Token 948: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011279122903943062
    2. 'sub' → logprob: -4.636279106140137
    3. ' sous' → logprob: -7.386279106140137
    4. 'u' → logprob: -7.761279106140137
    5. 'sou' → logprob: -8.011279106140137
    6. 'under' → logprob: -10.261279106140137
    7. ' ' → logprob: -10.636279106140137
    8. '    
' → logprob: -11.011279106140137
    9. ' 
' → logprob: -11.261279106140137
    10. 'Sous' → logprob: -11.636279106140137

Token 949: '-ar' (ID: 31325)
  Prédit: '-ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ar' → logprob: -0.32770994305610657
    2. '_ar' → logprob: -1.3277099132537842
    3. 'ar' → logprob: -5.327710151672363
    4. '-' → logprob: -5.702710151672363
    5. ' arbre' → logprob: -6.077710151672363
    6. '_tree' → logprob: -6.202710151672363
    7. '_' → logprob: -7.827710151672363
    8. '-tree' → logprob: -7.952710151672363
    9. '-_' → logprob: -8.327710151672363
    10. '-Ar' → logprob: -8.702710151672363

Token 950: 'bre' (ID: 9945)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9911136031150818
    2. 'être' → logprob: -1.6161136627197266
    3. 'é' → logprob: -2.6161136627197266
    4. '_' → logprob: -3.1161136627197266
    5. 'êt' → logprob: -3.1161136627197266
    6. 'bre' → logprob: -3.1161136627197266
    7. 'ê' → logprob: -3.2411136627197266
    8. 'êtres' → logprob: -3.2411136627197266
    9. 'ête' → logprob: -3.8661136627197266
    10. '#' → logprob: -4.241113662719727

Token 951: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0379997119307518
    2. ').' → logprob: -4.037999629974365
    3. '[u' → logprob: -4.162999629974365
    4. ')
' → logprob: -6.662999629974365
    5. ' )' → logprob: -7.287999629974365
    6. '   ' → logprob: -7.787999629974365
    7. 'u' → logprob: -8.163000106811523
    8. ').
' → logprob: -8.413000106811523
    9. ' u' → logprob: -8.538000106811523
    10. ' ' → logprob: -8.663000106811523

Token 952: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12603236734867096
    2. ':' → logprob: -2.5010323524475098
    3. '):
' → logprob: -4.25103235244751
    4. ':
' → logprob: -4.50103235244751
    5. '):' → logprob: -5.12603235244751
    6. '
' → logprob: -5.50103235244751
    7. ')' → logprob: -7.62603235244751
    8. '    
' → logprob: -8.251032829284668
    9. ',' → logprob: -9.501032829284668
    10. '(u' → logprob: -10.126032829284668

Token 953: ' tous' (ID: 10688)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4798465669155121
    2. ' u' → logprob: -0.9798465967178345
    3. '	u' → logprob: -5.229846477508545
    4. '   ' → logprob: -8.604846954345703
    5. ' ' → logprob: -9.354846954345703
    6. '[u' → logprob: -10.104846954345703
    7. '	' → logprob: -10.229846954345703
    8. ' ' → logprob: -10.604846954345703
    9. '    ' → logprob: -11.604846954345703
    10. '(u' → logprob: -13.729846954345703

Token 954: ' les' (ID: 1341)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.36739692091941833
    2. 'u' → logprob: -1.3673969507217407
    3. ' v' → logprob: -3.492396831512451
    4. 'v' → logprob: -4.367396831512451
    5. '   ' → logprob: -5.992396831512451
    6. 'children' → logprob: -6.617396831512451
    7. ' descendants' → logprob: -6.742396831512451
    8. ' children' → logprob: -6.867396831512451
    9. ' enfants' → logprob: -7.367396831512451
    10. '(u' → logprob: -7.742396831512451

Token 955: ' somm' (ID: 44830)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.34130850434303284
    2. ' u' → logprob: -1.4663084745407104
    3. ' enfants' → logprob: -3.09130859375
    4. ' noe' → logprob: -4.96630859375
    5. ' descendants' → logprob: -6.84130859375
    6. ' voisins' → logprob: -6.84130859375
    7. 'en' → logprob: -7.21630859375
    8. 'n' → logprob: -7.21630859375
    9. ' nodes' → logprob: -7.59130859375
    10. 'nodes' → logprob: -7.96630859375

Token 956: 'ets' (ID: 1719)
  Prédit: 'êtres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtres' → logprob: -0.4723648130893707
    2. 'ets' → logprob: -1.9723647832870483
    3. 'ètres' → logprob: -2.222364902496338
    4. 'et' → logprob: -2.847364902496338
    5. 'è' → logprob: -3.347364902496338
    6. 'êts' → logprob: -5.097364902496338
    7. 't' → logprob: -5.222364902496338
    8. 'être' → logprob: -6.347364902496338
    9. 'èces' → logprob: -6.347364902496338
    10. '```' → logprob: -6.347364902496338

Token 957: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004998805467039347
    2. '.' → logprob: -6.504998683929443
    3. '
' → logprob: -6.629998683929443
    4. '.
' → logprob: -6.629998683929443
    5. '):
' → logprob: -8.629999160766602
    6. '    
' → logprob: -8.879999160766602
    7. ',' → logprob: -9.004999160766602
    8. ')' → logprob: -9.129999160766602
    9. ')
' → logprob: -9.129999160766602
    10. 'u' → logprob: -10.629999160766602

Token 958: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056781891733407974
    2. '
' → logprob: -3.1817820072174072
    3. ':' → logprob: -4.681781768798828
    4. '    
' → logprob: -6.431781768798828
    5. ':
' → logprob: -6.806781768798828
    6. '):
' → logprob: -7.556781768798828
    7. ')' → logprob: -8.056781768798828
    8. '):' → logprob: -8.056781768798828
    9. '  
' → logprob: -8.556781768798828
    10. ' 
' → logprob: -9.431781768798828

Token 959: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17739732563495636
    2. '
' → logprob: -1.92739737033844
    3. '):
' → logprob: -5.17739725112915
    4. '    
' → logprob: -5.55239725112915
    5. '\n' → logprob: -5.92739725112915
    6. ':' → logprob: -6.80239725112915
    7. ')' → logprob: -6.92739725112915
    8. '```' → logprob: -7.05239725112915
    9. '):' → logprob: -7.42739725112915
    10. ':
' → logprob: -7.67739725112915

Token 960: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02207471802830696
    2. '	par' → logprob: -4.5220746994018555
    3. '	if' → logprob: -5.3970746994018555
    4. '	' → logprob: -5.8970746994018555
    5. '	t' → logprob: -6.2720746994018555
    6. ' he' → logprob: -8.147074699401855
    7. '	stack' → logprob: -8.647074699401855
    8. '	h' → logprob: -8.647074699401855
    9. '	f' → logprob: -8.772074699401855
    10. '	for' → logprob: -9.022074699401855

Token 961: ' ret' (ID: 2881)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.14401522278785706
    2. 'res' → logprob: -2.269015312194824
    3. '   ' → logprob: -4.144015312194824
    4. 'ret' (adapté à ' ret') → logprob: -5.644015312194824
    5. 'r' → logprob: -5.769015312194824
    6. 's' → logprob: -5.894015312194824
    7. ' cnt' → logprob: -6.769015312194824
    8. 'size' → logprob: -7.019015312194824
    9. 'total' → logprob: -7.519015312194824
    10. 'sz' → logprob: -7.644015312194824

Token 962: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869612514972687
    2. '=' → logprob: -1.1369612216949463
    3. ' ' → logprob: -9.386960983276367
    4. ' =
' → logprob: -13.011960983276367
    5. 'u' → logprob: -13.636960983276367
    6. '   ' → logprob: -14.011960983276367
    7. '=
' → logprob: -14.886960983276367
    8. '  ' → logprob: -15.636960983276367
    9. 'urn' → logprob: -15.761960983276367
    10. '=int' → logprob: -15.761960983276367

Token 963: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.125044822692871
    3. '   ' → logprob: -13.000044822692871
    4. '0' → logprob: -13.000044822692871
    5. '
' → logprob: -16.750045776367188
    6. '  ' → logprob: -17.312545776367188
    7. '`' → logprob: -18.187545776367188
    8. '    ' → logprob: -18.562545776367188
    9. ' ' → logprob: -18.625045776367188
    10. '=' → logprob: -18.875045776367188

Token 964: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. '0' → logprob: -12.375008583068848
    3. ' ' → logprob: -12.375008583068848
    4. '   ' → logprob: -16.250009536743164
    5. 'len' → logprob: -18.375009536743164
    6. 'a' → logprob: -18.437509536743164
    7. '１' → logprob: -18.437509536743164
    8. '
' → logprob: -18.812509536743164
    9. ' ' → logprob: -19.500009536743164
    10. '`' → logprob: -19.625009536743164

Token 965: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6517775058746338
    2. '<|end|>' → logprob: -1.2767775058746338
    3. '   ' → logprob: -1.9017775058746338
    4. '    
' → logprob: -4.151777267456055
    5. ' 
' → logprob: -4.776777267456055
    6. ' for' → logprob: -5.276777267456055
    7. '<|end|>' → logprob: -5.276777267456055
    8. ' ' → logprob: -5.901777267456055
    9. '  
' → logprob: -5.901777267456055
    10. 'for' → logprob: -6.401777267456055

Token 966: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045255862176418304
    2. 'for' → logprob: -3.9202558994293213
    3. '<|end|>' → logprob: -4.545255661010742
    4. '   ' → logprob: -5.295255661010742
    5. ' for' → logprob: -5.670255661010742
    6. '#' → logprob: -6.670255661010742
    7. ' 
' → logprob: -7.170255661010742
    8. '    
' → logprob: -7.170255661010742
    9. '
' → logprob: -7.795255661010742
    10. '\n' → logprob: -8.045255661010742

Token 967: ' Comp' (ID: 5211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16296766698360443
    2. ' for' → logprob: -1.9129676818847656
    3. '
' → logprob: -6.787967681884766
    4. '   ' → logprob: -7.287967681884766
    5. ')' → logprob: -8.412967681884766
    6. '    
' → logprob: -8.787967681884766
    7. ' ' → logprob: -9.037967681884766
    8. 'ret' → logprob: -9.162967681884766
    9. '0' → logprob: -9.787967681884766
    10. 'return' → logprob: -10.162967681884766

Token 968: 'te' (ID: 411)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9748283624649048
    2. 'teur' → logprob: -1.7248283624649048
    3. 't' → logprob: -2.8498282432556152
    4. 'ter' → logprob: -2.9748282432556152
    5. 'def' → logprob: -2.9748282432556152
    6. '=' → logprob: -3.3498282432556152
    7. 'onent' → logprob: -3.3498282432556152
    8. 'act' → logprob: -3.3498282432556152
    9. 'ret' → logprob: -3.4748282432556152
    10. ' =' → logprob: -3.7248282432556152

Token 969: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14026862382888794
    2. '<|end|>' → logprob: -3.140268564224243
    3. '    ' → logprob: -3.890268564224243
    4. 'u' → logprob: -4.265268802642822
    5. ' for' → logprob: -4.390268802642822
    6. '<|end|>' → logprob: -4.640268802642822
    7. 'for' → logprob: -5.140268802642822
    8. ' u' → logprob: -5.515268802642822
    9. '   ' → logprob: -5.640268802642822
    10. ' =' → logprob: -5.765268802642822

Token 970: ' sommet' (ID: 130502)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4618217945098877
    2. '1' → logprob: -1.3368217945098877
    3. 'es' → logprob: -3.5868217945098877
    4. 'token' → logprob: -4.336821556091309
    5. 'esp' → logprob: -4.336821556091309
    6. 'node' → logprob: -4.461821556091309
    7. 'for' → logprob: -4.836821556091309
    8. ' espace' → logprob: -5.211821556091309
    9. 'nombre' → logprob: -5.586821556091309
    10. '```' → logprob: -5.711821556091309

Token 971: ' courant' (ID: 74694)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3397822678089142
    2. '<|end|>' → logprob: -2.089782238006592
    3. ' u' → logprob: -2.339782238006592
    4. '[u' → logprob: -3.714782238006592
    5. '<|end|>' → logprob: -4.089782238006592
    6. ' ' → logprob: -4.464782238006592
    7. ')' → logprob: -5.714782238006592
    8. ' )' → logprob: -6.214782238006592
    9. '(u' → logprob: -6.214782238006592
    10. 'for' → logprob: -6.589782238006592

Token 972: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4232601523399353
    2. '<|end|>' → logprob: -1.54826021194458
    3. '   ' → logprob: -2.79826021194458
    4. ' 
' → logprob: -3.67326021194458
    5. '    
' → logprob: -4.29826021194458
    6. '<|end|>' → logprob: -4.79826021194458
    7. '  
' → logprob: -5.42326021194458
    8. '   
' → logprob: -5.54826021194458
    9. '\n' → logprob: -5.79826021194458
    10. '	
' → logprob: -6.17326021194458

Token 973: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.115802526473999
    2. ' for' → logprob: -1.115802526473999
    3. '	for' → logprob: -1.865802526473999
    4. '
' → logprob: -2.490802526473999
    5. 'for' → logprob: -2.990802526473999
    6. '    
' → logprob: -4.240802764892578
    7. '	
' → logprob: -4.240802764892578
    8. ' 
' → logprob: -4.240802764892578
    9. '<|end|>' → logprob: -5.615802764892578
    10. '  
' → logprob: -6.240802764892578

Token 974: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.319370302458992e-06
    2. ' for' → logprob: -12.625005722045898
    3. 'par' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.125005722045898
    5. '	for' → logprob: -16.5000057220459
    6. '    
' → logprob: -16.8750057220459
    7. '
' → logprob: -17.7500057220459
    8. 'fo' → logprob: -18.0000057220459
    9. 'stack' → logprob: -18.7500057220459
    10. ' ' → logprob: -19.6250057220459

Token 975: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09745419025421143
    2. 'w' → logprob: -3.097454071044922
    3. 'nx' → logprob: -3.472454071044922
    4. 'x' → logprob: -4.847454071044922
    5. ' v' → logprob: -5.347454071044922
    6. 'e' → logprob: -6.597454071044922
    7. ' w' → logprob: -7.347454071044922
    8. 'to' → logprob: -7.347454071044922
    9. ' nxt' → logprob: -7.722454071044922
    10. 'nv' → logprob: -8.722454071044922

Token 976: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22578535974025726
    2. 'in' → logprob: -1.6007853746414185
    3. ' ' → logprob: -8.475785255432129
    4. '	in' → logprob: -8.975785255432129
    5. ' v' → logprob: -11.100785255432129
    6. 'v' → logprob: -11.850785255432129
    7. 's' → logprob: -12.850785255432129
    8. '    ' → logprob: -12.975785255432129
    9. '<|end|>' → logprob: -13.225785255432129
    10. '  ' → logprob: -13.225785255432129

Token 977: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0009120595059357584
    2. ' G' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.000911712646484
    4. '[G' → logprob: -16.125911712646484
    5. '(G' → logprob: -16.500911712646484
    6. '	G' → logprob: -16.875911712646484
    7. '<G' → logprob: -18.375911712646484
    8. ' ' → logprob: -19.125911712646484
    9. ',G' → logprob: -19.375911712646484
    10. ':G' → logprob: -19.750911712646484

Token 978: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.8624639324116288e-06
    2. 'u' → logprob: -13.375001907348633
    3. '[' → logprob: -15.250001907348633
    4. ' [' → logprob: -16.750001907348633
    5. '[v' → logprob: -17.875001907348633
    6. '[
' → logprob: -18.125001907348633
    7. '
' → logprob: -19.000001907348633
    8. ' u' → logprob: -19.000001907348633
    9. '(u' → logprob: -19.250001907348633
    10. ')' → logprob: -19.375001907348633

Token 979: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01357851643115282
    2. ']' → logprob: -4.763578414916992
    3. ']:
' → logprob: -5.388578414916992
    4. ' ]' → logprob: -8.263578414916992
    5. ':' → logprob: -10.013578414916992
    6. '   ' → logprob: -10.763578414916992
    7. ']:
' → logprob: -10.888578414916992
    8. '):' → logprob: -11.388578414916992
    9. ']>' → logprob: -12.513578414916992
    10. '']:' → logprob: -12.638578414916992

Token 980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009855014272034168
    2. ' if' → logprob: -5.759854793548584
    3. '    ' → logprob: -6.259854793548584
    4. '   ' → logprob: -6.259854793548584
    5. '<|end|>' → logprob: -6.884854793548584
    6. 'if' → logprob: -7.384854793548584
    7. '        
' → logprob: -8.509855270385742
    8. ' ' → logprob: -8.634855270385742
    9. ' 
' → logprob: -8.759855270385742
    10. 'v' → logprob: -9.259855270385742

Token 981: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2600128948688507
    2. ' if' → logprob: -1.6350128650665283
    3. 'if' (adapté à ' if') → logprob: -3.5100128650665283
    4. '<|end|>' → logprob: -6.385013103485107
    5. ' ' → logprob: -7.010013103485107
    6. ' 
' → logprob: -7.260013103485107
    7. '   ' → logprob: -8.26001262664795
    8. '	if' → logprob: -9.26001262664795
    9. '    ' → logprob: -9.26001262664795
    10. '	' → logprob: -9.63501262664795

Token 982: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.19907698035240173
    2. ' v' → logprob: -1.9490770101547241
    3. 'par' → logprob: -3.4490768909454346
    4. ' par' → logprob: -5.074077129364014
    5. '   ' → logprob: -10.199076652526855
    6. '	v' → logprob: -11.324076652526855
    7. '	par' → logprob: -11.949076652526855
    8. 'not' → logprob: -12.699076652526855
    9. '(par' → logprob: -12.949076652526855
    10. '(v' → logprob: -12.949076652526855

Token 983: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.428799033164978
    2. '!=' → logprob: -1.053799033164978
    3. ' par' → logprob: -10.17879867553711
    4. ')!=' → logprob: -11.30379867553711
    5. 'par' → logprob: -11.67879867553711
    6. ']!=' → logprob: -11.67879867553711
    7. ' ==' → logprob: -11.92879867553711
    8. '==' → logprob: -12.05379867553711
    9. '()!=' → logprob: -12.80379867553711
    10. ' ' → logprob: -12.92879867553711

Token 984: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0003065030323341489
    2. ' par' → logprob: -8.125306129455566
    3. 'u' → logprob: -11.875306129455566
    4. '	par' → logprob: -12.750306129455566
    5. 'paren' → logprob: -15.125306129455566
    6. '(par' → logprob: -16.875307083129883
    7. 'pari' → logprob: -17.000307083129883
    8. 'paring' → logprob: -17.250307083129883
    9. ' u' → logprob: -17.250307083129883
    10. 'paru' → logprob: -17.375307083129883

Token 985: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00015955790877342224
    2. 'u' → logprob: -8.75015926361084
    3. ' u' → logprob: -14.75015926361084
    4. '[' → logprob: -15.37515926361084
    5. ' [' → logprob: -15.75015926361084
    6. '	u' → logprob: -16.500160217285156
    7. '
' → logprob: -16.875160217285156
    8. '[
' → logprob: -17.250160217285156
    9. ' ' → logprob: -17.625160217285156
    10. '   ' → logprob: -18.000160217285156

Token 986: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.1763473749160767
    2. '[u' → logprob: -1.5513473749160767
    3. ' or' → logprob: -1.8013473749160767
    4. ']' → logprob: -1.8013473749160767
    5. ':' → logprob: -2.676347255706787
    6. ']:
' → logprob: -3.676347255706787
    7. '):' → logprob: -4.051347255706787
    8. '):
' → logprob: -4.676347255706787
    9. ':
' → logprob: -4.676347255706787
    10. '   ' → logprob: -5.551347255706787

Token 987: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6651458740234375
    2. ' continue' → logprob: -1.0401458740234375
    3. 'continue' → logprob: -2.0401458740234375
    4. '	continue' → logprob: -7.4151458740234375
    5. '       ' → logprob: -7.5401458740234375
    6. '		' → logprob: -7.9151458740234375
    7. '               ' → logprob: -8.165145874023438
    8. '	       ' → logprob: -8.665145874023438
    9. ' continues' → logprob: -9.415145874023438
    10. '\n' → logprob: -9.790145874023438

Token 988: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03940620273351669
    2. ' continue' → logprob: -3.2894062995910645
    3. '           ' → logprob: -6.6644062995910645
    4. '	continue' → logprob: -9.664405822753906
    5. '       ' → logprob: -10.789405822753906
    6. 'contin' → logprob: -13.914405822753906
    7. 'continu' → logprob: -14.164405822753906
    8. '_continue' → logprob: -14.289405822753906
    9. '		' → logprob: -14.539405822753906
    10. '               ' → logprob: -14.664405822753906

Token 989: ' Ne' (ID: 4475)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20211443305015564
    2. ' continue' → logprob: -1.702114462852478
    3. '           ' → logprob: -7.452114582061768
    4. '       ' → logprob: -9.70211410522461
    5. '	continue' → logprob: -10.20211410522461
    6. '   ' → logprob: -11.57711410522461
    7. 'contin' → logprob: -12.20211410522461
    8. 'continu' → logprob: -12.20211410522461
    9. '               ' → logprob: -13.95211410522461
    10. ' continu' → logprob: -14.20211410522461

Token 990: ' pas' (ID: 2173)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6792593002319336
    2. ' v' → logprob: -1.0542593002319336
    3. ' continue' → logprob: -2.8042593002319336
    4. 'pas' → logprob: -3.4292593002319336
    5. 'continue' → logprob: -4.179259300231934
    6. ' ==' → logprob: -5.054259300231934
    7. 'u' → logprob: -5.304259300231934
    8. ' !=' → logprob: -5.429259300231934
    9. ' pas' → logprob: -5.679259300231934
    10. '=v' → logprob: -6.179259300231934

Token 991: ' revenir' (ID: 88322)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6292040944099426
    2. 'contin' → logprob: -1.6292040348052979
    3. ' continuer' → logprob: -1.8792040348052979
    4. ' revis' → logprob: -3.129204034805298
    5. 're' → logprob: -3.879204034805298
    6. ' visiter' → logprob: -4.254204273223877
    7. 'v' → logprob: -4.629204273223877
    8. 'continue' → logprob: -5.004204273223877
    9. 'u' → logprob: -5.254204273223877
    10. ' par' → logprob: -5.629204273223877

Token 992: ' vers' (ID: 3640)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5278571844100952
    2. 'en' → logprob: -0.9028571844100952
    3. 'au' → logprob: -5.527857303619385
    4. ' au' → logprob: -8.527856826782227
    5. 'sur' → logprob: -8.777856826782227
    6. '   ' → logprob: -8.902856826782227
    7. 'à' → logprob: -9.777856826782227
    8. ' vers' → logprob: -10.277856826782227
    9. '	en' → logprob: -10.277856826782227
    10. ' à' → logprob: -10.402856826782227

Token 993: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.033894419670105
    2. 'v' → logprob: -1.158894419670105
    3. 'le' → logprob: -1.283894419670105
    4. ' u' → logprob: -3.9088945388793945
    5. ' le' → logprob: -4.2838945388793945
    6. ' v' → logprob: -4.9088945388793945
    7. 'l' → logprob: -5.2838945388793945
    8. 'par' → logprob: -5.5338945388793945
    9. 'parent' → logprob: -7.0338945388793945
    10. 'la' → logprob: -7.2838945388793945

Token 994: ' parent' (ID: 5980)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7087506055831909
    2. 'parent' → logprob: -0.7087506055831909
    3. 'u' → logprob: -4.5837507247924805
    4. ' parent' → logprob: -5.7087507247924805
    5. 'par' → logprob: -6.7087507247924805
    6. 'p' → logprob: -7.9587507247924805
    7. ' v' → logprob: -8.58375072479248
    8. '-parent' → logprob: -9.58375072479248
    9. 'pr' → logprob: -11.08375072479248
    10. 'parents' → logprob: -11.45875072479248

Token 995: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059440623968839645
    2. '           ' → logprob: -3.6844406127929688
    3. ':
' → logprob: -3.9344406127929688
    4. '       ' → logprob: -5.434440612792969
    5. ' continue' → logprob: -5.434440612792969
    6. 'continue' → logprob: -5.684440612792969
    7. '	continue' → logprob: -8.059440612792969
    8. '   ' → logprob: -8.184440612792969
    9. ' or' → logprob: -10.059440612792969
    10. ',' → logprob: -10.184440612792969

Token 996: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19101817905902863
    2. '       ' → logprob: -2.0660181045532227
    3. ':
' → logprob: -3.8160181045532227
    4. '           ' → logprob: -3.9410181045532227
    5. ' continue' → logprob: -5.816018104553223
    6. 'continue' → logprob: -6.941018104553223
    7. '   ' → logprob: -7.566018104553223
    8. ' :' → logprob: -7.691018104553223
    9. '	' → logprob: -8.691018104553223
    10. '	continue' → logprob: -9.191018104553223

Token 997: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.20178821682929993
    2. ' continue' → logprob: -1.7017881870269775
    3. '           ' → logprob: -8.201787948608398
    4. '               ' → logprob: -10.201787948608398
    5. '	continue' → logprob: -10.576787948608398
    6. '       ' → logprob: -11.326787948608398
    7. 'contin' → logprob: -11.451787948608398
    8. '
' → logprob: -11.951787948608398
    9. 'continu' → logprob: -12.451787948608398
    10. '   ' → logprob: -13.576787948608398

Token 998: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2141866385936737
    2. '       ' → logprob: -1.964186668395996
    3. '    
' → logprob: -3.964186668395996
    4. '
' → logprob: -4.714186668395996
    5. '<|end|>' → logprob: -4.964186668395996
    6. ':' → logprob: -5.339186668395996
    7. '        
' → logprob: -6.214186668395996
    8. '\' → logprob: -6.339186668395996
    9. '  
' → logprob: -6.714186668395996
    10. '	' → logprob: -6.714186668395996

Token 999: '       ' (ID: 309)
  Prédit: '	par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	par' → logprob: -0.25486382842063904
    2. '       ' → logprob: -2.004863739013672
    3. '   ' → logprob: -2.629863739013672
    4. '	' → logprob: -4.629863739013672
    5. 'par' → logprob: -5.504863739013672
    6. ' par' → logprob: -7.129863739013672
    7. '	tab' → logprob: -7.629863739013672
    8. '\t' → logprob: -7.754863739013672
    9. '	   ' → logprob: -7.879863739013672
    10. '    
' → logprob: -8.129863739013672

Token 1000: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.0001899511698866263
    2. '   ' → logprob: -9.000189781188965
    3. '       ' → logprob: -9.750189781188965
    4. ' par' → logprob: -12.125189781188965
    5. '	par' → logprob: -13.000189781188965
    6. '           ' → logprob: -14.750189781188965
    7. '
' → logprob: -16.37519073486328
    8. '```' → logprob: -18.37519073486328
    9. '(par' → logprob: -19.62519073486328
    10. '	' → logprob: -19.75019073486328

Token 1001: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.16036659479141235
    2. '[v' → logprob: -1.9103665351867676
    3. '[' → logprob: -8.910367012023926
    4. 'v' → logprob: -12.660367012023926
    5. 'u' → logprob: -13.035367012023926
    6. ')[' → logprob: -14.785367012023926
    7. '][' → logprob: -14.785367012023926
    8. ' [' → logprob: -15.160367012023926
    9. '=' → logprob: -15.410367012023926
    10. '[user' → logprob: -15.535367012023926

Token 1002: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7406129837036133
    2. ']' → logprob: -0.7406129837036133
    3. ']=' → logprob: -3.6156129837036133
    4. ' =' → logprob: -3.9906129837036133
    5. '[u' → logprob: -7.490612983703613
    6. ' ]' → logprob: -8.615612983703613
    7. '=u' → logprob: -10.115612983703613
    8. '=
' → logprob: -10.115612983703613
    9. ')' → logprob: -10.365612983703613
    10. '[' → logprob: -10.365612983703613

Token 1003: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004086828324943781
    2. ' =' → logprob: -5.504086971282959
    3. '=u' → logprob: -11.7540864944458
    4. '=
' → logprob: -14.6290864944458
    5. '=v' → logprob: -16.129087448120117
    6. ',' → logprob: -17.879087448120117
    7. '[u' → logprob: -18.129087448120117
    8. 'u' → logprob: -18.629087448120117
    9. '=

' → logprob: -18.629087448120117
    10. ' =
' → logprob: -19.129087448120117

Token 1004: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.517272024415433e-05
    2. ' u' → logprob: -9.500075340270996
    3. '	u' → logprob: -15.125075340270996
    4. '
' → logprob: -18.50007438659668
    5. '[u' → logprob: -19.50007438659668
    6. '   ' → logprob: -20.75007438659668
    7. '*u' → logprob: -22.75007438659668
    8. '(u' → logprob: -22.87507438659668
    9. 'ut' → logprob: -23.25007438659668
    10. 'у' → logprob: -23.37507438659668

Token 1005: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09159661084413528
    2. '   ' → logprob: -2.7165966033935547
    3. '       ' → logprob: -4.466596603393555
    4. 'ret' → logprob: -5.341596603393555
    5. '
' → logprob: -5.841596603393555
    6. '	ret' → logprob: -7.091596603393555
    7. ' ret' → logprob: -7.466596603393555
    8. '    
' → logprob: -8.091596603393555
    9. '<|end|>' → logprob: -8.591596603393555
    10. '        
' → logprob: -9.591596603393555

Token 1006: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15686021745204926
    2. '       ' → logprob: -2.031860113143921
    3. 'ret' → logprob: -4.6568603515625
    4. '
' → logprob: -6.0318603515625
    5. '	ret' → logprob: -6.7818603515625
    6. ' ret' → logprob: -7.6568603515625
    7. '    
' → logprob: -8.4068603515625
    8. '        
' → logprob: -9.2818603515625
    9. '	' → logprob: -9.7818603515625
    10. '  
' → logprob: -10.6568603515625

Token 1007: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -1.4140441635390744e-05
    2. 'cnt' → logprob: -11.625014305114746
    3. '
' → logprob: -12.875014305114746
    4. 'r' → logprob: -14.125014305114746
    5. ' ret' → logprob: -14.500014305114746
    6. 'res' → logprob: -15.375014305114746
    7. 'retval' → logprob: -15.500014305114746
    8. '	ret' → logprob: -15.750014305114746
    9. '   ' → logprob: -16.37501335144043
    10. 't' → logprob: -16.37501335144043

Token 1008: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38701188564300537
    2. ' +=' → logprob: -1.1370118856430054
    3. '=' → logprob: -9.262011528015137
    4. '+' → logprob: -10.262011528015137
    5. ']+=' → logprob: -12.387011528015137
    6. '+="' → logprob: -13.137011528015137
    7. '+='' → logprob: -13.762011528015137
    8. ' +' → logprob: -13.762011528015137
    9. ' =' → logprob: -14.012011528015137
    10. '+=(' → logprob: -14.012011528015137

Token 1009: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001234428636962548
    2. ' f' → logprob: -9.000123023986816
    3. '	f' → logprob: -18.375123977661133
    4. '   ' → logprob: -18.750123977661133
    5. '(f' → logprob: -22.375123977661133
    6. '       ' → logprob: -23.125123977661133
    7. '
' → logprob: -23.250123977661133
    8. '_f' → logprob: -23.375123977661133
    9. ' ' → logprob: -23.625123977661133
    10. '```' → logprob: -23.750123977661133

Token 1010: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.4849443838757e-06
    2. 'v' → logprob: -12.625004768371582
    3. '(' → logprob: -13.750004768371582
    4. '(
' → logprob: -17.750003814697266
    5. ')v' → logprob: -18.750003814697266
    6. '[v' → logprob: -19.250003814697266
    7. ' (' → logprob: -19.875003814697266
    8. ' v' → logprob: -20.125003814697266
    9. '	v' → logprob: -20.500003814697266
    10. ')' → logprob: -20.750003814697266

Token 1011: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.876193169271573e-05
    2. ')
' → logprob: -9.625088691711426
    3. ' )' → logprob: -11.500088691711426
    4. ')v' → logprob: -11.500088691711426
    5. ')return' → logprob: -14.000088691711426
    6. '   ' → logprob: -14.875088691711426
    7. '()' → logprob: -15.875088691711426
    8. '())' → logprob: -15.875088691711426
    9. 'v' → logprob: -16.000089645385742
    10. '))' → logprob: -16.000089645385742

Token 1012: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5284404158592224
    2. '   ' → logprob: -0.9034404158592224
    3. 'return' → logprob: -6.653440475463867
    4. '<|end|>' → logprob: -6.778440475463867
    5. '    
' → logprob: -7.153440475463867
    6. ' return' → logprob: -7.278440475463867
    7. '  
' → logprob: -7.403440475463867
    8. ' 
' → logprob: -8.403440475463867
    9. '
' → logprob: -8.778440475463867
    10. '	return' → logprob: -9.153440475463867

Token 1013: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6096213459968567
    2. '   ' → logprob: -0.8596213459968567
    3. 'return' → logprob: -3.734621286392212
    4. '    
' → logprob: -5.609621524810791
    5. ' 
' → logprob: -6.234621524810791
    6. '  
' → logprob: -6.734621524810791
    7. ' return' → logprob: -7.359621524810791
    8. '   
' → logprob: -7.484621524810791
    9. '  ' → logprob: -7.734621524810791
    10. ' ' → logprob: -7.859621524810791

Token 1014: ' Aj' (ID: 28294)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.495416522026062
    2. '<|end|>' → logprob: -0.995416522026062
    3. ')' → logprob: -4.120416641235352
    4. ' f' → logprob: -5.620416641235352
    5. '<|end|>' → logprob: -7.495416641235352
    6. '(f' → logprob: -8.620416641235352
    7. '()' → logprob: -8.745416641235352
    8. '
' → logprob: -9.620416641235352
    9. 'v' → logprob: -9.995416641235352
    10. 'def' → logprob: -10.370416641235352

Token 1015: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.12877385318279266
    2. 'outer' → logprob: -2.2537739276885986
    3. 'outez' → logprob: -4.6287736892700195
    4. 'out' → logprob: -5.1287736892700195
    5. 'uste' → logprob: -10.50377368927002
    6. 'outes' → logprob: -10.75377368927002
    7. '```' → logprob: -10.87877368927002
    8. 'd' → logprob: -11.62877368927002
    9. 'our' → logprob: -11.75377368927002
    10. 'ust' → logprob: -12.00377368927002

Token 1016: ' la' (ID: 557)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.7791337370872498
    2. '(f' → logprob: -1.4041337966918945
    3. 'f' → logprob: -1.7791337966918945
    4. '(' → logprob: -3.4041337966918945
    5. '(v' → logprob: -3.4041337966918945
    6. '<|end|>' → logprob: -3.7791337966918945
    7. ')' → logprob: -4.2791337966918945
    8. 'ret' → logprob: -4.4041337966918945
    9. '()' → logprob: -5.0291337966918945
    10. ' f' → logprob: -6.7791337966918945

Token 1017: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.03447296470403671
    2. ' taille' → logprob: -4.034472942352295
    3. 'f' → logprob: -4.409472942352295
    4. 'ret' → logprob: -6.534472942352295
    5. 'cnt' → logprob: -7.659472942352295
    6. 'val' → logprob: -7.659472942352295
    7. 'suite' → logprob: -7.909472942352295
    8. 'count' → logprob: -8.909473419189453
    9. 't' → logprob: -9.034473419189453
    10. ' f' → logprob: -9.159473419189453

Token 1018: ' du' (ID: 1462)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014999852515757084
    2. '(' → logprob: -4.514999866485596
    3. '<|end|>' → logprob: -6.014999866485596
    4. '(ret' → logprob: -7.264999866485596
    5. ')' → logprob: -8.389999389648438
    6. 'des' → logprob: -9.264999389648438
    7. '()' → logprob: -9.389999389648438
    8. '(
' → logprob: -9.514999389648438
    9. '(u' → logprob: -9.889999389648438
    10. ' des' → logprob: -9.889999389648438

Token 1019: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010908219031989574
    2. 'v' → logprob: -5.135908126831055
    3. ' sous' → logprob: -5.760908126831055
    4. 'sub' → logprob: -6.510908126831055
    5. 'sou' → logprob: -8.885908126831055
    6. '```' → logprob: -9.260908126831055
    7. 'ss' → logprob: -10.135908126831055
    8. 'under' → logprob: -10.760908126831055
    9. ' v' → logprob: -11.135908126831055
    10. '	s' → logprob: -12.885908126831055

Token 1020: '-ar' (ID: 31325)
  Prédit: '-ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ar' → logprob: -0.016498101875185966
    2. '[u' → logprob: -5.39149808883667
    3. '_ar' → logprob: -5.51649808883667
    4. '-' → logprob: -5.89149808883667
    5. 'tree' → logprob: -6.26649808883667
    6. 'ar' → logprob: -6.51649808883667
    7. ' arbre' → logprob: -7.39149808883667
    8. '(u' → logprob: -7.89149808883667
    9. '```' → logprob: -9.141498565673828
    10. '-u' → logprob: -9.141498565673828

Token 1021: 'bre' (ID: 9945)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.01991291157901287
    2. '_ar' → logprob: -4.8949127197265625
    3. 'arb' → logprob: -5.1449127197265625
    4. 'tree' → logprob: -6.1449127197265625
    5. '_' → logprob: -6.3949127197265625
    6. 'r' → logprob: -7.6449127197265625
    7. '_tree' → logprob: -7.7699127197265625
    8. ''ar' → logprob: -8.144912719726562
    9. ' arbre' → logprob: -8.394912719726562
    10. '```' → logprob: -8.394912719726562

Token 1022: ' du' (ID: 1462)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.01299762912094593
    2. 'v' → logprob: -5.637997627258301
    3. '(u' → logprob: -6.012997627258301
    4. 'de' → logprob: -6.012997627258301
    5. ')' → logprob: -6.512997627258301
    6. '[v' → logprob: -7.137997627258301
    7. '<|end|>' → logprob: -7.637997627258301
    8. 'des' → logprob: -8.5129976272583
    9. '(' → logprob: -8.7629976272583
    10. ')v' → logprob: -8.7629976272583

Token 1023: ' fils' (ID: 56114)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.372294698550832e-06
    2. ' v' → logprob: -11.875009536743164
    3. '```' → logprob: -13.375009536743164
    4. 'child' → logprob: -14.750009536743164
    5. 'val' → logprob: -16.375009536743164
    6. 'vo' → logprob: -16.625009536743164
    7. 've' → logprob: -16.750009536743164
    8. '	v' → logprob: -17.250009536743164
    9. ')v' → logprob: -17.500009536743164
    10. 'vou' → logprob: -17.875009536743164

Token 1024: ' v' (ID: 323)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9083174467086792
    2. '<|end|>' → logprob: -0.9083174467086792
    3. '   ' → logprob: -1.9083174467086792
    4. 'return' → logprob: -4.158317565917969
    5. ' return' → logprob: -4.533317565917969
    6. '  
' → logprob: -5.533317565917969
    7. '    
' → logprob: -5.533317565917969
    8. '<|end|>' → logprob: -6.283317565917969
    9. '	return' → logprob: -6.533317565917969
    10. ' 
' → logprob: -6.533317565917969

Token 1025: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6988731622695923
    2. '
' → logprob: -0.8238731622695923
    3. '<|end|>' → logprob: -2.9488730430603027
    4. ' 
' → logprob: -6.448873043060303
    5. '  
' → logprob: -6.448873043060303
    6. '    
' → logprob: -6.573873043060303
    7. 'return' → logprob: -6.698873043060303
    8. ' return' → logprob: -6.698873043060303
    9. ' ' → logprob: -7.198873043060303
    10. '<|end|>' → logprob: -7.323873043060303

Token 1026: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5107026100158691
    2. ' return' → logprob: -1.5107026100158691
    3. '	return' → logprob: -2.010702610015869
    4. '```' → logprob: -4.135702610015869
    5. 'return' → logprob: -4.385702610015869
    6. '
' → logprob: -4.885702610015869
    7. ' 
' → logprob: -5.760702610015869
    8. '  
' → logprob: -6.760702610015869
    9. '<|end|>' → logprob: -7.010702610015869
    10. ' ' → logprob: -7.260702610015869

Token 1027: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.43250173330307007
    2. '   ' → logprob: -1.0575017929077148
    3. ' cnt' → logprob: -5.682501792907715
    4. '
' → logprob: -8.682501792907715
    5. '	cnt' → logprob: -9.807501792907715
    6. '    
' → logprob: -9.932501792907715
    7. ' ' → logprob: -10.057501792907715
    8. 'count' → logprob: -10.432501792907715
    9. '  ' → logprob: -11.557501792907715
    10. '```' → logprob: -11.682501792907715

Token 1028: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. 'u' → logprob: -17.5
    4. '[v' → logprob: -19.375
    5. ' [' → logprob: -21.125
    6. '(u' → logprob: -21.75
    7. '```' → logprob: -21.75
    8. '	u' → logprob: -22.0
    9. '[
' → logprob: -22.125
    10. '<u' → logprob: -22.625

Token 1029: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020847124978899956
    2. '=' → logprob: -6.877084732055664
    3. ']=' → logprob: -6.877084732055664
    4. ' ]' → logprob: -11.252084732055664
    5. ']+=' → logprob: -12.877084732055664
    6. ')' → logprob: -13.377084732055664
    7. ']
' → logprob: -13.502084732055664
    8. ' =' → logprob: -13.752084732055664
    9. '[u' → logprob: -14.877084732055664
    10. '[' → logprob: -16.002084732055664

Token 1030: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. '+=' → logprob: -15.880233764648438
    4. '.=' → logprob: -18.255233764648438
    5. '＝' → logprob: -19.630233764648438
    6. '=u' → logprob: -19.755233764648438
    7. ' +=' → logprob: -19.880233764648438
    8. '=
' → logprob: -20.505233764648438
    9. '=}' → logprob: -21.630233764648438
    10. '=

' → logprob: -21.755233764648438

Token 1031: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -7.493430894101039e-05
    2. ' ret' → logprob: -9.500075340270996
    3. '	ret' → logprob: -19.25007438659668
    4. '(ret' → logprob: -20.50007438659668
    5. '$ret' → logprob: -21.12507438659668
    6. 're' → logprob: -21.37507438659668
    7. 'r' → logprob: -22.37507438659668
    8. 'rets' → logprob: -22.75007438659668
    9. '_ret' → logprob: -23.00007438659668
    10. 'return' → logprob: -23.25007438659668

Token 1032: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015943869948387146
    2. '
' → logprob: -9.12515926361084
    3. 'return' → logprob: -10.25015926361084
    4. ' return' → logprob: -11.62515926361084
    5. '	return' → logprob: -12.62515926361084
    6. '    
' → logprob: -13.87515926361084
    7. ':return' → logprob: -14.12515926361084
    8. '<|end|>' → logprob: -14.62515926361084
    9. ',' → logprob: -16.250160217285156
    10. '
' → logprob: -16.500160217285156

Token 1033: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013467809185385704
    2. 'return' → logprob: -6.626346588134766
    3. '	return' → logprob: -11.251346588134766
    4. ' return' → logprob: -12.001346588134766
    5. '
' → logprob: -14.376346588134766
    6. ':return' → logprob: -14.376346588134766
    7. '   ' → logprob: -16.376346588134766
    8. '       ' → logprob: -16.376346588134766
    9. '  ' → logprob: -16.501346588134766
    10. ';' → logprob: -16.501346588134766

Token 1034: ' En' (ID: 2130)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010086346883326769
    2. ' return' → logprob: -7.0010085105896
    3. '   ' → logprob: -9.251008987426758
    4. '	return' → logprob: -14.126008987426758
    5. 'ret' → logprob: -15.626008987426758
    6. '
' → logprob: -16.376008987426758
    7. ':return' → logprob: -16.626008987426758
    8. 'eturn' → logprob: -18.251008987426758
    9. '{return' → logprob: -18.376008987426758
    10. ' ' → logprob: -18.876008987426758

Token 1035: 'registre' (ID: 77466)
  Prédit: 'registrer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'registrer' → logprob: -0.1373033970594406
    2. 'u' → logprob: -3.012303352355957
    3. 'ret' → logprob: -3.637303352355957
    4. 'registre' → logprob: -3.762303352355957
    5. 'register' → logprob: -4.762303352355957
    6. '   ' → logprob: -4.762303352355957
    7. 'reg' → logprob: -5.637303352355957
    8. 'registr' → logprob: -5.887303352355957
    9. '[u' → logprob: -7.387303352355957
    10. 'ureg' → logprob: -7.512303352355957

Token 1036: ' la' (ID: 557)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.003239505458623171
    2. ' ret' → logprob: -5.753239631652832
    3. '	ret' → logprob: -10.503239631652832
    4. '(ret' → logprob: -10.503239631652832
    5. ' ' → logprob: -13.378239631652832
    6. '
' → logprob: -13.503239631652832
    7. '$ret' → logprob: -13.628239631652832
    8. '   ' → logprob: -14.003239631652832
    9. '_ret' → logprob: -14.378239631652832
    10. 'reten' → logprob: -15.753239631652832

Token 1037: ' taille' (ID: 41644)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.22603698074817657
    2. 'tail' → logprob: -1.6010370254516602
    3. ' taille' → logprob: -7.97603702545166
    4. 'size' → logprob: -9.35103702545166
    5. 'cnt' → logprob: -9.72603702545166
    6. ' ret' → logprob: -9.97603702545166
    7. 'total' → logprob: -10.85103702545166
    8. 'nombre' → logprob: -11.10103702545166
    9. 'count' → logprob: -11.10103702545166
    10. 't' → logprob: -11.72603702545166

Token 1038: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1039: ' sous' (ID: 14487)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5762307047843933
    2. 's' → logprob: -0.8262307047843933
    3. 'sub' → logprob: -9.076231002807617
    4. '[u' → logprob: -9.826231002807617
    5. 'sou' → logprob: -9.826231002807617
    6. ' u' → logprob: -9.951231002807617
    7. ' sous' → logprob: -12.076231002807617
    8. 'under' → logprob: -12.326231002807617
    9. '```' → logprob: -13.326231002807617
    10. 'cnt' → logprob: -13.326231002807617

Token 1040: '-ar' (ID: 31325)
  Prédit: '-ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ar' → logprob: -0.06975190341472626
    2. '_ar' → logprob: -3.4447519779205322
    3. 'ar' → logprob: -3.8197519779205322
    4. ' arbre' → logprob: -4.944751739501953
    5. '-' → logprob: -6.319751739501953
    6. '[u' → logprob: -6.444751739501953
    7. 'tree' → logprob: -6.819751739501953
    8. '-tree' → logprob: -7.069751739501953
    9. 'u' → logprob: -8.444751739501953
    10. '-Ar' → logprob: -8.569751739501953

Token 1041: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.2296036332845688
    2. 'ar' → logprob: -2.6046035289764404
    3. 'tre' → logprob: -2.6046035289764404
    4. '_ar' → logprob: -4.3546037673950195
    5. 'u' → logprob: -5.1046037673950195
    6. 'tree' → logprob: -5.1046037673950195
    7. 'être' → logprob: -5.4796037673950195
    8. '#' → logprob: -5.6046037673950195
    9. ' arbre' → logprob: -5.7296037673950195
    10. '_tree' → logprob: -5.9796037673950195

Token 1042: ' enr' (ID: 143893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04940180107951164
    2. '<|end|>' → logprob: -3.2994017601013184
    3. 'return' → logprob: -5.674401760101318
    4. '
' → logprob: -5.924401760101318
    5. ' return' → logprob: -6.049401760101318
    6. '	return' → logprob: -6.174401760101318
    7. '<|end|>' → logprob: -8.549402236938477
    8. ':return' → logprob: -8.924402236938477
    9. '    
' → logprob: -9.299402236938477
    10. ' ' → logprob: -9.424402236938477

Token 1043: 'acin' (ID: 18829)
  Prédit: 'acin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acin' → logprob: -0.07486830651760101
    2. '   ' → logprob: -3.1998682022094727
    3. 'ac' → logprob: -4.574868202209473
    4. 'root' → logprob: -5.324868202209473
    5. 'a' → logprob: -5.824868202209473
    6. 'c' → logprob: -6.074868202209473
    7. 'u' → logprob: -6.449868202209473
    8. 'cin' → logprob: -6.699868202209473
    9. 'acé' → logprob: -6.949868202209473
    10. 'in' → logprob: -7.074868202209473

Token 1044: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.008030900731682777
    2. 'cé' → logprob: -6.383030891418457
    3. 'ché' → logprob: -6.633030891418457
    4. 'té' → logprob: -6.883030891418457
    5. 'à' → logprob: -7.008030891418457
    6. 't' → logprob: -7.133030891418457
    7. 'ç' → logprob: -7.633030891418457
    8. 'ée' → logprob: -7.633030891418457
    9. 'né' → logprob: -7.883030891418457
    10. '   ' → logprob: -8.133030891418457

Token 1045: ' à' (ID: 1221)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07824533432722092
    2. '[u' → logprob: -2.8282454013824463
    3. '   ' → logprob: -4.578245162963867
    4. ' u' → logprob: -6.203245162963867
    5. ' à' → logprob: -6.578245162963867
    6. 'à' → logprob: -6.828245162963867
    7. '(u' → logprob: -7.453245162963867
    8. 'a' → logprob: -7.953245162963867
    9. 'at' → logprob: -9.453245162963867
    10. '
' → logprob: -9.828245162963867

Token 1046: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06196858361363411
    2. ' u' → logprob: -2.8119685649871826
    3. '	u' → logprob: -14.186968803405762
    4. '[u' → logprob: -15.311968803405762
    5. '```' → logprob: -17.436967849731445
    6. '*u' → logprob: -18.186967849731445
    7. '(u' → logprob: -18.311967849731445
    8. ' ' → logprob: -18.436967849731445
    9. '   ' → logprob: -18.561967849731445
    10. ',u' → logprob: -18.686967849731445

Token 1047: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.469590491382405e-05
    2. 'return' → logprob: -9.87507438659668
    3. ' return' → logprob: -11.00007438659668
    4. '	return' → logprob: -12.25007438659668
    5. '<|end|>' → logprob: -13.75007438659668
    6. '
' → logprob: -15.62507438659668
    7. ':return' → logprob: -15.75007438659668
    8. '    
' → logprob: -16.37507438659668
    9. ',' → logprob: -16.62507438659668
    10. '   ' → logprob: -16.75007438659668

Token 1048: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007444719667546451
    2. 'return' → logprob: -7.250744342803955
    3. ' return' → logprob: -10.500744819641113
    4. '	return' → logprob: -11.875744819641113
    5. ':return' → logprob: -17.000743865966797
    6. '       ' → logprob: -17.375743865966797
    7. '  ' → logprob: -17.875743865966797
    8. '   ' → logprob: -18.500743865966797
    9. '```' → logprob: -18.625743865966797
    10. '_return' → logprob: -18.875743865966797

Token 1049: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04948269948363304
    2. '   ' → logprob: -3.049482583999634
    3. ' return' → logprob: -7.049482822418213
    4. '	return' → logprob: -10.549482345581055
    5. ':return' → logprob: -14.674482345581055
    6. ' ' → logprob: -16.049482345581055
    7. '```' → logprob: -16.174482345581055
    8. '_return' → logprob: -16.424482345581055
    9. '  ' → logprob: -16.549482345581055
    10. '       ' → logprob: -17.174482345581055

Token 1050: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.00861456897109747
    2. ' ret' → logprob: -4.758614540100098
    3. '	ret' → logprob: -17.758615493774414
    4. '(ret' → logprob: -18.133615493774414
    5. '$ret' → logprob: -18.758615493774414
    6. 're' → logprob: -19.633615493774414
    7. 'rets' → logprob: -19.883615493774414
    8. '_ret' → logprob: -20.758615493774414
    9. ' ' → logprob: -21.133615493774414
    10. 'rett' → logprob: -21.383615493774414

Token 1051: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1052: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0009494528640061617
    2. '(f' → logprob: -7.625949382781982
    3. 'par' → logprob: -8.12594985961914
    4. '
' → logprob: -9.50094985961914
    5. '(
' → logprob: -11.12594985961914
    6. '#' → logprob: -11.12594985961914
    7. '0' → logprob: -11.25094985961914
    8. '(' → logprob: -11.37594985961914
    9. ')' → logprob: -11.50094985961914
    10. 'u' → logprob: -12.25094985961914

Token 1053: ' Dé' (ID: 27247)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0008827611454762518
    2. 'par' → logprob: -7.125882625579834
    3. 'root' → logprob: -10.375883102416992
    4. 'res' → logprob: -10.500883102416992
    5. 'print' → logprob: -11.875883102416992
    6. 'ret' → logprob: -12.000883102416992
    7. '#' → logprob: -12.750883102416992
    8. '_' → logprob: -13.875883102416992
    9. 'r' → logprob: -14.125883102416992
    10. 'ans' → logprob: -14.625883102416992

Token 1054: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007116114720702171
    2. 'part' → logprob: -5.507116317749023
    3. 'fin' → logprob: -6.382116317749023
    4. 'but' → logprob: -7.132116317749023
    5. 'm' → logprob: -8.882116317749023
    6. 'par' → logprob: -9.632116317749023
    7. '#' → logprob: -9.882116317749023
    8. 'mar' → logprob: -9.882116317749023
    9. '
' → logprob: -10.132116317749023
    10. 'r' → logprob: -10.382116317749023

Token 1055: 'ine' (ID: 514)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8105058073997498
    2. 'min' → logprob: -1.1855058670043945
    3. 'r' → logprob: -2.6855058670043945
    4. 'miner' → logprob: -3.0605058670043945
    5. 'fin' → logprob: -3.4355058670043945
    6. 'erm' → logprob: -3.6855058670043945
    7. 'init' → logprob: -4.3105058670043945
    8. 'rin' → logprob: -4.4355058670043945
    9. 'in' → logprob: -4.5605058670043945
    10. 'ermin' → logprob: -4.6855058670043945

Token 1056: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043099671602249146
    2. '0' → logprob: -3.1680996417999268
    3. '1' → logprob: -9.668099403381348
    4. 'f' → logprob: -11.168099403381348
    5. 'root' → logprob: -11.668099403381348
    6. ' (' → logprob: -12.168099403381348
    7. ' ' → logprob: -13.043099403381348
    8. '(u' → logprob: -13.793099403381348
    9. 'n' → logprob: -13.918099403381348
    10. '(
' → logprob: -14.168099403381348

Token 1057: ' parent' (ID: 5980)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.7912757396697998
    2. 'par' → logprob: -1.5412757396697998
    3. 'f' → logprob: -1.9162757396697998
    4. '0' → logprob: -2.4162757396698
    5. 'cnt' → logprob: -3.9162757396698
    6. 'u' → logprob: -4.041275978088379
    7. 'r' → logprob: -4.166275978088379
    8. 'n' → logprob: -5.291275978088379
    9. 'parent' → logprob: -5.291275978088379
    10. 's' → logprob: -6.041275978088379

Token 1058: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3064253628253937
    2. '=' → logprob: -1.4314253330230713
    3. '[' → logprob: -3.9314253330230713
    4. 'f' → logprob: -6.18142557144165
    5. 's' → logprob: -7.30642557144165
    6. '=f' → logprob: -7.30642557144165
    7. ',' → logprob: -8.181425094604492
    8. '[u' → logprob: -8.431425094604492
    9. '=-' → logprob: -8.556425094604492
    10. '[-' → logprob: -8.556425094604492

Token 1059: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -11.125020027160645
    3. 'f' → logprob: -12.250020027160645
    4. '(' → logprob: -15.750020027160645
    5. '
' → logprob: -16.12502098083496
    6. '#' → logprob: -16.50002098083496
    7. 'n' → logprob: -16.50002098083496
    8. '1' → logprob: -16.62502098083496
    9. '-' → logprob: -16.87502098083496
    10. 's' → logprob: -17.25002098083496

Token 1060: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.4193418025970459
    2. 'no' → logprob: -2.294341802597046
    3. '0' → logprob: -2.419341802597046
    4. ' sommet' → logprob: -2.544341802597046
    5. 'n' → logprob: -3.294341802597046
    6. 'u' → logprob: -3.794341802597046
    7. 's' → logprob: -5.044342041015625
    8. ' noe' → logprob: -5.919342041015625
    9. '1' → logprob: -6.169342041015625
    10. 'node' → logprob: -6.294342041015625

Token 1061: ' et' (ID: 859)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0006510786479339004
    2. 'f' → logprob: -7.750650882720947
    3. 'for' → logprob: -9.625651359558105
    4. '
' → logprob: -9.625651359558105
    5. ' =' → logprob: -10.375651359558105
    6. '=' → logprob: -10.625651359558105
    7. ' par' → logprob: -11.375651359558105
    8. '(par' → logprob: -11.625651359558105
    9. 'et' → logprob: -13.125651359558105
    10. '#' → logprob: -13.125651359558105

Token 1062: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007079057977534831
    2. '#' → logprob: -8.250707626342773
    3. 'cnt' → logprob: -8.375707626342773
    4. '_' → logprob: -9.125707626342773
    5. 'calc' → logprob: -10.125707626342773
    6. 'calcul' → logprob: -10.250707626342773
    7. 'cal' → logprob: -11.500707626342773
    8. ' f' → logprob: -11.875707626342773
    9. 'comp' → logprob: -12.250707626342773
    10. '_f' → logprob: -12.375707626342773

Token 1063: ' taille' (ID: 41644)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.13267315924167633
    2. 'tail' → logprob: -2.2576732635498047
    3. '#' → logprob: -4.382673263549805
    4. 'cnt' → logprob: -5.507673263549805
    5. 'size' → logprob: -6.257673263549805
    6. '_' → logprob: -7.257673263549805
    7. 'ta' → logprob: -9.257673263549805
    8. ' f' → logprob: -9.507673263549805
    9. ' taille' → logprob: -9.632673263549805
    10. 't' → logprob: -10.007673263549805

Token 1064: ' des' (ID: 731)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.18658612668514252
    2. 'du' → logprob: -2.1865861415863037
    3. 'de' → logprob: -3.8115861415863037
    4. '(f' → logprob: -4.186585903167725
    5. '(u' → logprob: -4.186585903167725
    6. ' de' → logprob: -6.936585903167725
    7. '[u' → logprob: -7.311585903167725
    8. '(' → logprob: -7.936585903167725
    9. '=' → logprob: -7.936585903167725
    10. ' du' → logprob: -7.936585903167725

Token 1065: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001614365610294044
    2. 'sub' → logprob: -7.251614570617676
    3. 'sou' → logprob: -8.001614570617676
    4. ' sous' → logprob: -8.626614570617676
    5. '#' → logprob: -8.751614570617676
    6. 'ss' → logprob: -10.001614570617676
    7. 'ar' → logprob: -10.126614570617676
    8. 'under' → logprob: -10.126614570617676
    9. 'plus' → logprob: -10.876614570617676
    10. '```' → logprob: -11.501614570617676

Token 1066: '-ar' (ID: 31325)
  Prédit: '-ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ar' → logprob: -0.08917489647865295
    2. 'arb' → logprob: -2.71417498588562
    3. ' arbres' → logprob: -4.464174747467041
    4. 'ar' → logprob: -5.714174747467041
    5. '-' → logprob: -6.214174747467041
    6. '_ar' → logprob: -6.464174747467041
    7. '_' → logprob: -8.5891752243042
    8. '```' → logprob: -8.8391752243042
    9. '-tree' → logprob: -9.4641752243042
    10. '\' → logprob: -10.2141752243042

Token 1067: 'bres' (ID: 88684)
  Prédit: 'bres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.030996911227703094
    2. 'bre' → logprob: -3.530996799468994
    3. 'b' → logprob: -7.030996799468994
    4. 'êtres' → logprob: -9.655997276306152
    5. 'bes' → logprob: -9.655997276306152
    6. 'bo' → logprob: -10.155997276306152
    7. '#' → logprob: -10.405997276306152
    8. 'êtes' → logprob: -10.905997276306152
    9. '_' → logprob: -11.030997276306152
    10. '   ' → logprob: -11.405997276306152

Token 1068: ' pour' (ID: 1930)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.4742110073566437
    2. 'f' → logprob: -0.9742109775543213
    3. '
' → logprob: -8.974210739135742
    4. '#' → logprob: -13.099210739135742
    5. 'root' → logprob: -13.724210739135742
    6. 'for' → logprob: -13.974210739135742
    7. '(par' → logprob: -14.224210739135742
    8. ' par' → logprob: -14.599210739135742
    9. 'parent' → logprob: -14.849210739135742
    10. '=' → logprob: -14.849210739135742

Token 1069: ' tous' (ID: 10688)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007351282052695751
    2. 'u' → logprob: -5.257351398468018
    3. 'le' → logprob: -7.132351398468018
    4. ' ' → logprob: -7.382351398468018
    5. 'la' → logprob: -8.75735092163086
    6. 'root' → logprob: -8.75735092163086
    7. 'f' → logprob: -9.00735092163086
    8. 'les' → logprob: -10.13235092163086
    9. '1' → logprob: -10.13235092163086
    10. 'l' → logprob: -10.50735092163086

Token 1070: ' les' (ID: 1341)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0025943268556147814
    2. ' u' → logprob: -6.377594470977783
    3. '(u' → logprob: -7.627594470977783
    4. 'nodes' → logprob: -9.002593994140625
    5. '_u' → logprob: -9.627593994140625
    6. '_' → logprob: -10.377593994140625
    7. '
' → logprob: -10.752593994140625
    8. '#' → logprob: -10.752593994140625
    9. 'le' → logprob: -10.877593994140625
    10. 'for' → logprob: -11.252593994140625

Token 1071: ' somm' (ID: 44830)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.15026098489761353
    2. 'som' → logprob: -2.5252609252929688
    3. 's' → logprob: -3.2752609252929688
    4. 'n' → logprob: -4.525260925292969
    5. 'no' → logprob: -4.900260925292969
    6. 'nodes' → logprob: -6.400260925292969
    7. ' somm' → logprob: -7.150260925292969
    8. ' u' → logprob: -8.775260925292969
    9. 'vertices' → logprob: -8.775260925292969
    10. 'summ' → logprob: -8.900260925292969

Token 1072: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.04018854349851608
    2. 'et' → logprob: -3.7901885509490967
    3. 'e' → logprob: -5.165188312530518
    4. '#' → logprob: -5.290188312530518
    5. 'êts' → logprob: -7.040188312530518
    6. '
' → logprob: -7.165188312530518
    7. 'u' → logprob: -7.665188312530518
    8. 'ètres' → logprob: -7.790188312530518
    9. 'eurs' → logprob: -7.915188312530518
    10. '```' → logprob: -8.040188789367676

Token 1073: ',' (ID: 11)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3869073987007141
    2. 'f' → logprob: -1.1369073390960693
    3. '
' → logprob: -11.636907577514648
    4. '_' → logprob: -11.636907577514648
    5. 'root' → logprob: -11.636907577514648
    6. '_par' → logprob: -12.886907577514648
    7. 'ret' → logprob: -13.011907577514648
    8. 'for' → logprob: -13.011907577514648
    9. '#' → logprob: -14.136907577514648
    10. 'res' → logprob: -14.386907577514648

Token 1074: ' à' (ID: 1221)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005182435852475464
    2. '#' → logprob: -7.750518321990967
    3. 'par' → logprob: -9.750517845153809
    4. ' f' → logprob: -11.375517845153809
    5. 'root' → logprob: -12.250517845153809
    6. '_' → logprob: -12.375517845153809
    7. 'ret' → logprob: -12.500517845153809
    8. '
' → logprob: -13.500517845153809
    9. '0' → logprob: -13.625517845153809
    10. '_f' → logprob: -14.000517845153809

Token 1075: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0009794592624530196
    2. ' partir' → logprob: -7.125979423522949
    3. 'l' → logprob: -9.87597942352295
    4. 'par' → logprob: -10.12597942352295
    5. 'la' → logprob: -10.87597942352295
    6. '0' → logprob: -11.12597942352295
    7. '#' → logprob: -11.25097942352295
    8. 'rac' → logprob: -11.37597942352295
    9. 'u' → logprob: -12.12597942352295
    10. 'tr' → logprob: -12.75097942352295

Token 1076: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43083763122558594
    2. 'de' → logprob: -1.555837631225586
    3. '(' → logprob: -2.680837631225586
    4. '#' → logprob: -3.055837631225586
    5. ' de' → logprob: -4.055837631225586
    6. 'du' → logprob: -5.305837631225586
    7. 'd' → logprob: -7.805837631225586
    8. ' du' → logprob: -7.930837631225586
    9. '=' → logprob: -8.805837631225586
    10. 'u' → logprob: -9.930837631225586

Token 1077: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.50000286102295
    3. '
' → logprob: -14.50000286102295
    4. '#' → logprob: -14.62500286102295
    5. 'root' → logprob: -15.75000286102295
    6. '```' → logprob: -16.750001907348633
    7. '۰' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '`' → logprob: -18.875001907348633
    10. '０' → logprob: -19.125001907348633

Token 1078: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013911888236179948
    2. 'rac' → logprob: -6.751391410827637
    3. 'root' → logprob: -8.501391410827637
    4. 'r' → logprob: -11.251391410827637
    5. ' rac' → logprob: -12.751391410827637
    6. 'prem' → logprob: -14.126391410827637
    7. ' ' → logprob: -15.376391410827637
    8. 'node' → logprob: -16.00139045715332
    9. 'dfs' → logprob: -16.50139045715332
    10. '#' → logprob: -16.75139045715332

Token 1079: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -1.5148119926452637
    2. '```' → logprob: -1.7648119926452637
    3. '``' → logprob: -1.7648119926452637
    4. '   ' → logprob: -2.2648119926452637
    5. '
' → logprob: -2.7648119926452637
    6. '#' → logprob: -2.8898119926452637
    7. '>' → logprob: -3.1398119926452637
    8. 'c' → logprob: -3.8898119926452637
    9. '`' → logprob: -4.139811992645264
    10. '1' → logprob: -4.389811992645264

Token 1080: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03717730939388275
    2. 'par' → logprob: -4.037177085876465
    3. '0' → logprob: -4.162177085876465
    4. '
' → logprob: -6.037177085876465
    5. 'root' → logprob: -7.537177085876465
    6. '(' → logprob: -8.662177085876465
    7. '=' → logprob: -9.662177085876465
    8. ' =' → logprob: -10.662177085876465
    9. '#' → logprob: -10.912177085876465
    10. ' f' → logprob: -11.037177085876465

Token 1081: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.375001907348633
    3. 'f' → logprob: -14.625001907348633
    4. '
' → logprob: -17.500001907348633
    5. '=' → logprob: -17.625001907348633
    6. ' ' → logprob: -18.125001907348633
    7. ' =' → logprob: -20.250001907348633
    8. '#' → logprob: -20.375001907348633
    9. '00' → logprob: -21.500001907348633
    10. '[' → logprob: -21.500001907348633

Token 1082: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08685792237520218
    2. 'par' → logprob: -2.586858034133911
    3. '
' → logprob: -4.836857795715332
    4. '
' → logprob: -13.836857795715332
    5. '(f' → logprob: -14.336857795715332
    6. '(par' → logprob: -14.336857795715332
    7. 'parent' → logprob: -14.461857795715332
    8. ' f' → logprob: -14.711857795715332
    9. ',
' → logprob: -15.836857795715332
    10. '  
' → logprob: -15.961857795715332

Token 1083: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.008129963040119e-06
    2. 'par' → logprob: -12.500003814697266
    3. '_' → logprob: -15.750003814697266
    4. ' f' → logprob: -18.125003814697266
    5. 'print' → logprob: -18.250003814697266
    6. '_f' → logprob: -18.375003814697266
    7. 'res' → logprob: -19.500003814697266
    8. 'root' → logprob: -19.875003814697266
    9. '```' → logprob: -20.250003814697266
    10. '_par' → logprob: -21.000003814697266

Token 1084: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. ' (' → logprob: -13.00000286102295
    3. '0' → logprob: -14.25000286102295
    4. '(
' → logprob: -16.250003814697266
    5. '(u' → logprob: -16.875003814697266
    6. '((' → logprob: -18.750003814697266
    7. 'u' → logprob: -19.125003814697266
    8. '()' → logprob: -19.375003814697266
    9. 'f' → logprob: -19.750003814697266
    10. '(

' → logprob: -20.750003814697266

Token 1085: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '(' → logprob: -24.5
    4. '۰' → logprob: -24.875
    5. ')' → logprob: -25.25
    6. '０' → logprob: -26.125
    7. '00' → logprob: -26.5
    8. '
' → logprob: -27.5
    9. '٠' → logprob: -28.25
    10. '০' → logprob: -28.625

Token 1086: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.625004768371582
    4. ')#' → logprob: -17.750003814697266
    5. ')
' → logprob: -18.000003814697266
    6. '))' → logprob: -18.250003814697266
    7. '())' → logprob: -18.375003814697266
    8. ')

' → logprob: -18.375003814697266
    9. ')`' → logprob: -18.375003814697266
    10. '()' → logprob: -19.375003814697266

Token 1087: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5766626000404358
    2. 'res' → logprob: -1.701662540435791
    3. 'Q' → logprob: -2.826662540435791
    4. 'dp' → logprob: -3.201662540435791
    5. 'max' → logprob: -3.451662540435791
    6. 'def' → logprob: -3.701662540435791
    7. 'answer' → logprob: -4.451662540435791
    8. 'k' → logprob: -4.826662540435791
    9. 'u' → logprob: -4.826662540435791
    10. 'rest' → logprob: -4.826662540435791

Token 1088: ' Pr' (ID: 2284)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9092133045196533
    2. 'res' → logprob: -1.2842133045196533
    3. 'ans' → logprob: -1.6592133045196533
    4. 'q' → logprob: -3.1592133045196533
    5. 'answer' → logprob: -3.7842133045196533
    6. 'def' → logprob: -4.659213066101074
    7. 'Q' → logprob: -4.784213066101074
    8. 'max' → logprob: -5.409213066101074
    9. 'total' → logprob: -5.534213066101074
    10. 'dist' → logprob: -5.534213066101074

Token 1089: 'éc' (ID: 5675)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19780348241329193
    2. 'ef' → logprob: -2.322803497314453
    3. '#' → logprob: -3.697803497314453
    4. 'ev' → logprob: -3.822803497314453
    5. 'e' → logprob: -4.697803497314453
    6. 'é' → logprob: -4.947803497314453
    7. 'def' → logprob: -5.197803497314453
    8. 'ed' → logprob: -6.197803497314453
    9. 'od' → logprob: -6.822803497314453
    10. 'nt' → logprob: -6.947803497314453

Token 1090: 'alc' (ID: 27187)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.23199333250522614
    2. 'e' → logprob: -2.6069934368133545
    3. 'def' → logprob: -3.6069934368133545
    4. 'éf' → logprob: -3.8569934368133545
    5. 'ent' → logprob: -3.9819934368133545
    6. '#' → logprob: -3.9819934368133545
    7. 'ep' → logprob: -4.606993198394775
    8. 'eff' → logprob: -5.356993198394775
    9. 'int' → logprob: -5.606993198394775
    10. '=' → logprob: -5.606993198394775

Token 1091: 'ule' (ID: 1601)
  Prédit: 'alc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alc' → logprob: -0.15738630294799805
    2. 'ount' → logprob: -2.782386302947998
    3. 'om' → logprob: -3.532386302947998
    4. 'nt' → logprob: -3.907386302947998
    5. 'al' → logprob: -4.782386302947998
    6. ' =' → logprob: -5.532386302947998
    7. '#' → logprob: -5.657386302947998
    8. 'max' → logprob: -5.782386302947998
    9. 'mp' → logprob: -5.907386302947998
    10. '[' → logprob: -6.032386302947998

Token 1092: ' les' (ID: 1341)
  Prédit: 'LOG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LOG' → logprob: -0.6312292218208313
    2. 'log' → logprob: -1.6312291622161865
    3. 'max' → logprob: -1.8812291622161865
    4. 'lg' → logprob: -2.3812291622161865
    5. ' LOG' → logprob: -4.631229400634766
    6. 'up' → logprob: -5.006229400634766
    7. 'depth' → logprob: -5.756229400634766
    8. 'MAX' → logprob: -5.881229400634766
    9. 'pow' → logprob: -6.881229400634766
    10. '#' → logprob: -7.006229400634766

Token 1093: ' puiss' (ID: 102546)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.14448362588882446
    2. 'lg' → logprob: -3.3944835662841797
    3. 'fact' → logprob: -3.5194835662841797
    4. 'depth' → logprob: -3.6444835662841797
    5. 'LOG' → logprob: -4.14448356628418
    6. 'up' → logprob: -4.51948356628418
    7. 'dp' → logprob: -5.64448356628418
    8. 'max' → logprob: -5.89448356628418
    9. 'pow' → logprob: -6.14448356628418
    10. '#' → logprob: -6.26948356628418

Token 1094: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.000721487682312727
    2. 'es' → logprob: -7.875721454620361
    3. 'ance' → logprob: -8.50072193145752
    4. 'ces' → logprob: -10.12572193145752
    5. 'ences' → logprob: -10.25072193145752
    6. 'ages' → logprob: -10.37572193145752
    7. '2' → logprob: -11.62572193145752
    8. 'pow' → logprob: -12.62572193145752
    9. 'powers' → logprob: -12.62572193145752
    10. 'e' → logprob: -13.00072193145752

Token 1095: ' de' (ID: 334)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7170294523239136
    2. 'mod' → logprob: -0.9670294523239136
    3. 'pow' → logprob: -2.967029571533203
    4. 's' → logprob: -3.842029571533203
    5. '=' → logprob: -4.467029571533203
    6. ' of' → logprob: -4.592029571533203
    7. ' =' → logprob: -5.092029571533203
    8. '2' → logprob: -5.342029571533203
    9. 'de' → logprob: -5.342029571533203
    10. '_mod' → logprob: -5.717029571533203

Token 1096: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012340416433289647
    2. '10' → logprob: -6.75123405456543
    3. 'two' → logprob: -10.75123405456543
    4. 'pow' → logprob: -11.25123405456543
    5. '
' → logprob: -11.62623405456543
    6. 'inv' → logprob: -11.87623405456543
    7. ' ' → logprob: -12.50123405456543
    8. 'def' → logprob: -13.12623405456543
    9. '```' → logprob: -13.37623405456543
    10. '#' → logprob: -13.62623405456543

Token 1097: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029290912207216024
    2. '10' → logprob: -5.877929210662842
    3. 'two' → logprob: -10.002928733825684
    4. 'pow' → logprob: -10.377928733825684
    5. '
' → logprob: -11.377928733825684
    6. 'inv' → logprob: -11.502928733825684
    7. 'mod' → logprob: -11.877928733825684
    8. 'base' → logprob: -12.502928733825684
    9. '```' → logprob: -12.502928733825684
    10. '100' → logprob: -13.002928733825684

Token 1098: ' modulo' (ID: 112372)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.08659101277589798
    2. 'p' → logprob: -3.2115910053253174
    3. 'pw' → logprob: -3.4615910053253174
    4. ' =' → logprob: -5.0865912437438965
    5. 'max' → logprob: -6.4615912437438965
    6. '=' → logprob: -7.0865912437438965
    7. 'power' → logprob: -7.3365912437438965
    8. 'dp' → logprob: -7.7115912437438965
    9. '2' → logprob: -7.8365912437438965
    10. 'MAX' → logprob: -8.586590766906738

Token 1099: ' '' (ID: 461)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09589716047048569
    2. 'mod' → logprob: -2.5958971977233887
    3. '2' → logprob: -5.095897197723389
    4. '[' → logprob: -5.095897197723389
    5. '(pow' → logprob: -7.095897197723389
    6. 'p' → logprob: -7.220897197723389
    7. 'max' → logprob: -7.220897197723389
    8. ' mod' → logprob: -8.09589672088623
    9. ' (' → logprob: -8.09589672088623
    10. ' pow' → logprob: -8.47089672088623

Token 1100: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.842555426876061e-06
    2. ' mod' → logprob: -12.250004768371582
    3. '(mod' → logprob: -18.8750057220459
    4. '100' → logprob: -19.3750057220459
    5. '
' → logprob: -20.0000057220459
    6. '	mod' → logprob: -21.5000057220459
    7. '_mod' → logprob: -22.2500057220459
    8. 'mo' → logprob: -22.6250057220459
    9. 'moder' → logprob: -22.6250057220459
    10. '```' → logprob: -22.7500057220459

Token 1101: ''' (ID: 6)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09582307189702988
    2. 'p' → logprob: -3.220823049545288
    3. 'pw' → logprob: -4.095823287963867
    4. 'max' → logprob: -4.595823287963867
    5. ' =' → logprob: -5.220823287963867
    6. 'power' → logprob: -5.345823287963867
    7. '2' → logprob: -5.470823287963867
    8. '=' → logprob: -5.845823287963867
    9. 'MAX' → logprob: -6.845823287963867
    10. ',' → logprob: -6.845823287963867

Token 1102: ' jusqu' (ID: 21961)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.14704185724258423
    2. 'p' → logprob: -2.1470417976379395
    3. 'pw' → logprob: -4.1470417976379395
    4. 'dp' → logprob: -6.5220417976379395
    5. 'power' → logprob: -6.6470417976379395
    6. '2' → logprob: -8.022042274475098
    7. 'two' → logprob: -8.272042274475098
    8. '```' → logprob: -8.897042274475098
    9. 'powers' → logprob: -9.022042274475098
    10. 'max' → logprob: -9.022042274475098

Token 1103: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.582152783870697
    2. '(n' → logprob: -1.7071528434753418
    3. 'n' → logprob: -1.8321528434753418
    4. '=n' → logprob: -4.082152843475342
    5. ' =' → logprob: -4.582152843475342
    6. '[n' → logprob: -4.707152843475342
    7. 'a' → logprob: -4.832152843475342
    8. 'à' → logprob: -4.832152843475342
    9. ''à' → logprob: -4.832152843475342
    10. '(' → logprob: -4.957152843475342

Token 1104: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00013047587708570063
    2. ' n' → logprob: -9.750130653381348
    3. '10' → logprob: -9.875130653381348
    4. '2' → logprob: -11.375130653381348
    5. '100' → logprob: -12.750130653381348
    6. '(n' → logprob: -12.875130653381348
    7. '[n' → logprob: -13.625130653381348
    8. '250' → logprob: -13.875130653381348
    9. 'max' → logprob: -14.625130653381348
    10. '20' → logprob: -15.000130653381348

Token 1105: ' inclus' (ID: 11891)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2863301634788513
    2. 'p' → logprob: -1.661330223083496
    3. 'pw' → logprob: -2.911330223083496
    4. 'power' → logprob: -6.661330223083496
    5. 'dp' → logprob: -7.036330223083496
    6. 'two' → logprob: -7.286330223083496
    7. 'po' → logprob: -7.911330223083496
    8. '2' → logprob: -7.911330223083496
    9. 'pot' → logprob: -8.286330223083496
    10. '_pow' → logprob: -9.161330223083496

Token 1106: '
' (ID: 198)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.19168584048748016
    2. 'p' → logprob: -1.9416857957839966
    3. 'pw' → logprob: -3.566685914993286
    4. 'power' → logprob: -7.066685676574707
    5. 'dp' → logprob: -7.441685676574707
    6. 'two' → logprob: -7.691685676574707
    7. 'pot' → logprob: -8.566685676574707
    8. 'po' → logprob: -8.816685676574707
    9. '2' → logprob: -9.191685676574707
    10. 'powers' → logprob: -9.941685676574707

Token 1107: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5245658159255981
    2. 'p' → logprob: -1.5245658159255981
    3. 'pw' → logprob: -1.7745658159255981
    4. 'two' → logprob: -5.149565696716309
    5. 'dp' → logprob: -5.274565696716309
    6. 'power' → logprob: -5.774565696716309
    7. 'pot' → logprob: -6.024565696716309
    8. 'po' → logprob: -7.149565696716309
    9. 'tw' → logprob: -7.899565696716309
    10. 'P' → logprob: -8.149565696716309

Token 1108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005782312247902155
    2. '_' → logprob: -5.630782127380371
    3. '(' → logprob: -6.880782127380371
    4. 's' → logprob: -7.630782127380371
    5. ' =' → logprob: -8.505782127380371
    6. '_pow' → logprob: -9.005782127380371
    7. '_two' → logprob: -9.130782127380371
    8. 'pow' → logprob: -9.755782127380371
    9. 'er' → logprob: -10.005782127380371
    10. '=' → logprob: -10.005782127380371

Token 1109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16028372943401337
    2. ' =' → logprob: -1.9102836847305298
    3. '[' → logprob: -10.285284042358398
    4. '=[' → logprob: -10.785284042358398
    5. '_' → logprob: -13.410284042358398
    6. ' =[' → logprob: -13.785284042358398
    7. '_=' → logprob: -14.285284042358398
    8. 's' → logprob: -14.410284042358398
    9. 'pow' → logprob: -15.035284042358398
    10. ' ' → logprob: -16.1602840423584

Token 1110: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. ' [' → logprob: -12.000008583068848
    3. '[n' → logprob: -13.750008583068848
    4. '[p' → logprob: -13.875008583068848
    5. 'pow' → logprob: -15.125008583068848
    6. '[len' → logprob: -16.250009536743164
    7. '[num' → logprob: -16.500009536743164
    8. '[int' → logprob: -17.125009536743164
    9. '[val' → logprob: -17.750009536743164
    10. '1' → logprob: -18.000009536743164

Token 1111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.375
    3. ']' → logprob: -19.5
    4. '(' → logprob: -20.125
    5. '```' → logprob: -21.0
    6. '
' → logprob: -21.125
    7. 'None' → logprob: -21.125
    8. 'pow' → logprob: -21.75
    9. '[' → logprob: -21.875
    10. '１' → logprob: -22.375

Token 1112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004925066023133695
    2. ']
' → logprob: -8.875492095947266
    3. ']*' → logprob: -9.125492095947266
    4. ']*(' → logprob: -9.125492095947266
    5. ']+' → logprob: -9.625492095947266
    6. ',' → logprob: -10.125492095947266
    7. ' ]' → logprob: -11.375492095947266
    8. ' for' → logprob: -12.125492095947266
    9. '*' → logprob: -12.375492095947266
    10. 'for' → logprob: -12.625492095947266

Token 1113: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3360747694969177
    2. ']+' → logprob: -2.0860748291015625
    3. ' for' → logprob: -2.7110748291015625
    4. 'for' → logprob: -3.7110748291015625
    5. ']*(' → logprob: -3.8360748291015625
    6. '*' → logprob: -3.9610748291015625
    7. ']*' → logprob: -4.0860748291015625
    8. '
' → logprob: -5.2110748291015625
    9. ' *' → logprob: -6.2110748291015625
    10. '*(' → logprob: -6.4610748291015625

Token 1114: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.250007629394531
    3. '(max' → logprob: -13.625007629394531
    4. ' (' → logprob: -14.250007629394531
    5. '((' → logprob: -14.750007629394531
    6. 'n' → logprob: -15.250007629394531
    7. '(nn' → logprob: -16.75000762939453
    8. '\(' → logprob: -17.12500762939453
    9. '[n' → logprob: -17.75000762939453
    10. '(nx' → logprob: -17.87500762939453

Token 1115: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031781906727701426
    2. '(n' → logprob: -5.753178119659424
    3. ' n' → logprob: -14.628178596496582
    4. ' (' → logprob: -17.753177642822266
    5. ')n' → logprob: -18.878177642822266
    6. '	n' → logprob: -19.253177642822266
    7. '[n' → logprob: -19.378177642822266
    8. '(' → logprob: -19.753177642822266
    9. '_n' → logprob: -21.128177642822266
    10. '
' → logprob: -21.253177642822266

Token 1116: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004734486574307084
    2. '+
' → logprob: -7.750473499298096
    3. ' +' → logprob: -10.125473022460938
    4. '+n' → logprob: -13.250473022460938
    5. '
' → logprob: -14.750473022460938
    6. ' +
' → logprob: -15.375473022460938
    7. '+)' → logprob: -16.500473022460938
    8. ')' → logprob: -17.250473022460938
    9. '<|end|>' → logprob: -17.375473022460938
    10. '1' → logprob: -17.500473022460938

Token 1117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010998018842656165
    2. '2' → logprob: -9.250109672546387
    3. ' ' → logprob: -11.250109672546387
    4. '10' → logprob: -14.500109672546387
    5. '
' → logprob: -16.500110626220703
    6. '11' → logprob: -17.000110626220703
    7. '100' → logprob: -17.125110626220703
    8. '+' → logprob: -17.250110626220703
    9. '20' → logprob: -17.250110626220703
    10. 'n' → logprob: -17.875110626220703

Token 1118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001825642102630809
    2. '2' → logprob: -8.625182151794434
    3. '10' → logprob: -13.125182151794434
    4. ' ' → logprob: -14.625182151794434
    5. '5' → logprob: -15.000182151794434
    6. '3' → logprob: -16.37518310546875
    7. '11' → logprob: -16.62518310546875
    8. '15' → logprob: -17.56268310546875
    9. '20' → logprob: -17.81268310546875
    10. '１' → logprob: -17.93768310546875

Token 1119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133809268474579
    2. ')
' → logprob: -1.3133809566497803
    3. ')
' → logprob: -9.06338119506836
    4. ')

' → logprob: -13.43838119506836
    5. ' )
' → logprob: -13.81338119506836
    6. ' )' → logprob: -14.43838119506836
    7. ')`
' → logprob: -16.43838119506836
    8. '
' → logprob: -17.06338119506836
    9. ']' → logprob: -17.06338119506836
    10. ')#' → logprob: -17.06338119506836

Token 1120: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000868944451212883
    2. ' for' → logprob: -7.125868797302246
    3. 'i' → logprob: -9.875868797302246
    4. 'pow' → logprob: -11.750868797302246
    5. '
' → logprob: -12.750868797302246
    6. '[' → logprob: -14.625868797302246
    7. '```' → logprob: -15.250868797302246
    8. '	for' → logprob: -15.250868797302246
    9. '=' → logprob: -15.375868797302246
    10. ' 
' → logprob: -15.625868797302246

Token 1121: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38743478059768677
    2. ' i' → logprob: -1.137434720993042
    3. '_' → logprob: -7.512434959411621
    4. ' _' → logprob: -11.887434959411621
    5. '_i' → logprob: -11.887434959411621
    6. '	i' → logprob: -12.762434959411621
    7. ' ' → logprob: -15.137434959411621
    8. 'x' → logprob: -15.887434959411621
    9. '_=' → logprob: -16.512434005737305
    10. '   ' → logprob: -16.762434005737305

Token 1122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427837759256363
    2. 'in' → logprob: -2.0177838802337646
    3. ' ' → logprob: -9.767784118652344
    4. ' i' → logprob: -11.142784118652344
    5. '1' → logprob: -11.642784118652344
    6. '	in' → logprob: -12.017784118652344
    7. 'i' → logprob: -12.267784118652344
    8. '[' → logprob: -12.892784118652344
    9. 'import' → logprob: -13.517784118652344
    10. '_' → logprob: -13.517784118652344

Token 1123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -18.000123977661133
    4. ' ' → logprob: -19.625123977661133
    5. '	range' → logprob: -19.625123977661133
    6. '   ' → logprob: -19.625123977661133
    7. '1' → logprob: -20.250123977661133
    8. '
' → logprob: -20.750123977661133
    9. '  ' → logprob: -21.875123977661133
    10. '```' → logprob: -22.125123977661133

Token 1124: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. ' ' → logprob: -10.000051498413086
    3. 'n' → logprob: -12.250051498413086
    4. ' n' → logprob: -14.000051498413086
    5. '(' → logprob: -15.125051498413086
    6. '(n' → logprob: -16.500051498413086
    7. '   ' → logprob: -17.375051498413086
    8. '    ' → logprob: -19.750051498413086
    9. '
' → logprob: -19.875051498413086
    10. ')' → logprob: -20.500051498413086

Token 1125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. 'n' → logprob: -7.875380039215088
    3. ' ' → logprob: -17.25037956237793
    4. '(' → logprob: -18.12537956237793
    5. '(n' → logprob: -18.25037956237793
    6. ' n' → logprob: -18.75037956237793
    7. '
' → logprob: -19.37537956237793
    8. '   ' → logprob: -19.37537956237793
    9. '	n' → logprob: -20.00037956237793
    10. '１' → logprob: -20.50037956237793

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01232574600726366
    2. ',n' → logprob: -4.887325763702393
    3. ' ,' → logprob: -5.387325763702393
    4. ',
' → logprob: -9.887325286865234
    5. ' n' → logprob: -10.387325286865234
    6. 'n' → logprob: -10.512325286865234
    7. '(n' → logprob: -11.887325286865234
    8. ',len' → logprob: -12.637325286865234
    9. '1' → logprob: -12.887325286865234
    10. '   ' → logprob: -13.262325286865234

Token 1127: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.935296834039036e-06
    2. ' n' → logprob: -12.75000286102295
    3. '	n' → logprob: -18.500003814697266
    4. ')n' → logprob: -19.875003814697266
    5. '
' → logprob: -20.250003814697266
    6. 'i' → logprob: -20.375003814697266
    7. '(n' → logprob: -20.875003814697266
    8. ')' → logprob: -21.750003814697266
    9. 'len' → logprob: -21.750003814697266
    10. '   ' → logprob: -21.750003814697266

Token 1128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45555487275123596
    2. '):
' → logprob: -1.0805548429489136
    3. ' +' → logprob: -4.580554962158203
    4. ')' → logprob: -4.705554962158203
    5. '):' → logprob: -5.080554962158203
    6. '1' → logprob: -7.830554962158203
    7. ' ):
' → logprob: -8.830554962158203
    8. '+
' → logprob: -9.205554962158203
    9. ',' → logprob: -9.580554962158203
    10. '
' → logprob: -10.330554962158203

Token 1129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038440994918346405
    2. 'n' → logprob: -3.2884409427642822
    3. ' ' → logprob: -8.538440704345703
    4. ' n' → logprob: -9.163440704345703
    5. '(n' → logprob: -9.663440704345703
    6. '   ' → logprob: -11.038440704345703
    7. '+' → logprob: -11.663440704345703
    8. 'i' → logprob: -12.538440704345703
    9. ')' → logprob: -13.288440704345703
    10. '2' → logprob: -13.288440704345703

Token 1130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.244413766078651e-05
    2. 'i' → logprob: -9.750082015991211
    3. 'n' → logprob: -11.625082015991211
    4. ' ' → logprob: -11.625082015991211
    5. '+' → logprob: -12.750082015991211
    6. '2' → logprob: -13.750082015991211
    7. '   ' → logprob: -13.875082015991211
    8. '
' → logprob: -14.625082015991211
    9. ')' → logprob: -15.125082015991211
    10. '(i' → logprob: -15.500082015991211

Token 1131: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05033936724066734
    2. '):' → logprob: -3.050339460372925
    3. ')' → logprob: -6.425339221954346
    4. '):
' → logprob: -9.300339698791504
    5. ':' → logprob: -10.800339698791504
    6. ':
' → logprob: -11.300339698791504
    7. ' ):
' → logprob: -12.425339698791504
    8. '   ' → logprob: -14.675339698791504
    9. ']:
' → logprob: -14.675339698791504
    10. ',' → logprob: -14.925339698791504

Token 1132: '   ' (ID: 271)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03805997222661972
    2. '   ' → logprob: -3.288059949874878
    3. ' pow' → logprob: -11.538060188293457
    4. '```' → logprob: -12.163060188293457
    5. '(pow' → logprob: -13.163060188293457
    6. '_pow' → logprob: -14.413060188293457
    7. '.pow' → logprob: -15.163060188293457
    8. '2' → logprob: -15.538060188293457
    9. '
' → logprob: -15.538060188293457
    10. '    
' → logprob: -15.913060188293457

Token 1133: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -7.982165698194876e-05
    2. '   ' → logprob: -9.750080108642578
    3. ' pow' → logprob: -10.750080108642578
    4. '_pow' → logprob: -16.750080108642578
    5. '(pow' → logprob: -17.125080108642578
    6. '.pow' → logprob: -18.000080108642578
    7. '```' → logprob: -18.375080108642578
    8. '
' → logprob: -19.250080108642578
    9. 'Pow' → logprob: -19.375080108642578
    10. 'power' → logprob: -21.000080108642578

Token 1134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'pow' → logprob: -16.375
    3. '```' → logprob: -19.875
    4. '
' → logprob: -20.25
    5. '۲' → logprob: -20.875
    6. '[' → logprob: -21.0
    7. '(pow' → logprob: -21.625
    8. '₂' → logprob: -21.8125
    9. ' ' → logprob: -22.375
    10. '٢' → logprob: -22.375

Token 1135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. 'i' → logprob: -16.750003814697266
    5. ' [' → logprob: -17.250003814697266
    6. '[I' → logprob: -17.625003814697266
    7. '
' → logprob: -17.750003814697266
    8. 'pow' → logprob: -17.875003814697266
    9. '[
' → logprob: -18.875003814697266
    10. '\[' → logprob: -19.000003814697266

Token 1136: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01860089600086212
    2. ' =' → logprob: -4.518600940704346
    3. ']' → logprob: -5.018600940704346
    4. ']=' → logprob: -7.018600940704346
    5. '[' → logprob: -12.143600463867188
    6. ')' → logprob: -12.893600463867188
    7. '*=' → logprob: -13.393600463867188
    8. '   ' → logprob: -13.768600463867188
    9. ']=(' → logprob: -13.893600463867188
    10. ',' → logprob: -14.268600463867188

Token 1137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.627176768844947e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=
' → logprob: -16.12509536743164
    4. '=(' → logprob: -16.87509536743164
    5. '*=' → logprob: -17.25009536743164
    6. '=

' → logprob: -18.75009536743164
    7. '=p' → logprob: -20.62509536743164
    8. '＝' → logprob: -20.75009536743164
    9. '=int' → logprob: -21.00009536743164
    10. ']=' → logprob: -21.12509536743164

Token 1138: ' pow' (ID: 9779)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.0555858351290226
    2. 'pow' → logprob: -2.9305858612060547
    3. ' (' → logprob: -7.555585861206055
    4. ' pow' → logprob: -9.930585861206055
    5. '(p' → logprob: -10.055585861206055
    6. '(' → logprob: -10.055585861206055
    7. '(power' → logprob: -10.430585861206055
    8. '2' → logprob: -12.430585861206055
    9. '(po' → logprob: -12.805585861206055
    10. '   ' → logprob: -13.055585861206055

Token 1139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013509492855519056
    2. '(' → logprob: -6.6263508796691895
    3. 'pow' → logprob: -10.876351356506348
    4. '(pow' → logprob: -12.126351356506348
    5. '```' → logprob: -15.876351356506348
    6. '(
' → logprob: -16.25135040283203
    7. ' ' → logprob: -16.37635040283203
    8. '
' → logprob: -16.75135040283203
    9. ' pow' → logprob: -17.00135040283203
    10. ' (' → logprob: -17.37635040283203

Token 1140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. 'i' → logprob: -12.375006675720215
    3. '[' → logprob: -13.000006675720215
    4. '[
' → logprob: -15.125006675720215
    5. '
' → logprob: -15.500006675720215
    6. '```' → logprob: -17.00000762939453
    7. '[I' → logprob: -17.62500762939453
    8. ' i' → logprob: -18.12500762939453
    9. ' [' → logprob: -18.37500762939453
    10. '1' → logprob: -19.12500762939453

Token 1141: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[' → logprob: -17.5
    4. '[I' → logprob: -19.0
    5. '(i' → logprob: -19.75
    6. '[
' → logprob: -20.25
    7. '
' → logprob: -20.375
    8. '-' → logprob: -20.5
    9. '[u' → logprob: -20.75
    10. '1' → logprob: -20.75

Token 1142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -17.375
    4. '```' → logprob: -17.625
    5. ']' → logprob: -18.375
    6. '   ' → logprob: -18.625
    7. '-' → logprob: -19.8125
    8. '

' → logprob: -20.0625
    9. 'i' → logprob: -20.125
    10. '[' → logprob: -21.25

Token 1143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -16.75
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. ']' → logprob: -19.625
    7. '۱' → logprob: -19.75
    8. '১' → logprob: -19.8125
    9. '

' → logprob: -20.125
    10. '-' → logprob: -20.375

Token 1144: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008632530458271503
    2. ' *' → logprob: -4.758632659912109
    3. ']' → logprob: -11.75863265991211
    4. '2' → logprob: -12.00863265991211
    5. '
' → logprob: -13.13363265991211
    6. ',' → logprob: -14.13363265991211
    7. '   ' → logprob: -14.63363265991211
    8. ' ' → logprob: -14.75863265991211
    9. ']*' → logprob: -15.88363265991211
    10. '*
' → logprob: -16.50863265991211

Token 1145: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -8.745069499127567e-05
    2. '2' → logprob: -9.62508773803711
    3. ' *' → logprob: -11.12508773803711
    4. '
' → logprob: -12.75008773803711
    5. '   ' → logprob: -13.62508773803711
    6. '(' → logprob: -13.75008773803711
    7. ' ' → logprob: -14.75008773803711
    8. '*
' → logprob: -14.75008773803711
    9. '[' → logprob: -15.50008773803711
    10. '<<' → logprob: -16.25008773803711

Token 1146: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -16.375024795532227
    4. '   ' → logprob: -18.250024795532227
    5. '  ' → logprob: -21.250024795532227
    6. '```' → logprob: -21.875024795532227
    7. '

' → logprob: -22.750024795532227
    8. '۲' → logprob: -22.875024795532227
    9. '    ' → logprob: -23.125024795532227
    10. '  
' → logprob: -23.125024795532227

Token 1147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -17.25
    4. '   ' → logprob: -20.0
    5. '۲' → logprob: -20.75
    6. '

' → logprob: -21.0
    7. 'mod' → logprob: -21.25
    8. '(' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. '２' → logprob: -21.5

Token 1148: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.57594895362854
    2. '%' → logprob: -0.82594895362854
    3. ' mod' → logprob: -12.075948715209961
    4. '
' → logprob: -13.825948715209961
    5. '%n' → logprob: -13.950948715209961
    6. ' %=' → logprob: -14.450948715209961
    7. '%i' → logprob: -15.075948715209961
    8. 'mod' → logprob: -15.075948715209961
    9. ')' → logprob: -15.325948715209961
    10. '%c' → logprob: -15.950948715209961

Token 1149: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.5
    3. '(mod' → logprob: -20.25
    4. '	mod' → logprob: -24.0
    5. 'MOD' → logprob: -24.25
    6. '
' → logprob: -25.875
    7. 'moder' → logprob: -26.0
    8. '100' → logprob: -26.0
    9. '_mod' → logprob: -27.0
    10. '```' → logprob: -27.375

Token 1150: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1429973691701889
    2. '<|end|>' → logprob: -2.2679972648620605
    3. '#' → logprob: -4.2679972648620605
    4. ')' → logprob: -4.6429972648620605
    5. '

' → logprob: -6.3929972648620605
    6. 'def' → logprob: -6.6429972648620605
    7. 'for' → logprob: -7.1429972648620605
    8. '\n' → logprob: -7.8929972648620605
    9. '<|end|>' → logprob: -8.267997741699219
    10. 'result' → logprob: -8.267997741699219

Token 1151: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2583529949188232
    2. 'dp' → logprob: -1.3833529949188232
    3. 'res' → logprob: -1.5083529949188232
    4. '#' → logprob: -2.5083529949188232
    5. 'answer' → logprob: -2.5083529949188232
    6. 'total' → logprob: -3.3833529949188232
    7. 'def' → logprob: -4.633353233337402
    8. 'result' → logprob: -5.258353233337402
    9. 'inv' → logprob: -5.383353233337402
    10. 'ret' → logprob: -6.008353233337402

Token 1152: ' Parc' (ID: 68618)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1279828548431396
    2. 'ans' → logprob: -1.1279828548431396
    3. 'dp' → logprob: -1.5029828548431396
    4. 'answer' → logprob: -2.3779828548431396
    5. 'def' → logprob: -4.627983093261719
    6. 'total' → logprob: -5.127983093261719
    7. 'result' → logprob: -5.127983093261719
    8. '#' → logprob: -6.377983093261719
    9. 'Q' → logprob: -6.502983093261719
    10. 'ways' → logprob: -6.502983093261719

Token 1153: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.8060480952262878
    2. 'ours' → logprob: -0.8060480952262878
    3. 'ourt' → logprob: -3.4310481548309326
    4. '#' → logprob: -3.6810481548309326
    5. 't' → logprob: -4.6810479164123535
    6. 'ou' → logprob: -5.4310479164123535
    7. 'court' → logprob: -5.4310479164123535
    8. 'cour' → logprob: -5.5560479164123535
    9. 'cours' → logprob: -5.5560479164123535
    10. 'o' → logprob: -5.6810479164123535

Token 1154: ' BFS' (ID: 190016)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5589741468429565
    2. ' =' → logprob: -1.8089741468429565
    3. 'def' → logprob: -1.9339741468429565
    4. 'from' → logprob: -3.308974266052246
    5. 'stack' → logprob: -3.558974266052246
    6. '=' → logprob: -3.933974266052246
    7. 'for' → logprob: -4.183974266052246
    8. 'q' → logprob: -5.433974266052246
    9. 'queue' → logprob: -5.433974266052246
    10. 'que' → logprob: -5.558974266052246

Token 1155: ' ou' (ID: 2031)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20980273187160492
    2. 'queue' → logprob: -2.4598026275634766
    3. 'q' → logprob: -3.0848026275634766
    4. '
' → logprob: -3.0848026275634766
    5. 'que' → logprob: -5.959802627563477
    6. '(' → logprob: -6.084802627563477
    7. ':' → logprob: -6.209802627563477
    8. '(queue' → logprob: -6.334802627563477
    9. 'deque' → logprob: -6.459802627563477
    10. ':
' → logprob: -7.334802627563477

Token 1156: ' DFS' (ID: 115767)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.04339158162474632
    2. 'from' → logprob: -3.293391466140747
    3. ' deque' → logprob: -5.668391704559326
    4. 'queue' → logprob: -6.418391704559326
    5. 'dfs' → logprob: -9.793391227722168
    6. 'que' → logprob: -9.793391227722168
    7. 'de' → logprob: -10.168391227722168
    8. 'dq' → logprob: -10.793391227722168
    9. '
' → logprob: -11.168391227722168
    10. ' from' → logprob: -11.293391227722168

Token 1157: ' it' (ID: 480)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3302486538887024
    2. 'q' → logprob: -1.8302485942840576
    3. 'from' → logprob: -2.5802485942840576
    4. 'queue' → logprob: -3.4552485942840576
    5. 'deque' → logprob: -4.705248832702637
    6. 'def' → logprob: -7.080248832702637
    7. 'visited' → logprob: -7.080248832702637
    8. 'Q' → logprob: -7.455248832702637
    9. 'que' → logprob: -7.455248832702637
    10. 'dq' → logprob: -7.705248832702637

Token 1158: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1836092621088028
    2. 'for' → logprob: -2.9336092472076416
    3. 'em' → logprob: -2.9336092472076416
    4. '   ' → logprob: -4.808609485626221
    5. 'dfs' → logprob: -5.058609485626221
    6. 'r' → logprob: -5.308609485626221
    7. 'stack' → logprob: -5.433609485626221
    8. 'def' → logprob: -5.558609485626221
    9. 'mp' → logprob: -5.683609485626221
    10. 'm' → logprob: -5.808609485626221

Token 1159: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.03420538827776909
    2. 'ative' → logprob: -3.409205436706543
    3. 'def' → logprob: -8.409205436706543
    4. '#' → logprob: -8.784205436706543
    5. 'stack' → logprob: -10.034205436706543
    6. '   ' → logprob: -10.159205436706543
    7. 'dfs' → logprob: -11.034205436706543
    8. '
' → logprob: -11.034205436706543
    9. ' =' → logprob: -11.534205436706543
    10. 'ativement' → logprob: -12.034205436706543

Token 1160: ' pour' (ID: 1930)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.025823058560490608
    2. 'q' → logprob: -3.9008231163024902
    3. 'queue' → logprob: -5.65082311630249
    4. 'deque' → logprob: -7.27582311630249
    5. 'from' → logprob: -8.025822639465332
    6. 'dq' → logprob: -8.650822639465332
    7. 'que' → logprob: -9.150822639465332
    8. 'Q' → logprob: -9.150822639465332
    9. 'd' → logprob: -9.400822639465332
    10. 'stk' → logprob: -9.775822639465332

Token 1161: ' calcul' (ID: 7559)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07692592591047287
    2. 'deque' → logprob: -3.4519259929656982
    3. 'u' → logprob: -3.7019259929656982
    4. 'queue' → logprob: -4.701925754547119
    5. 'q' → logprob: -5.576925754547119
    6. 'que' → logprob: -6.076925754547119
    7. ' stack' → logprob: -6.826925754547119
    8. '[]' → logprob: -7.951925754547119
    9. 'stk' → logprob: -8.951926231384277
    10. 'dist' → logprob: -8.951926231384277

Token 1162: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.057037968188524246
    2. 'ate' → logprob: -3.3070380687713623
    3. 'r' → logprob: -4.682037830352783
    4. 'uer' → logprob: -6.057037830352783
    5. 'u' → logprob: -6.432037830352783
    6. '#' → logprob: -6.932037830352783
    7. 'e' → logprob: -7.182037830352783
    8. 'par' → logprob: -7.432037830352783
    9. 'rer' → logprob: -7.432037830352783
    10. 'te' → logprob: -7.432037830352783

Token 1163: ' la' (ID: 557)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.08137086033821106
    2. 'q' → logprob: -3.4563708305358887
    3. 'dist' → logprob: -3.9563708305358887
    4. 'depth' → logprob: -4.456370830535889
    5. 'dp' → logprob: -5.456370830535889
    6. 'que' → logprob: -5.956370830535889
    7. 'stk' → logprob: -5.956370830535889
    8. ' stack' → logprob: -6.456370830535889
    9. 'queue' → logprob: -6.831370830535889
    10. 'res' → logprob: -7.081370830535889

Token 1164: ' réponse' (ID: 50332)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5386573076248169
    2. 'stack' → logprob: -2.2886571884155273
    3. 'dp' → logprob: -2.4136571884155273
    4. 'sub' → logprob: -2.5386571884155273
    5. 'res' → logprob: -3.0386571884155273
    6. 'sz' → logprob: -3.4136571884155273
    7. 'dist' → logprob: -3.6636571884155273
    8. 'size' → logprob: -4.163657188415527
    9. 'queue' → logprob: -4.913657188415527
    10. 'dep' → logprob: -5.538657188415527

Token 1165: ' finale' (ID: 37759)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.02022382989525795
    2. 'from' → logprob: -4.895223617553711
    3. 'q' → logprob: -5.020223617553711
    4. 'stk' → logprob: -5.895223617553711
    5. 'queue' → logprob: -7.020223617553711
    6. 'ans' → logprob: -7.520223617553711
    7. 'st' → logprob: -7.895223617553711
    8. 'que' → logprob: -8.145223617553711
    9. 'deque' → logprob: -8.145223617553711
    10. 'Q' → logprob: -8.270223617553711

Token 1166: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.04225039482116699
    2. 'from' → logprob: -3.917250394821167
    3. 'queue' → logprob: -4.667250633239746
    4. 'q' → logprob: -5.042250633239746
    5. 'deque' → logprob: -5.542250633239746
    6. 'que' → logprob: -7.667250633239746
    7. 'Q' → logprob: -7.792250633239746
    8. 'ans' → logprob: -8.417250633239746
    9. 'stk' → logprob: -8.667250633239746
    10. 'answer' → logprob: -9.417250633239746

Token 1167: 'q' (ID: 80)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.025908907875418663
    2. 'from' → logprob: -4.650908946990967
    3. 'ans' → logprob: -5.275908946990967
    4. 'q' → logprob: -5.275908946990967
    5. 'stk' → logprob: -5.650908946990967
    6. 'res' → logprob: -7.275908946990967
    7. 'answer' → logprob: -7.400908946990967
    8. 'que' → logprob: -8.025908470153809
    9. 'queue' → logprob: -8.025908470153809
    10. 'Q' → logprob: -9.400908470153809

Token 1168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688093423843384
    2. ' =' → logprob: -1.136880874633789
    3. '=[]' → logprob: -12.011880874633789
    4. '=[' → logprob: -13.511880874633789
    5. '=[]
' → logprob: -14.386880874633789
    6. '[' → logprob: -14.886880874633789
    7. '.append' → logprob: -15.386880874633789
    8. 'u' → logprob: -15.386880874633789
    9. ' ' → logprob: -15.511880874633789
    10. '=q' → logprob: -15.761880874633789

Token 1169: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.000713266315869987
    2. '[' → logprob: -7.250713348388672
    3. ' deque' → logprob: -12.750713348388672
    4. '[(' → logprob: -14.875713348388672
    5. 'de' → logprob: -16.875713348388672
    6. '[]' → logprob: -17.750713348388672
    7. ' [' → logprob: -19.625713348388672
    8. 'Deque' → logprob: -20.625713348388672
    9. 'collections' → logprob: -21.250713348388672
    10. '[i' → logprob: -21.250713348388672

Token 1170: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00015502817404922098
    2. '()' → logprob: -9.500155448913574
    3. '()
' → logprob: -10.125155448913574
    4. '[' → logprob: -10.250155448913574
    5. '([(' → logprob: -12.500155448913574
    6. '(' → logprob: -14.375155448913574
    7. '([
' → logprob: -15.125155448913574
    8. '[(' → logprob: -17.250154495239258
    9. '((' → logprob: -17.875154495239258
    10. '(range' → logprob: -18.125154495239258

Token 1171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.625000953674316
    3. ' ' → logprob: -18.000001907348633
    4. '[' → logprob: -19.250001907348633
    5. '((' → logprob: -19.875001907348633
    6. '۰' → logprob: -20.375001907348633
    7. ' (' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '{' → logprob: -21.187501907348633
    10. '#' → logprob: -21.312501907348633

Token 1172: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -6.682846287731081e-05
    2. '])
' → logprob: -9.625066757202148
    3. ')' → logprob: -15.000066757202148
    4. '])
' → logprob: -15.375066757202148
    5. '])

' → logprob: -16.12506675720215
    6. ' ])' → logprob: -16.87506675720215
    7. ')])' → logprob: -17.25006675720215
    8. ']' → logprob: -17.87506675720215
    9. ''])' → logprob: -18.50006675720215
    10. ']);' → logprob: -18.62506675720215

Token 1173: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0585803985595703
    2. 'res' → logprob: -1.1835803985595703
    3. 'ans' → logprob: -1.9335803985595703
    4. 'answer' → logprob: -2.1835803985595703
    5. '
' → logprob: -2.4335803985595703
    6. 'result' → logprob: -7.55858039855957
    7. 'dist' → logprob: -8.18358039855957
    8. 'total' → logprob: -8.30858039855957
    9. 'visited' → logprob: -8.80858039855957
    10. 'depth' → logprob: -8.93358039855957

Token 1174: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8854872584342957
    2. 'ans' → logprob: -0.8854872584342957
    3. 'answer' → logprob: -2.3854873180389404
    4. '
' → logprob: -2.5104873180389404
    5. 'while' → logprob: -7.385487079620361
    6. 'result' → logprob: -7.760487079620361
    7. 'visited' → logprob: -8.38548755645752
    8. 'total' → logprob: -9.01048755645752
    9. 'ret' → logprob: -9.13548755645752
    10. 'sum' → logprob: -10.13548755645752

Token 1175: ' Comm' (ID: 57464)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.382441908121109
    2. 'res' → logprob: -1.2574418783187866
    3. 'answer' → logprob: -3.507441997528076
    4. 'visited' → logprob: -5.882441997528076
    5. 'depth' → logprob: -8.507441520690918
    6. 'dist' → logprob: -8.882441520690918
    7. 'ret' → logprob: -9.757441520690918
    8. 'while' → logprob: -9.882441520690918
    9. 'used' → logprob: -10.007441520690918
    10. 'result' → logprob: -10.257441520690918

Token 1176: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.05650973692536354
    2. 'ence' → logprob: -3.6815097332000732
    3. 'e' → logprob: -4.806509971618652
    4. 'que' → logprob: -5.681509971618652
    5. 'deque' → logprob: -5.681509971618652
    6. 'ute' → logprob: -5.931509971618652
    7. 'q' → logprob: -6.181509971618652
    8. 'queue' → logprob: -6.306509971618652
    9. 'ente' → logprob: -6.681509971618652
    10. 'ented' → logprob: -7.056509971618652

Token 1177: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6161051988601685
    2. ' =' → logprob: -1.4911051988601685
    3. '=[]' → logprob: -2.116105079650879
    4. ')' → logprob: -3.616105079650879
    5. 'q' → logprob: -4.241105079650879
    6. 'u' → logprob: -4.491105079650879
    7. 'from' → logprob: -4.616105079650879
    8. 'with' → logprob: -4.741105079650879
    9. '[]' → logprob: -4.866105079650879
    10. 'par' → logprob: -5.116105079650879

Token 1178: ' la' (ID: 557)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07577233761548996
    2. 'q' → logprob: -3.200772285461426
    3. '0' → logprob: -3.450772285461426
    4. 'append' → logprob: -8.450772285461426
    5. ' deque' → logprob: -8.825772285461426
    6. 'p' → logprob: -10.575772285461426
    7. 'u' → logprob: -10.575772285461426
    8. 'de' → logprob: -10.950772285461426
    9. 'que' → logprob: -11.200772285461426
    10. 'queue' → logprob: -11.575772285461426

Token 1179: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03794153034687042
    2. 'deque' → logprob: -3.7879414558410645
    3. 'q' → logprob: -4.7879414558410645
    4. 'root' → logprob: -5.2879414558410645
    5. 'queue' → logprob: -7.7879414558410645
    6. 'u' → logprob: -8.287941932678223
    7. '=' → logprob: -9.537941932678223
    8. '[' → logprob: -10.162941932678223
    9. '```' → logprob: -10.162941932678223
    10. 'collections' → logprob: -10.412941932678223

Token 1180: 'ine' (ID: 514)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1682020425796509
    2. 'é' → logprob: -1.2932020425796509
    3. 'q' → logprob: -2.9182019233703613
    4. 'u' → logprob: -2.9182019233703613
    5. 'c' → logprob: -3.1682019233703613
    6. 'ine' → logprob: -3.2932019233703613
    7. 'îne' → logprob: -3.7932019233703613
    8. '#' → logprob: -4.168201923370361
    9. 'ute' → logprob: -4.293201923370361
    10. 'n' → logprob: -4.293201923370361

Token 1181: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6026277542114258
    2. 'answer' → logprob: -1.6026277542114258
    3. 'res' → logprob: -2.227627754211426
    4. 'ans' → logprob: -2.602627754211426
    5. '
' → logprob: -2.727627754211426
    6. 'dist' → logprob: -6.477627754211426
    7. 'result' → logprob: -6.852627754211426
    8. 'visited' → logprob: -8.227627754211426
    9. 'd' → logprob: -8.477627754211426
    10. 'sum' → logprob: -8.852627754211426

Token 1182: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4815242290496826
    2. 'res' → logprob: -1.3565242290496826
    3. 'answer' → logprob: -2.1065242290496826
    4. 'while' → logprob: -6.106524467468262
    5. 'result' → logprob: -8.606524467468262
    6. 'dp' → logprob: -9.106524467468262
    7. 'total' → logprob: -9.231524467468262
    8. 'ret' → logprob: -9.481524467468262
    9. 'visited' → logprob: -9.981524467468262
    10. 'dist' → logprob: -10.106524467468262

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759456157684326
    2. ' =' → logprob: -0.8259456157684326
    3. ' ' → logprob: -13.325945854187012
    4. ',' → logprob: -13.325945854187012
    5. '_' → logprob: -13.700945854187012
    6. '[' → logprob: -14.700945854187012
    7. ')' → logprob: -15.075945854187012
    8. 's' → logprob: -15.200945854187012
    9. ' =
' → logprob: -15.450945854187012
    10. '=
' → logprob: -16.325944900512695

Token 1184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0073599256575107574
    2. '1' → logprob: -5.757359981536865
    3. 'pow' → logprob: -5.882359981536865
    4. '(' → logprob: -7.007359981536865
    5. ' ' → logprob: -8.507359504699707
    6. 'n' → logprob: -9.382359504699707
    7. '(pow' → logprob: -9.507359504699707
    8. '(n' → logprob: -9.757359504699707
    9. ' (' → logprob: -10.507359504699707
    10. ' pow' → logprob: -11.132359504699707

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007306668907403946
    2. '1' → logprob: -5.5073065757751465
    3. 'pow' → logprob: -5.8823065757751465
    4. '(' → logprob: -8.257307052612305
    5. 'n' → logprob: -9.632307052612305
    6. '(n' → logprob: -10.007307052612305
    7. '(pow' → logprob: -10.132307052612305
    8. '((' → logprob: -12.132307052612305
    9. ' ' → logprob: -12.382307052612305
    10. 'int' → logprob: -13.382307052612305

Token 1186: '        ' (ID: 269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0407106876373291
    2. ' 
' → logprob: -3.540710687637329
    3. ' while' → logprob: -6.04071044921875
    4. '' → logprob: -6.04071044921875
    5. ' ' → logprob: -6.41571044921875
    6. '
' → logprob: -6.66571044921875
    7. ':' → logprob: -7.41571044921875
    8. '<|end|>' → logprob: -7.41571044921875
    9. 'while' → logprob: -7.66571044921875
    10. '  
' → logprob: -7.91571044921875

Token 1187: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0067872474901378155
    2. ' 
' → logprob: -5.631787300109863
    3. '
' → logprob: -6.506787300109863
    4. 'while' → logprob: -7.381787300109863
    5. ' while' → logprob: -8.006787300109863
    6. '' → logprob: -8.631787300109863
    7. '  
' → logprob: -9.006787300109863
    8. '+' → logprob: -9.506787300109863
    9. ' ' → logprob: -9.506787300109863
    10. ',' → logprob: -9.756787300109863

Token 1188: ' Acc' (ID: 6278)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.052473656833171844
    2. ' while' → logprob: -3.052473545074463
    3. 'for' → logprob: -5.927473545074463
    4. 'q' → logprob: -8.052474021911621
    5. '
' → logprob: -8.302474021911621
    6. ' ' → logprob: -8.552474021911621
    7. ' 
' → logprob: -9.427474021911621
    8. ')' → logprob: -9.802474021911621
    9. ' for' → logprob: -9.927474021911621
    10. '0' → logprob: -10.427474021911621

Token 1189: 'umulate' (ID: 134636)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17646604776382446
    2. ' =' → logprob: -2.3014659881591797
    3. ' +=' → logprob: -3.4264659881591797
    4. ' ans' → logprob: -4.42646598815918
    5. '+' → logprob: -5.30146598815918
    6. ' q' → logprob: -5.42646598815918
    7. '+=' → logprob: -6.42646598815918
    8. '_' → logprob: -6.55146598815918
    9. ')' → logprob: -6.92646598815918
    10. 'umulate' → logprob: -7.05146598815918

Token 1190: 'ur' (ID: 330)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0726022943854332
    2. 'ion' → logprob: -3.9476022720336914
    3. 'or' → logprob: -3.9476022720336914
    4. ' =' → logprob: -4.072602272033691
    5. '+=' → logprob: -5.072602272033691
    6. ' +=' → logprob: -5.447602272033691
    7. 'r' → logprob: -7.072602272033691
    8. '+' → logprob: -7.197602272033691
    9. ')' → logprob: -7.822602272033691
    10. 'q' → logprob: -8.072602272033691

Token 1191: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08888275921344757
    2. '<|end|>' → logprob: -3.3388826847076416
    3. ' 
' → logprob: -3.8388826847076416
    4. ' while' → logprob: -4.838882923126221
    5. 'while' → logprob: -4.838882923126221
    6. ' ' → logprob: -6.463882923126221
    7. '' → logprob: -6.588882923126221
    8. ')' → logprob: -6.838882923126221
    9. ':' → logprob: -6.838882923126221
    10. '  
' → logprob: -6.963882923126221

Token 1192: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5771007537841797
    2. '1' → logprob: -1.0771007537841797
    3. 'q' → logprob: -3.2021007537841797
    4. '0' → logprob: -3.7021007537841797
    5. 'pow' → logprob: -4.70210075378418
    6. '(ans' → logprob: -5.07710075378418
    7. ' ans' → logprob: -5.57710075378418
    8. ' q' → logprob: -5.82710075378418
    9. 'int' → logprob: -6.20210075378418
    10. ' ' → logprob: -6.57710075378418

Token 1193: ' réponse' (ID: 50332)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09524231404066086
    2. 'pow' → logprob: -3.9702422618865967
    3. '0' → logprob: -4.220242500305176
    4. 'ans' → logprob: -4.345242500305176
    5. '
' → logprob: -4.470242500305176
    6. ')' → logprob: -5.345242500305176
    7. 'q' → logprob: -5.470242500305176
    8. ' ' → logprob: -5.470242500305176
    9. 'cnt' → logprob: -6.220242500305176
    10. 'answer' → logprob: -6.345242500305176

Token 1194: ' finale' (ID: 37759)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1269049048423767
    2. '
' → logprob: -2.5019049644470215
    3. ' while' → logprob: -3.3769049644470215
    4. 'u' → logprob: -6.8769049644470215
    5. '   ' → logprob: -7.5019049644470215
    6. ',' → logprob: -7.7519049644470215
    7. ')' → logprob: -8.251904487609863
    8. '	while' → logprob: -8.876904487609863
    9. ' 
' → logprob: -9.251904487609863
    10. 'for' → logprob: -9.376904487609863

Token 1195: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07850556075572968
    2. ' while' → logprob: -2.828505516052246
    3. 'u' → logprob: -5.078505516052246
    4. '
' → logprob: -5.953505516052246
    5. ')' → logprob: -6.078505516052246
    6. ',' → logprob: -6.828505516052246
    7. 'd' → logprob: -6.953505516052246
    8. ':' → logprob: -7.203505516052246
    9. '	while' → logprob: -7.578505516052246
    10. 'v' → logprob: -8.453505516052246

Token 1196: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -7.266944157890975e-05
    2. ' while' → logprob: -9.875072479248047
    3. 'u' → logprob: -11.125072479248047
    4. '
' → logprob: -12.750072479248047
    5. 'for' → logprob: -14.000072479248047
    6. 'visited' → logprob: -14.000072479248047
    7. '```' → logprob: -14.375072479248047
    8. '   ' → logprob: -14.750072479248047
    9. 'While' → logprob: -15.500072479248047
    10. '	while' → logprob: -16.125072479248047

Token 1197: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.7729658540920354e-05
    2. ' q' → logprob: -10.750027656555176
    3. 'len' → logprob: -12.000027656555176
    4. '	q' → logprob: -18.875028610229492
    5. ' len' → logprob: -19.500028610229492
    6. '   ' → logprob: -19.625028610229492
    7. '(q' → logprob: -19.750028610229492
    8. ' ' → logprob: -21.000028610229492
    9. '
' → logprob: -21.625028610229492
    10. '(len' → logprob: -21.875028610229492

Token 1198: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.026327816769480705
    2. '.pop' → logprob: -4.651327610015869
    3. ':' → logprob: -4.776327610015869
    4. ':
' → logprob: -5.276327610015869
    5. '.append' → logprob: -6.401327610015869
    6. '.' → logprob: -7.276327610015869
    7. '   ' → logprob: -8.776328086853027
    8. ')' → logprob: -9.276328086853027
    9. '=' → logprob: -9.651328086853027
    10. 'p' → logprob: -10.026328086853027

Token 1199: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00026872646412812173
    2. ' u' → logprob: -8.250268936157227
    3. '   ' → logprob: -12.500268936157227
    4. '	u' → logprob: -12.500268936157227
    5. ',u' → logprob: -18.500268936157227
    6. '(u' → logprob: -18.500268936157227
    7. '```' → logprob: -18.750268936157227
    8. '_u' → logprob: -18.875268936157227
    9. '[u' → logprob: -19.250268936157227
    10. '=u' → logprob: -20.125268936157227

Token 1200: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -6.2729995988775045e-06
    2. ' u' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.3750057220459
    4. '	u' → logprob: -17.5000057220459
    5. '    
' → logprob: -20.8750057220459
    6. '(u' → logprob: -22.2500057220459
    7. '```' → logprob: -22.3750057220459
    8. 'x' → logprob: -23.0000057220459
    9. '[u' → logprob: -23.7500057220459
    10. 'v' → logprob: -23.8750057220459

Token 1201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01822427660226822
    2. ' =' → logprob: -4.018224239349365
    3. ',' → logprob: -10.018224716186523
    4. '=q' → logprob: -11.518224716186523
    5. '   ' → logprob: -11.643224716186523
    6. ')' → logprob: -12.643224716186523
    7. '=
' → logprob: -12.643224716186523
    8. ' =
' → logprob: -14.268224716186523
    9. ':' → logprob: -14.268224716186523
    10. ' ' → logprob: -14.393224716186523

Token 1202: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. ' q' → logprob: -13.250001907348633
    3. '	q' → logprob: -21.500001907348633
    4. '.q' → logprob: -22.625001907348633
    5. 'p' → logprob: -23.250001907348633
    6. 'que' → logprob: -23.500001907348633
    7. 'he' → logprob: -23.750001907348633
    8. '=q' → logprob: -23.750001907348633
    9. 'pop' → logprob: -24.500001907348633
    10. '*q' → logprob: -24.625001907348633

Token 1203: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.65707261255011e-06
    2. 'p' → logprob: -11.875008583068848
    3. '.pop' → logprob: -13.625008583068848
    4. '   ' → logprob: -16.250009536743164
    5. ' .' → logprob: -16.500009536743164
    6. ')p' → logprob: -16.500009536743164
    7. 'pop' → logprob: -17.625009536743164
    8. '.' → logprob: -17.750009536743164
    9. ' p' → logprob: -18.375009536743164
    10. ').' → logprob: -18.375009536743164

Token 1204: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32489094138145447
    2. '   ' → logprob: -1.3248909711837769
    3. ')
' → logprob: -5.824891090393066
    4. ')' → logprob: -5.824891090393066
    5. '    
' → logprob: -5.949891090393066
    6. ' 
' → logprob: -7.074891090393066
    7. '  
' → logprob: -7.324891090393066
    8. ';' → logprob: -7.949891090393066
    9. '   
' → logprob: -8.199891090393066
    10. ':' → logprob: -8.324891090393066

Token 1205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034937214106321335
    2. 'for' → logprob: -3.5349371433258057
    3. ' for' → logprob: -5.284937381744385
    4. '    
' → logprob: -9.659936904907227
    5. '
' → logprob: -10.909936904907227
    6. '	for' → logprob: -11.909936904907227
    7. '```' → logprob: -12.034936904907227
    8. 'cnt' → logprob: -12.784936904907227
    9. ',' → logprob: -13.659936904907227
    10. '  ' → logprob: -13.909936904907227

Token 1206: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006341627449728549
    2. ' for' → logprob: -8.50063419342041
    3. 'child' → logprob: -9.37563419342041
    4. 'ans' → logprob: -9.37563419342041
    5. '   ' → logprob: -9.75063419342041
    6. 'size' → logprob: -9.87563419342041
    7. 'total' → logprob: -10.37563419342041
    8. 'cnt' → logprob: -10.62563419342041
    9. 'sz' → logprob: -10.62563419342041
    10. 's' → logprob: -10.75063419342041

Token 1207: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027279560454189777
    2. 'sz' → logprob: -7.50272798538208
    3. 'child' → logprob: -7.62772798538208
    4. 'sub' → logprob: -7.87772798538208
    5. 'size' → logprob: -8.002727508544922
    6. 'total' → logprob: -8.127727508544922
    7. 's' → logprob: -8.502727508544922
    8. 'ans' → logprob: -8.877727508544922
    9. 'sum' → logprob: -9.627727508544922
    10. 'res' → logprob: -9.877727508544922

Token 1208: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.21996799111366272
    2. 'ized' → logprob: -1.7199679613113403
    3. 'iz' → logprob: -4.844967842102051
    4. 'i' → logprob: -5.969967842102051
    5. 'izes' → logprob: -6.719967842102051
    6. '   ' → logprob: -6.719967842102051
    7. 'ly' → logprob: -6.969967842102051
    8. 'e' → logprob: -7.094967842102051
    9. '=' → logprob: -7.469967842102051
    10. 'ialize' → logprob: -7.594967842102051

Token 1209: ' ret' (ID: 2881)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8576923608779907
    2. '   ' → logprob: -1.7326923608779907
    3. 'for' → logprob: -2.232692241668701
    4. 'res' → logprob: -2.982692241668701
    5. 'child' → logprob: -2.982692241668701
    6. 'deg' → logprob: -3.232692241668701
    7. 'dp' → logprob: -3.857692241668701
    8. ' for' → logprob: -4.107692241668701
    9. 'cnt' → logprob: -4.107692241668701
    10. 'sub' → logprob: -4.482692241668701

Token 1210: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16039270162582397
    2. '=' → logprob: -1.9103927612304688
    3. '   ' → logprob: -8.910392761230469
    4. ',' → logprob: -11.410392761230469
    5. 'u' → logprob: -11.660392761230469
    6. '    ' → logprob: -13.035392761230469
    7. 'ret' → logprob: -13.660392761230469
    8. '_' → logprob: -13.660392761230469
    9. ' =
' → logprob: -13.660392761230469
    10. ' u' → logprob: -13.785392761230469

Token 1211: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3731726408004761
    2. 'pow' → logprob: -1.498172640800476
    3. '0' → logprob: -3.2481727600097656
    4. 'cnt' → logprob: -3.8731727600097656
    5. '(' → logprob: -4.873172760009766
    6. '(pow' → logprob: -4.998172760009766
    7. '(cnt' → logprob: -5.123172760009766
    8. '(n' → logprob: -5.498172760009766
    9. 'n' → logprob: -6.373172760009766
    10. 'ans' → logprob: -8.123172760009766

Token 1212: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29223012924194336
    2. ' =' → logprob: -1.7922301292419434
    3. 'u' → logprob: -3.5422301292419434
    4. ' de' → logprob: -4.292230129241943
    5. '[u' → logprob: -4.417230129241943
    6. '[' → logprob: -4.792230129241943
    7. ' u' → logprob: -5.042230129241943
    8. ' of' → logprob: -5.667230129241943
    9. 'of' → logprob: -5.792230129241943
    10. 'de' → logprob: -6.292230129241943

Token 1213: ' sous' (ID: 14487)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.47888699173927307
    2. 'sub' → logprob: -1.8538869619369507
    3. 'children' → logprob: -2.4788870811462402
    4. '1' → logprob: -3.1038870811462402
    5. 'neighbors' → logprob: -3.7288870811462402
    6. '(' → logprob: -4.35388708114624
    7. 'u' → logprob: -4.35388708114624
    8. 'ways' → logprob: -4.85388708114624
    9. 'nodes' → logprob: -5.10388708114624
    10. '2' → logprob: -5.47888708114624

Token 1214: '-' (ID: 12)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.4224507808685303
    2. 'arb' → logprob: -1.4224507808685303
    3. '_ar' → logprob: -1.4224507808685303
    4. ' arbres' → logprob: -3.0474507808685303
    5. '(u' → logprob: -3.4224507808685303
    6. 's' → logprob: -3.5474507808685303
    7. 'tree' → logprob: -3.5474507808685303
    8. '_no' → logprob: -3.7974507808685303
    9. '_s' → logprob: -3.9224507808685303
    10. '_' → logprob: -4.047451019287109

Token 1215: 'ense' (ID: 1603)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5503753423690796
    2. 'arb' → logprob: -1.3003753423690796
    3. ' arbres' → logprob: -2.300375461578369
    4. 's' → logprob: -3.550375461578369
    5. 'u' → logprob: -4.800375461578369
    6. 'tree' → logprob: -5.675375461578369
    7. '_s' → logprob: -6.300375461578369
    8. '_ar' → logprob: -6.675375461578369
    9. '```' → logprob: -6.800375461578369
    10. '-ar' → logprob: -6.925375461578369

Token 1216: 'mbles' (ID: 60383)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014178205281496048
    2. 'ts' → logprob: -4.389178276062012
    3. 'mbles' → logprob: -7.389178276062012
    4. 'mb' → logprob: -8.639178276062012
    5. 'tu' → logprob: -9.014178276062012
    6. '_t' → logprob: -9.264178276062012
    7. 'quences' → logprob: -9.639178276062012
    8. 'u' → logprob: -9.889178276062012
    9. 'r' → logprob: -10.139178276062012
    10. '_' → logprob: -10.139178276062012

Token 1217: ' non' (ID: 2893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.430144339799881
    2. '=' → logprob: -1.1801443099975586
    3. 'u' → logprob: -4.180144309997559
    4. '[u' → logprob: -4.180144309997559
    5. '_' → logprob: -5.930144309997559
    6. '[' → logprob: -6.055144309997559
    7. ' de' → logprob: -6.430144309997559
    8. '   ' → logprob: -6.805144309997559
    9. ' u' → logprob: -7.055144309997559
    10. '=u' → logprob: -7.555144309997559

Token 1218: '-' (ID: 12)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.32705506682395935
    2. 'v' → logprob: -1.8270550966262817
    3. 'vid' → logprob: -2.202054977416992
    4. '```' → logprob: -5.952054977416992
    5. 'empty' → logprob: -6.827054977416992
    6. '   ' → logprob: -7.327054977416992
    7. 'null' → logprob: -7.577054977416992
    8. 'vu' → logprob: -7.827054977416992
    9. '0' → logprob: -7.952054977416992
    10. 'n' → logprob: -8.202054977416992

Token 1219: 'vid' (ID: 1429)
  Prédit: 'vid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.5843736529350281
    2. 'vide' → logprob: -0.8343736529350281
    3. 'v' → logprob: -4.959373474121094
    4. '```' → logprob: -7.709373474121094
    5. '0' → logprob: -8.084373474121094
    6. 'null' → logprob: -8.584373474121094
    7. 'empty' → logprob: -8.834373474121094
    8. 'n' → logprob: -9.209373474121094
    9. 'void' → logprob: -9.959373474121094
    10. '1' → logprob: -10.709373474121094

Token 1220: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.14679762721061707
    2. 'us' → logprob: -2.8967976570129395
    3. 'és' → logprob: -3.0217976570129395
    4. 'u' → logprob: -4.0217976570129395
    5. 's' → logprob: -4.7717976570129395
    6. 'des' → logprob: -6.0217976570129395
    7. 'e' → logprob: -6.8967976570129395
    8. '```' → logprob: -7.1467976570129395
    9. 'tes' → logprob: -7.5217976570129395
    10. 'é' → logprob: -8.021797180175781

Token 1221: ' sur' (ID: 1512)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07900656014680862
    2. ' =' → logprob: -2.5790066719055176
    3. '   ' → logprob: -9.57900619506836
    4. ',' → logprob: -11.57900619506836
    5. 'ret' → logprob: -11.70400619506836
    6. '1' → logprob: -12.32900619506836
    7. '=
' → logprob: -12.32900619506836
    8. '
' → logprob: -12.45400619506836
    9. '+' → logprob: -12.95400619506836
    10. ' ' → logprob: -13.20400619506836

Token 1222: ' les' (ID: 1341)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.19295835494995117
    2. 'u' → logprob: -2.317958354949951
    3. 'pow' → logprob: -3.942958354949951
    4. 'la' → logprob: -4.692958354949951
    5. '(cnt' → logprob: -4.942958354949951
    6. 'len' → logprob: -5.317958354949951
    7. 'G' → logprob: -5.317958354949951
    8. '1' → logprob: -5.317958354949951
    9. '[u' → logprob: -5.317958354949951
    10. '[cnt' → logprob: -5.817958354949951

Token 1223: ' n' (ID: 297)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.3253763914108276
    2. 'cnt' → logprob: -1.9503763914108276
    3. 'u' → logprob: -2.325376510620117
    4. '1' → logprob: -2.450376510620117
    5. 's' → logprob: -2.575376510620117
    6. '0' → logprob: -2.700376510620117
    7. '#' → logprob: -3.075376510620117
    8. '   ' → logprob: -3.200376510620117
    9. 'pow' → logprob: -3.325376510620117
    10. '(u' → logprob: -3.700376510620117

Token 1224: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6269901394844055
    2. '-' → logprob: -1.8769900798797607
    3. 'u' → logprob: -2.0019900798797607
    4. ')' → logprob: -3.1269900798797607
    5. ' u' → logprob: -3.1269900798797607
    6. '[u' → logprob: -3.1269900798797607
    7. '   ' → logprob: -3.6269900798797607
    8. ' )' → logprob: -4.87699031829834
    9. ' ' → logprob: -5.87699031829834
    10. ']' → logprob: -6.37699031829834

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0749456137418747
    2. 'u' → logprob: -2.9499456882476807
    3. ')' → logprob: -5.324945449829102
    4. ' u' → logprob: -5.449945449829102
    5. 's' → logprob: -6.324945449829102
    6. ' ' → logprob: -6.324945449829102
    7. 'space' → logprob: -6.699945449829102
    8. 'es' → logprob: -6.824945449829102
    9. '-' → logprob: -6.949945449829102
    10. ' )' → logprob: -7.074945449829102

Token 1226: ' autres' (ID: 18701)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4682859778404236
    2. '-' → logprob: -1.0932860374450684
    3. ' nodes' → logprob: -4.843286037445068
    4. ' ' → logprob: -5.218286037445068
    5. 'nodes' → logprob: -5.468286037445068
    6. '_' → logprob: -5.593286037445068
    7. ' =' → logprob: -5.843286037445068
    8. ')' → logprob: -5.968286037445068
    9. 'u' → logprob: -6.093286037445068
    10. '   ' → logprob: -6.843286037445068

Token 1227: ' somm' (ID: 44830)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2257297933101654
    2. 'u' → logprob: -2.7257297039031982
    3. ')' → logprob: -3.8507297039031982
    4. ' =' → logprob: -3.8507297039031982
    5. ' nodes' → logprob: -3.9757297039031982
    6. 'nodes' → logprob: -4.225729942321777
    7. '_nodes' → logprob: -4.725729942321777
    8. '-' → logprob: -5.100729942321777
    9. ' subsets' → logprob: -5.100729942321777
    10. '=' → logprob: -5.100729942321777

Token 1228: 'ets' (ID: 1719)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9712634682655334
    2. '[u' → logprob: -1.9712634086608887
    3. 'et' → logprob: -2.0962634086608887
    4. '(u' → logprob: -2.3462634086608887
    5. 'es' → logprob: -2.5962634086608887
    6. 'ets' → logprob: -2.9712634086608887
    7. 'rees' → logprob: -4.096263408660889
    8. 'ect' → logprob: -4.221263408660889
    9. '1' → logprob: -4.471263408660889
    10. '   ' → logprob: -4.471263408660889

Token 1229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13464294373989105
    2. 'ret' → logprob: -2.2596428394317627
    3. ' =' → logprob: -4.384643077850342
    4. '=' → logprob: -5.009643077850342
    5. '
' → logprob: -6.634643077850342
    6. '    
' → logprob: -7.759643077850342
    7. ' ret' → logprob: -7.884643077850342
    8. ',' → logprob: -9.009642601013184
    9. '	ret' → logprob: -9.634642601013184
    10. '  
' → logprob: -10.634642601013184

Token 1230: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35028591752052307
    2. '=' → logprob: -1.2252858877182007
    3. '   ' → logprob: -6.35028600692749
    4. ' ' → logprob: -10.725285530090332
    5. ' 
' → logprob: -11.350285530090332
    6. '`' → logprob: -11.350285530090332
    7. ',' → logprob: -11.725285530090332
    8. '```' → logprob: -11.850285530090332
    9. 'pow' → logprob: -12.475285530090332
    10. 'ans' → logprob: -12.600285530090332

Token 1231: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -5.943783253314905e-05
    2. '   ' → logprob: -10.750059127807617
    3. ' ret' → logprob: -10.875059127807617
    4. 'ans' → logprob: -10.875059127807617
    5. '
' → logprob: -17.125059127807617
    6. '    
' → logprob: -18.000059127807617
    7. 'rets' → logprob: -18.000059127807617
    8. 'res' → logprob: -18.125059127807617
    9. '	ret' → logprob: -18.375059127807617
    10. '```' → logprob: -19.125059127807617

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777015686035
    2. ' =' → logprob: -0.9740777015686035
    3. ',' → logprob: -15.224077224731445
    4. ' ' → logprob: -16.849077224731445
    5. ' +=' → logprob: -16.849077224731445
    6. '   ' → logprob: -16.849077224731445
    7. ')' → logprob: -17.224077224731445
    8. '=
' → logprob: -17.349077224731445
    9. '=n' → logprob: -17.599077224731445
    10. '[' → logprob: -17.849077224731445

Token 1233: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.004359740763902664
    2. '(pow' → logprob: -5.504359722137451
    3. '(' → logprob: -8.37936019897461
    4. ' pow' → logprob: -10.62936019897461
    5. '(p' → logprob: -11.62936019897461
    6. ' (' → logprob: -12.37936019897461
    7. '   ' → logprob: -12.75436019897461
    8. '2' → logprob: -13.25436019897461
    9. 'pot' → logprob: -13.50436019897461
    10. 'pw' → logprob: -13.75436019897461

Token 1234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.875001907348633
    3. '[' → logprob: -15.000001907348633
    4. ' ' → logprob: -16.500001907348633
    5. '
' → logprob: -19.375001907348633
    6. '(n' → logprob: -19.375001907348633
    7. '۲' → logprob: -19.625001907348633
    8. '```' → logprob: -20.062501907348633
    9. '₂' → logprob: -20.125001907348633
    10. '２' → logprob: -20.312501907348633

Token 1235: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2723104848410003e-05
    2. 'n' → logprob: -10.750022888183594
    3. '[' → logprob: -14.000022888183594
    4. '[cnt' → logprob: -15.000022888183594
    5. '(n' → logprob: -18.375022888183594
    6. '   ' → logprob: -18.875022888183594
    7. '[
' → logprob: -19.125022888183594
    8. '[num' → logprob: -19.250022888183594
    9. '[u' → logprob: -19.375022888183594
    10. '
' → logprob: -19.375022888183594

Token 1236: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05190417915582657
    2. ' -' → logprob: -3.0519042015075684
    3. '[' → logprob: -5.801904201507568
    4. '[-' → logprob: -9.55190372467041
    5. ']' → logprob: -9.92690372467041
    6. ')' → logprob: -10.05190372467041
    7. '<|end|>' → logprob: -10.30190372467041
    8. '1' → logprob: -10.92690372467041
    9. '
' → logprob: -11.55190372467041
    10. ']-' → logprob: -11.67690372467041

Token 1237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.625001907348633
    3. '
' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -16.375001907348633
    5. '[' → logprob: -16.750001907348633
    6. 'u' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.000001907348633
    8. '```' → logprob: -17.625001907348633
    9. '2' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.062501907348633

Token 1238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.250004768371582
    3. '
' → logprob: -13.375004768371582
    4. '2' → logprob: -15.125004768371582
    5. 'u' → logprob: -15.500004768371582
    6. '

' → logprob: -16.000003814697266
    7. '<|end|>' → logprob: -16.687503814697266
    8. '   ' → logprob: -16.875003814697266
    9. 'ans' → logprob: -17.375003814697266
    10. '
' → logprob: -17.375003814697266

Token 1239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004952482995577157
    2. ']-' → logprob: -7.750495433807373
    3. ' ]' → logprob: -10.250494956970215
    4. '-' → logprob: -11.000494956970215
    5. ']
' → logprob: -11.875494956970215
    6. ' -' → logprob: -12.750494956970215
    7. ')' → logprob: -14.000494956970215
    8. '   ' → logprob: -14.250494956970215
    9. '']' → logprob: -14.875494956970215
    10. '[' → logprob: -15.250494956970215

Token 1240: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.392910361289978
    2. '
' → logprob: -1.517910361289978
    3. '<|end|>' → logprob: -2.5179104804992676
    4. ')' → logprob: -4.642910480499268
    5. '+' → logprob: -5.517910480499268
    6. ' ' → logprob: -6.267910480499268
    7. ' for' → logprob: -6.392910480499268
    8. '    
' → logprob: -6.392910480499268
    9. ' 
' → logprob: -6.892910480499268
    10. '  ' → logprob: -7.017910480499268

Token 1241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '2' → logprob: -11.125025749206543
    3. 'pow' → logprob: -12.000025749206543
    4. ' ' → logprob: -12.375025749206543
    5. '(' → logprob: -14.500025749206543
    6. '
' → logprob: -15.500025749206543
    7. ' pow' → logprob: -17.50002670288086
    8. '

' → logprob: -17.62502670288086
    9. 'ans' → logprob: -17.81252670288086
    10. '0' → logprob: -17.81252670288086

Token 1242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. 'pow' → logprob: -11.625014305114746
    3. '2' → logprob: -12.375014305114746
    4. ' ' → logprob: -14.000014305114746
    5. '
' → logprob: -15.250014305114746
    6. '(' → logprob: -15.625014305114746
    7. '

' → logprob: -17.500015258789062
    8. '   ' → logprob: -17.500015258789062
    9. 'ans' → logprob: -17.625015258789062
    10. '
' → logprob: -17.687515258789062

Token 1243: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04693878814578056
    2. '<|end|>' → logprob: -4.046938896179199
    3. ')' → logprob: -4.421938896179199
    4. ':' → logprob: -5.296938896179199
    5. '   ' → logprob: -5.671938896179199
    6. '+' → logprob: -5.671938896179199
    7. '
' → logprob: -7.046938896179199
    8. '*' → logprob: -7.171938896179199
    9. '' → logprob: -8.0469388961792
    10. ' 
' → logprob: -8.1719388961792

Token 1244: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025291552767157555
    2. '   ' → logprob: -4.150291442871094
    3. ' 
' → logprob: -5.775291442871094
    4. '<|end|>' → logprob: -6.025291442871094
    5. '    
' → logprob: -7.150291442871094
    6. ' for' → logprob: -7.650291442871094
    7. '  
' → logprob: -7.775291442871094
    8. ')' → logprob: -8.025291442871094
    9. ' ' → logprob: -8.400291442871094
    10. '   
' → logprob: -8.525291442871094

Token 1245: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43318840861320496
    2. 'for' (adapté à ' for') → logprob: -1.4331884384155273
    3. '
' → logprob: -2.5581884384155273
    4. '   ' → logprob: -3.5581884384155273
    5. ' 
' → logprob: -5.433188438415527
    6. '    
' → logprob: -6.308188438415527
    7. '	for' → logprob: -7.808188438415527
    8. '  
' → logprob: -8.683188438415527
    9. '   
' → logprob: -9.183188438415527
    10. '<|end|>' → logprob: -9.558188438415527

Token 1246: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029803840443491936
    2. ' v' → logprob: -3.52980375289917
    3. 'w' → logprob: -10.154804229736328
    4. 'x' → logprob: -12.154804229736328
    5. 'c' → logprob: -12.779804229736328
    6. ' w' → logprob: -12.904804229736328
    7. 'u' → logprob: -13.904804229736328
    8. 'vv' → logprob: -14.154804229736328
    9. 'to' → logprob: -14.904804229736328
    10. 'child' → logprob: -15.279804229736328

Token 1247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20147356390953064
    2. 'in' → logprob: -1.701473593711853
    3. 'u' → logprob: -11.326473236083984
    4. ' ' → logprob: -11.451473236083984
    5. '	in' → logprob: -11.451473236083984
    6. '<|end|>' → logprob: -11.951473236083984
    7. '_in' → logprob: -12.576473236083984
    8. '   ' → logprob: -12.701473236083984
    9. '    ' → logprob: -12.701473236083984
    10. '[' → logprob: -13.076473236083984

Token 1248: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0019362468738108873
    2. ' G' → logprob: -6.251936435699463
    3. '(G' → logprob: -12.126935958862305
    4. '
' → logprob: -14.001935958862305
    5. '[G' → logprob: -14.501935958862305
    6. '	G' → logprob: -14.751935958862305
    7. ' ' → logprob: -15.876935958862305
    8. ')' → logprob: -16.126935958862305
    9. '<|end|>' → logprob: -16.251935958862305
    10. '   ' → logprob: -16.501935958862305

Token 1249: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0015262868255376816
    2. 'u' → logprob: -6.501526355743408
    3. '[' → logprob: -11.87652587890625
    4. ' u' → logprob: -12.12652587890625
    5. '[
' → logprob: -12.37652587890625
    6. '   ' → logprob: -12.37652587890625
    7. ')' → logprob: -13.37652587890625
    8. '(u' → logprob: -14.87652587890625
    9. ' [' → logprob: -15.12652587890625
    10. '	u' → logprob: -15.12652587890625

Token 1250: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0930737629532814
    2. ']' → logprob: -2.968073844909668
    3. ']:
' → logprob: -3.343073844909668
    4. ':' → logprob: -6.718073844909668
    5. '):' → logprob: -7.593073844909668
    6. '   ' → logprob: -9.218073844909668
    7. '):
' → logprob: -9.468073844909668
    8. ':
' → logprob: -10.218073844909668
    9. ']>' → logprob: -10.218073844909668
    10. ' ]' → logprob: -10.218073844909668

Token 1251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8781182169914246
    2. ' if' → logprob: -1.3781182765960693
    3. ' 
' → logprob: -1.7531182765960693
    4. '   ' → logprob: -3.1281182765960693
    5. '    ' → logprob: -3.2531182765960693
    6. ' ' → logprob: -4.00311803817749
    7. ':' → logprob: -5.00311803817749
    8. '	if' → logprob: -5.12811803817749
    9. '	' → logprob: -5.25311803817749
    10. '[' → logprob: -5.62811803817749

Token 1252: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00842414889484644
    2. 'if' (adapté à ' if') → logprob: -5.258424282073975
    3. '       ' → logprob: -6.883424282073975
    4. ' 
' → logprob: -7.258424282073975
    5. ' v' → logprob: -7.383424282073975
    6. '	if' → logprob: -8.508423805236816
    7. 'v' → logprob: -8.758423805236816
    8. ' ' → logprob: -9.133423805236816
    9. '   ' → logprob: -9.383423805236816
    10. ' s' → logprob: -9.633423805236816

Token 1253: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.048878367990255356
    2. ' v' → logprob: -3.2988784313201904
    3. 'par' → logprob: -4.673878192901611
    4. ' par' → logprob: -6.548878192901611
    5. '   ' → logprob: -12.29887866973877
    6. '	v' → logprob: -12.67387866973877
    7. '	par' → logprob: -13.92387866973877
    8. '(par' → logprob: -15.29887866973877
    9. '(v' → logprob: -15.54887866973877
    10. ' ' → logprob: -15.54887866973877

Token 1254: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48794445395469666
    2. '==' → logprob: -0.987944483757019
    3. ' !=' → logprob: -4.987944602966309
    4. '!=' → logprob: -5.112944602966309
    5. '[' → logprob: -7.237944602966309
    6. '=' → logprob: -8.987944602966309
    7. '==
' → logprob: -10.237944602966309
    8. ' =' → logprob: -10.987944602966309
    9. ']==' → logprob: -11.987944602966309
    10. ' v' → logprob: -12.112944602966309

Token 1255: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.735893965815194e-05
    2. ' par' → logprob: -11.250017166137695
    3. 'u' → logprob: -12.375017166137695
    4. '	par' → logprob: -17.500017166137695
    5. '   ' → logprob: -19.250017166137695
    6. '
' → logprob: -19.250017166137695
    7. '(par' → logprob: -20.500017166137695
    8. ' u' → logprob: -21.000017166137695
    9. ' ' → logprob: -22.000017166137695
    10. 'paren' → logprob: -22.500017166137695

Token 1256: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0007106438861228526
    2. 'u' → logprob: -7.250710487365723
    3. ' u' → logprob: -15.500710487365723
    4. '
' → logprob: -15.500710487365723
    5. '[
' → logprob: -15.750710487365723
    6. '[' → logprob: -16.37571144104004
    7. ' [' → logprob: -17.25071144104004
    8. '   ' → logprob: -17.25071144104004
    9. '	u' → logprob: -18.00071144104004
    10. '[v' → logprob: -18.00071144104004

Token 1257: ']:' (ID: 12433)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -1.021916389465332
    2. ']:' → logprob: -1.271916389465332
    3. ':' → logprob: -1.771916389465332
    4. ':
' → logprob: -2.021916389465332
    5. ']' → logprob: -3.771916389465332
    6. '       ' → logprob: -4.021916389465332
    7. '):
' → logprob: -5.146916389465332
    8. '   ' → logprob: -5.521916389465332
    9. '           ' → logprob: -6.021916389465332
    10. '):' → logprob: -6.896916389465332

Token 1258: ' ' (ID: 220)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7054187655448914
    2. '           ' → logprob: -0.8304187655448914
    3. '       ' → logprob: -3.080418825149536
    4. 'continue' → logprob: -3.955418825149536
    5. ' 
' → logprob: -6.330418586730957
    6. '	continue' → logprob: -6.955418586730957
    7. '        ' → logprob: -8.080418586730957
    8. '	       ' → logprob: -8.205418586730957
    9. '               ' → logprob: -8.455418586730957
    10. '   ' → logprob: -8.580418586730957

Token 1259: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7061466574668884
    2. '           ' → logprob: -1.0811467170715332
    3. ' continue' → logprob: -1.8311467170715332
    4. '       ' → logprob: -5.331146717071533
    5. '	continue' → logprob: -6.831146717071533
    6. '   ' → logprob: -7.206146717071533
    7. 'contin' → logprob: -9.706146240234375
    8. '0' → logprob: -9.831146240234375
    9. '
' → logprob: -10.081146240234375
    10. '	       ' → logprob: -10.206146240234375

Token 1260: ' Ne' (ID: 4475)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5021601319313049
    2. ' continue' → logprob: -1.0021600723266602
    3. '           ' → logprob: -3.62716007232666
    4. '   ' → logprob: -7.37716007232666
    5. '       ' → logprob: -8.37716007232666
    6. '	continue' → logprob: -8.62716007232666
    7. 'contin' → logprob: -10.12716007232666
    8. 'continu' → logprob: -12.12716007232666
    9. '               ' → logprob: -12.37716007232666
    10. '_continue' → logprob: -12.87716007232666

Token 1261: ' pas' (ID: 2173)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.08677355200052261
    2. 'continue' → logprob: -2.586773633956909
    3. '   ' → logprob: -4.96177339553833
    4. '       ' → logprob: -8.086773872375488
    5. 'contin' → logprob: -8.961773872375488
    6. '	continue' → logprob: -9.461773872375488
    7. '    ' → logprob: -9.461773872375488
    8. '           ' → logprob: -9.586773872375488
    9. 'n' → logprob: -10.086773872375488
    10. 'nt' → logprob: -10.711773872375488

Token 1262: ' retourner' (ID: 116656)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.014772837981581688
    2. ' continue' → logprob: -4.264772891998291
    3. 'contin' → logprob: -8.139772415161133
    4. 'v' → logprob: -9.014772415161133
    5. 'None' → logprob: -10.014772415161133
    6. 'u' → logprob: -10.014772415161133
    7. 'pass' → logprob: -10.264772415161133
    8. ' None' → logprob: -11.014772415161133
    9. 'cont' → logprob: -12.264772415161133
    10. ' ' → logprob: -12.389772415161133

Token 1263: ' vers' (ID: 3640)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0990135446190834
    2. 'continue' → logprob: -2.599013566970825
    3. 'contin' → logprob: -5.474013328552246
    4. '   ' → logprob: -5.849013328552246
    5. ' continuer' → logprob: -6.099013328552246
    6. ' à' → logprob: -6.099013328552246
    7. ' au' → logprob: -6.224013328552246
    8. '       ' → logprob: -6.349013328552246
    9. '           ' → logprob: -6.849013328552246
    10. ' to' → logprob: -6.974013328552246

Token 1264: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.032495975494384766
    2. ' u' → logprob: -3.7824959754943848
    3. 'par' → logprob: -4.782495975494385
    4. 'v' → logprob: -7.532495975494385
    5. ' par' → logprob: -8.532495498657227
    6. '[u' → logprob: -10.032495498657227
    7. ' v' → logprob: -10.782495498657227
    8. '   ' → logprob: -11.282495498657227
    9. ' ' → logprob: -11.657495498657227
    10. '	u' → logprob: -12.407495498657227

Token 1265: ' parent' (ID: 5980)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3622417449951172
    2. 'v' → logprob: -1.6122417449951172
    3. ' u' → logprob: -2.737241744995117
    4. ' v' → logprob: -4.112241744995117
    5. 'parent' → logprob: -4.362241744995117
    6. 'par' → logprob: -5.112241744995117
    7. ' parent' → logprob: -5.487241744995117
    8. ' par' → logprob: -8.612241744995117
    9. ' ' → logprob: -9.487241744995117
    10. ' 
' → logprob: -9.862241744995117

Token 1266: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03364558145403862
    2. '       ' → logprob: -3.6586456298828125
    3. ':
' → logprob: -5.5336456298828125
    4. '           ' → logprob: -6.0336456298828125
    5. '   ' → logprob: -7.6586456298828125
    6. ' continue' → logprob: -8.783645629882812
    7. ',' → logprob: -8.908645629882812
    8. ' :' → logprob: -9.283645629882812
    9. 'continue' → logprob: -10.408645629882812
    10. ')' → logprob: -11.533645629882812

Token 1267: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1735873818397522
    2. ':' → logprob: -2.0485873222351074
    3. '           ' → logprob: -3.6735873222351074
    4. '   ' → logprob: -6.048587322235107
    5. ' continue' → logprob: -6.923587322235107
    6. ',' → logprob: -7.923587322235107
    7. ':
' → logprob: -8.048587799072266
    8. ' :' → logprob: -8.423587799072266
    9. 'continue' → logprob: -9.048587799072266
    10. '	' → logprob: -9.548587799072266

Token 1268: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2048061192035675
    2. 'continue' (adapté à ' continue') → logprob: -1.7048060894012451
    3. '           ' → logprob: -5.954806327819824
    4. '	continue' → logprob: -7.704806327819824
    5. '               ' → logprob: -8.329806327819824
    6. '       ' → logprob: -10.079806327819824
    7. '		' → logprob: -10.704806327819824
    8. 'contin' → logprob: -11.079806327819824
    9. '   ' → logprob: -11.704806327819824
    10. '_continue' → logprob: -13.079806327819824

Token 1269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01980201154947281
    2. '   ' → logprob: -4.769802093505859
    3. ':' → logprob: -5.144802093505859
    4. '           ' → logprob: -6.019802093505859
    5. ',' → logprob: -7.269802093505859
    6. ')' → logprob: -7.894802093505859
    7. '<|end|>' → logprob: -8.26980209350586
    8. '```' → logprob: -8.76980209350586
    9. '	' → logprob: -9.01980209350586
    10. '        
' → logprob: -9.14480209350586

Token 1270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010214269161224365
    2. '   ' → logprob: -5.135214328765869
    3. ' ret' → logprob: -6.385214328765869
    4. '	' → logprob: -7.260214328765869
    5. 'ret' → logprob: -8.135213851928711
    6. '           ' → logprob: -8.385213851928711
    7. '	ret' → logprob: -8.385213851928711
    8. '```' → logprob: -8.510213851928711
    9. ')' → logprob: -8.635213851928711
    10. ' if' → logprob: -8.635213851928711

Token 1271: ' #' (ID: 1069)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5397337675094604
    2. 'q' → logprob: -1.0397337675094604
    3. '   ' → logprob: -2.91473388671875
    4. 'ans' → logprob: -4.91473388671875
    5. 'if' → logprob: -7.53973388671875
    6. '       ' → logprob: -7.91473388671875
    7. ' ret' → logprob: -8.16473388671875
    8. ' q' → logprob: -9.03973388671875
    9. 'val' → logprob: -9.41473388671875
    10. '           ' → logprob: -9.66473388671875

Token 1272: ' On' (ID: 2160)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.02379775419831276
    2. 'q' → logprob: -4.523797988891602
    3. 'ans' → logprob: -4.523797988891602
    4. 'if' → logprob: -7.148797988891602
    5. 'sub' → logprob: -8.273797988891602
    6. 'tmp' → logprob: -8.398797988891602
    7. '   ' → logprob: -9.023797988891602
    8. 'diff' → logprob: -9.523797988891602
    9. 'temp' → logprob: -9.648797988891602
    10. 't' → logprob: -10.148797988891602

Token 1273: ' excl' (ID: 57282)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -1.004892349243164
    2. 'ret' → logprob: -1.129892349243164
    3. ' -=' → logprob: -2.254892349243164
    4. '=' → logprob: -3.004892349243164
    5. '#' → logprob: -3.379892349243164
    6. 'subtract' → logprob: -3.504892349243164
    7. 'sub' → logprob: -3.629892349243164
    8. '   ' → logprob: -3.879892349243164
    9. 'ans' → logprob: -4.379892349243164
    10. 'pow' → logprob: -4.629892349243164

Token 1274: 'ut' (ID: 339)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ure' → logprob: -1.1306874752044678
    2. 'ude' → logprob: -1.1306874752044678
    3. 'clude' → logprob: -1.8806874752044678
    4. 'cl' → logprob: -2.1306874752044678
    5. 'lude' → logprob: -3.3806874752044678
    6. 'l' → logprob: -4.505687713623047
    7. '   ' → logprob: -5.255687713623047
    8. 'u' → logprob: -5.255687713623047
    9. 'de' → logprob: -5.380687713623047
    10. '       ' → logprob: -5.630687713623047

Token 1275: ' les' (ID: 1341)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.12119458615779877
    2. ' pow' → logprob: -2.24619460105896
    3. 'ret' → logprob: -5.746194362640381
    4. '(pow' → logprob: -6.371194362640381
    5. ' (' → logprob: -7.246194362640381
    6. ' ret' → logprob: -7.496194362640381
    7. 'cnt' → logprob: -7.496194362640381
    8. '(' → logprob: -7.496194362640381
    9. '   ' → logprob: -7.621194362640381
    10. '       ' → logprob: -8.496194839477539

Token 1276: ' sous' (ID: 14487)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03408176451921463
    2. '(pow' → logprob: -3.5340816974639893
    3. ' pow' → logprob: -6.659081935882568
    4. '(' → logprob: -7.034081935882568
    5. 'ret' → logprob: -7.659081935882568
    6. 'sub' → logprob: -7.784081935882568
    7. '(p' → logprob: -8.03408145904541
    8. ' (' → logprob: -8.28408145904541
    9. 'cnt' → logprob: -8.65908145904541
    10. '2' → logprob: -9.40908145904541

Token 1277: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1298416554927826
    2. 'ense' → logprob: -2.5048415660858154
    3. '-ar' → logprob: -4.3798418045043945
    4. 'ar' → logprob: -5.0048418045043945
    5. '_ar' → logprob: -5.7548418045043945
    6. '_' → logprob: -5.7548418045043945
    7. '   ' → logprob: -6.0048418045043945
    8. 'sets' → logprob: -6.1298418045043945
    9. '```' → logprob: -6.1298418045043945
    10. 'cnt' → logprob: -6.6298418045043945

Token 1278: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.05596555769443512
    2. 'ar' → logprob: -3.1809656620025635
    3. 'arb' → logprob: -5.305965423583984
    4. 'tree' → logprob: -6.430965423583984
    5. 'sets' → logprob: -6.555965423583984
    6. 'trees' → logprob: -6.555965423583984
    7. 'cnt' → logprob: -6.680965423583984
    8. 'sub' → logprob: -7.680965423583984
    9. 'ensemble' → logprob: -8.055965423583984
    10. 'pow' → logprob: -8.180965423583984

Token 1279: 'mbles' (ID: 60383)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.413070410490036
    2. 'mbles' → logprob: -1.4130704402923584
    3. 'ts' → logprob: -3.0380704402923584
    4. 'mb' → logprob: -3.1630704402923584
    5. 'mble' → logprob: -6.538070201873779
    6. 'quences' → logprob: -6.913070201873779
    7. 'tb' → logprob: -7.663070201873779
    8. 'ub' → logprob: -8.663070678710938
    9. 'tu' → logprob: -8.663070678710938
    10. 'u' → logprob: -8.788070678710938

Token 1280: ' contenus' (ID: 129602)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12662188708782196
    2. '[cnt' → logprob: -3.126621961593628
    3. '[v' → logprob: -3.626621961593628
    4. 'de' → logprob: -4.376621723175049
    5. ' de' → logprob: -5.001621723175049
    6. '=' → logprob: -5.251621723175049
    7. 'pow' → logprob: -5.876621723175049
    8. ' [' → logprob: -6.001621723175049
    9. '[sub' → logprob: -6.126621723175049
    10. '[s' → logprob: -6.126621723175049

Token 1281: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.20348753035068512
    2. ' dans' → logprob: -1.703487515449524
    3. '       ' → logprob: -7.203487396240234
    4. '[' → logprob: -8.078487396240234
    5. 'in' → logprob: -8.828487396240234
    6. 'Dans' → logprob: -8.828487396240234
    7. ' in' → logprob: -8.828487396240234
    8. ',' → logprob: -9.328487396240234
    9. '   ' → logprob: -9.828487396240234
    10. '[:' → logprob: -10.078487396240234

Token 1282: ' le' (ID: 505)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02992682345211506
    2. ' pow' → logprob: -4.154926776885986
    3. 'cnt' → logprob: -4.654926776885986
    4. '   ' → logprob: -6.154926776885986
    5. ' cnt' → logprob: -7.154926776885986
    6. '       ' → logprob: -7.154926776885986
    7. '(pow' → logprob: -9.154927253723145
    8. '           ' → logprob: -9.279927253723145
    9. '(' → logprob: -9.654927253723145
    10. '(cnt' → logprob: -10.404927253723145

Token 1283: ' sous' (ID: 14487)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6485084891319275
    2. 'cnt' → logprob: -0.7735084891319275
    3. 'sub' → logprob: -4.273508548736572
    4. '   ' → logprob: -7.273508548736572
    5. 's' → logprob: -8.148508071899414
    6. 'subset' → logprob: -8.273508071899414
    7. '```' → logprob: -9.773508071899414
    8. ' pow' → logprob: -9.898508071899414
    9. ' cnt' → logprob: -9.898508071899414
    10. 'p' → logprob: -10.023508071899414

Token 1284: '-ar' (ID: 31325)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.716298520565033
    2. '_ar' → logprob: -0.841298520565033
    3. 'cnt' → logprob: -3.4662985801696777
    4. '_cnt' → logprob: -4.091298580169678
    5. '[v' → logprob: -4.466298580169678
    6. 'v' → logprob: -5.591298580169678
    7. '[cnt' → logprob: -5.591298580169678
    8. '   ' → logprob: -5.716298580169678
    9. '```' → logprob: -6.591298580169678
    10. '[' → logprob: -6.591298580169678

Token 1285: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.016004687175154686
    2. '#' → logprob: -5.51600456237793
    3. 'ar' → logprob: -6.89100456237793
    4. 'bres' → logprob: -7.14100456237793
    5. ' arbre' → logprob: -7.14100456237793
    6. 'bé' → logprob: -7.26600456237793
    7. 'e' → logprob: -7.39100456237793
    8. 'tree' → logprob: -7.39100456237793
    9. '树' → logprob: -7.39100456237793
    10. 'b' → logprob: -7.39100456237793

Token 1286: ' de' (ID: 334)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.08062804490327835
    2. '[cnt' → logprob: -2.8306281566619873
    3. '[' → logprob: -4.455627918243408
    4. 'cnt' → logprob: -5.705627918243408
    5. '[u' → logprob: -5.955627918243408
    6. 'de' → logprob: -8.330628395080566
    7. 'v' → logprob: -8.580628395080566
    8. '[s' → logprob: -8.705628395080566
    9. ' [' → logprob: -9.455628395080566
    10. 'ret' → logprob: -9.830628395080566

Token 1287: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.888114098226652e-05
    2. ' v' → logprob: -9.375088691711426
    3. '```' → logprob: -13.375088691711426
    4. 'u' → logprob: -13.875088691711426
    5. '   ' → logprob: -14.625088691711426
    6. '	v' → logprob: -15.000088691711426
    7. '[v' → logprob: -15.000088691711426
    8. '`' → logprob: -16.250089645385742
    9. 'la' → logprob: -16.500089645385742
    10. '(v' → logprob: -16.625089645385742

Token 1288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9356768131256104
    2. '   ' → logprob: -1.5606768131256104
    3. ')' → logprob: -2.1856768131256104
    4. ',' → logprob: -3.0606768131256104
    5. ':' → logprob: -3.0606768131256104
    6. '
' → logprob: -3.4356768131256104
    7. ' =' → logprob: -3.8106768131256104
    8. '-' → logprob: -4.060676574707031
    9. '           ' → logprob: -4.185676574707031
    10. '<|end|>' → logprob: -4.310676574707031

Token 1289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4377640187740326
    2. '   ' → logprob: -1.437764048576355
    3. '
' → logprob: -3.4377639293670654
    4. ' =' → logprob: -3.8127639293670654
    5. '-' → logprob: -4.9377641677856445
    6. ' -=' → logprob: -4.9377641677856445
    7. ',' → logprob: -5.1877641677856445
    8. '           ' → logprob: -5.3127641677856445
    9. ' -' → logprob: -5.4377641677856445
    10. '    
' → logprob: -5.5627641677856445

Token 1290: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0010387639049440622
    2. ' ret' → logprob: -6.876038551330566
    3. '   ' → logprob: -12.751038551330566
    4. '       ' → logprob: -13.251038551330566
    5. '(ret' → logprob: -14.126038551330566
    6. '	ret' → logprob: -15.876038551330566
    7. 'pow' → logprob: -16.126039505004883
    8. '
' → logprob: -16.626039505004883
    9. '(' → logprob: -16.876039505004883
    10. 'ans' → logprob: -17.001039505004883

Token 1291: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03902461379766464
    2. ' -=' → logprob: -3.289024591445923
    3. '-' → logprob: -7.289024829864502
    4. '=' → logprob: -8.164024353027344
    5. '+=' → logprob: -12.289024353027344
    6. ' -' → logprob: -12.539024353027344
    7. '*=' → logprob: -12.664024353027344
    8. ' =' → logprob: -12.664024353027344
    9. '   ' → logprob: -15.414024353027344
    10. '%=' → logprob: -15.414024353027344

Token 1292: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0004702338483184576
    2. '(pow' → logprob: -8.000470161437988
    3. ' pow' → logprob: -9.125470161437988
    4. '   ' → logprob: -11.125470161437988
    5. ' (' → logprob: -12.375470161437988
    6. '(' → logprob: -12.500470161437988
    7. ' ' → logprob: -14.625470161437988
    8. 'po' → logprob: -14.625470161437988
    9. 'p' → logprob: -14.750470161437988
    10. '(p' → logprob: -15.000470161437988

Token 1293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. 'pow' → logprob: -12.125006675720215
    3. '(pow' → logprob: -13.500006675720215
    4. '(' → logprob: -16.87500762939453
    5. '[' → logprob: -17.37500762939453
    6. '₂' → logprob: -17.87500762939453
    7. '２' → logprob: -17.93750762939453
    8. '۲' → logprob: -18.00000762939453
    9. ' ' → logprob: -18.06250762939453
    10. '```' → logprob: -18.18750762939453

Token 1294: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -1.6047699318733066e-05
    2. 'cnt' → logprob: -11.125016212463379
    3. '(cnt' → logprob: -14.000016212463379
    4. '[c' → logprob: -15.500016212463379
    5. '[' → logprob: -16.375015258789062
    6. '	cnt' → logprob: -16.750015258789062
    7. ' cnt' → logprob: -16.875015258789062
    8. '[count' → logprob: -17.500015258789062
    9. '[counter' → logprob: -19.000015258789062
    10. ' [' → logprob: -19.500015258789062

Token 1295: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.384836888173595e-05
    2. 'v' → logprob: -9.7500638961792
    3. '[' → logprob: -12.2500638961792
    4. '[u' → logprob: -15.2500638961792
    5. '[
' → logprob: -16.125062942504883
    6. '	v' → logprob: -16.375062942504883
    7. '[c' → logprob: -16.750062942504883
    8. '```' → logprob: -17.250062942504883
    9. '[val' → logprob: -17.250062942504883
    10. '(v' → logprob: -17.500062942504883

Token 1296: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.372926265001297
    2. ']-' → logprob: -2.2479262351989746
    3. '[v' → logprob: -2.2479262351989746
    4. '[u' → logprob: -2.9979262351989746
    5. '[' → logprob: -3.7479262351989746
    6. '-' → logprob: -4.872926235198975
    7. '])' → logprob: -4.872926235198975
    8. '])-' → logprob: -5.497926235198975
    9. '[-' → logprob: -5.872926235198975
    10. ' -' → logprob: -6.622926235198975

Token 1297: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '0' → logprob: -17.25000762939453
    4. '   ' → logprob: -17.37500762939453
    5. '<|end|>' → logprob: -17.50000762939453
    6. '
' → logprob: -18.12500762939453
    7. '```' → logprob: -18.75000762939453
    8. '(' → logprob: -19.50000762939453
    9. 'pow' → logprob: -19.50000762939453
    10. '  ' → logprob: -20.31250762939453

Token 1299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -17.25
    4. '<|end|>' → logprob: -17.5
    5. '```' → logprob: -19.5
    6. '   ' → logprob: -19.5
    7. 'mod' → logprob: -20.375
    8. '0' → logprob: -20.75
    9. '(' → logprob: -21.0625
    10. '۱' → logprob: -21.125

Token 1300: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1301: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1302: ' q' (ID: 2335)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1303: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02775103785097599
    2. '.' → logprob: -3.9027509689331055
    3. '.extend' → logprob: -5.4027509689331055
    4. '.push' → logprob: -6.5277509689331055
    5. ' .' → logprob: -7.4027509689331055
    6. '.p' → logprob: -8.402750968933105
    7. 'append' → logprob: -9.152750968933105
    8. '.Append' → logprob: -9.777750968933105
    9. '.he' → logprob: -10.152750968933105
    10. '.app' → logprob: -10.402750968933105

Token 1304: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.5
    3. '(' → logprob: -16.5
    4. '(
' → logprob: -19.0
    5. '((' → logprob: -19.25
    6. 'left' → logprob: -19.375
    7. '[v' → logprob: -20.0
    8. '	v' → logprob: -20.625
    9. ' (' → logprob: -20.875
    10. '?v' → logprob: -22.125

Token 1305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010568885772954673
    2. ')
' → logprob: -9.250105857849121
    3. '<|end|>' → logprob: -12.375105857849121
    4. ' )' → logprob: -13.375105857849121
    5. '   ' → logprob: -13.875105857849121
    6. ')return' → logprob: -14.250105857849121
    7. ')v' → logprob: -14.250105857849121
    8. ')#' → logprob: -15.375105857849121
    9. '())' → logprob: -15.750105857849121
    10. '()' → logprob: -16.250104904174805

Token 1306: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1307: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1308: ' Aj' (ID: 28294)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5611485242843628
    2. '<|end|>' → logprob: -1.9361485242843628
    3. ')' → logprob: -2.4361486434936523
    4. 'q' → logprob: -2.8111486434936523
    5. '```' → logprob: -3.6861486434936523
    6. 'u' → logprob: -3.6861486434936523
    7. ' continue' → logprob: -4.436148643493652
    8. ' ' → logprob: -4.436148643493652
    9. 'ans' → logprob: -4.686148643493652
    10. 'Continue' → logprob: -4.936148643493652

Token 1309: 'oute' (ID: 3509)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.20395544171333313
    2. '<|end|>' → logprob: -2.5789554119110107
    3. 'p' → logprob: -3.0789554119110107
    4. 'd' → logprob: -3.0789554119110107
    5. 'pend' → logprob: -5.57895565032959
    6. '.append' → logprob: -5.70395565032959
    7. '```' → logprob: -6.32895565032959
    8. ')' → logprob: -6.32895565032959
    9. 'ppy' → logprob: -6.95395565032959
    10. 'dp' → logprob: -7.20395565032959

Token 1310: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00019257364328950644
    2. 'v' → logprob: -8.625192642211914
    3. '(' → logprob: -11.375192642211914
    4. '(
' → logprob: -14.000192642211914
    5. '	v' → logprob: -14.625192642211914
    6. ' v' → logprob: -16.250192642211914
    7. ' (' → logprob: -16.875192642211914
    8. ')v' → logprob: -16.875192642211914
    9. '(s' → logprob: -17.625192642211914
    10. '((' → logprob: -18.250192642211914

Token 1311: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18622976541519165
    2. '(v' → logprob: -1.9362297058105469
    3. ')' → logprob: -4.311229705810547
    4. '(
' → logprob: -4.936229705810547
    5. '<|end|>' → logprob: -5.686229705810547
    6. '(u' → logprob: -6.811229705810547
    7. 'v' → logprob: -8.936229705810547
    8. '()' → logprob: -9.186229705810547
    9. '(q' → logprob: -9.811229705810547
    10. '```' → logprob: -10.311229705810547

Token 1312: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00020532844064291567
    2. 'la' → logprob: -9.125205039978027
    3. ' q' → logprob: -9.625205039978027
    4. ' la' → logprob: -10.875205039978027
    5. 'the' → logprob: -12.375205039978027
    6. '```' → logprob: -13.125205039978027
    7. 'deque' → logprob: -13.625205039978027
    8. 'que' → logprob: -13.625205039978027
    9. 'u' → logprob: -14.375205039978027
    10. 'le' → logprob: -14.875205039978027

Token 1313: ' queue' (ID: 13661)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0025248879101127386
    2. 'q' → logprob: -6.0025248527526855
    3. 'queue' → logprob: -10.002525329589844
    4. 'dq' → logprob: -13.502525329589844
    5. ' deque' → logprob: -13.627525329589844
    6. 'que' → logprob: -13.877525329589844
    7. 'append' → logprob: -16.002525329589844
    8. 'stack' → logprob: -17.002525329589844
    9. ' q' → logprob: -17.127525329589844
    10. 'deck' → logprob: -17.627525329589844

Token 1314: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1315: ' visite' (ID: 38597)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.4830395579338074
    2. 'processing' → logprob: -2.108039617538452
    3. 'tr' → logprob: -2.358039617538452
    4. 'q' → logprob: -2.733039617538452
    5. 'expl' → logprob: -3.108039617538452
    6. 'par' → logprob: -3.358039617538452
    7. ' traiter' → logprob: -5.108039379119873
    8. 'tra' → logprob: -5.358039379119873
    9. 'la' → logprob: -5.858039379119873
    10. ' traitement' → logprob: -5.983039379119873

Token 1316: ' ult' (ID: 11619)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1317: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.3240073025226593
    2. 'er' → logprob: -1.699007272720337
    3. 'érer' → logprob: -2.949007272720337
    4. 'érieur' → logprob: -3.449007272720337
    5. 'rée' → logprob: -5.949007511138916
    6. 'rer' → logprob: -6.199007511138916
    7. 'érie' → logprob: -6.949007511138916
    8. 'r' → logprob: -7.449007511138916
    9. 'rie' → logprob: -7.574007511138916
    10. 'ter' → logprob: -7.574007511138916

Token 1318: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002585170092061162
    2. '<|end|>' → logprob: -7.002584934234619
    3. '    
' → logprob: -8.002585411071777
    4. '  ' → logprob: -8.127585411071777
    5. '
' → logprob: -8.252585411071777
    6. '  
' → logprob: -8.877585411071777
    7. ' ' → logprob: -9.127585411071777
    8. ' 
' → logprob: -9.127585411071777
    9. '+' → logprob: -9.127585411071777
    10. '   
' → logprob: -9.252585411071777

Token 1320: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1924869418144226
    2. 'ans' → logprob: -1.8174870014190674
    3. ' ans' → logprob: -5.067486763000488
    4. '	ans' → logprob: -6.567486763000488
    5. ' ' → logprob: -6.817486763000488
    6. 'ret' → logprob: -7.317486763000488
    7. '  ' → logprob: -7.317486763000488
    8. ')' → logprob: -7.692486763000488
    9. '    
' → logprob: -7.692486763000488
    10. ' 
' → logprob: -7.692486763000488

Token 1321: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16968756914138794
    2. 'ret' → logprob: -1.9196875095367432
    3. '   ' → logprob: -4.669687747955322
    4. ' ans' → logprob: -11.419687271118164
    5. 'while' → logprob: -11.669687271118164
    6. 'if' → logprob: -12.044687271118164
    7. '```' → logprob: -12.169687271118164
    8. 'answer' → logprob: -12.294687271118164
    9. ' ret' → logprob: -12.544687271118164
    10. '	ans' → logprob: -13.044687271118164

Token 1322: ' excl' (ID: 57282)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06614767014980316
    2. '%=' → logprob: -3.691147565841675
    3. ' +=' → logprob: -3.691147565841675
    4. '=' → logprob: -5.316147804260254
    5. 'ans' → logprob: -5.816147804260254
    6. '
' → logprob: -6.316147804260254
    7. ' %=' → logprob: -6.441147804260254
    8. ']+=' → logprob: -6.816147804260254
    9. ' =' → logprob: -7.691147804260254
    10. '   ' → logprob: -7.691147804260254

Token 1323: 'ut' (ID: 339)
  Prédit: 'ude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ude' → logprob: -0.2936103940010071
    2. 'cl' → logprob: -2.5436103343963623
    3. 'ure' → logprob: -2.9186103343963623
    4. '   ' → logprob: -3.0436103343963623
    5. 'clude' → logprob: -3.0436103343963623
    6. 'ut' → logprob: -4.668610572814941
    7. 'lude' → logprob: -4.668610572814941
    8. '=' → logprob: -6.418610572814941
    9. 'ue' → logprob: -6.793610572814941
    10. '       ' → logprob: -6.918610572814941

Token 1324: ' les' (ID: 1341)
  Prédit: ' ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.6342290043830872
    2. ' pow' → logprob: -1.8842289447784424
    3. '1' → logprob: -2.0092289447784424
    4. 'pow' → logprob: -2.5092289447784424
    5. ' (' → logprob: -2.6342289447784424
    6. 'ret' → logprob: -4.3842291831970215
    7. ' ' → logprob: -5.0092291831970215
    8. '(' → logprob: -5.3842291831970215
    9. '(pow' → logprob: -5.8842291831970215
    10. '(ret' → logprob: -6.3842291831970215

Token 1325: ' sous' (ID: 14487)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.21815788745880127
    2. '1' → logprob: -2.4681577682495117
    3. ' pow' → logprob: -2.5931577682495117
    4. 'ret' → logprob: -4.593157768249512
    5. ' ret' → logprob: -4.593157768249512
    6. '0' → logprob: -5.843157768249512
    7. '(pow' → logprob: -5.968157768249512
    8. ')' → logprob: -6.218157768249512
    9. ' (' → logprob: -6.718157768249512
    10. '2' → logprob: -6.968157768249512

Token 1326: '-' (ID: 12)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0605021715164185
    2. 'sets' → logprob: -2.060502052307129
    3. '**' → logprob: -2.185502052307129
    4. '-' → logprob: -2.310502052307129
    5. '```' → logprob: -2.435502052307129
    6. '_' → logprob: -3.310502052307129
    7. '2' → logprob: -3.560502052307129
    8. '+' → logprob: -3.560502052307129
    9. 'ense' → logprob: -3.935502052307129
    10. ' -' → logprob: -3.935502052307129

Token 1327: 'ense' (ID: 1603)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.461548775434494
    2. '1' → logprob: -1.5865488052368164
    3. 'ans' → logprob: -2.8365488052368164
    4. 'ret' → logprob: -3.3365488052368164
    5. 'sets' → logprob: -3.7115488052368164
    6. 'ense' → logprob: -4.211548805236816
    7. 'pow' → logprob: -5.211548805236816
    8. '   ' → logprob: -5.461548805236816
    9. '(ret' → logprob: -5.711548805236816
    10. 'tractions' → logprob: -5.836548805236816

Token 1328: 'mbles' (ID: 60383)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10138295590877533
    2. 'ts' → logprob: -2.3513829708099365
    3. 'r' → logprob: -7.851382732391357
    4. 'mbles' → logprob: -8.351383209228516
    5. '
' → logprob: -9.101383209228516
    6. 'quences' → logprob: -9.226383209228516
    7. '```' → logprob: -9.851383209228516
    8. 'ttes' → logprob: -10.351383209228516
    9. ' subsets' → logprob: -10.351383209228516
    10. '[t' → logprob: -10.601383209228516

Token 1329: ' contenus' (ID: 129602)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.965303897857666
    2. '[' → logprob: -1.215303897857666
    3. '[u' → logprob: -1.965303897857666
    4. '   ' → logprob: -2.090303897857666
    5. '```' → logprob: -4.590303897857666
    6. ' -=' → logprob: -4.965303897857666
    7. '[v' → logprob: -5.715303897857666
    8. ' +=' → logprob: -5.715303897857666
    9. ' =' → logprob: -5.965303897857666
    10. 'pow' → logprob: -5.965303897857666

Token 1330: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.8129433989524841
    2. '   ' → logprob: -0.9379433989524841
    3. ' dans' → logprob: -1.812943458557129
    4. ' in' → logprob: -7.687943458557129
    5. '    ' → logprob: -8.187943458557129
    6. 'in' → logprob: -8.437943458557129
    7. '```' → logprob: -9.312943458557129
    8. ')' → logprob: -9.562943458557129
    9. '+' → logprob: -9.687943458557129
    10. ' =' → logprob: -9.687943458557129

Token 1331: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09068368375301361
    2. ' pow' → logprob: -3.090683698654175
    3. 'cnt' → logprob: -3.715683698654175
    4. ' cnt' → logprob: -4.465683460235596
    5. '   ' → logprob: -5.965683460235596
    6. '[cnt' → logprob: -6.715683460235596
    7. ' ' → logprob: -8.465683937072754
    8. 'sub' → logprob: -8.590683937072754
    9. '(pow' → logprob: -8.840683937072754
    10. '```' → logprob: -8.965683937072754

Token 1332: ' compos' (ID: 14635)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07294600456953049
    2. 'sub' → logprob: -3.322946071624756
    3. 'pow' → logprob: -4.572946071624756
    4. 'cnt' → logprob: -5.072946071624756
    5. '   ' → logprob: -5.197946071624756
    6. ' sous' → logprob: -6.072946071624756
    7. 'for' → logprob: -7.197946071624756
    8. '[s' → logprob: -7.197946071624756
    9. '```' → logprob: -7.197946071624756
    10. 'com' → logprob: -7.322946071624756

Token 1333: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.00038980069803074
    2. 'ant' → logprob: -8.12539005279541
    3. 'antes' → logprob: -9.87539005279541
    4. '   ' → logprob: -11.75039005279541
    5. 'ance' → logprob: -11.87539005279541
    6. ' ante' → logprob: -11.87539005279541
    7. '{' → logprob: -12.50039005279541
    8. 'nte' → logprob: -12.87539005279541
    9. 'ants' → logprob: -13.37539005279541
    10. '
' → logprob: -13.50039005279541

Token 1334: ' extérieure' (ID: 154110)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.4089551270008087
    2. 'connect' → logprob: -2.0339550971984863
    3. 'de' → logprob: -3.0339550971984863
    4. 'rest' → logprob: -3.2839550971984863
    5. 'du' → logprob: -4.033955097198486
    6. 'd' → logprob: -4.408955097198486
    7. '   ' → logprob: -4.533955097198486
    8. '[u' → logprob: -4.783955097198486
    9. 'cont' → logprob: -4.908955097198486
    10. 'vo' → logprob: -4.908955097198486

Token 1335: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021857109386473894
    2. 'u' → logprob: -7.502185821533203
    3. ' -' → logprob: -8.127185821533203
    4. '[u' → logprob: -8.127185821533203
    5. ',' → logprob: -8.752185821533203
    6. ' +' → logprob: -8.877185821533203
    7. ' -=' → logprob: -9.127185821533203
    8. '-' → logprob: -9.252185821533203
    9. ')' → logprob: -9.877185821533203
    10. '```' → logprob: -9.877185821533203

Token 1336: ' sous' (ID: 14487)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06629115343093872
    2. 'n' → logprob: -3.441291093826294
    3. ' u' → logprob: -3.816291093826294
    4. ' n' → logprob: -5.566291332244873
    5. '   ' → logprob: -6.691291332244873
    6. ' subtree' → logprob: -7.066291332244873
    7. 'sub' → logprob: -7.191291332244873
    8. '`' → logprob: -7.316291332244873
    9. '```' → logprob: -7.316291332244873
    10. 'cnt' → logprob: -7.566291332244873

Token 1337: '-ar' (ID: 31325)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.760758101940155
    2. '[u' → logprob: -1.6357581615447998
    3. '   ' → logprob: -1.8857581615447998
    4. ' arbre' → logprob: -2.5107581615448
    5. '-tree' → logprob: -4.010757923126221
    6. '_tree' → logprob: -4.010757923126221
    7. '(u' → logprob: -4.135757923126221
    8. 'u' → logprob: -4.635757923126221
    9. '```' → logprob: -4.635757923126221
    10. '-' → logprob: -5.010757923126221

Token 1338: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0003121056070085615
    2. 'b' → logprob: -9.375311851501465
    3. 'be' → logprob: -10.375311851501465
    4. 'e' → logprob: -10.625311851501465
    5. '```' → logprob: -10.625311851501465
    6. 'bit' → logprob: -10.750311851501465
    7. '   ' → logprob: -11.000311851501465
    8. '[u' → logprob: -11.000311851501465
    9. '#' → logprob: -11.000311851501465
    10. '**' → logprob: -11.875311851501465

Token 1339: ' de' (ID: 334)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.10224966704845428
    2. 'u' → logprob: -2.8522496223449707
    3. '   ' → logprob: -3.6022496223449707
    4. 'de' → logprob: -5.227249622344971
    5. '[' → logprob: -6.727249622344971
    6. '```' → logprob: -7.352249622344971
    7. 'du' → logprob: -7.477249622344971
    8. '`' → logprob: -7.602249622344971
    9. '(u' → logprob: -7.602249622344971
    10. ' de' → logprob: -7.977249622344971

Token 1340: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002241727663204074
    2. ' u' → logprob: -6.377241611480713
    3. 'cnt' → logprob: -8.002242088317871
    4. '   ' → logprob: -9.252242088317871
    5. '[u' → logprob: -10.002242088317871
    6. '(u' → logprob: -10.752242088317871
    7. 'n' → logprob: -11.877242088317871
    8. '```' → logprob: -12.002242088317871
    9. 'v' → logprob: -12.502242088317871
    10. '`' → logprob: -12.502242088317871

Token 1341: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007309010834433138
    2. ' -' → logprob: -8.125730514526367
    3. '-' → logprob: -8.375730514526367
    4. '    
' → logprob: -9.625730514526367
    5. ',' → logprob: -10.000730514526367
    6. ' -=' → logprob: -10.875730514526367
    7. '
' → logprob: -11.500730514526367
    8. ' +' → logprob: -11.875730514526367
    9. '```' → logprob: -11.875730514526367
    10. '  ' → logprob: -12.000730514526367

Token 1342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013617423363029957
    2. ' -=' → logprob: -5.888617515563965
    3. '[' → logprob: -6.013617515563965
    4. '-' → logprob: -6.013617515563965
    5. '    ' → logprob: -7.013617515563965
    6. ')' → logprob: -7.638617515563965
    7. ' +' → logprob: -7.638617515563965
    8. ' -' → logprob: -7.763617515563965
    9. '[-' → logprob: -7.763617515563965
    10. '```' → logprob: -7.888617515563965

Token 1343: ' ret' (ID: 2881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5345160961151123
    2. ' ret' → logprob: -0.9095160961151123
    3. 'ret' (adapté à ' ret') → logprob: -4.534516334533691
    4. '	ret' → logprob: -7.534516334533691
    5. '```' → logprob: -10.909516334533691
    6. '(ret' → logprob: -11.284516334533691
    7. '       ' → logprob: -11.784516334533691
    8. '  ' → logprob: -12.409516334533691
    9. '    ' → logprob: -12.659516334533691
    10. '$ret' → logprob: -12.784516334533691

Token 1344: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0435238741338253
    2. '-=' → logprob: -3.1685237884521484
    3. '-' → logprob: -7.668523788452148
    4. ' -' → logprob: -10.168523788452148
    5. '=' → logprob: -11.793523788452148
    6. ' =' → logprob: -12.293523788452148
    7. ' +=' → logprob: -12.918523788452148
    8. '   ' → logprob: -13.293523788452148
    9. '+=' → logprob: -13.668523788452148
    10. '	' → logprob: -14.043523788452148

Token 1345: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0009537404985167086
    2. ' pow' → logprob: -7.625953674316406
    3. '(pow' → logprob: -7.750953674316406
    4. '   ' → logprob: -10.500953674316406
    5. ' (' → logprob: -12.875953674316406
    6. ' ' → logprob: -13.875953674316406
    7. 'p' → logprob: -14.250953674316406
    8. '    ' → logprob: -14.375953674316406
    9. 'po' → logprob: -14.875953674316406
    10. '  ' → logprob: -14.875953674316406

Token 1346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. 'pow' → logprob: -12.750004768371582
    3. '
' → logprob: -14.875004768371582
    4. '[' → logprob: -15.250004768371582
    5. '(pow' → logprob: -16.000003814697266
    6. '[p' → logprob: -16.125003814697266
    7. 'o' → logprob: -16.812503814697266
    8. '```' → logprob: -16.812503814697266
    9. '   ' → logprob: -16.937503814697266
    10. '(' → logprob: -17.062503814697266

Token 1347: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.02068471349775791
    2. '[cnt' → logprob: -3.8956847190856934
    3. '[' → logprob: -9.895684242248535
    4. 'n' → logprob: -10.020684242248535
    5. 'cnt' → logprob: -10.895684242248535
    6. '(n' → logprob: -11.145684242248535
    7. '(cnt' → logprob: -11.895684242248535
    8. '[(' → logprob: -13.270684242248535
    9. ' [' → logprob: -13.520684242248535
    10. '[
' → logprob: -14.020684242248535

Token 1348: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42902451753616333
    2. ' -' → logprob: -1.0540244579315186
    3. '-n' → logprob: -9.054024696350098
    4. '   ' → logprob: -9.304024696350098
    5. '
' → logprob: -10.304024696350098
    6. '[cnt' → logprob: -10.554024696350098
    7. 'cnt' → logprob: -11.429024696350098
    8. ' ' → logprob: -11.554024696350098
    9. '-c' → logprob: -12.054024696350098
    10. '  ' → logprob: -12.554024696350098

Token 1349: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0025492659769952297
    2. ' cnt' → logprob: -6.252549171447754
    3. '(cnt' → logprob: -7.627549171447754
    4. '1' → logprob: -9.252549171447754
    5. '[cnt' → logprob: -11.252549171447754
    6. '   ' → logprob: -11.252549171447754
    7. '	cnt' → logprob: -12.127549171447754
    8. 'n' → logprob: -13.252549171447754
    9. '  ' → logprob: -13.752549171447754
    10. ' ' → logprob: -13.752549171447754

Token 1350: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0007321976590901613
    2. 'u' → logprob: -7.250732421875
    3. ']' → logprob: -11.250732421875
    4. '[' → logprob: -12.250732421875
    5. '[
' → logprob: -13.250732421875
    6. '	u' → logprob: -14.375732421875
    7. '
' → logprob: -14.750732421875
    8. '   ' → logprob: -14.750732421875
    9. '[n' → logprob: -15.375732421875
    10. ' u' → logprob: -15.625732421875

Token 1351: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42885980010032654
    2. ']]' → logprob: -1.053859829902649
    3. ']}' → logprob: -10.05385971069336
    4. ']
' → logprob: -10.92885971069336
    5. '']]' → logprob: -11.05385971069336
    6. ' ]' → logprob: -11.17885971069336
    7. ' ]]' → logprob: -11.30385971069336
    8. ')]' → logprob: -11.30385971069336
    9. ']-' → logprob: -11.67885971069336
    10. ']]
' → logprob: -12.30385971069336

Token 1352: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10287345200777054
    2. ' +' → logprob: -2.6028735637664795
    3. '-' → logprob: -3.8528735637664795
    4. '+' → logprob: -6.4778733253479
    5. '   ' → logprob: -7.3528733253479
    6. ' ' → logprob: -8.852873802185059
    7. '<|end|>' → logprob: -9.977873802185059
    8. '    ' → logprob: -10.102873802185059
    9. ')' → logprob: -10.352873802185059
    10. '  ' → logprob: -12.102873802185059

Token 1353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '```' → logprob: -19.562501907348633
    5. '
' → logprob: -20.000001907348633
    6. ')' → logprob: -20.312501907348633
    7. '2' → logprob: -20.625001907348633
    8. '-' → logprob: -20.875001907348633
    9. '۱' → logprob: -21.000001907348633
    10. '１' → logprob: -21.187501907348633

Token 1354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.125
    4. '```' → logprob: -19.125
    5. 'mod' → logprob: -19.75
    6. '
' → logprob: -19.8125
    7. '۱' → logprob: -20.8125
    8. '
' → logprob: -21.5625
    9. ')' → logprob: -21.75
    10. '﻿' → logprob: -21.875

Token 1355: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11631133407354355
    2. '<|end|>' → logprob: -2.7413113117218018
    3. ')' → logprob: -3.7413113117218018
    4. '
' → logprob: -4.491311550140381
    5. '    
' → logprob: -5.866311550140381
    6. ' 
' → logprob: -6.491311550140381
    7. '  ' → logprob: -6.741311550140381
    8. '+' → logprob: -6.741311550140381
    9. '  
' → logprob: -6.866311550140381
    10. ' ' → logprob: -6.991311550140381

Token 1356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5991910099983215
    2. 'ans' → logprob: -1.2241909503936768
    3. '
' → logprob: -2.2241909503936768
    4. 'ret' → logprob: -3.4741909503936768
    5. '```' → logprob: -5.224191188812256
    6. '    
' → logprob: -5.724191188812256
    7. ' ans' → logprob: -6.474191188812256
    8. ' 
' → logprob: -6.849191188812256
    9. ' ret' → logprob: -6.974191188812256
    10. '  
' → logprob: -7.099191188812256

Token 1357: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6934504508972168
    2. 'ret' → logprob: -0.6934504508972168
    3. 'if' → logprob: -8.818450927734375
    4. '   ' → logprob: -9.693450927734375
    5. ' ret' → logprob: -9.818450927734375
    6. ' ans' → logprob: -11.318450927734375
    7. 'while' → logprob: -11.443450927734375
    8. '
' → logprob: -11.943450927734375
    9. 'answer' → logprob: -12.818450927734375
    10. '```' → logprob: -13.318450927734375

Token 1358: ' Acc' (ID: 6278)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04866446554660797
    2. 'ret' → logprob: -3.0486645698547363
    3. '   ' → logprob: -9.548664093017578
    4. 'while' → logprob: -13.548664093017578
    5. ' ans' → logprob: -13.923664093017578
    6. '```' → logprob: -14.048664093017578
    7. '(ans' → logprob: -14.048664093017578
    8. 'answer' → logprob: -14.298664093017578
    9. '
' → logprob: -14.923664093017578
    10. 'if' → logprob: -15.298664093017578

Token 1359: 'um' (ID: 394)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8858655691146851
    2. 'umulate' → logprob: -0.8858655691146851
    3. 'um' → logprob: -2.2608656883239746
    4. '=' → logprob: -3.2608656883239746
    5. '   ' → logprob: -4.760865688323975
    6. 'mod' → logprob: -4.885865688323975
    7. 'ans' → logprob: -5.135865688323975
    8. 'umulator' → logprob: -5.635865688323975
    9. 'umul' → logprob: -6.635865688323975
    10. ' +=' → logprob: -6.635865688323975

Token 1360: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.5921506285667419
    2. '   ' → logprob: -1.5921506881713867
    3. 'uler' → logprob: -1.7171506881713867
    4. '+=' → logprob: -3.8421506881713867
    5. 'ule' → logprob: -4.092150688171387
    6. '=' → logprob: -4.592150688171387
    7. 'umulate' → logprob: -5.217150688171387
    8. ' +=' → logprob: -5.467150688171387
    9. 'ulé' → logprob: -7.592150688171387
    10. 'ular' → logprob: -7.717150688171387

Token 1361: ' le' (ID: 505)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ret' → logprob: -1.5581378936767578
    2. ' (' → logprob: -1.6831378936767578
    3. ' ret' → logprob: -1.6831378936767578
    4. 'ret' → logprob: -1.6831378936767578
    5. '(ans' → logprob: -1.6831378936767578
    6. 'ans' → logprob: -4.058137893676758
    7. ' ans' → logprob: -4.433137893676758
    8. '(u' → logprob: -4.808137893676758
    9. '(' → logprob: -5.433137893676758
    10. 'u' → logprob: -6.558137893676758

Token 1362: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7006002068519592
    2. 'ret' → logprob: -1.3256001472473145
    3. '(ans' → logprob: -1.8256001472473145
    4. '(ret' → logprob: -3.2006001472473145
    5. ' (' → logprob: -3.5756001472473145
    6. ' ans' → logprob: -5.3256001472473145
    7. ' ret' → logprob: -5.9506001472473145
    8. '(' → logprob: -7.9506001472473145
    9. '(
' → logprob: -8.450600624084473
    10. 'answer' → logprob: -9.200600624084473

Token 1363: ' en' (ID: 469)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.35173216462135315
    2. '+=' → logprob: -1.8517321348190308
    3. '+' → logprob: -3.1017322540283203
    4. '
' → logprob: -3.7267322540283203
    5. ' ans' → logprob: -3.7267322540283203
    6. ' +=' → logprob: -3.9767322540283203
    7. '   ' → logprob: -4.22673225402832
    8. '(ans' → logprob: -4.97673225402832
    9. '	ans' → logprob: -6.35173225402832
    10. ' +' → logprob: -6.60173225402832

Token 1364: ' prenant' (ID: 140375)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.25674551725387573
    2. 'ans' → logprob: -1.5067455768585205
    3. '(ret' → logprob: -5.506745338439941
    4. 'ret' → logprob: -7.881745338439941
    5. ' (' → logprob: -8.006745338439941
    6. '(' → logprob: -11.006745338439941
    7. ' ans' → logprob: -11.256745338439941
    8. '   ' → logprob: -13.631745338439941
    9. 'answer' → logprob: -14.381745338439941
    10. '```' → logprob: -14.506745338439941

Token 1365: ' soin' (ID: 74600)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3249416649341583
    2. 'ans' → logprob: -1.949941635131836
    3. '(ret' → logprob: -2.574941635131836
    4. ' (' → logprob: -3.699941635131836
    5. 'ret' → logprob: -3.699941635131836
    6. ' ans' → logprob: -5.074941635131836
    7. '(' → logprob: -5.949941635131836
    8. ' ret' → logprob: -7.949941635131836
    9. 'mod' → logprob: -8.949941635131836
    10. '```' → logprob: -9.699941635131836

Token 1366: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4157203435897827
    2. '+=' → logprob: -1.9157203435897827
    3. '%' → logprob: -2.6657204627990723
    4. ' +=' → logprob: -3.2907204627990723
    5. '%=' → logprob: -3.4157204627990723
    6. '   ' → logprob: -3.9157204627990723
    7. '=' → logprob: -4.665720462799072
    8. 'mod' → logprob: -5.040720462799072
    9. ' %=' → logprob: -5.040720462799072
    10. ' of' → logprob: -6.040720462799072

Token 1367: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04399419575929642
    2. '%' → logprob: -4.168994426727295
    3. 'ret' → logprob: -4.168994426727295
    4. 'ans' → logprob: -5.168994426727295
    5. '%=' → logprob: -6.668994426727295
    6. ' %=' → logprob: -6.668994426727295
    7. ' mod' → logprob: -7.043994426727295
    8. ' modulo' → logprob: -7.168994426727295
    9. '```' → logprob: -7.168994426727295
    10. '
' → logprob: -7.543994426727295

Token 1368: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19176241755485535
    2. ' ans' → logprob: -1.8167624473571777
    3. '(ans' → logprob: -4.816762447357178
    4. '   ' → logprob: -6.441762447357178
    5. '=' → logprob: -7.566762447357178
    6. '+=' → logprob: -7.816762447357178
    7. ' =' → logprob: -7.941762447357178
    8. '	ans' → logprob: -7.941762447357178
    9. ' +=' → logprob: -8.31676197052002
    10. '
' → logprob: -9.31676197052002

Token 1369: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05505243316292763
    2. '   ' → logprob: -3.6800525188446045
    3. ' ans' → logprob: -4.430052280426025
    4. '(ans' → logprob: -4.680052280426025
    5. '```' → logprob: -5.055052280426025
    6. '``' → logprob: -7.680052280426025
    7. '	ans' → logprob: -8.555052757263184
    8. '`' → logprob: -10.680052757263184
    9. '    
' → logprob: -10.680052757263184
    10. '_ans' → logprob: -10.805052757263184

Token 1370: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.020831242203712463
    2. ' ans' → logprob: -4.145831108093262
    3. '   ' → logprob: -5.395831108093262
    4. '(ans' → logprob: -8.395831108093262
    5. '	ans' → logprob: -11.895831108093262
    6. '```' → logprob: -12.020831108093262
    7. 'ret' → logprob: -12.270831108093262
    8. 'answer' → logprob: -12.895831108093262
    9. '_ans' → logprob: -13.770831108093262
    10. '
' → logprob: -14.020831108093262

Token 1371: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8286479711532593
    2. '=' → logprob: -1.2036479711532593
    3. '%=' → logprob: -1.8286479711532593
    4. ' +=' → logprob: -2.953648090362549
    5. ' %=' → logprob: -3.703648090362549
    6. ' =' → logprob: -3.703648090362549
    7. ' ^=' → logprob: -7.828648090362549
    8. '   ' → logprob: -7.953648090362549
    9. ')' → logprob: -9.20364761352539
    10. ']+=' → logprob: -9.57864761352539

Token 1372: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0161666851490736
    2. ' (' → logprob: -4.141166687011719
    3. '(' → logprob: -9.016166687011719
    4. '(ret' → logprob: -12.266166687011719
    5. '   ' → logprob: -12.766166687011719
    6. '(acc' → logprob: -14.391166687011719
    7. '(answer' → logprob: -15.141166687011719
    8. '
' → logprob: -15.266166687011719
    9. '(mod' → logprob: -15.391166687011719
    10. '```' → logprob: -15.391166687011719

Token 1373: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0040793512016534805
    2. '(ans' → logprob: -5.504079341888428
    3. ' ans' → logprob: -14.129079818725586
    4. '	ans' → logprob: -16.004079818725586
    5. '_ans' → logprob: -17.629079818725586
    6. '   ' → logprob: -18.629079818725586
    7. 'Ans' → logprob: -19.004079818725586
    8. 'ANS' → logprob: -19.004079818725586
    9. '
' → logprob: -19.879079818725586
    10. 'answer' → logprob: -20.004079818725586

Token 1374: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197138875722885
    2. '+' → logprob: -2.811971426010132
    3. ' -' → logprob: -12.811971664428711
    4. ' ' → logprob: -15.311971664428711
    5. ' ans' → logprob: -15.311971664428711
    6. ' plus' → logprob: -15.436971664428711
    7. ' +
' → logprob: -16.18697166442871
    8. '
' → logprob: -16.68697166442871
    9. ' ' → logprob: -16.93697166442871
    10. '(ans' → logprob: -16.93697166442871

Token 1375: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0009194392478093505
    2. '(ret' → logprob: -7.625919342041016
    3. ' ret' → logprob: -7.750919342041016
    4. ' (' → logprob: -14.625919342041016
    5. 'rets' → logprob: -15.875919342041016
    6. '$ret' → logprob: -16.125919342041016
    7. '	ret' → logprob: -16.250919342041016
    8. '   ' → logprob: -16.625919342041016
    9. '(' → logprob: -17.000919342041016
    10. 'rett' → logprob: -17.125919342041016

Token 1376: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014432109892368317
    2. ' )' → logprob: -6.626443386077881
    3. ')%' → logprob: -9.626442909240723
    4. '%' → logprob: -10.001442909240723
    5. ' %' → logprob: -12.126442909240723
    6. ' ' → logprob: -15.501442909240723
    7. '+' → logprob: -16.25144386291504
    8. ')
' → logprob: -17.25144386291504
    9. '`)' → logprob: -17.25144386291504
    10. '%)' → logprob: -17.37644386291504

Token 1377: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.089018315076828
    2. '%' → logprob: -2.4640183448791504
    3. ')' → logprob: -10.089017868041992
    4. ')%' → logprob: -12.089017868041992
    5. '%n' → logprob: -12.214017868041992
    6. ' %=' → logprob: -12.214017868041992
    7. '<|end|>' → logprob: -12.214017868041992
    8. ' ' → logprob: -12.589017868041992
    9. ' %#' → logprob: -12.589017868041992
    10. '%A' → logprob: -13.589017868041992

Token 1378: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -16.75
    3. '(mod' → logprob: -19.5
    4. '	mod' → logprob: -23.375
    5. 'MOD' → logprob: -24.625
    6. '```' → logprob: -25.625
    7. '_mod' → logprob: -25.875
    8. ' мод' → logprob: -26.125
    9. '
' → logprob: -26.25
    10. 'moder' → logprob: -26.75

Token 1379: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2723335027694702
    2. '<|end|>' → logprob: -1.8973335027694702
    3. '\n' → logprob: -2.7723336219787598
    4. ')' → logprob: -4.64733362197876
    5. '```' → logprob: -5.27233362197876
    6. '\' → logprob: -5.39733362197876
    7. '+' → logprob: -5.64733362197876
    8. ' ' → logprob: -7.64733362197876
    9. '' → logprob: -7.89733362197876
    10. '#' → logprob: -8.147333145141602

Token 1380: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3950188159942627
    2. '
' → logprob: -1.5200188159942627
    3. '<|end|>' → logprob: -2.3950188159942627
    4. ')' → logprob: -4.770018577575684
    5. '#' → logprob: -5.520018577575684
    6. '```' → logprob: -5.770018577575684
    7. 'return' → logprob: -7.895018577575684
    8. '\n' → logprob: -8.770018577575684
    9. '#print' → logprob: -9.270018577575684
    10. '
' → logprob: -10.145018577575684

Token 1381: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'pr' → logprob: -17.375
    3. ' print' → logprob: -18.75
    4. 'prin' → logprob: -19.125
    5. '#print' → logprob: -20.75
    6. '
' → logprob: -20.75
    7. 'ans' → logprob: -21.5
    8. 'printf' → logprob: -21.625
    9. 'prit' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 1382: ' corr' (ID: 16963)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. 'pr' → logprob: -12.750003814697266
    3. ' print' → logprob: -14.500003814697266
    4. 'prin' → logprob: -15.750003814697266
    5. '#print' → logprob: -15.750003814697266
    6. 'pri' → logprob: -17.500003814697266
    7. 'prit' → logprob: -17.750003814697266
    8. 'return' → logprob: -17.750003814697266
    9. '
' → logprob: -18.375003814697266
    10. 'printf' → logprob: -18.500003814697266

Token 1383: 'ige' (ID: 2609)
  Prédit: 'ige'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ige' → logprob: -5.438573680294212e-06
    2. 'et' → logprob: -13.750005722045898
    3. 'ig' → logprob: -13.750005722045898
    4. 'iger' → logprob: -14.750005722045898
    5. '_' → logprob: -15.000005722045898
    6. 'ect' → logprob: -15.375005722045898
    7. 't' → logprob: -15.375005722045898
    8. 'e' → logprob: -15.375005722045898
    9. '\' → logprob: -15.500005722045898
    10. 'ète' → logprob: -15.625005722045898

Token 1384: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0029464401304721832
    2. '(ans' → logprob: -6.002946376800537
    3. ' ans' → logprob: -8.127946853637695
    4. '*' → logprob: -9.252946853637695
    5. 'for' → logprob: -10.627946853637695
    6. '
' → logprob: -10.877946853637695
    7. '	ans' → logprob: -11.877946853637695
    8. ')' → logprob: -12.127946853637695
    9. '```' → logprob: -12.127946853637695
    10. ' (' → logprob: -12.627946853637695

Token 1385: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5626035928726196
    2. '+' → logprob: -1.5626035928726196
    3. ')' → logprob: -1.6876035928726196
    4. '\n' → logprob: -4.43760347366333
    5. '*' → logprob: -5.18760347366333
    6. ' ans' → logprob: -5.31260347366333
    7. '(ans' → logprob: -5.81260347366333
    8. ')
' → logprob: -6.56260347366333
    9. '
' → logprob: -6.68760347366333
    10. '1' → logprob: -6.81260347366333

Token 1386: ' en' (ID: 469)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002075933152809739
    2. '(ans' → logprob: -9.375207901000977
    3. '
' → logprob: -10.250207901000977
    4. ' ans' → logprob: -10.375207901000977
    5. 'for' → logprob: -10.875207901000977
    6. '```' → logprob: -11.500207901000977
    7. '-' → logprob: -11.625207901000977
    8. '#' → logprob: -12.375207901000977
    9. '	ans' → logprob: -12.500207901000977
    10. '1' → logprob: -13.500207901000977

Token 1387: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9788503646850586
    2. 'print' → logprob: -1.3538503646850586
    3. 'ans' → logprob: -1.8538503646850586
    4. '(' → logprob: -1.9788503646850586
    5. '*' → logprob: -3.1038503646850586
    6. '(ans' → logprob: -4.103850364685059
    7. '```' → logprob: -5.853850364685059
    8. '1' → logprob: -5.978850364685059
    9. 'multip' → logprob: -7.103850364685059
    10. ')' → logprob: -7.603850364685059

Token 1388: ' divis' (ID: 37826)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.42852655053138733
    2. 'ans' → logprob: -1.678526520729065
    3. 'print' → logprob: -1.928526520729065
    4. '(' → logprob: -4.803526401519775
    5. 'multip' → logprob: -5.553526401519775
    6. 'mul' → logprob: -6.803526401519775
    7. '#' → logprob: -7.178526401519775
    8. '```' → logprob: -7.428526401519775
    9. 'final' → logprob: -8.053526878356934
    10. 'mult' → logprob: -8.428526878356934

Token 1389: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.006680559832602739
    2. 'isant' → logprob: -5.131680488586426
    3. '```' → logprob: -8.131680488586426
    4. 'id' → logprob: -8.881680488586426
    5. '(' → logprob: -9.256680488586426
    6. '#' → logprob: -10.631680488586426
    7. '2' → logprob: -10.881680488586426
    8. 'ont' → logprob: -10.881680488586426
    9. '(mod' → logprob: -10.881680488586426
    10. '=' → logprob: -11.256680488586426

Token 1390: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.865812361240387
    2. 'ans' → logprob: -0.990812361240387
    3. ' by' → logprob: -2.615812301635742
    4. '(ans' → logprob: -3.240812301635742
    5. ' par' → logprob: -3.490812301635742
    6. 'by' → logprob: -3.865812301635742
    7. ' ans' → logprob: -4.240812301635742
    8. 'pow' → logprob: -4.740812301635742
    9. 'par' → logprob: -4.990812301635742
    10. ' *' → logprob: -5.865812301635742

Token 1391: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001979378139367327
    2. 'pow' → logprob: -9.000198364257812
    3. 'n' → logprob: -9.750198364257812
    4. '(' → logprob: -11.500198364257812
    5. ' ' → logprob: -13.125198364257812
    6. '
' → logprob: -13.500198364257812
    7. '(n' → logprob: -14.000198364257812
    8. '```' → logprob: -14.625198364257812
    9. '1' → logprob: -15.125198364257812
    10. '(pow' → logprob: -15.625198364257812

Token 1392: ' nombre' (ID: 9733)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -6.599403423024341e-05
    2. 'pow' → logprob: -9.875065803527832
    3. 'n' → logprob: -12.250065803527832
    4. '
' → logprob: -12.375065803527832
    5. '(' → logprob: -12.625065803527832
    6. ' ' → logprob: -13.625065803527832
    7. '4' → logprob: -15.250065803527832
    8. '1' → logprob: -15.750065803527832
    9. '```' → logprob: -15.875065803527832
    10. '２' → logprob: -16.25006675720215

Token 1393: ' total' (ID: 3609)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25503647327423096
    2. '(n' → logprob: -2.2550363540649414
    3. '**' → logprob: -4.005036354064941
    4. '(' → logprob: -4.130036354064941
    5. 'n' → logprob: -4.130036354064941
    6. 'u' → logprob: -4.755036354064941
    7. '*' → logprob: -4.880036354064941
    8. '
' → logprob: -5.255036354064941
    9. '```' → logprob: -5.255036354064941
    10. ' ' → logprob: -5.505036354064941

Token 1394: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5340535044670105
    2. ' *' → logprob: -1.6590535640716553
    3. '2' → logprob: -3.0340535640716553
    4. '(n' → logprob: -3.1590535640716553
    5. 'n' → logprob: -3.2840535640716553
    6. '*(' → logprob: -4.409053325653076
    7. 'ans' → logprob: -4.659053325653076
    8. ' n' → logprob: -4.659053325653076
    9. '+' → logprob: -4.659053325653076
    10. ' of' → logprob: -4.784053325653076

Token 1395: ' sous' (ID: 14487)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3330921232700348
    2. 'pow' → logprob: -1.7080920934677124
    3. '(' → logprob: -2.333092212677002
    4. '```' → logprob: -6.583092212677002
    5. '1' → logprob: -7.083092212677002
    6. '(pow' → logprob: -7.208092212677002
    7. 'n' → logprob: -7.958092212677002
    8. 'de' → logprob: -8.458091735839844
    9. '((' → logprob: -8.833091735839844
    10. 't' → logprob: -8.958091735839844

Token 1396: '-' (ID: 12)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.004501923453062773
    2. 'ensemble' → logprob: -6.004501819610596
    3. 'sets' → logprob: -7.379501819610596
    4. '
' → logprob: -8.004502296447754
    5. '```' → logprob: -8.629502296447754
    6. '\' → logprob: -9.004502296447754
    7. '   ' → logprob: -9.004502296447754
    8. '-' → logprob: -9.004502296447754
    9. 'ets' → logprob: -9.754502296447754
    10. '_' → logprob: -10.004502296447754

Token 1397: 'ense' (ID: 1603)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003349890175741166
    2. ' ' → logprob: -8.875334739685059
    3. '(' → logprob: -9.500334739685059
    4. 'pow' → logprob: -9.625334739685059
    5. '1' → logprob: -11.375334739685059
    6. 's' → logprob: -11.875334739685059
    7. '```' → logprob: -12.125334739685059
    8. '`' → logprob: -12.250334739685059
    9. 'n' → logprob: -12.500334739685059
    10. '_' → logprob: -12.750334739685059

Token 1398: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.030351081863045692
    2. 't' → logprob: -3.530351161956787
    3. 'mbles' → logprob: -7.530351161956787
    4. 'uts' → logprob: -11.030350685119629
    5. 'mb' → logprob: -11.280350685119629
    6. 'mble' → logprob: -11.530350685119629
    7. 'tb' → logprob: -12.780350685119629
    8. 'ttes' → logprob: -12.905350685119629
    9. 'aux' → logprob: -12.905350685119629
    10. 'ux' → logprob: -13.030350685119629

Token 1399: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.32559335231781006
    2. '2' → logprob: -1.95059335231781
    3. '**' → logprob: -3.2005934715270996
    4. '_' → logprob: -3.7005934715270996
    5. '(' → logprob: -3.8255934715270996
    6. 'n' → logprob: -4.9505934715271
    7. '*' → logprob: -4.9505934715271
    8. ',' → logprob: -5.0755934715271
    9. '(pow' → logprob: -5.9505934715271
    10. '[' → logprob: -5.9505934715271

Token 1400: 'hors' (ID: 70144)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0018321344396099448
    2. ' pow' → logprob: -7.126832008361816
    3. '(' → logprob: -7.376832008361816
    4. '2' → logprob: -8.126832008361816
    5. '(pow' → logprob: -9.876832008361816
    6. ' (' → logprob: -10.501832008361816
    7. ')' → logprob: -11.126832008361816
    8. '   ' → logprob: -12.501832008361816
    9. '
' → logprob: -13.126832008361816
    10. 'p' → logprob: -13.251832008361816

Token 1401: ' vide' (ID: 21835)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05931008979678154
    2. '=' → logprob: -4.309309959411621
    3. 'un' → logprob: -4.684309959411621
    4. '2' → logprob: -5.184309959411621
    5. 'le' → logprob: -5.184309959411621
    6. 'pow' → logprob: -5.559309959411621
    7. '0' → logprob: -5.684309959411621
    8. '(' → logprob: -5.684309959411621
    9. 'mod' → logprob: -6.434309959411621
    10. '`' → logprob: -6.684309959411621

Token 1402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6836512684822083
    2. '+' → logprob: -0.8086512684822083
    3. ' +' → logprob: -3.3086512088775635
    4. '**' → logprob: -5.933651447296143
    5. '   ' → logprob: -6.058651447296143
    6. '-' → logprob: -6.433651447296143
    7. '2' → logprob: -6.808651447296143
    8. ' )' → logprob: -7.058651447296143
    9. ' -' → logprob: -7.183651447296143
    10. ',' → logprob: -7.558651447296143

Token 1403: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04588544741272926
    2. 'pow' → logprob: -3.2958855628967285
    3. '*' → logprob: -5.6708855628967285
    4. 'print' → logprob: -6.6708855628967285
    5. '(ans' → logprob: -7.4208855628967285
    6. '*
' → logprob: -7.7958855628967285
    7. '/' → logprob: -7.9208855628967285
    8. '2' → logprob: -8.04588508605957
    9. '`' → logprob: -8.54588508605957
    10. '(' → logprob: -8.54588508605957

Token 1404: ' Cela' (ID: 44403)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.30535709857940674
    2. ')' → logprob: -2.305356979370117
    3. 'pow' → logprob: -2.430356979370117
    4. 'print' → logprob: -3.430356979370117
    5. '(' → logprob: -3.680356979370117
    6. '*' → logprob: -5.555356979370117
    7. '\' → logprob: -6.305356979370117
    8. '(ans' → logprob: -6.305356979370117
    9. 'inv' → logprob: -6.430356979370117
    10. '**' → logprob: -6.680356979370117

Token 1405: ' correspond' (ID: 11095)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0038050413131714
    2. '=' → logprob: -1.0038050413131714
    3. '%' → logprob: -1.7538050413131714
    4. ' =' → logprob: -3.753805160522461
    5. '#' → logprob: -4.003805160522461
    6. 'ans' → logprob: -4.253805160522461
    7. '*' → logprob: -4.753805160522461
    8. '
' → logprob: -5.128805160522461
    9. ' %=' → logprob: -5.878805160522461
    10. '+' → logprob: -6.003805160522461

Token 1406: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2829978466033936
    2. ' to' → logprob: -1.5329978466033936
    3. ' à' → logprob: -1.5329978466033936
    4. ')' → logprob: -1.6579978466033936
    5. 'to' → logprob: -3.9079978466033936
    6. ' au' → logprob: -4.032998085021973
    7. 'à' → logprob: -4.282998085021973
    8. '   ' → logprob: -4.407998085021973
    9. ' =' → logprob: -4.532998085021973
    10. ',' → logprob: -5.407998085021973

Token 1407: ' une' (ID: 2463)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0024968255311250687
    2. '(pow' → logprob: -6.502496719360352
    3. 'print' → logprob: -7.502496719360352
    4. 'n' → logprob: -9.127496719360352
    5. '2' → logprob: -9.127496719360352
    6. 'ans' → logprob: -9.752496719360352
    7. 'inv' → logprob: -9.877496719360352
    8. '(' → logprob: -10.127496719360352
    9. '(n' → logprob: -10.377496719360352
    10. ' pow' → logprob: -10.752496719360352

Token 1408: ' multiplication' (ID: 86340)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.16313861310482025
    2. '#' → logprob: -3.0381386280059814
    3. ')' → logprob: -3.0381386280059814
    4. '*' → logprob: -4.913138389587402
    5. ' pow' → logprob: -5.163138389587402
    6. 'inv' → logprob: -5.288138389587402
    7. '2' → logprob: -5.538138389587402
    8. 'multip' → logprob: -5.538138389587402
    9. '**' → logprob: -5.663138389587402
    10. 'n' → logprob: -5.788138389587402

Token 1409: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03226573020219803
    2. '   ' → logprob: -4.407265663146973
    3. 'pow' → logprob: -4.407265663146973
    4. ' *' → logprob: -6.157265663146973
    5. ' pow' → logprob: -6.657265663146973
    6. 'ans' → logprob: -6.907265663146973
    7. '(pow' → logprob: -7.407265663146973
    8. ' by' → logprob: -7.782265663146973
    9. '*
' → logprob: -7.907265663146973
    10. '*=' → logprob: -8.032265663146973

Token 1410: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.8590300139039755e-05
    2. '(pow' → logprob: -10.750048637390137
    3. ' pow' → logprob: -11.000048637390137
    4. 'inv' → logprob: -12.875048637390137
    5. '   ' → logprob: -13.125048637390137
    6. 'p' → logprob: -13.625048637390137
    7. '```' → logprob: -14.375048637390137
    8. '2' → logprob: -14.625048637390137
    9. '499' → logprob: -14.750048637390137
    10. '`' → logprob: -15.125048637390137

Token 1411: ''in' (ID: 17942)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.017432430759072304
    2. ' pow' → logprob: -4.89243221282959
    3. '(pow' → logprob: -5.01743221282959
    4. '2' → logprob: -7.26743221282959
    5. 'ow' → logprob: -7.51743221282959
    6. 'inv' → logprob: -7.76743221282959
    7. '1' → logprob: -8.51743221282959
    8. 'p' → logprob: -9.01743221282959
    9. 'erm' → logprob: -9.14243221282959
    10. '_pow' → logprob: -9.39243221282959

Token 1412: 'verse' (ID: 7093)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.17198050022125244
    2. 'pow' → logprob: -2.546980381011963
    3. 'verse' → logprob: -2.546980381011963
    4. '(pow' → logprob: -7.671980381011963
    5. '2' → logprob: -8.046980857849121
    6. 'ver' → logprob: -9.046980857849121
    7. '1' → logprob: -9.546980857849121
    8. 'vers' → logprob: -9.796980857849121
    9. 'vert' → logprob: -10.046980857849121
    10. '```' → logprob: -10.671980857849121

Token 1413: ' mod' (ID: 1812)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9532288312911987
    2. '2' → logprob: -1.4532288312911987
    3. 'mod' → logprob: -1.9532288312911987
    4. '(' → logprob: -2.0782289505004883
    5. '(pow' → logprob: -2.8282289505004883
    6. '`' → logprob: -4.578228950500488
    7. ' (' → logprob: -4.828228950500488
    8. ' pow' → logprob: -4.828228950500488
    9. '(
' → logprob: -5.203228950500488
    10. ')' → logprob: -5.828228950500488

Token 1414: 'ulaire' (ID: 48584)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5004880428314209
    2. 'ulo' → logprob: -1.500488042831421
    3. 'inv' → logprob: -2.500488042831421
    4. 'ular' → logprob: -3.375488042831421
    5. 'mod' → logprob: -3.875488042831421
    6. 'ulaire' → logprob: -4.75048828125
    7. ' (' → logprob: -5.00048828125
    8. ' pow' → logprob: -5.75048828125
    9. '(mod' → logprob: -6.37548828125
    10. ' mod' → logprob: -6.37548828125

Token 1415: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27913564443588257
    2. 'pow' → logprob: -1.7791357040405273
    3. '*' → logprob: -2.9041357040405273
    4. '(pow' → logprob: -4.404135704040527
    5. '(
' → logprob: -5.654135704040527
    6. '2' → logprob: -7.029135704040527
    7. ')' → logprob: -7.279135704040527
    8. 'p' → logprob: -7.529135704040527
    9. ' (' → logprob: -7.654135704040527
    10. '`' → logprob: -8.279135704040527

Token 1416: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3559541702270508
    2. '(pow' → logprob: -1.2309541702270508
    3. '(' → logprob: -4.980954170227051
    4. '((' → logprob: -8.35595417022705
    5. '2' → logprob: -9.23095417022705
    6. '100' → logprob: -9.98095417022705
    7. '```' → logprob: -10.73095417022705
    8. '(p' → logprob: -10.73095417022705
    9. ' pow' → logprob: -10.85595417022705
    10. '499' → logprob: -10.98095417022705

Token 1417: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003613497130572796
    2. 'pow' → logprob: -6.003613471984863
    3. '[' → logprob: -7.253613471984863
    4. '(' → logprob: -8.003613471984863
    5. '(pow' → logprob: -10.128613471984863
    6. '`' → logprob: -10.753613471984863
    7. '```' → logprob: -11.628613471984863
    8. '\[' → logprob: -12.378613471984863
    9. '
' → logprob: -12.503613471984863
    10. '₂' → logprob: -13.316113471984863

Token 1418: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.14048266410827637
    2. 'pow' → logprob: -2.6404826641082764
    3. '[' → logprob: -3.3904826641082764
    4. '(pow' → logprob: -4.2654829025268555
    5. '[(' → logprob: -5.6404829025268555
    6. '[p' → logprob: -5.6404829025268555
    7. '[
' → logprob: -6.5154829025268555
    8. '(n' → logprob: -6.5154829025268555
    9. '   ' → logprob: -7.1404829025268555
    10. '\[' → logprob: -8.265482902526855

Token 1419: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1747904121875763
    2. ')' → logprob: -2.174790382385254
    3. '])' → logprob: -3.549790382385254
    4. '[n' → logprob: -4.924790382385254
    5. 'pow' → logprob: -5.424790382385254
    6. '   ' → logprob: -6.549790382385254
    7. ',' → logprob: -6.924790382385254
    8. '*' → logprob: -7.424790382385254
    9. '**' → logprob: -7.424790382385254
    10. ' ]' → logprob: -7.549790382385254

Token 1420: ' (' (ID: 350)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02767811343073845
    2. 'pow' → logprob: -3.7776780128479004
    3. ' *' → logprob: -6.1526780128479
    4. '*
' → logprob: -7.0276780128479
    5. ' pow' → logprob: -8.152678489685059
    6. '(pow' → logprob: -8.152678489685059
    7. '**' → logprob: -8.527678489685059
    8. ')' → logprob: -9.027678489685059
    9. '*(' → logprob: -9.402678489685059
    10. ',' → logprob: -9.402678489685059

Token 1421: 'nombre' (ID: 28576)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.033229049295186996
    2. ' pow' → logprob: -4.033228874206543
    3. '(pow' → logprob: -5.158228874206543
    4. ')' → logprob: -5.658228874206543
    5. '2' → logprob: -6.033228874206543
    6. '(' → logprob: -6.533228874206543
    7. '*' → logprob: -7.283228874206543
    8. ' (' → logprob: -7.408228874206543
    9. ' *' → logprob: -9.658228874206543
    10. '   ' → logprob: -10.033228874206543

Token 1422: ' total' (ID: 3609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8295549750328064
    2. '-' → logprob: -1.5795550346374512
    3. 'pow' → logprob: -1.8295550346374512
    4. '(
' → logprob: -3.579555034637451
    5. '(pow' → logprob: -3.579555034637451
    6. '*' → logprob: -3.829555034637451
    7. ' -' → logprob: -3.954555034637451
    8. ')' → logprob: -4.329555034637451
    9. ' (' → logprob: -4.454555034637451
    10. '2' → logprob: -4.454555034637451

Token 1423: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1380460262298584
    2. '*' → logprob: -1.6380460262298584
    3. ' *' → logprob: -2.1380460262298584
    4. '2' → logprob: -2.3880460262298584
    5. ')' → logprob: -2.5130460262298584
    6. 'pow' → logprob: -2.8880460262298584
    7. '-' → logprob: -3.3880460262298584
    8. '   ' → logprob: -3.6380460262298584
    9. '(pow' → logprob: -3.8880460262298584
    10. ' -' → logprob: -4.1380462646484375

Token 1424: ' sous' (ID: 14487)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10918591171503067
    2. '(' → logprob: -2.7341859340667725
    3. '-' → logprob: -3.6091859340667725
    4. '1' → logprob: -5.109185695648193
    5. ' ' → logprob: -6.609185695648193
    6. '(-' → logprob: -6.984185695648193
    7. ' (' → logprob: -6.984185695648193
    8. ' -' → logprob: -7.234185695648193
    9. 'pow' → logprob: -7.734185695648193
    10. '```' → logprob: -8.109186172485352

Token 1425: '-' (ID: 12)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004735207185149193
    2. '(' → logprob: -6.129734992980957
    3. 'pow' → logprob: -7.629734992980957
    4. '_' → logprob: -7.879734992980957
    5. ')' → logprob: -8.129734992980957
    6. '`' → logprob: -8.379734992980957
    7. '-' → logprob: -8.754734992980957
    8. ']' → logprob: -9.129734992980957
    9. 'inv' → logprob: -9.629734992980957
    10. ' ' → logprob: -9.629734992980957

Token 1426: 'ense' (ID: 1603)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4773843288421631
    2. '1' → logprob: -0.9773843288421631
    3. '(' → logprob: -5.977384567260742
    4. '```' → logprob: -8.352384567260742
    5. '{' → logprob: -8.477384567260742
    6. 'pow' → logprob: -9.477384567260742
    7. '-' → logprob: -10.477384567260742
    8. '(-' → logprob: -10.602384567260742
    9. '`' → logprob: -10.602384567260742
    10. 'sub' → logprob: -10.852384567260742

Token 1427: 'mbles' (ID: 60383)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08971641957759857
    2. 'ts' → logprob: -2.4647164344787598
    3. '+' → logprob: -8.464715957641602
    4. 'r' → logprob: -9.089715957641602
    5. '```' → logprob: -9.214715957641602
    6. ')' → logprob: -9.589715957641602
    7. '()' → logprob: -10.339715957641602
    8. 'q' → logprob: -10.589715957641602
    9. '**' → logprob: -10.589715957641602
    10. '}' → logprob: -10.839715957641602

Token 1428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3199591338634491
    2. '*' → logprob: -2.5699591636657715
    3. ' *' → logprob: -3.1949591636657715
    4. '**' → logprob: -3.3199591636657715
    5. '   ' → logprob: -3.4449591636657715
    6. ']' → logprob: -4.0699591636657715
    7. ')
' → logprob: -4.1949591636657715
    8. '[' → logprob: -4.4449591636657715
    9. '-' → logprob: -5.3199591636657715
    10. ',' → logprob: -5.4449591636657715

Token 1429: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00017970333283301443
    2. '(ans' → logprob: -10.125179290771484
    3. 'print' → logprob: -10.250179290771484
    4. '*' → logprob: -10.875179290771484
    5. '```' → logprob: -11.000179290771484
    6. '\' → logprob: -11.000179290771484
    7. 'answer' → logprob: -11.750179290771484
    8. 'pow' → logprob: -11.750179290771484
    9. '
' → logprob: -12.125179290771484
    10. '`' → logprob: -12.250179290771484

Token 1430: ' La' (ID: 3038)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004466793034225702
    2. 'print' → logprob: -5.504467010498047
    3. 'inv' → logprob: -8.004467010498047
    4. 'answer' → logprob: -10.879467010498047
    5. 'pow' → logprob: -11.504467010498047
    6. 'inverse' → logprob: -11.504467010498047
    7. '(ans' → logprob: -12.129467010498047
    8. ' ans' → logprob: -12.879467010498047
    9. '```' → logprob: -13.254467010498047
    10. 'result' → logprob: -14.004467010498047

Token 1431: ' formule' (ID: 84316)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.24113281071186066
    2. 'inv' → logprob: -2.2411327362060547
    3. 'def' → logprob: -3.6161327362060547
    4. '#' → logprob: -3.8661327362060547
    5. 'pow' → logprob: -4.241132736206055
    6. 'answer' → logprob: -4.241132736206055
    7. 'inverse' → logprob: -4.491132736206055
    8. ' ans' → logprob: -4.991132736206055
    9. 'return' → logprob: -5.991132736206055
    10. ' inv' → logprob: -6.366132736206055

Token 1432: ' pow' (ID: 9779)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32159432768821716
    2. ' =' → logprob: -1.4465943574905396
    3. 'ans' → logprob: -3.32159423828125
    4. '   ' → logprob: -6.94659423828125
    5. ' ans' → logprob: -7.07159423828125
    6. '(ans' → logprob: -7.32159423828125
    7. '_ans' → logprob: -7.94659423828125
    8. '=
' → logprob: -9.07159423828125
    9. 'pow' → logprob: -9.19659423828125
    10. '#' → logprob: -9.94659423828125

Token 1433: '(pow' (ID: 189160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7348065376281738
    2. '2' → logprob: -0.8598065376281738
    3. 'pow' → logprob: -2.484806537628174
    4. '(pow' → logprob: -4.609806537628174
    5. 'mod' → logprob: -5.984806537628174
    6. 'erm' → logprob: -7.609806537628174
    7. '_pow' → logprob: -9.359806060791016
    8. '```' → logprob: -9.484806060791016
    9. ' pow' → logprob: -9.734806060791016
    10. '(-' → logprob: -9.734806060791016

Token 1434: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02345184236764908
    2. '(' → logprob: -3.773451805114746
    3. 'pow' → logprob: -9.398451805114746
    4. '
' → logprob: -10.023451805114746
    5. '(pow' → logprob: -10.023451805114746
    6. '```' → logprob: -11.773451805114746
    7. '   ' → logprob: -12.398451805114746
    8. '[' → logprob: -12.398451805114746
    9. ' (' → logprob: -12.398451805114746
    10. '(n' → logprob: -13.023451805114746

Token 1435: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0001342903997283429
    2. '[' → logprob: -9.750134468078613
    3. ' [' → logprob: -10.375134468078613
    4. '(n' → logprob: -11.250134468078613
    5. 'n' → logprob: -11.625134468078613
    6. '\[' → logprob: -12.250134468078613
    7. '   ' → logprob: -12.875134468078613
    8. '
' → logprob: -13.000134468078613
    9. '```' → logprob: -13.000134468078613
    10. ',n' → logprob: -13.125134468078613

Token 1436: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08529866486787796
    2. ',n' → logprob: -3.085298776626587
    3. '[n' → logprob: -3.335298776626587
    4. ' ,' → logprob: -8.335298538208008
    5. ',-' → logprob: -9.585298538208008
    6. ',[' → logprob: -10.460298538208008
    7. '[' → logprob: -10.835298538208008
    8. '[-' → logprob: -10.960298538208008
    9. '```' → logprob: -11.585298538208008
    10. '-' → logprob: -11.585298538208008

Token 1437: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002479886752553284
    2. '-' → logprob: -8.500247955322266
    3. ' mod' → logprob: -10.125247955322266
    4. '(mod' → logprob: -13.250247955322266
    5. '-mod' → logprob: -13.250247955322266
    6. '.mod' → logprob: -15.000247955322266
    7. '
' → logprob: -15.625247955322266
    8. '	mod' → logprob: -15.875247955322266
    9. ' -' → logprob: -16.500247955322266
    10. '_mod' → logprob: -16.875247955322266

Token 1438: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007101670489646494
    2. ' -' → logprob: -7.2507100105285645
    3. '
' → logprob: -16.125709533691406
    4. ',' → logprob: -16.500709533691406
    5. '-
' → logprob: -17.250709533691406
    6. '   ' → logprob: -17.250709533691406
    7. '```' → logprob: -17.625709533691406
    8. ' ' → logprob: -18.125709533691406
    9. ')' → logprob: -18.125709533691406
    10. '−' → logprob: -19.375709533691406

Token 1439: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '
' → logprob: -15.875004768371582
    4. '-' → logprob: -16.000003814697266
    5. '1' → logprob: -16.250003814697266
    6. '```' → logprob: -16.250003814697266
    7. ' -' → logprob: -16.875003814697266
    8. '２' → logprob: -17.437503814697266
    9. '۲' → logprob: -17.687503814697266
    10. '   ' → logprob: -17.812503814697266

Token 1440: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4498052223643754e-05
    2. '-' → logprob: -12.000014305114746
    3. '1' → logprob: -12.250014305114746
    4. ' ' → logprob: -13.250014305114746
    5. ' -' → logprob: -14.625014305114746
    6. '```' → logprob: -15.062514305114746
    7. '
' → logprob: -15.562514305114746
    8. '２' → logprob: -16.250015258789062
    9. '3' → logprob: -16.375015258789062
    10. '۲' → logprob: -16.500015258789062

Token 1441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030041348189115524
    2. ')' → logprob: -3.530041456222534
    3. ' ,' → logprob: -8.780041694641113
    4. '   ' → logprob: -9.905041694641113
    5. '**' → logprob: -10.405041694641113
    6. ' )' → logprob: -11.155041694641113
    7. '[' → logprob: -11.905041694641113
    8. '(' → logprob: -12.405041694641113
    9. '-' → logprob: -12.780041694641113
    10. ',
' → logprob: -12.905041694641113

Token 1442: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0022755081299692392
    2. ' mod' → logprob: -6.377275466918945
    3. ')' → logprob: -7.627275466918945
    4. 'pow' → logprob: -9.502275466918945
    5. '(mod' → logprob: -12.252275466918945
    6. '2' → logprob: -12.627275466918945
    7. '	mod' → logprob: -13.877275466918945
    8. ' )' → logprob: -14.252275466918945
    9. ' ' → logprob: -14.627275466918945
    10. '   ' → logprob: -15.002275466918945

Token 1443: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013786651834379882
    2. '))' → logprob: -9.750138282775879
    3. ')`' → logprob: -10.375138282775879
    4. ' )' → logprob: -11.125138282775879
    5. ',' → logprob: -11.750138282775879
    6. '   ' → logprob: -12.000138282775879
    7. ')
' → logprob: -12.125138282775879
    8. ')**' → logprob: -12.375138282775879
    9. '**' → logprob: -13.125138282775879
    10. '')' → logprob: -13.125138282775879

Token 1444: ' donne' (ID: 30004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012879748828709126
    2. '**' → logprob: -7.751287937164307
    3. '()' → logprob: -8.376288414001465
    4. ')**' → logprob: -8.751288414001465
    5. ' )' → logprob: -9.126288414001465
    6. ')
' → logprob: -9.501288414001465
    7. ']' → logprob: -10.001288414001465
    8. '   ' → logprob: -10.251288414001465
    9. '(ans' → logprob: -10.751288414001465
    10. '))' → logprob: -10.751288414001465

Token 1445: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9202125072479248
    2. 'l' → logprob: -1.0452125072479248
    3. 'pow' → logprob: -1.4202125072479248
    4. 'the' → logprob: -5.670212745666504
    5. 'le' → logprob: -6.170212745666504
    6. '(pow' → logprob: -6.920212745666504
    7. '2' → logprob: -7.545212745666504
    8. ')' → logprob: -8.420212745666504
    9. '```' → logprob: -8.670212745666504
    10. 'ans' → logprob: -8.795212745666504

Token 1446: ''in' (ID: 17942)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.39811983704566956
    2. 'inverse' → logprob: -1.2731198072433472
    3. 'a' → logprob: -4.273119926452637
    4. ' inverse' → logprob: -4.523119926452637
    5. ' pow' → logprob: -4.648119926452637
    6. 'e' → logprob: -5.523119926452637
    7. '(pow' → logprob: -5.648119926452637
    8. ''in' → logprob: -5.773119926452637
    9. '_inverse' → logprob: -7.648119926452637
    10. ')' → logprob: -7.773119926452637

Token 1447: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -1.1994775377388578e-05
    2. 'v' → logprob: -12.000012397766113
    3. '```' → logprob: -13.500012397766113
    4. 'VERSE' → logprob: -14.000012397766113
    5. 'inverse' → logprob: -14.000012397766113
    6. '[' → logprob: -14.375012397766113
    7. 'version' → logprob: -14.500012397766113
    8. 't' → logprob: -14.625012397766113
    9. '1' → logprob: -15.750012397766113
    10. 'pow' → logprob: -15.875012397766113

Token 1448: ' mod' (ID: 1812)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10644486546516418
    2. ')' → logprob: -2.606444835662842
    3. '(
' → logprob: -4.231444835662842
    4. '(pow' → logprob: -4.981444835662842
    5. '**' → logprob: -6.606444835662842
    6. 'pow' → logprob: -6.731444835662842
    7. '_' → logprob: -7.231444835662842
    8. ']' → logprob: -7.356444835662842
    9. '#' → logprob: -8.4814453125
    10. '*' → logprob: -8.8564453125

Token 1449: 'ulaire' (ID: 48584)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49773669242858887
    2. '2' → logprob: -1.4977366924285889
    3. '(' → logprob: -2.872736692428589
    4. '_' → logprob: -3.497736692428589
    5. 'pow' → logprob: -3.872736692428589
    6. '(n' → logprob: -4.497736930847168
    7. ']' → logprob: -4.622736930847168
    8. '[' → logprob: -4.997736930847168
    9. '=' → logprob: -5.372736930847168
    10. '**' → logprob: -5.372736930847168

Token 1450: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13571752607822418
    2. '(' → logprob: -2.2607176303863525
    3. '*' → logprob: -5.510717391967773
    4. '(ans' → logprob: -5.510717391967773
    5. '(
' → logprob: -5.760717391967773
    6. '**' → logprob: -5.885717391967773
    7. ']' → logprob: -6.260717391967773
    8. '(pow' → logprob: -7.135717391967773
    9. '#' → logprob: -7.260717391967773
    10. '()' → logprob: -7.260717391967773

Token 1451: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00037681119283661246
    2. '(pow' → logprob: -8.25037670135498
    3. '2' → logprob: -9.75037670135498
    4. '(' → logprob: -10.12537670135498
    5. ' pow' → logprob: -11.25037670135498
    6. '1' → logprob: -13.62537670135498
    7. '100' → logprob: -14.00037670135498
    8. '```' → logprob: -14.37537670135498
    9. ' (' → logprob: -14.75037670135498
    10. '`' → logprob: -15.12537670135498

Token 1452: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. 'pow' → logprob: -13.50000286102295
    3. '```' → logprob: -14.50000286102295
    4. '[' → logprob: -14.62500286102295
    5. '[n' → logprob: -15.75000286102295
    6. '`' → logprob: -16.375003814697266
    7. ']' → logprob: -16.750003814697266
    8. ' ' → logprob: -16.875003814697266
    9. '
' → logprob: -16.875003814697266
    10. '\[' → logprob: -17.250003814697266

Token 1453: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3143324553966522
    2. '[' → logprob: -1.3143324851989746
    3. '```' → logprob: -7.939332485198975
    4. '[
' → logprob: -8.814332008361816
    5. ']' → logprob: -9.189332008361816
    6. '\[' → logprob: -9.439332008361816
    7. '2' → logprob: -9.689332008361816
    8. '`' → logprob: -9.814332008361816
    9. 'n' → logprob: -9.939332008361816
    10. '(n' → logprob: -10.439332008361816

Token 1454: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007744893664494157
    2. '**' → logprob: -9.250774383544922
    3. '   ' → logprob: -9.250774383544922
    4. '])' → logprob: -9.250774383544922
    5. ')**' → logprob: -9.625774383544922
    6. '))' → logprob: -9.750774383544922
    7. ' )' → logprob: -9.875774383544922
    8. '[' → logprob: -9.875774383544922
    9. ')`' → logprob: -10.125774383544922
    10. ',' → logprob: -10.375774383544922

Token 1455: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043747883290052414
    2. '*' → logprob: -3.918747901916504
    3. '**' → logprob: -5.418747901916504
    4. '%' → logprob: -5.543747901916504
    5. '
' → logprob: -5.668747901916504
    6. '\n' → logprob: -5.918747901916504
    7. ')
' → logprob: -6.793747901916504
    8. '#' → logprob: -6.793747901916504
    9. ']' → logprob: -6.793747901916504
    10. '\' → logprob: -6.918747901916504

Token 1456: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.796184723294573e-06
    2. ' mod' → logprob: -12.500005722045898
    3. '(mod' → logprob: -13.125005722045898
    4. '```' → logprob: -17.5000057220459
    5. '	mod' → logprob: -18.1250057220459
    6. '100' → logprob: -18.5000057220459
    7. '
' → logprob: -18.6250057220459
    8. '`' → logprob: -18.7500057220459
    9. 'pow' → logprob: -18.7500057220459
    10. ' мод' → logprob: -20.6250057220459

Token 1457: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08687738329172134
    2. 'ans' → logprob: -2.7118773460388184
    3. ')
' → logprob: -5.211877346038818
    4. '
' → logprob: -5.961877346038818
    5. '*' → logprob: -6.336877346038818
    6. '(ans' → logprob: -6.461877346038818
    7. '\n' → logprob: -6.961877346038818
    8. 'print' → logprob: -7.086877346038818
    9. '**' → logprob: -7.461877346038818
    10. '=' → logprob: -7.461877346038818

Token 1458: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10021087527275085
    2. 'ans' → logprob: -2.3502109050750732
    3. '```' → logprob: -12.975211143493652
    4. 'pr' → logprob: -14.225211143493652
    5. '(ans' → logprob: -14.850211143493652
    6. 'answer' → logprob: -14.975211143493652
    7. '
' → logprob: -15.100211143493652
    8. 'return' → logprob: -16.975210189819336
    9. '`' → logprob: -17.100210189819336
    10. ' print' → logprob: -17.225210189819336

Token 1459: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.016117654740810394
    2. '((' → logprob: -4.141117572784424
    3. 'ans' → logprob: -9.641118049621582
    4. '(' → logprob: -11.016118049621582
    5. '(pow' → logprob: -14.516118049621582
    6. '(an' → logprob: -15.516118049621582
    7. ' (' → logprob: -15.641118049621582
    8. '(abs' → logprob: -15.641118049621582
    9. '(answer' → logprob: -15.891118049621582
    10. '	ans' → logprob: -15.891118049621582

Token 1460: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2574731707572937
    2. '*' → logprob: -1.5074732303619385
    3. ')' → logprob: -5.257472991943359
    4. ',' → logprob: -8.13247299194336
    5. ' ' → logprob: -11.88247299194336
    6. ' ' → logprob: -12.00747299194336
    7. '   ' → logprob: -12.13247299194336
    8. '%' → logprob: -13.88247299194336
    9. ' ,' → logprob: -13.88247299194336
    10. '**' → logprob: -14.13247299194336

Token 1461: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.320199877838604e-07
    2. ' pow' → logprob: -14.75
    3. '(pow' → logprob: -16.75
    4. 'power' → logprob: -22.0
    5. 'Pow' → logprob: -23.5
    6. 'pw' → logprob: -24.0
    7. '_pow' → logprob: -24.25
    8. 'p' → logprob: -24.25
    9. '.pow' → logprob: -24.5
    10. '   ' → logprob: -25.25

Token 1462: '(pow' (ID: 189160)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3346759080886841
    2. '(pow' → logprob: -1.834675908088684
    3. 'pow' → logprob: -2.0846757888793945
    4. '(' → logprob: -7.9596757888793945
    5. '_pow' → logprob: -9.834675788879395
    6. ' pow' → logprob: -11.334675788879395
    7. '.pow' → logprob: -13.584675788879395
    8. '(power' → logprob: -14.959675788879395
    9. 'mod' → logprob: -15.459675788879395
    10. '(
' → logprob: -15.584675788879395

Token 1463: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.625000953674316
    3. 'pow' → logprob: -14.750000953674316
    4. '(pow' → logprob: -18.125
    5. '２' → logprob: -20.625
    6. ' ' → logprob: -20.625
    7. '₂' → logprob: -20.625
    8. '[' → logprob: -20.75
    9. '۲' → logprob: -21.5
    10. '_pow' → logprob: -22.125

Token 1464: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00011129142512800172
    2. '[' → logprob: -9.50011157989502
    3. 'n' → logprob: -10.37511157989502
    4. '[
' → logprob: -12.25011157989502
    5. ')n' → logprob: -16.250110626220703
    6. '(n' → logprob: -16.625110626220703
    7. ' [' → logprob: -16.875110626220703
    8. ')' → logprob: -16.875110626220703
    9. ')[' → logprob: -17.875110626220703
    10. ' n' → logprob: -18.000110626220703

Token 1465: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.009725632146000862
    2. ',' → logprob: -5.009725570678711
    3. ']' → logprob: -5.884725570678711
    4. '-' → logprob: -9.384725570678711
    5. ']-' → logprob: -10.009725570678711
    6. '[-' → logprob: -11.009725570678711
    7. '],
' → logprob: -11.134725570678711
    8. '[' → logprob: -11.259725570678711
    9. '],[' → logprob: -11.634725570678711
    10. '][-' → logprob: -11.884725570678711

Token 1466: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.704273118884885e-07
    2. ' mod' → logprob: -14.500000953674316
    3. '(mod' → logprob: -16.625
    4. '	mod' → logprob: -19.625
    5. 'mods' → logprob: -19.75
    6. 'modal' → logprob: -20.125
    7. '-' → logprob: -20.375
    8. 'mo' → logprob: -20.5
    9. '.mod' → logprob: -21.25
    10. 'MOD' → logprob: -21.75

Token 1467: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008071291376836598
    2. ' -' → logprob: -7.125807285308838
    3. ')' → logprob: -13.62580680847168
    4. '-
' → logprob: -14.37580680847168
    5. ')-' → logprob: -15.62580680847168
    6. ''-' → logprob: -15.75080680847168
    7. '−' → logprob: -15.75080680847168
    8. '
' → logprob: -16.25080680847168
    9. '{-' → logprob: -16.87580680847168
    10. '```' → logprob: -16.87580680847168

Token 1468: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -15.437500953674316
    4. '
' → logprob: -16.562501907348633
    5. '
' → logprob: -16.875001907348633
    6. '-' → logprob: -17.312501907348633
    7. '۲' → logprob: -17.437501907348633
    8. '   ' → logprob: -17.562501907348633
    9. '' → logprob: -17.625001907348633
    10. '২' → logprob: -17.687501907348633

Token 1469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -17.1875
    4. '
' → logprob: -18.4375
    5. '   ' → logprob: -18.625
    6. '２' → logprob: -19.0
    7. '3' → logprob: -19.125
    8. '
' → logprob: -19.1875
    9. '۲' → logprob: -19.375
    10. '২' → logprob: -19.5625

Token 1470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018685187387745827
    2. ' ,' → logprob: -9.125186920166016
    3. ')' → logprob: -9.875186920166016
    4. ',
' → logprob: -10.625186920166016
    5. '%' → logprob: -14.625186920166016
    6. 'mod' → logprob: -14.875186920166016
    7. '`,' → logprob: -15.375186920166016
    8. ',
' → logprob: -15.750186920166016
    9. ' %' → logprob: -15.750186920166016
    10. '   ' → logprob: -15.875186920166016

Token 1471: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.56102097814437e-05
    2. ' mod' → logprob: -10.000045776367188
    3. ')' → logprob: -16.375045776367188
    4. '(mod' → logprob: -19.000045776367188
    5. '	mod' → logprob: -19.500045776367188
    6. 'mods' → logprob: -22.375045776367188
    7. ' мод' → logprob: -22.500045776367188
    8. ' ' → logprob: -22.500045776367188
    9. 'mo' → logprob: -22.625045776367188
    10. '```' → logprob: -23.125045776367188

Token 1472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005771008436568081
    2. ')%' → logprob: -7.625576972961426
    3. '%' → logprob: -9.875576972961426
    4. '))' → logprob: -11.000576972961426
    5. ',' → logprob: -11.750576972961426
    6. ' )' → logprob: -12.250576972961426
    7. ')`' → logprob: -13.000576972961426
    8. ')
' → logprob: -13.125576972961426
    9. '`)' → logprob: -13.500576972961426
    10. '```' → logprob: -14.500576972961426

Token 1473: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.014139878563582897
    2. ')' → logprob: -4.764139652252197
    3. ' %' → logprob: -5.264139652252197
    4. ')%' → logprob: -8.014140129089355
    5. '%)' → logprob: -13.139140129089355
    6. '%n' → logprob: -14.264140129089355
    7. 'mod' → logprob: -14.639140129089355
    8. '%s' → logprob: -14.889140129089355
    9. ' )' → logprob: -15.014140129089355
    10. ',' → logprob: -15.139140129089355

Token 1474: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. '(mod' → logprob: -14.75
    3. ' mod' → logprob: -18.625
    4. '	mod' → logprob: -21.625
    5. 'MOD' → logprob: -24.25
    6. '100' → logprob: -24.5
    7. ' мод' → logprob: -24.75
    8. 'mods' → logprob: -24.875
    9. '(' → logprob: -25.625
    10. '_mod' → logprob: -26.25

Token 1475: ')' (ID: 8)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09141232073307037
    2. '<|end|>' → logprob: -2.841412305831909
    3. '\' → logprob: -4.091412544250488
    4. ')' → logprob: -4.591412544250488
    5. '```' → logprob: -6.716412544250488
    6. '
' → logprob: -8.216412544250488
    7. '\r' → logprob: -9.341412544250488
    8. '\
' → logprob: -9.591412544250488
    9. '  
' → logprob: -9.716412544250488
    10. '\u' → logprob: -9.716412544250488


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1473
Tokens correctement prédits (1ère position, stricte): 398
Tokens correctement prédits (1ère position, avec adaptation): 433
Tokens correctement prédits (top 10): 940
Précision stricte (1ère position): 27.02%
Précision adaptée (1ère position): 29.40%
Précision (top 10): 63.82%
================================================================================
