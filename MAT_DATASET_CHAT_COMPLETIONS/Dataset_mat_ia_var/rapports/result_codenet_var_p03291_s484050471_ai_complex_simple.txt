================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from operator import mul

input = lambda: sys.stdin.readline().strip()
list2d = lambda a, b, c: [[c for _ in range(b)] for _ in range(a)]
list3d = lambda a, b, c, d: [[[d for _ in range(c)] for _ in range(b)] for _ in range(a)]
list4d = lambda a, b, c, d, e: [[[[e for _ in range(d)] for _ in range(c)] for _ in range(b)] for _ in range(a)]
ceil = lambda x, y=1: (x + (y - 1)) // y if y != 0 else float('inf')
INT = lambda: int(input())
MAP = lambda: map(int, input().split())
LIST = lambda N=None: list(MAP()) if N is None else list(map(lambda _: INT(), range(N)))
Yes = lambda: print('Yes')
No = lambda: print('No')
YES = lambda: print('YES')
NO = lambda: print('NO')
setattr(sys, 'setrecursionlimit', (lambda n: sys.setrecursionlimit(n)))
sys.setrecursionlimit(pow(10, 9))
INF = pow(10, 18)
MOD = pow(10, 9) + 7

S = input()
N = len(S)
dp = list2d(N + 1, 4, 0)

from itertools import product

def update(f, *args):
    return f(*args)

import operator

# Artificially complex initialization
_ = [setattr(dp[0], '__setitem__', (lambda idx, val: type(dp[0]).__setitem__(dp[0], idx, val))) for _ in (0,)]
dp[0][0] = 1

flags = ['A', 'B', 'C']
for i, s in enumerate(S):
    for j in range(4):
        skip_cond = s == '?' and True or False
        inc = 3 if skip_cond else 1
        dp[i+1][j] = (dp[i+1][j] + dp[i][j] * inc) % MOD
        # Now, pick this character if possible
        if j < 3:
            step = s == '?' or (j == 0 and s == 'A') or (j == 1 and s == 'B') or (j == 2 and s == 'C')
            if step:
                dp[i+1][j+1] = (dp[i+1][j+1] + dp[i][j]) % MOD

# Obfuscated final output via reduce and operator
print(reduce(operator.xor, [0, dp[N][3]]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20354998111724854
    2. 'import' → logprob: -1.7035499811172485
    3. '.' → logprob: -6.828549861907959
    4. ' ' → logprob: -7.453549861907959
    5. '_import' → logprob: -8.078550338745117
    6. '_' → logprob: -9.578550338745117
    7. '	import' → logprob: -10.203550338745117
    8. '.import' → logprob: -11.203550338745117
    9. '```' → logprob: -11.578550338745117
    10. ' .' → logprob: -11.703550338745117

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6477278470993042
    2. ' wraps' → logprob: -1.0227278470993042
    3. 'partial' → logprob: -2.6477279663085938
    4. 'l' → logprob: -4.272727966308594
    5. ' l' → logprob: -4.272727966308594
    6. ' partial' → logprob: -4.647727966308594
    7. 'reduce' → logprob: -4.897727966308594
    8. 'cmp' → logprob: -7.772727966308594
    9. ' reduce' → logprob: -7.897727966308594
    10. 'cache' → logprob: -8.647727966308594

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0677001476287842
    2. ',' → logprob: -1.1927001476287842
    3. '(' → logprob: -1.4427001476287842
    4. ' ' → logprob: -2.692700147628784
    5. '\' → logprob: -4.567700386047363
    6. '.' → logprob: -4.692700386047363
    7. '\n' → logprob: -5.317700386047363
    8. '' → logprob: -5.817700386047363
    9. '```' → logprob: -6.067700386047363
    10. '(
' → logprob: -6.317700386047363

Token 8: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6137133836746216
    2. 'import' → logprob: -1.6137133836746216
    3. '\' → logprob: -2.738713264465332
    4. '```' → logprob: -2.863713264465332
    5. '(' → logprob: -2.988713264465332
    6. '\n' → logprob: -3.613713264465332
    7. '(
' → logprob: -4.238713264465332
    8. '`' → logprob: -4.488713264465332
    9. ',

' → logprob: -5.113713264465332
    10. ',
' → logprob: -5.613713264465332

Token 9: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7981787323951721
    2. ' math' → logprob: -0.9231787323951721
    3. ' itertools' → logprob: -2.0481786727905273
    4. ' collections' → logprob: -4.173178672790527
    5. 'operator' → logprob: -5.548178672790527
    6. ' os' → logprob: -5.798178672790527
    7. 'math' → logprob: -7.173178672790527
    8. ' ' → logprob: -8.423178672790527
    9. ' typing' → logprob: -8.923178672790527
    10. 'collections' → logprob: -9.548178672790527

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02014029771089554
    2. 'import' → logprob: -4.145140171051025
    3. '.' → logprob: -6.020140171051025
    4. ' .' → logprob: -7.145140171051025
    5. ' ' → logprob: -7.145140171051025
    6. '.import' → logprob: -10.020140647888184
    7. '	import' → logprob: -11.145140647888184
    8. ' as' → logprob: -11.645140647888184
    9. '_import' → logprob: -11.770140647888184
    10. '<|end|>' → logprob: -12.895140647888184

Token 11: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.18694810569286346
    2. ' import' → logprob: -2.81194806098938
    3. ' mul' → logprob: -2.81194806098938
    4. ' ' → logprob: -3.18694806098938
    5. 'add' → logprob: -5.936948299407959
    6. ' item' → logprob: -6.311948299407959
    7. 'import' → logprob: -6.561948299407959
    8. 'mul' → logprob: -6.686948299407959
    9. ' icon' → logprob: -8.0619478225708
    10. ' imod' → logprob: -8.5619478225708

Token 12: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7526389956474304
    2. '\n' → logprob: -2.002639055252075
    3. ',' → logprob: -2.502639055252075
    4. 'def' → logprob: -2.627639055252075
    5. 'import' → logprob: -2.752639055252075
    6. '
' → logprob: -2.752639055252075
    7. '(' → logprob: -4.127638816833496
    8. ' ' → logprob: -4.127638816833496
    9. '\' → logprob: -4.377638816833496
    10. '


' → logprob: -4.502638816833496

Token 13: 'input' (ID: 2586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3478451073169708
    2. '(
' → logprob: -1.5978450775146484
    3. 'def' → logprob: -3.3478450775146484
    4. '(

' → logprob: -3.7228450775146484
    5. '\' → logprob: -4.222845077514648
    6. '\n' → logprob: -5.472845077514648
    7. ',' → logprob: -6.347845077514648
    8. '*' → logprob: -6.472845077514648
    9. '#' → logprob: -6.972845077514648
    10. 'a' → logprob: -6.972845077514648

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05184329301118851
    2. '_' → logprob: -3.5518434047698975
    3. '=' → logprob: -5.301843166351318
    4. ')' → logprob: -5.301843166351318
    5. 's' → logprob: -5.926843166351318
    6. ' =' → logprob: -6.301843166351318
    7. '()' → logprob: -6.676843166351318
    8. '_data' → logprob: -6.801843166351318
    9. '.' → logprob: -6.926843166351318
    10. '```' → logprob: -7.051843166351318

Token 15: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7241888642311096
    2. ' input' → logprob: -0.8491888642311096
    3. 'input' → logprob: -2.599188804626465
    4. 'sys' → logprob: -4.349188804626465
    5. ' ' → logprob: -8.849188804626465
    6. ' lambda' → logprob: -10.599188804626465
    7. '=sys' → logprob: -10.599188804626465
    8. '	sys' → logprob: -11.349188804626465
    9. ' open' → logprob: -11.474188804626465
    10. '(sys' → logprob: -11.724188804626465

Token 16: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.43105998635292053
    2. ':' → logprob: -1.0560599565505981
    3. ' input' → logprob: -7.306059837341309
    4. ' x' → logprob: -7.556059837341309
    5. ' sys' → logprob: -8.681059837341309
    6. 'input' → logprob: -8.681059837341309
    7. ' s' → logprob: -9.056059837341309
    8. 's' → logprob: -9.056059837341309
    9. ' ' → logprob: -9.056059837341309
    10. 'x' → logprob: -9.181059837341309

Token 17: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.149672731757164
    2. 'sys' → logprob: -2.024672746658325
    3. ' input' → logprob: -5.399672508239746
    4. 'input' → logprob: -6.024672508239746
    5. '=sys' → logprob: -11.899672508239746
    6. '	sys' → logprob: -12.274672508239746
    7. '(sys' → logprob: -12.649672508239746
    8. ''' → logprob: -12.649672508239746
    9. ' ' → logprob: -12.649672508239746
    10. ' system' → logprob: -13.149672508239746

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0012023737654089928
    2. '.' → logprob: -7.126202583312988
    3. '.stdout' → logprob: -8.001202583312988
    4. '.std' → logprob: -10.501202583312988
    5. '.argv' → logprob: -11.501202583312988
    6. 'stdin' → logprob: -11.876202583312988
    7. '.readline' → logprob: -12.126202583312988
    8. ' .' → logprob: -12.626202583312988
    9. '.stderr' → logprob: -12.876202583312988
    10. '.exit' → logprob: -13.126202583312988

Token 19: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003917630296200514
    2. '.read' → logprob: -5.628917694091797
    3. '.' → logprob: -8.128917694091797
    4. '.readlines' → logprob: -11.128917694091797
    5. 'read' → logprob: -12.253917694091797
    6. ' .' → logprob: -13.878917694091797
    7. '.buffer' → logprob: -14.378917694091797
    8. '.write' → logprob: -14.628917694091797
    9. '.Read' → logprob: -15.128917694091797
    10. ' readline' → logprob: -15.253917694091797

Token 20: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20310863852500916
    2. '().' → logprob: -1.7031086683273315
    3. '()\' → logprob: -7.078108787536621
    4. '()
' → logprob: -7.578108787536621
    5. '()

' → logprob: -8.703108787536621
    6. '(' → logprob: -8.953108787536621
    7. '()<' → logprob: -11.828108787536621
    8. '())' → logprob: -12.078108787536621
    9. '.strip' → logprob: -12.453108787536621
    10. '.' → logprob: -12.828108787536621

Token 21: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0232466422021389
    2. 'rstrip' → logprob: -3.7732465267181396
    3. ' strip' → logprob: -14.148246765136719
    4. 'str' → logprob: -15.273246765136719
    5. 'split' → logprob: -15.773246765136719
    6. 'replace' → logprob: -16.02324676513672
    7. '_strip' → logprob: -17.14824676513672
    8. 'rst' → logprob: -18.27324676513672
    9. 'startswith' → logprob: -18.77324676513672
    10. '-strip' → logprob: -18.77324676513672

Token 22: '()
' (ID: 1234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28070560097694397
    2. 'n' → logprob: -2.780705690383911
    3. '()' → logprob: -2.905705690383911
    4. 'a' → logprob: -3.280705690383911
    5. '(n' → logprob: -4.280705451965332
    6. '*' → logprob: -4.655705451965332
    7. '\' → logprob: -4.655705451965332
    8. 'num' → logprob: -4.780705451965332
    9. 'numbers' → logprob: -5.030705451965332
    10. '(' → logprob: -5.280705451965332

Token 23: 'list' (ID: 2641)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27736765146255493
    2. 'def' → logprob: -1.5273675918579102
    3. '
' → logprob: -5.40236759185791
    4. 'a' → logprob: -5.52736759185791
    5. 'numbers' → logprob: -5.52736759185791
    6. 'number' → logprob: -5.77736759185791
    7. 'N' → logprob: -5.90236759185791
    8. 'num' → logprob: -6.15236759185791
    9. '\' → logprob: -7.15236759185791
    10. '#' → logprob: -7.52736759185791

Token 24: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021132626570761204
    2. '(range' → logprob: -7.127113342285156
    3. '(map' → logprob: -7.877113342285156
    4. '()' → logprob: -8.377113342285156
    5. '_' → logprob: -8.752113342285156
    6. '([]' → logprob: -9.627113342285156
    7. '(
' → logprob: -9.627113342285156
    8. '[' → logprob: -9.752113342285156
    9. '(

' → logprob: -9.752113342285156
    10. 's' → logprob: -10.002113342285156

Token 25: 'd' (ID: 67)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3099616765975952
    2. '[' → logprob: -2.6849617958068848
    3. ' =' → logprob: -3.0599617958068848
    4. '(range' → logprob: -3.5599617958068848
    5. '(map' → logprob: -3.8099617958068848
    6. '=' → logprob: -3.9349617958068848
    7. '_' → logprob: -4.434961795806885
    8. 'append' → logprob: -4.809961795806885
    9. '()' → logprob: -5.059961795806885
    10. '.append' → logprob: -5.059961795806885

Token 26: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8745297789573669
    2. ' =' → logprob: -0.9995297789573669
    3. '=' → logprob: -1.6245298385620117
    4. '=[]' → logprob: -4.499529838562012
    5. ' (' → logprob: -6.249529838562012
    6. '[' → logprob: -6.499529838562012
    7. '<|end|>' → logprob: -7.124529838562012
    8. ')' → logprob: -7.624529838562012
    9. ' ' → logprob: -7.874529838562012
    10. '_' → logprob: -7.999529838562012

Token 27: ' lambda' (ID: 27871)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11115964502096176
    2. '[' → logprob: -2.986159563064575
    3. ' []' → logprob: -3.611159563064575
    4. 'lambda' → logprob: -4.236159801483154
    5. ' lambda' → logprob: -5.486159801483154
    6. '(lambda' → logprob: -6.111159801483154
    7. '[list' → logprob: -6.236159801483154
    8. 'list' → logprob: -6.486159801483154
    9. ' [' → logprob: -6.736159801483154
    10. '[][]' → logprob: -6.861159801483154

Token 28: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4054086208343506
    2. ':' → logprob: -2.0304086208343506
    3. ' list' → logprob: -2.9054086208343506
    4. ' lambda' → logprob: -3.0304086208343506
    5. ' f' → logprob: -3.4054086208343506
    6. ' x' → logprob: -3.7804086208343506
    7. 'lambda' → logprob: -4.78040885925293
    8. 'n' → logprob: -4.78040885925293
    9. 'list' → logprob: -5.28040885925293
    10. ' lst' → logprob: -5.40540885925293

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1525685042142868
    2. ' ,' → logprob: -2.6525685787200928
    3. ':' → logprob: -3.1525685787200928
    4. ' :' → logprob: -4.652568340301514
    5. ',a' → logprob: -5.152568340301514
    6. ',b' → logprob: -5.402568340301514
    7. ':[' → logprob: -5.902568340301514
    8. ',n' → logprob: -6.652568340301514
    9. '[' → logprob: -6.777568340301514
    10. ',[' → logprob: -6.902568340301514

Token 30: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005054075736552477
    2. ' b' → logprob: -5.880053997039795
    3. 'n' → logprob: -6.505053997039795
    4. 'r' → logprob: -8.630054473876953
    5. 'h' → logprob: -9.005054473876953
    6. 'm' → logprob: -9.380054473876953
    7. 'w' → logprob: -9.380054473876953
    8. 'x' → logprob: -10.005054473876953
    9. ' n' → logprob: -10.380054473876953
    10. 'rows' → logprob: -10.380054473876953

Token 31: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002592065604403615
    2. ':[' → logprob: -6.752592086791992
    3. ' :' → logprob: -7.127592086791992
    4. ':[[' → logprob: -7.752592086791992
    5. ',' → logprob: -9.002592086791992
    6. ':list' → logprob: -10.127592086791992
    7. 'a' → logprob: -12.252592086791992
    8. '=' → logprob: -12.377592086791992
    9. ',:' → logprob: -12.627592086791992
    10. ':(' → logprob: -12.877592086791992

Token 32: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7105586528778076
    2. ' c' → logprob: -1.2105586528778076
    3. 'v' → logprob: -2.3355586528778076
    4. ' v' → logprob: -3.0855586528778076
    5. 'init' → logprob: -3.2105586528778076
    6. ' val' → logprob: -4.835558891296387
    7. ' init' → logprob: -5.585558891296387
    8. 'val' → logprob: -5.710558891296387
    9. ' f' → logprob: -5.960558891296387
    10. 'f' → logprob: -5.960558891296387

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003171056741848588
    2. ' :' → logprob: -6.503170967102051
    3. ':[' → logprob: -7.253170967102051
    4. ':[[' → logprob: -7.253170967102051
    5. '=' → logprob: -9.00317096710205
    6. '=[' → logprob: -9.37817096710205
    7. ':(' → logprob: -11.25317096710205
    8. '=[[' → logprob: -11.37817096710205
    9. ':list' → logprob: -11.50317096710205
    10. '=[]' → logprob: -12.87817096710205

Token 34: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.002530833473429084
    2. ' [[' → logprob: -6.002531051635742
    3. '[' → logprob: -9.877531051635742
    4. ' [' → logprob: -13.002531051635742
    5. '[
' → logprob: -14.627531051635742
    6. '[a' → logprob: -14.877531051635742
    7. '[list' → logprob: -15.127531051635742
    8. '[['' → logprob: -15.752531051635742
    9. '   ' → logprob: -16.502531051635742
    10. '[n' → logprob: -16.877531051635742

Token 35: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00013882013445254415
    2. ' c' → logprob: -9.000139236450195
    3. '0' → logprob: -11.125139236450195
    4. '   ' → logprob: -15.500139236450195
    5. '	c' → logprob: -15.875139236450195
    6. ' ' → logprob: -16.500139236450195
    7. '[c' → logprob: -17.250139236450195
    8. '    ' → logprob: -17.500139236450195
    9. '
' → logprob: -17.875139236450195
    10. '%c' → logprob: -18.000139236450195

Token 36: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760757923126221
    2. 'for' → logprob: -0.8260757923126221
    3. ']' → logprob: -9.451075553894043
    4. ' ' → logprob: -10.451075553894043
    5. '	for' → logprob: -11.076075553894043
    6. '   ' → logprob: -12.576075553894043
    7. '()' → logprob: -12.701075553894043
    8. ']*' → logprob: -12.701075553894043
    9. ' ]' → logprob: -14.076075553894043
    10. ')' → logprob: -14.076075553894043

Token 37: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011376596987247467
    2. ' _' → logprob: -4.51137638092041
    3. ' range' → logprob: -9.13637638092041
    4. '_j' → logprob: -9.26137638092041
    5. ' in' → logprob: -10.26137638092041
    6. '__' → logprob: -10.51137638092041
    7. '_range' → logprob: -10.63637638092041
    8. 'range' → logprob: -11.13637638092041
    9. ' j' → logprob: -12.01137638092041
    10. '_i' → logprob: -12.01137638092041

Token 38: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8448477983474731
    2. ' in' → logprob: -1.2198477983474731
    3. 'in' → logprob: -1.7198477983474731
    4. ' range' → logprob: -2.3448476791381836
    5. ' ' → logprob: -9.469847679138184
    6. '<|end|>' → logprob: -9.969847679138184
    7. '	range' → logprob: -11.719847679138184
    8. '_range' → logprob: -12.469847679138184
    9. ' xrange' → logprob: -12.719847679138184
    10. '<|end|>' → logprob: -13.219847679138184

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326285004615784
    2. 'range' → logprob: -1.3132628202438354
    3. '	range' → logprob: -13.938262939453125
    4. '(range' → logprob: -16.188262939453125
    5. ' ' → logprob: -16.188262939453125
    6. 'a' → logprob: -17.688262939453125
    7. '_range' → logprob: -17.688262939453125
    8. '0' → logprob: -18.063262939453125
    9. ' xrange' → logprob: -18.438262939453125
    10. 'ran' → logprob: -18.688262939453125

Token 40: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.004969512578099966
    2. '(a' → logprob: -5.504969596862793
    3. 'b' → logprob: -7.879969596862793
    4. ' b' → logprob: -7.879969596862793
    5. '(' → logprob: -9.504969596862793
    6. 'a' → logprob: -10.254969596862793
    7. '	b' → logprob: -11.004969596862793
    8. ' (' → logprob: -12.504969596862793
    9. ' a' → logprob: -13.004969596862793
    10. ')b' → logprob: -13.754969596862793

Token 41: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.5690089639974758e-05
    2. ']' → logprob: -11.500015258789062
    3. ' )' → logprob: -12.750015258789062
    4. ')' → logprob: -13.375015258789062
    5. ' ]' → logprob: -14.250015258789062
    6. ']]' → logprob: -16.625015258789062
    7. '}]' → logprob: -16.625015258789062
    8. '])' → logprob: -17.000015258789062
    9. ' ' → logprob: -17.375015258789062
    10. ')]
' → logprob: -17.500015258789062

Token 42: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006041489075869322
    2. ' for' → logprob: -5.506041526794434
    3. 'for' → logprob: -6.881041526794434
    4. ' ]' → logprob: -7.006041526794434
    5. ')' → logprob: -10.881041526794434
    6. ')]' → logprob: -12.506041526794434
    7. ' ' → logprob: -14.131041526794434
    8. '	for' → logprob: -14.256041526794434
    9. '()]' → logprob: -14.756041526794434
    10. ' in' → logprob: -15.006041526794434

Token 43: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06273399293422699
    2. 'range' → logprob: -2.8127338886260986
    3. ' a' → logprob: -7.687734127044678
    4. 'a' → logprob: -9.18773365020752
    5. '_' → logprob: -9.68773365020752
    6. '_range' → logprob: -9.68773365020752
    7. '(range' → logprob: -10.31273365020752
    8. '	range' → logprob: -11.18773365020752
    9. '_a' → logprob: -11.43773365020752
    10. ' _' → logprob: -11.68773365020752

Token 44: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03588993474841118
    2. ' range' → logprob: -3.6608898639678955
    3. ' in' → logprob: -5.285890102386475
    4. 'in' → logprob: -5.410890102386475
    5. '(range' → logprob: -11.785889625549316
    6. '	range' → logprob: -12.660889625549316
    7. '_range' → logprob: -13.660889625549316
    8. '<|end|>' → logprob: -13.785889625549316
    9. '<|end|>' → logprob: -15.410889625549316
    10. ' ' → logprob: -16.410890579223633

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.251930296421051
    2. ' range' → logprob: -1.5019302368164062
    3. '(range' → logprob: -13.876930236816406
    4. '	range' → logprob: -15.501930236816406
    5. 'a' → logprob: -16.251930236816406
    6. '_range' → logprob: -17.626930236816406
    7. ' a' → logprob: -17.626930236816406
    8. '.range' → logprob: -19.126930236816406
    9. ' xrange' → logprob: -19.126930236816406
    10. ' ' → logprob: -20.001930236816406

Token 46: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.217951886355877e-05
    2. 'a' → logprob: -9.875061988830566
    3. '(' → logprob: -11.500061988830566
    4. ' (' → logprob: -15.250061988830566
    5. ' a' → logprob: -15.500061988830566
    6. '   ' → logprob: -19.000062942504883
    7. '	a' → logprob: -19.625062942504883
    8. '/a' → logprob: -20.375062942504883
    9. '  ' → logprob: -20.625062942504883
    10. '(ai' → logprob: -20.625062942504883

Token 47: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.531315314830863e-06
    2. ']' → logprob: -13.250003814697266
    3. ')' → logprob: -13.625003814697266
    4. ')])' → logprob: -16.125003814697266
    5. '])]' → logprob: -16.250003814697266
    6. ')]
' → logprob: -16.250003814697266
    7. '])' → logprob: -16.500003814697266
    8. ')],' → logprob: -17.000003814697266
    9. '')]' → logprob: -17.125003814697266
    10. ' )' → logprob: -17.750003814697266

Token 48: 'list' (ID: 2641)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5466453433036804
    2. 'def' → logprob: -1.1716454029083252
    3. 'N' → logprob: -2.546645402908325
    4. 'a' → logprob: -4.546645164489746
    5. '
' → logprob: -4.546645164489746
    6. 's' → logprob: -6.796645164489746
    7. 'x' → logprob: -7.046645164489746
    8. 'num' → logprob: -7.046645164489746
    9. 'w' → logprob: -7.421645164489746
    10. 'd' → logprob: -7.421645164489746

Token 49: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0716848373413086
    2. '1' → logprob: -3.0716848373413086
    3. '3' → logprob: -4.696684837341309
    4. '<|end|>' → logprob: -4.821684837341309
    5. '<|end|>' → logprob: -6.571684837341309
    6. ' ' → logprob: -6.696684837341309
    7. ' =' → logprob: -7.696684837341309
    8. '.' → logprob: -7.946684837341309
    9. '.setdefault' → logprob: -7.946684837341309
    10. 's' → logprob: -8.196684837341309

Token 50: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.128163257315464e-07
    2. ' d' → logprob: -16.125
    3. '2' → logprob: -16.375
    4. '_d' → logprob: -18.375
    5. 'д' → logprob: -18.5
    6. '	d' → logprob: -19.0
    7. ')d' → logprob: -19.125
    8. '>d' → logprob: -19.5
    9. 'د' → logprob: -19.75
    10. 'def' → logprob: -20.125

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006719991099089384
    2. '=' → logprob: -5.006720066070557
    3. '=lambda' → logprob: -12.381719589233398
    4. ' ' → logprob: -16.1317195892334
    5. '(' → logprob: -16.7567195892334
    6. '＝' → logprob: -16.8817195892334
    7. 'space' → logprob: -17.2567195892334
    8. '(lambda' → logprob: -17.3817195892334
    9. '<|end|>' → logprob: -17.5067195892334
    10. '`' → logprob: -18.0067195892334

Token 52: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.38704395294189453
    2. 'lambda' → logprob: -1.1370439529418945
    3. '(lambda' → logprob: -8.762043952941895
    4. '=lambda' → logprob: -11.387043952941895
    5. 'ambda' → logprob: -12.262043952941895
    6. ' lamb' → logprob: -16.137042999267578
    7. '.lambda' → logprob: -16.762042999267578
    8. '_lambda' → logprob: -16.887042999267578
    9. ' =' → logprob: -17.512042999267578
    10. 'lam' → logprob: -17.637042999267578

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20186565816402435
    2. ' a' → logprob: -1.7018656730651855
    3. ' lambda' → logprob: -8.076865196228027
    4. '(a' → logprob: -9.201865196228027
    5. 'lambda' → logprob: -10.576865196228027
    6. '(lambda' → logprob: -11.826865196228027
    7. ' ' → logprob: -12.451865196228027
    8. ' (' → logprob: -12.951865196228027
    9. '=lambda' → logprob: -14.826865196228027
    10. '(' → logprob: -15.076865196228027

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021597796585410833
    2. ',b' → logprob: -6.252159595489502
    3. ' ,' → logprob: -8.37716007232666
    4. ' b' → logprob: -14.12716007232666
    5. 'b' → logprob: -15.25216007232666
    6. ',c' → logprob: -17.252159118652344
    7. ',a' → logprob: -17.377159118652344
    8. '，' → logprob: -17.627159118652344
    9. ',list' → logprob: -18.252159118652344
    10. '_,' → logprob: -18.627159118652344

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889363914728165
    2. ' b' → logprob: -2.5788936614990234
    3. ' ' → logprob: -12.828893661499023
    4. '    ' → logprob: -14.453893661499023
    5. '   ' → logprob: -14.703893661499023
    6. '  ' → logprob: -15.578893661499023
    7. '	b' → logprob: -15.828893661499023
    8. 'a' → logprob: -17.328893661499023
    9. ' ' → logprob: -17.578893661499023
    10. '     ' → logprob: -17.953893661499023

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000969583576079458
    2. ',c' → logprob: -7.250969409942627
    3. 'c' → logprob: -8.375969886779785
    4. ' ,' → logprob: -10.750969886779785
    5. ' c' → logprob: -12.125969886779785
    6. '<|end|>' → logprob: -13.375969886779785
    7. '‌,' → logprob: -15.875969886779785
    8. '<|end|>' → logprob: -16.25096893310547
    9. ',C' → logprob: -16.87596893310547
    10. '，' → logprob: -16.87596893310547

Token 57: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006715728435665369
    2. ' c' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.256715774536133
    4. '<|end|>' → logprob: -16.381715774536133
    5. '  ' → logprob: -16.631715774536133
    6. ',c' → logprob: -17.256715774536133
    7. 'ct' → logprob: -17.506715774536133
    8. '	c' → logprob: -17.881715774536133
    9. ',' → logprob: -18.256715774536133
    10. '   ' → logprob: -18.506715774536133

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010301886359229684
    2. ',c' → logprob: -7.251029968261719
    3. ' ,' → logprob: -8.251029968261719
    4. ':' → logprob: -10.751029968261719
    5. 'c' → logprob: -10.751029968261719
    6. ',a' → logprob: -12.626029968261719
    7. ' c' → logprob: -13.251029968261719
    8. ',d' → logprob: -13.501029968261719
    9. ',list' → logprob: -13.501029968261719
    10. ',:,' → logprob: -14.251029968261719

Token 59: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013717879774048924
    2. ' d' → logprob: -6.62637186050415
    3. 'c' → logprob: -10.001371383666992
    4. ' c' → logprob: -15.376371383666992
    5. ' ' → logprob: -16.251371383666992
    6. '  ' → logprob: -16.751371383666992
    7. '   ' → logprob: -16.751371383666992
    8. '	d' → logprob: -17.251371383666992
    9. 'def' → logprob: -17.626371383666992
    10. '    ' → logprob: -18.876371383666992

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.380904672667384e-05
    2. ' :' → logprob: -10.625033378601074
    3. ':[[' → logprob: -12.250033378601074
    4. ':[' → logprob: -12.625033378601074
    5. '=' → logprob: -14.375033378601074
    6. ':list' → logprob: -14.375033378601074
    7. '=[' → logprob: -16.50003433227539
    8. 'a' → logprob: -17.00003433227539
    9. ',' → logprob: -17.37503433227539
    10. '=[[' → logprob: -18.12503433227539

Token 61: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.2113979209971149e-05
    2. '[list' → logprob: -11.875012397766113
    3. ' [[[' → logprob: -12.250012397766113
    4. '[' → logprob: -15.875012397766113
    5. 'list' → logprob: -16.500011444091797
    6. ' [[' → logprob: -16.750011444091797
    7. '[
' → logprob: -18.875011444091797
    8. '   ' → logprob: -19.875011444091797
    9. '```' → logprob: -19.875011444091797
    10. '[['' → logprob: -20.750011444091797

Token 62: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04859963804483414
    2. 'c' → logprob: -3.0485997200012207
    3. ' d' → logprob: -11.423599243164062
    4. ' c' → logprob: -14.298599243164062
    5. '0' → logprob: -15.423599243164062
    6. '   ' → logprob: -16.048599243164062
    7. ' ' → logprob: -16.048599243164062
    8. '  ' → logprob: -16.173599243164062
    9. '```' → logprob: -16.673599243164062
    10. '	d' → logprob: -17.548599243164062

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132626414299011
    2. 'for' → logprob: -1.313262701034546
    3. '	for' → logprob: -13.938262939453125
    4. ' ' → logprob: -17.438262939453125
    5. ')' → logprob: -18.938262939453125
    6. '<|end|>' → logprob: -19.313262939453125
    7. ' ' → logprob: -19.813262939453125
    8. 'or' → logprob: -20.438262939453125
    9. '```' → logprob: -21.188262939453125
    10. ' or' → logprob: -21.688262939453125

Token 64: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00015920029545668513
    2. ' _' → logprob: -8.75015926361084
    3. ' in' → logprob: -14.62515926361084
    4. '_in' → logprob: -16.250158309936523
    5. '_range' → logprob: -16.750158309936523
    6. '__' → logprob: -18.375158309936523
    7. '_

' → logprob: -18.500158309936523
    8. '```' → logprob: -18.750158309936523
    9. '_c' → logprob: -19.000158309936523
    10. '_]' → logprob: -19.125158309936523

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3186913728713989
    2. 'range' → logprob: -1.318691372871399
    3. 'in' → logprob: -5.693691253662109
    4. ' range' → logprob: -6.193691253662109
    5. '(range' → logprob: -13.19369125366211
    6. '<|end|>' → logprob: -13.81869125366211
    7. '<|end|>' → logprob: -14.06869125366211
    8. 'for' → logprob: -14.06869125366211
    9. '	range' → logprob: -15.19369125366211
    10. '_range' → logprob: -15.44369125366211

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.251928329467773
    4. 'c' → logprob: -18.626928329467773
    5. '_range' → logprob: -18.876928329467773
    6. '	range' → logprob: -19.126928329467773
    7. '   ' → logprob: -19.626928329467773
    8. ' ' → logprob: -19.751928329467773
    9. '    ' → logprob: -20.626928329467773
    10. '  ' → logprob: -21.501928329467773

Token 67: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03456105664372444
    2. '(c' → logprob: -3.4095611572265625
    3. ' c' → logprob: -8.034561157226562
    4. '	c' → logprob: -8.284561157226562
    5. '   ' → logprob: -8.909561157226562
    6. 'b' → logprob: -10.159561157226562
    7. '           ' → logprob: -10.284561157226562
    8. '       ' → logprob: -10.409561157226562
    9. '               ' → logprob: -10.909561157226562
    10. ')c' → logprob: -11.034561157226562

Token 68: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.057743949990254e-05
    2. ')' → logprob: -11.500020980834961
    3. ']' → logprob: -12.000020980834961
    4. ' )' → logprob: -12.625020980834961
    5. ')]
' → logprob: -15.000020980834961
    6. ' ]' → logprob: -15.500020980834961
    7. ' ' → logprob: -16.62502098083496
    8. '   ' → logprob: -16.75002098083496
    9. ']]' → logprob: -16.87502098083496
    10. '       ' → logprob: -17.87502098083496

Token 69: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0629211813211441
    2. 'for' → logprob: -3.4379212856292725
    3. ' for' → logprob: -3.5629212856292725
    4. ' ]' → logprob: -8.312921524047852
    5. ')' → logprob: -8.437921524047852
    6. '	for' → logprob: -11.437921524047852
    7. ' ' → logprob: -11.812921524047852
    8. ' in' → logprob: -12.562921524047852
    9. ')]' → logprob: -12.937921524047852
    10. 'in' → logprob: -13.062921524047852

Token 70: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16081421077251434
    2. ' _' → logprob: -1.9108141660690308
    3. ' range' → logprob: -7.53581428527832
    4. 'range' → logprob: -10.53581428527832
    5. ' in' → logprob: -10.78581428527832
    6. '_range' → logprob: -11.66081428527832
    7. ' ' → logprob: -15.91081428527832
    8. '_in' → logprob: -15.91081428527832
    9. 'in' → logprob: -16.41081428527832
    10. ' b' → logprob: -16.66081428527832

Token 71: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008168546482920647
    2. ' range' → logprob: -4.883168697357178
    3. ' in' → logprob: -8.00816822052002
    4. 'in' → logprob: -8.38316822052002
    5. '_range' → logprob: -15.63316822052002
    6. ' ' → logprob: -15.75816822052002
    7. '_' → logprob: -15.88316822052002
    8. '	range' → logprob: -15.88316822052002
    9. '<|end|>' → logprob: -16.258169174194336
    10. '(range' → logprob: -16.508169174194336

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061971161514520645
    2. ' range' → logprob: -2.8119711875915527
    3. '_range' → logprob: -12.686970710754395
    4. '_' → logprob: -15.311970710754395
    5. '(range' → logprob: -15.811970710754395
    6. '	range' → logprob: -17.06197166442871
    7. '    ' → logprob: -19.68697166442871
    8. ' ' → logprob: -20.18697166442871
    9. '-range' → logprob: -20.31197166442871
    10. '.range' → logprob: -20.43697166442871

Token 73: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.318681188422488e-05
    2. 'b' → logprob: -11.25001335144043
    3. ' (' → logprob: -16.37501335144043
    4. ' b' → logprob: -16.75001335144043
    5. '	b' → logprob: -16.87501335144043
    6. '(' → logprob: -18.25001335144043
    7. '(a' → logprob: -18.37501335144043
    8. '   ' → logprob: -20.37501335144043
    9. '(B' → logprob: -20.62501335144043
    10. '/b' → logprob: -20.75001335144043

Token 74: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0619877465069294
    2. ']' → logprob: -2.8119876384735107
    3. ')' → logprob: -11.56198787689209
    4. ' ]' → logprob: -11.93698787689209
    5. ']]' → logprob: -12.68698787689209
    6. '}]' → logprob: -15.18698787689209
    7. ' ' → logprob: -15.93698787689209
    8. '   ' → logprob: -16.061986923217773
    9. '])' → logprob: -16.311986923217773
    10. '>]' → logprob: -16.436986923217773

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07067336142063141
    2. 'for' → logprob: -2.9456734657287598
    3. ']' → logprob: -4.32067346572876
    4. ' in' → logprob: -6.07067346572876
    5. '	for' → logprob: -10.695672988891602
    6. ' ' → logprob: -10.820672988891602
    7. ' ]' → logprob: -11.570672988891602
    8. ')' → logprob: -12.195672988891602
    9. 'in' → logprob: -12.695672988891602
    10. '   ' → logprob: -13.070672988891602

Token 76: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006780500523746014
    2. ' _' → logprob: -5.506780624389648
    3. ' range' → logprob: -6.006780624389648
    4. 'range' → logprob: -8.756780624389648
    5. '_range' → logprob: -9.631780624389648
    6. 'a' → logprob: -12.131780624389648
    7. ' a' → logprob: -12.381780624389648
    8. '_a' → logprob: -12.881780624389648
    9. ' in' → logprob: -14.131780624389648
    10. '_

' → logprob: -16.00678062438965

Token 77: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03813834488391876
    2. ' range' → logprob: -3.2881383895874023
    3. '(range' → logprob: -9.413138389587402
    4. '_range' → logprob: -11.163138389587402
    5. '	range' → logprob: -14.413138389587402
    6. ' in' → logprob: -14.913138389587402
    7. '_' → logprob: -16.538137435913086
    8. '-range' → logprob: -18.038137435913086
    9. '.range' → logprob: -18.163137435913086
    10. 'in' → logprob: -18.163137435913086

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47466641664505005
    2. ' range' → logprob: -0.97466641664505
    3. 'a' → logprob: -7.599666595458984
    4. ' a' → logprob: -9.974666595458984
    5. '_range' → logprob: -10.224666595458984
    6. '(range' → logprob: -12.849666595458984
    7. '_' → logprob: -13.099666595458984
    8. ' xrange' → logprob: -14.599666595458984
    9. '	range' → logprob: -14.849666595458984
    10. '_a' → logprob: -15.349666595458984

Token 79: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00030269217677414417
    2. 'a' → logprob: -8.3753023147583
    3. ' (' → logprob: -9.6253023147583
    4. '(' → logprob: -12.3753023147583
    5. ' a' → logprob: -13.3753023147583
    6. '(d' → logprob: -16.875303268432617
    7. ')' → logprob: -17.000303268432617
    8. '	a' → logprob: -17.250303268432617
    9. ')]' → logprob: -17.875303268432617
    10. '(c' → logprob: -17.875303268432617

Token 80: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023319432511925697
    2. ']' → logprob: -3.7733194828033447
    3. ')' → logprob: -9.773319244384766
    4. '])]' → logprob: -11.898319244384766
    5. '])' → logprob: -12.273319244384766
    6. ')])' → logprob: -12.648319244384766
    7. ']]' → logprob: -13.898319244384766
    8. ')],' → logprob: -14.773319244384766
    9. ' ]' → logprob: -14.773319244384766
    10. '')]' → logprob: -15.898319244384766

Token 81: 'list' (ID: 2641)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39514800906181335
    2. '#' → logprob: -1.8951480388641357
    3. '
' → logprob: -2.1451480388641357
    4. 'n' → logprob: -4.020147800445557
    5. '

' → logprob: -4.020147800445557
    6. 'a' → logprob: -5.145147800445557
    7. 'd' → logprob: -5.520147800445557
    8. 'class' → logprob: -6.395147800445557
    9. 'x' → logprob: -6.645147800445557
    10. '(' → logprob: -6.645147800445557

Token 82: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020150113850831985
    2. '1' → logprob: -4.020150184631348
    3. '<|end|>' → logprob: -6.395150184631348
    4. ' ' → logprob: -9.770150184631348
    5. ' =' → logprob: -10.020150184631348
    6. '_' → logprob: -10.145150184631348
    7. '3' → logprob: -10.270150184631348
    8. 's' → logprob: -10.395150184631348
    9. '<|end|>' → logprob: -11.145150184631348
    10. '4' → logprob: -11.395150184631348

Token 83: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.128163257315464e-07
    2. '>d' → logprob: -17.125
    3. '```' → logprob: -17.125
    4. '	d' → logprob: -17.25
    5. '<|end|>' → logprob: -17.375
    6. 'def' → logprob: -17.5
    7. ')d' → logprob: -17.75
    8. ' d' → logprob: -17.875
    9. '_d' → logprob: -17.875
    10. 'д' → logprob: -18.125

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017044597771018744
    2. '=' → logprob: -6.376704692840576
    3. '=lambda' → logprob: -13.501704216003418
    4. ' ' → logprob: -14.126704216003418
    5. ' =
' → logprob: -16.876705169677734
    6. '(' → logprob: -17.876705169677734
    7. 'space' → logprob: -18.126705169677734
    8. '(lambda' → logprob: -18.501705169677734
    9. '＝' → logprob: -19.001705169677734
    10. ' =)' → logprob: -19.001705169677734

Token 85: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.029963841661810875
    2. 'lambda' → logprob: -3.529963731765747
    3. 'ambda' → logprob: -8.779963493347168
    4. '(lambda' → logprob: -9.779963493347168
    5. '=lambda' → logprob: -12.779963493347168
    6. ' lamb' → logprob: -15.654963493347168
    7. '.lambda' → logprob: -16.779964447021484
    8. '_lambda' → logprob: -17.154964447021484
    9. 'a' → logprob: -17.279964447021484
    10. ' a' → logprob: -18.154964447021484

Token 86: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519311308860779
    2. ' a' → logprob: -1.5019311904907227
    3. ' lambda' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '	a' → logprob: -16.376930236816406
    6. 'lambda' → logprob: -16.376930236816406
    7. '(a' → logprob: -17.001930236816406
    8. '   ' → logprob: -17.251930236816406
    9. '  ' → logprob: -18.126930236816406
    10. ' ' → logprob: -18.376930236816406

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009277798235416412
    2. ' ,' → logprob: -7.000927925109863
    3. ',a' → logprob: -11.750927925109863
    4. 'a' → logprob: -12.000927925109863
    5. ',b' → logprob: -14.500927925109863
    6. '‌,' → logprob: -14.750927925109863
    7. '_,' → logprob: -15.000927925109863
    8. '<|end|>' → logprob: -15.375927925109863
    9. ' a' → logprob: -16.125926971435547
    10. '=' → logprob: -16.250926971435547

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022524237632751
    2. ' b' → logprob: -1.91022527217865
    3. ' ' → logprob: -14.160224914550781
    4. '    ' → logprob: -16.28522491455078
    5. '	b' → logprob: -16.78522491455078
    6. '  ' → logprob: -16.78522491455078
    7. '   ' → logprob: -17.16022491455078
    8. '<|end|>' → logprob: -17.53522491455078
    9. '7' → logprob: -18.41022491455078
    10. '_b' → logprob: -18.53522491455078

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035810720873996615
    2. ',c' → logprob: -8.250358581542969
    3. ' ,' → logprob: -9.375358581542969
    4. 'c' → logprob: -11.375358581542969
    5. ' c' → logprob: -14.875358581542969
    6. '_,' → logprob: -16.87535858154297
    7. '，' → logprob: -17.25035858154297
    8. '‌,' → logprob: -17.25035858154297
    9. '`,' → logprob: -17.50035858154297
    10. ' ' → logprob: -17.75035858154297

Token 90: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020558468997478485
    2. ' c' → logprob: -3.8955583572387695
    3. '<|end|>' → logprob: -11.14555835723877
    4. ' ' → logprob: -14.02055835723877
    5. '	c' → logprob: -14.64555835723877
    6. ',c' → logprob: -14.77055835723877
    7. ',' → logprob: -15.27055835723877
    8. '_c' → logprob: -16.645559310913086
    9. '  ' → logprob: -16.770559310913086
    10. 'C' → logprob: -17.270559310913086

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001439459010725841
    2. ',d' → logprob: -9.375144004821777
    3. ' ,' → logprob: -9.750144004821777
    4. 'd' → logprob: -14.750144004821777
    5. '_,' → logprob: -16.50014305114746
    6. '‌,' → logprob: -16.50014305114746
    7. '<|end|>' → logprob: -17.25014305114746
    8. 's' → logprob: -17.50014305114746
    9. ',
' → logprob: -18.00014305114746
    10. '```' → logprob: -18.12514305114746

Token 92: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868716359138489
    2. ' d' → logprob: -1.136871576309204
    3. ' ' → logprob: -14.636871337890625
    4. '	d' → logprob: -16.136871337890625
    5. '<|end|>' → logprob: -16.261871337890625
    6. ' ' → logprob: -18.011871337890625
    7. '  ' → logprob: -18.011871337890625
    8. ',d' → logprob: -18.136871337890625
    9. '_d' → logprob: -18.386871337890625
    10. ')d' → logprob: -19.636871337890625

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28803950548171997
    2. ':' → logprob: -1.4130394458770752
    3. ' :' → logprob: -5.788039684295654
    4. ',:' → logprob: -6.163039684295654
    5. ' ,' → logprob: -7.163039684295654
    6. ',a' → logprob: -7.913039684295654
    7. '=' → logprob: -8.788039207458496
    8. ',:,' → logprob: -9.038039207458496
    9. 'a' → logprob: -9.163039207458496
    10. ':,' → logprob: -9.788039207458496

Token 94: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.16022492945194244
    2. 'e' → logprob: -1.9102249145507812
    3. '	e' → logprob: -14.535224914550781
    4. ' ' → logprob: -15.160224914550781
    5. '  ' → logprob: -17.91022491455078
    6. ' ' → logprob: -18.66022491455078
    7. '_e' → logprob: -19.16022491455078
    8. ',e' → logprob: -19.66022491455078
    9. 'ｅ' → logprob: -19.78522491455078
    10. '   ' → logprob: -19.91022491455078

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005078765680082142
    2. ' :' → logprob: -7.625507831573486
    3. '=' → logprob: -10.875508308410645
    4. ',' → logprob: -15.500508308410645
    5. ':[' → logprob: -15.500508308410645
    6. '=:' → logprob: -15.875508308410645
    7. ':
' → logprob: -16.250507354736328
    8. ',:' → logprob: -16.625507354736328
    9. ' =' → logprob: -16.750507354736328
    10. ':[[' → logprob: -17.000507354736328

Token 96: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -2.5822400857578032e-05
    2. ' [[[' → logprob: -11.000025749206543
    3. ' [[' → logprob: -11.625025749206543
    4. '[' → logprob: -16.62502670288086
    5. '[list' → logprob: -19.50002670288086
    6. '=[[' → logprob: -19.87502670288086
    7. '   ' → logprob: -20.00002670288086
    8. ':[[' → logprob: -20.25002670288086
    9. '[a' → logprob: -20.37502670288086
    10. '[['' → logprob: -20.37502670288086

Token 97: '[[' (ID: 26245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008666928857564926
    2. '[e' → logprob: -4.7586669921875
    3. '[' → logprob: -10.2586669921875
    4. ' e' → logprob: -12.2586669921875
    5. '(e' → logprob: -12.6336669921875
    6. 'd' → logprob: -12.6336669921875
    7. '	e' → logprob: -13.5086669921875
    8. '{' → logprob: -14.0086669921875
    9. '   ' → logprob: -14.0086669921875
    10. '[
' → logprob: -14.2586669921875

Token 98: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.5597102396423e-05
    2. ' e' → logprob: -10.250035285949707
    3. '	e' → logprob: -16.500036239624023
    4. '   ' → logprob: -16.500036239624023
    5. ' ' → logprob: -17.250036239624023
    6. '  ' → logprob: -18.125036239624023
    7. '    ' → logprob: -18.500036239624023
    8. '     ' → logprob: -18.875036239624023
    9. 'ｅ' → logprob: -19.125036239624023
    10. '
' → logprob: -19.375036239624023

Token 99: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12692894041538239
    2. 'for' → logprob: -2.1269290447235107
    3. '	for' → logprob: -14.25192928314209
    4. '<|end|>' → logprob: -16.251928329467773
    5. ' ' → logprob: -16.626928329467773
    6. ')' → logprob: -20.126928329467773
    7. '
' → logprob: -20.626928329467773
    8. '.for' → logprob: -21.001928329467773
    9. '```' → logprob: -21.001928329467773
    10. '_for' → logprob: -21.251928329467773

Token 100: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005248818546533585
    2. ' _' → logprob: -5.2552490234375
    3. ' in' → logprob: -11.1302490234375
    4. '_in' → logprob: -16.0052490234375
    5. '_range' → logprob: -16.1302490234375
    6. ' range' → logprob: -16.8802490234375
    7. 'in' → logprob: -17.0052490234375
    8. ' ' → logprob: -17.3802490234375
    9. '_

' → logprob: -17.5052490234375
    10. 'range' → logprob: -18.0052490234375

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027776438742876053
    2. 'in' → logprob: -3.6527764797210693
    3. 'range' → logprob: -6.52777624130249
    4. ' range' → logprob: -11.902776718139648
    5. '<|end|>' → logprob: -12.527776718139648
    6. ' ' → logprob: -13.777776718139648
    7. 'ange' → logprob: -15.027776718139648
    8. 'for' → logprob: -16.02777671813965
    9. '<|end|>' → logprob: -16.15277671813965
    10. 'n' → logprob: -16.15277671813965

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005237075500190258
    2. ' range' → logprob: -5.255237102508545
    3. '_' → logprob: -13.130236625671387
    4. '_range' → logprob: -13.880236625671387
    5. '(range' → logprob: -14.755236625671387
    6. '	range' → logprob: -17.505237579345703
    7. 'ran' → logprob: -17.755237579345703
    8. 'rang' → logprob: -19.255237579345703
    9. 'e' → logprob: -19.755237579345703
    10. '    ' → logprob: -21.005237579345703

Token 103: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.05998469144105911
    2. '(e' → logprob: -2.9349846839904785
    3. 'd' → logprob: -5.6849846839904785
    4. 'e' → logprob: -6.5599846839904785
    5. '(c' → logprob: -8.809985160827637
    6. '(' → logprob: -9.809985160827637
    7. '(
' → logprob: -10.809985160827637
    8. '(a' → logprob: -10.934985160827637
    9. '   ' → logprob: -11.184985160827637
    10. ' (' → logprob: -12.309985160827637

Token 104: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.64839569455944e-05
    2. ')' → logprob: -9.875076293945312
    3. ']' → logprob: -10.625076293945312
    4. ')]
' → logprob: -14.875076293945312
    5. ' )' → logprob: -16.250076293945312
    6. ']]' → logprob: -16.375076293945312
    7. '])' → logprob: -16.500076293945312
    8. 'for' → logprob: -17.375076293945312
    9. '}]' → logprob: -18.125076293945312
    10. ')}' → logprob: -18.375076293945312

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31332454085350037
    2. 'for' → logprob: -1.3133245706558228
    3. '	for' → logprob: -10.188324928283691
    4. ' ' → logprob: -11.188324928283691
    5. '        ' → logprob: -13.188324928283691
    6. ')' → logprob: -13.188324928283691
    7. ' in' → logprob: -13.313324928283691
    8. '		' → logprob: -13.438324928283691
    9. '    ' → logprob: -14.313324928283691
    10. ' ' → logprob: -14.313324928283691

Token 106: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02975858747959137
    2. ' _' → logprob: -3.5297586917877197
    3. ' in' → logprob: -11.77975845336914
    4. ' range' → logprob: -14.90475845336914
    5. ' ' → logprob: -16.77975845336914
    6. '_range' → logprob: -16.77975845336914
    7. '<|end|>' → logprob: -17.15475845336914
    8. '_in' → logprob: -17.40475845336914
    9. 'range' → logprob: -17.52975845336914
    10. ' ' → logprob: -17.90475845336914

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5797329545021057
    2. 'in' → logprob: -0.8297329545021057
    3. 'range' → logprob: -5.579732894897461
    4. ' range' → logprob: -11.329732894897461
    5. ' ' → logprob: -14.954732894897461
    6. '<|end|>' → logprob: -15.454732894897461
    7. '
' → logprob: -17.32973289489746
    8. 'for' → logprob: -17.32973289489746
    9. ' _' → logprob: -17.82973289489746
    10. '_' → logprob: -17.95473289489746

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16025133430957794
    2. ' range' → logprob: -1.9102513790130615
    3. '(range' → logprob: -11.28525161743164
    4. '_' → logprob: -11.66025161743164
    5. '_range' → logprob: -12.03525161743164
    6. '	range' → logprob: -16.03525161743164
    7. ' xrange' → logprob: -19.66025161743164
    8. ' _' → logprob: -19.78525161743164
    9. '.range' → logprob: -20.28525161743164
    10. '-range' → logprob: -20.41025161743164

Token 109: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.546478935983032e-05
    2. 'c' → logprob: -10.625025749206543
    3. ' (' → logprob: -13.875025749206543
    4. ' c' → logprob: -15.875025749206543
    5. '	c' → logprob: -17.375024795532227
    6. ')c' → logprob: -18.375024795532227
    7. '(' → logprob: -19.125024795532227
    8. '(C' → logprob: -19.125024795532227
    9. '[c' → logprob: -19.250024795532227
    10. '(e' → logprob: -19.500024795532227

Token 110: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3676733690081164e-05
    2. ']' → logprob: -10.75002384185791
    3. ')' → logprob: -13.37502384185791
    4. ']]' → logprob: -15.62502384185791
    5. ')]
' → logprob: -15.75002384185791
    6. ' )' → logprob: -16.250022888183594
    7. ' ]' → logprob: -16.500022888183594
    8. '])' → logprob: -16.875022888183594
    9. '       ' → logprob: -18.375022888183594
    10. '}]' → logprob: -18.375022888183594

Token 111: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02479475922882557
    2. 'for' → logprob: -3.774794816970825
    3. ' in' → logprob: -6.524794578552246
    4. '	for' → logprob: -10.399794578552246
    5. ' ' → logprob: -10.649794578552246
    6. '        ' → logprob: -11.649794578552246
    7. '    ' → logprob: -12.149794578552246
    8. '		' → logprob: -12.774794578552246
    9. '	' → logprob: -13.274794578552246
    10. 'in' → logprob: -13.524794578552246

Token 112: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1602608859539032
    2. '_' → logprob: -1.9102609157562256
    3. ' range' → logprob: -10.410261154174805
    4. ' in' → logprob: -12.160261154174805
    5. '_range' → logprob: -14.285261154174805
    6. 'range' → logprob: -14.410261154174805
    7. ' ' → logprob: -16.160261154174805
    8. '<|end|>' → logprob: -16.535261154174805
    9. ' ' → logprob: -17.035261154174805
    10. '(range' → logprob: -18.660261154174805

Token 113: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009543695487082005
    2. ' in' → logprob: -5.2595438957214355
    3. ' range' → logprob: -5.7595438957214355
    4. 'in' → logprob: -7.2595438957214355
    5. '_' → logprob: -8.259543418884277
    6. '_range' → logprob: -8.759543418884277
    7. '(range' → logprob: -10.509543418884277
    8. '	range' → logprob: -13.759543418884277
    9. '_in' → logprob: -15.759543418884277
    10. '<|end|>' → logprob: -16.759544372558594

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007061549928039312
    2. ' range' → logprob: -5.00706148147583
    3. '_' → logprob: -8.507061958312988
    4. '(range' → logprob: -9.007061958312988
    5. '_range' → logprob: -10.757061958312988
    6. '	range' → logprob: -15.007061958312988
    7. '-range' → logprob: -17.757061004638672
    8. ' _' → logprob: -18.632061004638672
    9. '    ' → logprob: -19.132061004638672
    10. 'b' → logprob: -19.257061004638672

Token 115: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.180879816180095e-05
    2. 'b' → logprob: -10.500051498413086
    3. ' (' → logprob: -10.750051498413086
    4. 'range' → logprob: -13.500051498413086
    5. ' b' → logprob: -14.750051498413086
    6. '(range' → logprob: -15.250051498413086
    7. '	b' → logprob: -15.500051498413086
    8. '(' → logprob: -15.750051498413086
    9. ' range' → logprob: -15.875051498413086
    10. '   ' → logprob: -16.250051498413086

Token 116: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16140983998775482
    2. ']' → logprob: -1.911409854888916
    3. ')' → logprob: -6.786409854888916
    4. ']]' → logprob: -10.661409378051758
    5. ' ]' → logprob: -11.286409378051758
    6. '       ' → logprob: -12.161409378051758
    7. '   ' → logprob: -12.411409378051758
    8. ')],' → logprob: -13.161409378051758
    9. ']
' → logprob: -13.411409378051758
    10. '](' → logprob: -13.536409378051758

Token 117: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15362514555454254
    2. 'for' → logprob: -2.153625249862671
    3. ' in' → logprob: -3.653625249862671
    4. 'in' → logprob: -7.778625011444092
    5. '	for' → logprob: -11.27862548828125
    6. ' ' → logprob: -11.65362548828125
    7. ')' → logprob: -12.90362548828125
    8. ']' → logprob: -13.27862548828125
    9. '   ' → logprob: -15.15362548828125
    10. ' ' → logprob: -15.15362548828125

Token 118: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.055195264518260956
    2. '_' → logprob: -3.0551953315734863
    3. ' range' → logprob: -5.055195331573486
    4. '_range' → logprob: -8.930194854736328
    5. 'range' → logprob: -9.930194854736328
    6. ' in' → logprob: -10.680194854736328
    7. ' ' → logprob: -12.555194854736328
    8. '_in' → logprob: -14.680194854736328
    9. ' _
' → logprob: -14.680194854736328
    10. '(range' → logprob: -14.805194854736328

Token 119: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006234417669475079
    2. ' range' → logprob: -7.5006232261657715
    3. '(range' → logprob: -9.75062370300293
    4. '_range' → logprob: -11.37562370300293
    5. '	range' → logprob: -15.37562370300293
    6. ' in' → logprob: -15.62562370300293
    7. 'in' → logprob: -15.62562370300293
    8. '_' → logprob: -17.12562370300293
    9. 'rang' → logprob: -17.62562370300293
    10. '-range' → logprob: -18.75062370300293

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03894504904747009
    2. ' range' → logprob: -3.288944959640503
    3. '(range' → logprob: -7.038945198059082
    4. '_range' → logprob: -10.663945198059082
    5. '_' → logprob: -13.038945198059082
    6. 'a' → logprob: -15.913945198059082
    7. '(a' → logprob: -16.038944244384766
    8. '(' → logprob: -16.038944244384766
    9. '	range' → logprob: -16.413944244384766
    10. '-range' → logprob: -18.163944244384766

Token 121: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00010950337309623137
    2. 'a' → logprob: -9.125109672546387
    3. '(' → logprob: -14.750109672546387
    4. ' (' → logprob: -16.62510871887207
    5. 'range' → logprob: -16.87510871887207
    6. ' a' → logprob: -18.50010871887207
    7. '   ' → logprob: -18.62510871887207
    8. '(e' → logprob: -19.00010871887207
    9. '[a' → logprob: -19.75010871887207
    10. '(
' → logprob: -20.12510871887207

Token 122: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.47411099076271057
    2. ']' → logprob: -0.9741109609603882
    3. ')' → logprob: -10.59911060333252
    4. '])' → logprob: -12.72411060333252
    5. ']]' → logprob: -12.84911060333252
    6. ']}' → logprob: -14.22411060333252
    7. '])]' → logprob: -14.34911060333252
    8. ' ]' → logprob: -14.47411060333252
    9. ')],' → logprob: -14.84911060333252
    10. ')])' → logprob: -15.09911060333252

Token 123: 'ceil' (ID: 43552)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019402919337153435
    2. 'n' → logprob: -5.269402980804443
    3. '
' → logprob: -5.519402980804443
    4. '#' → logprob: -5.644402980804443
    5. 'a' → logprob: -7.144402980804443
    6. 'from' → logprob: -7.394402980804443
    7. ')' → logprob: -7.644402980804443
    8. 'import' → logprob: -8.019402503967285
    9. '

' → logprob: -8.144402503967285
    10. 'class' → logprob: -8.144402503967285

Token 124: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005490229465067387
    2. '_div' → logprob: -6.380490303039551
    3. '_' → logprob: -6.630490303039551
    4. 'import' → logprob: -6.880490303039551
    5. '=' → logprob: -7.630490303039551
    6. 'div' → logprob: -7.880490303039551
    7. 's' → logprob: -9.25549030303955
    8. ',' → logprob: -9.25549030303955
    9. 'd' → logprob: -9.38049030303955
    10. ')' → logprob: -10.00549030303955

Token 125: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4329848289489746
    2. ' lambda' → logprob: -1.4329848289489746
    3. '(lambda' → logprob: -2.1829848289489746
    4. '=lambda' → logprob: -9.057985305786133
    5. 'int' → logprob: -11.807985305786133
    6. '-' → logprob: -12.682985305786133
    7. ' -' → logprob: -13.432985305786133
    8. ' (' → logprob: -15.557985305786133
    9. '10' → logprob: -15.932985305786133
    10. ' int' → logprob: -16.057985305786133

Token 126: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21026092767715454
    2. ' x' → logprob: -1.7102608680725098
    3. 'a' → logprob: -5.46026086807251
    4. 'lambda' → logprob: -5.83526086807251
    5. ' lambda' → logprob: -6.71026086807251
    6. ' a' → logprob: -8.210261344909668
    7. 'n' → logprob: -9.585261344909668
    8. '(lambda' → logprob: -10.460261344909668
    9. '(x' → logprob: -11.335261344909668
    10. ' ' → logprob: -11.460261344909668

Token 127: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022897832095623016
    2. ':(' → logprob: -6.252289772033691
    3. ' :' → logprob: -8.752289772033691
    4. ',' → logprob: -9.002289772033691
    5. ':x' → logprob: -10.002289772033691
    6. ':int' → logprob: -11.377289772033691
    7. ':
' → logprob: -12.127289772033691
    8. ' :(' → logprob: -12.252289772033691
    9. ',:' → logprob: -12.627289772033691
    10. '_:' → logprob: -13.377289772033691

Token 128: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04859498515725136
    2. ' y' → logprob: -3.0485949516296387
    3. 'b' → logprob: -13.298595428466797
    4. 'd' → logprob: -13.673595428466797
    5. 'n' → logprob: -13.673595428466797
    6. ' ' → logprob: -13.798595428466797
    7. 'a' → logprob: -14.048595428466797
    8. 'm' → logprob: -14.173595428466797
    9. 'x' → logprob: -15.423595428466797
    10. ':' → logprob: -15.673595428466797

Token 129: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018935515254270285
    2. ':(' → logprob: -8.750189781188965
    3. ' :' → logprob: -10.750189781188965
    4. ':x' → logprob: -12.375189781188965
    5. '=' → logprob: -12.625189781188965
    6. ',' → logprob: -14.625189781188965
    7. '=(' → logprob: -14.625189781188965
    8. ' :(' → logprob: -14.750189781188965
    9. ':
' → logprob: -16.00018882751465
    10. ':int' → logprob: -16.12518882751465

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35836154222488403
    2. ' x' → logprob: -2.3583614826202393
    3. ' ' → logprob: -2.4833614826202393
    4. 'x' → logprob: -2.8583614826202393
    5. '2' → logprob: -2.9833614826202393
    6. 'int' → logprob: -5.108361721038818
    7. ' None' → logprob: -5.608361721038818
    8. ' int' → logprob: -6.483361721038818
    9. '10' → logprob: -6.608361721038818
    10. 'None' → logprob: -7.233361721038818

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022379241418093443
    2. ':(' → logprob: -6.127237796783447
    3. ' :' → logprob: -11.127238273620605
    4. ',' → logprob: -11.127238273620605
    5. ':x' → logprob: -11.127238273620605
    6. '(x' → logprob: -12.252238273620605
    7. ' :(' → logprob: -13.627238273620605
    8. ':
' → logprob: -14.502238273620605
    9. ',:' → logprob: -15.252238273620605
    10. ':`' → logprob: -15.252238273620605

Token 132: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002816528081893921
    2. ' (' → logprob: -6.377816677093506
    3. '-' → logprob: -7.002816677093506
    4. ' -' → logprob: -8.752816200256348
    5. '-(' → logprob: -10.127816200256348
    6. '((' → logprob: -13.002816200256348
    7. ' ' → logprob: -13.627816200256348
    8. '-x' → logprob: -14.252816200256348
    9. '(-' → logprob: -14.502816200256348
    10. '(' → logprob: -14.502816200256348

Token 133: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03618396818637848
    2. '(x' → logprob: -3.411184072494507
    3. '-' → logprob: -6.661183834075928
    4. '-x' → logprob: -6.786183834075928
    5. '-(' → logprob: -9.036184310913086
    6. ' x' → logprob: -12.911184310913086
    7. '((' → logprob: -13.161184310913086
    8. '(' → logprob: -14.661184310913086
    9. '+x' → logprob: -15.036184310913086
    10. ' -' → logprob: -15.411184310913086

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3143106698989868
    2. ' +' → logprob: -1.3143106698989868
    3. '+y' → logprob: -6.939310550689697
    4. '+(' → logprob: -10.189311027526855
    5. '-' → logprob: -10.439311027526855
    6. '+x' → logprob: -11.564311027526855
    7. ' -' → logprob: -13.689311027526855
    8. '＋' → logprob: -14.064311027526855
    9. ' ' → logprob: -15.189311027526855
    10. ' +(' → logprob: -15.564311027526855

Token 135: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002771239960566163
    2. '(y' → logprob: -6.002771377563477
    3. ' y' → logprob: -8.127771377563477
    4. '(' → logprob: -16.002771377563477
    5. ' (' → logprob: -16.127771377563477
    6. '[y' → logprob: -17.377771377563477
    7. '	y' → logprob: -17.502771377563477
    8. '-' → logprob: -17.502771377563477
    9. '
' → logprob: -17.877771377563477
    10. ''y' → logprob: -18.502771377563477

Token 136: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.190178904333152e-05
    2. ' y' → logprob: -10.500031471252441
    3. '(y' → logprob: -12.375031471252441
    4. '
' → logprob: -16.750032424926758
    5. '	y' → logprob: -19.000032424926758
    6. '-' → logprob: -19.250032424926758
    7. ')y' → logprob: -19.250032424926758
    8. '   ' → logprob: -19.500032424926758
    9. '(' → logprob: -20.125032424926758
    10. ''y' → logprob: -20.125032424926758

Token 137: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06196824833750725
    2. ' -' → logprob: -2.8119683265686035
    3. ')' → logprob: -14.686967849731445
    4. 'y' → logprob: -15.686967849731445
    5. ')-' → logprob: -17.686967849731445
    6. ' ' → logprob: -17.811967849731445
    7. ' y' → logprob: -18.436967849731445
    8. '−' → logprob: -18.561967849731445
    9. '-y' → logprob: -19.311967849731445
    10. '1' → logprob: -19.436967849731445

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '１' → logprob: -18.375017166137695
    4. '
' → logprob: -19.000017166137695
    5. ')' → logprob: -20.000017166137695
    6. '

' → logprob: -20.250017166137695
    7. '   ' → logprob: -21.125017166137695
    8. '۱' → logprob: -21.125017166137695
    9. '```' → logprob: -21.312517166137695
    10. ' ' → logprob: -21.375017166137695

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. ')' → logprob: -20.875
    4. '
' → logprob: -21.375
    5. '１' → logprob: -21.875
    6. '```' → logprob: -22.375
    7. '

' → logprob: -22.625
    8. '2' → logprob: -23.0
    9. '(' → logprob: -23.75
    10. 'int' → logprob: -23.875

Token 140: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014165159314870834
    2. ')//' → logprob: -4.264164924621582
    3. ' )' → logprob: -13.764164924621582
    4. '//' → logprob: -14.889164924621582
    5. ')
' → logprob: -15.139164924621582
    6. ')

' → logprob: -18.3891658782959
    7. ')#' → logprob: -19.1391658782959
    8. '）' → logprob: -19.2641658782959
    9. ' //' → logprob: -20.3891658782959
    10. '))' → logprob: -21.0141658782959

Token 141: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04861859232187271
    2. ' //' → logprob: -3.0486185550689697
    3. ')' → logprob: -11.42361831665039
    4. '#' → logprob: -11.67361831665039
    5. ')//' → logprob: -12.54861831665039
    6. '//
' → logprob: -12.79861831665039
    7. '```' → logprob: -13.17361831665039
    8. '
' → logprob: -14.04861831665039
    9. ' ' → logprob: -14.17361831665039
    10. ' ' → logprob: -14.17361831665039

Token 142: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.836499985889532e-05
    2. ' y' → logprob: -9.7500581741333
    3. '	y' → logprob: -20.250059127807617
    4. 'x' → logprob: -20.500059127807617
    5. ''y' → logprob: -22.000059127807617
    6. ')y' → logprob: -22.375059127807617
    7. '(y' → logprob: -23.125059127807617
    8. '*y' → logprob: -23.250059127807617
    9. '‘y' → logprob: -23.500059127807617
    10. ' ' → logprob: -23.750059127807617

Token 143: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6993771195411682
    2. 'floor' → logprob: -1.1993770599365234
    3. 'max' → logprob: -2.5743770599365234
    4. 'mod' → logprob: -3.1993770599365234
    5. 'range' → logprob: -4.324377059936523
    6. 'min' → logprob: -4.449377059936523
    7. 'abs' → logprob: -4.949377059936523
    8. 'round' → logprob: -5.199377059936523
    9. 'from' → logprob: -5.199377059936523
    10. 'input' → logprob: -5.324377059936523

Token 144: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023564213886857033
    2. ' x' → logprob: -4.023564338684082
    3. 'y' → logprob: -5.398564338684082
    4. ' y' → logprob: -7.148564338684082
    5. '(x' → logprob: -9.523564338684082
    6. ' isinstance' → logprob: -12.148564338684082
    7. ' ' → logprob: -12.398564338684082
    8. ' (' → logprob: -13.023564338684082
    9. '(y' → logprob: -13.023564338684082
    10. '0' → logprob: -13.773564338684082

Token 145: ' !=' (ID: 1666)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17501860857009888
    2. '>' → logprob: -2.050018548965454
    3. ' else' → logprob: -3.800018548965454
    4. '!=' → logprob: -4.675018787384033
    5. ' >' → logprob: -9.800018310546875
    6. 'and' → logprob: -10.425018310546875
    7. 'y' → logprob: -11.175018310546875
    8. '>=' → logprob: -12.050018310546875
    9. ' !=' → logprob: -12.175018310546875
    10. '!==' → logprob: -12.175018310546875

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. '۰' → logprob: -16.125627517700195
    4. '1' → logprob: -16.375627517700195
    5. '０' → logprob: -16.938127517700195
    6. '
' → logprob: -17.125627517700195
    7. ' ' → logprob: -17.625627517700195
    8. '٠' → logprob: -17.625627517700195
    9. '  ' → logprob: -17.938127517700195
    10. '```' → logprob: -18.000627517700195

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014716439181938767
    2. ' ' → logprob: -8.875146865844727
    3. '1' → logprob: -11.875146865844727
    4. '۰' → logprob: -16.312646865844727
    5. '０' → logprob: -16.812646865844727
    6. '```' → logprob: -17.500146865844727
    7. '
' → logprob: -17.750146865844727
    8. 'None' → logprob: -17.875146865844727
    9. '   ' → logprob: -17.937646865844727
    10. '  ' → logprob: -18.125146865844727

Token 148: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31326475739479065
    2. 'else' → logprob: -1.3132647275924683
    3. ' ' → logprob: -13.313264846801758
    4. '	else' → logprob: -14.688264846801758
    5. '>' → logprob: -14.813264846801758
    6. ' ' → logprob: -15.313264846801758
    7. '0' → logprob: -16.938264846801758
    8. '```' → logprob: -16.938264846801758
    9. '_else' → logprob: -17.688264846801758
    10. '!=' → logprob: -17.688264846801758

Token 149: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010490043787285686
    2. ' ' → logprob: -7.501049041748047
    3. 'x' → logprob: -8.376049041748047
    4. 'None' → logprob: -8.876049041748047
    5. '1' → logprob: -10.126049041748047
    6. 'int' → logprob: -10.501049041748047
    7. 'float' → logprob: -10.876049041748047
    8. '10' → logprob: -11.376049041748047
    9. '-' → logprob: -12.001049041748047
    10. '(x' → logprob: -12.126049041748047

Token 150: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.1513499766588211
    2. ''' → logprob: -2.1513500213623047
    3. '('' → logprob: -4.401350021362305
    4. 'inf' → logprob: -4.526350021362305
    5. ''x' → logprob: -7.526350021362305
    6. ''int' → logprob: -9.401350021362305
    7. ''inc' → logprob: -9.776350021362305
    8. ''s' → logprob: -10.276350021362305
    9. ''ins' → logprob: -10.401350021362305
    10. ''d' → logprob: -10.526350021362305

Token 151: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.002227691002190113
    2. ''in' → logprob: -6.252227783203125
    3. ''' → logprob: -8.127227783203125
    4. ' inf' → logprob: -13.502227783203125
    5. 'in' → logprob: -14.252227783203125
    6. '0' → logprob: -14.377227783203125
    7. '-inf' → logprob: -14.877227783203125
    8. '"' → logprob: -15.877227783203125
    9. '('' → logprob: -16.502227783203125
    10. ''ins' → logprob: -16.752227783203125

Token 152: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006968271918594837
    2. '')' → logprob: -7.375696659088135
    3. ' )' → logprob: -10.500697135925293
    4. ' else' → logprob: -11.250697135925293
    5. '<|end|>' → logprob: -11.500697135925293
    6. ')
' → logprob: -12.125697135925293
    7. '))' → logprob: -12.625697135925293
    8. 'else' → logprob: -13.500697135925293
    9. ')return' → logprob: -13.625697135925293
    10. '")' → logprob: -13.625697135925293

Token 153: 'INT' (ID: 7154)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04376990348100662
    2. 'max' → logprob: -4.293769836425781
    3. '#' → logprob: -5.168769836425781
    4. 'range' → logprob: -5.918769836425781
    5. 'n' → logprob: -6.168769836425781
    6. ')' → logprob: -6.293769836425781
    7. 'mod' → logprob: -6.418769836425781
    8. 'print' → logprob: -6.668769836425781
    9. 'input' → logprob: -6.668769836425781
    10. 'read' → logprob: -6.793769836425781

Token 154: ' =' (ID: 314)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.0022763425949960947
    2. '_MIN' → logprob: -6.502276420593262
    3. '_' → logprob: -7.752276420593262
    4. '32' → logprob: -8.877276420593262
    5. 'MAX' → logprob: -9.127276420593262
    6. '_max' → logprob: -11.002276420593262
    7. '_INF' → logprob: -11.252276420593262
    8. '64' → logprob: -11.502276420593262
    9. '_BITS' → logprob: -11.627276420593262
    10. '8' → logprob: -11.627276420593262

Token 155: ' lambda' (ID: 27871)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0020454595796763897
    2. ' ' → logprob: -6.877045631408691
    3. 'float' → logprob: -7.752045631408691
    4. '1' → logprob: -7.752045631408691
    5. 'int' → logprob: -10.377045631408691
    6. '100' → logprob: -10.377045631408691
    7. '2' → logprob: -10.877045631408691
    8. '214' → logprob: -11.002045631408691
    9. 'sys' → logprob: -11.127045631408691
    10. '(' → logprob: -11.627045631408691

Token 156: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03245362266898155
    2. ' x' → logprob: -3.5324535369873047
    3. 'int' → logprob: -6.532453536987305
    4. 'sys' → logprob: -7.907453536987305
    5. 'a' → logprob: -8.157453536987305
    6. ':' → logprob: -8.282453536987305
    7. 's' → logprob: -9.282453536987305
    8. 'lambda' → logprob: -9.907453536987305
    9. '_' → logprob: -10.032453536987305
    10. ' sys' → logprob: -10.032453536987305

Token 157: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005235648714005947
    2. ' int' → logprob: -5.25523567199707
    3. 'map' → logprob: -13.88023567199707
    4. '	int' → logprob: -14.88023567199707
    5. '  ' → logprob: -15.25523567199707
    6. ' ' → logprob: -15.75523567199707
    7. '(int' → logprob: -16.13023567199707
    8. ':int' → logprob: -16.63023567199707
    9. '[int' → logprob: -17.13023567199707
    10. 'ints' → logprob: -17.63023567199707

Token 158: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004049432929605246
    2. '(sys' → logprob: -5.754049301147461
    3. '(' → logprob: -7.254049301147461
    4. 'input' → logprob: -8.879049301147461
    5. '()' → logprob: -10.754049301147461
    6. '(
' → logprob: -14.254049301147461
    7. '(int' → logprob: -14.379049301147461
    8. 'sys' → logprob: -14.504049301147461
    9. ' input' → logprob: -14.754049301147461
    10. '(next' → logprob: -15.504049301147461

Token 159: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00019734179659280926
    2. '()' → logprob: -8.625197410583496
    3. ')' → logprob: -11.875197410583496
    4. ' ())' → logprob: -11.875197410583496
    5. '())
' → logprob: -13.000197410583496
    6. '().' → logprob: -14.375197410583496
    7. '()))' → logprob: -14.750197410583496
    8. '(' → logprob: -15.500197410583496
    9. '();)' → logprob: -15.500197410583496
    10. '()
' → logprob: -16.62519645690918

Token 160: 'MAP' (ID: 36751)
  Prédit: 'INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INT' → logprob: -0.9974867105484009
    2. 'MAP' → logprob: -1.2474867105484009
    3. 'IN' → logprob: -1.9974867105484009
    4. 'STR' → logprob: -2.9974865913391113
    5. 'LIST' → logprob: -3.1224865913391113
    6. 'FLOAT' → logprob: -3.4974865913391113
    7. 'FLT' → logprob: -4.247486591339111
    8. 'def' → logprob: -4.747486591339111
    9. 'L' → logprob: -4.872486591339111
    10. 'M' → logprob: -5.122486591339111

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13627274334430695
    2. '=lambda' → logprob: -2.386272668838501
    3. ' =' → logprob: -3.761272668838501
    4. '()' → logprob: -4.76127290725708
    5. '=int' → logprob: -5.88627290725708
    6. '(lambda' → logprob: -8.511272430419922
    7. 'int' → logprob: -8.636272430419922
    8. ']' → logprob: -9.636272430419922
    9. 'IN' → logprob: -9.761272430419922
    10. ')' → logprob: -10.386272430419922

Token 162: ' lambda' (ID: 27871)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7059152722358704
    2. 'lambda' → logprob: -0.7059152722358704
    3. 'map' → logprob: -5.080915451049805
    4. '(lambda' → logprob: -5.205915451049805
    5. ' lambda' → logprob: -7.330915451049805
    6. ' list' → logprob: -8.330915451049805
    7. 'int' → logprob: -9.705915451049805
    8. '=lambda' → logprob: -11.330915451049805
    9. '(list' → logprob: -11.580915451049805
    10. ' map' → logprob: -12.830915451049805

Token 163: ':' (ID: 25)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.016677139326930046
    2. 'lambda' → logprob: -4.266676902770996
    3. ' list' → logprob: -7.016676902770996
    4. 'map' → logprob: -7.266676902770996
    5. ':list' → logprob: -7.641676902770996
    6. 'int' → logprob: -8.516676902770996
    7. ':' → logprob: -8.516676902770996
    8. ' lambda' → logprob: -11.016676902770996
    9. '(lambda' → logprob: -12.266676902770996
    10. 'n' → logprob: -12.641676902770996

Token 164: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006732422858476639
    2. 'map' → logprob: -5.00673246383667
    3. ' list' → logprob: -11.006731986999512
    4. 'lambda' → logprob: -15.006731986999512
    5. 'sys' → logprob: -16.256732940673828
    6. ' map' → logprob: -17.131732940673828
    7. '[' → logprob: -17.381732940673828
    8. 'tuple' → logprob: -18.131732940673828
    9. '[list' → logprob: -18.381732940673828
    10. ':list' → logprob: -18.506732940673828

Token 165: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06200330704450607
    2. 'int' → logprob: -2.8120033740997314
    3. '<int' → logprob: -10.812003135681152
    4. '(' → logprob: -12.437003135681152
    5. '=int' → logprob: -12.687003135681152
    6. ',int' → logprob: -13.562003135681152
    7. 'input' → logprob: -13.562003135681152
    8. 'str' → logprob: -13.812003135681152
    9. '[int' → logprob: -13.812003135681152
    10. ' int' → logprob: -14.187003135681152

Token 166: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11913057416677475
    2. '(input' → logprob: -2.2441306114196777
    3. '(' → logprob: -6.369130611419678
    4. ' input' → logprob: -6.369130611419678
    5. ',input' → logprob: -6.369130611419678
    6. '())' → logprob: -7.994130611419678
    7. ')' → logprob: -7.994130611419678
    8. '()' → logprob: -8.24413013458252
    9. '(),' → logprob: -9.74413013458252
    10. ' (' → logprob: -9.86913013458252

Token 167: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.493430894101039e-05
    2. ' input' → logprob: -9.500075340270996
    3. 'sys' → logprob: -17.25007438659668
    4. '(input' → logprob: -18.62507438659668
    5. '	input' → logprob: -20.50007438659668
    6. ' ' → logprob: -20.87507438659668
    7. '<input' → logprob: -22.12507438659668
    8. '_input' → logprob: -22.25007438659668
    9. ')' → logprob: -22.37507438659668
    10. '=input' → logprob: -22.37507438659668

Token 168: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -15.75001049041748
    4. '(' → logprob: -18.250009536743164
    5. '()
' → logprob: -19.125009536743164
    6. 'split' → logprob: -19.625009536743164
    7. '())' → logprob: -20.250009536743164
    8. '.split' → logprob: -20.500009536743164
    9. '().__' → logprob: -20.875009536743164
    10. ')' → logprob: -21.125009536743164

Token 169: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3663626305060461e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -14.50001335144043
    4. 'spl' → logprob: -17.50001335144043
    5. '(split' → logprob: -17.50001335144043
    6. 'rstrip' → logprob: -17.62501335144043
    7. '.split' → logprob: -18.12501335144043
    8. 's' → logprob: -19.50001335144043
    9. '().' → logprob: -20.50001335144043
    10. 'plit' → logprob: -22.75001335144043

Token 170: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0041217380203306675
    2. ')' → logprob: -5.754121780395508
    3. '()' → logprob: -7.004121780395508
    4. '()))' → logprob: -10.754121780395508
    5. '())
' → logprob: -12.129121780395508
    6. '))' → logprob: -12.129121780395508
    7. ' ())' → logprob: -13.129121780395508
    8. '(' → logprob: -14.504121780395508
    9. '();)' → logprob: -15.254121780395508
    10. '()]' → logprob: -15.754121780395508

Token 171: 'LIST' (ID: 44615)
  Prédit: 'STR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'STR' → logprob: -0.4762486517429352
    2. 'LIST' → logprob: -1.2262486219406128
    3. 'S' → logprob: -4.601248741149902
    4. 'from' → logprob: -4.726248741149902
    5. 'L' → logprob: -4.851248741149902
    6. 'SR' → logprob: -4.976248741149902
    7. 'def' → logprob: -4.976248741149902
    8. 'LS' → logprob: -4.976248741149902
    9. 'STRA' → logprob: -5.101248741149902
    10. 'INF' → logprob: -5.351248741149902

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017231308156624436
    2. '=lambda' → logprob: -7.001723289489746
    3. ' =' → logprob: -7.126723289489746
    4. '()' → logprob: -12.376723289489746
    5. '＝' → logprob: -13.126723289489746
    6. '(lambda' → logprob: -14.001723289489746
    7. ')' → logprob: -14.501723289489746
    8. ':' → logprob: -16.25172233581543
    9. '=[]' → logprob: -16.25172233581543
    10. '(' → logprob: -16.50172233581543

Token 173: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07819638401269913
    2. ' lambda' → logprob: -2.8281962871551514
    3. 'list' → logprob: -4.3281965255737305
    4. '(lambda' → logprob: -5.9531965255737305
    5. ' list' → logprob: -8.32819652557373
    6. '=lambda' → logprob: -9.70319652557373
    7. 'ambda' → logprob: -12.70319652557373
    8. ' lamb' → logprob: -14.20319652557373
    9. '=list' → logprob: -14.45319652557373
    10. 'lam' → logprob: -14.70319652557373

Token 174: ' N' (ID: 478)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03187333419919014
    2. ':list' → logprob: -3.7818732261657715
    3. ':' → logprob: -5.2818732261657715
    4. ' list' → logprob: -5.7818732261657715
    5. '(list' → logprob: -8.65687370300293
    6. 'int' → logprob: -8.90687370300293
    7. 'lambda' → logprob: -9.78187370300293
    8. 'map' → logprob: -10.28187370300293
    9. '=list' → logprob: -11.65687370300293
    10. '[list' → logprob: -11.78187370300293

Token 175: '=None' (ID: 12783)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002374223666265607
    2. '(n' → logprob: -6.502374172210693
    3. '=None' → logprob: -8.127374649047852
    4. 'n' → logprob: -8.127374649047852
    5. '(N' → logprob: -9.377374649047852
    6. ' :' → logprob: -9.877374649047852
    7. '=' → logprob: -10.002374649047852
    8. 'a' → logprob: -10.627374649047852
    9. '=n' → logprob: -11.127374649047852
    10. ',' → logprob: -11.752374649047852

Token 176: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030595881398767233
    2. ':list' → logprob: -6.253059387207031
    3. ' :' → logprob: -7.003059387207031
    4. ',' → logprob: -9.253059387207031
    5. ':int' → logprob: -10.253059387207031
    6. '():' → logprob: -10.378059387207031
    7. '(' → logprob: -12.253059387207031
    8. '(n' → logprob: -12.503059387207031
    9. ':N' → logprob: -12.503059387207031
    10. ' (' → logprob: -12.628059387207031

Token 177: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.003737018210813403
    2. '[list' → logprob: -5.753736972808838
    3. ' list' → logprob: -8.253737449645996
    4. '[]' → logprob: -8.503737449645996
    5. '[int' → logprob: -9.628737449645996
    6. '(list' → logprob: -10.628737449645996
    7. '[' → logprob: -12.503737449645996
    8. '[n' → logprob: -13.878737449645996
    9. ':list' → logprob: -14.753737449645996
    10. '[List' → logprob: -15.628737449645996

Token 178: '(M' (ID: 6103)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.024648455902934074
    2. '(M' → logprob: -3.899648427963257
    3. '(int' → logprob: -6.024648666381836
    4. '()' → logprob: -6.899648666381836
    5. '(range' → logprob: -8.524648666381836
    6. '(' → logprob: -8.774648666381836
    7. '(list' → logprob: -9.274648666381836
    8. '(input' → logprob: -9.274648666381836
    9. '(sys' → logprob: -9.649648666381836
    10. '(INT' → logprob: -11.274648666381836

Token 179: 'AP' (ID: 2685)
  Prédit: 'AP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AP' → logprob: -2.236549335066229e-05
    2. '(AP' → logprob: -10.875021934509277
    3. 'ap' → logprob: -13.375021934509277
    4. '()' → logprob: -14.375021934509277
    5. '
' → logprob: -15.250021934509277
    6. '(' → logprob: -15.250021934509277
    7. ' AP' → logprob: -15.750021934509277
    8. 'АП' → logprob: -16.000022888183594
    9. 'A' → logprob: -16.125022888183594
    10. '(ap' → logprob: -16.500022888183594

Token 180: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.060745205730199814
    2. '())' → logprob: -3.3107452392578125
    3. '(N' → logprob: -3.8107452392578125
    4. '()))' → logprob: -8.560745239257812
    5. '(' → logprob: -9.560745239257812
    6. '(None' → logprob: -10.935745239257812
    7. '())
' → logprob: -10.935745239257812
    8. '((' → logprob: -11.935745239257812
    9. ')' → logprob: -12.810745239257812
    10. '()`' → logprob: -13.185745239257812

Token 181: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023510999977588654
    2. '(' → logprob: -4.523510932922363
    3. '[]' → logprob: -5.398510932922363
    4. 'def' → logprob: -5.898510932922363
    5. '<|end|>' → logprob: -6.523510932922363
    6. '[' → logprob: -7.773510932922363
    7. ')' → logprob: -7.773510932922363
    8. ',' → logprob: -7.898510932922363
    9. '[:]' → logprob: -8.023510932922363
    10. '()
' → logprob: -8.023510932922363

Token 182: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011048289015889168
    2. ' N' → logprob: -4.511048316955566
    3. ' not' → logprob: -14.636048316955566
    4. 'not' → logprob: -18.13604736328125
    5. '	N' → logprob: -18.88604736328125
    6. '(N' → logprob: -18.88604736328125
    7. ' ' → logprob: -19.01104736328125
    8. ' (' → logprob: -19.88604736328125
    9. '[N' → logprob: -20.63604736328125
    10. '<N' → logprob: -21.01104736328125

Token 183: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1626804769039154
    2. ' is' → logprob: -1.9126805067062378
    3. '==' → logprob: -6.037680625915527
    4. '!=' → logprob: -10.037680625915527
    5. 'in' → logprob: -12.162680625915527
    6. 'else' → logprob: -12.162680625915527
    7. ')' → logprob: -12.787680625915527
    8. ' ' → logprob: -12.912680625915527
    9. ' ==' → logprob: -13.287680625915527
    10. '()' → logprob: -13.912680625915527

Token 184: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004121142439544201
    2. ' None' → logprob: -5.50412130355835
    3. 'not' → logprob: -10.504120826721191
    4. ' not' → logprob: -11.129120826721191
    5. 'Not' → logprob: -15.004120826721191
    6. '_None' → logprob: -15.754120826721191
    7. '(None' → logprob: -16.754121780395508
    8. ' ' → logprob: -18.129121780395508
    9. 'none' → logprob: -18.504121780395508
    10. 'False' → logprob: -18.754121780395508

Token 185: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04859009385108948
    2. ' else' → logprob: -3.0485901832580566
    3. '()' → logprob: -13.048589706420898
    4. '[]' → logprob: -15.673589706420898
    5. '	else' → logprob: -15.923589706420898
    6. 'or' → logprob: -16.4235897064209
    7. '_else' → logprob: -16.7985897064209
    8. 'elses' → logprob: -16.9235897064209
    9. ' or' → logprob: -17.1735897064209
    10. ' ' → logprob: -17.4235897064209

Token 186: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006789620500057936
    2. '[list' → logprob: -5.006789684295654
    3. ' list' → logprob: -9.756789207458496
    4. '[' → logprob: -11.506789207458496
    5. '[n' → logprob: -12.881789207458496
    6. '[int' → logprob: -13.131789207458496
    7. '[N' → logprob: -14.881789207458496
    8. ' [' → logprob: -14.881789207458496
    9. '[List' → logprob: -15.006789207458496
    10. '[l' → logprob: -15.256789207458496

Token 187: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.8763911724090576
    2. '(int' → logprob: -1.5013911724090576
    3. '(lambda' → logprob: -1.5013911724090576
    4. '(M' → logprob: -2.7513911724090576
    5. '(range' → logprob: -2.8763911724090576
    6. '(' → logprob: -5.001391410827637
    7. '(INT' → logprob: -5.626391410827637
    8. '(L' → logprob: -6.251391410827637
    9. '(list' → logprob: -6.501391410827637
    10. '[int' → logprob: -6.626391410827637

Token 188: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001720742875477299
    2. 'int' → logprob: -8.750171661376953
    3. '(INT' → logprob: -11.875171661376953
    4. '(lambda' → logprob: -12.375171661376953
    5. '(' → logprob: -14.000171661376953
    6. '[int' → logprob: -14.250171661376953
    7. ',int' → logprob: -15.375171661376953
    8. 'INT' → logprob: -15.750171661376953
    9. '```' → logprob: -15.750171661376953
    10. '=int' → logprob: -16.000171661376953

Token 189: ' _:' (ID: 133568)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027997972443699837
    2. '_:' → logprob: -3.7779979705810547
    3. '_int' → logprob: -5.777997970581055
    4. ':int' → logprob: -7.152997970581055
    5. '_' → logprob: -8.152997970581055
    6. '_,' → logprob: -8.652997970581055
    7. 'x' → logprob: -9.402997970581055
    8. 'INT' → logprob: -9.402997970581055
    9. '_INT' → logprob: -9.652997970581055
    10. ' int' → logprob: -10.277997970581055

Token 190: ' INT' (ID: 20104)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2536992132663727
    2. 'INT' → logprob: -1.5036991834640503
    3. '_' → logprob: -7.75369930267334
    4. '_INT' → logprob: -7.87869930267334
    5. ' int' → logprob: -8.00369930267334
    6. ' INT' → logprob: -8.12869930267334
    7. '_int' → logprob: -8.12869930267334
    8. 'input' → logprob: -11.50369930267334
    9. '   ' → logprob: -12.12869930267334
    10. ' _' → logprob: -12.87869930267334

Token 191: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.001224989420734346
    2. ',' → logprob: -6.876224994659424
    3. '()' → logprob: -8.626224517822266
    4. ' (),' → logprob: -11.876224517822266
    5. '(),
' → logprob: -13.376224517822266
    6. '(' → logprob: -14.001224517822266
    7. '():' → logprob: -14.126224517822266
    8. '()))' → logprob: -14.376224517822266
    9. '()),' → logprob: -15.001224517822266
    10. ' ,' → logprob: -15.001224517822266

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001181777217425406
    2. ' range' → logprob: -6.751181602478027
    3. '[' → logprob: -11.876181602478027
    4. '	range' → logprob: -12.876181602478027
    5. '   ' → logprob: -13.501181602478027
    6. '(range' → logprob: -14.376181602478027
    7. '    ' → logprob: -17.251182556152344
    8. ' ' → logprob: -17.501182556152344
    9. '.range' → logprob: -18.126182556152344
    10. '_range' → logprob: -18.251182556152344

Token 193: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. 'N' → logprob: -14.25001335144043
    4. '(
' → logprob: -16.62501335144043
    5. '(n' → logprob: -18.12501335144043
    6. '	N' → logprob: -18.62501335144043
    7. '((' → logprob: -19.00001335144043
    8. '(int' → logprob: -19.50001335144043
    9. '   ' → logprob: -20.25001335144043
    10. '(M' → logprob: -20.37501335144043

Token 194: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.009099144488573074
    2. '())))' → logprob: -5.009099006652832
    3. '))' → logprob: -6.384099006652832
    4. '()))' → logprob: -8.009099006652832
    5. '(' → logprob: -8.634099006652832
    6. '(N' → logprob: -9.759099006652832
    7. '()' → logprob: -9.884099006652832
    8. ')' → logprob: -10.509099006652832
    9. ')));' → logprob: -11.384099006652832
    10. ' ' → logprob: -11.384099006652832

Token 195: 'Yes' (ID: 13022)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11211516708135605
    2. 'INF' → logprob: -3.2371151447296143
    3. 'MOD' → logprob: -4.487115383148193
    4. 'from' → logprob: -4.737115383148193
    5. '#' → logprob: -4.862115383148193
    6. 'print' → logprob: -5.112115383148193
    7. 'DEBUG' → logprob: -5.362115383148193
    8. 'DP' → logprob: -5.487115383148193
    9. 'STR' → logprob: -5.737115383148193
    10. 'MAX' → logprob: -5.862115383148193

Token 196: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4783236980438232
    2. ':' → logprob: -1.6033236980438232
    3. '#' → logprob: -1.9783236980438232
    4. ')' → logprob: -2.3533236980438232
    5. '(' → logprob: -2.6033236980438232
    6. '
' → logprob: -2.7283236980438232
    7. '_' → logprob: -3.3533236980438232
    8. '=' → logprob: -3.6033236980438232
    9. '```' → logprob: -3.6033236980438232
    10. '.' → logprob: -3.8533236980438232

Token 197: ' lambda' (ID: 27871)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39000204205513
    2. '"' → logprob: -1.1400020122528076
    3. ' "' → logprob: -6.390002250671387
    4. ' lambda' → logprob: -7.265002250671387
    5. ' '' → logprob: -8.265002250671387
    6. '"No' → logprob: -8.390002250671387
    7. 'lambda' → logprob: -8.765002250671387
    8. '(lambda' → logprob: -10.015002250671387
    9. ''int' → logprob: -11.640002250671387
    10. ''A' → logprob: -11.765002250671387

Token 198: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36018046736717224
    2. '():' → logprob: -2.485180377960205
    3. 'print' → logprob: -2.485180377960205
    4. 'lambda' → logprob: -2.735180377960205
    5. ' lambda' → logprob: -3.235180377960205
    6. ' :' → logprob: -3.985180377960205
    7. ''' → logprob: -5.485180377960205
    8. '(lambda' → logprob: -5.485180377960205
    9. ' print' → logprob: -6.735180377960205
    10. '"' → logprob: -7.485180377960205

Token 199: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005563704180531204
    2. ' print' → logprob: -7.500556468963623
    3. 'sys' → logprob: -12.875555992126465
    4. ' sys' → logprob: -14.875555992126465
    5. '"' → logprob: -15.250555992126465
    6. '(print' → logprob: -16.25055694580078
    7. '   ' → logprob: -16.50055694580078
    8. ''' → logprob: -17.37555694580078
    9. '	print' → logprob: -17.37555694580078
    10. ' ' → logprob: -17.87555694580078

Token 200: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.21013428270816803
    2. '('' → logprob: -1.9601342678070068
    3. '()' → logprob: -3.335134267807007
    4. '(' → logprob: -4.460134506225586
    5. '(True' → logprob: -6.960134506225586
    6. '("")' → logprob: -8.585134506225586
    7. '(
' → logprob: -9.460134506225586
    8. '(False' → logprob: -9.585134506225586
    9. '()
' → logprob: -9.710134506225586
    10. '"' → logprob: -10.460134506225586

Token 201: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0032434279564768076
    2. 'YES' → logprob: -5.753243446350098
    3. ' Yes' → logprob: -10.253243446350098
    4. '"' → logprob: -11.003243446350098
    5. 'yes' → logprob: -11.378243446350098
    6. ''' → logprob: -14.253243446350098
    7. ' yes' → logprob: -14.253243446350098
    8. 'Y' → logprob: -14.628243446350098
    9. 'Possible' → logprob: -15.503243446350098
    10. '“Yes' → logprob: -16.12824249267578

Token 202: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008800813928246498
    2. '')
' → logprob: -4.758800983428955
    3. ')' → logprob: -8.758800506591797
    4. '()' → logprob: -10.633800506591797
    5. '')
' → logprob: -13.258800506591797
    6. ')')
' → logprob: -13.258800506591797
    7. '")' → logprob: -14.883800506591797
    8. '')

' → logprob: -15.258800506591797
    9. ')
' → logprob: -15.383800506591797
    10. '())' → logprob: -15.508800506591797

Token 203: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0009047918138094246
    2. 'NO' → logprob: -7.500904560089111
    3. 'no' → logprob: -8.25090503692627
    4. 'def' → logprob: -9.75090503692627
    5. ' No' → logprob: -11.62590503692627
    6. 'Yes' → logprob: -11.62590503692627
    7. 'print' → logprob: -11.62590503692627
    8. '_no' → logprob: -13.50090503692627
    9. 'yes' → logprob: -14.62590503692627
    10. '
' → logprob: -14.75090503692627

Token 204: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7105340957641602
    2. '=' → logprob: -0.9605340957641602
    3. ' =' → logprob: -2.08553409576416
    4. '=lambda' → logprob: -6.96053409576416
    5. '(' → logprob: -7.46053409576416
    6. '()
' → logprob: -10.08553409576416
    7. ')' → logprob: -11.33553409576416
    8. '(lambda' → logprob: -11.46053409576416
    9. '()>' → logprob: -11.58553409576416
    10. '<|end|>' → logprob: -11.83553409576416

Token 205: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6822261810302734
    2. ' lambda' → logprob: -0.9322261810302734
    3. '(lambda' → logprob: -2.3072261810302734
    4. '(' → logprob: -7.182226181030273
    5. '=lambda' → logprob: -8.057226181030273
    6. ' (' → logprob: -9.557226181030273
    7. ' ' → logprob: -10.557226181030273
    8. '()' → logprob: -10.807226181030273
    9. '('' → logprob: -10.932226181030273
    10. ' =' → logprob: -11.432226181030273

Token 206: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11040595173835754
    2. ':' → logprob: -2.610405921936035
    3. '()' → logprob: -3.485405921936035
    4. ' ():' → logprob: -8.110405921936035
    5. ' ()' → logprob: -10.610405921936035
    6. 'print' → logprob: -11.360405921936035
    7. '(' → logprob: -11.485405921936035
    8. ' :' → logprob: -11.735405921936035
    9. '('' → logprob: -11.985405921936035
    10. '()
' → logprob: -11.985405921936035

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000553151941858232
    2. ' print' → logprob: -7.500553131103516
    3. '(print' → logprob: -16.875553131103516
    4. ' ' → logprob: -18.125553131103516
    5. '	print' → logprob: -19.000553131103516
    6. 'pr' → logprob: -19.250553131103516
    7. '   ' → logprob: -19.625553131103516
    8. 'None' → logprob: -19.875553131103516
    9. '```' → logprob: -20.125553131103516
    10. '  ' → logprob: -20.125553131103516

Token 208: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0008072483469732106
    2. '(' → logprob: -7.125807285308838
    3. '()' → logprob: -13.87580680847168
    4. '("' → logprob: -14.25080680847168
    5. '(False' → logprob: -15.00080680847168
    6. ' ('' → logprob: -15.25080680847168
    7. ''' → logprob: -15.37580680847168
    8. '(`' → logprob: -16.25080680847168
    9. '(('' → logprob: -16.50080680847168
    10. '(
' → logprob: -16.50080680847168

Token 209: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0280383548888494e-06
    2. '')' → logprob: -14.375000953674316
    3. ''' → logprob: -15.500000953674316
    4. 'NO' → logprob: -16.875001907348633
    5. ' No' → logprob: -17.750001907348633
    6. '"No' → logprob: -17.875001907348633
    7. 'Yes' → logprob: -18.500001907348633
    8. 'None' → logprob: -18.750001907348633
    9. '.No' → logprob: -19.000001907348633
    10. '_No' → logprob: -19.125001907348633

Token 210: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00048405781853944063
    2. ')' → logprob: -7.750483989715576
    3. '')
' → logprob: -10.500484466552734
    4. '()' → logprob: -10.625484466552734
    5. '('' → logprob: -13.875484466552734
    6. '")' → logprob: -15.500484466552734
    7. ''' → logprob: -16.000484466552734
    8. '')

' → logprob: -16.375484466552734
    9. '())' → logprob: -17.500484466552734
    10. '’)' → logprob: -18.375484466552734

Token 211: 'YES' (ID: 31958)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42527997493743896
    2. 'INF' → logprob: -1.550279974937439
    3. 'MOD' → logprob: -3.0502800941467285
    4. 'YES' → logprob: -3.5502800941467285
    5. 'from' → logprob: -4.0502800941467285
    6. 'DEBUG' → logprob: -4.4252800941467285
    7. 'Yes' → logprob: -4.6752800941467285
    8. '#' → logprob: -4.9252800941467285
    9. 'sys' → logprob: -5.8002800941467285
    10. 'inf' → logprob: -6.3002800941467285

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3931353688240051
    2. ' =' → logprob: -1.1431353092193604
    3. '()' → logprob: -5.1431355476379395
    4. ')' → logprob: -8.518135070800781
    5. '=lambda' → logprob: -8.643135070800781
    6. ':' → logprob: -12.018135070800781
    7. ' ' → logprob: -12.768135070800781
    8. '(' → logprob: -12.893135070800781
    9. '＝' → logprob: -13.018135070800781
    10. '()
' → logprob: -13.268135070800781

Token 213: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6938832402229309
    2. 'lambda' → logprob: -0.6938832402229309
    3. '(lambda' → logprob: -7.818883419036865
    4. '=lambda' → logprob: -8.068882942199707
    5. ' =' → logprob: -11.943882942199707
    6. ' ' → logprob: -12.193882942199707
    7. ' lamb' → logprob: -12.318882942199707
    8. ')' → logprob: -13.818882942199707
    9. 'def' → logprob: -13.943882942199707
    10. '_lambda' → logprob: -14.318882942199707

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1645255982875824
    2. '():' → logprob: -1.9145256280899048
    3. '()' → logprob: -5.664525508880615
    4. 'lambda' → logprob: -7.539525508880615
    5. '=' → logprob: -8.914525985717773
    6. 'print' → logprob: -10.164525985717773
    7. '=lambda' → logprob: -10.164525985717773
    8. ' :' → logprob: -10.289525985717773
    9. ' =' → logprob: -11.039525985717773
    10. ' lambda' → logprob: -11.789525985717773

Token 215: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.5491004129871726e-05
    2. ' print' → logprob: -10.000045776367188
    3. '(print' → logprob: -20.625045776367188
    4. 'def' → logprob: -21.375045776367188
    5. '	print' → logprob: -21.750045776367188
    6. '   ' → logprob: -21.750045776367188
    7. ' ' → logprob: -22.000045776367188
    8. 'pr' → logprob: -22.375045776367188
    9. 'printf' → logprob: -22.750045776367188
    10. '  ' → logprob: -23.000045776367188

Token 216: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0013622589176520705
    2. '(' → logprob: -6.626362323760986
    3. '("' → logprob: -10.251361846923828
    4. '()' → logprob: -15.126361846923828
    5. ''' → logprob: -15.626361846923828
    6. '(
' → logprob: -15.751361846923828
    7. ' ('' → logprob: -15.876361846923828
    8. '(('' → logprob: -16.001361846923828
    9. ' ' → logprob: -18.126361846923828
    10. '(`' → logprob: -18.376361846923828

Token 217: 'YES' (ID: 31958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004218959249556065
    2. 'Yes' → logprob: -5.504219055175781
    3. 'YES' → logprob: -9.254219055175781
    4. '"' → logprob: -10.129219055175781
    5. ''S' → logprob: -12.879219055175781
    6. '('' → logprob: -13.504219055175781
    7. ' '' → logprob: -14.879219055175781
    8. ''A' → logprob: -16.00421905517578
    9. ''T' → logprob: -16.37921905517578
    10. 'Y' → logprob: -17.00421905517578

Token 218: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33922043442726135
    2. '')' → logprob: -1.339220404624939
    3. '()' → logprob: -3.7142205238342285
    4. '())' → logprob: -6.7142205238342285
    5. '")' → logprob: -11.46422004699707
    6. '')
' → logprob: -11.46422004699707
    7. ')
' → logprob: -11.58922004699707
    8. '('' → logprob: -13.33922004699707
    9. '`)' → logprob: -14.08922004699707
    10. '()
' → logprob: -14.21422004699707

Token 219: 'NO' (ID: 14695)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.34909576177597046
    2. 'NO' → logprob: -1.2240958213806152
    3. 'def' → logprob: -7.974095821380615
    4. 'no' → logprob: -8.599095344543457
    5. 'Yes' → logprob: -10.349095344543457
    6. '_NO' → logprob: -10.974095344543457
    7. 'print' → logprob: -10.974095344543457
    8. ' No' → logprob: -11.224095344543457
    9. '```' → logprob: -11.974095344543457
    10. '_no' → logprob: -12.099095344543457

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21055957674980164
    2. ' =' → logprob: -1.710559606552124
    3. '()' → logprob: -5.335559368133545
    4. '=lambda' → logprob: -5.460559368133545
    5. '(lambda' → logprob: -12.085559844970703
    6. ')' → logprob: -12.085559844970703
    7. '()='' → logprob: -12.460559844970703
    8. '＝' → logprob: -12.710559844970703
    9. '(' → logprob: -12.835559844970703
    10. '<|end|>' → logprob: -12.960559844970703

Token 221: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04926949366927147
    2. ' lambda' → logprob: -3.049269437789917
    3. '(lambda' → logprob: -7.299269676208496
    4. '=lambda' → logprob: -12.049269676208496
    5. '_lambda' → logprob: -17.29926872253418
    6. '.lambda' → logprob: -18.92426872253418
    7. 'λ' → logprob: -19.17426872253418
    8. 'lam' → logprob: -19.79926872253418
    9. ' lamb' → logprob: -20.17426872253418
    10. ' ' → logprob: -20.17426872253418

Token 222: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014317858731374145
    2. ':' → logprob: -7.501431941986084
    3. '(' → logprob: -8.001431465148926
    4. '():' → logprob: -8.751431465148926
    5. '('' → logprob: -8.876431465148926
    6. '()
' → logprob: -9.126431465148926
    7. '(lambda' → logprob: -9.376431465148926
    8. '(
' → logprob: -11.001431465148926
    9. ' ()' → logprob: -11.751431465148926
    10. ')' → logprob: -12.126431465148926

Token 223: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6931552886962891
    2. ' print' → logprob: -0.6931552886962891
    3. '(print' → logprob: -11.818155288696289
    4. ' ' → logprob: -15.443155288696289
    5. ' ' → logprob: -15.943155288696289
    6. '(' → logprob: -15.943155288696289
    7. '('' → logprob: -16.06815528869629
    8. '()' → logprob: -16.44315528869629
    9. '```' → logprob: -17.19315528869629
    10. '.print' → logprob: -17.81815528869629

Token 224: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.046729594469070435
    2. '()' → logprob: -3.671729564666748
    3. '(' → logprob: -3.921729564666748
    4. ''' → logprob: -8.046730041503906
    5. '(
' → logprob: -10.421730041503906
    6. '('(' → logprob: -10.671730041503906
    7. ')' → logprob: -11.796730041503906
    8. '('\' → logprob: -11.921730041503906
    9. '("' → logprob: -12.421730041503906
    10. '(lambda' → logprob: -12.671730041503906

Token 225: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.019323188811540604
    2. ''' → logprob: -4.019323348999023
    3. 'No' → logprob: -6.769323348999023
    4. ''N' → logprob: -11.019323348999023
    5. '')' → logprob: -12.519323348999023
    6. 'N' → logprob: -13.269323348999023
    7. '"No' → logprob: -14.144323348999023
    8. ''\' → logprob: -15.019323348999023
    9. '"' → logprob: -15.019323348999023
    10. 'no' → logprob: -15.269323348999023

Token 226: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09870696812868118
    2. '')' → logprob: -2.5987069606781006
    3. '()' → logprob: -3.9737069606781006
    4. '())' → logprob: -7.47370719909668
    5. ')
' → logprob: -8.72370719909668
    6. '')
' → logprob: -9.59870719909668
    7. '")' → logprob: -12.22370719909668
    8. '`)' → logprob: -12.72370719909668
    9. 'def' → logprob: -13.34870719909668
    10. '()
' → logprob: -13.34870719909668

Token 227: 'set' (ID: 977)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008322600275278091
    2. '#' → logprob: -6.383322715759277
    3. 'n' → logprob: -6.383322715759277
    4. 'class' → logprob: -7.258322715759277
    5. 'from' → logprob: -7.508322715759277
    6. 'MOD' → logprob: -7.883322715759277
    7. 'a' → logprob: -8.133322715759277
    8. 'print' → logprob: -8.133322715759277
    9. 'import' → logprob: -8.383322715759277
    10. 'N' → logprob: -8.383322715759277

Token 228: 'attr' (ID: 6035)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012574875727295876
    2. ' =' → logprob: -5.887574672698975
    3. '=' → logprob: -6.137574672698975
    4. '(' → logprob: -6.262574672698975
    5. 's' → logprob: -6.512574672698975
    6. '_' → logprob: -6.637574672698975
    7. 'default' → logprob: -6.887574672698975
    8. 'attr' → logprob: -8.137575149536133
    9. ' ()' → logprob: -8.512575149536133
    10. 'uptools' → logprob: -8.637575149536133

Token 229: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22622829675674438
    2. '(sys' → logprob: -2.2262282371520996
    3. '(object' → logprob: -3.1012282371520996
    4. '(__' → logprob: -3.8512282371520996
    5. '(
' → logprob: -4.2262282371521
    6. '(str' → logprob: -4.9762282371521
    7. '(list' → logprob: -5.4762282371521
    8. '(input' → logprob: -7.6012282371521
    9. '(obj' → logprob: -7.9762282371521
    10. '(print' → logprob: -8.101228713989258

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007809970062226057
    2. ',module' → logprob: -5.007810115814209
    3. ','' → logprob: -7.007810115814209
    4. ',set' → logprob: -10.13280963897705
    5. ',std' → logprob: -10.25780963897705
    6. ',System' → logprob: -10.50780963897705
    7. ',"' → logprob: -10.88280963897705
    8. ',int' → logprob: -11.38280963897705
    9. '.modules' → logprob: -11.63280963897705
    10. ',input' → logprob: -11.75780963897705

Token 231: ' '' (ID: 461)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.13395056128501892
    2. ''' → logprob: -2.5089504718780518
    3. 'modules' → logprob: -4.258950710296631
    4. '"' → logprob: -4.508950710296631
    5. ''in' → logprob: -5.133950710296631
    6. 'stdin' → logprob: -5.383950710296631
    7. 'set' → logprob: -5.883950710296631
    8. ''s' → logprob: -6.008950710296631
    9. 'stdout' → logprob: -6.758950710296631
    10. 'stderr' → logprob: -7.758950710296631

Token 232: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.17475086450576782
    2. 'stdin' → logprob: -2.049750804901123
    3. 'modules' → logprob: -4.549750804901123
    4. 'rec' → logprob: -4.924750804901123
    5. 'stdout' → logprob: -5.424750804901123
    6. 'ps' → logprob: -5.549750804901123
    7. 'stderr' → logprob: -6.674750804901123
    8. 'argv' → logprob: -7.049750804901123
    9. 'max' → logprob: -7.299750804901123
    10. '_set' → logprob: -7.424750804901123

Token 233: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0627402737736702
    2. 'attr' → logprob: -3.3127403259277344
    3. 'trace' → logprob: -4.562740325927734
    4. 'default' → logprob: -4.812740325927734
    5. 'profile' → logprob: -5.937740325927734
    6. 'execution' → logprob: -6.937740325927734
    7. 'attribute' → logprob: -7.437740325927734
    8. '_rec' → logprob: -7.812740325927734
    9. 'switch' → logprob: -8.062740325927734
    10. 'sizeof' → logprob: -8.437740325927734

Token 234: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.306760805164231e-05
    2. 'usion' → logprob: -11.62501335144043
    3. 'limit' → logprob: -13.25001335144043
    4. 'ursor' → logprob: -14.50001335144043
    5. 'ursive' → logprob: -14.62501335144043
    6. '_' → logprob: -14.75001335144043
    7. 'ur' → logprob: -15.25001335144043
    8. 'usr' → logprob: -15.75001335144043
    9. 'u' → logprob: -16.00001335144043
    10. 'urs' → logprob: -16.50001335144043

Token 235: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.1008713702030946e-06
    2. '_limit' → logprob: -13.375001907348633
    3. 'depth' → logprob: -14.750001907348633
    4. 'lim' → logprob: -15.875001907348633
    5. ' limit' → logprob: -17.375001907348633
    6. '
' → logprob: -17.625001907348633
    7. 'Limit' → logprob: -19.500001907348633
    8. '(limit' → logprob: -20.125001907348633
    9. 'l' → logprob: -20.500001907348633
    10. '

' → logprob: -21.125001907348633

Token 236: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0011940367985516787
    2. ',' → logprob: -7.001194000244141
    3. '(' → logprob: -8.75119400024414
    4. '',(' → logprob: -9.75119400024414
    5. ')(' → logprob: -10.00119400024414
    6. '')(' → logprob: -11.12619400024414
    7. '(',' → logprob: -13.75119400024414
    8. '',
' → logprob: -13.87619400024414
    9. ''(' → logprob: -14.00119400024414
    10. ''' → logprob: -14.12619400024414

Token 237: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.012064662761986256
    2. '100' → logprob: -4.512064456939697
    3. 'lambda' → logprob: -7.387064456939697
    4. 'int' → logprob: -8.887064933776855
    5. 'sys' → logprob: -9.262064933776855
    6. '(' → logprob: -10.012064933776855
    7. ' ' → logprob: -10.137064933776855
    8. '1' → logprob: -10.137064933776855
    9. '200' → logprob: -10.762064933776855
    10. 'limit' → logprob: -12.762064933776855

Token 238: 'lambda' (ID: 35280)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00779411755502224
    2. '100' → logprob: -5.13279390335083
    3. 'sys' → logprob: -7.63279390335083
    4. '1' → logprob: -7.75779390335083
    5. ')' → logprob: -8.382794380187988
    6. '300' → logprob: -8.632794380187988
    7. '500' → logprob: -9.007794380187988
    8. '200' → logprob: -9.007794380187988
    9. 'int' → logprob: -9.507794380187988
    10. '(' → logprob: -9.757794380187988

Token 239: ' n' (ID: 297)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.2413673400878906
    2. ' ' → logprob: -1.4913673400878906
    3. 'lambda' → logprob: -1.7413673400878906
    4. 'sys' → logprob: -2.4913673400878906
    5. '10' → logprob: -2.6163673400878906
    6. ' lambda' → logprob: -3.3663673400878906
    7. ' sys' → logprob: -3.7413673400878906
    8. '500' → logprob: -4.241367340087891
    9. '999' → logprob: -4.616367340087891
    10. ':' → logprob: -4.741367340087891

Token 240: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1537027359008789
    2. ' n' → logprob: -2.778702735900879
    3. 'n' → logprob: -2.778702735900879
    4. ' :' → logprob: -4.153702735900879
    5. '(n' → logprob: -6.903702735900879
    6. ' x' → logprob: -8.403702735900879
    7. 'x' → logprob: -8.403702735900879
    8. '):' → logprob: -8.653702735900879
    9. ')' → logprob: -8.778702735900879
    10. ':n' → logprob: -8.778702735900879

Token 241: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.013284583576023579
    2. 'lambda' → logprob: -5.263284683227539
    3. '__' → logprob: -5.388284683227539
    4. ' sys' → logprob: -6.013284683227539
    5. 'set' → logprob: -7.638284683227539
    6. '(sys' → logprob: -8.763284683227539
    7. '(lambda' → logprob: -9.763284683227539
    8. 'None' → logprob: -9.763284683227539
    9. ' lambda' → logprob: -10.138284683227539
    10. '_sys' → logprob: -10.638284683227539

Token 242: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.030240291729569435
    2. 'set' → logprob: -3.530240297317505
    3. '.setdefault' → logprob: -7.905240058898926
    4. ':set' → logprob: -10.030240058898926
    5. '.' → logprob: -10.405240058898926
    6. '#set' → logprob: -11.280240058898926
    7. ')set' → logprob: -11.405240058898926
    8. ',set' → logprob: -12.030240058898926
    9. '   ' → logprob: -12.780240058898926
    10. '=set' → logprob: -13.030240058898926

Token 243: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0007691288483329117
    2. 'attr' → logprob: -7.375769138336182
    3. 'ec' → logprob: -10.250768661499023
    4. ' recursion' → logprob: -10.250768661499023
    5. 'limit' → logprob: -10.625768661499023
    6. '_rec' → logprob: -11.125768661499023
    7. 'reflection' → logprob: -11.750768661499023
    8. 'ursion' → logprob: -12.375768661499023
    9. 'set' → logprob: -12.500768661499023
    10. 're' → logprob: -13.125768661499023

Token 244: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.0802738870552275e-05
    2. 'urs' → logprob: -11.87501049041748
    3. 'usion' → logprob: -13.25001049041748
    4. 'ursor' → logprob: -14.37501049041748
    5. 'ursive' → logprob: -14.62501049041748
    6. 'ur' → logprob: -15.75001049041748
    7. '[' → logprob: -16.125011444091797
    8. '```' → logprob: -16.125011444091797
    9. 'ersion' → logprob: -16.250011444091797
    10. 'limit' → logprob: -16.250011444091797

Token 245: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.963691804325208e-05
    2. ' limit' → logprob: -11.500029563903809
    3. 'imit' → logprob: -11.750029563903809
    4. '(limit' → logprob: -12.125029563903809
    5. '_limit' → logprob: -12.875029563903809
    6. 'mit' → logprob: -13.250029563903809
    7. 'depth' → logprob: -13.875029563903809
    8. '```' → logprob: -16.000030517578125
    9. 'lim' → logprob: -16.375030517578125
    10. 'max' → logprob: -16.500030517578125

Token 246: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04161972552537918
    2. '(n' → logprob: -3.5416197776794434
    3. ')(' → logprob: -4.916619777679443
    4. '(int' → logprob: -5.666619777679443
    5. '((' → logprob: -8.291619300842285
    6. ' ' → logprob: -9.041619300842285
    7. '))' → logprob: -9.166619300842285
    8. '(sys' → logprob: -9.291619300842285
    9. '))(' → logprob: -9.416619300842285
    10. '(
' → logprob: -9.541619300842285

Token 247: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03594835847616196
    2. ')))' → logprob: -4.410948276519775
    3. ')' → logprob: -4.785948276519775
    4. ')(' → logprob: -4.910948276519775
    5. '(' → logprob: -5.285948276519775
    6. '))(' → logprob: -6.410948276519775
    7. '(n' → logprob: -7.785948276519775
    8. '))
' → logprob: -9.910948753356934
    9. ')(__' → logprob: -10.035948753356934
    10. '));' → logprob: -10.285948753356934

Token 248: 'sys' (ID: 17324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10317239165306091
    2. ')' → logprob: -2.8531723022460938
    3. '100' → logprob: -4.103172302246094
    4. '40' → logprob: -5.228172302246094
    5. '(int' → logprob: -5.603172302246094
    6. '50' → logprob: -6.103172302246094
    7. '(sys' → logprob: -6.103172302246094
    8. '(lambda' → logprob: -6.353172302246094
    9. ' ' → logprob: -6.978172302246094
    10. '47' → logprob: -7.228172302246094

Token 249: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13506148755550385
    2. '.set' → logprob: -2.260061502456665
    3. '.setdefault' → logprob: -4.010061264038086
    4. '.stdout' → logprob: -7.260061264038086
    5. '.stdin' → logprob: -7.510061264038086
    6. ' .' → logprob: -7.635061264038086
    7. '.argv' → logprob: -8.135061264038086
    8. '.version' → logprob: -8.135061264038086
    9. '.stderr' → logprob: -8.135061264038086
    10. '<|end|>' → logprob: -8.135061264038086

Token 250: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00015800826076883823
    2. '_rec' → logprob: -8.875158309936523
    3. 'set' → logprob: -11.000158309936523
    4. 'ec' → logprob: -14.875158309936523
    5. 're' → logprob: -15.250158309936523
    6. '_set' → logprob: -15.375158309936523
    7. 'ursion' → logprob: -15.625158309936523
    8. ' recursion' → logprob: -16.250158309936523
    9. '_' → logprob: -17.000158309936523
    10. 'reg' → logprob: -17.375158309936523

Token 251: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.5822400857578032e-05
    2. 'urs' → logprob: -11.000025749206543
    3. 'limit' → logprob: -12.375025749206543
    4. 'c' → logprob: -13.250025749206543
    5. 'ursive' → logprob: -13.625025749206543
    6. 'ur' → logprob: -15.000025749206543
    7. 'usion' → logprob: -15.125025749206543
    8. '_' → logprob: -15.250025749206543
    9. '_limit' → logprob: -15.250025749206543
    10. 'ursor' → logprob: -15.375025749206543

Token 252: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -7.703443770878948e-06
    2. '_limit' → logprob: -11.875007629394531
    3. 'set' → logprob: -14.500007629394531
    4. 'imit' → logprob: -16.37500762939453
    5. ' limit' → logprob: -16.62500762939453
    6. '(limit' → logprob: -17.00000762939453
    7. 'lim' → logprob: -17.37500762939453
    8. '-limit' → logprob: -18.87500762939453
    9. '.limit' → logprob: -19.50000762939453
    10. 'limits' → logprob: -19.87500762939453

Token 253: '(pow' (ID: 189160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013381359167397022
    2. '(
' → logprob: -10.000133514404297
    3. ' (' → logprob: -10.250133514404297
    4. '((' → logprob: -10.625133514404297
    5. '(int' → logprob: -11.375133514404297
    6. '100' → logprob: -11.750133514404297
    7. '(sys' → logprob: -12.750133514404297
    8. '()' → logprob: -13.000133514404297
    9. ')' → logprob: -13.875133514404297
    10. ' ' → logprob: -14.750133514404297

Token 254: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013607900589704514
    2. '2' → logprob: -4.638607978820801
    3. '10' → logprob: -5.763607978820801
    4. '(
' → logprob: -7.388607978820801
    5. ')' → logprob: -9.7636079788208
    6. '9' → logprob: -11.7636079788208
    7. ' (' → logprob: -12.1386079788208
    8. '=' → logprob: -13.0136079788208
    9. ' ' → logprob: -13.3886079788208
    10. '(

' → logprob: -13.7636079788208

Token 255: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0957033708691597
    2. '(' → logprob: -3.095703363418579
    3. '2' → logprob: -3.095703363418579
    4. '7' → logprob: -7.220703601837158
    5. '9' → logprob: -11.220703125
    6. ' ' → logprob: -11.470703125
    7. '3' → logprob: -11.845703125
    8. '1' → logprob: -12.345703125
    9. '6' → logprob: -13.345703125
    10. ')' → logprob: -13.345703125

Token 256: ',' (ID: 11)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0018615226726979017
    2. '9' → logprob: -6.501861572265625
    3. '8' → logprob: -8.001861572265625
    4. '6' → logprob: -11.751861572265625
    5. ')' → logprob: -12.001861572265625
    6. ',' → logprob: -12.501861572265625
    7. ' ' → logprob: -13.251861572265625
    8. '**' → logprob: -13.376861572265625
    9. '+' → logprob: -13.876861572265625
    10. '```' → logprob: -13.876861572265625

Token 257: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0024920646101236343
    2. '9' → logprob: -6.0024919509887695
    3. '8' → logprob: -11.12749195098877
    4. '6' → logprob: -13.50249195098877
    5. ' ' → logprob: -15.62749195098877
    6. '```' → logprob: -16.627492904663086
    7. '**' → logprob: -17.127492904663086
    8. ')' → logprob: -17.752492904663086
    9. '  ' → logprob: -17.752492904663086
    10. '+' → logprob: -18.002492904663086

Token 258: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014259176328778267
    2. '9' → logprob: -4.264259338378906
    3. '8' → logprob: -9.264259338378906
    4. '6' → logprob: -14.764259338378906
    5. '**' → logprob: -15.014259338378906
    6. '```' → logprob: -16.264259338378906
    7. '

' → logprob: -16.889259338378906
    8. '+' → logprob: -16.889259338378906
    9. '
' → logprob: -17.264259338378906
    10. '``' → logprob: -17.514259338378906

Token 259: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062199030071496964
    2. ')' → logprob: -2.812199115753174
    3. ')+' → logprob: -9.437198638916016
    4. '()))' → logprob: -9.812198638916016
    5. ')))' → logprob: -10.437198638916016
    6. '))
' → logprob: -10.562198638916016
    7. '()' → logprob: -11.437198638916016
    8. '())' → logprob: -11.937198638916016
    9. '+' → logprob: -12.437198638916016
    10. ' ))' → logprob: -12.562198638916016

Token 260: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34777337312698364
    2. '#' → logprob: -1.9727733135223389
    3. 'import' → logprob: -2.847773313522339
    4. ')' → logprob: -2.847773313522339
    5. '
' → logprob: -4.472773551940918
    6. 'n' → logprob: -4.972773551940918
    7. 'from' → logprob: -5.847773551940918
    8. '```' → logprob: -6.472773551940918
    9. 'sys' → logprob: -6.472773551940918
    10. '\' → logprob: -6.597773551940918

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029770735651254654
    2. '=' → logprob: -3.529770851135254
    3. ',' → logprob: -11.904770851135254
    4. '=int' → logprob: -12.154770851135254
    5. '_' → logprob: -12.404770851135254
    6. ')' → logprob: -13.279770851135254
    7. ' =)' → logprob: -14.279770851135254
    8. ' ' → logprob: -14.654770851135254
    9. '=float' → logprob: -14.904770851135254
    10. '＝' → logprob: -15.404770851135254

Token 262: ' pow' (ID: 9779)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25504055619239807
    2. 'float' → logprob: -1.5050405263900757
    3. 'pow' → logprob: -5.880040645599365
    4. '1' → logprob: -8.630040168762207
    5. 'int' → logprob: -9.380040168762207
    6. ' float' → logprob: -10.630040168762207
    7. ' ' → logprob: -11.630040168762207
    8. '2' → logprob: -12.630040168762207
    9. '100' → logprob: -12.755040168762207
    10. '(' → logprob: -13.130040168762207

Token 263: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4855663721391466e-05
    2. '10' → logprob: -11.375015258789062
    3. '(int' → logprob: -12.750015258789062
    4. '(pow' → logprob: -15.250015258789062
    5. '(float' → logprob: -16.375015258789062
    6. 'int' → logprob: -16.625015258789062
    7. ' (' → logprob: -17.500015258789062
    8. '(
' → logprob: -18.250015258789062
    9. '((' → logprob: -18.750015258789062
    10. '2' → logprob: -18.875015258789062

Token 264: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.173704271830502e-06
    2. '9' → logprob: -13.00000286102295
    3. '2' → logprob: -14.75000286102295
    4. '(' → logprob: -15.00000286102295
    5. '31' → logprob: -17.125003814697266
    6. ' ' → logprob: -17.500003814697266
    7. 'int' → logprob: -17.625003814697266
    8. '100' → logprob: -18.250003814697266
    9. '30' → logprob: -18.375003814697266
    10. '99' → logprob: -19.375003814697266

Token 265: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04622287675738335
    2. '18' → logprob: -3.2962229251861572
    3. '15' → logprob: -5.296222686767578
    4. '10' → logprob: -6.046222686767578
    5. '12' → logprob: -7.296222686767578
    6. '19' → logprob: -10.171222686767578
    7. '20' → logprob: -10.921222686767578
    8. '16' → logprob: -11.421222686767578
    9. '13' → logprob: -11.671222686767578
    10. ' ' → logprob: -12.421222686767578

Token 266: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5436093807220459
    2. '18' → logprob: -1.043609380722046
    3. '9' → logprob: -2.793609380722046
    4. '10' → logprob: -5.293609619140625
    5. '16' → logprob: -8.168609619140625
    6. '12' → logprob: -8.293609619140625
    7. '20' → logprob: -8.293609619140625
    8. '19' → logprob: -9.293609619140625
    9. '14' → logprob: -10.543609619140625
    10. '13' → logprob: -10.668609619140625

Token 267: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5226635932922363
    2. '18' → logprob: -1.0226635932922363
    3. '9' → logprob: -3.3976635932922363
    4. '10' → logprob: -4.397663593292236
    5. '12' → logprob: -7.397663593292236
    6. '16' → logprob: -7.522663593292236
    7. '20' → logprob: -8.147663116455078
    8. '19' → logprob: -9.522663116455078
    9. '13' → logprob: -9.772663116455078
    10. '17' → logprob: -10.022663116455078

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016945181414484978
    2. ' )' → logprob: -8.75016975402832
    3. ')
' → logprob: -12.25016975402832
    4. '+' → logprob: -12.87516975402832
    5. ')+' → logprob: -13.12516975402832
    6. '+)' → logprob: -14.12516975402832
    7. '),' → logprob: -15.75016975402832
    8. '))' → logprob: -16.12516975402832
    9. ',' → logprob: -16.37516975402832
    10. ',)' → logprob: -16.37516975402832

Token 269: 'MOD' (ID: 52135)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0695486068725586
    2. '
' → logprob: -1.5695486068725586
    3. 'def' → logprob: -1.9445486068725586
    4. ')' → logprob: -3.0695486068725586
    5. 'MAX' → logprob: -3.0695486068725586
    6. 'MOD' → logprob: -3.1945486068725586
    7. '\n' → logprob: -3.4445486068725586
    8. '_' → logprob: -3.8195486068725586
    9. ',' → logprob: -3.9445486068725586
    10. 'from' → logprob: -4.444548606872559

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519482672214508
    2. '=' → logprob: -1.5019482374191284
    3. ',' → logprob: -11.126948356628418
    4. ' ' → logprob: -13.126948356628418
    5. ' ,' → logprob: -14.251948356628418
    6. ' =)' → logprob: -14.501948356628418
    7. ' =
' → logprob: -15.126948356628418
    8. ')' → logprob: -15.251948356628418
    9. '_=' → logprob: -16.2519474029541
    10. '=

' → logprob: -16.2519474029541

Token 271: ' pow' (ID: 9779)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.484132169745862e-05
    2. 'pow' → logprob: -9.875094413757324
    3. ' ' → logprob: -10.875094413757324
    4. '998' → logprob: -11.500094413757324
    5. '100' → logprob: -11.500094413757324
    6. 'int' → logprob: -12.750094413757324
    7. '1' → logprob: -13.625094413757324
    8. ' pow' → logprob: -17.50009536743164
    9. '(' → logprob: -17.87509536743164
    10. '123' → logprob: -19.62509536743164

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019289902411401272
    2. '10' → logprob: -6.251928806304932
    3. '(
' → logprob: -15.00192928314209
    4. '(int' → logprob: -17.251928329467773
    5. '()' → logprob: -17.876928329467773
    6. 'int' → logprob: -17.876928329467773
    7. '1' → logprob: -18.001928329467773
    8. '```' → logprob: -18.251928329467773
    9. ' ' → logprob: -18.376928329467773
    10. ' (' → logprob: -18.876928329467773

Token 273: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.4391956685576588e-05
    2. '9' → logprob: -10.625024795532227
    3. ' ' → logprob: -18.750024795532227
    4. '```' → logprob: -18.750024795532227
    5. '1' → logprob: -19.125024795532227
    6. '109' → logprob: -19.500024795532227
    7. 'int' → logprob: -19.750024795532227
    8. '(' → logprob: -20.000024795532227
    9. '１０' → logprob: -20.125024795532227
    10. '+' → logprob: -20.375024795532227

Token 274: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007649341132491827
    2. ',' → logprob: -4.8826494216918945
    3. ' ' → logprob: -10.132649421691895
    4. '+' → logprob: -13.257649421691895
    5. ' ,' → logprob: -14.382649421691895
    6. '```' → logprob: -14.507649421691895
    7. '   ' → logprob: -15.007649421691895
    8. '7' → logprob: -16.132648468017578
    9. '=' → logprob: -16.507648468017578
    10. '09' → logprob: -17.257648468017578

Token 275: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '09' → logprob: -18.625
    4. '```' → logprob: -18.75
    5. '+' → logprob: -19.5
    6. '19' → logprob: -19.625
    7. '10' → logprob: -20.0
    8. '18' → logprob: -20.125
    9. '   ' → logprob: -20.125
    10. '
' → logprob: -21.125

Token 276: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -16.875
    3. '+' → logprob: -18.0
    4. '```' → logprob: -18.25
    5. ' ' → logprob: -18.625
    6. '18' → logprob: -19.125
    7. '19' → logprob: -19.375
    8. '10' → logprob: -19.75
    9. '
' → logprob: -19.75
    10. '   ' → logprob: -20.0

Token 277: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024715426843613386
    2. ')' → logprob: -8.87524700164795
    3. '7' → logprob: -9.50024700164795
    4. ' +' → logprob: -10.75024700164795
    5. ')+' → logprob: -11.62524700164795
    6. ',' → logprob: -13.37524700164795
    7. 'plus' → logprob: -15.25024700164795
    8. ' plus' → logprob: -16.250247955322266
    9. '＋' → logprob: -17.250247955322266
    10. '```' → logprob: -17.250247955322266

Token 278: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004938178462907672
    2. ' +' → logprob: -8.250494003295898
    3. '7' → logprob: -8.375494003295898
    4. 'plus' → logprob: -14.000494003295898
    5. '+
' → logprob: -14.375494003295898
    6. ' plus' → logprob: -15.500494003295898
    7. '＋' → logprob: -15.750494003295898
    8. ',' → logprob: -16.0004940032959
    9. '```' → logprob: -16.1254940032959
    10. ')+' → logprob: -17.3754940032959

Token 279: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.75
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. '07' → logprob: -20.75
    6. '７' → logprob: -21.0
    7. '   ' → logprob: -21.5
    8. '' → logprob: -21.75
    9. '9' → logprob: -23.0625
    10. '۷' → logprob: -23.125

Token 280: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.125
    3. ' ' → logprob: -21.5
    4. '７' → logprob: -22.125
    5. '```' → logprob: -22.125
    6. '07' → logprob: -22.375
    7. '   ' → logprob: -22.5
    8. '

' → logprob: -23.0
    9. '9' → logprob: -23.8125
    10. ' +' → logprob: -24.0

Token 281: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: 'S' (ID: 50)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010848517995327711
    2. 'class' → logprob: -7.001084804534912
    3. 'n' → logprob: -9.75108528137207
    4. 'from' → logprob: -10.12608528137207
    5. 'import' → logprob: -10.75108528137207
    6. '#' → logprob: -10.87608528137207
    7. 'for' → logprob: -11.62608528137207
    8. 'a' → logprob: -11.75108528137207
    9. 'N' → logprob: -12.25108528137207
    10. 'dp' → logprob: -12.37608528137207

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6500768065452576
    2. ' =' → logprob: -0.9000768065452576
    3. 'tr' → logprob: -3.7750768661499023
    4. 'TR' → logprob: -4.150076866149902
    5. ':' → logprob: -5.275076866149902
    6. '_' → logprob: -5.400076866149902
    7. ')' → logprob: -5.400076866149902
    8. 'S' → logprob: -5.775076866149902
    9. '.' → logprob: -6.025076866149902
    10. '[' → logprob: -6.400076866149902

Token 284: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05506845936179161
    2. ' input' → logprob: -2.9300684928894043
    3. 'list' → logprob: -9.680068016052246
    4. 'LIST' → logprob: -10.430068016052246
    5. '""' → logprob: -10.680068016052246
    6. 'INPUT' → logprob: -11.055068016052246
    7. '"' → logprob: -11.180068016052246
    8. '''' → logprob: -12.305068016052246
    9. 'int' → logprob: -12.430068016052246
    10. '(input' → logprob: -12.555068016052246

Token 285: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005205047782510519
    2. '(' → logprob: -7.625520706176758
    3. '()
' → logprob: -11.750520706176758
    4. '().' → logprob: -12.125520706176758
    5. ' ()' → logprob: -12.500520706176758
    6. '())' → logprob: -12.625520706176758
    7. '('' → logprob: -13.125520706176758
    8. '()+' → logprob: -13.500520706176758
    9. '()`' → logprob: -13.625520706176758
    10. '()

' → logprob: -13.750520706176758

Token 286: 'N' (ID: 45)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8843082189559937
    2. 'for' → logprob: -1.6343082189559937
    3. 'i' → logprob: -2.009308338165283
    4. 'if' → logprob: -2.259308338165283
    5. 'count' → logprob: -3.134308338165283
    6. 'n' → logprob: -3.509308338165283
    7. 'cnt' → logprob: -4.509308338165283
    8. '.' → logprob: -4.634308338165283
    9. 'idx' → logprob: -5.134308338165283
    10. 'result' → logprob: -5.134308338165283

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002846211194992
    2. '=' → logprob: -2.3502845764160156
    3. '()' → logprob: -11.100284576416016
    4. ',' → logprob: -11.100284576416016
    5. ' ' → logprob: -11.350284576416016
    6. '=int' → logprob: -11.850284576416016
    7. ')' → logprob: -12.100284576416016
    8. '=len' → logprob: -12.225284576416016
    9. '.' → logprob: -12.600284576416016
    10. '_' → logprob: -12.850284576416016

Token 288: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.049711503088474274
    2. ' len' → logprob: -3.0497114658355713
    3. 'int' → logprob: -6.79971170425415
    4. ' int' → logprob: -12.299711227416992
    5. 'INT' → logprob: -13.049711227416992
    6. '(len' → logprob: -13.174711227416992
    7. 'LEN' → logprob: -14.674711227416992
    8. ' INT' → logprob: -16.049711227416992
    9. '=len' → logprob: -16.299711227416992
    10. '[len' → logprob: -17.049711227416992

Token 289: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.9027791495318525e-05
    2. 'S' → logprob: -11.125019073486328
    3. '(' → logprob: -12.375019073486328
    4. '(s' → logprob: -17.875019073486328
    5. '(
' → logprob: -18.250019073486328
    6. 's' → logprob: -18.500019073486328
    7. '(N' → logprob: -20.125019073486328
    8. '[S' → logprob: -20.125019073486328
    9. '```' → logprob: -20.375019073486328
    10. ')' → logprob: -21.125019073486328

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. '+' → logprob: -12.125011444091797
    3. ')
' → logprob: -13.125011444091797
    4. '#' → logprob: -13.750011444091797
    5. ' )' → logprob: -14.000011444091797
    6. 'S' → logprob: -14.625011444091797
    7. '-' → logprob: -14.875011444091797
    8. '()' → logprob: -14.875011444091797
    9. '[' → logprob: -15.750011444091797
    10. ')#' → logprob: -15.875011444091797

Token 291: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011750023812055588
    2. 'ans' → logprob: -5.511750221252441
    3. 'count' → logprob: -5.886750221252441
    4. 'cnt' → logprob: -6.886750221252441
    5. 'result' → logprob: -7.011750221252441
    6. 'for' → logprob: -7.386750221252441
    7. 'answer' → logprob: -7.511750221252441
    8. 'res' → logprob: -7.761750221252441
    9. 'counts' → logprob: -8.136750221252441
    10. 'freq' → logprob: -8.886750221252441

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891181856393814
    2. '=' → logprob: -2.578911781311035
    3. '[' → logprob: -11.078911781311035
    4. '=[' → logprob: -13.078911781311035
    5. ',' → logprob: -13.828911781311035
    6. ']' → logprob: -14.328911781311035
    7. ' =[' → logprob: -14.328911781311035
    8. ' ' → logprob: -14.453911781311035
    9. '_' → logprob: -14.578911781311035
    10. ')' → logprob: -14.703911781311035

Token 293: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1720481663942337
    2. '[[' → logprob: -2.4220480918884277
    3. '[' → logprob: -2.9220480918884277
    4. '[list' → logprob: -4.172048091888428
    5. ' list' → logprob: -10.547048568725586
    6. ' [' → logprob: -11.047048568725586
    7. ' [[' → logprob: -11.172048568725586
    8. '[n' → logprob: -12.547048568725586
    9. '[(' → logprob: -13.047048568725586
    10. '[len' → logprob: -13.172048568725586

Token 294: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03192159906029701
    2. '2' → logprob: -4.15692138671875
    3. '3' → logprob: -4.28192138671875
    4. '(N' → logprob: -6.90692138671875
    5. '[N' → logprob: -7.40692138671875
    6. '[' → logprob: -9.03192138671875
    7. '(' → logprob: -9.15692138671875
    8. ' =' → logprob: -10.15692138671875
    9. '(n' → logprob: -11.15692138671875
    10. '(range' → logprob: -11.65692138671875

Token 295: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.68022444692906e-05
    2. 'dp' → logprob: -10.625046730041504
    3. '(N' → logprob: -10.750046730041504
    4. '2' → logprob: -14.625046730041504
    5. '1' → logprob: -15.625046730041504
    6. '(' → logprob: -15.875046730041504
    7. '[N' → logprob: -15.875046730041504
    8. '(S' → logprob: -16.00004768371582
    9. 'D' → logprob: -17.25004768371582
    10. 'int' → logprob: -17.62504768371582

Token 296: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00019829542725346982
    2. '(' → logprob: -8.750198364257812
    3. 'N' → logprob: -10.250198364257812
    4. '(n' → logprob: -12.500198364257812
    5. 'dp' → logprob: -15.375198364257812
    6. ' (' → logprob: -15.500198364257812
    7. '((' → logprob: -16.125198364257812
    8. '2' → logprob: -17.375198364257812
    9. ',' → logprob: -17.875198364257812
    10. ' N' → logprob: -18.125198364257812

Token 297: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005908295977860689
    2. ',N' → logprob: -6.130908489227295
    3. '+' → logprob: -6.505908489227295
    4. ' ,' → logprob: -6.630908489227295
    5. 'N' → logprob: -7.755908489227295
    6. '(N' → logprob: -8.255908012390137
    7. '2' → logprob: -9.130908012390137
    8. ' +' → logprob: -10.380908012390137
    9. '(' → logprob: -10.880908012390137
    10. ' N' → logprob: -11.255908012390137

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003206711495295167
    2. ' ' → logprob: -5.878206729888916
    3. '2' → logprob: -7.878206729888916
    4. '3' → logprob: -11.878206253051758
    5. 'N' → logprob: -12.253206253051758
    6. '7' → logprob: -12.878206253051758
    7. '5' → logprob: -13.003206253051758
    8. '10' → logprob: -13.753206253051758
    9. ' N' → logprob: -13.753206253051758
    10. ',' → logprob: -14.253206253051758

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07021518051624298
    2. '2' → logprob: -3.4452152252197266
    3. '3' → logprob: -4.070215225219727
    4. '10' → logprob: -4.945215225219727
    5. '5' → logprob: -5.320215225219727
    6. '4' → logprob: -5.695215225219727
    7. 'N' → logprob: -6.445215225219727
    8. '7' → logprob: -7.320215225219727
    9. '6' → logprob: -7.570215225219727
    10. '11' → logprob: -8.070215225219727

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040457461727783084
    2. ' ,' → logprob: -8.250404357910156
    3. '3' → logprob: -10.375404357910156
    4. '4' → logprob: -10.750404357910156
    5. '2' → logprob: -10.875404357910156
    6. '6' → logprob: -11.125404357910156
    7. '7' → logprob: -11.750404357910156
    8. '5' → logprob: -11.875404357910156
    9. ',N' → logprob: -11.875404357910156
    10. '10' → logprob: -11.875404357910156

Token 301: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4336419105529785
    2. '4' → logprob: -1.4336419105529785
    3. '26' → logprob: -2.0586419105529785
    4. '13' → logprob: -2.1836419105529785
    5. '5' → logprob: -2.8086419105529785
    6. '2' → logprob: -2.9336419105529785
    7. '10' → logprob: -3.1836419105529785
    8. '6' → logprob: -3.4336419105529785
    9. '7' → logprob: -3.5586419105529785
    10. '8' → logprob: -3.5586419105529785

Token 302: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2348966598510742
    2. '4' → logprob: -1.2348966598510742
    3. '13' → logprob: -2.359896659851074
    4. '26' → logprob: -2.859896659851074
    5. '10' → logprob: -2.984896659851074
    6. '5' → logprob: -3.109896659851074
    7. '2' → logprob: -3.109896659851074
    8. '7' → logprob: -3.484896659851074
    9. '8' → logprob: -3.609896659851074
    10. '6' → logprob: -3.859896659851074

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014180023572407663
    2. ')' → logprob: -9.250142097473145
    3. ' ,' → logprob: -10.750142097473145
    4. '0' → logprob: -11.000142097473145
    5. ' +' → logprob: -12.750142097473145
    6. '+' → logprob: -12.875142097473145
    7. ',float' → logprob: -14.375142097473145
    8. ',-' → logprob: -15.250142097473145
    9. ',int' → logprob: -16.000141143798828
    10. '5' → logprob: -16.000141143798828

Token 304: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003948028665035963
    2. 'INF' → logprob: -5.628948211669922
    3. 'False' → logprob: -8.503948211669922
    4. '-' → logprob: -9.378948211669922
    5. '[' → logprob: -10.628948211669922
    6. ' ' → logprob: -11.503948211669922
    7. 'MOD' → logprob: -11.503948211669922
    8. 'inf' → logprob: -12.503948211669922
    9. '1' → logprob: -13.253948211669922
    10. 'float' → logprob: -13.253948211669922

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00320123927667737
    2. 'INF' → logprob: -5.878201007843018
    3. '[' → logprob: -8.628201484680176
    4. 'False' → logprob: -8.753201484680176
    5. 'MOD' → logprob: -10.378201484680176
    6. '-' → logprob: -11.128201484680176
    7. '[[' → logprob: -12.253201484680176
    8. '1' → logprob: -13.253201484680176
    9. 'inf' → logprob: -13.753201484680176
    10. '(' → logprob: -14.128201484680176

Token 306: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.00000286102295
    4. '))' → logprob: -15.75000286102295
    5. '())' → logprob: -16.125001907348633
    6. ')`' → logprob: -16.625001907348633
    7. '0' → logprob: -18.375001907348633
    8. ')#' → logprob: -18.500001907348633
    9. ')

' → logprob: -18.625001907348633
    10. '`)' → logprob: -19.125001907348633

Token 307: 'from' (ID: 2845)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11368664354085922
    2. 'for' → logprob: -2.2386865615844727
    3. ' for' → logprob: -7.363686561584473
    4. ')' → logprob: -9.238686561584473
    5. 'i' → logprob: -9.738686561584473
    6. ' dp' → logprob: -10.488686561584473
    7. ']' → logprob: -11.738686561584473
    8. '0' → logprob: -11.863686561584473
    9. '_' → logprob: -12.113686561584473
    10. '	dp' → logprob: -12.863686561584473

Token 308: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.2715456485748291
    2. ' collections' → logprob: -2.396545648574829
    3. 'operator' → logprob: -3.146545648574829
    4. 'math' → logprob: -3.521545648574829
    5. ' operator' → logprob: -3.771545648574829
    6. ' itertools' → logprob: -4.02154541015625
    7. ' math' → logprob: -4.64654541015625
    8. '_' → logprob: -4.64654541015625
    9. '_operator' → logprob: -4.77154541015625
    10. 'heap' → logprob: -6.14654541015625

Token 309: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.020939240232110023
    2. ' import' → logprob: -3.895939350128174
    3. '	import' → logprob: -8.520938873291016
    4. '_import' → logprob: -9.645938873291016
    5. '.com' → logprob: -10.020938873291016
    6. 'ertools' → logprob: -10.770938873291016
    7. '.import' → logprob: -10.770938873291016
    8. '.groupby' → logprob: -11.770938873291016
    9. 'com' → logprob: -11.895938873291016
    10. '```' → logprob: -12.020938873291016

Token 310: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.06939806044101715
    2. 'com' → logprob: -3.0693981647491455
    3. 'acc' → logprob: -4.319397926330566
    4. 'per' → logprob: -4.944397926330566
    5. 'group' → logprob: -9.069397926330566
    6. 'cycle' → logprob: -10.194397926330566
    7. '```' → logprob: -12.694397926330566
    8. 'chain' → logprob: -13.319397926330566
    9. '.product' → logprob: -13.444397926330566
    10. 'count' → logprob: -13.694397926330566

Token 311: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004641472361981869
    2. ' for' → logprob: -6.129641532897949
    3. '()' → logprob: -6.504641532897949
    4. '()
' → logprob: -8.25464153289795
    5. '
' → logprob: -8.50464153289795
    6. '(' → logprob: -9.00464153289795
    7. '(
' → logprob: -9.87964153289795
    8. 'chars' → logprob: -9.87964153289795
    9. 'tokens' → logprob: -10.50464153289795
    10. ')' → logprob: -10.62964153289795

Token 312: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015347852604463696
    2. ' for' → logprob: -9.000153541564941
    3. 'chars' → logprob: -11.375153541564941
    4. 'states' → logprob: -12.375153541564941
    5. 'dp' → logprob: -12.500153541564941
    6. 'patterns' → logprob: -13.000153541564941
    7. 'options' → logprob: -13.750153541564941
    8. 'colors' → logprob: -13.750153541564941
    9. 'pattern' → logprob: -13.875153541564941
    10. 'digits' → logprob: -14.250153541564941

Token 313: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5001101493835449
    2. ' dfs' → logprob: -2.000110149383545
    3. ' solve' → logprob: -2.125110149383545
    4. ' count' → logprob: -3.625110149383545
    5. 'solve' → logprob: -3.625110149383545
    6. ' check' → logprob: -3.750110149383545
    7. ' calc' → logprob: -4.375110149383545
    8. 'main' → logprob: -4.500110149383545
    9. 'dfs' → logprob: -5.000110149383545
    10. ' f' → logprob: -5.125110149383545

Token 314: '(f' (ID: 1526)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.40495941042900085
    2. '(' → logprob: -1.1549594402313232
    3. '_dp' → logprob: -5.154959201812744
    4. '(i' → logprob: -5.529959201812744
    5. 'dp' → logprob: -6.029959201812744
    6. '_state' → logprob: -6.279959201812744
    7. '(state' → logprob: -6.529959201812744
    8. '_' → logprob: -7.404959201812744
    9. '_states' → logprob: -8.404959678649902
    10. ' (' → logprob: -8.404959678649902

Token 315: ',' (ID: 11)
  Prédit: 'rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.8560793995857239
    2. 'or' → logprob: -1.731079339981079
    3. 'req' → logprob: -2.356079339981079
    4. ',' → logprob: -3.106079339981079
    5. 'p' → logprob: -3.106079339981079
    6. '):
' → logprob: -3.606079339981079
    7. 'dp' → logprob: -3.731079339981079
    8. 'unc' → logprob: -3.856079339981079
    9. 'lag' → logprob: -3.856079339981079
    10. 'unction' → logprob: -3.981079339981079

Token 316: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9736188650131226
    2. 't' → logprob: -1.5986188650131226
    3. 'g' → logprob: -1.8486188650131226
    4. 'x' → logprob: -2.098618984222412
    5. 's' → logprob: -3.098618984222412
    6. 'c' → logprob: -3.848618984222412
    7. 'dp' → logprob: -4.223618984222412
    8. 'n' → logprob: -4.598618984222412
    9. 'a' → logprob: -4.973618984222412
    10. 'idx' → logprob: -5.348618984222412

Token 317: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.005821429658681154
    2. 'states' → logprob: -6.255821228027344
    3. 'conds' → logprob: -7.255821228027344
    4. 'vals' → logprob: -7.630821228027344
    5. 'f' → logprob: -8.005821228027344
    6. 'a' → logprob: -8.505821228027344
    7. 'xs' → logprob: -8.630821228027344
    8. 'indices' → logprob: -8.630821228027344
    9. 'fs' → logprob: -8.755821228027344
    10. 'arr' → logprob: -8.880821228027344

Token 318: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026534363627433777
    2. '):
' → logprob: -3.65153431892395
    3. ':' → logprob: -8.526534080505371
    4. ')' → logprob: -11.276534080505371
    5. '):
' → logprob: -11.401534080505371
    6. ' ):' → logprob: -12.276534080505371
    7. ',' → logprob: -12.401534080505371
    8. '   ' → logprob: -14.026534080505371
    9. '():' → logprob: -14.276534080505371
    10. ' ' → logprob: -14.401534080505371

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14105045795440674
    2. ' f' → logprob: -3.016050338745117
    3. ' for' → logprob: -4.141050338745117
    4. ' return' → logprob: -4.141050338745117
    5. 'f' → logprob: -4.266050338745117
    6. 'dp' → logprob: -4.266050338745117
    7. ' dp' → logprob: -4.641050338745117
    8. ' if' → logprob: -4.766050338745117
    9. 'return' → logprob: -6.266050338745117
    10. 'if' → logprob: -6.891050338745117

Token 320: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6728094816207886
    2. 'f' → logprob: -1.2978094816207886
    3. 'return' (adapté à ' return') → logprob: -2.422809600830078
    4. 'if' → logprob: -3.047809600830078
    5. 'dp' → logprob: -3.172809600830078
    6. ' for' → logprob: -4.422809600830078
    7. 'res' → logprob: -5.172809600830078
    8. '   ' → logprob: -5.297809600830078
    9. ' return' → logprob: -5.422809600830078
    10. ' f' → logprob: -5.547809600830078

Token 321: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12751592695713043
    2. ' f' → logprob: -2.127516031265259
    3. '(f' → logprob: -7.87751579284668
    4. ' (' → logprob: -10.37751579284668
    5. 'lambda' → logprob: -10.62751579284668
    6. ' lambda' → logprob: -11.00251579284668
    7. '[f' → logprob: -11.00251579284668
    8. 'list' → logprob: -11.00251579284668
    9. ' ' → logprob: -11.12751579284668
    10. '(' → logprob: -11.50251579284668

Token 322: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.021308068186044693
    2. '(' → logprob: -3.896308183670044
    3. '(args' → logprob: -7.646307945251465
    4. '((*' → logprob: -8.771307945251465
    5. '(*)' → logprob: -10.146307945251465
    6. '(
' → logprob: -10.271307945251465
    7. '()' → logprob: -11.271307945251465
    8. '(tuple' → logprob: -11.396307945251465
    9. '(*(' → logprob: -11.396307945251465
    10. '(f' → logprob: -13.021307945251465

Token 323: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -1.8624639324116288e-06
    2. '(args' → logprob: -13.500001907348633
    3. ' args' → logprob: -14.875001907348633
    4. '	args' → logprob: -17.625001907348633
    5. '_args' → logprob: -17.750001907348633
    6. ')' → logprob: -18.000001907348633
    7. '$args' → logprob: -18.750001907348633
    8. '.args' → logprob: -20.000001907348633
    9. '
' → logprob: -20.125001907348633
    10. ',args' → logprob: -20.375001907348633

Token 324: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.500005722045898
    3. '))' → logprob: -14.000005722045898
    4. ')+' → logprob: -15.250005722045898
    5. ' )' → logprob: -15.750005722045898
    6. ')

' → logprob: -16.3750057220459
    7. '())' → logprob: -16.6250057220459
    8. ')[' → logprob: -16.6250057220459
    9. ')return' → logprob: -17.1250057220459
    10. ')#' → logprob: -17.7500057220459

Token 325: 'import' (ID: 561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0693080872297287
    2. ')' → logprob: -3.569308042526245
    3. ' for' → logprob: -3.694308042526245
    4. '_' → logprob: -5.694308280944824
    5. '[' → logprob: -5.944308280944824
    6. 'dp' → logprob: -6.444308280944824
    7. '(' → logprob: -6.569308280944824
    8. 'f' → logprob: -7.069308280944824
    9. ':' → logprob: -7.194308280944824
    10. ',' → logprob: -7.444308280944824

Token 326: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.1499667167663574
    2. 'collections' → logprob: -1.3999667167663574
    3. 'math' → logprob: -1.6499667167663574
    4. ' sys' → logprob: -2.3999667167663574
    5. ' collections' → logprob: -3.5249667167663574
    6. 'sys' → logprob: -3.5249667167663574
    7. ' itertools' → logprob: -3.7749667167663574
    8. 'heap' → logprob: -4.024966716766357
    9. 'bis' → logprob: -4.149966716766357
    10. ' heap' → logprob: -4.524966716766357

Token 327: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8045826554298401
    2. '<|end|>' → logprob: -1.8045825958251953
    3. ',' → logprob: -2.1795825958251953
    4. '[' → logprob: -2.6795825958251953
    5. 'def' → logprob: -3.1795825958251953
    6. '
' → logprob: -3.3045825958251953
    7. '_' → logprob: -3.4295825958251953
    8. '[
' → logprob: -3.9295825958251953
    9. '.
' → logprob: -4.054582595825195
    10. ')' → logprob: -4.929582595825195

Token 328: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5829938650131226
    2. 'dp' → logprob: -1.0829938650131226
    3. 'op' → logprob: -3.832993984222412
    4. 'def' → logprob: -4.082993984222412
    5. 'f' → logprob: -4.332993984222412
    6. 'ops' → logprob: -4.707993984222412
    7. 'prev' → logprob: -5.082993984222412
    8. '_' → logprob: -5.332993984222412
    9. '=' → logprob: -5.457993984222412
    10. 'i' → logprob: -5.832993984222412

Token 329: ' Artificial' (ID: 79912)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009369158186018467
    2. ' for' → logprob: -5.884369373321533
    3. 'dp' → logprob: -6.009369373321533
    4. 'ops' → logprob: -6.884369373321533
    5. 'i' → logprob: -7.384369373321533
    6. 'op' → logprob: -7.509369373321533
    7. 'prev' → logprob: -7.759369373321533
    8. 'def' → logprob: -8.509368896484375
    9. 'states' → logprob: -9.134368896484375
    10. 'idx' → logprob: -9.384368896484375

Token 330: 'ly' (ID: 423)
  Prédit: ' intelligence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intelligence' → logprob: -0.9724206328392029
    2. '<|end|>' → logprob: -1.0974206924438477
    3. 'token' → logprob: -2.5974206924438477
    4. 'ly' → logprob: -3.0974206924438477
    5. 'def' → logprob: -3.2224206924438477
    6. 'int' → logprob: -3.3474206924438477
    7. ' Intelligence' → logprob: -3.9724206924438477
    8. '_' → logprob: -4.722420692443848
    9. '<|end|>' → logprob: -4.722420692443848
    10. '_int' → logprob: -4.847420692443848

Token 331: ' complex' (ID: 8012)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increase' → logprob: -1.406482219696045
    2. 'expand' → logprob: -1.656482219696045
    3. 'limit' → logprob: -2.531482219696045
    4. 'insert' → logprob: -2.656482219696045
    5. 'inflate' → logprob: -2.781482219696045
    6. 'continue' → logprob: -2.781482219696045
    7. 'extend' → logprob: -3.031482219696045
    8. 'def' → logprob: -3.281482219696045
    9. 'int' → logprob: -3.406482219696045
    10. 'complete' → logprob: -3.906482219696045

Token 332: ' initialization' (ID: 41684)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10655868798494339
    2. 'dp' → logprob: -2.3565587997436523
    3. 'op' → logprob: -6.606558799743652
    4. 'ops' → logprob: -6.731558799743652
    5. ' for' → logprob: -7.231558799743652
    6. 'states' → logprob: -8.231558799743652
    7. 'state' → logprob: -8.356558799743652
    8. 'cur' → logprob: -8.606558799743652
    9. 'res' → logprob: -8.731558799743652
    10. 'prev' → logprob: -8.981558799743652

Token 334: '_' (ID: 62)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01157128531485796
    2. 'dp' → logprob: -4.761571407318115
    3. 'ops' → logprob: -6.511571407318115
    4. ' for' → logprob: -7.636571407318115
    5. 'op' → logprob: -8.136570930480957
    6. 'from' → logprob: -8.636570930480957
    7. 'prev' → logprob: -9.636570930480957
    8. 'mul' → logprob: -9.886570930480957
    9. 'f' → logprob: -10.136570930480957
    10. 'mult' → logprob: -10.386570930480957

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6253576874732971
    2. '=' → logprob: -0.8753576874732971
    3. 'for' → logprob: -3.7503576278686523
    4. 'dp' → logprob: -4.250357627868652
    5. 'tmp' → logprob: -5.750357627868652
    6. 'vals' → logprob: -6.375357627868652
    7. 'temp' → logprob: -7.125357627868652
    8. 'ops' → logprob: -7.375357627868652
    9. 's' → logprob: -7.875357627868652
    10. '=[' → logprob: -8.125357627868652

Token 336: ' [' (ID: 723)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.09852668642997742
    2. 'list' → logprob: -3.3485267162323
    3. 'update' → logprob: -3.7235267162323
    4. '[' → logprob: -4.223526477813721
    5. ' reduce' → logprob: -5.223526477813721
    6. '[[' → logprob: -5.223526477813721
    7. 'dp' → logprob: -5.473526477813721
    8. '[(' → logprob: -7.598526477813721
    9. ' list' → logprob: -7.598526477813721
    10. '0' → logprob: -7.723526477813721

Token 337: 'set' (ID: 977)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.039191994816064835
    2. 'dp' → logprob: -3.664191961288452
    3. 'operator' → logprob: -4.664192199707031
    4. '(' → logprob: -7.039192199707031
    5. 'set' → logprob: -7.039192199707031
    6. '(update' → logprob: -7.164192199707031
    7. '0' → logprob: -8.289192199707031
    8. 'list' → logprob: -8.914192199707031
    9. 'reduce' → logprob: -9.539192199707031
    10. '_' → logprob: -9.914192199707031

Token 338: 'attr' (ID: 6035)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.29407191276550293
    2. '()' → logprob: -1.794071912765503
    3. '(range' → logprob: -2.669071912765503
    4. '(product' → logprob: -5.044072151184082
    5. '(update' → logprob: -5.544072151184082
    6. 'range' → logprob: -6.169072151184082
    7. '((' → logprob: -6.169072151184082
    8. '([' → logprob: -7.044072151184082
    9. '(map' → logprob: -7.419072151184082
    10. 'update' → logprob: -7.419072151184082

Token 339: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.02894306182861328
    2. '(operator' → logprob: -4.403943061828613
    3. 'dp' → logprob: -4.778943061828613
    4. '(sys' → logprob: -5.278943061828613
    5. '(update' → logprob: -7.153943061828613
    6. '(_,' → logprob: -7.403943061828613
    7. '(' → logprob: -7.528943061828613
    8. 'operator' → logprob: -8.778943061828613
    9. 'sys' → logprob: -9.403943061828613
    10. '(__' → logprob: -9.403943061828613

Token 340: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012386854737997055
    2. ',' → logprob: -5.637386798858643
    3. '[N' → logprob: -6.137386798858643
    4. '[' → logprob: -6.262386798858643
    5. '[j' → logprob: -6.262386798858643
    6. '[row' → logprob: -6.887386798858643
    7. '[x' → logprob: -7.762386798858643
    8. '[pos' → logprob: -8.2623872756958
    9. '[y' → logprob: -8.8873872756958
    10. '[r' → logprob: -9.0123872756958

Token 341: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011866534128785133
    2. '_' → logprob: -5.386866569519043
    3. '_i' → logprob: -6.011866569519043
    4. '0' → logprob: -6.386866569519043
    5. '[i' → logprob: -7.011866569519043
    6. '][' → logprob: -7.261866569519043
    7. '_,' → logprob: -8.011866569519043
    8. '_]' → logprob: -8.261866569519043
    9. ' i' → logprob: -8.761866569519043
    10. 'dp' → logprob: -9.011866569519043

Token 342: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6692711710929871
    2. '[' → logprob: -1.1692712306976318
    3. '[i' → logprob: -1.9192712306976318
    4. '],' → logprob: -3.669271230697632
    5. ',' → logprob: -6.419270992279053
    6. '[j' → logprob: -6.794270992279053
    7. '][_' → logprob: -7.794270992279053
    8. 'i' → logprob: -7.919270992279053
    9. '[k' → logprob: -8.294271469116211
    10. '[f' → logprob: -8.544271469116211

Token 343: ' '__' (ID: 28278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011816820129752159
    2. 'j' → logprob: -5.51181697845459
    3. '__' → logprob: -5.63681697845459
    4. ''i' → logprob: -6.76181697845459
    5. '__,' → logprob: -7.01181697845459
    6. 'idx' → logprob: -7.26181697845459
    7. '0' → logprob: -7.88681697845459
    8. ''' → logprob: -8.13681697845459
    9. 'k' → logprob: -8.76181697845459
    10. '_,' → logprob: -9.01181697845459

Token 344: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.02359658107161522
    2. 'getitem' → logprob: -3.7735965251922607
    3. 'i' → logprob: -8.64859676361084
    4. 'len' → logprob: -9.52359676361084
    5. 'sets' → logprob: -10.14859676361084
    6. 'class' → logprob: -10.77359676361084
    7. 'iter' → logprob: -10.77359676361084
    8. 'init' → logprob: -12.39859676361084
    9. 'imul' → logprob: -12.52359676361084
    10. 'item' → logprob: -12.52359676361084

Token 345: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.12692873179912567
    2. 'attr' → logprob: -2.1269288063049316
    3. 'attribute' → logprob: -15.376928329467773
    4. 'attro' → logprob: -15.876928329467773
    5. '__' → logprob: -16.126928329467773
    6. 'ite' → logprob: -16.626928329467773
    7. '```' → logprob: -16.876928329467773
    8. 'it' → logprob: -17.376928329467773
    9. ' item' → logprob: -17.876928329467773
    10. '__(' → logprob: -18.376928329467773

Token 346: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6380624771118164
    2. '',' → logprob: -0.8880624771118164
    3. '__,' → logprob: -3.2630624771118164
    4. '__(' → logprob: -4.513062477111816
    5. '',(' → logprob: -5.263062477111816
    6. ',' → logprob: -6.138062477111816
    7. '__('' → logprob: -6.513062477111816
    8. '(',' → logprob: -7.388062477111816
    9. '(' → logprob: -7.888062477111816
    10. '__((' → logprob: -8.263062477111816

Token 347: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04345652833580971
    2. '(i' → logprob: -3.918456554412842
    3. '__,' → logprob: -4.043456554412842
    4. '(' → logprob: -6.168456554412842
    5. ',(' → logprob: -7.293456554412842
    6. '(k' → logprob: -7.418456554412842
    7. '],' → logprob: -7.668456554412842
    8. '),' → logprob: -7.793456554412842
    9. '(index' → logprob: -9.043456077575684
    10. '(idx' → logprob: -9.168456077575684

Token 348: ' (' (ID: 350)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07930326461791992
    2. '(lambda' → logprob: -3.20430326461792
    3. '(' → logprob: -4.07930326461792
    4. ' lambda' → logprob: -4.45430326461792
    5. ' (' → logprob: -5.82930326461792
    6. '0' → logprob: -6.70430326461792
    7. 'operator' → logprob: -6.95430326461792
    8. ')' → logprob: -7.95430326461792
    9. 'dp' → logprob: -8.079303741455078
    10. '(operator' → logprob: -8.204303741455078

Token 349: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0009610046399757266
    2. '(lambda' → logprob: -7.000960826873779
    3. ' lambda' → logprob: -10.750961303710938
    4. 'operator' → logprob: -11.000961303710938
    5. 'dp' → logprob: -12.375961303710938
    6. '(' → logprob: -12.500961303710938
    7. '0' → logprob: -14.000961303710938
    8. '__' → logprob: -14.375961303710938
    9. '   ' → logprob: -14.750961303710938
    10. 'staticmethod' → logprob: -15.250961303710938

Token 350: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18495525419712067
    2. 'lambda' → logprob: -2.684955358505249
    3. 'k' → logprob: -2.934955358505249
    4. 'idx' → logprob: -3.934955358505249
    5. 'x' → logprob: -4.05995512008667
    6. 'index' → logprob: -4.93495512008667
    7. '__' → logprob: -7.30995512008667
    8. 'self' → logprob: -7.30995512008667
    9. ' i' → logprob: -7.55995512008667
    10. '0' → logprob: -7.55995512008667

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024047892075031996
    2. 'lambda' → logprob: -6.752404689788818
    3. ' ,' → logprob: -8.002405166625977
    4. ',value' → logprob: -8.877405166625977
    5. ':' → logprob: -9.002405166625977
    6. 'n' → logprob: -9.377405166625977
    7. 'x' → logprob: -9.377405166625977
    8. 'token' → logprob: -9.752405166625977
    9. '0' → logprob: -10.252405166625977
    10. ' ' → logprob: -10.252405166625977

Token 352: ' val' (ID: 1459)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.19184507429599762
    2. 'value' → logprob: -1.9418450593948364
    3. 'val' → logprob: -3.566845178604126
    4. ' lambda' → logprob: -6.566844940185547
    5. 'v' → logprob: -7.066844940185547
    6. '(lambda' → logprob: -8.566844940185547
    7. ' value' → logprob: -8.691844940185547
    8. '   ' → logprob: -9.691844940185547
    9. 'x' → logprob: -9.691844940185547
    10. ' val' → logprob: -10.816844940185547

Token 353: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007608397863805294
    2. ',' → logprob: -5.257608413696289
    3. ' :' → logprob: -6.257608413696289
    4. '   ' → logprob: -9.257608413696289
    5. ':
' → logprob: -9.632608413696289
    6. '_:' → logprob: -9.757608413696289
    7. '):' → logprob: -10.007608413696289
    8. ' ' → logprob: -10.632608413696289
    9. ' ,' → logprob: -10.757608413696289
    10. '=' → logprob: -10.882608413696289

Token 354: ' type' (ID: 1490)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10580045729875565
    2. 'object' → logprob: -3.6058003902435303
    3. ' dp' → logprob: -4.105800628662109
    4. '(dp' → logprob: -4.355800628662109
    5. '__' → logprob: -4.605800628662109
    6. 'None' → logprob: -4.980800628662109
    7. 'list' → logprob: -5.355800628662109
    8. 'type' → logprob: -6.105800628662109
    9. '[' → logprob: -6.105800628662109
    10. 'operator' → logprob: -6.355800628662109

Token 355: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.014995741657912731
    2. '(object' → logprob: -5.264995574951172
    3. '(None' → logprob: -5.514995574951172
    4. 'object' → logprob: -6.264995574951172
    5. '(get' → logprob: -6.514995574951172
    6. '(set' → logprob: -7.014995574951172
    7. '(lambda' → logprob: -7.889995574951172
    8. 'dp' → logprob: -7.889995574951172
    9. '(' → logprob: -8.014995574951172
    10. 'set' → logprob: -9.139995574951172

Token 356: '[' (ID: 58)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3656468987464905
    2. 'dp' → logprob: -1.2406468391418457
    3. '(' → logprob: -5.240646839141846
    4. '[' → logprob: -5.865646839141846
    5. '(None' → logprob: -6.115646839141846
    6. ':' → logprob: -6.490646839141846
    7. 'object' → logprob: -6.865646839141846
    8. ')' → logprob: -7.365646839141846
    9. '0' → logprob: -7.740646839141846
    10. 'None' → logprob: -8.240647315979004

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23982810974121094
    2. 'dp' → logprob: -1.614828109741211
    3. '[' → logprob: -4.864828109741211
    4. '_' → logprob: -5.489828109741211
    5. '_)' → logprob: -7.864828109741211
    6. ')' → logprob: -8.114828109741211
    7. ' dp' → logprob: -8.364828109741211
    8. '_[' → logprob: -8.364828109741211
    9. '(' → logprob: -8.489828109741211
    10. ' ' → logprob: -8.864828109741211

Token 358: ']).' (ID: 21953)
  Prédit: ').__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').__' → logprob: -0.2341620922088623
    2. ')(' → logprob: -1.8591620922088623
    3. ')' → logprob: -4.109162330627441
    4. ').' → logprob: -4.484162330627441
    5. ')._' → logprob: -4.734162330627441
    6. '(dp' → logprob: -5.359162330627441
    7. ')[' → logprob: -5.734162330627441
    8. '[' → logprob: -6.234162330627441
    9. '(' → logprob: -6.484162330627441
    10. ')((' → logprob: -6.734162330627441

Token 359: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0021302755922079086
    2. '___' → logprob: -6.752130508422852
    3. 'dp' → logprob: -7.377130508422852
    4. '.__' → logprob: -8.627130508422852
    5. '
' → logprob: -10.252130508422852
    6. 'set' → logprob: -10.752130508422852
    7. ' __' → logprob: -11.002130508422852
    8. '____' → logprob: -11.127130508422852
    9. 'object' → logprob: -11.377130508422852
    10. '```' → logprob: -11.627130508422852

Token 360: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.4391956685576588e-05
    2. 'call' → logprob: -10.875024795532227
    3. 'dict' → logprob: -12.625024795532227
    4. 'getitem' → logprob: -13.375024795532227
    5. 'get' → logprob: -15.500024795532227
    6. 'sets' → logprob: -15.750024795532227
    7. ' set' → logprob: -16.000024795532227
    8. '_set' → logprob: -16.750024795532227
    9. 'init' → logprob: -18.375024795532227
    10. 'sub' → logprob: -18.375024795532227

Token 361: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.07890939712524414
    2. 'attr' → logprob: -2.578909397125244
    3. 'attribute' → logprob: -11.203908920288086
    4. '__' → logprob: -13.703908920288086
    5. 't' → logprob: -13.953908920288086
    6. 'method' → logprob: -14.078908920288086
    7. '```' → logprob: -14.328908920288086
    8. 'em' → logprob: -15.203908920288086
    9. '[item' → logprob: -15.203908920288086
    10. 'attro' → logprob: -15.328908920288086

Token 362: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.39167270064353943
    2. '(dp' → logprob: -1.1416727304458618
    3. '__' → logprob: -5.641672611236572
    4. '__((' → logprob: -7.516672611236572
    5. '__))' → logprob: -8.64167308807373
    6. ')(' → logprob: -8.89167308807373
    7. '((' → logprob: -9.51667308807373
    8. '_(' → logprob: -9.76667308807373
    9. '(' → logprob: -9.76667308807373
    10. '___' → logprob: -9.76667308807373

Token 363: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6332446932792664
    2. 'dp' → logprob: -0.7582446932792664
    3. ' dp' → logprob: -7.758244514465332
    4. ')' → logprob: -10.133244514465332
    5. 'None' → logprob: -10.633244514465332
    6. '(' → logprob: -10.633244514465332
    7. '))' → logprob: -10.883244514465332
    8. ')(' → logprob: -11.133244514465332
    9. '__' → logprob: -11.383244514465332
    10. '[' → logprob: -11.508244514465332

Token 364: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3096091151237488
    2. '0' → logprob: -1.5596091747283936
    3. '__' → logprob: -3.3096091747283936
    4. '__[' → logprob: -4.4346089363098145
    5. '__(' → logprob: -5.6846089363098145
    6. '(' → logprob: -5.9346089363098145
    7. '__,' → logprob: -7.4346089363098145
    8. 'dp' → logprob: -7.6846089363098145
    9. ',' → logprob: -9.184609413146973
    10. '```' → logprob: -9.934609413146973

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002810007717926055
    2. 'dp' → logprob: -8.87528133392334
    3. '[' → logprob: -9.75028133392334
    4. '__' → logprob: -10.12528133392334
    5. ' ' → logprob: -11.50028133392334
    6. '(' → logprob: -12.12528133392334
    7. '```' → logprob: -12.75028133392334
    8. ',' → logprob: -12.87528133392334
    9. '1' → logprob: -13.00028133392334
    10. '_' → logprob: -13.12528133392334

Token 366: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06819496303796768
    2. ')(' → logprob: -3.06819486618042
    3. '__,' → logprob: -4.19319486618042
    4. '[' → logprob: -7.31819486618042
    5. '_,' → logprob: -7.44319486618042
    6. '__' → logprob: -7.56819486618042
    7. '0' → logprob: -7.69319486618042
    8. ' ,' → logprob: -8.318195343017578
    9. '][' → logprob: -8.318195343017578
    10. '),' → logprob: -8.443195343017578

Token 367: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004298846237361431
    2. ' idx' → logprob: -5.629298686981201
    3. 'dp' → logprob: -8.12929916381836
    4. '0' → logprob: -8.62929916381836
    5. '(idx' → logprob: -9.25429916381836
    6. '   ' → logprob: -10.50429916381836
    7. ' ' → logprob: -11.12929916381836
    8. 'index' → logprob: -11.12929916381836
    9. '  ' → logprob: -11.25429916381836
    10. '1' → logprob: -11.62929916381836

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03924747183918953
    2. ',val' → logprob: -3.289247512817383
    3. ' ,' → logprob: -7.414247512817383
    4. 'val' → logprob: -7.664247512817383
    5. ' val' → logprob: -9.039247512817383
    6. '[val' → logprob: -11.664247512817383
    7. '(val' → logprob: -13.789247512817383
    8. ',
' → logprob: -13.914247512817383
    9. '	val' → logprob: -14.289247512817383
    10. ')' → logprob: -14.414247512817383

Token 369: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0018145251087844372
    2. '(val' → logprob: -6.876814365386963
    3. ' val' → logprob: -7.751814365386963
    4. '0' → logprob: -8.376814842224121
    5. '(' → logprob: -10.376814842224121
    6. 'dp' → logprob: -10.876814842224121
    7. '   ' → logprob: -11.251814842224121
    8. 'max' → logprob: -11.251814842224121
    9. 'int' → logprob: -11.751814842224121
    10. '1' → logprob: -11.751814842224121

Token 370: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.04076287895441055
    2. '))' → logprob: -3.2907629013061523
    3. ')' → logprob: -6.540762901306152
    4. '))))' → logprob: -7.665762901306152
    5. ')))
' → logprob: -7.790762901306152
    6. '))),' → logprob: -9.040762901306152
    7. '   ' → logprob: -9.290762901306152
    8. ')
' → logprob: -9.665762901306152
    9. ' ' → logprob: -10.790762901306152
    10. ')),' → logprob: -10.915762901306152

Token 371: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14430327713489532
    2. ')]' → logprob: -2.019303321838379
    3. 'for' → logprob: -7.894303321838379
    4. ']' → logprob: -8.394303321838379
    5. '))' → logprob: -8.394303321838379
    6. '),' → logprob: -8.769303321838379
    7. ' for' → logprob: -9.019303321838379
    8. ');' → logprob: -9.269303321838379
    9. ')
' → logprob: -9.394303321838379
    10. ')])' → logprob: -9.394303321838379

Token 372: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006875448860228062
    2. ' _' → logprob: -5.131875514984131
    3. ' i' → logprob: -7.631875514984131
    4. 'i' → logprob: -8.256875038146973
    5. '_i' → logprob: -9.881875038146973
    6. ' idx' → logprob: -10.256875038146973
    7. ' ' → logprob: -10.381875038146973
    8. '_=' → logprob: -10.631875038146973
    9. 'idx' → logprob: -11.006875038146973
    10. '_]' → logprob: -11.131875038146973

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02634849026799202
    2. 'in' → logprob: -3.65134859085083
    3. ' ' → logprob: -10.526348114013672
    4. '_' → logprob: -11.276348114013672
    5. ']' → logprob: -12.651348114013672
    6. ')' → logprob: -13.026348114013672
    7. ' _' → logprob: -13.901348114013672
    8. ' )' → logprob: -15.276348114013672
    9. '_in' → logprob: -15.401348114013672
    10. 'range' → logprob: -15.401348114013672

Token 374: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33625662326812744
    2. ' range' → logprob: -1.8362566232681274
    3. '[' → logprob: -2.086256504058838
    4. '_' → logprob: -6.836256504058838
    5. '[]' → logprob: -7.711256504058838
    6. '0' → logprob: -8.836256980895996
    7. 'dp' → logprob: -9.461256980895996
    8. '[_' → logprob: -9.586256980895996
    9. ' [' → logprob: -10.086256980895996
    10. '_[' → logprob: -10.336256980895996

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6570196151733398
    2. 'range' → logprob: -1.0320196151733398
    3. '[' → logprob: -2.15701961517334
    4. '[]' → logprob: -6.15701961517334
    5. '(' → logprob: -6.40701961517334
    6. ' range' → logprob: -6.90701961517334
    7. '()' → logprob: -7.03201961517334
    8. ')]' → logprob: -7.15701961517334
    9. '_' → logprob: -7.40701961517334
    10. ')' → logprob: -7.90701961517334

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04744139313697815
    2. ')]' → logprob: -3.4224414825439453
    3. ',)' → logprob: -4.297441482543945
    4. ',),' → logprob: -10.297441482543945
    5. ' ,' → logprob: -10.547441482543945
    6. ',_' → logprob: -11.047441482543945
    7. ')' → logprob: -11.672441482543945
    8. ',)
' → logprob: -13.047441482543945
    9. ',...' → logprob: -13.172441482543945
    10. '_,' → logprob: -13.922441482543945

Token 377: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.13469035923480988
    2. '1' → logprob: -2.384690284729004
    3. ' ' → logprob: -3.884690284729004
    4. ' )' → logprob: -4.884690284729004
    5. ')' → logprob: -5.259690284729004
    6. ')][' → logprob: -8.384690284729004
    7. ')]
' → logprob: -8.884690284729004
    8. ')])' → logprob: -9.509690284729004
    9. ')],' → logprob: -10.134690284729004
    10. '))' → logprob: -10.634690284729004

Token 378: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04669330641627312
    2. 'dp' → logprob: -3.2966933250427246
    3. ' for' → logprob: -5.796693325042725
    4. ')' → logprob: -6.296693325042725
    5. '_' → logprob: -6.796693325042725
    6. ']' → logprob: -7.296693325042725
    7. '#' → logprob: -7.421693325042725
    8. 'i' → logprob: -8.171692848205566
    9. 'def' → logprob: -8.296692848205566
    10. '<|end|>' → logprob: -8.921692848205566

Token 379: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004764626733958721
    2. '<|end|>' → logprob: -5.379764556884766
    3. '<|end|>' → logprob: -10.254764556884766
    4. '#' → logprob: -11.129764556884766
    5. '0' → logprob: -11.129764556884766
    6. '```' → logprob: -11.629764556884766
    7. ')' → logprob: -11.879764556884766
    8. 'def' → logprob: -12.004764556884766
    9. ']' → logprob: -12.129764556884766
    10. '[
' → logprob: -12.379764556884766

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026414142921566963
    2. 'N' → logprob: -6.502641201019287
    3. '1' → logprob: -7.002641201019287
    4. '-' → logprob: -9.127641677856445
    5. ' ' → logprob: -9.752641677856445
    6. ']' → logprob: -10.877641677856445
    7. 'S' → logprob: -12.002641677856445
    8. '
' → logprob: -12.252641677856445
    9. 'i' → logprob: -12.377641677856445
    10. '][' → logprob: -12.440141677856445

Token 381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.047122687101364136
    2. ',' → logprob: -3.2971227169036865
    3. ']' → logprob: -5.172122478485107
    4. '[' → logprob: -7.047122478485107
    5. '],' → logprob: -7.047122478485107
    6. ' ][' → logprob: -7.547122478485107
    7. '],[' → logprob: -8.422122955322266
    8. ')][' → logprob: -8.547122955322266
    9. ')[' → logprob: -8.672122955322266
    10. ').__' → logprob: -9.172122955322266

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006787192542105913
    2. '1' → logprob: -7.500678539276123
    3. '3' → logprob: -9.125679016113281
    4. '2' → logprob: -11.625679016113281
    5. ' ' → logprob: -12.000679016113281
    6. '
' → logprob: -14.688179016113281
    7. '   ' → logprob: -15.313179016113281
    8. '-' → logprob: -15.563179016113281
    9. ']' → logprob: -16.31317901611328
    10. '```' → logprob: -16.31317901611328

Token 383: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003693013568408787
    2. ']=' → logprob: -8.25036907196045
    3. ' ]' → logprob: -9.25036907196045
    4. '=' → logprob: -11.50036907196045
    5. ']+=' → logprob: -14.25036907196045
    6. ',' → logprob: -15.00036907196045
    7. ' =' → logprob: -15.12536907196045
    8. ']==' → logprob: -15.75036907196045
    9. ')' → logprob: -16.000370025634766
    10. '],' → logprob: -16.125370025634766

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007607458624988794
    2. ' =' → logprob: -4.882607460021973
    3. ',' → logprob: -14.632607460021973
    4. '+=' → logprob: -15.382607460021973
    5. ']=' → logprob: -15.757607460021973
    6. '=
' → logprob: -15.882607460021973
    7. '=

' → logprob: -16.132606506347656
    8. '==' → logprob: -16.257606506347656
    9. ']' → logprob: -16.757606506347656
    10. '=}' → logprob: -17.132606506347656

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020592445798683912
    2. '0' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.250205993652344
    4. 'int' → logprob: -15.875205993652344
    5. '2' → logprob: -16.562705993652344
    6. '3' → logprob: -16.875205993652344
    7. '(' → logprob: -17.250205993652344
    8. '   ' → logprob: -17.562705993652344
    9. 'pow' → logprob: -17.687705993652344
    10. 'True' → logprob: -18.000205993652344

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008619539439678192
    2. '0' → logprob: -4.75861930847168
    3. ' ' → logprob: -12.75861930847168
    4. '(' → logprob: -14.50861930847168
    5. '3' → logprob: -15.13361930847168
    6. 'int' → logprob: -15.44611930847168
    7. '2' → logprob: -15.69611930847168
    8. 'True' → logprob: -15.75861930847168
    9. 'None' → logprob: -16.13361930847168
    10. '-' → logprob: -16.19611930847168

Token 387: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5996101498603821
    2. ' for' → logprob: -1.4746100902557373
    3. '<|end|>' → logprob: -1.8496100902557373
    4. ' ' → logprob: -3.4746100902557373
    5. ')' → logprob: -4.474610328674316
    6. '
' → logprob: -4.599610328674316
    7. '_' → logprob: -5.974610328674316
    8. '.' → logprob: -5.974610328674316
    9. ',' → logprob: -6.099610328674316
    10. ' 
' → logprob: -6.599610328674316

Token 388: 'flags' (ID: 24254)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008074867073446512
    2. ' for' → logprob: -7.125807285308838
    3. ')' → logprob: -12.875807762145996
    4. '	for' → logprob: -16.00080680847168
    5. 'from' → logprob: -16.37580680847168
    6. '.' → logprob: -16.62580680847168
    7. 'tokens' → logprob: -16.62580680847168
    8. 'mask' → logprob: -17.25080680847168
    9. '```' → logprob: -17.75080680847168
    10. ' ' → logprob: -17.87580680847168

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01809503883123398
    2. '=' → logprob: -4.143095016479492
    3. 'for' → logprob: -7.018095016479492
    4. ' ' → logprob: -7.643095016479492
    5. ',' → logprob: -8.018095016479492
    6. ')' → logprob: -9.393095016479492
    7. '_' → logprob: -10.143095016479492
    8. ' ,' → logprob: -10.143095016479492
    9. ' for' → logprob: -10.393095016479492
    10. '[' → logprob: -11.393095016479492

Token 390: ' ['' (ID: 5140)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13188499212265015
    2. 'list' → logprob: -2.631885051727295
    3. ' [' → logprob: -4.006885051727295
    4. '0' → logprob: -4.131885051727295
    5. '(' → logprob: -5.131885051727295
    6. 'range' → logprob: -5.131885051727295
    7. ' list' → logprob: -5.881885051727295
    8. '[list' → logprob: -7.381885051727295
    9. ' range' → logprob: -7.881885051727295
    10. '[(' → logprob: -8.006884574890137

Token 391: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20739488303661346
    2. 'a' → logprob: -2.95739483833313
    3. '(',' → logprob: -3.33239483833313
    4. '0' → logprob: -4.457395076751709
    5. 'R' → logprob: -4.707395076751709
    6. 'AC' → logprob: -4.957395076751709
    7. 'ABC' → logprob: -5.082395076751709
    8. '?',' → logprob: -5.082395076751709
    9. 'I' → logprob: -5.332395076751709
    10. 'M' → logprob: -5.582395076751709

Token 392: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.02314799837768078
    2. '','' → logprob: -4.148148059844971
    3. 'B' → logprob: -5.398148059844971
    4. ''' → logprob: -6.898148059844971
    5. 'C' → logprob: -7.273148059844971
    6. '+',' → logprob: -8.648147583007812
    7. '\'' → logprob: -9.648147583007812
    8. '#' → logprob: -10.273147583007812
    9. 'b' → logprob: -10.398147583007812
    10. 'BC' → logprob: -10.398147583007812

Token 393: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08347871899604797
    2. ''C' → logprob: -2.7084786891937256
    3. ' '' → logprob: -4.583478927612305
    4. ''T' → logprob: -6.458478927612305
    5. ''S' → logprob: -7.333478927612305
    6. ''D' → logprob: -8.208478927612305
    7. ''A' → logprob: -8.333478927612305
    8. ''M' → logprob: -8.958478927612305
    9. ''N' → logprob: -9.208478927612305
    10. ' ' → logprob: -9.708478927612305

Token 394: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04590526223182678
    2. 'C' → logprob: -3.795905351638794
    3. 'G' → logprob: -4.170905113220215
    4. 'T' → logprob: -5.045905113220215
    5. 'A' → logprob: -9.295905113220215
    6. 'BC' → logprob: -9.295905113220215
    7. 'R' → logprob: -9.545905113220215
    8. 'F' → logprob: -9.920905113220215
    9. 'Z' → logprob: -10.670905113220215
    10. ''' → logprob: -10.670905113220215

Token 395: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0006578696193173528
    2. 'C' → logprob: -8.25065803527832
    3. ''C' → logprob: -8.37565803527832
    4. ''' → logprob: -9.62565803527832
    5. '','' → logprob: -9.75065803527832
    6. ',' → logprob: -10.37565803527832
    7. ''',' → logprob: -13.00065803527832
    8. '',
' → logprob: -13.25065803527832
    9. '",' → logprob: -13.75065803527832
    10. ')',' → logprob: -14.25065803527832

Token 396: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0004691610229201615
    2. 'C' → logprob: -8.000469207763672
    3. ' '' → logprob: -9.625469207763672
    4. ''' → logprob: -10.500469207763672
    5. ''D' → logprob: -10.875469207763672
    6. ''S' → logprob: -12.125469207763672
    7. ' ' → logprob: -12.625469207763672
    8. ''A' → logprob: -12.625469207763672
    9. '"C' → logprob: -13.125469207763672
    10. ' C' → logprob: -13.750469207763672

Token 397: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000885134213604033
    2. ''C' → logprob: -7.750885009765625
    3. 'X' → logprob: -9.250885009765625
    4. 'D' → logprob: -9.250885009765625
    5. ''' → logprob: -9.750885009765625
    6. 'A' → logprob: -10.000885009765625
    7. 'K' → logprob: -10.250885009765625
    8. 'G' → logprob: -11.375885009765625
    9. 'F' → logprob: -11.625885009765625
    10. '')' → logprob: -11.750885009765625

Token 398: '']
' (ID: 9756)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.008001103065907955
    2. ',' → logprob: -4.883001327514648
    3. ''D' → logprob: -8.633001327514648
    4. 'D' → logprob: -9.383001327514648
    5. '','' → logprob: -10.008001327514648
    6. ''' → logprob: -10.258001327514648
    7. '']' → logprob: -10.633001327514648
    8. ','' → logprob: -11.508001327514648
    9. ''',' → logprob: -12.383001327514648
    10. '",' → logprob: -12.383001327514648

Token 399: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011766550596803427
    2. ' for' → logprob: -6.751176834106445
    3. ')' → logprob: -12.626176834106445
    4. 'i' → logprob: -14.251176834106445
    5. '
' → logprob: -14.251176834106445
    6. ']' → logprob: -15.001176834106445
    7. ' 
' → logprob: -15.376176834106445
    8. 'dp' → logprob: -15.376176834106445
    9. '```' → logprob: -15.501176834106445
    10. 'f' → logprob: -15.626176834106445

Token 400: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17988812923431396
    2. 'i' → logprob: -1.804888129234314
    3. ' ' → logprob: -9.804887771606445
    4. ' idx' → logprob: -11.054887771606445
    5. '_i' → logprob: -11.429887771606445
    6. '   ' → logprob: -11.554887771606445
    7. '(i' → logprob: -11.554887771606445
    8. ' pos' → logprob: -11.804887771606445
    9. ' _' → logprob: -12.054887771606445
    10. 'pos' → logprob: -12.054887771606445

Token 401: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3923172354698181
    2. ',' → logprob: -1.767317295074463
    3. 'in' → logprob: -1.892317295074463
    4. ' ,' → logprob: -6.142317295074463
    5. ' ' → logprob: -7.142317295074463
    6. ',in' → logprob: -11.517316818237305
    7. '_' → logprob: -11.642316818237305
    8. '_,' → logprob: -11.892316818237305
    9. ')' → logprob: -12.517316818237305
    10. '1' → logprob: -12.767316818237305

Token 402: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14777007699012756
    2. 'ch' → logprob: -2.0227701663970947
    3. ' c' → logprob: -6.147769927978516
    4. 's' → logprob: -6.647769927978516
    5. ' ch' → logprob: -6.772769927978516
    6. 'char' → logprob: -7.897769927978516
    7. 'a' → logprob: -10.147769927978516
    8. 'x' → logprob: -10.147769927978516
    9. 'v' → logprob: -11.397769927978516
    10. ' s' → logprob: -11.897769927978516

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32915210723876953
    2. ',' → logprob: -1.7041521072387695
    3. 'in' → logprob: -2.3291521072387695
    4. ' ' → logprob: -7.7041521072387695
    5. ' ,' → logprob: -7.7041521072387695
    6. 's' → logprob: -8.82915210723877
    7. '  ' → logprob: -10.32915210723877
    8. '_' → logprob: -10.57915210723877
    9. ' s' → logprob: -11.70415210723877
    10. ')' → logprob: -11.95415210723877

Token 404: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06197071075439453
    2. ' enumerate' → logprob: -2.8119707107543945
    3. 'product' → logprob: -13.186970710754395
    4. 'en' → logprob: -15.186970710754395
    5. 'zip' → logprob: -15.311970710754395
    6. 'enum' → logprob: -15.686970710754395
    7. '(en' → logprob: -16.061969757080078
    8. '(' → logprob: -16.311969757080078
    9. '```' → logprob: -16.811969757080078
    10. ' product' → logprob: -16.936969757080078

Token 405: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.062277551740407944
    2. 'S' → logprob: -2.8122775554656982
    3. 'range' → logprob: -8.312277793884277
    4. 'enumer' → logprob: -10.437277793884277
    5. '(range' → logprob: -11.187277793884277
    6. ' S' → logprob: -12.687277793884277
    7. 's' → logprob: -12.687277793884277
    8. '(' → logprob: -12.687277793884277
    9. ',' → logprob: -13.062277793884277
    10. 'zip' → logprob: -13.187277793884277

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4746093153953552
    2. '):
' → logprob: -0.9746093153953552
    3. ',' → logprob: -8.349609375
    4. ':' → logprob: -8.349609375
    5. '):
' → logprob: -10.349609375
    6. ':
' → logprob: -11.474609375
    7. '   ' → logprob: -11.599609375
    8. ')' → logprob: -12.349609375
    9. ' ):' → logprob: -13.849609375
    10. '):

' → logprob: -14.099609375

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4571724534034729
    2. ' for' → logprob: -1.0821723937988281
    3. 'for' → logprob: -3.582172393798828
    4. '    
' → logprob: -9.707172393798828
    5. '	for' → logprob: -10.207172393798828
    6. ' ' → logprob: -10.332172393798828
    7. ' dp' → logprob: -10.457172393798828
    8. ' if' → logprob: -10.707172393798828
    9. ',' → logprob: -10.957172393798828
    10. 'dp' → logprob: -11.082172393798828

Token 408: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09796523302793503
    2. ' for' → logprob: -2.5979652404785156
    3. '   ' → logprob: -3.9729652404785156
    4. 'dp' → logprob: -9.722965240478516
    5. ' dp' → logprob: -11.722965240478516
    6. ' ' → logprob: -12.972965240478516
    7. '	for' → logprob: -13.472965240478516
    8. '    
' → logprob: -13.722965240478516
    9. '
' → logprob: -14.222965240478516
    10. 'next' → logprob: -14.347965240478516

Token 409: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029426321387290955
    2. 'k' → logprob: -4.529426097869873
    3. 'mask' → logprob: -5.029426097869873
    4. ' j' → logprob: -6.029426097869873
    5. 'prev' → logprob: -6.279426097869873
    6. 'state' → logprob: -6.654426097869873
    7. 'f' → logprob: -7.279426097869873
    8. 'c' → logprob: -7.279426097869873
    9. 'l' → logprob: -7.529426097869873
    10. 'flag' → logprob: -7.654426097869873

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00819278135895729
    2. 'in' → logprob: -4.883193016052246
    3. ',' → logprob: -7.633193016052246
    4. '0' → logprob: -10.133193016052246
    5. '   ' → logprob: -10.633193016052246
    6. ' ' → logprob: -11.008193016052246
    7. ' ,' → logprob: -11.508193016052246
    8. '    ' → logprob: -12.258193016052246
    9. ')' → logprob: -13.133193016052246
    10. '1' → logprob: -13.633193016052246

Token 411: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015860427811276168
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.000158309936523
    4. 'product' → logprob: -17.250158309936523
    5. '	range' → logprob: -17.750158309936523
    6. '
' → logprob: -18.625158309936523
    7. '[' → logprob: -18.750158309936523
    8. '   ' → logprob: -19.375158309936523
    9. '0' → logprob: -20.000158309936523
    10. 're' → logprob: -20.250158309936523

Token 412: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009523137705400586
    2. '(' → logprob: -7.500952243804932
    3. '3' → logprob: -8.00095272064209
    4. ' ' → logprob: -9.75095272064209
    5. '
' → logprob: -12.62595272064209
    6. '0' → logprob: -13.37595272064209
    7. '1' → logprob: -15.00095272064209
    8. '=' → logprob: -15.50095272064209
    9. '   ' → logprob: -15.87595272064209
    10. ',' → logprob: -15.87595272064209

Token 413: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0005541055579669774
    2. '3' → logprob: -7.500554084777832
    3. 'len' → logprob: -14.875554084777832
    4. '0' → logprob: -15.000554084777832
    5. '1' → logprob: -15.000554084777832
    6. ' ' → logprob: -16.62555503845215
    7. '
' → logprob: -18.12555503845215
    8. '(' → logprob: -18.68805503845215
    9. '４' → logprob: -19.25055503845215
    10. '```' → logprob: -19.75055503845215

Token 414: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20152784883975983
    2. '):
' → logprob: -1.7015278339385986
    3. '   ' → logprob: -9.95152759552002
    4. '+' → logprob: -10.57652759552002
    5. ':' → logprob: -11.20152759552002
    6. ')' → logprob: -11.20152759552002
    7. ' ):' → logprob: -11.70152759552002
    8. '):
' → logprob: -12.82652759552002
    9. ' ):
' → logprob: -13.82652759552002
    10. '       ' → logprob: -14.45152759552002

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011693910928443074
    2. ' if' → logprob: -7.626169204711914
    3. ' for' → logprob: -7.626169204711914
    4. 'if' → logprob: -9.751169204711914
    5. 'for' → logprob: -9.876169204711914
    6. ',' → logprob: -10.626169204711914
    7. '   ' → logprob: -10.751169204711914
    8. 'dp' → logprob: -12.251169204711914
    9. '           ' → logprob: -12.501169204711914
    10. ' dp' → logprob: -12.876169204711914

Token 416: ' skip' (ID: 16677)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6630284786224365
    2. 'if' → logprob: -1.1630284786224365
    3. 'for' → logprob: -2.6630284786224365
    4. ' if' → logprob: -3.0380284786224365
    5. 'dp' → logprob: -3.2880284786224365
    6. ' for' → logprob: -4.538028717041016
    7. ' dp' → logprob: -5.413028717041016
    8. '           ' → logprob: -6.538028717041016
    9. '   ' → logprob: -8.663028717041016
    10. 'next' → logprob: -8.913028717041016

Token 417: '_cond' (ID: 61789)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0201926231384277
    2. ' if' → logprob: -1.1451926231384277
    3. '           ' → logprob: -2.5201926231384277
    4. 'if' → logprob: -2.6451926231384277
    5. '       ' → logprob: -3.2701926231384277
    6. '=' → logprob: -3.2701926231384277
    7. ':' → logprob: -3.7701926231384277
    8. ',' → logprob: -3.7701926231384277
    9. '   ' → logprob: -4.020192623138428
    10. 'for' → logprob: -5.395192623138428

Token 418: ' =' (ID: 314)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.2637113928794861
    2. '=' → logprob: -1.8887114524841309
    3. ' =' → logprob: -2.763711452484131
    4. 'it' → logprob: -4.513711452484131
    5. 'itional' → logprob: -6.013711452484131
    6. 'if' → logprob: -6.513711452484131
    7. 's' → logprob: -7.263711452484131
    8. 'itions' → logprob: -7.888711452484131
    9. '   ' → logprob: -8.013710975646973
    10. 'i' → logprob: -8.263710975646973

Token 419: ' s' (ID: 265)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2843869924545288
    2. 'dp' → logprob: -1.2843869924545288
    3. '(dp' → logprob: -1.7843869924545288
    4. '(j' → logprob: -1.9093869924545288
    5. '(s' → logprob: -2.9093871116638184
    6. ' j' → logprob: -4.284387111663818
    7. ' dp' → logprob: -4.284387111663818
    8. 's' → logprob: -4.409387111663818
    9. '(not' → logprob: -5.159387111663818
    10. 'not' → logprob: -5.409387111663818

Token 420: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.540717601776123
    2. ' not' → logprob: -1.915717601776123
    3. ' ==' → logprob: -2.165717601776123
    4. '==' → logprob: -2.540717601776123
    5. ' !=' → logprob: -3.290717601776123
    6. '!=' → logprob: -3.790717601776123
    7. '=='' → logprob: -4.790717601776123
    8. '!='' → logprob: -5.540717601776123
    9. 'in' → logprob: -5.915717601776123
    10. 'not' → logprob: -7.165717601776123

Token 421: ' '?'' (ID: 192100)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.5207770466804504
    2. ''A' → logprob: -1.1457769870758057
    3. ''' → logprob: -2.5207769870758057
    4. ''C' → logprob: -5.270777225494385
    5. ''#' → logprob: -7.520777225494385
    6. ''\' → logprob: -8.020776748657227
    7. ''H' → logprob: -8.645776748657227
    8. ' flags' → logprob: -8.770776748657227
    9. ''.' → logprob: -8.770776748657227
    10. 'A' → logprob: -8.895776748657227

Token 422: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.29156801104545593
    2. ' or' → logprob: -1.5415680408477783
    3. 'and' → logprob: -3.2915680408477783
    4. 'or' → logprob: -6.416567802429199
    5. '       ' → logprob: -11.1665678024292
    6. '   ' → logprob: -12.2915678024292
    7. '           ' → logprob: -12.2915678024292
    8. ' ' → logprob: -12.9165678024292
    9. '        ' → logprob: -13.0415678024292
    10. '    ' → logprob: -13.6665678024292

Token 423: ' True' (ID: 6432)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10956291109323502
    2. ' j' → logprob: -2.609562873840332
    3. '(j' → logprob: -3.984562873840332
    4. ' (' → logprob: -6.109562873840332
    5. '(' → logprob: -6.234562873840332
    6. 'flags' → logprob: -6.609562873840332
    7. 'dp' → logprob: -6.609562873840332
    8. '((' → logprob: -6.984562873840332
    9. 'False' → logprob: -7.234562873840332
    10. 'True' → logprob: -7.859562873840332

Token 424: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2435891330242157
    2. ' or' → logprob: -1.868589162826538
    3. 'and' → logprob: -3.118589162826538
    4. '       ' → logprob: -4.743588924407959
    5. '<|end|>' → logprob: -5.993588924407959
    6. '
' → logprob: -6.118588924407959
    7. 'or' → logprob: -6.368588924407959
    8. '           ' → logprob: -6.868588924407959
    9. '        ' → logprob: -7.868588924407959
    10. '   ' → logprob: -8.243589401245117

Token 425: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3329036235809326
    2. 'j' → logprob: -2.4579036235809326
    3. 'dp' → logprob: -2.7079036235809326
    4. '(j' → logprob: -3.3329036235809326
    5. '(s' → logprob: -3.8329036235809326
    6. '(False' → logprob: -3.9579036235809326
    7. 's' → logprob: -4.082903861999512
    8. '(dp' → logprob: -4.332903861999512
    9. ' False' → logprob: -4.457903861999512
    10. ' dp' → logprob: -5.957903861999512

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01547393761575222
    2. '<|end|>' → logprob: -5.39047384262085
    3. ' and' → logprob: -5.64047384262085
    4. '
' → logprob: -5.76547384262085
    5. ' if' → logprob: -6.26547384262085
    6. ',' → logprob: -7.64047384262085
    7. ' or' → logprob: -7.76547384262085
    8. '   ' → logprob: -7.89047384262085
    9. '           ' → logprob: -8.015474319458008
    10. '<|end|>' → logprob: -8.515474319458008

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2319573163986206
    2. ' if' → logprob: -2.23195743560791
    3. '<|end|>' → logprob: -2.85695743560791
    4. '           ' → logprob: -4.48195743560791
    5. '   ' → logprob: -4.73195743560791
    6. ':' → logprob: -5.48195743560791
    7. ' and' → logprob: -5.48195743560791
    8. ',' → logprob: -5.98195743560791
    9. ' or' → logprob: -6.23195743560791
    10. ' ' → logprob: -6.35695743560791

Token 428: ' inc' (ID: 4570)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4770652949810028
    2. 'if' → logprob: -2.102065324783325
    3. ' for' → logprob: -2.352065324783325
    4. '           ' → logprob: -2.477065324783325
    5. '       ' → logprob: -2.852065324783325
    6. 'for' → logprob: -3.977065324783325
    7. ' next' → logprob: -7.727065086364746
    8. '   ' → logprob: -8.477065086364746
    9. 'next' → logprob: -8.977065086364746
    10. ' dp' → logprob: -8.977065086364746

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35777121782302856
    2. '=' → logprob: -1.2327711582183838
    3. 'rement' → logprob: -5.732771396636963
    4. '_val' → logprob: -7.357771396636963
    5. '       ' → logprob: -7.357771396636963
    6. 'inue' → logprob: -7.607771396636963
    7. '   ' → logprob: -7.607771396636963
    8. 'd' → logprob: -7.607771396636963
    9. 'r' → logprob: -7.982771396636963
    10. '_flag' → logprob: -8.107770919799805

Token 430: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3975182771682739
    2. ' dp' → logprob: -1.272518277168274
    3. '(dp' → logprob: -3.2725181579589844
    4. ' (' → logprob: -5.772518157958984
    5. '0' → logprob: -5.897518157958984
    6. '(' → logprob: -5.897518157958984
    7. ' ' → logprob: -7.522518157958984
    8. '1' → logprob: -8.147518157958984
    9. '(s' → logprob: -9.397518157958984
    10. '   ' → logprob: -9.397518157958984

Token 431: '3' (ID: 18)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010865891352295876
    2. '1' → logprob: -5.760865688323975
    3. '(dp' → logprob: -5.760865688323975
    4. '0' → logprob: -6.135865688323975
    5. '(' → logprob: -6.385865688323975
    6. ' dp' → logprob: -7.635865688323975
    7. '(s' → logprob: -10.510866165161133
    8. '((' → logprob: -10.760866165161133
    9. ' ' → logprob: -10.760866165161133
    10. 'j' → logprob: -11.135866165161133

Token 432: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11414310336112976
    2. '       ' → logprob: -2.864143133163452
    3. '
' → logprob: -3.489143133163452
    4. 'if' → logprob: -4.614142894744873
    5. '<|end|>' → logprob: -4.739142894744873
    6. '   ' → logprob: -7.739142894744873
    7. ')' → logprob: -8.364143371582031
    8. '<|end|>' → logprob: -8.489143371582031
    9. ' ' → logprob: -8.864143371582031
    10. '	if' → logprob: -8.864143371582031

Token 433: ' skip' (ID: 16677)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9062903523445129
    2. 's' → logprob: -1.0312902927398682
    3. 'skip' → logprob: -1.7812902927398682
    4. ' skip' → logprob: -2.656290292739868
    5. ' ' → logprob: -9.031290054321289
    6. '   ' → logprob: -9.156290054321289
    7. ' not' → logprob: -9.281290054321289
    8. '(skip' → logprob: -9.406290054321289
    9. 'flags' → logprob: -9.781290054321289
    10. ' flags' → logprob: -10.031290054321289

Token 434: '_cond' (ID: 61789)
  Prédit: '_cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cond' → logprob: -0.001546883606351912
    2. ' else' → logprob: -7.751546859741211
    3. 'else' → logprob: -7.876546859741211
    4. 's' → logprob: -8.626546859741211
    5. 'cond' → logprob: -8.876546859741211
    6. ' s' → logprob: -9.001546859741211
    7. '_condition' → logprob: -9.751546859741211
    8. ' and' → logprob: -10.126546859741211
    9. '_' → logprob: -10.126546859741211
    10. '_cont' → logprob: -10.376546859741211

Token 435: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20147843658924103
    2. 'else' → logprob: -1.7014784812927246
    3. ' and' → logprob: -11.076478004455566
    4. '       ' → logprob: -11.701478004455566
    5. '        ' → logprob: -11.826478004455566
    6. '==' → logprob: -11.826478004455566
    7. 'and' → logprob: -12.326478004455566
    8. ' ' → logprob: -12.451478004455566
    9. '	else' → logprob: -12.576478004455566
    10. '           ' → logprob: -13.076478004455566

Token 436: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023163264617323875
    2. '(s' → logprob: -4.523163318634033
    3. '(' → logprob: -4.648163318634033
    4. ' ' → logprob: -6.648163318634033
    5. ' (' → logprob: -7.773163318634033
    6. 's' → logprob: -8.148162841796875
    7. '0' → logprob: -9.398162841796875
    8. 'int' → logprob: -9.523162841796875
    9. '(ord' → logprob: -9.523162841796875
    10. '(int' → logprob: -10.023162841796875

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008500047028064728
    2. '(' → logprob: -5.508500099182129
    3. '(s' → logprob: -5.758500099182129
    4. '0' → logprob: -7.883500099182129
    5. '2' → logprob: -8.133500099182129
    6. 's' → logprob: -8.383500099182129
    7. 'int' → logprob: -9.633500099182129
    8. ' (' → logprob: -9.883500099182129
    9. '(int' → logprob: -10.008500099182129
    10. ' ' → logprob: -10.008500099182129

Token 438: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11150603741407394
    2. '
' → logprob: -2.3615059852600098
    3. '<|end|>' → logprob: -5.23650598526001
    4. '        
' → logprob: -6.23650598526001
    5. ' if' → logprob: -6.48650598526001
    6. ' 
' → logprob: -7.11150598526001
    7. '<|end|>' → logprob: -7.73650598526001
    8. ',' → logprob: -7.86150598526001
    9. '  
' → logprob: -8.736506462097168
    10. ')' → logprob: -9.236506462097168

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.590749979019165
    2. ' for' → logprob: -1.465749979019165
    3. '   ' → logprob: -2.840749979019165
    4. ' if' → logprob: -2.840749979019165
    5. 'for' → logprob: -3.340749979019165
    6. '<|end|>' → logprob: -3.965749979019165
    7. ' ' → logprob: -4.840749740600586
    8. '
' → logprob: -4.965749740600586
    9. '           ' → logprob: -4.965749740600586
    10. 'if' → logprob: -5.215749740600586

Token 440: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7067224979400635
    2. ' for' → logprob: -0.9567224979400635
    3. 'if' → logprob: -2.5817224979400635
    4. ' if' → logprob: -3.2067224979400635
    5. '       ' → logprob: -5.331722259521484
    6. 'dp' (adapté à ' dp') → logprob: -7.706722259521484
    7. '           ' → logprob: -8.081722259521484
    8. 'next' → logprob: -8.456722259521484
    9. 'k' → logprob: -8.706722259521484
    10. ' dp' → logprob: -8.956722259521484

Token 441: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007964044925756752
    2. '[j' → logprob: -7.375796318054199
    3. '[' → logprob: -8.7507963180542
    4. ' [' → logprob: -12.8757963180542
    5. '[next' → logprob: -13.2507963180542
    6. ' =' → logprob: -13.3757963180542
    7. '=' → logprob: -13.8757963180542
    8. '][' → logprob: -14.5007963180542
    9. ')[' → logprob: -14.6257963180542
    10. ')' → logprob: -14.8757963180542

Token 442: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006356273777782917
    2. '[j' → logprob: -5.506356239318848
    3. '+' → logprob: -6.881356239318848
    4. ' ][' → logprob: -7.381356239318848
    5. ']' → logprob: -7.631356239318848
    6. '[' → logprob: -9.881356239318848
    7. '   ' → logprob: -10.631356239318848
    8. ' +' → logprob: -11.506356239318848
    9. ')[' → logprob: -11.631356239318848
    10. '[i' → logprob: -12.006356239318848

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004807230085134506
    2. '][' → logprob: -5.879806995391846
    3. 'j' → logprob: -6.254806995391846
    4. ' ' → logprob: -9.879807472229004
    5. ']' → logprob: -11.504807472229004
    6. '   ' → logprob: -12.129807472229004
    7. ' j' → logprob: -12.504807472229004
    8. ' ][' → logprob: -13.379807472229004
    9. '[' → logprob: -13.754807472229004
    10. '[j' → logprob: -14.004807472229004

Token 444: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.022824810817837715
    2. '[j' → logprob: -3.897824764251709
    3. ']' → logprob: -6.272824764251709
    4. '[' → logprob: -8.772825241088867
    5. ' ][' → logprob: -9.522825241088867
    6. ')[' → logprob: -10.022825241088867
    7. '
' → logprob: -11.147825241088867
    8. '=' → logprob: -11.272825241088867
    9. ']=' → logprob: -11.397825241088867
    10. ',j' → logprob: -11.397825241088867

Token 445: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014498415403068066
    2. '0' → logprob: -4.389498233795166
    3. '(' → logprob: -6.764498233795166
    4. '(j' → logprob: -7.389498233795166
    5. 'min' → logprob: -9.764498710632324
    6. ']' → logprob: -9.764498710632324
    7. '((' → logprob: -10.514498710632324
    8. '
' → logprob: -11.514498710632324
    9. ' j' → logprob: -11.764498710632324
    10. ' (' → logprob: -12.139498710632324

Token 446: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048891082406044006
    2. ']+=' → logprob: -3.048891067504883
    3. ']=' → logprob: -8.548891067504883
    4. ' ]' → logprob: -10.048891067504883
    5. '+=' → logprob: -10.298891067504883
    6. ']+' → logprob: -11.673891067504883
    7. '|' → logprob: -12.048891067504883
    8. ')' → logprob: -12.298891067504883
    9. '=' → logprob: -12.673891067504883
    10. '+]' → logprob: -12.923891067504883

Token 447: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16402752697467804
    2. '=' → logprob: -1.9140275716781616
    3. ' +=' → logprob: -5.789027690887451
    4. ' =' → logprob: -7.539027690887451
    5. '|' → logprob: -9.289027214050293
    6. '%=' → logprob: -9.914027214050293
    7. ']+=' → logprob: -10.414027214050293
    8. '+' → logprob: -11.789027214050293
    9. '+=(' → logprob: -11.914027214050293
    10. ' |=' → logprob: -12.539027214050293

Token 448: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7454276084899902
    2. '(dp' → logprob: -0.8704276084899902
    3. '(' → logprob: -2.2454276084899902
    4. '(
' → logprob: -8.370428085327148
    5. '0' → logprob: -8.995428085327148
    6. ' (' → logprob: -9.370428085327148
    7. '(d' → logprob: -9.620428085327148
    8. ' dp' → logprob: -9.870428085327148
    9. '((' → logprob: -10.370428085327148
    10. '(in' → logprob: -10.870428085327148

Token 449: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012838292866945267
    2. '(dp' → logprob: -4.387838363647461
    3. '(' → logprob: -8.387838363647461
    4. ' dp' → logprob: -10.137838363647461
    5. '(
' → logprob: -10.637838363647461
    6. '
' → logprob: -11.387838363647461
    7. 'sum' → logprob: -12.012838363647461
    8. '0' → logprob: -12.762838363647461
    9. ' (' → logprob: -12.887838363647461
    10. '((' → logprob: -12.887838363647461

Token 450: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001310719089815393
    2. 'i' → logprob: -9.750130653381348
    3. ')[' → logprob: -10.375130653381348
    4. '][' → logprob: -10.625130653381348
    5. ' [' → logprob: -12.000130653381348
    6. '[' → logprob: -12.625130653381348
    7. ')' → logprob: -13.000130653381348
    8. '```' → logprob: -14.125130653381348
    9. '   ' → logprob: -14.250130653381348
    10. '[I' → logprob: -14.375130653381348

Token 451: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.016616291366518e-05
    2. ']' → logprob: -10.250070571899414
    3. '+' → logprob: -11.125070571899414
    4. ' ][' → logprob: -11.500070571899414
    5. ')[' → logprob: -12.625070571899414
    6. '[i' → logprob: -13.250070571899414
    7. '[j' → logprob: -13.500070571899414
    8. '   ' → logprob: -14.000070571899414
    9. ')][' → logprob: -14.625070571899414
    10. ']][' → logprob: -15.125070571899414

Token 452: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.021284377202391624
    2. '][' → logprob: -4.271284580230713
    3. '1' → logprob: -5.146284580230713
    4. '[j' → logprob: -7.021284580230713
    5. 'i' → logprob: -8.521284103393555
    6. ' j' → logprob: -9.271284103393555
    7. ']' → logprob: -10.396284103393555
    8. 's' → logprob: -11.521284103393555
    9. '0' → logprob: -11.771284103393555
    10. '_j' → logprob: -11.896284103393555

Token 453: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07796958088874817
    2. '[j' → logprob: -2.702969551086426
    3. ')[' → logprob: -5.077969551086426
    4. '[' → logprob: -7.077969551086426
    5. ']' → logprob: -7.702969551086426
    6. '[i' → logprob: -8.452969551086426
    7. ' ][' → logprob: -9.452969551086426
    8. ')' → logprob: -10.077969551086426
    9. '}[' → logprob: -10.452969551086426
    10. '])[' → logprob: -11.202969551086426

Token 454: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.255023956531659e-05
    2. '[j' → logprob: -10.000072479248047
    3. ' j' → logprob: -11.125072479248047
    4. '0' → logprob: -12.125072479248047
    5. 's' → logprob: -13.625072479248047
    6. '[' → logprob: -13.875072479248047
    7. '(j' → logprob: -14.000072479248047
    8. '   ' → logprob: -14.125072479248047
    9. ']' → logprob: -14.250072479248047
    10. '_j' → logprob: -14.500072479248047

Token 455: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4748503267765045
    2. '+' → logprob: -0.9748502969741821
    3. ']' → logprob: -7.474850177764893
    4. ')' → logprob: -9.09985065460205
    5. ']+' → logprob: -9.84985065460205
    6. ' ' → logprob: -11.47485065460205
    7. ')+' → logprob: -11.97485065460205
    8. '       ' → logprob: -12.09985065460205
    9. '        ' → logprob: -12.34985065460205
    10. '+
' → logprob: -12.84985065460205

Token 456: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693178653717041
    2. ' +' → logprob: -0.693178653717041
    3. '+
' → logprob: -11.318178176879883
    4. ')' → logprob: -11.943178176879883
    5. ' +
' → logprob: -11.943178176879883
    6. ' ' → logprob: -12.943178176879883
    7. '+=' → logprob: -14.318178176879883
    8. ')+' → logprob: -14.943178176879883
    9. '+)' → logprob: -14.943178176879883
    10. 'dp' → logprob: -15.068178176879883

Token 457: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006914667319506407
    2. '(dp' → logprob: -7.5006914138793945
    3. ' dp' → logprob: -9.000691413879395
    4. '(' → logprob: -11.750691413879395
    5. 'reduce' → logprob: -12.500691413879395
    6. 'mul' → logprob: -14.125691413879395
    7. ' (' → logprob: -14.375691413879395
    8. '   ' → logprob: -14.750691413879395
    9. '(d' → logprob: -15.375691413879395
    10. '((' → logprob: -15.500691413879395

Token 458: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.491498531133402e-06
    2. 'i' → logprob: -11.750009536743164
    3. '[j' → logprob: -13.875009536743164
    4. '[' → logprob: -15.750009536743164
    5. '][' → logprob: -16.125009536743164
    6. '[
' → logprob: -16.250009536743164
    7. '```' → logprob: -16.500009536743164
    8. ' i' → logprob: -17.000009536743164
    9. '(i' → logprob: -17.000009536743164
    10. ' [' → logprob: -17.750009536743164

Token 459: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3930022418498993
    2. '[i' → logprob: -1.1430022716522217
    3. '[j' → logprob: -5.143002033233643
    4. 'i' → logprob: -9.1430025100708
    5. '[' → logprob: -9.5180025100708
    6. ']' → logprob: -9.7680025100708
    7. ' ][' → logprob: -11.7680025100708
    8. ')[' → logprob: -12.3930025100708
    9. 'j' → logprob: -12.5180025100708
    10. ' [' → logprob: -12.8930025100708

Token 460: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4378848391061183e-05
    2. ' j' → logprob: -11.250014305114746
    3. '[j' → logprob: -14.250014305114746
    4. '   ' → logprob: -15.875014305114746
    5. '[' → logprob: -16.125015258789062
    6. '0' → logprob: -16.250015258789062
    7. ' ' → logprob: -16.500015258789062
    8. 's' → logprob: -17.000015258789062
    9. ')' → logprob: -17.125015258789062
    10. ']' → logprob: -17.250015258789062

Token 461: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6940928101539612
    2. '*' → logprob: -1.1940927505493164
    3. ')' → logprob: -1.6940927505493164
    4. '])' → logprob: -4.819092750549316
    5. ']' → logprob: -5.819092750549316
    6. '*j' → logprob: -6.319092750549316
    7. ' )' → logprob: -7.944092750549316
    8. '*s' → logprob: -9.194092750549316
    9. '*)' → logprob: -9.444092750549316
    10. '   ' → logprob: -9.444092750549316

Token 462: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4998229742050171
    2. '*' → logprob: -1.249822974205017
    3. ')' → logprob: -2.2498230934143066
    4. ')%' → logprob: -7.249823093414307
    5. '%' → logprob: -7.499823093414307
    6. '   ' → logprob: -10.499822616577148
    7. '*(' → logprob: -10.874822616577148
    8. ' )' → logprob: -10.999822616577148
    9. ' if' → logprob: -10.999822616577148
    10. ' %' → logprob: -11.749822616577148

Token 463: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.025359079241752625
    2. '(' → logprob: -3.7753591537475586
    3. ' inc' → logprob: -6.900359153747559
    4. ' (' → logprob: -7.025359153747559
    5. '1' → logprob: -8.900359153747559
    6. '(in' → logprob: -11.025359153747559
    7. '3' → logprob: -11.150359153747559
    8. '(
' → logprob: -12.025359153747559
    9. ' ' → logprob: -12.275359153747559
    10. '
' → logprob: -12.525359153747559

Token 464: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002834007143974304
    2. ')%' → logprob: -5.877833843231201
    3. '%' → logprob: -11.12783432006836
    4. ' )' → logprob: -11.25283432006836
    5. '       ' → logprob: -14.00283432006836
    6. '   ' → logprob: -14.62783432006836
    7. ')
' → logprob: -17.12783432006836
    8. '    ' → logprob: -17.12783432006836
    9. '           ' → logprob: -17.25283432006836
    10. '```' → logprob: -17.87783432006836

Token 465: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03349227085709572
    2. ' %' → logprob: -3.78349232673645
    3. ')' → logprob: -5.158492088317871
    4. ')%' → logprob: -5.533492088317871
    5. '<|end|>' → logprob: -8.658492088317871
    6. '
' → logprob: -8.908492088317871
    7. '       ' → logprob: -10.033492088317871
    8. '%
' → logprob: -10.158492088317871
    9. ' if' → logprob: -10.658492088317871
    10. ']' → logprob: -11.408492088317871

Token 466: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. 'MO' → logprob: -21.375001907348633
    4. '_MOD' → logprob: -22.125001907348633
    5. '.MOD' → logprob: -23.250001907348633
    6. 'MD' → logprob: -23.875001907348633
    7. '(M' → logprob: -24.375001907348633
    8. 'M' → logprob: -25.250001907348633
    9. 'MODE' → logprob: -26.250001907348633
    10. 'MODULE' → logprob: -26.625001907348633

Token 467: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22393859922885895
    2. '<|end|>' → logprob: -2.0989387035369873
    3. ' if' → logprob: -4.098938465118408
    4. ' 
' → logprob: -4.098938465118408
    5. '  
' → logprob: -4.598938465118408
    6. '    
' → logprob: -4.598938465118408
    7. '\n' → logprob: -4.848938465118408
    8. '   ' → logprob: -5.223938465118408
    9. ' ' → logprob: -5.973938465118408
    10. 'if' → logprob: -6.348938465118408

Token 468: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42579177021980286
    2. 'for' → logprob: -1.3007917404174805
    3. ' if' → logprob: -2.9257917404174805
    4. ' for' → logprob: -4.1757917404174805
    5. '   ' → logprob: -5.4257917404174805
    6. '       ' → logprob: -7.4257917404174805
    7. '
' → logprob: -8.67579174041748
    8. ' ' → logprob: -10.30079174041748
    9. 'token' → logprob: -10.42579174041748
    10. '```' → logprob: -10.42579174041748

Token 470: ' Now' (ID: 6549)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3903115391731262
    2. 'for' → logprob: -1.1403114795684814
    3. '   ' → logprob: -6.5153117179870605
    4. ' if' → logprob: -6.8903117179870605
    5. '       ' → logprob: -7.3903117179870605
    6. ' for' → logprob: -8.140311241149902
    7. '```' → logprob: -11.015311241149902
    8. 'tokens' → logprob: -12.890311241149902
    9. 'token' → logprob: -13.015311241149902
    10. '	if' → logprob: -14.140311241149902

Token 471: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4579681158065796
    2. 'for' → logprob: -1.3329681158065796
    3. 'if' → logprob: -2.457968235015869
    4. ' for' → logprob: -4.332968235015869
    5. ' if' → logprob: -5.832968235015869
    6. '   ' → logprob: -6.332968235015869
    7. '
' → logprob: -8.957967758178711
    8. '           ' → logprob: -10.082967758178711
    9. 'from' → logprob: -10.082967758178711
    10. ' ' → logprob: -10.582967758178711

Token 472: ' pick' (ID: 5230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0029277801513671875
    2. '       ' → logprob: -6.752927780151367
    3. 'for' → logprob: -7.002927780151367
    4. ' if' → logprob: -7.127927780151367
    5. '   ' → logprob: -10.252927780151367
    6. '
' → logprob: -11.877927780151367
    7. ' for' → logprob: -13.752927780151367
    8. '           ' → logprob: -14.877927780151367
    9. '        
' → logprob: -15.502927780151367
    10. '```' → logprob: -15.627927780151367

Token 473: ' this' (ID: 495)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3274374306201935
    2. 'for' → logprob: -1.827437400817871
    3. 'flags' → logprob: -3.327437400817871
    4. 'if' → logprob: -3.827437400817871
    5. ' s' → logprob: -4.202437400817871
    6. ' for' → logprob: -4.327437400817871
    7. 'from' → logprob: -4.827437400817871
    8. '(s' → logprob: -4.952437400817871
    9. ' if' → logprob: -5.702437400817871
    10. 'dp' → logprob: -5.827437400817871

Token 474: ' character' (ID: 5855)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1684430837631226
    2. 'for' → logprob: -1.2934430837631226
    3. 'token' → logprob: -1.4184430837631226
    4. ' if' → logprob: -2.793443202972412
    5. ' for' → logprob: -2.918443202972412
    6. 's' → logprob: -3.668443202972412
    7. 'char' → logprob: -4.168443202972412
    8. ' token' → logprob: -4.668443202972412
    9. ' s' → logprob: -6.793443202972412
    10. 'character' → logprob: -6.918443202972412

Token 475: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4227539002895355
    2. ' if' → logprob: -1.172753930091858
    3. 'if' → logprob: -3.6727538108825684
    4. '<|end|>' → logprob: -5.422753810882568
    5. ' for' → logprob: -5.922753810882568
    6. 'for' → logprob: -6.797753810882568
    7. ',' → logprob: -7.422753810882568
    8. '        
' → logprob: -8.297754287719727
    9. '   ' → logprob: -8.422754287719727
    10. '<|end|>' → logprob: -9.297754287719727

Token 476: ' possible' (ID: 4149)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2651764452457428
    2. ' s' → logprob: -1.7651764154434204
    3. 'j' → logprob: -3.14017653465271
    4. '(s' → logprob: -4.515176296234131
    5. ' j' → logprob: -5.140176296234131
    6. ' (' → logprob: -7.765176296234131
    7. 'skip' → logprob: -8.265176773071289
    8. '(j' → logprob: -8.390176773071289
    9. '(' → logprob: -8.765176773071289
    10. 'False' → logprob: -9.640176773071289

Token 477: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5587848424911499
    2. '       ' → logprob: -0.9337848424911499
    3. 'if' → logprob: -4.0587849617004395
    4. ' for' → logprob: -4.9337849617004395
    5. '<|end|>' → logprob: -5.4337849617004395
    6. 'for' → logprob: -5.8087849617004395
    7. '   ' → logprob: -6.6837849617004395
    8. '```' → logprob: -7.0587849617004395
    9. '        
' → logprob: -7.6837849617004395
    10. ',' → logprob: -9.183784484863281

Token 478: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0799983739852905
    2. '       ' → logprob: -1.2049983739852905
    3. ' for' → logprob: -1.8299983739852905
    4. '<|end|>' → logprob: -1.8299983739852905
    5. 'for' → logprob: -4.07999849319458
    6. '   ' → logprob: -4.57999849319458
    7. 'if' → logprob: -5.07999849319458
    8. '```' → logprob: -6.07999849319458
    9. '        
' → logprob: -7.32999849319458
    10. '<|end|>' → logprob: -7.82999849319458

Token 479: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022009992972016335
    2. 'for' → logprob: -4.27200984954834
    3. ' if' → logprob: -5.39700984954834
    4. '       ' → logprob: -5.89700984954834
    5. '   ' → logprob: -7.64700984954834
    6. ' for' → logprob: -9.77200984954834
    7. '```' → logprob: -14.02200984954834
    8. '           ' → logprob: -14.39700984954834
    9. ' ' → logprob: -14.52200984954834
    10. '
' → logprob: -14.52200984954834

Token 480: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9257133603096008
    2. 's' → logprob: -1.050713300704956
    3. ' s' → logprob: -1.925713300704956
    4. ' j' → logprob: -2.300713300704956
    5. '(s' → logprob: -5.300713539123535
    6. ' (' → logprob: -6.550713539123535
    7. '(j' → logprob: -6.675713539123535
    8. '(' → logprob: -8.800713539123535
    9. ' ' → logprob: -8.925713539123535
    10. '   ' → logprob: -10.675713539123535

Token 481: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4823378026485443
    2. '<' → logprob: -0.9823378324508667
    3. '+' → logprob: -5.982337951660156
    4. '<len' → logprob: -6.357337951660156
    5. '<|end|>' → logprob: -6.732337951660156
    6. '<size' → logprob: -7.607337951660156
    7. '<int' → logprob: -7.982337951660156
    8. ' ' → logprob: -8.107337951660156
    9. ' !=' → logprob: -8.357337951660156
    10. '<num' → logprob: -8.732337951660156

Token 482: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001987722353078425
    2. '4' → logprob: -8.625198364257812
    3. ' ' → logprob: -11.125198364257812
    4. 'len' → logprob: -12.375198364257812
    5. '
' → logprob: -16.375198364257812
    6. '   ' → logprob: -17.375198364257812
    7. '```' → logprob: -17.875198364257812
    8. ' len' → logprob: -18.312698364257812
    9. '=' → logprob: -18.500198364257812
    10. '

' → logprob: -19.250198364257812

Token 483: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.811348480870947e-05
    2. '4' → logprob: -10.00004768371582
    3. 'len' → logprob: -12.87504768371582
    4. '
' → logprob: -16.12504768371582
    5. '```' → logprob: -18.87504768371582
    6. ' ' → logprob: -19.12504768371582
    7. '=' → logprob: -19.12504768371582
    8. '

' → logprob: -19.68754768371582
    9. '' → logprob: -20.12504768371582
    10. '３' → logprob: -20.37504768371582

Token 484: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02676999382674694
    2. ':
' → logprob: -3.9017698764801025
    3. ':' → logprob: -5.401770114898682
    4. 'and' → logprob: -6.401770114898682
    5. '       ' → logprob: -11.026769638061523
    6. '<|end|>' → logprob: -11.901769638061523
    7. '):
' → logprob: -12.026769638061523
    8. '           ' → logprob: -12.901769638061523
    9. '   ' → logprob: -13.151769638061523
    10. ',' → logprob: -13.401769638061523

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6422755122184753
    2. ' if' → logprob: -0.7672755122184753
    3. 'if' → logprob: -5.392275333404541
    4. '       ' → logprob: -5.642275333404541
    5. 'token' → logprob: -8.0172758102417
    6. ' and' → logprob: -8.2672758102417
    7. ' token' → logprob: -8.5172758102417
    8. '<|end|>' → logprob: -9.2672758102417
    9. '```' → logprob: -9.3922758102417
    10. ' for' → logprob: -9.3922758102417

Token 486: ' step' (ID: 5983)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06257221102714539
    2. 'dp' → logprob: -3.6875722408294678
    3. '           ' → logprob: -3.9375722408294678
    4. ' if' → logprob: -4.437572002410889
    5. 'c' → logprob: -6.187572002410889
    6. 'ch' → logprob: -7.187572002410889
    7. 'char' → logprob: -7.687572002410889
    8. ' dp' → logprob: -8.062572479248047
    9. 'for' → logprob: -8.312572479248047
    10. '       ' → logprob: -9.687572479248047

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11584070324897766
    2. '=' → logprob: -2.2408406734466553
    3. 's' → logprob: -6.240840911865234
    4. '   ' → logprob: -8.615840911865234
    5. '_size' → logprob: -8.865840911865234
    6. '_val' → logprob: -9.240840911865234
    7. 'dp' → logprob: -9.365840911865234
    8. '       ' → logprob: -9.740840911865234
    9. '_char' → logprob: -9.865840911865234
    10. '_' → logprob: -9.865840911865234

Token 488: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2949899733066559
    2. '3' → logprob: -1.6699899435043335
    3. '2' → logprob: -3.544990062713623
    4. 'dp' → logprob: -4.044990062713623
    5. '(' → logprob: -4.669990062713623
    6. '0' → logprob: -5.669990062713623
    7. ' ' → logprob: -6.419990062713623
    8. 'flags' → logprob: -6.544990062713623
    9. 's' → logprob: -7.044990062713623
    10. '(dp' → logprob: -7.169990062713623

Token 489: ' ==' (ID: 951)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22553707659244537
    2. '==' → logprob: -2.350537061691284
    3. ' if' → logprob: -3.100537061691284
    4. 'in' → logprob: -3.350537061691284
    5. ' in' → logprob: -4.100537300109863
    6. ' ==' → logprob: -4.725537300109863
    7. '=='' → logprob: -7.225537300109863
    8. ' ' → logprob: -9.725537300109863
    9. '=' → logprob: -10.100537300109863
    10. ' or' → logprob: -10.350537300109863

Token 490: ' '?'' (ID: 192100)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0703962966799736
    2. 'flags' → logprob: -2.6953961849212646
    3. ''?' → logprob: -8.195396423339844
    4. '"' → logprob: -9.445396423339844
    5. '?' → logprob: -10.195396423339844
    6. ' flags' → logprob: -11.070396423339844
    7. 'FLAGS' → logprob: -11.570396423339844
    8. ' '?'' → logprob: -11.695396423339844
    9. '?'' → logprob: -12.570396423339844
    10. ''*' → logprob: -12.695396423339844

Token 491: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.8132184743881226
    2. ' or' → logprob: -0.8132184743881226
    3. 'and' → logprob: -2.438218593597412
    4. ' and' → logprob: -3.688218593597412
    5. 'if' → logprob: -7.313218593597412
    6. ' if' → logprob: -9.688218116760254
    7. '+' → logprob: -10.813218116760254
    8. '?' → logprob: -11.688218116760254
    9. 'ors' → logprob: -12.063218116760254
    10. '*' → logprob: -12.188218116760254

Token 492: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08947283774614334
    2. '(s' → logprob: -3.089472770690918
    3. ' s' → logprob: -3.589472770690918
    4. 'flags' → logprob: -4.714472770690918
    5. '(flags' → logprob: -6.339472770690918
    6. ' (' → logprob: -6.964472770690918
    7. ' flags' → logprob: -7.839472770690918
    8. '(' → logprob: -8.089472770690918
    9. '((' → logprob: -11.339472770690918
    10. '(not' → logprob: -11.839472770690918

Token 493: 'j' (ID: 73)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006970636080950499
    2. ' s' → logprob: -5.506970405578613
    3. 'flags' → logprob: -5.881970405578613
    4. ' flags' → logprob: -10.006970405578613
    5. ')' → logprob: -10.631970405578613
    6. '(s' → logprob: -11.256970405578613
    7. '(flags' → logprob: -12.006970405578613
    8. '
' → logprob: -13.006970405578613
    9. ' (' → logprob: -13.756970405578613
    10. 'ord' → logprob: -14.006970405578613

Token 494: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8802489042282104
    2. ' <' → logprob: -1.5052489042282104
    3. ' +' → logprob: -2.2552490234375
    4. ' ==' → logprob: -2.3802490234375
    5. '<' → logprob: -2.5052490234375
    6. '==' → logprob: -2.7552490234375
    7. '<|end|>' → logprob: -5.3802490234375
    8. ')' → logprob: -5.7552490234375
    9. '<len' → logprob: -6.2552490234375
    10. '=' → logprob: -6.5052490234375

Token 495: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4356510043144226
    2. '0' → logprob: -1.9356510639190674
    3. 'ord' → logprob: -2.5606510639190674
    4. 'i' → logprob: -3.1856510639190674
    5. 'flags' → logprob: -3.8106510639190674
    6. 's' → logprob: -3.9356510639190674
    7. 'S' → logprob: -4.685650825500488
    8. ' ' → logprob: -4.810650825500488
    9. '2' → logprob: -5.185650825500488
    10. 'j' → logprob: -5.310650825500488

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0273215770721436
    2. '3' → logprob: -1.6523215770721436
    3. 'ord' → logprob: -1.6523215770721436
    4. 'i' → logprob: -2.1523215770721436
    5. 'S' → logprob: -3.6523215770721436
    6. 'j' → logprob: -3.6523215770721436
    7. '2' → logprob: -4.027321815490723
    8. 's' → logprob: -4.027321815490723
    9. '1' → logprob: -4.152321815490723
    10. 'flags' → logprob: -4.777321815490723

Token 497: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10122491419315338
    2. 'and' → logprob: -2.351224899291992
    3. ')' → logprob: -6.976224899291992
    4. ' or' → logprob: -10.976224899291992
    5. '<|end|>' → logprob: -11.226224899291992
    6. '+' → logprob: -11.351224899291992
    7. '           ' → logprob: -11.851224899291992
    8. '==' → logprob: -12.226224899291992
    9. ' ' → logprob: -12.726224899291992
    10. '0' → logprob: -12.726224899291992

Token 498: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05446286126971245
    2. '(s' → logprob: -3.3044629096984863
    3. ' s' → logprob: -4.304462909698486
    4. ' (' → logprob: -6.929462909698486
    5. 'flags' → logprob: -6.929462909698486
    6. '(flags' → logprob: -8.554462432861328
    7. '((' → logprob: -8.679462432861328
    8. '(' → logprob: -9.179462432861328
    9. ' flags' → logprob: -9.804462432861328
    10. '(ord' → logprob: -9.929462432861328

Token 499: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12718142569065094
    2. ' ==' → logprob: -2.1271815299987793
    3. ' in' → logprob: -8.627181053161621
    4. 'in' → logprob: -10.752181053161621
    5. '=' → logprob: -11.627181053161621
    6. ')' → logprob: -11.627181053161621
    7. 'flags' → logprob: -11.627181053161621
    8. ')==' → logprob: -12.127181053161621
    9. '!=' → logprob: -12.377181053161621
    10. '==
' → logprob: -12.627181053161621

Token 500: ' '' (ID: 461)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.037102989852428436
    2. ''' → logprob: -4.162103176116943
    3. ' flags' → logprob: -4.537103176116943
    4. ''A' → logprob: -4.787103176116943
    5. ' '' → logprob: -6.662103176116943
    6. 'A' → logprob: -8.912102699279785
    7. ''a' → logprob: -9.287102699279785
    8. ''s' → logprob: -10.162102699279785
    9. '	flags' → logprob: -10.287102699279785
    10. '(flags' → logprob: -10.787102699279785

Token 501: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.058416467159986496
    2. 'flags' → logprob: -3.0584163665771484
    3. ''A' → logprob: -4.808416366577148
    4. ''' → logprob: -6.683416366577148
    5. ' A' → logprob: -8.933416366577148
    6. 'B' → logprob: -9.933416366577148
    7. 'a' → logprob: -10.808416366577148
    8. 'C' → logprob: -11.058416366577148
    9. '')' → logprob: -11.183416366577148
    10. 'flag' → logprob: -11.183416366577148

Token 502: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933968663215637
    2. '')' → logprob: -0.6933968663215637
    3. ''' → logprob: -9.44339656829834
    4. ' )' → logprob: -10.69339656829834
    5. ' or' → logprob: -10.81839656829834
    6. '')
' → logprob: -10.94339656829834
    7. 'or' → logprob: -11.06839656829834
    8. ')
' → logprob: -11.06839656829834
    9. ')'' → logprob: -11.19339656829834
    10. ')\
' → logprob: -12.19339656829834

Token 503: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.057266298681497574
    2. ' and' → logprob: -3.4322662353515625
    3. 'or' → logprob: -4.4322662353515625
    4. '           ' → logprob: -4.9322662353515625
    5. ' if' → logprob: -6.1822662353515625
    6. 'and' → logprob: -6.4322662353515625
    7. '               ' → logprob: -8.682266235351562
    8. ')' → logprob: -9.057266235351562
    9. 'if' → logprob: -9.307266235351562
    10. '       ' → logprob: -10.557266235351562

Token 504: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.059659190475940704
    2. '(s' → logprob: -3.434659242630005
    3. ' (' → logprob: -3.684659242630005
    4. 's' → logprob: -8.809659004211426
    5. 'j' → logprob: -9.059659004211426
    6. '(' → logprob: -9.184659004211426
    7. '((' → logprob: -9.809659004211426
    8. '(True' → logprob: -10.184659004211426
    9. '(not' → logprob: -10.434659004211426
    10. '   ' → logprob: -11.059659004211426

Token 505: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06584814935922623
    2. ' j' → logprob: -3.0658481121063232
    3. '(j' → logprob: -4.815848350524902
    4. 's' → logprob: -5.565848350524902
    5. ' (' → logprob: -6.190848350524902
    6. ' s' → logprob: -6.940848350524902
    7. '(s' → logprob: -7.315848350524902
    8. ' ' → logprob: -8.065848350524902
    9. '  ' → logprob: -8.065848350524902
    10. '   ' → logprob: -8.565848350524902

Token 506: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11984164267778397
    2. '==' → logprob: -2.8698415756225586
    3. '+' → logprob: -3.4948415756225586
    4. ' +' → logprob: -3.8698415756225586
    5. ' <' → logprob: -5.369841575622559
    6. ' ' → logprob: -8.494841575622559
    7. '<' → logprob: -10.119841575622559
    8. '=' → logprob: -10.744841575622559
    9. '0' → logprob: -10.869841575622559
    10. ' !=' → logprob: -11.119841575622559

Token 507: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016508186236023903
    2. 'j' → logprob: -4.891508102416992
    3. ' ' → logprob: -5.016508102416992
    4. ' j' → logprob: -6.766508102416992
    5. '(j' → logprob: -7.766508102416992
    6. ' (' → logprob: -8.141508102416992
    7. '(' → logprob: -8.766508102416992
    8. '0' → logprob: -9.891508102416992
    9. 's' → logprob: -10.391508102416992
    10. '   ' → logprob: -10.829008102416992

Token 508: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2075420320034027
    2. '1' → logprob: -1.707542061805725
    3. ' j' → logprob: -6.0825419425964355
    4. '0' → logprob: -6.2075419425964355
    5. 's' → logprob: -6.9575419425964355
    6. ' ' → logprob: -8.332542419433594
    7. '2' → logprob: -8.332542419433594
    8. '(j' → logprob: -8.832542419433594
    9. 'i' → logprob: -9.582542419433594
    10. '[j' → logprob: -10.332542419433594

Token 509: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889419049024582
    2. 'and' → logprob: -2.5788941383361816
    3. ')' → logprob: -13.32889461517334
    4. ' ' → logprob: -13.57889461517334
    5. '==' → logprob: -14.45389461517334
    6. '	and' → logprob: -15.32889461517334
    7. ' ==' → logprob: -16.203893661499023
    8. '   ' → logprob: -16.328893661499023
    9. 'a' → logprob: -16.578893661499023
    10. '    ' → logprob: -16.828893661499023

Token 510: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759517550468445
    2. ' s' → logprob: -0.8259517550468445
    3. ')' → logprob: -13.07595157623291
    4. 'flags' → logprob: -13.07595157623291
    5. ' ' → logprob: -13.45095157623291
    6. ''s' → logprob: -13.95095157623291
    7. '(s' → logprob: -13.95095157623291
    8. ' ' → logprob: -14.07595157623291
    9. ' (' → logprob: -14.32595157623291
    10. ' flags' → logprob: -14.76345157623291

Token 511: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04314945638179779
    2. '==' → logprob: -3.168149471282959
    3. '=='' → logprob: -8.9181489944458
    4. ' =='' → logprob: -12.0431489944458
    5. ' ' → logprob: -12.9181489944458
    6. ''' → logprob: -12.9181489944458
    7. 's' → logprob: -13.6681489944458
    8. ' '' → logprob: -13.6681489944458
    9. ')' → logprob: -13.9181489944458
    10. '=' → logprob: -14.2931489944458

Token 512: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003764535649679601
    2. 'B' → logprob: -8.12537670135498
    3. ' '' → logprob: -9.62537670135498
    4. '"B' → logprob: -13.00037670135498
    5. ''C' → logprob: -13.25037670135498
    6. ''S' → logprob: -13.50037670135498
    7. ' ' → logprob: -13.62537670135498
    8. '   ' → logprob: -13.62537670135498
    9. '')' → logprob: -13.87537670135498
    10. ' B' → logprob: -13.87537670135498

Token 513: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5763241648674011
    2. 'B' → logprob: -0.8263241648674011
    3. ' B' → logprob: -8.826324462890625
    4. '"B' → logprob: -9.951324462890625
    5. ''C' → logprob: -10.076324462890625
    6. ' '' → logprob: -10.076324462890625
    7. ''S' → logprob: -10.826324462890625
    8. ''?' → logprob: -11.201324462890625
    9. '')' → logprob: -11.451324462890625
    10. 's' → logprob: -11.701324462890625

Token 514: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.24310302757658e-05
    2. ' )' → logprob: -10.125072479248047
    3. '')' → logprob: -10.750072479248047
    4. ' or' → logprob: -12.625072479248047
    5. ')
' → logprob: -13.125072479248047
    6. '   ' → logprob: -14.250072479248047
    7. '           ' → logprob: -14.250072479248047
    8. 'or' → logprob: -14.250072479248047
    9. '       ' → logprob: -14.750072479248047
    10. ')...' → logprob: -14.750072479248047

Token 515: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1934104859828949
    2. '           ' → logprob: -2.5684103965759277
    3. ' and' → logprob: -2.8184103965759277
    4. 'or' → logprob: -4.318410396575928
    5. ' if' → logprob: -4.568410396575928
    6. '<|end|>' → logprob: -5.318410396575928
    7. ')' → logprob: -5.943410396575928
    8. 'and' → logprob: -6.193410396575928
    9. ':' → logprob: -6.818410396575928
    10. 'if' → logprob: -7.068410396575928

Token 516: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6990335583686829
    2. '(j' → logprob: -0.6990335583686829
    3. '(s' → logprob: -5.574033737182617
    4. '(' → logprob: -6.199033737182617
    5. 'j' → logprob: -10.699033737182617
    6. 's' → logprob: -12.074033737182617
    7. ' j' → logprob: -12.199033737182617
    8. ' ' → logprob: -13.449033737182617
    9. '(True' → logprob: -13.574033737182617
    10. ' ' → logprob: -13.824033737182617

Token 517: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4564111828804016
    2. '(j' → logprob: -1.0814111232757568
    3. ' (' → logprob: -3.956411123275757
    4. ' j' → logprob: -4.956411361694336
    5. '(' → logprob: -6.956411361694336
    6. '   ' → logprob: -9.706411361694336
    7. ')' → logprob: -10.831411361694336
    8. '    ' → logprob: -10.956411361694336
    9. '  ' → logprob: -11.081411361694336
    10. ' ' → logprob: -11.206411361694336

Token 518: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47427794337272644
    2. '==' → logprob: -0.9742779731750488
    3. '=' → logprob: -9.84927749633789
    4. '2' → logprob: -9.97427749633789
    5. ' ' → logprob: -10.59927749633789
    6. ')' → logprob: -11.47427749633789
    7. '```' → logprob: -11.72427749633789
    8. '           ' → logprob: -11.97427749633789
    9. '...' → logprob: -12.09927749633789
    10. '          ' → logprob: -12.09927749633789

Token 519: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.033682581037282944
    2. ' ' → logprob: -3.4086825847625732
    3. ' (' → logprob: -11.033682823181152
    4. '(' → logprob: -11.783682823181152
    5. ' j' → logprob: -13.033682823181152
    6. '  ' → logprob: -13.033682823181152
    7. 's' → logprob: -13.408682823181152
    8. 'j' → logprob: -13.533682823181152
    9. '   ' → logprob: -13.971182823181152
    10. ' s' → logprob: -14.096182823181152

Token 520: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029947367147542536
    2. ' ' → logprob: -8.125299453735352
    3. 'j' → logprob: -13.375299453735352
    4. 's' → logprob: -14.375299453735352
    5. '3' → logprob: -15.375299453735352
    6. '(' → logprob: -15.500299453735352
    7. ''' → logprob: -15.875299453735352
    8. '  ' → logprob: -15.875299453735352
    9. '   ' → logprob: -16.00029945373535
    10. '0' → logprob: -16.37529945373535

Token 521: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10023675858974457
    2. 'and' → logprob: -2.350236654281616
    3. ')' → logprob: -11.600236892700195
    4. '==' → logprob: -11.725236892700195
    5. ' ' → logprob: -12.350236892700195
    6. ' ==' → logprob: -12.725236892700195
    7. 's' → logprob: -13.350236892700195
    8. '```' → logprob: -14.350236892700195
    9. ' s' → logprob: -14.725236892700195
    10. '(s' → logprob: -14.850236892700195

Token 522: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34854698181152344
    2. ' s' → logprob: -1.2235469818115234
    3. ''s' → logprob: -10.098546981811523
    4. 'flags' → logprob: -10.848546981811523
    5. ' ' → logprob: -11.348546981811523
    6. '   ' → logprob: -12.348546981811523
    7. ' flags' → logprob: -12.598546981811523
    8. ')' → logprob: -12.598546981811523
    9. ' ' → logprob: -12.848546981811523
    10. 'C' → logprob: -12.973546981811523

Token 523: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16058580577373505
    2. '==' → logprob: -1.9105857610702515
    3. '=='' → logprob: -8.285585403442383
    4. ')' → logprob: -9.660585403442383
    5. 's' → logprob: -11.660585403442383
    6. ' ' → logprob: -11.785585403442383
    7. ''' → logprob: -12.035585403442383
    8. ' =='' → logprob: -12.160585403442383
    9. ''s' → logprob: -12.785585403442383
    10. '=' → logprob: -13.035585403442383

Token 524: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0013501148205250502
    2. 'C' → logprob: -6.751349925994873
    3. ' '' → logprob: -8.876350402832031
    4. '')' → logprob: -11.376350402832031
    5. ''' → logprob: -11.626350402832031
    6. ' C' → logprob: -12.376350402832031
    7. ''S' → logprob: -12.501350402832031
    8. '"C' → logprob: -12.876350402832031
    9. 's' → logprob: -13.626350402832031
    10. ' ' → logprob: -13.876350402832031

Token 525: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01820414699614048
    2. ''C' → logprob: -4.018204212188721
    3. ''' → logprob: -10.518203735351562
    4. ' C' → logprob: -12.018203735351562
    5. '')' → logprob: -12.143203735351562
    6. ')' → logprob: -13.018203735351562
    7. '"C' → logprob: -13.455703735351562
    8. '`' → logprob: -13.580703735351562
    9. '?' → logprob: -14.018203735351562
    10. ''?' → logprob: -14.455703735351562

Token 526: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5494118928909302
    2. '):' → logprob: -0.9244118928909302
    3. '):
' → logprob: -3.6744117736816406
    4. '       ' → logprob: -8.79941177368164
    5. ''):' → logprob: -9.42441177368164
    6. '')' → logprob: -9.79941177368164
    7. ':' → logprob: -10.04941177368164
    8. '):

' → logprob: -10.17441177368164
    9. ' )' → logprob: -10.17441177368164
    10. '   ' → logprob: -10.54941177368164

Token 527: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8123783469200134
    2. '               ' → logprob: -1.0623784065246582
    3. '           ' → logprob: -2.062378406524658
    4. ':
' → logprob: -3.562378406524658
    5. ' :' → logprob: -4.687378406524658
    6. '<|end|>' → logprob: -4.812378406524658
    7. '       ' → logprob: -5.312378406524658
    8. '):' → logprob: -5.312378406524658
    9. ')' → logprob: -5.437378406524658
    10. ' :
' → logprob: -5.812378406524658

Token 528: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5396076440811157
    2. '           ' → logprob: -0.9146076440811157
    3. 'if' (adapté à ' if') → logprob: -4.164607524871826
    4. '               ' → logprob: -8.414608001708984
    5. '       ' → logprob: -9.164608001708984
    6. ')' → logprob: -9.414608001708984
    7. '		' → logprob: -9.414608001708984
    8. '<|end|>' → logprob: -9.664608001708984
    9. '            ' → logprob: -10.289608001708984
    10. ' ' → logprob: -10.539608001708984

Token 529: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.38712966442108154
    2. ' step' → logprob: -1.1371296644210815
    3. '(step' → logprob: -9.012129783630371
    4. '           ' → logprob: -9.387129783630371
    5. ' j' → logprob: -11.262129783630371
    6. 'j' → logprob: -12.262129783630371
    7. ' not' → logprob: -12.262129783630371
    8. '   ' → logprob: -12.512129783630371
    9. '	step' → logprob: -12.512129783630371
    10. ' dp' → logprob: -12.637129783630371

Token 530: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21374273300170898
    2. '=' → logprob: -2.338742733001709
    3. ' and' → logprob: -3.463742733001709
    4. '):' → logprob: -4.213742733001709
    5. ':
' → logprob: -4.463742733001709
    6. '[' → logprob: -4.713742733001709
    7. '           ' → logprob: -5.213742733001709
    8. 'and' → logprob: -5.338742733001709
    9. '<|end|>' → logprob: -5.588742733001709
    10. '==' → logprob: -5.713742733001709

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04610881581902504
    2. ' dp' → logprob: -3.2961087226867676
    3. 'dp' → logprob: -4.921108722686768
    4. '(dp' → logprob: -7.546108722686768
    5. ',' → logprob: -9.671109199523926
    6. '	dp' → logprob: -9.796109199523926
    7. ' ' → logprob: -11.171109199523926
    8. '           ' → logprob: -11.296109199523926
    9. '<|end|>' → logprob: -11.421109199523926
    10. '.dp' → logprob: -11.921109199523926

Token 532: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.07062504440546036
    2. 'dp' (adapté à ' dp') → logprob: -2.695625066757202
    3. '(dp' → logprob: -7.820624828338623
    4. '                   ' → logprob: -8.945625305175781
    5. '               ' → logprob: -9.445625305175781
    6. '	dp' → logprob: -9.820625305175781
    7. '_dp' → logprob: -11.195625305175781
    8. '.dp' → logprob: -12.195625305175781
    9. '           ' → logprob: -13.945625305175781
    10. '                       ' → logprob: -14.070625305175781

Token 533: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -12.375004768371582
    3. '[' → logprob: -16.500003814697266
    4. ' [' → logprob: -17.125003814697266
    5. '```' → logprob: -17.375003814697266
    6. '][' → logprob: -17.625003814697266
    7. '[I' → logprob: -18.000003814697266
    8. ' i' → logprob: -18.375003814697266
    9. '[j' → logprob: -18.625003814697266
    10. '   ' → logprob: -18.875003814697266

Token 534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.398067828034982e-05
    2. 'i' → logprob: -10.62507438659668
    3. '[' → logprob: -11.00007438659668
    4. '+i' → logprob: -11.25007438659668
    5. ' +' → logprob: -11.62507438659668
    6. '[i' → logprob: -12.00007438659668
    7. '][' → logprob: -12.75007438659668
    8. '1' → logprob: -13.62507438659668
    9. '++' → logprob: -15.75007438659668
    10. ' ' → logprob: -15.87507438659668

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. 'i' → logprob: -12.875007629394531
    3. ' ' → logprob: -13.000007629394531
    4. '+' → logprob: -14.375007629394531
    5. '][' → logprob: -14.625007629394531
    6. '```' → logprob: -15.375007629394531
    7. '   ' → logprob: -16.00000762939453
    8. '[i' → logprob: -16.00000762939453
    9. '2' → logprob: -16.25000762939453
    10. '[' → logprob: -16.37500762939453

Token 536: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.34897905588150024
    2. '[j' → logprob: -1.2239789962768555
    3. '[' → logprob: -8.473978996276855
    4. ')[' → logprob: -8.598978996276855
    5. ']' → logprob: -9.223978996276855
    6. '[i' → logprob: -11.598978996276855
    7. '}[' → logprob: -11.598978996276855
    8. ' ][' → logprob: -12.723978996276855
    9. '"][' → logprob: -12.973978996276855
    10. '```' → logprob: -13.098978996276855

Token 537: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.690834273584187e-05
    2. ' j' → logprob: -11.12503719329834
    3. '[j' → logprob: -11.12503719329834
    4. '(j' → logprob: -12.12503719329834
    5. '   ' → logprob: -14.62503719329834
    6. '][' → logprob: -15.50003719329834
    7. '_j' → logprob: -15.62503719329834
    8. '	j' → logprob: -15.75003719329834
    9. 'dp' → logprob: -15.75003719329834
    10. 's' → logprob: -16.000036239624023

Token 538: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003812217037193477
    2. ' +' → logprob: -7.875380992889404
    3. '+
' → logprob: -14.625381469726562
    4. '＋' → logprob: -15.500381469726562
    5. '+j' → logprob: -16.000381469726562
    6. '+]' → logprob: -16.125381469726562
    7. ']' → logprob: -16.375381469726562
    8. ']+' → logprob: -16.500381469726562
    9. '1' → logprob: -17.000381469726562
    10. '+[' → logprob: -17.375381469726562

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ']' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '+' → logprob: -17.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. 'i' → logprob: -17.875001907348633
    7. '<|end|>' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'from' → logprob: -18.187501907348633
    10. ']+=' → logprob: -18.437501907348633

Token 540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00600819056853652
    2. ']+=' → logprob: -5.131008148193359
    3. ']=' → logprob: -10.00600814819336
    4. ']=(' → logprob: -11.13100814819336
    5. '+=' → logprob: -11.63100814819336
    6. '=' → logprob: -12.38100814819336
    7. ')' → logprob: -12.88100814819336
    8. ' ]' → logprob: -12.88100814819336
    9. ']+' → logprob: -14.38100814819336
    10. '+' → logprob: -14.63100814819336

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031718362122774124
    2. '+=' → logprob: -3.5317182540893555
    3. ' =' → logprob: -6.2817182540893555
    4. ' +=' → logprob: -9.281718254089355
    5. '=(' → logprob: -13.406718254089355
    6. '%=' → logprob: -13.906718254089355
    7. '+=(' → logprob: -16.156719207763672
    8. ']+=' → logprob: -16.406719207763672
    9. '+' → logprob: -17.656719207763672
    10. ')' → logprob: -18.281719207763672

Token 542: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0019312551012262702
    2. ' (' → logprob: -6.251931190490723
    3. '   ' → logprob: -14.126931190490723
    4. '(' → logprob: -14.376931190490723
    5. ' ' → logprob: -15.501931190490723
    6. '(dx' → logprob: -15.501931190490723
    7. '  ' → logprob: -15.626931190490723
    8. '(df' → logprob: -15.751931190490723
    9. '(dd' → logprob: -16.25193214416504
    10. '    ' → logprob: -16.75193214416504

Token 543: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.805981972021982e-05
    2. '(dp' → logprob: -9.25009822845459
    3. ' dp' → logprob: -13.25009822845459
    4. '	dp' → logprob: -16.500097274780273
    5. '   ' → logprob: -17.375097274780273
    6. '           ' → logprob: -19.250097274780273
    7. '_dp' → logprob: -19.375097274780273
    8. 'd' → logprob: -19.500097274780273
    9. '
' → logprob: -20.000097274780273
    10. '.dp' → logprob: -20.000097274780273

Token 544: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5107177862082608e-05
    2. 'i' → logprob: -10.625024795532227
    3. '{i' → logprob: -15.000024795532227
    4. '[' → logprob: -15.500024795532227
    5. '[I' → logprob: -15.750024795532227
    6. '```' → logprob: -16.500024795532227
    7. '[j' → logprob: -18.000024795532227
    8. ' [' → logprob: -18.000024795532227
    9. ' i' → logprob: -18.125024795532227
    10. '(i' → logprob: -18.375024795532227

Token 545: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00026073982007801533
    2. '[i' → logprob: -8.375260353088379
    3. '[' → logprob: -11.375260353088379
    4. '][' → logprob: -11.875260353088379
    5. '+i' → logprob: -12.375260353088379
    6. ' +' → logprob: -12.625260353088379
    7. 'i' → logprob: -13.125260353088379
    8. '+[' → logprob: -14.250260353088379
    9. '＋' → logprob: -14.750260353088379
    10. ']+' → logprob: -14.750260353088379

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006002859678119421
    2. 'i' → logprob: -5.881002902984619
    3. '+' → logprob: -6.006002902984619
    4. '[i' → logprob: -7.381002902984619
    5. '][' → logprob: -9.631002426147461
    6. '(i' → logprob: -11.631002426147461
    7. '```' → logprob: -11.881002426147461
    8. '[' → logprob: -12.131002426147461
    9. ' ' → logprob: -12.256002426147461
    10. ']' → logprob: -13.006002426147461

Token 547: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.576680064201355
    2. '[i' → logprob: -0.826680064201355
    3. ')[' → logprob: -7.9516801834106445
    4. '[j' → logprob: -8.701680183410645
    5. '   ' → logprob: -9.576680183410645
    6. '```' → logprob: -10.076680183410645
    7. '[' → logprob: -10.701680183410645
    8. ' ][' → logprob: -11.201680183410645
    9. ' [' → logprob: -11.326680183410645
    10. '}[' → logprob: -11.701680183410645

Token 548: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04943561181426048
    2. 'i' → logprob: -3.049435615539551
    3. '[j' → logprob: -7.924435615539551
    4. 's' → logprob: -8.17443561553955
    5. '[i' → logprob: -8.92443561553955
    6. 'dp' → logprob: -10.54943561553955
    7. ' j' → logprob: -10.54943561553955
    8. '][' → logprob: -12.29943561553955
    9. ' i' → logprob: -12.67443561553955
    10. ']' → logprob: -13.29943561553955

Token 549: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01838638447225094
    2. '][' → logprob: -4.018386363983154
    3. '[j' → logprob: -9.393386840820312
    4. '   ' → logprob: -10.393386840820312
    5. 'j' → logprob: -10.643386840820312
    6. ' +' → logprob: -10.643386840820312
    7. '+j' → logprob: -10.643386840820312
    8. ']' → logprob: -11.143386840820312
    9. ']+' → logprob: -11.893386840820312
    10. '[' → logprob: -12.018386840820312

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002719449403230101
    2. '+' → logprob: -8.875271797180176
    3. 'j' → logprob: -9.125271797180176
    4. 'i' → logprob: -11.375271797180176
    5. '[j' → logprob: -12.750271797180176
    6. ']' → logprob: -13.250271797180176
    7. '
' → logprob: -13.375271797180176
    8. '   ' → logprob: -13.937771797180176
    9. '```' → logprob: -14.062771797180176
    10. ' ' → logprob: -14.125271797180176

Token 551: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2260553538799286
    2. ' +' → logprob: -1.601055383682251
    3. '[j' → logprob: -8.226055145263672
    4. ']' → logprob: -8.976055145263672
    5. '[' → logprob: -9.226055145263672
    6. ']+' → logprob: -9.976055145263672
    7. '[i' → logprob: -10.476055145263672
    8. '+j' → logprob: -10.726055145263672
    9. '][' → logprob: -11.101055145263672
    10. '+[' → logprob: -11.226055145263672

Token 552: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07893738150596619
    2. ' +' → logprob: -2.578937292098999
    3. '[j' → logprob: -10.328937530517578
    4. '[' → logprob: -11.953937530517578
    5. '+j' → logprob: -12.328937530517578
    6. '+[' → logprob: -13.078937530517578
    7. '+
' → logprob: -14.078937530517578
    8. ']' → logprob: -14.578937530517578
    9. ']+' → logprob: -15.078937530517578
    10. '[i' → logprob: -16.578937530517578

Token 553: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004079470410943031
    2. ' dp' → logprob: -5.504079341888428
    3. '(dp' → logprob: -14.004079818725586
    4. '	dp' → logprob: -16.254079818725586
    5. '_dp' → logprob: -17.254079818725586
    6. '   ' → logprob: -18.004079818725586
    7. '           ' → logprob: -18.004079818725586
    8. 'd' → logprob: -18.129079818725586
    9. '```' → logprob: -18.254079818725586
    10. '.dp' → logprob: -18.254079818725586

Token 554: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.690834273584187e-05
    2. 'i' → logprob: -10.25003719329834
    3. '[' → logprob: -14.25003719329834
    4. '```' → logprob: -15.25003719329834
    5. '(i' → logprob: -16.250036239624023
    6. '{i' → logprob: -16.250036239624023
    7. '[I' → logprob: -16.375036239624023
    8. ' [' → logprob: -16.750036239624023
    9. '[j' → logprob: -17.000036239624023
    10. '_i' → logprob: -17.625036239624023

Token 555: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006018506363034248
    2. '][' → logprob: -5.13101863861084
    3. 'i' → logprob: -9.88101863861084
    4. '[' → logprob: -10.25601863861084
    5. '[j' → logprob: -14.38101863861084
    6. ' [' → logprob: -14.63101863861084
    7. ']' → logprob: -14.75601863861084
    8. '```' → logprob: -14.75601863861084
    9. ' i' → logprob: -14.88101863861084
    10. '}[' → logprob: -15.00601863861084

Token 556: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1008713702030946e-06
    2. '[j' → logprob: -13.875001907348633
    3. ' j' → logprob: -13.875001907348633
    4. 'i' → logprob: -16.125001907348633
    5. '[' → logprob: -16.875001907348633
    6. '	j' → logprob: -18.000001907348633
    7. '```' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '_j' → logprob: -18.875001907348633
    10. '$j' → logprob: -19.125001907348633

Token 557: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16232095658779144
    2. ']' → logprob: -2.037320852279663
    3. '[i' → logprob: -4.537321090698242
    4. ']*' → logprob: -5.537321090698242
    5. '[j' → logprob: -5.662321090698242
    6. ')' → logprob: -7.537321090698242
    7. '   ' → logprob: -8.912321090698242
    8. '[' → logprob: -9.412321090698242
    9. 'j' → logprob: -9.537321090698242
    10. '],' → logprob: -9.662321090698242

Token 558: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5861846208572388
    2. ' %' → logprob: -0.9611846208572388
    3. ')' → logprob: -3.086184501647949
    4. ')%' → logprob: -4.211184501647949
    5. '%c' → logprob: -8.96118450164795
    6. '%i' → logprob: -9.21118450164795
    7. '%s' → logprob: -9.58618450164795
    8. '%)' → logprob: -9.71118450164795
    9. '%n' → logprob: -9.96118450164795
    10. ' )' → logprob: -10.08618450164795

Token 559: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.615255839889869e-05
    2. ' MOD' → logprob: -9.250096321105957
    3. 'MO' → logprob: -19.37509536743164
    4. '_MOD' → logprob: -19.87509536743164
    5. '```' → logprob: -20.25009536743164
    6. '.MOD' → logprob: -21.37509536743164
    7. '`' → logprob: -22.50009536743164
    8. 'M' → logprob: -22.62509536743164
    9. '
' → logprob: -22.75009536743164
    10. '``' → logprob: -23.50009536743164

Token 560: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0020421743392944
    2. '<|end|>' → logprob: -1.2520421743392944
    3. ')' → logprob: -1.7520421743392944
    4. '#' → logprob: -2.752042293548584
    5. 'for' → logprob: -3.002042293548584
    6. 'NO' → logprob: -3.752042293548584
    7. '```' → logprob: -3.752042293548584
    8. 'dp' → logprob: -5.377042293548584
    9. 'YES' → logprob: -5.877042293548584
    10. '...' → logprob: -6.752042293548584

Token 562: ' Ob' (ID: 3057)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.246537173457909e-06
    2. 'answer' → logprob: -12.875003814697266
    3. 'result' → logprob: -13.750003814697266
    4. 'ans' → logprob: -14.875003814697266
    5. 'YES' → logprob: -15.375003814697266
    6. '
' → logprob: -17.500003814697266
    7. '```' → logprob: -17.500003814697266
    8. ' print' → logprob: -17.625003814697266
    9. 'ANSWER' → logprob: -18.500003814697266
    10. 'ANS' → logprob: -19.125003814697266

Token 563: 'fuscated' (ID: 149858)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5606080889701843
    2. 'j' → logprob: -1.935608148574829
    3. 'ject' → logprob: -2.060608148574829
    4. 'result' → logprob: -2.185608148574829
    5. 'answer' → logprob: -4.31060791015625
    6. 'res' → logprob: -4.56060791015625
    7. 'for' → logprob: -4.93560791015625
    8. '#print' → logprob: -5.93560791015625
    9. 'ans' → logprob: -6.31060791015625
    10. '```' → logprob: -6.68560791015625

Token 564: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013434085063636303
    2. '(' → logprob: -5.388433933258057
    3. '0' → logprob: -6.263433933258057
    4. '```' → logprob: -6.763433933258057
    5. 'for' → logprob: -7.013433933258057
    6. '_' → logprob: -7.138433933258057
    7. 'result' → logprob: -7.138433933258057
    8. 'dp' → logprob: -7.513433933258057
    9. 'return' → logprob: -7.763433933258057
    10. '(print' → logprob: -8.013434410095215

Token 565: ' output' (ID: 4733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5522022247314453
    2. 'answer' → logprob: -1.3022022247314453
    3. 'print' → logprob: -2.3022022247314453
    4. 'ans' → logprob: -3.6772022247314453
    5. 'res' → logprob: -3.8022022247314453
    6. 'return' → logprob: -6.302202224731445
    7. 'r' → logprob: -7.552202224731445
    8. 'for' → logprob: -7.552202224731445
    9. '_' → logprob: -7.677202224731445
    10. '_result' → logprob: -8.177202224731445

Token 566: ' via' (ID: 4493)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8193366486229934e-05
    2. '```' → logprob: -11.125018119812012
    3. '(print' → logprob: -14.125018119812012
    4. 'printf' → logprob: -14.250018119812012
    5. 'pr' → logprob: -14.250018119812012
    6. ' print' → logprob: -14.500018119812012
    7. '#print' → logprob: -15.375018119812012
    8. 'for' → logprob: -15.875018119812012
    9. '``' → logprob: -16.375019073486328
    10. '
' → logprob: -16.375019073486328

Token 567: ' reduce' (ID: 10389)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016790216614026576
    2. 'update' → logprob: -8.750167846679688
    3. '```' → logprob: -12.625167846679688
    4. 'operator' → logprob: -13.125167846679688
    5. 'lambda' → logprob: -14.125167846679688
    6. '
' → logprob: -14.125167846679688
    7. '(print' → logprob: -14.125167846679688
    8. 'reduce' → logprob: -14.875167846679688
    9. 'pow' → logprob: -15.500167846679688
    10. '(update' → logprob: -15.750167846679688

Token 568: ' and' (ID: 326)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005657802103087306
    2. ')' → logprob: -7.750566005706787
    3. 'import' → logprob: -9.625565528869629
    4. ' print' → logprob: -10.375565528869629
    5. 'from' → logprob: -10.875565528869629
    6. '   ' → logprob: -12.000565528869629
    7. '```' → logprob: -12.750565528869629
    8. '),' → logprob: -13.375565528869629
    9. 'result' → logprob: -13.500565528869629
    10. ')
' → logprob: -13.750565528869629

Token 569: ' operator' (ID: 11019)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38583484292030334
    2. 'operator' → logprob: -1.385834813117981
    3. 'reduce' → logprob: -3.1358349323272705
    4. 'lambda' → logprob: -4.135834693908691
    5. 'mul' → logprob: -4.635834693908691
    6. '(lambda' → logprob: -8.510834693908691
    7. 'str' → logprob: -8.760834693908691
    8. '(operator' → logprob: -9.135834693908691
    9. 'pow' → logprob: -9.260834693908691
    10. ' operator' → logprob: -9.510834693908691

Token 570: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020638995338231325
    2. 'import' → logprob: -6.502063751220703
    3. 'from' → logprob: -8.127063751220703
    4. '```' → logprob: -8.877063751220703
    5. ')' → logprob: -9.627063751220703
    6. '(print' → logprob: -10.877063751220703
    7. '(' → logprob: -11.752063751220703
    8. ' print' → logprob: -12.127063751220703
    9. '
' → logprob: -12.127063751220703
    10. '``' → logprob: -12.127063751220703

Token 571: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7835754988482222e-05
    2. '```' → logprob: -11.375018119812012
    3. 'import' → logprob: -12.250018119812012
    4. 'from' → logprob: -14.250018119812012
    5. ' print' → logprob: -14.750018119812012
    6. '
' → logprob: -15.250018119812012
    7. ')' → logprob: -15.875018119812012
    8. '(print' → logprob: -16.125017166137695
    9. '``' → logprob: -16.750017166137695
    10. '   ' → logprob: -18.875017166137695

Token 572: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.00921136885881424
    2. 'reduce' → logprob: -4.884211540222168
    3. '(' → logprob: -6.509211540222168
    4. 're' → logprob: -9.634211540222168
    5. '```' → logprob: -11.509211540222168
    6. '(red' → logprob: -11.884211540222168
    7. ' (' → logprob: -12.259211540222168
    8. '(list' → logprob: -12.259211540222168
    9. '(sum' → logprob: -12.384211540222168
    10. '(
' → logprob: -12.384211540222168

Token 573: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -3.35706390615087e-05
    2. 'reduce' → logprob: -11.125033378601074
    3. 'd' → logprob: -11.250033378601074
    4. 'du' → logprob: -12.250033378601074
    5. 'duc' → logprob: -15.000033378601074
    6. 'ducer' → logprob: -15.500033378601074
    7. 'duced' → logprob: -16.12503433227539
    8. 'de' → logprob: -16.12503433227539
    9. '[' → logprob: -16.87503433227539
    10. '```' → logprob: -16.87503433227539

Token 574: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.06101720780134201
    2. '(m' → logprob: -2.9360172748565674
    3. 'operator' → logprob: -5.436017036437988
    4. '(lambda' → logprob: -6.686017036437988
    5. 'mul' → logprob: -8.436017036437988
    6. '(' → logprob: -8.561017036437988
    7. '```' → logprob: -10.186017036437988
    8. ' operator' → logprob: -10.686017036437988
    9. 'm' → logprob: -10.936017036437988
    10. '(add' → logprob: -12.186017036437988

Token 575: '.x' (ID: 3700)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.07911770045757294
    2. '.mul' → logprob: -2.579117774963379
    3. '.i' → logprob: -9.079117774963379
    4. '.mod' → logprob: -10.704117774963379
    5. '```' → logprob: -10.954117774963379
    6. '.' → logprob: -11.204117774963379
    7. 'add' → logprob: -11.204117774963379
    8. '.Add' → logprob: -12.079117774963379
    9. '.im' → logprob: -12.204117774963379
    10. '   ' → logprob: -12.329117774963379

Token 576: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -9.491498531133402e-06
    2. 'mul' → logprob: -12.125009536743164
    3. 'xor' → logprob: -13.125009536743164
    4. '(or' → logprob: -13.875009536743164
    5. 'o' → logprob: -14.375009536743164
    6. ' or' → logprob: -15.875009536743164
    7. 'orr' → logprob: -16.250009536743164
    8. ''or' → logprob: -16.375009536743164
    9. '_or' → logprob: -17.000009536743164
    10. '```' → logprob: -17.125009536743164

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002086261985823512
    2. ',int' → logprob: -7.252086162567139
    3. '(lambda' → logprob: -8.002086639404297
    4. '_,' → logprob: -8.377086639404297
    5. '*,' → logprob: -8.377086639404297
    6. '(' → logprob: -9.127086639404297
    7. ' ,' → logprob: -9.127086639404297
    8. 'lambda' → logprob: -9.252086639404297
    9. 'dp' → logprob: -10.252086639404297
    10. '(*' → logprob: -10.627086639404297

Token 578: ' [' (ID: 723)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.47495681833243e-05
    2. '(dp' → logprob: -10.750024795532227
    3. '[' → logprob: -12.875024795532227
    4. ' dp' → logprob: -14.375024795532227
    5. 'map' → logprob: -16.625024795532227
    6. 'range' → logprob: -18.000024795532227
    7. '[(' → logprob: -18.250024795532227
    8. '[*' → logprob: -18.375024795532227
    9. ')' → logprob: -18.875024795532227
    10. '[d' → logprob: -18.875024795532227

Token 579: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005209682509303093
    2. '(dp' → logprob: -6.505209445953369
    3. 'x' → logprob: -6.880209445953369
    4. '*' → logprob: -7.005209445953369
    5. 'sum' → logprob: -7.130209445953369
    6. 'v' → logprob: -7.630209445953369
    7. 'row' → logprob: -8.755209922790527
    8. 'val' → logprob: -9.380209922790527
    9. 'reduce' → logprob: -9.380209922790527
    10. '(x' → logprob: -10.255209922790527

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08213445544242859
    2. ']' → logprob: -2.832134485244751
    3. ']+' → logprob: -3.957134485244751
    4. 'dp' → logprob: -8.582134246826172
    5. '[i' → logprob: -8.832134246826172
    6. ',
' → logprob: -9.707134246826172
    7. '(dp' → logprob: -9.832134246826172
    8. '^' → logprob: -10.082134246826172
    9. ',[' → logprob: -10.207134246826172
    10. ' ,' → logprob: -10.207134246826172

Token 581: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001130571006797254
    2. '*' → logprob: -7.3761305809021
    3. 'sum' → logprob: -8.251130104064941
    4. 'reduce' → logprob: -8.876130104064941
    5. '(dp' → logprob: -9.751130104064941
    6. ' dp' → logprob: -10.376130104064941
    7. 'pow' → logprob: -12.001130104064941
    8. 'max' → logprob: -13.626130104064941
    9. '*(' → logprob: -13.876130104064941
    10. '0' → logprob: -14.251130104064941

Token 582: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.13632912933826447
    2. 'N' → logprob: -2.761329174041748
    3. '[-' → logprob: -2.761329174041748
    4. '[i' → logprob: -7.636329174041748
    5. '][' → logprob: -8.76132869720459
    6. '-' → logprob: -9.26132869720459
    7. 'i' → logprob: -9.38632869720459
    8. '[' → logprob: -9.63632869720459
    9. '][-' → logprob: -10.26132869720459
    10. '-N' → logprob: -10.51132869720459

Token 583: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04413336515426636
    2. '[' → logprob: -3.169133424758911
    3. '3' → logprob: -7.919133186340332
    4. ']' → logprob: -8.044133186340332
    5. '][-' → logprob: -8.044133186340332
    6. '[-' → logprob: -10.169133186340332
    7. '4' → logprob: -10.294133186340332
    8. ' ][' → logprob: -10.419133186340332
    9. '])' → logprob: -12.169133186340332
    10. '-' → logprob: -12.669133186340332

Token 584: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005844531115144491
    2. '0' → logprob: -5.505844593048096
    3. '1' → logprob: -6.880844593048096
    4. 'i' → logprob: -7.630844593048096
    5. 'j' → logprob: -8.505844116210938
    6. 'k' → logprob: -10.380844116210938
    7. '-' → logprob: -11.755844116210938
    8. 'x' → logprob: -12.880844116210938
    9. 'idx' → logprob: -13.380844116210938
    10. '
' → logprob: -13.630844116210938

Token 585: ']]' (ID: 8928)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0035150181502103806
    2. '],' → logprob: -6.128515243530273
    3. ']' → logprob: -7.503515243530273
    4. '])' → logprob: -8.003515243530273
    5. ']))
' → logprob: -8.628515243530273
    6. '])))' → logprob: -8.628515243530273
    7. ' ]' → logprob: -10.003515243530273
    8. ']),' → logprob: -11.503515243530273
    9. ']))

' → logprob: -12.378515243530273
    10. ')])' → logprob: -12.753515243530273

Token 586: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014846279518678784
    2. ')' → logprob: -7.251484394073486
    3. ']))' → logprob: -7.501484394073486
    4. '])' → logprob: -8.626484870910645
    5. ')))' → logprob: -10.501484870910645
    6. ',' → logprob: -12.376484870910645
    7. '))
' → logprob: -13.001484870910645
    8. ')]' → logprob: -13.126484870910645
    9. ' ))' → logprob: -13.251484870910645
    10. ')])' → logprob: -13.251484870910645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 584
Tokens correctement prédits (1ère position, stricte): 238
Tokens correctement prédits (1ère position, avec adaptation): 240
Tokens correctement prédits (top 10): 477
Précision stricte (1ère position): 40.75%
Précision adaptée (1ère position): 41.10%
Précision (top 10): 81.68%
================================================================================
