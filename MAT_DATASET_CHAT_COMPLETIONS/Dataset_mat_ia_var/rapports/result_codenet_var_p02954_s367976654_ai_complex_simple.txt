================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import groupby, accumulate, chain
from operator import itemgetter

s = input()
n = len(s)
c = [1]*n

def gen_indices(seq, ch):
    return (i for i, (a, b) in enumerate(zip(seq, seq[1:])) if a == ch and b == ch)

for i in gen_indices(s, 'R'):
    c[i+2] = (lambda a,b: a+b)(c[i], c[i+2]) ; c[i] = 0

for i in gen_indices(s[::-1], 'L'):
    j = n-1-i
    c[j-2] = (lambda a,b: a+b)(c[j], c[j-2]) ; c[j] = 0

print(*map(str, c))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' group' (ID: 3566)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2127628326416016
    2. 'product' → logprob: -1.2127628326416016
    3. 'per' → logprob: -1.7127628326416016
    4. 'count' → logprob: -2.3377628326416016
    5. ' permutations' → logprob: -3.2127628326416016
    6. 'cycle' → logprob: -3.3377628326416016
    7. ' product' → logprob: -3.8377628326416016
    8. 'group' → logprob: -4.712762832641602
    9. 'chain' → logprob: -4.837762832641602
    10. ' cycle' → logprob: -4.962762832641602

Token 4: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0003863438032567501
    2. 'y' → logprob: -8.000386238098145
    3. 's' → logprob: -10.625386238098145
    4. 'b' → logprob: -11.125386238098145
    5. 'by's' → logprob: -11.750386238098145
    6. 'tools' → logprob: -12.875386238098145
    7. 'ertools' → logprob: -15.000386238098145
    8. 'bys' → logprob: -15.625386238098145
    9. 'z' → logprob: -15.750386238098145
    10. 'py' → logprob: -16.00038719177246

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028731857310049236
    2. '(
' → logprob: -8.750287055969238
    3. '.' → logprob: -9.375287055969238
    4. '\(' → logprob: -10.750287055969238
    5. ',' → logprob: -11.875287055969238
    6. ' (' → logprob: -12.375287055969238
    7. ''' → logprob: -12.750287055969238
    8. '(

' → logprob: -13.750287055969238
    9. '\' → logprob: -14.000287055969238
    10. '```' → logprob: -14.000287055969238

Token 6: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7094354033470154
    2. 'com' → logprob: -2.20943546295166
    3. 'product' → logprob: -2.20943546295166
    4. 'filter' → logprob: -2.45943546295166
    5. 'chain' → logprob: -2.83443546295166
    6. 'count' → logprob: -3.20943546295166
    7. 'per' → logprob: -3.45943546295166
    8. 'cycle' → logprob: -4.08443546295166
    9. 'zip' → logprob: -4.20943546295166
    10. 'tee' → logprob: -4.33443546295166

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011949351988732815
    2. '.' → logprob: -4.63694953918457
    3. '(
' → logprob: -6.88694953918457
    4. '\(' → logprob: -7.38694953918457
    5. ',' → logprob: -9.01194953918457
    6. '\' → logprob: -9.26194953918457
    7. '`' → logprob: -9.76194953918457
    8. '```' → logprob: -10.01194953918457
    9. '\n' → logprob: -10.26194953918457
    10. 'def' → logprob: -10.38694953918457

Token 8: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.10635045170783997
    2. ' product' → logprob: -3.9813504219055176
    3. ' filter' → logprob: -4.356350421905518
    4. ' permutations' → logprob: -4.356350421905518
    5. 'chain' → logprob: -4.731350421905518
    6. 'com' → logprob: -4.981350421905518
    7. '```' → logprob: -5.106350421905518
    8. ' cycle' → logprob: -5.106350421905518
    9. 'count' → logprob: -5.231350421905518
    10. ' count' → logprob: -5.356350421905518

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004278076812624931
    2. '.' → logprob: -6.129278182983398
    3. '(
' → logprob: -6.379278182983398
    4. ',' → logprob: -9.129278182983398
    5. '```' → logprob: -9.504278182983398
    6. '\(' → logprob: -10.004278182983398
    7. '`' → logprob: -10.504278182983398
    8. '(
' → logprob: -10.879278182983398
    9. '[' → logprob: -11.129278182983398
    10. '\' → logprob: -11.129278182983398

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21919286251068115
    2. '(
' → logprob: -2.7191929817199707
    3. '.' → logprob: -3.0941929817199707
    4. ',' → logprob: -3.2191929817199707
    5. '\' → logprob: -4.219192981719971
    6. '\n' → logprob: -5.219192981719971
    7. '```' → logprob: -5.469192981719971
    8. '`' → logprob: -5.844192981719971
    9. '
' → logprob: -6.094192981719971
    10. '[' → logprob: -6.094192981719971

Token 11: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.6579567193984985
    2. ' operator' → logprob: -1.0329567193984985
    3. 'collections' → logprob: -2.532956600189209
    4. 'math' → logprob: -4.157956600189209
    5. 'fun' → logprob: -4.407956600189209
    6. ' functools' → logprob: -4.657956600189209
    7. ' collections' → logprob: -5.282956600189209
    8. ' math' → logprob: -6.282956600189209
    9. 'heap' → logprob: -7.157956600189209
    10. 'typing' → logprob: -7.532956600189209

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.00998650211840868
    2. 'import' → logprob: -4.634986400604248
    3. ' ' → logprob: -8.509986877441406
    4. '	import' → logprob: -11.134986877441406
    5. '<|end|>' → logprob: -12.509986877441406
    6. '.' → logprob: -12.884986877441406
    7. '```' → logprob: -13.259986877441406
    8. ' as' → logprob: -13.384986877441406
    9. '_import' → logprob: -13.634986877441406
    10. ' .' → logprob: -14.634986877441406

Token 13: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.23967045545578003
    2. 'item' → logprob: -1.7396705150604248
    3. ' add' → logprob: -3.614670515060425
    4. 'add' → logprob: -4.989670276641846
    5. ' ' → logprob: -6.239670276641846
    6. ' import' → logprob: -7.114670276641846
    7. 'import' → logprob: -8.114670753479004
    8. '	item' → logprob: -8.739670753479004
    9. 'getitem' → logprob: -8.989670753479004
    10. ' is' → logprob: -9.364670753479004

Token 14: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0031973200384527445
    2. 'get' → logprob: -5.753197193145752
    3. 'gett' → logprob: -11.37819766998291
    4. 'getitem' → logprob: -11.87819766998291
    5. 'g' → logprob: -15.75319766998291
    6. 'attr' → logprob: -16.003196716308594
    7. 'got' → logprob: -16.003196716308594
    8. 'item' → logprob: -16.128196716308594
    9. 'gets' → logprob: -16.128196716308594
    10. 'gte' → logprob: -16.253196716308594

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1629776805639267
    2. '(
' → logprob: -2.787977695465088
    3. '\' → logprob: -3.662977695465088
    4. '.' → logprob: -3.662977695465088
    5. '\n' → logprob: -4.287977695465088
    6. ',' → logprob: -4.412977695465088
    7. '[' → logprob: -6.037977695465088
    8. '```' → logprob: -6.287977695465088
    9. '`' → logprob: -6.787977695465088
    10. '
' → logprob: -6.912977695465088

Token 16: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2849304974079132
    2. 'd' → logprob: -2.034930467605591
    3. '#' → logprob: -3.784930467605591
    4. ',' → logprob: -4.03493070602417
    5. '.' → logprob: -4.15993070602417
    6. '(
' → logprob: -4.15993070602417
    7. '[' → logprob: -4.65993070602417
    8. 'def' → logprob: -5.03493070602417
    9. '=' → logprob: -5.15993070602417
    10. '\' → logprob: -5.15993070602417

Token 17: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.9501183032989502
    2. 'et' → logprob: -2.07511830329895
    3. 'e' → logprob: -2.20011830329895
    4. 'u' → logprob: -2.32511830329895
    5. '[' → logprob: -2.45011830329895
    6. '=' → logprob: -2.45011830329895
    7. 't' → logprob: -2.82511830329895
    8. ' =' → logprob: -2.82511830329895
    9. '.' → logprob: -3.07511830329895
    10. '(' → logprob: -3.07511830329895

Token 18: ' input' (ID: 3422)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7435547709465027
    2. ' "' → logprob: -1.3685548305511475
    3. ''' → logprob: -2.3685548305511475
    4. ' [' → logprob: -2.3685548305511475
    5. '[' → logprob: -3.2435548305511475
    6. '"' → logprob: -3.3685548305511475
    7. ''s' → logprob: -6.493554592132568
    8. ' ' → logprob: -7.118554592132568
    9. ' []' → logprob: -7.368554592132568
    10. ' [('' → logprob: -7.368554592132568

Token 19: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035190568305552006
    2. '('' → logprob: -6.003519058227539
    3. ''' → logprob: -8.128519058227539
    4. '`' → logprob: -8.503519058227539
    5. '("("' → logprob: -9.253519058227539
    6. '```' → logprob: -9.253519058227539
    7. ')' → logprob: -9.378519058227539
    8. '(
' → logprob: -9.753519058227539
    9. 's' → logprob: -10.003519058227539
    10. '()' → logprob: -10.253519058227539

Token 20: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4697185158729553
    2. ')' → logprob: -2.4697184562683105
    3. '_' → logprob: -2.4697184562683105
    4. '(' → logprob: -3.5947184562683105
    5. '[' → logprob: -3.5947184562683105
    6. 'g' → logprob: -4.3447184562683105
    7. 'a' → logprob: -4.3447184562683105
    8. 's' → logprob: -4.3447184562683105
    9. 'r' → logprob: -4.8447184562683105
    10. 'groups' → logprob: -4.9697184562683105

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1861274540424347
    2. '=' → logprob: -1.8111274242401123
    3. ' ' → logprob: -5.311127662658691
    4. '.' → logprob: -7.311127662658691
    5. ',' → logprob: -7.811127662658691
    6. '_' → logprob: -8.686127662658691
    7. ')' → logprob: -9.811127662658691
    8. '=int' → logprob: -10.561127662658691
    9. ' ,' → logprob: -11.186127662658691
    10. 't' → logprob: -11.186127662658691

Token 22: ' len' (ID: 4631)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.27972909808158875
    2. ' len' → logprob: -1.5297291278839111
    3. 'int' → logprob: -3.779729127883911
    4. 'len' → logprob: -5.404728889465332
    5. ' ' → logprob: -9.404728889465332
    6. '=int' → logprob: -12.779728889465332
    7. '[int' → logprob: -13.154728889465332
    8. '  ' → logprob: -13.779728889465332
    9. '<int' → logprob: -14.029728889465332
    10. '=len' → logprob: -14.154728889465332

Token 23: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0024914760142564774
    2. '(' → logprob: -6.002491474151611
    3. 's' → logprob: -11.12749195098877
    4. '(n' → logprob: -14.25249195098877
    5. ' (' → logprob: -15.50249195098877
    6. '(
' → logprob: -15.75249195098877
    7. '(

' → logprob: -17.502490997314453
    8. '(str' → logprob: -18.627490997314453
    9. '(space' → logprob: -18.627490997314453
    10. ' s' → logprob: -19.002490997314453

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')n' → logprob: -14.000004768371582
    3. ')
' → logprob: -14.125004768371582
    4. ' )' → logprob: -14.250004768371582
    5. '))' → logprob: -14.375004768371582
    6. ')s' → logprob: -14.500004768371582
    7. '#' → logprob: -15.125004768371582
    8. ')))' → logprob: -15.625004768371582
    9. '),' → logprob: -15.750004768371582
    10. 's' → logprob: -16.1250057220459

Token 25: 'c' (ID: 66)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.29982590675354
    2. ' 
' → logprob: -1.42482590675354
    3. '
' → logprob: -2.54982590675354
    4. 'for' → logprob: -3.04982590675354
    5. '=' → logprob: -3.29982590675354
    6. ' ' → logprob: -3.54982590675354
    7. '.' → logprob: -3.67482590675354
    8. '  
' → logprob: -3.67482590675354
    9. 'a' → logprob: -3.79982590675354
    10. ')' → logprob: -3.92482590675354

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6160322427749634
    2. 'ount' → logprob: -0.8660322427749634
    3. '=' → logprob: -4.241032123565674
    4. 'nt' → logprob: -5.116032123565674
    5. 'o' → logprob: -5.866032123565674
    6. 'h' → logprob: -5.991032123565674
    7. 'ounter' → logprob: -6.116032123565674
    8. '_' → logprob: -6.241032123565674
    9. 'urrent' → logprob: -6.241032123565674
    10. ' ' → logprob: -6.991032123565674

Token 27: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.31720107793807983
    2. '[' → logprob: -1.3172011375427246
    3. '[s' → logprob: -6.192201137542725
    4. 's' → logprob: -8.067200660705566
    5. ' []' → logprob: -8.067200660705566
    6. ' s' → logprob: -8.192200660705566
    7. '[]' → logprob: -8.317200660705566
    8. '[n' → logprob: -8.442200660705566
    9. ' list' → logprob: -9.067200660705566
    10. '['' → logprob: -9.317200660705566

Token 28: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021942825987935066
    2. '1' → logprob: -4.021942615509033
    3. 's' → logprob: -6.646942615509033
    4. ']' → logprob: -6.771942615509033
    5. 'ord' → logprob: -7.396942615509033
    6. '-' → logprob: -8.396943092346191
    7. '(ord' → logprob: -9.146943092346191
    8. '(s' → logprob: -9.646943092346191
    9. ' ' → logprob: -9.896943092346191
    10. 'n' → logprob: -10.146943092346191

Token 29: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0731368213891983
    2. ',' → logprob: -2.698136806488037
    3. ' ]' → logprob: -5.948136806488037
    4. ')' → logprob: -8.698137283325195
    5. ']*' → logprob: -8.698137283325195
    6. ' ,' → logprob: -9.448137283325195
    7. ' for' → logprob: -9.448137283325195
    8. ' ' → logprob: -10.198137283325195
    9. ']+' → logprob: -10.698137283325195
    10. ']*(' → logprob: -11.948137283325195

Token 30: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011892046313732862
    2. '(n' → logprob: -9.25011920928955
    3. ' n' → logprob: -11.37511920928955
    4. '(' → logprob: -12.25011920928955
    5. '1' → logprob: -12.37511920928955
    6. '	n' → logprob: -14.00011920928955
    7. '2' → logprob: -14.62511920928955
    8. '<n' → logprob: -15.12511920928955
    9. '[n' → logprob: -15.37511920928955
    10. ')n' → logprob: -16.000118255615234

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25971150398254395
    2. ' for' → logprob: -2.884711503982544
    3. 'for' → logprob: -3.009711503982544
    4. ' 
' → logprob: -4.009711265563965
    5. ' ' → logprob: -4.009711265563965
    6. '
' → logprob: -4.134711265563965
    7. '\n' → logprob: -4.134711265563965
    8. '' → logprob: -4.509711265563965
    9. '[' → logprob: -4.884711265563965
    10. '\' → logprob: -5.009711265563965

Token 32: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.109340786933899
    2. 'for' → logprob: -1.234340786933899
    3. ' for' → logprob: -1.609340786933899
    4. ' 
' → logprob: -2.3593406677246094
    5. ' ' → logprob: -3.8593406677246094
    6. '  
' → logprob: -3.9843406677246094
    7. '
' → logprob: -4.734340667724609
    8. ',' → logprob: -4.859340667724609
    9. ',
' → logprob: -4.859340667724609
    10. '' → logprob: -5.484340667724609

Token 33: ' gen' (ID: 3645)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sort' → logprob: -1.2572077512741089
    2. ' ' → logprob: -1.8822077512741089
    3. ' suffix' → logprob: -1.8822077512741089
    4. ' build' → logprob: -2.2572078704833984
    5. ' count' → logprob: -2.6322078704833984
    6. ' classify' → logprob: -2.8822078704833984
    7. ' p' → logprob: -3.5072078704833984
    8. ' get' → logprob: -3.6322078704833984
    9. ' counting' → logprob: -3.7572078704833984
    10. ' prefix' → logprob: -4.132207870483398

Token 34: '_indices' (ID: 43508)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6647705435752869
    2. '_' → logprob: -0.9147705435752869
    3. '_chars' → logprob: -3.7897706031799316
    4. '_tokens' → logprob: -4.414770603179932
    5. '_groups' → logprob: -5.039770603179932
    6. '_keys' → logprob: -5.289770603179932
    7. 'eral' → logprob: -5.414770603179932
    8. '_chunks' → logprob: -5.539770603179932
    9. '_next' → logprob: -5.789770603179932
    10. 'def' → logprob: -5.914770603179932

Token 35: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12099412828683853
    2. '(s' → logprob: -2.7459940910339355
    3. '():' → logprob: -3.1209940910339355
    4. '(n' → logprob: -5.6209940910339355
    5. '(a' → logprob: -8.245994567871094
    6. '(l' → logprob: -8.495994567871094
    7. '(start' → logprob: -8.745994567871094
    8. '(i' → logprob: -8.870994567871094
    9. '(:' → logprob: -9.120994567871094
    10. '()' → logprob: -9.245994567871094

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34898385405540466
    2. '):' → logprob: -1.223983883857727
    3. ')' → logprob: -7.8489837646484375
    4. '):
' → logprob: -9.848983764648438
    5. '(' → logprob: -10.973983764648438
    6. ' ):' → logprob: -11.098983764648438
    7. '[' → logprob: -11.098983764648438
    8. ' ,' → logprob: -11.848983764648438
    9. '(seq' → logprob: -11.973983764648438
    10. ',index' → logprob: -12.348983764648438

Token 37: ' ch' (ID: 549)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.146444633603096
    2. ' key' → logprob: -2.02144455909729
    3. 'i' → logprob: -7.021444797515869
    4. 'k' → logprob: -7.021444797515869
    5. 'idx' → logprob: -8.021444320678711
    6. 'func' → logprob: -8.146444320678711
    7. 'index' → logprob: -8.896444320678711
    8. 'start' → logprob: -9.396444320678711
    9. 'predicate' → logprob: -9.396444320678711
    10. ' i' → logprob: -9.521444320678711

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06477664411067963
    2. '):
' → logprob: -2.939776659011841
    3. ',' → logprob: -4.814776420593262
    4. '):
' → logprob: -6.814776420593262
    5. 'ar' → logprob: -8.814776420593262
    6. ')' → logprob: -8.939776420593262
    7. ' ' → logprob: -9.314776420593262
    8. '):

' → logprob: -10.064776420593262
    9. ' ):' → logprob: -10.314776420593262
    10. '   ' → logprob: -10.314776420593262

Token 39: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8813119530677795
    2. ':' → logprob: -1.0063118934631348
    3. ':
' → logprob: -2.5063118934631348
    4. '):
' → logprob: -2.5063118934631348
    5. '   ' → logprob: -3.1313118934631348
    6. '():' → logprob: -5.381311893463135
    7. ' ' → logprob: -6.006311893463135
    8. ')' → logprob: -6.506311893463135
    9. '():
' → logprob: -6.631311893463135
    10. '
' → logprob: -6.881311893463135

Token 40: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6675845980644226
    2. ' for' → logprob: -1.6675846576690674
    3. ' return' → logprob: -2.0425846576690674
    4. 'return' (adapté à ' return') → logprob: -2.4175846576690674
    5. 'for' → logprob: -2.7925846576690674
    6. ' yield' → logprob: -4.917584419250488
    7. 'yield' → logprob: -5.042584419250488
    8. '    
' → logprob: -6.792584419250488
    9. '    ' → logprob: -7.042584419250488
    10. ' ' → logprob: -7.417584419250488

Token 41: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2037452608346939
    2. ' (' → logprob: -2.3287453651428223
    3. '[i' → logprob: -3.2037453651428223
    4. '(chain' → logprob: -4.328745365142822
    5. '(' → logprob: -4.703745365142822
    6. '(x' → logprob: -5.453745365142822
    7. ' [' → logprob: -5.578745365142822
    8. '[' → logprob: -6.078745365142822
    9. '(k' → logprob: -6.078745365142822
    10. '(filter' → logprob: -6.328745365142822

Token 42: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034622715320438147
    2. 'idx' → logprob: -6.003462314605713
    3. '(i' → logprob: -7.503462314605713
    4. ' i' → logprob: -8.753461837768555
    5. '   ' → logprob: -9.378461837768555
    6. '[i' → logprob: -10.128461837768555
    7. ' ' → logprob: -10.503461837768555
    8. '```' → logprob: -10.878461837768555
    9. 'ix' → logprob: -11.003461837768555
    10. 'j' → logprob: -11.003461837768555

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07891634106636047
    2. 'for' → logprob: -2.578916311264038
    3. ' ' → logprob: -11.453916549682617
    4. '	for' → logprob: -11.453916549682617
    5. '   ' → logprob: -12.828916549682617
    6. '  ' → logprob: -13.078916549682617
    7. '    ' → logprob: -15.578916549682617
    8. 'i' → logprob: -15.578916549682617
    9. '     ' → logprob: -16.328916549682617
    10. ' i' → logprob: -16.703916549682617

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5526343584060669
    2. 'i' → logprob: -0.9276343584060669
    3. ',' → logprob: -3.5526342391967773
    4. ',i' → logprob: -7.927634239196777
    5. '	i' → logprob: -10.427634239196777
    6. ' ' → logprob: -11.302634239196777
    7. ' in' → logprob: -11.677634239196777
    8. ' ,' → logprob: -12.302634239196777
    9. 's' → logprob: -12.552634239196777
    10. '(i' → logprob: -12.927634239196777

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022467232774943113
    2. ',s' → logprob: -6.377246856689453
    3. ',c' → logprob: -9.252246856689453
    4. ',item' → logprob: -9.502246856689453
    5. ',x' → logprob: -9.627246856689453
    6. ',i' → logprob: -9.627246856689453
    7. ',char' → logprob: -9.627246856689453
    8. ',ch' → logprob: -10.252246856689453
    9. ',v' → logprob: -10.502246856689453
    10. ' ,' → logprob: -11.002246856689453

Token 46: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.052810683846473694
    2. ' x' → logprob: -3.0528106689453125
    3. 'c' → logprob: -6.4278106689453125
    4. 'v' → logprob: -6.6778106689453125
    5. 'ch' → logprob: -8.427810668945312
    6. 'char' → logprob: -8.427810668945312
    7. ' c' → logprob: -8.552810668945312
    8. 'e' → logprob: -8.677810668945312
    9. 'val' → logprob: -8.927810668945312
    10. ' val' → logprob: -9.052810668945312

Token 47: 'a' (ID: 64)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08979946374893188
    2. 'c' → logprob: -2.839799404144287
    3. 'char' → logprob: -4.714799404144287
    4. 'k' → logprob: -4.839799404144287
    5. '_' → logprob: -6.464799404144287
    6. 'key' → logprob: -6.714799404144287
    7. '_,' → logprob: -6.839799404144287
    8. '_char' → logprob: -6.964799404144287
    9. 'val' → logprob: -7.214799404144287
    10. '_x' → logprob: -7.464799404144287

Token 48: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034534833393990993
    2. ',' → logprob: -5.878453254699707
    3. 'in' → logprob: -8.003453254699707
    4. ',)' → logprob: -8.753453254699707
    5. ' in' → logprob: -10.378453254699707
    6. ' )' → logprob: -10.503453254699707
    7. ' ' → logprob: -10.628453254699707
    8. ')=>' → logprob: -12.253453254699707
    9. '=' → logprob: -12.503453254699707
    10. 's' → logprob: -12.503453254699707

Token 49: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029628288000822067
    2. ' b' → logprob: -4.279628276824951
    3. '_)' → logprob: -4.529628276824951
    4. ')' → logprob: -6.279628276824951
    5. 'c' → logprob: -6.404628276824951
    6. '_' → logprob: -7.904628276824951
    7. ' _)' → logprob: -8.02962875366211
    8. ' c' → logprob: -9.65462875366211
    9. '__)' → logprob: -9.77962875366211
    10. ' )' → logprob: -9.90462875366211

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002646735229063779
    2. 'in' → logprob: -8.375265121459961
    3. ' )' → logprob: -10.500265121459961
    4. ' in' → logprob: -12.750265121459961
    5. 'a' → logprob: -14.875265121459961
    6. '   ' → logprob: -15.000265121459961
    7. '),' → logprob: -15.125265121459961
    8. ',' → logprob: -15.250265121459961
    9. '  ' → logprob: -15.250265121459961
    10. ' ' → logprob: -15.375265121459961

Token 51: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6937078237533569
    2. ' in' → logprob: -0.6937078237533569
    3. ')' → logprob: -7.8187079429626465
    4. '<|end|>' → logprob: -10.068707466125488
    5. ' ' → logprob: -10.193707466125488
    6. '```' → logprob: -10.943707466125488
    7. '<|end|>' → logprob: -11.756207466125488
    8. ',' → logprob: -12.193707466125488
    9. 'ine' → logprob: -12.381207466125488
    10. '  ' → logprob: -12.443707466125488

Token 52: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06392131000757217
    2. ' enumerate' → logprob: -2.9389212131500244
    3. 'chain' → logprob: -5.0639214515686035
    4. 'group' → logprob: -6.6889214515686035
    5. 'zip' → logprob: -7.9389214515686035
    6. ')' → logprob: -8.313920974731445
    7. ' chain' → logprob: -8.563920974731445
    8. 'en' → logprob: -9.063920974731445
    9. '(en' → logprob: -9.063920974731445
    10. 'filter' → logprob: -9.813920974731445

Token 53: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.2887473702430725
    2. 'zip' → logprob: -2.0387473106384277
    3. ' zip' → logprob: -2.2887473106384277
    4. '(chain' → logprob: -4.538747310638428
    5. '(seq' → logprob: -5.413747310638428
    6. 'chain' → logprob: -6.163747310638428
    7. ' chain' → logprob: -7.538747310638428
    8. ')' → logprob: -7.663747310638428
    9. 'seq' → logprob: -7.913747310638428
    10. '(' → logprob: -8.788747787475586

Token 54: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.004007165320217609
    2. '(s' → logprob: -5.629007339477539
    3. 'seq' → logprob: -8.004007339477539
    4. 's' → logprob: -10.129007339477539
    5. '(chain' → logprob: -11.129007339477539
    6. '(sequence' → logprob: -11.754007339477539
    7. '(' → logprob: -12.379007339477539
    8. ' (' → logprob: -13.129007339477539
    9. ' seq' → logprob: -13.504007339477539
    10. ')' → logprob: -13.754007339477539

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006129410117864609
    2. '[:-' → logprob: -5.506129264831543
    3. ' ,' → logprob: -6.381129264831543
    4. '[' → logprob: -8.756129264831543
    5. ',ch' → logprob: -8.881129264831543
    6. 's' → logprob: -11.131129264831543
    7. ',s' → logprob: -11.756129264831543
    8. '   ' → logprob: -11.881129264831543
    9. '+' → logprob: -12.381129264831543
    10. 'a' → logprob: -12.881129264831543

Token 56: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.3056361973285675
    2. 's' → logprob: -1.6806361675262451
    3. 'ch' → logprob: -3.180636167526245
    4. 'chain' → logprob: -4.055636405944824
    5. ' seq' → logprob: -5.305636405944824
    6. '   ' → logprob: -5.680636405944824
    7. ' s' → logprob: -5.930636405944824
    8. '[' → logprob: -6.305636405944824
    9. 'it' → logprob: -6.805636405944824
    10. ' ' → logprob: -6.930636405944824

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. '
' → logprob: -13.375006675720215
    3. '1' → logprob: -13.500006675720215
    4. ' ' → logprob: -13.875006675720215
    5. ')' → logprob: -14.250006675720215
    6. '```' → logprob: -15.000006675720215
    7. ' [' → logprob: -15.250006675720215
    8. '+' → logprob: -15.250006675720215
    9. '))' → logprob: -15.375006675720215
    10. '

' → logprob: -15.375006675720215

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.625030517578125
    3. '+' → logprob: -12.875030517578125
    4. '[' → logprob: -13.500030517578125
    5. '
' → logprob: -14.500030517578125
    6. '```' → logprob: -14.875030517578125
    7. 'from' → logprob: -15.250030517578125
    8. 'skip' → logprob: -16.000030517578125
    9. 'is' → logprob: -16.375030517578125
    10. '   ' → logprob: -16.437530517578125

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.578184497309849e-05
    2. ':]' → logprob: -10.125085830688477
    3. ':],' → logprob: -10.375085830688477
    4. ']))' → logprob: -11.625085830688477
    5. '):' → logprob: -13.000085830688477
    6. ' :' → logprob: -13.500085830688477
    7. '']))' → logprob: -14.500085830688477
    8. '():' → logprob: -15.125085830688477
    9. '```' → logprob: -15.375085830688477
    10. ']:' → logprob: -16.125085830688477

Token 60: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.11139097809791565
    2. '])' → logprob: -2.361391067504883
    3. '))' → logprob: -4.611391067504883
    4. ' ' → logprob: -8.361391067504883
    5. ')' → logprob: -8.611391067504883
    6. '],' → logprob: -8.611391067504883
    7. ')))' → logprob: -9.111391067504883
    8. ')])' → logprob: -9.236391067504883
    9. ' ))' → logprob: -9.611391067504883
    10. '   ' → logprob: -9.736391067504883

Token 61: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007251765113323927
    2. 'if' → logprob: -5.132251739501953
    3. ')' → logprob: -7.132251739501953
    4. '   ' → logprob: -8.382251739501953
    5. '    ' → logprob: -9.007251739501953
    6. '       ' → logprob: -9.632251739501953
    7. ' ' → logprob: -10.382251739501953
    8. '        ' → logprob: -10.507251739501953
    9. '      ' → logprob: -11.257251739501953
    10. '  ' → logprob: -11.382251739501953

Token 62: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7120080590248108
    2. 'a' → logprob: -1.462007999420166
    3. ' b' → logprob: -1.712007999420166
    4. 'b' → logprob: -2.337007999420166
    5. ' ' → logprob: -8.462008476257324
    6. '(a' → logprob: -9.212008476257324
    7. ' (' → logprob: -9.712008476257324
    8. '  ' → logprob: -10.837008476257324
    9. '   ' → logprob: -10.962008476257324
    10. '(b' → logprob: -11.837008476257324

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6335093379020691
    2. ' ==' → logprob: -0.7585093379020691
    3. '!=' → logprob: -8.258509635925293
    4. ' ' → logprob: -8.383509635925293
    5. ' !=' → logprob: -8.508509635925293
    6. '=' → logprob: -9.008509635925293
    7. '==
' → logprob: -10.258509635925293
    8. ')==' → logprob: -11.258509635925293
    9. '[' → logprob: -11.383509635925293
    10. ')' → logprob: -11.383509635925293

Token 64: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.6044963598251343
    2. 'b' → logprob: -0.9794963598251343
    3. ' ch' → logprob: -2.979496479034424
    4. ' b' → logprob: -3.604496479034424
    5. ' ' → logprob: -9.729496002197266
    6. 'c' → logprob: -10.854496002197266
    7. '	ch' → logprob: -11.479496002197266
    8. '  ' → logprob: -11.541996002197266
    9. 'h' → logprob: -12.541996002197266
    10. ' ' → logprob: -12.729496002197266

Token 65: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08916791528463364
    2. 'and' → logprob: -2.589167833328247
    3. ')' → logprob: -4.589168071746826
    4. '==' → logprob: -10.589167594909668
    5. ' )' → logprob: -10.714167594909668
    6. '))' → logprob: -12.839167594909668
    7. ' ' → logprob: -13.089167594909668
    8. '=' → logprob: -13.089167594909668
    9. '  ' → logprob: -13.464167594909668
    10. '	and' → logprob: -13.464167594909668

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42871496081352234
    2. ' b' → logprob: -1.0537149906158447
    3. 'a' → logprob: -12.303714752197266
    4. ' a' → logprob: -12.928714752197266
    5. ' ' → logprob: -13.428714752197266
    6. '   ' → logprob: -13.678714752197266
    7. '    ' → logprob: -13.928714752197266
    8. '	b' → logprob: -14.491214752197266
    9. 'ch' → logprob: -14.616214752197266
    10. ' ' → logprob: -14.741214752197266

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1818188726902008
    2. '==' → logprob: -1.8068188428878784
    3. 'ch' → logprob: -7.056818962097168
    4. ' ch' → logprob: -7.431818962097168
    5. ' ' → logprob: -7.931818962097168
    6. ')' → logprob: -9.681818962097168
    7. '=' → logprob: -9.931818962097168
    8. ')==' → logprob: -9.931818962097168
    9. 'c' → logprob: -11.056818962097168
    10. ']==' → logprob: -11.306818962097168

Token 68: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16202771663665771
    2. ' ch' → logprob: -1.9120277166366577
    3. 'a' → logprob: -7.162027835845947
    4. 'c' → logprob: -7.787027835845947
    5. 's' → logprob: -8.537027359008789
    6. ' a' → logprob: -9.162027359008789
    7. ' ' → logprob: -9.412027359008789
    8. ' c' → logprob: -9.912027359008789
    9. '  ' → logprob: -10.287027359008789
    10. ' s' → logprob: -10.474527359008789

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ' )' → logprob: -12.625008583068848
    3. '))' → logprob: -13.000008583068848
    4. ')
' → logprob: -13.125008583068848
    5. '),' → logprob: -15.250008583068848
    6. ')return' → logprob: -15.500008583068848
    7. ')`' → logprob: -15.875008583068848
    8. '})' → logprob: -16.500009536743164
    9. ')}' → logprob: -16.500009536743164
    10. ')

' → logprob: -16.500009536743164

Token 70: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1930602788925171
    2. 'def' → logprob: -3.4430603981018066
    3. 'indices' → logprob: -3.6930603981018066
    4. '
' → logprob: -3.8180603981018066
    5. '#' → logprob: -4.193060398101807
    6. 'c' → logprob: -4.568060398101807
    7. ')' → logprob: -4.818060398101807
    8. 'i' → logprob: -5.068060398101807
    9. ' for' → logprob: -5.193060398101807
    10. 'gen' → logprob: -5.193060398101807

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008558666333556175
    2. ' _' → logprob: -5.883558750152588
    3. ' ch' → logprob: -6.383558750152588
    4. 'i' → logprob: -6.633558750152588
    5. ' c' → logprob: -6.758558750152588
    6. ' ' → logprob: -7.508558750152588
    7. '_' → logprob: -8.50855827331543
    8. ' idx' → logprob: -9.32105827331543
    9. ' n' → logprob: -9.50855827331543
    10. '```' → logprob: -9.57105827331543

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01061975583434105
    2. 'in' → logprob: -4.760619640350342
    3. ',' → logprob: -7.135619640350342
    4. ' ' → logprob: -7.510619640350342
    5. 'n' → logprob: -7.510619640350342
    6. '  ' → logprob: -9.8856201171875
    7. ' ,' → logprob: -10.6356201171875
    8. '	in' → logprob: -11.7606201171875
    9. ' n' → logprob: -12.0106201171875
    10. 's' → logprob: -12.3856201171875

Token 73: ' gen' (ID: 3645)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12702438235282898
    2. 'range' → logprob: -2.1270244121551514
    3. 'gen' → logprob: -10.12702465057373
    4. ' ' → logprob: -11.12702465057373
    5. '	range' → logprob: -12.00202465057373
    6. ' gen' → logprob: -12.12702465057373
    7. ' xrange' → logprob: -12.25202465057373
    8. ' c' → logprob: -12.25202465057373
    9. 'c' → logprob: -12.37702465057373
    10. '(range' → logprob: -13.00202465057373

Token 74: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -5.200166469876422e-06
    2. 'indices' → logprob: -12.875004768371582
    3. '_' → logprob: -13.750004768371582
    4. '"indices' → logprob: -15.000004768371582
    5. '_i' → logprob: -15.375004768371582
    6. '_inds' → logprob: -15.375004768371582
    7. '_ind' → logprob: -15.375004768371582
    8. '_indexes' → logprob: -16.0000057220459
    9. '```' → logprob: -16.8750057220459
    10. 's' → logprob: -16.8750057220459

Token 75: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0005898483213968575
    2. '(' → logprob: -7.750589847564697
    3. ' (' → logprob: -9.750590324401855
    4. '(n' → logprob: -10.250590324401855
    5. 's' → logprob: -10.500590324401855
    6. '(range' → logprob: -10.500590324401855
    7. '(seq' → logprob: -12.750590324401855
    8. '(chain' → logprob: -13.875590324401855
    9. '(sequence' → logprob: -13.875590324401855
    10. '((' → logprob: -14.000590324401855

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022555960342288017
    2. ' ,' → logprob: -4.022555828094482
    3. '(' → logprob: -6.397555828094482
    4. ','' → logprob: -7.147555828094482
    5. ',s' → logprob: -7.647555828094482
    6. '(s' → logprob: -7.647555828094482
    7. ' ' → logprob: -8.77255630493164
    8. ' ,'' → logprob: -8.77255630493164
    9. 's' → logprob: -9.02255630493164
    10. '('' → logprob: -9.52255630493164

Token 77: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9563263654708862
    2. 's' → logprob: -1.3313263654708862
    3. ''s' → logprob: -1.3313263654708862
    4. ' s' → logprob: -3.206326484680176
    5. ' '' → logprob: -3.581326484680176
    6. '')' → logprob: -4.956326484680176
    7. ')' → logprob: -5.456326484680176
    8. ' ' → logprob: -6.706326484680176
    9. ''S' → logprob: -6.956326484680176
    10. ''"' → logprob: -6.956326484680176

Token 78: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37320631742477417
    2. ')' → logprob: -2.873206377029419
    3. '_' → logprob: -2.998206377029419
    4. '0' → logprob: -3.498206377029419
    5. '1' → logprob: -3.748206377029419
    6. ''' → logprob: -4.24820613861084
    7. 'b' → logprob: -4.24820613861084
    8. 'A' → logprob: -4.37320613861084
    9. 'c' → logprob: -4.49820613861084
    10. '('' → logprob: -4.49820613861084

Token 79: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.1868181675672531
    2. 'R' → logprob: -2.0618181228637695
    3. '')' → logprob: -3.8118181228637695
    4. ''' → logprob: -5.1868181228637695
    5. ''):
' → logprob: -5.1868181228637695
    6. 'L' → logprob: -5.8118181228637695
    7. ''):
' → logprob: -6.8118181228637695
    8. 'U' → logprob: -7.1868181228637695
    9. 'B' → logprob: -7.4368181228637695
    10. 'C' → logprob: -7.8118181228637695

Token 80: '   ' (ID: 271)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.49492472410202026
    2. '   ' → logprob: -1.494924783706665
    3. 'c' → logprob: -1.994924783706665
    4. '    ' → logprob: -4.619924545288086
    5. ' if' → logprob: -4.994924545288086
    6. ' ' → logprob: -5.244924545288086
    7. '       ' → logprob: -5.369924545288086
    8. ' n' → logprob: -7.369924545288086
    9. '	c' → logprob: -7.619924545288086
    10. 'if' → logprob: -8.119924545288086

Token 81: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.08928839862346649
    2. ' c' → logprob: -2.9642884731292725
    3. 'if' → logprob: -3.8392884731292725
    4. '   ' → logprob: -5.089288234710693
    5. ' if' → logprob: -5.339288234710693
    6. 'for' → logprob: -7.214288234710693
    7. ' for' → logprob: -8.464288711547852
    8. 'while' → logprob: -9.589288711547852
    9. '    ' → logprob: -9.714288711547852
    10. 'i' → logprob: -9.714288711547852

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.3954463510308415e-05
    2. '[' → logprob: -9.875054359436035
    3. 'i' → logprob: -14.125054359436035
    4. '[I' → logprob: -14.250054359436035
    5. '[c' → logprob: -15.500054359436035
    6. ' [' → logprob: -16.00005340576172
    7. '[++' → logprob: -16.12505340576172
    8. '```' → logprob: -16.25005340576172
    9. '[int' → logprob: -16.37505340576172
    10. '[in' → logprob: -16.50005340576172

Token 83: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01791813038289547
    2. '+' → logprob: -4.517918109893799
    3. ']+=' → logprob: -5.017918109893799
    4. ']+' → logprob: -8.767918586730957
    5. ' ]' → logprob: -10.142918586730957
    6. '+]' → logprob: -11.392918586730957
    7. ' +' → logprob: -12.142918586730957
    8. ']=' → logprob: -12.517918586730957
    9. '-' → logprob: -13.017918586730957
    10. '2' → logprob: -13.267918586730957

Token 84: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -9.500086784362793
    3. '0' → logprob: -12.375086784362793
    4. '2' → logprob: -12.625086784362793
    5. '<|end|>' → logprob: -13.812586784362793
    6. '```' → logprob: -13.875086784362793
    7. '   ' → logprob: -14.125086784362793
    8. '  ' → logprob: -15.062586784362793
    9. '<|end|>' → logprob: -16.125085830688477
    10. ')' → logprob: -16.375085830688477

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0794302299618721
    2. ']+=' → logprob: -2.579430341720581
    3. ']=' → logprob: -8.07943058013916
    4. ' ]' → logprob: -8.82943058013916
    5. ']+' → logprob: -9.57943058013916
    6. ']-' → logprob: -12.32943058013916
    7. '`]' → logprob: -13.32943058013916
    8. '[' → logprob: -14.07943058013916
    9. '+]' → logprob: -14.20443058013916
    10. '```' → logprob: -14.32943058013916

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.744648277759552
    2. '+=' → logprob: -0.994648277759552
    3. ' +=' → logprob: -2.1196482181549072
    4. ' =' → logprob: -3.3696482181549072
    5. ']+=' → logprob: -7.994648456573486
    6. '+' → logprob: -8.869647979736328
    7. '*=' → logprob: -9.744647979736328
    8. ' ' → logprob: -9.744647979736328
    9. ' *=' → logprob: -10.494647979736328
    10. ' |=' → logprob: -10.744647979736328

Token 87: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008833196945488453
    2. 'max' → logprob: -5.008833408355713
    3. ' c' → logprob: -6.508833408355713
    4. ' max' → logprob: -8.133832931518555
    5. ' ' → logprob: -9.508832931518555
    6. 'min' → logprob: -9.883832931518555
    7. 'acc' → logprob: -10.008832931518555
    8. '2' → logprob: -10.133832931518555
    9. '   ' → logprob: -10.508832931518555
    10. '3' → logprob: -10.633832931518555

Token 88: 'lambda' (ID: 35280)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.041317567229270935
    2. ' c' → logprob: -3.2913174629211426
    3. '   ' → logprob: -6.416317462921143
    4. ')' → logprob: -8.1663179397583
    5. ' ' → logprob: -8.1663179397583
    6. 'acc' → logprob: -8.7913179397583
    7. '2' → logprob: -8.9163179397583
    8. '3' → logprob: -9.0413179397583
    9. '  ' → logprob: -9.1663179397583
    10. '1' → logprob: -9.1663179397583

Token 89: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.15284694731235504
    2. ' x' → logprob: -2.4028470516204834
    3. ' lambda' → logprob: -3.6528470516204834
    4. 'c' → logprob: -4.902846813201904
    5. ':' → logprob: -5.402846813201904
    6. ' n' → logprob: -5.902846813201904
    7. ' s' → logprob: -6.402846813201904
    8. ' ' → logprob: -6.402846813201904
    9. 'x' → logprob: -6.527846813201904
    10. 'lambda' → logprob: -7.277846813201904

Token 90: ',b' (ID: 17568)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22310768067836761
    2. ',' → logprob: -2.5981075763702393
    3. ',c' → logprob: -3.3481075763702393
    4. ' :' → logprob: -3.4731075763702393
    5. '=' → logprob: -3.9731075763702393
    6. ' c' → logprob: -3.9731075763702393
    7. '=c' → logprob: -4.848107814788818
    8. ':c' → logprob: -5.598107814788818
    9. 'c' → logprob: -6.098107814788818
    10. '=lambda' → logprob: -6.223107814788818

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09486433118581772
    2. ' :' → logprob: -2.5948643684387207
    3. ':c' → logprob: -4.844864368438721
    4. ',c' → logprob: -5.719864368438721
    5. ',' → logprob: -5.969864368438721
    6. 'a' → logprob: -7.969864368438721
    7. 'c' → logprob: -7.969864368438721
    8. '=' → logprob: -8.594863891601562
    9. ':a' → logprob: -8.594863891601562
    10. ':
' → logprob: -9.219863891601562

Token 92: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9925326704978943
    2. ' max' → logprob: -1.242532730102539
    3. 'a' → logprob: -1.617532730102539
    4. ' c' → logprob: -2.492532730102539
    5. 'c' → logprob: -3.492532730102539
    6. 'max' → logprob: -3.992532730102539
    7. ' ' → logprob: -5.742532730102539
    8. ' b' → logprob: -6.117532730102539
    9. ' lambda' → logprob: -6.867532730102539
    10. ' (' → logprob: -7.242532730102539

Token 93: '+b' (ID: 76609)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5186561942100525
    2. '+b' → logprob: -1.8936562538146973
    3. '+c' → logprob: -2.1436562538146973
    4. '+' → logprob: -2.8936562538146973
    5. ' if' → logprob: -3.0186562538146973
    6. 'c' → logprob: -4.018656253814697
    7. ' c' → logprob: -5.268656253814697
    8. 'b' → logprob: -6.268656253814697
    9. 'if' → logprob: -6.518656253814697
    10. '*c' → logprob: -6.893656253814697

Token 94: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.6279177665710449
    2. '(c' → logprob: -0.8779177665710449
    3. ' (' → logprob: -3.627917766571045
    4. '(' → logprob: -5.002917766571045
    5. ')' → logprob: -5.502917766571045
    6. ' if' → logprob: -6.002917766571045
    7. ' )(' → logprob: -6.252917766571045
    8. '+' → logprob: -6.377917766571045
    9. ' +' → logprob: -6.502917766571045
    10. '   ' → logprob: -7.002917766571045

Token 95: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005489164497703314
    2. ' c' → logprob: -5.255489349365234
    3. '   ' → logprob: -9.255489349365234
    4. '1' → logprob: -9.630489349365234
    5. ' ' → logprob: -11.005489349365234
    6. ')c' → logprob: -11.255489349365234
    7. '	c' → logprob: -11.255489349365234
    8. '2' → logprob: -11.380489349365234
    9. '3' → logprob: -11.755489349365234
    10. '
' → logprob: -12.380489349365234

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.958325295476243e-05
    2. '   ' → logprob: -10.125079154968262
    3. 'i' → logprob: -11.000079154968262
    4. '[' → logprob: -11.750079154968262
    5. ' ' → logprob: -12.125079154968262
    6. ' [' → logprob: -12.875079154968262
    7. ',i' → logprob: -13.250079154968262
    8. ' i' → logprob: -13.625079154968262
    9. '  ' → logprob: -14.000079154968262
    10. ')[' → logprob: -14.125079154968262

Token 97: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029779991135001183
    2. ']+' → logprob: -4.02977991104126
    3. ' +' → logprob: -5.02977991104126
    4. ']' → logprob: -6.27977991104126
    5. '   ' → logprob: -6.77977991104126
    6. '+i' → logprob: -7.52977991104126
    7. ' ' → logprob: -7.77977991104126
    8. '  ' → logprob: -8.404780387878418
    9. '1' → logprob: -8.654780387878418
    10. '],' → logprob: -9.029780387878418

Token 98: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0346505381166935
    2. ' c' → logprob: -3.4096505641937256
    3. '1' → logprob: -7.6596503257751465
    4. ' ' → logprob: -8.159650802612305
    5. '   ' → logprob: -9.159650802612305
    6. '2' → logprob: -10.034650802612305
    7. '  ' → logprob: -10.409650802612305
    8. ')c' → logprob: -10.909650802612305
    9. '```' → logprob: -11.784650802612305
    10. '	c' → logprob: -11.909650802612305

Token 99: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15865860879421234
    2. '[i' → logprob: -2.533658504486084
    3. '+' → logprob: -2.783658504486084
    4. ' i' → logprob: -5.658658504486084
    5. '+i' → logprob: -7.033658504486084
    6. '   ' → logprob: -7.908658504486084
    7. ' ' → logprob: -8.658658981323242
    8. '[' → logprob: -8.783658981323242
    9. ']+' → logprob: -9.158658981323242
    10. ']' → logprob: -9.533658981323242

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010409059468656778
    2. ' +' → logprob: -7.376040935516357
    3. '+i' → logprob: -9.0010404586792
    4. ']+' → logprob: -9.0010404586792
    5. '1' → logprob: -9.3760404586792
    6. '   ' → logprob: -10.7510404586792
    7. '])' → logprob: -10.8760404586792
    8. 'i' → logprob: -11.3760404586792
    9. ' ' → logprob: -11.3760404586792
    10. ']' → logprob: -11.7510404586792

Token 101: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022415895364247262
    2. '2' → logprob: -9.000224113464355
    3. ' ' → logprob: -9.250224113464355
    4. '   ' → logprob: -13.250224113464355
    5. '0' → logprob: -13.625224113464355
    6. '  ' → logprob: -14.687724113464355
    7. '```' → logprob: -15.812724113464355
    8. '１' → logprob: -15.937724113464355
    9. '۱' → logprob: -15.937724113464355
    10. '१' → logprob: -16.187725067138672

Token 102: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2531251013278961
    2. '])' → logprob: -1.5031250715255737
    3. ')+' → logprob: -7.878125190734863
    4. ')
' → logprob: -8.628125190734863
    5. ' )' → logprob: -8.628125190734863
    6. '+' → logprob: -8.878125190734863
    7. '})' → logprob: -9.878125190734863
    8. '))' → logprob: -10.128125190734863
    9. ']' → logprob: -10.253125190734863
    10. '])
' → logprob: -10.503125190734863

Token 103: ' ;' (ID: 4605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3017345368862152
    2. '<|end|>' → logprob: -2.051734447479248
    3. '[i' → logprob: -2.426734447479248
    4. ']' → logprob: -4.551734447479248
    5. '[
' → logprob: -4.926734447479248
    6. ')' → logprob: -4.926734447479248
    7. '[n' → logprob: -5.051734447479248
    8. '<|end|>' → logprob: -6.051734447479248
    9. '[]' → logprob: -6.426734447479248
    10. ' ' → logprob: -6.426734447479248

Token 106: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002198432805016637
    2. ' +' → logprob: -7.502198219299316
    3. ']' → logprob: -7.627198219299316
    4. ']+=' → logprob: -7.877198219299316
    5. '+=' → logprob: -8.127198219299316
    6. ']+' → logprob: -9.002198219299316
    7. ' +=' → logprob: -9.252198219299316
    8. '-' → logprob: -9.502198219299316
    9. '   ' → logprob: -10.002198219299316
    10. '+]' → logprob: -10.252198219299316

Token 107: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7641180753707886
    2. '<|end|>' → logprob: -0.8891180753707886
    3. ' ' → logprob: -2.889118194580078
    4. '0' → logprob: -3.514118194580078
    5. '1' → logprob: -4.764118194580078
    6. '=' → logprob: -5.264118194580078
    7. ' +' → logprob: -5.639118194580078
    8. '2' → logprob: -5.764118194580078
    9. ')' → logprob: -5.889118194580078
    10. 'c' → logprob: -6.139118194580078

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01270117238163948
    2. ' ' → logprob: -4.387701034545898
    3. '1' → logprob: -8.887701034545898
    4. 'c' → logprob: -10.637701034545898
    5. '-' → logprob: -11.887701034545898
    6. '2' → logprob: -12.012701034545898
    7. '  ' → logprob: -12.137701034545898
    8. ' -' → logprob: -13.325201034545898
    9. ' c' → logprob: -13.575201034545898
    10. '   ' → logprob: -14.012701034545898

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001402025343850255
    2. ' ' → logprob: -6.626401901245117
    3. '1' → logprob: -10.501401901245117
    4. 'c' → logprob: -10.626401901245117
    5. '-' → logprob: -11.626401901245117
    6. '  ' → logprob: -12.376401901245117
    7. '2' → logprob: -12.876401901245117
    8. 'lambda' → logprob: -14.188901901245117
    9. ' -' → logprob: -14.251401901245117
    10. ' c' → logprob: -14.438901901245117

Token 110: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39357128739356995
    2. '<|end|>' → logprob: -1.2685712575912476
    3. '+' → logprob: -3.643571376800537
    4. ')' → logprob: -4.518571376800537
    5. ' 
' → logprob: -6.518571376800537
    6. ',' → logprob: -6.893571376800537
    7. '[' → logprob: -7.393571376800537
    8. '
' → logprob: -7.643571376800537
    9. '#' → logprob: -7.768571376800537
    10. 'i' → logprob: -7.893571376800537

Token 111: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5012494325637817
    2. ')' → logprob: -1.5012494325637817
    3. '<|end|>' → logprob: -2.251249313354492
    4. '+' → logprob: -3.126249313354492
    5. '[' → logprob: -4.626249313354492
    6. ',' → logprob: -6.501249313354492
    7. ' )' → logprob: -6.626249313354492
    8. 'c' → logprob: -6.626249313354492
    9. '#' → logprob: -7.001249313354492
    10. '```' → logprob: -7.376249313354492

Token 112: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05607488751411438
    2. 'i' → logprob: -2.931074857711792
    3. ' j' → logprob: -7.556075096130371
    4. ' c' → logprob: -8.556075096130371
    5. ' ' → logprob: -8.681075096130371
    6. 'j' → logprob: -10.056075096130371
    7. ' _' → logprob: -10.181075096130371
    8. '_' → logprob: -10.493575096130371
    9. ' x' → logprob: -10.493575096130371
    10. 'c' → logprob: -11.118575096130371

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04949018731713295
    2. 'in' → logprob: -3.049490213394165
    3. '+' → logprob: -7.174489974975586
    4. ',' → logprob: -9.924489974975586
    5. ' ' → logprob: -10.174489974975586
    6. '  ' → logprob: -11.424489974975586
    7. '2' → logprob: -12.049489974975586
    8. '1' → logprob: -12.174489974975586
    9. 'n' → logprob: -12.674489974975586
    10. '   ' → logprob: -12.674489974975586

Token 114: ' gen' (ID: 3645)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.13128940761089325
    2. ' gen' → logprob: -2.131289482116699
    3. 'range' → logprob: -6.131289482116699
    4. ' range' → logprob: -6.256289482116699
    5. ' ' → logprob: -9.1312894821167
    6. '(gen' → logprob: -10.5062894821167
    7. '	gen' → logprob: -11.1312894821167
    8. 'chain' → logprob: -11.1312894821167
    9. '[' → logprob: -11.2562894821167
    10. 're' → logprob: -11.3812894821167

Token 115: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0005718595930375159
    2. 'c' → logprob: -8.375572204589844
    3. 'indices' → logprob: -8.875572204589844
    4. 's' → logprob: -9.000572204589844
    5. 'd' → logprob: -11.000572204589844
    6. 't' → logprob: -11.250572204589844
    7. 'gen' → logprob: -11.875572204589844
    8. 'put' → logprob: -12.375572204589844
    9. 'ed' → logprob: -12.500572204589844
    10. 'Indices' → logprob: -12.625572204589844

Token 116: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.492120155598968e-05
    2. 's' → logprob: -10.000064849853516
    3. ' (' → logprob: -11.250064849853516
    4. '(' → logprob: -12.250064849853516
    5. '(c' → logprob: -13.875064849853516
    6. '```' → logprob: -16.125064849853516
    7. '(chain' → logprob: -16.125064849853516
    8. '(
' → logprob: -16.500064849853516
    9. ' s' → logprob: -16.500064849853516
    10. '(n' → logprob: -16.875064849853516

Token 117: '[::-' (ID: 159890)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009178895270451903
    2. ' ,' → logprob: -7.500917911529541
    3. '',' → logprob: -8.875917434692383
    4. 's' → logprob: -9.000917434692383
    5. ','' → logprob: -10.250917434692383
    6. ',s' → logprob: -10.750917434692383
    7. ' s' → logprob: -11.000917434692383
    8. ''s' → logprob: -11.375917434692383
    9. '('' → logprob: -12.500917434692383
    10. '(s' → logprob: -12.750917434692383

Token 118: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45220455527305603
    2. '')' → logprob: -2.327204465866089
    3. '('' → logprob: -2.952204465866089
    4. ')' → logprob: -3.202204465866089
    5. ',' → logprob: -3.452204465866089
    6. ''s' → logprob: -3.452204465866089
    7. '',' → logprob: -3.702204465866089
    8. ''),' → logprob: -3.827204465866089
    9. '),' → logprob: -4.077204704284668
    10. 's' → logprob: -4.827204704284668

Token 119: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0245084036141634
    2. ' ,' → logprob: -4.274508476257324
    3. '(),' → logprob: -4.649508476257324
    4. '],' → logprob: -8.149508476257324
    5. '),' → logprob: -8.524508476257324
    6. 's' → logprob: -9.649508476257324
    7. '',' → logprob: -9.774508476257324
    8. ' ' → logprob: -10.524508476257324
    9. ' s' → logprob: -10.524508476257324
    10. '   ' → logprob: -11.274508476257324

Token 120: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.2446081042289734
    2. ''' → logprob: -1.7446081638336182
    3. ' '' → logprob: -3.619608163833618
    4. ''S' → logprob: -4.369607925415039
    5. ''U' → logprob: -6.869607925415039
    6. ''I' → logprob: -7.494607925415039
    7. ''A' → logprob: -7.869607925415039
    8. ''C' → logprob: -7.869607925415039
    9. ''O' → logprob: -9.244607925415039
    10. ' ' → logprob: -9.369607925415039

Token 121: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.023411782458424568
    2. 'R' → logprob: -3.773411750793457
    3. 'LL' → logprob: -10.398411750793457
    4. ' L' → logprob: -11.210911750793457
    5. ''L' → logprob: -11.398411750793457
    6. ''' → logprob: -11.585911750793457
    7. 'S' → logprob: -11.773411750793457
    8. 'r' → logprob: -11.835911750793457
    9. '

' → logprob: -12.023411750793457
    10. 'RL' → logprob: -12.023411750793457

Token 122: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.015939349308609962
    2. ''):' → logprob: -4.265939235687256
    3. '):
' → logprob: -6.640939235687256
    4. '')' → logprob: -8.640939712524414
    5. '')[' → logprob: -9.890939712524414
    6. '   ' → logprob: -9.890939712524414
    7. '[::-' → logprob: -10.140939712524414
    8. '):' → logprob: -10.765939712524414
    9. ':' → logprob: -10.765939712524414
    10. ''):
' → logprob: -10.765939712524414

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06458880007266998
    2. 'c' → logprob: -3.564588785171509
    3. ' c' → logprob: -3.564588785171509
    4. ' n' → logprob: -5.814589023590088
    5. 'n' → logprob: -6.064589023590088
    6. ' ' → logprob: -8.93958854675293
    7. ' for' → logprob: -9.06458854675293
    8. '  ' → logprob: -9.56458854675293
    9. 'for' → logprob: -9.93958854675293
    10. '    ' → logprob: -10.18958854675293

Token 124: ' j' (ID: 441)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.43852466344833374
    2. 'c' → logprob: -1.0635247230529785
    3. '   ' → logprob: -4.6885247230529785
    4. 'n' → logprob: -8.68852424621582
    5. ' ' → logprob: -9.18852424621582
    6. ' n' → logprob: -9.18852424621582
    7. '  ' → logprob: -10.31352424621582
    8. '
' → logprob: -10.68852424621582
    9. ' idx' → logprob: -10.68852424621582
    10. 'idx' → logprob: -11.06352424621582

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029986396431922913
    2. ' =' → logprob: -3.5299863815307617
    3. '=n' → logprob: -8.654986381530762
    4. 'n' → logprob: -9.904986381530762
    5. '=len' → logprob: -11.654986381530762
    6. '=i' → logprob: -14.154986381530762
    7. '=j' → logprob: -14.529986381530762
    8. ')' → logprob: -15.404986381530762
    9. '=-' → logprob: -15.404986381530762
    10. '```' → logprob: -15.529986381530762

Token 126: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001052103703841567
    2. 'len' → logprob: -7.001051902770996
    3. ' n' → logprob: -9.126051902770996
    4. '   ' → logprob: -10.876051902770996
    5. '(n' → logprob: -12.376051902770996
    6. ' ' → logprob: -13.001051902770996
    7. '	n' → logprob: -13.751051902770996
    8. '  ' → logprob: -14.126051902770996
    9. '[n' → logprob: -14.376051902770996
    10. '```' → logprob: -14.751051902770996

Token 127: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007282765582203865
    2. ' -' → logprob: -5.007282733917236
    3. '-i' → logprob: -7.507282733917236
    4. '1' → logprob: -11.507283210754395
    5. 'i' → logprob: -12.132283210754395
    6. '2' → logprob: -13.632283210754395
    7. ' ' → logprob: -14.382283210754395
    8. '-(' → logprob: -15.382283210754395
    9. '   ' → logprob: -16.007282257080078
    10. '```' → logprob: -16.382282257080078

Token 128: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7650909423828125
    2. '2' → logprob: -1.0150909423828125
    3. 'i' → logprob: -1.7650909423828125
    4. '1' → logprob: -7.0150909423828125
    5. '(i' → logprob: -9.140090942382812
    6. ' i' → logprob: -9.765090942382812
    7. 'len' → logprob: -10.390090942382812
    8. ' ' → logprob: -10.640090942382812
    9. '4' → logprob: -11.015090942382812
    10. '(' → logprob: -11.640090942382812

Token 129: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12431555986404419
    2. ' -' → logprob: -2.4993155002593994
    3. '-i' → logprob: -3.3743155002593994
    4. 'i' → logprob: -7.6243157386779785
    5. ' i' → logprob: -11.99931526184082
    6. '2' → logprob: -12.12431526184082
    7. '   ' → logprob: -12.49931526184082
    8. ' ' → logprob: -12.62431526184082
    9. '-(' → logprob: -12.62431526184082
    10. '-
' → logprob: -13.74931526184082

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041473351418972015
    2. 'c' → logprob: -3.291473388671875
    3. '
' → logprob: -5.916473388671875
    4. ' c' → logprob: -8.166473388671875
    5. ';' → logprob: -8.791473388671875
    6. '    
' → logprob: -8.791473388671875
    7. '  ' → logprob: -9.791473388671875
    8. ' ' → logprob: -10.166473388671875
    9. '-' → logprob: -11.166473388671875
    10. 'for' → logprob: -12.291473388671875

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011487611569464207
    2. 'c' → logprob: -4.6364874839782715
    3. ' c' → logprob: -6.3864874839782715
    4. '
' → logprob: -11.38648796081543
    5. '    
' → logprob: -11.63648796081543
    6. ',' → logprob: -12.01148796081543
    7. ';' → logprob: -12.76148796081543
    8. '  ' → logprob: -12.76148796081543
    9. ' ' → logprob: -13.01148796081543
    10. ')' → logprob: -13.01148796081543

Token 132: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.1500692516565323
    2. '   ' → logprob: -2.400069236755371
    3. ' c' → logprob: -3.025069236755371
    4. ' ' → logprob: -10.900069236755371
    5. '	c' → logprob: -11.025069236755371
    6. '```' → logprob: -11.275069236755371
    7. '  ' → logprob: -11.650069236755371
    8. '
' → logprob: -11.775069236755371
    9. '    
' → logprob: -12.025069236755371
    10. '    ' → logprob: -12.650069236755371

Token 133: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001254693343071267
    2. '[' → logprob: -9.750125885009766
    3. '[c' → logprob: -10.125125885009766
    4. '[n' → logprob: -11.375125885009766
    5. 'j' → logprob: -11.750125885009766
    6. '[i' → logprob: -13.875125885009766
    7. ']' → logprob: -14.000125885009766
    8. 'c' → logprob: -14.000125885009766
    9. '=' → logprob: -14.375125885009766
    10. '][' → logprob: -14.500125885009766

Token 134: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.049140799790620804
    2. ']' → logprob: -3.049140691757202
    3. '+' → logprob: -8.174140930175781
    4. '   ' → logprob: -9.299140930175781
    5. '-=' → logprob: -9.799140930175781
    6. ']=' → logprob: -10.299140930175781
    7. ' -' → logprob: -10.299140930175781
    8. ']-' → logprob: -11.174140930175781
    9. '=' → logprob: -11.174140930175781
    10. ']+=' → logprob: -12.049140930175781

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014013137842994183
    2. '1' → logprob: -9.500140190124512
    3. ' ' → logprob: -9.750140190124512
    4. '   ' → logprob: -12.625140190124512
    5. '3' → logprob: -13.125140190124512
    6. '```' → logprob: -13.875140190124512
    7. '  ' → logprob: -16.375139236450195
    8. '    ' → logprob: -16.500139236450195
    9. '-' → logprob: -16.625139236450195
    10. ']' → logprob: -17.000139236450195

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023846338444855064
    2. ']=' → logprob: -8.750238418579102
    3. ' ]' → logprob: -10.375238418579102
    4. '=' → logprob: -11.000238418579102
    5. ']+=' → logprob: -11.125238418579102
    6. ')' → logprob: -11.750238418579102
    7. '   ' → logprob: -11.875238418579102
    8. ']=(' → logprob: -14.875238418579102
    9. ' ' → logprob: -15.125238418579102
    10. ']+' → logprob: -15.250238418579102

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026334552094340324
    2. ' =' → logprob: -3.651334524154663
    3. '+=' → logprob: -10.901334762573242
    4. ' +=' → logprob: -11.651334762573242
    5. ']' → logprob: -13.026334762573242
    6. ')' → logprob: -13.026334762573242
    7. ' ' → logprob: -13.901334762573242
    8. '   ' → logprob: -14.276334762573242
    9. ']=' → logprob: -14.776334762573242
    10. ')=' → logprob: -15.901334762573242

Token 138: ' (' (ID: 350)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06228707358241081
    2. ' (' → logprob: -3.4372870922088623
    3. '(c' → logprob: -4.187286853790283
    4. 'c' → logprob: -5.062286853790283
    5. '(' → logprob: -5.187286853790283
    6. '(l' → logprob: -6.937286853790283
    7. '(max' → logprob: -9.562287330627441
    8. 'lambda' → logprob: -10.312287330627441
    9. ' c' → logprob: -11.437287330627441
    10. '(s' → logprob: -12.062287330627441

Token 139: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00020973898062948138
    2. '(lambda' → logprob: -8.50020980834961
    3. ' lambda' → logprob: -12.12520980834961
    4. '=lambda' → logprob: -14.62520980834961
    5. 'c' → logprob: -15.25020980834961
    6. 'lam' → logprob: -18.50020980834961
    7. '_lambda' → logprob: -18.62520980834961
    8. '   ' → logprob: -18.87520980834961
    9. '.lambda' → logprob: -19.87520980834961
    10. ')' → logprob: -20.12520980834961

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16022737324237823
    2. ' a' → logprob: -1.9102274179458618
    3. '	a' → logprob: -13.16022777557373
    4. 'b' → logprob: -14.66022777557373
    5. ' ' → logprob: -15.16022777557373
    6. '   ' → logprob: -15.41022777557373
    7. ' b' → logprob: -15.66022777557373
    8. ',a' → logprob: -16.410226821899414
    9. '  ' → logprob: -16.660226821899414
    10. '    ' → logprob: -16.910226821899414

Token 141: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.03325200080871582
    2. ',a' → logprob: -3.533252000808716
    3. ',' → logprob: -6.158251762390137
    4. 'a' → logprob: -7.158251762390137
    5. ',c' → logprob: -7.533251762390137
    6. ' ,' → logprob: -10.283251762390137
    7. 'b' → logprob: -10.908251762390137
    8. ' a' → logprob: -12.408251762390137
    9. ',x' → logprob: -12.783251762390137
    10. '(a' → logprob: -13.158251762390137

Token 142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3199920178740285e-05
    2. ' :' → logprob: -10.875022888183594
    3. 'a' → logprob: -13.000022888183594
    4. ':a' → logprob: -13.750022888183594
    5. ':b' → logprob: -14.500022888183594
    6. 'b' → logprob: -14.750022888183594
    7. ':c' → logprob: -17.125022888183594
    8. ',' → logprob: -17.500022888183594
    9. ':return' → logprob: -17.625022888183594
    10. ':
' → logprob: -17.875022888183594

Token 143: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2536901533603668
    2. ' a' → logprob: -1.5036901235580444
    3. 'b' → logprob: -6.503690242767334
    4. ' b' → logprob: -8.253689765930176
    5. '   ' → logprob: -15.003689765930176
    6. ' ' → logprob: -15.503689765930176
    7. '	a' → logprob: -15.628689765930176
    8. 'c' → logprob: -15.753689765930176
    9. ')a' → logprob: -16.128690719604492
    10. ')' → logprob: -16.253690719604492

Token 144: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.007207490503787994
    2. ',b' → logprob: -5.38220739364624
    3. 'b' → logprob: -6.00720739364624
    4. ',' → logprob: -9.632207870483398
    5. '+' → logprob: -10.007207870483398
    6. 'a' → logprob: -12.132207870483398
    7. ' +' → logprob: -13.007207870483398
    8. '[b' → logprob: -13.382207870483398
    9. ' b' → logprob: -14.507207870483398
    10. '+a' → logprob: -14.507207870483398

Token 145: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -4.584861744660884e-05
    2. ' )(' → logprob: -10.750045776367188
    3. '(c' → logprob: -11.750045776367188
    4. ',' → logprob: -12.000045776367188
    5. ')c' → logprob: -12.500045776367188
    6. ')' → logprob: -13.125045776367188
    7. ',c' → logprob: -13.375045776367188
    8. ')(
' → logprob: -13.375045776367188
    9. '   ' → logprob: -14.250045776367188
    10. 'c' → logprob: -14.750045776367188

Token 146: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004130344314035028
    2. ' c' → logprob: -8.000412940979004
    3. '   ' → logprob: -9.500412940979004
    4. ')c' → logprob: -14.000412940979004
    5. '
' → logprob: -14.375412940979004
    6. '	c' → logprob: -15.000412940979004
    7. '  ' → logprob: -15.125412940979004
    8. ' ' → logprob: -15.750412940979004
    9. '0' → logprob: -16.00041389465332
    10. '(c' → logprob: -16.50041389465332

Token 147: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.3822154111694545e-05
    2. 'j' → logprob: -10.625043869018555
    3. '[n' → logprob: -11.125043869018555
    4. '[c' → logprob: -12.875043869018555
    5. '[' → logprob: -13.875043869018555
    6. ',j' → logprob: -14.625043869018555
    7. '[i' → logprob: -15.125043869018555
    8. ' j' → logprob: -15.625043869018555
    9. '[
' → logprob: -15.750043869018555
    10. '   ' → logprob: -16.000043869018555

Token 148: '],' (ID: 2155)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002387018030276522
    2. 'j' → logprob: -8.750238418579102
    3. '],' → logprob: -10.250238418579102
    4. ']' → logprob: -10.500238418579102
    5. ' -' → logprob: -12.375238418579102
    6. '[j' → logprob: -13.000238418579102
    7. '[' → logprob: -13.125238418579102
    8. '```' → logprob: -13.125238418579102
    9. '   ' → logprob: -13.250238418579102
    10. ' ' → logprob: -13.500238418579102

Token 149: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42879584431648254
    2. ' c' → logprob: -1.0537958145141602
    3. '   ' → logprob: -9.42879581451416
    4. ' ' → logprob: -12.05379581451416
    5. '  ' → logprob: -12.55379581451416
    6. '    ' → logprob: -13.17879581451416
    7. '	c' → logprob: -13.80379581451416
    8. '
' → logprob: -14.30379581451416
    9. ' ' → logprob: -14.42879581451416
    10. ')c' → logprob: -14.80379581451416

Token 150: '[j' (ID: 7895)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.44132331013679504
    2. 'j' → logprob: -1.3163232803344727
    3. '[j' → logprob: -2.4413232803344727
    4. '[' → logprob: -6.691323280334473
    5. ']' → logprob: -9.191323280334473
    6. '```' → logprob: -9.441323280334473
    7. '   ' → logprob: -9.566323280334473
    8. ' j' → logprob: -10.441323280334473
    9. 'c' → logprob: -10.566323280334473
    10. ' -' → logprob: -10.816323280334473

Token 151: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010580805974313989
    2. ']' → logprob: -9.875105857849121
    3. '2' → logprob: -10.375105857849121
    4. ' -' → logprob: -11.625105857849121
    5. ']-' → logprob: -12.750105857849121
    6. '],' → logprob: -12.750105857849121
    7. ']),' → logprob: -12.875105857849121
    8. '])' → logprob: -13.125105857849121
    9. '   ' → logprob: -13.250105857849121
    10. 'j' → logprob: -14.625105857849121

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '   ' → logprob: -13.500004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '```' → logprob: -14.125004768371582
    5. '-' → logprob: -14.687504768371582
    6. '0' → logprob: -15.062504768371582
    7. '1' → logprob: -15.812504768371582
    8. '
' → logprob: -16.2500057220459
    9. '۲' → logprob: -16.3750057220459
    10. ')' → logprob: -16.5625057220459

Token 153: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.011373155459296e-05
    2. ' )' → logprob: -10.875030517578125
    3. ')
' → logprob: -11.625030517578125
    4. ');' → logprob: -14.000030517578125
    5. '   ' → logprob: -14.625030517578125
    6. ')c' → logprob: -15.500030517578125
    7. ' ' → logprob: -15.625030517578125
    8. ')`' → logprob: -16.250030517578125
    9. '))' → logprob: -16.375030517578125
    10. ')

' → logprob: -16.500030517578125

Token 154: ' ;' (ID: 4605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2914028763771057
    2. ';' → logprob: -1.416402816772461
    3. ' ;' → logprob: -4.666402816772461
    4. '
' → logprob: -8.416402816772461
    5. '    ' → logprob: -9.166402816772461
    6. ';c' → logprob: -9.541402816772461
    7. '  ' → logprob: -9.666402816772461
    8. ' ' → logprob: -9.791402816772461
    9. ';j' → logprob: -9.791402816772461
    10. '    
' → logprob: -9.791402816772461

Token 155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011663887649774551
    2. '   ' → logprob: -4.886663913726807
    3. ' c' → logprob: -5.511663913726807
    4. '	c' → logprob: -12.636663436889648
    5. ' ' → logprob: -12.761663436889648
    6. '  ' → logprob: -13.261663436889648
    7. '```' → logprob: -14.511663436889648
    8. '    ' → logprob: -15.011663436889648
    9. '       ' → logprob: -15.261663436889648
    10. '
' → logprob: -15.511663436889648

Token 156: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.0722858102526516e-05
    2. '[' → logprob: -10.625041007995605
    3. '[i' → logprob: -11.625041007995605
    4. '[c' → logprob: -13.000041007995605
    5. 'j' → logprob: -13.125041007995605
    6. '```' → logprob: -14.000041007995605
    7. '[n' → logprob: -14.750041007995605
    8. '[
' → logprob: -14.875041007995605
    9. '   ' → logprob: -15.125041007995605
    10. '=j' → logprob: -15.250041007995605

Token 157: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.829823102336377e-05
    2. ' -' → logprob: -10.25009822845459
    3. ']' → logprob: -10.37509822845459
    4. '=' → logprob: -10.87509822845459
    5. '   ' → logprob: -12.12509822845459
    6. '-=' → logprob: -12.62509822845459
    7. ' ' → logprob: -14.12509822845459
    8. ']=' → logprob: -14.37509822845459
    9. ' -=' → logprob: -14.37509822845459
    10. '[' → logprob: -14.62509822845459

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004381467122584581
    2. '-' → logprob: -6.5043816566467285
    3. '-=' → logprob: -6.5043816566467285
    4. ' =' → logprob: -6.6293816566467285
    5. ' -=' → logprob: -10.12938117980957
    6. '   ' → logprob: -12.25438117980957
    7. '```' → logprob: -12.62938117980957
    8. '+=' → logprob: -13.37938117980957
    9. '`' → logprob: -13.62938117980957
    10. ']' → logprob: -13.75438117980957

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.758615493774414
    4. '  ' → logprob: -16.383615493774414
    5. '    ' → logprob: -20.133615493774414
    6. '00' → logprob: -20.258615493774414
    7. ' ' → logprob: -20.508615493774414
    8. '۰' → logprob: -20.508615493774414
    9. '
' → logprob: -20.633615493774414
    10. '000' → logprob: -21.008615493774414

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.000036239624023
    4. '00' → logprob: -19.500036239624023
    5. '  ' → logprob: -19.625036239624023
    6. '۰' → logprob: -19.875036239624023
    7. '000' → logprob: -20.250036239624023
    8. '012' → logprob: -21.625036239624023
    9. '```' → logprob: -22.125036239624023
    10. '٠' → logprob: -22.187536239624023

Token 161: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16878502070903778
    2. 'print' → logprob: -2.4187850952148438
    3. ')' → logprob: -3.5437850952148438
    4. '<|end|>' → logprob: -4.168785095214844
    5. 'i' → logprob: -5.168785095214844
    6. 'c' → logprob: -5.543785095214844
    7. '#' → logprob: -5.668785095214844
    8. '[' → logprob: -6.043785095214844
    9. ' for' → logprob: -6.293785095214844
    10. 'n' → logprob: -7.043785095214844

Token 162: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6582342982292175
    2. ')' → logprob: -1.2832343578338623
    3. '<|end|>' → logprob: -3.1582343578338623
    4. ' ' → logprob: -3.5332343578338623
    5. '#' → logprob: -3.7832343578338623
    6. '(' → logprob: -3.7832343578338623
    7. 'c' → logprob: -3.9082343578338623
    8. '0' → logprob: -4.408234119415283
    9. 'for' → logprob: -4.408234119415283
    10. ']' → logprob: -4.533234119415283

Token 163: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11073150485754013
    2. '(sum' → logprob: -2.360731601715088
    3. '(len' → logprob: -5.860731601715088
    4. '(*' → logprob: -5.860731601715088
    5. '(c' → logprob: -5.985731601715088
    6. '()' → logprob: -6.860731601715088
    7. '(list' → logprob: -7.985731601715088
    8. '('' → logprob: -8.11073112487793
    9. '(
' → logprob: -8.36073112487793
    10. 'sum' → logprob: -8.86073112487793

Token 164: 'map' (ID: 3726)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9385402993066236e-05
    2. ' c' → logprob: -10.875019073486328
    3. '[c' → logprob: -15.250019073486328
    4. ')c' → logprob: -16.125019073486328
    5. '(c' → logprob: -17.000019073486328
    6. '[' → logprob: -17.625019073486328
    7. 'chain' → logprob: -17.875019073486328
    8. ')' → logprob: -18.000019073486328
    9. 'map' → logprob: -19.125019073486328
    10. '	c' → logprob: -19.500019073486328

Token 165: '(str' (ID: 7946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7623552680015564
    2. '(str' → logprob: -0.7623552680015564
    3. 'str' → logprob: -3.387355327606201
    4. '(lambda' → logprob: -3.637355327606201
    5. '(' → logprob: -6.012355327606201
    6. 'int' → logprob: -6.637355327606201
    7. '(list' → logprob: -7.137355327606201
    8. 'c' → logprob: -7.637355327606201
    9. '(c' → logprob: -7.887355327606201
    10. 'list' → logprob: -8.262354850769043

Token 166: ',' (ID: 11)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.1897123157978058
    2. ',' → logprob: -2.0647122859954834
    3. '(c' → logprob: -3.4397122859954834
    4. ',(' → logprob: -4.3147125244140625
    5. '(' → logprob: -7.8147125244140625
    6. ' ,' → logprob: -9.689712524414062
    7. ',[' → logprob: -11.564712524414062
    8. 'c' → logprob: -12.689712524414062
    9. ',s' → logprob: -12.689712524414062
    10. ' (' → logprob: -12.814712524414062

Token 167: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010914575977949426
    2. ' c' → logprob: -9.12510871887207
    3. '[c' → logprob: -17.12510871887207
    4. '(c' → logprob: -17.12510871887207
    5. ')c' → logprob: -17.12510871887207
    6. '[' → logprob: -17.87510871887207
    7. '
' → logprob: -18.25010871887207
    8. '	c' → logprob: -19.00010871887207
    9. '   ' → logprob: -19.25010871887207
    10. ' ' → logprob: -19.87510871887207

Token 168: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16024687886238098
    2. ')' → logprob: -1.9102468490600586
    3. ')))' → logprob: -10.910246849060059
    4. '))
' → logprob: -13.535246849060059
    5. '])' → logprob: -14.160246849060059
    6. '[' → logprob: -14.410246849060059
    7. '),' → logprob: -14.785246849060059
    8. ')]' → logprob: -15.035246849060059
    9. ' ))' → logprob: -15.160246849060059
    10. ')])' → logprob: -15.785246849060059


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 166
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 40.36%
Précision adaptée (1ère position): 41.57%
Précision (top 10): 79.52%
================================================================================
