================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K = int(input())

Ans = [1, 2, 3, 4, 5, 6, 7, 8, 9]
for x in range(1,15):
    B = [0]*100000
    n,d = 10**x,int("9"*x)
    for i in range(10000):
        num = i*n+d
        S = str(num)
        total = 0
        for s in S:
            total += int(s)
        B[i] = num/total
        if i > 0:
            if B[i] < B[i-1]:
                Ans.pop()
                break
            else:
                if num not in Ans:
                    Ans.append(num)

for i in range(K):
    print(Ans[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003746987320482731
    2. 'K' → logprob: -6.50374698638916
    3. '(K' → logprob: -6.87874698638916
    4. ''' → logprob: -7.12874698638916
    5. '('' → logprob: -8.37874698638916
    6. '```' → logprob: -10.25374698638916
    7. '("("' → logprob: -10.50374698638916
    8. '"' → logprob: -10.62874698638916
    9. '()' → logprob: -10.75374698638916
    10. '`' → logprob: -11.00374698638916

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04538436979055405
    2. ')' → logprob: -3.795384407043457
    3. '()' → logprob: -3.920384407043457
    4. '())' → logprob: -6.920384407043457
    5. '(
' → logprob: -8.295384407043457
    6. '```' → logprob: -8.795384407043457
    7. '("("' → logprob: -9.295384407043457
    8. '('' → logprob: -9.295384407043457
    9. '(()' → logprob: -9.670384407043457
    10. '(

' → logprob: -9.795384407043457

Token 5: 'Ans' (ID: 36478)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5784894824028015
    2. '*' → logprob: -1.3284895420074463
    3. 'i' → logprob: -3.0784895420074463
    4. 'for' → logprob: -3.2034895420074463
    5. '+' → logprob: -3.5784895420074463
    6. '#' → logprob: -4.578489303588867
    7. ')' → logprob: -4.953489303588867
    8. '\n' → logprob: -5.078489303588867
    9. 's' → logprob: -5.203489303588867
    10. '%' → logprob: -5.453489303588867

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1019061952829361
    2. '=' → logprob: -2.3519062995910645
    3. '+' → logprob: -6.8519062995910645
    4. ' +=' → logprob: -7.8519062995910645
    5. ' ' → logprob: -9.601905822753906
    6. ' +' → logprob: -9.976905822753906
    7. '_' → logprob: -10.226905822753906
    8. '+=' → logprob: -10.351905822753906
    9. ',' → logprob: -10.976905822753906
    10. '[' → logprob: -11.226905822753906

Token 7: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1238832101225853
    2. ' ' → logprob: -3.2488832473754883
    3. 'K' → logprob: -3.3738832473754883
    4. ' K' → logprob: -4.248883247375488
    5. '"' → logprob: -4.373883247375488
    6. ''' → logprob: -4.748883247375488
    7. '[]' → logprob: -6.248883247375488
    8. '1' → logprob: -6.373883247375488
    9. ' []' → logprob: -7.248883247375488
    10. 'max' → logprob: -7.248883247375488

Token 8: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023968173190951347
    2. ']' → logprob: -6.252396583557129
    3. ')' → logprob: -8.252396583557129
    4. 'K' → logprob: -10.252396583557129
    5. '   ' → logprob: -10.502396583557129
    6. ' ' → logprob: -10.502396583557129
    7. '])' → logprob: -10.877396583557129
    8. '1' → logprob: -10.877396583557129
    9. '(' → logprob: -11.127396583557129
    10. '"' → logprob: -11.252396583557129

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4975776672363281
    2. ']' → logprob: -0.9975776672363281
    3. ')' → logprob: -3.872577667236328
    4. ' ]' → logprob: -6.997577667236328
    5. ',
' → logprob: -7.122577667236328
    6. ')]' → logprob: -7.622577667236328
    7. '+' → logprob: -9.997577667236328
    8. ',

' → logprob: -10.497577667236328
    9. ' )' → logprob: -10.872577667236328
    10. ' ,' → logprob: -10.997577667236328

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10576249659061432
    2. '2' → logprob: -2.480762481689453
    3. '0' → logprob: -4.855762481689453
    4. '1' → logprob: -5.230762481689453
    5. ' K' → logprob: -6.980762481689453
    6. ')' → logprob: -7.230762481689453
    7. ' ])' → logprob: -7.730762481689453
    8. ' )' → logprob: -8.355762481689453
    9. ' ]' → logprob: -8.355762481689453
    10. ']' → logprob: -8.355762481689453

Token 11: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6081079840660095
    2. '2' → logprob: -0.9831079840660095
    3. '0' → logprob: -2.7331080436706543
    4. '3' → logprob: -5.483108043670654
    5. '6' → logprob: -5.483108043670654
    6. ']' → logprob: -5.983108043670654
    7. '-' → logprob: -6.483108043670654
    8. '])' → logprob: -6.733108043670654
    9. '4' → logprob: -6.983108043670654
    10. 'K' → logprob: -7.233108043670654

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06243021413683891
    2. ']' → logprob: -2.8124301433563232
    3. '3' → logprob: -8.312430381774902
    4. ')' → logprob: -9.687430381774902
    5. ' ]' → logprob: -9.687430381774902
    6. ' ,' → logprob: -10.187430381774902
    7. ',
' → logprob: -10.437430381774902
    8. ',

' → logprob: -12.562430381774902
    9. '```' → logprob: -12.687430381774902
    10. '4' → logprob: -12.937430381774902

Token 13: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5831270217895508
    2. ' ' → logprob: -0.8331270217895508
    3. '4' → logprob: -4.958127021789551
    4. ']' → logprob: -9.45812702178955
    5. ')' → logprob: -11.08312702178955
    6. ' ]' → logprob: -11.45812702178955
    7. '])' → logprob: -11.95812702178955
    8. '1' → logprob: -12.08312702178955
    9. '2' → logprob: -12.33312702178955
    10. '6' → logprob: -12.58312702178955

Token 14: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.025676321238279343
    2. ' ' → logprob: -3.7756762504577637
    3. '4' → logprob: -6.025676250457764
    4. ']' → logprob: -12.150676727294922
    5. '1' → logprob: -12.525676727294922
    6. '2' → logprob: -13.525676727294922
    7. '5' → logprob: -14.775676727294922
    8. '6' → logprob: -15.150676727294922
    9. '0' → logprob: -15.525676727294922
    10. ' K' → logprob: -16.400676727294922

Token 15: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10033110529184341
    2. ',' → logprob: -2.3503310680389404
    3. ')' → logprob: -9.47533130645752
    4. ' ]' → logprob: -10.72533130645752
    5. ',
' → logprob: -12.22533130645752
    6. ')]' → logprob: -12.35033130645752
    7. '])' → logprob: -12.72533130645752
    8. '4' → logprob: -12.85033130645752
    9. '```' → logprob: -13.10033130645752
    10. '`]' → logprob: -13.10033130645752

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6761312484741211
    2. '4' → logprob: -0.8011312484741211
    3. ']' → logprob: -3.926131248474121
    4. ' ]' → logprob: -4.176131248474121
    5. ',' → logprob: -5.051131248474121
    6. ' ,' → logprob: -7.301131248474121
    7. ' ])' → logprob: -8.426131248474121
    8. '])' → logprob: -8.926131248474121
    9. ')' → logprob: -10.426131248474121
    10. ' )' → logprob: -10.551131248474121

Token 17: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.018594112247228622
    2. ' ' → logprob: -4.143594264984131
    3. ']' → logprob: -6.018594264984131
    4. '6' → logprob: -10.518593788146973
    5. '5' → logprob: -10.768593788146973
    6. ' ]' → logprob: -10.768593788146973
    7. '])' → logprob: -11.143593788146973
    8. '1' → logprob: -11.518593788146973
    9. ' K' → logprob: -11.893593788146973
    10. '0' → logprob: -12.518593788146973

Token 18: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34871798753738403
    2. ',' → logprob: -1.2237179279327393
    3. ')' → logprob: -8.59871768951416
    4. ' ]' → logprob: -10.22371768951416
    5. ',
' → logprob: -11.09871768951416
    6. ')]' → logprob: -11.09871768951416
    7. '`]' → logprob: -11.72371768951416
    8. '']' → logprob: -12.22371768951416
    9. '```' → logprob: -12.84871768951416
    10. '[' → logprob: -13.97371768951416

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28170958161354065
    2. '5' → logprob: -1.4067095518112183
    3. ' ]' → logprob: -8.281709671020508
    4. ']' → logprob: -8.781709671020508
    5. ')' → logprob: -9.531709671020508
    6. ' )' → logprob: -10.406709671020508
    7. ' ])' → logprob: -10.531709671020508
    8. ')]' → logprob: -12.031709671020508
    9. '])' → logprob: -12.281709671020508
    10. ',' → logprob: -12.281709671020508

Token 20: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05504194647073746
    2. ' ' → logprob: -2.930042028427124
    3. ']' → logprob: -9.055042266845703
    4. '])' → logprob: -11.555042266845703
    5. ')' → logprob: -11.680042266845703
    6. '1' → logprob: -12.055042266845703
    7. ' ]' → logprob: -12.430042266845703
    8. '6' → logprob: -13.242542266845703
    9. ' K' → logprob: -13.367542266845703
    10. ',' → logprob: -13.492542266845703

Token 21: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032275060657411814
    2. ',' → logprob: -5.753227710723877
    3. ')' → logprob: -10.378227233886719
    4. ' ]' → logprob: -11.378227233886719
    5. ')]' → logprob: -13.128227233886719
    6. '])' → logprob: -13.128227233886719
    7. '']' → logprob: -13.378227233886719
    8. '`]' → logprob: -14.628227233886719
    9. '6' → logprob: -15.128227233886719
    10. '```' → logprob: -15.253227233886719

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5790658593177795
    2. '6' → logprob: -0.8290658593177795
    3. ']' → logprob: -6.454065799713135
    4. ' ]' → logprob: -6.579065799713135
    5. ')' → logprob: -9.454066276550293
    6. ',' → logprob: -10.454066276550293
    7. ' )' → logprob: -10.954066276550293
    8. ' ])' → logprob: -11.704066276550293
    9. ' ,' → logprob: -11.954066276550293
    10. '7' → logprob: -12.454066276550293

Token 23: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.026309821754693985
    2. ' ' → logprob: -3.6513097286224365
    3. ')' → logprob: -12.026309967041016
    4. ']' → logprob: -13.151309967041016
    5. '7' → logprob: -15.276309967041016
    6. ' ]' → logprob: -15.338809967041016
    7. ',' → logprob: -15.526309967041016
    8. ' )' → logprob: -16.088809967041016
    9. ')]' → logprob: -16.151309967041016
    10. '10' → logprob: -16.213809967041016

Token 24: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5240838527679443
    2. ',' → logprob: -0.8990838527679443
    3. ')' → logprob: -7.149084091186523
    4. '])' → logprob: -9.524084091186523
    5. ' ]' → logprob: -10.274084091186523
    6. '7' → logprob: -10.524084091186523
    7. ',
' → logprob: -11.399084091186523
    8. ')]' → logprob: -11.649084091186523
    9. '```' → logprob: -12.524084091186523
    10. ' ,' → logprob: -12.649084091186523

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2812516689300537
    2. '7' → logprob: -1.4062516689300537
    3. ')' → logprob: -10.156251907348633
    4. ' ]' → logprob: -10.656251907348633
    5. ']' → logprob: -11.406251907348633
    6. ' )' → logprob: -11.531251907348633
    7. ',' → logprob: -11.781251907348633
    8. ' ,' → logprob: -12.781251907348633
    9. ' ])' → logprob: -13.031251907348633
    10. ')]' → logprob: -13.906251907348633

Token 26: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.11285457760095596
    2. ' ' → logprob: -2.237854480743408
    3. ' ]' → logprob: -11.487854957580566
    4. ']' → logprob: -11.612854957580566
    5. ')' → logprob: -12.362854957580566
    6. ' ])' → logprob: -12.987854957580566
    7. '])' → logprob: -13.362854957580566
    8. ' )' → logprob: -13.487854957580566
    9. ',' → logprob: -13.987854957580566
    10. '0' → logprob: -14.987854957580566

Token 27: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16043493151664734
    2. ',' → logprob: -1.9104349613189697
    3. ')' → logprob: -9.03543472290039
    4. ' ]' → logprob: -9.53543472290039
    5. ' ,' → logprob: -12.41043472290039
    6. '8' → logprob: -12.78543472290039
    7. '`]' → logprob: -13.03543472290039
    8. '']' → logprob: -13.28543472290039
    9. ')]' → logprob: -13.53543472290039
    10. '```' → logprob: -13.53543472290039

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12789037823677063
    2. '8' → logprob: -2.1278903484344482
    3. ' ]' → logprob: -7.877890586853027
    4. ' ])' → logprob: -8.877890586853027
    5. ' )' → logprob: -9.127890586853027
    6. ' ,' → logprob: -9.252890586853027
    7. ',' → logprob: -9.502890586853027
    8. ')' → logprob: -9.502890586853027
    9. ']' → logprob: -9.752890586853027
    10. '])' → logprob: -11.502890586853027

Token 29: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.07889419049024582
    2. ' ' → logprob: -2.5788941383361816
    3. '7' → logprob: -13.70389461517334
    4. ')' → logprob: -13.95389461517334
    5. '9' → logprob: -14.32889461517334
    6. ''' → logprob: -14.32889461517334
    7. '0' → logprob: -14.82889461517334
    8. ',' → logprob: -15.45389461517334
    9. '  ' → logprob: -15.89139461517334
    10. ' )' → logprob: -16.141393661499023

Token 30: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5763256549835205
    2. ',' → logprob: -0.8263256549835205
    3. ')' → logprob: -8.451325416564941
    4. ' ]' → logprob: -9.701325416564941
    5. '9' → logprob: -9.951325416564941
    6. '])' → logprob: -11.076325416564941
    7. ' ,' → logprob: -11.076325416564941
    8. '`]' → logprob: -11.451325416564941
    9. '']' → logprob: -12.201325416564941
    10. ')]' → logprob: -12.451325416564941

Token 31: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3132901191711426
    2. ' ' → logprob: -1.3132901191711426
    3. ',' → logprob: -11.813289642333984
    4. '])' → logprob: -11.938289642333984
    5. ' ])' → logprob: -12.438289642333984
    6. ' ,' → logprob: -13.188289642333984
    7. ']' → logprob: -13.188289642333984
    8. ')' → logprob: -13.313289642333984
    9. ' ]' → logprob: -13.438289642333984
    10. ' )' → logprob: -13.938289642333984

Token 32: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0019295861711725593
    2. ' ' → logprob: -6.251929759979248
    3. '10' → logprob: -15.12692928314209
    4. ')' → logprob: -15.25192928314209
    5. '0' → logprob: -15.75192928314209
    6. '`' → logprob: -16.814430236816406
    7. '```' → logprob: -17.251930236816406
    8. '90' → logprob: -17.314430236816406
    9. '  ' → logprob: -17.439430236816406
    10. ',' → logprob: -17.501930236816406

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006509540602564812
    2. ')' → logprob: -5.256509304046631
    3. ',' → logprob: -6.881509304046631
    4. '])' → logprob: -8.756509780883789
    5. ' ]' → logprob: -9.631509780883789
    6. ')]' → logprob: -11.256509780883789
    7. '9' → logprob: -12.756509780883789
    8. ',
' → logprob: -12.881509780883789
    9. '']' → logprob: -12.881509780883789
    10. '`]' → logprob: -14.131509780883789

Token 34: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7085535526275635
    2. '*' → logprob: -1.7085535526275635
    3. '<|end|>' → logprob: -2.8335535526275635
    4. '```' → logprob: -3.0835535526275635
    5. '.' → logprob: -3.4585535526275635
    6. '\' → logprob: -3.4585535526275635
    7. '+' → logprob: -3.9585535526275635
    8. '#' → logprob: -4.083553314208984
    9. 'for' → logprob: -4.083553314208984
    10. '10' → logprob: -4.083553314208984

Token 35: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3201538026332855
    2. ' _' → logprob: -1.695153832435608
    3. ' ' → logprob: -2.8201537132263184
    4. '_' → logprob: -3.5701537132263184
    5. 'i' → logprob: -6.195153713226318
    6. '  ' → logprob: -7.820153713226318
    7. ' ‌' → logprob: -9.320154190063477
    8. ' K' → logprob: -10.320154190063477
    9. ' ' → logprob: -10.570154190063477
    10. '_i' → logprob: -11.070154190063477

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012463049497455359
    2. 'in' → logprob: -6.876246452331543
    3. ' ' → logprob: -9.126246452331543
    4. '  ' → logprob: -9.626246452331543
    5. ' i' → logprob: -11.251246452331543
    6. ',' → logprob: -12.376246452331543
    7. 'space' → logprob: -12.376246452331543
    8. '	in' → logprob: -12.501246452331543
    9. '   ' → logprob: -12.876246452331543
    10. 'n' → logprob: -13.001246452331543

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0048125614412128925
    2. 'range' → logprob: -5.629812717437744
    3. ' ' → logprob: -6.879812717437744
    4. ' ra' → logprob: -9.129812240600586
    5. ' ran' → logprob: -11.004812240600586
    6. ' r' → logprob: -11.629812240600586
    7. ' Ans' → logprob: -11.879812240600586
    8. '	range' → logprob: -11.879812240600586
    9. ' rang' → logprob: -12.004812240600586
    10. '  ' → logprob: -12.129812240600586

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005238856188952923
    2. '(K' → logprob: -5.255239009857178
    3. '(
' → logprob: -12.88023853302002
    4. '()' → logprob: -14.38023853302002
    5. ' (' → logprob: -15.00523853302002
    6. '(x' → logprob: -15.13023853302002
    7. '(len' → logprob: -15.13023853302002
    8. '((' → logprob: -15.25523853302002
    9. '(s' → logprob: -15.63023853302002
    10. '(

' → logprob: -16.380239486694336

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.429029643535614
    2. 'K' → logprob: -1.1790297031402588
    3. '2' → logprob: -3.554029703140259
    4. '10' → logprob: -4.55402946472168
    5. '9' → logprob: -6.92902946472168
    6. ' ' → logprob: -7.80402946472168
    7. ' K' → logprob: -8.67902946472168
    8. '0' → logprob: -8.80402946472168
    9. '11' → logprob: -9.30402946472168
    10. '(' → logprob: -9.92902946472168

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08207876980304718
    2. ' ,' → logprob: -2.582078695297241
    3. ',K' → logprob: -5.83207893371582
    4. '0' → logprob: -8.95707893371582
    5. '(' → logprob: -9.83207893371582
    6. '(K' → logprob: -9.95707893371582
    7. ',(' → logprob: -12.20707893371582
    8. '1' → logprob: -12.83207893371582
    9. '+' → logprob: -12.83207893371582
    10. ' +' → logprob: -13.33207893371582

Token 41: '15' (ID: 1055)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11133328080177307
    2. '10' → logprob: -2.6113333702087402
    3. ' K' → logprob: -3.6113333702087402
    4. ' ' → logprob: -5.48633337020874
    5. '9' → logprob: -8.111332893371582
    6. '20' → logprob: -9.486332893371582
    7. '19' → logprob: -9.611332893371582
    8. '	K' → logprob: -9.611332893371582
    9. '18' → logprob: -9.986332893371582
    10. '11' → logprob: -9.986332893371582

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004821107257157564
    2. ' ):' → logprob: -6.004821300506592
    3. ')' → logprob: -6.254821300506592
    4. '+' → logprob: -8.504820823669434
    5. '):
' → logprob: -9.379820823669434
    6. ',' → logprob: -9.504820823669434
    7. ':' → logprob: -11.254820823669434
    8. ' )' → logprob: -11.754820823669434
    9. ' ' → logprob: -11.754820823669434
    10. '1' → logprob: -12.379820823669434

Token 43: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6713473796844482
    2. ' ' → logprob: -0.9213473796844482
    3. '   ' → logprob: -2.9213473796844482
    4. ':' → logprob: -4.421347618103027
    5. '     
' → logprob: -4.546347618103027
    6. '```' → logprob: -6.296347618103027
    7. ',' → logprob: -6.546347618103027
    8. '  ' → logprob: -6.796347618103027
    9. '[' → logprob: -6.796347618103027
    10. '     ' → logprob: -6.921347618103027

Token 44: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.070521593093872
    2. ' new' → logprob: -1.945521593093872
    3. ' Ans' → logprob: -2.070521593093872
    4. ' for' → logprob: -2.070521593093872
    5. ' ' → logprob: -2.320521593093872
    6. 'Ans' → logprob: -2.570521593093872
    7. ' ans' → logprob: -3.695521593093872
    8. '    ' → logprob: -3.945521593093872
    9. 'for' → logprob: -4.820521354675293
    10. '[' → logprob: -5.070521354675293

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01913619600236416
    2. '=' → logprob: -4.394136428833008
    3. 'est' → logprob: -6.269136428833008
    4. '=[]' → logprob: -7.269136428833008
    5. 'r' → logprob: -7.394136428833008
    6. '[]' → logprob: -7.769136428833008
    7. 'ase' → logprob: -8.144136428833008
    8. '[' → logprob: -8.644136428833008
    9. '.append' → logprob: -8.644136428833008
    10. '=[' → logprob: -8.644136428833008

Token 46: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5822592973709106
    2. ' []' → logprob: -0.8322592973709106
    3. ' [' → logprob: -5.582259178161621
    4. '[' → logprob: -6.082259178161621
    5. '[len' → logprob: -8.707259178161621
    6. ' Ans' → logprob: -10.957259178161621
    7. 'Ans' → logprob: -11.082259178161621
    8. 'len' → logprob: -11.957259178161621
    9. '[int' → logprob: -12.082259178161621
    10. '[:]' → logprob: -12.082259178161621

Token 47: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2593561112880707
    2. 'i' → logprob: -2.0093560218811035
    3. 'y' → logprob: -3.7593560218811035
    4. 'x' → logprob: -4.2593560218811035
    5. '0' → logprob: -4.5093560218811035
    6. 'ans' → logprob: -4.8843560218811035
    7. 'Ans' → logprob: -5.0093560218811035
    8. 'n' → logprob: -5.3843560218811035
    9. 'k' → logprob: -5.6343560218811035
    10. ']' → logprob: -5.6343560218811035

Token 48: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12250994890928268
    2. ' ]' → logprob: -2.3725099563598633
    3. ']*' → logprob: -4.122509956359863
    4. ',' → logprob: -5.622509956359863
    5. ')]' → logprob: -6.872509956359863
    6. ')' → logprob: -8.122509956359863
    7. ' ' → logprob: -8.247509956359863
    8. ']*(' → logprob: -8.747509956359863
    9. '   ' → logprob: -9.247509956359863
    10. '0' → logprob: -9.247509956359863

Token 49: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0989487171173096
    2. '9' → logprob: -1.4739487171173096
    3. 'len' → logprob: -1.9739487171173096
    4. '(' → logprob: -2.7239487171173096
    5. '18' → logprob: -2.7239487171173096
    6. '100' → logprob: -3.4739487171173096
    7. '50' → logprob: -3.7239487171173096
    8. '20' → logprob: -3.9739487171173096
    9. '(len' → logprob: -4.3489484786987305
    10. 'K' → logprob: -4.4739484786987305

Token 50: '000' (ID: 1302)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41064226627349854
    2. ' for' → logprob: -1.1606422662734985
    3. ' new' → logprob: -5.035642147064209
    4. 'new' → logprob: -5.035642147064209
    5. 'A' → logprob: -6.035642147064209
    6. '   ' → logprob: -6.410642147064209
    7. ' ' → logprob: -6.785642147064209
    8. ' next' → logprob: -7.660642147064209
    9. 'next' → logprob: -7.785642147064209
    10. 'temp' → logprob: -7.785642147064209

Token 54: ',d' (ID: 26159)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6239674091339111
    2. '=' → logprob: -1.4989674091339111
    3. ' =' → logprob: -1.6239674091339111
    4. 'ew' → logprob: -3.873967409133911
    5. 's' → logprob: -4.123967170715332
    6. 'ext' → logprob: -6.498967170715332
    7. ' ' → logprob: -6.498967170715332
    8. 'um' → logprob: -6.998967170715332
    9. 'x' → logprob: -6.998967170715332
    10. 'xt' → logprob: -7.373967170715332

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16333869099617004
    2. '=' → logprob: -1.9133386611938477
    3. ',' → logprob: -5.913338661193848
    4. ' ' → logprob: -8.663338661193848
    5. '=[]' → logprob: -9.413338661193848
    6. '[' → logprob: -10.288338661193848
    7. '  ' → logprob: -10.913338661193848
    8. ' =[' → logprob: -11.288338661193848
    9. ' ,' → logprob: -11.538338661193848
    10. 'for' → logprob: -11.663338661193848

Token 56: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4870740175247192
    2. '1' → logprob: -1.8620740175247192
    3. ' ' → logprob: -1.8620740175247192
    4. ' x' → logprob: -2.1120738983154297
    5. ' map' → logprob: -2.9870738983154297
    6. 'div' → logprob: -2.9870738983154297
    7. ' Ans' → logprob: -3.1120738983154297
    8. 'Ans' → logprob: -3.3620738983154297
    9. ' K' → logprob: -3.4870738983154297
    10. '0' → logprob: -3.6120738983154297

Token 57: '10' (ID: 702)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2850031852722168
    2. 'x' → logprob: -2.160003185272217
    3. 'Ans' → logprob: -3.035003185272217
    4. '0' → logprob: -4.285003185272217
    5. ' div' → logprob: -4.285003185272217
    6. '1' → logprob: -4.410003185272217
    7. '9' → logprob: -4.785003185272217
    8. 'K' → logprob: -4.910003185272217
    9. 'len' → logprob: -4.910003185272217
    10. '10' → logprob: -5.535003185272217

Token 58: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4449874460697174
    2. ',' → logprob: -1.069987416267395
    3. ' **' → logprob: -5.4449872970581055
    4. ',x' → logprob: -5.4449872970581055
    5. ' ,' → logprob: -6.0699872970581055
    6. '**,' → logprob: -6.1949872970581055
    7. '*' → logprob: -6.3199872970581055
    8. '*x' → logprob: -7.9449872970581055
    9. '0' → logprob: -8.194987297058105
    10. ' ' → logprob: -8.819987297058105

Token 59: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.5776860184123507e-06
    2. '(x' → logprob: -13.37500286102295
    3. '(' → logprob: -14.50000286102295
    4. ' x' → logprob: -15.12500286102295
    5. '%x' → logprob: -16.500001907348633
    6. '{x' → logprob: -17.000001907348633
    7. '9' → logprob: -17.125001907348633
    8. '7' → logprob: -17.375001907348633
    9. '6' → logprob: -17.875001907348633
    10. '1' → logprob: -17.875001907348633

Token 60: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04904261976480484
    2. ' ,' → logprob: -3.0490427017211914
    3. ' ' → logprob: -9.174042701721191
    4. ',n' → logprob: -9.174042701721191
    5. ',d' → logprob: -9.799042701721191
    6. ',
' → logprob: -11.049042701721191
    7. '1' → logprob: -11.299042701721191
    8. ',y' → logprob: -11.424042701721191
    9. ',,' → logprob: -11.674042701721191
    10. ',x' → logprob: -11.674042701721191

Token 61: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0943607091903687
    2. '(' → logprob: -1.4693607091903687
    3. '(K' → logprob: -1.4693607091903687
    4. '(x' → logprob: -1.8443607091903687
    5. '('' → logprob: -4.344360828399658
    6. '(d' → logprob: -4.969360828399658
    7. '[]' → logprob: -5.594360828399658
    8. '(pow' → logprob: -5.969360828399658
    9. '[' → logprob: -6.094360828399658
    10. '(B' → logprob: -6.094360828399658

Token 62: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.37852486968040466
    2. '1' → logprob: -1.378524899482727
    3. '5' → logprob: -4.2535247802734375
    4. '"' → logprob: -4.3785247802734375
    5. '0' → logprob: -4.3785247802734375
    6. '7' → logprob: -5.3785247802734375
    7. '2' → logprob: -5.6285247802734375
    8. '4' → logprob: -6.0035247802734375
    9. '8' → logprob: -6.1285247802734375
    10. ''' → logprob: -6.1285247802734375

Token 63: '"*' (ID: 166615)
  Prédit: '"*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"*' → logprob: -0.586666464805603
    2. '"' → logprob: -0.836666464805603
    3. '")' → logprob: -5.211666584014893
    4. '0' → logprob: -5.461666584014893
    5. '9' → logprob: -7.711666584014893
    6. '"[' → logprob: -9.336666107177734
    7. '"+' → logprob: -9.586666107177734
    8. '"{' → logprob: -9.586666107177734
    9. '1' → logprob: -9.836666107177734
    10. ''*' → logprob: -10.461666107177734

Token 64: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008332178927958012
    2. '(x' → logprob: -4.883332252502441
    3. ' x' → logprob: -7.633332252502441
    4. '(' → logprob: -8.633332252502441
    5. ' (' → logprob: -9.883332252502441
    6. '{x' → logprob: -12.133332252502441
    7. '   ' → logprob: -13.258332252502441
    8. ')x' → logprob: -13.633332252502441
    9. ')' → logprob: -14.383332252502441
    10. '((' → logprob: -14.508332252502441

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002785384887829423
    2. '")' → logprob: -6.6277852058410645
    3. ' )' → logprob: -7.3777852058410645
    4. '))' → logprob: -7.7527852058410645
    5. '')' → logprob: -8.377785682678223
    6. '`)' → logprob: -9.752785682678223
    7. ')+' → logprob: -10.502785682678223
    8. ')))' → logprob: -11.377785682678223
    9. ')")' → logprob: -11.377785682678223
    10. ')
' → logprob: -11.877785682678223

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28465065360069275
    2. ')' → logprob: -1.9096506834030151
    3. ' ' → logprob: -2.9096505641937256
    4. '<|end|>' → logprob: -3.5346505641937256
    5. '  
' → logprob: -5.659650802612305
    6. '    
' → logprob: -6.159650802612305
    7. '  ' → logprob: -6.284650802612305
    8. ' 
' → logprob: -6.659650802612305
    9. ',' → logprob: -6.784650802612305
    10. '
' → logprob: -6.909650802612305

Token 67: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9619696140289307
    2. ' ' → logprob: -1.2119696140289307
    3. ' for' → logprob: -1.8369696140289307
    4. ')' → logprob: -3.0869696140289307
    5. 'for' (adapté à ' for') → logprob: -3.0869696140289307
    6. '<|end|>' → logprob: -3.7119696140289307
    7. ' 
' → logprob: -4.711969375610352
    8. '  ' → logprob: -5.086969375610352
    9. '  
' → logprob: -5.086969375610352
    10. '
' → logprob: -5.086969375610352

Token 68: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.32858356833457947
    2. ' i' → logprob: -1.9535835981369019
    3. ' ' → logprob: -3.4535834789276123
    4. 'a' → logprob: -3.8285834789276123
    5. ' y' → logprob: -3.8285834789276123
    6. ' n' → logprob: -4.703583717346191
    7. ' j' → logprob: -4.828583717346191
    8. ' v' → logprob: -4.828583717346191
    9. ' A' → logprob: -4.828583717346191
    10. ' val' → logprob: -4.953583717346191

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.080128513276577
    2. 'in' → logprob: -2.5801284313201904
    3. ' ' → logprob: -7.0801286697387695
    4. ',' → logprob: -8.08012866973877
    5. 'n' → logprob: -10.58012866973877
    6. '  ' → logprob: -10.95512866973877
    7. '	in' → logprob: -11.33012866973877
    8. ',in' → logprob: -12.33012866973877
    9. ' ,' → logprob: -12.45512866973877
    10. ',n' → logprob: -12.83012866973877

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24640268087387085
    2. 'range' → logprob: -1.6214027404785156
    3. 'Ans' → logprob: -4.371402740478516
    4. ' Ans' → logprob: -4.996402740478516
    5. '[' → logprob: -7.746402740478516
    6. '(range' → logprob: -8.371402740478516
    7. ' ' → logprob: -8.621402740478516
    8. '   ' → logprob: -9.308902740478516
    9. 'Range' → logprob: -9.808902740478516
    10. ' Ansatz' → logprob: -9.871402740478516

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22868750989437103
    2. '(n' → logprob: -1.6036875247955322
    3. '(d' → logprob: -5.978687286376953
    4. '(len' → logprob: -8.353687286376953
    5. '(A' → logprob: -8.603687286376953
    6. ' (' → logprob: -9.103687286376953
    7. '((' → logprob: -9.478687286376953
    8. '(K' → logprob: -9.603687286376953
    9. '(B' → logprob: -10.603687286376953
    10. '()' → logprob: -11.353687286376953

Token 72: '100' (ID: 1353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8863256573677063
    2. '1' → logprob: -1.1363255977630615
    3. '9' → logprob: -2.1363255977630615
    4. 'len' → logprob: -2.3863255977630615
    5. '10' → logprob: -3.7613255977630615
    6. 'd' → logprob: -4.761325836181641
    7. '0' → logprob: -4.761325836181641
    8. '100' → logprob: -5.011325836181641
    9. ' ' → logprob: -6.261325836181641
    10. ')' → logprob: -6.511325836181641

Token 73: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.07251148670911789
    2. '):' → logprob: -3.3225114345550537
    3. '0' → logprob: -3.9475114345550537
    4. '00' → logprob: -4.572511672973633
    5. ')' → logprob: -5.572511672973633
    6. '001' → logprob: -8.072511672973633
    7. '):
' → logprob: -9.947511672973633
    8. ' ' → logprob: -10.822511672973633
    9. '+' → logprob: -11.197511672973633
    10. '_' → logprob: -11.697511672973633

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029226834885776043
    2. '):
' → logprob: -6.002922534942627
    3. ' ):' → logprob: -8.002923011779785
    4. ')' → logprob: -10.002923011779785
    5. '+' → logprob: -11.002923011779785
    6. '   ' → logprob: -11.127923011779785
    7. ':' → logprob: -11.752923011779785
    8. ',' → logprob: -11.752923011779785
    9. '0' → logprob: -12.127923011779785
    10. '**' → logprob: -13.127923011779785

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9601750373840332
    2. '<|end|>' → logprob: -1.2101750373840332
    3. ' ' → logprob: -1.7101750373840332
    4. ':' → logprob: -2.335175037384033
    5. '    ' → logprob: -4.335175037384033
    6. ')' → logprob: -4.960175037384033
    7. '   ' → logprob: -4.960175037384033
    8. ',' → logprob: -5.835175037384033
    9. '):' → logprob: -6.210175037384033
    10. '<|end|>' → logprob: -6.210175037384033

Token 76: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13847696781158447
    2. '<|end|>' → logprob: -2.513476848602295
    3. '       ' → logprob: -3.513476848602295
    4. '    ' → logprob: -5.138476848602295
    5. '        ' → logprob: -5.638476848602295
    6. '   ' → logprob: -6.513476848602295
    7. ' B' → logprob: -6.763476848602295
    8. '  ' → logprob: -7.388476848602295
    9. '<|end|>' → logprob: -7.388476848602295
    10. ',' → logprob: -7.388476848602295

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03830369561910629
    2. '=' → logprob: -3.2883036136627197
    3. ',' → logprob: -9.41330337524414
    4. ' ' → logprob: -10.41330337524414
    5. 's' → logprob: -10.66330337524414
    6. ')' → logprob: -10.66330337524414
    7. '=int' → logprob: -10.78830337524414
    8. '+' → logprob: -11.28830337524414
    9. '=i' → logprob: -11.28830337524414
    10. '=num' → logprob: -11.66330337524414

Token 78: ' i' (ID: 575)
  Prédit: ' Ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ans' → logprob: -0.5073590874671936
    2. 'Ans' → logprob: -1.6323590278625488
    3. ' (' → logprob: -2.132359027862549
    4. ' i' → logprob: -3.757359027862549
    5. '(' → logprob: -4.382359027862549
    6. ' ans' → logprob: -4.507359027862549
    7. '(i' → logprob: -5.007359027862549
    8. '(ans' → logprob: -5.257359027862549
    9. 'i' → logprob: -5.382359027862549
    10. ' Ansatz' → logprob: -6.007359027862549

Token 79: '*n' (ID: 58470)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.7082926034927368
    2. '*' → logprob: -1.5832926034927368
    3. '*n' → logprob: -2.2082924842834473
    4. '+' → logprob: -2.5832924842834473
    5. ' *' → logprob: -2.7082924842834473
    6. '*i' → logprob: -3.7082924842834473
    7. ' +' → logprob: -5.083292484283447
    8. '**' → logprob: -5.333292484283447
    9. '+d' → logprob: -5.333292484283447
    10. '*num' → logprob: -5.333292484283447

Token 80: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06776940077543259
    2. '%' → logprob: -3.4427692890167236
    3. ' +' → logprob: -4.067769527435303
    4. '+d' → logprob: -4.942769527435303
    5. '<|end|>' → logprob: -5.817769527435303
    6. '+B' → logprob: -6.067769527435303
    7. '+i' → logprob: -7.067769527435303
    8. ' %' → logprob: -7.442769527435303
    9. '+k' → logprob: -7.692769527435303
    10. '+n' → logprob: -7.692769527435303

Token 81: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5434074401855469
    2. '<|end|>' → logprob: -1.5434074401855469
    3. ' %' → logprob: -2.418407440185547
    4. ')' → logprob: -3.043407440185547
    5. '+' → logprob: -3.293407440185547
    6. ' ' → logprob: -4.418407440185547
    7. '<|end|>' → logprob: -5.918407440185547
    8. '   ' → logprob: -6.168407440185547
    9. '*' → logprob: -6.543407440185547
    10. '%B' → logprob: -6.668407440185547

Token 82: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13162679970264435
    2. '<|end|>' → logprob: -2.506626844406128
    3. '       ' → logprob: -4.006626605987549
    4. '<|end|>' → logprob: -5.631626605987549
    5. '   ' → logprob: -5.881626605987549
    6. '
' → logprob: -6.131626605987549
    7. ',' → logprob: -6.381626605987549
    8. ')' → logprob: -6.381626605987549
    9. ' ' → logprob: -6.506626605987549
    10. '%' → logprob: -6.506626605987549

Token 83: ' S' (ID: 336)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13345614075660706
    2. 'if' → logprob: -3.008456230163574
    3. ' for' → logprob: -3.008456230163574
    4. ' ' → logprob: -5.133456230163574
    5. ' B' → logprob: -5.133456230163574
    6. 'for' → logprob: -5.258456230163574
    7. 'B' → logprob: -6.508456230163574
    8. ' val' → logprob: -6.883456230163574
    9. ' ans' → logprob: -7.008456230163574
    10. ' num' → logprob: -7.508456230163574

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7214805483818054
    2. ' =' → logprob: -0.7214805483818054
    3. 'tr' → logprob: -4.346480369567871
    4. '=str' → logprob: -4.721480369567871
    5. 'um' → logprob: -5.596480369567871
    6. '=sum' → logprob: -6.971480369567871
    7. 't' → logprob: -8.221480369567871
    8. '=S' → logprob: -8.596480369567871
    9. '=int' → logprob: -8.721480369567871
    10. 'TR' → logprob: -9.221480369567871

Token 85: ' str' (ID: 989)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0662983655929565
    2. ' sum' → logprob: -1.3162983655929565
    3. ' str' → logprob: -1.5662983655929565
    4. 'str' → logprob: -1.9412983655929565
    5. ' num' → logprob: -4.441298484802246
    6. 'num' → logprob: -4.691298484802246
    7. '0' → logprob: -5.316298484802246
    8. ' ' → logprob: -5.441298484802246
    9. '(sum' → logprob: -6.816298484802246
    10. ' (' → logprob: -6.816298484802246

Token 86: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -9.794061770662665e-05
    2. '(' → logprob: -9.25009822845459
    3. '(n' → logprob: -14.37509822845459
    4. 'num' → logprob: -14.87509822845459
    5. '(i' → logprob: -15.25009822845459
    6. '(number' → logprob: -15.62509822845459
    7. '(x' → logprob: -16.625097274780273
    8. '(sum' → logprob: -16.625097274780273
    9. '(abs' → logprob: -16.875097274780273
    10. ',num' → logprob: -17.000097274780273

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004479254595935345
    2. ')
' → logprob: -5.50447940826416
    3. ')
' → logprob: -8.75447940826416
    4. ')

' → logprob: -9.50447940826416
    5. ')[' → logprob: -10.12947940826416
    6. ');' → logprob: -10.12947940826416
    7. ' )' → logprob: -10.37947940826416
    8. ').' → logprob: -11.50447940826416
    9. '))' → logprob: -11.50447940826416
    10. '[::-' → logprob: -11.75447940826416

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7192034125328064
    2. ')' → logprob: -1.7192034721374512
    3. '       ' → logprob: -2.594203472137451
    4. '<|end|>' → logprob: -2.594203472137451
    5. '[::-' → logprob: -2.594203472137451
    6. '
' → logprob: -2.719203472137451
    7. '    
' → logprob: -4.719203472137451
    8. '  
' → logprob: -5.469203472137451
    9. ' ' → logprob: -5.469203472137451
    10. '[' → logprob: -5.594203472137451

Token 89: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4306856691837311
    2. 'if' → logprob: -1.3056856393814087
    3. 'c' → logprob: -4.430685520172119
    4. ' s' → logprob: -4.555685520172119
    5. 's' → logprob: -4.680685520172119
    6. ' c' → logprob: -5.055685520172119
    7. 'sum' → logprob: -5.180685520172119
    8. ' cnt' → logprob: -5.680685520172119
    9. ' for' → logprob: -5.805685520172119
    10. 'cnt' → logprob: -5.930685520172119

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5027585625648499
    2. '=' → logprob: -1.002758502960205
    3. '_' → logprob: -3.627758502960205
    4. '_sum' → logprob: -7.502758502960205
    5. '=sum' → logprob: -7.502758502960205
    6. ' +=' → logprob: -8.502758979797363
    7. ' ' → logprob: -9.377758979797363
    8. '_=' → logprob: -9.502758979797363
    9. 'sum' → logprob: -10.002758979797363
    10. 's' → logprob: -10.502758979797363

Token 91: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5092248320579529
    2. ' ' → logprob: -1.7592248916625977
    3. '0' → logprob: -2.0092248916625977
    4. 'sum' → logprob: -2.3842248916625977
    5. ' num' → logprob: -8.259224891662598
    6. 'num' → logprob: -8.884224891662598
    7. '1' → logprob: -9.134224891662598
    8. '(sum' → logprob: -10.134224891662598
    9. '	sum' → logprob: -11.134224891662598
    10. '10' → logprob: -11.884224891662598

Token 92: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4287830591201782
    2. '0' → logprob: -1.1787830591201782
    3. 'num' → logprob: -3.3037829399108887
    4. ' sum' → logprob: -5.803782939910889
    5. ' ' → logprob: -7.803782939910889
    6. '1' → logprob: -7.928782939910889
    7. 'i' → logprob: -8.678783416748047
    8. 'int' → logprob: -8.803783416748047
    9. ' num' → logprob: -9.428783416748047
    10. 'len' → logprob: -10.178783416748047

Token 93: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7916121482849121
    2. '+' → logprob: -1.041612148284912
    3. ' for' → logprob: -2.916612148284912
    4. '<|end|>' → logprob: -3.541612148284912
    5. '   ' → logprob: -3.666612148284912
    6. ' ' → logprob: -3.666612148284912
    7. '=' → logprob: -4.416612148284912
    8. '
' → logprob: -4.791612148284912
    9. ')' → logprob: -4.791612148284912
    10. '    ' → logprob: -5.166612148284912

Token 94: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36618977785110474
    2. ' for' → logprob: -1.86618971824646
    3. '+' → logprob: -2.74118971824646
    4. ' ' → logprob: -2.99118971824646
    5. '   ' → logprob: -4.616189956665039
    6. '=' → logprob: -4.991189956665039
    7. '<|end|>' → logprob: -4.991189956665039
    8. ' =' → logprob: -5.616189956665039
    9. ')' → logprob: -5.866189956665039
    10. '    ' → logprob: -6.616189956665039

Token 95: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12133945524692535
    2. ' for' → logprob: -2.2463395595550537
    3. ' ' → logprob: -4.996339321136475
    4. '+' → logprob: -7.121339321136475
    5. '   ' → logprob: -7.621339321136475
    6. ')' → logprob: -9.121339797973633
    7. '    ' → logprob: -9.496339797973633
    8. '*' → logprob: -9.621339797973633
    9. '  ' → logprob: -10.371339797973633
    10. '=' → logprob: -10.746339797973633

Token 96: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4500187337398529
    2. ' c' → logprob: -1.3250187635421753
    3. ' s' → logprob: -3.4500186443328857
    4. 's' → logprob: -3.4500186443328857
    5. 'j' → logprob: -4.700018882751465
    6. 'ch' → logprob: -4.700018882751465
    7. ' ch' → logprob: -5.200018882751465
    8. ' j' → logprob: -5.200018882751465
    9. ' digit' → logprob: -6.825018882751465
    10. 'digit' → logprob: -7.575018882751465

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007013378664851189
    2. ' ' → logprob: -5.257013320922852
    3. 'in' → logprob: -6.382013320922852
    4. 's' → logprob: -10.632013320922852
    5. 'n' → logprob: -10.757013320922852
    6. '  ' → logprob: -11.382013320922852
    7. '<|end|>' → logprob: -11.632013320922852
    8. ' i' → logprob: -11.882013320922852
    9. 'e' → logprob: -13.007013320922852
    10. ' s' → logprob: -13.132013320922852

Token 98: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06198135390877724
    2. ' S' → logprob: -2.811981439590454
    3. ' ' → logprob: -11.686981201171875
    4. ' range' → logprob: -12.811981201171875
    5. 'range' → logprob: -13.436981201171875
    6. '(S' → logprob: -15.686981201171875
    7. '   ' → logprob: -15.936981201171875
    8. '  ' → logprob: -16.061981201171875
    9. '[' → logprob: -16.061981201171875
    10. '	S' → logprob: -16.311981201171875

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012546973302960396
    2. ':
' → logprob: -4.387547016143799
    3. '+' → logprob: -11.76254653930664
    4. ':
' → logprob: -11.88754653930664
    5. ':

' → logprob: -12.13754653930664
    6. ' :' → logprob: -12.26254653930664
    7. '           ' → logprob: -12.63754653930664
    8. ':return' → logprob: -13.26254653930664
    9. ':int' → logprob: -14.13754653930664
    10. '+:' → logprob: -14.13754653930664

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029624463990330696
    2. ' total' → logprob: -4.2796244621276855
    3. '+' → logprob: -4.5296244621276855
    4. 'total' → logprob: -5.9046244621276855
    5. ' ' → logprob: -7.6546244621276855
    6. '(total' → logprob: -7.7796244621276855
    7. ' +' → logprob: -8.529624938964844
    8. '0' → logprob: -8.904624938964844
    9. '            ' → logprob: -8.904624938964844
    10. '```' → logprob: -9.404624938964844

Token 101: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.12899644672870636
    2. 'total' (adapté à ' total') → logprob: -2.1289963722229004
    3. '               ' → logprob: -6.8789963722229
    4. '           ' → logprob: -7.3789963722229
    5. '            ' → logprob: -8.628996849060059
    6. '(total' → logprob: -9.878996849060059
    7. ' ' → logprob: -9.878996849060059
    8. '+' → logprob: -10.003996849060059
    9. '	total' → logprob: -10.628996849060059
    10. ',total' → logprob: -11.253996849060059

Token 102: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47445032000541687
    2. '+=' → logprob: -0.9744503498077393
    3. '+' → logprob: -8.09945011138916
    4. '=' → logprob: -10.72445011138916
    5. ' =' → logprob: -11.34945011138916
    6. ']+=' → logprob: -11.34945011138916
    7. ' +' → logprob: -11.72445011138916
    8. '+=(' → logprob: -12.09945011138916
    9. '           ' → logprob: -13.34945011138916
    10. '   ' → logprob: -13.47445011138916

Token 103: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0488889254629612
    2. ' int' → logprob: -3.048888921737671
    3. 'ord' → logprob: -8.67388916015625
    4. '1' → logprob: -9.79888916015625
    5. ' ord' → logprob: -10.67388916015625
    6. 'num' → logprob: -11.04888916015625
    7. ' ' → logprob: -11.54888916015625
    8. '(int' → logprob: -11.67388916015625
    9. '   ' → logprob: -11.79888916015625
    10. 'pow' → logprob: -12.92388916015625

Token 104: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0008130819769576192
    2. '(' → logprob: -7.125813007354736
    3. 's' → logprob: -11.750813484191895
    4. '(S' → logprob: -14.875813484191895
    5. '(x' → logprob: -16.375812530517578
    6. '(i' → logprob: -16.625812530517578
    7. ')' → logprob: -16.750812530517578
    8. '(
' → logprob: -17.125812530517578
    9. '(t' → logprob: -17.375812530517578
    10. ' (' → logprob: -17.500812530517578

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007553085451945662
    2. ' )' → logprob: -8.125755310058594
    3. ')**' → logprob: -8.375755310058594
    4. '**' → logprob: -9.375755310058594
    5. ')
' → logprob: -10.375755310058594
    6. '*' → logprob: -10.500755310058594
    7. ' ' → logprob: -10.750755310058594
    8. ')*' → logprob: -10.750755310058594
    9. '   ' → logprob: -11.000755310058594
    10. ')+' → logprob: -11.875755310058594

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015378848649561405
    2. '
' → logprob: -4.515378952026367
    3. '        
' → logprob: -6.515378952026367
    4. '   ' → logprob: -6.640378952026367
    5. '    
' → logprob: -8.265378952026367
    6. '
' → logprob: -8.390378952026367
    7. '+' → logprob: -8.390378952026367
    8. '           ' → logprob: -8.765378952026367
    9. '<|end|>' → logprob: -9.015378952026367
    10. ' +' → logprob: -9.515378952026367

Token 107: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38612258434295654
    2. '       ' → logprob: -1.8861225843429565
    3. ' if' → logprob: -2.011122703552246
    4. ' B' → logprob: -4.386122703552246
    5. 'B' (adapté à ' B') → logprob: -4.636122703552246
    6. 'if' → logprob: -4.636122703552246
    7. ' ' → logprob: -6.386122703552246
    8. '  ' → logprob: -8.761122703552246
    9. '        
' → logprob: -8.761122703552246
    10. '    ' → logprob: -8.761122703552246

Token 108: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02648596093058586
    2. '[num' → logprob: -3.6514859199523926
    3. '[i' → logprob: -9.40148639678955
    4. '[int' → logprob: -10.15148639678955
    5. 'total' → logprob: -11.02648639678955
    6. ' [' → logprob: -11.52648639678955
    7. '[s' → logprob: -12.15148639678955
    8. '[len' → logprob: -12.27648639678955
    9. ' total' → logprob: -12.77648639678955
    10. '[val' → logprob: -12.77648639678955

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001011611195281148
    2. ']=' → logprob: -7.751011848449707
    3. ' ]' → logprob: -7.876011848449707
    4. ']+=' → logprob: -8.626011848449707
    5. ']==' → logprob: -12.001011848449707
    6. '=' → logprob: -12.751011848449707
    7. '+' → logprob: -13.126011848449707
    8. ']>' → logprob: -13.251011848449707
    9. ']>=' → logprob: -13.751011848449707
    10. ']+' → logprob: -13.751011848449707

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31461289525032043
    2. '=' → logprob: -1.314612865447998
    3. ' +=' → logprob: -7.189612865447998
    4. '+=' → logprob: -7.564612865447998
    5. '=max' → logprob: -9.814613342285156
    6. ' ==' → logprob: -12.314613342285156
    7. ' ' → logprob: -13.064613342285156
    8. ' |=' → logprob: -13.064613342285156
    9. '=int' → logprob: -13.314613342285156
    10. '>=' → logprob: -13.689613342285156

Token 111: ' num' (ID: 2269)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02292490191757679
    2. ' total' → logprob: -3.8979249000549316
    3. 'max' → logprob: -7.022924900054932
    4. 'B' → logprob: -7.147924900054932
    5. '(total' → logprob: -8.89792537689209
    6. '1' → logprob: -9.02292537689209
    7. 'abs' → logprob: -9.02292537689209
    8. ' max' → logprob: -9.89792537689209
    9. 'min' → logprob: -10.02292537689209
    10. 'ans' → logprob: -10.02292537689209

Token 112: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00015181333583313972
    2. ' total' → logprob: -9.000151634216309
    3. 'otal' → logprob: -11.875151634216309
    4. 'int' → logprob: -12.250151634216309
    5. '(total' → logprob: -12.375151634216309
    6. 'tot' → logprob: -13.000151634216309
    7. 'ans' → logprob: -13.000151634216309
    8. '10' → logprob: -13.625151634216309
    9. 'max' → logprob: -13.750151634216309
    10. 't' → logprob: -14.125151634216309

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.358559250831604
    2. '
' → logprob: -1.983559250831604
    3. '<|end|>' → logprob: -1.983559250831604
    4. '    
' → logprob: -4.7335591316223145
    5. ')' → logprob: -6.1085591316223145
    6. '  
' → logprob: -6.4835591316223145
    7. '```' → logprob: -6.4835591316223145
    8. 'max' → logprob: -6.4835591316223145
    9. '[' → logprob: -6.9835591316223145
    10. 'B' → logprob: -7.1085591316223145

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.192068412899971
    2. '<|end|>' → logprob: -1.8170684576034546
    3. '
' → logprob: -5.817068576812744
    4. '    
' → logprob: -6.317068576812744
    5. ')' → logprob: -6.692068576812744
    6. 'B' → logprob: -7.317068576812744
    7. ' ' → logprob: -7.567068576812744
    8. ' if' → logprob: -7.567068576812744
    9. 'max' → logprob: -7.942068576812744
    10. ' for' → logprob: -7.942068576812744

Token 116: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6391481161117554
    2. '<|end|>' → logprob: -2.139148235321045
    3. 'max' → logprob: -2.764148235321045
    4. 'for' → logprob: -2.889148235321045
    5. ' ' → logprob: -3.389148235321045
    6. 'if' (adapté à ' if') → logprob: -3.389148235321045
    7. 'B' → logprob: -3.764148235321045
    8. ' if' → logprob: -4.014148235321045
    9. ' for' → logprob: -4.014148235321045
    10. ')' → logprob: -4.139148235321045

Token 117: ' i' (ID: 575)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.021013371646404266
    2. 'B' → logprob: -3.8960132598876953
    3. ' ' → logprob: -8.646013259887695
    4. ' max' → logprob: -9.021013259887695
    5. ' Ans' → logprob: -9.271013259887695
    6. ' ans' → logprob: -10.521013259887695
    7. ' K' → logprob: -11.521013259887695
    8. ' ' → logprob: -11.771013259887695
    9. 'Ans' → logprob: -11.896013259887695
    10. 'max' → logprob: -11.896013259887695

Token 118: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36500924825668335
    2. '==' → logprob: -2.115009307861328
    3. ' >' → logprob: -2.615009307861328
    4. ' ' → logprob: -2.865009307861328
    5. '<|end|>' → logprob: -4.240009307861328
    6. '+' → logprob: -4.365009307861328
    7. '>' → logprob: -4.490009307861328
    8. ' <' → logprob: -5.365009307861328
    9. '<|end|>' → logprob: -6.365009307861328
    10. ')' → logprob: -7.115009307861328

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22833064198493958
    2. ' ' → logprob: -1.6033306121826172
    3. '1' → logprob: -5.978330612182617
    4. '=' → logprob: -9.353330612182617
    5. '2' → logprob: -9.978330612182617
    6. '100' → logprob: -10.353330612182617
    7. '5' → logprob: -10.415830612182617
    8. '10' → logprob: -10.540830612182617
    9. '3' → logprob: -10.790830612182617
    10. '9' → logprob: -10.915830612182617

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01988697052001953
    2. '1' → logprob: -4.6448869705200195
    3. ' ' → logprob: -4.8948869705200195
    4. 'K' → logprob: -7.1448869705200195
    5. 'Ans' → logprob: -7.5198869705200195
    6. '9' → logprob: -7.8948869705200195
    7. '5' → logprob: -9.14488697052002
    8. '2' → logprob: -9.26988697052002
    9. 'B' → logprob: -9.39488697052002
    10. '=' → logprob: -9.64488697052002

Token 121: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015660081058740616
    2. 'and' → logprob: -4.765660285949707
    3. ':' → logprob: -5.015660285949707
    4. '   ' → logprob: -8.765660285949707
    5. ':
' → logprob: -9.765660285949707
    6. '<|end|>' → logprob: -9.765660285949707
    7. '	and' → logprob: -10.390660285949707
    8. '       ' → logprob: -10.640660285949707
    9. ' :' → logprob: -11.015660285949707
    10. ' ' → logprob: -11.765660285949707

Token 122: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4805586636066437
    2. ' if' → logprob: -1.3555586338043213
    3. ' and' → logprob: -2.8555586338043213
    4. 'if' → logprob: -3.6055586338043213
    5. '   ' → logprob: -3.7305586338043213
    6. '           ' → logprob: -5.4805588722229
    7. '<|end|>' → logprob: -5.6055588722229
    8. ' B' → logprob: -6.1055588722229
    9. 'and' → logprob: -6.1055588722229
    10. ' ' → logprob: -6.6055588722229

Token 123: ' if' (ID: 538)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6346680521965027
    2. 'if' (adapté à ' if') → logprob: -1.0096681118011475
    3. '           ' → logprob: -3.2596681118011475
    4. ' if' → logprob: -3.5096681118011475
    5. 'Ans' → logprob: -3.8846681118011475
    6. '               ' → logprob: -5.009667873382568
    7. ' B' → logprob: -5.384667873382568
    8. '   ' → logprob: -5.634667873382568
    9. ' Ans' → logprob: -7.884667873382568
    10. '       ' → logprob: -7.884667873382568

Token 124: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.026363588869571686
    2. 'B' → logprob: -3.6513636112213135
    3. ' abs' → logprob: -9.901363372802734
    4. 'abs' → logprob: -12.901363372802734
    5. ' ' → logprob: -13.026363372802734
    6. '(B' → logprob: -13.026363372802734
    7. '    ' → logprob: -13.276363372802734
    8. '   ' → logprob: -13.651363372802734
    9. '	B' → logprob: -13.651363372802734
    10. '(' → logprob: -14.901363372802734

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008211841923184693
    2. '[' → logprob: -7.125821113586426
    3. ' [' → logprob: -11.375821113586426
    4. ']' → logprob: -13.125821113586426
    5. '[x' → logprob: -14.250821113586426
    6. '[I' → logprob: -14.250821113586426
    7. '[j' → logprob: -14.375821113586426
    8. '[-' → logprob: -15.625821113586426
    9. '```' → logprob: -15.750821113586426
    10. '[
' → logprob: -15.750821113586426

Token 126: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5209096670150757
    2. '<' → logprob: -1.1459096670150757
    3. ']' → logprob: -3.3959097862243652
    4. ' >' → logprob: -3.5209097862243652
    5. '>' → logprob: -4.020909786224365
    6. '[' → logprob: -5.770909786224365
    7. ']<' → logprob: -6.395909786224365
    8. ' ' → logprob: -7.395909786224365
    9. ' ]' → logprob: -7.645909786224365
    10. ']>' → logprob: -8.395909309387207

Token 127: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1028217151761055
    2. ' <' → logprob: -2.4778218269348145
    3. '>' → logprob: -4.6028218269348145
    4. ' >' → logprob: -5.7278218269348145
    5. '<=' → logprob: -8.852821350097656
    6. '<B' → logprob: -8.852821350097656
    7. '>=' → logprob: -9.227821350097656
    8. ' <=' → logprob: -9.477821350097656
    9. ' >=' → logprob: -11.102821350097656
    10. '[' → logprob: -11.852821350097656

Token 128: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0013278567930683494
    2. ' B' → logprob: -6.626327991485596
    3. '   ' → logprob: -13.876327514648438
    4. ' ' → logprob: -15.251327514648438
    5. '	B' → logprob: -15.626327514648438
    6. '       ' → logprob: -15.626327514648438
    7. '  ' → logprob: -16.126327514648438
    8. '           ' → logprob: -16.251327514648438
    9. 'min' → logprob: -16.626327514648438
    10. '=B' → logprob: -17.251327514648438

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.000000953674316
    3. 'i' → logprob: -14.500000953674316
    4. '   ' → logprob: -18.625001907348633
    5. '[j' → logprob: -18.875001907348633
    6. ' [' → logprob: -18.875001907348633
    7. '[min' → logprob: -20.125001907348633
    8. '[max' → logprob: -20.250001907348633
    9. '
' → logprob: -20.500001907348633
    10. '{i' → logprob: -20.625001907348633

Token 130: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0032253677491098642
    2. ' -' → logprob: -6.128225326538086
    3. '[i' → logprob: -6.878225326538086
    4. 'i' → logprob: -12.628225326538086
    5. '[' → logprob: -12.753225326538086
    6. '1' → logprob: -13.628225326538086
    7. '[-' → logprob: -14.503225326538086
    8. ' ' → logprob: -14.753225326538086
    9. '-i' → logprob: -14.753225326538086
    10. ' i' → logprob: -14.878225326538086

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.404745439183898e-05
    2. ' ' → logprob: -10.50003433227539
    3. ']' → logprob: -13.25003433227539
    4. '   ' → logprob: -13.50003433227539
    5. 'B' → logprob: -15.12503433227539
    6. '  ' → logprob: -15.18753433227539
    7. '<|end|>' → logprob: -15.18753433227539
    8. '```' → logprob: -15.25003433227539
    9. '[' → logprob: -15.62503433227539
    10. ']+' → logprob: -15.87503433227539

Token 132: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2555828094482422
    2. '):' → logprob: -1.7555828094482422
    3. ':
' → logprob: -3.380582809448242
    4. '):
' → logprob: -4.505582809448242
    5. ']:' → logprob: -5.630582809448242
    6. ' and' → logprob: -6.130582809448242
    7. ' or' → logprob: -7.255582809448242
    8. '       ' → logprob: -7.630582809448242
    9. ']:
' → logprob: -8.880582809448242
    10. '           ' → logprob: -9.255582809448242

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08168653398752213
    2. '           ' → logprob: -3.206686496734619
    3. ':' → logprob: -4.081686496734619
    4. '       ' → logprob: -4.331686496734619
    5. ':
' → logprob: -5.581686496734619
    6. ' and' → logprob: -6.331686496734619
    7. ' :' → logprob: -8.206686973571777
    8. '   ' → logprob: -8.331686973571777
    9. '<|end|>' → logprob: -8.331686973571777
    10. '):
' → logprob: -8.456686973571777

Token 134: ' Ans' (ID: 22542)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5017383694648743
    2. 'print' → logprob: -1.8767383098602295
    3. 'break' → logprob: -2.0017383098602295
    4. ' print' → logprob: -2.5017383098602295
    5. '               ' → logprob: -4.126738548278809
    6. '   ' → logprob: -5.751738548278809
    7. '           ' → logprob: -6.001738548278809
    8. ' Ans' → logprob: -7.126738548278809
    9. '       ' → logprob: -7.626738548278809
    10. 'Ans' (adapté à ' Ans') → logprob: -8.001738548278809

Token 135: '.pop' (ID: 15746)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3141115605831146
    2. '.' → logprob: -1.314111590385437
    3. '.pop' → logprob: -7.939111709594727
    4. '.extend' → logprob: -8.064111709594727
    5. ' =' → logprob: -9.689111709594727
    6. '=' → logprob: -10.439111709594727
    7. ' .' → logprob: -10.689111709594727
    8. '.app' → logprob: -11.189111709594727
    9. '.remove' → logprob: -11.189111709594727
    10. '.ap' → logprob: -11.689111709594727

Token 136: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00791393592953682
    2. '(-' → logprob: -5.007914066314697
    3. '()-' → logprob: -6.757914066314697
    4. '(' → logprob: -10.632913589477539
    5. '()
' → logprob: -12.132913589477539
    6. '-' → logprob: -12.757913589477539
    7. '()

' → logprob: -13.382913589477539
    8. '()]' → logprob: -13.882913589477539
    9. '()`' → logprob: -15.257913589477539
    10. '()%' → logprob: -15.632913589477539

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006464536301791668
    2. ')' → logprob: -5.63146448135376
    3. '<|end|>' → logprob: -6.38146448135376
    4. '                
' → logprob: -7.63146448135376
    5. ',' → logprob: -8.256464958190918
    6. '                ' → logprob: -9.256464958190918
    7. '              ' → logprob: -10.256464958190918
    8. 'else' → logprob: -10.506464958190918
    9. ')
' → logprob: -10.506464958190918
    10. '<|end|>' → logprob: -10.506464958190918

Token 138: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03182172030210495
    2. 'Ans' → logprob: -3.6568217277526855
    3. ' break' → logprob: -5.2818217277526855
    4. 'Break' → logprob: -8.781821250915527
    5. ' Ans' → logprob: -9.156821250915527
    6. '               ' → logprob: -9.281821250915527
    7. '	break' → logprob: -11.156821250915527
    8. 'ans' → logprob: -11.406821250915527
    9. '```' → logprob: -11.781821250915527
    10. '       ' → logprob: -12.156821250915527

Token 139: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004314634017646313
    2. 'Ans' → logprob: -6.504314422607422
    3. ',' → logprob: -7.004314422607422
    4. '       ' → logprob: -7.879314422607422
    5. ')' → logprob: -7.879314422607422
    6. ' ' → logprob: -8.004314422607422
    7. '<|end|>' → logprob: -8.629314422607422
    8. '.' → logprob: -8.754314422607422
    9. '  ' → logprob: -9.379314422607422
    10. ' Ans' → logprob: -9.379314422607422

Token 140: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00942891463637352
    2. 'Ans' → logprob: -4.884428977966309
    3. ' ' → logprob: -8.009428977966309
    4. ',' → logprob: -8.509428977966309
    5. '       ' → logprob: -8.759428977966309
    6. 'print' → logprob: -9.009428977966309
    7. '<|end|>' → logprob: -9.009428977966309
    8. ' Ans' → logprob: -9.009428977966309
    9. '  ' → logprob: -9.134428977966309
    10. ')' → logprob: -9.134428977966309

Token 141: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1191163882613182
    2. '       ' → logprob: -2.4941163063049316
    3. 'Ans' → logprob: -3.6191163063049316
    4. '           ' → logprob: -7.244116306304932
    5. 'else' (adapté à ' else') → logprob: -7.369116306304932
    6. ' ' → logprob: -7.869116306304932
    7. ' else' → logprob: -8.49411678314209
    8. ' Ans' → logprob: -8.61911678314209
    9. '	' → logprob: -9.24411678314209
    10. ')' → logprob: -9.24411678314209

Token 142: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007899749092757702
    2. '           ' → logprob: -5.632899761199951
    3. ' Ans' → logprob: -6.757899761199951
    4. ':' → logprob: -7.132899761199951
    5. 'Ans' → logprob: -7.132899761199951
    6. '   ' → logprob: -7.382899761199951
    7. '       ' → logprob: -7.507899761199951
    8. ' ' → logprob: -10.007899284362793
    9. '              ' → logprob: -10.007899284362793
    10. ':
' → logprob: -10.132899284362793

Token 143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32586491107940674
    2. 'Ans' → logprob: -1.3258649110794067
    3. '   ' → logprob: -5.075864791870117
    4. '           ' → logprob: -5.575864791870117
    5. ' Ans' → logprob: -6.325864791870117
    6. '       ' → logprob: -7.825864791870117
    7. 'Answer' → logprob: -8.825864791870117
    8. ' ' → logprob: -10.450864791870117
    9. '                   ' → logprob: -10.700864791870117
    10. ' Ansatz' → logprob: -10.700864791870117

Token 144: ' if' (ID: 538)
  Prédit: 'Ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -0.0004291195946279913
    2. ' Ans' → logprob: -8.125429153442383
    3. '   ' → logprob: -9.875429153442383
    4. '           ' → logprob: -9.875429153442383
    5. '               ' → logprob: -11.500429153442383
    6. '       ' → logprob: -12.125429153442383
    7. 'ans' → logprob: -12.500429153442383
    8. 'break' → logprob: -12.750429153442383
    9. 'Answer' → logprob: -13.250429153442383
    10. 'B' → logprob: -13.500429153442383

Token 145: ' num' (ID: 2269)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5775129199028015
    2. 'B' → logprob: -1.0775129795074463
    3. 'len' → logprob: -3.7025129795074463
    4. ' len' → logprob: -3.9525129795074463
    5. 'num' → logprob: -4.327512741088867
    6. ' num' → logprob: -4.827512741088867
    7. ' Ans' → logprob: -5.077512741088867
    8. 'Ans' → logprob: -5.452512741088867
    9. ' n' → logprob: -5.577512741088867
    10. 'n' → logprob: -5.577512741088867

Token 146: ' not' (ID: 625)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5838585495948792
    2. '%' → logprob: -1.0838584899902344
    3. ' ==' → logprob: -2.9588584899902344
    4. '==' → logprob: -3.7088584899902344
    5. ' <=' → logprob: -5.708858489990234
    6. '*' → logprob: -5.833858489990234
    7. ' *' → logprob: -6.083858489990234
    8. ' >' → logprob: -6.208858489990234
    9. '>' → logprob: -6.333858489990234
    10. '%B' → logprob: -6.333858489990234

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006727564614266157
    2. 'in' → logprob: -5.006727695465088
    3. ' ' → logprob: -12.25672721862793
    4. ')' → logprob: -13.63172721862793
    5. '=' → logprob: -14.13172721862793
    6. 'Ans' → logprob: -14.38172721862793
    7. '  ' → logprob: -14.50672721862793
    8. ' =' → logprob: -14.75672721862793
    9. ' not' → logprob: -14.94422721862793
    10. '
' → logprob: -15.06922721862793

Token 148: ' Ans' (ID: 22542)
  Prédit: 'Ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -0.001511408481746912
    2. ' Ans' → logprob: -6.501511573791504
    3. 'Answer' → logprob: -12.001511573791504
    4. 'ans' → logprob: -13.876511573791504
    5. '   ' → logprob: -14.751511573791504
    6. 'Answers' → logprob: -15.126511573791504
    7. 'set' → logprob: -15.376511573791504
    8. ' ' → logprob: -15.376511573791504
    9. '.Ans' → logprob: -15.501511573791504
    10. '_ans' → logprob: -16.251510620117188

Token 149: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28871843218803406
    2. ':' → logprob: -1.6637184619903564
    3. ' and' → logprob: -2.9137184619903564
    4. '):
' → logprob: -6.038718223571777
    5. 'and' → logprob: -6.163718223571777
    6. '                   ' → logprob: -6.538718223571777
    7. '               ' → logprob: -7.913718223571777
    8. '.append' → logprob: -8.413718223571777
    9. '           ' → logprob: -9.288718223571777
    10. '():
' → logprob: -9.288718223571777

Token 150: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00473734550178051
    2. '               ' → logprob: -7.004737377166748
    3. ' Ans' → logprob: -7.129737377166748
    4. 'Ans' → logprob: -7.254737377166748
    5. '<|end|>' → logprob: -7.754737377166748
    6. '                       ' → logprob: -7.879737377166748
    7. '                    
' → logprob: -8.12973690032959
    8. '.append' → logprob: -8.50473690032959
    9. '           ' → logprob: -8.50473690032959
    10. ' ans' → logprob: -9.12973690032959

Token 151: ' Ans' (ID: 22542)
  Prédit: ' Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ans' → logprob: -0.7973245978355408
    2. '                   ' → logprob: -0.9223245978355408
    3. 'Ans' (adapté à ' Ans') → logprob: -2.4223246574401855
    4. '                       ' → logprob: -2.7973246574401855
    5. ' An' → logprob: -7.7973246574401855
    6. ' ans' → logprob: -8.047324180603027
    7. '               ' → logprob: -8.422324180603027
    8. '                    ' → logprob: -8.422324180603027
    9. '                           ' → logprob: -8.547324180603027
    10. ' Ansatz' → logprob: -8.547324180603027

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011069540778407827
    2. '.' → logprob: -9.125110626220703
    3. ' .' → logprob: -14.000110626220703
    4. '.extend' → logprob: -14.375110626220703
    5. '.push' → logprob: -16.000110626220703
    6. '+.' → logprob: -17.125110626220703
    7. '.setdefault' → logprob: -17.750110626220703
    8. '.Append' → logprob: -17.875110626220703
    9. '.insert' → logprob: -18.000110626220703
    10. '.app' → logprob: -18.375110626220703

Token 153: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -4.8232690460281447e-05
    2. '(' → logprob: -10.000048637390137
    3. 'num' → logprob: -12.875048637390137
    4. '(number' → logprob: -17.50004768371582
    5. ',num' → logprob: -17.75004768371582
    6. '(
' → logprob: -18.00004768371582
    7. ' num' → logprob: -18.00004768371582
    8. '(n' → logprob: -18.25004768371582
    9. ' (' → logprob: -19.37504768371582
    10. '	num' → logprob: -19.87504768371582

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ')
' → logprob: -11.375014305114746
    3. ' )' → logprob: -13.750014305114746
    4. '               ' → logprob: -14.500014305114746
    5. '                   ' → logprob: -15.000014305114746
    6. '<|end|>' → logprob: -15.000014305114746
    7. '))' → logprob: -15.375014305114746
    8. '       ' → logprob: -16.000015258789062
    9. ')#' → logprob: -16.125015258789062
    10. ')return' → logprob: -16.125015258789062

Token 155: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6640341877937317
    2. ' x' → logprob: -1.039034128189087
    3. 'x' → logprob: -3.289034128189087
    4. 'i' → logprob: -3.539034128189087
    5. ' k' → logprob: -4.039034366607666
    6. ' K' → logprob: -4.414034366607666
    7. ' num' → logprob: -4.789034366607666
    8. ' ans' → logprob: -5.414034366607666
    9. 'K' → logprob: -5.664034366607666
    10. ' a' → logprob: -5.789034366607666

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029890025034546852
    2. 'in' → logprob: -3.5298900604248047
    3. ' ' → logprob: -9.029890060424805
    4. '  ' → logprob: -11.529890060424805
    5. ' range' → logprob: -12.779890060424805
    6. ' i' → logprob: -13.404890060424805
    7. '(' → logprob: -13.779890060424805
    8. '	in' → logprob: -13.904890060424805
    9. '   ' → logprob: -14.279890060424805
    10. ',' → logprob: -14.404890060424805

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0794324278831482
    2. ' range' → logprob: -2.829432487487793
    3. 'Ans' → logprob: -4.079432487487793
    4. ' Ans' → logprob: -8.079432487487793
    5. 'Range' → logprob: -10.704432487487793
    6. 'ans' → logprob: -10.829432487487793
    7. 'sorted' → logprob: -11.454432487487793
    8. '(range' → logprob: -12.079432487487793
    9. 'Answer' → logprob: -12.329432487487793
    10. 'len' → logprob: -12.579432487487793

Token 159: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.3795236349105835
    2. '(len' → logprob: -1.5045236349105835
    3. '(' → logprob: -2.379523754119873
    4. '(min' → logprob: -7.129523754119873
    5. '(k' → logprob: -8.504523277282715
    6. '((' → logprob: -10.629523277282715
    7. ' (' → logprob: -10.879523277282715
    8. '(max' → logprob: -11.379523277282715
    9. '(A' → logprob: -12.504523277282715
    10. 'K' → logprob: -12.504523277282715

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005753128207288682
    2. '):
' → logprob: -7.500575542449951
    3. '+' → logprob: -11.625575065612793
    4. ' ):' → logprob: -11.875575065612793
    5. '):
' → logprob: -13.250575065612793
    6. ')' → logprob: -13.375575065612793
    7. ':' → logprob: -14.125575065612793
    8. ']:' → logprob: -14.375575065612793
    9. '   ' → logprob: -14.500575065612793
    10. '():' → logprob: -14.750575065612793

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18103864789009094
    2. ' print' → logprob: -1.8060386180877686
    3. 'print' → logprob: -6.681038856506348
    4. '	print' → logprob: -10.681038856506348
    5. '<|end|>' → logprob: -12.931038856506348
    6. '(print' → logprob: -13.181038856506348
    7. '   ' → logprob: -13.306038856506348
    8. '       ' → logprob: -13.306038856506348
    9. '```' → logprob: -13.431038856506348
    10. '
' → logprob: -13.681038856506348

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08011684566736221
    2. ' print' → logprob: -2.5801167488098145
    3. '   ' → logprob: -6.7051167488098145
    4. '	print' → logprob: -13.705117225646973
    5. ' ' → logprob: -15.080117225646973
    6. '```' → logprob: -16.205116271972656
    7. '  ' → logprob: -16.580116271972656
    8. '_print' → logprob: -17.705116271972656
    9. '.print' → logprob: -18.455116271972656
    10. 'Print' → logprob: -18.455116271972656

Token 163: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03203682601451874
    2. 'Ans' → logprob: -3.532036781311035
    3. ' Ans' → logprob: -6.157036781311035
    4. '(ans' → logprob: -8.782036781311035
    5. '('' → logprob: -12.282036781311035
    6. ' (' → logprob: -13.032036781311035
    7. '("' → logprob: -13.157036781311035
    8. '(
' → logprob: -13.407036781311035
    9. 'ans' → logprob: -14.907036781311035
    10. '_ans' → logprob: -14.907036781311035

Token 164: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -0.0011712945997714996
    2. ' Ans' → logprob: -6.751171112060547
    3. 'Answer' → logprob: -14.876171112060547
    4. 'ans' → logprob: -15.001171112060547
    5. ' Ansatz' → logprob: -15.501171112060547
    6. '   ' → logprob: -16.376171112060547
    7. 'An' → logprob: -16.626171112060547
    8. '_ans' → logprob: -17.626171112060547
    9. ' ans' → logprob: -17.751171112060547
    10. 'ANS' → logprob: -18.126171112060547

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1994775377388578e-05
    2. '[' → logprob: -11.375012397766113
    3. ')' → logprob: -15.375012397766113
    4. ')[' → logprob: -15.750012397766113
    5. '[
' → logprob: -17.250011444091797
    6. '   ' → logprob: -17.875011444091797
    7. ' [' → logprob: -18.250011444091797
    8. '[min' → logprob: -18.625011444091797
    9. '[I' → logprob: -18.750011444091797
    10. ']' → logprob: -19.000011444091797

Token 166: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.8087270038668066e-05
    2. ')' → logprob: -10.750027656555176
    3. ']' → logprob: -13.125027656555176
    4. '])
' → logprob: -13.250027656555176
    5. ' ])' → logprob: -13.625027656555176
    6. '))' → logprob: -14.375027656555176
    7. ')]' → logprob: -14.375027656555176
    8. ')])' → logprob: -14.750027656555176
    9. '],' → logprob: -16.875028610229492
    10. ']))' → logprob: -17.250028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 164
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 134
Précision stricte (1ère position): 41.46%
Précision adaptée (1ère position): 43.29%
Précision (top 10): 81.71%
================================================================================
