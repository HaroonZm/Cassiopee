================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir un entier, qui sera stocké dans la variable N
# Cette valeur représente généralement le nombre d'éléments dans un tableau ou une liste
N = int(input())

# Demander à l'utilisateur de saisir une ligne de N entiers séparés par des espaces
# La fonction input() renvoie une chaîne de caractères que l'on découpe en morceaux avec split()
# map(int, ...) transforme chaque morceau de chaîne en entier
# Enfin, on transforme le résultat de map en une liste d'entiers avec list()
C = list(map(int, input().split()))

# Définir une constante MOD à 1_000_000_007 (un milliard sept)
# Ce nombre premier est couramment utilisé pour éviter les débordements lors de
# grands calculs dans des problèmes algorithmiques, en gardant les résultats dans un intervalle raisonnable
MOD = 1_000_000_007

# Préparer une liste B qui contiendra les puissances de 2 modulo MOD
# Cette liste aura une taille de N+1, suffisamment grande pour contenir de B[0] à B[N]
# On initialise tous les éléments de B à 0 en utilisant une compréhension de liste
B = [0 for _ in range(N+1)]

# La première puissance de 2 (2^0) est toujours 1, donc on initialise B[0] à 1
B[0] = 1

# Cette boucle calcule les puissances de 2 de 1 à N inclus
# Pour chaque i de 1 à N, on calcule B[i] comme étant B[i-1] multiplié par 2
# Ensuite, on prend le résultat modulo MOD pour garder la valeur dans l'intervalle [0, MOD-1]
for i in range(1, N+1):
    B[i] = B[i-1] * 2
    # Le symbole %= est une forme abrégée pour B[i] = B[i] % MOD
    B[i] %= MOD

# On trie la liste C par ordre croissant avec la méthode sort()
# Cela facilite certains calculs ultérieurs où l'ordre des éléments est important
C.sort()

# Initialiser la variable ans à 0, qui contiendra le résultat final
ans = 0

# Parcourir tous les entiers n de 1 à N inclus (attention à l'indice, car les listes commencent à 0 en Python)
for n in range(1, N+1):
    # Pour chaque élément, on effectue un calcul complexe basé sur la tâche algorithmique
    # Il s'agit d'une somme pondérée par des puissances de 2, adaptée à la position de l'élément C[n-1]
    # Explication du calcul pour chaque terme :
    # - C[n-1] : on récupère le (n-1)-ème élément car C est indexée à partir de 0
    # - (N-n) : représente le nombre d'éléments "restants" après la position n
    # - B[N-n-1] et B[N-n] : puissances de 2 spécifiques selon la position
    # - B[n-1] : puissance de 2 selon le début du tableau
    # - Chaque terme est multiplié et la somme est accumulée dans ans
    ans += C[n-1] * ((N-n) * B[N-n-1] + B[N-n]) * B[n-1]
    # On prend aussi le résultat modulo MOD à chaque itération pour éviter le débordement
    ans %= MOD

# On multiplie ans par B[N] (c'est-à-dire 2 puissance N modulo MOD)
# Cela correspond souvent à une normalisation ou à une répartition sur tous les sous-ensembles possibles d'une liste de taille N
ans *= B[N]
# Encore une fois, on applique le modulo pour sécuriser la valeur finale
ans %= MOD

# Afficher la réponse finale à l'utilisateur avec la fonction print()
print(ans)

# -----------------------------------------------------
# Partie commentée (à titre d'explication ou de tentative alternative)
"""
# Initialiser une liste D de taille N pour stocker la somme cumulée des éléments de C
# D[0] sera simplement le premier élément de C
D = [0 for _ in range(N)] #累積和

# Initialisation de la première valeur de D
D[0] = C[0]

# Boucle de 1 à N-1 pour calculer à chaque fois la somme cumulée jusqu'à la position actuelle
for i in range(1, N):
    D[i] = D[i-1] + C[i]

# Afficher la liste triée C (à des fins de vérification ou de débogage)
print(C)

# Initialisation de la variable ans à 0 pour une nouvelle somme (éventuellement pour une approche alternative)
ans = 0

# Boucle sur j de 1 à N inclus pour accumuler des produits de la forme D[j-1] * B[j-1]
for j in range(1, N+1):
    ans += D[j-1] * B[j-1]
    print(D[j-1] * B[j-1])
"""
# Fin du code avec explications détaillées
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.23920384049415588
    2. ' ' → logprob: -2.364203929901123
    3. 'à' → logprob: -3.239203929901123
    4. ' a' → logprob: -3.739203929901123
    5. 'l' → logprob: -4.489203929901123
    6. '_' → logprob: -5.114203929901123
    7. 'le' → logprob: -5.114203929901123
    8. ' =' → logprob: -5.364203929901123
    9. 'a' → logprob: -5.614203929901123
    10. ' la' → logprob: -5.739203929901123

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2600235641002655
    2. 'util' → logprob: -1.510023593902588
    3. 'user' → logprob: -5.010023593902588
    4. ' l' → logprob: -7.010023593902588
    5. 'input' → logprob: -8.76002311706543
    6. 'un' → logprob: -9.38502311706543
    7. 'u' → logprob: -9.88502311706543
    8. 'us' → logprob: -10.01002311706543
    9. 'client' → logprob: -10.76002311706543
    10. 'la' → logprob: -11.01002311706543

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.34037506580352783
    2. 'util' → logprob: -2.4653749465942383
    3. 'u' → logprob: -2.5903749465942383
    4. ' utilisateur' → logprob: -2.7153749465942383
    5. 'a' → logprob: -3.4653749465942383
    6. '’utilisateur' → logprob: -3.7153749465942383
    7. ''' → logprob: -5.840374946594238
    8. ' user' → logprob: -7.215374946594238
    9. 'user' → logprob: -7.340374946594238
    10. ' ' → logprob: -7.590374946594238

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3965097963809967
    2. 's' → logprob: -2.396509885787964
    3. 'input' → logprob: -3.146509885787964
    4. ' nom' → logprob: -3.146509885787964
    5. 'n' → logprob: -3.396509885787964
    6. 'name' → logprob: -4.396509647369385
    7. 'd' → logprob: -4.646509647369385
    8. '```' → logprob: -4.771509647369385
    9. '#' → logprob: -4.896509647369385
    10. ' ' → logprob: -5.021509647369385

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16600659489631653
    2. 'entr' → logprob: -2.666006565093994
    3. ' saisir' → logprob: -2.791006565093994
    4. '```' → logprob: -4.791006565093994
    5. ' entrer' → logprob: -4.916006565093994
    6. 'r' → logprob: -5.916006565093994
    7. 'entrée' → logprob: -7.166006565093994
    8. 'ent' → logprob: -7.541006565093994
    9. 'input' → logprob: -7.666006565093994
    10. 'enter' → logprob: -7.916006565093994

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015666654333472252
    2. '_' → logprob: -5.390666484832764
    3. ' un' → logprob: -5.640666484832764
    4. ''' → logprob: -6.140666484832764
    5. ' une' → logprob: -6.265666484832764
    6. 's' → logprob: -7.390666484832764
    7. 'u' → logprob: -7.640666484832764
    8. ' ' → logprob: -7.890666484832764
    9. ' a' → logprob: -8.390666961669922
    10. ' u' → logprob: -8.515666961669922

Token 9: ' entier' (ID: 80473)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5127344727516174
    2. ' nombre' → logprob: -1.1377344131469727
    3. 'nom' → logprob: -3.8877344131469727
    4. 'e' → logprob: -4.012734413146973
    5. ' nom' → logprob: -4.762734413146973
    6. 'texte' → logprob: -4.887734413146973
    7. ' ' → logprob: -5.262734413146973
    8. 'n' → logprob: -5.387734413146973
    9. 'a' → logprob: -6.262734413146973
    10. 's' → logprob: -6.637734413146973

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.044631797820329666
    2. 'x' → logprob: -4.2946319580078125
    3. 'ent' → logprob: -4.6696319580078125
    4. '\n' → logprob: -4.7946319580078125
    5. 'i' → logprob: -5.7946319580078125
    6. '\' → logprob: -6.4196319580078125
    7. 'entr' → logprob: -6.6696319580078125
    8. '```' → logprob: -6.7946319580078125
    9. 'user' → logprob: -7.0446319580078125
    10. 'input' → logprob: -7.0446319580078125

Token 11: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6925650238990784
    2. 'n' → logprob: -0.9425650238990784
    3. 'input' → logprob: -3.3175649642944336
    4. ' n' → logprob: -3.9425649642944336
    5. ' input' → logprob: -4.192564964294434
    6. 's' → logprob: -4.942564964294434
    7. 'ent' → logprob: -4.942564964294434
    8. 'a' → logprob: -6.067564964294434
    9. 'num' → logprob: -6.317564964294434
    10. 'x' → logprob: -6.442564964294434

Token 12: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12769944965839386
    2. '_' → logprob: -2.877699375152588
    3. 's' → logprob: -3.502699375152588
    4. ''' → logprob: -4.127699375152588
    5. '`' → logprob: -5.502699375152588
    6. '```' → logprob: -6.627699375152588
    7. ' sera' → logprob: -6.752699375152588
    8. 'est' → logprob: -6.877699375152588
    9. '_s' → logprob: -7.252699375152588
    10. 'n' → logprob: -7.377699375152588

Token 13: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.09994123131036758
    2. 'stock' → logprob: -2.9749412536621094
    3. ' utilisé' → logprob: -4.224941253662109
    4. 'convert' → logprob: -4.474941253662109
    5. 'util' → logprob: -5.099941253662109
    6. 'multip' → logprob: -5.849941253662109
    7. ' ensuite' → logprob: -6.099941253662109
    8. ' convert' → logprob: -6.599941253662109
    9. ' multip' → logprob: -6.599941253662109
    10. 's' → logprob: -6.974941253662109

Token 14: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00766364810988307
    2. ' ' → logprob: -5.132663726806641
    3. 'é' → logprob: -7.007663726806641
    4. ' _' → logprob: -8.63266372680664
    5. 'e' → logprob: -9.00766372680664
    6. '_d' → logprob: -9.13266372680664
    7. 's' → logprob: -9.38266372680664
    8. 'er' → logprob: -9.63266372680664
    9. ' ' → logprob: -9.88266372680664
    10. 'r' → logprob: -10.50766372680664

Token 15: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.127939373254776
    2. ' ' → logprob: -2.252939462661743
    3. 's' → logprob: -5.627939224243164
    4. '`' → logprob: -6.252939224243164
    5. 'dans' → logprob: -6.252939224243164
    6. '.' → logprob: -6.877939224243164
    7. ',' → logprob: -7.252939224243164
    8. 'n' → logprob: -7.502939224243164
    9. ' ' → logprob: -7.502939224243164
    10. 'a' → logprob: -7.627939224243164

Token 16: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9112015962600708
    2. ' la' → logprob: -1.2862015962600708
    3. 'une' → logprob: -1.4112015962600708
    4. ' une' → logprob: -2.7862014770507812
    5. 'a' → logprob: -5.661201477050781
    6. 'le' → logprob: -5.786201477050781
    7. '```' → logprob: -6.536201477050781
    8. ' ' → logprob: -6.786201477050781
    9. 'l' → logprob: -6.911201477050781
    10. 'n' → logprob: -7.036201477050781

Token 17: ' variable' (ID: 11076)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04776988551020622
    2. 'variable' → logprob: -4.172770023345947
    3. ' ' → logprob: -4.922770023345947
    4. 's' → logprob: -5.547770023345947
    5. 'n' → logprob: -5.672770023345947
    6. ' variable' → logprob: -5.672770023345947
    7. '`' → logprob: -5.672770023345947
    8. '```' → logprob: -6.047770023345947
    9. 'a' → logprob: -6.797770023345947
    10. 'v' → logprob: -7.422770023345947

Token 18: ' N' (ID: 478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3268007040023804
    2. ' ' → logprob: -1.8268007040023804
    3. 'n' → logprob: -1.9518007040023804
    4. '`' → logprob: -2.20180082321167
    5. ' entier' → logprob: -2.70180082321167
    6. ' x' → logprob: -3.07680082321167
    7. 'x' → logprob: -3.07680082321167
    8. '```' → logprob: -3.32680082321167
    9. 's' → logprob: -3.70180082321167
    10. 'nombre' → logprob: -3.82680082321167

Token 19: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016056658700108528
    2. 'n' → logprob: -4.141056537628174
    3. '```' → logprob: -12.266057014465332
    4. 'i' → logprob: -12.516057014465332
    5. 'x' → logprob: -12.891057014465332
    6. '`' → logprob: -12.891057014465332
    7. '#' → logprob: -13.016057014465332
    8. '_' → logprob: -13.141057014465332
    9. ' N' → logprob: -14.016057014465332
    10. '\' → logprob: -14.391057014465332

Token 20: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12814976274967194
    2. 'n' → logprob: -2.1281497478485107
    3. '```' → logprob: -8.00314998626709
    4. 'i' → logprob: -8.50314998626709
    5. ':' → logprob: -8.75314998626709
    6. '`' → logprob: -9.50314998626709
    7. '#' → logprob: -9.50314998626709
    8. '_' → logprob: -9.62814998626709
    9. ',' → logprob: -9.75314998626709
    10. '=' → logprob: -10.12814998626709

Token 21: ' Cette' (ID: 27383)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005206601694226265
    2. ' N' → logprob: -5.50520658493042
    3. 'n' → logprob: -6.88020658493042
    4. ' ' → logprob: -9.755207061767578
    5. ' ' → logprob: -11.630207061767578
    6. '#' → logprob: -11.755207061767578
    7. 'x' → logprob: -12.755207061767578
    8. '```' → logprob: -12.880207061767578
    9. ' #' → logprob: -13.005207061767578
    10. 'print' → logprob: -13.130207061767578

Token 22: ' valeur' (ID: 41664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6780335903167725
    2. 'n' → logprob: -1.3030335903167725
    3. ' ' → logprob: -2.6780335903167725
    4. ' =' → logprob: -2.8030335903167725
    5. 's' → logprob: -3.1780335903167725
    6. '=' → logprob: -3.5530335903167725
    7. ' ' → logprob: -5.928033828735352
    8. '#' → logprob: -6.178033828735352
    9. ',' → logprob: -6.303033828735352
    10. ' valeur' → logprob: -6.553033828735352

Token 23: ' représente' (ID: 88912)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.7560426592826843
    2. ' ' → logprob: -1.131042718887329
    3. ' =' → logprob: -2.381042718887329
    4. ' est' → logprob: -3.256042718887329
    5. 'est' → logprob: -4.13104248046875
    6. '_' → logprob: -4.75604248046875
    7. 's' → logprob: -5.00604248046875
    8. ' doit' → logprob: -5.00604248046875
    9. '=' → logprob: -5.13104248046875
    10. ' devra' → logprob: -5.13104248046875

Token 24: ' généralement' (ID: 67075)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04855682700872421
    2. 'le' → logprob: -3.1735568046569824
    3. ' ' → logprob: -6.173556804656982
    4. ' la' → logprob: -6.298556804656982
    5. 'l' → logprob: -7.298556804656982
    6. ' l' → logprob: -8.29855728149414
    7. ' ' → logprob: -8.54855728149414
    8. ' nombre' → logprob: -9.17355728149414
    9. '_le' → logprob: -9.42355728149414
    10. ' un' → logprob: -9.54855728149414

Token 25: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6169913411140442
    2. ' le' → logprob: -1.1169912815093994
    3. ' la' → logprob: -2.7419912815093994
    4. 'l' → logprob: -3.6169912815093994
    5. 'la' → logprob: -3.8669912815093994
    6. ' l' → logprob: -5.2419915199279785
    7. 'nombre' → logprob: -5.9919915199279785
    8. 'une' → logprob: -6.3669915199279785
    9. ' une' → logprob: -6.3669915199279785
    10. ' un' → logprob: -6.4919915199279785

Token 26: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.006164951249957085
    2. ' nombre' → logprob: -5.256165027618408
    3. 'n' → logprob: -7.756165027618408
    4. '#' → logprob: -8.88116455078125
    5. 'nom' → logprob: -9.00616455078125
    6. 's' → logprob: -9.50616455078125
    7. 'maximum' → logprob: -10.13116455078125
    8. 'Nombre' → logprob: -10.25616455078125
    9. 'nb' → logprob: -11.50616455078125
    10. '```' → logprob: -11.88116455078125

Token 27: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5212433338165283
    2. '_' → logprob: -1.1462433338165283
    3. ' d' → logprob: -3.3962433338165283
    4. '_d' → logprob: -3.3962433338165283
    5. 'd' → logprob: -4.646243095397949
    6. '_de' → logprob: -5.646243095397949
    7. ' de' → logprob: -5.896243095397949
    8. 's' → logprob: -7.521243095397949
    9. '_s' → logprob: -7.646243095397949
    10. ')' → logprob: -7.646243095397949

Token 28: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9805704951286316
    2. ''' → logprob: -1.3555705547332764
    3. 'e' → logprob: -1.6055705547332764
    4. ''é' → logprob: -2.4805705547332764
    5. 'é' → logprob: -2.9805705547332764
    6. ' de' → logprob: -4.480570316314697
    7. ' ' → logprob: -5.855570316314697
    8. ''e' → logprob: -6.355570316314697
    9. '_e' → logprob: -6.855570316314697
    10. 'a' → logprob: -6.855570316314697

Token 29: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1680707484483719
    2. 'é' → logprob: -2.1680707931518555
    3. 'él' → logprob: -4.2930707931518555
    4. 'it' → logprob: -4.6680707931518555
    5. 'iterations' → logprob: -5.4180707931518555
    6. 'ét' → logprob: -5.9180707931518555
    7. 'elements' → logprob: -6.4180707931518555
    8. 'iter' → logprob: -6.6680707931518555
    9. 'év' → logprob: -6.6680707931518555
    10. 'ex' → logprob: -7.1680707931518555

Token 30: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4335654079914093
    2. 'ments' → logprob: -1.058565378189087
    3. 'ment' → logprob: -5.433565616607666
    4. 'me' → logprob: -8.558565139770508
    5. '```' → logprob: -9.808565139770508
    6. 'men' → logprob: -10.308565139770508
    7. ' ' → logprob: -10.558565139770508
    8. '#' → logprob: -10.558565139770508
    9. 'м' → logprob: -10.558565139770508
    10. 'e' → logprob: -11.558565139770508

Token 31: ' dans' (ID: 2671)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03923990949988365
    2. 'n' → logprob: -3.2892398834228516
    3. '#' → logprob: -7.789239883422852
    4. ':' → logprob: -8.789239883422852
    5. '```' → logprob: -9.164239883422852
    6. ',' → logprob: -9.414239883422852
    7. '_' → logprob: -9.539239883422852
    8. '\' → logprob: -9.664239883422852
    9. ' N' → logprob: -9.789239883422852
    10. '.' → logprob: -10.164239883422852

Token 32: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3175264298915863
    2. ' une' → logprob: -1.6925264596939087
    3. ' un' → logprob: -3.442526340484619
    4. ' l' → logprob: -4.442526340484619
    5. 'une' → logprob: -4.692526340484619
    6. ' le' → logprob: -4.817526340484619
    7. 'la' → logprob: -4.817526340484619
    8. ' ' → logprob: -5.442526340484619
    9. ' ' → logprob: -5.442526340484619
    10. ' a' → logprob: -5.942526340484619

Token 33: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.05761374905705452
    2. 'e' → logprob: -3.9326138496398926
    3. 'liste' → logprob: -4.557613849639893
    4. 'table' → logprob: -4.682613849639893
    5. ' table' → logprob: -5.432613849639893
    6. ' liste' → logprob: -5.932613849639893
    7. 'list' → logprob: -6.432613849639893
    8. 'a' → logprob: -6.932613849639893
    9. ' array' → logprob: -7.057613849639893
    10. 'ensemble' → logprob: -7.057613849639893

Token 34: ' ou' (ID: 2031)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01622498780488968
    2. 'n' → logprob: -4.1412248611450195
    3. '#' → logprob: -9.01622486114502
    4. '
' → logprob: -10.39122486114502
    5. '```' → logprob: -11.51622486114502
    6. '\n' → logprob: -12.01622486114502
    7. 'x' → logprob: -12.39122486114502
    8. ' 
' → logprob: -12.76622486114502
    9. '`' → logprob: -12.76622486114502
    10. '\' → logprob: -12.89122486114502

Token 35: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.30560240149497986
    2. 'une' → logprob: -1.4306024312973022
    3. ' la' → logprob: -4.555602550506592
    4. 'la' → logprob: -4.930602550506592
    5. ' un' → logprob: -6.805602550506592
    6. 'le' → logprob: -7.055602550506592
    7. 'un' → logprob: -7.055602550506592
    8. 'liste' → logprob: -7.805602550506592
    9. ' le' → logprob: -8.180602073669434
    10. ' dans' → logprob: -8.305602073669434

Token 36: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.14260052144527435
    2. ' liste' → logprob: -2.7676005363464355
    3. 'sé' → logprob: -4.0176005363464355
    4. 'collection' → logprob: -4.2676005363464355
    5. 'list' → logprob: -4.8926005363464355
    6. 's' → logprob: -5.1426005363464355
    7. 'sequence' → logprob: -5.1426005363464355
    8. 'suite' → logprob: -5.2676005363464355
    9. 'val' → logprob: -6.1426005363464355
    10. ' sé' → logprob: -6.3926005363464355

Token 37: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0020650913938879967
    2. 'n' → logprob: -6.252065181732178
    3. '#' → logprob: -9.12706470489502
    4. '
' → logprob: -11.00206470489502
    5. '```' → logprob: -12.75206470489502
    6. '\n' → logprob: -13.12706470489502
    7. '

' → logprob: -13.50206470489502
    8. '\' → logprob: -13.75206470489502
    9. ' N' → logprob: -14.12706470489502
    10. 'x' → logprob: -14.25206470489502

Token 38: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011335695162415504
    2. 'n' → logprob: -4.511335849761963
    3. '#' → logprob: -8.386335372924805
    4. '
' → logprob: -11.011335372924805
    5. '```' → logprob: -11.011335372924805
    6. '`' → logprob: -12.511335372924805
    7. '

' → logprob: -12.511335372924805
    8. '\' → logprob: -12.636335372924805
    9. '' → logprob: -12.636335372924805
    10. '\n' → logprob: -12.636335372924805

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004631145857274532
    2. '=' → logprob: -5.379631042480469
    3. ' ' → logprob: -12.254631042480469
    4. ' ' → logprob: -12.879631042480469
    5. 'space' → logprob: -13.629631042480469
    6. '=int' → logprob: -14.754631042480469
    7. 's' → logprob: -14.754631042480469
    8. '.' → logprob: -15.254631042480469
    9. '=input' → logprob: -15.254631042480469
    10. ',' → logprob: -15.379631042480469

Token 40: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00776622025296092
    2. 'int' → logprob: -4.882766246795654
    3. ' input' → logprob: -8.882765769958496
    4. ' ' → logprob: -11.382765769958496
    5. ' ' → logprob: -12.132765769958496
    6. 'input' → logprob: -13.257765769958496
    7. '=int' → logprob: -13.257765769958496
    8. ' in' → logprob: -15.132765769958496
    9. '<int' → logprob: -15.757765769958496
    10. ' i' → logprob: -15.757765769958496

Token 41: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07893837243318558
    2. '(input' → logprob: -2.5789384841918945
    3. '()' → logprob: -11.328938484191895
    4. '(user' → logprob: -11.328938484191895
    5. '('' → logprob: -12.078938484191895
    6. '(
' → logprob: -12.078938484191895
    7. 'input' → logprob: -12.453938484191895
    8. '(int' → logprob: -12.828938484191895
    9. ' (' → logprob: -14.078938484191895
    10. '(`' → logprob: -14.453938484191895

Token 42: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005387430544942617
    2. '('' → logprob: -5.505387306213379
    3. '("("' → logprob: -6.880387306213379
    4. '("' → logprob: -9.255387306213379
    5. ')' → logprob: -10.130387306213379
    6. '()' → logprob: -10.380387306213379
    7. '(
' → logprob: -10.630387306213379
    8. '(">' → logprob: -10.630387306213379
    9. '(""))' → logprob: -10.755387306213379
    10. '())' → logprob: -11.130387306213379

Token 43: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.726603090763092
    2. ' ' → logprob: -0.851603090763092
    3. '#' → logprob: -3.8516030311584473
    4. '<|end|>' → logprob: -4.226603031158447
    5. '[' → logprob: -4.351603031158447
    6. '\n' → logprob: -5.226603031158447
    7. '\' → logprob: -5.351603031158447
    8. '
' → logprob: -5.601603031158447
    9. '  
' → logprob: -5.851603031158447
    10. 'for' → logprob: -5.976603031158447

Token 44: ' Dem' (ID: 9458)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.2128517627716064
    2. 'elements' → logprob: -2.2128517627716064
    3. 'data' → logprob: -2.5878517627716064
    4. ' lst' → logprob: -2.5878517627716064
    5. ' elements' → logprob: -3.0878517627716064
    6. '#' → logprob: -3.0878517627716064
    7. ' data' → logprob: -3.0878517627716064
    8. ' numbers' → logprob: -3.2128517627716064
    9. 'array' → logprob: -3.2128517627716064
    10. 'numbers' → logprob: -3.7128517627716064

Token 45: 'ander' (ID: 9330)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2727735042572021
    2. '#' → logprob: -1.3977735042572021
    3. '_' → logprob: -1.6477735042572021
    4. ' ' → logprob: -2.522773504257202
    5. ')' → logprob: -2.772773504257202
    6. 'a' → logprob: -3.897773504257202
    7. 'er' → logprob: -3.897773504257202
    8. 'for' → logprob: -4.022773742675781
    9. '<|end|>' → logprob: -4.397773742675781
    10. 'e' → logprob: -4.897773742675781

Token 46: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19408060610294342
    2. '()' → logprob: -2.5690805912017822
    3. ' ' → logprob: -2.9440805912017822
    4. ' à' → logprob: -4.194080829620361
    5. '("' → logprob: -4.444080829620361
    6. ' (' → logprob: -5.569080829620361
    7. ')' → logprob: -5.694080829620361
    8. '('' → logprob: -5.944080829620361
    9. ' )' → logprob: -6.444080829620361
    10. ' la' → logprob: -6.694080829620361

Token 47: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.11047801375389099
    2. 'l' → logprob: -2.485477924346924
    3. ' ' → logprob: -5.110477924346924
    4. ' la' → logprob: -5.610477924346924
    5. '_' → logprob: -5.735477924346924
    6. ' un' → logprob: -6.360477924346924
    7. ' une' → logprob: -6.860477924346924
    8. ' user' → logprob: -6.985477924346924
    9. ' ' → logprob: -6.985477924346924
    10. '<|end|>' → logprob: -7.235477924346924

Token 48: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.4547426104545593
    2. '_' → logprob: -1.329742670059204
    3. ' ' → logprob: -3.954742670059204
    4. ''' → logprob: -4.079742431640625
    5. ' user' → logprob: -4.329742431640625
    6. '’utilisateur' → logprob: -4.579742431640625
    7. 'a' → logprob: -4.704742431640625
    8. 'u' → logprob: -4.829742431640625
    9. ' utilisateur' → logprob: -5.079742431640625
    10. ')' → logprob: -5.579742431640625

Token 49: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2227315753698349
    2. '()' → logprob: -1.722731590270996
    3. ')' → logprob: -4.972731590270996
    4. '("' → logprob: -5.472731590270996
    5. ' de' → logprob: -5.972731590270996
    6. ' (' → logprob: -6.722731590270996
    7. '('' → logprob: -6.847731590270996
    8. ',' → logprob: -7.222731590270996
    9. '<|end|>' → logprob: -7.347731590270996
    10. ' )' → logprob: -7.722731590270996

Token 50: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.8487313985824585
    2. ' ' → logprob: -1.2237313985824585
    3. ' input' → logprob: -2.473731517791748
    4. 's' → logprob: -2.973731517791748
    5. ' l' → logprob: -4.098731517791748
    6. 'l' → logprob: -4.098731517791748
    7. 'input' → logprob: -4.223731517791748
    8. ' continuer' → logprob: -4.348731517791748
    9. '_' → logprob: -4.473731517791748
    10. ' un' → logprob: -4.723731517791748

Token 51: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6906900405883789
    2. '(' → logprob: -0.8156900405883789
    3. ' un' → logprob: -3.690690040588379
    4. ' ' → logprob: -4.065690040588379
    5. ' la' → logprob: -5.315690040588379
    6. ' une' → logprob: -5.565690040588379
    7. '('' → logprob: -7.065690040588379
    8. '("' → logprob: -7.190690040588379
    9. ' (' → logprob: -7.190690040588379
    10. ' ()' → logprob: -7.315690040588379

Token 52: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.20674477517604828
    2. ' chaîne' → logprob: -2.95674467086792
    3. 'liste' → logprob: -3.45674467086792
    4. ' ligne' → logprob: -3.58174467086792
    5. ' ' → logprob: -4.20674467086792
    6. 'chaine' → logprob: -4.58174467086792
    7. ' phrase' → logprob: -4.83174467086792
    8. ' valeur' → logprob: -5.08174467086792
    9. ' chaine' → logprob: -5.08174467086792
    10. 's' → logprob: -5.45674467086792

Token 53: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' N' (ID: 478)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'texte' → logprob: -1.0910695791244507
    2. ' code' → logprob: -1.8410695791244507
    3. ' texte' → logprob: -2.0910696983337402
    4. 'code' → logprob: -2.5910696983337402
    5. 'val' → logprob: -2.7160696983337402
    6. ' nombres' → logprob: -3.2160696983337402
    7. 'text' → logprob: -3.4660696983337402
    8. 'n' → logprob: -3.7160696983337402
    9. 's' → logprob: -3.9660696983337402
    10. 't' → logprob: -4.09106969833374

Token 55: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03322351351380348
    2. 'iers' → logprob: -3.5332236289978027
    3. 'ti' → logprob: -6.408223628997803
    4. 'tries' → logprob: -7.033223628997803
    5. 'ières' → logprob: -8.658223152160645
    6. 'tiers' → logprob: -8.783223152160645
    7. 'tr' → logprob: -8.908223152160645
    8. 'ts' → logprob: -8.908223152160645
    9. 'ètres' → logprob: -10.158223152160645
    10. 'ités' → logprob: -10.533223152160645

Token 57: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5808173418045044
    2. ' ' → logprob: -1.3308173418045044
    3. 'values' → logprob: -3.955817222595215
    4. 'ent' → logprob: -4.580817222595215
    5. 'elements' → logprob: -4.705817222595215
    6. 'numbers' → logprob: -4.830817222595215
    7. ' lst' → logprob: -4.955817222595215
    8. ' )' → logprob: -4.955817222595215
    9. 'a' → logprob: -4.955817222595215
    10. 'val' → logprob: -5.080817222595215

Token 58: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.014127427712082863
    2. 'é' → logprob: -4.389127254486084
    3. 'ée' → logprob: -7.389127254486084
    4. 'par' → logprob: -7.639127254486084
    5. ' par' → logprob: -8.139127731323242
    6. 'ées' → logprob: -9.389127731323242
    7. 'es' → logprob: -9.389127731323242
    8. 'e' → logprob: -11.139127731323242
    9. 'ès' → logprob: -11.764127731323242
    10. 's' → logprob: -11.889127731323242

Token 59: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.047810573130846024
    2. 'par' → logprob: -3.5478105545043945
    3. 'es' → logprob: -4.4228105545043945
    4. ' espaces' → logprob: -6.2978105545043945
    5. 's' → logprob: -6.7978105545043945
    6. 'e' → logprob: -6.9228105545043945
    7. 'space' → logprob: -8.047810554504395
    8. ' espace' → logprob: -8.047810554504395
    9. ' ' → logprob: -8.297810554504395
    10. ''espace' → logprob: -8.422810554504395

Token 60: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.285933017730713
    2. ' espaces' → logprob: -1.410933017730713
    3. ' des' → logprob: -1.785933017730713
    4. ''espace' → logprob: -2.660933017730713
    5. 'es' → logprob: -2.910933017730713
    6. ' espace' → logprob: -3.160933017730713
    7. ' un' → logprob: -3.285933017730713
    8. 'un' → logprob: -3.660933017730713
    9. 'des' → logprob: -3.785933017730713
    10. 'space' → logprob: -4.535933017730713

Token 61: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.07594780623912811
    2. 'esp' → logprob: -3.4509477615356445
    3. 'space' → logprob: -4.5759477615356445
    4. ' espace' → logprob: -4.7009477615356445
    5. 'spaces' → logprob: -5.4509477615356445
    6. ' ' → logprob: -5.4509477615356445
    7. ''esp' → logprob: -5.7009477615356445
    8. 'es' → logprob: -5.7009477615356445
    9. ''espace' → logprob: -5.7009477615356445
    10. ' spaces' → logprob: -7.5759477615356445

Token 62: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22734327614307404
    2. 'n' → logprob: -2.7273433208465576
    3. ' 
' → logprob: -3.1023433208465576
    4. 'elements' → logprob: -4.6023430824279785
    5. 'ent' → logprob: -4.7273430824279785
    6. 'a' → logprob: -4.9773430824279785
    7. 'r' → logprob: -5.1023430824279785
    8. 't' → logprob: -5.1023430824279785
    9. 'x' → logprob: -5.4773430824279785
    10. ' ' → logprob: -5.4773430824279785

Token 63: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.4621293544769287
    2. 's' → logprob: -1.8371293544769287
    3. 'values' → logprob: -2.3371293544769287
    4. ' numbers' → logprob: -2.5871293544769287
    5. 'data' → logprob: -2.8371293544769287
    6. 'n' → logprob: -3.0871293544769287
    7. ' ' → logprob: -3.0871293544769287
    8. ' values' → logprob: -3.0871293544769287
    9. 'elements' → logprob: -3.3371293544769287
    10. ' data' → logprob: -3.5871293544769287

Token 64: ' La' (ID: 3038)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.2230671644210815
    2. ' numbers' → logprob: -2.098067283630371
    3. 'arr' → logprob: -2.473067283630371
    4. 'L' → logprob: -2.723067283630371
    5. 'l' → logprob: -2.848067283630371
    6. 'values' → logprob: -2.973067283630371
    7. 'a' → logprob: -3.598067283630371
    8. 'elements' → logprob: -3.598067283630371
    9. 'data' → logprob: -3.723067283630371
    10. 'array' → logprob: -3.723067283630371

Token 65: ' fonction' (ID: 17610)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.420007586479187
    2. 'liste' → logprob: -2.1700077056884766
    3. 'ligne' → logprob: -2.4200077056884766
    4. 'L' → logprob: -2.4200077056884766
    5. 'val' → logprob: -2.9200077056884766
    6. ' valeurs' → logprob: -2.9200077056884766
    7. ' ligne' → logprob: -3.1700077056884766
    8. ' liste' → logprob: -3.5450077056884766
    9. ' line' → logprob: -3.6700077056884766
    10. ' L' → logprob: -3.7950077056884766

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43409764766693115
    2. 'list' → logprob: -1.5590976476669312
    3. ' input' → logprob: -2.1840977668762207
    4. ' list' → logprob: -3.9340977668762207
    5. 'liste' → logprob: -5.684097766876221
    6. 'map' → logprob: -6.309097766876221
    7. 's' → logprob: -6.434097766876221
    8. ' liste' → logprob: -7.684097766876221
    9. 'lst' → logprob: -7.809097766876221
    10. 'split' → logprob: -8.059097290039062

Token 67: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28312164545059204
    2. '().' → logprob: -1.4081215858459473
    3. '(' → logprob: -6.408121585845947
    4. '())' → logprob: -9.033122062683105
    5. '()
' → logprob: -10.158122062683105
    6. ')' → logprob: -10.283122062683105
    7. ' ()' → logprob: -10.783122062683105
    8. '()

' → logprob: -11.033122062683105
    9. '()).' → logprob: -11.408122062683105
    10. 's' → logprob: -11.908122062683105

Token 68: ' ren' (ID: 5427)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.444350242614746
    2. '.split' → logprob: -1.569350242614746
    3. '().' → logprob: -1.694350242614746
    4. '()' → logprob: -1.694350242614746
    5. 's' → logprob: -2.944350242614746
    6. '.' → logprob: -3.069350242614746
    7. 'split' → logprob: -3.819350242614746
    8. ' .' → logprob: -3.819350242614746
    9. ' )' → logprob: -4.569350242614746
    10. '.readline' → logprob: -4.944350242614746

Token 69: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.004473085515201092
    2. 'v' → logprob: -5.5044732093811035
    3. 'voy' → logprob: -8.504472732543945
    4. 'ver' → logprob: -9.379472732543945
    5. 'voit' → logprob: -9.379472732543945
    6. 'voi' → logprob: -11.254472732543945
    7. '```' → logprob: -13.629472732543945
    8. 'e' → logprob: -13.629472732543945
    9. 'd' → logprob: -13.879472732543945
    10. '__' → logprob: -14.004472732543945

Token 70: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5269011855125427
    2. ' ' → logprob: -1.6519012451171875
    3. ''' → logprob: -2.4019012451171875
    4. 'une' → logprob: -3.5269012451171875
    5. ' ' → logprob: -4.1519012451171875
    6. '_' → logprob: -4.2769012451171875
    7. ' a' → logprob: -4.6519012451171875
    8. ' un' → logprob: -4.7769012451171875
    9. ' la' → logprob: -4.7769012451171875
    10. '"' → logprob: -5.1519012451171875

Token 71: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2518814504146576
    2. 'chaine' → logprob: -1.75188148021698
    3. ' chaine' → logprob: -4.1268815994262695
    4. 'string' → logprob: -4.1268815994262695
    5. ' string' → logprob: -5.1268815994262695
    6. 'str' → logprob: -5.3768815994262695
    7. ' ' → logprob: -6.3768815994262695
    8. 'liste' → logprob: -6.7518815994262695
    9. 'cha' → logprob: -7.0018815994262695
    10. 's' → logprob: -7.5018815994262695

Token 72: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0752722024917603
    2. '()' → logprob: -1.8252722024917603
    3. '.split' → logprob: -1.8252722024917603
    4. ')' → logprob: -2.7002720832824707
    5. ' ' → logprob: -2.7002720832824707
    6. '().' → logprob: -3.3252720832824707
    7. ',' → logprob: -3.9502720832824707
    8. ' .' → logprob: -3.9502720832824707
    9. ' )' → logprob: -3.9502720832824707
    10. 's' → logprob: -4.075272083282471

Token 73: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.11328001320362091
    2. ' caractères' → logprob: -2.2382800579071045
    3. ' caract' → logprob: -9.238280296325684
    4. 'texte' → logprob: -9.488280296325684
    5. ' caracteres' → logprob: -9.738280296325684
    6. ' caractère' → logprob: -9.738280296325684
    7. '```' → logprob: -9.863280296325684
    8. ' ' → logprob: -10.113280296325684
    9. 'c' → logprob: -10.488280296325684
    10. 'char' → logprob: -11.988280296325684

Token 74: ' que' (ID: 661)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3177911639213562
    2. ')' → logprob: -1.692791223526001
    3. ' )' → logprob: -3.442791223526001
    4. '[' → logprob: -4.817790985107422
    5. 't' → logprob: -4.817790985107422
    6. ',' → logprob: -5.192790985107422
    7. 'n' → logprob: -5.442790985107422
    8. 'tokens' → logprob: -5.817790985107422
    9. ' ' → logprob: -6.067790985107422
    10. '<|end|>' → logprob: -6.067790985107422

Token 75: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9823567867279053
    2. ' l' → logprob: -2.1073567867279053
    3. 'l' → logprob: -2.3573567867279053
    4. ' nous' → logprob: -2.3573567867279053
    5. ' on' → logprob: -2.4823567867279053
    6. '.split' → logprob: -2.6073567867279053
    7. 'on' → logprob: -2.8573567867279053
    8. 'split' → logprob: -2.9823567867279053
    9. 'nous' → logprob: -3.2323567867279053
    10. 'we' → logprob: -3.7323567867279053

Token 76: ''on' (ID: 25812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12148220092058182
    2. 'es' → logprob: -2.9964821338653564
    3. 'a' → logprob: -3.8714821338653564
    4. '.split' → logprob: -4.2464823722839355
    5. 's' → logprob: -5.4964823722839355
    6. ''on' → logprob: -5.7464823722839355
    7. ''' → logprob: -5.8714823722839355
    8. 'split' → logprob: -5.9964823722839355
    9. '`' → logprob: -6.1214823722839355
    10. 'u' → logprob: -6.1214823722839355

Token 77: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6713243126869202
    2. ' split' → logprob: -0.9213243126869202
    3. '.split' → logprob: -3.0463242530822754
    4. 'spl' → logprob: -4.171324253082275
    5. ' peut' → logprob: -4.921324253082275
    6. ' souhaite' → logprob: -5.796324253082275
    7. ' transforme' → logprob: -5.796324253082275
    8. '_split' → logprob: -5.921324253082275
    9. ' .' → logprob: -6.046324253082275
    10. '.' → logprob: -6.546324253082275

Token 78: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.46745848655700684
    2. 'p' → logprob: -1.2174584865570068
    3. 'pé' → logprob: -2.967458486557007
    4. 'per' → logprob: -3.842458486557007
    5. 'page' → logprob: -6.217458724975586
    6. 'пе' → logprob: -8.092458724975586
    7. 'pa' → logprob: -8.592458724975586
    8. '```' → logprob: -8.717458724975586
    9. 'pez' → logprob: -9.092458724975586
    10. 'pem' → logprob: -9.342458724975586

Token 79: ' en' (ID: 469)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.9424419403076172
    2. '.split' → logprob: -1.0674419403076172
    3. ' ' → logprob: -1.8174419403076172
    4. '.' → logprob: -3.067441940307617
    5. ' en' → logprob: -4.942441940307617
    6. '[' → logprob: -4.942441940307617
    7. ' )' → logprob: -5.067441940307617
    8. ')' → logprob: -5.192441940307617
    9. 'split' → logprob: -5.317441940307617
    10. ' par' → logprob: -5.317441940307617

Token 80: ' morceaux' (ID: 133321)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1922744512557983
    2. ' liste' → logprob: -1.3172744512557983
    3. 'liste' → logprob: -2.317274570465088
    4. ' tokens' → logprob: -2.692274570465088
    5. ' éléments' → logprob: -2.942274570465088
    6. 'une' → logprob: -3.317274570465088
    7. 'tokens' → logprob: -3.317274570465088
    8. 'élé' → logprob: -3.442274570465088
    9. ' morceaux' → logprob: -3.442274570465088
    10. ' parts' → logprob: -4.067274570465088

Token 81: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4931585192680359
    2. '.' → logprob: -2.6181585788726807
    3. ')' → logprob: -2.8681585788726807
    4. 't' → logprob: -2.9931585788726807
    5. ',' → logprob: -3.3681585788726807
    6. '[' → logprob: -3.4931585788726807
    7. 'tokens' → logprob: -3.6181585788726807
    8. '.split' → logprob: -4.368158340454102
    9. 'a' → logprob: -4.493158340454102
    10. ' )' → logprob: -4.618158340454102

Token 82: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4305382966995239
    2. ' la' → logprob: -2.1805381774902344
    3. ' split' → logprob: -2.8055381774902344
    4. '.split' → logprob: -3.0555381774902344
    5. '.' → logprob: -3.1805381774902344
    6. 'la' → logprob: -3.3055381774902344
    7. 's' → logprob: -3.9305381774902344
    8. ' .' → logprob: -4.055538177490234
    9. ' s' → logprob: -5.805538177490234
    10. 'l' → logprob: -6.055538177490234

Token 83: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39164188504219055
    2. '(' → logprob: -1.6416418552398682
    3. ')' → logprob: -2.266641855239868
    4. 's' → logprob: -4.641642093658447
    5. '())' → logprob: -5.266642093658447
    6. ' )' → logprob: -5.766642093658447
    7. '[' → logprob: -6.766642093658447
    8. 'a' → logprob: -7.266642093658447
    9. '(
' → logprob: -7.391642093658447
    10. '()
' → logprob: -7.516642093658447

Token 84: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.073988676071167
    2. 'ligne' → logprob: -2.573988676071167
    3. 's' → logprob: -2.698988676071167
    4. 'l' → logprob: -2.698988676071167
    5. 't' → logprob: -2.698988676071167
    6. 'ent' → logprob: -2.823988676071167
    7. 'arr' → logprob: -2.823988676071167
    8. 'val' → logprob: -2.823988676071167
    9. 'elements' → logprob: -2.948988676071167
    10. 'data' → logprob: -2.948988676071167

Token 85: ' map' (ID: 4014)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.401794672012329
    2. ' numbers' → logprob: -2.401794672012329
    3. 'L' → logprob: -2.526794672012329
    4. 'lst' → logprob: -2.901794672012329
    5. 'elements' → logprob: -2.901794672012329
    6. 'values' → logprob: -2.901794672012329
    7. ' L' → logprob: -3.276794672012329
    8. 'l' → logprob: -3.401794672012329
    9. 'ent' → logprob: -3.526794672012329
    10. 'arr' → logprob: -3.651794672012329

Token 86: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012739663943648338
    2. '(int' → logprob: -4.762739658355713
    3. '(lambda' → logprob: -5.512739658355713
    4. '(
' → logprob: -10.262740135192871
    5. '(str' → logprob: -11.262740135192871
    6. '(list' → logprob: -11.512740135192871
    7. '()' → logprob: -12.137740135192871
    8. '(f' → logprob: -13.012740135192871
    9. '(func' → logprob: -13.512740135192871
    10. '(

' → logprob: -13.637740135192871

Token 87: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.265288382768631
    2. ',' → logprob: -1.5152883529663086
    3. '(' → logprob: -4.515288352966309
    4. ',)' → logprob: -7.390288352966309
    5. '(),' → logprob: -7.515288352966309
    6. '())' → logprob: -7.640288352966309
    7. '()' → logprob: -8.390288352966309
    8. ',map' → logprob: -9.515288352966309
    9. ' ,' → logprob: -9.640288352966309
    10. '),' → logprob: -10.140288352966309

Token 88: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4964112341403961
    2. ' input' → logprob: -1.1214112043380737
    3. ')' → logprob: -2.7464113235473633
    4. ' )' → logprob: -6.996411323547363
    5. '(input' → logprob: -8.496411323547363
    6. '[input' → logprob: -9.871411323547363
    7. ',input' → logprob: -10.496411323547363
    8. '<input' → logprob: -11.246411323547363
    9. ')>' → logprob: -11.246411323547363
    10. '<|end|>' → logprob: -11.246411323547363

Token 89: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.291822612285614
    2. ')' → logprob: -1.4168226718902588
    3. '(
' → logprob: -4.91682243347168
    4. '()' → logprob: -7.54182243347168
    5. '(input' → logprob: -7.79182243347168
    6. ' )' → logprob: -7.91682243347168
    7. '(

' → logprob: -8.79182243347168
    8. 's' → logprob: -8.91682243347168
    9. '(n' → logprob: -9.04182243347168
    10. ',' → logprob: -9.16682243347168

Token 90: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.48468029499053955
    2. ' la' → logprob: -2.10968017578125
    3. ' ces' → logprob: -2.10968017578125
    4. 'ces' → logprob: -3.73468017578125
    5. ' les' → logprob: -3.85968017578125
    6. 'cha' → logprob: -3.85968017578125
    7. ' chacune' → logprob: -3.98468017578125
    8. 'la' → logprob: -4.10968017578125
    9. ' each' → logprob: -4.23468017578125
    10. 'les' → logprob: -4.73468017578125

Token 91: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.00642284844070673
    2. 'm' → logprob: -5.506422996520996
    3. ' morceau' → logprob: -6.506422996520996
    4. ' élément' → logprob: -7.381422996520996
    5. 'part' → logprob: -10.256422996520996
    6. 'mot' → logprob: -10.256422996520996
    7. 'él' → logprob: -10.881422996520996
    8. 'entrée' → logprob: -10.881422996520996
    9. ' morceaux' → logprob: -10.881422996520996
    10. 'element' → logprob: -11.131422996520996

Token 92: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4029633700847626
    2. ')' → logprob: -1.527963399887085
    3. '(lambda' → logprob: -3.277963399887085
    4. '(...)' → logprob: -3.402963399887085
    5. ' en' → logprob: -4.652963161468506
    6. '(input' → logprob: -5.027963161468506
    7. ',' → logprob: -5.152963161468506
    8. '(map' → logprob: -5.402963161468506
    9. '(...' → logprob: -5.652963161468506
    10. '(en' → logprob: -5.902963161468506

Token 93: ' chaîne' (ID: 89288)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8656052947044373
    2. ' la' → logprob: -1.615605354309082
    3. ' input' → logprob: -2.240605354309082
    4. 'chaine' → logprob: -2.365605354309082
    5. 'input' → logprob: -2.490605354309082
    6. 'str' → logprob: -3.240605354309082
    7. 'l' → logprob: -3.615605354309082
    8. ' chaîne' → logprob: -4.490605354309082
    9. ' str' → logprob: -5.365605354309082
    10. ' l' → logprob: -5.740605354309082

Token 94: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6625047922134399
    2. ' en' → logprob: -1.16250479221344
    3. ',' → logprob: -2.0375046730041504
    4. 's' → logprob: -3.7875046730041504
    5. 'es' → logprob: -4.53750467300415
    6. ' )' → logprob: -6.41250467300415
    7. ' ,' → logprob: -7.03750467300415
    8. ',en' → logprob: -7.16250467300415
    9. '),' → logprob: -7.41250467300415
    10. 'en' → logprob: -7.41250467300415

Token 95: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.11423306167125702
    2. ' int' → logprob: -2.4892330169677734
    3. ' entier' → logprob: -4.489233016967773
    4. 'int' → logprob: -5.114233016967773
    5. 'ent' → logprob: -5.864233016967773
    6. ' ent' → logprob: -6.114233016967773
    7. 'un' → logprob: -6.739233016967773
    8. ' des' → logprob: -7.364233016967773
    9. ' une' → logprob: -7.864233016967773
    10. ' integer' → logprob: -8.364233016967773

Token 96: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0870150774717331
    2. ' )' → logprob: -3.462015151977539
    3. 's' → logprob: -4.587015151977539
    4. ')
' → logprob: -4.712015151977539
    5. 'values' → logprob: -5.587015151977539
    6. 'a' → logprob: -5.962015151977539
    7. 'ent' → logprob: -6.087015151977539
    8. 'data' → logprob: -6.212015151977539
    9. 'val' → logprob: -6.337015151977539
    10. '#' → logprob: -6.462015151977539

Token 97: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6073038578033447
    2. 'arr' → logprob: -2.2323038578033447
    3. 'values' → logprob: -2.2323038578033447
    4. 'data' → logprob: -2.6073038578033447
    5. 'numbers' → logprob: -2.6073038578033447
    6. 'array' → logprob: -2.9823038578033447
    7. 'elements' → logprob: -3.2323038578033447
    8. ')' → logprob: -3.6073038578033447
    9. 't' → logprob: -3.6073038578033447
    10. ' array' → logprob: -3.7323038578033447

Token 98: ' Enfin' (ID: 85274)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.2821695804595947
    2. 'values' → logprob: -2.0321695804595947
    3. 'lst' → logprob: -2.2821695804595947
    4. 'numbers' → logprob: -2.4071695804595947
    5. 'L' → logprob: -2.7821695804595947
    6. ' L' → logprob: -3.1571695804595947
    7. 'elements' → logprob: -3.4071695804595947
    8. ' numbers' → logprob: -3.4071695804595947
    9. ' lst' → logprob: -3.5321695804595947
    10. ' values' → logprob: -3.7821695804595947

Token 99: ',' (ID: 11)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0579688549041748
    2. ' list' → logprob: -1.4329688549041748
    3. ' la' → logprob: -1.8079688549041748
    4. ')' → logprob: -2.057968854904175
    5. ',' → logprob: -2.557968854904175
    6. ' ,' → logprob: -4.557969093322754
    7. ' lst' → logprob: -4.807969093322754
    8. ' liste' → logprob: -5.182969093322754
    9. ' on' → logprob: -5.682969093322754
    10. ' )' → logprob: -5.807969093322754

Token 100: ' on' (ID: 402)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7964886426925659
    2. 'list' → logprob: -1.296488642692566
    3. ' list' → logprob: -1.671488642692566
    4. ' lst' → logprob: -3.2964887619018555
    5. ' liste' → logprob: -4.2964887619018555
    6. 'liste' → logprob: -4.4214887619018555
    7. 'lst' → logprob: -4.6714887619018555
    8. 'la' → logprob: -5.2964887619018555
    9. ' l' → logprob: -5.9214887619018555
    10. ' les' → logprob: -6.0464887619018555

Token 101: ' transforme' (ID: 184109)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.9373766779899597
    2. ' stock' → logprob: -1.5623767375946045
    3. ' transforme' → logprob: -2.4373767375946045
    4. 'convert' → logprob: -2.6873767375946045
    5. 'cr' → logprob: -3.1873767375946045
    6. ' convert' → logprob: -3.4373767375946045
    7. 'range' → logprob: -3.5623767375946045
    8. ' récup' → logprob: -3.8123767375946045
    9. 'stock' → logprob: -3.9373767375946045
    10. 'lit' → logprob: -4.312376499176025

Token 102: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.310896635055542
    2. 'la' → logprob: -2.060896635055542
    3. 'list' → logprob: -2.310896635055542
    4. ' list' → logprob: -3.435896635055542
    5. 'l' → logprob: -6.060896873474121
    6. ' en' → logprob: -6.310896873474121
    7. 'le' → logprob: -6.560896873474121
    8. ' le' → logprob: -7.560896873474121
    9. 'en' → logprob: -8.185896873474121
    10. 'liste' → logprob: -8.435896873474121

Token 103: ' résultat' (ID: 62556)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9868895411491394
    2. ' résultat' → logprob: -1.2368896007537842
    3. 'result' → logprob: -1.6118896007537842
    4. ' map' → logprob: -2.486889600753784
    5. 'rés' → logprob: -3.236889600753784
    6. ' result' → logprob: -5.361889362335205
    7. ' résult' → logprob: -6.111889362335205
    8. ' résultats' → logprob: -6.486889362335205
    9. ' resultat' → logprob: -6.611889362335205
    10. 'split' → logprob: -7.111889362335205

Token 104: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.11347786337137222
    2. 'en' → logprob: -2.238477945327759
    3. ' list' → logprob: -8.11347770690918
    4. 'list' → logprob: -8.23847770690918
    5. ' in' → logprob: -10.48847770690918
    6. 'in' → logprob: -11.61347770690918
    7. 's' → logprob: -11.73847770690918
    8. ')' → logprob: -11.86347770690918
    9. '[]' → logprob: -11.86347770690918
    10. 'int' → logprob: -11.98847770690918

Token 105: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.09581786394119263
    2. ' map' → logprob: -2.470817804336548
    3. 'list' → logprob: -5.595818042755127
    4. 'la' → logprob: -6.345818042755127
    5. ' la' → logprob: -7.345818042755127
    6. 'l' → logprob: -7.470818042755127
    7. ' list' → logprob: -8.970817565917969
    8. ' l' → logprob: -10.595817565917969
    9. 'm' → logprob: -12.345817565917969
    10. ' ' → logprob: -12.470817565917969

Token 106: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.3053823709487915
    2. '(list' → logprob: -1.3053823709487915
    3. '()' → logprob: -1.4303823709487915
    4. '(int' → logprob: -2.680382251739502
    5. 'en' → logprob: -2.930382251739502
    6. '(' → logprob: -2.930382251739502
    7. 'list' → logprob: -3.430382251739502
    8. '(lambda' → logprob: -5.930382251739502
    9. 'int' → logprob: -6.180382251739502
    10. '(map' → logprob: -6.555382251739502

Token 107: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6335542798042297
    2. ' list' → logprob: -1.258554220199585
    3. ' liste' → logprob: -2.133554220199585
    4. ' une' → logprob: -3.258554220199585
    5. 'liste' → logprob: -3.758554220199585
    6. 'une' → logprob: -5.633554458618164
    7. ' la' → logprob: -7.758554458618164
    8. 'l' → logprob: -8.258554458618164
    9. ' a' → logprob: -8.508554458618164
    10. 'a' → logprob: -9.008554458618164

Token 108: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6012048125267029
    2. 'list' → logprob: -0.8512048125267029
    3. ' liste' → logprob: -3.7262048721313477
    4. ' list' → logprob: -7.101204872131348
    5. 'lista' → logprob: -11.726204872131348
    6. 'Liste' → logprob: -11.851204872131348
    7. '_list' → logprob: -12.351204872131348
    8. ' Liste' → logprob: -12.726204872131348
    9. 'l' → logprob: -12.851204872131348
    10. 's' → logprob: -12.851204872131348

Token 109: ' d' (ID: 272)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.214468002319336
    2. 'L' → logprob: -1.714468002319336
    3. 'lst' → logprob: -1.714468002319336
    4. 'arr' → logprob: -2.464468002319336
    5. 'liste' → logprob: -3.089468002319336
    6. 'A' → logprob: -3.339468002319336
    7. 'data' → logprob: -3.589468002319336
    8. 'l' → logprob: -3.714468002319336
    9. 'elements' → logprob: -3.839468002319336
    10. 'ent' → logprob: -4.089468002319336

Token 110: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.06786397844552994
    2. 'int' → logprob: -3.442863941192627
    3. 'inte' → logprob: -4.317863941192627
    4. ''ent' → logprob: -4.567863941192627
    5. 'ints' → logprob: -5.817863941192627
    6. 'e' → logprob: -6.567863941192627
    7. 's' → logprob: -7.067863941192627
    8. 'liste' → logprob: -7.317863941192627
    9. ' ent' → logprob: -7.442863941192627
    10. 'n' → logprob: -7.442863941192627

Token 111: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -1.1398757123970427e-05
    2. 'i' → logprob: -12.125011444091797
    3. 'ier' → logprob: -12.375011444091797
    4. 'ières' → logprob: -13.375011444091797
    5. '```' → logprob: -16.250011444091797
    6. 'ires' → logprob: -18.250011444091797
    7. 'ers' → logprob: -18.375011444091797
    8. 'eurs' → logprob: -18.500011444091797
    9. 'riers' → logprob: -18.500011444091797
    10. 'ière' → logprob: -18.875011444091797

Token 112: ' avec' (ID: 3937)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1540335416793823
    2. 'arr' → logprob: -1.6540335416793823
    3. 'numbers' → logprob: -2.029033660888672
    4. 'lst' → logprob: -2.279033660888672
    5. 'L' → logprob: -2.904033660888672
    6. 'array' → logprob: -3.529033660888672
    7. 'elements' → logprob: -3.779033660888672
    8. 'liste' → logprob: -3.779033660888672
    9. ' A' → logprob: -4.029033660888672
    10. 'values' → logprob: -4.029033660888672

Token 113: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.033657338470220566
    2. ' list' → logprob: -3.4086573123931885
    3. '```' → logprob: -12.65865707397461
    4. 'liste' → logprob: -13.15865707397461
    5. 'l' → logprob: -13.53365707397461
    6. '=list' → logprob: -13.90865707397461
    7. 'li' → logprob: -14.28365707397461
    8. '	list' → logprob: -14.28365707397461
    9. '`' → logprob: -14.40865707397461
    10. ':list' → logprob: -14.53365707397461

Token 114: '()
' (ID: 1234)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6689465045928955
    2. 'L' → logprob: -1.9189465045928955
    3. '()' → logprob: -2.2939465045928955
    4. 'arr' → logprob: -2.6689465045928955
    5. 'lst' → logprob: -2.9189465045928955
    6. 'val' → logprob: -3.1689465045928955
    7. 'ent' → logprob: -3.2939465045928955
    8. '(' → logprob: -3.5439465045928955
    9. 'data' → logprob: -3.6689465045928955
    10. 'A' → logprob: -3.6689465045928955

Token 115: 'C' (ID: 34)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.1481873989105225
    2. 'A' → logprob: -1.7731873989105225
    3. 'numbers' → logprob: -1.8981873989105225
    4. 'values' → logprob: -2.3981873989105225
    5. 'L' → logprob: -2.6481873989105225
    6. 'array' → logprob: -2.7731873989105225
    7. 'lst' → logprob: -2.8981873989105225
    8. 'elements' → logprob: -3.6481873989105225
    9. 'liste' → logprob: -4.523187637329102
    10. 'ent' → logprob: -4.898187637329102

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11611860990524292
    2. 'ont' → logprob: -2.8661186695098877
    3. '=' → logprob: -4.241118431091309
    4. 'ar' → logprob: -5.116118431091309
    5. 'ol' → logprob: -5.741118431091309
    6. 'elements' → logprob: -5.866118431091309
    7. 'l' → logprob: -6.116118431091309
    8. 'ho' → logprob: -6.116118431091309
    9. 'h' → logprob: -6.366118431091309
    10. 'C' → logprob: -6.491118431091309

Token 117: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12692862749099731
    2. 'list' → logprob: -2.1269285678863525
    3. '(list' → logprob: -15.126928329467773
    4. 'List' → logprob: -16.001928329467773
    5. '	list' → logprob: -17.001928329467773
    6. '=list' → logprob: -17.001928329467773
    7. ' liste' → logprob: -17.751928329467773
    8. '_list' → logprob: -17.876928329467773
    9. ' li' → logprob: -18.126928329467773
    10. ' ' → logprob: -18.501928329467773

Token 118: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0795297622680664
    2. '(' → logprob: -2.5795297622680664
    3. '(int' → logprob: -7.579529762268066
    4. '(input' → logprob: -9.079529762268066
    5. '(m' → logprob: -12.454529762268066
    6. '(
' → logprob: -12.454529762268066
    7. ' (' → logprob: -12.579529762268066
    8. '(

' → logprob: -13.204529762268066
    9. '(mapping' → logprob: -14.704529762268066
    10. '(split' → logprob: -15.454529762268066

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3869258165359497
    2. '(' → logprob: -1.1369258165359497
    3. '<int' → logprob: -10.88692569732666
    4. ' (' → logprob: -11.51192569732666
    5. '(
' → logprob: -11.51192569732666
    6. '(in' → logprob: -12.76192569732666
    7. '[int' → logprob: -13.01192569732666
    8. '(input' → logprob: -13.13692569732666
    9. '(

' → logprob: -13.13692569732666
    10. '(str' → logprob: -13.38692569732666

Token 120: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0027362818364053965
    2. ',input' → logprob: -6.1277360916137695
    3. '(' → logprob: -8.12773609161377
    4. ',' → logprob: -8.50273609161377
    5. 'input' → logprob: -10.25273609161377
    6. ' (' → logprob: -11.25273609161377
    7. '(
' → logprob: -13.62773609161377
    8. ')' → logprob: -13.75273609161377
    9. '=input' → logprob: -14.12773609161377
    10. ' input' → logprob: -15.37773609161377

Token 121: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02332514151930809
    2. ' input' → logprob: -3.773325204849243
    3. '(input' → logprob: -9.523324966430664
    4. ' ' → logprob: -12.773324966430664
    5. '<input' → logprob: -14.273324966430664
    6. '	input' → logprob: -14.523324966430664
    7. ',input' → logprob: -14.523324966430664
    8. '   ' → logprob: -14.898324966430664
    9. '[input' → logprob: -15.023324966430664
    10. '=input' → logprob: -15.148324966430664

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10076793283224106
    2. '()' → logprob: -2.3507678508758545
    3. '()))' → logprob: -7.725768089294434
    4. '())))' → logprob: -9.850768089294434
    5. '())' → logprob: -10.350768089294434
    6. '()));' → logprob: -10.975768089294434
    7. '(' → logprob: -12.100768089294434
    8. '()>' → logprob: -13.725768089294434
    9. '()
' → logprob: -13.850768089294434
    10. '()]' → logprob: -13.975768089294434

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009161015041172504
    2. 'strip' → logprob: -7.000916004180908
    3. ' split' → logprob: -12.375916481018066
    4. ')' → logprob: -15.500916481018066
    5. '(split' → logprob: -15.500916481018066
    6. '.split' → logprob: -16.75091552734375
    7. 'rstrip' → logprob: -16.75091552734375
    8. 'spl' → logprob: -18.50091552734375
    9. '_split' → logprob: -19.25091552734375
    10. ' strip' → logprob: -19.62591552734375

Token 124: '()))

' (ID: 125972)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13743899762630463
    2. '()))' → logprob: -2.137439012527466
    3. '())' → logprob: -4.637438774108887
    4. '())))' → logprob: -7.762438774108887
    5. '(' → logprob: -8.137438774108887
    6. '()));' → logprob: -11.512438774108887
    7. '('' → logprob: -11.887438774108887
    8. '()]' → logprob: -12.012438774108887
    9. '()>' → logprob: -12.137438774108887
    10. ')' → logprob: -12.137438774108887

Token 125: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6166338920593262
    2. '[' → logprob: -1.4916338920593262
    3. '<|end|>' → logprob: -2.366633892059326
    4. '
' → logprob: -3.241633892059326
    5. ')' → logprob: -3.616633892059326
    6. 'if' → logprob: -3.866633892059326
    7. ' ' → logprob: -4.491633892059326
    8. ' 
' → logprob: -4.991633892059326
    9. '  
' → logprob: -5.116633892059326
    10. ' if' → logprob: -5.616633892059326

Token 126: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7954625487327576
    2. '#' → logprob: -1.0454626083374023
    3. 'if' → logprob: -2.0454626083374023
    4. 'i' → logprob: -2.9204626083374023
    5. 'f' → logprob: -4.795462608337402
    6. 's' → logprob: -6.045462608337402
    7. 'assert' → logprob: -6.420462608337402
    8. 'p' → logprob: -7.420462608337402
    9. ' for' → logprob: -8.670462608337402
    10. 'result' → logprob: -8.795462608337402

Token 127: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.07435131072998047
    2. 'f' → logprob: -3.1993513107299805
    3. '#' → logprob: -4.4493513107299805
    4. 'termin' → logprob: -4.6993513107299805
    5. 'fi' → logprob: -5.1993513107299805
    6. 'for' → logprob: -6.1993513107299805
    7. 'crire' → logprob: -7.6993513107299805
    8. 'mand' → logprob: -8.07435131072998
    9. 'but' → logprob: -8.07435131072998
    10. 'm' → logprob: -8.32435131072998

Token 128: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.001199158956296742
    2. '#' → logprob: -7.251199245452881
    3. 'ition' → logprob: -7.751199245452881
    4. 'i' → logprob: -10.376198768615723
    5. 'er' → logprob: -11.501198768615723
    6. 'r' → logprob: -12.376198768615723
    7. '```' → logprob: -13.251198768615723
    8. ' #' → logprob: -13.376198768615723
    9. 'tir' → logprob: -13.751198768615723
    10. 'e' → logprob: -14.001198768615723

Token 129: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0754855871200562
    2. 's' → logprob: -2.0754857063293457
    3. 'a' → logprob: -2.3254857063293457
    4. ' une' → logprob: -2.5754857063293457
    5. ' la' → logprob: -2.7004857063293457
    6. 'C' → logprob: -3.3254857063293457
    7. 'une' → logprob: -3.3254857063293457
    8. '()' → logprob: -3.4504857063293457
    9. ' a' → logprob: -3.5754857063293457
    10. 'def' → logprob: -3.8254857063293457

Token 130: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.20457570254802704
    2. ' fonction' → logprob: -1.9545756578445435
    3. 'def' → logprob: -4.204575538635254
    4. ' function' → logprob: -4.454575538635254
    5. 'function' → logprob: -4.954575538635254
    6. 'for' → logprob: -5.079575538635254
    7. 'f' → logprob: -7.204575538635254
    8. ' boucle' → logprob: -8.079575538635254
    9. 's' → logprob: -8.204575538635254
    10. 'variable' → logprob: -8.204575538635254

Token 131: ' MOD' (ID: 32868)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06074397265911102
    2. ' ' → logprob: -4.185743808746338
    3. 'SPACE' → logprob: -4.310743808746338
    4. 'S' → logprob: -4.935743808746338
    5. '_SPACE' → logprob: -5.435743808746338
    6. 'A' → logprob: -5.685743808746338
    7. ' =' → logprob: -5.685743808746338
    8. '_MAX' → logprob: -5.935743808746338
    9. '=' → logprob: -6.185743808746338
    10. 'MAX' → logprob: -6.185743808746338

Token 132: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058784663677215576
    2. '=' → logprob: -3.6837847232818604
    3. 'MOD' → logprob: -3.6837847232818604
    4. '_MOD' → logprob: -6.058784484863281
    5. ' ' → logprob: -6.308784484863281
    6. '_' → logprob: -6.433784484863281
    7. ' MOD' → logprob: -6.933784484863281
    8. '_SPACE' → logprob: -10.433784484863281
    9. ' =
' → logprob: -10.558784484863281
    10. ',' → logprob: -12.308784484863281

Token 133: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7464131712913513
    2. '10' → logprob: -0.8714131712913513
    3. '100' → logprob: -2.246413230895996
    4. '1' → logprob: -6.371413230895996
    5. '998' → logprob: -10.246413230895996
    6. '123' → logprob: -11.496413230895996
    7. '(' → logprob: -11.871413230895996
    8. '0' → logprob: -12.246413230895996
    9. ' ' → logprob: -12.371413230895996
    10. '999' → logprob: -12.621413230895996

Token 134: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.31679561734199524
    2. '10' → logprob: -1.3167955875396729
    3. '998' → logprob: -6.191795825958252
    4. '1' → logprob: -7.316795825958252
    5. '(' → logprob: -7.816795825958252
    6. ' ' → logprob: -7.816795825958252
    7. 'int' → logprob: -12.441795349121094
    8. ' (' → logprob: -13.566795349121094
    9. '```' → logprob: -13.691795349121094
    10. '2' → logprob: -13.941795349121094

Token 135: '_' (ID: 62)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.005111964885145426
    2. '0' → logprob: -5.505112171173096
    3. '00' → logprob: -7.005112171173096
    4. '_' → logprob: -9.005111694335938
    5. ' ' → logprob: -13.380111694335938
    6. '048' → logprob: -15.817611694335938
    7. '09' → logprob: -15.880111694335938
    8. '```' → logprob: -16.067611694335938
    9. ''' → logprob: -16.192611694335938
    10. '06' → logprob: -16.442611694335938

Token 136: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.15169791877269745
    2. '_' → logprob: -2.276697874069214
    3. '0' → logprob: -3.276697874069214
    4. '00' → logprob: -7.901698112487793
    5. ''' → logprob: -13.026698112487793
    6. ',' → logprob: -13.901698112487793
    7. '```' → logprob: -14.151698112487793
    8. '=' → logprob: -14.651698112487793
    9. '`' → logprob: -14.901698112487793
    10. '__' → logprob: -15.276698112487793

Token 137: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16022931039333344
    2. '000' → logprob: -1.9102293252944946
    3. '00' → logprob: -13.160229682922363
    4. '0' → logprob: -13.785229682922363
    5. '003' → logprob: -14.535229682922363
    6. ' ' → logprob: -14.660229682922363
    7. '007' → logprob: -14.785229682922363
    8. '__' → logprob: -15.410229682922363
    9. '=' → logprob: -15.785229682922363
    10. '+' → logprob: -15.910229682922363

Token 138: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.008616226725280285
    2. '_' → logprob: -4.7586164474487305
    3. '001' → logprob: -14.25861644744873
    4. '0' → logprob: -15.25861644744873
    5. '003' → logprob: -15.25861644744873
    6. '+' → logprob: -15.75861644744873
    7. ' ' → logprob: -16.008615493774414
    8. '007' → logprob: -16.258615493774414
    9. '=' → logprob: -17.008615493774414
    10. '999' → logprob: -17.133615493774414

Token 139: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05169771611690521
    2. '007' → logprob: -3.3016977310180664
    3. '7' → logprob: -4.676697731018066
    4. '000' → logprob: -5.926697731018066
    5. '+' → logprob: -6.676697731018066
    6. '0' → logprob: -8.676697731018066
    7. '07' → logprob: -10.426697731018066
    8. ' +' → logprob: -10.926697731018066
    9. ' ' → logprob: -11.301697731018066
    10. '003' → logprob: -11.426697731018066

Token 140: '007' (ID: 19378)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.18933258950710297
    2. '007' → logprob: -2.4393324851989746
    3. '_' → logprob: -2.9393324851989746
    4. '+' → logprob: -3.4393324851989746
    5. ' +' → logprob: -8.939332962036133
    6. '0' → logprob: -9.814332962036133
    7. '07' → logprob: -10.689332962036133
    8. ' ' → logprob: -11.314332962036133
    9. '000' → logprob: -11.314332962036133
    10. '1' → logprob: -11.689332962036133

Token 141: ' (' (ID: 350)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.020158523693680763
    2. '_MOD' → logprob: -4.520158290863037
    3. ' MOD' → logprob: -5.395158290863037
    4. '
' → logprob: -5.895158290863037
    5. '=' → logprob: -7.020158290863037
    6. ' =' → logprob: -7.770158290863037
    7. '_' → logprob: -8.145158767700195
    8. ')' → logprob: -9.770158767700195
    9. '<|end|>' → logprob: -10.645158767700195
    10. '.MOD' → logprob: -11.020158767700195

Token 142: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010617982596158981
    2. '))' → logprob: -4.885618209838867
    3. ' )' → logprob: -5.885618209838867
    4. ' ' → logprob: -9.635618209838867
    5. ' ))' → logprob: -9.635618209838867
    6. '1' → logprob: -10.385618209838867
    7. '10' → logprob: -10.510618209838867
    8. '100' → logprob: -11.385618209838867
    9. '_' → logprob: -11.635618209838867
    10. '7' → logprob: -12.760618209838867

Token 143: ' milliard' (ID: 131296)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0705333948135376
    2. ' )' → logprob: -2.695533275604248
    3. ' modulus' → logprob: -9.320533752441406
    4. ' ' → logprob: -9.445533752441406
    5. 'mod' → logprob: -9.570533752441406
    6. ' modulo' → logprob: -9.695533752441406
    7. ' ' → logprob: -9.820533752441406
    8. '_' → logprob: -10.195533752441406
    9. '7' → logprob: -10.570533752441406
    10. '9' → logprob: -10.820533752441406

Token 144: ' sept' (ID: 18765)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28255710005760193
    2. ' +' → logprob: -1.4075571298599243
    3. ')' → logprob: -6.782557010650635
    4. ' plus' → logprob: -9.032557487487793
    5. '+)' → logprob: -9.532557487487793
    6. ' )' → logprob: -9.907557487487793
    7. 'plus' → logprob: -10.907557487487793
    8. ' ' → logprob: -12.782557487487793
    9. ')+' → logprob: -13.032557487487793
    10. '_plus' → logprob: -13.157557487487793

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011824010871350765
    2. '_' → logprob: -4.636824131011963
    3. ' )' → logprob: -6.761824131011963
    4. '_)' → logprob: -8.511823654174805
    5. '100' → logprob: -8.636823654174805
    6. ',' → logprob: -9.386823654174805
    7. ' _' → logprob: -10.511823654174805
    8. '3' → logprob: -10.761823654174805
    9. '20' → logprob: -10.886823654174805
    10. 'aire' → logprob: -10.886823654174805

Token 146: '#' (ID: 2)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. '_MOD' → logprob: -13.375001907348633
    3. ' MOD' → logprob: -15.125001907348633
    4. '=' → logprob: -15.250001907348633
    5. '_' → logprob: -17.250001907348633
    6. '.MOD' → logprob: -17.375001907348633
    7. ')' → logprob: -17.500001907348633
    8. ' =' → logprob: -18.250001907348633
    9. '100' → logprob: -18.375001907348633
    10. 'MD' → logprob: -18.875001907348633

Token 147: ' Ce' (ID: 14228)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0038925919216126204
    2. ' MOD' → logprob: -5.753892421722412
    3. '_MOD' → logprob: -7.378892421722412
    4. ' =' → logprob: -9.87889289855957
    5. ' ' → logprob: -11.12889289855957
    6. '_' → logprob: -12.12889289855957
    7. '=' → logprob: -12.37889289855957
    8. '.MOD' → logprob: -12.50389289855957
    9. ',' → logprob: -12.87889289855957
    10. '
' → logprob: -13.12889289855957

Token 148: ' nombre' (ID: 9733)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.05616088956594467
    2. '_MOD' → logprob: -3.9311609268188477
    3. ' MOD' → logprob: -4.181160926818848
    4. 'mod' → logprob: -5.056160926818848
    5. 'n' → logprob: -5.181160926818848
    6. 's' → logprob: -6.181160926818848
    7. '=' → logprob: -6.681160926818848
    8. 'M' → logprob: -7.181160926818848
    9. '_mod' → logprob: -7.181160926818848
    10. ' =' → logprob: -7.306160926818848

Token 149: ' premier' (ID: 15506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16432787477970123
    2. '=' → logprob: -2.66432785987854
    3. 'MOD' → logprob: -2.66432785987854
    4. '_MOD' → logprob: -4.914328098297119
    5. ' MOD' → logprob: -6.164328098297119
    6. '_' → logprob: -6.664328098297119
    7. '_mod' → logprob: -7.414328098297119
    8. 'mod' → logprob: -7.414328098297119
    9. ' ' → logprob: -9.539327621459961
    10. 's' → logprob: -9.914327621459961

Token 150: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5615025758743286
    2. '=' → logprob: -2.061502456665039
    3. 'MOD' → logprob: -2.186502456665039
    4. '<|end|>' → logprob: -2.186502456665039
    5. ')' → logprob: -3.061502456665039
    6. ' MOD' → logprob: -4.686502456665039
    7. ' ' → logprob: -5.686502456665039
    8. ',' → logprob: -5.686502456665039
    9. 'mod' → logprob: -5.936502456665039
    10. ' is' → logprob: -5.936502456665039

Token 151: ' cour' (ID: 2871)
  Prédit: ' souvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.45160654187202454
    2. ' utilisé' → logprob: -1.0766065120697021
    3. ' cour' → logprob: -5.076606750488281
    4. ' fré' → logprob: -5.451606750488281
    5. 'sou' → logprob: -5.451606750488281
    6. ' ' → logprob: -6.576606750488281
    7. 's' → logprob: -6.701606750488281
    8. 'cour' → logprob: -7.326606750488281
    9. ' utilisée' → logprob: -7.576606750488281
    10. ' often' → logprob: -7.701606750488281

Token 152: 'amment' (ID: 23443)
  Prédit: 'amment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amment' → logprob: -0.004704476799815893
    2. 'ament' → logprob: -6.004704475402832
    3. 'u' → logprob: -7.004704475402832
    4. 'ant' → logprob: -8.004704475402832
    5. 'ement' → logprob: -8.004704475402832
    6. 'emment' → logprob: -8.379704475402832
    7. 'ément' → logprob: -8.504704475402832
    8. 'am' → logprob: -8.879704475402832
    9. 'onné' → logprob: -11.129704475402832
    10. 'ument' → logprob: -11.629704475402832

Token 153: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.09093917906284332
    2. ' used' → logprob: -2.8409392833709717
    3. 'used' → logprob: -4.215939044952393
    4. 'util' → logprob: -5.465939044952393
    5. ' utilisée' → logprob: -5.465939044952393
    6. '<|end|>' → logprob: -6.090939044952393
    7. ' utilisés' → logprob: -6.840939044952393
    8. ' utilizado' → logprob: -7.965939044952393
    9. ' utilisées' → logprob: -7.965939044952393
    10. '_used' → logprob: -8.09093952178955

Token 154: ' pour' (ID: 1930)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.11069915443658829
    2. ' MOD' → logprob: -2.61069917678833
    3. '_MOD' → logprob: -4.11069917678833
    4. '_' → logprob: -5.48569917678833
    5. ',' → logprob: -5.98569917678833
    6. ')' → logprob: -5.98569917678833
    7. 'mod' → logprob: -6.36069917678833
    8. ' )' → logprob: -6.98569917678833
    9. ' ' → logprob: -7.11069917678833
    10. ' =' → logprob: -7.98569917678833

Token 155: ' éviter' (ID: 64013)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.8974466919898987
    2. ' le' → logprob: -1.647446632385254
    3. ' effectuer' → logprob: -1.897446632385254
    4. ' la' → logprob: -2.772446632385254
    5. ' les' → logprob: -3.022446632385254
    6. 'mod' → logprob: -3.022446632385254
    7. ' modulo' → logprob: -3.897446632385254
    8. ' des' → logprob: -4.522446632385254
    9. ' faire' → logprob: -5.147446632385254
    10. ' modulus' → logprob: -5.147446632385254

Token 156: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07338110357522964
    2. ' des' → logprob: -3.448381185531616
    3. ' overflow' → logprob: -4.198380947113037
    4. 'les' → logprob: -4.323380947113037
    5. ' l' → logprob: -5.323380947113037
    6. ' ' → logprob: -6.448380947113037
    7. ' la' → logprob: -6.573380947113037
    8. '<|end|>' → logprob: -7.073380947113037
    9. 'des' → logprob: -7.323380947113037
    10. 'l' → logprob: -8.073381423950195

Token 157: ' déb' (ID: 37874)
  Prédit: ' dépasse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasse' → logprob: -0.8317427635192871
    2. ' overflow' → logprob: -1.206742763519287
    3. ' déb' → logprob: -1.706742763519287
    4. 'overflow' → logprob: -3.081742763519287
    5. 's' → logprob: -3.831742763519287
    6. 'd' → logprob: -5.456742763519287
    7. ' erreurs' → logprob: -5.581742763519287
    8. 'mod' → logprob: -5.831742763519287
    9. ' problèmes' → logprob: -6.706742763519287
    10. ' mod' → logprob: -6.956742763519287

Token 158: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.9089275002479553
    2. 'ug' → logprob: -1.6589274406433105
    3. 't' → logprob: -2.4089274406433105
    4. 'f' → logprob: -3.2839274406433105
    5. ']' → logprob: -3.5339274406433105
    6. 'ords' → logprob: -4.0964274406433105
    7. ' modulo' → logprob: -4.3464274406433105
    8. 'ou' → logprob: -4.4089274406433105
    9. 'utations' → logprob: -4.5964274406433105
    10. 'it' → logprob: -4.8464274406433105

Token 159: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.5186850428581238
    2. 'er' → logprob: -1.3936851024627686
    3. 'éments' → logprob: -3.0186851024627686
    4. 'ément' → logprob: -3.2686851024627686
    5. 'ement' → logprob: -4.6436848640441895
    6. 'amientos' → logprob: -4.7686848640441895
    7. 'érations' → logprob: -4.7686848640441895
    8. 'èrement' → logprob: -4.8936848640441895
    9. 'lements' → logprob: -5.0186848640441895
    10. 'é' → logprob: -5.5186848640441895

Token 160: ' lors' (ID: 15456)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0404096320271492
    2. '_MOD' → logprob: -3.540409564971924
    3. ' =' → logprob: -5.540409564971924
    4. '_' → logprob: -6.040409564971924
    5. '=' → logprob: -6.290409564971924
    6. ' MOD' → logprob: -6.290409564971924
    7. '_mod' → logprob: -9.040410041809082
    8. 'mod' → logprob: -9.290410041809082
    9. ',' → logprob: -9.540410041809082
    10. ' (' → logprob: -10.165410041809082

Token 161: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '
' (ID: 198)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.4880225360393524
    2. 'calcul' → logprob: -1.2380225658416748
    3. 'l' → logprob: -3.488022565841675
    4. ' calculations' → logprob: -3.988022565841675
    5. ' l' → logprob: -4.488022327423096
    6. ' les' → logprob: -4.738022327423096
    7. ' opérations' → logprob: -5.363022327423096
    8. ' des' → logprob: -5.363022327423096
    9. 'mod' → logprob: -5.613022327423096
    10. 'la' → logprob: -6.363022327423096

Token 163: '#' (ID: 2)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.1096111536026
    2. ' calculations' → logprob: -1.3596111536026
    3. ' ' → logprob: -1.6096111536026
    4. ' calcul' → logprob: -2.4846110343933105
    5. ' les' → logprob: -2.9846110343933105
    6. '_' → logprob: -4.3596110343933105
    7. ' l' → logprob: -4.8596110343933105
    8. 'pow' → logprob: -4.8596110343933105
    9. 'mod' → logprob: -4.9846110343933105
    10. ' le' → logprob: -5.3596110343933105

Token 164: ' grands' (ID: 43085)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6658142805099487
    2. ' calcul' → logprob: -1.5408142805099487
    3. ' l' → logprob: -2.4158143997192383
    4. 'calcul' → logprob: -2.9158143997192383
    5. ' calculations' → logprob: -3.1658143997192383
    6. ' des' → logprob: -3.4158143997192383
    7. ' le' → logprob: -3.6658143997192383
    8. 'l' → logprob: -5.415814399719238
    9. 's' → logprob: -5.415814399719238
    10. ' la' → logprob: -5.540814399719238

Token 165: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.1924930363893509
    2. 'calcul' → logprob: -1.8174930810928345
    3. ' nombres' → logprob: -4.817492961883545
    4. 's' → logprob: -6.442492961883545
    5. 'ex' → logprob: -6.942492961883545
    6. 'mod' → logprob: -7.567492961883545
    7. ' calculations' → logprob: -8.567493438720703
    8. 'multip' → logprob: -8.817493438720703
    9. 'nombre' → logprob: -9.317493438720703
    10. ' mod' → logprob: -9.567493438720703

Token 166: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.5266246199607849
    2. 'es' → logprob: -1.0266246795654297
    3. 's' → logprob: -3.9016246795654297
    4. 'és' → logprob: -4.40162467956543
    5. 'ulations' → logprob: -5.02662467956543
    6. 'érations' → logprob: -5.27662467956543
    7. 'éments' → logprob: -5.65162467956543
    8. 'ements' → logprob: -7.52662467956543
    9. 't' → logprob: -7.65162467956543
    10. '#' → logprob: -7.77662467956543

Token 167: ' dans' (ID: 2671)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00019090480054728687
    2. '_MOD' → logprob: -9.000190734863281
    3. ' MOD' → logprob: -10.000190734863281
    4. '_' → logprob: -11.375190734863281
    5. ')' → logprob: -12.875190734863281
    6. '.MOD' → logprob: -13.375190734863281
    7. '=' → logprob: -13.375190734863281
    8. '(' → logprob: -14.375190734863281
    9. ',' → logprob: -14.500190734863281
    10. ' =' → logprob: -14.625190734863281

Token 168: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9576175212860107
    2. 'mod' → logprob: -1.4576175212860107
    3. ' modular' → logprob: -2.4576175212860107
    4. ' modulo' → logprob: -2.4576175212860107
    5. ' mod' → logprob: -2.9576175212860107
    6. ' le' → logprob: -3.2076175212860107
    7. ' la' → logprob: -3.5826175212860107
    8. 'les' → logprob: -4.08261775970459
    9. 'la' → logprob: -4.08261775970459
    10. 'l' → logprob: -4.83261775970459

Token 169: ' problèmes' (ID: 49822)
  Prédit: ' problèmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problèmes' → logprob: -0.6160510778427124
    2. 'pro' → logprob: -0.8660510778427124
    3. ' calcul' → logprob: -4.741051197052002
    4. 'program' → logprob: -5.366051197052002
    5. '#' → logprob: -5.991051197052002
    6. ' problems' → logprob: -5.991051197052002
    7. ' concours' → logprob: -6.116051197052002
    8. 'calcul' → logprob: -6.116051197052002
    9. 'mod' → logprob: -6.366051197052002
    10. ' programmes' → logprob: -6.366051197052002

Token 170: ' alg' (ID: 4485)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.021007532253861427
    2. ' MOD' → logprob: -4.146007537841797
    3. 'mod' → logprob: -5.771007537841797
    4. '_MOD' → logprob: -6.646007537841797
    5. '_mod' → logprob: -9.521007537841797
    6. ' =' → logprob: -10.021007537841797
    7. ' de' → logprob: -10.021007537841797
    8. '```' → logprob: -10.021007537841797
    9. ' mod' → logprob: -10.146007537841797
    10. '#' → logprob: -10.271007537841797

Token 171: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.0030757521744817495
    2. 'orithms' → logprob: -6.12807559967041
    3. 'éb' → logprob: -7.62807559967041
    4. 'or' → logprob: -8.75307559967041
    5. '```' → logprob: -9.50307559967041
    6. '#' → logprob: -9.75307559967041
    7. 'orth' → logprob: -10.62807559967041
    8. '
' → logprob: -11.25307559967041
    9. 'orithm' → logprob: -11.25307559967041
    10. 'ort' → logprob: -11.75307559967041

Token 172: 'miques' (ID: 172066)
  Prédit: 'miques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'miques' → logprob: -0.013304696418344975
    2. 'mes' → logprob: -4.388304710388184
    3. 'm' → logprob: -8.013304710388184
    4. 'mi' → logprob: -8.138304710388184
    5. 'th' → logprob: -9.638304710388184
    6. 'mic' → logprob: -11.263304710388184
    7. 'me' → logprob: -11.263304710388184
    8. 'ms' → logprob: -11.263304710388184
    9. '#' → logprob: -11.388304710388184
    10. '```' → logprob: -11.638304710388184

Token 173: ',' (ID: 11)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.286852345103398e-05
    2. '_MOD' → logprob: -10.625042915344238
    3. '
' → logprob: -11.625042915344238
    4. ' MOD' → logprob: -11.875042915344238
    5. '.MOD' → logprob: -14.125042915344238
    6. '#' → logprob: -15.000042915344238
    7. '_' → logprob: -15.500042915344238
    8. 'mod' → logprob: -15.750042915344238
    9. 'MD' → logprob: -15.875042915344238
    10. '```' → logprob: -15.875042915344238

Token 174: ' en' (ID: 469)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6403250098228455
    2. ' MOD' → logprob: -0.7653250098228455
    3. '_MOD' → logprob: -5.89032506942749
    4. ' ' → logprob: -6.51532506942749
    5. '_' → logprob: -6.76532506942749
    6. ')' → logprob: -6.76532506942749
    7. ' )' → logprob: -7.89032506942749
    8. 'M' → logprob: -8.515324592590332
    9. 'mod' → logprob: -9.265324592590332
    10. ' ' → logprob: -9.765324592590332

Token 175: ' gard' (ID: 18283)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.814948558807373
    2. ' MOD' → logprob: -1.189948558807373
    3. ' modulo' → logprob: -1.814948558807373
    4. 'mod' → logprob: -3.064948558807373
    5. ' mod' → logprob: -3.814948558807373
    6. '_MOD' → logprob: -4.689948558807373
    7. ' modulus' → logprob: -6.189948558807373
    8. '_mod' → logprob: -6.689948558807373
    9. 'pow' → logprob: -6.689948558807373
    10. '_' → logprob: -6.814948558807373

Token 176: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.019515976309776306
    2. 'er' → logprob: -5.1445159912109375
    3. 'def' → logprob: -6.2695159912109375
    4. 'érant' → logprob: -6.3945159912109375
    5. '#' → logprob: -6.5195159912109375
    6. 'eur' → logprob: -6.7695159912109375
    7. 'ex' → logprob: -6.8945159912109375
    8. 'nant' → logprob: -7.0195159912109375
    9. 'avant' → logprob: -7.2695159912109375
    10. 'iant' → logprob: -7.3945159912109375

Token 177: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.1440165042877197
    2. ' ' → logprob: -1.5190165042877197
    3. 'le' → logprob: -2.3940165042877197
    4. ' le' → logprob: -2.5190165042877197
    5. ' la' → logprob: -2.7690165042877197
    6. ' C' → logprob: -3.2690165042877197
    7. 'mod' → logprob: -3.7690165042877197
    8. 'C' → logprob: -3.8940165042877197
    9. '_' → logprob: -3.8940165042877197
    10. 'la' → logprob: -4.144016265869141

Token 178: ' résultats' (ID: 48985)
  Prédit: ' résultats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.31622785329818726
    2. 'rés' → logprob: -1.691227912902832
    3. ' calcul' → logprob: -3.191227912902832
    4. ' result' → logprob: -4.816227912902832
    5. 'result' → logprob: -5.191227912902832
    6. ' valeurs' → logprob: -5.316227912902832
    7. 's' → logprob: -5.316227912902832
    8. 'calcul' → logprob: -5.316227912902832
    9. ' résultat' → logprob: -5.566227912902832
    10. ' rés' → logprob: -5.566227912902832

Token 179: ' dans' (ID: 2671)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3487545847892761
    2. ' %' → logprob: -1.473754644393921
    3. '=' → logprob: -3.848754644393921
    4. ' =' → logprob: -4.473754405975342
    5. ' modulo' → logprob: -4.598754405975342
    6. 'mod' → logprob: -4.723754405975342
    7. ' %=' → logprob: -4.723754405975342
    8. '%=' → logprob: -6.598754405975342
    9. '_mod' → logprob: -6.973754405975342
    10. 'MOD' → logprob: -7.598754405975342

Token 180: ' un' (ID: 537)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -1.0399301052093506
    2. ' ' → logprob: -1.6649301052093506
    3. 'MOD' → logprob: -1.9149301052093506
    4. '10' → logprob: -2.2899301052093506
    5. '1' → logprob: -2.9149301052093506
    6. ' (' → logprob: -3.6649301052093506
    7. '100' → logprob: -3.7899301052093506
    8. 'mod' → logprob: -4.03993034362793
    9. ' modulo' → logprob: -4.66493034362793
    10. ' la' → logprob: -4.78993034362793

Token 181: ' interval' (ID: 17116)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3010656237602234
    2. 'es' → logprob: -2.301065683364868
    3. 'ent' → logprob: -3.301065683364868
    4. 'range' → logprob: -3.551065683364868
    5. 'esp' → logprob: -3.926065683364868
    6. 'MOD' → logprob: -4.551065444946289
    7. ' espace' → logprob: -4.676065444946289
    8. 'module' → logprob: -4.801065444946289
    9. ' modulo' → logprob: -4.801065444946289
    10. 'space' → logprob: -5.176065444946289

Token 182: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3206664025783539
    2. 'e' → logprob: -1.3206664323806763
    3. 'val' → logprob: -5.070666313171387
    4. 're' → logprob: -7.570666313171387
    5. '=' → logprob: -9.195666313171387
    6. 'v' → logprob: -9.820666313171387
    7. 'al' → logprob: -9.820666313171387
    8. ')' → logprob: -9.945666313171387
    9. '#' → logprob: -10.070666313171387
    10. '_' → logprob: -10.445666313171387

Token 183: ' raisonn' (ID: 144705)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11169774830341339
    2. 'MOD' → logprob: -3.8616976737976074
    3. ')' → logprob: -3.9866976737976074
    4. 'mod' → logprob: -4.111697673797607
    5. ' =' → logprob: -4.361697673797607
    6. '(' → logprob: -4.611697673797607
    7. ' ' → logprob: -5.111697673797607
    8. '_' → logprob: -5.236697673797607
    9. ' MOD' → logprob: -5.236697673797607
    10. ',' → logprob: -6.236697673797607

Token 184: 'able' (ID: 562)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2077043503522873
    2. '_' → logprob: -1.7077043056488037
    3. '=' → logprob: -6.207704544067383
    4. 'le' → logprob: -6.332704544067383
    5. ')' → logprob: -7.332704544067383
    6. 'es' → logprob: -7.707704544067383
    7. 'aire' → logprob: -8.832704544067383
    8. '_mod' → logprob: -8.832704544067383
    9. 'u' → logprob: -8.957704544067383
    10. '_e' → logprob: -9.082704544067383

Token 185: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.36574100604048e-06
    2. '_MOD' → logprob: -12.875004768371582
    3. ' MOD' → logprob: -13.750004768371582
    4. '
' → logprob: -16.125003814697266
    5. '.MOD' → logprob: -16.250003814697266
    6. 'MD' → logprob: -16.750003814697266
    7. '```' → logprob: -16.750003814697266
    8. '_' → logprob: -16.875003814697266
    9. ')' → logprob: -17.000003814697266
    10. 'mod' → logprob: -17.375003814697266

Token 186: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.896309739408025e-07
    2. ' MOD' → logprob: -15.000000953674316
    3. '_MOD' → logprob: -15.375000953674316
    4. '```' → logprob: -17.125
    5. 'MD' → logprob: -17.625
    6. '.MOD' → logprob: -17.75
    7. '
' → logprob: -17.75
    8. 'MO' → logprob: -17.875
    9. 'MODE' → logprob: -18.5
    10. 'M' → logprob: -18.625

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327295303344727
    2. '=' → logprob: -1.3132729530334473
    3. ' ' → logprob: -11.938272476196289
    4. ' =
' → logprob: -12.813272476196289
    5. ')' → logprob: -14.563272476196289
    6. '_' → logprob: -14.563272476196289
    7. '=

' → logprob: -15.438272476196289
    8. '=int' → logprob: -15.938272476196289
    9. ' =
' → logprob: -16.06327247619629
    10. ' =)' → logprob: -16.06327247619629

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5653391480445862
    2. '100' → logprob: -1.3153390884399414
    3. ' ' → logprob: -1.8153390884399414
    4. '10' → logprob: -7.315339088439941
    5. ' ' → logprob: -14.440339088439941
    6. '```' → logprob: -14.815339088439941
    7. '_' → logprob: -15.190339088439941
    8. '0' → logprob: -16.565340042114258
    9. 'int' → logprob: -16.815340042114258
    10. '(' → logprob: -17.190340042114258

Token 189: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.20148994028568268
    2. '1' → logprob: -1.7014899253845215
    3. '10' → logprob: -9.82649040222168
    4. ' ' → logprob: -10.70149040222168
    5. 'int' → logprob: -16.95149040222168
    6. '```' → logprob: -17.07649040222168
    7. '_' → logprob: -18.32649040222168
    8. '0' → logprob: -18.95149040222168
    9. '   ' → logprob: -19.57649040222168
    10. '(' → logprob: -19.82649040222168

Token 190: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004078878089785576
    2. '000' → logprob: -5.5040788650512695
    3. '0' → logprob: -15.50407886505127
    4. ' _' → logprob: -16.379079818725586
    5. '_
' → logprob: -16.879079818725586
    6. '7' → logprob: -17.504079818725586
    7. '__' → logprob: -18.504079818725586
    8. '```' → logprob: -18.629079818725586
    9. ' ' → logprob: -18.879079818725586
    10. '*' → logprob: -19.004079818725586

Token 191: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -11.875008583068848
    3. '0' → logprob: -13.750008583068848
    4. ' ' → logprob: -14.750008583068848
    5. '00' → logprob: -15.250008583068848
    6. '  ' → logprob: -19.250009536743164
    7. '```' → logprob: -19.250009536743164
    8. '100' → logprob: -20.125009536743164
    9. '   ' → logprob: -20.250009536743164
    10. '007' → logprob: -20.812509536743164

Token 192: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002812363440170884
    2. '000' → logprob: -5.877812385559082
    3. ' _' → logprob: -12.627812385559082
    4. ' ' → logprob: -13.377812385559082
    5. '```' → logprob: -14.877812385559082
    6. '00' → logprob: -15.002812385559082
    7. '___' → logprob: -15.127812385559082
    8. ',' → logprob: -15.252812385559082
    9. '__' → logprob: -15.377812385559082
    10. '006' → logprob: -16.190311431884766

Token 193: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.25001049041748
    3. ' ' → logprob: -12.87501049041748
    4. '0' → logprob: -14.25001049041748
    5. '100' → logprob: -14.50001049041748
    6. '006' → logprob: -14.75001049041748
    7. '007' → logprob: -15.56251049041748
    8. '6' → logprob: -15.87501049041748
    9. '```' → logprob: -16.000009536743164
    10. '1' → logprob: -16.062509536743164

Token 194: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0022071164567023516
    2. '007' → logprob: -6.127207279205322
    3. '+' → logprob: -11.127206802368164
    4. ' _' → logprob: -13.127206802368164
    5. '000' → logprob: -13.502206802368164
    6. ' ' → logprob: -13.877206802368164
    7. '7' → logprob: -14.127206802368164
    8. '07' → logprob: -14.627206802368164
    9. '009' → logprob: -14.877206802368164
    10. '```' → logprob: -15.127206802368164

Token 195: '007' (ID: 19378)
  Prédit: '007'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '007' → logprob: -0.5233522057533264
    2. '7' → logprob: -0.8983522057533264
    3. '07' → logprob: -8.39835262298584
    4. ' ' → logprob: -13.14835262298584
    5. '0' → logprob: -14.77335262298584
    6. '+' → logprob: -15.52335262298584
    7. '_' → logprob: -15.52335262298584
    8. '' → logprob: -15.64835262298584
    9. '407' → logprob: -16.023351669311523
    10. '```' → logprob: -16.210851669311523

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24757355451583862
    2. '#' → logprob: -1.9975736141204834
    3. '<|end|>' → logprob: -3.4975736141204834
    4. 'for' → logprob: -4.122573375701904
    5. 'result' → logprob: -4.747573375701904
    6. ' 
' → logprob: -4.872573375701904
    7. '' → logprob: -4.872573375701904
    8. 'C' → logprob: -6.247573375701904
    9. 'a' → logprob: -6.622573375701904
    10. 's' → logprob: -6.622573375701904

Token 197: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3356505334377289
    2. 's' → logprob: -1.4606505632400513
    3. 'res' → logprob: -3.7106504440307617
    4. '#' → logprob: -4.960650444030762
    5. 'S' → logprob: -5.210650444030762
    6. 'for' → logprob: -5.585650444030762
    7. 'r' → logprob: -5.835650444030762
    8. 'total' → logprob: -5.960650444030762
    9. 'sum' → logprob: -6.210650444030762
    10. 'answer' → logprob: -6.835650444030762

Token 198: ' Pré' (ID: 86400)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19637714326381683
    2. 's' → logprob: -1.946377158164978
    3. 'res' → logprob: -4.321377277374268
    4. '#' → logprob: -4.946377277374268
    5. 'total' → logprob: -5.571377277374268
    6. 'r' → logprob: -6.321377277374268
    7. 'sum' → logprob: -6.446377277374268
    8. 'S' → logprob: -6.571377277374268
    9. ' result' → logprob: -6.821377277374268
    10. 'for' → logprob: -6.821377277374268

Token 199: 'parer' (ID: 48041)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.08746080845594406
    2. 's' → logprob: -3.96246075630188
    3. 'sum' → logprob: -4.087460994720459
    4. 'd' → logprob: -4.212460994720459
    5. 'dict' → logprob: -4.837460994720459
    6. '#' → logprob: -5.087460994720459
    7. 'voir' → logprob: -5.712460994720459
    8. 'parer' → logprob: -5.962460994720459
    9. '_sum' → logprob: -6.462460994720459
    10. 'sent' → logprob: -6.712460994720459

Token 200: ' une' (ID: 2463)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.767090916633606
    2. ' result' → logprob: -1.017090916633606
    3. 'res' → logprob: -2.6420907974243164
    4. 's' → logprob: -3.1420907974243164
    5. ' res' → logprob: -4.517090797424316
    6. ' resultat' → logprob: -5.017090797424316
    7. ' ans' → logprob: -5.142090797424316
    8. 'total' → logprob: -5.267090797424316
    9. ' total' → logprob: -5.517090797424316
    10. 'sum' → logprob: -5.517090797424316

Token 201: ' liste' (ID: 31719)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -1.3267840147018433
    2. ' liste' → logprob: -1.3267840147018433
    3. 'liste' → logprob: -1.7017840147018433
    4. 's' → logprob: -2.576784133911133
    5. 'variable' → logprob: -3.201784133911133
    6. ' result' → logprob: -3.201784133911133
    7. ' somme' → logprob: -3.451784133911133
    8. 'result' → logprob: -3.576784133911133
    9. ' table' → logprob: -4.326784133911133
    10. 'table' → logprob: -4.826784133911133

Token 202: ' B' (ID: 418)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14225263893604279
    2. ' dp' → logprob: -2.7672526836395264
    3. 'result' → logprob: -3.7672526836395264
    4. 'res' → logprob: -5.017252445220947
    5. ' result' → logprob: -5.142252445220947
    6. 'counts' → logprob: -5.517252445220947
    7. 'DP' → logprob: -5.767252445220947
    8. 'prefix' → logprob: -5.892252445220947
    9. 's' → logprob: -6.017252445220947
    10. ' DP' → logprob: -6.142252445220947

Token 203: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25491270422935486
    2. '=' → logprob: -1.5049127340316772
    3. 'B' → logprob: -6.254912853240967
    4. '=[]' → logprob: -7.504912853240967
    5. '=[' → logprob: -7.879912853240967
    6. '=[]
' → logprob: -10.004912376403809
    7. '[' → logprob: -11.004912376403809
    8. ' =[' → logprob: -11.379912376403809
    9. '[]' → logprob: -11.504912376403809
    10. '=B' → logprob: -11.504912376403809

Token 204: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4632734954357147
    2. '=' → logprob: -1.213273525238037
    3. ' a' → logprob: -3.963273525238037
    4. ' cont' → logprob: -4.088273525238037
    5. 'a' → logprob: -4.463273525238037
    6. 'cont' → logprob: -4.838273525238037
    7. '[' → logprob: -5.213273525238037
    8. ' sera' → logprob: -5.338273525238037
    9. ' contient' → logprob: -5.463273525238037
    10. '=[' → logprob: -7.213273525238037

Token 205: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.05162469297647476
    2. 'in' → logprob: -3.4266247749328613
    3. 'i' → logprob: -4.926624774932861
    4. 'ain' → logprob: -5.926624774932861
    5. 'iend' → logprob: -6.176624774932861
    6. 'inue' → logprob: -6.301624774932861
    7. '=' → logprob: -7.176624774932861
    8. 'ains' → logprob: -7.176624774932861
    9. 'iens' → logprob: -7.926624774932861
    10. 'endra' → logprob: -8.301624298095703

Token 206: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.03733397275209427
    2. 'endra' → logprob: -3.6623339653015137
    3. 'nent' → logprob: -5.537333965301514
    4. 'e' → logprob: -6.287333965301514
    5. 'end' → logprob: -6.412333965301514
    6. 't' → logprob: -7.287333965301514
    7. 'ente' → logprob: -7.412333965301514
    8. 'n' → logprob: -7.787333965301514
    9. 'nt' → logprob: -8.162334442138672
    10. 'nera' → logprob: -8.287334442138672

Token 207: ' les' (ID: 1341)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -1.125303030014038
    2. '[]' → logprob: -1.875303030014038
    3. 'les' → logprob: -2.000303030014038
    4. 'N' → logprob: -2.125303030014038
    5. '[' → logprob: -2.375303030014038
    6. ' les' → logprob: -2.375303030014038
    7. ' des' → logprob: -3.875303030014038
    8. ' N' → logprob: -4.500303268432617
    9. 'des' → logprob: -4.750303268432617
    10. '[len' → logprob: -4.875303268432617

Token 208: ' puiss' (ID: 102546)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.1789757013320923
    2. 'N' → logprob: -1.6789757013320923
    3. 'val' → logprob: -1.6789757013320923
    4. 'rés' → logprob: -2.8039755821228027
    5. '0' → logprob: -2.9289755821228027
    6. 'élé' → logprob: -3.1789755821228027
    7. ' résultats' → logprob: -3.1789755821228027
    8. ' valeurs' → logprob: -3.4289755821228027
    9. ' mêmes' → logprob: -3.5539755821228027
    10. ' éléments' → logprob: -4.303975582122803

Token 209: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.013627659529447556
    2. 'a' → logprob: -4.888627529144287
    3. 'ance' → logprob: -5.638627529144287
    4. '_' → logprob: -7.388627529144287
    5. 'e' → logprob: -8.138628005981445
    6. '(' → logprob: -8.263628005981445
    7. 'ences' → logprob: -8.388628005981445
    8. 's' → logprob: -8.763628005981445
    9. 'an' → logprob: -9.263628005981445
    10. 'es' → logprob: -9.263628005981445

Token 210: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9073896408081055
    2. ' de' → logprob: -1.1573896408081055
    3. '[' → logprob: -1.5323896408081055
    4. '2' → logprob: -4.4073896408081055
    5. 'pow' → logprob: -4.4073896408081055
    6. '[i' → logprob: -4.6573896408081055
    7. 'B' → logprob: -4.9073896408081055
    8. '[len' → logprob: -5.4073896408081055
    9. ' =' → logprob: -5.6573896408081055
    10. ' [' → logprob: -6.1573896408081055

Token 211: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004979832097887993
    2. 'C' → logprob: -5.879979610443115
    3. '10' → logprob: -6.629979610443115
    4. ' ' → logprob: -7.504979610443115
    5. 'de' → logprob: -8.504980087280273
    6. ' C' → logprob: -10.504980087280273
    7. '#' → logprob: -11.379980087280273
    8. '3' → logprob: -11.629980087280273
    9. 'A' → logprob: -11.754980087280273
    10. '-' → logprob: -12.004980087280273

Token 212: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008245167322456837
    2. '10' → logprob: -5.13324499130249
    3. 'C' → logprob: -6.13324499130249
    4. '3' → logprob: -9.633245468139648
    5. ' ' → logprob: -10.883245468139648
    6. '-' → logprob: -11.383245468139648
    7. '26' → logprob: -12.133245468139648
    8. '5' → logprob: -12.258245468139648
    9. '31' → logprob: -12.258245468139648
    10. '6' → logprob: -12.508245468139648

Token 213: ' modulo' (ID: 112372)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002396463416516781
    2. ' =' → logprob: -6.877396583557129
    3. '[' → logprob: -7.127396583557129
    4. '=' → logprob: -8.752396583557129
    5. ' B' → logprob: -8.752396583557129
    6. '
' → logprob: -9.377396583557129
    7. ',' → logprob: -9.752396583557129
    8. '[B' → logprob: -10.627396583557129
    9. '#' → logprob: -11.127396583557129
    10. 'pow' → logprob: -11.252396583557129

Token 214: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03160853311419487
    2. '(M' → logprob: -4.031608581542969
    3. '[' → logprob: -5.156608581542969
    4. ' MOD' → logprob: -6.281608581542969
    5. 'N' → logprob: -6.906608581542969
    6. '(' → logprob: -7.281608581542969
    7. '2' → logprob: -7.281608581542969
    8. ' (' → logprob: -7.406608581542969
    9. '[M' → logprob: -7.406608581542969
    10. 'M' → logprob: -7.781608581542969

Token 215: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0496550090610981
    2. '[' → logprob: -3.424654960632324
    3. ' B' → logprob: -4.549654960632324
    4. ' =' → logprob: -5.549654960632324
    5. '(' → logprob: -7.674654960632324
    6. ' [' → logprob: -8.174654960632324
    7. '=' → logprob: -8.424654960632324
    8. ',' → logprob: -9.174654960632324
    9. 'b' → logprob: -9.674654960632324
    10. '=[' → logprob: -9.924654960632324

Token 216: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006489329971373081
    2. '[' → logprob: -7.3756489753723145
    3. ' B' → logprob: -11.000648498535156
    4. '[B' → logprob: -13.000648498535156
    5. '
' → logprob: -13.500648498535156
    6. ']' → logprob: -15.000648498535156
    7. '[]
' → logprob: -15.250648498535156
    8. '[
' → logprob: -15.250648498535156
    9. ' [' → logprob: -15.375648498535156
    10. '[i' → logprob: -15.625648498535156

Token 217: ' Cette' (ID: 27383)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00041243841405957937
    2. '[' → logprob: -8.375411987304688
    3. ' B' → logprob: -8.625411987304688
    4. '[B' → logprob: -14.250411987304688
    5. ' [' → logprob: -14.500411987304688
    6. '
' → logprob: -15.125411987304688
    7. 'pow' → logprob: -15.375411987304688
    8. 'b' → logprob: -16.250411987304688
    9. '#' → logprob: -16.375411987304688
    10. ']' → logprob: -16.500411987304688

Token 218: ' liste' (ID: 31719)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005090733524411917
    2. ' B' → logprob: -5.380090713500977
    3. '#' → logprob: -8.630090713500977
    4. 'n' → logprob: -8.880090713500977
    5. ' =' → logprob: -11.005090713500977
    6. 's' → logprob: -11.130090713500977
    7. ':' → logprob: -11.255090713500977
    8. '```' → logprob: -11.880090713500977
    9. 'a' → logprob: -11.942590713500977
    10. '
' → logprob: -11.942590713500977

Token 219: ' aura' (ID: 33008)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.435129851102829
    2. '=' → logprob: -1.0601298809051514
    3. 'B' → logprob: -5.060129642486572
    4. '=[' → logprob: -11.06013011932373
    5. '[' → logprob: -11.56013011932373
    6. ' B' → logprob: -11.56013011932373
    7. ' =[' → logprob: -11.81013011932373
    8. '=[]' → logprob: -11.93513011932373
    9. '=B' → logprob: -12.31013011932373
    10. 'b' → logprob: -12.81013011932373

Token 220: ' une' (ID: 2463)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07301515340805054
    2. ' N' → logprob: -2.9480152130126953
    3. ' une' → logprob: -4.448015213012695
    4. 'n' → logprob: -6.573015213012695
    5. 'len' → logprob: -6.698015213012695
    6. ' taille' → logprob: -7.073015213012695
    7. 'une' → logprob: -7.073015213012695
    8. 't' → logprob: -7.948015213012695
    9. '[N' → logprob: -8.448015213012695
    10. ' ' → logprob: -8.573015213012695

Token 221: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.06437935680150986
    2. ' taille' → logprob: -3.0643794536590576
    3. ' longueur' → logprob: -4.4393792152404785
    4. 'long' → logprob: -6.0643792152404785
    5. ' tail' → logprob: -7.9393792152404785
    6. 'N' → logprob: -8.314379692077637
    7. ' longue' → logprob: -8.689379692077637
    8. 't' → logprob: -9.189379692077637
    9. ' N' → logprob: -9.439379692077637
    10. ' ' → logprob: -9.689379692077637

Token 222: ' de' (ID: 334)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18334977328777313
    2. ' N' → logprob: -2.058349847793579
    3. '(N' → logprob: -4.058349609375
    4. ' =' → logprob: -4.308349609375
    5. '=' → logprob: -5.058349609375
    6. ' de' → logprob: -6.558349609375
    7. ' (' → logprob: -7.683349609375
    8. '=N' → logprob: -7.808349609375
    9. 'de' → logprob: -9.183349609375
    10. '(' → logprob: -9.308349609375

Token 223: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.029759405180811882
    2. ' N' → logprob: -3.529759407043457
    3. '(N' → logprob: -11.779759407043457
    4. 'n' → logprob: -14.654759407043457
    5. '[N' → logprob: -15.154759407043457
    6. ' (' → logprob: -15.279759407043457
    7. '	N' → logprob: -16.02975845336914
    8. '(' → logprob: -16.40475845336914
    9. ' ' → logprob: -17.02975845336914
    10. ' ' → logprob: -18.15475845336914

Token 224: '+' (ID: 10)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002252910751849413
    2. ' B' → logprob: -6.12725305557251
    3. ' =' → logprob: -10.627252578735352
    4. '
' → logprob: -10.627252578735352
    5. '[' → logprob: -11.877252578735352
    6. ',' → logprob: -12.377252578735352
    7. ']' → logprob: -12.627252578735352
    8. '=' → logprob: -13.752252578735352
    9. ':' → logprob: -14.252252578735352
    10. ' ' → logprob: -14.752252578735352

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '2' → logprob: -15.1250581741333
    4. '  ' → logprob: -18.500059127807617
    5. '```' → logprob: -18.875059127807617
    6. '<|end|>' → logprob: -19.000059127807617
    7. 'N' → logprob: -19.125059127807617
    8. '[' → logprob: -19.500059127807617
    9. '
' → logprob: -19.625059127807617
    10. '(' → logprob: -19.750059127807617

Token 226: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00015002528380136937
    2. '
' → logprob: -9.000149726867676
    3. ' B' → logprob: -10.625149726867676
    4. ' 
' → logprob: -15.000149726867676
    5. '

' → logprob: -15.125149726867676
    6. ',' → logprob: -15.125149726867676
    7. '#' → logprob: -15.250149726867676
    8. '
' → logprob: -15.250149726867676
    9. '  
' → logprob: -15.750149726867676
    10. '```' → logprob: -15.750149726867676

Token 227: ' suffisamment' (ID: 124434)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.020637651905417442
    2. ' B' → logprob: -3.8956377506256104
    3. '[' → logprob: -9.645637512207031
    4. ' ' → logprob: -11.020637512207031
    5. ' [' → logprob: -12.645637512207031
    6. '[]' → logprob: -12.895637512207031
    7. '0' → logprob: -13.770637512207031
    8. '```' → logprob: -13.895637512207031
    9. ' ' → logprob: -14.020637512207031
    10. '#' → logprob: -14.520637512207031

Token 228: ' grande' (ID: 10094)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.5092036724090576
    2. 'pour' → logprob: -1.6342036724090576
    3. ')' → logprob: -2.6342036724090576
    4. '=' → logprob: -3.1342036724090576
    5. '[' → logprob: -3.8842036724090576
    6. ']' → logprob: -4.134203910827637
    7. ' =' → logprob: -4.509203910827637
    8. ' B' → logprob: -5.009203910827637
    9. 'B' → logprob: -5.009203910827637
    10. '_' → logprob: -5.759203910827637

Token 229: ' pour' (ID: 1930)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01739870011806488
    2. '[' → logprob: -4.517398834228516
    3. ',' → logprob: -5.642398834228516
    4. ' B' → logprob: -6.017398834228516
    5. ' =' → logprob: -9.392398834228516
    6. '=' → logprob: -9.767398834228516
    7. ',
' → logprob: -10.017398834228516
    8. ' [' → logprob: -10.392398834228516
    9. '[
' → logprob: -10.767398834228516
    10. '[]' → logprob: -11.142398834228516

Token 230: ' conten' (ID: 23523)
  Prédit: ' couvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.8436926603317261
    2. ' stock' → logprob: -1.468692660331726
    3. 'range' → logprob: -2.2186927795410156
    4. ' range' → logprob: -2.8436927795410156
    5. ' conten' → logprob: -3.4686927795410156
    6. 'stock' → logprob: -3.8436927795410156
    7. 'cover' → logprob: -3.8436927795410156
    8. '0' → logprob: -3.9686927795410156
    9. ' accueillir' → logprob: -4.218692779541016
    10. ' pouvoir' → logprob: -4.343692779541016

Token 231: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.7203165292739868
    2. 'er' → logprob: -0.9703165292739868
    3. 't' → logprob: -2.0953164100646973
    4. 'eur' → logprob: -6.220316410064697
    5. 'tre' → logprob: -6.345316410064697
    6. 'ur' → logprob: -6.845316410064697
    7. 'r' → logprob: -6.845316410064697
    8. 'ter' → logprob: -6.845316410064697
    9. 'rer' → logprob: -7.095316410064697
    10. 'u' → logprob: -7.220316410064697

Token 232: ' de' (ID: 334)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.18856076896190643
    2. 'N' → logprob: -1.8135607242584229
    3. '0' → logprob: -5.688560962677002
    4. ' ' → logprob: -6.188560962677002
    5. ' B' → logprob: -6.938560962677002
    6. 'B' → logprob: -7.438560962677002
    7. ' les' → logprob: -7.938560962677002
    8. '2' → logprob: -8.188560485839844
    9. ')' → logprob: -8.563560485839844
    10. ' (' → logprob: -9.063560485839844

Token 233: ' B' (ID: 418)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.520476222038269
    2. 'N' → logprob: -1.020476222038269
    3. ' N' → logprob: -3.8954763412475586
    4. 'range' → logprob: -4.770476341247559
    5. 'nt' → logprob: -5.395476341247559
    6. '0' → logprob: -5.520476341247559
    7. '[N' → logprob: -6.645476341247559
    8. ' toutes' → logprob: -6.895476341247559
    9. '(N' → logprob: -7.395476341247559
    10. ' range' → logprob: -7.395476341247559

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16458049416542053
    2. ' =' → logprob: -2.5395805835723877
    3. '0' → logprob: -4.039580345153809
    4. '[i' → logprob: -4.289580345153809
    5. '=' → logprob: -4.539580345153809
    6. '[:' → logprob: -4.664580345153809
    7. '=[' → logprob: -4.789580345153809
    8. '[N' → logprob: -5.914580345153809
    9. ' [' → logprob: -6.289580345153809
    10. 's' → logprob: -6.289580345153809

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32719698548316956
    2. 'N' → logprob: -1.4521969556808472
    3. 'i' → logprob: -4.077197074890137
    4. ']' → logprob: -4.327197074890137
    5. ' ' → logprob: -4.827197074890137
    6. ' N' → logprob: -5.577197074890137
    7. ' i' → logprob: -6.577197074890137
    8. '[' → logprob: -7.702197074890137
    9. '
' → logprob: -7.952197074890137
    10. '1' → logprob: -9.077197074890137

Token 236: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01635727286338806
    2. ' ]' → logprob: -4.641357421875
    3. '+' → logprob: -5.516357421875
    4. ' +' → logprob: -7.641357421875
    5. ']=' → logprob: -8.141357421875
    6. '])' → logprob: -8.141357421875
    7. '],' → logprob: -8.391357421875
    8. ',' → logprob: -8.391357421875
    9. '(N' → logprob: -8.891357421875
    10. 'N' → logprob: -9.016357421875

Token 237: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8391322493553162
    2. ']' → logprob: -1.089132308959961
    3. ' =' → logprob: -2.214132308959961
    4. '=' → logprob: -2.589132308959961
    5. ' à' → logprob: -4.089132308959961
    6. ' ]' → logprob: -4.839132308959961
    7. ' ,' → logprob: -5.464132308959961
    8. ' ' → logprob: -5.839132308959961
    9. '(' → logprob: -6.464132308959961
    10. '0' → logprob: -6.464132308959961

Token 238: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6965793967247009
    2. ' B' → logprob: -0.6965793967247009
    3. 'N' → logprob: -5.946579456329346
    4. ' N' → logprob: -7.196579456329346
    5. ' ' → logprob: -10.571578979492188
    6. '[N' → logprob: -11.321578979492188
    7. 'C' → logprob: -11.946578979492188
    8. '[' → logprob: -12.321578979492188
    9. '2' → logprob: -12.821578979492188
    10. ' C' → logprob: -13.196578979492188

Token 239: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.03125089034438133
    2. '[' → logprob: -4.031250953674316
    3. 'N' → logprob: -4.531250953674316
    4. ' [' → logprob: -7.281250953674316
    5. ' N' → logprob: -7.406250953674316
    6. '+' → logprob: -7.906250953674316
    7. ']' → logprob: -8.156250953674316
    8. '[
' → logprob: -9.906250953674316
    9. '```' → logprob: -10.281250953674316
    10. ' ' → logprob: -10.531250953674316

Token 240: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0788058415055275
    2. '+' → logprob: -2.703805923461914
    3. '])' → logprob: -5.078805923461914
    4. ')' → logprob: -6.453805923461914
    5. ']
' → logprob: -8.078805923461914
    6. ' ]' → logprob: -8.328805923461914
    7. ' +' → logprob: -8.453805923461914
    8. '])
' → logprob: -9.828805923461914
    9. '#' → logprob: -10.453805923461914
    10. ']+' → logprob: -10.953805923461914

Token 241: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.5577775128767826e-06
    2. '
' → logprob: -12.750005722045898
    3. ' B' → logprob: -13.000005722045898
    4. '```' → logprob: -15.750005722045898
    5. '#' → logprob: -16.8750057220459
    6. '

' → logprob: -17.0000057220459
    7. ' 
' → logprob: -17.8750057220459
    8. '
' → logprob: -18.2500057220459
    9. '  
' → logprob: -18.2500057220459
    10. '`' → logprob: -18.8750057220459

Token 242: ' On' (ID: 2160)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.392202976712724e-06
    2. ' B' → logprob: -12.000006675720215
    3. '
' → logprob: -16.6250057220459
    4. '#' → logprob: -16.6250057220459
    5. '```' → logprob: -17.3750057220459
    6. '[' → logprob: -18.0000057220459
    7. 'b' → logprob: -18.1250057220459
    8. 'def' → logprob: -19.3750057220459
    9. '	B' → logprob: -19.3750057220459
    10. '

' → logprob: -19.7500057220459

Token 243: ' initialise' (ID: 145250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.74740070104599
    2. '.append' → logprob: -1.3724007606506348
    3. 'B' → logprob: -2.1224007606506348
    4. ' B' → logprob: -2.3724007606506348
    5. '=' → logprob: -3.8724007606506348
    6. ' initialize' → logprob: -4.247400760650635
    7. '.' → logprob: -5.497400760650635
    8. 'append' → logprob: -5.497400760650635
    9. '.extend' → logprob: -5.622400760650635
    10. ' append' → logprob: -6.122400760650635

Token 244: ' tous' (ID: 10688)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5233976244926453
    2. 'B' → logprob: -0.8983976244926453
    3. '[' → logprob: -8.898397445678711
    4. ' [' → logprob: -9.523397445678711
    5. ' ' → logprob: -10.023397445678711
    6. ' =' → logprob: -11.523397445678711
    7. '	B' → logprob: -13.023397445678711
    8. '[B' → logprob: -13.023397445678711
    9. '=[' → logprob: -13.523397445678711
    10. '   ' → logprob: -13.648397445678711

Token 245: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5938093662261963
    2. '(B' → logprob: -1.0938093662261963
    3. 'B' → logprob: -2.5938093662261963
    4. '([' → logprob: -4.218809127807617
    5. '(N' → logprob: -4.468809127807617
    6. '(len' → logprob: -4.843809127807617
    7. '[' → logprob: -6.468809127807617
    8. ' B' → logprob: -7.218809127807617
    9. '[B' → logprob: -7.718809127807617
    10. 'len' → logprob: -8.093809127807617

Token 246: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.23250696063041687
    2. 'B' → logprob: -1.7325069904327393
    3. 'elements' → logprob: -4.23250675201416
    4. ' éléments' → logprob: -4.85750675201416
    5. '0' → logprob: -5.73250675201416
    6. 'elem' → logprob: -6.60750675201416
    7. 'val' → logprob: -6.73250675201416
    8. 'é' → logprob: -6.85750675201416
    9. 'ele' → logprob: -7.73250675201416
    10. ' B' → logprob: -7.85750675201416

Token 247: ' de' (ID: 334)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.35855695605278015
    2. 'B' → logprob: -1.6085569858551025
    3. ' =' → logprob: -2.3585569858551025
    4. ' ' → logprob: -6.108556747436523
    5. '[' → logprob: -6.483556747436523
    6. '=' → logprob: -6.733556747436523
    7. ' de' → logprob: -7.858556747436523
    8. '=[' → logprob: -8.108556747436523
    9. ' à' → logprob: -8.108556747436523
    10. ' [' → logprob: -8.358556747436523

Token 248: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38739678263664246
    2. '[' → logprob: -1.2623968124389648
    3. ' B' → logprob: -3.887396812438965
    4. ' [' → logprob: -5.262396812438965
    5. '0' → logprob: -5.387396812438965
    6. '[N' → logprob: -5.512396812438965
    7. '[B' → logprob: -5.887396812438965
    8. 'range' → logprob: -8.012396812438965
    9. ' ' → logprob: -8.637396812438965
    10. ' range' → logprob: -8.887396812438965

Token 249: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0371304526925087
    2. '=' → logprob: -3.412130355834961
    3. '=[' → logprob: -6.162130355834961
    4. '[' → logprob: -6.787130355834961
    5. 'B' → logprob: -9.287130355834961
    6. ' [' → logprob: -9.662130355834961
    7. ' =[' → logprob: -9.912130355834961
    8. ']' → logprob: -11.787130355834961
    9. ' B' → logprob: -12.037130355834961
    10. ' ' → logprob: -12.412130355834961

Token 250: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20167586207389832
    2. '1' → logprob: -1.7016758918762207
    3. ' ' → logprob: -8.326675415039062
    4. '[' → logprob: -10.826675415039062
    5. 'zeros' → logprob: -15.326675415039062
    6. '-' → logprob: -15.576675415039062
    7. '```' → logprob: -16.201675415039062
    8. ' [' → logprob: -16.701675415039062
    9. ' zeros' → logprob: -17.201675415039062
    10. ' ' → logprob: -17.201675415039062

Token 251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38697347044944763
    2. '1' → logprob: -1.13697350025177
    3. '[' → logprob: -9.26197338104248
    4. ' ' → logprob: -12.26197338104248
    5. '-' → logprob: -14.13697338104248
    6. 'None' → logprob: -14.38697338104248
    7. 'zeros' → logprob: -14.38697338104248
    8. '```' → logprob: -15.63697338104248
    9. '(' → logprob: -16.199474334716797
    10. '[N' → logprob: -16.761974334716797

Token 252: ' en' (ID: 469)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1472419600977446e-06
    2. ' B' → logprob: -14.000000953674316
    3. '[' → logprob: -15.625000953674316
    4. '
' → logprob: -17.000001907348633
    5. '```' → logprob: -17.875001907348633
    6. ',' → logprob: -19.000001907348633
    7. '#' → logprob: -19.375001907348633
    8. ' =' → logprob: -19.750001907348633
    9. 'b' → logprob: -20.125001907348633
    10. '0' → logprob: -20.250001907348633

Token 253: ' utilisant' (ID: 92474)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0556647814810276
    2. '[N' → logprob: -3.1806647777557373
    3. ' [' → logprob: -4.805665016174316
    4. '[B' → logprob: -5.805665016174316
    5. '0' → logprob: -7.055665016174316
    6. '[n' → logprob: -8.305665016174316
    7. 'B' → logprob: -9.555665016174316
    8. '[i' → logprob: -10.680665016174316
    9. '[num' → logprob: -10.930665016174316
    10. ' ' → logprob: -11.180665016174316

Token 254: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25885140895843506
    2. '[N' → logprob: -1.508851408958435
    3. ' [' → logprob: -5.133851528167725
    4. '[B' → logprob: -7.508851528167725
    5. '0' → logprob: -8.008851051330566
    6. '[n' → logprob: -9.633851051330566
    7. 'B' → logprob: -10.633851051330566
    8. 'N' → logprob: -10.633851051330566
    9. '[M' → logprob: -13.383851051330566
    10. '```' → logprob: -13.383851051330566

Token 255: ' compréhension' (ID: 142333)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03809623047709465
    2. '[N' → logprob: -3.6630961894989014
    3. ' [' → logprob: -5.2880964279174805
    4. '[B' → logprob: -5.7880964279174805
    5. '[n' → logprob: -6.0380964279174805
    6. '=[' → logprob: -7.1630964279174805
    7. '0' → logprob: -9.66309642791748
    8. '[m' → logprob: -9.91309642791748
    9. 'range' → logprob: -10.16309642791748
    10. 'B' → logprob: -10.28809642791748

Token 256: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020509003661572933
    2. '[' → logprob: -8.750205039978027
    3. ' B' → logprob: -10.125205039978027
    4. '[B' → logprob: -12.625205039978027
    5. 'b' → logprob: -14.000205039978027
    6. '[N' → logprob: -14.375205039978027
    7. '0' → logprob: -15.125205039978027
    8. ']' → logprob: -15.125205039978027
    9. '=[' → logprob: -15.500205039978027
    10. '```' → logprob: -15.500205039978027

Token 257: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16586562991142273
    2. '0' → logprob: -2.790865659713745
    3. '[N' → logprob: -2.915865659713745
    4. '[B' → logprob: -4.040865421295166
    5. '[int' → logprob: -4.290865421295166
    6. 'B' → logprob: -5.915865421295166
    7. '[i' → logprob: -6.665865421295166
    8. '[n' → logprob: -7.540865421295166
    9. 'range' → logprob: -7.540865421295166
    10. 'N' → logprob: -8.415865898132324

Token 258: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00035727277281694114
    2. '[' → logprob: -8.125357627868652
    3. ' B' → logprob: -9.750357627868652
    4. '0' → logprob: -14.125357627868652
    5. '[B' → logprob: -14.250357627868652
    6. ' [' → logprob: -14.750357627868652
    7. '[N' → logprob: -15.500357627868652
    8. 'b' → logprob: -15.625357627868652
    9. ' =' → logprob: -15.750357627868652
    10. 'N' → logprob: -15.750357627868652

Token 259: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1756367712223437e-05
    2. ' B' → logprob: -11.625011444091797
    3. '[' → logprob: -12.875011444091797
    4. '```' → logprob: -16.000011444091797
    5. '[B' → logprob: -17.500011444091797
    6. '
' → logprob: -17.500011444091797
    7. 'b' → logprob: -18.000011444091797
    8. '#' → logprob: -18.750011444091797
    9. '0' → logprob: -19.000011444091797
    10. 'N' → logprob: -19.500011444091797

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270296424627304
    2. '=' → logprob: -2.1270296573638916
    3. '=[' → logprob: -9.377029418945312
    4. ' =[' → logprob: -11.252029418945312
    5. '[' → logprob: -13.252029418945312
    6. ' ' → logprob: -14.252029418945312
    7. '=[]' → logprob: -14.252029418945312
    8. '＝' → logprob: -15.502029418945312
    9. '=B' → logprob: -16.002029418945312
    10. ']' → logprob: -16.877029418945312

Token 261: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004306692280806601
    2. ' [' → logprob: -7.750430583953857
    3. '0' → logprob: -17.375431060791016
    4. ' ' → logprob: -19.375431060791016
    5. '([' → logprob: -19.750431060791016
    6. '[N' → logprob: -20.375431060791016
    7. '[int' → logprob: -21.125431060791016
    8. '   ' → logprob: -21.375431060791016
    9. '[n' → logprob: -21.500431060791016
    10. ' ' → logprob: -21.750431060791016

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -17.375001907348633
    4. '1' → logprob: -19.125001907348633
    5. '
' → logprob: -19.187501907348633
    6. '00' → logprob: -19.375001907348633
    7. '０' → logprob: -19.375001907348633
    8. ']' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.937501907348633
    10. '000' → logprob: -20.187501907348633

Token 263: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0917111411690712
    2. ' for' → logprob: -2.5917110443115234
    3. 'for' → logprob: -4.841711044311523
    4. ']*(' → logprob: -5.466711044311523
    5. ']*' → logprob: -7.841711044311523
    6. ' ]' → logprob: -9.091711044311523
    7. ']+' → logprob: -10.091711044311523
    8. ')' → logprob: -10.091711044311523
    9. ' ' → logprob: -11.591711044311523
    10. ',' → logprob: -12.591711044311523

Token 264: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07902726531028748
    2. ' _' → logprob: -2.5790271759033203
    3. ' i' → logprob: -9.20402717590332
    4. 'i' → logprob: -10.45402717590332
    5. '_i' → logprob: -12.20402717590332
    6. ' ' → logprob: -13.57902717590332
    7. '_range' → logprob: -15.07902717590332
    8. ' in' → logprob: -15.20402717590332
    9. ' range' → logprob: -15.32902717590332
    10. ' ' → logprob: -15.57902717590332

Token 265: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48878857493400574
    2. 'range' → logprob: -0.9887886047363281
    3. ' in' → logprob: -4.363788604736328
    4. ' range' → logprob: -6.363788604736328
    5. '_' → logprob: -9.738788604736328
    6. 'ange' → logprob: -9.738788604736328
    7. ' ' → logprob: -11.113788604736328
    8. 'i' → logprob: -11.738788604736328
    9. '(range' → logprob: -12.738788604736328
    10. 'n' → logprob: -13.113788604736328

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -16.750709533691406
    4. 'rang' → logprob: -17.000709533691406
    5. '	range' → logprob: -17.250709533691406
    6. '_' → logprob: -17.375709533691406
    7. ' ' → logprob: -18.125709533691406
    8. '  ' → logprob: -18.250709533691406
    9. 'r' → logprob: -18.250709533691406
    10. '```' → logprob: -18.500709533691406

Token 267: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -10.500029563903809
    3. 'N' → logprob: -13.250029563903809
    4. '(n' → logprob: -15.000029563903809
    5. ' (' → logprob: -15.750029563903809
    6. '((' → logprob: -16.125030517578125
    7. '(
' → logprob: -17.625030517578125
    8. '	N' → logprob: -18.875030517578125
    9. '
' → logprob: -19.875030517578125
    10. ']' → logprob: -20.125030517578125

Token 268: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002479104558005929
    2. ' +' → logprob: -6.002479076385498
    3. ')]' → logprob: -12.627479553222656
    4. ')' → logprob: -16.377479553222656
    5. '+
' → logprob: -16.877479553222656
    6. '+B' → logprob: -18.252479553222656
    7. '＋' → logprob: -19.752479553222656
    8. '+)' → logprob: -20.127479553222656
    9. '()+' → logprob: -20.502479553222656
    10. '+n' → logprob: -20.502479553222656

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001434690784662962
    2. ' ' → logprob: -8.875143051147461
    3. '+' → logprob: -14.000143051147461
    4. '2' → logprob: -14.250143051147461
    5. ')' → logprob: -14.625143051147461
    6. '(' → logprob: -14.875143051147461
    7. '   ' → logprob: -15.250143051147461
    8. '0' → logprob: -15.437643051147461
    9. '```' → logprob: -15.625143051147461
    10. 'N' → logprob: -15.750143051147461

Token 270: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005242771934717894
    2. ']' → logprob: -5.255242824554443
    3. ')' → logprob: -12.255242347717285
    4. ' ]' → logprob: -12.630242347717285
    5. ')],' → logprob: -15.630242347717285
    6. '])' → logprob: -15.880242347717285
    7. ')]
' → logprob: -16.2552433013916
    8. '}]' → logprob: -16.2552433013916
    9. '>]' → logprob: -16.3802433013916
    10. '')]' → logprob: -16.6302433013916

Token 271: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007124318508431315
    2. '#' → logprob: -7.6257123947143555
    3. ']' → logprob: -9.000712394714355
    4. ')' → logprob: -10.000712394714355
    5. ' B' → logprob: -10.500712394714355
    6. '
' → logprob: -12.000712394714355
    7. ')
' → logprob: -12.250712394714355
    8. '<|end|>' → logprob: -12.750712394714355
    9. ']
' → logprob: -12.875712394714355
    10. '  
' → logprob: -13.000712394714355

Token 272: ' La' (ID: 3038)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.2723104848410003e-05
    2. '#' → logprob: -10.750022888183594
    3. ' B' → logprob: -13.625022888183594
    4. 'b' → logprob: -19.000022888183594
    5. '
' → logprob: -19.750022888183594
    6. '

' → logprob: -20.500022888183594
    7. '```' → logprob: -20.500022888183594
    8. '	B' → logprob: -20.875022888183594
    9. ' ' → logprob: -21.375022888183594
    10. ' ' → logprob: -21.500022888183594

Token 273: ' première' (ID: 23423)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006229649879969656
    2. ' B' → logprob: -7.500622749328613
    3. 'b' → logprob: -10.375622749328613
    4. ' ' → logprob: -11.000622749328613
    5. '[' → logprob: -12.500622749328613
    6. '#' → logprob: -12.750622749328613
    7. '0' → logprob: -12.750622749328613
    8. 's' → logprob: -13.000622749328613
    9. ' =' → logprob: -13.125622749328613
    10. ' première' → logprob: -13.375622749328613

Token 274: ' puissance' (ID: 63494)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24018800258636475
    2. ' =' → logprob: -1.9901880025863647
    3. 'B' → logprob: -2.8651881217956543
    4. ' B' → logprob: -5.240188121795654
    5. '=B' → logprob: -5.740188121795654
    6. 'élé' → logprob: -6.240188121795654
    7. '[' → logprob: -6.365188121795654
    8. ']' → logprob: -6.365188121795654
    9. ' valeur' → logprob: -6.615188121795654
    10. ' élément' → logprob: -7.365188121795654

Token 275: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.9609878659248352
    2. ' de' → logprob: -1.3359878063201904
    3. ' =' → logprob: -1.9609878063201904
    4. 'de' → logprob: -2.2109878063201904
    5. '=' → logprob: -2.4609878063201904
    6. '2' → logprob: -5.0859880447387695
    7. ' B' → logprob: -5.0859880447387695
    8. '[' → logprob: -5.5859880447387695
    9. ' ' → logprob: -7.2109880447387695
    10. 'd' → logprob: -7.5859880447387695

Token 276: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007051144260913134
    2. ' ' → logprob: -5.25705099105835
    3. 'de' → logprob: -7.00705099105835
    4. 'B' → logprob: -7.75705099105835
    5. ' deux' → logprob: -8.007051467895508
    6. ' B' → logprob: -9.757051467895508
    7. 'b' → logprob: -10.007051467895508
    8. 'two' → logprob: -10.507051467895508
    9. ' two' → logprob: -11.257051467895508
    10. 'Deux' → logprob: -13.507051467895508

Token 277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020369965583086014
    2. 'de' → logprob: -4.020370006561279
    3. 'B' → logprob: -6.145370006561279
    4. 'two' → logprob: -10.020369529724121
    5. ' deux' → logprob: -11.645369529724121
    6. 'b' → logprob: -11.895369529724121
    7. 'Deux' → logprob: -12.520369529724121
    8. ' ' → logprob: -12.520369529724121
    9. '`' → logprob: -13.645369529724121
    10. '#' → logprob: -13.770369529724121

Token 278: ' (' (ID: 350)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6605350375175476
    2. ' =' → logprob: -1.4105350971221924
    3. '=' → logprob: -1.7855350971221924
    4. '[' → logprob: -3.4105350971221924
    5. ' B' → logprob: -4.035534858703613
    6. ']' → logprob: -4.160534858703613
    7. ']=' → logprob: -6.285534858703613
    8. ',' → logprob: -7.160534858703613
    9. '=B' → logprob: -7.285534858703613
    10. '2' → logprob: -7.410534858703613

Token 279: '2' (ID: 17)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06921575963497162
    2. ' B' → logprob: -3.194215774536133
    3. ')' → logprob: -4.194215774536133
    4. '2' → logprob: -5.444215774536133
    5. '0' → logprob: -6.194215774536133
    6. ' ' → logprob: -6.694215774536133
    7. ' =' → logprob: -6.944215774536133
    8. '=' → logprob: -7.319215774536133
    9. ']' → logprob: -7.569215774536133
    10. ' )' → logprob: -8.444215774536133

Token 280: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08933125436306
    2. ']' → logprob: -2.8393311500549316
    3. '^' → logprob: -4.714331150054932
    4. ' **' → logprob: -4.964331150054932
    5. ')' → logprob: -5.589331150054932
    6. '[' → logprob: -5.714331150054932
    7. '0' → logprob: -6.339331150054932
    8. 'B' → logprob: -6.589331150054932
    9. '])' → logprob: -8.83933162689209
    10. ' B' → logprob: -8.83933162689209

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. ')' → logprob: -17.00010871887207
    4. '[' → logprob: -17.50010871887207
    5. ' ' → logprob: -18.62510871887207
    6. '#' → logprob: -19.50010871887207
    7. '```' → logprob: -19.50010871887207
    8. '=' → logprob: -19.62510871887207
    9. 'B' → logprob: -19.87510871887207
    10. '`' → logprob: -20.12510871887207

Token 282: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002593015553429723
    2. ')' → logprob: -6.627593040466309
    3. ' ]' → logprob: -7.377593040466309
    4. '])' → logprob: -7.752593040466309
    5. ']=' → logprob: -8.752593040466309
    6. ')]' → logprob: -10.377593040466309
    7. ' )' → logprob: -11.127593040466309
    8. 'B' → logprob: -13.002593040466309
    9. ' ])' → logprob: -13.127593040466309
    10. '=' → logprob: -14.252593040466309

Token 283: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2747683525085449
    2. '=' → logprob: -1.649768352508545
    3. 'B' → logprob: -3.149768352508545
    4. ' B' → logprob: -6.274768352508545
    5. '[' → logprob: -6.774768352508545
    6. '=B' → logprob: -7.274768352508545
    7. ' est' → logprob: -7.649768352508545
    8. ']' → logprob: -7.774768352508545
    9. ',' → logprob: -8.399768829345703
    10. ' ' → logprob: -8.899768829345703

Token 284: ' toujours' (ID: 16867)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03382942080497742
    2. ' ' → logprob: -3.4088294506073
    3. ' ég' → logprob: -9.283829689025879
    4. ' égal' → logprob: -10.283829689025879
    5. ' =' → logprob: -10.908829689025879
    6. '=' → logprob: -11.033829689025879
    7. ' equal' → logprob: -12.033829689025879
    8. 'equal' → logprob: -12.158829689025879
    9. 'B' → logprob: -12.658829689025879
    10. ' B' → logprob: -12.783829689025879

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007924818433821201
    2. ' ' → logprob: -4.882925033569336
    3. ' ég' → logprob: -8.632925033569336
    4. ' égal' → logprob: -9.257925033569336
    5. 'equal' → logprob: -10.757925033569336
    6. ' equal' → logprob: -11.632925033569336
    7. '=' → logprob: -12.007925033569336
    8. ' =' → logprob: -12.632925033569336
    9. 'égal' → logprob: -13.007925033569336
    10. 'B' → logprob: -14.007925033569336

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -10.250096321105957
    3. '=' → logprob: -10.500096321105957
    4. 'equal' → logprob: -11.375096321105957
    5. ' égal' → logprob: -11.500096321105957
    6. ' ég' → logprob: -12.375096321105957
    7. 'égal' → logprob: -13.000096321105957
    8. '```' → logprob: -13.375096321105957
    9. ' =' → logprob: -13.875096321105957
    10. 'egal' → logprob: -14.375096321105957

Token 287: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.776898251497187e-05
    2. '
' → logprob: -10.1250581741333
    3. ' B' → logprob: -11.2500581741333
    4. ']' → logprob: -13.2500581741333
    5. ']
' → logprob: -13.8750581741333
    6. ' =' → logprob: -14.1250581741333
    7. ')
' → logprob: -15.6250581741333
    8. ',' → logprob: -15.6250581741333
    9. '=' → logprob: -15.6250581741333
    10. '

' → logprob: -16.250057220458984

Token 288: ' donc' (ID: 14206)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.000488110730657354
    2. ' B' → logprob: -7.62548828125
    3. ' ' → logprob: -18.12548828125
    4. ',' → logprob: -18.25048828125
    5. '#' → logprob: -18.37548828125
    6. 'b' → logprob: -18.50048828125
    7. ']' → logprob: -18.87548828125
    8. ')' → logprob: -19.12548828125
    9. ' 
' → logprob: -19.12548828125
    10. '=B' → logprob: -19.12548828125

Token 289: ' on' (ID: 402)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.0126840758603066e-05
    2. ' B' → logprob: -10.125040054321289
    3. '	B' → logprob: -19.75004005432129
    4. ' ' → logprob: -20.12504005432129
    5. ' ' → logprob: -20.62504005432129
    6. '```' → logprob: -20.87504005432129
    7. 'b' → logprob: -21.25004005432129
    8. '_B' → logprob: -21.62504005432129
    9. '#' → logprob: -22.12504005432129
    10. '`' → logprob: -22.50004005432129

Token 290: ' initialise' (ID: 145250)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.022824222221970558
    2. 'rem' → logprob: -4.022824287414551
    3. 'met' → logprob: -5.647824287414551
    4. ' B' → logprob: -7.147824287414551
    5. 'aff' → logprob: -9.39782428741455
    6. ' met' → logprob: -9.64782428741455
    7. 'set' → logprob: -10.02282428741455
    8. ' rem' → logprob: -10.14782428741455
    9. 'b' → logprob: -10.77282428741455
    10. 'assign' → logprob: -11.02282428741455

Token 291: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003805064770858735
    2. ' B' → logprob: -7.875380516052246
    3. ']' → logprob: -16.12537956237793
    4. ')' → logprob: -16.37537956237793
    5. '1' → logprob: -17.12537956237793
    6. '0' → logprob: -17.37537956237793
    7. ' ' → logprob: -17.50037956237793
    8. '`' → logprob: -17.75037956237793
    9. ',' → logprob: -18.00037956237793
    10. ' =' → logprob: -18.00037956237793

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.87500286102295
    3. ' [' → logprob: -14.00000286102295
    4. 'B' → logprob: -14.37500286102295
    5. '=' → logprob: -15.25000286102295
    6. ' =' → logprob: -15.37500286102295
    7. '```' → logprob: -17.250003814697266
    8. '
' → logprob: -17.375003814697266
    9. '[
' → logprob: -17.625003814697266
    10. ']' → logprob: -17.625003814697266

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.375018119812012
    3. ' ' → logprob: -12.250018119812012
    4. ']' → logprob: -13.125018119812012
    5. '][' → logprob: -17.250019073486328
    6. '```' → logprob: -18.000019073486328
    7. '00' → logprob: -19.000019073486328
    8. ']=' → logprob: -19.125019073486328
    9. ')' → logprob: -19.625019073486328
    10. '1' → logprob: -20.125019073486328

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017652629176154733
    2. ']=' → logprob: -6.501765251159668
    3. ' ]' → logprob: -8.251765251159668
    4. '=' → logprob: -13.501765251159668
    5. ')' → logprob: -15.251765251159668
    6. '[' → logprob: -16.376766204833984
    7. ' ' → logprob: -17.126766204833984
    8. ' ' → logprob: -17.251766204833984
    9. ' =' → logprob: -17.501766204833984
    10. ']=(' → logprob: -17.626766204833984

Token 295: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04936208203434944
    2. ' =' → logprob: -3.0493621826171875
    3. '[' → logprob: -7.2993621826171875
    4. ']' → logprob: -9.549362182617188
    5. ']=' → logprob: -11.299362182617188
    6. 'B' → logprob: -11.674362182617188
    7. '=B' → logprob: -12.299362182617188
    8. '=[' → logprob: -13.924362182617188
    9. ' B' → logprob: -16.299362182617188
    10. ')' → logprob: -16.424362182617188

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.75000762939453
    4. ' ' → logprob: -21.50000762939453
    5. '`' → logprob: -21.50000762939453
    6. '۱' → logprob: -22.62500762939453
    7. '=' → logprob: -22.75000762939453
    8. '   ' → logprob: -22.75000762939453
    9. '１' → logprob: -22.87500762939453
    10. '  ' → logprob: -23.12500762939453

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -20.25
    4. '１' → logprob: -21.625
    5. '۱' → logprob: -21.875
    6. '0' → logprob: -22.875
    7. '=' → logprob: -23.0
    8. '   ' → logprob: -23.0
    9. ' ' → logprob: -23.375
    10. '`' → logprob: -23.375

Token 298: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.537868779967539e-06
    2. ']' → logprob: -12.500008583068848
    3. '
' → logprob: -13.250008583068848
    4. ' B' → logprob: -13.250008583068848
    5. ']
' → logprob: -14.875008583068848
    6. ')
' → logprob: -15.125008583068848
    7. ')' → logprob: -15.500008583068848
    8. '[' → logprob: -16.12500762939453
    9. '```' → logprob: -16.50000762939453
    10. '#' → logprob: -16.75000762939453

Token 299: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.320199877838604e-07
    2. ' B' → logprob: -15.0
    3. '#' → logprob: -19.125
    4. ']' → logprob: -19.75
    5. '```' → logprob: -19.75
    6. '0' → logprob: -20.375
    7. ')' → logprob: -20.5
    8. '[' → logprob: -20.625
    9. '2' → logprob: -21.0
    10. '1' → logprob: -21.25

Token 300: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.125001907348633
    3. '=' → logprob: -16.625001907348633
    4. '\[' → logprob: -16.625001907348633
    5. '=[' → logprob: -17.500001907348633
    6. ' =' → logprob: -18.125001907348633
    7. '[B' → logprob: -18.500001907348633
    8. 'B' → logprob: -18.750001907348633
    9. '```' → logprob: -19.250001907348633
    10. '][' → logprob: -19.375001907348633

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '۰' → logprob: -22.125
    4. '０' → logprob: -23.375
    5. '00' → logprob: -24.125
    6. '000' → logprob: -24.25
    7. '[' → logprob: -24.625
    8. ')' → logprob: -24.875
    9. '০' → logprob: -25.0
    10. '```' → logprob: -25.375

Token 302: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.236549335066229e-05
    2. ']=' → logprob: -11.250021934509277
    3. ' ]' → logprob: -11.625021934509277
    4. '=' → logprob: -15.000021934509277
    5. ')' → logprob: -18.000022888183594
    6. '[' → logprob: -18.625022888183594
    7. ']
' → logprob: -19.125022888183594
    8. ']

' → logprob: -19.125022888183594
    9. '']' → logprob: -19.500022888183594
    10. '`]' → logprob: -19.750022888183594

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061969030648469925
    2. ' =' → logprob: -2.811969041824341
    3. ' ' → logprob: -14.686968803405762
    4. ']' → logprob: -15.061968803405762
    5. '=

' → logprob: -15.686968803405762
    6. ')' → logprob: -16.686969757080078
    7. ']=' → logprob: -16.686969757080078
    8. '<|end|>' → logprob: -17.061969757080078
    9. '=
' → logprob: -17.186969757080078
    10. ' =
' → logprob: -17.186969757080078

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.37500762939453
    4. '۱' → logprob: -19.56250762939453
    5. '   ' → logprob: -20.00000762939453
    6. '  ' → logprob: -20.56250762939453
    7. '１' → logprob: -20.56250762939453
    8. '' → logprob: -20.68750762939453
    9. '0' → logprob: -20.87500762939453
    10. '`' → logprob: -20.93750762939453

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -21.125
    4. '' → logprob: -22.75
    5. '   ' → logprob: -22.875
    6. '۱' → logprob: -22.875
    7. '0' → logprob: -23.3125
    8. '１' → logprob: -23.5
    9. '`' → logprob: -23.6875
    10. '  ' → logprob: -24.25

Token 306: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041958026587963104
    2. '
' → logprob: -3.6669580936431885
    3. ' for' → logprob: -4.166957855224609
    4. '
' → logprob: -11.29195785522461
    5. '

' → logprob: -12.04195785522461
    6. '\n' → logprob: -12.16695785522461
    7. ' 
' → logprob: -12.41695785522461
    8. '#' → logprob: -13.29195785522461
    9. '' → logprob: -13.41695785522461
    10. '  
' → logprob: -13.54195785522461

Token 307: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.625
    3. 'i' → logprob: -18.625
    4. '```' → logprob: -21.875
    5. '	for' → logprob: -22.75
    6. '
' → logprob: -22.875
    7. 'fo' → logprob: -23.25
    8. '#' → logprob: -24.125
    9. 'f' → logprob: -24.125
    10. 'For' → logprob: -24.25

Token 308: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.625000953674316
    3. ' for' → logprob: -16.375
    4. 'fo' → logprob: -20.375
    5. '	for' → logprob: -20.75
    6. 'f' → logprob: -22.0
    7. 'pour' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. 'For' → logprob: -22.25
    10. '#' → logprob: -23.0

Token 309: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08613318204879761
    2. ' for' → logprob: -2.5861332416534424
    3. 'or' → logprob: -5.086133003234863
    4. '_' → logprob: -8.211133003234863
    5. '#' → logprob: -8.336133003234863
    6. ' ' → logprob: -9.711133003234863
    7. 'range' → logprob: -9.711133003234863
    8. 'n' → logprob: -10.211133003234863
    9. 'r' → logprob: -10.211133003234863
    10. ' ' → logprob: -10.461133003234863

Token 310: ' calc' (ID: 25691)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931592226028442
    2. 'for' → logprob: -0.6931592226028442
    3. ' in' → logprob: -12.943159103393555
    4. ' range' → logprob: -13.068159103393555
    5. '_for' → logprob: -13.068159103393555
    6. ':' → logprob: -13.193159103393555
    7. 'range' → logprob: -13.818159103393555
    8. ' pour' → logprob: -14.193159103393555
    9. 'pour' → logprob: -14.193159103393555
    10. 'in' → logprob: -14.693159103393555

Token 311: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0030215606093406677
    2. 'ul' → logprob: -5.878021717071533
    3. 'cule' → logprob: -9.003021240234375
    4. 'ulate' → logprob: -10.003021240234375
    5. 'ulte' → logprob: -10.378021240234375
    6. 'ue' → logprob: -12.128021240234375
    7. 'u' → logprob: -12.253021240234375
    8. '#' → logprob: -13.628021240234375
    9. 'ulé' → logprob: -14.003021240234375
    10. 'e' → logprob: -14.003021240234375

Token 312: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19181476533412933
    2. 'i' → logprob: -1.8168147802352905
    3. ' for' → logprob: -4.81681489944458
    4. 'for' → logprob: -5.81681489944458
    5. '_' → logprob: -8.066814422607422
    6. ' ' → logprob: -8.066814422607422
    7. ' range' → logprob: -9.816814422607422
    8. ' _' → logprob: -10.066814422607422
    9. ' la' → logprob: -10.316814422607422
    10. ' ' → logprob: -10.691814422607422

Token 313: ' puiss' (ID: 102546)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.006569960620254278
    2. ' puiss' → logprob: -5.881569862365723
    3. 'val' → logprob: -6.131569862365723
    4. 'powers' → logprob: -7.131569862365723
    5. 'i' → logprob: -8.506569862365723
    6. 'B' → logprob: -9.006569862365723
    7. 'p' → logprob: -9.381569862365723
    8. 'pow' → logprob: -9.506569862365723
    9. 'pot' → logprob: -9.631569862365723
    10. 'pour' → logprob: -9.881569862365723

Token 314: 'ances' (ID: 3528)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.4965113401412964
    2. 'ences' → logprob: -1.6215113401412964
    3. 'ais' → logprob: -2.371511459350586
    4. 'ances' → logprob: -2.496511459350586
    5. 'ides' → logprob: -2.496511459350586
    6. 'isions' → logprob: -2.996511459350586
    7. 'o' → logprob: -3.246511459350586
    8. 'i' → logprob: -3.246511459350586
    9. 'ises' → logprob: -3.621511459350586
    10. 'oi' → logprob: -3.746511459350586

Token 315: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.81556636095047
    2. 'for' → logprob: -1.1905663013458252
    3. ' i' → logprob: -2.190566301345825
    4. 'de' → logprob: -2.690566301345825
    5. 'i' → logprob: -3.440566301345825
    6. ' for' → logprob: -3.440566301345825
    7. '[i' → logprob: -5.940566539764404
    8. ' of' → logprob: -6.190566539764404
    9. '_' → logprob: -6.815566539764404
    10. '2' → logprob: -6.940566539764404

Token 316: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001894960179924965
    2. ' ' → logprob: -6.376894950866699
    3. 'i' → logprob: -9.2518949508667
    4. ' deux' → logprob: -9.6268949508667
    5. 'de' → logprob: -11.0018949508667
    6. ' i' → logprob: -11.6268949508667
    7. ' two' → logprob: -12.6268949508667
    8. 'two' → logprob: -14.2518949508667
    9. 'Deux' → logprob: -14.7518949508667
    10. '```' → logprob: -15.6268949508667

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00041220002458430827
    2. 'de' → logprob: -7.8754119873046875
    3. ' ' → logprob: -10.500411987304688
    4. ' deux' → logprob: -13.750411987304688
    5. 'two' → logprob: -13.750411987304688
    6. 'i' → logprob: -14.000411987304688
    7. 'Deux' → logprob: -14.625411987304688
    8. '   ' → logprob: -15.625411987304688
    9. '```' → logprob: -15.625411987304688
    10. 'range' → logprob: -15.750411987304688

Token 318: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5143532156944275
    2. 'i' → logprob: -1.6393532752990723
    3. ' i' → logprob: -2.6393532752990723
    4. 'pour' → logprob: -2.6393532752990723
    5. ' for' → logprob: -3.0143532752990723
    6. ' pour' → logprob: -4.514353275299072
    7. '[i' → logprob: -6.639353275299072
    8. ',' → logprob: -7.014353275299072
    9. '(' → logprob: -7.389353275299072
    10. '[' → logprob: -8.139352798461914

Token 319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13356763124465942
    2. 'i' → logprob: -2.1335675716400146
    3. ' i' → logprob: -5.258567810058594
    4. ' ' → logprob: -7.008567810058594
    5. 'range' → logprob: -8.133567810058594
    6. ' range' → logprob: -8.508567810058594
    7. '2' → logprob: -12.758567810058594
    8. 'l' → logprob: -13.008567810058594
    9. '```' → logprob: -13.383567810058594
    10. '0' → logprob: -13.883567810058594

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00204962445423007
    2. 'i' → logprob: -6.377049446105957
    3. ' ' → logprob: -8.502049446105957
    4. 'range' → logprob: -9.752049446105957
    5. '0' → logprob: -10.002049446105957
    6. '2' → logprob: -10.377049446105957
    7. ' i' → logprob: -12.002049446105957
    8. ' range' → logprob: -13.877049446105957
    9. 'l' → logprob: -14.877049446105957
    10. 'la' → logprob: -15.002049446105957

Token 321: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2030428647994995
    2. ' ' → logprob: -1.8280428647994995
    3. 'à' → logprob: -4.203042984008789
    4. ' i' → logprob: -5.953042984008789
    5. ' range' → logprob: -6.203042984008789
    6. ' jusqu' → logprob: -6.953042984008789
    7. ' a' → logprob: -7.078042984008789
    8. ',' → logprob: -7.578042984008789
    9. ' through' → logprob: -8.203042984008789
    10. 'range' → logprob: -8.203042984008789

Token 322: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.029799090698361397
    2. ' N' → logprob: -3.529798984527588
    3. ' range' → logprob: -10.029799461364746
    4. 'range' → logprob: -13.279799461364746
    5. ' ' → logprob: -13.529799461364746
    6. '1' → logprob: -14.029799461364746
    7. '	N' → logprob: -15.029799461364746
    8. 'i' → logprob: -16.02979850769043
    9. 'n' → logprob: -16.40479850769043
    10. ',N' → logprob: -17.02979850769043

Token 323: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005547016044147313
    2. ' for' → logprob: -7.50055456161499
    3. 'i' → logprob: -14.250555038452148
    4. '
' → logprob: -14.250555038452148
    5. ':' → logprob: -15.125555038452148
    6. 'pour' → logprob: -16.62555503845215
    7. '```' → logprob: -17.00055503845215
    8. 'range' → logprob: -17.37555503845215
    9. '	for' → logprob: -18.12555503845215
    10. '
' → logprob: -18.87555503845215

Token 324: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015084355836734176
    2. ' for' → logprob: -6.5015082359313965
    3. '
' → logprob: -12.626508712768555
    4. ':' → logprob: -13.001508712768555
    5. 'range' → logprob: -15.251508712768555
    6. 'i' → logprob: -15.876508712768555
    7. '```' → logprob: -16.251508712768555
    8. ':
' → logprob: -16.751508712768555
    9. 'pour' → logprob: -17.876508712768555
    10. ' 
' → logprob: -18.001508712768555

Token 325: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006737153977155685
    2. ' for' → logprob: -5.006737232208252
    3. '
' → logprob: -11.006736755371094
    4. 'i' → logprob: -12.881736755371094
    5. ' 
' → logprob: -13.631736755371094
    6. 'range' → logprob: -13.756736755371094
    7. '```' → logprob: -15.631736755371094
    8. '1' → logprob: -16.131736755371094
    9. '   ' → logprob: -16.881736755371094
    10. '	for' → logprob: -17.256736755371094

Token 326: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8670179997570813e-05
    2. ' for' → logprob: -11.125019073486328
    3. 'i' → logprob: -12.500019073486328
    4. 'range' → logprob: -17.125019073486328
    5. '
' → logprob: -17.375019073486328
    6. '```' → logprob: -18.125019073486328
    7. 'f' → logprob: -20.375019073486328
    8. 'fo' → logprob: -20.375019073486328
    9. '   ' → logprob: -20.625019073486328
    10. '	for' → logprob: -20.875019073486328

Token 327: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08895386755466461
    2. ' i' → logprob: -2.463953971862793
    3. '_' → logprob: -11.588953971862793
    4. '_i' → logprob: -12.588953971862793
    5. '	i' → logprob: -14.463953971862793
    6. ' _' → logprob: -15.338953971862793
    7. 'k' → logprob: -15.838953971862793
    8. 'I' → logprob: -15.838953971862793
    9. ' ' → logprob: -15.963953971862793
    10. '(i' → logprob: -16.463953018188477

Token 328: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17975078523159027
    2. ' i' → logprob: -1.8047508001327515
    3. '	i' → logprob: -13.054750442504883
    4. ' ' → logprob: -13.679750442504883
    5. ' ' → logprob: -13.804750442504883
    6. 'I' → logprob: -14.054750442504883
    7. '_i' → logprob: -14.679750442504883
    8. 'k' → logprob: -15.804750442504883
    9. ' I' → logprob: -15.929750442504883
    10. 'x' → logprob: -16.429750442504883

Token 329: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07030607014894485
    2. 'in' → logprob: -2.6953060626983643
    3. ' ' → logprob: -8.195305824279785
    4. 'i' → logprob: -10.820305824279785
    5. ',' → logprob: -10.945305824279785
    6. ' i' → logprob: -11.195305824279785
    7. '_' → logprob: -11.945305824279785
    8. ' ' → logprob: -11.945305824279785
    9. 'en' → logprob: -12.195305824279785
    10. '1' → logprob: -12.695305824279785

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47504159808158875
    2. ' range' → logprob: -1.2250416278839111
    3. ' ' → logprob: -2.600041627883911
    4. 'range' → logprob: -4.600041389465332
    5. ' in' → logprob: -10.100041389465332
    6. ' i' → logprob: -11.475041389465332
    7. '0' → logprob: -11.725041389465332
    8. '2' → logprob: -12.350041389465332
    9. 'i' → logprob: -13.100041389465332
    10. ' ' → logprob: -13.600041389465332

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03391781076788902
    2. 'range' → logprob: -3.7839179039001465
    3. ' range' → logprob: -4.6589179039001465
    4. ' ' → logprob: -6.7839179039001465
    5. '0' → logprob: -13.408917427062988
    6. '   ' → logprob: -13.908917427062988
    7. 'i' → logprob: -13.908917427062988
    8. '
' → logprob: -14.408917427062988
    9. ' in' → logprob: -14.596417427062988
    10. '(range' → logprob: -15.096417427062988

Token 332: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0660711526870728
    2. ' à' → logprob: -1.4410711526870728
    3. 'range' → logprob: -2.191071033477783
    4. ' to' → logprob: -2.316071033477783
    5. 'to' → logprob: -2.441071033477783
    6. ' range' → logprob: -2.566071033477783
    7. 'in' → logprob: -4.316071033477783
    8. ' ' → logprob: -4.691071033477783
    9. ',' → logprob: -5.066071033477783
    10. 'à' → logprob: -6.191071033477783

Token 333: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06995388120412827
    2. ' N' → logprob: -2.6949539184570312
    3. ' range' → logprob: -11.694953918457031
    4. 'i' → logprob: -12.819953918457031
    5. ' ' → logprob: -13.069953918457031
    6. 'range' → logprob: -13.694953918457031
    7. ' i' → logprob: -14.069953918457031
    8. '1' → logprob: -14.569953918457031
    9. '```' → logprob: -14.694953918457031
    10. 'n' → logprob: -14.944953918457031

Token 334: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001623291289433837
    2. ' :' → logprob: -6.876623153686523
    3. ' in' → logprob: -8.626623153686523
    4. 'in' → logprob: -8.876623153686523
    5. 'range' → logprob: -9.126623153686523
    6. ':
' → logprob: -9.501623153686523
    7. ',' → logprob: -10.126623153686523
    8. ' range' → logprob: -11.251623153686523
    9. '):' → logprob: -11.376623153686523
    10. '+' → logprob: -11.751623153686523

Token 335: ' on' (ID: 402)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.7656913995742798
    2. '   ' → logprob: -1.1406913995742798
    3. 'B' → logprob: -1.8906913995742798
    4. ' i' → logprob: -3.8906912803649902
    5. ' for' → logprob: -4.39069128036499
    6. '    ' → logprob: -4.51569128036499
    7. ' ' → logprob: -5.01569128036499
    8. ':' → logprob: -5.39069128036499
    9. ' :' → logprob: -5.76569128036499
    10. 'for' → logprob: -6.01569128036499

Token 336: ' calc' (ID: 25691)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9961240291595459
    2. ' for' → logprob: -1.371124029159546
    3. 'for' → logprob: -1.746124029159546
    4. '=' → logprob: -2.496124029159546
    5. ' :' → logprob: -2.871124029159546
    6. ' =' → logprob: -3.746124029159546
    7. ' in' → logprob: -4.496124267578125
    8. ' range' → logprob: -4.996124267578125
    9. ' ' → logprob: -5.246124267578125
    10. ' +=' → logprob: -6.246124267578125

Token 337: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0002755174064077437
    2. 'le' → logprob: -8.375275611877441
    3. 'cule' → logprob: -10.625275611877441
    4. 'ulte' → logprob: -12.375275611877441
    5. 'e' → logprob: -12.375275611877441
    6. 'ue' → logprob: -12.750275611877441
    7. 'ul' → logprob: -13.000275611877441
    8. 'ute' → logprob: -13.625275611877441
    9. '[' → logprob: -14.000275611877441
    10. 'u' → logprob: -14.500275611877441

Token 338: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3107912540435791
    2. ' B' → logprob: -1.560791254043579
    3. ' i' → logprob: -3.560791254043579
    4. 'i' → logprob: -3.685791254043579
    5. ' ' → logprob: -6.685791015625
    6. '   ' → logprob: -6.810791015625
    7. '(i' → logprob: -8.060791015625
    8. ' (' → logprob: -8.560791015625
    9. ',' → logprob: -8.935791015625
    10. '(B' → logprob: -8.935791015625

Token 339: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.742448022123426e-05
    2. '[' → logprob: -9.625067710876465
    3. ' [' → logprob: -14.875067710876465
    4. 'i' → logprob: -15.125067710876465
    5. '[I' → logprob: -15.375067710876465
    6. '```' → logprob: -15.750067710876465
    7. '[
' → logprob: -16.25006675720215
    8. '\[' → logprob: -16.87506675720215
    9. '[j' → logprob: -17.12506675720215
    10. '[B' → logprob: -17.62506675720215

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010457895696163177
    2. ' ]' → logprob: -7.5010457038879395
    3. ']=' → logprob: -7.7510457038879395
    4. '=' → logprob: -10.001046180725098
    5. ' =' → logprob: -11.376046180725098
    6. 'i' → logprob: -13.376046180725098
    7. ')' → logprob: -14.376046180725098
    8. ']=(' → logprob: -14.751046180725098
    9. '```' → logprob: -14.876046180725098
    10. 's' → logprob: -14.876046180725098

Token 341: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194522738456726
    2. ' =' → logprob: -1.5019452571868896
    3. '=B' → logprob: -12.376945495605469
    4. '   ' → logprob: -12.501945495605469
    5. ']' → logprob: -13.251945495605469
    6. ',' → logprob: -13.501945495605469
    7. '[' → logprob: -13.876945495605469
    8. ')' → logprob: -14.251945495605469
    9. ' ' → logprob: -14.501945495605469
    10. '[i' → logprob: -14.626945495605469

Token 342: ' étant' (ID: 47869)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.16059301793575287
    2. ' (' → logprob: -1.910593032836914
    3. '(' → logprob: -8.285593032836914
    4. 'B' → logprob: -9.160593032836914
    5. ' B' → logprob: -11.660593032836914
    6. '2' → logprob: -13.785593032836914
    7. ' ' → logprob: -14.285593032836914
    8. ' ' → logprob: -14.910593032836914
    9. '(int' → logprob: -15.285593032836914
    10. '   ' → logprob: -15.785593032836914

Token 343: ' B' (ID: 418)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0051263077184557915
    2. ' (' → logprob: -5.505126476287842
    3. '(' → logprob: -7.005126476287842
    4. 'B' → logprob: -9.005125999450684
    5. '2' → logprob: -11.505125999450684
    6. ' ' → logprob: -12.380125999450684
    7. ' B' → logprob: -13.380125999450684
    8. '   ' → logprob: -15.005125999450684
    9. ' ' → logprob: -15.755125999450684
    10. '(int' → logprob: -15.880125999450684

Token 344: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -17.375
    4. ' [' → logprob: -18.125
    5. '[I' → logprob: -19.0
    6. '```' → logprob: -19.0
    7. '[
' → logprob: -19.375
    8. '
' → logprob: -20.5
    9. '\[' → logprob: -20.5
    10. '(i' → logprob: -20.75

Token 345: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013909504050388932
    2. '-' → logprob: -6.6263909339904785
    3. 'i' → logprob: -10.751391410827637
    4. '[' → logprob: -10.876391410827637
    5. ']' → logprob: -11.626391410827637
    6. ' -' → logprob: -12.251391410827637
    7. '[-' → logprob: -12.376391410827637
    8. ' [' → logprob: -13.626391410827637
    9. '
' → logprob: -13.751391410827637
    10. '[
' → logprob: -13.876391410827637

Token 346: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17276541888713837
    2. '1' → logprob: -1.9227653741836548
    3. ']' → logprob: -4.547765254974365
    4. '-' → logprob: -6.422765254974365
    5. ' i' → logprob: -8.672765731811523
    6. ' ' → logprob: -10.422765731811523
    7. ' -' → logprob: -11.297765731811523
    8. '```' → logprob: -11.297765731811523
    9. '[i' → logprob: -11.422765731811523
    10. '(i' → logprob: -12.172765731811523

Token 347: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005175170488655567
    2. '*' → logprob: -5.3801751136779785
    3. ' *' → logprob: -8.005175590515137
    4. ']*' → logprob: -8.880175590515137
    5. ' ]' → logprob: -10.005175590515137
    6. ' ' → logprob: -11.255175590515137
    7. ' ' → logprob: -11.505175590515137
    8. '2' → logprob: -12.255175590515137
    9. '```' → logprob: -12.630175590515137
    10. ']
' → logprob: -13.505175590515137

Token 348: ' multip' (ID: 17524)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.043129127472639084
    2. ' *' → logprob: -3.1681292057037354
    3. '2' → logprob: -9.793128967285156
    4. ' ' → logprob: -9.918128967285156
    5. ' ' → logprob: -10.918128967285156
    6. '```' → logprob: -13.168128967285156
    7. '1' → logprob: -13.668128967285156
    8. ' multiplied' → logprob: -14.293128967285156
    9. '
' → logprob: -15.043128967285156
    10. '**' → logprob: -15.043128967285156

Token 349: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.5563434362411499
    2. '*' → logprob: -0.9313434362411499
    3. ' *' → logprob: -4.0563435554504395
    4. 'li' → logprob: -5.0563435554504395
    5. 'ip' → logprob: -5.6813435554504395
    6. 'ipl' → logprob: -6.3063435554504395
    7. ']' → logprob: -7.0563435554504395
    8. 'ic' → logprob: -7.4313435554504395
    9. 'lication' → logprob: -7.4313435554504395
    10. 'lé' → logprob: -8.306343078613281

Token 350: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.20667137205600739
    2. 'par' → logprob: -1.9566713571548462
    3. '*' → logprob: -3.3316714763641357
    4. ' ' → logprob: -5.331671237945557
    5. ' *' → logprob: -6.456671237945557
    6. 'by' → logprob: -6.831671237945557
    7. '_par' → logprob: -7.456671237945557
    8. ' by' → logprob: -7.456671237945557
    9. '2' → logprob: -8.581671714782715
    10. 'B' → logprob: -8.956671714782715

Token 351: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22541433572769165
    2. ' ' → logprob: -1.6004142761230469
    3. ' ' → logprob: -14.225414276123047
    4. '```' → logprob: -14.725414276123047
    5. '   ' → logprob: -15.100414276123047
    6. '
' → logprob: -16.162914276123047
    7. ' 
' → logprob: -17.037914276123047
    8. '۲' → logprob: -17.287914276123047
    9. ' two' → logprob: -17.412914276123047
    10. ' deux' → logprob: -17.475414276123047

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036006635054945946
    2. ' ' → logprob: -5.628600597381592
    3. '```' → logprob: -14.62860107421875
    4. '   ' → logprob: -16.25360107421875
    5. ' ' → logprob: -16.75360107421875
    6. '
' → logprob: -17.75360107421875
    7. '`' → logprob: -18.25360107421875
    8. '  ' → logprob: -18.50360107421875
    9. '۲' → logprob: -18.75360107421875
    10. '  
' → logprob: -18.75360107421875

Token 353: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4247485399246216
    2. ' ' → logprob: -2.174748420715332
    3. ' *' → logprob: -2.174748420715332
    4. '%' → logprob: -2.549748420715332
    5. ',' → logprob: -4.424748420715332
    6. '*' → logprob: -4.799748420715332
    7. '   ' → logprob: -5.549748420715332
    8. ' B' → logprob: -6.049748420715332
    9. '
' → logprob: -6.174748420715332
    10. ')' → logprob: -6.299748420715332

Token 354: '#' (ID: 2)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16405008733272552
    2. 'for' → logprob: -2.0390501022338867
    3. '*' → logprob: -4.789050102233887
    4. ' ' → logprob: -4.914050102233887
    5. ' *' → logprob: -5.914050102233887
    6. ' i' → logprob: -6.414050102233887
    7. '%' → logprob: -8.039050102233887
    8. ',' → logprob: -8.789050102233887
    9. '   ' → logprob: -8.789050102233887
    10. ' %' → logprob: -9.289050102233887

Token 355: ' Ensuite' (ID: 113884)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3016211688518524
    2. 'for' → logprob: -1.4266211986541748
    3. '%' → logprob: -5.426620960235596
    4. ' %' → logprob: -5.426620960235596
    5. '*' → logprob: -5.676620960235596
    6. ' *' → logprob: -6.051620960235596
    7. 'B' → logprob: -6.426620960235596
    8. ' ' → logprob: -6.551620960235596
    9. ' B' → logprob: -6.801620960235596
    10. ' i' → logprob: -7.301620960235596

Token 356: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8958950638771057
    2. ' B' → logprob: -1.145895004272461
    3. ',' → logprob: -2.020895004272461
    4. '%' → logprob: -3.020895004272461
    5. ' on' → logprob: -3.270895004272461
    6. ' modulo' → logprob: -3.645895004272461
    7. '   ' → logprob: -4.645895004272461
    8. ' %' → logprob: -4.895895004272461
    9. ' ' → logprob: -6.145895004272461
    10. 'on' → logprob: -6.395895004272461

Token 357: ' on' (ID: 402)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11385133862495422
    2. ' B' → logprob: -2.238851308822632
    3. ' on' → logprob: -8.488851547241211
    4. '%' → logprob: -8.613851547241211
    5. ')' → logprob: -9.238851547241211
    6. ' modulo' → logprob: -9.363851547241211
    7. '   ' → logprob: -9.613851547241211
    8. '#' → logprob: -9.863851547241211
    9. ' %=' → logprob: -9.863851547241211
    10. ' %' → logprob: -9.988851547241211

Token 358: ' prend' (ID: 37463)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.025761375203728676
    2. ' %=' → logprob: -3.900761365890503
    3. '=' → logprob: -5.400761604309082
    4. '%' → logprob: -7.775761604309082
    5. ' =' → logprob: -8.775761604309082
    6. 'mod' → logprob: -10.025761604309082
    7. '%i' → logprob: -11.275761604309082
    8. '[i' → logprob: -11.400761604309082
    9. '#' → logprob: -12.025761604309082
    10. ' %' → logprob: -12.150761604309082

Token 359: ' le' (ID: 505)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5862991213798523
    2. ' %' → logprob: -1.086299180984497
    3. ' MOD' → logprob: -3.336299180984497
    4. 'MOD' → logprob: -3.586299180984497
    5. ' modulo' → logprob: -4.461298942565918
    6. 'B' → logprob: -4.961298942565918
    7. ' ' → logprob: -4.961298942565918
    8. ' B' → logprob: -5.086298942565918
    9. '%B' → logprob: -5.461298942565918
    10. ')' → logprob: -6.086298942565918

Token 360: ' résultat' (ID: 62556)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.229194775223732
    2. ' %' → logprob: -1.9791947603225708
    3. 'MOD' → logprob: -3.3541948795318604
    4. ' modulo' → logprob: -4.229194641113281
    5. 'mod' → logprob: -4.354194641113281
    6. ' MOD' → logprob: -5.729194641113281
    7. '_MOD' → logprob: -8.229194641113281
    8. '%B' → logprob: -8.854194641113281
    9. 'B' → logprob: -9.354194641113281
    10. ')%' → logprob: -9.354194641113281

Token 361: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4481145143508911
    2. ' %' → logprob: -1.5731145143508911
    3. ' %=' → logprob: -1.9481145143508911
    4. ' modulo' → logprob: -5.448114395141602
    5. '%B' → logprob: -5.948114395141602
    6. '%=' → logprob: -6.198114395141602
    7. ' ' → logprob: -7.323114395141602
    8. 'mod' → logprob: -7.698114395141602
    9. 'B' → logprob: -8.198114395141602
    10. ')' → logprob: -8.323114395141602

Token 362: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04858827963471413
    2. ' MOD' → logprob: -3.048588275909424
    3. '_MOD' → logprob: -14.923588752746582
    4. '(M' → logprob: -15.423588752746582
    5. ' ' → logprob: -16.173587799072266
    6. ' ' → logprob: -16.548587799072266
    7. '.MOD' → logprob: -16.548587799072266
    8. 'M' → logprob: -17.673587799072266
    9. 'MO' → logprob: -18.298587799072266
    10. '(mod' → logprob: -18.423587799072266

Token 363: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024861192796379328
    2. ' for' → logprob: -6.127486228942871
    3. '
' → logprob: -8.502486228942871
    4. '```' → logprob: -9.502486228942871
    5. 'i' → logprob: -10.877486228942871
    6. ':' → logprob: -13.377486228942871
    7. ' 
' → logprob: -14.002486228942871
    8. '``' → logprob: -14.627486228942871
    9. ':
' → logprob: -15.002486228942871
    10. '	for' → logprob: -15.002486228942871

Token 364: ' garder' (ID: 63069)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.8608821630477905
    2. ' éviter' → logprob: -2.23588228225708
    3. ' garder' → logprob: -2.23588228225708
    4. 'b' → logprob: -2.86088228225708
    5. 're' → logprob: -2.98588228225708
    6. ' B' → logprob: -2.98588228225708
    7. 'B' → logprob: -3.11088228225708
    8. ' rester' → logprob: -3.23588228225708
    9. ' garantir' → logprob: -3.36088228225708
    10. ' conserver' → logprob: -3.48588228225708

Token 365: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2995835840702057
    2. ' la' → logprob: -2.424583673477173
    3. 'le' → logprob: -2.799583673477173
    4. 'la' → logprob: -3.174583673477173
    5. ' B' → logprob: -3.174583673477173
    6. 'l' → logprob: -4.674583435058594
    7. '2' → logprob: -5.549583435058594
    8. ' le' → logprob: -5.674583435058594
    9. ' une' → logprob: -6.674583435058594
    10. ' l' → logprob: -6.799583435058594

Token 366: ' valeur' (ID: 41664)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.06546233594417572
    2. 'B' → logprob: -3.190462350845337
    3. ' MOD' → logprob: -4.315462112426758
    4. '_MOD' → logprob: -6.440462112426758
    5. 'mod' → logprob: -6.565462112426758
    6. '2' → logprob: -6.565462112426758
    7. ' B' → logprob: -6.565462112426758
    8. '```' → logprob: -6.565462112426758
    9. '%' → logprob: -8.190462112426758
    10. 'result' → logprob: -8.565462112426758

Token 367: ' dans' (ID: 2671)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8616318702697754
    2. 'B' → logprob: -1.1116318702697754
    3. '=' → logprob: -1.9866318702697754
    4. ' B' → logprob: -3.3616318702697754
    5. ' ' → logprob: -3.6116318702697754
    6. ' =' → logprob: -3.9866318702697754
    7. ' %' → logprob: -4.736631870269775
    8. ',' → logprob: -5.486631870269775
    9. '   ' → logprob: -5.986631870269775
    10. ')' → logprob: -5.986631870269775

Token 368: ' l' (ID: 305)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04765578731894493
    2. ' MOD' → logprob: -3.1726558208465576
    3. 'B' → logprob: -6.0476555824279785
    4. '_MOD' → logprob: -7.2976555824279785
    5. 'le' → logprob: -7.9226555824279785
    6. ' B' → logprob: -8.172656059265137
    7. ' la' → logprob: -8.422656059265137
    8. '```' → logprob: -8.422656059265137
    9. ' ' → logprob: -8.672656059265137
    10. 'la' → logprob: -9.672656059265137

Token 369: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2436939775943756
    2. 'e' → logprob: -2.7436940670013428
    3. 'MOD' → logprob: -2.8686940670013428
    4. 'B' → logprob: -2.9936940670013428
    5. ' range' → logprob: -4.243693828582764
    6. 'es' → logprob: -5.243693828582764
    7. '```' → logprob: -5.743693828582764
    8. '100' → logprob: -5.993693828582764
    9. ''espace' → logprob: -6.118693828582764
    10. '[' → logprob: -6.118693828582764

Token 370: 'interval' (ID: 37558)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.81171053647995
    2. 'MOD' → logprob: -0.81171053647995
    3. ' range' → logprob: -2.9367105960845947
    4. 'B' → logprob: -3.1867105960845947
    5. ' MOD' → logprob: -5.686710357666016
    6. 'bounds' → logprob: -6.311710357666016
    7. '```' → logprob: -6.436710357666016
    8. 'mod' → logprob: -6.436710357666016
    9. 'limits' → logprob: -6.561710357666016
    10. ' limites' → logprob: -7.061710357666016

Token 371: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0001410850090906024
    2. '#' → logprob: -9.000141143798828
    3. 'es' → logprob: -11.625141143798828
    4. 'le' → logprob: -13.000141143798828
    5. 'MOD' → logprob: -13.375141143798828
    6. 'е' → logprob: -13.500141143798828
    7. 'é' → logprob: -14.375141143798828
    8. 'o' → logprob: -14.875141143798828
    9. '2' → logprob: -15.125141143798828
    10. '_' → logprob: -15.250141143798828

Token 372: ' [' (ID: 723)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13531892001628876
    2. 'B' → logprob: -3.5103189945220947
    3. '=' → logprob: -4.010318756103516
    4. ',' → logprob: -4.510318756103516
    5. 'MOD' → logprob: -4.510318756103516
    6. ')' → logprob: -4.885318756103516
    7. '(' → logprob: -4.885318756103516
    8. '2' → logprob: -4.885318756103516
    9. ' %' → logprob: -4.885318756103516
    10. ' (%)' → logprob: -5.010318756103516

Token 373: '0' (ID: 15)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00584915466606617
    2. '0' → logprob: -5.255849361419678
    3. ']' → logprob: -7.880849361419678
    4. ' MOD' → logprob: -9.00584888458252
    5. ',' → logprob: -9.63084888458252
    6. '1' → logprob: -11.13084888458252
    7. ')' → logprob: -11.50584888458252
    8. '_MOD' → logprob: -11.75584888458252
    9. '   ' → logprob: -13.13084888458252
    10. '(M' → logprob: -13.25584888458252

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012664210516959429
    2. ']' → logprob: -7.2512664794921875
    3. ')' → logprob: -8.001266479492188
    4. ' ,' → logprob: -9.001266479492188
    5. '+' → logprob: -9.876266479492188
    6. ',
' → logprob: -11.501266479492188
    7. ';' → logprob: -11.501266479492188
    8. ',...' → logprob: -12.376266479492188
    9. '...' → logprob: -12.501266479492188
    10. ')]' → logprob: -12.751266479492188

Token 375: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.008615872822701931
    2. ' MOD' → logprob: -4.758615970611572
    3. '_MOD' → logprob: -14.008615493774414
    4. '.MOD' → logprob: -15.758615493774414
    5. ' ' → logprob: -16.258615493774414
    6. ')' → logprob: -16.883615493774414
    7. 'N' → logprob: -17.008615493774414
    8. '```' → logprob: -17.133615493774414
    9. ']' → logprob: -17.383615493774414
    10. '100' → logprob: -17.508615493774414

Token 376: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03605404123663902
    2. ')' → logprob: -3.5360541343688965
    3. ']
' → logprob: -6.0360541343688965
    4. '])' → logprob: -6.0360541343688965
    5. ')]' → logprob: -7.4110541343688965
    6. '-' → logprob: -7.7860541343688965
    7. ']\' → logprob: -9.286053657531738
    8. ']
' → logprob: -9.536053657531738
    9. '],' → logprob: -10.036053657531738
    10. ']

' → logprob: -10.161053657531738

Token 377: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5889111757278442
    2. ')' → logprob: -1.0889111757278442
    3. '1' → logprob: -2.3389110565185547
    4. 'MOD' → logprob: -5.588911056518555
    5. '2' → logprob: -5.963911056518555
    6. '```' → logprob: -6.588911056518555
    7. '_MOD' → logprob: -7.213911056518555
    8. '7' → logprob: -7.463911056518555
    9. '}' → logprob: -7.463911056518555
    10. '])' → logprob: -7.713911056518555

Token 378: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02752097137272358
    2. ']
' → logprob: -3.6525208950042725
    3. ')' → logprob: -7.402521133422852
    4. ' ]' → logprob: -8.152521133422852
    5. ')]' → logprob: -9.277521133422852
    6. ']
' → logprob: -9.277521133422852
    7. ']

' → logprob: -9.902521133422852
    8. ' ]
' → logprob: -10.527521133422852
    9. ' ' → logprob: -12.027521133422852
    10. 'B' → logprob: -12.027521133422852

Token 379: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.755678961984813e-05
    2. ' for' → logprob: -9.500077247619629
    3. 'i' → logprob: -13.625077247619629
    4. '
' → logprob: -13.875077247619629
    5. '```' → logprob: -14.500077247619629
    6. '	for' → logprob: -16.875078201293945
    7. ' 
' → logprob: -18.250078201293945
    8. '  
' → logprob: -19.375078201293945
    9. '   ' → logprob: -19.500078201293945
    10. ':' → logprob: -19.500078201293945

Token 380: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.000563638168387115
    2. 'i' → logprob: -7.500563621520996
    3. ' ' → logprob: -11.875563621520996
    4. '	i' → logprob: -13.250563621520996
    5. '_' → logprob: -14.125563621520996
    6. ' ' → logprob: -14.375563621520996
    7. '_i' → logprob: -15.000563621520996
    8. ' _' → logprob: -15.250563621520996
    9. 'I' → logprob: -17.500564575195312
    10. ' ' → logprob: -18.750564575195312

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016072377562522888
    2. 'in' → logprob: -4.1410722732543945
    3. ' ' → logprob: -10.266072273254395
    4. '	in' → logprob: -13.266072273254395
    5. '1' → logprob: -15.016072273254395
    6. ' i' → logprob: -15.266072273254395
    7. 'range' → logprob: -15.766072273254395
    8. 'space' → logprob: -15.766072273254395
    9. ' ' → logprob: -16.51607322692871
    10. '  ' → logprob: -16.64107322692871

Token 382: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868715465068817
    2. 'range' → logprob: -1.136871576309204
    3. '(range' → logprob: -15.261871337890625
    4. '1' → logprob: -16.011871337890625
    5. '	range' → logprob: -16.386871337890625
    6. ' ' → logprob: -16.636871337890625
    7. ' in' → logprob: -18.011871337890625
    8. ' rang' → logprob: -18.636871337890625
    9. 'in' → logprob: -18.761871337890625
    10. 'rang' → logprob: -19.511871337890625

Token 383: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.200166469876422e-06
    2. '1' → logprob: -12.375004768371582
    3. ' (' → logprob: -13.875004768371582
    4. '(
' → logprob: -18.3750057220459
    5. ' ' → logprob: -21.8750057220459
    6. '(N' → logprob: -22.5000057220459
    7. '[' → logprob: -23.5000057220459
    8. 'def' → logprob: -24.0000057220459
    9. ',' → logprob: -24.2500057220459
    10. '
' → logprob: -24.6250057220459

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '(' → logprob: -16.875045776367188
    4. '   ' → logprob: -18.500045776367188
    5. 'N' → logprob: -19.125045776367188
    6. '１' → logprob: -21.000045776367188
    7. '```' → logprob: -21.125045776367188
    8. ')' → logprob: -21.125045776367188
    9. '  ' → logprob: -21.250045776367188
    10. '
' → logprob: -21.250045776367188

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002279434585943818
    2. ',N' → logprob: -6.502279281616211
    3. ' ,' → logprob: -7.252279281616211
    4. 'N' → logprob: -10.252279281616211
    5. '(N' → logprob: -11.127279281616211
    6. ' N' → logprob: -11.127279281616211
    7. ',
' → logprob: -13.252279281616211
    8. ',n' → logprob: -14.752279281616211
    9. '   ' → logprob: -14.752279281616211
    10. ' (' → logprob: -14.877279281616211

Token 386: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019286326132714748
    2. ' N' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.876928329467773
    4. '	N' → logprob: -21.376928329467773
    5. ')' → logprob: -22.376928329467773
    6. ' ' → logprob: -22.501928329467773
    7. '```' → logprob: -22.751928329467773
    8. '(N' → logprob: -23.376928329467773
    9. 'n' → logprob: -24.001928329467773
    10. ' ' → logprob: -24.126928329467773

Token 387: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010163593105971813
    2. ' +' → logprob: -9.250102043151855
    3. '+
' → logprob: -12.125102043151855
    4. ' +
' → logprob: -19.75010108947754
    5. '+

' → logprob: -20.00010108947754
    6. '):
' → logprob: -20.12510108947754
    7. '
' → logprob: -20.37510108947754
    8. ')+' → logprob: -20.75010108947754
    9. '+)' → logprob: -20.75010108947754
    10. '＋' → logprob: -20.87510108947754

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '+' → logprob: -14.500009536743164
    4. ')' → logprob: -16.625009536743164
    5. '```' → logprob: -17.500009536743164
    6. '   ' → logprob: -17.625009536743164
    7. '2' → logprob: -17.875009536743164
    8. '):
' → logprob: -19.625009536743164
    9. 'i' → logprob: -19.875009536743164
    10. '
' → logprob: -20.750009536743164

Token 389: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011072585359215736
    2. '):
' → logprob: -4.511072635650635
    3. ')' → logprob: -11.011072158813477
    4. ' ):' → logprob: -12.636072158813477
    5. '):
' → logprob: -12.636072158813477
    6. ':' → logprob: -13.386072158813477
    7. ']:' → logprob: -16.011072158813477
    8. '):

' → logprob: -16.886072158813477
    9. ' ):
' → logprob: -17.011072158813477
    10. '}:' → logprob: -17.636072158813477

Token 390: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.21336482465267181
    2. '   ' → logprob: -1.963364839553833
    3. ' B' → logprob: -2.963364839553833
    4. 'b' → logprob: -10.088364601135254
    5. '	B' → logprob: -10.463364601135254
    6. ' ' → logprob: -10.713364601135254
    7. '```' → logprob: -11.338364601135254
    8. '  ' → logprob: -13.963364601135254
    9. '   ' → logprob: -14.088364601135254
    10. ' ' → logprob: -14.838364601135254

Token 391: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00596529571339488
    2. ' B' → logprob: -5.130965232849121
    3. '   ' → logprob: -10.255965232849121
    4. '	B' → logprob: -14.130965232849121
    5. 'b' → logprob: -14.255965232849121
    6. ' ' → logprob: -16.505966186523438
    7. '```' → logprob: -16.630966186523438
    8. ' ' → logprob: -18.005966186523438
    9. '>B' → logprob: -18.005966186523438
    10. '    ' → logprob: -18.630966186523438

Token 392: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.125016212463379
    3. '[I' → logprob: -13.625016212463379
    4. ' [' → logprob: -16.125017166137695
    5. '[B' → logprob: -16.125017166137695
    6. 'i' → logprob: -16.625017166137695
    7. '```' → logprob: -16.875017166137695
    8. '   ' → logprob: -17.125017166137695
    9. '[
' → logprob: -18.375017166137695
    10. '\[' → logprob: -18.625017166137695

Token 393: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003374886582605541
    2. ']=' → logprob: -8.500337600708008
    3. '=' → logprob: -9.250337600708008
    4. ' ]' → logprob: -10.500337600708008
    5. ' =' → logprob: -11.750337600708008
    6. ')' → logprob: -13.250337600708008
    7. ']=(' → logprob: -14.625337600708008
    8. ' ' → logprob: -16.500337600708008
    9. ']
' → logprob: -17.000337600708008
    10. '   ' → logprob: -17.125337600708008

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '=

' → logprob: -17.643150329589844
    4. '=B' → logprob: -18.143150329589844
    5. '=(' → logprob: -18.518150329589844
    6. '＝' → logprob: -18.518150329589844
    7. ')' → logprob: -19.518150329589844
    8. '=
' → logprob: -19.518150329589844
    9. '*=' → logprob: -19.643150329589844
    10. ',' → logprob: -19.768150329589844

Token 395: ' B' (ID: 418)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.049188803881406784
    2. ' (' → logprob: -3.0491888523101807
    3. '(' → logprob: -7.549188613891602
    4. 'B' → logprob: -9.799188613891602
    5. ' B' → logprob: -11.924188613891602
    6. '2' → logprob: -11.924188613891602
    7. ' ' → logprob: -12.674188613891602
    8. '   ' → logprob: -12.924188613891602
    9. '(b' → logprob: -16.0491886138916
    10. ' ' → logprob: -16.1741886138916

Token 396: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. '[I' → logprob: -16.125001907348633
    4. 'i' → logprob: -17.250001907348633
    5. '[
' → logprob: -18.500001907348633
    6. ' [' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '[B' → logprob: -19.875001907348633
    9. '[N' → logprob: -20.250001907348633
    10. '[j' → logprob: -20.375001907348633

Token 397: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008774581365287304
    2. '[i' → logprob: -4.758774757385254
    3. ' -' → logprob: -9.008774757385254
    4. 'i' → logprob: -11.008774757385254
    5. '(i' → logprob: -11.883774757385254
    6. '```' → logprob: -12.383774757385254
    7. ']' → logprob: -12.758774757385254
    8. '[-' → logprob: -12.758774757385254
    9. '[' → logprob: -13.383774757385254
    10. '−' → logprob: -13.883774757385254

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020747410599142313
    2. ' ' → logprob: -9.500207901000977
    3. '```' → logprob: -10.250207901000977
    4. 'MOD' → logprob: -10.875207901000977
    5. '000' → logprob: -11.000207901000977
    6. 'i' → logprob: -11.250207901000977
    7. '2' → logprob: -11.875207901000977
    8. ']' → logprob: -12.125207901000977
    9. ')' → logprob: -12.250207901000977
    10. '0' → logprob: -12.250207901000977

Token 399: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0097948107868433
    2. ' *' → logprob: -4.63479471206665
    3. ']' → logprob: -10.634795188903809
    4. ' ' → logprob: -11.634795188903809
    5. ' ' → logprob: -12.509795188903809
    6. '2' → logprob: -13.634795188903809
    7. ')' → logprob: -14.509795188903809
    8. '   ' → logprob: -15.384795188903809
    9. ']*' → logprob: -16.384794235229492
    10. '```' → logprob: -16.384794235229492

Token 400: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.003179975086823106
    2. ' *' → logprob: -5.753180027008057
    3. '2' → logprob: -13.253179550170898
    4. ' ' → logprob: -14.878179550170898
    5. ' ' → logprob: -16.6281795501709
    6. '(' → logprob: -17.5031795501709
    7. '**' → logprob: -18.3781795501709
    8. '   ' → logprob: -18.8781795501709
    9. '```' → logprob: -18.8781795501709
    10. '*(' → logprob: -19.3781795501709

Token 401: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009756323881447315
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -15.759756088256836
    4. '```' → logprob: -16.384756088256836
    5. '<|end|>' → logprob: -17.009756088256836
    6. '  ' → logprob: -17.134756088256836
    7. '۲' → logprob: -17.259756088256836
    8. '
' → logprob: -19.134756088256836
    9. '(' → logprob: -19.509756088256836
    10. '    ' → logprob: -19.509756088256836

Token 402: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.50000762939453
    4. '۲' → logprob: -18.87500762939453
    5. '
' → logprob: -19.25000762939453
    6. '<|end|>' → logprob: -19.37500762939453
    7. '   ' → logprob: -19.37500762939453
    8. '(' → logprob: -20.12500762939453
    9. '２' → logprob: -21.31250762939453
    10. '  ' → logprob: -21.31250762939453

Token 403: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0015041481237858534
    2. '%' → logprob: -6.501503944396973
    3. ' ' → logprob: -14.251503944396973
    4. ')' → logprob: -14.376503944396973
    5. '   ' → logprob: -15.501503944396973
    6. '%B' → logprob: -15.501503944396973
    7. ' ' → logprob: -16.37650489807129
    8. ' %
' → logprob: -16.50150489807129
    9. ' %=' → logprob: -16.62650489807129
    10. ')%' → logprob: -17.75150489807129

Token 404: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006734080612659454
    2. '%' → logprob: -5.0067338943481445
    3. '   ' → logprob: -11.756733894348145
    4. ')' → logprob: -12.256733894348145
    5. '%B' → logprob: -13.006733894348145
    6. ' ' → logprob: -13.131733894348145
    7. ' %=' → logprob: -14.131733894348145
    8. ' %
' → logprob: -14.256733894348145
    9. ')%' → logprob: -15.881733894348145
    10. ' ' → logprob: -16.25673484802246

Token 405: ' #' (ID: 1069)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0011858227662742138
    2. '%' → logprob: -6.751185894012451
    3. '   ' → logprob: -11.126185417175293
    4. ' %=' → logprob: -14.876185417175293
    5. ' ' → logprob: -15.376185417175293
    6. '%B' → logprob: -15.876185417175293
    7. ' %
' → logprob: -16.37618637084961
    8. ')' → logprob: -17.12618637084961
    9. ' %#' → logprob: -18.25118637084961
    10. ' ' → logprob: -18.50118637084961

Token 406: ' Le' (ID: 2018)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22093723714351654
    2. ' B' → logprob: -1.8459372520446777
    3. '   ' → logprob: -3.2209372520446777
    4. '%' → logprob: -8.97093677520752
    5. ' ' → logprob: -9.72093677520752
    6. '%B' → logprob: -9.72093677520752
    7. '=' → logprob: -10.09593677520752
    8. ' %' → logprob: -10.34593677520752
    9. ' %=' → logprob: -10.84593677520752
    10. '```' → logprob: -10.84593677520752

Token 407: ' symbole' (ID: 152507)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026564540341496468
    2. ' B' → logprob: -3.651564598083496
    3. '   ' → logprob: -8.526564598083496
    4. '=' → logprob: -10.276564598083496
    5. ' =' → logprob: -11.901564598083496
    6. '[i' → logprob: -12.276564598083496
    7. 'b' → logprob: -12.776564598083496
    8. '=B' → logprob: -12.776564598083496
    9. ' ' → logprob: -12.901564598083496
    10. 'i' → logprob: -13.026564598083496

Token 408: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6353335976600647
    2. ' %' → logprob: -0.8853335976600647
    3. ' %=' → logprob: -2.88533353805542
    4. '%=' → logprob: -7.13533353805542
    5. '%B' → logprob: -7.63533353805542
    6. '   ' → logprob: -8.635334014892578
    7. ' ' → logprob: -9.135334014892578
    8. ')' → logprob: -9.885334014892578
    9. ')%' → logprob: -10.135334014892578
    10. 'B' → logprob: -10.135334014892578

Token 409: ' est' (ID: 893)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.02733423560857773
    2. '%=' → logprob: -4.777334213256836
    3. ' %' → logprob: -5.027334213256836
    4. '%' → logprob: -5.152334213256836
    5. '   ' → logprob: -5.277334213256836
    6. '=' → logprob: -8.527334213256836
    7. 'B' → logprob: -8.527334213256836
    8. '%B' → logprob: -9.027334213256836
    9. ' B' → logprob: -9.152334213256836
    10. '<|end|>' → logprob: -9.277334213256836

Token 410: ' une' (ID: 2463)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.7166724801063538
    2. ' %' → logprob: -1.466672420501709
    3. '%' → logprob: -2.216672420501709
    4. '=' → logprob: -2.841672420501709
    5. ' modulo' → logprob: -3.716672420501709
    6. '   ' → logprob: -3.841672420501709
    7. ' ' → logprob: -4.091672420501709
    8. ' =' → logprob: -4.341672420501709
    9. ' B' → logprob: -4.841672420501709
    10. '%=' → logprob: -4.966672420501709

Token 411: ' forme' (ID: 27450)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -1.0531989336013794
    2. 'MOD' → logprob: -1.3031989336013794
    3. '%' → logprob: -2.17819881439209
    4. ' ' → logprob: -2.30319881439209
    5. ' modulo' → logprob: -2.30319881439209
    6. 'mod' → logprob: -4.30319881439209
    7. ' %=' → logprob: -4.92819881439209
    8. ' mod' → logprob: -4.92819881439209
    9. ' %' → logprob: -5.05319881439209
    10. ' B' → logprob: -5.17819881439209

Token 412: ' abr' (ID: 47914)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5089375376701355
    2. '%=' → logprob: -2.1339375972747803
    3. ' %=' → logprob: -2.5089375972747803
    4. 'mod' → logprob: -2.6339375972747803
    5. ' de' → logprob: -3.1339375972747803
    6. '   ' → logprob: -4.133937358856201
    7. ' modulo' → logprob: -4.258937358856201
    8. '%' → logprob: -4.258937358856201
    9. 'de' → logprob: -4.633937358856201
    10. ' =' → logprob: -5.383937358856201

Token 413: 'ég' (ID: 6634)
  Prédit: 'ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.7830361723899841
    2. 'égé' → logprob: -0.9080361723899841
    3. 'é' → logprob: -2.283036231994629
    4. 'év' → logprob: -4.533036231994629
    5. 'eg' → logprob: -5.158036231994629
    6. 'v' → logprob: -5.533036231994629
    7. 'ége' → logprob: -5.533036231994629
    8. 'e' → logprob: -5.908036231994629
    9. 'g' → logprob: -6.158036231994629
    10. 'ège' → logprob: -6.408036231994629

Token 414: 'ée' (ID: 2894)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33884379267692566
    2. '=' → logprob: -2.963843822479248
    3. 'ut' → logprob: -2.963843822479248
    4. 'ie' → logprob: -2.963843822479248
    5. '%=' → logprob: -3.213843822479248
    6. 'ur' → logprob: -4.088843822479248
    7. 'u' → logprob: -4.338843822479248
    8. 'e' → logprob: -4.713843822479248
    9. '+=' → logprob: -4.713843822479248
    10. '%' → logprob: -5.088843822479248

Token 415: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5198429822921753
    2. ' %=' → logprob: -1.2698429822921753
    3. '%=' → logprob: -3.269843101501465
    4. '%' → logprob: -3.269843101501465
    5. '=' → logprob: -4.519843101501465
    6. 'B' → logprob: -4.519843101501465
    7. ' %' → logprob: -5.019843101501465
    8. '<|end|>' → logprob: -5.144843101501465
    9. ' B' → logprob: -5.269843101501465
    10. '%B' → logprob: -5.769843101501465

Token 416: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.021023636683821678
    2. ' B' → logprob: -3.896023750305176
    3. '   ' → logprob: -8.271023750305176
    4. '=B' → logprob: -10.021023750305176
    5. '=' → logprob: -10.271023750305176
    6. ' ' → logprob: -10.396023750305176
    7. 'b' → logprob: -10.771023750305176
    8. '`' → logprob: -11.146023750305176
    9. '	B' → logprob: -11.646023750305176
    10. '%B' → logprob: -11.646023750305176

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.750014305114746
    4. '\[' → logprob: -15.375014305114746
    5. '[I' → logprob: -15.625014305114746
    6. 'B' → logprob: -16.000015258789062
    7. '[B' → logprob: -16.375015258789062
    8. 'i' → logprob: -16.375015258789062
    9. '[...]' → logprob: -17.250015258789062
    10. ' [' → logprob: -17.500015258789062

Token 418: ']' (ID: 60)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.6800544261932373
    2. ' %=' → logprob: -1.0550544261932373
    3. '[i' → logprob: -2.0550544261932373
    4. '%' → logprob: -4.305054664611816
    5. '   ' → logprob: -6.930054664611816
    6. ']' → logprob: -7.180054664611816
    7. '=' → logprob: -7.430054664611816
    8. ')' → logprob: -7.555054664611816
    9. ' %' → logprob: -7.930054664611816
    10. '[' → logprob: -8.930054664611816

Token 419: ' =' (ID: 314)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.4773673117160797
    2. ' %=' → logprob: -0.9773672819137573
    3. '%' → logprob: -6.477367401123047
    4. '   ' → logprob: -6.727367401123047
    5. '[i' → logprob: -7.727367401123047
    6. ' %' → logprob: -10.227367401123047
    7. '%i' → logprob: -10.727367401123047
    8. '=' → logprob: -10.852367401123047
    9. '%B' → logprob: -11.602367401123047
    10. ' ' → logprob: -12.477367401123047

Token 420: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1269521564245224
    2. ' B' → logprob: -2.1269521713256836
    3. '   ' → logprob: -11.751952171325684
    4. ' ' → logprob: -12.001952171325684
    5. '(B' → logprob: -12.251952171325684
    6. '	B' → logprob: -12.501952171325684
    7. ' ' → logprob: -15.001952171325684
    8. '%B' → logprob: -15.001952171325684
    9. ' (' → logprob: -15.251952171325684
    10. 'b' → logprob: -16.001951217651367

Token 421: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. 'i' → logprob: -16.25
    4. 'B' → logprob: -17.25
    5. '%i' → logprob: -17.625
    6. '```' → logprob: -18.625
    7. '[I' → logprob: -18.75
    8. '[
' → logprob: -19.0
    9. '%' → logprob: -19.5
    10. '{i' → logprob: -20.25

Token 422: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0032088463194668293
    2. ']' → logprob: -5.878208637237549
    3. 'i' → logprob: -8.378209114074707
    4. '%' → logprob: -9.628209114074707
    5. ']%' → logprob: -9.753209114074707
    6. '[' → logprob: -10.503209114074707
    7. '][' → logprob: -11.128209114074707
    8. '%i' → logprob: -12.503209114074707
    9. '(i' → logprob: -13.503209114074707
    10. '[
' → logprob: -13.878209114074707

Token 423: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03092513419687748
    2. ' %' → logprob: -3.7809250354766846
    3. ' %=' → logprob: -5.655925273895264
    4. '%=' → logprob: -5.905925273895264
    5. '%B' → logprob: -6.905925273895264
    6. '%i' → logprob: -7.780925273895264
    7. '%b' → logprob: -13.530924797058105
    8. '%D' → logprob: -13.655924797058105
    9. '   ' → logprob: -13.780924797058105
    10. '%e' → logprob: -13.905924797058105

Token 424: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01815626211464405
    2. ' MOD' → logprob: -4.018156051635742
    3. '   ' → logprob: -12.768156051635742
    4. '_MOD' → logprob: -12.893156051635742
    5. '.MOD' → logprob: -14.518156051635742
    6. ' ' → logprob: -15.018156051635742
    7. 'MO' → logprob: -16.768156051635742
    8. 'M' → logprob: -17.268156051635742
    9. ' ' → logprob: -17.268156051635742
    10. '  ' → logprob: -17.893156051635742

Token 425: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06308358907699585
    2. '%' → logprob: -3.3130836486816406
    3. '%B' → logprob: -4.188083648681641
    4. ' %=' → logprob: -5.188083648681641
    5. '<|end|>' → logprob: -6.438083648681641
    6. ' %' → logprob: -6.938083648681641
    7. 'B' → logprob: -7.563083648681641
    8. '%=' → logprob: -7.563083648681641
    9. ' B' → logprob: -9.06308364868164
    10. '  ' → logprob: -9.68808364868164

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008748598396778107
    2. ' %=' → logprob: -5.508748531341553
    3. '%' → logprob: -6.008748531341553
    4. '%B' → logprob: -7.008748531341553
    5. 'B' → logprob: -7.508748531341553
    6. '%=' → logprob: -7.883748531341553
    7. ' %' → logprob: -8.508749008178711
    8. ' B' → logprob: -9.008749008178711
    9. '  ' → logprob: -11.008749008178711
    10. ' ' → logprob: -12.008749008178711

Token 427: ' B' (ID: 418)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.3641194999217987
    2. '   ' → logprob: -2.239119529724121
    3. '%=' → logprob: -2.489119529724121
    4. '%' → logprob: -2.864119529724121
    5. 'B' (adapté à ' B') → logprob: -3.239119529724121
    6. '%B' → logprob: -4.489119529724121
    7. ' %' → logprob: -5.239119529724121
    8. ' B' → logprob: -5.989119529724121
    9. ' ' → logprob: -9.364119529724121
    10. '  ' → logprob: -9.864119529724121

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. '%=' → logprob: -14.500005722045898
    4. '%i' → logprob: -15.375005722045898
    5. '%' → logprob: -15.500005722045898
    6. '[I' → logprob: -15.625005722045898
    7. ' %=' → logprob: -16.0000057220459
    8. '[%' → logprob: -16.0000057220459
    9. 'i' → logprob: -16.5000057220459
    10. '```' → logprob: -16.8750057220459

Token 429: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.031157969729975e-05
    2. ')' → logprob: -9.750090599060059
    3. ']%' → logprob: -11.000090599060059
    4. '%' → logprob: -12.000090599060059
    5. '%=' → logprob: -12.000090599060059
    6. ' %=' → logprob: -13.625090599060059
    7. ')%' → logprob: -14.000090599060059
    8. ' ]' → logprob: -14.500090599060059
    9. '#' → logprob: -16.375089645385742
    10. '```' → logprob: -16.375089645385742

Token 430: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.06387892365455627
    2. ' %=' → logprob: -3.0638790130615234
    3. '%' → logprob: -4.188879013061523
    4. ' ' → logprob: -12.438879013061523
    5. '   ' → logprob: -12.563879013061523
    6. ' ' → logprob: -13.813879013061523
    7. '	' → logprob: -13.938879013061523
    8. ' %' → logprob: -13.938879013061523
    9. '=' → logprob: -14.313879013061523
    10. '```' → logprob: -15.188879013061523

Token 431: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.836499985889532e-05
    2. ' MOD' → logprob: -9.7500581741333
    3. 'MO' → logprob: -17.625059127807617
    4. '_MOD' → logprob: -18.375059127807617
    5. '.MOD' → logprob: -19.875059127807617
    6. 'MODE' → logprob: -20.125059127807617
    7. '   ' → logprob: -20.625059127807617
    8. ' ' → logprob: -20.875059127807617
    9. '```' → logprob: -20.875059127807617
    10. 'M' → logprob: -21.125059127807617

Token 432: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6650352478027344
    2. 'result' → logprob: -1.0400352478027344
    3. 'max' → logprob: -3.2900352478027344
    4. 'total' → logprob: -3.6650352478027344
    5. 'sum' → logprob: -3.9150352478027344
    6. 'answer' → logprob: -4.165035247802734
    7. 's' → logprob: -4.540035247802734
    8. 'S' → logprob: -4.665035247802734
    9. 'res' → logprob: -4.915035247802734
    10. 'count' → logprob: -6.415035247802734

Token 434: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.140058994293213
    2. '#' → logprob: -1.265058994293213
    3. 'total' → logprob: -2.390058994293213
    4. 'sum' → logprob: -2.640058994293213
    5. 'C' → logprob: -2.890058994293213
    6. 's' → logprob: -3.140058994293213
    7. 'max' → logprob: -3.265058994293213
    8. 'sorted' → logprob: -3.640058994293213
    9. 'count' → logprob: -4.140058994293213
    10. 'answer' → logprob: -4.140058994293213

Token 435: ' trie' (ID: 139428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6731104254722595
    2. '#' → logprob: -0.7981104254722595
    3. 'continue' → logprob: -4.673110485076904
    4. ' for' → logprob: -4.798110485076904
    5. 's' → logprob: -5.423110485076904
    6. ' #' → logprob: -5.673110485076904
    7. 'def' → logprob: -6.298110485076904
    8. 'sort' → logprob: -6.423110485076904
    9. 'range' → logprob: -6.423110485076904
    10. ' continue' → logprob: -6.423110485076904

Token 436: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01251329854130745
    2. ' C' → logprob: -4.387513160705566
    3. ' la' → logprob: -13.012513160705566
    4. 'B' → logprob: -15.012513160705566
    5. '(C' → logprob: -15.512513160705566
    6. ' the' → logprob: -16.012514114379883
    7. 'la' → logprob: -16.137514114379883
    8. '#' → logprob: -16.262514114379883
    9. ')' → logprob: -16.262514114379883
    10. 's' → logprob: -16.387514114379883

Token 437: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.054887473583221436
    2. ' C' → logprob: -2.929887533187866
    3. 'B' → logprob: -13.304887771606445
    4. ' list' → logprob: -14.304887771606445
    5. 'list' → logprob: -14.804887771606445
    6. ' ' → logprob: -14.804887771606445
    7. 'A' → logprob: -14.804887771606445
    8. 's' → logprob: -14.929887771606445
    9. 'liste' → logprob: -14.929887771606445
    10. ' B' → logprob: -15.804887771606445

Token 438: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005048964521847665
    2. ' C' → logprob: -7.625504970550537
    3. '(C' → logprob: -11.250504493713379
    4. '(' → logprob: -13.125504493713379
    5. '(
' → logprob: -14.625504493713379
    6. ')' → logprob: -14.750504493713379
    7. '()' → logprob: -14.875504493713379
    8. '#' → logprob: -16.000505447387695
    9. ',' → logprob: -16.250505447387695
    10. ' =' → logprob: -16.500505447387695

Token 439: ' par' (ID: 686)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.12726037204265594
    2. '.' → logprob: -2.127260446548462
    3. 'C' → logprob: -8.252260208129883
    4. ' C' → logprob: -10.752260208129883
    5. '.C' → logprob: -11.377260208129883
    6. '=' → logprob: -11.627260208129883
    7. '.c' → logprob: -12.002260208129883
    8. 'sort' → logprob: -12.127260208129883
    9. ' .' → logprob: -12.502260208129883
    10. '.reverse' → logprob: -12.627260208129883

Token 440: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.5073297619819641
    2. ' ordre' → logprob: -1.5073297023773193
    3. 'val' → logprob: -3.2573297023773193
    4. 'reverse' → logprob: -4.007329940795898
    5. 'def' → logprob: -4.007329940795898
    6. 'asc' → logprob: -4.507329940795898
    7. ' défaut' → logprob: -4.507329940795898
    8. '.reverse' → logprob: -4.507329940795898
    9. '.' → logprob: -4.632329940795898
    10. 's' → logprob: -5.382329940795898

Token 441: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.05522064119577408
    2. ' cro' → logprob: -2.930220603942871
    3. ' décro' → logprob: -8.430220603942871
    4. 'asc' → logprob: -9.930220603942871
    5. ' Cro' → logprob: -10.930220603942871
    6. 'Cro' → logprob: -11.180220603942871
    7. 'c' → logprob: -11.430220603942871
    8. 'd' → logprob: -12.180220603942871
    9. '_' → logprob: -12.305220603942871
    10. ' naturel' → logprob: -12.930220603942871

Token 442: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0007136239437386394
    2. 'issent' → logprob: -8.125713348388672
    3. 'issante' → logprob: -8.500713348388672
    4. 'issa' → logprob: -9.500713348388672
    5. '#' → logprob: -10.125713348388672
    6. 'issance' → logprob: -10.250713348388672
    7. 'iss' → logprob: -10.875713348388672
    8. '```' → logprob: -11.375713348388672
    9. 'issan' → logprob: -11.875713348388672
    10. 'i' → logprob: -12.875713348388672

Token 443: ' avec' (ID: 3937)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.263011578586884e-05
    2. '.' → logprob: -10.500042915344238
    3. '.
' → logprob: -11.750042915344238
    4. ' C' → logprob: -13.000042915344238
    5. ',' → logprob: -13.500042915344238
    6. '
' → logprob: -13.750042915344238
    7. '.sort' → logprob: -14.250042915344238
    8. ')' → logprob: -14.500042915344238
    9. '#' → logprob: -15.625042915344238
    10. ',
' → logprob: -15.750042915344238

Token 444: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011951096821576357
    2. ' C' → logprob: -6.751194953918457
    3. ' la' → logprob: -11.251194953918457
    4. 'la' → logprob: -11.501194953918457
    5. 'sort' → logprob: -14.251194953918457
    6. 'sorted' → logprob: -15.251194953918457
    7. 'def' → logprob: -16.001195907592773
    8. '```' → logprob: -16.001195907592773
    9. ' ' → logprob: -16.251195907592773
    10. '.C' → logprob: -16.626195907592773

Token 445: ' méthode' (ID: 71490)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9440807700157166
    2. '.sort' → logprob: -0.9440807700157166
    3. 'sort' → logprob: -1.8190808296203613
    4. 'mé' → logprob: -3.8190808296203613
    5. 'fonction' → logprob: -4.319080829620361
    6. 'sorted' → logprob: -4.819080829620361
    7. '.C' → logprob: -5.194080829620361
    8. ' C' → logprob: -5.819080829620361
    9. ' méthode' → logprob: -6.319080829620361
    10. 'built' → logprob: -7.069080829620361

Token 446: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.004529926925897598
    2. ' sort' → logprob: -5.75452995300293
    3. '.sort' → logprob: -6.62952995300293
    4. 'sorted' → logprob: -10.87952995300293
    5. 'C' → logprob: -12.12952995300293
    6. '	sort' → logprob: -13.25452995300293
    7. ' C' → logprob: -13.50452995300293
    8. ' .' → logprob: -13.87952995300293
    9. '(sort' → logprob: -14.12952995300293
    10. ' sorted' → logprob: -14.62952995300293

Token 447: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005252372473478317
    2. '()
' → logprob: -5.255252361297607
    3. '()`' → logprob: -11.505252838134766
    4. '()
' → logprob: -12.630252838134766
    5. '()

' → logprob: -13.755252838134766
    6. '(C' → logprob: -13.880252838134766
    7. '().' → logprob: -14.130252838134766
    8. 'C' → logprob: -14.380252838134766
    9. '()\' → logprob: -14.630252838134766
    10. '(' → logprob: -15.005252838134766

Token 448: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -16.875
    3. '
' → logprob: -16.875
    4. '```' → logprob: -18.5
    5. 'c' → logprob: -19.875
    6. '#' → logprob: -21.0
    7. ')
' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. 's' → logprob: -22.375
    10. '``' → logprob: -22.5

Token 449: ' Cela' (ID: 44403)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.4121114822482923e-06
    2. ' C' → logprob: -12.625003814697266
    3. '
' → logprob: -17.625003814697266
    4. '```' → logprob: -17.750003814697266
    5. '#' → logprob: -19.000003814697266
    6. 'c' → logprob: -20.375003814697266
    7. ' 
' → logprob: -20.500003814697266
    8. '   ' → logprob: -21.500003814697266
    9. '	C' → logprob: -21.875003814697266
    10. ' ' → logprob: -22.000003814697266

Token 450: ' facilite' (ID: 184546)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.042776379734277725
    2. ' C' → logprob: -3.542776346206665
    3. '.' → logprob: -4.917776584625244
    4. '.sort' → logprob: -5.917776584625244
    5. ' .' → logprob: -7.042776584625244
    6. '.C' → logprob: -7.042776584625244
    7. '()' → logprob: -7.792776584625244
    8. ' ' → logprob: -9.417776107788086
    9. ')' → logprob: -9.417776107788086
    10. '
' → logprob: -9.667776107788086

Token 451: ' certains' (ID: 30681)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.175729513168335
    2. 'la' → logprob: -1.175729513168335
    3. ' la' → logprob: -1.800729513168335
    4. 'l' → logprob: -2.425729513168335
    5. ' C' → logprob: -2.800729513168335
    6. 'le' → logprob: -3.425729513168335
    7. ' l' → logprob: -4.175729751586914
    8. ' le' → logprob: -4.675729751586914
    9. 'les' → logprob: -5.675729751586914
    10. '#' → logprob: -5.925729751586914

Token 452: ' calcul' (ID: 7559)
  Prédit: ' traitements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traitements' → logprob: -0.7804010510444641
    2. 'trait' → logprob: -1.1554009914398193
    3. 'calcul' → logprob: -1.9054009914398193
    4. 'alg' → logprob: -3.5304009914398193
    5. ' calcul' → logprob: -4.030401229858398
    6. 'types' → logprob: -4.030401229858398
    7. ' types' → logprob: -5.405401229858398
    8. '#' → logprob: -6.280401229858398
    9. 'pro' → logprob: -6.280401229858398
    10. 'traits' → logprob: -6.280401229858398

Token 453: 's' (ID: 82)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.006582977715879679
    2. 'ations' → logprob: -5.756583213806152
    3. 's' → logprob: -6.756583213806152
    4. 'ules' → logprob: -7.006583213806152
    5. 'ques' → logprob: -8.381583213806152
    6. 'ages' → logprob: -8.631583213806152
    7. 'us' → logprob: -8.756583213806152
    8. '#' → logprob: -8.881583213806152
    9. 'C' → logprob: -9.006583213806152
    10. 'e' → logprob: -9.756583213806152

Token 454: ' ult' (ID: 11619)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004931025905534625
    2. '()
' → logprob: -8.375493049621582
    3. '
' → logprob: -9.000493049621582
    4. '.
' → logprob: -9.750493049621582
    5. ' C' → logprob: -10.375493049621582
    6. '.' → logprob: -11.250493049621582
    7. '(
' → logprob: -11.375493049621582
    8. '()' → logprob: -11.875493049621582
    9. ')
' → logprob: -12.375493049621582
    10. ',' → logprob: -12.625493049621582

Token 455: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -1.2595041990280151
    2. 'érieur' → logprob: -1.7595041990280151
    3. 'érieure' → logprob: -1.7595041990280151
    4. 'iques' → logprob: -2.7595043182373047
    5. 'ique' → logprob: -3.3845043182373047
    6. 'érieures' → logprob: -3.5095043182373047
    7. 'C' → logprob: -3.6345043182373047
    8. 'istes' → logprob: -3.6345043182373047
    9. 'à' → logprob: -4.384504318237305
    10. '#' → logprob: -4.509504318237305

Token 456: ' où' (ID: 15113)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1875571544806007e-05
    2. '
' → logprob: -11.375011444091797
    3. ' C' → logprob: -15.250011444091797
    4. '()
' → logprob: -17.250011444091797
    5. '```' → logprob: -17.250011444091797
    6. ')
' → logprob: -17.750011444091797
    7. '.
' → logprob: -18.125011444091797
    8. '
' → logprob: -18.625011444091797
    9. '  
' → logprob: -19.125011444091797
    10. '#' → logprob: -19.625011444091797

Token 457: ' l' (ID: 305)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4072379469871521
    2. ' C' → logprob: -1.7822380065917969
    3. ' la' → logprob: -3.282238006591797
    4. ' l' → logprob: -3.407238006591797
    5. 'la' → logprob: -3.657238006591797
    6. 'l' → logprob: -3.657238006591797
    7. ' les' → logprob: -4.157238006591797
    8. 'les' → logprob: -4.532238006591797
    9. ' on' → logprob: -5.532238006591797
    10. 'on' → logprob: -5.782238006591797

Token 458: ''ordre' (ID: 124753)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1802078485488892
    2. 'e' → logprob: -1.3052078485488892
    3. ''ordre' → logprob: -1.4302078485488892
    4. 'a' → logprob: -2.3052077293395996
    5. 'es' → logprob: -4.5552077293396
    6. 'tri' → logprob: -4.5552077293396
    7. '#' → logprob: -4.5552077293396
    8. 'on' → logprob: -4.6802077293396
    9. 'ordre' → logprob: -4.8052077293396
    10. ' C' → logprob: -4.9302077293396

Token 459: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.459793359041214
    2. 'des' → logprob: -2.4597933292388916
    3. 'est' → logprob: -2.5847933292388916
    4. 'C' → logprob: -2.8347933292388916
    5. 'd' → logprob: -3.5847933292388916
    6. ' est' → logprob: -3.5847933292388916
    7. ' C' → logprob: -4.084793567657471
    8. ' de' → logprob: -4.209793567657471
    9. 'cro' → logprob: -4.209793567657471
    10. 'import' → logprob: -4.709793567657471

Token 460: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06246962770819664
    2. ' éléments' → logprob: -2.937469720840454
    3. 'C' → logprob: -5.437469482421875
    4. ' valeurs' → logprob: -6.687469482421875
    5. 'val' → logprob: -7.187469482421875
    6. ' C' → logprob: -8.187469482421875
    7. 'él' → logprob: -8.187469482421875
    8. 'é' → logprob: -8.562469482421875
    9. 'c' → logprob: -8.562469482421875
    10. 'elements' → logprob: -9.312469482421875

Token 461: ' est' (ID: 893)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.015133481472730637
    2. ' C' → logprob: -4.390133380889893
    3. '.sort' → logprob: -6.640133380889893
    4. ' est' → logprob: -7.265133380889893
    5. 'est' → logprob: -8.64013385772705
    6. '.' → logprob: -9.39013385772705
    7. '#' → logprob: -9.39013385772705
    8. 'de' → logprob: -10.14013385772705
    9. '.C' → logprob: -10.26513385772705
    10. 's' → logprob: -10.26513385772705

Token 462: ' important' (ID: 3378)
  Prédit: 'important'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'important' → logprob: -0.018158020451664925
    2. ' important' → logprob: -4.393157958984375
    3. 'import' → logprob: -5.268157958984375
    4. 'cr' → logprob: -8.018157958984375
    5. 'utile' → logprob: -10.643157958984375
    6. ' crucial' → logprob: -10.893157958984375
    7. 'pert' → logprob: -11.143157958984375
    8. 'crit' → logprob: -11.143157958984375
    9. 'ind' → logprob: -11.518157958984375
    10. 'ess' → logprob: -11.518157958984375

Token 463: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.700132997939363e-05
    2. '
' → logprob: -11.000017166137695
    3. ' C' → logprob: -15.875017166137695
    4. '```' → logprob: -16.625017166137695
    5. ')
' → logprob: -17.125017166137695
    6. '.
' → logprob: -17.500017166137695
    7. '()
' → logprob: -17.500017166137695
    8. '  
' → logprob: -18.500017166137695
    9. '#' → logprob: -18.875017166137695
    10. '(C' → logprob: -18.875017166137695

Token 464: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.9361264946837764e-07
    2. ' C' → logprob: -16.625
    3. '
' → logprob: -17.125
    4. '```' → logprob: -18.75
    5. '#' → logprob: -21.5
    6. '   ' → logprob: -22.375
    7. '' → logprob: -23.0
    8. '  
' → logprob: -23.25
    9. 'c' → logprob: -23.375
    10. '\
' → logprob: -23.375

Token 465: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.008616581559181213
    2. '.' → logprob: -4.7586164474487305
    3. ' .' → logprob: -13.50861644744873
    4. '.sorted' → logprob: -15.13361644744873
    5. ').' → logprob: -16.258617401123047
    6. '.s' → logprob: -16.383617401123047
    7. '.reverse' → logprob: -17.133617401123047
    8. '.Sort' → logprob: -17.133617401123047
    9. '​.' → logprob: -17.633617401123047
    10. '	sort' → logprob: -18.133617401123047

Token 466: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.123899558791891e-05
    2. '()
' → logprob: -9.62507152557373
    3. '()

' → logprob: -12.50007152557373
    4. '(' → logprob: -14.12507152557373
    5. '#' → logprob: -15.87507152557373
    6. '())' → logprob: -16.000070571899414
    7. '()
' → logprob: -16.750070571899414
    8. '()`' → logprob: -16.750070571899414
    9. '()\' → logprob: -16.750070571899414
    10. '()]' → logprob: -16.750070571899414

Token 467: '#' (ID: 2)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0094876289367676
    2. 'result' → logprob: -1.2594876289367676
    3. '#' → logprob: -2.1344876289367676
    4. 'sum' → logprob: -2.2594876289367676
    5. 'total' → logprob: -3.3844876289367676
    6. 'res' → logprob: -3.8844876289367676
    7. 'D' → logprob: -4.009487628936768
    8. 's' → logprob: -4.134487628936768
    9. 'answer' → logprob: -4.134487628936768
    10. 'ans' → logprob: -5.009487628936768

Token 468: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3352908492088318
    2. 'answer' → logprob: -2.2102909088134766
    3. 'res' → logprob: -2.9602909088134766
    4. 'ans' → logprob: -3.2102909088134766
    5. 'S' → logprob: -3.3352909088134766
    6. 'total' → logprob: -3.8352909088134766
    7. 'sum' → logprob: -4.710290908813477
    8. '#' → logprob: -5.210290908813477
    9. 'dp' → logprob: -5.210290908813477
    10. 's' → logprob: -6.210290908813477

Token 469: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.6248329281806946
    2. '_sum' → logprob: -1.6248328685760498
    3. 'iser' → logprob: -2.24983286857605
    4. 'e' → logprob: -2.62483286857605
    5. '#' → logprob: -3.37483286857605
    6. 'izer' → logprob: -4.374833106994629
    7. 'sum' → logprob: -4.874833106994629
    8. 'er' → logprob: -5.249833106994629
    9. 'ise' → logprob: -5.249833106994629
    10. 'isez' → logprob: -5.874833106994629

Token 470: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7848464250564575
    2. ' result' → logprob: -1.2848464250564575
    3. 'answer' → logprob: -2.284846305847168
    4. 'ans' → logprob: -2.659846305847168
    5. 'res' → logprob: -3.159846305847168
    6. ' answer' → logprob: -3.534846305847168
    7. ' ans' → logprob: -4.284846305847168
    8. ' res' → logprob: -5.534846305847168
    9. 'total' → logprob: -5.784846305847168
    10. 'sum' → logprob: -7.159846305847168

Token 471: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20967119932174683
    2. 'answer' → logprob: -1.9596712589263916
    3. 'res' → logprob: -3.4596712589263916
    4. 'rés' → logprob: -5.2096710205078125
    5. 'ans' → logprob: -5.3346710205078125
    6. 's' → logprob: -5.7096710205078125
    7. 'sum' → logprob: -6.8346710205078125
    8. 'total' → logprob: -7.0846710205078125
    9. 'diff' → logprob: -8.209671020507812
    10. ' result' → logprob: -8.459671020507812

Token 472: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5449216961860657
    2. 'answer' → logprob: -1.044921636581421
    3. 'ans' → logprob: -2.919921636581421
    4. 'res' → logprob: -4.669921875
    5. ' result' → logprob: -6.669921875
    6. ' answer' → logprob: -7.169921875
    7. 'diff' → logprob: -7.169921875
    8. 'total' → logprob: -7.544921875
    9. 'sum' → logprob: -7.794921875
    10. 's' → logprob: -8.294921875

Token 473: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028062984347343445
    2. '=' → logprob: -5.877806186676025
    3. ' ' → logprob: -13.752806663513184
    4. ' ' → logprob: -15.752806663513184
    5. 'ans' → logprob: -16.502805709838867
    6. 's' → logprob: -16.752805709838867
    7. ' ans' → logprob: -17.002805709838867
    8. '0' → logprob: -17.502805709838867
    9. ' =
' → logprob: -18.002805709838867
    10. ',' → logprob: -18.252805709838867

Token 474: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -18.000015258789062
    4. ' ' → logprob: -18.125015258789062
    5. 'C' → logprob: -19.125015258789062
    6. '=' → logprob: -19.312515258789062
    7. '０' → logprob: -19.437515258789062
    8. '```' → logprob: -19.500015258789062
    9. '1' → logprob: -19.562515258789062
    10. '(' → logprob: -20.312515258789062

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -19.125
    4. 'ans' → logprob: -19.5
    5. '```' → logprob: -19.875
    6. '1' → logprob: -20.375
    7. '=' → logprob: -20.5625
    8. '０' → logprob: -20.5625
    9. 'int' → logprob: -20.625
    10. '(' → logprob: -21.125

Token 476: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.080963092041202e-06
    2. ' ans' → logprob: -12.250004768371582
    3. '(ans' → logprob: -15.625004768371582
    4. '	ans' → logprob: -16.6250057220459
    5. '
' → logprob: -17.5000057220459
    6. 'answer' → logprob: -17.8750057220459
    7. '_ans' → logprob: -18.5000057220459
    8. 'a' → logprob: -19.3750057220459
    9. '=' → logprob: -19.8750057220459
    10. '0' → logprob: -20.1250057220459

Token 477: ' qui' (ID: 2780)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04312650486826897
    2. 'ans' → logprob: -3.1681265830993652
    3. '0' → logprob: -10.543126106262207
    4. '	ans' → logprob: -10.543126106262207
    5. '(ans' → logprob: -10.668126106262207
    6. ' ' → logprob: -10.668126106262207
    7. '_ans' → logprob: -11.043126106262207
    8. ' =' → logprob: -12.293126106262207
    9. ' 
' → logprob: -13.543126106262207
    10. ' ' → logprob: -13.918126106262207

Token 478: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2369672060012817
    2. ' sera' → logprob: -1.6119672060012817
    3. '=' → logprob: -1.8619672060012817
    4. ' va' → logprob: -2.736967086791992
    5. ' #' → logprob: -2.861967086791992
    6. '#' → logprob: -2.861967086791992
    7. 'sera' → logprob: -3.986967086791992
    8. '_' → logprob: -3.986967086791992
    9. ' serv' → logprob: -4.236967086791992
    10. ' ' → logprob: -4.361967086791992

Token 479: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0940050333738327
    2. 'ient' → logprob: -3.5940051078796387
    3. 'e' → logprob: -3.8440051078796387
    4. ' =' → logprob: -4.344005107879639
    5. 'ans' → logprob: -4.969005107879639
    6. 'est' → logprob: -5.469005107879639
    7. '#' → logprob: -6.094005107879639
    8. 'ont' → logprob: -6.594005107879639
    9. 'i' → logprob: -6.844005107879639
    10. 'er' → logprob: -6.844005107879639

Token 480: 'endra' (ID: 32364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09300306439399719
    2. 'dent' → logprob: -2.843003034591675
    3. 'd' → logprob: -4.718003273010254
    4. 'de' → logprob: -5.093003273010254
    5. 'tal' → logprob: -5.468003273010254
    6. 'dera' → logprob: -6.343003273010254
    7. 'der' → logprob: -6.468003273010254
    8. 'def' → logprob: -6.468003273010254
    9. 'tent' → logprob: -6.593003273010254
    10. '=' → logprob: -6.968003273010254

Token 481: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032600578851997852
    2. 'ans' → logprob: -6.003260135650635
    3. ' ' → logprob: -7.253260135650635
    4. ' ans' → logprob: -10.128259658813477
    5. ' la' → logprob: -10.628259658813477
    6. 'la' → logprob: -12.003259658813477
    7. '   ' → logprob: -13.503259658813477
    8. '(ans' → logprob: -14.128259658813477
    9. '=' → logprob: -14.378259658813477
    10. 'l' → logprob: -14.378259658813477

Token 482: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.38475027680397034
    2. '0' → logprob: -2.1347503662109375
    3. 'result' → logprob: -2.1347503662109375
    4. 'answer' → logprob: -2.8847503662109375
    5. 's' → logprob: -4.5097503662109375
    6. ' résultat' → logprob: -5.3847503662109375
    7. 'sum' → logprob: -5.7597503662109375
    8. 'rés' → logprob: -6.2597503662109375
    9. ' result' → logprob: -6.5097503662109375
    10. ' ans' → logprob: -6.6347503662109375

Token 483: ' final' (ID: 1721)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.875000953674316
    3. '=' → logprob: -15.500000953674316
    4. '(ans' → logprob: -16.625
    5. ' =' → logprob: -17.375
    6. '	ans' → logprob: -18.375
    7. '0' → logprob: -19.0
    8. '
' → logprob: -19.125
    9. 'a' → logprob: -19.25
    10. 'answer' → logprob: -19.5

Token 484: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.008129963040119e-06
    2. ' ans' → logprob: -13.000003814697266
    3. '
' → logprob: -13.875003814697266
    4. '(ans' → logprob: -14.750003814697266
    5. '	ans' → logprob: -16.250003814697266
    6. '=' → logprob: -16.500003814697266
    7. ' =' → logprob: -16.750003814697266
    8. 'answer' → logprob: -17.250003814697266
    9. '_ans' → logprob: -18.125003814697266
    10. '0' → logprob: -18.750003814697266

Token 485: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -17.0
    3. 'a' → logprob: -18.125
    4. '	ans' → logprob: -18.375
    5. '(ans' → logprob: -18.75
    6. 'answer' → logprob: -19.125
    7. '```' → logprob: -20.125
    8. 'anst' → logprob: -21.0
    9. 'ann' → logprob: -21.25
    10. '_ans' → logprob: -21.375

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245712742209435
    2. '=' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.398244857788086
    4. ' ' → logprob: -17.523244857788086
    5. ',' → logprob: -18.023244857788086
    6. ' +=' → logprob: -18.148244857788086
    7. ')' → logprob: -18.898244857788086
    8. '.' → logprob: -19.273244857788086
    9. 's' → logprob: -19.398244857788086
    10. '_' → logprob: -19.523244857788086

Token 487: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.876502990722656
    4. '۰' → logprob: -18.126502990722656
    5. ' ' → logprob: -18.439002990722656
    6. '  ' → logprob: -20.314002990722656
    7. '=' → logprob: -20.501502990722656
    8. '000' → logprob: -20.564002990722656
    9. '０' → logprob: -20.564002990722656
    10. '(' → logprob: -20.939002990722656

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -19.5
    4. '０' → logprob: -21.0
    5. 'int' → logprob: -21.125
    6. '000' → logprob: -21.4375
    7. '   ' → logprob: -22.0
    8. '(' → logprob: -22.1875
    9. '০' → logprob: -22.4375
    10. '00' → logprob: -22.6875

Token 489: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027371125761419535
    2. ' for' → logprob: -6.002737045288086
    3. '
' → logprob: -8.377737045288086
    4. '<|end|>' → logprob: -10.502737045288086
    5. '#' → logprob: -13.377737045288086
    6. ')' → logprob: -14.627737045288086
    7. '' → logprob: -15.002737045288086
    8. '```' → logprob: -15.252737045288086
    9. '.' → logprob: -15.377737045288086
    10. '\' → logprob: -15.377737045288086

Token 490: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.842555426876061e-06
    2. ' for' → logprob: -12.250004768371582
    3. 'i' → logprob: -18.2500057220459
    4. ')' → logprob: -18.5000057220459
    5. 'n' → logprob: -20.1250057220459
    6. '```' → logprob: -20.5000057220459
    7. '	for' → logprob: -20.6250057220459
    8. 'range' → logprob: -20.8750057220459
    9. '#' → logprob: -21.1250057220459
    10. 'N' → logprob: -21.3750057220459

Token 491: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -15.000000953674316
    3. '#' → logprob: -15.500000953674316
    4. 'i' → logprob: -16.0
    5. 'from' → logprob: -17.0
    6. 'n' → logprob: -17.375
    7. 'fo' → logprob: -18.375
    8. 'range' → logprob: -19.125
    9. 'def' → logprob: -19.25
    10. '	for' → logprob: -19.625

Token 492: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.1252293437719345
    2. 'or' → logprob: -2.6252293586730957
    3. 'for' → logprob: -3.6252293586730957
    4. 'er' → logprob: -4.875229358673096
    5. '#' → logprob: -5.375229358673096
    6. 'ur' → logprob: -5.875229358673096
    7. ' for' → logprob: -6.500229358673096
    8. 'ours' → logprob: -7.500229358673096
    9. 'o' → logprob: -7.875229358673096
    10. 'i' → logprob: -8.375228881835938

Token 493: 'ir' (ID: 380)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11365706473588943
    2. ' for' → logprob: -2.363656997680664
    3. 'i' → logprob: -4.863656997680664
    4. 'ir' → logprob: -5.363656997680664
    5. 'er' → logprob: -7.238656997680664
    6. 'r' → logprob: -9.738656997680664
    7. 'e' → logprob: -9.738656997680664
    8. 'u' → logprob: -10.363656997680664
    9. '#' → logprob: -10.488656997680664
    10. ' i' → logprob: -10.613656997680664

Token 494: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.606220543384552
    2. 'i' → logprob: -0.981220543384552
    3. ' range' → logprob: -2.7312204837799072
    4. 'range' → logprob: -4.231220722198486
    5. '(range' → logprob: -11.231220245361328
    6. ' ' → logprob: -11.356220245361328
    7. ' for' → logprob: -11.606220245361328
    8. '   ' → logprob: -11.981220245361328
    9. '(i' → logprob: -12.106220245361328
    10. 'for' → logprob: -12.356220245361328

Token 495: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38632115721702576
    2. 'range' → logprob: -1.2613211870193481
    3. '(i' → logprob: -4.136321067810059
    4. '(range' → logprob: -4.386321067810059
    5. ' range' → logprob: -5.386321067810059
    6. ' i' → logprob: -5.636321067810059
    7. '(' → logprob: -7.761321067810059
    8. 'enumer' → logprob: -8.886321067810059
    9. '   ' → logprob: -12.761321067810059
    10. '	range' → logprob: -12.886321067810059

Token 496: ' ent' (ID: 1121)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4858311414718628
    2. 'i' → logprob: -0.9858311414718628
    3. ' range' → logprob: -4.485831260681152
    4. ' i' → logprob: -7.985831260681152
    5. 'index' → logprob: -10.235831260681152
    6. 'C' → logprob: -10.860831260681152
    7. 'enumer' → logprob: -11.985831260681152
    8. '(range' → logprob: -12.110831260681152
    9. 'indices' → logprob: -12.110831260681152
    10. 'rang' → logprob: -13.360831260681152

Token 497: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.18101628124713898
    2. 'ements' → logprob: -1.9310163259506226
    3. 'éments' → logprob: -4.931016445159912
    4. 'ments' → logprob: -6.431016445159912
    5. '```' → logprob: -6.556016445159912
    6. 'ier' → logprob: -6.556016445159912
    7. 'ents' → logprob: -6.931016445159912
    8. 'ières' → logprob: -7.056016445159912
    9. 'i' → logprob: -7.056016445159912
    10. 'iments' → logprob: -7.181016445159912

Token 498: ' n' (ID: 297)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2802177667617798
    2. 'i' → logprob: -2.2802176475524902
    3. 'range' → logprob: -2.7802176475524902
    4. '(range' → logprob: -3.5302176475524902
    5. 'in' → logprob: -4.40521764755249
    6. 'for' → logprob: -4.40521764755249
    7. '(' → logprob: -4.40521764755249
    8. ' i' → logprob: -4.78021764755249
    9. ' in' → logprob: -6.15521764755249
    10. ' range' → logprob: -6.40521764755249

Token 499: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12006282806396484
    2. ' range' → logprob: -3.120062828063965
    3. 'in' → logprob: -4.370062828063965
    4. '(range' → logprob: -4.620062828063965
    5. ' in' → logprob: -4.870062828063965
    6. 'e' → logprob: -4.870062828063965
    7. 'um' → logprob: -5.370062828063965
    8. 'en' → logprob: -5.495062828063965
    9. 'ge' → logprob: -5.870062828063965
    10. 'u' → logprob: -5.870062828063965

Token 500: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022031900007277727
    2. ' range' → logprob: -6.127202987670898
    3. 'C' → logprob: -11.127202987670898
    4. '(range' → logprob: -14.002202987670898
    5. 'rang' → logprob: -14.377202987670898
    6. ' C' → logprob: -14.877202987670898
    7. '	range' → logprob: -15.127202987670898
    8. ' ' → logprob: -15.377202987670898
    9. 'r' → logprob: -15.502202987670898
    10. '   ' → logprob: -15.502202987670898

Token 501: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.0219828002154827e-05
    2. ' range' → logprob: -10.875020027160645
    3. 'C' → logprob: -14.500020027160645
    4. '(range' → logprob: -14.875020027160645
    5. '0' → logprob: -15.375020027160645
    6. 'rang' → logprob: -17.37502098083496
    7. 'r' → logprob: -18.25002098083496
    8. '	range' → logprob: -18.37502098083496
    9. '   ' → logprob: -18.75002098083496
    10. ')' → logprob: -19.37502098083496

Token 502: ' à' (ID: 1221)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.826735258102417
    2. 'range' → logprob: -1.451735258102417
    3. ' in' → logprob: -1.826735258102417
    4. ' to' → logprob: -2.326735258102417
    5. 'to' → logprob: -3.701735258102417
    6. 'in' → logprob: -3.826735258102417
    7. ',' → logprob: -4.451735496520996
    8. ' ' → logprob: -5.326735496520996
    9. '
' → logprob: -6.576735496520996
    10. '  ' → logprob: -7.326735496520996

Token 503: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.816093228830141e-06
    2. ' N' → logprob: -12.87500286102295
    3. '(N' → logprob: -15.87500286102295
    4. 'n' → logprob: -18.000001907348633
    5. '
' → logprob: -18.750001907348633
    6. '(' → logprob: -19.000001907348633
    7. 'len' → logprob: -20.250001907348633
    8. '	N' → logprob: -20.375001907348633
    9. ' (' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.000001907348633

Token 504: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2206641137599945
    2. ' for' → logprob: -1.970664143562317
    3. 'range' → logprob: -3.5956640243530273
    4. ' range' → logprob: -4.595664024353027
    5. ' in' → logprob: -4.595664024353027
    6. 'in' → logprob: -4.720664024353027
    7. ':' → logprob: -7.095664024353027
    8. '(range' → logprob: -7.470664024353027
    9. '(' → logprob: -8.345664024353027
    10. ',' → logprob: -8.470664024353027

Token 505: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012730928137898445
    2. ' for' → logprob: -7.376273155212402
    3. 'range' → logprob: -8.126273155212402
    4. '
' → logprob: -8.501273155212402
    5. ':' → logprob: -9.626273155212402
    6. ':
' → logprob: -10.376273155212402
    7. 'in' → logprob: -10.626273155212402
    8. '(range' → logprob: -10.876273155212402
    9. '(' → logprob: -13.001273155212402
    10. '```' → logprob: -13.001273155212402

Token 506: 'attention' (ID: 126213)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3429875373840332
    2. 'for' → logprob: -1.5929875373840332
    3. ' range' → logprob: -2.717987537384033
    4. '1' → logprob: -4.592987537384033
    5. ' for' → logprob: -5.217987537384033
    6. ')' → logprob: -5.592987537384033
    7. 'N' → logprob: -6.967987537384033
    8. '
' → logprob: -7.967987537384033
    9. 'n' → logprob: -8.342987060546875
    10. '   ' → logprob: -10.092987060546875

Token 507: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20805740356445312
    2. ',' → logprob: -2.333057403564453
    3. ')' → logprob: -2.708057403564453
    4. ' ):' → logprob: -4.833057403564453
    5. ' in' → logprob: -5.083057403564453
    6. 'in' → logprob: -5.583057403564453
    7. '):
' → logprob: -6.208057403564453
    8. ':' → logprob: -6.333057403564453
    9. 'for' → logprob: -7.333057403564453
    10. ' ,' → logprob: -7.833057403564453

Token 508: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8128495216369629
    2. 'range' → logprob: -0.8128495216369629
    3. ' range' → logprob: -2.437849521636963
    4. ' N' → logprob: -3.937849521636963
    5. '1' → logprob: -5.437849521636963
    6. ')' → logprob: -7.187849521636963
    7. 'n' → logprob: -8.312849044799805
    8. '   ' → logprob: -9.062849044799805
    9. '(N' → logprob: -9.187849044799805
    10. ' ' → logprob: -9.562849044799805

Token 509: ''ind' (ID: 82245)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6408480405807495
    2. 'range' → logprob: -0.7658480405807495
    3. 'ange' → logprob: -5.140848159790039
    4. 'N' → logprob: -6.515848159790039
    5. ' N' → logprob: -8.265848159790039
    6. '```' → logprob: -8.765848159790039
    7. '   ' → logprob: -9.015848159790039
    8. ')' → logprob: -10.015848159790039
    9. '(range' → logprob: -10.140848159790039
    10. '1' → logprob: -10.265848159790039

Token 510: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00474244961515069
    2. 'ice' → logprob: -5.504742622375488
    3. 'ices' → logprob: -8.379742622375488
    4. 'e' → logprob: -8.629742622375488
    5. 'range' → logprob: -8.754742622375488
    6. 'exe' → logprob: -10.379742622375488
    7. '```' → logprob: -11.004742622375488
    8. 'dex' → logprob: -11.004742622375488
    9. ' range' → logprob: -11.129742622375488
    10. '#' → logprob: -12.254742622375488

Token 511: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22412917017936707
    2. '(' → logprob: -2.8491291999816895
    3. ',' → logprob: -3.4741291999816895
    4. '1' → logprob: -3.7241291999816895
    5. '(N' → logprob: -4.0991291999816895
    6. 'range' → logprob: -4.0991291999816895
    7. ')' → logprob: -4.2241291999816895
    8. 'in' → logprob: -4.4741291999816895
    9. ':' → logprob: -4.5991291999816895
    10. ' ' → logprob: -5.3491291999816895

Token 512: ' car' (ID: 1669)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.43171507120132446
    2. ' N' → logprob: -2.1817150115966797
    3. 'range' → logprob: -2.5567150115966797
    4. 'n' → logprob: -2.9317150115966797
    5. 'i' → logprob: -3.8067150115966797
    6. ' range' → logprob: -3.9317150115966797
    7. ' n' → logprob: -4.18171501159668
    8. 'start' → logprob: -4.55671501159668
    9. ' i' → logprob: -4.68171501159668
    10. ')' → logprob: -4.93171501159668

Token 513: ' les' (ID: 1341)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2530539333820343
    2. 'range' → logprob: -2.253053903579712
    3. ' N' → logprob: -2.753053903579712
    4. ' range' → logprob: -3.128053903579712
    5. '0' → logprob: -5.628054141998291
    6. 'n' → logprob: -5.753054141998291
    7. 'i' → logprob: -6.253054141998291
    8. ' i' → logprob: -7.503054141998291
    9. 'len' → logprob: -7.503054141998291
    10. ' n' → logprob: -8.253053665161133

Token 514: ' listes' (ID: 179198)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6745282411575317
    2. 'i' → logprob: -1.2995282411575317
    3. ' range' → logprob: -1.7995282411575317
    4. 'N' → logprob: -4.174528121948242
    5. ' i' → logprob: -4.174528121948242
    6. 'n' → logprob: -4.799528121948242
    7. 'for' → logprob: -5.674528121948242
    8. ' for' → logprob: -6.049528121948242
    9. '0' → logprob: -6.174528121948242
    10. 'len' → logprob: -7.049528121948242

Token 515: ' commencent' (ID: 184941)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5567302107810974
    2. 'range' → logprob: -1.6817302703857422
    3. ' in' → logprob: -2.806730270385742
    4. ' =' → logprob: -2.931730270385742
    5. ')' → logprob: -3.681730270385742
    6. ' for' → logprob: -3.806730270385742
    7. ':' → logprob: -3.931730270385742
    8. 'in' → logprob: -4.306730270385742
    9. '[' → logprob: -4.681730270385742
    10. 'for' → logprob: -4.681730270385742

Token 516: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6064153909683228
    2. 'à' → logprob: -0.9814153909683228
    3. 'at' → logprob: -2.981415271759033
    4. 'from' → logprob: -4.231415271759033
    5. ' at' → logprob: -4.481415271759033
    6. '0' → logprob: -6.481415271759033
    7. 'de' → logprob: -7.231415271759033
    8. '=' → logprob: -8.106415748596191
    9. '   ' → logprob: -8.856415748596191
    10. ' from' → logprob: -9.106415748596191

Token 517: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -13.375003814697266
    3. 'index' → logprob: -13.375003814697266
    4. 'zero' → logprob: -15.500003814697266
    5. ' ' → logprob: -15.625003814697266
    6. '```' → logprob: -16.500003814697266
    7. '[' → logprob: -17.250003814697266
    8. ' zéro' → logprob: -18.000003814697266
    9. 'indice' → logprob: -18.000003814697266
    10. 'i' → logprob: -19.125003814697266

Token 518: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -15.625000953674316
    4. 'index' → logprob: -15.875000953674316
    5. '[' → logprob: -17.375001907348633
    6. 'z' → logprob: -17.500001907348633
    7. 'zero' → logprob: -17.625001907348633
    8. ' zéro' → logprob: -17.750001907348633
    9. '```' → logprob: -18.125001907348633
    10. ')' → logprob: -18.500001907348633

Token 519: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14140352606773376
    2. '):' → logprob: -3.2664034366607666
    3. ' for' → logprob: -3.5164034366607666
    4. ')' → logprob: -3.8914034366607666
    5. 'range' → logprob: -4.391403675079346
    6. ':' → logprob: -4.391403675079346
    7. ',' → logprob: -5.141403675079346
    8. '):
' → logprob: -5.391403675079346
    9. 'in' → logprob: -5.641403675079346
    10. '
' → logprob: -6.016403675079346

Token 520: ' Python' (ID: 26534)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5821047425270081
    2. ' range' → logprob: -0.8321047425270081
    3. 'python' → logprob: -5.332104682922363
    4. '0' → logprob: -8.082104682922363
    5. ' Python' → logprob: -8.207104682922363
    6. 'Python' → logprob: -8.207104682922363
    7. ')' → logprob: -8.582104682922363
    8. ' python' → logprob: -8.832104682922363
    9. '```' → logprob: -9.457104682922363
    10. 'ython' → logprob: -10.457104682922363

Token 521: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14215749502182007
    2. ' for' → logprob: -2.642157554626465
    3. ':' → logprob: -3.642157554626465
    4. ')' → logprob: -4.017157554626465
    5. '):' → logprob: -4.267157554626465
    6. 'range' → logprob: -6.142157554626465
    7. ',' → logprob: -7.767157554626465
    8. ' range' → logprob: -8.517157554626465
    9. '(range' → logprob: -9.517157554626465
    10. 'in' → logprob: -9.892157554626465

Token 522: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024781543761491776
    2. ' for' → logprob: -6.002478122711182
    3. 'range' → logprob: -13.25247859954834
    4. '
' → logprob: -14.37747859954834
    5. 'n' → logprob: -16.127477645874023
    6. '	for' → logprob: -17.752477645874023
    7. ' range' → logprob: -17.752477645874023
    8. 'i' → logprob: -18.002477645874023
    9. 'from' → logprob: -18.252477645874023
    10. '```' → logprob: -18.752477645874023

Token 523: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6546255350112915
    2. 'i' → logprob: -0.7796255350112915
    3. ' i' → logprob: -4.404625415802002
    4. ' n' → logprob: -4.654625415802002
    5. '	n' → logprob: -11.77962589263916
    6. ' ' → logprob: -11.90462589263916
    7. '	i' → logprob: -12.15462589263916
    8. '   ' → logprob: -12.27962589263916
    9. 'index' → logprob: -12.52962589263916
    10. 'x' → logprob: -12.65462589263916

Token 524: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06223801150918007
    2. 'in' → logprob: -2.8122379779815674
    3. ' ' → logprob: -8.437237739562988
    4. 'n' → logprob: -11.187237739562988
    5. ')' → logprob: -12.187237739562988
    6. 's' → logprob: -12.437237739562988
    7. '	in' → logprob: -12.562237739562988
    8. '   ' → logprob: -12.937237739562988
    9. 'space' → logprob: -12.937237739562988
    10. 'range' → logprob: -13.062237739562988

Token 525: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804286941885948
    2. ' range' → logprob: -3.2880427837371826
    3. '   ' → logprob: -14.788043022155762
    4. ' ' → logprob: -14.913043022155762
    5. '	range' → logprob: -15.288043022155762
    6. '(range' → logprob: -15.413043022155762
    7. '  ' → logprob: -16.538042068481445
    8. ')' → logprob: -17.538042068481445
    9. '1' → logprob: -17.788042068481445
    10. 'r' → logprob: -18.038042068481445

Token 526: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3869524896144867
    2. '(' → logprob: -1.136952519416809
    3. '(n' → logprob: -10.13695240020752
    4. '1' → logprob: -10.38695240020752
    5. '(
' → logprob: -12.01195240020752
    6. 'N' → logprob: -12.38695240020752
    7. ' (' → logprob: -14.51195240020752
    8. '(len' → logprob: -16.261953353881836
    9. '(M' → logprob: -16.886953353881836
    10. '0' → logprob: -17.011953353881836

Token 527: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006527475197799504
    2. '1' → logprob: -7.37565279006958
    3. '0' → logprob: -10.750652313232422
    4. '(N' → logprob: -12.500652313232422
    5. ' N' → logprob: -14.250652313232422
    6. '(' → logprob: -15.500652313232422
    7. 'n' → logprob: -15.625652313232422
    8. '	N' → logprob: -16.375652313232422
    9. '   ' → logprob: -18.625652313232422
    10. '2' → logprob: -18.625652313232422

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.514650183613412e-05
    2. ',N' → logprob: -10.125055313110352
    3. ' ,' → logprob: -11.125055313110352
    4. 'N' → logprob: -16.12505531311035
    5. '1' → logprob: -16.25005531311035
    6. ',n' → logprob: -16.87505531311035
    7. '，' → logprob: -17.50005531311035
    8. '(N' → logprob: -18.12505531311035
    9. ',len' → logprob: -18.37505531311035
    10. '   ' → logprob: -18.62505531311035

Token 529: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.5491004129871726e-05
    2. ' N' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.875045776367188
    4. 'len' → logprob: -21.750045776367188
    5. '	N' → logprob: -21.875045776367188
    6. ' ' → logprob: -22.250045776367188
    7. 'n' → logprob: -22.625045776367188
    8. '```' → logprob: -22.750045776367188
    9. ')' → logprob: -23.875045776367188
    10. '  ' → logprob: -24.750045776367188

Token 530: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012415809032972902
    2. ' +' → logprob: -9.125123977661133
    3. '):' → logprob: -11.250123977661133
    4. '):
' → logprob: -13.375123977661133
    5. '+
' → logprob: -14.500123977661133
    6. '+:' → logprob: -17.000123977661133
    7. '+n' → logprob: -17.250123977661133
    8. '```' → logprob: -17.500123977661133
    9. '
' → logprob: -17.625123977661133
    10. ')' → logprob: -17.750123977661133

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062370967119932175
    2. '+' → logprob: -2.812371015548706
    3. 'N' → logprob: -8.312371253967285
    4. ')' → logprob: -9.562371253967285
    5. ' ' → logprob: -10.812371253967285
    6. 'n' → logprob: -10.937371253967285
    7. ' +' → logprob: -11.187371253967285
    8. '```' → logprob: -11.812371253967285
    9. 'len' → logprob: -12.187371253967285
    10. 'i' → logprob: -12.312371253967285

Token 532: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018220659694634378
    2. '):
' → logprob: -8.625182151794434
    3. ')' → logprob: -13.750182151794434
    4. ':' → logprob: -13.875182151794434
    5. ' ):' → logprob: -14.625182151794434
    6. '):
' → logprob: -16.37518310546875
    7. '}:' → logprob: -17.50018310546875
    8. ']:' → logprob: -17.87518310546875
    9. '   ' → logprob: -18.50018310546875
    10. '+' → logprob: -19.50018310546875

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011777707375586033
    2. 'ans' → logprob: -5.136777877807617
    3. ' ans' → logprob: -5.511777877807617
    4. '	ans' → logprob: -7.511777877807617
    5. ':' → logprob: -8.011777877807617
    6. '(ans' → logprob: -8.136777877807617
    7. ')' → logprob: -8.761777877807617
    8. '   ' → logprob: -9.386777877807617
    9. '```' → logprob: -9.636777877807617
    10. '  ' → logprob: -9.761777877807617

Token 534: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06355388462543488
    2. ' ans' → logprob: -3.438553810119629
    3. '   ' → logprob: -3.563553810119629
    4. '	ans' → logprob: -7.063553810119629
    5. 'diff' → logprob: -9.063553810119629
    6. '(ans' → logprob: -9.688553810119629
    7. 'anst' → logprob: -10.938553810119629
    8. '   ' → logprob: -11.188553810119629
    9. 'val' → logprob: -11.813553810119629
    10. 'a' → logprob: -11.938553810119629

Token 535: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01227664016187191
    2. 'diff' → logprob: -4.762276649475098
    3. 'val' → logprob: -5.887276649475098
    4. 'value' → logprob: -9.012276649475098
    5. '#' → logprob: -9.012276649475098
    6. 'x' → logprob: -9.137276649475098
    7. 'difference' → logprob: -9.137276649475098
    8. 'temp' → logprob: -9.512276649475098
    9. ' ans' → logprob: -10.012276649475098
    10. 'delta' → logprob: -10.262276649475098

Token 536: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1048135831952095
    2. ' i' → logprob: -3.104813575744629
    3. 'n' → logprob: -3.604813575744629
    4. 'ans' → logprob: -3.979813575744629
    5. ' ans' → logprob: -5.229813575744629
    6. ' n' → logprob: -6.354813575744629
    7. ')' → logprob: -6.979813575744629
    8. '#' → logprob: -8.479813575744629
    9. '0' → logprob: -9.354813575744629
    10. ']' → logprob: -9.854813575744629

Token 537: ' élément' (ID: 99627)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08132943511009216
    2. ' n' → logprob: -3.456329345703125
    3. 'element' → logprob: -4.581329345703125
    4. 'i' → logprob: -4.831329345703125
    5. 'C' → logprob: -5.081329345703125
    6. ' element' → logprob: -5.456329345703125
    7. 'val' → logprob: -5.581329345703125
    8. 'value' → logprob: -5.831329345703125
    9. 'ans' → logprob: -6.206329345703125
    10. ' C' → logprob: -6.331329345703125

Token 538: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7535179257392883
    2. ':' → logprob: -0.8785179257392883
    3. '-' → logprob: -3.2535178661346436
    4. 'C' → logprob: -4.003518104553223
    5. '):' → logprob: -4.003518104553223
    6. ',' → logprob: -4.378518104553223
    7. ')' → logprob: -4.503518104553223
    8. '(' → logprob: -5.753518104553223
    9. 'ans' → logprob: -6.003518104553223
    10. ' :' → logprob: -6.378518104553223

Token 539: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06565526872873306
    2. ' ans' → logprob: -3.44065523147583
    3. 'val' → logprob: -4.56565523147583
    4. '#' → logprob: -4.81565523147583
    5. '   ' → logprob: -4.81565523147583
    6. 'diff' → logprob: -6.31565523147583
    7. 'value' → logprob: -6.69065523147583
    8. 'x' → logprob: -7.94065523147583
    9. ' #' → logprob: -8.440655708312988
    10. ' val' → logprob: -8.815655708312988

Token 540: ' effect' (ID: 3159)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008218208327889442
    2. '#' → logprob: -5.883218288421631
    3. ' ans' → logprob: -5.883218288421631
    4. 'aj' → logprob: -6.758218288421631
    5. 'n' → logprob: -8.758217811584473
    6. '(ans' → logprob: -8.883217811584473
    7. 's' → logprob: -9.008217811584473
    8. '=' → logprob: -9.133217811584473
    9. 'diff' → logprob: -9.508217811584473
    10. ' #' → logprob: -9.633217811584473

Token 541: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.005662956740707159
    2. 'uer' → logprob: -5.25566291809082
    3. 'u' → logprob: -8.13066291809082
    4. 'ure' → logprob: -9.63066291809082
    5. 'uera' → logprob: -10.50566291809082
    6. 'uez' → logprob: -10.75566291809082
    7. 'ué' → logprob: -11.63066291809082
    8. 'ues' → logprob: -12.13066291809082
    9. 'uere' → logprob: -12.50566291809082
    10. 'uate' → logprob: -13.75566291809082

Token 542: ' un' (ID: 537)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3286052942276001
    2. ' ans' → logprob: -1.3286052942276
    3. '   ' → logprob: -4.7036051750183105
    4. '(ans' → logprob: -5.3286051750183105
    5. '	ans' → logprob: -7.2036051750183105
    6. ' C' → logprob: -8.703605651855469
    7. ' ' → logprob: -8.828605651855469
    8. '_ans' → logprob: -9.453605651855469
    9. 'C' → logprob: -10.078605651855469
    10. '  ' → logprob: -10.828605651855469

Token 543: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04956278204917908
    2. ' ans' → logprob: -4.424562931060791
    3. 'aj' → logprob: -4.799562931060791
    4. '   ' → logprob: -5.299562931060791
    5. '+=' → logprob: -5.424562931060791
    6. '(ans' → logprob: -5.549562931060791
    7. 'calcul' → logprob: -5.549562931060791
    8. '+' → logprob: -5.799562931060791
    9. 'diff' → logprob: -5.924562931060791
    10. '#' → logprob: -7.174562931060791

Token 544: ' complexe' (ID: 78615)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3325716555118561
    2. ':' → logprob: -1.5825716257095337
    3. ' =' → logprob: -3.7075717449188232
    4. ' :' → logprob: -4.082571506500244
    5. ' +=' → logprob: -4.207571506500244
    6. '(' → logprob: -5.957571506500244
    7. '=' → logprob: -6.082571506500244
    8. '):' → logprob: -6.082571506500244
    9. '<|end|>' → logprob: -6.457571506500244
    10. ',' → logprob: -6.582571506500244

Token 545: ' basé' (ID: 139381)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7186611294746399
    2. '   ' → logprob: -0.7186611294746399
    3. ' :' → logprob: -4.718661308288574
    4. '):' → logprob: -4.843661308288574
    5. ')' → logprob: -6.218661308288574
    6. ':
' → logprob: -6.593661308288574
    7. '+' → logprob: -6.968661308288574
    8. '):
' → logprob: -7.468661308288574
    9. ' ans' → logprob: -7.593661308288574
    10. '  ' → logprob: -7.843661308288574

Token 546: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.07778377085924149
    2. ' sur' → logprob: -2.9527838230133057
    3. '   ' → logprob: -3.8277838230133057
    4. '#' → logprob: -7.952783584594727
    5. '_sur' → logprob: -8.952783584594727
    6. '=' → logprob: -9.327783584594727
    7. 'on' → logprob: -9.702783584594727
    8. 's' → logprob: -10.327783584594727
    9. ',' → logprob: -10.327783584594727
    10. '(' → logprob: -10.827783584594727

Token 547: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007030184497125447
    2. '(C' → logprob: -7.750702857971191
    3. ' C' → logprob: -8.500702857971191
    4. 'B' → logprob: -10.500702857971191
    5. '(' → logprob: -11.250702857971191
    6. 'n' → logprob: -11.250702857971191
    7. '   ' → logprob: -12.250702857971191
    8. '(
' → logprob: -13.125702857971191
    9. 'ans' → logprob: -13.375702857971191
    10. '(n' → logprob: -13.500702857971191

Token 548: ' tâche' (ID: 135461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.007089599967002869
    2. 'n' → logprob: -6.132089614868164
    3. ' C' → logprob: -6.257089614868164
    4. '(C' → logprob: -6.257089614868164
    5. 'val' → logprob: -7.882089614868164
    6. 'value' → logprob: -9.007089614868164
    7. 'B' → logprob: -9.007089614868164
    8. '(' → logprob: -9.007089614868164
    9. '(n' → logprob: -10.132089614868164
    10. 'i' → logprob: -10.257089614868164

Token 549: ' algorithm' (ID: 22184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6927396655082703
    2. ':' → logprob: -1.192739725112915
    3. '):' → logprob: -2.692739725112915
    4. ')' → logprob: -3.567739725112915
    5. '=' → logprob: -3.817739725112915
    6. 'C' → logprob: -4.317739486694336
    7. ' :' → logprob: -4.317739486694336
    8. ' =' → logprob: -4.817739486694336
    9. ',' → logprob: -5.192739486694336
    10. ' ' → logprob: -5.442739486694336

Token 550: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.02184135466814041
    2. '   ' → logprob: -4.271841526031494
    3. 'e' → logprob: -5.396841526031494
    4. 'iques' → logprob: -6.646841526031494
    5. 'n' → logprob: -7.771841526031494
    6. 'i' → logprob: -8.271841049194336
    7. 'me' → logprob: -8.271841049194336
    8. ' ' → logprob: -8.521841049194336
    9. 'm' → logprob: -9.021841049194336
    10. 'iquement' → logprob: -9.021841049194336

Token 551: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07010859996080399
    2. '   ' → logprob: -3.445108652114868
    3. ' :' → logprob: -3.820108652114868
    4. '):' → logprob: -5.195108413696289
    5. ')' → logprob: -5.820108413696289
    6. ' ' → logprob: -6.445108413696289
    7. ':
' → logprob: -7.195108413696289
    8. '  ' → logprob: -7.945108413696289
    9. '+' → logprob: -8.320108413696289
    10. '[' → logprob: -8.320108413696289

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009813584387302399
    2. ':' → logprob: -5.8848137855529785
    3. ' ' → logprob: -6.0098137855529785
    4. ' ans' → logprob: -6.3848137855529785
    5. ' :' → logprob: -7.1348137855529785
    6. 'ans' → logprob: -7.8848137855529785
    7. '  ' → logprob: -8.00981330871582
    8. ')' → logprob: -8.13481330871582
    9. '+' → logprob: -8.25981330871582
    10. '    ' → logprob: -8.25981330871582

Token 553: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02306341752409935
    2. '   ' → logprob: -4.0230631828308105
    3. ' ans' → logprob: -5.3980631828308105
    4. 'val' → logprob: -9.023063659667969
    5. 'diff' → logprob: -9.148063659667969
    6. '	ans' → logprob: -9.898063659667969
    7. '(ans' → logprob: -10.398063659667969
    8. 'value' → logprob: -11.523063659667969
    9. 'index' → logprob: -11.648063659667969
    10. ' ' → logprob: -11.773063659667969

Token 554: ' Il' (ID: 5329)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07298734039068222
    2. ' ans' → logprob: -2.6979873180389404
    3. '   ' → logprob: -5.9479875564575195
    4. '(ans' → logprob: -8.57298755645752
    5. 'diff' → logprob: -8.94798755645752
    6. '	ans' → logprob: -9.82298755645752
    7. '+' → logprob: -11.07298755645752
    8. 'answer' → logprob: -11.82298755645752
    9. 'val' → logprob: -12.07298755645752
    10. ' ' → logprob: -12.07298755645752

Token 555: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7135916352272034
    2. 's' → logprob: -0.8385916352272034
    3. ' =' → logprob: -3.5885915756225586
    4. 'ans' → logprob: -3.9635915756225586
    5. '#' → logprob: -4.338591575622559
    6. ' ans' → logprob: -5.213591575622559
    7. '+=' → logprob: -6.338591575622559
    8. ' s' → logprob: -6.338591575622559
    9. 'n' → logprob: -6.713591575622559
    10. ' faut' → logprob: -6.713591575622559

Token 556: ''agit' (ID: 72975)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03225984424352646
    2. 'a' → logprob: -4.907259941101074
    3. '#' → logprob: -5.032259941101074
    4. ' =' → logprob: -5.032259941101074
    5. '+=' → logprob: -5.532259941101074
    6. 'ans' → logprob: -5.782259941101074
    7. 'e' → logprob: -6.907259941101074
    8. 'n' → logprob: -7.782259941101074
    9. 'space' → logprob: -7.907259941101074
    10. 's' → logprob: -7.907259941101074

Token 557: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933238506317139
    2. ' de' → logprob: -0.9433238506317139
    3. ' d' → logprob: -3.068323850631714
    4. '=' → logprob: -3.443323850631714
    5. 'de' → logprob: -4.568324089050293
    6. 'd' → logprob: -4.693324089050293
    7. ' =' → logprob: -5.443324089050293
    8. '    ' → logprob: -6.318324089050293
    9. '#' → logprob: -6.443324089050293
    10. '  ' → logprob: -7.443324089050293

Token 558: ''une' (ID: 13337)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.474508672952652
    2. 'ans' → logprob: -1.3495086431503296
    3. '(ans' → logprob: -2.474508762359619
    4. '   ' → logprob: -4.224508762359619
    5. ' (' → logprob: -4.474508762359619
    6. ' C' → logprob: -6.349508762359619
    7. 'C' → logprob: -6.474508762359619
    8. '(' → logprob: -6.474508762359619
    9. ' ' → logprob: -6.599508762359619
    10. 'a' → logprob: -7.849508762359619

Token 559: ' somme' (ID: 64484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9447608590126038
    2. 'C' → logprob: -1.819760799407959
    3. '(C' → logprob: -1.819760799407959
    4. 'ans' → logprob: -2.194760799407959
    5. ' (' → logprob: -3.569760799407959
    6. ' C' → logprob: -3.569760799407959
    7. '(ans' → logprob: -3.819760799407959
    8. 'n' → logprob: -3.944760799407959
    9. '(
' → logprob: -4.069760799407959
    10. '((' → logprob: -4.319760799407959

Token 560: ' pond' (ID: 42367)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5875622630119324
    2. ' +=' → logprob: -0.8375622630119324
    3. '=' → logprob: -5.462562084197998
    4. '   ' → logprob: -5.837562084197998
    5. 'ans' → logprob: -6.212562084197998
    6. ' ans' → logprob: -6.337562084197998
    7. '+=(' → logprob: -8.587562561035156
    8. ' =' → logprob: -9.087562561035156
    9. '	ans' → logprob: -9.462562561035156
    10. '+' → logprob: -9.587562561035156

Token 561: 'érée' (ID: 113219)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9878614544868469
    2. '   ' → logprob: -1.7378613948822021
    3. ' ans' → logprob: -1.8628613948822021
    4. 'érée' → logprob: -2.487861394882202
    5. '=' → logprob: -2.987861394882202
    6. 'C' → logprob: -3.237861394882202
    7. '(ans' → logprob: -3.487861394882202
    8. 'ée' → logprob: -4.612861633300781
    9. 'é' → logprob: -4.612861633300781
    10. 'for' → logprob: -4.737861633300781

Token 562: ' par' (ID: 686)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3287637233734131
    2. ' +=' → logprob: -1.328763723373413
    3. 'ans' → logprob: -5.328763961791992
    4. '(ans' → logprob: -5.453763961791992
    5. '   ' → logprob: -6.078763961791992
    6. '+=(' → logprob: -6.203763961791992
    7. '=' → logprob: -7.453763961791992
    8. ' ans' → logprob: -7.453763961791992
    9. '+' → logprob: -8.453763961791992
    10. '(' → logprob: -8.703763961791992

Token 563: ' des' (ID: 731)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.15427178144454956
    2. '(B' → logprob: -2.2792718410491943
    3. ' B' → logprob: -3.9042718410491943
    4. 'C' → logprob: -4.154271602630615
    5. '(C' → logprob: -6.154271602630615
    6. ' (' → logprob: -6.529271602630615
    7. '(' → logprob: -7.404271602630615
    8. ' C' → logprob: -8.029272079467773
    9. '   ' → logprob: -9.904272079467773
    10. '2' → logprob: -10.029272079467773

Token 564: ' puiss' (ID: 102546)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3478222191333771
    2. 'pu' → logprob: -2.2228221893310547
    3. ' B' → logprob: -2.5978221893310547
    4. 'C' → logprob: -3.4728221893310547
    5. ' puiss' → logprob: -3.9728221893310547
    6. '(B' → logprob: -4.097822189331055
    7. 'coeff' → logprob: -4.847822189331055
    8. 'diff' → logprob: -4.972822189331055
    9. ' C' → logprob: -5.472822189331055
    10. 'po' → logprob: -5.597822189331055

Token 565: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.7060128450393677
    2. 'ences' → logprob: -1.4560128450393677
    3. '(' → logprob: -2.206012725830078
    4. 'es' → logprob: -3.081012725830078
    5. '   ' → logprob: -3.831012725830078
    6. '(i' → logprob: -4.206012725830078
    7. 'ence' → logprob: -4.456012725830078
    8. '(
' → logprob: -4.831012725830078
    9. 'ces' → logprob: -4.956012725830078
    10. '()' → logprob: -5.206012725830078

Token 566: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0672048330307007
    2. '   ' → logprob: -1.9422048330307007
    3. 'of' → logprob: -1.9422048330307007
    4. 'de' → logprob: -2.0672049522399902
    5. ' de' → logprob: -2.4422049522399902
    6. '(' → logprob: -2.5672049522399902
    7. '[' → logprob: -3.1922049522399902
    8. ' of' → logprob: -4.69220495223999
    9. ')' → logprob: -5.06720495223999
    10. '*' → logprob: -5.56720495223999

Token 567: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.3954463510308415e-05
    2. 'de' → logprob: -10.250054359436035
    3. ' ' → logprob: -11.500054359436035
    4. 'C' → logprob: -12.625054359436035
    5. 'B' → logprob: -13.500054359436035
    6. 'Deux' → logprob: -13.625054359436035
    7. '```' → logprob: -14.500054359436035
    8. '   ' → logprob: -14.500054359436035
    9. ' deux' → logprob: -14.750054359436035
    10. '#' → logprob: -15.000054359436035

Token 568: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011355629976605996
    2. 'de' → logprob: -9.125113487243652
    3. ' ' → logprob: -12.625113487243652
    4. 'C' → logprob: -15.250113487243652
    5. 'Deux' → logprob: -15.250113487243652
    6. ' deux' → logprob: -15.500113487243652
    7. '```' → logprob: -16.00011444091797
    8. '

' → logprob: -16.37511444091797
    9. 'two' → logprob: -16.62511444091797
    10. '
' → logprob: -17.37511444091797

Token 569: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04912002384662628
    2. ')' → logprob: -4.17411994934082
    3. '[' → logprob: -4.29911994934082
    4. ' ' → logprob: -5.67411994934082
    5. ',' → logprob: -5.92411994934082
    6. '-' → logprob: -6.04911994934082
    7. '(ans' → logprob: -6.04911994934082
    8. '  ' → logprob: -6.42411994934082
    9. ' ans' → logprob: -7.04911994934082
    10. '=' → logprob: -7.54911994934082

Token 570: ' adaptée' (ID: 139884)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8957898616790771
    2. ' ans' → logprob: -1.1457898616790771
    3. 'ans' → logprob: -1.3957898616790771
    4. '	ans' → logprob: -5.270790100097656
    5. '    ' → logprob: -5.395790100097656
    6. '(ans' → logprob: -5.770790100097656
    7. '+' → logprob: -5.895790100097656
    8. '*' → logprob: -6.020790100097656
    9. ' ' → logprob: -6.270790100097656
    10. '  ' → logprob: -7.145790100097656

Token 571: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06165536493062973
    2. ' à' → logprob: -3.686655282974243
    3. ' aux' → logprob: -5.061655521392822
    4. 'de' → logprob: -5.811655521392822
    5. '(' → logprob: -5.811655521392822
    6. 'au' → logprob: -5.936655521392822
    7. 'à' → logprob: -6.186655521392822
    8. '       ' → logprob: -6.561655521392822
    9. 'aux' → logprob: -6.561655521392822
    10. ',' → logprob: -6.686655521392822

Token 572: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.181503564119339
    2. ' C' → logprob: -2.3065035343170166
    3. 'B' → logprob: -3.9315035343170166
    4. 'n' → logprob: -4.056503772735596
    5. ' la' → logprob: -4.931503772735596
    6. ' n' → logprob: -5.556503772735596
    7. ' B' → logprob: -5.681503772735596
    8. '(C' → logprob: -5.931503772735596
    9. ' (' → logprob: -6.056503772735596
    10. 'l' → logprob: -6.056503772735596

Token 573: ' position' (ID: 4010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1322437971830368
    2. 'n' → logprob: -2.3822438716888428
    3. '#' → logprob: -4.632243633270264
    4. ' C' → logprob: -5.257243633270264
    5. 'N' → logprob: -5.882243633270264
    6. 'range' → logprob: -6.257243633270264
    7. '(n' → logprob: -6.882243633270264
    8. '(C' → logprob: -6.882243633270264
    9. 'B' → logprob: -7.007243633270264
    10. ' n' → logprob: -7.382243633270264

Token 574: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6577237844467163
    2. '(ans' → logprob: -1.4077237844467163
    3. 'ans' → logprob: -1.9077237844467163
    4. '-' → logprob: -3.532723903656006
    5. ' ans' → logprob: -3.657723903656006
    6. '(' → logprob: -4.032723903656006
    7. '=' → logprob: -5.532723903656006
    8. ' =' → logprob: -6.032723903656006
    9. '	ans' → logprob: -6.157723903656006
    10. ' (' → logprob: -6.782723903656006

Token 575: ' l' (ID: 305)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2854902148246765
    2. 'n' → logprob: -2.4104902744293213
    3. 'l' → logprob: -2.5354902744293213
    4. ' C' → logprob: -2.6604902744293213
    5. ' n' → logprob: -5.160490036010742
    6. ' l' → logprob: -5.910490036010742
    7. ' la' → logprob: -7.910490036010742
    8. 'la' → logprob: -8.285490036010742
    9. ' ' → logprob: -10.097990036010742
    10. '#' → logprob: -10.160490036010742

Token 576: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2623538672924042
    2. ''' → logprob: -2.5123538970947266
    3. '#' → logprob: -3.2623538970947266
    4. 'é' → logprob: -4.262353897094727
    5. '-' → logprob: -4.387353897094727
    6. 'n' → logprob: -4.387353897094727
    7. ''utilisateur' → logprob: -4.762353897094727
    8. 'ément' → logprob: -4.887353897094727
    9. 'lement' → logprob: -5.012353897094727
    10. ' élément' → logprob: -5.262353897094727

Token 577: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.020524604246020317
    2. 'C' → logprob: -4.145524501800537
    3. '#' → logprob: -6.270524501800537
    4. 'él' → logprob: -6.770524501800537
    5. ' élément' → logprob: -7.645524501800537
    6. 'n' → logprob: -8.645524978637695
    7. 'c' → logprob: -9.020524978637695
    8. 'element' → logprob: -9.020524978637695
    9. 'é' → logprob: -9.145524978637695
    10. ' C' → logprob: -9.770524978637695

Token 578: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00014978687977418303
    2. 'ments' → logprob: -9.250149726867676
    3. 'ent' → logprob: -11.125149726867676
    4. 'nt' → logprob: -12.250149726867676
    5. '#' → logprob: -12.375149726867676
    6. 'm' → logprob: -12.625149726867676
    7. '   ' → logprob: -12.875149726867676
    8. 'me' → logprob: -12.875149726867676
    9. '```' → logprob: -12.875149726867676
    10. 'ement' → logprob: -13.000149726867676

Token 579: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7108049392700195
    2. 'ans' → logprob: -1.4608049392700195
    3. ':' → logprob: -1.7108049392700195
    4. '(ans' → logprob: -3.7108049392700195
    5. ' ans' → logprob: -3.7108049392700195
    6. ')' → logprob: -4.3358049392700195
    7. '):' → logprob: -4.5858049392700195
    8. ' :' → logprob: -4.7108049392700195
    9. '+' → logprob: -5.9608049392700195
    10. ' )' → logprob: -6.2108049392700195

Token 580: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5455615520477295
    2. '   ' → logprob: -2.5455615520477295
    3. '[n' → logprob: -2.5455615520477295
    4. 'ans' → logprob: -2.7955615520477295
    5. '[-' → logprob: -3.0455615520477295
    6. ']' → logprob: -3.2955615520477295
    7. '(ans' → logprob: -3.2955615520477295
    8. ' ans' → logprob: -3.7955615520477295
    9. '-' → logprob: -4.170561790466309
    10. ')' → logprob: -4.795561790466309

Token 581: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024371391627937555
    2. ' -' → logprob: -6.127437114715576
    3. '])' → logprob: -9.002437591552734
    4. ']' → logprob: -9.127437591552734
    5. '1' → logprob: -11.502437591552734
    6. ' ' → logprob: -13.377437591552734
    7. ']-' → logprob: -13.752437591552734
    8. 'n' → logprob: -13.752437591552734
    9. '   ' → logprob: -13.752437591552734
    10. '−' → logprob: -14.002437591552734

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. ']' → logprob: -10.625027656555176
    3. ' ' → logprob: -13.125027656555176
    4. '```' → logprob: -14.625027656555176
    5. '])' → logprob: -16.06252670288086
    6. ')' → logprob: -16.18752670288086
    7. '   ' → logprob: -16.37502670288086
    8. 'n' → logprob: -16.68752670288086
    9. '`' → logprob: -17.00002670288086
    10. 's' → logprob: -17.06252670288086

Token 583: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2942068576812744
    2. '])' → logprob: -1.4192068576812744
    3. '])
' → logprob: -4.794206619262695
    4. ']
' → logprob: -5.794206619262695
    5. ' ])' → logprob: -7.919206619262695
    6. ' ]' → logprob: -8.669206619262695
    7. '])*' → logprob: -8.919206619262695
    8. '],' → logprob: -8.919206619262695
    9. '   ' → logprob: -9.294206619262695
    10. '])-' → logprob: -9.294206619262695

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018578192219138145
    2. ':' → logprob: -4.643578052520752
    3. 'ans' → logprob: -5.643578052520752
    4. '-' → logprob: -6.018578052520752
    5. ')' → logprob: -7.268578052520752
    6. ' ans' → logprob: -7.393578052520752
    7. '):' → logprob: -7.518578052520752
    8. '(ans' → logprob: -8.64357852935791
    9. ' -' → logprob: -8.76857852935791
    10. '+' → logprob: -8.76857852935791

Token 585: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002150142565369606
    2. ' ans' → logprob: -6.627150058746338
    3. '   ' → logprob: -7.127150058746338
    4. '	ans' → logprob: -11.377150535583496
    5. '(ans' → logprob: -12.752150535583496
    6. '-' → logprob: -13.502150535583496
    7. ' ' → logprob: -14.002150535583496
    8. ')' → logprob: -14.377150535583496
    9. 'diff' → logprob: -14.502150535583496
    10. 'answer' → logprob: -14.502150535583496

Token 586: ' Exp' (ID: 15004)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007698441040702164
    2. '   ' → logprob: -7.62576961517334
    3. ' ans' → logprob: -8.25076961517334
    4. 'val' → logprob: -12.12576961517334
    5. 'diff' → logprob: -12.25076961517334
    6. '	ans' → logprob: -12.75076961517334
    7. 'temp' → logprob: -13.62576961517334
    8. '(ans' → logprob: -14.00076961517334
    9. 'answer' → logprob: -14.12576961517334
    10. ' ' → logprob: -14.37576961517334

Token 587: 'lication' (ID: 2389)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0768369436264038
    2. '(ans' → logprob: -1.2018369436264038
    3. 'r' → logprob: -2.3268370628356934
    4. 'ression' → logprob: -2.5768370628356934
    5. '   ' → logprob: -2.7018370628356934
    6. 'ansion' → logprob: -3.8268370628356934
    7. 'ress' → logprob: -4.076837062835693
    8. '(' → logprob: -5.076837062835693
    9. 'er' → logprob: -5.076837062835693
    10. ' ans' → logprob: -5.076837062835693

Token 588: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22380585968494415
    2. 'ans' → logprob: -2.0988059043884277
    3. ' ans' → logprob: -2.5988059043884277
    4. '(ans' → logprob: -6.348805904388428
    5. ':' → logprob: -7.348805904388428
    6. ' =' → logprob: -7.473805904388428
    7. '	ans' → logprob: -8.09880542755127
    8. '=' → logprob: -8.84880542755127
    9. ' for' → logprob: -10.47380542755127
    10. ' ' → logprob: -10.84880542755127

Token 589: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6889110207557678
    2. 'C' → logprob: -2.063910961151123
    3. 'po' → logprob: -2.688910961151123
    4. 'code' → logprob: -2.813910961151123
    5. ')' → logprob: -2.938910961151123
    6. 'calcul' → logprob: -3.563910961151123
    7. 'pu' → logprob: -4.188910961151123
    8. 'pow' → logprob: -4.188910961151123
    9. 'coeff' → logprob: -4.313910961151123
    10. '#' → logprob: -4.313910961151123

Token 590: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7105177640914917
    2. 'ans' → logprob: -0.7105177640914917
    3. ':' → logprob: -4.710517883300781
    4. ' ans' → logprob: -5.460517883300781
    5. '=' → logprob: -6.210517883300781
    6. ' =' → logprob: -7.085517883300781
    7. '(ans' → logprob: -7.835517883300781
    8. '	ans' → logprob: -7.960517883300781
    9. ' +=' → logprob: -9.460517883300781
    10. '+=' → logprob: -9.960517883300781

Token 591: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5115035176277161
    2. 'ans' → logprob: -1.7615034580230713
    3. 'n' → logprob: -2.8865034580230713
    4. ' i' → logprob: -3.1365034580230713
    5. ' ans' → logprob: -3.1365034580230713
    6. 'j' → logprob: -3.7615034580230713
    7. 'C' → logprob: -3.8865034580230713
    8. ' n' → logprob: -4.51150369644165
    9. ' la' → logprob: -4.88650369644165
    10. 'B' → logprob: -5.63650369644165

Token 592: ' terme' (ID: 42959)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7394890189170837
    2. 'ans' → logprob: -1.8644890785217285
    3. 'élé' → logprob: -1.9894890785217285
    4. 'element' → logprob: -2.4894890785217285
    5. 'n' → logprob: -2.9894890785217285
    6. ' C' → logprob: -4.1144890785217285
    7. ' element' → logprob: -4.1144890785217285
    8. ')' → logprob: -4.3644890785217285
    9. ']' → logprob: -4.7394890785217285
    10. ' ans' → logprob: -4.8644890785217285

Token 593: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31741300225257874
    2. 'ans' → logprob: -1.4424129724502563
    3. ' ans' → logprob: -3.442413091659546
    4. ':' → logprob: -6.317412853240967
    5. '(ans' → logprob: -7.317412853240967
    6. '=' → logprob: -7.942412853240967
    7. '	ans' → logprob: -7.942412853240967
    8. ' =' → logprob: -8.192413330078125
    9. ' :' → logprob: -10.692413330078125
    10. ',' → logprob: -10.692413330078125

Token 594: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5258443355560303
    2. '   ' → logprob: -1.0258443355560303
    3. ' ans' → logprob: -3.0258443355560303
    4. '	ans' → logprob: -6.900844573974609
    5. '(ans' → logprob: -7.650844573974609
    6. '```' → logprob: -8.65084457397461
    7. '       ' → logprob: -9.52584457397461
    8. 'anst' → logprob: -9.65084457397461
    9. '   ' → logprob: -10.52584457397461
    10. ' ' → logprob: -10.90084457397461

Token 595: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013615543022751808
    2. '   ' → logprob: -4.513615608215332
    3. ' ans' → logprob: -6.138615608215332
    4. 'term' → logprob: -8.388615608215332
    5. '(ans' → logprob: -9.888615608215332
    6. '	ans' → logprob: -10.138615608215332
    7. 'answer' → logprob: -11.263615608215332
    8. 'diff' → logprob: -11.263615608215332
    9. 'anst' → logprob: -11.638615608215332
    10. ' ' → logprob: -12.263615608215332

Token 596: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.055236320942640305
    2. ' ans' → logprob: -3.055236339569092
    3. '   ' → logprob: -5.430236339569092
    4. 'term' → logprob: -6.430236339569092
    5. ' term' → logprob: -8.430235862731934
    6. '(ans' → logprob: -9.430235862731934
    7. 'diff' → logprob: -9.680235862731934
    8. '	ans' → logprob: -10.055235862731934
    9. ' ' → logprob: -10.305235862731934
    10. 'temp' → logprob: -10.555235862731934

Token 597: ' C' (ID: 363)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2723057270050049
    2. ' ans' → logprob: -2.647305727005005
    3. 'term' → logprob: -2.772305727005005
    4. 'val' → logprob: -3.647305727005005
    5. '(ans' → logprob: -3.647305727005005
    6. ' term' → logprob: -4.897305488586426
    7. 'pow' → logprob: -5.272305488586426
    8. 'temp' → logprob: -5.272305488586426
    9. '(C' → logprob: -5.522305488586426
    10. 'coeff' → logprob: -5.647305488586426

Token 598: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.09478527307510376
    2. 'n' → logprob: -3.344785213470459
    3. '_term' → logprob: -4.344785213470459
    4. 'term' → logprob: -4.844785213470459
    5. 'val' → logprob: -4.844785213470459
    6. '_val' → logprob: -5.094785213470459
    7. '[' → logprob: -5.344785213470459
    8. 'ans' → logprob: -5.594785213470459
    9. '_value' → logprob: -5.719785213470459
    10. '_n' → logprob: -6.344785213470459

Token 599: '-' (ID: 12)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.153034970164299
    2. '-' → logprob: -2.0280349254608154
    3. 'n' → logprob: -5.4030351638793945
    4. ']' → logprob: -5.6530351638793945
    5. '[' → logprob: -6.6530351638793945
    6. '   ' → logprob: -9.028035163879395
    7. '][' → logprob: -9.153035163879395
    8. '])' → logprob: -9.153035163879395
    9. '(n' → logprob: -9.153035163879395
    10. '#' → logprob: -9.403035163879395

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08921600878238678
    2. '-' → logprob: -2.4642159938812256
    3. ']' → logprob: -8.589216232299805
    4. ' -' → logprob: -9.714216232299805
    5. ' ' → logprob: -11.089216232299805
    6. '   ' → logprob: -11.839216232299805
    7. '```' → logprob: -13.089216232299805
    8. ')' → logprob: -13.464216232299805
    9. '])' → logprob: -13.714216232299805
    10. ']-' → logprob: -14.839216232299805

Token 601: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035965684219263494
    2. ']*' → logprob: -8.625359535217285
    3. ' ]' → logprob: -9.375359535217285
    4. ')' → logprob: -10.250359535217285
    5. '*' → logprob: -10.750359535217285
    6. '])' → logprob: -11.625359535217285
    7. ' *' → logprob: -11.750359535217285
    8. '   ' → logprob: -11.875359535217285
    9. ']*(' → logprob: -12.875359535217285
    10. ']
' → logprob: -13.250359535217285

Token 602: ' :' (ID: 712)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6329089999198914
    2. ' *' → logprob: -0.7579089999198914
    3. '*(' → logprob: -8.507908821105957
    4. ')' → logprob: -10.757908821105957
    5. ' ' → logprob: -11.007908821105957
    6. '   ' → logprob: -11.007908821105957
    7. ' ' → logprob: -11.257908821105957
    8. ',' → logprob: -11.382908821105957
    9. '#' → logprob: -12.132908821105957
    10. '(' → logprob: -12.132908821105957

Token 603: ' on' (ID: 402)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4710915684700012
    2. '(' → logprob: -2.0960915088653564
    3. '(B' → logprob: -2.0960915088653564
    4. '(C' → logprob: -2.7210915088653564
    5. 'C' → logprob: -3.8460915088653564
    6. 'B' → logprob: -4.0960917472839355
    7. ' C' → logprob: -4.4710917472839355
    8. ' B' → logprob: -5.4710917472839355
    9. '*' → logprob: -5.8460917472839355
    10. '(
' → logprob: -5.8460917472839355

Token 604: ' récup' (ID: 62856)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0891866609454155
    2. '*' → logprob: -2.464186668395996
    3. ' ' → logprob: -8.839186668395996
    4. ')' → logprob: -10.089186668395996
    5. ' ' → logprob: -10.589186668395996
    6. ']' → logprob: -11.714186668395996
    7. ' )' → logprob: -12.589186668395996
    8. ' #' → logprob: -12.714186668395996
    9. '[' → logprob: -12.964186668395996
    10. '_' → logprob: -13.089186668395996

Token 605: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -1.0710054636001587
    2. ']' → logprob: -1.3210054636001587
    3. '   ' → logprob: -2.696005344390869
    4. ' C' → logprob: -2.696005344390869
    5. 'er' → logprob: -2.821005344390869
    6. 'C' → logprob: -3.071005344390869
    7. 'érer' → logprob: -3.196005344390869
    8. ')' → logprob: -3.821005344390869
    9. '[' → logprob: -4.071005344390869
    10. 'e' → logprob: -4.571005344390869

Token 606: ' le' (ID: 505)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0505252480506897
    2. '*' → logprob: -3.425525188446045
    3. ')' → logprob: -4.425525188446045
    4. 'C' → logprob: -6.675525188446045
    5. ' C' → logprob: -7.050525188446045
    6. ' ' → logprob: -7.050525188446045
    7. ' )' → logprob: -7.425525188446045
    8. '   ' → logprob: -8.675525665283203
    9. ' la' → logprob: -8.800525665283203
    10. '()' → logprob: -9.175525665283203

Token 607: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1051560565829277
    2. ' C' → logprob: -2.7301559448242188
    3. 'n' → logprob: -3.9801559448242188
    4. 'val' → logprob: -5.230155944824219
    5. ' n' → logprob: -6.105155944824219
    6. ' ' → logprob: -6.730155944824219
    7. '*' → logprob: -6.855155944824219
    8. ' *' → logprob: -6.855155944824219
    9. 'value' → logprob: -7.355155944824219
    10. 'élé' → logprob: -7.605155944824219

Token 608: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0635136142373085
    2. ' n' → logprob: -2.8135135173797607
    3. ')' → logprob: -7.18851375579834
    4. 'C' → logprob: -8.18851375579834
    5. ' C' → logprob: -8.93851375579834
    6. ')n' → logprob: -9.06351375579834
    7. ' ' → logprob: -9.43851375579834
    8. ' )' → logprob: -9.68851375579834
    9. ']' → logprob: -9.81351375579834
    10. 'c' → logprob: -11.18851375579834

Token 609: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006741184741258621
    2. ' -' → logprob: -5.006741046905518
    3. ']' → logprob: -11.006741523742676
    4. ' ' → logprob: -12.506741523742676
    5. '   ' → logprob: -12.756741523742676
    6. ']-' → logprob: -14.256741523742676
    7. '1' → logprob: -14.631741523742676
    8. '
' → logprob: -14.756741523742676
    9. 's' → logprob: -15.506741523742676
    10. 'n' → logprob: -15.756741523742676

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. '```' → logprob: -14.37500286102295
    4. ')' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '-' → logprob: -17.000001907348633
    7. ']' → logprob: -17.625001907348633
    8. 'n' → logprob: -18.250001907348633
    9. '１' → logprob: -18.625001907348633
    10. '`' → logprob: -18.875001907348633

Token 611: ')-' (ID: 14080)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10846304148435593
    2. '])' → logprob: -2.3584630489349365
    3. ')' → logprob: -5.733462810516357
    4. '])-' → logprob: -5.983462810516357
    5. ']-' → logprob: -6.108462810516357
    6. ')]' → logprob: -9.358463287353516
    7. 'th' → logprob: -10.608463287353516
    8. '])*' → logprob: -10.608463287353516
    9. 'e' → logprob: -11.483463287353516
    10. '   ' → logprob: -11.608463287353516

Token 612: 'ème' (ID: 9767)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9010847806930542
    2. ']' → logprob: -1.1510847806930542
    3. 'th' → logprob: -2.2760848999023438
    4. 'indice' → logprob: -2.7760848999023438
    5. 'indexed' → logprob: -3.4010848999023438
    6. '```' → logprob: -3.7760848999023438
    7. 'élé' → logprob: -4.401084899902344
    8. '1' → logprob: -4.526084899902344
    9. 'ième' → logprob: -4.651084899902344
    10. 'é' → logprob: -5.026084899902344

Token 613: ' élément' (ID: 99627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038750157691538334
    2. ']*' → logprob: -6.128874778747559
    3. '*' → logprob: -7.503874778747559
    4. ' ]' → logprob: -8.128874778747559
    5. '[' → logprob: -8.378874778747559
    6. ' ' → logprob: -9.253874778747559
    7. 'space' → logprob: -9.378874778747559
    8. '"' → logprob: -9.628874778747559
    9. '])' → logprob: -9.878874778747559
    10. '_' → logprob: -10.128874778747559

Token 614: ' car' (ID: 1669)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10569524765014648
    2. '*' → logprob: -2.3556952476501465
    3. ')' → logprob: -5.7306952476501465
    4. ' ' → logprob: -7.8556952476501465
    5. '(' → logprob: -8.105695724487305
    6. '   ' → logprob: -8.605695724487305
    7. ' ' → logprob: -8.855695724487305
    8. ' (' → logprob: -8.855695724487305
    9. '#' → logprob: -9.355695724487305
    10. '*(' → logprob: -9.605695724487305

Token 615: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3835328221321106
    2. 'l' → logprob: -2.758532762527466
    3. 'n' → logprob: -2.758532762527466
    4. ' C' → logprob: -2.883532762527466
    5. ' n' → logprob: -3.508532762527466
    6. ' l' → logprob: -3.508532762527466
    7. ')' → logprob: -3.633532762527466
    8. ' la' → logprob: -3.883532762527466
    9. ' ' → logprob: -5.008533000946045
    10. 'index' → logprob: -5.383533000946045

Token 616: ' est' (ID: 893)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.04060790687799454
    2. '[' → logprob: -3.2906079292297363
    3. ']' → logprob: -6.290607929229736
    4. '[
' → logprob: -8.415607452392578
    5. ' [' → logprob: -8.790607452392578
    6. '][' → logprob: -8.915607452392578
    7. '[-' → logprob: -10.665607452392578
    8. '[N' → logprob: -10.665607452392578
    9. ')[' → logprob: -10.915607452392578
    10. '
' → logprob: -11.040607452392578

Token 617: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.619778573513031
    2. ' index' → logprob: -1.3697786331176758
    3. 'n' → logprob: -3.494778633117676
    4. 'indexed' → logprob: -3.494778633117676
    5. 'l' → logprob: -3.619778633117676
    6. ' indexed' → logprob: -3.744778633117676
    7. ' l' → logprob: -3.869778633117676
    8. ' une' → logprob: -4.994778633117676
    9. ' ' → logprob: -4.994778633117676
    10. 'indice' → logprob: -5.244778633117676

Token 618: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.32028257846832275
    2. ']' → logprob: -1.5702825784683228
    3. '   ' → logprob: -4.070282459259033
    4. '[' → logprob: -4.570282459259033
    5. '0' → logprob: -4.945282459259033
    6. 'e' → logprob: -5.195282459259033
    7. '+' → logprob: -5.320282459259033
    8. 'ée' → logprob: -5.320282459259033
    9. 'ed' → logprob: -5.945282459259033
    10. '-' → logprob: -6.445282459259033

Token 619: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019501008093357086
    2. '   ' → logprob: -5.394501209259033
    3. '[' → logprob: -5.519501209259033
    4. ' ]' → logprob: -5.769501209259033
    5. ')' → logprob: -6.144501209259033
    6. '[n' → logprob: -6.144501209259033
    7. '],' → logprob: -7.394501209259033
    8. '0' → logprob: -8.144500732421875
    9. ' ' → logprob: -8.269500732421875
    10. 'def' → logprob: -8.394500732421875

Token 620: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011045700375689194
    2. 'z' → logprob: -9.625110626220703
    3. ' ' → logprob: -10.375110626220703
    4. ' zéro' → logprob: -11.875110626220703
    5. 'zero' → logprob: -12.125110626220703
    6. ' z' → logprob: -14.875110626220703
    7. ' zero' → logprob: -16.250110626220703
    8. 'l' → logprob: -16.875110626220703
    9. '```' → logprob: -17.500110626220703
    10. '   ' → logprob: -17.500110626220703

Token 621: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07787586003541946
    2. 'de' → logprob: -2.827875852584839
    3. '#' → logprob: -5.202876091003418
    4. ' de' → logprob: -5.452876091003418
    5. 'du' → logprob: -5.952876091003418
    6. '   ' → logprob: -7.202876091003418
    7. '(' → logprob: -7.327876091003418
    8. '(n' → logprob: -7.702876091003418
    9. ' du' → logprob: -7.952876091003418
    10. 'n' → logprob: -8.077876091003418

Token 622: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5690089639974758e-05
    2. 'z' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.500015258789062
    4. ' zéro' → logprob: -13.500015258789062
    5. 'zero' → logprob: -15.000015258789062
    6. ' z' → logprob: -17.000015258789062
    7. '```' → logprob: -18.625015258789062
    8. ' zero' → logprob: -19.500015258789062
    9. 'l' → logprob: -19.625015258789062
    10. ' ' → logprob: -19.875015258789062

Token 623: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. 'z' → logprob: -15.000000953674316
    4. 'zero' → logprob: -16.000001907348633
    5. ' zéro' → logprob: -16.750001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '```' → logprob: -19.875001907348633
    8. ' ' → logprob: -20.500001907348633
    9. ' z' → logprob: -20.750001907348633
    10. ' zero' → logprob: -20.875001907348633

Token 624: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04679557681083679
    2. '*' → logprob: -3.171795606613159
    3. '   ' → logprob: -5.92179536819458
    4. '*(' → logprob: -7.42179536819458
    5. ' ' → logprob: -8.671795845031738
    6. ' -' → logprob: -9.546795845031738
    7. ')' → logprob: -9.921795845031738
    8. ' (' → logprob: -10.296795845031738
    9. ' ' → logprob: -10.296795845031738
    10. '(' → logprob: -10.421795845031738

Token 625: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3975999653339386
    2. '*' → logprob: -1.5225999355316162
    3. '(' → logprob: -2.897599935531616
    4. ' (' → logprob: -3.522599935531616
    5. '(C' → logprob: -4.522600173950195
    6. '   ' → logprob: -5.147600173950195
    7. '*(' → logprob: -5.647600173950195
    8. ' ' → logprob: -6.897600173950195
    9. '(ans' → logprob: -6.897600173950195
    10. 'C' → logprob: -7.022600173950195

Token 626: ' #' (ID: 1069)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5289345383644104
    2. '*' → logprob: -0.9039345383644104
    3. '(' → logprob: -6.028934478759766
    4. ' (' → logprob: -6.778934478759766
    5. 'ans' → logprob: -7.403934478759766
    6. '*(' → logprob: -7.528934478759766
    7. '(ans' → logprob: -7.903934478759766
    8. '   ' → logprob: -8.528934478759766
    9. ' ' → logprob: -8.903934478759766
    10. ' ans' → logprob: -9.153934478759766

Token 627: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08372597396373749
    2. '(ans' → logprob: -2.958725929260254
    3. ' ans' → logprob: -4.333725929260254
    4. '*' → logprob: -5.083725929260254
    5. '(' → logprob: -5.458725929260254
    6. ' *' → logprob: -6.583725929260254
    7. ' (' → logprob: -6.833725929260254
    8. '+' → logprob: -7.208725929260254
    9. '   ' → logprob: -7.458725929260254
    10. '*(' → logprob: -8.583725929260254

Token 628: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.2822149097919464
    2. 'B' → logprob: -1.407214879989624
    3. '(' → logprob: -7.907215118408203
    4. '(C' → logprob: -8.032215118408203
    5. 'C' → logprob: -8.907215118408203
    6. ' (' → logprob: -9.032215118408203
    7. ' B' → logprob: -9.907215118408203
    8. '((' → logprob: -11.032215118408203
    9. '(ans' → logprob: -11.282215118408203
    10. 'ans' → logprob: -11.532215118408203

Token 629: 'N' (ID: 45)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001563065918162465
    2. '2' → logprob: -7.37656307220459
    3. ' B' → logprob: -7.50156307220459
    4. '(' → logprob: -9.37656307220459
    5. '(B' → logprob: -9.37656307220459
    6. 'C' → logprob: -9.62656307220459
    7. 'n' → logprob: -10.25156307220459
    8. '   ' → logprob: -10.25156307220459
    9. 'pow' → logprob: -11.00156307220459
    10. '1' → logprob: -11.12656307220459

Token 630: '-n' (ID: 5219)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1491040587425232
    2. ' -' → logprob: -2.524104118347168
    3. '-n' → logprob: -2.899104118347168
    4. 'n' → logprob: -6.024104118347168
    5. '+' → logprob: -8.149104118347168
    6. '   ' → logprob: -8.274104118347168
    7. '-i' → logprob: -9.274104118347168
    8. ' ' → logprob: -9.649104118347168
    9. '#' → logprob: -10.024104118347168
    10. '
' → logprob: -10.524104118347168

Token 631: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008003382245078683
    2. '))' → logprob: -7.625800132751465
    3. ']' → logprob: -9.750800132751465
    4. ')]' → logprob: -9.875800132751465
    5. ')
' → logprob: -10.125800132751465
    6. '#' → logprob: -10.250800132751465
    7. ' )' → logprob: -11.000800132751465
    8. ')*' → logprob: -11.250800132751465
    9. ')])' → logprob: -11.375800132751465
    10. 'n' → logprob: -11.375800132751465

Token 632: ' :' (ID: 712)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6077221035957336
    2. ')' → logprob: -1.3577220439910889
    3. '   ' → logprob: -2.482722043991089
    4. '-' → logprob: -2.982722043991089
    5. ' -' → logprob: -3.982722043991089
    6. ')]' → logprob: -4.732722282409668
    7. ' ' → logprob: -5.732722282409668
    8. ',' → logprob: -5.857722282409668
    9. '#' → logprob: -5.857722282409668
    10. '])' → logprob: -5.857722282409668

Token 633: ' représente' (ID: 88912)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05864706635475159
    2. ' B' → logprob: -3.0586471557617188
    3. ')' → logprob: -5.558647155761719
    4. '#' → logprob: -6.308647155761719
    5. 'n' → logprob: -6.808647155761719
    6. 'ans' → logprob: -7.808647155761719
    7. '2' → logprob: -7.933647155761719
    8. ' ' → logprob: -8.058647155761719
    9. '   ' → logprob: -8.746147155761719
    10. '  ' → logprob: -8.871147155761719

Token 634: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9495459794998169
    2. 'B' → logprob: -1.449545979499817
    3. 'the' → logprob: -2.1995458602905273
    4. 'l' → logprob: -2.9495458602905273
    5. '(n' → logprob: -3.3245458602905273
    6. ' les' → logprob: -3.5745458602905273
    7. 'les' → logprob: -3.6995458602905273
    8. ' the' → logprob: -3.9495458602905273
    9. ' n' → logprob: -4.324545860290527
    10. '#' → logprob: -4.324545860290527

Token 635: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7265956997871399
    2. 'B' → logprob: -1.1015956401824951
    3. 'i' → logprob: -2.226595640182495
    4. '(n' → logprob: -4.476595878601074
    5. '#' → logprob: -5.101595878601074
    6. ' B' → logprob: -5.226595878601074
    7. 's' → logprob: -5.351595878601074
    8. 'ex' → logprob: -5.351595878601074
    9. ')' → logprob: -5.601595878601074
    10. 'mod' → logprob: -5.726595878601074

Token 636: ' d' (ID: 272)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.398801326751709
    2. ' -' → logprob: -2.398801326751709
    3. '*' → logprob: -3.148801326751709
    4. '_' → logprob: -3.648801326751709
    5. '   ' → logprob: -3.648801326751709
    6. ')' → logprob: -3.773801326751709
    7. 'de' → logprob: -4.023801326751709
    8. 'C' → logprob: -4.148801326751709
    9. '#' → logprob: -4.398801326751709
    10. ' de' → logprob: -4.398801326751709

Token 637: ''' (ID: 6)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2453709840774536
    2. '_' → logprob: -1.4953709840774536
    3. ')' → logprob: -1.8703709840774536
    4. ' espaces' → logprob: -2.870370864868164
    5. '*' → logprob: -2.995370864868164
    6. '#' → logprob: -3.120370864868164
    7. 's' → logprob: -3.745370864868164
    8. '+' → logprob: -4.120370864868164
    9. '<|end|>' → logprob: -4.120370864868164
    10. ' -' → logprob: -4.495370864868164

Token 638: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.12291790544986725
    2. 'multip' → logprob: -3.997917890548706
    3. 'fois' → logprob: -4.122918128967285
    4. ' éléments' → logprob: -4.247918128967285
    5. 'pu' → logprob: -4.747918128967285
    6. 'elements' → logprob: -4.747918128967285
    7. 'indices' → logprob: -4.747918128967285
    8. 'ex' → logprob: -5.122918128967285
    9. ')' → logprob: -5.247918128967285
    10. 's' → logprob: -5.497918128967285

Token 639: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -1.735893965815194e-05
    2. 'éments' → logprob: -11.875017166137695
    3. 'ment' → logprob: -12.250017166137695
    4. 'ents' → logprob: -13.375017166137695
    5. 'ements' → logprob: -13.500017166137695
    6. 'nts' → logprob: -14.375017166137695
    7. 'm' → logprob: -14.500017166137695
    8. 'MENTS' → logprob: -15.000017166137695
    9. 'nements' → logprob: -15.000017166137695
    10. 'phants' → logprob: -15.250017166137695

Token 640: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7582406997680664
    2. '-' → logprob: -1.2582406997680664
    3. ' -' → logprob: -1.8832406997680664
    4. ')' → logprob: -3.3832406997680664
    5. '#' → logprob: -4.008240699768066
    6. 'B' → logprob: -4.758240699768066
    7. '+' → logprob: -5.133240699768066
    8. 'n' → logprob: -5.633240699768066
    9. '    ' → logprob: -5.758240699768066
    10. ' ' → logprob: -5.883240699768066

Token 641: 'rest' (ID: 7134)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7042083144187927
    2. 'n' → logprob: -1.7042083740234375
    3. '<|end|>' → logprob: -2.0792083740234375
    4. '-' → logprob: -2.3292083740234375
    5. ' -' → logprob: -3.2042083740234375
    6. '(n' → logprob: -5.2042083740234375
    7. '<|end|>' → logprob: -5.2042083740234375
    8. ' )' → logprob: -5.2042083740234375
    9. '#' → logprob: -5.3292083740234375
    10. '   ' → logprob: -5.4542083740234375

Token 642: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.004081959370523691
    2. 'ant' → logprob: -5.504081726074219
    3. '#' → logprob: -14.629081726074219
    4. 'antd' → logprob: -14.629081726074219
    5. 'nants' → logprob: -14.754081726074219
    6. '-' → logprob: -14.754081726074219
    7. 'a' → logprob: -15.004081726074219
    8. 'antes' → logprob: -15.129081726074219
    9. ']' → logprob: -15.254081726074219
    10. 'ANTS' → logprob: -15.379081726074219

Token 643: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3756573498249054
    2. ' -' → logprob: -1.625657320022583
    3. '-' → logprob: -2.750657320022583
    4. ' )' → logprob: -4.125657558441162
    5. '")' → logprob: -5.000657558441162
    6. '"' → logprob: -5.500657558441162
    7. '   ' → logprob: -5.625657558441162
    8. ' à' → logprob: -5.750657558441162
    9. ' ' → logprob: -6.000657558441162
    10. 'n' → logprob: -6.375657558441162

Token 644: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45262184739112854
    2. ')' → logprob: -2.4526219367980957
    3. '-' → logprob: -2.4526219367980957
    4. '*' → logprob: -2.7026219367980957
    5. 'B' → logprob: -3.2026219367980957
    6. ' -' → logprob: -3.9526219367980957
    7. ',' → logprob: -4.452621936798096
    8. 'C' → logprob: -4.827621936798096
    9. ' *' → logprob: -4.827621936798096
    10. '+' → logprob: -4.952621936798096

Token 645: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06304710358381271
    2. 'l' → logprob: -2.938047170639038
    3. ' n' → logprob: -5.063046932220459
    4. 'C' → logprob: -7.563046932220459
    5. 'la' → logprob: -8.063047409057617
    6. 'le' → logprob: -8.438047409057617
    7. ' l' → logprob: -8.938047409057617
    8. 'indice' → logprob: -9.563047409057617
    9. '```' → logprob: -9.688047409057617
    10. ' la' → logprob: -9.688047409057617

Token 646: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5562999844551086
    2. 'position' → logprob: -1.5562999248504639
    3. 'élé' → logprob: -1.6812999248504639
    4. 'indice' → logprob: -4.306300163269043
    5. 'current' → logprob: -5.306300163269043
    6. 'for' → logprob: -5.806300163269043
    7. '#' → logprob: -6.431300163269043
    8. 'index' → logprob: -6.931300163269043
    9. '```' → logprob: -7.806300163269043
    10. 'element' → logprob: -7.806300163269043

Token 647: ' n' (ID: 297)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9928370118141174
    2. '   ' → logprob: -1.2428369522094727
    3. ')' → logprob: -1.3678369522094727
    4. '])' → logprob: -3.9928369522094727
    5. '-' → logprob: -4.117836952209473
    6. ']*' → logprob: -5.242836952209473
    7. ')*' → logprob: -5.367836952209473
    8. ' )' → logprob: -5.492836952209473
    9. ')]' → logprob: -5.492836952209473
    10. 'n' → logprob: -5.617836952209473

Token 648: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12273171544075012
    2. ']' → logprob: -2.6227316856384277
    3. ')' → logprob: -3.2477316856384277
    4. ']*' → logprob: -6.497731685638428
    5. ')*' → logprob: -7.122731685638428
    6. '-' → logprob: -7.372731685638428
    7. '])' → logprob: -8.747732162475586
    8. ' -' → logprob: -9.122732162475586
    9. ' )' → logprob: -9.497732162475586
    10. ' ' → logprob: -9.622732162475586

Token 649: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1189577654004097
    2. ' -' → logprob: -2.743957757949829
    3. '-' → logprob: -3.618957757949829
    4. 'ans' → logprob: -4.493957996368408
    5. ' ' → logprob: -5.993957996368408
    6. ')' → logprob: -6.243957996368408
    7. ' *' → logprob: -6.493957996368408
    8. '*' → logprob: -6.743957996368408
    9. '  ' → logprob: -7.493957996368408
    10. '(ans' → logprob: -7.743957996368408

Token 650: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.48660722374916077
    2. '-' → logprob: -2.236607313156128
    3. ' -' → logprob: -2.361607313156128
    4. '   ' → logprob: -3.111607313156128
    5. ' B' → logprob: -3.236607313156128
    6. 'ans' → logprob: -3.611607313156128
    7. '*' → logprob: -3.986607313156128
    8. ' *' → logprob: -4.111607074737549
    9. ')' → logprob: -4.611607074737549
    10. ' ans' → logprob: -5.111607074737549

Token 651: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8477210998535156
    2. '-' → logprob: -2.0977210998535156
    3. ' -' → logprob: -2.0977210998535156
    4. '*' → logprob: -2.2227210998535156
    5. '   ' → logprob: -2.3477210998535156
    6. ' *' → logprob: -2.7227210998535156
    7. 'B' → logprob: -4.347721099853516
    8. ')' → logprob: -4.472721099853516
    9. ' ans' → logprob: -4.722721099853516
    10. '(ans' → logprob: -5.222721099853516

Token 652: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011288892477750778
    2. '(B' → logprob: -5.136289119720459
    3. '(' → logprob: -6.261289119720459
    4. 'n' → logprob: -6.511289119720459
    5. '(n' → logprob: -7.136289119720459
    6. '2' → logprob: -7.886289119720459
    7. ' B' → logprob: -8.5112886428833
    8. 'C' → logprob: -8.7612886428833
    9. '((' → logprob: -9.6362886428833
    10. 'MOD' → logprob: -10.0112886428833

Token 653: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00685567781329155
    2. '[n' → logprob: -5.631855487823486
    3. '[(' → logprob: -5.756855487823486
    4. '[C' → logprob: -10.256855964660645
    5. '[' → logprob: -10.506855964660645
    6. '(N' → logprob: -11.631855964660645
    7. 'N' → logprob: -12.006855964660645
    8. '[
' → logprob: -13.131855964660645
    9. 'n' → logprob: -13.381855964660645
    10. ' [' → logprob: -13.756855964660645

Token 654: '-n' (ID: 5219)
  Prédit: '-n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.044306833297014236
    2. '-' → logprob: -3.169306755065918
    3. 'n' → logprob: -7.169306755065918
    4. ' -' → logprob: -7.669306755065918
    5. '#' → logprob: -11.169306755065918
    6. ']' → logprob: -11.419306755065918
    7. '[n' → logprob: -11.919306755065918
    8. 'minus' → logprob: -12.419306755065918
    9. '-i' → logprob: -12.544306755065918
    10. '_minus' → logprob: -12.794306755065918

Token 655: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003802680876106024
    2. '])' → logprob: -8.125380516052246
    3. ' ]' → logprob: -10.875380516052246
    4. ']
' → logprob: -11.125380516052246
    5. '-' → logprob: -11.500380516052246
    6. '],' → logprob: -11.625380516052246
    7. ']-' → logprob: -12.125380516052246
    8. ']]' → logprob: -12.250380516052246
    9. ']

' → logprob: -12.625380516052246
    10. '']' → logprob: -13.000380516052246

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017084944993257523
    2. ']' → logprob: -6.376708507537842
    3. '-' → logprob: -12.751708030700684
    4. ' ' → logprob: -13.876708030700684
    5. '+' → logprob: -14.376708030700684
    6. '```' → logprob: -14.501708030700684
    7. '   ' → logprob: -15.501708030700684
    8. ']%' → logprob: -15.626708030700684
    9. '])' → logprob: -15.751708030700684
    10. '2' → logprob: -16.126708984375

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005423080874606967
    2. '])' → logprob: -8.000542640686035
    3. '+' → logprob: -9.250542640686035
    4. '],' → logprob: -9.500542640686035
    5. ' ]' → logprob: -11.250542640686035
    6. ']
' → logprob: -12.125542640686035
    7. ']*' → logprob: -13.000542640686035
    8. ']]' → logprob: -13.250542640686035
    9. ']))' → logprob: -13.625542640686035
    10. ')' → logprob: -13.750542640686035

Token 658: ' et' (ID: 859)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5642784833908081
    2. '<|end|>' → logprob: -0.9392784833908081
    3. '-' → logprob: -4.564278602600098
    4. '*' → logprob: -4.564278602600098
    5. ')' → logprob: -5.439278602600098
    6. '<|end|>' → logprob: -5.814278602600098
    7. '   ' → logprob: -5.939278602600098
    8. ' -' → logprob: -5.939278602600098
    9. '=' → logprob: -6.814278602600098
    10. '+' → logprob: -6.939278602600098

Token 659: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005506486631929874
    2. ' B' → logprob: -8.250550270080566
    3. 'n' → logprob: -9.625550270080566
    4. '(' → logprob: -9.750550270080566
    5. '...' → logprob: -10.375550270080566
    6. '(B' → logprob: -10.375550270080566
    7. '(n' → logprob: -10.500550270080566
    8. '#' → logprob: -11.250550270080566
    9. 'i' → logprob: -11.625550270080566
    10. ')' → logprob: -11.875550270080566

Token 660: '[N' (ID: 49776)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.02073024958372116
    2. '[N' → logprob: -4.770730018615723
    3. 'n' → logprob: -5.270730018615723
    4. '(n' → logprob: -5.520730018615723
    5. '[' → logprob: -6.145730018615723
    6. '[(' → logprob: -8.395730018615723
    7. '[i' → logprob: -9.520730018615723
    8. ']' → logprob: -9.770730018615723
    9. '(N' → logprob: -9.895730018615723
    10. 'N' → logprob: -9.895730018615723

Token 661: '-n' (ID: 5219)
  Prédit: '-n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.29031655192375183
    2. 'n' → logprob: -1.4153165817260742
    3. '-' → logprob: -4.915316581726074
    4. ' -' → logprob: -7.540316581726074
    5. '-(' → logprob: -8.540316581726074
    6. ']' → logprob: -8.665316581726074
    7. '_n' → logprob: -8.977816581726074
    8. '+n' → logprob: -9.227816581726074
    9. '(n' → logprob: -9.290316581726074
    10. '+' → logprob: -9.290316581726074

Token 662: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11414968967437744
    2. ']' → logprob: -2.239149570465088
    3. '1' → logprob: -8.239150047302246
    4. ' -' → logprob: -8.364150047302246
    5. ']}' → logprob: -8.489150047302246
    6. '])' → logprob: -8.614150047302246
    7. ']-' → logprob: -9.989150047302246
    8. ')' → logprob: -9.989150047302246
    9. '-n' → logprob: -10.114150047302246
    10. '   ' → logprob: -10.239150047302246

Token 663: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26276981830596924
    2. ']' → logprob: -1.6377698183059692
    3. ')' → logprob: -4.38776969909668
    4. '<|end|>' → logprob: -4.63776969909668
    5. '[' → logprob: -5.38776969909668
    6. '[n' → logprob: -6.13776969909668
    7. ' *' → logprob: -7.01276969909668
    8. ']*' → logprob: -7.51276969909668
    9. ':' → logprob: -7.63776969909668
    10. ',' → logprob: -7.63776969909668

Token 664: ' puiss' (ID: 102546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.952210009098053
    2. ']' → logprob: -1.2022099494934082
    3. '<|end|>' → logprob: -2.327209949493408
    4. '[' → logprob: -3.077209949493408
    5. '*' → logprob: -3.702209949493408
    6. '(' → logprob: -3.827209949493408
    7. ' (' → logprob: -3.827209949493408
    8. '   ' → logprob: -4.077209949493408
    9. ' *' → logprob: -4.577209949493408
    10. '(n' → logprob: -4.702209949493408

Token 665: 'ances' (ID: 3528)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8591354489326477
    2. '[' → logprob: -1.359135389328003
    3. ']' → logprob: -1.859135389328003
    4. '[n' → logprob: -2.359135389328003
    5. '=' → logprob: -2.984135389328003
    6. '[N' → logprob: -5.734135627746582
    7. '   ' → logprob: -5.734135627746582
    8. '-' → logprob: -5.734135627746582
    9. '#' → logprob: -6.359135627746582
    10. ')' → logprob: -6.859135627746582

Token 666: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4730067551136017
    2. ']' → logprob: -2.2230067253112793
    3. '[n' → logprob: -2.3480067253112793
    4. '[N' → logprob: -2.5980067253112793
    5. '[i' → logprob: -3.2230067253112793
    6. '   ' → logprob: -3.7230067253112793
    7. '-' → logprob: -4.473006725311279
    8. '#' → logprob: -5.348006725311279
    9. '_' → logprob: -5.723006725311279
    10. '[-' → logprob: -6.098006725311279

Token 667: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023057200014591217
    2. ' ' → logprob: -6.377305507659912
    3. 'de' → logprob: -7.627305507659912
    4. '<|end|>' → logprob: -10.62730598449707
    5. 'two' → logprob: -10.75230598449707
    6. 'B' → logprob: -10.75230598449707
    7. 'mod' → logprob: -11.62730598449707
    8. ' deux' → logprob: -11.87730598449707
    9. ' two' → logprob: -12.37730598449707
    10. ')' → logprob: -12.43980598449707

Token 668: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00031091354321688414
    2. 'de' → logprob: -8.625310897827148
    3. 'two' → logprob: -10.000310897827148
    4. '<|end|>' → logprob: -10.375310897827148
    5. 'mod' → logprob: -11.750310897827148
    6. ' ' → logprob: -11.750310897827148
    7. '(' → logprob: -12.125310897827148
    8. '1' → logprob: -12.500310897827148
    9. ')' → logprob: -12.500310897827148
    10. '[' → logprob: -12.625310897827148

Token 669: ' spécifiques' (ID: 110075)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.32194843888282776
    2. '   ' → logprob: -1.9469484090805054
    3. '[' → logprob: -2.321948528289795
    4. ']' → logprob: -4.446948528289795
    5. '[i' → logprob: -5.446948528289795
    6. ')' → logprob: -5.696948528289795
    7. '[N' → logprob: -5.821948528289795
    8. '-' → logprob: -6.196948528289795
    9. '[
' → logprob: -6.196948528289795
    10. '<|end|>' → logprob: -6.196948528289795

Token 670: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4879361093044281
    2. ']' → logprob: -1.4879361391067505
    3. '<|end|>' → logprob: -2.737936019897461
    4. '[n' → logprob: -3.112936019897461
    5. ')' → logprob: -3.737936019897461
    6. '[' → logprob: -4.612936019897461
    7. '<|end|>' → logprob: -5.487936019897461
    8. '  ' → logprob: -6.737936019897461
    9. ' *' → logprob: -7.112936019897461
    10. '+' → logprob: -7.237936019897461

Token 671: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6913191080093384
    2. ']' → logprob: -1.8163191080093384
    3. '(N' → logprob: -1.8163191080093384
    4. 'n' → logprob: -2.066318988800049
    5. ' (' → logprob: -2.191318988800049
    6. ' n' → logprob: -2.816318988800049
    7. 'i' → logprob: -3.441318988800049
    8. ')' → logprob: -3.691318988800049
    9. ' i' → logprob: -3.691318988800049
    10. 'N' → logprob: -3.816318988800049

Token 672: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6091218590736389
    2. ' n' → logprob: -1.1091217994689941
    3. 'N' → logprob: -3.734121799468994
    4. ' (' → logprob: -4.234121799468994
    5. '(n' → logprob: -4.359121799468994
    6. '-' → logprob: -4.734121799468994
    7. '-n' → logprob: -4.734121799468994
    8. ' position' → logprob: -4.859121799468994
    9. '1' → logprob: -4.859121799468994
    10. ' ' → logprob: -4.984121799468994

Token 673: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004590922966599464
    2. 'ans' → logprob: -6.00459098815918
    3. ' ans' → logprob: -7.37959098815918
    4. ')' → logprob: -7.62959098815918
    5. '	ans' → logprob: -8.25459098815918
    6. '  ' → logprob: -9.12959098815918
    7. '    
' → logprob: -9.75459098815918
    8. '(ans' → logprob: -9.75459098815918
    9. '
' → logprob: -9.87959098815918
    10. ']' → logprob: -10.00459098815918

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005823921412229538
    2. '[n' → logprob: -7.005824089050293
    3. '[' → logprob: -7.380824089050293
    4. ' *' → logprob: -7.505824089050293
    5. 'for' → logprob: -7.755824089050293
    6. '+' → logprob: -7.755824089050293
    7. ')' → logprob: -7.880824089050293
    8. ' +' → logprob: -7.880824089050293
    9. ' for' → logprob: -8.380824089050293
    10. '*' → logprob: -8.380824089050293

Token 675: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06137220934033394
    2. 'ans' → logprob: -3.9363722801208496
    3. ')' → logprob: -4.56137228012085
    4. ' *' → logprob: -4.68637228012085
    5. ' ans' → logprob: -4.93637228012085
    6. '*' → logprob: -5.43637228012085
    7. ']' → logprob: -6.56137228012085
    8. ' ' → logprob: -6.68637228012085
    9. '[' → logprob: -6.93637228012085
    10. '+' → logprob: -7.31137228012085

Token 676: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2856191396713257
    2. 'ans' → logprob: -1.4106191396713257
    3. ' ans' → logprob: -5.535619258880615
    4. '	ans' → logprob: -8.160618782043457
    5. '   ' → logprob: -9.535618782043457
    6. '    
' → logprob: -10.410618782043457
    7. 'if' → logprob: -10.660618782043457
    8. '(ans' → logprob: -10.910618782043457
    9. '```' → logprob: -11.410618782043457
    10. '       ' → logprob: -12.035618782043457

Token 677: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1844648122787476
    2. '(B' → logprob: -1.1844648122787476
    3. '(' → logprob: -2.184464931488037
    4. '(C' → logprob: -2.434464931488037
    5. 'C' → logprob: -2.559464931488037
    6. '((' → logprob: -3.434464931488037
    7. '(ans' → logprob: -4.059464931488037
    8. 'ans' → logprob: -4.184464931488037
    9. '(N' → logprob: -4.809464931488037
    10. ' (' → logprob: -4.934464931488037

Token 678: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.008905507624149323
    2. '[N' → logprob: -4.758905410766602
    3. 'n' → logprob: -9.508905410766602
    4. '[' → logprob: -9.508905410766602
    5. '[C' → logprob: -10.508905410766602
    6. 'N' → logprob: -11.008905410766602
    7. '```' → logprob: -11.383905410766602
    8. ']' → logprob: -11.446405410766602
    9. '[i' → logprob: -11.696405410766602
    10. '

' → logprob: -12.258905410766602

Token 679: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.103181853890419
    2. ']' → logprob: -2.603181838989258
    3. 'n' → logprob: -4.478181838989258
    4. '[n' → logprob: -4.603181838989258
    5. '[' → logprob: -6.978181838989258
    6. '])' → logprob: -7.478181838989258
    7. ' -' → logprob: -7.603181838989258
    8. ']-' → logprob: -7.978181838989258
    9. '[-' → logprob: -9.978181838989258
    10. '   ' → logprob: -10.353181838989258

Token 680: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.657694418914616e-05
    2. '2' → logprob: -10.250056266784668
    3. ' ' → logprob: -11.625056266784668
    4. '-' → logprob: -12.500056266784668
    5. 'n' → logprob: -13.125056266784668
    6. '```' → logprob: -13.125056266784668
    7. '   ' → logprob: -13.937556266784668
    8. ']' → logprob: -14.125056266784668
    9. ')' → logprob: -14.437556266784668
    10. '0' → logprob: -14.687556266784668

Token 681: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021691746078431606
    2. '-' → logprob: -7.127169132232666
    3. '])' → logprob: -7.502169132232666
    4. ']-' → logprob: -7.752169132232666
    5. '],' → logprob: -8.877169609069824
    6. ' ]' → logprob: -9.877169609069824
    7. ' -' → logprob: -10.127169609069824
    8. '+' → logprob: -10.502169609069824
    9. ']*' → logprob: -10.752169609069824
    10. ']
' → logprob: -11.502169609069824

Token 682: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3820974826812744
    2. ']' → logprob: -2.2570974826812744
    3. '[n' → logprob: -2.2570974826812744
    4. ' *' → logprob: -3.5070974826812744
    5. '[' → logprob: -3.5070974826812744
    6. ')' → logprob: -3.6320974826812744
    7. '<|end|>' → logprob: -5.132097244262695
    8. '*' → logprob: -6.382097244262695
    9. '-' → logprob: -6.382097244262695
    10. ' =' → logprob: -6.507097244262695

Token 683: ' puissance' (ID: 63494)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.6750456094741821
    2. '(C' → logprob: -1.3000456094741821
    3. '(ans' → logprob: -2.5500454902648926
    4. 'B' → logprob: -3.0500454902648926
    5. 'ans' → logprob: -3.4250454902648926
    6. 'C' → logprob: -4.050045490264893
    7. '(' → logprob: -4.175045490264893
    8. ' (' → logprob: -4.425045490264893
    9. '((' → logprob: -4.925045490264893
    10. '(n' → logprob: -6.675045490264893

Token 684: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8691664338111877
    2. '   ' → logprob: -1.369166374206543
    3. '[' → logprob: -1.619166374206543
    4. '_' → logprob: -2.494166374206543
    5. '=' → logprob: -4.619166374206543
    6. ']' → logprob: -4.744166374206543
    7. 'of' → logprob: -5.244166374206543
    8. '[n' → logprob: -5.244166374206543
    9. '(n' → logprob: -5.869166374206543
    10. 'def' → logprob: -6.619166374206543

Token 685: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004557580687105656
    2. 'C' → logprob: -6.5045576095581055
    3. 'de' → logprob: -6.7545576095581055
    4. '(' → logprob: -7.3795576095581055
    5. '(C' → logprob: -7.5045576095581055
    6. ' ' → logprob: -8.379557609558105
    7. 'pow' → logprob: -9.129557609558105
    8. '(pow' → logprob: -9.754557609558105
    9. 'two' → logprob: -10.379557609558105
    10. 'ans' → logprob: -10.379557609558105

Token 686: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00027599421446211636
    2. '(' → logprob: -8.500275611877441
    3. 'C' → logprob: -10.750275611877441
    4. '1' → logprob: -11.750275611877441
    5. ' ' → logprob: -11.750275611877441
    6. '(C' → logprob: -12.000275611877441
    7. 'de' → logprob: -12.125275611877441
    8. 'ans' → logprob: -12.375275611877441
    9. '<|end|>' → logprob: -12.375275611877441
    10. 'B' → logprob: -13.000275611877441

Token 687: ' selon' (ID: 27571)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.41474300622940063
    2. '   ' → logprob: -1.1647429466247559
    3. '[' → logprob: -4.039742946624756
    4. ')' → logprob: -5.289742946624756
    5. ']' → logprob: -7.289742946624756
    6. '<|end|>' → logprob: -7.539742946624756
    7. ' *' → logprob: -7.789742946624756
    8. '[i' → logprob: -7.914742946624756
    9. 'for' → logprob: -7.914742946624756
    10. '[(' → logprob: -8.414743423461914

Token 688: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19134892523288727
    2. ' n' → logprob: -2.4413490295410156
    3. '(n' → logprob: -2.6913490295410156
    4. 'l' → logprob: -5.191349029541016
    5. 'the' → logprob: -5.566349029541016
    6. ' la' → logprob: -5.941349029541016
    7. '[n' → logprob: -6.691349029541016
    8. ' (' → logprob: -6.691349029541016
    9. ' l' → logprob: -7.066349029541016
    10. '(' → logprob: -7.191349029541016

Token 689: ' début' (ID: 29589)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0513596348464489
    2. '(n' → logprob: -3.0513596534729004
    3. 'position' → logprob: -6.9263596534729
    4. 'indice' → logprob: -7.4263596534729
    5. ' n' → logprob: -8.426359176635742
    6. 'index' → logprob: -9.051359176635742
    7. '[n' → logprob: -9.176359176635742
    8. ' (' → logprob: -9.426359176635742
    9. '(' → logprob: -9.426359176635742
    10. '#' → logprob: -9.551359176635742

Token 690: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018710298463702202
    2. ' ans' → logprob: -5.893710136413574
    3. 'for' → logprob: -6.018710136413574
    4. ' for' → logprob: -6.268710136413574
    5. 'ans' → logprob: -6.393710136413574
    6. ' +' → logprob: -6.643710136413574
    7. ':' → logprob: -6.643710136413574
    8. ']' → logprob: -6.768710136413574
    9. ')' → logprob: -6.768710136413574
    10. '+' → logprob: -7.018710136413574

Token 691: ' tableau' (ID: 67053)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09906008094549179
    2. 'range' → logprob: -3.72406005859375
    3. 'indice' → logprob: -3.84906005859375
    4. 'C' → logprob: -4.22406005859375
    5. 'la' → logprob: -4.72406005859375
    6. 'B' → logprob: -5.59906005859375
    7. 'c' → logprob: -5.84906005859375
    8. 'interval' → logprob: -5.84906005859375
    9. 'index' → logprob: -5.97406005859375
    10. 'segment' → logprob: -6.22406005859375

Token 692: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011621268931776285
    2. ' ans' → logprob: -7.126162052154541
    3. 'ans' → logprob: -8.1261625289917
    4. '	ans' → logprob: -10.6261625289917
    5. '(ans' → logprob: -12.0011625289917
    6. '+' → logprob: -12.1261625289917
    7. '   ' → logprob: -12.2511625289917
    8. '    
' → logprob: -12.6261625289917
    9. ' +' → logprob: -12.6261625289917
    10. '
' → logprob: -13.0011625289917

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01138378493487835
    2. 'ans' → logprob: -5.011384010314941
    3. ' ans' → logprob: -5.511384010314941
    4. '	ans' → logprob: -8.386384010314941
    5. '(ans' → logprob: -9.136384010314941
    6. '*' → logprob: -10.261384010314941
    7. ' *' → logprob: -10.261384010314941
    8. 'for' → logprob: -10.636384010314941
    9. ')' → logprob: -10.636384010314941
    10. ' for' → logprob: -10.761384010314941

Token 694: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1879226267337799
    2. 'ans' → logprob: -2.187922716140747
    3. ' ans' → logprob: -3.312922716140747
    4. ')' → logprob: -4.812922477722168
    5. '(ans' → logprob: -6.062922477722168
    6. 'for' → logprob: -6.437922477722168
    7. ' *' → logprob: -6.437922477722168
    8. '[' → logprob: -6.562922477722168
    9. '	ans' → logprob: -6.562922477722168
    10. ' ' → logprob: -6.687922477722168

Token 695: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09277274459600449
    2. ' ans' → logprob: -2.8427727222442627
    3. 'ans' → logprob: -3.5927727222442627
    4. '	ans' → logprob: -6.967772960662842
    5. ' for' → logprob: -8.092772483825684
    6. ')' → logprob: -8.467772483825684
    7. '(ans' → logprob: -8.467772483825684
    8. ' ' → logprob: -8.592772483825684
    9. '  ' → logprob: -8.842772483825684
    10. ' +' → logprob: -9.342772483825684

Token 696: ' Chaque' (ID: 94758)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12718679010868073
    2. 'B' → logprob: -3.3771867752075195
    3. ' ans' → logprob: -3.6271867752075195
    4. '(ans' → logprob: -3.8771867752075195
    5. 'C' → logprob: -4.0021867752075195
    6. '(C' → logprob: -5.1271867752075195
    7. '(B' → logprob: -5.2521867752075195
    8. ' B' → logprob: -6.1271867752075195
    9. ' (' → logprob: -6.7521867752075195
    10. '((' → logprob: -6.7521867752075195

Token 697: ' terme' (ID: 42959)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6378822326660156
    2. 'ans' → logprob: -2.0128822326660156
    3. 'term' → logprob: -2.0128822326660156
    4. 'C' → logprob: -2.1378822326660156
    5. 'élé' → logprob: -2.6378822326660156
    6. '[n' → logprob: -2.7628822326660156
    7. '[' → logprob: -3.6378822326660156
    8. ']' → logprob: -4.387882232666016
    9. '+=' → logprob: -4.387882232666016
    10. '*' → logprob: -4.512882232666016

Token 698: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0652860403060913
    2. '   ' → logprob: -2.065286159515381
    3. '+=' → logprob: -2.065286159515381
    4. '=' → logprob: -2.190286159515381
    5. ' =' → logprob: -2.440286159515381
    6. ' *=' → logprob: -2.815286159515381
    7. '*=' → logprob: -3.315286159515381
    8. '*' → logprob: -3.940286159515381
    9. ' *' → logprob: -4.065286159515381
    10. '[' → logprob: -4.565286159515381

Token 699: ' multip' (ID: 17524)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -1.0533753633499146
    2. ' (' → logprob: -1.8033753633499146
    3. '(' → logprob: -2.178375244140625
    4. 'C' → logprob: -2.428375244140625
    5. ' +=' → logprob: -2.553375244140625
    6. '   ' → logprob: -3.303375244140625
    7. ')' → logprob: -3.303375244140625
    8. '+' → logprob: -4.053375244140625
    9. ' *' → logprob: -4.053375244140625
    10. '*' → logprob: -4.303375244140625

Token 700: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.0927467793226242
    2. '*' → logprob: -2.8427467346191406
    3. 'ip' → logprob: -4.217746734619141
    4. '   ' → logprob: -5.342746734619141
    5. ' *' → logprob: -5.467746734619141
    6. 'iqué' → logprob: -6.217746734619141
    7. 'ipl' → logprob: -6.467746734619141
    8. '  ' → logprob: -7.467746734619141
    9. 'ic' → logprob: -7.717746734619141
    10. ' ' → logprob: -8.46774673461914

Token 701: ' et' (ID: 859)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.27383553981781
    2. '(C' → logprob: -1.77383553981781
    3. '   ' → logprob: -1.89883553981781
    4. '(' → logprob: -2.0238356590270996
    5. 'C' → logprob: -3.0238356590270996
    6. ' by' → logprob: -3.2738356590270996
    7. 'par' → logprob: -3.2738356590270996
    8. 'by' → logprob: -3.7738356590270996
    9. ',' → logprob: -4.1488356590271
    10. '=' → logprob: -4.1488356590271

Token 702: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3591509759426117
    2. 'C' → logprob: -2.6091508865356445
    3. '(' → logprob: -3.2341508865356445
    4. 'B' → logprob: -3.3591508865356445
    5. '(ans' → logprob: -3.4841508865356445
    6. ' (' → logprob: -3.6091508865356445
    7. '   ' → logprob: -4.2341508865356445
    8. '(B' → logprob: -4.4841508865356445
    9. '(C' → logprob: -4.6091508865356445
    10. '((' → logprob: -4.7341508865356445

Token 703: ' somme' (ID: 64484)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.024003028869629
    2. '+' → logprob: -1.399003028869629
    3. ' )' → logprob: -2.274003028869629
    4. ')' → logprob: -2.774003028869629
    5. '+=' → logprob: -2.899003028869629
    6. ' +' → logprob: -3.024003028869629
    7. ' ans' → logprob: -3.524003028869629
    8. '=' → logprob: -3.649003028869629
    9. ' space' → logprob: -4.274003028869629
    10. ' ' → logprob: -4.274003028869629

Token 704: ' est' (ID: 893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07033752650022507
    2. ' +=' → logprob: -3.0703375339508057
    3. '   ' → logprob: -4.070337295532227
    4. '=' → logprob: -6.695337295532227
    5. 'ans' → logprob: -6.820337295532227
    6. ']+=' → logprob: -6.945337295532227
    7. '(ans' → logprob: -8.445337295532227
    8. '%=' → logprob: -8.695337295532227
    9. ')' → logprob: -8.945337295532227
    10. ' ans' → logprob: -8.945337295532227

Token 705: ' accum' (ID: 23148)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6134930849075317
    2. '(' → logprob: -1.3634930849075317
    3. '(ans' → logprob: -2.113492965698242
    4. '(C' → logprob: -2.863492965698242
    5. '(B' → logprob: -4.613492965698242
    6. '+' → logprob: -5.863492965698242
    7. '   ' → logprob: -6.238492965698242
    8. '(
' → logprob: -6.238492965698242
    9. '+=' → logprob: -6.488492965698242
    10. '%' → logprob: -6.613492965698242

Token 706: 'ul' (ID: 361)
  Prédit: 'érée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.601863443851471
    2. 'ul' → logprob: -1.7268633842468262
    3. 'ulé' → logprob: -2.101863384246826
    4. 'uée' → logprob: -2.601863384246826
    5. '   ' → logprob: -3.476863384246826
    6. 'u' → logprob: -3.601863384246826
    7. 'urée' → logprob: -4.976863384246826
    8. ' +=' → logprob: -5.976863384246826
    9. 'érées' → logprob: -6.101863384246826
    10. 'ué' → logprob: -6.601863384246826

Token 707: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5084980130195618
    2. '   ' → logprob: -1.133497953414917
    3. 'ated' → logprob: -3.258497953414917
    4. 'é' → logprob: -4.383498191833496
    5. ' ans' → logprob: -5.008498191833496
    6. 'er' → logprob: -5.383498191833496
    7. 'ans' → logprob: -5.758498191833496
    8. 'uée' → logprob: -5.883498191833496
    9. 'e' → logprob: -6.008498191833496
    10. '       ' → logprob: -6.383498191833496

Token 708: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041274216026067734
    2. ' +=' → logprob: -3.291274309158325
    3. '+=' → logprob: -6.291274070739746
    4. ' ans' → logprob: -7.166274070739746
    5. ' =' → logprob: -8.666274070739746
    6. '(ans' → logprob: -8.791274070739746
    7. 'ans' → logprob: -9.291274070739746
    8. '	ans' → logprob: -10.416274070739746
    9. '=' → logprob: -10.666274070739746
    10. '  ' → logprob: -10.916274070739746

Token 709: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007177923689596355
    2. ' ans' → logprob: -7.250717639923096
    3. '(ans' → logprob: -12.250718116760254
    4. '   ' → logprob: -13.625718116760254
    5. '	ans' → logprob: -13.875718116760254
    6. 'answer' → logprob: -15.125718116760254
    7. '
' → logprob: -15.375718116760254
    8. '_ans' → logprob: -16.500717163085938
    9. '```' → logprob: -16.875717163085938
    10. 'ann' → logprob: -16.875717163085938

Token 710: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027813989436253905
    2. ' ans' → logprob: -8.75027847290039
    3. 'ans' → logprob: -9.62527847290039
    4. '	ans' → logprob: -11.37527847290039
    5. 'for' → logprob: -11.50027847290039
    6. ' for' → logprob: -11.75027847290039
    7. '(ans' → logprob: -12.37527847290039
    8. ' +=' → logprob: -12.50027847290039
    9. ' =' → logprob: -12.62527847290039
    10. '       ' → logprob: -12.87527847290039

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013202552509028465
    2. ' ans' → logprob: -9.375131607055664
    3. 'ans' → logprob: -10.375131607055664
    4. '```' → logprob: -12.500131607055664
    5. '	ans' → logprob: -12.500131607055664
    6. '   ' → logprob: -12.875131607055664
    7. ' for' → logprob: -13.250131607055664
    8. 'for' → logprob: -13.750131607055664
    9. '(ans' → logprob: -14.000131607055664
    10. '       ' → logprob: -14.000131607055664

Token 712: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005906042642891407
    2. 'ans' (adapté à ' ans') → logprob: -5.630906105041504
    3. ' ans' → logprob: -6.130906105041504
    4. '	ans' → logprob: -10.005906105041504
    5. '(ans' → logprob: -10.505906105041504
    6. 'for' → logprob: -10.880906105041504
    7. ' for' → logprob: -11.255906105041504
    8. '```' → logprob: -12.380906105041504
    9. '   ' → logprob: -12.380906105041504
    10. '    
' → logprob: -12.630906105041504

Token 713: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31355029344558716
    2. '+=' → logprob: -1.3135502338409424
    3. '=' → logprob: -8.938549995422363
    4. '+=(' → logprob: -9.188549995422363
    5. '+' → logprob: -11.063549995422363
    6. ' =' → logprob: -11.438549995422363
    7. ']+=' → logprob: -11.438549995422363
    8. '   ' → logprob: -11.688549995422363
    9. '	' → logprob: -13.438549995422363
    10. 'import' → logprob: -13.438549995422363

Token 714: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.314802348613739
    2. '(C' → logprob: -1.3148024082183838
    3. '((' → logprob: -6.939802169799805
    4. '(' → logprob: -7.939802169799805
    5. ' C' → logprob: -9.564802169799805
    6. '(
' → logprob: -9.564802169799805
    7. '   ' → logprob: -10.814802169799805
    8. ' (' → logprob: -10.814802169799805
    9. '(((' → logprob: -11.439802169799805
    10. '(B' → logprob: -11.814802169799805

Token 715: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.8889261304575484e-06
    2. ' [' → logprob: -13.375003814697266
    3. '[' → logprob: -13.625003814697266
    4. 'n' → logprob: -14.625003814697266
    5. '[N' → logprob: -14.625003814697266
    6. '[(' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '[
' → logprob: -17.625003814697266
    9. '(n' → logprob: -18.250003814697266
    10. '[i' → logprob: -18.625003814697266

Token 716: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.612634362885728e-05
    2. ' -' → logprob: -9.500076293945312
    3. '[' → logprob: -15.000076293945312
    4. '1' → logprob: -15.125076293945312
    5. '   ' → logprob: -15.375076293945312
    6. ']-' → logprob: -15.875076293945312
    7. ']' → logprob: -16.500076293945312
    8. '[-' → logprob: -16.625076293945312
    9. '−' → logprob: -17.125076293945312
    10. 'n' → logprob: -17.625076293945312

Token 717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -12.12501049041748
    3. '   ' → logprob: -12.87501049041748
    4. '```' → logprob: -14.00001049041748
    5. '-' → logprob: -14.75001049041748
    6. ']' → logprob: -15.62501049041748
    7. '[' → logprob: -15.68751049041748
    8. '2' → logprob: -16.875009536743164
    9. '１' → logprob: -16.875009536743164
    10. ')' → logprob: -17.312509536743164

Token 718: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2062963992357254
    2. ']' → logprob: -1.831296443939209
    3. ' *' → logprob: -3.706296443939209
    4. ']*' → logprob: -6.706296443939209
    5. ')' → logprob: -8.20629596710205
    6. '*(' → logprob: -10.58129596710205
    7. '   ' → logprob: -10.58129596710205
    8. ' ' → logprob: -10.70629596710205
    9. '#' → logprob: -11.20629596710205
    10. ' ' → logprob: -11.58129596710205

Token 719: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.179962620139122
    2. ' *' → logprob: -1.8049626350402832
    3. '*(' → logprob: -8.679962158203125
    4. '   ' → logprob: -11.304962158203125
    5. '(' → logprob: -11.554962158203125
    6. ' ' → logprob: -12.054962158203125
    7. '%' → logprob: -12.804962158203125
    8. 'B' → logprob: -13.054962158203125
    9. '#' → logprob: -13.054962158203125
    10. ' ' → logprob: -13.179962158203125

Token 720: ' ((' (ID: 3536)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0027604142669588327
    2. '((' → logprob: -6.377760410308838
    3. 'B' → logprob: -7.127760410308838
    4. '(' → logprob: -8.627760887145996
    5. '(
' → logprob: -10.002760887145996
    6. ' (' → logprob: -11.377760887145996
    7. '(((' → logprob: -12.627760887145996
    8. '   ' → logprob: -12.877760887145996
    9. '(C' → logprob: -13.502760887145996
    10. '(abs' → logprob: -13.502760887145996

Token 721: 'N' (ID: 45)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006295174825936556
    2. '(B' → logprob: -7.500629425048828
    3. '(' → logprob: -10.750629425048828
    4. ' B' → logprob: -11.500629425048828
    5. '(n' → logprob: -11.625629425048828
    6. 'N' → logprob: -11.625629425048828
    7. 'n' → logprob: -12.125629425048828
    8. '2' → logprob: -12.250629425048828
    9. '   ' → logprob: -12.375629425048828
    10. '(N' → logprob: -12.500629425048828

Token 722: '-n' (ID: 5219)
  Prédit: '-n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.37876904010772705
    2. '-' → logprob: -1.628769040107727
    3. ' -' → logprob: -2.1287689208984375
    4. 'n' → logprob: -9.003768920898438
    5. '-
' → logprob: -11.753768920898438
    6. ' ' → logprob: -13.128768920898438
    7. '-N' → logprob: -13.378768920898438
    8. '   ' → logprob: -13.503768920898438
    9. '-m' → logprob: -14.378768920898438
    10. '#' → logprob: -14.503768920898438

Token 723: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4046936333179474
    2. '-' → logprob: -1.779693603515625
    3. '+' → logprob: -3.029693603515625
    4. ')*' → logprob: -3.154693603515625
    5. ' -' → logprob: -3.404693603515625
    6. 'B' → logprob: -4.654693603515625
    7. '*' → logprob: -4.904693603515625
    8. '>=' → logprob: -4.904693603515625
    9. '>' → logprob: -5.779693603515625
    10. '   ' → logprob: -6.154693603515625

Token 724: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7953932881355286
    2. ' *' → logprob: -1.2953932285308838
    3. ')' → logprob: -1.9203932285308838
    4. '+' → logprob: -2.795393228530884
    5. '-' → logprob: -3.795393228530884
    6. 'B' → logprob: -4.170393466949463
    7. ' -' → logprob: -4.295393466949463
    8. ' +' → logprob: -5.045393466949463
    9. ')*' → logprob: -5.795393466949463
    10. '   ' → logprob: -6.545393466949463

Token 725: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0013049989938735962
    2. '(B' → logprob: -6.751305103302002
    3. ' B' → logprob: -9.251304626464844
    4. '(' → logprob: -10.626304626464844
    5. ' (' → logprob: -12.126304626464844
    6. '   ' → logprob: -13.001304626464844
    7. '2' → logprob: -13.251304626464844
    8. '((' → logprob: -13.751304626464844
    9. '	B' → logprob: -14.126304626464844
    10. 'ans' → logprob: -15.126304626464844

Token 726: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -1.9623810658231378e-05
    2. '[n' → logprob: -11.750020027160645
    3. 'N' → logprob: -11.875020027160645
    4. '[' → logprob: -12.500020027160645
    5. '[B' → logprob: -14.500020027160645
    6. ' [' → logprob: -15.625020027160645
    7. '[(' → logprob: -15.750020027160645
    8. '   ' → logprob: -16.000019073486328
    9. '(N' → logprob: -16.000019073486328
    10. '[[' → logprob: -17.625019073486328

Token 727: '-n' (ID: 5219)
  Prédit: '-n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.0014323819195851684
    2. '-' → logprob: -7.001432418823242
    3. '[n' → logprob: -8.501432418823242
    4. ' -' → logprob: -8.876432418823242
    5. '[-' → logprob: -9.126432418823242
    6. 'n' → logprob: -10.001432418823242
    7. '[' → logprob: -11.376432418823242
    8. '_n' → logprob: -12.001432418823242
    9. '-N' → logprob: -13.251432418823242
    10. '-i' → logprob: -14.376432418823242

Token 728: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004336493439041078
    2. ' -' → logprob: -7.875433444976807
    3. '[' → logprob: -10.125433921813965
    4. '[-' → logprob: -12.250433921813965
    5. ']' → logprob: -13.000433921813965
    6. '   ' → logprob: -13.250433921813965
    7. '[n' → logprob: -13.625433921813965
    8. ')' → logprob: -14.000433921813965
    9. '<|end|>' → logprob: -14.500433921813965
    10. '```' → logprob: -15.125433921813965

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026406891644001007
    2. '-' → logprob: -3.65140700340271
    3. ' -' → logprob: -9.901407241821289
    4. ' ' → logprob: -10.651407241821289
    5. '   ' → logprob: -11.026407241821289
    6. '```' → logprob: -11.651407241821289
    7. '[' → logprob: -13.213907241821289
    8. '0' → logprob: -14.088907241821289
    9. '2' → logprob: -14.151407241821289
    10. ')' → logprob: -14.713907241821289

Token 730: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19285494089126587
    2. '-' → logprob: -1.817854881286621
    3. '+' → logprob: -4.442854881286621
    4. ' +' → logprob: -7.567854881286621
    5. ')' → logprob: -8.067854881286621
    6. '%' → logprob: -8.692854881286621
    7. '-B' → logprob: -9.192854881286621
    8. '*' → logprob: -9.692854881286621
    9. '    ' → logprob: -10.942854881286621
    10. ' *' → logprob: -10.942854881286621

Token 731: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.37373510003089905
    2. '-' → logprob: -1.2487350702285767
    3. '+' → logprob: -3.873735189437866
    4. ' +' → logprob: -5.998734951019287
    5. '-B' → logprob: -7.498734951019287
    6. '*' → logprob: -7.623734951019287
    7. ')' → logprob: -8.498735427856445
    8. ' *' → logprob: -8.623735427856445
    9. '%' → logprob: -8.998735427856445
    10. '   ' → logprob: -9.998735427856445

Token 732: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.003017280250787735
    2. '(n' → logprob: -7.253017425537109
    3. '(B' → logprob: -7.378017425537109
    4. '(' → logprob: -7.628017425537109
    5. 'n' → logprob: -7.753017425537109
    6. 'N' → logprob: -8.00301742553711
    7. 'MOD' → logprob: -9.37801742553711
    8. ' B' → logprob: -9.50301742553711
    9. '   ' → logprob: -9.87801742553711
    10. '(N' → logprob: -10.00301742553711

Token 733: '[N' (ID: 49776)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.13060371577739716
    2. '[N' → logprob: -2.130603790283203
    3. 'n' → logprob: -6.005603790283203
    4. 'N' → logprob: -6.755603790283203
    5. '[' → logprob: -11.380603790283203
    6. '[(' → logprob: -12.255603790283203
    7. '(n' → logprob: -12.255603790283203
    8. '(N' → logprob: -12.630603790283203
    9. '	n' → logprob: -12.755603790283203
    10. '[-' → logprob: -13.630603790283203

Token 734: '-n' (ID: 5219)
  Prédit: '-n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.0032453243620693684
    2. 'n' → logprob: -5.8782453536987305
    3. '-' → logprob: -8.00324535369873
    4. ' -' → logprob: -9.37824535369873
    5. '[n' → logprob: -12.00324535369873
    6. '[' → logprob: -12.00324535369873
    7. '   ' → logprob: -13.62824535369873
    8. '[-' → logprob: -13.75324535369873
    9. '-m' → logprob: -14.25324535369873
    10. '_n' → logprob: -14.37824535369873

Token 735: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.588610827922821
    2. ']' → logprob: -0.838610827922821
    3. '-' → logprob: -4.463610649108887
    4. ']-' → logprob: -7.713610649108887
    5. ')' → logprob: -8.338610649108887
    6. ' ])' → logprob: -9.838610649108887
    7. '])-' → logprob: -10.088610649108887
    8. ' -' → logprob: -10.588610649108887
    9. '])*' → logprob: -10.588610649108887
    10. ' ]' → logprob: -10.588610649108887

Token 736: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.045321255922317505
    2. '*' → logprob: -3.545321226119995
    3. '   ' → logprob: -4.295321464538574
    4. ' ' → logprob: -7.170321464538574
    5. ' -' → logprob: -7.670321464538574
    6. ')' → logprob: -8.170321464538574
    7. ' +' → logprob: -9.170321464538574
    8. '  ' → logprob: -10.045321464538574
    9. '    ' → logprob: -10.045321464538574
    10. '+' → logprob: -10.670321464538574

Token 737: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0014084475114941597
    2. '(B' → logprob: -6.626408576965332
    3. ' B' → logprob: -10.251408576965332
    4. '((' → logprob: -11.126408576965332
    5. '   ' → logprob: -11.126408576965332
    6. '(' → logprob: -11.251408576965332
    7. '	B' → logprob: -13.501408576965332
    8. ' (' → logprob: -13.501408576965332
    9. '(n' → logprob: -14.626408576965332
    10. '  ' → logprob: -14.876408576965332

Token 738: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.558399319241289e-05
    2. 'n' → logprob: -10.625025749206543
    3. '[' → logprob: -14.000025749206543
    4. ' [' → logprob: -15.500025749206543
    5. '   ' → logprob: -17.125024795532227
    6. '[i' → logprob: -17.875024795532227
    7. '	n' → logprob: -17.875024795532227
    8. '(n' → logprob: -17.875024795532227
    9. '\[' → logprob: -18.000024795532227
    10. ' n' → logprob: -18.500024795532227

Token 739: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010638902895152569
    2. '[n' → logprob: -7.126063823699951
    3. '[' → logprob: -8.75106430053711
    4. '[-' → logprob: -9.25106430053711
    5. ' -' → logprob: -12.37606430053711
    6. 'n' → logprob: -14.37606430053711
    7. '-n' → logprob: -16.25106430053711
    8. '   ' → logprob: -16.87606430053711
    9. '[i' → logprob: -16.87606430053711
    10. '-[' → logprob: -16.87606430053711

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030197695014066994
    2. '-' → logprob: -8.1253023147583
    3. ' ' → logprob: -12.5003023147583
    4. ' -' → logprob: -14.2503023147583
    5. '```' → logprob: -14.2503023147583
    6. '   ' → logprob: -14.8753023147583
    7. '<|end|>' → logprob: -15.7503023147583
    8. '0' → logprob: -16.750301361083984
    9. 'n' → logprob: -16.875301361083984
    10. '(' → logprob: -16.875301361083984

Token 741: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006828876794315875
    2. '<|end|>' → logprob: -8.375682830810547
    3. ' )' → logprob: -8.750682830810547
    4. ')%' → logprob: -8.750682830810547
    5. '   ' → logprob: -9.750682830810547
    6. ']' → logprob: -10.250682830810547
    7. '%' → logprob: -11.000682830810547
    8. '}' → logprob: -11.500682830810547
    9. '<|end|>' → logprob: -13.000682830810547
    10. '))' → logprob: -13.125682830810547

Token 742: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09983443468809128
    2. '%' → logprob: -3.349834442138672
    3. '
' → logprob: -3.474834442138672
    4. 'ans' → logprob: -4.724834442138672
    5. ' %' → logprob: -4.849834442138672
    6. ')' → logprob: -5.724834442138672
    7. ' ans' → logprob: -5.974834442138672
    8. '	ans' → logprob: -6.474834442138672
    9. '    
' → logprob: -6.599834442138672
    10. '\n' → logprob: -7.099834442138672

Token 743: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 744: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0029760373290628195
    2. '   ' → logprob: -6.127975940704346
    3. ' ans' → logprob: -7.252975940704346
    4. '	ans' → logprob: -9.752976417541504
    5. '(ans' → logprob: -11.252976417541504
    6. '_ans' → logprob: -13.252976417541504
    7. '%' → logprob: -13.252976417541504
    8. '```' → logprob: -13.502976417541504
    9. '    ' → logprob: -13.877976417541504
    10. ' ' → logprob: -14.002976417541504

Token 745: ' prend' (ID: 37463)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.03994092345237732
    2. ' %=' → logprob: -3.28994083404541
    3. '%' → logprob: -6.28994083404541
    4. '=' → logprob: -10.53994083404541
    5. '   ' → logprob: -11.53994083404541
    6. ')' → logprob: -13.16494083404541
    7. ')%' → logprob: -13.28994083404541
    8. 'ans' → logprob: -14.16494083404541
    9. '#' → logprob: -14.53994083404541
    10. ' %' → logprob: -14.66494083404541

Token 746: ' aussi' (ID: 9894)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01622193679213524
    2. ' ans' → logprob: -4.14122200012207
    3. '(ans' → logprob: -9.51622200012207
    4. '	ans' → logprob: -9.51622200012207
    5. '   ' → logprob: -10.26622200012207
    6. '_ans' → logprob: -13.26622200012207
    7. '```' → logprob: -13.39122200012207
    8. '%' → logprob: -14.64122200012207
    9. 'le' → logprob: -15.14122200012207
    10. 'la' → logprob: -15.51622200012207

Token 747: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7455006241798401
    2. ' ans' → logprob: -0.7455006241798401
    3. '%' → logprob: -3.7455005645751953
    4. ' %=' → logprob: -3.7455005645751953
    5. '%=' → logprob: -6.495500564575195
    6. '(ans' → logprob: -6.620500564575195
    7. ' %' → logprob: -8.245500564575195
    8. '	ans' → logprob: -8.245500564575195
    9. 'mod' → logprob: -8.870500564575195
    10. '_ans' → logprob: -9.370500564575195

Token 748: ' résultat' (ID: 62556)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.014147995039820671
    2. ' %' → logprob: -5.264147758483887
    3. '%=' → logprob: -5.514147758483887
    4. ' %=' → logprob: -5.889147758483887
    5. 'ans' → logprob: -6.639147758483887
    6. ' ans' → logprob: -7.514147758483887
    7. 'mod' → logprob: -8.889147758483887
    8. 'MOD' → logprob: -10.764147758483887
    9. '=' → logprob: -11.264147758483887
    10. '`' → logprob: -11.764147758483887

Token 749: ' modulo' (ID: 112372)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.10775205492973328
    2. ' ans' → logprob: -2.8577520847320557
    3. '%=' → logprob: -3.6077520847320557
    4. 'ans' → logprob: -4.357751846313477
    5. '%' → logprob: -5.732751846313477
    6. '(ans' → logprob: -6.982751846313477
    7. '   ' → logprob: -8.357751846313477
    8. '	ans' → logprob: -8.857751846313477
    9. ' %' → logprob: -9.482751846313477
    10. '=' → logprob: -9.732751846313477

Token 750: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04865356534719467
    2. ' MOD' → logprob: -3.0486536026000977
    3. '(M' → logprob: -10.423653602600098
    4. '_MOD' → logprob: -11.673653602600098
    5. '=' → logprob: -12.048653602600098
    6. '   ' → logprob: -12.298653602600098
    7. '.MOD' → logprob: -12.298653602600098
    8. ' =' → logprob: -12.923653602600098
    9. '(' → logprob: -13.173653602600098
    10. ' (' → logprob: -13.298653602600098

Token 751: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029029499273747206
    2. 'ans' → logprob: -9.125289916992188
    3. ' ans' → logprob: -9.250289916992188
    4. '
' → logprob: -10.625289916992188
    5. '    
' → logprob: -10.625289916992188
    6. '	ans' → logprob: -11.125289916992188
    7. '```' → logprob: -12.000289916992188
    8. '(ans' → logprob: -12.500289916992188
    9. '\n' → logprob: -12.500289916992188
    10. '  ' → logprob: -12.750289916992188

Token 752: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.0014911731705069542
    2. ' each' → logprob: -7.251491069793701
    3. 'every' → logprob: -7.876491069793701
    4. ' chaque' → logprob: -8.25149154663086
    5. 'ans' → logprob: -10.00149154663086
    6. 'cada' → logprob: -10.62649154663086
    7. 'Chaque' → logprob: -10.87649154663086
    8. 'Each' → logprob: -11.12649154663086
    9. '```' → logprob: -11.75149154663086
    10. '<|end|>' → logprob: -12.12649154663086

Token 753: ' it' (ID: 480)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19989480078220367
    2. ' ans' → logprob: -2.074894905090332
    3. '=' → logprob: -3.324894905090332
    4. '   ' → logprob: -4.949894905090332
    5. '(ans' → logprob: -4.949894905090332
    6. ' =' → logprob: -6.324894905090332
    7. ' ' → logprob: -7.074894905090332
    8. '1' → logprob: -7.449894905090332
    9. '+=' → logprob: -7.824894905090332
    10. '	ans' → logprob: -8.199894905090332

Token 754: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3900741934776306
    2. 'ération' → logprob: -1.1400742530822754
    3. 'ér' → logprob: -6.265074253082275
    4. 'ère' → logprob: -8.265073776245117
    5. 'érations' → logprob: -8.390073776245117
    6. 'e' → logprob: -9.140073776245117
    7. 'éré' → logprob: -9.265073776245117
    8. 'érant' → logprob: -9.265073776245117
    9. 'érateur' → logprob: -9.265073776245117
    10. 'érer' → logprob: -9.640073776245117

Token 755: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005331113003194332
    2. ' ans' → logprob: -5.630331039428711
    3. 'ans' → logprob: -6.630331039428711
    4. '	ans' → logprob: -8.755331039428711
    5. '(ans' → logprob: -9.505331039428711
    6. '```' → logprob: -9.755331039428711
    7. '    
' → logprob: -9.755331039428711
    8. '\n' → logprob: -11.380331039428711
    9. '  ' → logprob: -11.505331039428711
    10. ',' → logprob: -11.755331039428711

Token 756: ' éviter' (ID: 64013)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14390137791633606
    2. ' ans' → logprob: -2.0189013481140137
    3. '(ans' → logprob: -7.143901348114014
    4. '   ' → logprob: -8.393901824951172
    5. '	ans' → logprob: -8.643901824951172
    6. 'ens' → logprob: -11.893901824951172
    7. '```' → logprob: -11.893901824951172
    8. '_ans' → logprob: -12.143901824951172
    9. ')' → logprob: -12.768901824951172
    10. ' ' → logprob: -13.018901824951172

Token 757: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14872585237026215
    2. ' MOD' → logprob: -2.898725748062134
    3. 'ans' → logprob: -3.148725748062134
    4. '=' → logprob: -4.148725986480713
    5. 'MOD' → logprob: -4.398725986480713
    6. ' =' → logprob: -5.148725986480713
    7. '(ans' → logprob: -6.023725986480713
    8. '   ' → logprob: -6.523725986480713
    9. ' ' → logprob: -7.523725986480713
    10. '1' → logprob: -7.523725986480713

Token 758: ' déb' (ID: 37874)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6980171203613281
    2. 'overflow' → logprob: -0.6980171203613281
    3. ' overflow' → logprob: -6.073017120361328
    4. 'dé' → logprob: -7.448017120361328
    5. 'integer' → logprob: -7.698017120361328
    6. 'd' → logprob: -7.823017120361328
    7. ' ans' → logprob: -8.198017120361328
    8. 'Overflow' → logprob: -8.823017120361328
    9. ' dépasse' → logprob: -8.823017120361328
    10. '   ' → logprob: -9.073017120361328

Token 759: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.010079274885356426
    2. 'for' → logprob: -5.635079383850098
    3. 'mod' → logprob: -5.885079383850098
    4. '%' → logprob: -7.260079383850098
    5. 'f' → logprob: -7.260079383850098
    6. 'bord' → logprob: -7.885079383850098
    7. 'ort' → logprob: -8.385079383850098
    8. 'ans' → logprob: -8.510079383850098
    9. 'ordre' → logprob: -8.885079383850098
    10. 'ug' → logprob: -8.885079383850098

Token 760: 'ement' (ID: 962)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.1398853063583374
    2. 'ans' → logprob: -1.8898853063583374
    3. 'f' → logprob: -2.389885425567627
    4. 'ord' → logprob: -2.389885425567627
    5. '(ans' → logprob: -2.639885425567627
    6. ' ans' → logprob: -3.139885425567627
    7. 'ort' → logprob: -4.014885425567627
    8. 'bord' → logprob: -4.139885425567627
    9. 'overflow' → logprob: -4.139885425567627
    10. 'or' → logprob: -4.514885425567627

Token 761: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.451116051815916e-05
    2. 'ans' → logprob: -11.500024795532227
    3. ' ans' → logprob: -12.000024795532227
    4. '	ans' → logprob: -12.125024795532227
    5. '    
' → logprob: -13.875024795532227
    6. '       ' → logprob: -14.250024795532227
    7. '(ans' → logprob: -14.500024795532227
    8. '\n' → logprob: -16.125024795532227
    9. '   ' → logprob: -16.125024795532227
    10. '```' → logprob: -16.250024795532227

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030523387249559164
    2. ' ans' → logprob: -6.378052234649658
    3. 'ans' → logprob: -6.753052234649658
    4. '```' → logprob: -10.003052711486816
    5. '	ans' → logprob: -10.003052711486816
    6. '    
' → logprob: -10.378052711486816
    7. '\n' → logprob: -11.003052711486816
    8. '
' → logprob: -11.003052711486816
    9. '(ans' → logprob: -11.003052711486816
    10. '\' → logprob: -13.003052711486816

Token 763: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2551783621311188
    2. '   ' → logprob: -1.5051783323287964
    3. ' ans' → logprob: -5.755178451538086
    4. '	ans' → logprob: -9.880178451538086
    5. '(ans' → logprob: -11.255178451538086
    6. '  ' → logprob: -12.505178451538086
    7. ' ' → logprob: -12.880178451538086
    8. 'anst' → logprob: -13.630178451538086
    9. '```' → logprob: -13.755178451538086
    10. '    
' → logprob: -13.880178451538086

Token 764: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0021899950224906206
    2. ' %=' → logprob: -6.252190113067627
    3. '%' → logprob: -8.252189636230469
    4. '	' → logprob: -15.502189636230469
    5. '   ' → logprob: -15.877189636230469
    6. '```' → logprob: -15.877189636230469
    7. '=' → logprob: -16.12718963623047
    8. ' ' → logprob: -16.37718963623047
    9. '\' → logprob: -17.37718963623047
    10. ')' → logprob: -18.12718963623047

Token 765: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.25
    3. '_MOD' → logprob: -21.875
    4. 'MO' → logprob: -22.25
    5. 'MODE' → logprob: -24.375
    6. '.MOD' → logprob: -24.375
    7. 'MD' → logprob: -24.875
    8. '```' → logprob: -25.625
    9. 'M' → logprob: -25.75
    10. 'Mod' → logprob: -25.875

Token 766: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 767: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 768: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.75
    3. '#print' → logprob: -20.375
    4. 'pr' → logprob: -22.5
    5. 'return' → logprob: -22.5
    6. 'prin' → logprob: -22.875
    7. '
' → logprob: -23.25
    8. '```' → logprob: -23.25
    9. '#' → logprob: -23.625
    10. 'Print' → logprob: -24.625

Token 769: ' multipl' (ID: 44269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04747845605015755
    2. ' print' → logprob: -3.922478437423706
    3. '.print' → logprob: -4.297478675842285
    4. '.' → logprob: -4.422478675842285
    5. '.println' → logprob: -8.047478675842285
    6. '=' → logprob: -8.297478675842285
    7. 'pr' → logprob: -8.797478675842285
    8. ')' → logprob: -10.047478675842285
    9. '#print' → logprob: -10.047478675842285
    10. ',' → logprob: -10.672478675842285

Token 770: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.7863295674324036
    2. 'ie' → logprob: -1.9113295078277588
    3. 'er' → logprob: -2.411329507827759
    4. 'iplier' → logprob: -2.661329507827759
    5. 'ipl' → logprob: -2.786329507827759
    6. 'ip' → logprob: -3.036329507827759
    7. 'y' → logprob: -3.536329507827759
    8. '```' → logprob: -3.536329507827759
    9. 'iquer' → logprob: -4.536329746246338
    10. 'iez' → logprob: -4.661329746246338

Token 771: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07785645127296448
    2. '(ans' → logprob: -2.8278565406799316
    3. '2' → logprob: -4.452856540679932
    4. '(' → logprob: -5.702856540679932
    5. ' ans' → logprob: -8.077856063842773
    6. '10' → logprob: -8.577856063842773
    7. '*' → logprob: -9.827856063842773
    8. '```' → logprob: -10.202856063842773
    9. 'by' → logprob: -10.702856063842773
    10. '=' → logprob: -10.702856063842773

Token 772: ' par' (ID: 686)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.2371644377708435
    2. ' *=' → logprob: -1.9871644973754883
    3. '=' → logprob: -3.7371644973754883
    4. 'ans' → logprob: -3.8621644973754883
    5. ' ans' → logprob: -4.362164497375488
    6. '(ans' → logprob: -4.737164497375488
    7. '*' → logprob: -5.237164497375488
    8. ' =' → logprob: -6.737164497375488
    9. '```' → logprob: -8.112164497375488
    10. ' by' → logprob: -8.362164497375488

Token 773: ' B' (ID: 418)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021918095648288727
    2. 'B' → logprob: -4.146918296813965
    3. '6' → logprob: -6.396918296813965
    4. '(' → logprob: -6.771918296813965
    5. 'pow' → logprob: -7.271918296813965
    6. 'N' → logprob: -7.396918296813965
    7. '3' → logprob: -7.896918296813965
    8. '4' → logprob: -8.021918296813965
    9. 'C' → logprob: -8.021918296813965
    10. '(B' → logprob: -8.271918296813965

Token 774: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.002348530339077115
    2. '[' → logprob: -6.37734842300415
    3. '[n' → logprob: -7.87734842300415
    4. 'N' → logprob: -8.252348899841309
    5. '[-' → logprob: -13.002348899841309
    6. '[len' → logprob: -13.252348899841309
    7. '[M' → logprob: -14.377348899841309
    8. '1' → logprob: -15.127348899841309
    9. '(N' → logprob: -15.252348899841309
    10. 'n' → logprob: -15.502348899841309

Token 775: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00492703914642334
    2. '[N' → logprob: -5.504927158355713
    3. '[n' → logprob: -7.379927158355713
    4. '[' → logprob: -8.629926681518555
    5. ' ]' → logprob: -10.754926681518555
    6. ']%' → logprob: -11.879926681518555
    7. '```' → logprob: -12.629926681518555
    8. '-' → logprob: -13.004926681518555
    9. ']
' → logprob: -13.379926681518555
    10. ']*' → logprob: -13.379926681518555

Token 776: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8974476456642151
    2. ' ans' → logprob: -1.0224475860595703
    3. '(ans' → logprob: -2.6474475860595703
    4. '%' → logprob: -2.7724475860595703
    5. '<|end|>' → logprob: -3.3974475860595703
    6. '   ' → logprob: -3.7724475860595703
    7. '	ans' → logprob: -4.27244758605957
    8. '*' → logprob: -4.89744758605957
    9. '_ans' → logprob: -5.27244758605957
    10. ' %=' → logprob: -5.64744758605957

Token 777: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3568195700645447
    2. '2' → logprob: -1.6068196296691895
    3. '*' → logprob: -2.9818196296691895
    4. ' )' → logprob: -4.1068196296691895
    5. 'ans' → logprob: -4.4818196296691895
    6. '%' → logprob: -5.2318196296691895
    7. '<|end|>' → logprob: -5.2318196296691895
    8. ' *' → logprob: -5.4818196296691895
    9. '(ans' → logprob: -6.8568196296691895
    10. ' ans' → logprob: -6.8568196296691895

Token 778: ''est' (ID: 6616)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2062208354473114
    2. ']' → logprob: -1.9562208652496338
    3. ')' → logprob: -3.456220865249634
    4. '[' → logprob: -4.956220626831055
    5. '[n' → logprob: -5.831220626831055
    6. '[N' → logprob: -6.456220626831055
    7. ']%' → logprob: -7.331220626831055
    8. '])' → logprob: -7.956220626831055
    9. '[i' → logprob: -8.581220626831055
    10. ')%' → logprob: -8.956220626831055

Token 779: '-à' (ID: 56297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39002707600593567
    2. '%' → logprob: -1.2650270462036133
    3. ' )' → logprob: -4.390027046203613
    4. ')%' → logprob: -4.390027046203613
    5. '%)' → logprob: -5.515027046203613
    6. ' %' → logprob: -6.140027046203613
    7. '2' → logprob: -6.515027046203613
    8. '*' → logprob: -6.765027046203613
    9. 'ans' → logprob: -6.890027046203613
    10. '#' → logprob: -7.015027046203613

Token 780: '-dire' (ID: 76064)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5116460919380188
    2. ')' → logprob: -1.636646032333374
    3. '%' → logprob: -2.136646032333374
    4. '1' → logprob: -3.511646032333374
    5. '2' → logprob: -4.136646270751953
    6. '(' → logprob: -4.261646270751953
    7. '-' → logprob: -4.636646270751953
    8. ' ' → logprob: -5.386646270751953
    9. '[' → logprob: -6.386646270751953
    10. '```' → logprob: -6.386646270751953

Token 781: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5827937722206116
    2. ' B' → logprob: -1.7077937126159668
    3. ' ' → logprob: -1.9577937126159668
    4. 'B' → logprob: -2.207793712615967
    5. ')' → logprob: -5.457793712615967
    6. ' )' → logprob: -5.582793712615967
    7. '```' → logprob: -7.832793712615967
    8. ' (' → logprob: -9.207794189453125
    9. '*' → logprob: -9.332794189453125
    10. ' ans' → logprob: -9.457794189453125

Token 782: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040032897144556046
    2. 'B' → logprob: -3.6650328636169434
    3. 'ans' → logprob: -5.165032863616943
    4. ' ' → logprob: -5.790032863616943
    5. 'pow' → logprob: -5.790032863616943
    6. '(' → logprob: -7.415032863616943
    7. ' B' → logprob: -7.540032863616943
    8. '```' → logprob: -8.540033340454102
    9. ' (' → logprob: -9.540033340454102
    10. ' pow' → logprob: -9.915033340454102

Token 783: ' puissance' (ID: 63494)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.2459760457277298
    2. '[n' → logprob: -1.7459760904312134
    3. '[' → logprob: -4.245975971221924
    4. '**' → logprob: -4.370975971221924
    5. '%' → logprob: -4.620975971221924
    6. '[i' → logprob: -5.495975971221924
    7. '^' → logprob: -6.495975971221924
    8. ')' → logprob: -8.370976448059082
    9. ']' → logprob: -8.620976448059082
    10. '[]' → logprob: -8.620976448059082

Token 784: ' N' (ID: 478)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.1821041852235794
    2. 'N' → logprob: -1.807104229927063
    3. ' N' → logprob: -6.432104110717773
    4. ')' → logprob: -8.307104110717773
    5. '[n' → logprob: -8.432104110717773
    6. ' [' → logprob: -9.557104110717773
    7. '```' → logprob: -9.557104110717773
    8. '[' → logprob: -10.182104110717773
    9. '(N' → logprob: -10.307104110717773
    10. ']' → logprob: -10.682104110717773

Token 785: ' modulo' (ID: 112372)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5335034132003784
    2. ')' → logprob: -0.9085034132003784
    3. '%' → logprob: -5.033503532409668
    4. ' )' → logprob: -6.908503532409668
    5. '*' → logprob: -7.283503532409668
    6. ']%' → logprob: -7.783503532409668
    7. '**' → logprob: -8.283503532409668
    8. '   ' → logprob: -8.283503532409668
    9. ')%' → logprob: -8.408503532409668
    10. ' ]' → logprob: -8.533503532409668

Token 786: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006731472443789244
    2. ' MOD' → logprob: -5.0067315101623535
    3. '_MOD' → logprob: -12.131731033325195
    4. ')' → logprob: -12.381731033325195
    5. '.MOD' → logprob: -13.006731033325195
    6. ' ' → logprob: -13.256731033325195
    7. ' ' → logprob: -13.881731033325195
    8. '```' → logprob: -14.506731033325195
    9. ' )' → logprob: -14.631731033325195
    10. '`' → logprob: -15.881731033325195

Token 787: ')
' (ID: 446)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.575554370880127
    2. ']' → logprob: -1.200554370880127
    3. ')' → logprob: -2.700554370880127
    4. ' *' → logprob: -2.700554370880127
    5. '   ' → logprob: -7.575554370880127
    6. '%' → logprob: -7.575554370880127
    7. '[' → logprob: -8.075553894042969
    8. ']*' → logprob: -8.450553894042969
    9. ')*' → logprob: -9.075553894042969
    10. ',' → logprob: -9.700553894042969

Token 788: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6992517709732056
    2. 'ans' → logprob: -0.6992517709732056
    3. ' ans' → logprob: -5.824251651763916
    4. '(ans' → logprob: -5.949251651763916
    5. '_ans' → logprob: -8.824252128601074
    6. '*=' → logprob: -9.074252128601074
    7. '=' → logprob: -9.324252128601074
    8. ' *' → logprob: -9.699252128601074
    9. '	ans' → logprob: -9.824252128601074
    10. '```' → logprob: -11.324252128601074

Token 789: ' Cela' (ID: 44403)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009419816546142101
    2. '*' → logprob: -5.134419918060303
    3. ' ans' → logprob: -6.009419918060303
    4. '(ans' → logprob: -7.009419918060303
    5. '%' → logprob: -10.384419441223145
    6. '=' → logprob: -10.884419441223145
    7. '```' → logprob: -11.009419441223145
    8. '	ans' → logprob: -11.134419441223145
    9. '_ans' → logprob: -11.384419441223145
    10. ' *' → logprob: -11.759419441223145

Token 790: ' correspond' (ID: 11095)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3385046124458313
    2. '%=' → logprob: -1.4635045528411865
    3. '=' → logprob: -3.8385045528411865
    4. 'ans' → logprob: -4.088504791259766
    5. ' %=' → logprob: -4.588504791259766
    6. ' *=' → logprob: -5.088504791259766
    7. '#' → logprob: -8.088504791259766
    8. '%' → logprob: -8.338504791259766
    9. '*' → logprob: -8.338504791259766
    10. ' =' → logprob: -8.713504791259766

Token 791: ' souvent' (ID: 28137)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12611433863639832
    2. '*=' → logprob: -2.5011143684387207
    3. ' =' → logprob: -3.6261143684387207
    4. ' *=' → logprob: -4.876114368438721
    5. '*' → logprob: -6.876114368438721
    6. '   ' → logprob: -7.876114368438721
    7. '%=' → logprob: -8.376113891601562
    8. ' à' → logprob: -8.501113891601562
    9. ' %=' → logprob: -9.501113891601562
    10. 'to' → logprob: -9.626113891601562

Token 792: ' à' (ID: 1221)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5597302913665771
    2. '=' → logprob: -1.1847302913665771
    3. '*=' → logprob: -3.184730291366577
    4. ' to' → logprob: -3.809730291366577
    5. 'to' → logprob: -3.934730291366577
    6. ' *=' → logprob: -4.309730529785156
    7. ' =' → logprob: -5.184730529785156
    8. ' *' → logprob: -5.184730529785156
    9. '%' → logprob: -5.309730529785156
    10. ')' → logprob: -5.559730529785156

Token 793: ' une' (ID: 2463)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8252418637275696
    2. 'ans' → logprob: -1.3252418041229248
    3. ' B' → logprob: -2.325241804122925
    4. '(ans' → logprob: -2.450241804122925
    5. ' ans' → logprob: -3.075241804122925
    6. '(B' → logprob: -3.575241804122925
    7. ' (' → logprob: -4.075242042541504
    8. '(' → logprob: -4.450242042541504
    9. '*' → logprob: -4.950242042541504
    10. ' *' → logprob: -7.825242042541504

Token 794: ' normal' (ID: 6078)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.2809889018535614
    2. ' final' → logprob: -2.405988931655884
    3. '*' → logprob: -3.655988931655884
    4. 'multip' → logprob: -3.780988931655884
    5. 'factor' → logprob: -3.905988931655884
    6. 'B' → logprob: -4.655988693237305
    7. '(' → logprob: -4.905988693237305
    8. 'pow' → logprob: -4.905988693237305
    9. 'ans' → logprob: -5.030988693237305
    10. '2' → logprob: -5.280988693237305

Token 795: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.05433325842022896
    2. '*' → logprob: -4.429333209991455
    3. 'isation' → logprob: -4.429333209991455
    4. 'izer' → logprob: -4.554333209991455
    5. 'ized' → logprob: -5.179333209991455
    6. 'ize' → logprob: -5.804333209991455
    7. 'e' → logprob: -5.804333209991455
    8. '_' → logprob: -5.804333209991455
    9. ')' → logprob: -7.054333209991455
    10. 'isé' → logprob: -7.304333209991455

Token 796: ' ou' (ID: 2031)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5325578451156616
    2. ' *' → logprob: -0.9075578451156616
    3. '   ' → logprob: -5.282557964324951
    4. 'ans' → logprob: -5.782557964324951
    5. ' ans' → logprob: -7.032557964324951
    6. '(ans' → logprob: -8.657557487487793
    7. ' ' → logprob: -9.782557487487793
    8. '_ans' → logprob: -10.907557487487793
    9. ' ' → logprob: -11.032557487487793
    10. '  ' → logprob: -11.032557487487793

Token 797: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2568659782409668
    2. 'ans' → logprob: -1.5068659782409668
    3. '*' → logprob: -1.7568659782409668
    4. '(ans' → logprob: -2.756865978240967
    5. ' (' → logprob: -3.006865978240967
    6. 'B' → logprob: -3.506865978240967
    7. ' B' → logprob: -3.631865978240967
    8. ' ans' → logprob: -3.756865978240967
    9. '(B' → logprob: -3.881865978240967
    10. ')' → logprob: -3.881865978240967

Token 798: ' une' (ID: 2463)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2608020305633545
    2. ' B' → logprob: -1.5108020305633545
    3. 'ans' → logprob: -5.260802268981934
    4. ' ans' → logprob: -7.010802268981934
    5. '*' → logprob: -7.510802268981934
    6. ' la' → logprob: -8.010802268981934
    7. ' (' → logprob: -8.635802268981934
    8. '(' → logprob: -8.635802268981934
    9. '(B' → logprob: -8.760802268981934
    10. ' ' → logprob: -8.760802268981934

Token 799: ' ré' (ID: 3146)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7585790157318115
    2. 'final' → logprob: -1.5085790157318115
    3. '*' → logprob: -2.1335790157318115
    4. 'multip' → logprob: -2.6335790157318115
    5. ' final' → logprob: -3.7585790157318115
    6. '```' → logprob: -3.8835790157318115
    7. 'mult' → logprob: -4.258579254150391
    8. ' multiplication' → logprob: -4.383579254150391
    9. ' *' → logprob: -5.258579254150391
    10. ' multiplier' → logprob: -5.258579254150391

Token 800: 'partition' (ID: 67655)
  Prédit: 'duction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duction' → logprob: -0.6136488318443298
    2. '*' → logprob: -2.2386488914489746
    3. '=' → logprob: -2.3636488914489746
    4. '%' → logprob: -2.8636488914489746
    5. 'mainder' → logprob: -3.1136488914489746
    6. 'mult' → logprob: -3.6136488914489746
    7. '#' → logprob: -4.113648891448975
    8. ')' → logprob: -4.488648891448975
    9. 'd' → logprob: -4.613648891448975
    10. '%=' → logprob: -4.738648891448975

Token 801: ' sur' (ID: 1512)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.43819665908813477
    2. 'ans' → logprob: -1.5631966590881348
    3. '(' → logprob: -2.1881966590881348
    4. '*' → logprob: -4.188196659088135
    5. '=' → logprob: -5.188196659088135
    6. '*=' → logprob: -6.063196659088135
    7. '   ' → logprob: -6.313196659088135
    8. '(B' → logprob: -6.438196659088135
    9. ' (' → logprob: -6.563196659088135
    10. ' ans' → logprob: -6.688196659088135

Token 802: ' tous' (ID: 10688)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.46793872117996216
    2. 'B' → logprob: -1.0929386615753174
    3. ' ' → logprob: -3.8429386615753174
    4. '2' → logprob: -4.3429388999938965
    5. ' N' → logprob: -7.4679388999938965
    6. ' )' → logprob: -7.5929388999938965
    7. '(' → logprob: -7.5929388999938965
    8. ' (' → logprob: -7.9679388999938965
    9. ' la' → logprob: -8.092938423156738
    10. 'N' → logprob: -8.342938423156738

Token 803: ' les' (ID: 1341)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1689859628677368
    2. 'les' → logprob: -1.9189859628677368
    3. ' les' → logprob: -2.1689858436584473
    4. ' B' → logprob: -2.4189858436584473
    5. '(' → logprob: -2.7939858436584473
    6. '(N' → logprob: -2.9189858436584473
    7. 'des' → logprob: -2.9189858436584473
    8. 'C' → logprob: -3.2939858436584473
    9. ' ' → logprob: -3.2939858436584473
    10. ' des' → logprob: -4.293985843658447

Token 804: ' sous' (ID: 14487)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2013251781463623
    2. 'N' → logprob: -1.2013251781463623
    3. 'élé' → logprob: -1.8263251781463623
    4. 'poss' → logprob: -2.7013251781463623
    5. 'C' → logprob: -3.3263251781463623
    6. 'possible' → logprob: -3.4513251781463623
    7. 'elements' → logprob: -3.9513251781463623
    8. 'indices' → logprob: -4.576325416564941
    9. 'n' → logprob: -4.576325416564941
    10. 'sub' → logprob: -4.701325416564941

Token 805: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32529768347740173
    2. '_' → logprob: -1.4502977132797241
    3. 'ense' → logprob: -3.2002975940704346
    4. '_con' → logprob: -7.450297832489014
    5. 'sets' → logprob: -8.200297355651855
    6. ' ensembles' → logprob: -8.450297355651855
    7. '```' → logprob: -8.825297355651855
    8. '\' → logprob: -9.075297355651855
    9. '_m' → logprob: -9.325297355651855
    10. '   ' → logprob: -9.325297355651855

Token 806: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0011957057286053896
    2. 'ensemble' → logprob: -7.126195907592773
    3. 'ens' → logprob: -8.876195907592773
    4. 'con' → logprob: -10.001195907592773
    5. '```' → logprob: -10.126195907592773
    6. 'sets' → logprob: -10.501195907592773
    7. '-' → logprob: -10.751195907592773
    8. ' ensembles' → logprob: -11.126195907592773
    9. 'ENSE' → logprob: -11.376195907592773
    10. '   ' → logprob: -11.501195907592773

Token 807: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.016030730679631233
    2. 'ts' → logprob: -4.516030788421631
    3. 'mb' → logprob: -5.891030788421631
    4. 'mble' → logprob: -6.766030788421631
    5. 't' → logprob: -6.891030788421631
    6. 'bles' → logprob: -11.016030311584473
    7. 'mbly' → logprob: -12.391030311584473
    8. 'tb' → logprob: -12.516030311584473
    9. 'mbler' → logprob: -12.891030311584473
    10. 'mbled' → logprob: -13.516030311584473

Token 808: ' possibles' (ID: 97753)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004160672426223755
    2. '
' → logprob: -6.5041608810424805
    3. ' ans' → logprob: -6.7541608810424805
    4. '(ans' → logprob: -7.2541608810424805
    5. '*' → logprob: -7.6291608810424805
    6. '_ans' → logprob: -9.25416088104248
    7. '	ans' → logprob: -9.62916088104248
    8. '   ' → logprob: -9.87916088104248
    9. '```' → logprob: -11.62916088104248
    10. '  
' → logprob: -11.75416088104248

Token 809: ' d' (ID: 272)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02854125201702118
    2. '*' → logprob: -3.778541326522827
    3. ' ans' → logprob: -5.653541088104248
    4. '(ans' → logprob: -7.528541088104248
    5. '*=' → logprob: -7.653541088104248
    6. '=' → logprob: -7.903541088104248
    7. ' *=' → logprob: -8.528541564941406
    8. '_ans' → logprob: -9.653541564941406
    9. '
' → logprob: -10.653541564941406
    10. '	ans' → logprob: -10.778541564941406

Token 810: ''une' (ID: 13337)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8255766034126282
    2. '(' → logprob: -1.8255765438079834
    3. 'B' → logprob: -2.4505765438079834
    4. ' ' → logprob: -2.4505765438079834
    5. 'C' → logprob: -2.7005765438079834
    6. ')' → logprob: -3.3255765438079834
    7. ',' → logprob: -3.4505765438079834
    8. '[' → logprob: -4.4505767822265625
    9. ' la' → logprob: -5.0755767822265625
    10. ' B' → logprob: -5.2005767822265625

Token 811: ' liste' (ID: 31719)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0764938592910767
    2. '#' → logprob: -1.3264938592910767
    3. '```' → logprob: -2.201493740081787
    4. 'esp' → logprob: -3.326493740081787
    5. 's' → logprob: -3.451493740081787
    6. 'es' → logprob: -3.701493740081787
    7. 'mod' → logprob: -3.951493740081787
    8. ' ' → logprob: -3.951493740081787
    9. '=' → logprob: -3.951493740081787
    10. 'subset' → logprob: -4.076493740081787

Token 812: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013083330122753978
    2. '*' → logprob: -6.876308441162109
    3. ' ans' → logprob: -9.25130844116211
    4. '(ans' → logprob: -9.50130844116211
    5. '
' → logprob: -9.75130844116211
    6. '   ' → logprob: -11.50130844116211
    7. '	ans' → logprob: -11.62630844116211
    8. '*
' → logprob: -11.87630844116211
    9. '*=' → logprob: -12.00130844116211
    10. '_ans' → logprob: -12.25130844116211

Token 813: ' taille' (ID: 41644)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21930427849292755
    2. 'elements' → logprob: -2.594304323196411
    3. 'élé' → logprob: -3.094304323196411
    4. 'n' → logprob: -3.094304323196411
    5. 'de' → logprob: -3.969304323196411
    6. 'N' → logprob: -4.844304084777832
    7. 'indices' → logprob: -6.844304084777832
    8. '```' → logprob: -6.969304084777832
    9. 'items' → logprob: -7.719304084777832
    10. 'm' → logprob: -7.969304084777832

Token 814: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00021796036162413657
    2. '2' → logprob: -8.625218391418457
    3. '```' → logprob: -10.625218391418457
    4. ' N' → logprob: -11.625218391418457
    5. '1' → logprob: -13.250218391418457
    6. 'n' → logprob: -13.750218391418457
    7. '`' → logprob: -14.500218391418457
    8. '=' → logprob: -14.750218391418457
    9. '+' → logprob: -15.375218391418457
    10. '``' → logprob: -15.500218391418457

Token 815: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00026777281891554594
    2. '
' → logprob: -9.37526798248291
    3. '*' → logprob: -9.50026798248291
    4. ' ans' → logprob: -9.62526798248291
    5. '(ans' → logprob: -10.87526798248291
    6. '*
' → logprob: -11.62526798248291
    7. '_ans' → logprob: -12.50026798248291
    8. '	ans' → logprob: -12.62526798248291
    9. '\' → logprob: -13.12526798248291
    10. '  
' → logprob: -13.62526798248291

Token 816: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1875571544806007e-05
    2. ' ans' → logprob: -12.125011444091797
    3. '(ans' → logprob: -12.500011444091797
    4. '*' → logprob: -14.000011444091797
    5. '
' → logprob: -14.000011444091797
    6. '```' → logprob: -14.750011444091797
    7. 'answer' → logprob: -15.750011444091797
    8. '	ans' → logprob: -15.875011444091797
    9. 'print' → logprob: -16.125011444091797
    10. '=' → logprob: -16.375011444091797

Token 817: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3502904772758484
    2. '%=' → logprob: -1.8502905368804932
    3. '=' → logprob: -2.225290536880493
    4. ' *=' → logprob: -3.600290536880493
    5. ' %=' → logprob: -6.100290298461914
    6. ' =' → logprob: -7.475290298461914
    7. '%' → logprob: -10.100290298461914
    8. '*' → logprob: -10.225290298461914
    9. ' ' → logprob: -10.725290298461914
    10. '   ' → logprob: -10.975290298461914

Token 818: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007100477814674377
    2. ' B' → logprob: -7.2507100105285645
    3. '	B' → logprob: -18.125709533691406
    4. '(B' → logprob: -18.500709533691406
    5. 'b' → logprob: -19.625709533691406
    6. '   ' → logprob: -20.625709533691406
    7. '`' → logprob: -20.750709533691406
    8. '```' → logprob: -21.000709533691406
    9. ' ' → logprob: -21.250709533691406
    10. ' ' → logprob: -21.625709533691406

Token 819: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00010342398309148848
    2. '[' → logprob: -9.250102996826172
    3. 'N' → logprob: -11.875102996826172
    4. '[n' → logprob: -15.750102996826172
    5. '[
' → logprob: -16.750102996826172
    6. ' [' → logprob: -17.500102996826172
    7. '\[' → logprob: -17.500102996826172
    8. '```' → logprob: -18.375102996826172
    9. '	N' → logprob: -18.625102996826172
    10. ' N' → logprob: -19.625102996826172

Token 820: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038075498305261135
    2. ']
' → logprob: -5.753807544708252
    3. ']%' → logprob: -7.378807544708252
    4. ' ]' → logprob: -13.00380802154541
    5. ']
' → logprob: -13.00380802154541
    6. '%' → logprob: -15.12880802154541
    7. ']

' → logprob: -15.62880802154541
    8. ')' → logprob: -15.75380802154541
    9. '])' → logprob: -17.003807067871094
    10. ')]' → logprob: -17.128807067871094

Token 821: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03288374841213226
    2. '%' → logprob: -3.657883644104004
    3. '%=' → logprob: -5.282883644104004
    4. ' ans' → logprob: -7.532883644104004
    5. '```' → logprob: -7.782883644104004
    6. ' %=' → logprob: -8.282883644104004
    7. '(ans' → logprob: -9.032883644104004
    8. '%
' → logprob: -9.907883644104004
    9. '	ans' → logprob: -10.157883644104004
    10. '_ans' → logprob: -10.532883644104004

Token 822: ' Encore' (ID: 118329)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.8624639324116288e-06
    2. ' ans' → logprob: -13.250001907348633
    3. '=' → logprob: -17.000001907348633
    4. '(ans' → logprob: -17.625001907348633
    5. 'answer' → logprob: -19.000001907348633
    6. '	ans' → logprob: -19.000001907348633
    7. '_ans' → logprob: -19.750001907348633
    8. '```' → logprob: -20.125001907348633
    9. 'ANS' → logprob: -20.750001907348633
    10. '%' → logprob: -21.000001907348633

Token 823: ' une' (ID: 2463)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.4543396234512329
    2. '%' → logprob: -1.329339623451233
    3. ' %=' → logprob: -2.5793395042419434
    4. 'ans' → logprob: -4.329339504241943
    5. '=' → logprob: -4.704339504241943
    6. ' ans' → logprob: -6.204339504241943
    7. ')' → logprob: -9.079339981079102
    8. ')%' → logprob: -9.204339981079102
    9. '(ans' → logprob: -9.704339981079102
    10. ' %' → logprob: -10.329339981079102

Token 824: ' fois' (ID: 14697)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.7091071605682373
    2. '%' → logprob: -1.2091071605682373
    3. '%=' → logprob: -2.2091071605682373
    4. '=' → logprob: -2.4591071605682373
    5. ' %' → logprob: -4.459107398986816
    6. ' =' → logprob: -6.834107398986816
    7. ' ans' → logprob: -7.334107398986816
    8. ')' → logprob: -8.334107398986816
    9. 'ans' → logprob: -9.209107398986816
    10. 'mod' → logprob: -9.209107398986816

Token 825: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.042610637843608856
    2. '%=' → logprob: -3.4176106452941895
    3. '%' → logprob: -5.4176106452941895
    4. ' ans' → logprob: -6.1676106452941895
    5. ' %=' → logprob: -6.1676106452941895
    6. '(ans' → logprob: -8.667610168457031
    7. '	ans' → logprob: -10.167610168457031
    8. '```' → logprob: -10.917610168457031
    9. '%
' → logprob: -11.042610168457031
    10. '=' → logprob: -11.542610168457031

Token 826: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.547789674485102e-05
    2. ' ans' → logprob: -10.250035285949707
    3. '(ans' → logprob: -17.375036239624023
    4. '	ans' → logprob: -17.625036239624023
    5. 'answer' → logprob: -19.000036239624023
    6. '_ans' → logprob: -19.750036239624023
    7. 'ANS' → logprob: -20.750036239624023
    8. 'Ans' → logprob: -21.250036239624023
    9. '```' → logprob: -21.875036239624023
    10. '=' → logprob: -22.500036239624023

Token 827: ' applique' (ID: 180579)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0025991995353251696
    2. ' %=' → logprob: -6.002599239349365
    3. '%' → logprob: -9.002598762512207
    4. 'ans' → logprob: -15.002598762512207
    5. ')%' → logprob: -16.377599716186523
    6. ' ans' → logprob: -17.002599716186523
    7. '%s' → logprob: -18.002599716186523
    8. ' ' → logprob: -18.127599716186523
    9. ' %' → logprob: -18.377599716186523
    10. '//=' → logprob: -18.377599716186523

Token 828: ' le' (ID: 505)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5969552993774414
    2. 'ans' → logprob: -1.5969552993774414
    3. ' MOD' → logprob: -1.7219552993774414
    4. ' ans' → logprob: -2.7219552993774414
    5. '%' → logprob: -7.096955299377441
    6. ' %=' → logprob: -7.346955299377441
    7. '(ans' → logprob: -7.846955299377441
    8. '%=' → logprob: -8.596955299377441
    9. 'mod' → logprob: -8.721955299377441
    10. 'ANS' → logprob: -9.596955299377441

Token 829: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5213403701782227
    2. 'ans' → logprob: -1.3963403701782227
    3. '%=' → logprob: -1.8963403701782227
    4. ' %=' → logprob: -5.396340370178223
    5. ' ans' → logprob: -5.646340370178223
    6. 'mod' → logprob: -7.771340370178223
    7. 'MOD' → logprob: -9.521340370178223
    8. ' %' → logprob: -10.646340370178223
    9. '(ans' → logprob: -11.271340370178223
    10. '%
' → logprob: -11.521340370178223

Token 830: ' pour' (ID: 1930)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.30760645866394043
    2. '%=' → logprob: -1.5576064586639404
    3. ' %=' → logprob: -3.3076064586639404
    4. '(ans' → logprob: -5.0576066970825195
    5. '%' → logprob: -5.3076066970825195
    6. ' ans' → logprob: -5.4326066970825195
    7. '%
' → logprob: -7.0576066970825195
    8. '=' → logprob: -7.9326066970825195
    9. '
' → logprob: -8.68260669708252
    10. '```' → logprob: -9.43260669708252

Token 831: ' sécur' (ID: 26898)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004087066277861595
    2. ' ans' → logprob: -5.504086971282959
    3. '(ans' → logprob: -11.879087448120117
    4. '	ans' → logprob: -14.004087448120117
    5. '_ans' → logprob: -15.379087448120117
    6. 'answer' → logprob: -15.754087448120117
    7. 'ANS' → logprob: -15.879087448120117
    8. '%' → logprob: -16.004087448120117
    9. '```' → logprob: -16.254087448120117
    10. 'ens' → logprob: -16.754087448120117

Token 832: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9596664905548096
    2. 'ans' → logprob: -0.9596664905548096
    3. '=' → logprob: -2.4596664905548096
    4. ' ans' → logprob: -2.4596664905548096
    5. '(ans' → logprob: -2.9596664905548096
    6. 'if' → logprob: -5.4596662521362305
    7. 'ize' → logprob: -6.4596662521362305
    8. '%=' → logprob: -6.7096662521362305
    9. 'ifie' → logprob: -6.8346662521362305
    10. 'iser' → logprob: -7.2096662521362305

Token 833: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3931087851524353
    2. ' ans' → logprob: -1.14310884475708
    3. '(ans' → logprob: -5.64310884475708
    4. ' MOD' → logprob: -6.76810884475708
    5. 'MOD' → logprob: -7.01810884475708
    6. '=' → logprob: -8.518108367919922
    7. ' =' → logprob: -8.893108367919922
    8. 'ANS' → logprob: -9.143108367919922
    9. '`' → logprob: -10.268108367919922
    10. '	ans' → logprob: -10.268108367919922

Token 834: ' valeur' (ID: 41664)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01616809330880642
    2. ' MOD' → logprob: -4.141168117523193
    3. 'ans' → logprob: -10.016167640686035
    4. '%' → logprob: -11.141167640686035
    5. '_MOD' → logprob: -11.141167640686035
    6. 'mod' → logprob: -11.266167640686035
    7. '.MOD' → logprob: -11.516167640686035
    8. ' ans' → logprob: -11.766167640686035
    9. ' ' → logprob: -12.266167640686035
    10. '`' → logprob: -12.391167640686035

Token 835: ' finale' (ID: 37759)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4228433072566986
    2. '%' → logprob: -1.672843337059021
    3. '%=' → logprob: -2.1728432178497314
    4. ' %=' → logprob: -3.4228432178497314
    5. ' ans' → logprob: -5.5478434562683105
    6. '%
' → logprob: -5.7978434562683105
    7. '(ans' → logprob: -5.9228434562683105
    8. '\' → logprob: -8.672842979431152
    9. '
' → logprob: -8.672842979431152
    10. '_ans' → logprob: -8.922842979431152

Token 836: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0004324573092162609
    2. '%' → logprob: -8.500432014465332
    3. ' ans' → logprob: -9.000432014465332
    4. '(ans' → logprob: -9.625432014465332
    5. '\' → logprob: -11.500432014465332
    6. '```' → logprob: -11.625432014465332
    7. '%=' → logprob: -12.250432014465332
    8. '	ans' → logprob: -12.375432014465332
    9. '%
' → logprob: -12.500432014465332
    10. '\n' → logprob: -12.625432014465332

Token 837: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002031827752944082
    2. ' ans' → logprob: -9.500203132629395
    3. '%' → logprob: -9.625203132629395
    4. '%=' → logprob: -10.125203132629395
    5. '(ans' → logprob: -11.250203132629395
    6. '```' → logprob: -12.875203132629395
    7. '%
' → logprob: -13.250203132629395
    8. ' %=' → logprob: -13.250203132629395
    9. '	ans' → logprob: -13.500203132629395
    10. '_ans' → logprob: -14.750203132629395

Token 838: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.005100341513752937
    2. ' %=' → logprob: -5.755100250244141
    3. '%' → logprob: -6.255100250244141
    4. '```' → logprob: -17.38010025024414
    5. ')%' → logprob: -17.75510025024414
    6. ' %' → logprob: -18.13010025024414
    7. '#' → logprob: -18.25510025024414
    8. ' ' → logprob: -18.50510025024414
    9. '%\' → logprob: -18.50510025024414
    10. '=' → logprob: -18.63010025024414

Token 839: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. ' MOD' → logprob: -17.5
    3. '_MOD' → logprob: -21.75
    4. 'MO' → logprob: -23.75
    5. '.MOD' → logprob: -24.0
    6. 'MODE' → logprob: -25.125
    7. 'MD' → logprob: -25.75
    8. '```' → logprob: -26.0
    9. 'MODULE' → logprob: -27.0
    10. 'Mod' → logprob: -27.125

Token 840: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00029828163678757846
    2. '<|end|>' → logprob: -8.375298500061035
    3. '```' → logprob: -9.875298500061035
    4. 'return' → logprob: -12.125298500061035
    5. '#' → logprob: -12.875298500061035
    6. ' print' → logprob: -12.875298500061035
    7. '#print' → logprob: -13.125298500061035
    8. '
' → logprob: -13.250298500061035
    9. 'ans' → logprob: -13.875298500061035
    10. ')' → logprob: -14.250298500061035

Token 841: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.375
    3. '```' → logprob: -16.375
    4. '<|end|>' → logprob: -18.25
    5. 'pr' → logprob: -18.625
    6. '#print' → logprob: -18.75
    7. '#' → logprob: -20.0
    8. '(print' → logprob: -20.625
    9. 'return' → logprob: -21.625
    10. '.print' → logprob: -22.625

Token 842: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.375
    3. '#print' → logprob: -23.0
    4. '#' → logprob: -23.25
    5. '```' → logprob: -23.625
    6. 'pr' → logprob: -24.875
    7. 'prin' → logprob: -25.25
    8. '
' → logprob: -25.75
    9. 'Print' → logprob: -26.25
    10. 'for' → logprob: -27.375

Token 843: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0036044635344296694
    2. 'ich' → logprob: -6.753604412078857
    3. 'iche' → logprob: -7.003604412078857
    4. '#' → logprob: -7.253604412078857
    5. 'ic' → logprob: -7.503604412078857
    6. 'ichage' → logprob: -9.003604888916016
    7. 'print' → logprob: -9.628604888916016
    8. 'cher' → logprob: -10.128604888916016
    9. 'f' → logprob: -10.753604888916016
    10. 'ichier' → logprob: -13.128604888916016

Token 844: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.919942486798391e-05
    2. 'ans' → logprob: -9.750059127807617
    3. '(' → logprob: -14.625059127807617
    4. 'print' → logprob: -15.125059127807617
    5. '(print' → logprob: -16.375059127807617
    6. '(answer' → logprob: -17.500059127807617
    7. '	ans' → logprob: -20.375059127807617
    8. 'ANS' → logprob: -20.500059127807617
    9. ' ans' → logprob: -21.125059127807617
    10. 'Ans' → logprob: -21.375059127807617

Token 845: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04947033151984215
    2. '(ans' → logprob: -3.0494704246520996
    3. 'print' → logprob: -7.0494704246521
    4. 'answer' → logprob: -11.799469947814941
    5. 'result' → logprob: -11.924469947814941
    6. ' ans' → logprob: -14.924469947814941
    7. '	ans' → logprob: -16.424470901489258
    8. '(' → logprob: -16.549470901489258
    9. 'final' → logprob: -18.049470901489258
    10. 'ANS' → logprob: -18.549470901489258

Token 846: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' print' → logprob: -18.75
    4. '(print' → logprob: -24.125
    5. '``' → logprob: -25.5
    6. '
' → logprob: -25.875
    7. '#print' → logprob: -26.5
    8. 'Print' → logprob: -26.625
    9. '	print' → logprob: -26.625
    10. 'prints' → logprob: -27.0

Token 847: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '```' → logprob: -17.75
    4. '
' → logprob: -20.0
    5. '(print' → logprob: -20.5
    6. '#print' → logprob: -22.75
    7. '.print' → logprob: -23.375
    8. '``' → logprob: -24.125
    9. 'Print' → logprob: -24.75
    10. 'prints' → logprob: -24.875

Token 848: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012632098514586687
    2. 'ans' → logprob: -7.37626314163208
    3. 'la' → logprob: -7.62626314163208
    4. 'près' → logprob: -10.001263618469238
    5. '```' → logprob: -10.501263618469238
    6. 'l' → logprob: -10.876263618469238
    7. '(ans' → logprob: -11.751263618469238
    8. 'pp' → logprob: -12.376263618469238
    9. 'p' → logprob: -12.501263618469238
    10. ' print' → logprob: -12.876263618469238

Token 849: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3662749230861664
    2. 'print' → logprob: -2.116274833679199
    3. ''utilisateur' → logprob: -2.241274833679199
    4. ''écran' → logprob: -2.616274833679199
    5. 'e' → logprob: -5.616274833679199
    6. '’écran' → logprob: -7.866274833679199
    7. '’utilisateur' → logprob: -8.1162748336792
    8. 'é' → logprob: -8.2412748336792
    9. 'ans' → logprob: -8.4912748336792
    10. 'i' → logprob: -8.6162748336792

Token 850: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. ' print' → logprob: -18.5
    4. '(print' → logprob: -23.0
    5. '``' → logprob: -23.125
    6. '
' → logprob: -24.125
    7. '#print' → logprob: -24.875
    8. 'Print' → logprob: -25.875
    9. '.print' → logprob: -26.0
    10. '	print' → logprob: -26.0

Token 851: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018149138486478478
    2. '(print' → logprob: -8.750181198120117
    3. '(ans' → logprob: -11.250181198120117
    4. 'ans' → logprob: -11.750181198120117
    5. ' print' → logprob: -13.500181198120117
    6. '(' → logprob: -14.500181198120117
    7. '```' → logprob: -15.625181198120117
    8. '()' → logprob: -17.625181198120117
    9. '#print' → logprob: -19.000181198120117
    10. 'prin' → logprob: -19.000181198120117

Token 852: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000145137935760431
    2. ' print' → logprob: -8.875144958496094
    3. '(print' → logprob: -13.125144958496094
    4. 'pr' → logprob: -13.500144958496094
    5. '```' → logprob: -14.625144958496094
    6. 'prin' → logprob: -15.250144958496094
    7. '#print' → logprob: -15.375144958496094
    8. 'n' → logprob: -15.750144958496094
    9. '
' → logprob: -16.375144958496094
    10. '#' → logprob: -16.625144958496094

Token 853: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.750000953674316
    3. '```' → logprob: -16.25
    4. '(print' → logprob: -18.0
    5. '`' → logprob: -23.0
    6. '#print' → logprob: -23.5
    7. '``' → logprob: -23.5
    8. '	print' → logprob: -24.5
    9. 'printf' → logprob: -24.5
    10. 'Print' → logprob: -25.5

Token 854: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13561759889125824
    2. '(ans' → logprob: -2.38561749458313
    3. '(print' → logprob: -3.38561749458313
    4. 'ans' → logprob: -7.635617733001709
    5. '()' → logprob: -8.38561725616455
    6. '()
' → logprob: -9.01061725616455
    7. '(' → logprob: -9.26061725616455
    8. '(pr' → logprob: -12.88561725616455
    9. '(
' → logprob: -13.26061725616455
    10. ' print' → logprob: -14.01061725616455

Token 855: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -19.75
    3. ' print' → logprob: -22.75
    4. '(print' → logprob: -25.125
    5. 'pr' → logprob: -27.125
    6. '#print' → logprob: -27.5
    7. '``' → logprob: -27.625
    8. 'println' → logprob: -28.125
    9. 'printf' → logprob: -28.875
    10. 'prin' → logprob: -28.875

Token 856: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005533903022296727
    2. '(' → logprob: -7.500553607940674
    3. '()' → logprob: -15.500553131103516
    4. 'ans' → logprob: -16.375553131103516
    5. ' (' → logprob: -16.625553131103516
    6. '(answer' → logprob: -17.000553131103516
    7. '(
' → logprob: -17.125553131103516
    8. '(an' → logprob: -18.875553131103516
    9. '(abs' → logprob: -19.000553131103516
    10. '(f' → logprob: -19.000553131103516

Token 857: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.125000953674316
    3. '))' → logprob: -16.25
    4. ')`' → logprob: -16.5
    5. '())' → logprob: -17.25
    6. '()' → logprob: -17.25
    7. ')
' → logprob: -18.375
    8. ')}' → logprob: -20.375
    9. ')#' → logprob: -20.5
    10. '(' → logprob: -20.75

Token 858: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 859: ' ------------------------------------------------' (ID: 38771)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: '-----
' (ID: 82167)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 861: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 862: ' Partie' (ID: 128875)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: ' comment' (ID: 5375)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24067158997058868
    2. '<|end|>' → logprob: -1.8656716346740723
    3. 'def' → logprob: -4.115671634674072
    4. '<|end|>' → logprob: -4.365671634674072
    5. ':' → logprob: -4.990671634674072
    6. '```' → logprob: -5.240671634674072
    7. '_' → logprob: -5.490671634674072
    8. ' ' → logprob: -5.615671634674072
    9. ' #' → logprob: -6.240671634674072
    10. '[' → logprob: -6.490671634674072

Token 864: 'ée' (ID: 2894)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.11917226761579514
    2. '#' → logprob: -2.2441723346710205
    3. 'aires' → logprob: -5.369172096252441
    4. 'a' → logprob: -7.119172096252441
    5. 'é' → logprob: -7.494172096252441
    6. 'ée' → logprob: -9.244172096252441
    7. 'air' → logprob: -9.869172096252441
    8. '#a' → logprob: -10.494172096252441
    9. '```' → logprob: -10.619172096252441
    10. 'naire' → logprob: -10.869172096252441

Token 865: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00010807292710524052
    2. '<|end|>' → logprob: -10.125107765197754
    3. '```' → logprob: -11.000107765197754
    4. '[' → logprob: -11.125107765197754
    5. ' #' → logprob: -12.000107765197754
    6. '"""' → logprob: -12.000107765197754
    7. ''''' → logprob: -12.125107765197754
    8. '#
' → logprob: -12.375107765197754
    9. '\' → logprob: -12.625107765197754
    10. ':' → logprob: -13.250107765197754

Token 866: 'à' (ID: 708)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01988416351377964
    2. ')' → logprob: -4.01988410949707
    3. ' #' → logprob: -7.76988410949707
    4. ''''' → logprob: -7.89488410949707
    5. ')#' → logprob: -8.39488410949707
    6. '"""' → logprob: -8.51988410949707
    7. '```' → logprob: -8.51988410949707
    8. ''''
' → logprob: -9.64488410949707
    9. ' code' → logprob: -9.76988410949707
    10. '"""
' → logprob: -10.39488410949707

Token 867: ' titre' (ID: 38701)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10132963210344315
    2. '```' → logprob: -3.1013295650482178
    3. 'faire' → logprob: -3.8513295650482178
    4. 'part' → logprob: -4.976329803466797
    5. 'su' → logprob: -5.726329803466797
    6. 'sup' → logprob: -5.726329803466797
    7. ' compléter' → logprob: -5.851329803466797
    8. 'contin' → logprob: -6.101329803466797
    9. 'ré' → logprob: -6.601329803466797
    10. 'rev' → logprob: -6.726329803466797

Token 868: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02365875244140625
    2. ')' → logprob: -4.398658752441406
    3. ' #' → logprob: -5.523658752441406
    4. '_' → logprob: -6.023658752441406
    5. ' ' → logprob: -6.523658752441406
    6. ' ' → logprob: -7.648658752441406
    7. 'f' → logprob: -7.898658752441406
    8. 'd' → logprob: -8.023658752441406
    9. 'b' → logprob: -8.273658752441406
    10. '...' → logprob: -8.523658752441406

Token 869: ''exp' (ID: 74058)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8098903298377991
    2. 'e' → logprob: -1.0598902702331543
    3. ''ex' → logprob: -2.9348902702331543
    4. 'u' → logprob: -3.1848902702331543
    5. ''aide' → logprob: -3.6848902702331543
    6. 'ex' → logprob: -4.559890270233154
    7. ''#' → logprob: -4.559890270233154
    8. ''é' → logprob: -4.934890270233154
    9. ''avenir' → logprob: -4.934890270233154
    10. ''exp' → logprob: -4.934890270233154

Token 870: 'lication' (ID: 2389)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38103219866752625
    2. 'lication' → logprob: -1.6310322284698486
    3. 'l' → logprob: -3.6310322284698486
    4. 'ort' → logprob: -3.7560322284698486
    5. 'licit' → logprob: -4.1310319900512695
    6. 'lications' → logprob: -4.5060319900512695
    7. 'lain' → logprob: -4.7560319900512695
    8. '```' → logprob: -5.1310319900512695
    9. 'lan' → logprob: -5.3810319900512695
    10. 'er' → logprob: -5.7560319900512695

Token 871: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14701232314109802
    2. '#' → logprob: -2.022012233734131
    3. ' )' → logprob: -5.897012233734131
    4. ')#' → logprob: -7.772012233734131
    5. '<|end|>' → logprob: -8.022012710571289
    6. ':' → logprob: -8.147012710571289
    7. ' #' → logprob: -8.772012710571289
    8. ')
' → logprob: -9.772012710571289
    9. ' ' → logprob: -9.897012710571289
    10. '```' → logprob: -10.147012710571289

Token 872: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09897877275943756
    2. 'd' → logprob: -2.4739787578582764
    3. 'ex' → logprob: -5.4739789962768555
    4. 'de' → logprob: -5.9739789962768555
    5. 'exp' → logprob: -7.3489789962768555
    6. ' d' → logprob: -7.7239789962768555
    7. '```' → logprob: -8.223978996276855
    8. ')' → logprob: -8.348978996276855
    9. 'dé' → logprob: -8.473978996276855
    10. ' #' → logprob: -8.848978996276855

Token 873: ' tentative' (ID: 105427)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.17611925303936005
    2. '#' → logprob: -2.426119327545166
    3. 'information' → logprob: -3.801119327545166
    4. 'test' → logprob: -4.051119327545166
    5. 'ré' → logprob: -4.176119327545166
    6. 'documentation' → logprob: -5.301119327545166
    7. 'in' → logprob: -6.676119327545166
    8. 'code' → logprob: -6.801119327545166
    9. 'dé' → logprob: -6.801119327545166
    10. ''ex' → logprob: -6.926119327545166

Token 874: ' alternative' (ID: 13319)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2296617180109024
    2. ')' → logprob: -1.6046617031097412
    3. ' #' → logprob: -6.22966194152832
    4. ' )' → logprob: -6.60466194152832
    5. ')#' → logprob: -8.10466194152832
    6. ' ' → logprob: -9.10466194152832
    7. ' ' → logprob: -9.35466194152832
    8. '_' → logprob: -9.35466194152832
    9. ':' → logprob: -9.47966194152832
    10. '#
' → logprob: -9.72966194152832

Token 875: ')
' (ID: 446)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04910594969987869
    2. ')' → logprob: -3.0491058826446533
    3. ')#' → logprob: -8.549105644226074
    4. ' #' → logprob: -9.299105644226074
    5. ' )' → logprob: -9.549105644226074
    6. '#
' → logprob: -9.674105644226074
    7. ')
' → logprob: -10.049105644226074
    8. ':' → logprob: -11.299105644226074
    9. '```' → logprob: -11.799105644226074
    10. '):' → logprob: -11.924105644226074

Token 876: '"""
' (ID: 15611)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -3.523948907968588e-05
    2. '<|end|>' → logprob: -11.750035285949707
    3. '"""' → logprob: -11.875035285949707
    4. '```' → logprob: -12.000035285949707
    5. '#
' → logprob: -13.125035285949707
    6. '"""
' → logprob: -13.250035285949707
    7. ''''
' → logprob: -13.375035285949707
    8. ''''' → logprob: -13.375035285949707
    9. ' #' → logprob: -13.375035285949707
    10. '﻿#' → logprob: -13.875035285949707

Token 877: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03362921625375748
    2. 'for' → logprob: -4.033629417419434
    3. ')' → logprob: -4.408629417419434
    4. ' for' → logprob: -7.283629417419434
    5. 'def' → logprob: -7.408629417419434
    6. ' #' → logprob: -7.658629417419434
    7. '"""' → logprob: -8.408629417419434
    8. 'import' → logprob: -9.283629417419434
    9. 'C' → logprob: -9.283629417419434
    10. '```' → logprob: -9.408629417419434

Token 878: ' Initial' (ID: 9209)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2925367057323456
    2. ')' → logprob: -1.917536735534668
    3. 'for' → logprob: -3.167536735534668
    4. ' for' → logprob: -4.042536735534668
    5. '"""' → logprob: -4.792536735534668
    6. 'N' → logprob: -5.417536735534668
    7. 'C' → logprob: -5.417536735534668
    8. ' #' → logprob: -5.542536735534668
    9. 'n' → logprob: -5.667536735534668
    10. 'def' → logprob: -5.792536735534668

Token 879: 'iser' (ID: 7466)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2200365662574768
    2. 'izer' → logprob: -2.345036506652832
    3. 'iser' → logprob: -2.845036506652832
    4. 'izing' → logprob: -4.470036506652832
    5. 'e' → logprob: -4.595036506652832
    6. 'def' → logprob: -5.470036506652832
    7. 'ize' → logprob: -6.095036506652832
    8. 'n' → logprob: -6.470036506652832
    9. '"""
' → logprob: -6.720036506652832
    10. '```' → logprob: -6.720036506652832

Token 880: ' une' (ID: 2463)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3523103892803192
    2. 'ans' → logprob: -1.8523104190826416
    3. ' la' → logprob: -2.4773104190826416
    4. ' result' → logprob: -4.7273101806640625
    5. ' total' → logprob: -5.2273101806640625
    6. ' max' → logprob: -5.3523101806640625
    7. ' res' → logprob: -5.3523101806640625
    8. ' sum' → logprob: -5.9773101806640625
    9. ' une' → logprob: -5.9773101806640625
    10. '#' → logprob: -6.1023101806640625

Token 881: ' liste' (ID: 31719)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.7881217002868652
    2. 'variable' → logprob: -1.7881217002868652
    3. '#' → logprob: -1.9131217002868652
    4. 'ans' → logprob: -2.2881217002868652
    5. 'for' → logprob: -2.5381217002868652
    6. 'liste' → logprob: -2.9131217002868652
    7. 's' → logprob: -3.0381217002868652
    8. 'tmp' → logprob: -3.4131217002868652
    9. '=' → logprob: -3.5381217002868652
    10. 'result' → logprob: -3.6631217002868652

Token 882: ' D' (ID: 415)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2482805252075195
    2. 'D' → logprob: -1.6232805252075195
    3. 'A' → logprob: -1.7482805252075195
    4. 'B' → logprob: -3.1232805252075195
    5. ' =' → logprob: -3.3732805252075195
    6. 'counts' → logprob: -3.9982805252075195
    7. 'freq' → logprob: -4.2482805252075195
    8. 'temp' → logprob: -4.3732805252075195
    9. 'S' → logprob: -4.4982805252075195
    10. 'res' → logprob: -4.4982805252075195

Token 883: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002018570899963379
    2. '=' → logprob: -6.252018451690674
    3. 'D' → logprob: -10.252018928527832
    4. '[' → logprob: -11.127018928527832
    5. '=[' → logprob: -11.752018928527832
    6. '#' → logprob: -11.877018928527832
    7. '=[]' → logprob: -12.002018928527832
    8. ']' → logprob: -12.627018928527832
    9. '[]' → logprob: -12.627018928527832
    10. ' =[' → logprob: -12.877018928527832

Token 884: ' taille' (ID: 41644)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.660860538482666
    2. '[' → logprob: -1.660860538482666
    3. 'tail' → logprob: -2.410860538482666
    4. 'z' → logprob: -2.785860538482666
    5. '0' → logprob: -2.910860538482666
    6. 'N' → logprob: -3.285860538482666
    7. 'zeros' → logprob: -4.535860538482666
    8. '[n' → logprob: -5.035860538482666
    9. 'long' → logprob: -5.160860538482666
    10. 'n' → logprob: -5.785860538482666

Token 885: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08139295130968094
    2. '(N' → logprob: -2.581393003463745
    3. '=' → logprob: -7.081392765045166
    4. '[N' → logprob: -7.206392765045166
    5. '(' → logprob: -8.206393241882324
    6. ' N' → logprob: -8.581393241882324
    7. ' =' → logprob: -9.206393241882324
    8. '=N' → logprob: -9.456393241882324
    9. '2' → logprob: -10.081393241882324
    10. '[' → logprob: -10.081393241882324

Token 886: ' pour' (ID: 1930)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12003407627344131
    2. '#' → logprob: -2.4950339794158936
    3. '[' → logprob: -4.495034217834473
    4. ']' → logprob: -4.995034217834473
    5. '=' → logprob: -5.995034217834473
    6. 'for' → logprob: -5.995034217834473
    7. ' =' → logprob: -6.245034217834473
    8. ',' → logprob: -6.870034217834473
    9. ')' → logprob: -6.870034217834473
    10. '
' → logprob: -7.370034217834473

Token 887: ' stock' (ID: 6546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0438874177634716
    2. '#' → logprob: -3.2938873767852783
    3. 'stock' → logprob: -6.543887615203857
    4. '_' → logprob: -6.668887615203857
    5. '[' → logprob: -7.168887615203857
    6. 'les' → logprob: -7.418887615203857
    7. 'calcul' → logprob: -8.1688871383667
    8. '...' → logprob: -8.2938871383667
    9. 'zeros' → logprob: -8.7938871383667
    10. 'i' → logprob: -8.7938871383667

Token 888: 'er' (ID: 259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5378785133361816
    2. '[int' → logprob: -1.5378785133361816
    3. '=' → logprob: -3.1628785133361816
    4. ')' → logprob: -3.7878785133361816
    5. '[]' → logprob: -3.7878785133361816
    6. '#' → logprob: -4.537878513336182
    7. ']' → logprob: -4.787878513336182
    8. ' =' → logprob: -4.787878513336182
    9. 'e' → logprob: -4.912878513336182
    10. 'for' → logprob: -4.912878513336182

Token 889: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019939910620450974
    2. 'les' → logprob: -5.14493989944458
    3. ' ' → logprob: -5.76993989944458
    4. 'des' → logprob: -6.26993989944458
    5. 'ans' → logprob: -6.89493989944458
    6. ' des' → logprob: -6.89493989944458
    7. 'int' → logprob: -7.01993989944458
    8. 'C' → logprob: -7.01993989944458
    9. 'i' → logprob: -7.01993989944458
    10. '1' → logprob: -7.89493989944458

Token 890: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5299128293991089
    2. 'diff' → logprob: -2.2799129486083984
    3. 'val' → logprob: -2.4049129486083984
    4. 'pu' → logprob: -2.5299129486083984
    5. 's' → logprob: -3.1549129486083984
    6. '1' → logprob: -3.5299129486083984
    7. '#' → logprob: -3.7799129486083984
    8. 'C' → logprob: -5.404912948608398
    9. 'c' → logprob: -5.529912948608398
    10. 'd' → logprob: -5.654912948608398

Token 891: ' cumul' (ID: 163119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9447351694107056
    2. 'D' → logprob: -2.194735050201416
    3. 'des' → logprob: -2.194735050201416
    4. 's' → logprob: -2.444735050201416
    5. '[' → logprob: -2.569735050201416
    6. 'for' → logprob: -2.694735050201416
    7. ' =' → logprob: -2.944735050201416
    8. '[i' → logprob: -2.944735050201416
    9. '_des' → logprob: -3.069735050201416
    10. 'C' → logprob: -3.194735050201416

Token 892: 'ée' (ID: 2894)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.00792765710502863
    2. 'ée' → logprob: -5.257927894592285
    3. '#' → logprob: -6.882927894592285
    4. 'ulative' → logprob: -7.507927894592285
    5. '[' → logprob: -8.007927894592285
    6. 'atives' → logprob: -8.507927894592285
    7. 'e' → logprob: -9.007927894592285
    8. 'es' → logprob: -9.132927894592285
    9. '[i' → logprob: -10.007927894592285
    10. 'D' → logprob: -10.007927894592285

Token 893: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0940098762512207
    2. ' =' → logprob: -1.3440098762512207
    3. 'D' → logprob: -2.3440098762512207
    4. '=' → logprob: -2.8440098762512207
    5. 'C' → logprob: -3.4690098762512207
    6. '[]' → logprob: -3.5940098762512207
    7. 'for' → logprob: -3.7190098762512207
    8. ']' → logprob: -3.9690098762512207
    9. '()' → logprob: -4.094009876251221
    10. '#' → logprob: -4.094009876251221

Token 894: ' éléments' (ID: 57375)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11151564866304398
    2. 'pu' → logprob: -2.486515760421753
    3. 'val' → logprob: -4.736515522003174
    4. 'B' → logprob: -5.486515522003174
    5. 'élé' → logprob: -6.486515522003174
    6. '#' → logprob: -6.611515522003174
    7. 's' → logprob: -6.861515522003174
    8. ' C' → logprob: -6.986515522003174
    9. ' puiss' → logprob: -7.236515522003174
    10. 'prefix' → logprob: -7.611515522003174

Token 895: ' de' (ID: 334)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2588030993938446
    2. '[' → logprob: -2.258803129196167
    3. ' =' → logprob: -3.008803129196167
    4. '<|end|>' → logprob: -3.383803129196167
    5. '#' → logprob: -4.883802890777588
    6. ')' → logprob: -5.258802890777588
    7. ' D' → logprob: -5.508802890777588
    8. '=' → logprob: -5.508802890777588
    9. '_' → logprob: -5.883802890777588
    10. 's' → logprob: -5.883802890777588

Token 896: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0013040454359725118
    2. 'B' → logprob: -8.001303672790527
    3. ' C' → logprob: -8.251303672790527
    4. 'prefix' → logprob: -8.501303672790527
    5. 'range' → logprob: -9.501303672790527
    6. '#' → logprob: -9.501303672790527
    7. 's' → logprob: -9.876303672790527
    8. 'la' → logprob: -10.001303672790527
    9. 'l' → logprob: -10.251303672790527
    10. '0' → logprob: -10.376303672790527

Token 897: '
' (ID: 198)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005279772914946079
    2. ' D' → logprob: -5.505279541015625
    3. '[' → logprob: -7.005279541015625
    4. '#' → logprob: -9.255279541015625
    5. ' =' → logprob: -9.380279541015625
    6. '
' → logprob: -10.255279541015625
    7. 'd' → logprob: -11.255279541015625
    8. '[D' → logprob: -11.755279541015625
    9. '[
' → logprob: -12.005279541015625
    10. '=' → logprob: -12.005279541015625

Token 898: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.023278558626770973
    2. '#' → logprob: -4.523278713226318
    3. ' D' → logprob: -4.898278713226318
    4. '"""
' → logprob: -6.023278713226318
    5. 'C' → logprob: -7.273278713226318
    6. '[' → logprob: -7.398278713226318
    7. 'for' → logprob: -8.02327823638916
    8. '
' → logprob: -8.52327823638916
    9. ' for' → logprob: -9.27327823638916
    10. ' =' → logprob: -9.89827823638916

Token 899: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.14340707659721375
    2. ' D' → logprob: -2.768407106399536
    3. '[' → logprob: -3.268407106399536
    4. '#' → logprob: -3.768407106399536
    5. 'for' → logprob: -5.768406867980957
    6. ' for' → logprob: -6.018406867980957
    7. 'C' → logprob: -7.018406867980957
    8. '[
' → logprob: -7.143406867980957
    9. '"""
' → logprob: -7.768406867980957
    10. ' ' → logprob: -8.268406867980957

Token 900: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034548524767160416
    2. '=' → logprob: -3.40954852104187
    3. '[' → logprob: -7.159548759460449
    4. '=[' → logprob: -9.65954875946045
    5. ' =[' → logprob: -10.78454875946045
    6. ']' → logprob: -11.78454875946045
    7. ' ' → logprob: -12.40954875946045
    8. '=[]' → logprob: -12.40954875946045
    9. ')' → logprob: -12.78454875946045
    10. '[i' → logprob: -12.78454875946045

Token 901: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17394305765628815
    2. 'i' → logprob: -2.798943042755127
    3. '=' → logprob: -3.423943042755127
    4. ']' → logprob: -3.548943042755127
    5. 'n' → logprob: -3.923943042755127
    6. ' ' → logprob: -5.048943042755127
    7. ' =' → logprob: -5.173943042755127
    8. '[' → logprob: -6.798943042755127
    9. ' ]' → logprob: -7.048943042755127
    10. '#' → logprob: -7.173943042755127

Token 902: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0832304060459137
    2. ' =' → logprob: -2.708230495452881
    3. '[' → logprob: -5.208230495452881
    4. '=' → logprob: -5.208230495452881
    5. '#' → logprob: -7.333230495452881
    6. ']=' → logprob: -7.333230495452881
    7. 'D' → logprob: -8.458230018615723
    8. ' ]' → logprob: -8.708230018615723
    9. 'for' → logprob: -8.833230018615723
    10. ']
' → logprob: -9.333230018615723

Token 903: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47424885630607605
    2. '=' → logprob: -0.9742488861083984
    3. '[' → logprob: -8.974248886108398
    4. ',' → logprob: -10.974248886108398
    5. '=[' → logprob: -11.474248886108398
    6. ']' → logprob: -11.974248886108398
    7. ' =[' → logprob: -12.599248886108398
    8. ' ' → logprob: -13.099248886108398
    9. ')' → logprob: -13.349248886108398
    10. '=[]' → logprob: -14.099248886108398

Token 904: ' simplement' (ID: 45065)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11711549758911133
    2. ' C' → logprob: -2.4921154975891113
    3. '0' → logprob: -3.6171154975891113
    4. ' ' → logprob: -7.492115497589111
    5. '=' → logprob: -8.992115020751953
    6. ' =' → logprob: -9.617115020751953
    7. '=C' → logprob: -9.867115020751953
    8. '[' → logprob: -10.492115020751953
    9. 'N' → logprob: -11.304615020751953
    10. 'c' → logprob: -11.617115020751953

Token 905: ' le' (ID: 505)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004228816367685795
    2. ' C' → logprob: -5.504228591918945
    3. '0' → logprob: -9.504228591918945
    4. '=' → logprob: -10.004228591918945
    5. '=C' → logprob: -11.004228591918945
    6. ' =' → logprob: -12.004228591918945
    7. ' ' → logprob: -13.254228591918945
    8. ' ' → logprob: -13.504228591918945
    9. 'c' → logprob: -13.629228591918945
    10. '	C' → logprob: -14.379228591918945

Token 906: ' premier' (ID: 15506)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001290832064114511
    2. ' C' → logprob: -7.251290798187256
    3. '0' → logprob: -7.501290798187256
    4. 'c' → logprob: -11.876291275024414
    5. ']' → logprob: -12.501291275024414
    6. '=C' → logprob: -12.501291275024414
    7. '=' → logprob: -12.876291275024414
    8. '#' → logprob: -13.251291275024414
    9. 'B' → logprob: -13.688791275024414
    10. ' ' → logprob: -13.938791275024414

Token 907: ' élément' (ID: 99627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8979606628417969
    2. 'élé' → logprob: -1.6479606628417969
    3. ' élément' → logprob: -1.7729606628417969
    4. 'C' → logprob: -2.647960662841797
    5. '=' → logprob: -2.772960662841797
    6. ' =' → logprob: -3.272960662841797
    7. ' C' → logprob: -3.897960662841797
    8. 'element' → logprob: -4.022960662841797
    9. ' element' → logprob: -5.522960662841797
    10. 'elem' → logprob: -6.022960662841797

Token 908: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09379981458187103
    2. ']
' → logprob: -3.3437998294830322
    3. 'D' → logprob: -3.5937998294830322
    4. 'C' → logprob: -4.593799591064453
    5. ' =' → logprob: -5.343799591064453
    6. '#' → logprob: -5.593799591064453
    7. ',' → logprob: -6.718799591064453
    8. '=' → logprob: -6.843799591064453
    9. ']=' → logprob: -7.093799591064453
    10. '"""
' → logprob: -7.218799591064453

Token 909: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004665680229663849
    2. ' C' → logprob: -5.379665851593018
    3. ' la' → logprob: -11.25466537475586
    4. 'la' → logprob: -11.37966537475586
    5. ']' → logprob: -12.12966537475586
    6. 'l' → logprob: -12.75466537475586
    7. 'c' → logprob: -12.87966537475586
    8. '#' → logprob: -13.37966537475586
    9. 's' → logprob: -13.62966537475586
    10. '0' → logprob: -14.12966537475586

Token 910: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.91715407371521
    2. 'D' → logprob: -1.41715407371521
    3. '[' → logprob: -1.79215407371521
    4. '=' → logprob: -2.54215407371521
    5. '"""
' → logprob: -3.04215407371521
    6. '#' → logprob: -3.66715407371521
    7. '
' → logprob: -4.667154312133789
    8. ',' → logprob: -5.542154312133789
    9. '"""' → logprob: -5.667154312133789
    10. 'C' → logprob: -5.792154312133789

Token 911: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.009217747487127781
    2. '"""
' → logprob: -5.634217739105225
    3. '[' → logprob: -6.134217739105225
    4. ' D' → logprob: -7.009217739105225
    5. '#' → logprob: -7.384217739105225
    6. '[
' → logprob: -7.509217739105225
    7. 'for' → logprob: -7.634217739105225
    8. '
' → logprob: -7.759217739105225
    9. ' for' → logprob: -9.009218215942383
    10. '[D' → logprob: -9.884218215942383

Token 912: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019695065915584564
    2. '[' → logprob: -4.144695281982422
    3. '=' → logprob: -5.644695281982422
    4. ' =[' → logprob: -10.144695281982422
    5. '=[' → logprob: -10.269695281982422
    6. ']' → logprob: -11.269695281982422
    7. 'D' → logprob: -12.019695281982422
    8. '#' → logprob: -12.644695281982422
    9. ' ' → logprob: -12.769695281982422
    10. ')' → logprob: -12.769695281982422

Token 913: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02989187464118004
    2. ' [' → logprob: -3.5298919677734375
    3. '[C' → logprob: -9.154891967773438
    4. '[N' → logprob: -11.279891967773438
    5. '[D' → logprob: -12.279891967773438
    6. '[n' → logprob: -12.404891967773438
    7. '0' → logprob: -12.529891967773438
    8. 'C' → logprob: -12.904891967773438
    9. '[len' → logprob: -12.904891967773438
    10. '[B' → logprob: -13.529891967773438

Token 914: '0' (ID: 15)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.020562324672937393
    2. '0' → logprob: -3.8955624103546143
    3. ' C' → logprob: -10.895562171936035
    4. 'c' → logprob: -14.270562171936035
    5. '"C' → logprob: -15.020562171936035
    6. '	C' → logprob: -15.895562171936035
    7. ' ' → logprob: -16.02056312561035
    8. '*C' → logprob: -16.27056312561035
    9. ''C' → logprob: -16.39556312561035
    10. '(C' → logprob: -16.39556312561035

Token 915: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07482936233282089
    2. 'for' → logprob: -3.074829339981079
    3. ']' → logprob: -3.699829339981079
    4. ']*' → logprob: -6.824829578399658
    5. '0' → logprob: -10.4498291015625
    6. ']*(' → logprob: -11.4498291015625
    7. ' ]' → logprob: -11.8248291015625
    8. ',' → logprob: -11.9498291015625
    9. ' ' → logprob: -11.9498291015625
    10. ']+' → logprob: -12.0748291015625

Token 916: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031348634511232376
    2. ' _' → logprob: -3.531348705291748
    3. '_range' → logprob: -6.656348705291748
    4. ' range' → logprob: -8.53134822845459
    5. 'range' → logprob: -9.78134822845459
    6. '_i' → logprob: -10.28134822845459
    7. 'i' → logprob: -11.65634822845459
    8. ' i' → logprob: -11.78134822845459
    9. '_in' → logprob: -13.40634822845459
    10. ' in' → logprob: -13.53134822845459

Token 917: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.904502809047699
    2. 'range' → logprob: -1.1545028686523438
    3. ' range' → logprob: -1.7795028686523438
    4. 'in' → logprob: -2.7795028686523438
    5. '_' → logprob: -3.0295028686523438
    6. '_range' → logprob: -7.654502868652344
    7. ' _' → logprob: -8.279502868652344
    8. 'ange' → logprob: -9.904502868652344
    9. ' ' → logprob: -9.904502868652344
    10. '_in' → logprob: -10.654502868652344

Token 918: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889033854007721
    2. ' range' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.453890800476074
    4. '(range' → logprob: -16.203889846801758
    5. '_' → logprob: -16.453889846801758
    6. '	range' → logprob: -16.828889846801758
    7. '0' → logprob: -17.078889846801758
    8. ' in' → logprob: -18.078889846801758
    9. '
' → logprob: -18.203889846801758
    10. '_range' → logprob: -18.203889846801758

Token 919: '(N' (ID: 10564)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6550893783569336
    2. 'range' → logprob: -0.9050893783569336
    3. 'N' → logprob: -3.0300893783569336
    4. '(N' → logprob: -4.280089378356934
    5. '_' → logprob: -4.530089378356934
    6. 'in' → logprob: -6.530089378356934
    7. ' in' → logprob: -6.655089378356934
    8. '(range' → logprob: -9.030089378356934
    9. '(' → logprob: -9.155089378356934
    10. ' N' → logprob: -9.530089378356934

Token 920: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.033246930688619614
    2. ']' → logprob: -3.7832469940185547
    3. ')]
' → logprob: -4.658246994018555
    4. '+' → logprob: -8.158246994018555
    5. ']
' → logprob: -9.158246994018555
    6. ')]
' → logprob: -10.783246994018555
    7. '()]' → logprob: -11.033246994018555
    8. ')]

' → logprob: -11.408246994018555
    9. '+]' → logprob: -11.533246994018555
    10. ')' → logprob: -11.658246994018555

Token 921: ' #' (ID: 1069)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.011311526410281658
    2. '
' → logprob: -4.7613115310668945
    3. '#' → logprob: -6.1363115310668945
    4. 'for' → logprob: -8.011311531066895
    5. '<|end|>' → logprob: -9.011311531066895
    6. ' D' → logprob: -10.386311531066895
    7. ' for' → logprob: -11.511311531066895
    8. '
' → logprob: -12.511311531066895
    9. '"""
' → logprob: -12.511311531066895
    10. '[' → logprob: -12.511311531066895

Token 922: '累' (ID: 86221)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0019003171473741531
    2. '
' → logprob: -6.6269001960754395
    3. ' D' → logprob: -8.126900672912598
    4. '#' → logprob: -8.626900672912598
    5. '<|end|>' → logprob: -9.876900672912598
    6. 'for' → logprob: -10.501900672912598
    7. '```' → logprob: -11.876900672912598
    8. '"""
' → logprob: -12.751900672912598
    9. ' for' → logprob: -13.126900672912598
    10. '"""' → logprob: -13.376900672912598

Token 923: '積' (ID: 91483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2575899362564087
    2. ']' → logprob: -2.507589817047119
    3. 'D' → logprob: -3.007589817047119
    4. '[' → logprob: -3.382589817047119
    5. '   ' → logprob: -3.882589817047119
    6. '#' → logprob: -4.757589817047119
    7. '
' → logprob: -5.007589817047119
    8. '[
' → logprob: -5.382589817047119
    9. ']
' → logprob: -5.507589817047119
    10. 'or' → logprob: -5.507589817047119

Token 924: '和' (ID: 5884)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9391334056854248
    2. '_sum' → logprob: -1.1891334056854248
    3. '_' → logprob: -2.064133405685425
    4. 'D' → logprob: -2.189133405685425
    5. '_s' → logprob: -4.064133644104004
    6. ' sum' → logprob: -4.189133644104004
    7. 's' → logprob: -4.189133644104004
    8. '   ' → logprob: -5.814133644104004
    9. ')' → logprob: -6.189133644104004
    10. ' ' → logprob: -6.439133644104004

Token 925: '

' (ID: 279)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.09945030510425568
    2. '
' → logprob: -2.7244503498077393
    3. '<|end|>' → logprob: -3.7244503498077393
    4. ')' → logprob: -6.09945011138916
    5. 'for' → logprob: -6.34945011138916
    6. '#' → logprob: -8.72445011138916
    7. '[' → logprob: -8.84945011138916
    8. ' D' → logprob: -8.97445011138916
    9. '<|end|>' → logprob: -8.97445011138916
    10. ']' → logprob: -9.34945011138916

Token 926: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0001146291324403137
    2. 'for' → logprob: -9.500114440917969
    3. '
' → logprob: -10.625114440917969
    4. ' D' → logprob: -11.750114440917969
    5. '#' → logprob: -12.500114440917969
    6. '   ' → logprob: -13.750114440917969
    7. '"""
' → logprob: -13.750114440917969
    8. ' for' → logprob: -14.750114440917969
    9. ')
' → logprob: -15.625114440917969
    10. '```' → logprob: -15.750114440917969

Token 927: ' Initial' (ID: 9209)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00016361083544325083
    2. 'for' → logprob: -9.125164031982422
    3. ' D' → logprob: -10.000164031982422
    4. '#' → logprob: -11.750164031982422
    5. ' for' → logprob: -14.625164031982422
    6. '
' → logprob: -15.625164031982422
    7. 'd' → logprob: -15.625164031982422
    8. '```' → logprob: -15.875164031982422
    9. 'C' → logprob: -16.375164031982422
    10. '   ' → logprob: -16.750164031982422

Token 928: 'isation' (ID: 6993)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.26678529381752014
    2. 'iser' → logprob: -2.0167853832244873
    3. 'izer' → logprob: -3.1417853832244873
    4. '#' → logprob: -3.8917853832244873
    5. '[' → logprob: -4.016785144805908
    6. 'ize' → logprob: -5.016785144805908
    7. 'izing' → logprob: -5.641785144805908
    8. 'ization' → logprob: -6.516785144805908
    9. 'isé' → logprob: -6.891785144805908
    10. 'z' → logprob: -7.016785144805908

Token 929: ' de' (ID: 334)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.082895273109898e-05
    2. ' D' → logprob: -10.750030517578125
    3. ' =' → logprob: -12.750030517578125
    4. '=' → logprob: -13.000030517578125
    5. '[' → logprob: -14.000030517578125
    6. '   ' → logprob: -14.125030517578125
    7. '#' → logprob: -14.125030517578125
    8. ')' → logprob: -14.625030517578125
    9. ']' → logprob: -15.500030517578125
    10. '=D' → logprob: -15.500030517578125

Token 930: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004767953418195248
    2. ' D' → logprob: -6.504767894744873
    3. 'i' → logprob: -6.754767894744873
    4. '0' → logprob: -6.879767894744873
    5. ']' → logprob: -7.379767894744873
    6. '1' → logprob: -8.004768371582031
    7. '#' → logprob: -10.754768371582031
    8. 'C' → logprob: -11.004768371582031
    9. ' ' → logprob: -11.129768371582031
    10. ' i' → logprob: -11.254768371582031

Token 931: ' première' (ID: 23423)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.03098754771053791
    2. '1' → logprob: -4.155987739562988
    3. '0' → logprob: -4.280987739562988
    4. 'i' → logprob: -8.280987739562988
    5. 'for' → logprob: -9.405987739562988
    6. ' D' → logprob: -9.405987739562988
    7. 'val' → logprob: -9.655987739562988
    8. 'C' → logprob: -9.780987739562988
    9. 's' → logprob: -9.780987739562988
    10. 'value' → logprob: -9.780987739562988

Token 932: ' valeur' (ID: 41664)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.000846671755425632
    2. 'val' → logprob: -8.250846862792969
    3. 'élé' → logprob: -8.625846862792969
    4. ' D' → logprob: -9.000846862792969
    5. 'element' → logprob: -9.250846862792969
    6. 'value' → logprob: -9.875846862792969
    7. '=' → logprob: -10.000846862792969
    8. ' =' → logprob: -11.125846862792969
    9. 'ligne' → logprob: -11.125846862792969
    10. ' élément' → logprob: -11.375846862792969

Token 933: ' de' (ID: 334)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.179569077678025e-05
    2. ' D' → logprob: -10.625041961669922
    3. '
' → logprob: -11.000041961669922
    4. ' =' → logprob: -15.250041961669922
    5. 'C' → logprob: -16.375041961669922
    6. '#' → logprob: -16.500041961669922
    7. ',' → logprob: -16.875041961669922
    8. '   ' → logprob: -16.875041961669922
    9. 'd' → logprob: -17.000041961669922
    10. 'for' → logprob: -17.000041961669922

Token 934: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.619311974034645e-05
    2. ' D' → logprob: -10.375036239624023
    3. 'C' → logprob: -12.875036239624023
    4. ']' → logprob: -13.750036239624023
    5. 'd' → logprob: -15.875036239624023
    6. ')' → logprob: -15.875036239624023
    7. 'la' → logprob: -15.875036239624023
    8. '	D' → logprob: -15.875036239624023
    9. ' la' → logprob: -16.000036239624023
    10. 's' → logprob: -16.000036239624023

Token 935: '
' (ID: 198)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.375000953674316
    3. ' D' → logprob: -14.875000953674316
    4. '```' → logprob: -18.000001907348633
    5. '#' → logprob: -18.750001907348633
    6. 'C' → logprob: -19.125001907348633
    7. 'B' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.250001907348633
    9. ' =' → logprob: -20.125001907348633
    10. '[' → logprob: -20.250001907348633

Token 936: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0280383548888494e-06
    2. ' D' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '#' → logprob: -17.375001907348633
    5. '
' → logprob: -17.500001907348633
    6. 'for' → logprob: -19.750001907348633
    7. '```' → logprob: -19.875001907348633
    8. '	D' → logprob: -20.125001907348633
    9. ' ' → logprob: -21.625001907348633
    10. '"""
' → logprob: -22.125001907348633

Token 937: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '=' → logprob: -13.125005722045898
    3. ' =' → logprob: -13.375005722045898
    4. 'D' → logprob: -14.375005722045898
    5. ' [' → logprob: -14.375005722045898
    6. '
' → logprob: -16.0000057220459
    7. '0' → logprob: -16.1250057220459
    8. '```' → logprob: -16.3750057220459
    9. '#' → logprob: -16.8750057220459
    10. '=[' → logprob: -17.0000057220459

Token 938: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '1' → logprob: -17.125
    4. '=' → logprob: -17.5
    5. '[' → logprob: -17.5
    6. '０' → logprob: -17.625
    7. ']' → logprob: -18.0625
    8. '۰' → logprob: -18.3125
    9. '#' → logprob: -18.625
    10. '```' → logprob: -18.8125

Token 939: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022654302301816642
    2. ']=' → logprob: -8.500226974487305
    3. '=' → logprob: -10.750226974487305
    4. ' ]' → logprob: -13.500226974487305
    5. ' =' → logprob: -15.750226974487305
    6. '=C' → logprob: -17.250226974487305
    7. ']
' → logprob: -17.875226974487305
    8. ')' → logprob: -18.500226974487305
    9. ']

' → logprob: -19.125226974487305
    10. ']+=' → logprob: -19.125226974487305

Token 940: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00011069540778407827
    2. ' =' → logprob: -9.500110626220703
    3. '=C' → logprob: -10.250110626220703
    4. '=D' → logprob: -15.250110626220703
    5. '＝' → logprob: -16.750110626220703
    6. '=B' → logprob: -16.875110626220703
    7. '=

' → logprob: -16.875110626220703
    8. '=A' → logprob: -19.375110626220703
    9. '=
' → logprob: -19.500110626220703
    10. '=N' → logprob: -19.625110626220703

Token 941: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.4855663721391466e-05
    2. ' C' → logprob: -11.125015258789062
    3. '	C' → logprob: -21.000015258789062
    4. 'Ｃ' → logprob: -21.875015258789062
    5. '=C' → logprob: -22.125015258789062
    6. 'c' → logprob: -22.500015258789062
    7. '   ' → logprob: -22.625015258789062
    8. '#' → logprob: -22.625015258789062
    9. '>C' → logprob: -22.875015258789062
    10. ' ' → logprob: -23.625015258789062

Token 942: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1041145626222715e-05
    2. '0' → logprob: -12.000011444091797
    3. '[n' → logprob: -13.500011444091797
    4. '[-' → logprob: -14.000011444091797
    5. ' [' → logprob: -14.375011444091797
    6. '\[' → logprob: -14.625011444091797
    7. '```' → logprob: -14.875011444091797
    8. '#' → logprob: -14.875011444091797
    9. '   ' → logprob: -16.250011444091797
    10. '...' → logprob: -16.812511444091797

Token 943: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '#' → logprob: -16.625001907348633
    5. '1' → logprob: -18.000001907348633
    6. '０' → logprob: -18.125001907348633
    7. '۰' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '-' → logprob: -19.125001907348633
    10. '000' → logprob: -19.437501907348633

Token 944: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0619908832013607
    2. ')' → logprob: -3.061990976333618
    3. '<|end|>' → logprob: -4.686990737915039
    4. '+' → logprob: -6.186990737915039
    5. '#' → logprob: -6.561990737915039
    6. '%' → logprob: -8.811990737915039
    7. '<|end|>' → logprob: -9.061990737915039
    8. ']+' → logprob: -9.936990737915039
    9. ' ]' → logprob: -10.061990737915039
    10. ' +' → logprob: -10.061990737915039

Token 945: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00987472664564848
    2. '#' → logprob: -4.6348748207092285
    3. '
' → logprob: -9.75987434387207
    4. ' for' → logprob: -10.13487434387207
    5. '```' → logprob: -10.88487434387207
    6. '   ' → logprob: -13.75987434387207
    7. '``' → logprob: -14.38487434387207
    8. '	for' → logprob: -15.13487434387207
    9. 'For' → logprob: -15.38487434387207
    10. '"""
' → logprob: -16.38487434387207

Token 946: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.935296834039036e-06
    2. '#' → logprob: -13.25000286102295
    3. ' for' → logprob: -13.87500286102295
    4. '```' → logprob: -15.87500286102295
    5. '
' → logprob: -18.250003814697266
    6. '	for' → logprob: -20.625003814697266
    7. '``' → logprob: -21.500003814697266
    8. 'For' → logprob: -21.750003814697266
    9. 'pour' → logprob: -21.750003814697266
    10. 'i' → logprob: -22.000003814697266

Token 947: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02032019942998886
    2. '#' → logprob: -4.770320415496826
    3. 'f' → logprob: -5.145320415496826
    4. 'cle' → logprob: -5.520320415496826
    5. 'i' → logprob: -7.895320415496826
    6. 'c' → logprob: -8.270319938659668
    7. 'r' → logprob: -8.270319938659668
    8. ' for' → logprob: -8.395319938659668
    9. 'n' → logprob: -8.520319938659668
    10. '```' → logprob: -9.020319938659668

Token 948: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008651330135762691
    2. ' for' → logprob: -4.758651256561279
    3. '   ' → logprob: -10.258651733398438
    4. '#' → logprob: -14.133651733398438
    5. '
' → logprob: -14.383651733398438
    6. '	for' → logprob: -15.508651733398438
    7. ':' → logprob: -16.133651733398438
    8. 'range' → logprob: -17.258651733398438
    9. ' ' → logprob: -17.883651733398438
    10. 'i' → logprob: -18.258651733398438

Token 949: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004820749629288912
    2. '1' → logprob: -5.629820823669434
    3. 'range' → logprob: -7.004820823669434
    4. ' i' → logprob: -8.129820823669434
    5. 'for' → logprob: -11.879820823669434
    6. ' range' → logprob: -12.004820823669434
    7. '```' → logprob: -13.504820823669434
    8. '_i' → logprob: -14.379820823669434
    9. '(i' → logprob: -14.629820823669434
    10. '_' → logprob: -14.629820823669434

Token 950: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002744246507063508
    2. '1' → logprob: -6.502744197845459
    3. 'range' → logprob: -6.752744197845459
    4. 'for' → logprob: -9.877744674682617
    5. '_i' → logprob: -11.752744674682617
    6. '_' → logprob: -11.877744674682617
    7. ' i' → logprob: -12.627744674682617
    8. '```' → logprob: -13.252744674682617
    9. 'in' → logprob: -14.002744674682617
    10. ' range' → logprob: -15.252744674682617

Token 951: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4887457489967346
    2. ' for' → logprob: -0.9887457489967346
    3. ',' → logprob: -4.36374568939209
    4. ' in' → logprob: -7.61374568939209
    5. 'range' → logprob: -7.98874568939209
    6. ' to' → logprob: -8.61374568939209
    7. 'to' → logprob: -8.73874568939209
    8. ' à' → logprob: -8.73874568939209
    9. 'in' → logprob: -8.86374568939209
    10. ' range' → logprob: -9.36374568939209

Token 952: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.727905979962088e-05
    2. ' N' → logprob: -10.00004768371582
    3. '1' → logprob: -13.25004768371582
    4. '(N' → logprob: -18.50004768371582
    5. ' ' → logprob: -19.37504768371582
    6. 'range' → logprob: -19.37504768371582
    7. '	N' → logprob: -19.37504768371582
    8. 'n' → logprob: -20.00004768371582
    9. '```' → logprob: -20.25004768371582
    10. '#' → logprob: -20.37504768371582

Token 953: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004502161871641874
    2. ' for' → logprob: -5.879502296447754
    3. 'N' → logprob: -7.129502296447754
    4. ':' → logprob: -8.504502296447754
    5. 'range' → logprob: -8.754502296447754
    6. '
' → logprob: -9.004502296447754
    7. '(N' → logprob: -9.129502296447754
    8. '```' → logprob: -9.254502296447754
    9. ',' → logprob: -9.754502296447754
    10. '1' → logprob: -10.254502296447754

Token 954: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6406123638153076
    2. '1' → logprob: -0.7656123638153076
    3. 'for' → logprob: -5.015612602233887
    4. '   ' → logprob: -7.640612602233887
    5. 'n' → logprob: -8.765612602233887
    6. '+' → logprob: -9.015612602233887
    7. '(N' → logprob: -9.265612602233887
    8. '#' → logprob: -9.515612602233887
    9. ' N' → logprob: -9.515612602233887
    10. '  ' → logprob: -9.640612602233887

Token 955: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03883921355009079
    2. ' for' → logprob: -3.288839101791382
    3. '   ' → logprob: -7.163839340209961
    4. '	for' → logprob: -10.788839340209961
    5. '
' → logprob: -13.413839340209961
    6. ':' → logprob: -14.663839340209961
    7. '```' → logprob: -15.163839340209961
    8. ' ' → logprob: -15.413839340209961
    9. '#' → logprob: -15.788839340209961
    10. ',' → logprob: -16.41383934020996

Token 956: ' calcul' (ID: 7559)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.34672975540161133
    2. 'range' → logprob: -1.4717297554016113
    3. ' range' → logprob: -2.9717297554016113
    4. ' N' → logprob: -4.721729755401611
    5. 'n' → logprob: -5.971729755401611
    6. 'i' → logprob: -7.721729755401611
    7. ' remplir' → logprob: -9.596729278564453
    8. 'for' → logprob: -9.971729278564453
    9. '#' → logprob: -10.471729278564453
    10. 'r' → logprob: -10.971729278564453

Token 957: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.011794793419539928
    2. 'rer' → logprob: -4.886794567108154
    3. 'ter' → logprob: -6.636794567108154
    4. 'ler' → logprob: -6.886794567108154
    5. 'uler' → logprob: -7.261794567108154
    6. 'uer' → logprob: -7.886794567108154
    7. '#' → logprob: -8.136795043945312
    8. 'érer' → logprob: -9.136795043945312
    9. 'ver' → logprob: -9.511795043945312
    10. 'ater' → logprob: -9.511795043945312

Token 958: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.719182550907135
    2. 'N' → logprob: -1.0941824913024902
    3. 'D' → logprob: -2.4691824913024902
    4. ' i' → logprob: -3.0941824913024902
    5. ' N' → logprob: -3.9691824913024902
    6. ' range' → logprob: -4.71918249130249
    7. ' D' → logprob: -4.96918249130249
    8. 'range' → logprob: -5.34418249130249
    9. '   ' → logprob: -5.84418249130249
    10. 'n' → logprob: -6.96918249130249

Token 959: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010656666941940784
    2. 'N' → logprob: -4.760656833648682
    3. ' range' → logprob: -6.260656833648682
    4. 'n' → logprob: -9.510656356811523
    5. 'i' → logprob: -10.760656356811523
    6. 'rang' → logprob: -11.385656356811523
    7. '1' → logprob: -12.135656356811523
    8. 'len' → logprob: -12.385656356811523
    9. ' N' → logprob: -12.635656356811523
    10. 'r' → logprob: -13.260656356811523

Token 960: ' fois' (ID: 14697)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01402199361473322
    2. 'range' → logprob: -4.514021873474121
    3. ' range' → logprob: -6.514021873474121
    4. ' i' → logprob: -6.639021873474121
    5. 'n' → logprob: -9.139021873474121
    6. 'N' → logprob: -10.139021873474121
    7. 'index' → logprob: -12.139021873474121
    8. '   ' → logprob: -12.264021873474121
    9. '```' → logprob: -12.264021873474121
    10. '1' → logprob: -12.639021873474121

Token 961: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.25419238209724426
    2. 'i' → logprob: -1.8791923522949219
    3. ' D' → logprob: -2.879192352294922
    4. ' i' → logprob: -4.629192352294922
    5. ' range' → logprob: -6.629192352294922
    6. '   ' → logprob: -7.004192352294922
    7. 'for' → logprob: -7.129192352294922
    8. 'range' → logprob: -7.379192352294922
    9. ' la' → logprob: -7.629192352294922
    10. '#' → logprob: -8.129192352294922

Token 962: ' somme' (ID: 64484)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.43243542313575745
    2. 'i' → logprob: -1.307435393333435
    3. 's' → logprob: -2.9324355125427246
    4. 'c' → logprob: -4.057435512542725
    5. 'acc' → logprob: -5.307435512542725
    6. ' somme' → logprob: -6.682435512542725
    7. 'prefix' → logprob: -7.057435512542725
    8. 'sum' → logprob: -7.682435512542725
    9. ' D' → logprob: -7.682435512542725
    10. 'cum' → logprob: -7.807435512542725

Token 963: ' cumul' (ID: 163119)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.07442346215248108
    2. 'i' → logprob: -3.8244235515594482
    3. 'c' → logprob: -4.699423313140869
    4. '[i' → logprob: -4.699423313140869
    5. ' D' → logprob: -5.074423313140869
    6. 'for' → logprob: -5.074423313140869
    7. ' cumulative' → logprob: -5.449423313140869
    8. '   ' → logprob: -5.949423313140869
    9. 'cum' → logprob: -6.199423313140869
    10. '#' → logprob: -6.324423313140869

Token 964: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02176576852798462
    2. 'D' → logprob: -5.02176570892334
    3. '   ' → logprob: -5.27176570892334
    4. 'ative' → logprob: -5.52176570892334
    5. 'é' → logprob: -6.64676570892334
    6. '[i' → logprob: -7.52176570892334
    7. '[' → logprob: -7.52176570892334
    8. 'e' → logprob: -7.77176570892334
    9. 'urée' → logprob: -8.27176570892334
    10. 'ated' → logprob: -8.39676570892334

Token 965: ' jusqu' (ID: 21961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09130461513996124
    2. ' for' → logprob: -2.4663045406341553
    3. '   ' → logprob: -7.341304779052734
    4. 'D' → logprob: -7.591304779052734
    5. '#' → logprob: -7.716304779052734
    6. '[i' → logprob: -8.466304779052734
    7. ',' → logprob: -8.716304779052734
    8. 'i' → logprob: -9.591304779052734
    9. ':' → logprob: -9.841304779052734
    10. ' D' → logprob: -9.841304779052734

Token 966: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.7129228115081787
    2. 'à' → logprob: -1.4629228115081787
    3. 'i' → logprob: -1.5879228115081787
    4. '’à' → logprob: -3.5879228115081787
    5. 'a' → logprob: -3.8379228115081787
    6. '#' → logprob: -5.337923049926758
    7. '(i' → logprob: -5.337923049926758
    8. '[i' → logprob: -5.587923049926758
    9. ' à' → logprob: -5.962923049926758
    10. 'au' → logprob: -6.087923049926758

Token 967: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001263090642169118
    2. ' i' → logprob: -6.87626314163208
    3. 'n' → logprob: -9.126262664794922
    4. 'l' → logprob: -9.376262664794922
    5. 'N' → logprob: -11.626262664794922
    6. 'index' → logprob: -11.876262664794922
    7. '   ' → logprob: -12.376262664794922
    8. ' ' → logprob: -12.751262664794922
    9. 'j' → logprob: -13.126262664794922
    10. '`' → logprob: -13.501262664794922

Token 968: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017004783148877323
    2. ' i' → logprob: -9.00016975402832
    3. 'n' → logprob: -11.12516975402832
    4. 'current' → logprob: -11.25016975402832
    5. 'index' → logprob: -12.25016975402832
    6. 'indice' → logprob: -12.50016975402832
    7. '
' → logprob: -13.00016975402832
    8. '[i' → logprob: -13.62516975402832
    9. '   ' → logprob: -13.75016975402832
    10. '1' → logprob: -13.87516975402832

Token 969: ' actuelle' (ID: 104951)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05587729439139366
    2. ' i' → logprob: -2.930877208709717
    3. '1' → logprob: -8.180877685546875
    4. 'n' → logprob: -8.305877685546875
    5. '   ' → logprob: -8.805877685546875
    6. '_' → logprob: -8.805877685546875
    7. ' ' → logprob: -10.680877685546875
    8. '_i' → logprob: -10.680877685546875
    9. ' n' → logprob: -10.805877685546875
    10. ' _' → logprob: -10.930877685546875

Token 970: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07036973536014557
    2. ' for' → logprob: -2.6953697204589844
    3. '   ' → logprob: -7.820369720458984
    4. '	for' → logprob: -10.945369720458984
    5. ' ' → logprob: -12.070369720458984
    6. '
' → logprob: -12.320369720458984
    7. ',' → logprob: -13.445369720458984
    8. '#' → logprob: -14.070369720458984
    9. ' (' → logprob: -15.320369720458984
    10. '```' → logprob: -15.445369720458984

Token 971: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00994909554719925
    2. ' for' → logprob: -4.759949207305908
    3. '   ' → logprob: -6.634949207305908
    4. '	for' → logprob: -10.88494873046875
    5. ' ' → logprob: -14.88494873046875
    6. '
' → logprob: -14.88494873046875
    7. '```' → logprob: -15.13494873046875
    8. '#' → logprob: -15.50994873046875
    9. '  ' → logprob: -17.38494873046875
    10. '    
' → logprob: -18.00994873046875

Token 972: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889363914728165
    2. ' i' → logprob: -2.5788936614990234
    3. 'j' → logprob: -14.078893661499023
    4. '_i' → logprob: -14.328893661499023
    5. ' ' → logprob: -14.578893661499023
    6. '	i' → logprob: -15.078893661499023
    7. 'x' → logprob: -15.203893661499023
    8. 'n' → logprob: -15.328893661499023
    9. 'I' → logprob: -15.328893661499023
    10. 'k' → logprob: -15.453893661499023

Token 973: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.160650372505188
    2. 'in' → logprob: -1.910650372505188
    3. '1' → logprob: -8.160650253295898
    4. '(' → logprob: -9.660650253295898
    5. ' ' → logprob: -10.785650253295898
    6. 'range' → logprob: -10.785650253295898
    7. 'i' → logprob: -11.660650253295898
    8. '   ' → logprob: -12.410650253295898
    9. ' i' → logprob: -13.035650253295898
    10. '2' → logprob: -13.160650253295898

Token 974: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42998799681663513
    2. '1' → logprob: -1.1799880266189575
    3. ' range' → logprob: -3.179987907409668
    4. ' ' → logprob: -7.429987907409668
    5. '2' → logprob: -11.679987907409668
    6. ' in' → logprob: -12.054987907409668
    7. 'in' → logprob: -12.304987907409668
    8. '   ' → logprob: -13.804987907409668
    9. '
' → logprob: -14.929987907409668
    10. '(' → logprob: -14.929987907409668

Token 975: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008551205391995609
    2. '1' → logprob: -7.125854969024658
    3. 'in' → logprob: -10.000855445861816
    4. ' (' → logprob: -13.000855445861816
    5. ' in' → logprob: -13.250855445861816
    6. 'range' → logprob: -14.250855445861816
    7. ' ' → logprob: -15.250855445861816
    8. '
' → logprob: -16.2508544921875
    9. '(
' → logprob: -16.2508544921875
    10. '2' → logprob: -16.8758544921875

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.125009536743164
    4. 'range' → logprob: -18.375009536743164
    5. '2' → logprob: -19.000009536743164
    6. 'i' → logprob: -19.250009536743164
    7. '(' → logprob: -20.125009536743164
    8. 'N' → logprob: -20.250009536743164
    9. '0' → logprob: -21.000009536743164
    10. ')' → logprob: -21.000009536743164

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008182040764950216
    2. ',N' → logprob: -7.500818252563477
    3. 'N' → logprob: -8.875818252563477
    4. ' ,' → logprob: -9.375818252563477
    5. ' N' → logprob: -10.875818252563477
    6. '(N' → logprob: -11.250818252563477
    7. '   ' → logprob: -12.125818252563477
    8. '(' → logprob: -13.625818252563477
    9. '1' → logprob: -14.000818252563477
    10. '，' → logprob: -15.500818252563477

Token 978: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020354038861114532
    2. ' N' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.50020408630371
    4. '	N' → logprob: -21.00020408630371
    5. 'n' → logprob: -21.12520408630371
    6. ' ' → logprob: -21.12520408630371
    7. '    ' → logprob: -22.87520408630371
    8. ' ' → logprob: -23.25020408630371
    9. '  ' → logprob: -23.25020408630371
    10. '       ' → logprob: -24.12520408630371

Token 979: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02643452025949955
    2. '):
' → logprob: -3.6514344215393066
    3. '+' → logprob: -9.276434898376465
    4. '):
' → logprob: -10.776434898376465
    5. ')' → logprob: -11.651434898376465
    6. ':' → logprob: -12.401434898376465
    7. '#' → logprob: -12.651434898376465
    8. ' ):' → logprob: -14.276434898376465
    9. ')：' → logprob: -14.401434898376465
    10. '）：' → logprob: -14.651434898376465

Token 980: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012439649435691535
    2. ' D' → logprob: -9.625123977661133
    3. 'D' → logprob: -10.000123977661133
    4. '	D' → logprob: -11.875123977661133
    5. '   ' → logprob: -12.625123977661133
    6. '       ' → logprob: -14.125123977661133
    7. ' ' → logprob: -14.250123977661133
    8. '  ' → logprob: -15.000123977661133
    9. '   ' → logprob: -15.125123977661133
    10. '#' → logprob: -15.500123977661133

Token 981: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.0013291679788380861
    2. '   ' → logprob: -6.751328945159912
    3. ' D' → logprob: -8.75132942199707
    4. ' ' → logprob: -15.00132942199707
    5. '	D' → logprob: -15.12632942199707
    6. '  ' → logprob: -17.25132942199707
    7. '       ' → logprob: -18.00132942199707
    8. '#' → logprob: -18.62632942199707
    9. '_D' → logprob: -19.37632942199707
    10. '   ' → logprob: -20.12632942199707

Token 982: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.176947600673884e-05
    2. '[' → logprob: -11.250021934509277
    3. '[I' → logprob: -12.125021934509277
    4. '[D' → logprob: -13.500021934509277
    5. 'i' → logprob: -14.250021934509277
    6. '   ' → logprob: -14.750021934509277
    7. ' [' → logprob: -14.875021934509277
    8. '```' → logprob: -15.625021934509277
    9. '
' → logprob: -16.25002098083496
    10. '\[' → logprob: -16.75002098083496

Token 983: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005301565979607403
    2. ']=' → logprob: -7.750530242919922
    3. '=' → logprob: -9.375530242919922
    4. ' ]' → logprob: -11.875530242919922
    5. ' =' → logprob: -13.125530242919922
    6. ']+=' → logprob: -13.250530242919922
    7. '   ' → logprob: -13.375530242919922
    8. ')' → logprob: -14.375530242919922
    9. 'D' → logprob: -14.875530242919922
    10. '#' → logprob: -15.125530242919922

Token 984: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006811410654336214
    2. ' =' → logprob: -5.006811618804932
    3. '=D' → logprob: -9.256811141967773
    4. '+=' → logprob: -14.756811141967773
    5. '＝' → logprob: -16.631811141967773
    6. '=
' → logprob: -17.256811141967773
    7. '=C' → logprob: -17.381811141967773
    8. ']' → logprob: -17.506811141967773
    9. 'D' → logprob: -17.631811141967773
    10. '=

' → logprob: -17.881811141967773

Token 985: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0028071331325918436
    2. ' D' → logprob: -5.877807140350342
    3. '	D' → logprob: -13.877806663513184
    4. '   ' → logprob: -14.127806663513184
    5. 'C' → logprob: -14.377806663513184
    6. ' ' → logprob: -16.8778076171875
    7. '(D' → logprob: -17.2528076171875
    8. ' ' → logprob: -17.6278076171875
    9. 'Ｄ' → logprob: -18.6278076171875
    10. '  ' → logprob: -19.0028076171875

Token 986: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007114782347343862
    2. 'i' → logprob: -7.250711441040039
    3. '[' → logprob: -14.250711441040039
    4. '[I' → logprob: -15.125711441040039
    5. '```' → logprob: -15.875711441040039
    6. '(i' → logprob: -16.00071144104004
    7. 'a' → logprob: -16.50071144104004
    8. 'I' → logprob: -17.25071144104004
    9. ' i' → logprob: -17.50071144104004
    10. '{i' → logprob: -17.50071144104004

Token 987: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007905708043836057
    2. '[i' → logprob: -7.500790596008301
    3. ']' → logprob: -8.5007905960083
    4. 'i' → logprob: -10.5007905960083
    5. ' -' → logprob: -13.1257905960083
    6. '-i' → logprob: -14.0007905960083
    7. '[-' → logprob: -14.1257905960083
    8. '[' → logprob: -14.3757905960083
    9. '1' → logprob: -14.6257905960083
    10. ']+' → logprob: -14.7507905960083

Token 988: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. '-' → logprob: -10.62502670288086
    3. ']' → logprob: -14.00002670288086
    4. ' ' → logprob: -14.25002670288086
    5. '   ' → logprob: -14.62502670288086
    6. '```' → logprob: -16.12502670288086
    7. '2' → logprob: -16.37502670288086
    8. '１' → logprob: -16.43752670288086
    9. 'i' → logprob: -16.62502670288086
    10. '#' → logprob: -16.81252670288086

Token 989: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07011926919221878
    2. ' +' → logprob: -2.6951193809509277
    3. ']' → logprob: -9.44511890411377
    4. ']+' → logprob: -9.44511890411377
    5. '+C' → logprob: -11.07011890411377
    6. ')' → logprob: -12.44511890411377
    7. '＋' → logprob: -13.19511890411377
    8. ')+' → logprob: -13.44511890411377
    9. ' plus' → logprob: -14.57011890411377
    10. '+D' → logprob: -14.82011890411377

Token 990: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003188524628058076
    2. ' +' → logprob: -5.753188610076904
    3. '+C' → logprob: -11.503188133239746
    4. '+D' → logprob: -14.503188133239746
    5. '＋' → logprob: -15.378188133239746
    6. '+
' → logprob: -17.628189086914062
    7. '+B' → logprob: -18.253189086914062
    8. '+=' → logprob: -18.878189086914062
    9. '+c' → logprob: -19.003189086914062
    10. '+A' → logprob: -19.003189086914062

Token 991: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0001105762057704851
    2. ' C' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.375110626220703
    4. '	C' → logprob: -17.500110626220703
    5. ' ' → logprob: -17.750110626220703
    6. '  ' → logprob: -17.875110626220703
    7. '    ' → logprob: -20.250110626220703
    8. 'Ｃ' → logprob: -20.250110626220703
    9. '>C' → logprob: -20.875110626220703
    10. 'c' → logprob: -21.000110626220703

Token 992: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[I' → logprob: -14.375000953674316
    3. '[' → logprob: -15.125000953674316
    4. 'i' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. ' [' → logprob: -18.125001907348633
    8. '
' → logprob: -18.875001907348633
    9. '[j' → logprob: -19.000001907348633
    10. '[int' → logprob: -19.625001907348633

Token 993: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4782458543777466
    2. ')' → logprob: -0.9782458543777466
    3. '   ' → logprob: -6.228245735168457
    4. '#' → logprob: -7.228245735168457
    5. '[i' → logprob: -7.603245735168457
    6. '<|end|>' → logprob: -8.728245735168457
    7. '])' → logprob: -8.853245735168457
    8. '[' → logprob: -8.978245735168457
    9. '）' → logprob: -9.228245735168457
    10. '```' → logprob: -9.603245735168457

Token 994: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 995: ' Aff' (ID: 13741)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18962129950523376
    2. '"""' → logprob: -2.1896212100982666
    3. 'for' → logprob: -2.9396212100982666
    4. '```' → logprob: -5.314621448516846
    5. 'print' → logprob: -7.939621448516846
    6. '...' → logprob: -8.064620971679688
    7. ')' → logprob: -8.189620971679688
    8. '""' → logprob: -8.314620971679688
    9. ' #' → logprob: -8.439620971679688
    10. 'pass' → logprob: -8.564620971679688

Token 996: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.02426072023808956
    2. '#' → logprob: -4.149260520935059
    3. 'ichage' → logprob: -5.149260520935059
    4. 'cher' → logprob: -6.524260520935059
    5. 'iche' → logprob: -8.024260520935059
    6. 'ich' → logprob: -8.399260520935059
    7. 'ichier' → logprob: -8.774260520935059
    8. 'f' → logprob: -10.524260520935059
    9. 'iché' → logprob: -10.524260520935059
    10. 'ic' → logprob: -10.899260520935059

Token 997: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04853081703186035
    2. '(D' → logprob: -3.1735308170318604
    3. ' D' → logprob: -5.548530578613281
    4. 'sum' → logprob: -7.798530578613281
    5. '#' → logprob: -7.923530578613281
    6. '[D' → logprob: -7.923530578613281
    7. 'len' → logprob: -8.423530578613281
    8. 'la' → logprob: -9.923530578613281
    9. '(' → logprob: -10.923530578613281
    10. '"D' → logprob: -11.048530578613281

Token 998: ' liste' (ID: 31719)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10303637385368347
    2. 's' → logprob: -2.978036403656006
    3. ' D' → logprob: -4.353036403656006
    4. 'val' → logprob: -4.478036403656006
    5. 'sum' → logprob: -5.228036403656006
    6. 'liste' → logprob: -5.228036403656006
    7. ' somme' → logprob: -6.228036403656006
    8. 'som' → logprob: -6.478036403656006
    9. 'prem' → logprob: -6.478036403656006
    10. 'der' → logprob: -6.728036403656006

Token 999: ' tri' (ID: 12665)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.33893048763275146
    2. '#' → logprob: -1.7139304876327515
    3. '#print' → logprob: -2.713930606842041
    4. 'print' → logprob: -3.213930606842041
    5. ' D' → logprob: -7.588930606842041
    6. ' #' → logprob: -9.213930130004883
    7. ' print' → logprob: -9.838930130004883
    8. '"""
' → logprob: -10.338930130004883
    9. '"""' → logprob: -10.588930130004883
    10. '[D' → logprob: -10.588930130004883

Token 1000: 'ée' (ID: 2894)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2604050934314728
    2. ']' → logprob: -2.3854050636291504
    3. 'e' → logprob: -2.8854050636291504
    4. ')' → logprob: -3.7604050636291504
    5. '#' → logprob: -4.13540506362915
    6. 'ée' → logprob: -4.88540506362915
    7. '(D' → logprob: -5.01040506362915
    8. 'ed' → logprob: -6.26040506362915
    9. '[D' → logprob: -6.26040506362915
    10. '[]' → logprob: -6.38540506362915

Token 1001: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7754994630813599
    2. 'print' → logprob: -1.1504994630813599
    3. '#' → logprob: -2.0254993438720703
    4. '#print' → logprob: -2.4004993438720703
    5. '"""
' → logprob: -9.02549934387207
    6. '#
' → logprob: -9.77549934387207
    7. 'for' → logprob: -9.90049934387207
    8. ' print' → logprob: -10.27549934387207
    9. ')' → logprob: -10.40049934387207
    10. ']' → logprob: -10.52549934387207

Token 1002: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015788905147928745
    2. '#print' → logprob: -8.875158309936523
    3. '#' → logprob: -11.250158309936523
    4. 'C' → logprob: -12.375158309936523
    5. '```' → logprob: -14.875158309936523
    6. 'for' → logprob: -15.250158309936523
    7. ' print' → logprob: -15.875158309936523
    8. '.print' → logprob: -18.375158309936523
    9. '(print' → logprob: -18.750158309936523
    10. '`' → logprob: -19.250158309936523

Token 1003: 'à' (ID: 708)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.056965336203575134
    2. ')' → logprob: -3.3069653511047363
    3. '#print' → logprob: -4.431965351104736
    4. 'print' → logprob: -5.556965351104736
    5. '")' → logprob: -6.431965351104736
    6. 'C' → logprob: -7.056965351104736
    7. ')#' → logprob: -8.931964874267578
    8. ']' → logprob: -9.181964874267578
    9. '])' → logprob: -9.556964874267578
    10. '"""' → logprob: -9.556964874267578

Token 1004: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5060708522796631
    2. 'la' → logprob: -1.381070852279663
    3. '#' → logprob: -2.756070852279663
    4. 'l' → logprob: -3.881070852279663
    5. 'des' → logprob: -4.256071090698242
    6. 'part' → logprob: -4.506071090698242
    7. 'fin' → logprob: -5.506071090698242
    8. 'len' → logprob: -5.881071090698242
    9. 'contin' → logprob: -5.881071090698242
    10. '```' → logprob: -6.006071090698242

Token 1005: ' fins' (ID: 34380)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.8231562972068787
    2. 'la' → logprob: -1.6981563568115234
    3. 'print' → logprob: -2.0731563568115234
    4. '#' → logprob: -2.3231563568115234
    5. 'jour' → logprob: -3.4481563568115234
    6. 'f' → logprob: -3.9481563568115234
    7. 'l' → logprob: -4.698156356811523
    8. 'part' → logprob: -4.823156356811523
    9. ')' → logprob: -4.948156356811523
    10. 'jà' → logprob: -5.073156356811523

Token 1006: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.09270257502794266
    2. 'd' → logprob: -3.092702627182007
    3. 'debug' → logprob: -3.342702627182007
    4. '#' → logprob: -5.592702388763428
    5. 'dé' → logprob: -5.967702388763428
    6. 'diagn' → logprob: -6.967702388763428
    7. ')' → logprob: -8.717702865600586
    8. ' de' → logprob: -8.842702865600586
    9. 'expl' → logprob: -9.967702865600586
    10. 'p' → logprob: -10.592702865600586

Token 1007: ' vér' (ID: 42524)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.0668143630027771
    2. 'dé' → logprob: -2.816814422607422
    3. 'test' → logprob: -6.066814422607422
    4. 'v' → logprob: -6.691814422607422
    5. '#' → logprob: -6.816814422607422
    6. 'contr' → logprob: -10.066814422607422
    7. 'verification' → logprob: -10.316814422607422
    8. ' debug' → logprob: -10.566814422607422
    9. 'deb' → logprob: -11.191814422607422
    10. '```' → logprob: -11.316814422607422

Token 1008: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.017892135307192802
    2. 'ifier' → logprob: -4.892892360687256
    3. 'f' → logprob: -5.642892360687256
    4. 'ri' → logprob: -6.392892360687256
    5. 'er' → logprob: -6.517892360687256
    6. 'r' → logprob: -7.142892360687256
    7. 'if' → logprob: -7.767892360687256
    8. 'rou' → logprob: -8.267891883850098
    9. '#' → logprob: -8.392891883850098
    10. 'ifi' → logprob: -8.392891883850098

Token 1009: ' ou' (ID: 2031)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22303500771522522
    2. '#print' → logprob: -2.2230350971221924
    3. ')' → logprob: -2.7230350971221924
    4. 'print' → logprob: -3.7230350971221924
    5. ')#' → logprob: -6.723034858703613
    6. ')
' → logprob: -7.973034858703613
    7. '")' → logprob: -8.723034858703613
    8. 'C' → logprob: -9.973034858703613
    9. '`)' → logprob: -10.848034858703613
    10. ' print' → logprob: -12.473034858703613

Token 1010: ' de' (ID: 334)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.140995591878891
    2. 'dé' → logprob: -3.140995502471924
    3. '#' → logprob: -3.390995502471924
    4. ' debug' → logprob: -3.890995502471924
    5. 'de' → logprob: -4.265995502471924
    6. 'test' → logprob: -4.640995502471924
    7. 'd' → logprob: -4.765995502471924
    8. ' dé' → logprob: -7.265995502471924
    9. 'deb' → logprob: -8.140995979309082
    10. ' debugging' → logprob: -8.515995979309082

Token 1011: ' dé' (ID: 2393)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.051740843802690506
    2. 'dé' → logprob: -3.051740884780884
    3. 'test' → logprob: -6.051740646362305
    4. '#' → logprob: -8.051740646362305
    5. ' debug' → logprob: -8.176740646362305
    6. 'deb' → logprob: -9.801740646362305
    7. ' dé' → logprob: -10.551740646362305
    8. 'd' → logprob: -10.801740646362305
    9. 'print' → logprob: -10.801740646362305
    10. 'de' → logprob: -11.051740646362305

Token 1012: 'bog' (ID: 32302)
  Prédit: 'bog'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bog' → logprob: -0.47423142194747925
    2. 'bug' → logprob: -0.9742314219474792
    3. 'p' → logprob: -8.974231719970703
    4. 'tection' → logprob: -12.224231719970703
    5. '#' → logprob: -12.474231719970703
    6. '```' → logprob: -12.599231719970703
    7. 'b' → logprob: -12.724231719970703
    8. 'mon' → logprob: -13.099231719970703
    9. 'Bug' → logprob: -13.474231719970703
    10. 'veloppement' → logprob: -13.974231719970703

Token 1013: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.45184871554374695
    2. 'ification' → logprob: -2.5768487453460693
    3. 'ication' → logprob: -2.7018487453460693
    4. 'gage' → logprob: -2.8268487453460693
    5. 'iation' → logprob: -3.8268487453460693
    6. 'print' → logprob: -3.9518487453460693
    7. '```' → logprob: -3.9518487453460693
    8. '#' → logprob: -4.20184850692749
    9. 'ichage' → logprob: -4.20184850692749
    10. 'C' → logprob: -4.70184850692749

Token 1014: ')
' (ID: 446)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5606623888015747
    2. ')' → logprob: -1.0606623888015747
    3. '#print' → logprob: -2.810662269592285
    4. 'print' → logprob: -3.935662269592285
    5. ')#' → logprob: -6.185662269592285
    6. 'C' → logprob: -7.685662269592285
    7. '")' → logprob: -8.060662269592285
    8. ')
' → logprob: -8.185662269592285
    9. '`)' → logprob: -9.185662269592285
    10. '"""' → logprob: -12.435662269592285

Token 1015: 'print' (ID: 1598)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.48861458897590637
    2. 'print' → logprob: -0.988614559173584
    3. '#' → logprob: -4.238614559173584
    4. '```' → logprob: -13.238615036010742
    5. '"""
' → logprob: -13.613615036010742
    6. '"""' → logprob: -14.113615036010742
    7. 'C' → logprob: -14.863615036010742
    8. 'for' → logprob: -15.238615036010742
    9. ' print' → logprob: -15.363615036010742
    10. ''''
' → logprob: -15.988615036010742

Token 1016: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.500028610229492
    3. 'C' → logprob: -13.750028610229492
    4. '('' → logprob: -17.000028610229492
    5. '(c' → logprob: -17.125028610229492
    6. '()' → logprob: -17.125028610229492
    7. '(sorted' → logprob: -17.500028610229492
    8. '("' → logprob: -17.750028610229492
    9. '((' → logprob: -18.500028610229492
    10. '(B' → logprob: -18.875028610229492

Token 1017: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ')#' → logprob: -12.625009536743164
    3. ' )' → logprob: -13.625009536743164
    4. '#' → logprob: -13.750009536743164
    5. '")' → logprob: -14.000009536743164
    6. '[' → logprob: -14.375009536743164
    7. ')`' → logprob: -14.375009536743164
    8. '))' → logprob: -14.375009536743164
    9. ')
' → logprob: -15.000009536743164
    10. ')")' → logprob: -15.125009536743164

Token 1018: '#' (ID: 2)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.19857551157474518
    2. '#' → logprob: -1.823575496673584
    3. '```' → logprob: -4.323575496673584
    4. ')' → logprob: -5.948575496673584
    5. '<|end|>' → logprob: -6.073575496673584
    6. '#print' → logprob: -8.823575973510742
    7. '""' → logprob: -9.198575973510742
    8. '")' → logprob: -9.698575973510742
    9. 'print' → logprob: -9.698575973510742
    10. '"""
' → logprob: -10.323575973510742

Token 1019: ' Initial' (ID: 9209)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.40017324686050415
    2. '#' → logprob: -1.1501731872558594
    3. '```' → logprob: -5.025173187255859
    4. ')' → logprob: -5.900173187255859
    5. 'print' → logprob: -6.400173187255859
    6. ']' → logprob: -7.400173187255859
    7. '#print' → logprob: -7.400173187255859
    8. '""' → logprob: -8.02517318725586
    9. 'for' → logprob: -8.52517318725586
    10. '"""
' → logprob: -9.02517318725586

Token 1020: 'isation' (ID: 6993)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03397414833307266
    2. 'z' → logprob: -4.6589741706848145
    3. 'print' → logprob: -5.1589741706848145
    4. 'iser' → logprob: -5.1589741706848145
    5. '```' → logprob: -5.9089741706848145
    6. 'n' → logprob: -6.0339741706848145
    7. 'ize' → logprob: -6.5339741706848145
    8. 's' → logprob: -7.2839741706848145
    9. 'i' → logprob: -7.2839741706848145
    10. 'al' → logprob: -7.4089741706848145

Token 1021: ' de' (ID: 334)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.056744497269392014
    2. '#' → logprob: -2.9317445755004883
    3. 'd' → logprob: -7.181744575500488
    4. 'E' → logprob: -7.556744575500488
    5. '[' → logprob: -8.681744575500488
    6. '(D' → logprob: -9.681744575500488
    7. '()' → logprob: -10.056744575500488
    8. '(' → logprob: -10.431744575500488
    9. 'C' → logprob: -10.681744575500488
    10. '```' → logprob: -10.806744575500488

Token 1022: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.041275933384895325
    2. 'E' → logprob: -3.791275978088379
    3. 'ans' → logprob: -4.666275978088379
    4. '[' → logprob: -6.041275978088379
    5. 'B' → logprob: -6.791275978088379
    6. '#' → logprob: -7.166275978088379
    7. 'C' → logprob: -7.416275978088379
    8. 'la' → logprob: -7.666275978088379
    9. 'sum' → logprob: -7.791275978088379
    10. '[D' → logprob: -8.041275978088379

Token 1023: ' variable' (ID: 11076)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014243894256651402
    2. '#' → logprob: -5.889244079589844
    3. 'E' → logprob: -6.139244079589844
    4. 'ans' → logprob: -6.139244079589844
    5. 'B' → logprob: -6.264244079589844
    6. 'C' → logprob: -6.764244079589844
    7. 'print' → logprob: -7.264244079589844
    8. 'max' → logprob: -7.389244079589844
    9. 'sum' → logprob: -7.764244079589844
    10. 'result' → logprob: -8.389244079589844

Token 1024: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15131637454032898
    2. 'diff' → logprob: -2.1513164043426514
    3. 'sum' → logprob: -4.401316165924072
    4. 's' → logprob: -6.276316165924072
    5. 'total' → logprob: -6.401316165924072
    6. 'max' → logprob: -6.526316165924072
    7. 'difference' → logprob: -6.776316165924072
    8. 'd' → logprob: -6.901316165924072
    9. 'res' → logprob: -7.026316165924072
    10. 'result' → logprob: -7.401316165924072

Token 1025: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.040313806384801865
    2. '=' → logprob: -3.415313720703125
    3. '#' → logprob: -5.040313720703125
    4. ' =' → logprob: -9.290313720703125
    5. '0' → logprob: -10.040313720703125
    6. ' ans' → logprob: -10.665313720703125
    7. '(ans' → logprob: -12.790313720703125
    8. '	ans' → logprob: -12.790313720703125
    9. 'a' → logprob: -13.415313720703125
    10. '=
' → logprob: -13.665313720703125

Token 1026: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011886836728081107
    2. 'C' → logprob: -7.5011887550354
    3. ' ' → logprob: -7.8761887550354
    4. 'D' → logprob: -8.626188278198242
    5. '1' → logprob: -10.751188278198242
    6. 'len' → logprob: -11.501188278198242
    7. '#' → logprob: -11.751188278198242
    8. 'N' → logprob: -12.126188278198242
    9. ' C' → logprob: -12.126188278198242
    10. 'sum' → logprob: -12.501188278198242

Token 1027: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011319868644932285
    2. 'C' → logprob: -9.250113487243652
    3. 'D' → logprob: -12.750113487243652
    4. 'N' → logprob: -12.750113487243652
    5. '1' → logprob: -13.000113487243652
    6. ' ' → logprob: -13.125113487243652
    7. '#' → logprob: -13.250113487243652
    8. 'sum' → logprob: -14.000113487243652
    9. 'ans' → logprob: -14.125113487243652
    10. 'len' → logprob: -14.500113487243652

Token 1028: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10026469081640244
    2. 'ans' → logprob: -2.35026478767395
    3. '"""' → logprob: -11.350264549255371
    4. '#print' → logprob: -11.850264549255371
    5. 'for' → logprob: -11.975264549255371
    6. '"""
' → logprob: -12.100264549255371
    7. '#
' → logprob: -12.225264549255371
    8. '(ans' → logprob: -12.600264549255371
    9. ' ans' → logprob: -12.850264549255371
    10. '=' → logprob: -13.100264549255371

Token 1029: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35311445593833923
    2. '#' → logprob: -1.2281144857406616
    3. 'ans' → logprob: -6.103114604949951
    4. 'acc' → logprob: -7.603114604949951
    5. 'calcul' → logprob: -7.603114604949951
    6. 'part' → logprob: -7.978114604949951
    7. 's' → logprob: -8.853114128112793
    8. 'for' → logprob: -9.103114128112793
    9. 'la' → logprob: -9.603114128112793
    10. '""' → logprob: -9.728114128112793

Token 1030: ' nouvelle' (ID: 24562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010597576387226582
    2. 'for' → logprob: -6.3855977058410645
    3. 'part' → logprob: -6.5105977058410645
    4. 's' → logprob: -6.6355977058410645
    5. 'comp' → logprob: -7.3855977058410645
    6. 'calcul' → logprob: -7.6355977058410645
    7. 'continue' → logprob: -7.7605977058410645
    8. 'la' → logprob: -7.8855977058410645
    9. ' #' → logprob: -8.260597229003906
    10. 'ré' → logprob: -8.510597229003906

Token 1031: ' somme' (ID: 64484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10102237015962601
    2. 'cal' → logprob: -3.851022481918335
    3. 'calcul' → logprob: -3.976022481918335
    4. 'fois' → logprob: -4.351022243499756
    5. 'tent' → logprob: -4.851022243499756
    6. 'bou' → logprob: -4.976022243499756
    7. 'version' → logprob: -5.101022243499756
    8. 's' → logprob: -5.351022243499756
    9. 'ligne' → logprob: -5.851022243499756
    10. 'é' → logprob: -6.101022243499756

Token 1032: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024701956659555435
    2. '=' → logprob: -3.7747020721435547
    3. ' =' → logprob: -7.149702072143555
    4. 'ans' → logprob: -7.899702072143555
    5. 'for' → logprob: -8.649702072143555
    6. '=#' → logprob: -10.149702072143555
    7. '"""
' → logprob: -11.274702072143555
    8. '#
' → logprob: -11.399702072143555
    9. '"""' → logprob: -12.024702072143555
    10. '0' → logprob: -12.024702072143555

Token 1033: 'é' (ID: 377)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20509767532348633
    2. ')' → logprob: -1.7050976753234863
    3. 'ans' → logprob: -6.205097675323486
    4. 'for' → logprob: -6.580097675323486
    5. ')#' → logprob: -9.080097198486328
    6. ')
' → logprob: -10.205097198486328
    7. '")' → logprob: -10.330097198486328
    8. ' for' → logprob: -11.080097198486328
    9. '`)' → logprob: -11.455097198486328
    10. '#print' → logprob: -11.580097198486328

Token 1034: 'vent' (ID: 818)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1919461190700531
    2. 'ans' → logprob: -2.691946029663086
    3. ')' → logprob: -2.941946029663086
    4. '=' → logprob: -4.066946029663086
    5. 'x' → logprob: -4.191946029663086
    6. '```' → logprob: -5.566946029663086
    7. 'n' → logprob: -6.191946029663086
    8. 'ns' → logprob: -6.566946029663086
    9. 't' → logprob: -6.816946029663086
    10. 's' → logprob: -6.816946029663086

Token 1035: 'uellement' (ID: 36026)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2360360324382782
    2. '=' → logprob: -2.1110360622406006
    3. ')' → logprob: -2.7360360622406006
    4. 'x' → logprob: -5.6110358238220215
    5. '   ' → logprob: -6.2360358238220215
    6. 'valuation' → logprob: -6.4860358238220215
    7. 'criture' → logprob: -6.4860358238220215
    8. 'ération' → logprob: -6.6110358238220215
    9. 'gal' → logprob: -6.7360358238220215
    10. '```' → logprob: -6.9860358238220215

Token 1036: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0032094421330839396
    2. ')' → logprob: -6.253209590911865
    3. '=' → logprob: -7.628209590911865
    4. 'for' → logprob: -7.878209590911865
    5. '0' → logprob: -9.128209114074707
    6. 'pour' → logprob: -9.753209114074707
    7. ')#' → logprob: -10.003209114074707
    8. 'ans' → logprob: -10.253209114074707
    9. ' #' → logprob: -10.253209114074707
    10. '")' → logprob: -11.003209114074707

Token 1037: ' une' (ID: 2463)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13070811331272125
    2. 'calcul' → logprob: -2.6307082176208496
    3. 'la' → logprob: -4.13070821762085
    4. 'une' → logprob: -4.63070821762085
    5. 'v' → logprob: -5.25570821762085
    6. ')' → logprob: -6.00570821762085
    7. 'un' → logprob: -6.13070821762085
    8. 'l' → logprob: -6.25570821762085
    9. 'le' → logprob: -6.25570821762085
    10. 'comp' → logprob: -6.63070821762085

Token 1038: ' approche' (ID: 102373)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2632114291191101
    2. 'util' → logprob: -3.138211488723755
    3. 'calcul' → logprob: -3.263211488723755
    4. 'aut' → logprob: -3.638211488723755
    5. 's' → logprob: -4.013211250305176
    6. 'nou' → logprob: -4.138211250305176
    7. 'solution' → logprob: -4.388211250305176
    8. 'optim' → logprob: -4.888211250305176
    9. 'future' → logprob: -5.263211250305176
    10. 'comp' → logprob: -5.263211250305176

Token 1039: ' alternative' (ID: 13319)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.44051000475883484
    2. 'alternative' → logprob: -1.4405100345611572
    3. '#' → logprob: -2.1905100345611572
    4. 'altern' → logprob: -5.565509796142578
    5. 'alternate' → logprob: -6.815509796142578
    6. 'different' → logprob: -6.815509796142578
    7. 'plus' → logprob: -7.690509796142578
    8. '```' → logprob: -8.190509796142578
    9. 'optim' → logprob: -8.565509796142578
    10. ' différente' → logprob: -8.940509796142578

Token 1040: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6358095407485962
    2. '#' → logprob: -0.7608095407485962
    3. '")' → logprob: -6.635809421539307
    4. 'ans' → logprob: -6.760809421539307
    5. '<|end|>' → logprob: -8.510809898376465
    6. '"""' → logprob: -8.760809898376465
    7. ')#' → logprob: -9.260809898376465
    8. '=' → logprob: -9.760809898376465
    9. ')
' → logprob: -10.135809898376465
    10. '"""
' → logprob: -10.135809898376465

Token 1041: 'ans' (ID: 616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010501326061785221
    2. 'ans' → logprob: -4.635501384735107
    3. 'for' → logprob: -7.635501384735107
    4. '"""' → logprob: -9.63550090789795
    5. '#print' → logprob: -9.76050090789795
    6. '"""
' → logprob: -9.76050090789795
    7. '0' → logprob: -10.26050090789795
    8. '```' → logprob: -10.63550090789795
    9. ' #' → logprob: -12.63550090789795
    10. '"#' → logprob: -13.26050090789795

Token 1042: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519315779209137
    2. ' =' → logprob: -1.5019315481185913
    3. '+=' → logprob: -14.126931190490723
    4. ' +=' → logprob: -14.376931190490723
    5. '＝' → logprob: -14.626931190490723
    6. '#' → logprob: -15.126931190490723
    7. '=
' → logprob: -15.376931190490723
    8. ' ' → logprob: -16.87693214416504
    9. ' =
' → logprob: -17.12693214416504
    10. ')' → logprob: -17.75193214416504

Token 1043: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. ' ' → logprob: -15.627805709838867
    4. '   ' → logprob: -16.065305709838867
    5. '۰' → logprob: -17.377805709838867
    6. '1' → logprob: -17.377805709838867
    7. '  ' → logprob: -17.565305709838867
    8. '=' → logprob: -18.002805709838867
    9. '(' → logprob: -18.002805709838867
    10. '#' → logprob: -18.127805709838867

Token 1044: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -15.375008583068848
    4. '#' → logprob: -15.375008583068848
    5. '000' → logprob: -16.12500762939453
    6. '00' → logprob: -16.68750762939453
    7. '(' → logprob: -16.68750762939453
    8. '[' → logprob: -16.81250762939453
    9. '   ' → logprob: -16.87500762939453
    10. 'print' → logprob: -17.06250762939453

Token 1045: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006655337754637003
    2. '<|end|>' → logprob: -5.631655216217041
    3. '#' → logprob: -6.256655216217041
    4. ' for' → logprob: -6.881655216217041
    5. '
' → logprob: -9.8816556930542
    6. ')' → logprob: -10.5066556930542
    7. '```' → logprob: -11.3816556930542
    8. '<|end|>' → logprob: -12.3816556930542
    9. '   ' → logprob: -12.8816556930542
    10. '﻿' → logprob: -13.3816556930542

Token 1046: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020932931452989578
    2. '#' → logprob: -3.895932912826538
    3. ' for' → logprob: -8.395933151245117
    4. '   ' → logprob: -9.395933151245117
    5. '<|end|>' → logprob: -10.270933151245117
    6. ')' → logprob: -11.020933151245117
    7. 'n' → logprob: -11.395933151245117
    8. 'i' → logprob: -12.020933151245117
    9. '```' → logprob: -12.270933151245117
    10. '"""' → logprob: -13.395933151245117

Token 1047: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001549737062305212
    2. '#' → logprob: -6.50154972076416
    3. 'i' → logprob: -10.62654972076416
    4. 'n' → logprob: -11.62654972076416
    5. ' for' → logprob: -12.00154972076416
    6. 'range' → logprob: -12.62654972076416
    7. '```' → logprob: -14.12654972076416
    8. '
' → logprob: -14.25154972076416
    9. '﻿' → logprob: -14.37654972076416
    10. '   ' → logprob: -14.37654972076416

Token 1048: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003143704670947045
    2. 'n' → logprob: -9.250314712524414
    3. 'r' → logprob: -9.750314712524414
    4. 'f' → logprob: -9.875314712524414
    5. ' for' → logprob: -9.875314712524414
    6. '#' → logprob: -10.000314712524414
    7. 'or' → logprob: -12.250314712524414
    8. ')' → logprob: -13.750314712524414
    9. '	for' → logprob: -13.875314712524414
    10. 'i' → logprob: -14.375314712524414

Token 1049: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001313809072598815
    2. '#' → logprob: -7.00131368637085
    3. ' for' → logprob: -8.626314163208008
    4. 'in' → logprob: -8.751314163208008
    5. 'n' → logprob: -10.626314163208008
    6. 'range' → logprob: -11.501314163208008
    7. 'i' → logprob: -11.626314163208008
    8. 'from' → logprob: -12.001314163208008
    9. '=' → logprob: -12.251314163208008
    10. '(n' → logprob: -12.751314163208008

Token 1050: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23549924790859222
    2. 'i' → logprob: -2.235499143600464
    3. 'n' → logprob: -2.360499143600464
    4. ' range' → logprob: -5.110499382019043
    5. 'N' → logprob: -6.235499382019043
    6. ' i' → logprob: -8.485499382019043
    7. ' n' → logprob: -9.360499382019043
    8. '(range' → logprob: -10.360499382019043
    9. 'r' → logprob: -10.860499382019043
    10. 'C' → logprob: -10.985499382019043

Token 1051: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1162632629275322
    2. ' in' → logprob: -2.3662631511688232
    3. 'range' → logprob: -4.366263389587402
    4. 'for' → logprob: -6.366263389587402
    5. '(' → logprob: -6.991263389587402
    6. ' range' → logprob: -8.741263389587402
    7. '(range' → logprob: -8.741263389587402
    8. '#' → logprob: -9.866263389587402
    9. '1' → logprob: -9.991263389587402
    10. ')' → logprob: -10.616263389587402

Token 1052: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19386586546897888
    2. '0' → logprob: -2.3188657760620117
    3. '1' → logprob: -3.1938657760620117
    4. ' range' → logprob: -3.3188657760620117
    5. 'N' → logprob: -7.943865776062012
    6. '2' → logprob: -8.943865776062012
    7. ' ' → logprob: -9.693865776062012
    8. '(range' → logprob: -10.943865776062012
    9. 'n' → logprob: -11.193865776062012
    10. ' N' → logprob: -11.568865776062012

Token 1053: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9523792266845703
    2. 'range' → logprob: -1.0773792266845703
    3. '1' → logprob: -1.3273792266845703
    4. 'N' → logprob: -4.95237922668457
    5. '2' → logprob: -7.45237922668457
    6. ' range' → logprob: -7.70237922668457
    7. '(' → logprob: -8.95237922668457
    8. '(N' → logprob: -8.95237922668457
    9. '(range' → logprob: -9.95237922668457
    10. 'n' → logprob: -10.20237922668457

Token 1054: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013642827048897743
    2. 'for' → logprob: -4.63864278793335
    3. 'to' → logprob: -5.76364278793335
    4. ',N' → logprob: -8.888643264770508
    5. ',n' → logprob: -9.013643264770508
    6. 'range' → logprob: -9.263643264770508
    7. 'in' → logprob: -9.638643264770508
    8. ' ,' → logprob: -9.763643264770508
    9. ' for' → logprob: -10.013643264770508
    10. ',j' → logprob: -10.138643264770508

Token 1055: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.248469718324486e-05
    2. ' N' → logprob: -10.875022888183594
    3. 'n' → logprob: -13.625022888183594
    4. '1' → logprob: -14.250022888183594
    5. '#' → logprob: -14.375022888183594
    6. 'range' → logprob: -15.000022888183594
    7. '(N' → logprob: -15.125022888183594
    8. 'M' → logprob: -16.000022888183594
    9. 'j' → logprob: -16.750022888183594
    10. 'len' → logprob: -17.125022888183594

Token 1056: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040513355284929276
    2. ':' → logprob: -4.040513515472412
    3. ',' → logprob: -4.790513515472412
    4. 'range' → logprob: -5.290513515472412
    5. ' for' → logprob: -5.915513515472412
    6. 'in' → logprob: -6.665513515472412
    7. '+' → logprob: -6.915513515472412
    8. '#' → logprob: -7.415513515472412
    9. '
' → logprob: -7.665513515472412
    10. '...' → logprob: -7.665513515472412

Token 1057: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008253088220953941
    2. ' for' → logprob: -4.88325309753418
    3. ':' → logprob: -7.50825309753418
    4. 'range' → logprob: -10.13325309753418
    5. ':
' → logprob: -10.75825309753418
    6. '<|end|>' → logprob: -11.75825309753418
    7. '#' → logprob: -11.88325309753418
    8. '   ' → logprob: -12.13325309753418
    9. '
' → logprob: -12.38325309753418
    10. 'in' → logprob: -12.38325309753418

Token 1058: ' accum' (ID: 23148)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006883976515382528
    2. 'N' → logprob: -5.6318840980529785
    3. ' range' → logprob: -5.7568840980529785
    4. 'for' → logprob: -10.00688362121582
    5. '#' → logprob: -10.13188362121582
    6. 'n' → logprob: -11.13188362121582
    7. ' N' → logprob: -12.38188362121582
    8. 'rang' → logprob: -12.88188362121582
    9. 'j' → logprob: -13.00688362121582
    10. '(range' → logprob: -13.50688362121582

Token 1059: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.4337143898010254
    2. 'érer' → logprob: -2.3087143898010254
    3. 'er' → logprob: -2.4337143898010254
    4. 'for' → logprob: -2.8087143898010254
    5. '   ' → logprob: -3.1837143898010254
    6. 'uer' → logprob: -3.4337143898010254
    7. 'user' → logprob: -4.933714389801025
    8. 'ule' → logprob: -5.433714389801025
    9. '#' → logprob: -5.558714389801025
    10. ']' → logprob: -5.558714389801025

Token 1060: ' des' (ID: 731)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.19353742897510529
    2. 'range' → logprob: -2.568537473678589
    3. 'j' → logprob: -2.693537473678589
    4. '1' → logprob: -3.818537473678589
    5. 'n' → logprob: -5.31853723526001
    6. ' range' → logprob: -6.56853723526001
    7. 'C' → logprob: -7.06853723526001
    8. ' N' → logprob: -7.31853723526001
    9. 'for' → logprob: -7.94353723526001
    10. ' j' → logprob: -8.068537712097168

Token 1061: ' produits' (ID: 23489)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04054506868124008
    2. 'j' → logprob: -3.4155449867248535
    3. 'n' → logprob: -5.6655449867248535
    4. 'range' → logprob: -5.7905449867248535
    5. '1' → logprob: -9.290545463562012
    6. ' N' → logprob: -9.540545463562012
    7. 'C' → logprob: -9.790545463562012
    8. '#' → logprob: -10.790545463562012
    9. ' range' → logprob: -11.040545463562012
    10. '+' → logprob: -11.040545463562012

Token 1062: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031039200723171234
    2. ' for' → logprob: -4.156039237976074
    3. '#' → logprob: -4.906039237976074
    4. '   ' → logprob: -5.531039237976074
    5. ':' → logprob: -6.656039237976074
    6. '(' → logprob: -6.656039237976074
    7. 'range' → logprob: -8.406039237976074
    8. ')' → logprob: -8.906039237976074
    9. '(
' → logprob: -9.281039237976074
    10. '(range' → logprob: -9.406039237976074

Token 1063: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7892944812774658
    2. 'C' → logprob: -0.9142944812774658
    3. 'range' → logprob: -2.289294481277466
    4. 'N' → logprob: -3.664294481277466
    5. 'B' → logprob: -4.414294242858887
    6. 'n' → logprob: -5.664294242858887
    7. '1' → logprob: -7.539294242858887
    8. ' range' → logprob: -8.039294242858887
    9. ' j' → logprob: -8.289294242858887
    10. 'D' → logprob: -8.664294242858887

Token 1064: ' forme' (ID: 27450)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20258328318595886
    2. 'C' → logprob: -2.2025833129882812
    3. 'N' → logprob: -3.0775833129882812
    4. 'range' → logprob: -4.327583312988281
    5. 'n' → logprob: -5.452583312988281
    6. 'B' → logprob: -5.452583312988281
    7. '#' → logprob: -5.952583312988281
    8. '1' → logprob: -7.202583312988281
    9. 'len' → logprob: -7.952583312988281
    10. 'D' → logprob: -8.202583312988281

Token 1065: ' D' (ID: 415)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9672806859016418
    2. 'j' → logprob: -1.467280626296997
    3. 'C' → logprob: -2.092280626296997
    4. 'range' → logprob: -2.467280626296997
    5. 'for' → logprob: -2.842280626296997
    6. 'ans' → logprob: -3.217280626296997
    7. 'N' → logprob: -3.842280626296997
    8. 'D' → logprob: -3.967280626296997
    9. 'B' → logprob: -4.342280864715576
    10. '(ans' → logprob: -5.092280864715576

Token 1066: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2584284842014313
    2. 'range' → logprob: -2.3834285736083984
    3. 'for' → logprob: -3.1334285736083984
    4. '#' → logprob: -3.8834285736083984
    5. '[' → logprob: -4.133428573608398
    6. 'j' → logprob: -4.133428573608398
    7. '[n' → logprob: -4.133428573608398
    8. '[:' → logprob: -5.133428573608398
    9. 'n' → logprob: -5.758428573608398
    10. '[N' → logprob: -6.008428573608398

Token 1067: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05033925548195839
    2. ']' → logprob: -3.0503392219543457
    3. ' -' → logprob: -7.300339221954346
    4. '#' → logprob: -8.050339698791504
    5. ']-' → logprob: -8.300339698791504
    6. '   ' → logprob: -8.800339698791504
    7. '[j' → logprob: -8.925339698791504
    8. '
' → logprob: -10.425339698791504
    9. '[' → logprob: -10.675339698791504
    10. ']*' → logprob: -11.050339698791504

Token 1068: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. '2' → logprob: -11.875017166137695
    3. ' ' → logprob: -12.000017166137695
    4. '0' → logprob: -14.000017166137695
    5. '#' → logprob: -14.125017166137695
    6. 'j' → logprob: -14.625017166137695
    7. '   ' → logprob: -14.750017166137695
    8. 'N' → logprob: -15.125017166137695
    9. ']' → logprob: -15.625017166137695
    10. '
' → logprob: -15.875017166137695

Token 1069: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027209652587771416
    2. '#' → logprob: -5.027209758758545
    3. ']*' → logprob: -5.027209758758545
    4. '   ' → logprob: -5.402209758758545
    5. '*' → logprob: -5.527209758758545
    6. '-' → logprob: -5.902209758758545
    7. ' *' → logprob: -6.902209758758545
    8. '[j' → logprob: -8.402209281921387
    9. ')' → logprob: -8.652209281921387
    10. ' -' → logprob: -8.902209281921387

Token 1070: ' *' (ID: 425)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4716164171695709
    2. 'for' → logprob: -1.0966163873672485
    3. '   ' → logprob: -3.721616506576538
    4. ' for' → logprob: -4.846616268157959
    5. '"""
' → logprob: -4.971616268157959
    6. '<|end|>' → logprob: -6.721616268157959
    7. ' #' → logprob: -7.971616268157959
    8. '"""' → logprob: -8.096616744995117
    9. '*' → logprob: -8.971616744995117
    10. '
' → logprob: -9.221616744995117

Token 1071: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008719289675354958
    2. 'C' → logprob: -5.383719444274902
    3. '(B' → logprob: -6.758719444274902
    4. 'j' → logprob: -7.008719444274902
    5. 'D' → logprob: -7.133719444274902
    6. ' B' → logprob: -7.758719444274902
    7. '(' → logprob: -8.383719444274902
    8. '2' → logprob: -9.633719444274902
    9. 'N' → logprob: -9.633719444274902
    10. '((' → logprob: -9.883719444274902

Token 1072: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.29439103603363037
    2. 'j' → logprob: -2.41939115524292
    3. '(j' → logprob: -2.41939115524292
    4. '(' → logprob: -3.91939115524292
    5. '1' → logprob: -4.29439115524292
    6. '[' → logprob: -4.54439115524292
    7. 'range' → logprob: -4.91939115524292
    8. '[n' → logprob: -5.16939115524292
    9. '(n' → logprob: -5.29439115524292
    10. '[N' → logprob: -5.41939115524292

Token 1073: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034188222140073776
    2. ']' → logprob: -3.4091882705688477
    3. '   ' → logprob: -8.284188270568848
    4. ' -' → logprob: -9.034188270568848
    5. '])' → logprob: -9.659188270568848
    6. ']-' → logprob: -10.784188270568848
    7. ' ' → logprob: -10.909188270568848
    8. '[j' → logprob: -11.534188270568848
    9. ']%' → logprob: -11.659188270568848
    10. '1' → logprob: -12.034188270568848

Token 1074: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '2' → logprob: -12.125007629394531
    3. ' ' → logprob: -14.125007629394531
    4. '```' → logprob: -14.125007629394531
    5. '   ' → logprob: -15.000007629394531
    6. 'j' → logprob: -15.750007629394531
    7. '１' → logprob: -16.25000762939453
    8. '-' → logprob: -16.50000762939453
    9. 'n' → logprob: -16.81250762939453
    10. '(' → logprob: -17.00000762939453

Token 1075: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0072996835224330425
    2. '])' → logprob: -5.632299900054932
    3. ')' → logprob: -6.132299900054932
    4. '   ' → logprob: -7.257299900054932
    5. ']*' → logprob: -8.132299423217773
    6. ']%' → logprob: -9.007299423217773
    7. '%' → logprob: -9.257299423217773
    8. ' ]' → logprob: -9.507299423217773
    9. '#' → logprob: -9.632299423217773
    10. '+' → logprob: -10.257299423217773

Token 1076: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2408423274755478
    2. '   ' → logprob: -1.740842342376709
    3. ' for' → logprob: -3.615842342376709
    4. ':' → logprob: -4.615842342376709
    5. '#' → logprob: -6.490842342376709
    6. '```' → logprob: -9.61584186553955
    7. ':
' → logprob: -9.74084186553955
    8. ')' → logprob: -9.99084186553955
    9. '	for' → logprob: -10.36584186553955
    10. ' ' → logprob: -10.86584186553955

Token 1077: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038161635398864746
    2. ' j' → logprob: -3.2881617546081543
    3. 'n' → logprob: -9.663161277770996
    4. 'range' → logprob: -10.663161277770996
    5. '1' → logprob: -11.288161277770996
    6. ' n' → logprob: -12.288161277770996
    7. 'i' → logprob: -12.538161277770996
    8. ' range' → logprob: -12.788161277770996
    9. ' in' → logprob: -13.038161277770996
    10. 'in' → logprob: -13.288161277770996

Token 1078: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5257847309112549
    2. ' in' → logprob: -0.9007847309112549
    3. ')' → logprob: -6.900784492492676
    4. '1' → logprob: -7.025784492492676
    5. '   ' → logprob: -8.275784492492676
    6. '(' → logprob: -8.900784492492676
    7. ',' → logprob: -9.150784492492676
    8. ':' → logprob: -9.650784492492676
    9. '
' → logprob: -10.275784492492676
    10. '+' → logprob: -10.275784492492676

Token 1079: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.015682850033044815
    2. ' range' → logprob: -4.640682697296143
    3. '1' → logprob: -5.140682697296143
    4. 'in' → logprob: -10.8906831741333
    5. ' ' → logprob: -11.3906831741333
    6. '(' → logprob: -11.3906831741333
    7. '(range' → logprob: -12.1406831741333
    8. '   ' → logprob: -12.2656831741333
    9. ' in' → logprob: -13.0156831741333
    10. '2' → logprob: -14.7656831741333

Token 1080: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030117228627204895
    2. '1' → logprob: -3.5301172733306885
    3. 'range' → logprob: -8.90511703491211
    4. '(N' → logprob: -9.28011703491211
    5. ',' → logprob: -10.03011703491211
    6. ' (' → logprob: -10.28011703491211
    7. '
' → logprob: -10.78011703491211
    8. '   ' → logprob: -11.15511703491211
    9. 'in' → logprob: -11.28011703491211
    10. ' range' → logprob: -12.53011703491211

Token 1081: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012557090260088444
    2. 'N' → logprob: -4.387557029724121
    3. ' ' → logprob: -11.262557029724121
    4. 'range' → logprob: -11.512557029724121
    5. '(' → logprob: -12.137557029724121
    6. '   ' → logprob: -12.262557029724121
    7. '0' → logprob: -12.387557029724121
    8. '2' → logprob: -12.637557029724121
    9. ' N' → logprob: -12.887557029724121
    10. '
' → logprob: -13.762557029724121

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.073596548754722e-05
    2. ',N' → logprob: -10.25005054473877
    3. ' ,' → logprob: -11.25005054473877
    4. '   ' → logprob: -14.50005054473877
    5. ',j' → logprob: -14.62505054473877
    6. '1' → logprob: -14.75005054473877
    7. 'N' → logprob: -15.25005054473877
    8. '(' → logprob: -15.75005054473877
    9. '(N' → logprob: -15.75005054473877
    10. ',
' → logprob: -16.000051498413086

Token 1083: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020377879263833165
    2. ' N' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.375204086303711
    4. '(N' → logprob: -18.25020408630371
    5. 'n' → logprob: -18.37520408630371
    6. ' ' → logprob: -18.62520408630371
    7. '	N' → logprob: -18.75020408630371
    8. '#' → logprob: -20.00020408630371
    9. '+' → logprob: -20.12520408630371
    10. '```' → logprob: -20.50020408630371

Token 1084: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.394135612528771e-05
    2. '):
' → logprob: -10.375043869018555
    3. ' +' → logprob: -11.750043869018555
    4. '):' → logprob: -12.875043869018555
    5. '+
' → logprob: -13.750043869018555
    6. '   ' → logprob: -15.125043869018555
    7. '#' → logprob: -15.875043869018555
    8. '1' → logprob: -16.125043869018555
    9. ':' → logprob: -16.250043869018555
    10. ')' → logprob: -16.375043869018555

Token 1085: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05941781401634216
    2. '1' → logprob: -2.934417724609375
    3. 'N' → logprob: -5.434417724609375
    4. ')' → logprob: -10.184417724609375
    5. '```' → logprob: -10.559417724609375
    6. '+
' → logprob: -10.684417724609375
    7. '(N' → logprob: -11.059417724609375
    8. ' +' → logprob: -11.434417724609375
    9. '
' → logprob: -11.934417724609375
    10. '+)' → logprob: -12.059417724609375

Token 1086: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6061028838157654
    2. '):
' → logprob: -1.1061029434204102
    3. ':' → logprob: -2.23110294342041
    4. '   ' → logprob: -4.60610294342041
    5. ':
' → logprob: -5.23110294342041
    6. ')' → logprob: -7.10610294342041
    7. '):
' → logprob: -9.48110294342041
    8. ']:' → logprob: -11.60610294342041
    9. ' :' → logprob: -11.85610294342041
    10. '}:' → logprob: -12.35610294342041

Token 1087: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002726601669564843
    2. ':' → logprob: -8.625272750854492
    3. ')' → logprob: -9.875272750854492
    4. '):' → logprob: -11.500272750854492
    5. ' ans' → logprob: -11.625272750854492
    6. '   ' → logprob: -12.500272750854492
    7. '	ans' → logprob: -12.500272750854492
    8. ' ' → logprob: -12.875272750854492
    9. '  ' → logprob: -13.000272750854492
    10. 'ans' → logprob: -13.250272750854492

Token 1088: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28814825415611267
    2. 'ans' (adapté à ' ans') → logprob: -1.538148283958435
    3. 'D' → logprob: -3.9131481647491455
    4. '#' → logprob: -4.288148403167725
    5. ' ans' → logprob: -6.788148403167725
    6. '	ans' → logprob: -8.038147926330566
    7. ' D' → logprob: -8.913147926330566
    8. '  ' → logprob: -10.163147926330566
    9. '```' → logprob: -10.163147926330566
    10. ' ' → logprob: -10.538147926330566

Token 1089: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760666131973267
    2. ' +=' → logprob: -0.8260666131973267
    3. '=' → logprob: -9.451066970825195
    4. ']+=' → logprob: -10.701066970825195
    5. '+' → logprob: -11.576066970825195
    6. ' =' → logprob: -12.076066970825195
    7. '   ' → logprob: -12.451066970825195
    8. '+='' → logprob: -13.076066970825195
    9. '+=(' → logprob: -13.326066970825195
    10. '+="' → logprob: -14.201066970825195

Token 1090: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0001295222609769553
    2. ' D' → logprob: -9.125129699707031
    3. '   ' → logprob: -11.750129699707031
    4. 'C' → logprob: -11.875129699707031
    5. '(D' → logprob: -12.375129699707031
    6. 'B' → logprob: -13.875129699707031
    7. '	D' → logprob: -15.125129699707031
    8. '(' → logprob: -15.750129699707031
    9. ' ' → logprob: -16.87512969970703
    10. '  ' → logprob: -17.25012969970703

Token 1091: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.8828707804204896e-05
    2. 'j' → logprob: -10.000048637390137
    3. '[' → logprob: -13.250048637390137
    4. '   ' → logprob: -14.500048637390137
    5. '(j' → logprob: -14.500048637390137
    6. '
' → logprob: -15.625048637390137
    7. ' j' → logprob: -15.875048637390137
    8. '	j' → logprob: -16.750049591064453
    9. '[
' → logprob: -17.125049591064453
    10. '[i' → logprob: -17.250049591064453

Token 1092: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -11.625012397766113
    3. ' -' → logprob: -13.500012397766113
    4. '[j' → logprob: -13.875012397766113
    5. '   ' → logprob: -14.375012397766113
    6. '[-' → logprob: -15.000012397766113
    7. ']' → logprob: -15.500012397766113
    8. '1' → logprob: -16.37501335144043
    9. '−' → logprob: -16.62501335144043
    10. '```' → logprob: -16.62501335144043

Token 1093: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '-' → logprob: -15.375000953674316
    5. '   ' → logprob: -15.750000953674316
    6. 'j' → logprob: -15.875000953674316
    7. '```' → logprob: -16.750001907348633
    8. '0' → logprob: -17.000001907348633
    9. ']' → logprob: -18.375001907348633
    10. '１' → logprob: -18.812501907348633

Token 1094: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5768309831619263
    2. '*' → logprob: -0.8268309831619263
    3. ']' → logprob: -7.701830863952637
    4. ')' → logprob: -8.076830863952637
    5. '   ' → logprob: -9.951830863952637
    6. ' ' → logprob: -11.076830863952637
    7. '#' → logprob: -11.076830863952637
    8. ' ' → logprob: -11.826830863952637
    9. 'import' → logprob: -12.076830863952637
    10. '}' → logprob: -12.201830863952637

Token 1095: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.100220687687397
    2. '*' → logprob: -2.3502206802368164
    3. ' ' → logprob: -12.475220680236816
    4. '   ' → logprob: -12.975220680236816
    5. ' ' → logprob: -13.350220680236816
    6. ')' → logprob: -13.600220680236816
    7. '#' → logprob: -13.725220680236816
    8. 'import' → logprob: -14.725220680236816
    9. '**' → logprob: -14.850220680236816
    10. '```' → logprob: -14.912720680236816

Token 1096: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003971839905716479
    2. ' B' → logprob: -7.875397205352783
    3. '(B' → logprob: -11.750396728515625
    4. '   ' → logprob: -12.250396728515625
    5. '(' → logprob: -13.125396728515625
    6. ' (' → logprob: -14.250396728515625
    7. ' ' → logprob: -15.000396728515625
    8. '	B' → logprob: -15.000396728515625
    9. '((' → logprob: -15.375396728515625
    10. '#' → logprob: -15.500396728515625

Token 1097: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001818489981815219
    2. 'j' → logprob: -9.250182151794434
    3. '[' → logprob: -9.375182151794434
    4. '   ' → logprob: -15.500182151794434
    5. '(j' → logprob: -15.750182151794434
    6. ' [' → logprob: -15.750182151794434
    7. ' j' → logprob: -16.125181198120117
    8. '[
' → logprob: -16.375181198120117
    9. '	j' → logprob: -17.000181198120117
    10. '```' → logprob: -18.000181198120117

Token 1098: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.215330409351736e-05
    2. '[' → logprob: -10.500041961669922
    3. '1' → logprob: -12.000041961669922
    4. ' -' → logprob: -12.250041961669922
    5. '   ' → logprob: -14.000041961669922
    6. '[-' → logprob: -14.250041961669922
    7. '```' → logprob: -14.625041961669922
    8. ']' → logprob: -14.750041961669922
    9. '<|end|>' → logprob: -15.375041961669922
    10. '<|end|>' → logprob: -15.500041961669922

Token 1099: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001936962129548192
    2. '-' → logprob: -6.251936912536621
    3. ' ' → logprob: -12.126936912536621
    4. '```' → logprob: -13.876936912536621
    5. '   ' → logprob: -14.001936912536621
    6. 'j' → logprob: -14.501936912536621
    7. '[j' → logprob: -15.001936912536621
    8. ']' → logprob: -17.001937866210938
    9. '[' → logprob: -17.189437866210938
    10. '0' → logprob: -17.189437866210938

Token 1100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2618205547332764
    2. '<|end|>' → logprob: -1.2618205547332764
    3. '   ' → logprob: -1.6368205547332764
    4. ']' → logprob: -1.7618205547332764
    5. '%' → logprob: -2.8868205547332764
    6. '<|end|>' → logprob: -5.1368207931518555
    7. '}' → logprob: -6.5118207931518555
    8. '#' → logprob: -6.7618207931518555
    9. ' %' → logprob: -6.8868207931518555
    10. ')%' → logprob: -7.1368207931518555

Token 1101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021197548136115074
    2. '%' → logprob: -4.146197319030762
    3. '<|end|>' → logprob: -5.771197319030762
    4. ' %' → logprob: -6.896197319030762
    5. '
' → logprob: -8.271197319030762
    6. '```' → logprob: -8.771197319030762
    7. ' %=' → logprob: -9.271197319030762
    8. ')' → logprob: -9.271197319030762
    9. '    
' → logprob: -9.521197319030762
    10. '<|end|>' → logprob: -9.521197319030762

Token 1102: ' print' (ID: 2123)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10187271237373352
    2. '   ' → logprob: -2.476872682571411
    3. ' %=' → logprob: -5.35187292098999
    4. ')' → logprob: -5.97687292098999
    5. '%=' → logprob: -6.72687292098999
    6. ' %' → logprob: -6.97687292098999
    7. '<|end|>' → logprob: -7.10187292098999
    8. '=' → logprob: -7.22687292098999
    9. '```' → logprob: -7.85187292098999
    10. '%\' → logprob: -8.101872444152832

Token 1103: '(D' (ID: 9908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4884797930717468
    2. '(ans' → logprob: -0.9884797930717468
    3. '(j' → logprob: -4.8634796142578125
    4. '(D' → logprob: -5.9884796142578125
    5. '(B' → logprob: -6.6134796142578125
    6. 'j' → logprob: -6.7384796142578125
    7. '()' → logprob: -7.4884796142578125
    8. 'ans' → logprob: -7.4884796142578125
    9. '(
' → logprob: -9.363479614257812
    10. '(C' → logprob: -9.363479614257812

Token 1104: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03478950634598732
    2. '-' → logprob: -3.534789562225342
    3. ')' → logprob: -6.284789562225342
    4. '[' → logprob: -6.534789562225342
    5. ']' → logprob: -7.534789562225342
    6. '])' → logprob: -7.784789562225342
    7. '   ' → logprob: -8.284789085388184
    8. '][' → logprob: -8.534789085388184
    9. ')[' → logprob: -9.534789085388184
    10. '[-' → logprob: -9.659789085388184

Token 1105: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016253103967756033
    2. '])' → logprob: -6.6266255378723145
    3. ']' → logprob: -8.251625061035156
    4. ' -' → logprob: -11.126625061035156
    5. '   ' → logprob: -11.251625061035156
    6. ']-' → logprob: -13.001625061035156
    7. '])
' → logprob: -13.251625061035156
    8. '1' → logprob: -13.376625061035156
    9. '[' → logprob: -13.751625061035156
    10. ')' → logprob: -14.751625061035156

Token 1106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3612014949321747
    2. '-' → logprob: -1.236201524734497
    3. '0' → logprob: -4.611201286315918
    4. '])' → logprob: -6.111201286315918
    5. '   ' → logprob: -8.486201286315918
    6. ' ' → logprob: -8.736201286315918
    7. ']' → logprob: -9.486201286315918
    8. '#' → logprob: -10.611201286315918
    9. ' -' → logprob: -11.736201286315918
    10. '])
' → logprob: -11.986201286315918

Token 1107: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003971543628722429
    2. ',' → logprob: -5.878971576690674
    3. ' )' → logprob: -7.003971576690674
    4. ')#' → logprob: -9.378971099853516
    5. ',end' → logprob: -9.753971099853516
    6. '   ' → logprob: -10.378971099853516
    7. '),' → logprob: -10.628971099853516
    8. '])' → logprob: -11.503971099853516
    9. ' ,' → logprob: -11.628971099853516
    10. ')%' → logprob: -12.003971099853516

Token 1108: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001954563893377781
    2. '   ' → logprob: -6.626954555511475
    3. ' )' → logprob: -7.876954555511475
    4. ']' → logprob: -9.251955032348633
    5. '])' → logprob: -10.251955032348633
    6. '[' → logprob: -10.751955032348633
    7. '[j' → logprob: -11.251955032348633
    8. ')#' → logprob: -11.251955032348633
    9. '))' → logprob: -11.626955032348633
    10. '-' → logprob: -11.626955032348633

Token 1109: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.013034106232225895
    2. 'j' → logprob: -5.388034343719482
    3. 'C' → logprob: -6.013034343719482
    4. ')' → logprob: -6.638034343719482
    5. ' B' → logprob: -6.638034343719482
    6. 'MOD' → logprob: -7.388034343719482
    7. '(' → logprob: -7.888034343719482
    8. '(N' → logprob: -8.013033866882324
    9. '   ' → logprob: -8.388033866882324
    10. '(B' → logprob: -8.513033866882324

Token 1110: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.009867293760180473
    2. '-' → logprob: -4.884867191314697
    3. '[' → logprob: -6.259867191314697
    4. '[-' → logprob: -8.634867668151855
    5. ')' → logprob: -9.009867668151855
    6. '[n' → logprob: -10.884867668151855
    7. '```' → logprob: -11.759867668151855
    8. '   ' → logprob: -12.259867668151855
    9. '[
' → logprob: -13.009867668151855
    10. '(j' → logprob: -13.134867668151855

Token 1111: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010604646377032623
    2. '])' → logprob: -9.500105857849121
    3. ']' → logprob: -11.000105857849121
    4. ' -' → logprob: -11.750105857849121
    5. '1' → logprob: -13.000105857849121
    6. '-
' → logprob: -13.750105857849121
    7. '   ' → logprob: -14.125105857849121
    8. '-)' → logprob: -14.500105857849121
    9. ']-' → logprob: -15.125105857849121
    10. '-
' → logprob: -15.375105857849121

Token 1112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.875004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '```' → logprob: -15.437504768371582
    5. '2' → logprob: -15.937504768371582
    6. '0' → logprob: -16.375003814697266
    7. 'print' → logprob: -16.437503814697266
    8. 'j' → logprob: -16.562503814697266
    9. '-' → logprob: -16.625003814697266
    10. ')' → logprob: -17.000003814697266

Token 1113: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018577903392724693
    2. '   ' → logprob: -9.2501859664917
    3. ')
' → logprob: -10.2501859664917
    4. ' )' → logprob: -10.8751859664917
    5. '())' → logprob: -11.1251859664917
    6. '()' → logprob: -12.3751859664917
    7. '))' → logprob: -12.8751859664917
    8. '+' → logprob: -12.8751859664917
    9. ')#' → logprob: -12.8751859664917
    10. ')")' → logprob: -13.3751859664917

Token 1114: '"""
' (ID: 15611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1115: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1116: ' Fin' (ID: 7772)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6912311315536499
    2. '<|end|>' → logprob: -0.8162311315536499
    3. '#' → logprob: -3.4412312507629395
    4. ']' → logprob: -4.5662312507629395
    5. '```' → logprob: -4.5662312507629395
    6. '<|end|>' → logprob: -6.6912312507629395
    7. '[' → logprob: -7.3162312507629395
    8. '}' → logprob: -8.066230773925781
    9. '%' → logprob: -8.441230773925781
    10. '
' → logprob: -8.566230773925781

Token 1117: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.010558654554188251
    2. 'f' → logprob: -5.635558605194092
    3. '#' → logprob: -5.760558605194092
    4. ' code' → logprob: -5.885558605194092
    5. 'program' → logprob: -8.13555908203125
    6. 'file' → logprob: -8.63555908203125
    7. 'programme' → logprob: -8.76055908203125
    8. '"""' → logprob: -9.26055908203125
    9. 'Code' → logprob: -9.63555908203125
    10. 'script' → logprob: -9.88555908203125

Token 1119: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7335634827613831
    2. '<|end|>' → logprob: -0.7335634827613831
    3. '#' → logprob: -4.108563423156738
    4. '```' → logprob: -4.108563423156738
    5. ']' → logprob: -5.483563423156738
    6. '}' → logprob: -7.733563423156738
    7. '
' → logprob: -7.983563423156738
    8. '<|end|>' → logprob: -7.983563423156738
    9. ' ' → logprob: -8.108563423156738
    10. '"""' → logprob: -8.733563423156738

Token 1120: ' exp' (ID: 2794)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44407951831817627
    2. '"""' → logprob: -1.4440795183181763
    3. 'pass' → logprob: -2.4440793991088867
    4. '<|end|>' → logprob: -4.069079399108887
    5. '```' → logprob: -5.194079399108887
    6. 'un' → logprob: -5.694079399108887
    7. '""' → logprob: -6.069079399108887
    8. 'une' → logprob: -6.819079399108887
    9. '"""
' → logprob: -7.569079399108887
    10. '"#' → logprob: -7.694079399108887

Token 1121: 'lications' (ID: 17986)
  Prédit: 'lication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.46086493134498596
    2. 'lications' → logprob: -1.0858649015426636
    3. 'lan' → logprob: -4.335865020751953
    4. 'planation' → logprob: -5.335865020751953
    5. 'lic' → logprob: -6.210865020751953
    6. '#' → logprob: -6.710865020751953
    7. 'li' → logprob: -6.960865020751953
    8. 'lique' → logprob: -6.960865020751953
    9. 'il' → logprob: -7.085865020751953
    10. 'er' → logprob: -7.210865020751953

Token 1122: ' déta' (ID: 99673)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1123: 'illées' (ID: 185332)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47237205505371094
    2. '<|end|>' → logprob: -1.097372055053711
    3. ']' → logprob: -3.722372055053711
    4. '#' → logprob: -4.847372055053711
    5. '```' → logprob: -5.472372055053711
    6. '%' → logprob: -6.347372055053711
    7. '
' → logprob: -6.472372055053711
    8. '<|end|>' → logprob: -6.972372055053711
    9. '}' → logprob: -7.347372055053711
    10. '[' → logprob: -7.597372055053711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1121
Tokens correctement prédits (1ère position, stricte): 274
Tokens correctement prédits (1ère position, avec adaptation): 277
Tokens correctement prédits (top 10): 621
Précision stricte (1ère position): 24.44%
Précision adaptée (1ère position): 24.71%
Précision (top 10): 55.40%
================================================================================
