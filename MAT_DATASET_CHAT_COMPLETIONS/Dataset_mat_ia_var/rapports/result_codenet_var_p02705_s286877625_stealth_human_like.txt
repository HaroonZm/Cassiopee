================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

# Bon bah on récupère le rayon, classiquement quoi
rayon = int(input())

# En vrai j'aurais pu arrondir, mais bon...
circ = 2 * math.pi * rayon

print(circ)  # voilà, ça donne le périmètre normalement
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. '```' → logprob: -7.2524309158325195
    3. '\n' → logprob: -7.3774309158325195
    4. '\' → logprob: -7.8774309158325195
    5. 'import' → logprob: -8.00243091583252
    6. '<|end|>' → logprob: -9.25243091583252
    7. '.pi' → logprob: -10.25243091583252
    8. 'a' → logprob: -11.00243091583252
    9. '.e' → logprob: -11.12743091583252
    10. '<|end|>' → logprob: -11.12743091583252

Token 4: ' Bon' (ID: 12658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2268817275762558
    2. ' def' → logprob: -3.101881742477417
    3. ' Calculate' → logprob: -3.101881742477417
    4. ' factorial' → logprob: -3.351881742477417
    5. ' calculate' → logprob: -3.976881742477417
    6. ' sqrt' → logprob: -5.226881504058838
    7. 'Calculate' → logprob: -5.226881504058838
    8. ' area' → logprob: -5.351881504058838
    9. ' calculates' → logprob: -5.351881504058838
    10. ' Calcul' → logprob: -5.351881504058838

Token 5: ' bah' (ID: 13530)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.02803889848291874
    2. 'jour' → logprob: -4.27803897857666
    3. 'd' → logprob: -5.77803897857666
    4. 'use' → logprob: -5.90303897857666
    5. 'f' → logprob: -6.40303897857666
    6. '```' → logprob: -7.27803897857666
    7. 'jou' → logprob: -7.65303897857666
    8. 'angle' → logprob: -7.77803897857666
    9. 'usc' → logprob: -7.77803897857666
    10. 'def' → logprob: -7.90303897857666

Token 6: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01883828267455101
    2. ' je' → logprob: -4.643838405609131
    3. ' c' → logprob: -5.893838405609131
    4. ' voilà' → logprob: -6.268838405609131
    5. ' ,' → logprob: -7.268838405609131
    6. '!' → logprob: -7.518838405609131
    7. ' j' → logprob: -7.768838405609131
    8. '```' → logprob: -7.893838405609131
    9. 'je' → logprob: -8.018837928771973
    10. 'c' → logprob: -8.018837928771973

Token 7: ' récup' (ID: 62856)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'va' → logprob: -0.9932332634925842
    2. 'continue' → logprob: -1.1182332038879395
    3. 'y' → logprob: -2.1182332038879395
    4. 'part' → logprob: -3.1182332038879395
    5. 'f' → logprob: -3.3682332038879395
    6. ' continue' → logprob: -3.7432332038879395
    7. ' y' → logprob: -4.1182332038879395
    8. 'comm' → logprob: -4.3682332038879395
    9. 'fait' → logprob: -4.3682332038879395
    10. 'pe' → logprob: -4.9932332038879395

Token 8: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0024158458691090345
    2. 'è' → logprob: -6.252415657043457
    3. 'èr' → logprob: -8.127415657043457
    4. 'ére' → logprob: -9.252415657043457
    5. 'érer' → logprob: -10.127415657043457
    6. 'èrent' → logprob: -11.502415657043457
    7. 'ération' → logprob: -11.627415657043457
    8. 'èra' → logprob: -12.002415657043457
    9. '#' → logprob: -12.252415657043457
    10. '\' → logprob: -12.377415657043457

Token 9: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8291173577308655
    2. ' le' → logprob: -1.7041172981262207
    3. 'le' → logprob: -2.2041172981262207
    4. ' les' → logprob: -2.9541172981262207
    5. ' ' → logprob: -3.0791172981262207
    6. 'la' → logprob: -3.0791172981262207
    7. 'l' → logprob: -3.2041172981262207
    8. ' l' → logprob: -3.4541172981262207
    9. 'les' → logprob: -3.5791172981262207
    10. ' ' → logprob: -4.579117298126221

Token 10: ' rayon' (ID: 80967)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -2.205157518386841
    2. 'd' → logprob: -2.455157518386841
    3. 'math' → logprob: -2.455157518386841
    4. 'rés' → logprob: -2.580157518386841
    5. 'result' → logprob: -2.955157518386841
    6. 'r' → logprob: -3.080157518386841
    7. 'ray' → logprob: -3.205157518386841
    8. 'module' → logprob: -3.330157518386841
    9. 'texte' → logprob: -3.330157518386841
    10. 'me' → logprob: -3.455157518386841

Token 11: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5837478637695312
    2. 'r' → logprob: -1.3337478637695312
    3. ' ' → logprob: -1.9587478637695312
    4. ',' → logprob: -4.708747863769531
    5. '=' → logprob: -4.958747863769531
    6. ' =' → logprob: -5.208747863769531
    7. '.' → logprob: -6.083747863769531
    8. '(' → logprob: -6.208747863769531
    9. '#' → logprob: -6.333747863769531
    10. 's' → logprob: -6.583747863769531

Token 12: ' class' (ID: 744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0012027025222778
    2. 'r' → logprob: -1.5012027025222778
    3. ' rayon' → logprob: -2.0012025833129883
    4. ' r' → logprob: -2.5012025833129883
    5. ',' → logprob: -3.3762025833129883
    6. ' espace' → logprob: -3.6262025833129883
    7. 'space' → logprob: -4.126202583312988
    8. ' ,' → logprob: -4.251202583312988
    9. ' et' → logprob: -4.376202583312988
    10. 'radius' → logprob: -4.626202583312988

Token 13: 'iquement' (ID: 83934)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02078033797442913
    2. 's' → logprob: -5.645780563354492
    3. '=' → logprob: -5.895780563354492
    4. '_' → logprob: -5.895780563354492
    5. ' =' → logprob: -5.895780563354492
    6. 'r' → logprob: -6.645780563354492
    7. '.' → logprob: -6.645780563354492
    8. ')' → logprob: -6.895780563354492
    9. ',' → logprob: -7.145780563354492
    10. ':' → logprob: -7.395780563354492

Token 14: ' quoi' (ID: 33399)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11937117576599121
    2. ' ' → logprob: -2.369371175765991
    3. '_' → logprob: -5.36937141418457
    4. 'ray' → logprob: -5.61937141418457
    5. ' rayon' → logprob: -6.11937141418457
    6. 'radius' → logprob: -6.61937141418457
    7. '#' → logprob: -6.61937141418457
    8. ',' → logprob: -6.99437141418457
    9. 'x' → logprob: -7.11937141418457
    10. 'a' → logprob: -7.36937141418457

Token 15: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0611746571958065
    2. '_' → logprob: -4.0611748695373535
    3. ' ' → logprob: -4.6861748695373535
    4. ',' → logprob: -4.8111748695373535
    5. ')' → logprob: -5.3111748695373535
    6. '#' → logprob: -5.6861748695373535
    7. '.' → logprob: -5.6861748695373535
    8. 's' → logprob: -6.3111748695373535
    9. 'ray' → logprob: -6.3111748695373535
    10. 'radius' → logprob: -6.4361748695373535

Token 16: 'ray' (ID: 25430)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05547003075480461
    2. '_' → logprob: -3.6804699897766113
    3. ' ' → logprob: -4.055469989776611
    4. ',' → logprob: -6.055469989776611
    5. 'ray' → logprob: -6.430469989776611
    6. 'radius' → logprob: -6.680469989776611
    7. ' rayon' → logprob: -6.930469989776611
    8. 's' → logprob: -7.055469989776611
    9. ' =' → logprob: -7.180469989776611
    10. '.' → logprob: -7.305469989776611

Token 17: 'on' (ID: 263)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.25276464223861694
    2. 'on' → logprob: -1.5027647018432617
    3. '_' → logprob: -7.752764701843262
    4. ' =' → logprob: -9.252764701843262
    5. ' o' → logprob: -10.002764701843262
    6. ' ' → logprob: -10.252764701843262
    7. '  ' → logprob: -10.377764701843262
    8. '_o' → logprob: -10.627764701843262
    9. 'onnement' → logprob: -10.752764701843262
    10. ' on' → logprob: -10.752764701843262

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16160793602466583
    2. '_' → logprob: -2.6616079807281494
    3. ' ' → logprob: -2.7866079807281494
    4. '=' → logprob: -4.53660774230957
    5. '_space' → logprob: -5.66160774230957
    6. '_r' → logprob: -7.41160774230957
    7. 'space' → logprob: -7.78660774230957
    8. 's' → logprob: -7.91160774230957
    9. ' _' → logprob: -8.16160774230957
    10. 'r' → logprob: -8.28660774230957

Token 19: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2510566711425781
    2. ' int' → logprob: -1.8760566711425781
    3. ' ' → logprob: -3.001056671142578
    4. 'float' → logprob: -4.626056671142578
    5. 'int' → logprob: -5.126056671142578
    6. ' input' → logprob: -6.876056671142578
    7. ' math' → logprob: -7.126056671142578
    8. '0' → logprob: -8.001056671142578
    9. 'input' → logprob: -8.501056671142578
    10. 'math' → logprob: -8.501056671142578

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31335538625717163
    2. '(' → logprob: -1.3133554458618164
    3. ' (' → logprob: -9.938355445861816
    4. 'input' → logprob: -10.813355445861816
    5. '(raw' → logprob: -12.063355445861816
    6. '(r' → logprob: -12.313355445861816
    7. '(math' → logprob: -12.313355445861816
    8. '(
' → logprob: -12.688355445861816
    9. '(ray' → logprob: -12.938355445861816
    10. '('' → logprob: -13.188355445861816

Token 21: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002600864740088582
    2. '()' → logprob: -6.50260066986084
    3. '('' → logprob: -7.37760066986084
    4. '("("' → logprob: -8.12760066986084
    5. '("' → logprob: -10.00260066986084
    6. '("")' → logprob: -10.25260066986084
    7. ')' → logprob: -10.50260066986084
    8. '(
' → logprob: -10.50260066986084
    9. '(""))' → logprob: -11.37760066986084
    10. '())' → logprob: -11.87760066986084

Token 22: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24057309329509735
    2. 'if' → logprob: -3.1155731678009033
    3. 'radius' → logprob: -3.2405731678009033
    4. '#' → logprob: -3.3655731678009033
    5. 'surface' → logprob: -3.6155731678009033
    6. 'r' → logprob: -3.9905731678009033
    7. 'distance' → logprob: -4.865572929382324
    8. '*' → logprob: -5.240572929382324
    9. '\' → logprob: -5.365572929382324
    10. ' )' → logprob: -5.615572929382324

Token 23: ' En' (ID: 2130)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.8409572839736938
    2. ' surface' → logprob: -1.3409572839736938
    3. ' if' → logprob: -2.0909571647644043
    4. 'surface' → logprob: -3.3409571647644043
    5. ' volume' → logprob: -3.7159571647644043
    6. 'area' → logprob: -3.7159571647644043
    7. ' radius' → logprob: -4.340957164764404
    8. 'if' → logprob: -4.715957164764404
    9. ' circumference' → logprob: -4.840957164764404
    10. ' distance' → logprob: -5.215957164764404

Token 24: ' vrai' (ID: 42682)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.3058294951915741
    2. ' math' → logprob: -3.0558295249938965
    3. ' fonction' → logprob: -3.1808295249938965
    4. 'def' → logprob: -4.0558295249938965
    5. '_' → logprob: -4.1808295249938965
    6. ' ' → logprob: -4.6808295249938965
    7. ' continu' → logprob: -4.8058295249938965
    8. 'fonction' → logprob: -4.8058295249938965
    9. ' python' → logprob: -5.0558295249938965
    10. ' fait' → logprob: -5.1808295249938965

Token 25: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10275878757238388
    2. 'radius' → logprob: -3.8527588844299316
    3. 'ray' → logprob: -3.9777588844299316
    4. ' rayon' → logprob: -4.102758884429932
    5. 'r' → logprob: -4.602758884429932
    6. ',' → logprob: -5.602758884429932
    7. ')' → logprob: -5.727758884429932
    8. ' )' → logprob: -5.977758884429932
    9. 's' → logprob: -6.102758884429932
    10. ' ,' → logprob: -6.102758884429932

Token 26: ''aurais' (ID: 149917)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004195575136691332
    2. ''' → logprob: -6.754195690155029
    3. 'a' → logprob: -6.879195690155029
    4. ''ai' → logprob: -7.879195690155029
    5. 'uste' → logprob: -8.004195213317871
    6. 's' → logprob: -8.754195213317871
    7. 'ust' → logprob: -8.879195213317871
    8. ''espère' → logprob: -8.879195213317871
    9. ''aime' → logprob: -9.254195213317871
    10. 'am' → logprob: -9.504195213317871

Token 27: ' pu' (ID: 2923)
  Prédit: ' aimé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aimé' → logprob: -1.3072758913040161
    2. ' préféré' → logprob: -1.4322758913040161
    3. ' voulu' → logprob: -1.9322758913040161
    4. ' ' → logprob: -2.9322757720947266
    5. 'f' → logprob: -3.3072757720947266
    6. 'pu' → logprob: -3.4322757720947266
    7. ' pu' → logprob: -3.6822757720947266
    8. 'a' → logprob: -3.6822757720947266
    9. ' bien' → logprob: -3.6822757720947266
    10. 'bien' → logprob: -4.432275772094727

Token 28: ' arr' (ID: 1724)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.0596882104873657
    2. ' juste' → logprob: -1.8096882104873657
    3. ' mettre' → logprob: -2.184688091278076
    4. ' faire' → logprob: -2.934688091278076
    5. ' utiliser' → logprob: -3.059688091278076
    6. 'contin' → logprob: -3.184688091278076
    7. 'mettre' → logprob: -3.184688091278076
    8. ' just' → logprob: -3.434688091278076
    9. ' calcul' → logprob: -4.059688091278076
    10. ' prendre' → logprob: -4.059688091278076

Token 29: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.0021253994200378656
    2. 'ondi' → logprob: -6.627125263214111
    3. 'on' → logprob: -7.252125263214111
    4. 'onder' → logprob: -9.87712574005127
    5. 'o' → logprob: -11.12712574005127
    6. 'od' → logprob: -12.00212574005127
    7. 'ondissement' → logprob: -12.62712574005127
    8. 'andir' → logprob: -13.50212574005127
    9. '\' → logprob: -13.62712574005127
    10. '

' → logprob: -13.75212574005127

Token 30: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0015385502483695745
    2. 'i' → logprob: -6.6265387535095215
    3. '#' → logprob: -9.126538276672363
    4. '```' → logprob: -10.126538276672363
    5. 'er' → logprob: -12.001538276672363
    6. '   ' → logprob: -12.001538276672363
    7. 'is' → logprob: -12.001538276672363
    8. '...' → logprob: -12.376538276672363
    9. '.ir' → logprob: -12.751538276672363
    10. 'r' → logprob: -13.376538276672363

Token 31: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4689186215400696
    2. '(r' → logprob: -1.2189185619354248
    3. '(ray' → logprob: -3.343918561935425
    4. '()' → logprob: -3.593918561935425
    5. '(math' → logprob: -5.843918800354004
    6. ',' → logprob: -6.218918800354004
    7. ' (' → logprob: -6.343918800354004
    8. ' ' → logprob: -6.593918800354004
    9. '```' → logprob: -6.718918800354004
    10. 'ray' → logprob: -6.718918800354004

Token 32: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.6614234447479248
    2. ' mais' → logprob: -0.7864234447479248
    3. ' math' → logprob: -4.286423683166504
    4. ' ' → logprob: -5.286423683166504
    5. ')' → logprob: -6.161423683166504
    6. 'but' → logprob: -6.911423683166504
    7. ',' → logprob: -7.286423683166504
    8. 'r' → logprob: -7.411423683166504
    9. '<|end|>' → logprob: -7.536423683166504
    10. ' rayon' → logprob: -7.911423683166504

Token 33: ' bon' (ID: 4846)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.416162371635437
    2. ' je' → logprob: -1.791162371635437
    3. ' au' → logprob: -2.0411624908447266
    4. ' on' → logprob: -2.1661624908447266
    5. ' ça' → logprob: -2.4161624908447266
    6. ' j' → logprob: -2.7911624908447266
    7. ' comme' → logprob: -3.0411624908447266
    8. ' ici' → logprob: -4.291162490844727
    9. ' la' → logprob: -4.541162490844727
    10. ' math' → logprob: -4.666162490844727

Token 34: '...
' (ID: 4908)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9899208545684814
    2. 'ray' → logprob: -1.2399208545684814
    3. ' rayon' → logprob: -2.3649208545684814
    4. '<|end|>' → logprob: -2.8649208545684814
    5. ' ' → logprob: -2.9899208545684814
    6. 'radius' → logprob: -3.4899208545684814
    7. 'r' → logprob: -3.7399208545684814
    8. ' ray' → logprob: -3.8649208545684814
    9. ',' → logprob: -3.8649208545684814
    10. ' )' → logprob: -4.364920616149902

Token 35: 'circ' (ID: 156415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4039762318134308
    2. ' surface' → logprob: -3.6539762020111084
    3. ' area' → logprob: -3.6539762020111084
    4. 'r' → logprob: -3.7789762020111084
    5. ' print' → logprob: -3.7789762020111084
    6. ' 
' → logprob: -4.0289764404296875
    7. ' rayon' → logprob: -4.0289764404296875
    8. 'distance' → logprob: -4.1539764404296875
    9. 'surface' → logprob: -4.1539764404296875
    10. ' result' → logprob: -4.2789764404296875

Token 36: ' =' (ID: 314)
  Prédit: 'ference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ference' → logprob: -0.9486160278320312
    2. 'er' → logprob: -1.4486160278320312
    3. 'um' → logprob: -1.4486160278320312
    4. '=' → logprob: -2.6986160278320312
    5. '_' → logprob: -4.198616027832031
    6. 'férence' → logprob: -4.323616027832031
    7. 'érence' → logprob: -4.573616027832031
    8. 'on' → logprob: -4.573616027832031
    9. '```' → logprob: -5.073616027832031
    10. 'u' → logprob: -5.823616027832031

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5767948627471924
    2. ' ' → logprob: -0.8267948627471924
    3. ' math' → logprob: -7.826794624328613
    4. 'math' → logprob: -7.951794624328613
    5. ' (' → logprob: -10.576794624328613
    6. '(' → logprob: -10.951794624328613
    7. 'ray' → logprob: -11.076794624328613
    8. 'round' → logprob: -11.576794624328613
    9. '0' → logprob: -12.451794624328613
    10. '1' → logprob: -12.576794624328613

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006733965128660202
    2. 'math' → logprob: -5.1317338943481445
    3. ' ' → logprob: -7.2567338943481445
    4. 'ray' → logprob: -10.631733894348145
    5. '(' → logprob: -10.881733894348145
    6. 'round' → logprob: -11.006733894348145
    7. ' math' → logprob: -11.256733894348145
    8. 'int' → logprob: -11.256733894348145
    9. 'float' → logprob: -13.006733894348145
    10. '(math' → logprob: -13.131733894348145

Token 39: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6329246163368225
    2. ' *' → logprob: -0.7579246163368225
    3. '*Math' → logprob: -8.757925033569336
    4. '*pi' → logprob: -9.382925033569336
    5. '<|end|>' → logprob: -10.007925033569336
    6. ' ' → logprob: -11.632925033569336
    7. '.' → logprob: -11.757925033569336
    8. '*object' → logprob: -11.882925033569336
    9. '**' → logprob: -12.132925033569336
    10. ' ' → logprob: -13.257925033569336

Token 40: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.009295931085944176
    2. ' ' → logprob: -4.88429594039917
    3. 'math' → logprob: -7.00929594039917
    4. 'r' → logprob: -8.884295463562012
    5. ' ' → logprob: -9.009295463562012
    6. 'ray' → logprob: -9.259295463562012
    7. ' ray' → logprob: -9.384295463562012
    8. ' pi' → logprob: -9.884295463562012
    9. 's' → logprob: -10.009295463562012
    10. 'pi' → logprob: -10.259295463562012

Token 41: '.pi' (ID: 55497)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08039364963769913
    2. '.pi' → logprob: -2.5803935527801514
    3. '.sqrt' → logprob: -6.5803937911987305
    4. ' .' → logprob: -10.20539379119873
    5. '.cos' → logprob: -10.45539379119873
    6. '.sin' → logprob: -10.58039379119873
    7. '.PI' → logprob: -11.58039379119873
    8. '.s' → logprob: -12.20539379119873
    9. '.atan' → logprob: -13.08039379119873
    10. '.circle' → logprob: -13.58039379119873

Token 42: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004427389707416296
    2. ' ' → logprob: -6.004427433013916
    3. '*' → logprob: -6.254427433013916
    4. '*r' → logprob: -11.629426956176758
    5. 'ray' → logprob: -11.629426956176758
    6. ' ray' → logprob: -13.504426956176758
    7. '<|end|>' → logprob: -13.504426956176758
    8. ' **' → logprob: -13.629426956176758
    9. ' *
' → logprob: -13.629426956176758
    10. ' rayon' → logprob: -13.754426956176758

Token 43: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.006058909930288792
    2. ' rayon' → logprob: -5.131058692932129
    3. ' ray' → logprob: -9.631058692932129
    4. 'radius' → logprob: -10.506058692932129
    5. 'r' → logprob: -10.881058692932129
    6. '-ray' → logprob: -12.131058692932129
    7. ' ' → logprob: -12.631058692932129
    8. ' ' → logprob: -13.256058692932129
    9. ' Rayon' → logprob: -13.506058692932129
    10. 'rad' → logprob: -13.756058692932129

Token 44: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08849658071994781
    2. '#' → logprob: -3.338496685028076
    3. ')' → logprob: -3.963496685028076
    4. '*' → logprob: -4.588496685028076
    5. '
' → logprob: -5.213496685028076
    6. '<|end|>' → logprob: -5.463496685028076
    7. '+' → logprob: -5.588496685028076
    8. '.' → logprob: -7.088496685028076
    9. ' print' → logprob: -7.088496685028076
    10. 'r' → logprob: -7.088496685028076

Token 45: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001254693343071267
    2. '#' → logprob: -9.625125885009766
    3. 'prin' → logprob: -10.750125885009766
    4. 'p' → logprob: -10.875125885009766
    5. 'pr' → logprob: -11.875125885009766
    6. ')' → logprob: -13.125125885009766
    7. '#print' → logprob: -13.125125885009766
    8. '```' → logprob: -13.125125885009766
    9. ' print' → logprob: -13.375125885009766
    10. 'c' → logprob: -14.250125885009766

Token 46: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.968934758333489e-05
    2. '("("' → logprob: -10.500069618225098
    3. '(c' → logprob: -10.500069618225098
    4. '('' → logprob: -11.750069618225098
    5. '()' → logprob: -13.375069618225098
    6. '(.' → logprob: -13.375069618225098
    7. '(

' → logprob: -14.375069618225098
    8. ' (' → logprob: -14.375069618225098
    9. '(`' → logprob: -14.875069618225098
    10. '(
' → logprob: -15.125069618225098

Token 47: 'irc' (ID: 18723)
  Prédit: 'irc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irc' → logprob: -0.39078158140182495
    2. 'i' → logprob: -1.1407816410064697
    3. ')' → logprob: -5.640781402587891
    4. 'circ' → logprob: -8.76578140258789
    5. 'ir' → logprob: -9.64078140258789
    6. 'ircle' → logprob: -10.26578140258789
    7. ')i' → logprob: -10.89078140258789
    8. ' i' → logprob: -11.39078140258789
    9. '}' → logprob: -11.89078140258789
    10. 'irr' → logprob: -12.14078140258789

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '`)' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.125001907348633
    6. '')' → logprob: -18.125001907348633
    7. ')
' → logprob: -18.125001907348633
    8. ')**' → logprob: -18.250001907348633
    9. '）' → logprob: -19.000001907348633
    10. ')))' → logprob: -19.625001907348633

Token 49: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' voilà' (ID: 77612)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6238723397254944
    2. '<|end|>' → logprob: -1.2488722801208496
    3. ' ' → logprob: -1.8738722801208496
    4. ' )' → logprob: -4.24887228012085
    5. '<|end|>' → logprob: -5.99887228012085
    6. '.' → logprob: -6.49887228012085
    7. '  ' → logprob: -7.24887228012085
    8. '```' → logprob: -7.49887228012085
    9. '#' → logprob: -7.62387228012085
    10. '\' → logprob: -7.74887228012085

Token 52: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07785247266292572
    2. '<|end|>' → logprob: -3.577852487564087
    3. '\n' → logprob: -3.702852487564087
    4. ' ' → logprob: -4.202852249145508
    5. ' )' → logprob: -5.202852249145508
    6. '```' → logprob: -7.827852249145508
    7. '\' → logprob: -8.577852249145508
    8. '<|end|>' → logprob: -8.577852249145508
    9. ' 
' → logprob: -8.827852249145508
    10. '  
' → logprob: -9.077852249145508

Token 54: ' donne' (ID: 30004)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' pér' (ID: 44932)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -1.0356956720352173
    2. ' pér' → logprob: -2.1606955528259277
    3. 'circ' → logprob: -2.1606955528259277
    4. ' rayon' → logprob: -2.4106955528259277
    5. 'c' → logprob: -2.5356955528259277
    6. ' cercle' → logprob: -3.0356955528259277
    7. ' ' → logprob: -3.5356955528259277
    8. 'per' → logprob: -3.6606955528259277
    9. ' circumference' → logprob: -3.7856955528259277
    10. ' résultat' → logprob: -3.9106955528259277

Token 57: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.005794051103293896
    2. 'm' → logprob: -5.255794048309326
    3. '#' → logprob: -8.130794525146484
    4. 'om' → logprob: -9.505794525146484
    5. '[' → logprob: -10.880794525146484
    6. 'ètre' → logprob: -11.255794525146484
    7. 'h' → logprob: -11.505794525146484
    8. '\' → logprob: -11.505794525146484
    9. '
' → logprob: -11.630794525146484
    10. '

' → logprob: -11.755794525146484

Token 58: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.0013633318012580276
    2. 'etre' → logprob: -7.251363277435303
    3. 'è' → logprob: -7.501363277435303
    4. 'e' → logprob: -10.126363754272461
    5. 'ète' → logprob: -10.626363754272461
    6. 'ètres' → logprob: -11.126363754272461
    7. 'tre' → logprob: -12.001363754272461
    8. 'être' → logprob: -12.251363754272461
    9. 'ère' → logprob: -12.626363754272461
    10. '#' → logprob: -12.876363754272461

Token 59: ' normalement' (ID: 164432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 22.81%
Précision adaptée (1ère position): 22.81%
Précision (top 10): 49.12%
================================================================================
