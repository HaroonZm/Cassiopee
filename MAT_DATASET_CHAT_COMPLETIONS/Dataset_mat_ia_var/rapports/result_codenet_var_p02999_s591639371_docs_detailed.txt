================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def compare_values():
    """
    Demande à l'utilisateur d'entrer deux entiers séparés par un espace,
    puis compare ces deux valeurs. Si le premier entier 'x' est inférieur
    au second entier 'a', affiche '0'. Sinon, affiche '10'.
    """
    # Demande une entrée à l'utilisateur et la convertit en deux entiers
    x, a = map(int, input("Entrez deux entiers séparés par un espace : ").split())

    # Si 'x' est strictement inférieur à 'a', affiche '0'
    if x < a:
        print("0")
    # Si 'x' est supérieur ou égal à 'a', affiche '10'
    elif x >= a:
        print("10")

# Appelle la fonction principale pour exécuter le programme
compare_values()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' compare' (ID: 12221)
  → Token d'amorce (pas de prédiction)

Token 2: '_values' (ID: 20393)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007137428503483534
    2. '_' → logprob: -5.132137298583984
    3. ' (' → logprob: -7.632137298583984
    4. '```' → logprob: -7.757137298583984
    5. '[' → logprob: -10.382137298583984
    6. '(token' → logprob: -10.632137298583984
    7. '<|end|>' → logprob: -10.632137298583984
    8. '("("' → logprob: -10.882137298583984
    9. '(_' → logprob: -11.007137298583984
    10. 's' → logprob: -11.257137298583984

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6715982556343079
    2. '\' → logprob: -1.296598196029663
    3. '\n' → logprob: -1.796598196029663
    4. '```' → logprob: -3.796598196029663
    5. '    
' → logprob: -4.671598434448242
    6. '    ' → logprob: -5.046598434448242
    7. ':' → logprob: -6.546598434448242
    8. 'newline' → logprob: -6.546598434448242
    9. '<|end|>' → logprob: -7.046598434448242
    10. '       ' → logprob: -7.171598434448242

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.153579831123352
    2. 'a' → logprob: -1.278579831123352
    3. ' ' → logprob: -2.1535797119140625
    4. 'return' → logprob: -2.5285797119140625
    5. '    ' → logprob: -2.6535797119140625
    6. 'x' → logprob: -3.2785797119140625
    7. '       ' → logprob: -3.9035797119140625
    8. 'pass' → logprob: -4.1535797119140625
    9. 'r' → logprob: -4.2785797119140625
    10. '\' → logprob: -5.0285797119140625

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5726707577705383
    2. 'Compare' → logprob: -1.0726706981658936
    3. 'Com' → logprob: -3.4476706981658936
    4. '   ' → logprob: -4.072670936584473
    5. ' Compare' → logprob: -4.197670936584473
    6. ' Com' → logprob: -5.197670936584473
    7. 'C' → logprob: -5.447670936584473
    8. 'Returns' → logprob: -5.697670936584473
    9. '""' → logprob: -5.822670936584473
    10. 'Compar' → logprob: -5.822670936584473

Token 7: ' Dem' (ID: 9458)
  Prédit: 'Compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Compare' → logprob: -0.32001566886901855
    2. 'Com' → logprob: -1.3200156688690186
    3. 'C' → logprob: -6.320015907287598
    4. 'Comp' → logprob: -6.695015907287598
    5. 'Returns' → logprob: -6.945015907287598
    6. 'Return' → logprob: -7.820015907287598
    7. '   ' → logprob: -7.945015907287598
    8. 'Check' → logprob: -7.945015907287598
    9. '"""' → logprob: -8.070015907287598
    10. 'Compar' → logprob: -8.070015907287598

Token 8: 'ande' (ID: 4102)
  Prédit: 'onstr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onstr' → logprob: -0.054149433970451355
    2. 'on' → logprob: -3.0541493892669678
    3. 'o' → logprob: -5.929149627685547
    4. '   ' → logprob: -7.054149627685547
    5. 'a' → logprob: -7.429149627685547
    6. 'and' → logprob: -7.679149627685547
    7. 'ands' → logprob: -8.429149627685547
    8. 'ons' → logprob: -8.554149627685547
    9. '```' → logprob: -8.554149627685547
    10. ' on' → logprob: -8.804149627685547

Token 9: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6440924406051636
    2. 's' → logprob: -1.3940924406051636
    3. ' ' → logprob: -1.8940924406051636
    4. ' des' → logprob: -4.019092559814453
    5. 'r' → logprob: -4.394092559814453
    6. ' s' → logprob: -4.894092559814453
    7. '```' → logprob: -5.269092559814453
    8. '_' → logprob: -5.394092559814453
    9. '  ' → logprob: -5.519092559814453
    10. ' à' → logprob: -5.769092559814453

Token 10: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01028943620622158
    2. ' l' → logprob: -4.760289669036865
    3. '   ' → logprob: -7.385289669036865
    4. 'la' → logprob: -8.135289192199707
    5. 'util' → logprob: -8.760289192199707
    6. 'val' → logprob: -9.385289192199707
    7. 'un' → logprob: -9.385289192199707
    8. 'user' → logprob: -9.510289192199707
    9. 'vous' → logprob: -10.010289192199707
    10. 'compar' → logprob: -10.010289192199707

Token 11: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.00876394473016262
    2. 'a' → logprob: -5.633763790130615
    3. 'util' → logprob: -6.258763790130615
    4. 'u' → logprob: -7.008763790130615
    5. ''util' → logprob: -7.383763790130615
    6. ' utilisateur' → logprob: -7.383763790130615
    7. '’utilisateur' → logprob: -7.633763790130615
    8. ''us' → logprob: -8.383764266967773
    9. ''' → logprob: -8.508764266967773
    10. ''user' → logprob: -9.633764266967773

Token 12: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07463069260120392
    2. '   ' → logprob: -3.5746307373046875
    3. ' d' → logprob: -4.0746307373046875
    4. ' ' → logprob: -4.5746307373046875
    5. '    ' → logprob: -5.4496307373046875
    6. ' un' → logprob: -6.1996307373046875
    7. ''' → logprob: -6.3246307373046875
    8. '```' → logprob: -6.6996307373046875
    9. 'de' → logprob: -6.8246307373046875
    10. ' la' → logprob: -7.3246307373046875

Token 13: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5663114190101624
    2. 'e' → logprob: -1.0663113594055176
    3. 'entr' → logprob: -3.4413113594055176
    4. 'é' → logprob: -4.316311359405518
    5. ''entrée' → logprob: -4.441311359405518
    6. ''ent' → logprob: -4.441311359405518
    7. ''é' → logprob: -5.191311359405518
    8. 'entrée' → logprob: -6.066311359405518
    9. 'a' → logprob: -6.191311359405518
    10. '```' → logprob: -6.691311359405518

Token 14: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.028574267402291298
    2. 'entrée' → logprob: -4.153574466705322
    3. 'ent' → logprob: -4.778574466705322
    4. 's' → logprob: -7.278574466705322
    5. 'enter' → logprob: -7.653574466705322
    6. 'une' → logprob: -7.778574466705322
    7. 'entre' → logprob: -7.903574466705322
    8. ' entrer' → logprob: -8.278573989868164
    9. '```' → logprob: -8.653573989868164
    10. 'un' → logprob: -8.778573989868164

Token 15: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.8590300139039755e-05
    2. 'e' → logprob: -11.250048637390137
    3. 'éer' → logprob: -11.250048637390137
    4. 'oyer' → logprob: -12.125048637390137
    5. 'é' → logprob: -12.500048637390137
    6. ''er' → logprob: -12.750048637390137
    7. '   ' → logprob: -12.875048637390137
    8. 'ée' → logprob: -13.000048637390137
    9. ' er' → logprob: -13.500048637390137
    10. 'yer' → logprob: -13.500048637390137

Token 16: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.512244462966919
    2. 'de' → logprob: -1.637244462966919
    3. ' des' → logprob: -1.887244462966919
    4. ' ' → logprob: -3.762244462966919
    5. ' un' → logprob: -4.38724422454834
    6. ' two' → logprob: -5.76224422454834
    7. ' la' → logprob: -5.88724422454834
    8. 's' → logprob: -6.13724422454834
    9. ' une' → logprob: -6.26224422454834
    10. ' de' → logprob: -6.51224422454834

Token 17: ' ent' (ID: 1121)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.5952173471450806
    2. 'val' → logprob: -1.0952173471450806
    3. ' ' → logprob: -2.720217227935791
    4. ' val' → logprob: -3.470217227935791
    5. ' chaînes' → logprob: -4.720217227935791
    6. ' nombres' → logprob: -5.720217227935791
    7. ' espaces' → logprob: -6.595217227935791
    8. '   ' → logprob: -7.095217227935791
    9. ' ent' → logprob: -7.345217227935791
    10. ' valeur' → logprob: -7.595217227935791

Token 18: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.16062967479228973
    2. 'i' → logprob: -1.9106296300888062
    3. 'ières' → logprob: -8.535629272460938
    4. '```' → logprob: -9.660629272460938
    5. 'ier' → logprob: -9.785629272460938
    6. 'ié' → logprob: -10.535629272460938
    7. '   ' → logprob: -11.160629272460938
    8. ' i' → logprob: -11.410629272460938
    9. 'ers' → logprob: -11.535629272460938
    10. '_i' → logprob: -12.285629272460938

Token 19: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0411820188164711
    2. ',' → logprob: -4.166182041168213
    3. ' et' → logprob: -5.041182041168213
    4. '.' → logprob: -5.791182041168213
    5. ' ' → logprob: -5.791182041168213
    6. '\n' → logprob: -5.791182041168213
    7. '    
' → logprob: -6.041182041168213
    8. 's' → logprob: -6.541182041168213
    9. '
' → logprob: -7.041182041168213
    10. '    ' → logprob: -7.041182041168213

Token 20: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0009442188893444836
    2. 'é' → logprob: -7.000944137573242
    3. 'es' → logprob: -11.250944137573242
    4. 'ès' → logprob: -11.875944137573242
    5. 'ées' → logprob: -12.375944137573242
    6. 's' → logprob: -13.000944137573242
    7. '```' → logprob: -13.125944137573242
    8. 'ément' → logprob: -14.125944137573242
    9. 'ÉS' → logprob: -14.125944137573242
    10. 'rés' → logprob: -14.375944137573242

Token 21: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.4857707619667053
    2. ' par' → logprob: -0.9857707619667053
    3. 'és' → logprob: -4.8607707023620605
    4. 'es' → logprob: -6.4857707023620605
    5. 's' → logprob: -7.7357707023620605
    6. '_par' → logprob: -7.8607707023620605
    7. '(par' → logprob: -7.9857707023620605
    8. '```' → logprob: -8.110771179199219
    9. ',' → logprob: -8.360771179199219
    10. ' ' → logprob: -8.485771179199219

Token 22: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.43145135045051575
    2. 'un' → logprob: -1.1814513206481934
    3. 'une' → logprob: -3.6814513206481934
    4. ''un' → logprob: -4.306451320648193
    5. ' une' → logprob: -6.181451320648193
    6. ' ' → logprob: -7.681451320648193
    7. ' des' → logprob: -7.806451320648193
    8. ' ' → logprob: -7.931451320648193
    9. ' espace' → logprob: -8.431451797485352
    10. ''une' → logprob: -8.681451797485352

Token 23: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.34476330876350403
    2. 'es' → logprob: -1.3447632789611816
    3. 'esp' → logprob: -3.7197632789611816
    4. ''espace' → logprob: -5.594763278961182
    5. 'e' → logprob: -7.219763278961182
    6. ' ' → logprob: -7.344763278961182
    7. 'space' → logprob: -7.844763278961182
    8. '   ' → logprob: -8.34476375579834
    9. '  ' → logprob: -8.59476375579834
    10. ' espaces' → logprob: -8.71976375579834

Token 24: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04276713728904724
    2. '\n' → logprob: -3.41776704788208
    3. '    
' → logprob: -5.16776704788208
    4. '\' → logprob: -7.41776704788208
    5. ' ' → logprob: -7.91776704788208
    6. '  
' → logprob: -8.042767524719238
    7. '   
' → logprob: -8.167767524719238
    8. ',' → logprob: -8.292767524719238
    9. '
' → logprob: -8.292767524719238
    10. ' 
' → logprob: -8.417767524719238

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019537372514605522
    2. ' puis' → logprob: -4.894537448883057
    3. ' et' → logprob: -5.269537448883057
    4. 'et' → logprob: -5.394537448883057
    5. '    ' → logprob: -7.394537448883057
    6. ',' → logprob: -8.269536972045898
    7. 'def' → logprob: -8.519536972045898
    8. 'p' → logprob: -8.644536972045898
    9. '    
' → logprob: -8.644536972045898
    10. 's' → logprob: -9.394536972045898

Token 26: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.16503140330314636
    2. '   ' → logprob: -2.9150314331054688
    3. 'p' → logprob: -3.0400314331054688
    4. ' et' → logprob: -3.4150314331054688
    5. 'et' → logprob: -4.540031433105469
    6. ' retourne' → logprob: -6.540031433105469
    7. 'ens' → logprob: -6.915031433105469
    8. ' compare' → logprob: -7.790031433105469
    9. ',' → logprob: -7.915031433105469
    10. ' p' → logprob: -8.040031433105469

Token 27: ' compare' (ID: 12221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7012614011764526
    2. ' compare' → logprob: -1.2012614011764526
    3. 'compare' → logprob: -1.7012614011764526
    4. ' les' → logprob: -4.451261520385742
    5. 'les' → logprob: -5.451261520385742
    6. 'com' → logprob: -6.826261520385742
    7. ' compares' → logprob: -7.201261520385742
    8. 'effect' → logprob: -7.326261520385742
    9. '  ' → logprob: -8.201261520385742
    10. ' ' → logprob: -8.326261520385742

Token 28: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09665481746196747
    2. ' leurs' → logprob: -2.7216548919677734
    3. ' leur' → logprob: -4.971654891967773
    4. ' ' → logprob: -5.096654891967773
    5. '_' → logprob: -5.471654891967773
    6. 's' → logprob: -5.846654891967773
    7. ' ' → logprob: -7.221654891967773
    8. ' et' → logprob: -7.221654891967773
    9. '-les' → logprob: -7.221654891967773
    10. ' l' → logprob: -7.346654891967773

Token 29: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.44398272037506104
    2. ' valeurs' → logprob: -1.568982720375061
    3. ' ' → logprob: -2.4439826011657715
    4. 'de' → logprob: -3.5689826011657715
    5. ' ' → logprob: -4.1939826011657715
    6. ' derniers' → logprob: -4.3189826011657715
    7. ' val' → logprob: -6.3189826011657715
    8. 'val' → logprob: -6.6939826011657715
    9. ' nombres' → logprob: -7.0689826011657715
    10. ' two' → logprob: -7.3189826011657715

Token 30: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3617636263370514
    2. ' ent' → logprob: -1.611763596534729
    3. ' nombres' → logprob: -2.3617637157440186
    4. 'ent' → logprob: -5.9867634773254395
    5. ' val' → logprob: -6.3617634773254395
    6. ' integers' → logprob: -6.3617634773254395
    7. 'val' → logprob: -6.8617634773254395
    8. ' values' → logprob: -7.6117634773254395
    9. 's' → logprob: -8.236763954162598
    10. ' ' → logprob: -8.236763954162598

Token 31: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044583664275705814
    2. '    
' → logprob: -7.004458427429199
    3. '
' → logprob: -7.129458427429199
    4. '.' → logprob: -7.379458427429199
    5. '\n' → logprob: -7.754458427429199
    6. ',' → logprob: -7.879458427429199
    7. ':' → logprob: -8.3794584274292
    8. ' ' → logprob: -8.3794584274292
    9. '\' → logprob: -8.7544584274292
    10. '    ' → logprob: -8.8794584274292

Token 32: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025564655661582947
    2. '\n' → logprob: -4.025564670562744
    3. '```' → logprob: -5.900564670562744
    4. '    
' → logprob: -6.525564670562744
    5. '
' → logprob: -6.900564670562744
    6. '\' → logprob: -6.900564670562744
    7. '   
' → logprob: -8.275564193725586
    8. '  
' → logprob: -8.525564193725586
    9. ' ' → logprob: -9.150564193725586
    10. ' 
' → logprob: -9.400564193725586

Token 33: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5701549649238586
    2. ' la' → logprob: -1.5701549053192139
    3. ' l' → logprob: -2.695154905319214
    4. ' ' → logprob: -3.820154905319214
    5. ' a' → logprob: -4.195155143737793
    6. ' le' → logprob: -4.695155143737793
    7. ' valeur' → logprob: -4.695155143737793
    8. ' values' → logprob: -4.945155143737793
    9. ' valeurs' → logprob: -4.945155143737793
    10. ' une' → logprob: -5.070155143737793

Token 34: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.3183581829071045
    2. ' second' → logprob: -2.3183581829071045
    3. 'prem' → logprob: -2.9433581829071045
    4. 's' → logprob: -3.3183581829071045
    5. ' first' → logprob: -3.4433581829071045
    6. ' ' → logprob: -4.193358421325684
    7. 'de' → logprob: -5.068358421325684
    8. ' deuxième' → logprob: -5.068358421325684
    9. ' premi' → logprob: -5.818358421325684
    10. 'second' → logprob: -5.818358421325684

Token 35: ' entier' (ID: 80473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8701797127723694
    2. ' ' → logprob: -1.7451796531677246
    3. ' >' → logprob: -2.1201796531677246
    4. ' espace' → logprob: -2.4951796531677246
    5. 'space' → logprob: -3.7451796531677246
    6. '   ' → logprob: -3.9951796531677246
    7. ' >=' → logprob: -4.120179653167725
    8. '>' → logprob: -4.120179653167725
    9. ' est' → logprob: -4.245179653167725
    10. ' _' → logprob: -4.495179653167725

Token 36: ' '' (ID: 461)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08134272694587708
    2. ' ' → logprob: -3.2063426971435547
    3. 's' → logprob: -3.8313426971435547
    4. 'est' → logprob: -4.706342697143555
    5. ' >' → logprob: -6.831342697143555
    6. '_' → logprob: -6.831342697143555
    7. ' is' → logprob: -6.956342697143555
    8. '```' → logprob: -7.206342697143555
    9. ' ' → logprob: -7.456342697143555
    10. '>' → logprob: -7.581342697143555

Token 37: 'x' (ID: 87)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.09464506804943085
    2. 'est' → logprob: -2.4696450233459473
    3. '>' → logprob: -5.969645023345947
    4. ' >' → logprob: -6.594645023345947
    5. ' <' → logprob: -7.219645023345947
    6. ' ' → logprob: -7.969645023345947
    7. 's' → logprob: -8.594645500183105
    8. '<' → logprob: -8.594645500183105
    9. ''est' → logprob: -9.344645500183105
    10. '   ' → logprob: -9.844645500183105

Token 38: ''' (ID: 6)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.1343216747045517
    2. ''' → logprob: -3.134321689605713
    3. ' est' → logprob: -3.259321689605713
    4. ' >' → logprob: -3.759321689605713
    5. '>'' → logprob: -5.009321689605713
    6. ' <' → logprob: -5.134321689605713
    7. '>' → logprob: -5.509321689605713
    8. 'est' → logprob: -7.259321689605713
    9. ' '>' → logprob: -7.509321689605713
    10. '<' → logprob: -7.884321689605713

Token 39: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9203574061393738
    2. ' >' → logprob: -1.2953574657440186
    3. ' ' → logprob: -1.4203574657440186
    4. '>' → logprob: -3.4203574657440186
    5. 's' → logprob: -4.6703572273254395
    6. ' <' → logprob: -4.6703572273254395
    7. 'est' → logprob: -5.0453572273254395
    8. '_' → logprob: -5.4203572273254395
    9. ' ' → logprob: -6.1703572273254395
    10. ' ```' → logprob: -6.1703572273254395

Token 40: ' inférieur' (ID: 191498)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -1.045731782913208
    2. ' inférieur' → logprob: -1.170731782913208
    3. ' plus' → logprob: -1.795731782913208
    4. ' inf' → logprob: -3.295731782913208
    5. ' strict' → logprob: -3.420731782913208
    6. 'sup' → logprob: -3.670731782913208
    7. 'inf' → logprob: -4.045731544494629
    8. 'plus' → logprob: -4.170731544494629
    9. 'strict' → logprob: -4.545731544494629
    10. ' sup' → logprob: -4.920731544494629

Token 41: '
' (ID: 198)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.372894823551178
    2. ' à' → logprob: -1.8728947639465332
    3. ' ' → logprob: -2.122894763946533
    4. 'au' → logprob: -4.372894763946533
    5. '  ' → logprob: -4.497894763946533
    6. '_' → logprob: -5.122894763946533
    7. 'à' → logprob: -6.372894763946533
    8. ' ou' → logprob: -6.497894763946533
    9. 's' → logprob: -6.622894763946533
    10. ',' → logprob: -6.997894763946533

Token 42: '   ' (ID: 271)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09246044605970383
    2. 'à' → logprob: -3.2174603939056396
    3. ' ou' → logprob: -4.092460632324219
    4. ' au' → logprob: -4.342460632324219
    5. 'au' → logprob: -4.717460632324219
    6. ' ' → logprob: -5.592460632324219
    7. ' or' → logprob: -6.342460632324219
    8. '  ' → logprob: -6.717460632324219
    9. '   ' → logprob: -6.717460632324219
    10. ' to' → logprob: -7.717460632324219

Token 43: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1674925684928894
    2. 'à' → logprob: -2.292492628097534
    3. ' au' → logprob: -3.792492628097534
    4. 'au' (adapté à ' au') → logprob: -4.042492389678955
    5. ' ' → logprob: -4.917492389678955
    6. ' ou' → logprob: -5.792492389678955
    7. 'strict' → logprob: -7.292492389678955
    8. 'ou' → logprob: -7.542492389678955
    9. ' strict' → logprob: -7.542492389678955
    10. ''à' → logprob: -8.292492866516113

Token 44: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.5392814874649048
    2. 'second' → logprob: -1.0392814874649048
    3. 'de' → logprob: -3.0392813682556152
    4. ' deuxième' → logprob: -4.289281368255615
    5. 'se' → logprob: -6.914281368255615
    6. ' ' → logprob: -8.664281845092773
    7. ' seconde' → logprob: -9.414281845092773
    8. '```' → logprob: -9.414281845092773
    9. '_second' → logprob: -10.289281845092773
    10. 's' → logprob: -10.289281845092773

Token 45: ' entier' (ID: 80473)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4005419909954071
    2. ' ,' → logprob: -1.4005420207977295
    3. ' ' → logprob: -3.9005420207977295
    4. ''' → logprob: -4.40054178237915
    5. '   ' → logprob: -4.52554178237915
    6. '_' → logprob: -4.65054178237915
    7. 's' → logprob: -5.27554178237915
    8. ' '' → logprob: -5.65054178237915
    9. ' espace' → logprob: -5.77554178237915
    10. ' ' → logprob: -6.02554178237915

Token 46: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5608097314834595
    2. '',' → logprob: -1.9358097314834595
    3. ''' → logprob: -2.18580961227417
    4. ''y' → logprob: -2.43580961227417
    5. ' ',' → logprob: -3.18580961227417
    6. ',' → logprob: -4.31080961227417
    7. ' y' → logprob: -5.31080961227417
    8. ''à' → logprob: -5.81080961227417
    9. ' ',',' → logprob: -5.93580961227417
    10. '",' → logprob: -6.06080961227417

Token 47: 'a' (ID: 64)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06995588541030884
    2. ' y' → logprob: -2.694955825805664
    3. ' ' → logprob: -11.444955825805664
    4. ''y' → logprob: -12.569955825805664
    5. ''' → logprob: -13.319955825805664
    6. 'x' → logprob: -13.694955825805664
    7. ' ' → logprob: -14.194955825805664
    8. ' '' → logprob: -14.819955825805664
    9. '	y' → logprob: -15.194955825805664
    10. '  ' → logprob: -15.694955825805664

Token 48: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.40856409072875977
    2. ',' → logprob: -2.0335640907287598
    3. ' ',' → logprob: -2.1585640907287598
    4. ''' → logprob: -2.7835640907287598
    5. ' '' → logprob: -5.03356409072876
    6. '':' → logprob: -5.15856409072876
    7. 'u' → logprob: -5.53356409072876
    8. ','' → logprob: -5.65856409072876
    9. ':',' → logprob: -5.90856409072876
    10. ' ,' → logprob: -7.65856409072876

Token 49: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1816440373659134
    2. '    ' → logprob: -2.8066439628601074
    3. ' return' → logprob: -2.8066439628601074
    4. ' ' → logprob: -4.556643962860107
    5. ' ' → logprob: -4.556643962860107
    6. ' retourne' → logprob: -4.681643962860107
    7. '  ' → logprob: -6.181643962860107
    8. '  ' → logprob: -6.181643962860107
    9. ' :' → logprob: -6.431643962860107
    10. '       ' → logprob: -6.681643962860107

Token 50: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6044192314147949
    2. ' "' → logprob: -0.8544192314147949
    3. ' ' → logprob: -4.604419231414795
    4. ' un' → logprob: -5.229419231414795
    5. ''' → logprob: -5.854419231414795
    6. ' '' → logprob: -6.604419231414795
    7. ' ' → logprob: -6.854419231414795
    8. 's' → logprob: -7.104419231414795
    9. '   ' → logprob: -7.229419231414795
    10. ':' → logprob: -7.854419231414795

Token 51: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08050529658794403
    2. ' x' → logprob: -2.83050537109375
    3. '"x' → logprob: -4.70550537109375
    4. '"' → logprob: -6.20550537109375
    5. ''x' → logprob: -6.83050537109375
    6. ' inférieur' → logprob: -7.20550537109375
    7. 'que' → logprob: -7.33050537109375
    8. 'inf' → logprob: -7.33050537109375
    9. 'True' → logprob: -8.08050537109375
    10. ' "' → logprob: -8.20550537109375

Token 52: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.032948222011327744
    2. '\n' → logprob: -4.032948017120361
    3. '"' → logprob: -5.407948017120361
    4. '0' → logprob: -5.782948017120361
    5. ''.' → logprob: -6.407948017120361
    6. '',' → logprob: -6.782948017120361
    7. '1' → logprob: -7.532948017120361
    8. ''
' → logprob: -7.657948017120361
    9. '')' → logprob: -7.657948017120361
    10. '.' → logprob: -8.03294849395752

Token 53: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010099800303578377
    2. '```' → logprob: -5.6350998878479
    3. '\n' → logprob: -5.8850998878479
    4. '
' → logprob: -6.7600998878479
    5. '    
' → logprob: -6.7600998878479
    6. '"""' → logprob: -7.5100998878479
    7. '   
' → logprob: -8.760099411010742
    8. '\' → logprob: -9.135099411010742
    9. '"' → logprob: -9.260099411010742
    10. '  
' → logprob: -9.885099411010742

Token 54: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09659594297409058
    2. ':' → logprob: -2.4715960025787354
    3. ',' → logprob: -5.596595764160156
    4. '   ' → logprob: -7.221595764160156
    5. ' :' → logprob: -7.471595764160156
    6. ' ' → logprob: -7.721595764160156
    7. '```' → logprob: -7.721595764160156
    8. '  ' → logprob: -8.346595764160156
    9. 'print' → logprob: -8.596595764160156
    10. '    ' → logprob: -8.846595764160156

Token 55: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2691420614719391
    2. ' print' → logprob: -2.2691421508789062
    3. ' affiche' → logprob: -2.3941421508789062
    4. ' ' → logprob: -4.269142150878906
    5. 'print' → logprob: -4.394142150878906
    6. 'aff' → logprob: -5.269142150878906
    7. ' afficher' → logprob: -6.269142150878906
    8. ' return' → logprob: -6.394142150878906
    9. '   ' → logprob: -6.519142150878906
    10. '    ' → logprob: -7.019142150878906

Token 56: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05548299849033356
    2. ' '' → logprob: -3.305483102798462
    3. ' ' → logprob: -4.680482864379883
    4. ' ' → logprob: -5.430482864379883
    5. '"' → logprob: -6.305482864379883
    6. '`' → logprob: -7.430482864379883
    7. 'space' → logprob: -8.055482864379883
    8. ' a' → logprob: -9.180482864379883
    9. ' :' → logprob: -9.430482864379883
    10. ' "' → logprob: -9.430482864379883

Token 57: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052195326425135136
    2. 'a' → logprob: -6.130219459533691
    3. ''' → logprob: -6.755219459533691
    4. 'x' → logprob: -6.880219459533691
    5. ' ' → logprob: -7.755219459533691
    6. '0' → logprob: -9.005219459533691
    7. '-' → logprob: -9.380219459533691
    8. '2' → logprob: -10.255219459533691
    9. ' x' → logprob: -10.630219459533691
    10. ' '' → logprob: -10.880219459533691

Token 58: ''.
' (ID: 49980)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12176404148340225
    2. ')' → logprob: -2.4967639446258545
    3. '"""' → logprob: -4.621764183044434
    4. '   ' → logprob: -4.996764183044434
    5. ''' → logprob: -5.121764183044434
    6. '")' → logprob: -5.496764183044434
    7. '```' → logprob: -5.871764183044434
    8. 'def' → logprob: -7.371764183044434
    9. ':' → logprob: -7.746764183044434
    10. '\n' → logprob: -7.746764183044434

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006492965389043093
    2. '"""' → logprob: -5.381493091583252
    3. '```' → logprob: -6.881493091583252
    4. '"' → logprob: -8.381492614746094
    5. '    
' → logprob: -8.881492614746094
    6. '
' → logprob: -8.881492614746094
    7. '"""
' → logprob: -9.256492614746094
    8. '\n' → logprob: -9.506492614746094
    9. '""' → logprob: -10.131492614746094
    10. ')' → logprob: -10.506492614746094

Token 60: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016754860058426857
    2. '
' → logprob: -4.641754627227783
    3. '```' → logprob: -5.641754627227783
    4. '    
' → logprob: -6.641754627227783
    5. '"""' → logprob: -6.766754627227783
    6. '\n' → logprob: -7.391754627227783
    7. '   
' → logprob: -9.766755104064941
    8. ')' → logprob: -10.016755104064941
    9. '""' → logprob: -10.141755104064941
    10. '"""
' (adapté à ' """
') → logprob: -10.266755104064941

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014084757305681705
    2. '\n' → logprob: -5.014084815979004
    3. '
' → logprob: -5.389084815979004
    4. '    
' → logprob: -7.014084815979004
    5. '```' → logprob: -7.264084815979004
    6. '\' → logprob: -8.014084815979004
    7. 'x' → logprob: -8.014084815979004
    8. 'n' → logprob: -8.389084815979004
    9. 'a' → logprob: -9.764084815979004
    10. '       ' → logprob: -10.014084815979004

Token 62: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40354228019714355
    2. '   ' → logprob: -1.1535422801971436
    3. 'n' → logprob: -4.778542518615723
    4. 'try' → logprob: -6.528542518615723
    5. 'user' → logprob: -6.653542518615723
    6. '\n' → logprob: -6.653542518615723
    7. '    
' → logprob: -7.028542518615723
    8. '
' → logprob: -7.153542518615723
    9. 'return' → logprob: -7.528542518615723
    10. 'a' → logprob: -7.653542518615723

Token 63: ' Dem' (ID: 9458)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0707521438598633
    2. ' x' → logprob: -1.4457521438598633
    3. ' user' → logprob: -1.5707521438598633
    4. 'user' → logprob: -2.4457521438598633
    5. ' input' → logprob: -3.1957521438598633
    6. 'input' → logprob: -3.4457521438598633
    7. ' values' → logprob: -4.320752143859863
    8. 'values' → logprob: -4.445752143859863
    9. 'value' → logprob: -4.820752143859863
    10. '   ' → logprob: -5.195752143859863

Token 64: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.002278007799759507
    2. '   ' → logprob: -6.627277851104736
    3. 'a' → logprob: -8.002278327941895
    4. 'and' → logprob: -8.627278327941895
    5. 'ade' → logprob: -9.127278327941895
    6. 'andez' → logprob: -9.377278327941895
    7. 'ander' → logprob: -9.502278327941895
    8. 'an' → logprob: -10.127278327941895
    9. ' ' → logprob: -10.252278327941895
    10. 'e' → logprob: -10.377278327941895

Token 65: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2571738362312317
    2. ' à' → logprob: -1.632173776626587
    3. '  ' → logprob: -4.882174015045166
    4. ' ' → logprob: -5.507174015045166
    5. ' =' → logprob: -5.507174015045166
    6. '    ' → logprob: -5.507174015045166
    7. 'à' → logprob: -5.882174015045166
    8. ' a' → logprob: -6.757174015045166
    9. ' d' → logprob: -6.757174015045166
    10. ' de' → logprob: -6.882174015045166

Token 66: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18518002331256866
    2. '   ' → logprob: -2.8101799488067627
    3. 'entrée' → logprob: -3.0601799488067627
    4. 'val' → logprob: -3.5601799488067627
    5. ' valeur' → logprob: -4.810180187225342
    6. ' entrée' → logprob: -5.060180187225342
    7. '  ' → logprob: -5.685180187225342
    8. 's' → logprob: -6.185180187225342
    9. ' `' → logprob: -6.310180187225342
    10. 'x' → logprob: -6.435180187225342

Token 67: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13419795036315918
    2. 'user' → logprob: -2.884197950363159
    3. 'x' → logprob: -3.759197950363159
    4. ' =' → logprob: -4.134198188781738
    5. ' user' → logprob: -4.759198188781738
    6. ' x' → logprob: -5.009198188781738
    7. ' ' → logprob: -5.509198188781738
    8. '  ' → logprob: -6.384198188781738
    9. '    ' → logprob: -6.759198188781738
    10. ' )' → logprob: -6.884198188781738

Token 68: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03961797058582306
    2. ' l' → logprob: -3.2896180152893066
    3. 'util' → logprob: -6.789618015289307
    4. '	l' → logprob: -8.789617538452148
    5. 'user' → logprob: -8.914617538452148
    6. ' ' → logprob: -9.664617538452148
    7. ' utilisateur' → logprob: -10.414617538452148
    8. ''utilisateur' → logprob: -11.039617538452148
    9. 'input' → logprob: -11.539617538452148
    10. '   ' → logprob: -11.914617538452148

Token 69: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.26913437247276306
    2. 'util' → logprob: -1.5191344022750854
    3. ' utilisateur' → logprob: -4.644134521484375
    4. '’utilisateur' → logprob: -5.019134521484375
    5. '_util' → logprob: -8.394134521484375
    6. '   ' → logprob: -8.519134521484375
    7. ''util' → logprob: -8.769134521484375
    8. 'user' → logprob: -9.144134521484375
    9. 'a' → logprob: -10.394134521484375
    10. 'u' → logprob: -10.519134521484375

Token 70: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07509004324674606
    2. 'x' → logprob: -2.825089931488037
    3. ' x' → logprob: -4.700089931488037
    4. 'input' → logprob: -6.325089931488037
    5. 'n' → logprob: -7.700089931488037
    6. 'user' → logprob: -7.700089931488037
    7. ' input' → logprob: -7.700089931488037
    8. ' user' → logprob: -8.825090408325195
    9. 'val' → logprob: -9.325090408325195
    10. '    
' → logprob: -9.450090408325195

Token 71: ' la' (ID: 557)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' values' → logprob: -1.8542160987854004
    2. 'values' → logprob: -1.9792160987854004
    3. 'val' → logprob: -2.2292160987854004
    4. 'x' → logprob: -2.3542160987854004
    5. ' x' → logprob: -2.6042160987854004
    6. 'value' → logprob: -2.6042160987854004
    7. ' input' → logprob: -2.8542160987854004
    8. 'input' → logprob: -2.9792160987854004
    9. ' entr' → logprob: -3.3542160987854004
    10. ' val' → logprob: -3.3542160987854004

Token 72: ' convert' (ID: 8452)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4035477638244629
    2. 's' → logprob: -1.528547763824463
    3. 'strip' → logprob: -3.528547763824463
    4. 'try' → logprob: -4.153547763824463
    5. 'continue' → logprob: -4.528547763824463
    6. ' =' → logprob: -4.778547763824463
    7. '=' → logprob: -5.028547763824463
    8. 'input' → logprob: -5.653547763824463
    9. 'replace' → logprob: -5.778547763824463
    10. 'prompt' → logprob: -5.778547763824463

Token 73: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.001434516510926187
    2. 'i' → logprob: -7.251434326171875
    3. ' it' → logprob: -7.501434326171875
    4. 'ie' → logprob: -9.751434326171875
    5. 'is' → logprob: -10.126434326171875
    6. '   ' → logprob: -10.626434326171875
    7. 'e' → logprob: -11.501434326171875
    8. 'ît' → logprob: -12.126434326171875
    9. '```' → logprob: -12.251434326171875
    10. ' ' → logprob: -12.501434326171875

Token 74: ' en' (ID: 469)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7313551306724548
    2. 'x' → logprob: -1.6063551902770996
    3. '   ' → logprob: -1.6063551902770996
    4. ' en' → logprob: -3.4813551902770996
    5. ' ' → logprob: -3.7313551902770996
    6. ' user' → logprob: -3.9813551902770996
    7. 'user' → logprob: -4.7313551902771
    8. ' =' → logprob: -4.9813551902771
    9. ' input' → logprob: -5.4813551902771
    10. 'input' → logprob: -5.7313551902771

Token 75: ' deux' (ID: 10301)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.547095775604248
    2. ' valeurs' → logprob: -1.922095775604248
    3. 'x' → logprob: -2.047095775604248
    4. 'val' → logprob: -3.922095775604248
    5. ' deux' → logprob: -4.297095775604248
    6. ' une' → logprob: -4.422095775604248
    7. 'ent' → logprob: -4.422095775604248
    8. ' int' → logprob: -4.672095775604248
    9. ' input' → logprob: -4.672095775604248
    10. ' ent' → logprob: -4.797095775604248

Token 76: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.17448127269744873
    2. 'ent' → logprob: -2.2994813919067383
    3. ' nombres' → logprob: -3.6744813919067383
    4. ' integers' → logprob: -4.549481391906738
    5. ' valeurs' → logprob: -4.674481391906738
    6. ' variables' → logprob: -4.924481391906738
    7. 'val' → logprob: -6.424481391906738
    8. ' ' → logprob: -6.424481391906738
    9. ' int' → logprob: -6.924481391906738
    10. ' entier' → logprob: -6.924481391906738

Token 77: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.017310595139861107
    2. 'i' → logprob: -4.142310619354248
    3. 'ières' → logprob: -7.142310619354248
    4. 'ier' → logprob: -8.89231014251709
    5. 't' → logprob: -9.51731014251709
    6. 'e' → logprob: -9.51731014251709
    7. 'ière' → logprob: -10.14231014251709
    8. 'ers' → logprob: -10.26731014251709
    9. ' i' → logprob: -10.26731014251709
    10. '   ' → logprob: -10.64231014251709

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030741192400455475
    2. '    
' → logprob: -3.7807412147521973
    3. 'x' → logprob: -5.405741214752197
    4. '
' → logprob: -7.405741214752197
    5. 's' → logprob: -7.655741214752197
    6. 'n' → logprob: -7.780741214752197
    7. '   
' → logprob: -8.155740737915039
    8. '\n' → logprob: -8.280740737915039
    9. ' x' → logprob: -8.405740737915039
    10. '  
' → logprob: -8.655740737915039

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02521250955760479
    2. '    
' → logprob: -3.900212526321411
    3. 'x' → logprob: -6.150212287902832
    4. 'n' → logprob: -7.150212287902832
    5. '   
' → logprob: -7.775212287902832
    6. '\n' → logprob: -8.275212287902832
    7. '
' → logprob: -8.525212287902832
    8. '  
' → logprob: -8.650212287902832
    9. ' 
' → logprob: -8.650212287902832
    10. 'user' → logprob: -8.775212287902832

Token 80: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3099523186683655
    2. ' x' → logprob: -1.4349522590637207
    3. '   ' → logprob: -3.9349522590637207
    4. ' input' → logprob: -6.559952259063721
    5. ' values' → logprob: -6.809952259063721
    6. ' user' → logprob: -6.934952259063721
    7. ' inputs' → logprob: -6.934952259063721
    8. 'inputs' → logprob: -7.059952259063721
    9. 'user' → logprob: -7.184952259063721
    10. 'input' → logprob: -7.309952259063721

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017267030489165336
    2. ' ,' → logprob: -9.25017261505127
    3. ',a' → logprob: -9.87517261505127
    4. ',x' → logprob: -11.37517261505127
    5. 's' → logprob: -12.37517261505127
    6. ',s' → logprob: -12.87517261505127
    7. ',input' → logprob: -14.12517261505127
    8. ',v' → logprob: -14.25017261505127
    9. ',user' → logprob: -14.25017261505127
    10. '1' → logprob: -14.37517261505127

Token 82: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22623829543590546
    2. 'a' → logprob: -1.6012382507324219
    3. '<|end|>' → logprob: -7.351238250732422
    4. ' ' → logprob: -8.726238250732422
    5. ' =' → logprob: -11.851238250732422
    6. ' ' → logprob: -12.976238250732422
    7. '<|end|>' → logprob: -13.101238250732422
    8. 's' → logprob: -13.226238250732422
    9. '	a' → logprob: -13.351238250732422
    10. 'x' → logprob: -13.851238250732422

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889264822006226
    2. '=' → logprob: -2.578892707824707
    3. '=input' → logprob: -13.203892707824707
    4. '=int' → logprob: -14.078892707824707
    5. ' ' → logprob: -16.82889175415039
    6. ',' → logprob: -17.07889175415039
    7. ' ' → logprob: -17.70389175415039
    8. ')' → logprob: -17.95389175415039
    9. 's' → logprob: -17.95389175415039
    10. 'input' → logprob: -18.07889175415039

Token 84: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005424073897302151
    2. 'map' → logprob: -5.2554240226745605
    3. ' input' → logprob: -8.755424499511719
    4. ' ' → logprob: -11.630424499511719
    5. ' ' → logprob: -11.755424499511719
    6. 'input' → logprob: -11.880424499511719
    7. ' [' → logprob: -13.005424499511719
    8. ' list' → logprob: -13.130424499511719
    9. '	map' → logprob: -13.130424499511719
    10. '[' → logprob: -14.130424499511719

Token 85: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10058889538049698
    2. '(' → logprob: -2.350588798522949
    3. '(input' → logprob: -8.10058879852295
    4. '(
' → logprob: -10.10058879852295
    5. '(str' → logprob: -10.60058879852295
    6. 'int' → logprob: -12.10058879852295
    7. ' (' → logprob: -12.72558879852295
    8. '<int' → logprob: -13.85058879852295
    9. '[int' → logprob: -13.97558879852295
    10. '(list' → logprob: -14.35058879852295

Token 86: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2519012689590454
    2. 'input' → logprob: -2.126901149749756
    3. '(' → logprob: -2.626901149749756
    4. ')' → logprob: -4.501901149749756
    5. ' input' → logprob: -5.001901149749756
    6. ',' → logprob: -5.376901149749756
    7. ',input' → logprob: -5.376901149749756
    8. ' (' → logprob: -6.001901149749756
    9. ' ,' → logprob: -7.251901149749756
    10. '   ' → logprob: -8.126901626586914

Token 87: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1427103877067566
    2. ' input' → logprob: -2.0177104473114014
    3. ')' → logprob: -11.76771068572998
    4. '   ' → logprob: -11.89271068572998
    5. '(input' → logprob: -12.01771068572998
    6. ' ' → logprob: -12.39271068572998
    7. '	input' → logprob: -12.51771068572998
    8. '```' → logprob: -12.76771068572998
    9. '=input' → logprob: -13.64271068572998
    10. '<input' → logprob: -14.01771068572998

Token 88: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3940090537071228
    2. '('' → logprob: -1.6440091133117676
    3. '()' → logprob: -2.7690091133117676
    4. '("' → logprob: -3.7690091133117676
    5. '())' → logprob: -4.394009113311768
    6. ')' → logprob: -4.519009113311768
    7. '("("' → logprob: -4.519009113311768
    8. '("")' → logprob: -6.019009113311768
    9. '(""))' → logprob: -6.644009113311768
    10. '(input' → logprob: -6.644009113311768

Token 89: 'Ent' (ID: 3263)
  Prédit: 'Ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.24169185757637024
    2. '"' → logprob: -2.491691827774048
    3. 'Veuillez' → logprob: -2.866691827774048
    4. 'ent' → logprob: -3.491691827774048
    5. '")' → logprob: -4.366692066192627
    6. '"))' → logprob: -4.866692066192627
    7. ' Ent' → logprob: -4.866692066192627
    8. 'Entr' → logprob: -5.866692066192627
    9. '("' → logprob: -5.991692066192627
    10. '">' → logprob: -6.366692066192627

Token 90: 'rez' (ID: 13676)
  Prédit: 'rez'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rez' → logprob: -0.07851361483335495
    2. 're' → logprob: -3.2035136222839355
    3. 'er' → logprob: -4.7035136222839355
    4. 'r' → logprob: -4.8285136222839355
    5. 'rée' → logprob: -4.8285136222839355
    6. 'ré' → logprob: -6.0785136222839355
    7. 'ier' → logprob: -6.2035136222839355
    8. 'rer' → logprob: -6.4535136222839355
    9. 'iers' → logprob: -7.0785136222839355
    10. ' rez' → logprob: -7.5785136222839355

Token 91: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.006774465087801218
    2. ' two' → logprob: -5.756774425506592
    3. ' ' → logprob: -6.506774425506592
    4. ' les' → logprob: -6.881774425506592
    5. 'de' → logprob: -8.38177490234375
    6. '<|end|>' → logprob: -8.38177490234375
    7. ' )' → logprob: -8.75677490234375
    8. ' des' → logprob: -9.38177490234375
    9. 'two' → logprob: -10.25677490234375
    10. ' vos' → logprob: -10.25677490234375

Token 92: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.031118134036660194
    2. ' integers' → logprob: -4.031117916107178
    3. ' nombres' → logprob: -5.281117916107178
    4. ' ' → logprob: -5.531117916107178
    5. 'ent' → logprob: -6.406117916107178
    6. '<|end|>' → logprob: -6.781117916107178
    7. ' valeurs' → logprob: -8.156118392944336
    8. ' espaces' → logprob: -8.656118392944336
    9. ' entier' → logprob: -9.281118392944336
    10. ' )' → logprob: -9.281118392944336

Token 93: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -3.3213025744771585e-05
    2. 'i' → logprob: -10.875033378601074
    3. 'ers' → logprob: -12.500033378601074
    4. '```' → logprob: -12.750033378601074
    5. 'ier' → logprob: -13.125033378601074
    6. '   ' → logprob: -13.375033378601074
    7. 'ières' → logprob: -14.000033378601074
    8. ' i' → logprob: -14.625033378601074
    9. ' ' → logprob: -14.625033378601074
    10. 'ti' → logprob: -15.375033378601074

Token 94: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.008965058252215385
    2. 's' → logprob: -5.133965015411377
    3. ':' → logprob: -6.883965015411377
    4. 'sé' → logprob: -7.508965015411377
    5. ' :' → logprob: -7.883965015411377
    6. ' separados' → logprob: -8.383965492248535
    7. ' s' → logprob: -8.508965492248535
    8. ' separated' → logprob: -8.508965492248535
    9. ' ' → logprob: -9.508965492248535
    10. ' separ' → logprob: -9.758965492248535

Token 95: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.050696488469839096
    2. 'é' → logprob: -3.05069637298584
    3. ' par' → logprob: -6.42569637298584
    4. 'par' → logprob: -7.80069637298584
    5. 'es' → logprob: -10.30069637298584
    6. 'e' → logprob: -11.67569637298584
    7. 's' → logprob: -12.30069637298584
    8. 'Par' → logprob: -12.30069637298584
    9. '_par' → logprob: -12.42569637298584
    10. 'ès' → logprob: -12.67569637298584

Token 96: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.0895298570394516
    2. 'par' → logprob: -2.4645297527313232
    3. '<|end|>' → logprob: -7.964529991149902
    4. ' ' → logprob: -8.714529991149902
    5. '_par' → logprob: -10.839529991149902
    6. ')' → logprob: -11.089529991149902
    7. '```' → logprob: -12.089529991149902
    8. '"' → logprob: -12.089529991149902
    9. '  ' → logprob: -12.214529991149902
    10. ' )' → logprob: -12.464529991149902

Token 97: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.030140599235892296
    2. 'un' → logprob: -3.7801406383514404
    3. ' ' → logprob: -6.030140399932861
    4. ' espace' → logprob: -6.155140399932861
    5. ''un' → logprob: -6.655140399932861
    6. ''espace' → logprob: -8.15514087677002
    7. 'space' → logprob: -8.78014087677002
    8. ' espaces' → logprob: -8.78014087677002
    9. '<|end|>' → logprob: -9.65514087677002
    10. '```' → logprob: -9.90514087677002

Token 98: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.25956034660339355
    2. 'es' → logprob: -1.6345603466033936
    3. ''espace' → logprob: -4.259560585021973
    4. '_' → logprob: -4.759560585021973
    5. ' ' → logprob: -5.509560585021973
    6. 'space' → logprob: -5.884560585021973
    7. 'esp' → logprob: -6.759560585021973
    8. ' espaces' → logprob: -6.884560585021973
    9. '’espace' → logprob: -6.884560585021973
    10. '_es' → logprob: -7.759560585021973

Token 99: ' :' (ID: 712)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.26935523748397827
    2. ':' → logprob: -1.519355297088623
    3. '').' → logprob: -4.519355297088623
    4. ' :' → logprob: -6.269355297088623
    5. ').' → logprob: -6.519355297088623
    6. '):' → logprob: -6.644355297088623
    7. ')' → logprob: -7.394355297088623
    8. '")' → logprob: -7.519355297088623
    9. ' ").' → logprob: -8.519354820251465
    10. '"' → logprob: -9.019354820251465

Token 100: ' ").' (ID: 49234)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.0006342819542624056
    2. '")' → logprob: -8.62563419342041
    3. ' ").' → logprob: -8.62563419342041
    4. ').' → logprob: -8.87563419342041
    5. '').' → logprob: -9.75063419342041
    6. '"' → logprob: -10.00063419342041
    7. '"))' → logprob: -10.75063419342041
    8. ')' → logprob: -12.50063419342041
    9. ')").' → logprob: -13.37563419342041
    10. '")).' → logprob: -13.50063419342041

Token 101: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026300468016415834
    2. 'strip' → logprob: -8.250263214111328
    3. ' split' → logprob: -13.500263214111328
    4. 'rstrip' → logprob: -15.375263214111328
    5. 'spl' → logprob: -17.250263214111328
    6. '(split' → logprob: -19.250263214111328
    7. '.split' → logprob: -20.000263214111328
    8. 's' → logprob: -21.375263214111328
    9. '_split' → logprob: -21.875263214111328
    10. 'str' → logprob: -22.250263214111328

Token 102: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013678462244570255
    2. '()))' → logprob: -4.763678550720215
    3. '()' → logprob: -5.513678550720215
    4. ')' → logprob: -7.138678550720215
    5. '(' → logprob: -9.388678550720215
    6. '))' → logprob: -9.638678550720215
    7. '('' → logprob: -9.763678550720215
    8. '("' → logprob: -11.263678550720215
    9. ' ())' → logprob: -12.763678550720215
    10. '())
' → logprob: -13.763678550720215

Token 103: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2623205780982971
    2. '   ' → logprob: -1.5123205184936523
    3. '\n' → logprob: -5.262320518493652
    4. '    
' → logprob: -5.887320518493652
    5. '```' → logprob: -6.762320518493652
    6. '  
' → logprob: -7.012320518493652
    7. 'if' → logprob: -9.012320518493652
    8. ' if' → logprob: -9.887320518493652
    9. ' 
' → logprob: -10.137320518493652
    10. '   
' → logprob: -10.387320518493652

Token 104: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10422677546739578
    2. '   ' → logprob: -2.35422682762146
    3. ' if' → logprob: -5.604226589202881
    4. '
' → logprob: -8.229227066040039
    5. '    
' → logprob: -9.979227066040039
    6. '```' → logprob: -11.479227066040039
    7. ' 
' → logprob: -13.729227066040039
    8. '  
' → logprob: -13.854227066040039
    9. '\n' → logprob: -13.854227066040039
    10. 'i' → logprob: -13.979227066040039

Token 105: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1602269560098648
    2. ' if' → logprob: -1.9102269411087036
    3. '   ' → logprob: -14.160226821899414
    4. '```' → logprob: -14.160226821899414
    5. 'Si' → logprob: -14.910226821899414
    6. '
' → logprob: -15.160226821899414
    7. '#' → logprob: -15.535226821899414
    8. 'si' → logprob: -15.910226821899414
    9. 'If' → logprob: -16.160226821899414
    10. ' si' → logprob: -16.660226821899414

Token 106: ' '' (ID: 461)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0006329743773676455
    2. 'x' → logprob: -7.3756327629089355
    3. ' ' → logprob: -12.125633239746094
    4. ' ' → logprob: -14.875633239746094
    5. ' (' → logprob: -15.625633239746094
    6. '	x' → logprob: -15.875633239746094
    7. ' ‌' → logprob: -16.375633239746094
    8. ' a' → logprob: -16.750633239746094
    9. '   ' → logprob: -17.375633239746094
    10. '    ' → logprob: -17.750633239746094

Token 107: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04858771339058876
    2. ' x' → logprob: -3.0485877990722656
    3. ' ' → logprob: -16.298587799072266
    4. '   ' → logprob: -16.423587799072266
    5. '	x' → logprob: -16.798587799072266
    6. '(x' → logprob: -16.923587799072266
    7. '  ' → logprob: -18.423587799072266
    8. ''x' → logprob: -19.423587799072266
    9. '"x' → logprob: -19.548587799072266
    10. ')x' → logprob: -19.923587799072266

Token 108: ''' (ID: 6)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0006458373973146081
    2. '<' → logprob: -7.625645637512207
    3. ' ' → logprob: -8.875645637512207
    4. '<|end|>' → logprob: -11.375645637512207
    5. ' ' → logprob: -12.875645637512207
    6. '  ' → logprob: -13.750645637512207
    7. '   ' → logprob: -13.875645637512207
    8. ' <",' → logprob: -14.000645637512207
    9. '    ' → logprob: -15.750645637512207
    10. ' <
' → logprob: -15.750645637512207

Token 109: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01417702715843916
    2. '<' → logprob: -4.264176845550537
    3. ' ' → logprob: -11.389177322387695
    4. '<|end|>' → logprob: -14.139177322387695
    5. '   ' → logprob: -14.639177322387695
    6. ' ' → logprob: -15.264177322387695
    7. ' <",' → logprob: -15.889177322387695
    8. '  ' → logprob: -16.014177322387695
    9. '<int' → logprob: -16.014177322387695
    10. ' is' → logprob: -16.389177322387695

Token 110: ' strict' (ID: 12035)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8240340948104858
    2. '<' → logprob: -1.3240340948104858
    3. ' inférieur' → logprob: -1.4490340948104858
    4. '<|end|>' → logprob: -3.1990342140197754
    5. ' less' → logprob: -4.949034214019775
    6. 'x' → logprob: -5.949034214019775
    7. ' x' → logprob: -6.199034214019775
    8. ' ' → logprob: -6.199034214019775
    9. ' moins' → logprob: -6.449034214019775
    10. 'inf' → logprob: -6.824034214019775

Token 111: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.004010491538792849
    2. '<' → logprob: -5.7540106773376465
    3. ' inférieur' → logprob: -7.8790106773376465
    4. '   ' → logprob: -9.004010200500488
    5. 'e' → logprob: -9.379010200500488
    6. ' <' → logprob: -9.379010200500488
    7. 'ément' → logprob: -9.879010200500488
    8. 'lement' → logprob: -10.879010200500488
    9. ' ' → logprob: -11.004010200500488
    10. 'emen' → logprob: -11.254010200500488

Token 112: ' inférieur' (ID: 191498)
  Prédit: ' inférieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.04077456146478653
    2. '<' → logprob: -4.040774345397949
    3. 'inf' → logprob: -4.040774345397949
    4. 'infer' → logprob: -5.790774345397949
    5. ' <' → logprob: -7.040774345397949
    6. ' inf' → logprob: -7.165774345397949
    7. 'moins' → logprob: -10.79077434539795
    8. ' infer' → logprob: -10.91577434539795
    9. ' moindre' → logprob: -11.04077434539795
    10. 'in' → logprob: -12.04077434539795

Token 113: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07863957434892654
    2. '   ' → logprob: -3.578639507293701
    3. ' a' → logprob: -3.703639507293701
    4. ' ' → logprob: -5.078639507293701
    5. '  ' → logprob: -5.078639507293701
    6. 'à' → logprob: -5.328639507293701
    7. '    ' → logprob: -6.453639507293701
    8. '<|end|>' → logprob: -6.578639507293701
    9. 'a' → logprob: -6.703639507293701
    10. ' to' → logprob: -7.828639507293701

Token 114: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31358444690704346
    2. ' a' → logprob: -1.3135844469070435
    3. ''a' → logprob: -8.063584327697754
    4. ' ' → logprob: -12.813584327697754
    5. ' '' → logprob: -12.813584327697754
    6. '	a' → logprob: -13.688584327697754
    7. ' ' → logprob: -14.063584327697754
    8. ''' → logprob: -15.563584327697754
    9. '  ' → logprob: -15.938584327697754
    10. '"a' → logprob: -16.06358528137207

Token 115: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003628581063821912
    2. ' a' → logprob: -5.628628730773926
    3. ''a' → logprob: -10.628628730773926
    4. ' ' → logprob: -13.253628730773926
    5. '   ' → logprob: -13.628628730773926
    6. ''' → logprob: -14.753628730773926
    7. '	a' → logprob: -14.878628730773926
    8. '  ' → logprob: -15.253628730773926
    9. ' ' → logprob: -16.37862777709961
    10. 'а' → logprob: -16.75362777709961

Token 116: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03398464247584343
    2. '   ' → logprob: -3.908984661102295
    3. ':
' → logprob: -5.158984661102295
    4. '):' → logprob: -5.283984661102295
    5. ',' → logprob: -6.533984661102295
    6. ' :' → logprob: -7.033984661102295
    7. ')' → logprob: -9.408984184265137
    8. '):
' → logprob: -9.658984184265137
    9. '':' → logprob: -11.158984184265137
    10. ' :
' → logprob: -11.533984184265137

Token 117: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04985520616173744
    2. '       ' → logprob: -3.1748552322387695
    3. '    ' → logprob: -6.2998552322387695
    4. '
' → logprob: -6.4248552322387695
    5. '\n' → logprob: -6.4248552322387695
    6. '    
' → logprob: -7.2998552322387695
    7. ' 
' → logprob: -8.29985523223877
    8. ' print' → logprob: -8.67485523223877
    9. ' return' → logprob: -8.79985523223877
    10. '<|end|>' → logprob: -8.92485523223877

Token 118: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24989886581897736
    2. '"' → logprob: -1.749898910522461
    3. '   ' → logprob: -4.374898910522461
    4. '('' → logprob: -4.624898910522461
    5. ' '' → logprob: -4.624898910522461
    6. ' "' → logprob: -4.874898910522461
    7. '0' → logprob: -5.749898910522461
    8. '("' → logprob: -5.999898910522461
    9. ' ' → logprob: -7.124898910522461
    10. '(' → logprob: -7.499898910522461

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.652451464906335e-05
    2. ''' → logprob: -11.750016212463379
    3. '"' → logprob: -12.250016212463379
    4. ' ' → logprob: -12.625016212463379
    5. '   ' → logprob: -14.500016212463379
    6. 'print' → logprob: -16.750017166137695
    7. '`' → logprob: -18.625017166137695
    8. '```' → logprob: -19.750017166137695
    9. '')' → logprob: -20.125017166137695
    10. ')' → logprob: -20.500017166137695

Token 120: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012860676506534219
    2. '
' → logprob: -7.501286029815674
    3. 'print' → logprob: -8.001286506652832
    4. ')' → logprob: -9.251286506652832
    5. 'else' → logprob: -9.251286506652832
    6. '')' → logprob: -10.251286506652832
    7. '       ' → logprob: -10.751286506652832
    8. '    
' → logprob: -10.751286506652832
    9. '```' → logprob: -11.126286506652832
    10. '")' → logprob: -11.126286506652832

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012805953156203032
    2. '
' → logprob: -6.876280784606934
    3. '    
' → logprob: -8.626280784606934
    4. ':' → logprob: -10.376280784606934
    5. '```' → logprob: -10.876280784606934
    6. '       ' → logprob: -12.376280784606934
    7. ',' → logprob: -12.376280784606934
    8. 'if' → logprob: -13.501280784606934
    9. '\n' → logprob: -13.751280784606934
    10. ':
' → logprob: -13.876280784606934

Token 122: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012156049720942974
    2. '
' → logprob: -4.512156009674072
    3. 'if' (adapté à ' if') → logprob: -7.387156009674072
    4. '    
' → logprob: -8.26215648651123
    5. ' if' → logprob: -8.63715648651123
    6. '```' → logprob: -10.38715648651123
    7. '\n' → logprob: -12.01215648651123
    8. '       ' → logprob: -12.76215648651123
    9. '  
' → logprob: -12.88715648651123
    10. '   
' → logprob: -13.13715648651123

Token 123: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0004908377304673195
    2. 'x' → logprob: -7.625490665435791
    3. ' ' → logprob: -13.12549114227295
    4. ' ' → logprob: -14.50049114227295
    5. '	x' → logprob: -15.12549114227295
    6. ' ‌' → logprob: -19.125490188598633
    7. ' (' → logprob: -19.375490188598633
    8. '(x' → logprob: -19.375490188598633
    9. ' ' → logprob: -19.375490188598633
    10. '    ' → logprob: -20.250490188598633

Token 124: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0006367852329276502
    2. '<' → logprob: -7.500636577606201
    3. '<|end|>' → logprob: -9.75063705444336
    4. ' ' → logprob: -10.87563705444336
    5. ' <",' → logprob: -12.87563705444336
    6. ' <
' → logprob: -14.00063705444336
    7. ' ' → logprob: -14.25063705444336
    8. ' \<' → logprob: -14.62563705444336
    9. ')' → logprob: -14.62563705444336
    10. '  ' → logprob: -14.62563705444336

Token 125: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.038044244050979614
    2. 'a' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.288043975830078
    4. ' ' → logprob: -13.913043975830078
    5. '	a' → logprob: -15.538043975830078
    6. '_a' → logprob: -17.413043975830078
    7. '<|end|>' → logprob: -17.913043975830078
    8. '  ' → logprob: -18.288043975830078
    9. ' а' → logprob: -18.413043975830078
    10. '>a' → logprob: -18.913043975830078

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014190888963639736
    2. ':
' → logprob: -4.264190673828125
    3. '   ' → logprob: -11.514190673828125
    4. '):' → logprob: -11.764190673828125
    5. '       ' → logprob: -12.264190673828125
    6. ' :' → logprob: -12.889190673828125
    7. ':
' → logprob: -14.014190673828125
    8. ')' → logprob: -14.514190673828125
    9. '):
' → logprob: -14.514190673828125
    10. ' :
' → logprob: -15.389190673828125

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1309494972229004
    2. ':' → logprob: -2.1309494972229004
    3. '   ' → logprob: -5.7559494972229
    4. 'print' → logprob: -8.005949020385742
    5. ':
' → logprob: -8.255949020385742
    6. ' print' → logprob: -9.380949020385742
    7. ' :' → logprob: -9.505949020385742
    8. '
' → logprob: -10.880949020385742
    9. '0' → logprob: -11.380949020385742
    10. '):' → logprob: -11.505949020385742

Token 128: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1825430691242218
    2. ' print' → logprob: -2.4325430393218994
    3. '       ' → logprob: -2.5575430393218994
    4. '   ' → logprob: -7.3075432777404785
    5. '0' → logprob: -7.4325432777404785
    6. 'return' → logprob: -8.55754280090332
    7. ' return' → logprob: -9.55754280090332
    8. '           ' → logprob: -12.55754280090332
    9. '
' → logprob: -12.80754280090332
    10. 'pr' → logprob: -12.93254280090332

Token 129: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36900484561920166
    2. '('' → logprob: -1.8690048456192017
    3. '("' → logprob: -1.8690048456192017
    4. ' (' → logprob: -10.99400520324707
    5. '(
' → logprob: -13.11900520324707
    6. '0' → logprob: -13.36900520324707
    7. ' ("' → logprob: -13.61900520324707
    8. '"' → logprob: -14.74400520324707
    9. '   ' → logprob: -14.99400520324707
    10. '()' → logprob: -14.99400520324707

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '00' → logprob: -23.625
    4. '```' → logprob: -23.625
    5. '   ' → logprob: -24.0
    6. '"' → logprob: -24.5
    7. '۰' → logprob: -24.5
    8. '012' → logprob: -24.5
    9. '０' → logprob: -25.25
    10. '000' → logprob: -25.875

Token 131: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02976912073791027
    2. '")
' → logprob: -3.5297691822052
    3. ')' → logprob: -11.779768943786621
    4. '   ' → logprob: -12.029768943786621
    5. '")
' → logprob: -13.154768943786621
    6. '"' → logprob: -13.654768943786621
    7. ')")' → logprob: -14.279768943786621
    8. ')
' → logprob: -14.654768943786621
    9. '")

' → logprob: -14.779768943786621
    10. ' ")' → logprob: -16.279769897460938

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003439938183873892
    2. 'else' → logprob: -5.753439903259277
    3. ' else' → logprob: -8.253439903259277
    4. '    
' → logprob: -14.253439903259277
    5. '
' → logprob: -14.753439903259277
    6. '	else' → logprob: -14.878439903259277
    7. '```' → logprob: -15.003439903259277
    8. 'elif' → logprob: -16.253440856933594
    9. '  ' → logprob: -17.753440856933594
    10. '   ' → logprob: -18.003440856933594

Token 133: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12972868978977203
    2. 'else' → logprob: -2.1297287940979004
    3. ' else' → logprob: -5.8797287940979
    4. '	else' → logprob: -14.504728317260742
    5. 'elif' → logprob: -15.504728317260742
    6. '```' → logprob: -16.129728317260742
    7. '    
' → logprob: -16.254728317260742
    8. ' ' → logprob: -16.254728317260742
    9. '  ' → logprob: -17.004728317260742
    10. 'els' → logprob: -18.129728317260742

Token 134: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.428823858499527
    2. ' else' → logprob: -1.0538238286972046
    3. '   ' → logprob: -9.303823471069336
    4. 'elif' → logprob: -10.678823471069336
    5. ' elif' → logprob: -12.553823471069336
    6. ' ' → logprob: -13.678823471069336
    7. 'e' → logprob: -14.303823471069336
    8. ' sinon' → logprob: -14.428823471069336
    9. '	else' → logprob: -14.428823471069336
    10. 'elser' → logprob: -14.678823471069336

Token 135: ' '' (ID: 461)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01222871895879507
    2. 'x' → logprob: -4.887228488922119
    3. ' else' → logprob: -6.387228488922119
    4. '   ' → logprob: -6.887228488922119
    5. 'else' → logprob: -6.887228488922119
    6. ' ' → logprob: -7.762228488922119
    7. ' not' → logprob: -8.387228965759277
    8. '    ' → logprob: -9.762228965759277
    9. ' sinon' → logprob: -9.887228965759277
    10. ' au' → logprob: -10.637228965759277

Token 136: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14297008514404297
    2. ' x' → logprob: -2.017970085144043
    3. ' not' → logprob: -8.767970085144043
    4. 'not' → logprob: -9.642970085144043
    5. '   ' → logprob: -11.017970085144043
    6. 'else' → logprob: -11.142970085144043
    7. ' ' → logprob: -11.267970085144043
    8. 'a' → logprob: -11.267970085144043
    9. '	x' → logprob: -13.017970085144043
    10. ' a' → logprob: -13.330470085144043

Token 137: ''' (ID: 6)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.01611519046127796
    2. '>=' → logprob: -4.141115188598633
    3. ' >' → logprob: -10.016115188598633
    4. '>' → logprob: -11.641115188598633
    5. ' ' → logprob: -11.641115188598633
    6. ' ==' → logprob: -12.266115188598633
    7. 'else' → logprob: -12.391115188598633
    8. ' <' → logprob: -12.891115188598633
    9. '   ' → logprob: -13.266115188598633
    10. ' else' → logprob: -13.891115188598633

Token 138: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20223596692085266
    2. '>=' → logprob: -1.7022359371185303
    3. 'else' → logprob: -7.827236175537109
    4. '>' → logprob: -8.57723617553711
    5. ' >' → logprob: -9.20223617553711
    6. ' else' → logprob: -9.82723617553711
    7. '==' → logprob: -10.45223617553711
    8. ' ==' → logprob: -10.70223617553711
    9. ' ' → logprob: -11.82723617553711
    10. '   ' → logprob: -11.95223617553711

Token 139: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.372061550617218
    2. '>=' → logprob: -1.9970614910125732
    3. ' >=' → logprob: -3.1220614910125732
    4. 'sup' → logprob: -3.3720614910125732
    5. ' greater' → logprob: -3.7470614910125732
    6. 'greater' → logprob: -4.247061729431152
    7. ' not' → logprob: -4.372061729431152
    8. '>' → logprob: -4.622061729431152
    9. '   ' → logprob: -4.997061729431152
    10. ' ' → logprob: -5.247061729431152

Token 140: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.44532275199890137
    2. 'ou' → logprob: -1.1953227519989014
    3. ' or' → logprob: -3.3203227519989014
    4. '=' → logprob: -4.5703229904174805
    5. '   ' → logprob: -5.9453229904174805
    6. 'au' → logprob: -6.1953229904174805
    7. '  ' → logprob: -6.8203229904174805
    8. 'or' → logprob: -6.8203229904174805
    9. ' ' → logprob: -7.3203229904174805
    10. '<|end|>' → logprob: -7.5703229904174805

Token 141: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.35365280508995056
    2. ' égal' → logprob: -1.353652834892273
    3. '=' → logprob: -3.3536527156829834
    4. ' ég' → logprob: -5.8536529541015625
    5. 'é' → logprob: -7.3536529541015625
    6. 'ég' → logprob: -8.228652954101562
    7. 'égalité' → logprob: -8.603652954101562
    8. 'ou' → logprob: -8.978652954101562
    9. 'équ' → logprob: -9.228652954101562
    10. ' ' → logprob: -9.353652954101562

Token 142: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09906093776226044
    2. 'à' → logprob: -2.4740610122680664
    3. '   ' → logprob: -4.974061012268066
    4. ' ' → logprob: -6.474061012268066
    5. 'a' → logprob: -7.099061012268066
    6. ' a' → logprob: -7.974061012268066
    7. ''à' → logprob: -8.599061012268066
    8. '  ' → logprob: -8.974061012268066
    9. 'au' → logprob: -10.224061012268066
    10. ' to' → logprob: -10.599061012268066

Token 143: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3869444727897644
    2. 'a' → logprob: -1.1369445323944092
    3. ''a' → logprob: -9.886944770812988
    4. ' ' → logprob: -11.511944770812988
    5. '	a' → logprob: -12.261944770812988
    6. '   ' → logprob: -12.886944770812988
    7. '"a' → logprob: -13.511944770812988
    8. '>a' → logprob: -14.011944770812988
    9. '  ' → logprob: -14.261944770812988
    10. 'à' → logprob: -14.261944770812988

Token 144: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004919105558656156
    2. ' a' → logprob: -7.625492095947266
    3. ''a' → logprob: -12.500492095947266
    4. ''' → logprob: -16.125492095947266
    5. ' ' → logprob: -16.750492095947266
    6. '	a' → logprob: -17.500492095947266
    7. '   ' → logprob: -17.750492095947266
    8. '  ' → logprob: -18.625492095947266
    9. 'à' → logprob: -18.750492095947266
    10. ' ' → logprob: -18.750492095947266

Token 145: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15092700719833374
    2. ':
' → logprob: -2.2759270668029785
    3. '   ' → logprob: -3.4009270668029785
    4. '       ' → logprob: -6.0259270668029785
    5. '):
' → logprob: -7.6509270668029785
    6. ',' → logprob: -8.02592658996582
    7. ' :' → logprob: -8.27592658996582
    8. '"):
' → logprob: -8.27592658996582
    9. ' :
' → logprob: -9.15092658996582
    10. '):' → logprob: -9.77592658996582

Token 146: ' affiche' (ID: 127479)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012892624363303185
    2. '   ' → logprob: -9.500128746032715
    3. 'print' → logprob: -10.250128746032715
    4. ' print' → logprob: -11.500128746032715
    5. '           ' → logprob: -13.375128746032715
    6. '      ' → logprob: -13.625128746032715
    7. ':' → logprob: -13.625128746032715
    8. '<|end|>' → logprob: -13.875128746032715
    9. '```' → logprob: -13.875128746032715
    10. '
' → logprob: -14.500128746032715

Token 147: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.028449714183807373
    2. ' "' → logprob: -3.653449773788452
    3. '("' → logprob: -6.153449535369873
    4. '10' → logprob: -11.528450012207031
    5. '   ' → logprob: -11.903450012207031
    6. ' ' → logprob: -12.903450012207031
    7. ''' → logprob: -14.278450012207031
    8. '```' → logprob: -15.403450012207031
    9. ' ' → logprob: -15.778450012207031
    10. '    ' → logprob: -15.778450012207031

Token 148: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5760082006454468
    2. '"' → logprob: -0.8260082006454468
    3. ''' → logprob: -9.701007843017578
    4. ' ' → logprob: -12.826007843017578
    5. '"""' → logprob: -13.451007843017578
    6. '100' → logprob: -13.826007843017578
    7. '```' → logprob: -13.951007843017578
    8. '1' → logprob: -15.201007843017578
    9. ' "' → logprob: -15.326007843017578
    10. '")' → logprob: -15.576007843017578

Token 149: ''
' (ID: 2207)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009623158257454634
    2. '")
' → logprob: -7.000962257385254
    3. '   ' → logprob: -11.375962257385254
    4. '"' → logprob: -11.500962257385254
    5. '()' → logprob: -11.875962257385254
    6. '("' → logprob: -11.875962257385254
    7. '10' → logprob: -12.125962257385254
    8. '0' → logprob: -12.625962257385254
    9. ')' → logprob: -12.875962257385254
    10. ')")' → logprob: -12.875962257385254

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03519309312105179
    2. '       ' → logprob: -4.035192966461182
    3. 'else' → logprob: -4.160192966461182
    4. ' else' → logprob: -6.660192966461182
    5. ':' → logprob: -12.66019344329834
    6. '
' → logprob: -12.78519344329834
    7. '```' → logprob: -13.16019344329834
    8. '    
' → logprob: -13.28519344329834
    9. '	else' → logprob: -13.28519344329834
    10. ':
' → logprob: -14.91019344329834

Token 151: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08384810388088226
    2. 'else' → logprob: -2.583847999572754
    3. '       ' → logprob: -5.833847999572754
    4. ' else' → logprob: -6.208847999572754
    5. 'print' → logprob: -13.458847999572754
    6. 'elif' (adapté à ' elif') → logprob: -13.583847999572754
    7. '```' → logprob: -13.833847999572754
    8. '  ' → logprob: -13.833847999572754
    9. '	else' → logprob: -14.083847999572754
    10. '    ' → logprob: -14.583847999572754

Token 152: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04451926425099373
    2. ' True' → logprob: -3.4195191860198975
    3. 'x' → logprob: -4.669519424438477
    4. 'True' → logprob: -6.794519424438477
    5. ' ' → logprob: -8.669519424438477
    6. '10' → logprob: -9.294519424438477
    7. ' a' → logprob: -10.169519424438477
    8. 'a' → logprob: -12.044519424438477
    9. '   ' → logprob: -12.919519424438477
    10. '(True' → logprob: -13.169519424438477

Token 153: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1269606500864029
    2. '>=' → logprob: -2.1269607543945312
    3. ' ' → logprob: -10.751960754394531
    4. '>' → logprob: -12.876960754394531
    5. '   ' → logprob: -13.001960754394531
    6. '```' → logprob: -13.626960754394531
    7. ']>=' → logprob: -14.001960754394531
    8. ')>=' → logprob: -14.251960754394531
    9. ' >' → logprob: -14.501960754394531
    10. ')' → logprob: -14.501960754394531

Token 154: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0205497145652771
    2. 'a' → logprob: -3.895549774169922
    3. ' ' → logprob: -12.270549774169922
    4. '	a' → logprob: -13.645549774169922
    5. '10' → logprob: -14.270549774169922
    6. ' ' → logprob: -15.020549774169922
    7. '   ' → logprob: -15.145549774169922
    8. '  ' → logprob: -16.020549774169922
    9. ''a' → logprob: -16.145549774169922
    10. '>a' → logprob: -16.395549774169922

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045914790825918317
    2. ':
' → logprob: -7.75045919418335
    3. ' :' → logprob: -10.625458717346191
    4. '):' → logprob: -12.625458717346191
    5. '       ' → logprob: -14.750458717346191
    6. '   ' → logprob: -15.000458717346191
    7. ' :
' → logprob: -16.500459671020508
    8. '():' → logprob: -16.875459671020508
    9. ':**' → logprob: -17.125459671020508
    10. '):
' → logprob: -17.375459671020508

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4470721185207367
    2. ':' → logprob: -1.072072148323059
    3. ':
' → logprob: -4.0720720291137695
    4. ' :' → logprob: -7.6970720291137695
    5. '   ' → logprob: -7.8220720291137695
    6. '10' → logprob: -9.69707202911377
    7. '):' → logprob: -9.69707202911377
    8. '":' → logprob: -10.07207202911377
    9. ' :
' → logprob: -10.07207202911377
    10. '"' → logprob: -10.57207202911377

Token 157: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07949783653020859
    2. ' print' → logprob: -2.579497814178467
    3. '       ' → logprob: -7.454497814178467
    4. '   ' → logprob: -10.579498291015625
    5. '	print' → logprob: -13.579498291015625
    6. '    ' → logprob: -14.704498291015625
    7. '10' → logprob: -14.704498291015625
    8. '           ' → logprob: -15.079498291015625
    9. '.print' → logprob: -15.204498291015625
    10. '```' → logprob: -15.329498291015625

Token 158: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. '("""' → logprob: -16.625009536743164
    4. '('' → logprob: -17.000009536743164
    5. '"' → logprob: -17.750009536743164
    6. '("("' → logprob: -17.750009536743164
    7. '("")' → logprob: -18.125009536743164
    8. ' ("' → logprob: -18.250009536743164
    9. '(""' → logprob: -18.625009536743164
    10. '(
' → logprob: -18.750009536743164

Token 159: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12693293392658234
    2. '"' → logprob: -2.1269328594207764
    3. ''' → logprob: -12.876933097839355
    4. '")' → logprob: -13.876933097839355
    5. ' ' → logprob: -14.251933097839355
    6. '"""' → logprob: -15.126933097839355
    7. '   ' → logprob: -16.12693214416504
    8. ' "' → logprob: -16.12693214416504
    9. '```' → logprob: -16.75193214416504
    10. '""' → logprob: -16.75193214416504

Token 160: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.3902033970225602e-05
    2. ')' → logprob: -11.625014305114746
    3. '")
' → logprob: -12.875014305114746
    4. ')")' → logprob: -13.000014305114746
    5. '"' → logprob: -17.00001335144043
    6. '')' → logprob: -18.50001335144043
    7. '   ' → logprob: -19.00001335144043
    8. ' ")' → logprob: -19.12501335144043
    9. '”)' → logprob: -19.37501335144043
    10. '}")' → logprob: -19.37501335144043

Token 161: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' App' (ID: 2583)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.016520263627171516
    2. ' compare' → logprob: -5.0165205001831055
    3. '<|end|>' → logprob: -5.3915205001831055
    4. '(compare' → logprob: -6.3915205001831055
    5. 'if' → logprob: -6.5165205001831055
    6. '
' → logprob: -6.8915205001831055
    7. '#' → logprob: -8.016520500183105
    8. '_compare' → logprob: -8.641520500183105
    9. 'def' → logprob: -8.641520500183105
    10. '```' → logprob: -8.891520500183105

Token 163: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.03842712566256523
    2. 'eler' → logprob: -3.2884271144866943
    3. 'elle' → logprob: -8.288427352905273
    4. 'le' → logprob: -9.788427352905273
    5. 'e' → logprob: -10.663427352905273
    6. 'elé' → logprob: -10.913427352905273
    7. 'l' → logprob: -11.413427352905273
    8. 'ele' → logprob: -12.288427352905273
    9. '#' → logprob: -12.538427352905273
    10. 'er' → logprob: -13.163427352905273

Token 164: ' la' (ID: 557)
  Prédit: ' compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.007365953642874956
    2. 'compare' → logprob: -5.007366180419922
    3. '()' → logprob: -7.882366180419922
    4. '(compare' → logprob: -8.257366180419922
    5. '(' → logprob: -12.507366180419922
    6. ' ' → logprob: -12.632366180419922
    7. ' def' → logprob: -12.882366180419922
    8. '_compare' → logprob: -13.632366180419922
    9. ' ()' → logprob: -14.257366180419922
    10. ' ' → logprob: -14.257366180419922

Token 165: ' fonction' (ID: 17610)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.006737035233527422
    2. ' compare' → logprob: -5.006737232208252
    3. 'function' → logprob: -11.131736755371094
    4. 'fonction' → logprob: -12.756736755371094
    5. 'def' → logprob: -13.131736755371094
    6. '(compare' → logprob: -13.881736755371094
    7. ' function' → logprob: -14.381736755371094
    8. '_compare' → logprob: -15.381736755371094
    9. 'compar' → logprob: -15.881736755371094
    10. '.compare' → logprob: -16.381736755371094

Token 166: ' principale' (ID: 68926)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.0059097157791256905
    2. '
' → logprob: -5.5059099197387695
    3. ' compare' → logprob: -6.6309099197387695
    4. '()
' → logprob: -7.8809099197387695
    5. '(compare' → logprob: -9.13090991973877
    6. 'def' → logprob: -12.13090991973877
    7. '()' → logprob: -12.63090991973877
    8. '

' → logprob: -12.63090991973877
    9. '
' → logprob: -12.75590991973877
    10. '.compare' → logprob: -12.88090991973877

Token 167: ' pour' (ID: 1930)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.1610843688249588
    2. '
' → logprob: -1.9110844135284424
    3. '(compare' → logprob: -7.661084175109863
    4. '

' → logprob: -8.536084175109863
    5. '
' → logprob: -9.161084175109863
    6. ' compare' → logprob: -9.786084175109863
    7. '()
' → logprob: -11.411084175109863
    8. '  
' → logprob: -11.911084175109863
    9. ' 
' → logprob: -12.536084175109863
    10. '.compare' → logprob: -12.786084175109863

Token 168: ' ex' (ID: 513)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.1420368105173111
    2. ' compare' → logprob: -2.1420369148254395
    3. 'ex' → logprob: -5.3920369148254395
    4. ' comparer' → logprob: -5.5170369148254395
    5. 'execute' → logprob: -6.3920369148254395
    6. ' lancer' → logprob: -6.6420369148254395
    7. 'execut' → logprob: -6.7670369148254395
    8. 'com' → logprob: -7.3920369148254395
    9. ' ex' → logprob: -7.7670369148254395
    10. ' execut' → logprob: -8.267036437988281

Token 169: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.02898498810827732
    2. 'ecut' → logprob: -4.153985023498535
    3. 'ec' → logprob: -5.028985023498535
    4. 'éc' → logprob: -5.153985023498535
    5. 'e' → logprob: -8.778985023498535
    6. 'cute' → logprob: -9.153985023498535
    7. 'ecu' → logprob: -9.278985023498535
    8. 'compare' → logprob: -9.403985023498535
    9. 'é' → logprob: -10.028985023498535
    10. 'ecution' → logprob: -10.528985023498535

Token 170: 'uter' (ID: 23469)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.40589943528175354
    2. 'uter' → logprob: -1.7808994054794312
    3. 'cut' → logprob: -2.1558995246887207
    4. 'é' → logprob: -3.7808995246887207
    5. 'ecut' → logprob: -3.9058995246887207
    6. '```' → logprob: -6.280899524688721
    7. 'érer' → logprob: -6.405899524688721
    8. '#' → logprob: -7.655899524688721
    9. 'c' → logprob: -8.030899047851562
    10. 'éter' → logprob: -8.280899047851562

Token 171: ' le' (ID: 505)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.03815475106239319
    2. ' compare' → logprob: -3.2881548404693604
    3. '(compare' → logprob: -9.288154602050781
    4. '()' → logprob: -11.413154602050781
    5. 'def' → logprob: -12.663154602050781
    6. '_compare' → logprob: -13.163154602050781
    7. ' la' → logprob: -14.038154602050781
    8. '```' → logprob: -14.413154602050781
    9. 'la' → logprob: -14.538154602050781
    10. 'compar' → logprob: -14.538154602050781

Token 172: ' programme' (ID: 18190)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.619996190071106
    2. 'compare' → logprob: -1.119996190071106
    3. 'programme' → logprob: -2.6199960708618164
    4. 'compar' → logprob: -3.3699960708618164
    5. ' code' → logprob: -4.119996070861816
    6. ' compare' → logprob: -5.244996070861816
    7. 'script' → logprob: -5.619996070861816
    8. ' programme' → logprob: -6.494996070861816
    9. ' script' → logprob: -7.619996070861816
    10. 'program' → logprob: -7.744996070861816

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10225139558315277
    2. 'compare' → logprob: -2.3522512912750244
    3. '(compare' → logprob: -6.8522515296936035
    4. '

' → logprob: -7.3522515296936035
    5. '
' → logprob: -8.227251052856445
    6. '()
' → logprob: -10.227251052856445
    7. ' compare' → logprob: -10.477251052856445
    8. ' 
' → logprob: -12.977251052856445
    9. '_compare' → logprob: -12.977251052856445
    10. '  
' → logprob: -13.352251052856445

Token 174: 'compare' (ID: 27773)
  Prédit: 'compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -3.128163257315464e-07
    2. ' compare' → logprob: -15.25
    3. '(compare' → logprob: -18.875
    4. '
' → logprob: -20.25
    5. '```' → logprob: -20.625
    6. '.compare' → logprob: -21.375
    7. '_compare' → logprob: -23.375
    8. 'comparison' → logprob: -25.0
    9. 'Compare' → logprob: -25.125
    10. 'compar' → logprob: -25.5

Token 175: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0003017385315615684
    2. '_' → logprob: -8.625301361083984
    3. '_val' → logprob: -9.250301361083984
    4. '_value' → logprob: -11.125301361083984
    5. '_vals' → logprob: -11.750301361083984
    6. ' _' → logprob: -14.000301361083984
    7. '_VALUES' → logprob: -14.125301361083984
    8. '_v' → logprob: -14.375301361083984
    9. '__' → logprob: -15.250301361083984
    10. ')_' → logprob: -15.375301361083984

Token 176: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043939340859651566
    2. '(' → logprob: -3.1689393520355225
    3. '```' → logprob: -8.043939590454102
    4. '#' → logprob: -8.668939590454102
    5. '<|end|>' → logprob: -9.043939590454102
    6. '(
' → logprob: -9.293939590454102
    7. '()
' → logprob: -9.418939590454102
    8. ')' → logprob: -9.918939590454102
    9. '\' → logprob: -10.168939590454102
    10. '
' → logprob: -10.793939590454102


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 174
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 120
Précision stricte (1ère position): 41.95%
Précision adaptée (1ère position): 43.68%
Précision (top 10): 68.97%
================================================================================
