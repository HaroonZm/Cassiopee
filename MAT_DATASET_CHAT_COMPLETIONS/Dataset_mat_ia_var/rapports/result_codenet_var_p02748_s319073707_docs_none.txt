================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mi = lambda : map(int, input().split())
li = lambda : list(map(int, input().split()))

a, b, m = mi()
av = li()
bv = li()

avs = av.copy()
bvs = bv.copy()
avs.sort()
bvs.sort()

ans = avs[0] + bvs[0]

for _ in range(m):
    q = li()
    tmp = av[q[0]-1] + bv[q[1]-1] - q[2]
    ans = min(ans, tmp)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mi' (ID: 3900)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.39283889532089233
    2. ' ' → logprob: -1.267838954925537
    3. 'x' → logprob: -4.017838954925537
    4. ' s' → logprob: -5.017838954925537
    5. ' ' → logprob: -5.017838954925537
    6. ' m' → logprob: -5.267838954925537
    7. ' space' → logprob: -5.892838954925537
    8. ' a' → logprob: -6.517838954925537
    9. '  ' → logprob: -6.767838954925537
    10. 'space' → logprob: -8.142838478088379

Token 4: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15405739843845367
    2. ' input' → logprob: -2.404057502746582
    3. 'int' → logprob: -3.029057502746582
    4. ' int' → logprob: -5.529057502746582
    5. '[]' → logprob: -11.029057502746582
    6. ' iter' → logprob: -11.154057502746582
    7. '<input' → logprob: -11.529057502746582
    8. 'iter' → logprob: -11.779057502746582
    9. 'list' → logprob: -11.779057502746582
    10. ' ' → logprob: -12.029057502746582

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07114285975694656
    2. '(lambda' → logprob: -3.5711429119110107
    3. '<|end|>' → logprob: -3.5711429119110107
    4. '(int' → logprob: -5.321142673492432
    5. ' (' → logprob: -6.071142673492432
    6. '(str' → logprob: -7.071142673492432
    7. '```' → logprob: -7.196142673492432
    8. '<|end|>' → logprob: -7.571142673492432
    9. ''' → logprob: -8.32114315032959
    10. '[int' → logprob: -8.69614315032959

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13734911382198334
    2. ')' → logprob: -2.6373491287231445
    3. '<|end|>' → logprob: -3.6373491287231445
    4. '(input' → logprob: -4.3873491287231445
    5. '(user' → logprob: -6.5123491287231445
    6. '((' → logprob: -6.7623491287231445
    7. '(()' → logprob: -7.0123491287231445
    8. ')(' → logprob: -7.1373491287231445
    9. '```' → logprob: -7.5123491287231445
    10. '())' → logprob: -7.5748491287231445

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009786196984350681
    2. ' input' → logprob: -4.759786128997803
    3. '(input' → logprob: -6.759786128997803
    4. ')' → logprob: -13.009786605834961
    5. '	input' → logprob: -13.259786605834961
    6. '=input' → logprob: -13.384786605834961
    7. ',input' → logprob: -13.509786605834961
    8. '_input' → logprob: -13.884786605834961
    9. '(' → logprob: -13.884786605834961
    10. '<input' → logprob: -14.009786605834961

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09649267792701721
    2. '()' → logprob: -3.0964927673339844
    3. '(' → logprob: -3.3464927673339844
    4. '(()' → logprob: -5.471492767333984
    5. ')' → logprob: -6.221492767333984
    6. '(""))' → logprob: -6.721492767333984
    7. '());' → logprob: -6.971492767333984
    8. '().' → logprob: -7.596492767333984
    9. '()">' → logprob: -7.596492767333984
    10. '`()' → logprob: -7.846492767333984

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004966750275343657
    2. 'strip' → logprob: -7.750496864318848
    3. 'read' → logprob: -10.500496864318848
    4. ' split' → logprob: -11.125496864318848
    5. 'rstrip' → logprob: -11.125496864318848
    6. ')' → logprob: -11.875496864318848
    7. 'spl' → logprob: -13.500496864318848
    8. '(split' → logprob: -14.875496864318848
    9. '```' → logprob: -16.25049591064453
    10. ' ' → logprob: -16.50049591064453

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031395703554153442
    2. '()))' → logprob: -6.003139495849609
    3. '()' → logprob: -7.503139495849609
    4. ')' → logprob: -9.37813949584961
    5. ' ())' → logprob: -11.50313949584961
    6. '))' → logprob: -11.87813949584961
    7. '(' → logprob: -12.37813949584961
    8. '()),' → logprob: -14.00313949584961
    9. '();)' → logprob: -14.12813949584961
    10. '()]' → logprob: -14.37813949584961

Token 11: 'li' (ID: 1307)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01826092228293419
    2. ')' → logprob: -5.393260955810547
    3. '()' → logprob: -5.893260955810547
    4. '#' → logprob: -6.393260955810547
    5. '(
' → logprob: -6.393260955810547
    6. 'a' → logprob: -6.643260955810547
    7. 'x' → logprob: -6.893260955810547
    8. 'def' → logprob: -7.018260955810547
    9. '\n' → logprob: -7.143260955810547
    10. '```' → logprob: -7.143260955810547

Token 12: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.019000176340341568
    2. '()' → logprob: -4.144000053405762
    3. ' =' → logprob: -6.394000053405762
    4. '=' → logprob: -7.019000053405762
    5. 'sti' → logprob: -9.269000053405762
    6. 'sts' → logprob: -9.519000053405762
    7. 'ne' → logprob: -10.144000053405762
    8. 'n' → logprob: -10.394000053405762
    9. '[:]' → logprob: -10.644000053405762
    10. 'ist' → logprob: -11.019000053405762

Token 13: ' lambda' (ID: 27871)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003317705122753978
    2. '[]' → logprob: -8.50033187866211
    3. ' list' → logprob: -9.25033187866211
    4. 'mi' → logprob: -10.75033187866211
    5. '[list' → logprob: -12.25033187866211
    6. 'li' → logprob: -12.75033187866211
    7. '[' → logprob: -13.37533187866211
    8. ':list' → logprob: -15.25033187866211
    9. ' []' → logprob: -15.50033187866211
    10. '=list' → logprob: -15.62533187866211

Token 14: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.40815526247024536
    2. ':' → logprob: -1.9081552028656006
    3. ':list' → logprob: -2.1581552028656006
    4. ' list' → logprob: -3.1581552028656006
    5. ' []' → logprob: -4.15815544128418
    6. '[]' → logprob: -5.03315544128418
    7. 'list' → logprob: -5.28315544128418
    8. ' ' → logprob: -7.78315544128418
    9. '[:]' → logprob: -8.78315544128418
    10. '=list' → logprob: -8.78315544128418

Token 15: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003812217037193477
    2. ' list' → logprob: -8.000381469726562
    3. 'map' → logprob: -10.000381469726562
    4. '[list' → logprob: -15.500381469726562
    5. 'input' → logprob: -16.500381469726562
    6. 'lst' → logprob: -17.500381469726562
    7. ' map' → logprob: -17.750381469726562
    8. 'int' → logprob: -17.875381469726562
    9. '[int' → logprob: -18.000381469726562
    10. ':list' → logprob: -19.125381469726562

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07467461377382278
    2. '()' → logprob: -3.574674606323242
    3. '(input' → logprob: -3.574674606323242
    4. '(int' → logprob: -4.449674606323242
    5. '(()' → logprob: -6.199674606323242
    6. '(map' → logprob: -7.449674606323242
    7. '((' → logprob: -7.574674606323242
    8. '(range' → logprob: -8.574674606323242
    9. '(s' → logprob: -9.074674606323242
    10. ' ()' → logprob: -9.324674606323242

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002027019625529647
    2. '(' → logprob: -7.0020270347595215
    3. 'int' → logprob: -7.6270270347595215
    4. '<int' → logprob: -8.627026557922363
    5. '=int' → logprob: -9.002026557922363
    6. '[int' → logprob: -9.127026557922363
    7. ',int' → logprob: -9.627026557922363
    8. ')' → logprob: -9.877026557922363
    9. '<|end|>' → logprob: -10.127026557922363
    10. ']int' → logprob: -10.502026557922363

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023539993911981583
    2. ',input' → logprob: -3.7735400199890137
    3. '(input' → logprob: -8.523539543151855
    4. ' ,' → logprob: -9.648539543151855
    5. '(' → logprob: -11.523539543151855
    6. '(),' → logprob: -11.773539543151855
    7. '))' → logprob: -12.398539543151855
    8. ',int' → logprob: -12.648539543151855
    9. 'input' → logprob: -13.523539543151855
    10. ')' → logprob: -13.773539543151855

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048598840832710266
    2. ' input' → logprob: -3.0485987663269043
    3. ')' → logprob: -12.173599243164062
    4. '(input' → logprob: -12.423599243164062
    5. '=input' → logprob: -13.673599243164062
    6. ',input' → logprob: -14.298599243164062
    7. '_input' → logprob: -15.798599243164062
    8. '<input' → logprob: -16.173599243164062
    9. '	input' → logprob: -16.548599243164062
    10. '[input' → logprob: -16.798599243164062

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -15.000003814697266
    4. '.' → logprob: -17.000003814697266
    5. '().__' → logprob: -17.250003814697266
    6. ')' → logprob: -17.500003814697266
    7. '>().' → logprob: -18.125003814697266
    8. '(' → logprob: -18.875003814697266
    9. '()))' → logprob: -19.375003814697266
    10. ''s' → logprob: -19.375003814697266

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. ' split' → logprob: -13.375001907348633
    3. 'strip' → logprob: -15.125001907348633
    4. 'spl' → logprob: -15.750001907348633
    5. 'rstrip' → logprob: -17.625001907348633
    6. ')' → logprob: -17.875001907348633
    7. '(split' → logprob: -19.000001907348633
    8. 's' → logprob: -19.625001907348633
    9. 'plit' → logprob: -19.750001907348633
    10. '_split' → logprob: -20.375001907348633

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07078753411769867
    2. '))' → logprob: -2.8207874298095703
    3. '())' → logprob: -5.07078742980957
    4. '()' → logprob: -6.07078742980957
    5. ')' → logprob: -9.07078742980957
    6. '()))
' → logprob: -9.69578742980957
    7. '(' → logprob: -11.69578742980957
    8. '()))

' → logprob: -12.69578742980957
    9. '()));' → logprob: -13.44578742980957
    10. '())))' → logprob: -13.82078742980957

Token 23: 'a' (ID: 64)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05974610149860382
    2. 'a' → logprob: -2.934746026992798
    3. 't' → logprob: -6.809746265411377
    4. '(n' → logprob: -7.059746265411377
    5. 'x' → logprob: -7.434746265411377
    6. 'd' → logprob: -7.559746265411377
    7. '(' → logprob: -7.559746265411377
    8. 's' → logprob: -7.684746265411377
    9. 'for' → logprob: -8.559745788574219
    10. 'k' → logprob: -8.934745788574219

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37458336353302
    2. ',' → logprob: -1.49958336353302
    3. '=' → logprob: -2.7495832443237305
    4. ' ' → logprob: -4.7495832443237305
    5. '[' → logprob: -5.4995832443237305
    6. 'r' → logprob: -5.8745832443237305
    7. 'i' → logprob: -5.9995832443237305
    8. '.' → logprob: -6.3745832443237305
    9. ' ,' → logprob: -6.4995832443237305
    10. ',b' → logprob: -6.6245832443237305

Token 25: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01827215403318405
    2. ' b' → logprob: -4.0182719230651855
    3. ' ' → logprob: -9.018272399902344
    4. ' =' → logprob: -15.268272399902344
    5. '_b' → logprob: -15.393272399902344
    6. '=' → logprob: -16.268272399902344
    7. 'a' → logprob: -16.393272399902344
    8. '*b' → logprob: -16.518272399902344
    9. '=b' → logprob: -16.768272399902344
    10. '>b' → logprob: -17.018272399902344

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10158424824476242
    2. '=' → logprob: -2.3515841960906982
    3. ',' → logprob: -6.726584434509277
    4. '<|end|>' → logprob: -9.226584434509277
    5. ')' → logprob: -10.476584434509277
    6. ' ,' → logprob: -10.851584434509277
    7. ' ' → logprob: -11.226584434509277
    8. ' =
' → logprob: -11.476584434509277
    9. ' =)' → logprob: -12.726584434509277
    10. '<|end|>' → logprob: -13.851584434509277

Token 27: ' m' (ID: 284)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09044913947582245
    2. ' c' → logprob: -2.465449094772339
    3. ' =' → logprob: -7.340449333190918
    4. '=' → logprob: -8.340449333190918
    5. 'n' → logprob: -8.840449333190918
    6. 's' → logprob: -9.215449333190918
    7. 'mi' → logprob: -9.465449333190918
    8. 'k' → logprob: -9.965449333190918
    9. ' s' → logprob: -9.965449333190918
    10. ' n' → logprob: -10.215449333190918

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519587278366089
    2. '=' → logprob: -1.5019587278366089
    3. ',' → logprob: -10.626958847045898
    4. ')' → logprob: -13.626958847045898
    5. ' ' → logprob: -13.751958847045898
    6. ' =
' → logprob: -14.251958847045898
    7. '=input' → logprob: -14.751958847045898
    8. '.' → logprob: -15.376958847045898
    9. '[' → logprob: -15.376958847045898
    10. ' ,' → logprob: -15.751958847045898

Token 29: ' mi' (ID: 3997)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6668727397918701
    2. 'mi' → logprob: -0.9168727397918701
    3. ' map' → logprob: -2.91687273979187
    4. ' mi' → logprob: -3.41687273979187
    5. ' ' → logprob: -13.66687297821045
    6. 'ma' → logprob: -13.79187297821045
    7. 'li' → logprob: -15.04187297821045
    8. 'list' → logprob: -15.66687297821045
    9. 'input' → logprob: -15.91687297821045
    10. '(mi' → logprob: -16.041872024536133

Token 30: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: 'av' (ID: 407)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4830358922481537
    2. '<|end|>' → logprob: -2.4830358028411865
    3. '  
' → logprob: -2.7330358028411865
    4. ' 
' → logprob: -2.9830358028411865
    5. 'a' → logprob: -3.1080358028411865
    6. 'n' → logprob: -3.3580358028411865
    7. '\n' → logprob: -3.4830358028411865
    8. '' → logprob: -4.483036041259766
    9. 'd' → logprob: -4.483036041259766
    10. '
' → logprob: -4.858036041259766

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5485997200012207
    2. 'al' → logprob: -1.2985997200012207
    3. 'a' → logprob: -2.5485997200012207
    4. 'l' → logprob: -3.5485997200012207
    5. 'i' → logprob: -4.298599720001221
    6. '=' → logprob: -4.298599720001221
    7. 'g' → logprob: -5.048599720001221
    8. 'ail' → logprob: -6.048599720001221
    9. 'e' → logprob: -6.173599720001221
    10. ',' → logprob: -7.423599720001221

Token 33: ' li' (ID: 3476)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4168420732021332
    2. ' li' → logprob: -1.4168421030044556
    3. ' lambda' → logprob: -2.666841983795166
    4. 'list' → logprob: -4.291841983795166
    5. ' [' → logprob: -5.416841983795166
    6. 'lambda' → logprob: -5.541841983795166
    7. ' []' → logprob: -5.916841983795166
    8. 'li' → logprob: -6.166841983795166
    9. '[' → logprob: -7.041841983795166
    10. ' ' → logprob: -8.416842460632324

Token 34: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.394135612528771e-05
    2. '()
' → logprob: -11.250043869018555
    3. ' ()' → logprob: -11.250043869018555
    4. '(' → logprob: -11.875043869018555
    5. '())' → logprob: -12.250043869018555
    6. '()]' → logprob: -13.375043869018555
    7. '()

' → logprob: -13.500043869018555
    8. '()<' → logprob: -14.375043869018555
    9. ')' → logprob: -14.750043869018555
    10. '();' → logprob: -15.250043869018555

Token 35: 'bv' (ID: 112823)
  Prédit: 'bv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bv' → logprob: -0.006324420683085918
    2. 'b' → logprob: -5.506324291229248
    3. 'bw' → logprob: -6.881324291229248
    4. ' bv' → logprob: -8.256324768066406
    5. 'bm' → logprob: -8.381324768066406
    6. ' 
' → logprob: -8.381324768066406
    7. 'bl' → logprob: -9.256324768066406
    8. ' =' → logprob: -9.381324768066406
    9. ',' → logprob: -9.881324768066406
    10. 'vb' → logprob: -10.381324768066406

Token 36: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.490809417096898e-05
    2. '(' → logprob: -10.500055313110352
    3. ' ()' → logprob: -11.375055313110352
    4. '()
' → logprob: -12.250055313110352
    5. '=' → logprob: -12.500055313110352
    6. '())' → logprob: -12.750055313110352
    7. '()]' → logprob: -13.250055313110352
    8. ')' → logprob: -13.875055313110352
    9. '()

' → logprob: -14.625055313110352
    10. '()[' → logprob: -15.500055313110352

Token 37: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.09445039927959442
    2. ' li' → logprob: -2.8444504737854004
    3. '(li' → logprob: -3.9694504737854004
    4. '()' → logprob: -4.3444504737854
    5. '<li' → logprob: -10.719449996948242
    6. 'list' → logprob: -10.969449996948242
    7. '_li' → logprob: -11.219449996948242
    8. ' ()' → logprob: -11.219449996948242
    9. 'lambda' → logprob: -11.719449996948242
    10. '(' → logprob: -11.969449996948242

Token 38: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5690089639974758e-05
    2. '()
' → logprob: -12.000015258789062
    3. '(' → logprob: -12.375015258789062
    4. '()]' → logprob: -13.125015258789062
    5. '())' → logprob: -14.375015258789062
    6. '()<' → logprob: -14.625015258789062
    7. ' ()' → logprob: -14.750015258789062
    8. '()`' → logprob: -14.875015258789062
    9. '()

' → logprob: -14.875015258789062
    10. '()>' → logprob: -15.250015258789062

Token 39: 'avs' (ID: 113368)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2711869776248932
    2. 'res' → logprob: -2.0211870670318604
    3. 'for' → logprob: -3.5211870670318604
    4. 'cost' → logprob: -4.021186828613281
    5. 'dp' → logprob: -4.271186828613281
    6. 'c' → logprob: -4.521186828613281
    7. 'answer' → logprob: -4.896186828613281
    8. 'result' → logprob: -5.146186828613281
    9. 'print' → logprob: -5.396186828613281
    10. 'min' → logprob: -6.271186828613281

Token 40: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3476547598838806
    2. '[' → logprob: -1.3476548194885254
    3. '[:]' → logprob: -3.9726548194885254
    4. '=' → logprob: -4.972654819488525
    5. ' =' → logprob: -6.347654819488525
    6. ')' → logprob: -6.347654819488525
    7. ' .' → logprob: -7.472654819488525
    8. 's' → logprob: -7.597654819488525
    9. '[]' → logprob: -7.722654819488525
    10. '[:' → logprob: -7.722654819488525

Token 41: ' av' (ID: 1452)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5207144021987915
    2. 'sorted' → logprob: -1.2707144021987915
    3. '(sorted' → logprob: -3.020714282989502
    4. '[' → logprob: -3.520714282989502
    5. 'set' → logprob: -4.020714282989502
    6. '(sum' → logprob: -4.395714282989502
    7. 's' → logprob: -5.395714282989502
    8. '[s' → logprob: -5.645714282989502
    9. '=' → logprob: -6.770714282989502
    10. '[:]' → logprob: -7.020714282989502

Token 42: '.copy' (ID: 22925)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.004962747450917959
    2. '.copy' → logprob: -5.754962921142578
    3. '[:' → logprob: -6.504962921142578
    4. '.sort' → logprob: -9.504962921142578
    5. '[::-' → logprob: -9.504962921142578
    6. 's' → logprob: -9.629962921142578
    7. '.' → logprob: -9.879962921142578
    8. '[' → logprob: -12.004962921142578
    9. '.s' → logprob: -12.754962921142578
    10. '.sum' → logprob: -13.004962921142578

Token 43: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001858982432167977
    2. '(' → logprob: -8.7501859664917
    3. '()
' → logprob: -11.2501859664917
    4. '()`' → logprob: -12.8751859664917
    5. '()

' → logprob: -13.0001859664917
    6. '())' → logprob: -13.5001859664917
    7. ')' → logprob: -13.6251859664917
    8. '();' → logprob: -13.6251859664917
    9. '().' → logprob: -14.1251859664917
    10. '()]' → logprob: -14.2501859664917

Token 44: 'b' (ID: 65)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5032888650894165
    2. 'avs' → logprob: -1.0032888650894165
    3. '<|end|>' → logprob: -4.503288745880127
    4. 'sort' → logprob: -4.878288745880127
    5. 's' → logprob: -5.503288745880127
    6. 'av' → logprob: -6.003288745880127
    7. '.' → logprob: -7.128288745880127
    8. 'for' → logprob: -7.253288745880127
    9. '```' → logprob: -8.003289222717285
    10. '_' → logprob: -8.003289222717285

Token 45: 'vs' (ID: 16121)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11309616267681122
    2. 'vs' → logprob: -2.363096237182617
    3. 's' → logprob: -4.363096237182617
    4. 'sv' → logprob: -9.738096237182617
    5. '_vs' → logprob: -12.113096237182617
    6. '_' → logprob: -13.113096237182617
    7. 'в' → logprob: -14.738096237182617
    8. '_v' → logprob: -14.863096237182617
    9. '_s' → logprob: -15.613096237182617
    10. 'w' → logprob: -15.863096237182617

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04978613555431366
    2. ' =' → logprob: -3.04978609085083
    3. 's' → logprob: -6.79978609085083
    4. '.copy' → logprob: -9.549786567687988
    5. 'v' → logprob: -11.799786567687988
    6. '.' → logprob: -13.674786567687988
    7. ')' → logprob: -13.674786567687988
    8. 'copy' → logprob: -14.174786567687988
    9. '[:]' → logprob: -14.799786567687988
    10. 'vs' → logprob: -14.924786567687988

Token 47: ' bv' (ID: 84955)
  Prédit: ' bv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bv' → logprob: -0.6933090686798096
    2. 'bv' → logprob: -0.6933090686798096
    3. 'b' → logprob: -8.81830883026123
    4. ' ' → logprob: -12.19330883026123
    5. ' b' → logprob: -12.31830883026123
    6. '	b' → logprob: -13.69330883026123
    7. '[b' → logprob: -14.06830883026123
    8. '[' → logprob: -15.31830883026123
    9. '   ' → logprob: -15.44330883026123
    10. '  ' → logprob: -15.56830883026123

Token 48: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.004236412234604359
    2. '.' → logprob: -6.004236221313477
    3. '[:]' → logprob: -6.379236221313477
    4. '<|end|>' → logprob: -10.379236221313477
    5. '.deepcopy' → logprob: -12.254236221313477
    6. '[:' → logprob: -12.254236221313477
    7. '.Copy' → logprob: -12.379236221313477
    8. 'copy' → logprob: -12.379236221313477
    9. '[' → logprob: -12.629236221313477
    10. '.sort' → logprob: -12.629236221313477

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -10.1250581741333
    3. '()
' → logprob: -11.7500581741333
    4. '()`' → logprob: -12.8750581741333
    5. '()

' → logprob: -12.8750581741333
    6. ')' → logprob: -13.8750581741333
    7. ' ()' → logprob: -14.0000581741333
    8. '()]' → logprob: -14.0000581741333
    9. '())' → logprob: -14.3750581741333
    10. '();' → logprob: -14.7500581741333

Token 50: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.030020300298929214
    2. 'av' → logprob: -3.780020236968994
    3. 'a' → logprob: -6.155020236968994
    4. 'for' → logprob: -6.280020236968994
    5. 'b' → logprob: -7.030020236968994
    6. '```' → logprob: -7.405020236968994
    7. 's' → logprob: -7.655020236968994
    8. ' av' → logprob: -9.030020713806152
    9. 'avn' → logprob: -9.030020713806152
    10. '
' → logprob: -9.155020713806152

Token 51: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0018536734860390425
    2. '<|end|>' → logprob: -7.5018534660339355
    3. '[::-' → logprob: -7.7518534660339355
    4. '.' → logprob: -8.251853942871094
    5. '.reverse' → logprob: -8.626853942871094
    6. '[:]' → logprob: -8.876853942871094
    7. '[' → logprob: -9.001853942871094
    8. 'sort' → logprob: -10.126853942871094
    9. '.copy' → logprob: -10.251853942871094
    10. '.pop' → logprob: -10.626853942871094

Token 52: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.869639476761222e-05
    2. '(' → logprob: -10.625039100646973
    3. '()
' → logprob: -11.625039100646973
    4. '(reverse' → logprob: -13.875039100646973
    5. '())' → logprob: -14.000039100646973
    6. '()>' → logprob: -14.500039100646973
    7. '();' → logprob: -14.875039100646973
    8. '()`' → logprob: -15.125039100646973
    9. '()

' → logprob: -15.250039100646973
    10. '()}' → logprob: -15.375039100646973

Token 53: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.051439687609672546
    2. 'bv' → logprob: -3.4264397621154785
    3. 'avs' → logprob: -4.3014397621154785
    4. 'av' → logprob: -6.4264397621154785
    5. 'bs' → logprob: -6.6764397621154785
    6. '```' → logprob: -7.9264397621154785
    7. 's' → logprob: -8.42643928527832
    8. ' b' → logprob: -9.17643928527832
    9. 'a' → logprob: -9.55143928527832
    10. 'for' → logprob: -10.30143928527832

Token 54: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.008800698444247246
    2. 'v' → logprob: -4.758800506591797
    3. 's' → logprob: -8.633800506591797
    4. '_vs' → logprob: -12.383800506591797
    5. 'sv' → logprob: -13.508800506591797
    6. ' vs' → logprob: -13.633800506591797
    7. 'vsp' → logprob: -14.633800506591797
    8. 'Vs' → logprob: -14.758800506591797
    9. 'в' → logprob: -15.383800506591797
    10. 'VS' → logprob: -16.383800506591797

Token 55: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0003208037815056741
    2. '.' → logprob: -8.625320434570312
    3. 'sort' → logprob: -8.875320434570312
    4. '.reverse' → logprob: -14.625320434570312
    5. ' .' → logprob: -15.000320434570312
    6. '<|end|>' → logprob: -16.250320434570312
    7. ' sort' → logprob: -16.625320434570312
    8. 'sorted' → logprob: -16.750320434570312
    9. '.sorted' → logprob: -16.750320434570312
    10. '	sort' → logprob: -17.000320434570312

Token 56: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038991993642412126
    2. '(' → logprob: -7.87539005279541
    3. '()
' → logprob: -12.25039005279541
    4. '()`' → logprob: -14.25039005279541
    5. '();' → logprob: -14.37539005279541
    6. '())' → logprob: -14.37539005279541
    7. ' ()' → logprob: -14.50039005279541
    8. '()

' → logprob: -14.50039005279541
    9. '()]' → logprob: -14.50039005279541
    10. '()<' → logprob: -15.00039005279541

Token 57: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7163729667663574
    2. 'res' → logprob: -1.3413729667663574
    3. 'for' → logprob: -1.4663729667663574
    4. 'result' → logprob: -4.966372966766357
    5. 'answer' → logprob: -5.341372966766357
    6. 'cost' → logprob: -5.716372966766357
    7. 'c' → logprob: -7.466372966766357
    8. 'total' → logprob: -7.716372966766357
    9. 's' → logprob: -7.841372966766357
    10. 'out' → logprob: -7.966372966766357

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004622491542249918
    2. '=' → logprob: -5.379622459411621
    3. '_' → logprob: -14.004622459411621
    4. ' ' → logprob: -15.504622459411621
    5. 's' → logprob: -15.754622459411621
    6. ' =
' → logprob: -15.879622459411621
    7. ',' → logprob: -16.004623413085938
    8. '=[]' → logprob: -16.004623413085938
    9. '=int' → logprob: -16.379623413085938
    10. ' =)' → logprob: -16.504623413085938

Token 59: ' av' (ID: 1452)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6323660016059875
    2. 'av' → logprob: -1.1323659420013428
    3. 'avs' → logprob: -2.3823659420013428
    4. 'float' → logprob: -3.1323659420013428
    5. 'a' → logprob: -5.507366180419922
    6. 'abs' → logprob: -6.257366180419922
    7. 'sum' → logprob: -7.007366180419922
    8. '100' → logprob: -7.132366180419922
    9. 'int' → logprob: -7.257366180419922
    10. '1' → logprob: -7.257366180419922

Token 60: 's' (ID: 82)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.10491727292537689
    2. '[' → logprob: -2.354917287826538
    3. '.copy' → logprob: -6.104917049407959
    4. '[:' → logprob: -6.854917049407959
    5. '=' → logprob: -7.604917049407959
    6. '[min' → logprob: -8.354917526245117
    7. '[
' → logprob: -9.229917526245117
    8. '```' → logprob: -9.479917526245117
    9. '[::-' → logprob: -9.604917526245117
    10. '[a' → logprob: -9.854917526245117

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5234302878379822
    2. '[-' → logprob: -0.8984302878379822
    3. '0' → logprob: -8.898429870605469
    4. '[m' → logprob: -9.273429870605469
    5. '[len' → logprob: -10.273429870605469
    6. '[b' → logprob: -11.773429870605469
    7. '[a' → logprob: -12.273429870605469
    8. '-' → logprob: -12.773429870605469
    9. '[]' → logprob: -12.773429870605469
    10. ' [' → logprob: -13.023429870605469

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010998018842656165
    2. '-' → logprob: -9.125109672546387
    3. ' ' → logprob: -13.875109672546387
    4. '
' → logprob: -17.250110626220703
    5. '1' → logprob: -17.750110626220703
    6. ' -' → logprob: -17.750110626220703
    7. ':' → logprob: -18.125110626220703
    8. 'm' → logprob: -19.000110626220703
    9. '０' → logprob: -20.062610626220703
    10. 'a' → logprob: -20.062610626220703

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00977887213230133
    2. ']+' → logprob: -4.63477897644043
    3. ']*' → logprob: -11.00977897644043
    4. ' ]' → logprob: -12.38477897644043
    5. '+' → logprob: -13.75977897644043
    6. ']
' → logprob: -14.63477897644043
    7. '+]' → logprob: -15.88477897644043
    8. '']' → logprob: -16.25977897644043
    9. ']+=' → logprob: -16.25977897644043
    10. ']

' → logprob: -16.25977897644043

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5189381837844849
    2. ' +' → logprob: -1.0189381837844849
    3. '+b' → logprob: -3.2689380645751953
    4. '*' → logprob: -5.268938064575195
    5. ' *' → logprob: -7.518938064575195
    6. '*b' → logprob: -9.768938064575195
    7. ' ' → logprob: -10.268938064575195
    8. '+B' → logprob: -11.018938064575195
    9. '[' → logprob: -12.143938064575195
    10. '+a' → logprob: -12.643938064575195

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.36574100604048e-06
    2. ' b' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.500003814697266
    4. '  ' → logprob: -17.750003814697266
    5. 'bbs' → logprob: -17.875003814697266
    6. ' ' → logprob: -18.000003814697266
    7. 'bps' → logprob: -18.125003814697266
    8. 'bv' → logprob: -18.500003814697266
    9. '>b' → logprob: -19.250003814697266
    10. '	b' → logprob: -19.375003814697266

Token 66: 'vs' (ID: 16121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.064297824399546e-05
    2. 'vs' → logprob: -10.500070571899414
    3. 'v' → logprob: -10.875070571899414
    4. '[' → logprob: -11.250070571899414
    5. ' s' → logprob: -11.875070571899414
    6. '```' → logprob: -14.125070571899414
    7. ''s' → logprob: -14.250070571899414
    8. 'sv' → logprob: -14.500070571899414
    9. '`s' → logprob: -14.875070571899414
    10. '[s' → logprob: -15.375070571899414

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47409164905548096
    2. '0' → logprob: -0.974091649055481
    3. ' ' → logprob: -12.099091529846191
    4. '<|end|>' → logprob: -12.599091529846191
    5. '1' → logprob: -13.099091529846191
    6. '(' → logprob: -13.349091529846191
    7. '```' → logprob: -14.599091529846191
    8. ' [' → logprob: -14.724091529846191
    9. '[-' → logprob: -15.724091529846191
    10. '[
' → logprob: -15.724091529846191

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '-' → logprob: -17.75
    4. '1' → logprob: -18.25
    5. '۰' → logprob: -19.9375
    6. '000' → logprob: -20.3125
    7. ']' → logprob: -20.375
    8. '00' → logprob: -20.5
    9. '```' → logprob: -20.5625
    10. '   ' → logprob: -21.1875

Token 69: ']

' (ID: 3144)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.09941036254167557
    2. ']' → logprob: -2.59941029548645
    3. ')' → logprob: -4.349410533905029
    4. '+' → logprob: -5.599410533905029
    5. '```' → logprob: -6.599410533905029
    6. '
' → logprob: -6.974410533905029
    7. ' }' → logprob: -7.599410533905029
    8. '<|end|>' → logprob: -7.849410533905029
    9. '}
' → logprob: -8.974410057067871
    10. '>' → logprob: -9.724410057067871

Token 70: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.659005157416686e-05
    2. 'd' → logprob: -10.625066757202148
    3. ' for' → logprob: -11.125066757202148
    4. 'while' → logprob: -12.250066757202148
    5. 'pairs' → logprob: -12.250066757202148
    6. 'fo' → logprob: -12.875066757202148
    7. 'ans' → logprob: -13.125066757202148
    8. '```' → logprob: -13.250066757202148
    9. 'cost' → logprob: -13.625066757202148
    10. 'dic' → logprob: -13.750066757202148

Token 71: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2526322305202484
    2. ' _' → logprob: -1.7526322603225708
    3. '_' → logprob: -3.2526321411132812
    4. 'i' → logprob: -5.002632141113281
    5. ' ' → logprob: -6.002632141113281
    6. '_i' → logprob: -6.252632141113281
    7. ' a' → logprob: -9.877632141113281
    8. ' ' → logprob: -11.002632141113281
    9. 'a' → logprob: -11.127632141113281
    10. ' x' → logprob: -11.502632141113281

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04305616766214371
    2. 'in' → logprob: -3.1680562496185303
    3. ' ' → logprob: -10.54305648803711
    4. ',' → logprob: -10.91805648803711
    5. ' ,' → logprob: -12.41805648803711
    6. 'range' → logprob: -13.41805648803711
    7. 'n' → logprob: -13.66805648803711
    8. '	in' → logprob: -14.04305648803711
    9. '  ' → logprob: -14.16805648803711
    10. '_' → logprob: -14.41805648803711

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25195741653442383
    2. ' range' → logprob: -1.5019574165344238
    3. ' b' → logprob: -11.251956939697266
    4. 'b' → logprob: -12.751956939697266
    5. 'm' → logprob: -12.876956939697266
    6. '_' → logprob: -12.876956939697266
    7. ' ra' → logprob: -13.251956939697266
    8. ' ' → logprob: -13.376956939697266
    9. 'ran' → logprob: -13.751956939697266
    10. 'r' → logprob: -14.001956939697266

Token 74: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00030805266578681767
    2. '(' → logprob: -8.2503080368042
    3. ' (' → logprob: -10.0003080368042
    4. ' m' → logprob: -14.1253080368042
    5. 'm' → logprob: -14.2503080368042
    6. '(a' → logprob: -16.750308990478516
    7. '(int' → logprob: -17.500308990478516
    8. '(n' → logprob: -19.125308990478516
    9. '(range' → logprob: -19.500308990478516
    10. '(mi' → logprob: -19.750308990478516

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00047475993051193655
    2. '):
' → logprob: -7.87547492980957
    3. ':' → logprob: -10.25047492980957
    4. ' ):' → logprob: -10.37547492980957
    5. ')' → logprob: -11.00047492980957
    6. '):
' → logprob: -11.62547492980957
    7. ',' → logprob: -14.25047492980957
    8. '}:' → logprob: -14.87547492980957
    9. ']:' → logprob: -15.50047492980957
    10. '():' → logprob: -15.50047492980957

Token 76: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35447967052459717
    2. 'x' → logprob: -1.8544796705245972
    3. '   ' → logprob: -2.4794797897338867
    4. ' a' → logprob: -4.104479789733887
    5. 'i' → logprob: -4.729479789733887
    6. ' ' → logprob: -5.229479789733887
    7. '	a' → logprob: -5.354479789733887
    8. 's' → logprob: -5.604479789733887
    9. ' x' → logprob: -5.854479789733887
    10. ',' → logprob: -5.854479789733887

Token 77: ' q' (ID: 2335)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016634462401270866
    2. 'c' → logprob: -4.141634464263916
    3. 'a' → logprob: -7.766634464263916
    4. ' x' → logprob: -9.391633987426758
    5. 'i' → logprob: -9.891633987426758
    6. 'u' → logprob: -10.516633987426758
    7. 's' → logprob: -12.016633987426758
    8. ' c' → logprob: -12.391633987426758
    9. '   ' → logprob: -13.766633987426758
    10. 'ai' → logprob: -14.516633987426758

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5562478303909302
    2. 'a' → logprob: -1.8062478303909302
    3. '=' → logprob: -2.3062477111816406
    4. ',' → logprob: -2.3062477111816406
    5. 'x' → logprob: -3.9312477111816406
    6. 'u' → logprob: -4.306247711181641
    7. 'w' → logprob: -4.556247711181641
    8. 'c' → logprob: -5.181247711181641
    9. '=a' → logprob: -5.806247711181641
    10. ' ' → logprob: -5.931247711181641

Token 79: ' li' (ID: 3476)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.48317715525627136
    2. 'li' → logprob: -0.9831771850585938
    3. 'list' → logprob: -5.358177185058594
    4. ' li' → logprob: -5.733177185058594
    5. 'tuple' → logprob: -7.483177185058594
    6. ' mi' → logprob: -7.858177185058594
    7. ' list' → logprob: -9.108177185058594
    8. ' tuple' → logprob: -10.108177185058594
    9. ' ' → logprob: -13.108177185058594
    10. 'ti' → logprob: -13.483177185058594

Token 80: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.543733904138207e-05
    2. '())' → logprob: -9.75009536743164
    3. '()
' → logprob: -10.37509536743164
    4. ')' → logprob: -12.37509536743164
    5. ' ()' → logprob: -14.62509536743164
    6. '()
' → logprob: -15.12509536743164
    7. '()`' → logprob: -15.50009536743164
    8. '()]' → logprob: -15.62509536743164
    9. '()

' → logprob: -15.75009536743164
    10. '(' → logprob: -16.12509536743164

Token 81: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' tmp' (ID: 8919)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5287496447563171
    2. 'c' → logprob: -1.278749704360962
    3. 'a' → logprob: -2.153749704360962
    4. 'if' → logprob: -5.403749465942383
    5. 'u' → logprob: -5.778749465942383
    6. 'i' → logprob: -6.028749465942383
    7. ' if' → logprob: -6.528749465942383
    8. '<|end|>' → logprob: -6.903749465942383
    9. 'ai' → logprob: -7.278749465942383
    10. ' x' → logprob: -7.528749465942383

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0336495004594326
    2. '=' → logprob: -3.408649444580078
    3. ' ' → logprob: -13.658649444580078
    4. ',' → logprob: -14.408649444580078
    5. '_' → logprob: -14.408649444580078
    6. 'tmp' → logprob: -15.658649444580078
    7. '＝' → logprob: -15.658649444580078
    8. '=q' → logprob: -15.658649444580078
    9. '=int' → logprob: -15.908649444580078
    10. ')' → logprob: -16.283649444580078

Token 84: ' av' (ID: 1452)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.017755592241883278
    2. ' q' → logprob: -4.142755508422852
    3. 'av' → logprob: -6.767755508422852
    4. 'a' → logprob: -8.767755508422852
    5. 'min' → logprob: -9.017755508422852
    6. 'ans' → logprob: -9.517755508422852
    7. ' av' → logprob: -9.892755508422852
    8. ' ' → logprob: -10.392755508422852
    9. '	q' → logprob: -10.392755508422852
    10. 'max' → logprob: -10.767755508422852

Token 85: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.87501335144043
    3. 'q' → logprob: -12.00001335144043
    4. ' [' → logprob: -17.62501335144043
    5. '[v' → logprob: -18.25001335144043
    6. '[
' → logprob: -18.50001335144043
    7. '[a' → logprob: -18.87501335144043
    8. '	q' → logprob: -19.00001335144043
    9. '[m' → logprob: -19.37501335144043
    10. 's' → logprob: -19.37501335144043

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.625006675720215
    3. '0' → logprob: -13.000006675720215
    4. '-' → logprob: -15.750006675720215
    5. '[
' → logprob: -16.0000057220459
    6. '```' → logprob: -16.5000057220459
    7. ' [' → logprob: -16.8750057220459
    8. 'x' → logprob: -17.1250057220459
    9. 's' → logprob: -17.3750057220459
    10. '(' → logprob: -17.5000057220459

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026336227892898023
    2. '1' → logprob: -8.375263214111328
    3. '[' → logprob: -10.750263214111328
    4. '-' → logprob: -11.750263214111328
    5. ' ' → logprob: -12.750263214111328
    6. '   ' → logprob: -15.250263214111328
    7. ' -' → logprob: -16.250263214111328
    8. '```' → logprob: -16.750263214111328
    9. '2' → logprob: -16.875263214111328
    10. '  ' → logprob: -18.062763214111328

Token 88: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021896522492170334
    2. ' -' → logprob: -3.8968966007232666
    3. '1' → logprob: -7.1468963623046875
    4. '[' → logprob: -8.146896362304688
    5. ']-' → logprob: -8.521896362304688
    6. ']' → logprob: -9.646896362304688
    7. '0' → logprob: -12.146896362304688
    8. ' ' → logprob: -12.521896362304688
    9. '()-' → logprob: -13.896896362304688
    10. '   ' → logprob: -14.396896362304688

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. ' ' → logprob: -9.750067710876465
    3. ']' → logprob: -11.625067710876465
    4. '<|end|>' → logprob: -15.375067710876465
    5. '   ' → logprob: -16.12506866455078
    6. ']>' → logprob: -16.43756866455078
    7. '  ' → logprob: -16.75006866455078
    8. '۱' → logprob: -17.37506866455078
    9. ' ]' → logprob: -17.50006866455078
    10. '<|end|>' → logprob: -17.62506866455078

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002206047298386693
    2. ']+' → logprob: -6.127205848693848
    3. ' ]' → logprob: -10.877205848693848
    4. '+' → logprob: -14.127205848693848
    5. '-' → logprob: -15.002205848693848
    6. '']' → logprob: -15.752205848693848
    7. '+]' → logprob: -15.752205848693848
    8. '"]' → logprob: -15.877205848693848
    9. ')' → logprob: -15.877205848693848
    10. ']
' → logprob: -16.002206802368164

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1658158302307129
    2. ' +' → logprob: -2.040815830230713
    3. '+b' → logprob: -3.790815830230713
    4. '+B' → logprob: -9.165815353393555
    5. '+
' → logprob: -9.790815353393555
    6. '+a' → logprob: -10.290815353393555
    7. '+c' → logprob: -11.040815353393555
    8. '+t' → logprob: -11.415815353393555
    9. '<|end|>' → logprob: -11.415815353393555
    10. '+k' → logprob: -11.665815353393555

Token 92: ' bv' (ID: 84955)
  Prédit: ' bv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bv' → logprob: -0.5608759522438049
    2. 'bv' → logprob: -0.9358759522438049
    3. ' b' → logprob: -3.93587589263916
    4. 'b' → logprob: -4.06087589263916
    5. ' ' → logprob: -8.43587589263916
    6. '    ' → logprob: -10.43587589263916
    7. '  ' → logprob: -10.81087589263916
    8. '   ' → logprob: -11.81087589263916
    9. '	b' → logprob: -12.93587589263916
    10. ' bj' → logprob: -13.18587589263916

Token 93: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. 'q' → logprob: -14.750000953674316
    4. ' [' → logprob: -19.125
    5. '```' → logprob: -20.0
    6. '[
' → logprob: -20.0
    7. '(q' → logprob: -20.125
    8. '	q' → logprob: -20.75
    9. ' q' → logprob: -20.875
    10. '[m' → logprob: -22.125

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -12.625003814697266
    3. '[
' → logprob: -18.000003814697266
    4. '2' → logprob: -18.375003814697266
    5. '```' → logprob: -18.500003814697266
    6. 'q' → logprob: -19.125003814697266
    7. '-' → logprob: -19.750003814697266
    8. ']' → logprob: -20.000003814697266
    9. '[-' → logprob: -20.000003814697266
    10. ' [' → logprob: -20.000003814697266

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.37500286102295
    3. '2' → logprob: -14.12500286102295
    4. ' ' → logprob: -14.75000286102295
    5. ']' → logprob: -18.125001907348633
    6. '```' → logprob: -18.250001907348633
    7. '0' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '１' → logprob: -19.375001907348633
    10. '4' → logprob: -19.750001907348633

Token 96: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012391679920256138
    2. ']-' → logprob: -4.512391567230225
    3. ']' → logprob: -7.262391567230225
    4. '[' → logprob: -8.137392044067383
    5. ' -' → logprob: -8.387392044067383
    6. '1' → logprob: -9.137392044067383
    7. '2' → logprob: -12.637392044067383
    8. '()-' → logprob: -13.012392044067383
    9. ' ' → logprob: -13.512392044067383
    10. '−' → logprob: -14.012392044067383

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. ']' → logprob: -16.87500762939453
    4. '１' → logprob: -17.37500762939453
    5. '<|end|>' → logprob: -17.37500762939453
    6. '۱' → logprob: -17.75000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '-' → logprob: -18.37500762939453
    9. '```' → logprob: -18.50000762939453
    10. '[' → logprob: -18.50000762939453

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054286062717437744
    2. ')' → logprob: -3.054286003112793
    3. '<|end|>' → logprob: -5.679286003112793
    4. ' ]' → logprob: -7.054286003112793
    5. '+' → logprob: -7.929286003112793
    6. ']
' → logprob: -8.304286003112793
    7. '<|end|>' → logprob: -8.929286003112793
    8. '-' → logprob: -9.054286003112793
    9. ' )' → logprob: -9.304286003112793
    10. '']' → logprob: -9.304286003112793

Token 99: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43195927143096924
    2. ' if' → logprob: -1.1819592714309692
    3. 'if' → logprob: -3.8069591522216797
    4. '<|end|>' → logprob: -5.68195915222168
    5. ' 
' → logprob: -5.80695915222168
    6. '-' → logprob: -5.93195915222168
    7. '   ' → logprob: -6.05695915222168
    8. ' ' → logprob: -6.68195915222168
    9. '    
' → logprob: -6.80695915222168
    10. '
' → logprob: -6.80695915222168

Token 100: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12747132778167725
    2. ' q' → logprob: -2.127471446990967
    3. '1' → logprob: -7.877471446990967
    4. '<|end|>' → logprob: -9.377470970153809
    5. '[q' → logprob: -10.752470970153809
    6. '	q' → logprob: -10.877470970153809
    7. ' ' → logprob: -10.877470970153809
    8. 'tmp' → logprob: -12.127470970153809
    9. '*q' → logprob: -12.877470970153809
    10. '<|end|>' → logprob: -13.127470970153809

Token 101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009146820520982146
    2. '2' → logprob: -7.000914573669434
    3. ' ' → logprob: -13.625914573669434
    4. '```' → logprob: -14.750914573669434
    5. ' [' → logprob: -14.875914573669434
    6. '[-' → logprob: -15.125914573669434
    7. '[
' → logprob: -15.250914573669434
    8. '(' → logprob: -16.12591552734375
    9. '{' → logprob: -16.37591552734375
    10. 's' → logprob: -16.50091552734375

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.4192871175473556e-05
    2. ' ' → logprob: -10.125054359436035
    3. '[' → logprob: -11.250054359436035
    4. '-' → logprob: -15.000054359436035
    5. '   ' → logprob: -15.625054359436035
    6. '  ' → logprob: -15.625054359436035
    7. '```' → logprob: -16.50005340576172
    8. ':' → logprob: -16.87505340576172
    9. ']' → logprob: -17.06255340576172
    10. '][' → logprob: -17.12505340576172

Token 103: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11352863907814026
    2. ')' → logprob: -2.2385287284851074
    3. '}' → logprob: -8.48852825164795
    4. ']
' → logprob: -8.61352825164795
    5. ')
' → logprob: -8.98852825164795
    6. ' ]' → logprob: -9.61352825164795
    7. '])' → logprob: -10.11352825164795
    8. '']' → logprob: -10.36352825164795
    9. '）' → logprob: -11.36352825164795
    10. ' )' → logprob: -11.98852825164795

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2182859182357788
    2. 'if' → logprob: -1.8432859182357788
    3. ' if' → logprob: -3.5932860374450684
    4. '\n' → logprob: -5.218286037445068
    5. 'ans' → logprob: -5.718286037445068
    6. '\' → logprob: -7.593286037445068
    7. '
' → logprob: -7.968286037445068
    8. '   ' → logprob: -8.21828556060791
    9. ' ans' → logprob: -9.46828556060791
    10. '    
' → logprob: -9.84328556060791

Token 105: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.490896075963974
    2. 'if' → logprob: -0.9908961057662964
    3. ' if' → logprob: -4.115896224975586
    4. '
' → logprob: -9.240896224975586
    5. '\n' → logprob: -9.615896224975586
    6. '   ' → logprob: -9.865896224975586
    7. '    
' → logprob: -9.990896224975586
    8. 'ans' (adapté à ' ans') → logprob: -9.990896224975586
    9. '  
' → logprob: -11.115896224975586
    10. '	if' → logprob: -12.240896224975586

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718925200402737
    2. '=' → logprob: -5.00671911239624
    3. '=min' → logprob: -12.631718635559082
    4. 'min' → logprob: -16.2567195892334
    5. '=max' → logprob: -16.8817195892334
    6. ' ' → logprob: -17.5067195892334
    7. ' =)' → logprob: -18.0067195892334
    8. '   ' → logprob: -18.5067195892334
    9. '＝' → logprob: -19.0067195892334
    10. ' >' → logprob: -19.1317195892334

Token 107: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6931478977203369
    2. 'min' → logprob: -0.6931478977203369
    3. 'tmp' → logprob: -15.193147659301758
    4. ' tmp' → logprob: -15.693147659301758
    5. '(min' → logprob: -15.818147659301758
    6. 'max' → logprob: -15.943147659301758
    7. '	min' → logprob: -16.818147659301758
    8. ' max' → logprob: -17.568147659301758
    9. ' ' → logprob: -18.818147659301758
    10. ' ' → logprob: -18.943147659301758

Token 108: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0015031944494694471
    2. '(' → logprob: -6.501502990722656
    3. '(tmp' → logprob: -14.501502990722656
    4. '(
' → logprob: -15.876502990722656
    5. '(answer' → logprob: -16.251502990722656
    6. 'ans' → logprob: -16.376502990722656
    7. ' (' → logprob: -17.626502990722656
    8. '(

' → logprob: -18.376502990722656
    9. '(an' → logprob: -18.626502990722656
    10. '	ans' → logprob: -18.626502990722656

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008681347593665123
    2. ',tmp' → logprob: -4.758681297302246
    3. ' ,' → logprob: -9.633681297302246
    4. '(tmp' → logprob: -14.008681297302246
    5. 'tmp' → logprob: -15.508681297302246
    6. ',
' → logprob: -16.133682250976562
    7. ' tmp' → logprob: -16.383682250976562
    8. ',temp' → logprob: -16.758682250976562
    9. '[tmp' → logprob: -16.758682250976562
    10. '/tmp' → logprob: -17.383682250976562

Token 110: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.04858759790658951
    2. 'tmp' → logprob: -3.0485875606536865
    3. '	tmp' → logprob: -16.423587799072266
    4. '/tmp' → logprob: -16.423587799072266
    5. '(tmp' → logprob: -17.548587799072266
    6. ' ' → logprob: -19.048587799072266
    7. '_tmp' → logprob: -19.173587799072266
    8. '$tmp' → logprob: -19.173587799072266
    9. '[tmp' → logprob: -19.298587799072266
    10. ' temp' → logprob: -19.298587799072266

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.060365608893335e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.500041007995605
    4. ')

' → logprob: -17.12504005432129
    5. ')`' → logprob: -18.12504005432129
    6. ')
' → logprob: -18.37504005432129
    7. '）' → logprob: -19.00004005432129
    8. '))' → logprob: -19.37504005432129
    9. '`)' → logprob: -19.37504005432129
    10. '),' → logprob: -19.37504005432129

Token 112: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.282920129597187e-05
    2. '
' → logprob: -11.875012397766113
    3. ' print' → logprob: -12.125012397766113
    4. '```' → logprob: -15.125012397766113
    5. '(print' → logprob: -17.50001335144043
    6. '#print' → logprob: -18.50001335144043
    7. '.print' → logprob: -19.00001335144043
    8. '<|end|>' → logprob: -19.00001335144043
    9. ')' → logprob: -19.37501335144043
    10. '
' → logprob: -19.37501335144043

Token 113: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04859236627817154
    2. '(' → logprob: -3.0485923290252686
    3. 'ans' → logprob: -13.673592567443848
    4. '(answer' → logprob: -13.798592567443848
    5. '()' → logprob: -13.923592567443848
    6. '(
' → logprob: -14.548592567443848
    7. '(a' → logprob: -15.173592567443848
    8. '(an' → logprob: -15.298592567443848
    9. ' (' → logprob: -15.548592567443848
    10. '(abs' → logprob: -16.04859161376953

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.5
    3. ')`' → logprob: -16.625
    4. '))' → logprob: -17.25
    5. ')
' → logprob: -17.625
    6. '')' → logprob: -19.25
    7. '()' → logprob: -19.5
    8. ')}' → logprob: -19.625
    9. '`)' → logprob: -19.75
    10. '),' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 43.75%
Précision (top 10): 82.14%
================================================================================
