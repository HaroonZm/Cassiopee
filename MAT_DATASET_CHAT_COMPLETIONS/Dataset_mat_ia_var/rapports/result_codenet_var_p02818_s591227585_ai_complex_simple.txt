================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys, math, functools, operator
def input(): return sys.stdin.readline()[:-1]
from itertools import islice, accumulate, chain, product, permutations, combinations, cycle
from collections import defaultdict, deque, Counter

sys.setrecursionlimit(10**7)

A, B, K = map(int, input().split())

out = list(
    islice(
        (
            (lambda a, b, k: (a - k, b) if k <= a else (0, max(0, b - (k - a))))(a, b, k)
            for a, b, k in [ (A, B, K) ]
        ),
        1
    )
)[0]

print(*out)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' math' (ID: 13324)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.011048882268369198
    2. ' os' → logprob: -4.511048793792725
    3. 'io' → logprob: -14.136049270629883
    4. 'math' → logprob: -15.386049270629883
    5. '"os' → logprob: -16.386049270629883
    6. ' getopt' → logprob: -16.761049270629883
    7. 'json' → logprob: -16.886049270629883
    8. 're' → logprob: -17.136049270629883
    9. '	os' → logprob: -18.011049270629883
    10. 'sub' → logprob: -18.386049270629883

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0253140926361084
    2. '<|end|>' → logprob: -1.1503140926361084
    3. ',' → logprob: -2.0253140926361084
    4. '\n' → logprob: -2.4003140926361084
    5. 'import' → logprob: -2.9003140926361084
    6. '<|end|>' → logprob: -4.2753143310546875
    7. '\' → logprob: -4.4003143310546875
    8. ';' → logprob: -4.9003143310546875
    9. '
' → logprob: -5.7753143310546875
    10. '```' → logprob: -6.2753143310546875

Token 5: ' functools' (ID: 142636)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.4518207907676697
    2. 'os' → logprob: -1.2018208503723145
    3. ' random' → logprob: -3.0768208503723145
    4. ' os' → logprob: -4.4518208503723145
    5. 're' → logprob: -6.7018208503723145
    6. 'statistics' → logprob: -6.9518208503723145
    7. 'cmath' → logprob: -7.2018208503723145
    8. 'json' → logprob: -7.7018208503723145
    9. 'collections' → logprob: -7.8268208503723145
    10. ' cm' → logprob: -8.451820373535156

Token 6: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2646438479423523
    2. ',' → logprob: -1.514643907546997
    3. '<|end|>' → logprob: -4.639643669128418
    4. '<|end|>' → logprob: -7.264643669128418
    5. '\n' → logprob: -7.764643669128418
    6. 'import' → logprob: -7.889643669128418
    7. '\' → logprob: -8.014643669128418
    8. '```' → logprob: -8.639643669128418
    9. ';' → logprob: -8.764643669128418
    10. 'as' → logprob: -8.889643669128418

Token 7: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.01564071886241436
    2. ' operator' → logprob: -4.890640735626221
    3. 'os' → logprob: -5.515640735626221
    4. 'it' → logprob: -5.640640735626221
    5. 'collections' → logprob: -8.890640258789062
    6. 're' → logprob: -9.265640258789062
    7. ' itertools' → logprob: -9.765640258789062
    8. 'heap' → logprob: -9.890640258789062
    9. 'random' → logprob: -10.265640258789062
    10. 'json' → logprob: -11.640640258789062

Token 8: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15733028948307037
    2. '.' → logprob: -2.032330274581909
    3. '<|end|>' → logprob: -4.407330513000488
    4. 'import' → logprob: -6.532330513000488
    5. '\' → logprob: -8.532330513000488
    6. '```' → logprob: -8.782330513000488
    7. '<|end|>' → logprob: -9.407330513000488
    8. 'as' → logprob: -9.657330513000488
    9. '\n' → logprob: -9.657330513000488
    10. ';' → logprob: -9.782330513000488

Token 9: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3717261552810669
    2. '.' → logprob: -1.621726155281067
    3. '<|end|>' → logprob: -2.4967260360717773
    4. 'import' → logprob: -4.496726036071777
    5. '\n' → logprob: -4.996726036071777
    6. '
' → logprob: -5.996726036071777
    7. '\' → logprob: -6.246726036071777
    8. ',
' → logprob: -6.496726036071777
    9. ';' → logprob: -6.621726036071777
    10. '```' → logprob: -6.746726036071777

Token 10: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1894112080335617
    2. ' factorial' → logprob: -2.064411163330078
    3. '_' → logprob: -4.189411163330078
    4. ' add' → logprob: -5.064411163330078
    5. '_factor' → logprob: -5.564411163330078
    6. ' calculate' → logprob: -5.814411163330078
    7. ' main' → logprob: -6.064411163330078
    8. ' max' → logprob: -6.564411163330078
    9. ' f' → logprob: -6.564411163330078
    10. ' _' → logprob: -6.564411163330078

Token 11: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003845794126391411
    2. '_' → logprob: -6.003845691680908
    3. '("("' → logprob: -8.128846168518066
    4. '()' → logprob: -8.503846168518066
    5. '():' → logprob: -8.503846168518066
    6. '('' → logprob: -8.878846168518066
    7. ' (' → logprob: -9.003846168518066
    8. 's' → logprob: -9.378846168518066
    9. '(
' → logprob: -10.253846168518066
    10. '("")' → logprob: -10.628846168518066

Token 12: ' return' (ID: 622)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7068763971328735
    2. ' input' → logprob: -0.8318763971328735
    3. ' ' → logprob: -2.706876277923584
    4. 'input' → logprob: -5.831876277923584
    5. ' return' → logprob: -7.331876277923584
    6. '    ' → logprob: -7.831876277923584
    7. ' system' → logprob: -8.831876754760742
    8. ''' → logprob: -8.956876754760742
    9. 'sys' → logprob: -9.206876754760742
    10. '  ' → logprob: -9.706876754760742

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.012715065851807594
    2. 'sys' → logprob: -4.512714862823486
    3. ' input' → logprob: -6.512714862823486
    4. 'input' → logprob: -8.762715339660645
    5. ' ' → logprob: -11.137715339660645
    6. ' next' → logprob: -12.387715339660645
    7. ' system' → logprob: -13.262715339660645
    8. ' ' → logprob: -14.137715339660645
    9. '	sys' → logprob: -14.512715339660645
    10. '(sys' → logprob: -14.762715339660645

Token 14: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008802352473139763
    2. '.stdin' → logprob: -5.13380241394043
    3. '.readline' → logprob: -6.38380241394043
    4. ' .' → logprob: -7.38380241394043
    5. '.stdout' → logprob: -8.75880241394043
    6. '.argv' → logprob: -9.13380241394043
    7. '[' → logprob: -9.63380241394043
    8. '.exit' → logprob: -10.38380241394043
    9. '.get' → logprob: -10.50880241394043
    10. '.setdefault' → logprob: -11.00880241394043

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.301394023466855e-05
    2. '.read' → logprob: -10.000062942504883
    3. '.' → logprob: -11.500062942504883
    4. 'read' → logprob: -12.000062942504883
    5. '.readlines' → logprob: -14.625062942504883
    6. ' readline' → logprob: -14.625062942504883
    7. '```' → logprob: -15.875062942504883
    8. '.buffer' → logprob: -16.500062942504883
    9. ' .' → logprob: -17.375062942504883
    10. '.Read' → logprob: -17.750062942504883

Token 16: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03541219234466553
    2. '().' → logprob: -4.160412311553955
    3. '(' → logprob: -4.910412311553955
    4. '()
' → logprob: -5.035412311553955
    5. '()\' → logprob: -5.785412311553955
    6. '
' → logprob: -7.035412311553955
    7. '(
' → logprob: -7.785412311553955
    8. '()

' → logprob: -7.785412311553955
    9. '```' → logprob: -9.410411834716797
    10. ')' → logprob: -9.660411834716797

Token 17: '[:-' (ID: 63556)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9544363021850586
    2. '(' → logprob: -1.8294363021850586
    3. '()' → logprob: -2.0794363021850586
    4. '\n' → logprob: -2.0794363021850586
    5. '  
' → logprob: -3.5794363021850586
    6. ' ' → logprob: -3.8294363021850586
    7. '\' → logprob: -3.9544363021850586
    8. '' → logprob: -4.079436302185059
    9. '<|end|>' → logprob: -4.079436302185059
    10. ' 
' → logprob: -4.079436302185059

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -16.0
    4. '\n' → logprob: -17.875
    5. '``' → logprob: -18.5
    6. '2' → logprob: -18.5
    7. '１' → logprob: -18.875
    8. 'newline' → logprob: -19.125
    9. '\' → logprob: -19.25
    10. '   ' → logprob: -19.625

Token 19: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ']' → logprob: -12.000022888183594
    3. '）' → logprob: -12.125022888183594
    4. '>' → logprob: -12.750022888183594
    5. '')' → logprob: -13.625022888183594
    6. ')>' → logprob: -13.625022888183594
    7. '<|end|>' → logprob: -13.625022888183594
    8. '`)' → logprob: -13.750022888183594
    9. ' )' → logprob: -14.000022888183594
    10. ')
' → logprob: -14.625022888183594

Token 20: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7507793307304382
    2. '
' → logprob: -2.000779390335083
    3. '\n' → logprob: -2.125779390335083
    4. 'n' → logprob: -2.250779390335083
    5. 'a' → logprob: -3.000779390335083
    6. 'd' → logprob: -3.375779390335083
    7. '' → logprob: -3.875779390335083
    8. '\' → logprob: -4.250779151916504
    9. 'x' → logprob: -5.000779151916504
    10. 'import' → logprob: -5.125779151916504

Token 21: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6170175075531006
    2. ' math' → logprob: -1.1170175075531006
    3. ' functools' → logprob: -2.8670175075531006
    4. ' itertools' → logprob: -3.1170175075531006
    5. ' typing' → logprob: -3.7420175075531006
    6. ' io' → logprob: -5.86701774597168
    7. ' os' → logprob: -6.49201774597168
    8. 'collections' → logprob: -6.61701774597168
    9. ' operator' → logprob: -6.86701774597168
    10. ' sys' → logprob: -7.11701774597168

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06998634338378906
    2. 'import' → logprob: -2.694986343383789
    3. '	import' → logprob: -10.319986343383789
    4. '_import' → logprob: -12.194986343383789
    5. '.import' → logprob: -12.569986343383789
    6. '.im' → logprob: -13.069986343383789
    7. ' im' → logprob: -13.569986343383789
    8. '-import' → logprob: -14.069986343383789
    9. '.' → logprob: -14.194986343383789
    10. 'ertools' → logprob: -14.444986343383789

Token 23: ' is' (ID: 382)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.4414061307907104
    2. 'count' → logprob: -1.8164061307907104
    3. 'com' → logprob: -1.9414061307907104
    4. 'per' → logprob: -2.44140625
    5. 'product' → logprob: -2.69140625
    6. 'group' → logprob: -2.69140625
    7. ' group' → logprob: -2.81640625
    8. 'acc' → logprob: -2.94140625
    9. ' combinations' → logprob: -3.31640625
    10. ' product' → logprob: -3.56640625

Token 24: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.010469821281731129
    2. 'f' → logprob: -5.760469913482666
    3. 't' → logprob: -5.760469913482666
    4. 'finite' → logprob: -6.260469913482666
    5. 'l' → logprob: -7.510469913482666
    6. 'ple' → logprob: -7.885469913482666
    7. 'lic' → logprob: -8.635469436645508
    8. 'per' → logprob: -9.010469436645508
    9. '```' → logprob: -9.260469436645508
    10. 'ertools' → logprob: -9.385469436645508

Token 25: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9464636445045471
    2. 'for' → logprob: -1.1964635848999023
    3. '<|end|>' → logprob: -2.3214635848999023
    4. ',' → logprob: -2.8214635848999023
    5. 'import' → logprob: -3.0714635848999023
    6. '
' → logprob: -3.6964635848999023
    7. '\n' → logprob: -4.321463584899902
    8. '(' → logprob: -4.446463584899902
    9. ' for' → logprob: -4.446463584899902
    10. '#' → logprob: -4.446463584899902

Token 26: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8006535768508911
    2. 'chain' → logprob: -1.9256535768508911
    3. 'take' → logprob: -2.0506534576416016
    4. 'cycle' → logprob: -2.1756534576416016
    5. 'acc' → logprob: -3.0506534576416016
    6. 'tee' → logprob: -3.5506534576416016
    7. 'group' → logprob: -3.5506534576416016
    8. 'per' → logprob: -3.8006534576416016
    9. 'com' → logprob: -4.675653457641602
    10. 'st' → logprob: -5.175653457641602

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3978855609893799
    2. 'def' → logprob: -2.39788556098938
    3. '
' → logprob: -2.89788556098938
    4. 'import' → logprob: -3.14788556098938
    5. '<|end|>' → logprob: -3.27288556098938
    6. '\n' → logprob: -3.89788556098938
    7. '(' → logprob: -4.147885322570801
    8. ',
' → logprob: -4.147885322570801
    9. '\' → logprob: -4.522885322570801
    10. '```' → logprob: -4.772885322570801

Token 28: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.7032699584960938
    2. ' group' → logprob: -1.3282699584960938
    3. 'chain' → logprob: -2.4532699584960938
    4. 'group' → logprob: -2.8282699584960938
    5. ' product' → logprob: -3.9532699584960938
    6. 'product' → logprob: -4.703269958496094
    7. 'take' → logprob: -4.703269958496094
    8. ' permutations' → logprob: -4.703269958496094
    9. ' take' → logprob: -4.953269958496094
    10. ' pair' → logprob: -5.078269958496094

Token 29: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3847658038139343
    2. ',' → logprob: -2.259765863418579
    3. '<|end|>' → logprob: -2.634765863418579
    4. '\n' → logprob: -2.759765863418579
    5. 'def' → logprob: -3.259765863418579
    6. 'import' → logprob: -4.759765625
    7. ',
' → logprob: -5.009765625
    8. '<|end|>' → logprob: -5.134765625
    9. '

' → logprob: -5.384765625
    10. 'for' → logprob: -6.009765625

Token 30: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.472759872674942
    2. 'product' → logprob: -2.222759962081909
    3. 'per' → logprob: -3.222759962081909
    4. 'group' → logprob: -3.347759962081909
    5. 'repeat' → logprob: -3.472759962081909
    6. 'take' → logprob: -3.597759962081909
    7. 'compress' → logprob: -3.847759962081909
    8. ' product' → logprob: -3.972759962081909
    9. ' permutations' → logprob: -4.22275972366333
    10. ' group' → logprob: -4.47275972366333

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38896259665489197
    2. '(' → logprob: -2.513962507247925
    3. '<|end|>' → logprob: -2.513962507247925
    4. '
' → logprob: -2.888962507247925
    5. '(
' → logprob: -3.638962507247925
    6. 'def' → logprob: -4.013962745666504
    7. ',
' → logprob: -4.388962745666504
    8. 'import' → logprob: -4.888962745666504
    9. '\n' → logprob: -5.138962745666504
    10. ')' → logprob: -5.138962745666504

Token 32: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1441025584936142
    2. 'per' → logprob: -2.7691025733947754
    3. ' permutations' → logprob: -3.6441025733947754
    4. 'st' → logprob: -4.769102573394775
    5. 'repeat' → logprob: -4.769102573394775
    6. 'group' → logprob: -5.144102573394775
    7. 'compress' → logprob: -5.394102573394775
    8. ' combinations' → logprob: -5.894102573394775
    9. 'filter' → logprob: -6.144102573394775
    10. 'zip' → logprob: -6.269102573394775

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04310355708003044
    2. '<|end|>' → logprob: -3.9181034564971924
    3. '(' → logprob: -4.1681036949157715
    4. ')' → logprob: -6.9181036949157715
    5. ',
' → logprob: -7.0431036949157715
    6. '(
' → logprob: -7.0431036949157715
    7. 'import' → logprob: -7.1681036949157715
    8. '()' → logprob: -7.4181036949157715
    9. ' ' → logprob: -7.6681036949157715
    10. 'from' → logprob: -7.7931036949157715

Token 34: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.05076039582490921
    2. ' combinations' → logprob: -3.050760507583618
    3. '```' → logprob: -7.550760269165039
    4. 'group' → logprob: -8.050760269165039
    5. '	com' → logprob: -8.300760269165039
    6. 'cycle' → logprob: -8.925760269165039
    7. ' ' → logprob: -9.175760269165039
    8. 'comb' → logprob: -9.175760269165039
    9. 'compress' → logprob: -9.300760269165039
    10. 'zip' → logprob: -9.550760269165039

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5169684290885925
    2. '<|end|>' → logprob: -1.0169684886932373
    3. '\n' → logprob: -4.516968250274658
    4. '(' → logprob: -5.016968250274658
    5. 'import' → logprob: -5.141968250274658
    6. '<|end|>' → logprob: -5.766968250274658
    7. '
' → logprob: -5.766968250274658
    8. ',
' → logprob: -6.016968250274658
    9. ')' → logprob: -6.141968250274658
    10. '(
' → logprob: -6.266968250274658

Token 36: ' cycle' (ID: 15839)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.027636827901005745
    2. 'group' → logprob: -4.527637004852295
    3. ' group' → logprob: -5.402637004852295
    4. ' combinations' → logprob: -5.527637004852295
    5. 'compress' → logprob: -6.152637004852295
    6. '```' → logprob: -7.152637004852295
    7. 'deque' → logprob: -7.152637004852295
    8. 'cycle' → logprob: -7.277637004852295
    9. '	com' → logprob: -7.402637004852295
    10. 'filter' → logprob: -7.902637004852295

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.530086100101471
    2. ' collections' → logprob: -1.0300860404968262
    3. 'heap' → logprob: -4.280086040496826
    4. ' heap' → logprob: -4.405086040496826
    5. ' fractions' → logprob: -4.905086040496826
    6. 'fra' → logprob: -5.530086040496826
    7. ' math' → logprob: -5.655086040496826
    8. 'math' → logprob: -5.780086040496826
    9. ' bis' → logprob: -6.405086040496826
    10. 'bis' → logprob: -6.530086040496826

Token 40: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6644028425216675
    2. 'abc' → logprob: -1.2894028425216675
    3. '.' → logprob: -1.6644028425216675
    4. '.Counter' → logprob: -4.414402961730957
    5. ' import' → logprob: -5.039402961730957
    6. '<|end|>' → logprob: -8.539402961730957
    7. 'from' → logprob: -8.789402961730957
    8. ' ' → logprob: -8.789402961730957
    9. 'module' → logprob: -9.039402961730957
    10. '```' → logprob: -9.414402961730957

Token 41: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6765004396438599
    2. ' defaultdict' → logprob: -1.3015004396438599
    3. ' deque' → logprob: -1.5515004396438599
    4. 'default' → logprob: -4.92650032043457
    5. 'named' → logprob: -9.55150032043457
    6. ' Counter' → logprob: -9.67650032043457
    7. 'Counter' → logprob: -9.67650032043457
    8. 'abc' → logprob: -10.17650032043457
    9. 'de' → logprob: -10.30150032043457
    10. ' named' → logprob: -10.92650032043457

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07903376966714859
    2. 'import' → logprob: -2.954033851623535
    3. 'def' → logprob: -4.704033851623535
    4. ',
' → logprob: -5.829033851623535
    5. 'from' → logprob: -5.954033851623535
    6. '
' → logprob: -6.204033851623535
    7. '<|end|>' → logprob: -6.579033851623535
    8. '```' → logprob: -6.704033851623535
    9. '

' → logprob: -7.329033851623535
    10. '\' → logprob: -7.579033851623535

Token 43: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07626209408044815
    2. ' deque' → logprob: -2.9512619972229004
    3. 'Counter' → logprob: -3.9512619972229004
    4. ' Counter' → logprob: -6.3262619972229
    5. 'named' → logprob: -9.951262474060059
    6. 'Ordered' → logprob: -10.201262474060059
    7. 'Deque' → logprob: -10.826262474060059
    8. 'de' → logprob: -11.076262474060059
    9. ' named' → logprob: -12.076262474060059
    10. 'counter' → logprob: -12.701262474060059

Token 44: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.030096987262368202
    2. ' Counter' → logprob: -4.030097007751465
    3. 'Ordered' → logprob: -5.155097007751465
    4. 'named' → logprob: -5.155097007751465
    5. ' named' → logprob: -8.405097007751465
    6. 'heap' → logprob: -10.530097007751465
    7. 'bis' → logprob: -10.530097007751465
    8. ' Ordered' → logprob: -10.780097007751465
    9. 'deque' → logprob: -10.905097007751465
    10. 'Chain' → logprob: -12.030097007751465

Token 46: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8263423442840576
    2. 'import' → logprob: -1.7013423442840576
    3. '
' → logprob: -1.9513423442840576
    4. ',' → logprob: -2.4513423442840576
    5. '#' → logprob: -3.0763423442840576
    6. 'from' → logprob: -3.8263423442840576
    7. '\n' → logprob: -3.8263423442840576
    8. 'class' → logprob: -4.451342582702637
    9. '\' → logprob: -4.451342582702637
    10. '' → logprob: -4.826342582702637

Token 47: 'sys' (ID: 17324)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9588696956634521
    2. 'd' → logprob: -1.3338696956634521
    3. 'def' → logprob: -1.8338696956634521
    4. 'a' → logprob: -2.833869695663452
    5. '#' → logprob: -3.333869695663452
    6. 'class' → logprob: -3.583869695663452
    7. '_' → logprob: -3.958869695663452
    8. '@' → logprob: -4.083869934082031
    9. 'N' → logprob: -5.333869934082031
    10. 'import' → logprob: -5.708869934082031

Token 48: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002560945285949856
    2. '.stdin' → logprob: -9.250256538391113
    3. '.stdout' → logprob: -10.000256538391113
    4. '.readline' → logprob: -10.500256538391113
    5. '.exit' → logprob: -10.750256538391113
    6. '.setdefault' → logprob: -10.750256538391113
    7. '.argv' → logprob: -11.000256538391113
    8. '.stderr' → logprob: -12.125256538391113
    9. '.user' → logprob: -13.000256538391113
    10. ' .' → logprob: -13.250256538391113

Token 49: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.012061364948749542
    2. '_rec' → logprob: -5.012061595916748
    3. '_limit' → logprob: -5.887061595916748
    4. 'limit' → logprob: -6.512061595916748
    5. 'ursion' → logprob: -8.01206111907959
    6. ' recursion' → logprob: -8.76206111907959
    7. 'set' → logprob: -9.38706111907959
    8. '_version' → logprob: -9.38706111907959
    9. '_max' → logprob: -10.13706111907959
    10. 'ault' → logprob: -10.13706111907959

Token 50: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -7.553032628493384e-05
    2. 'urs' → logprob: -9.750075340270996
    3. 'ursive' → logprob: -11.625075340270996
    4. 'ur' → logprob: -12.500075340270996
    5. 'limit' → logprob: -13.625075340270996
    6. 'usion' → logprob: -14.000075340270996
    7. 'ursor' → logprob: -14.000075340270996
    8. 'urf' → logprob: -14.500075340270996
    9. 'urst' → logprob: -14.500075340270996
    10. 'urse' → logprob: -15.250075340270996

Token 51: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.2007883671903983e-05
    2. '_limit' → logprob: -10.750021934509277
    3. ' limit' → logprob: -15.875021934509277
    4. 'depth' → logprob: -15.875021934509277
    5. '-limit' → logprob: -16.375022888183594
    6. '.limit' → logprob: -17.750022888183594
    7. 'Limit' → logprob: -18.625022888183594
    8. '-' → logprob: -18.625022888183594
    9. 'lim' → logprob: -18.625022888183594
    10. '_LIMIT' → logprob: -18.750022888183594

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '((' → logprob: -15.125000953674316
    3. '(
' → logprob: -16.0
    4. ' (' → logprob: -16.25
    5. '(int' → logprob: -16.625
    6. '(

' → logprob: -17.625
    7. '100' → logprob: -17.75
    8. '()' → logprob: -17.75
    9. '('' → logprob: -19.0
    10. '(sys' → logprob: -19.125

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014181838370859623
    2. '100' → logprob: -4.264181613922119
    3. '300' → logprob: -11.639182090759277
    4. '200' → logprob: -12.389182090759277
    5. '500' → logprob: -13.264182090759277
    6. 'pow' → logprob: -14.264182090759277
    7. '999' → logprob: -14.389182090759277
    8. '1' → logprob: -14.514182090759277
    9. '400' → logprob: -14.514182090759277
    10. 'int' → logprob: -15.264182090759277

Token 54: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.1285625398159027
    2. '**' → logprob: -2.1285624504089355
    3. '8' → logprob: -6.6285624504089355
    4. '6' → logprob: -8.628562927246094
    5. '07' → logprob: -9.003562927246094
    6. '```' → logprob: -12.253562927246094
    7. '9' → logprob: -13.503562927246094
    8. '00' → logprob: -13.878562927246094
    9. '000' → logprob: -14.003562927246094
    10. '*' → logprob: -14.753562927246094

Token 55: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014456349425017834
    2. '9' → logprob: -4.264456272125244
    3. '8' → logprob: -8.139456748962402
    4. '6' → logprob: -13.764456748962402
    5. '**' → logprob: -16.889455795288086
    6. '```' → logprob: -18.639455795288086
    7. '７' → logprob: -20.514455795288086
    8. '10' → logprob: -21.014455795288086
    9. '+' → logprob: -21.139455795288086
    10. '​' → logprob: -22.264455795288086

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.0
    3. ')
' → logprob: -17.375
    4. '))' → logprob: -18.75
    5. ')

' → logprob: -19.75
    6. '),' → logprob: -19.875
    7. '}' → logprob: -20.375
    8. '）' → logprob: -20.875
    9. ')`' → logprob: -21.25
    10. '6' → logprob: -21.5

Token 57: 'A' (ID: 32)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7280390858650208
    2. 'class' → logprob: -1.228039026260376
    3. 'N' → logprob: -2.103039026260376
    4. 'def' → logprob: -2.353039026260376
    5. 'a' → logprob: -6.103039264678955
    6. '#' → logprob: -6.353039264678955
    7. 'A' → logprob: -6.853039264678955
    8. 'H' → logprob: -7.103039264678955
    9. 'd' → logprob: -7.853039264678955
    10. '@' → logprob: -9.103038787841797

Token 58: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7443304061889648
    2. '=' → logprob: -0.8693304061889648
    3. ',' → logprob: -2.494330406188965
    4. ' ' → logprob: -4.369330406188965
    5. '[' → logprob: -5.744330406188965
    6. '=[]' → logprob: -6.119330406188965
    7. '_' → logprob: -6.244330406188965
    8. '[:]' → logprob: -6.869330406188965
    9. '=[' → logprob: -8.119330406188965
    10. '.' → logprob: -8.244330406188965

Token 59: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.26080039143562317
    2. ' B' → logprob: -1.5108003616333008
    3. 'K' → logprob: -5.510800361633301
    4. 'N' → logprob: -6.385800361633301
    5. ' K' → logprob: -7.135800361633301
    6. 'b' → logprob: -7.260800361633301
    7. 'k' → logprob: -8.2608003616333
    8. ' N' → logprob: -8.2608003616333
    9. 'n' → logprob: -8.3858003616333
    10. 'Q' → logprob: -8.3858003616333

Token 60: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.586288571357727
    2. ' =' → logprob: -0.836288571357727
    3. ',' → logprob: -4.5862884521484375
    4. '=input' → logprob: -10.211288452148438
    5. '=int' → logprob: -10.711288452148438
    6. '<|end|>' → logprob: -11.211288452148438
    7. ' ,' → logprob: -11.336288452148438
    8. ' ' → logprob: -11.836288452148438
    9. '.' → logprob: -12.711288452148438
    10. ')' → logprob: -13.586288452148438

Token 61: ' K' (ID: 658)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03238438069820404
    2. ' C' → logprob: -3.9073843955993652
    3. 'K' → logprob: -5.032384395599365
    4. '=' → logprob: -6.657384395599365
    5. 'N' → logprob: -6.657384395599365
    6. 'Q' → logprob: -7.157384395599365
    7. ' =' → logprob: -7.157384395599365
    8. ' K' → logprob: -8.157383918762207
    9. 'n' → logprob: -9.282383918762207
    10. '_' → logprob: -9.657383918762207

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197037547826767
    2. ' =' → logprob: -2.8119704723358154
    3. ',' → logprob: -13.686970710754395
    4. '=input' → logprob: -13.936970710754395
    5. '=int' → logprob: -15.061970710754395
    6. '＝' → logprob: -16.311969757080078
    7. '=list' → logprob: -16.561969757080078
    8. '=

' → logprob: -16.561969757080078
    9. '=sys' → logprob: -16.811969757080078
    10. ' ' → logprob: -17.186969757080078

Token 63: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740861654281616
    2. ' map' → logprob: -0.9740861654281616
    3. 'input' → logprob: -12.474085807800293
    4. 'list' → logprob: -13.474085807800293
    5. '	map' → logprob: -13.849085807800293
    6. '[' → logprob: -14.224085807800293
    7. ' ' → logprob: -14.349085807800293
    8. ' input' → logprob: -14.349085807800293
    9. ' list' → logprob: -15.099085807800293
    10. '(map' → logprob: -15.349085807800293

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03007257729768753
    2. '(' → logprob: -3.5300726890563965
    3. '(str' → logprob: -8.655072212219238
    4. '(input' → logprob: -8.905072212219238
    5. 'int' → logprob: -12.905072212219238
    6. '(lambda' → logprob: -12.905072212219238
    7. '(list' → logprob: -13.280072212219238
    8. '(
' → logprob: -13.405072212219238
    9. '(eval' → logprob: -13.905072212219238
    10. '(tuple' → logprob: -14.155072212219238

Token 65: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.06547395139932632
    2. ',' → logprob: -2.940474033355713
    3. '(input' → logprob: -4.690474033355713
    4. 'input' → logprob: -6.690474033355713
    5. '(' → logprob: -9.815473556518555
    6. ')' → logprob: -10.815473556518555
    7. ' ,' → logprob: -11.065473556518555
    8. ' input' → logprob: -11.315473556518555
    9. ',(' → logprob: -13.190473556518555
    10. '```' → logprob: -13.815473556518555

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020552983507514
    2. ' input' → logprob: -3.89555287361145
    3. ')' → logprob: -12.145552635192871
    4. 'sys' → logprob: -12.520552635192871
    5. '(input' → logprob: -14.145552635192871
    6. '=input' → logprob: -15.395552635192871
    7. ' sys' → logprob: -15.395552635192871
    8. ' ' → logprob: -15.395552635192871
    9. ',input' → logprob: -15.770552635192871
    10. '```' → logprob: -15.895552635192871

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0445471927523613
    2. '())' → logprob: -3.2945470809936523
    3. '()' → logprob: -5.044547080993652
    4. ')' → logprob: -10.419547080993652
    5. '());' → logprob: -13.044547080993652
    6. '(' → logprob: -13.294547080993652
    7. '()`' → logprob: -13.669547080993652
    8. '()))' → logprob: -13.919547080993652
    9. '();)' → logprob: -14.294547080993652
    10. ' ())' → logprob: -14.544547080993652

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.747814349073451e-05
    2. 'strip' → logprob: -11.000017166137695
    3. ' split' → logprob: -14.875017166137695
    4. '(split' → logprob: -15.625017166137695
    5. 'rstrip' → logprob: -15.625017166137695
    6. ')' → logprob: -17.125017166137695
    7. 'plit' → logprob: -18.500017166137695
    8. 'spl' → logprob: -19.375017166137695
    9. '.split' → logprob: -19.625017166137695
    10. '_split' → logprob: -20.000017166137695

Token 69: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06434604525566101
    2. '())' → logprob: -2.8143460750579834
    3. '()' → logprob: -6.064345836639404
    4. '))' → logprob: -10.314346313476562
    5. '(' → logprob: -11.689346313476562
    6. '),' → logprob: -13.439346313476562
    7. ')`' → logprob: -13.689346313476562
    8. ')")' → logprob: -13.689346313476562
    9. '()))' → logprob: -13.814346313476562
    10. '`)' → logprob: -14.189346313476562

Token 70: 'out' (ID: 468)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26324981451034546
    2. 'a' → logprob: -2.5132498741149902
    3. 'if' → logprob: -3.1382498741149902
    4. 'result' → logprob: -3.8882498741149902
    5. 'ans' → logprob: -4.13824987411499
    6. 'dp' → logprob: -4.26324987411499
    7. 'd' → logprob: -4.63824987411499
    8. 'res' → logprob: -5.13824987411499
    9. 'answer' → logprob: -5.13824987411499
    10. 'x' → logprob: -5.38824987411499

Token 71: ' =' (ID: 314)
  Prédit: 'puts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'puts' → logprob: -0.38977327942848206
    2. 'put' → logprob: -1.1397732496261597
    3. '=' → logprob: -6.764773368835449
    4. '_put' → logprob: -7.514773368835449
    5. 'p' → logprob: -7.889773368835449
    6. '1' → logprob: -8.51477336883545
    7. 'pts' → logprob: -8.88977336883545
    8. 'pt' → logprob: -9.26477336883545
    9. '_' → logprob: -9.63977336883545
    10. 's' → logprob: -9.63977336883545

Token 72: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004629838280379772
    2. 'min' → logprob: -6.629629611968994
    3. 'set' → logprob: -7.129629611968994
    4. ' []' → logprob: -7.629629611968994
    5. 'list' → logprob: -7.629629611968994
    6. '[' → logprob: -7.879629611968994
    7. '""' → logprob: -8.629630088806152
    8. '[]
' → logprob: -8.879630088806152
    9. '[min' → logprob: -9.004630088806152
    10. '"' → logprob: -9.504630088806152

Token 73: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3403991460800171
    2. '(range' → logprob: -1.840399146080017
    3. '(chain' → logprob: -2.3403992652893066
    4. '(product' → logprob: -3.9653992652893066
    5. '(com' → logprob: -4.965399265289307
    6. '(filter' → logprob: -5.715399265289307
    7. '(operator' → logprob: -6.840399265289307
    8. '((' → logprob: -7.090399265289307
    9. '<|end|>' → logprob: -7.340399265289307
    10. '(per' → logprob: -7.840399265289307

Token 74: '   ' (ID: 271)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.78196120262146
    2. 'range' → logprob: -2.15696120262146
    3. '(per' → logprob: -2.28196120262146
    4. '(com' → logprob: -2.65696120262146
    5. '(chain' → logprob: -2.78196120262146
    6. '(product' → logprob: -3.28196120262146
    7. 'chain' → logprob: -3.65696120262146
    8. '(is' → logprob: -3.78196120262146
    9. 'product' → logprob: -3.90696120262146
    10. 'per' → logprob: -4.156961441040039

Token 75: ' is' (ID: 382)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.278223991394043
    2. 'filter' → logprob: -1.403223991394043
    3. 'chain' → logprob: -1.653223991394043
    4. 'is' (adapté à ' is') → logprob: -2.528223991394043
    5. 'per' → logprob: -2.778223991394043
    6. 'com' → logprob: -3.028223991394043
    7. 'set' → logprob: -3.903223991394043
    8. 'product' → logprob: -4.153223991394043
    9. 'acc' → logprob: -4.528223991394043
    10. 'sorted' → logprob: -4.528223991394043

Token 76: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.5451681974809617e-05
    2. 'slice' → logprob: -11.125015258789062
    3. '_slice' → logprob: -14.625015258789062
    4. 'licing' → logprob: -16.750015258789062
    5. 'lices' → logprob: -16.750015258789062
    6. 'chain' → logprob: -17.250015258789062
    7. 'lace' → logprob: -18.125015258789062
    8. 'liced' → logprob: -18.125015258789062
    9. 'ice' → logprob: -19.125015258789062
    10. 'plit' → logprob: -19.625015258789062

Token 77: '(
' (ID: 1607)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.9768677353858948
    2. '(chain' → logprob: -1.10186767578125
    3. '(' → logprob: -1.72686767578125
    4. '(range' → logprob: -2.47686767578125
    5. '(c' → logprob: -3.85186767578125
    6. '(
' → logprob: -5.60186767578125
    7. '(com' → logprob: -6.35186767578125
    8. '(per' → logprob: -7.10186767578125
    9. '((' → logprob: -7.72686767578125
    10. '(it' → logprob: -7.97686767578125

Token 78: '       ' (ID: 309)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(product' → logprob: -1.1495318412780762
    2. '(chain' → logprob: -1.2745318412780762
    3. '(range' → logprob: -1.5245318412780762
    4. '(per' → logprob: -2.524531841278076
    5. '(' → logprob: -3.649531841278076
    6. 'product' → logprob: -4.024531841278076
    7. '(filter' → logprob: -4.399531841278076
    8. 'chain' → logprob: -4.649531841278076
    9. '(com' → logprob: -4.649531841278076
    10. 'range' → logprob: -5.024531841278076

Token 79: ' (
' (ID: 4112)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.3088696599006653
    2. '   ' → logprob: -1.8088696002960205
    3. 'chain' → logprob: -3.1838696002960205
    4. 'per' → logprob: -4.0588698387146
    5. '(filter' → logprob: -4.0588698387146
    6. '(per' → logprob: -5.0588698387146
    7. 'com' → logprob: -5.5588698387146
    8. 'product' → logprob: -5.6838698387146
    9. '(chain' → logprob: -5.9338698387146
    10. '(i' → logprob: -6.8088698387146

Token 80: '           ' (ID: 352)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.759535014629364
    2. 'x' → logprob: -1.7595350742340088
    3. 'i' → logprob: -2.134535074234009
    4. 'chain' → logprob: -2.884535074234009
    5. 'range' → logprob: -3.134535074234009
    6. '   ' → logprob: -3.134535074234009
    7. 'a' → logprob: -4.00953483581543
    8. 'c' → logprob: -4.75953483581543
    9. 'per' → logprob: -4.88453483581543
    10. 'p' → logprob: -4.88453483581543

Token 81: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5666497349739075
    2. 'a' → logprob: -1.6916496753692627
    3. 'i' → logprob: -2.3166496753692627
    4. 'filter' → logprob: -2.6916496753692627
    5. 'chain' → logprob: -4.441649913787842
    6. 'k' → logprob: -5.066649913787842
    7. 'p' → logprob: -5.066649913787842
    8. 'c' → logprob: -5.191649913787842
    9. '(x' → logprob: -5.191649913787842
    10. 'str' → logprob: -5.316649913787842

Token 82: 'lambda' (ID: 35280)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15481720864772797
    2. 'i' → logprob: -2.9048171043395996
    3. 'x' → logprob: -3.2798171043395996
    4. '(a' → logprob: -3.7798171043395996
    5. '(i' → logprob: -4.6548171043396
    6. 'min' → logprob: -5.5298171043396
    7. 'A' → logprob: -5.7798171043396
    8. 'str' → logprob: -6.1548171043396
    9. 'max' → logprob: -6.2798171043396
    10. '(x' → logprob: -6.9048171043396

Token 83: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6081915497779846
    2. 'a' → logprob: -1.2331914901733398
    3. 'i' → logprob: -2.35819149017334
    4. ' x' → logprob: -3.73319149017334
    5. ' a' → logprob: -4.60819149017334
    6. 'n' → logprob: -4.60819149017334
    7. ' i' → logprob: -5.35819149017334
    8. 'k' → logprob: -5.48319149017334
    9. 's' → logprob: -6.23319149017334
    10. 'c' → logprob: -6.35819149017334

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03903723135590553
    2. ',b' → logprob: -3.2890372276306152
    3. ' ,' → logprob: -8.039037704467773
    4. 'b' → logprob: -8.414037704467773
    5. 'a' → logprob: -9.164037704467773
    6. ',k' → logprob: -9.289037704467773
    7. ':' → logprob: -9.789037704467773
    8. ',a' → logprob: -10.164037704467773
    9. ',i' → logprob: -10.789037704467773
    10. ',n' → logprob: -10.914037704467773

Token 85: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07979901880025864
    2. ' b' → logprob: -2.579798936843872
    3. 'i' → logprob: -8.704798698425293
    4. 'k' → logprob: -8.829798698425293
    5. '   ' → logprob: -9.579798698425293
    6. 'a' → logprob: -9.704798698425293
    7. ' ' → logprob: -9.704798698425293
    8. 'c' → logprob: -9.954798698425293
    9. 'l' → logprob: -10.392298698425293
    10. 'n' → logprob: -10.392298698425293

Token 86: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006734676193445921
    2. ',' → logprob: -5.506734848022461
    3. ' :' → logprob: -6.631734848022461
    4. ':(' → logprob: -7.256734848022461
    5. ':a' → logprob: -9.131734848022461
    6. '=' → logprob: -9.631734848022461
    7. 'a' → logprob: -9.756734848022461
    8. ':
' → logprob: -9.756734848022461
    9. '       ' → logprob: -10.131734848022461
    10. ',a' → logprob: -10.256734848022461

Token 87: ' k' (ID: 372)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6596529483795166
    2. 'k' → logprob: -1.6596529483795166
    3. ' c' → logprob: -1.9096529483795166
    4. ' k' → logprob: -3.1596529483795166
    5. 'a' → logprob: -3.6596529483795166
    6. 'x' → logprob: -4.1596527099609375
    7. 'i' → logprob: -4.1596527099609375
    8. ' a' → logprob: -5.4096527099609375
    9. ' i' → logprob: -5.5346527099609375
    10. ' x' → logprob: -5.5346527099609375

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014586892211809754
    2. ' :' → logprob: -7.251458644866943
    3. ':(' → logprob: -8.001459121704102
    4. ',' → logprob: -9.251459121704102
    5. ':a' → logprob: -9.251459121704102
    6. '=' → logprob: -9.751459121704102
    7. ':
' → logprob: -9.876459121704102
    8. 'a' → logprob: -10.126459121704102
    9. ':k' → logprob: -11.876459121704102
    10. ',:' → logprob: -12.126459121704102

Token 89: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.635484516620636
    2. '(a' → logprob: -1.3854844570159912
    3. ' a' → logprob: -2.635484457015991
    4. ' (' → logprob: -3.635484457015991
    5. 'str' → logprob: -4.26048469543457
    6. '(i' → logprob: -4.76048469543457
    7. '(' → logprob: -4.76048469543457
    8. '(str' → logprob: -5.01048469543457
    9. '[a' → logprob: -5.13548469543457
    10. 'b' → logprob: -5.13548469543457

Token 90: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04781466722488403
    2. '(a' → logprob: -4.297814846038818
    3. 'i' → logprob: -5.047814846038818
    4. 'str' → logprob: -5.172814846038818
    5. ' a' → logprob: -5.672814846038818
    6. 'b' → logprob: -5.797814846038818
    7. 'max' → logprob: -5.922814846038818
    8. 'x' → logprob: -6.047814846038818
    9. 'k' → logprob: -6.672814846038818
    10. '(i' → logprob: -6.797814846038818

Token 91: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10202343016862869
    2. ' if' → logprob: -3.2270233631134033
    3. '+' → logprob: -3.7270233631134033
    4. ' +' → logprob: -4.852023601531982
    5. '+b' → logprob: -4.977023601531982
    6. ',b' → logprob: -5.102023601531982
    7. '-' → logprob: -5.352023601531982
    8. 'if' → logprob: -6.102023601531982
    9. ' -' → logprob: -6.977023601531982
    10. '*' → logprob: -7.102023601531982

Token 92: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09096083790063858
    2. ' k' → logprob: -3.215960741043091
    3. '1' → logprob: -3.715960741043091
    4. 'b' → logprob: -4.09096097946167
    5. ' ' → logprob: -6.34096097946167
    6. ' b' → logprob: -6.46596097946167
    7. 'i' → logprob: -7.34096097946167
    8. 'c' → logprob: -7.71596097946167
    9. 'min' → logprob: -7.84096097946167
    10. 'a' → logprob: -9.028460502624512

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02620496042072773
    2. ' if' → logprob: -4.026205062866211
    3. ' +' → logprob: -5.526205062866211
    4. ' ,' → logprob: -6.276205062866211
    5. ')' → logprob: -7.401205062866211
    6. '),' → logprob: -7.901205062866211
    7. 'if' → logprob: -8.026205062866211
    8. '+' → logprob: -8.151205062866211
    9. ',b' → logprob: -9.026205062866211
    10. ' -' → logprob: -9.526205062866211

Token 94: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.39908328652381897
    2. ' b' → logprob: -1.1490832567214966
    3. ' ' → logprob: -5.774083137512207
    4. 'B' → logprob: -6.399083137512207
    5. 'a' → logprob: -6.524083137512207
    6. '0' → logprob: -6.524083137512207
    7. ' B' → logprob: -7.024083137512207
    8. ' a' → logprob: -7.149083137512207
    9. ')' → logprob: -7.649083137512207
    10. 'k' → logprob: -7.774083137512207

Token 95: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14594295620918274
    2. '+' → logprob: -2.5209429264068604
    3. '+k' → logprob: -3.6459429264068604
    4. '))' → logprob: -4.2709431648254395
    5. ' -' → logprob: -4.5209431648254395
    6. '-' → logprob: -6.1459431648254395
    7. ')' → logprob: -6.6459431648254395
    8. '-k' → logprob: -8.020942687988281
    9. ')),' → logprob: -8.395942687988281
    10. ')))' → logprob: -9.270942687988281

Token 96: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6249921321868896
    2. ' if' → logprob: -1.1249921321868896
    3. 'if' → logprob: -2.9999921321868896
    4. '       ' → logprob: -3.1249921321868896
    5. '           ' → logprob: -4.124992370605469
    6. ')(' → logprob: -4.749992370605469
    7. '   ' → logprob: -5.249992370605469
    8. '))(' → logprob: -5.624992370605469
    9. '),' → logprob: -5.749992370605469
    10. ')
' → logprob: -5.749992370605469

Token 97: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.37973251938819885
    2. 'a' → logprob: -1.3797324895858765
    3. ' k' → logprob: -3.504732608795166
    4. 'k' → logprob: -3.629732608795166
    5. ' b' → logprob: -5.379732608795166
    6. 'b' → logprob: -6.629732608795166
    7. ' (' → logprob: -7.004732608795166
    8. ' ' → logprob: -8.254732131958008
    9. '(a' → logprob: -8.254732131958008
    10. '0' → logprob: -8.754732131958008

Token 98: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6832850575447083
    2. ' <=' → logprob: -1.6832849979400635
    3. '<=' → logprob: -1.8082849979400635
    4. '<' → logprob: -1.9332849979400635
    5. '>=' → logprob: -9.058284759521484
    6. ' >=' → logprob: -9.558284759521484
    7. '<len' → logprob: -9.558284759521484
    8. '==' → logprob: -9.933284759521484
    9. ' >' → logprob: -10.058284759521484
    10. ' else' → logprob: -10.183284759521484

Token 99: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000997559749521315
    2. 'A' → logprob: -7.500997543334961
    3. ' a' → logprob: -7.750997543334961
    4. '(a' → logprob: -12.000997543334961
    5. 'b' → logprob: -12.875997543334961
    6. '	a' → logprob: -12.875997543334961
    7. 'B' → logprob: -13.750997543334961
    8. ' A' → logprob: -14.375997543334961
    9. '(' → logprob: -15.875997543334961
    10. '0' → logprob: -15.875997543334961

Token 100: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16022655367851257
    2. 'else' → logprob: -1.910226583480835
    3. '	else' → logprob: -14.285226821899414
    4. ' els' → logprob: -14.535226821899414
    5. '        ' → logprob: -15.160226821899414
    6. 'els' → logprob: -15.785226821899414
    7. '   ' → logprob: -15.910226821899414
    8. '    ' → logprob: -16.285226821899414
    9. '           ' → logprob: -16.285226821899414
    10. '       ' → logprob: -16.285226821899414

Token 101: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6499450206756592
    2. '(a' → logprob: -1.3999450206756592
    3. ' (' → logprob: -2.024945020675659
    4. '(k' → logprob: -2.899945020675659
    5. '(b' → logprob: -3.524945020675659
    6. '(lambda' → logprob: -4.524945259094238
    7. '(None' → logprob: -5.774945259094238
    8. '   ' → logprob: -8.399945259094238
    9. '(ab' → logprob: -8.899945259094238
    10. '(B' → logprob: -9.774945259094238

Token 102: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.396463006734848
    2. '0' → logprob: -1.8964630365371704
    3. '(a' → logprob: -1.8964630365371704
    4. '(A' → logprob: -4.271462917327881
    5. 'a' → logprob: -5.271462917327881
    6. ' (' → logprob: -6.396462917327881
    7. 'A' → logprob: -6.646462917327881
    8. '   ' → logprob: -6.771462917327881
    9. '(B' → logprob: -6.896462917327881
    10. ' ' → logprob: -7.146462917327881

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ' ,' → logprob: -12.250009536743164
    3. ',
' → logprob: -13.500009536743164
    4. 'a' → logprob: -15.000009536743164
    5. '   ' → logprob: -15.250009536743164
    6. '           ' → logprob: -15.375009536743164
    7. '<|end|>' → logprob: -15.375009536743164
    8. '```' → logprob: -15.500009536743164
    9. '<|end|>' → logprob: -15.500009536743164
    10. '       ' → logprob: -15.625009536743164

Token 104: ' max' (ID: 2999)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002868115669116378
    2. ' b' → logprob: -6.252868175506592
    3. '   ' → logprob: -7.127868175506592
    4. 'a' → logprob: -9.877867698669434
    5. ' ' → logprob: -10.502867698669434
    6. '(b' → logprob: -11.002867698669434
    7. 'max' → logprob: -11.627867698669434
    8. 'B' → logprob: -11.752867698669434
    9. '       ' → logprob: -11.877867698669434
    10. '  ' → logprob: -12.752867698669434

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048667535185813904
    2. '(b' → logprob: -3.0486674308776855
    3. '(B' → logprob: -10.173667907714844
    4. '0' → logprob: -10.298667907714844
    5. '((' → logprob: -12.548667907714844
    6. 'b' → logprob: -12.923667907714844
    7. ' (' → logprob: -14.423667907714844
    8. '(
' → logprob: -14.548667907714844
    9. '(a' → logprob: -14.798667907714844
    10. '   ' → logprob: -16.048667907714844

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.326467901468277
    2. 'b' → logprob: -1.3264678716659546
    3. ' ' → logprob: -5.076467990875244
    4. ' b' → logprob: -5.076467990875244
    5. '   ' → logprob: -8.076467514038086
    6. '(' → logprob: -8.701467514038086
    7. '(b' → logprob: -9.701467514038086
    8. ')b' → logprob: -11.138967514038086
    9. 'B' → logprob: -11.201467514038086
    10. '  ' → logprob: -11.201467514038086

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019627032801508904
    2. '(b' → logprob: -4.019627094268799
    3. 'b' → logprob: -6.894627094268799
    4. ',b' → logprob: -8.39462661743164
    5. '   ' → logprob: -9.64462661743164
    6. '(' → logprob: -10.51962661743164
    7. 'B' → logprob: -10.51962661743164
    8. ')' → logprob: -10.64462661743164
    9. '           ' → logprob: -11.14462661743164
    10. ')b' → logprob: -11.39462661743164

Token 108: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0147462859749794
    2. ' b' → logprob: -4.889746189117432
    3. '           ' → logprob: -5.389746189117432
    4. '       ' → logprob: -6.639746189117432
    5. '   ' → logprob: -7.264746189117432
    6. '               ' → logprob: -8.76474666595459
    7. '    ' → logprob: -9.88974666595459
    8. '         ' → logprob: -10.01474666595459
    9. '     ' → logprob: -10.26474666595459
    10. 'B' → logprob: -10.38974666595459

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12719528377056122
    2. '-' → logprob: -2.252195358276367
    3. '-k' → logprob: -4.252195358276367
    4. ' ' → logprob: -10.502195358276367
    5. '   ' → logprob: -13.002195358276367
    6. 'k' → logprob: -13.502195358276367
    7. ' k' → logprob: -13.877195358276367
    8. '-n' → logprob: -14.627195358276367
    9. '  ' → logprob: -14.877195358276367
    10. ' -
' → logprob: -14.877195358276367

Token 110: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.011548886075615883
    2. ' (' → logprob: -4.51154899597168
    3. '(' → logprob: -8.51154899597168
    4. '   ' → logprob: -8.51154899597168
    5. 'k' → logprob: -10.88654899597168
    6. '  ' → logprob: -11.13654899597168
    7. '(K' → logprob: -11.13654899597168
    8. ' ' → logprob: -11.76154899597168
    9. '(max' → logprob: -11.88654899597168
    10. '       ' → logprob: -12.38654899597168

Token 111: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.031476520001888275
    2. ' (' → logprob: -3.5314764976501465
    3. 'k' → logprob: -6.5314764976501465
    4. '   ' → logprob: -9.531476974487305
    5. '(' → logprob: -9.656476974487305
    6. ' k' → logprob: -10.031476974487305
    7. '(K' → logprob: -10.406476974487305
    8. ' ' → logprob: -11.656476974487305
    9. '(abs' → logprob: -12.343976974487305
    10. '(a' → logprob: -12.531476974487305

Token 112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3485032320022583
    2. '-' → logprob: -1.2235032320022583
    3. '-a' → logprob: -10.223503112792969
    4. ' ' → logprob: -11.473503112792969
    5. 'a' → logprob: -11.973503112792969
    6. '   ' → logprob: -12.973503112792969
    7. ' a' → logprob: -13.473503112792969
    8. '  ' → logprob: -14.473503112792969
    9. '```' → logprob: -14.848503112792969
    10. '-A' → logprob: -15.973503112792969

Token 113: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014169269241392612
    2. ' a' → logprob: -4.264169216156006
    3. '   ' → logprob: -12.889169692993164
    4. ' ' → logprob: -13.514169692993164
    5. 'A' → logprob: -14.014169692993164
    6. '  ' → logprob: -15.139169692993164
    7. '	a' → logprob: -15.139169692993164
    8. '(a' → logprob: -16.514169692993164
    9. '    ' → logprob: -16.514169692993164
    10. '
' → logprob: -17.014169692993164

Token 114: '))))' (ID: 57459)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.42041531205177307
    2. '))))' → logprob: -1.6704152822494507
    3. ')))
' → logprob: -2.1704154014587402
    4. '))' → logprob: -3.6704154014587402
    5. '))))
' → logprob: -4.54541540145874
    6. ')' → logprob: -6.29541540145874
    7. '))
' → logprob: -7.04541540145874
    8. ' ' → logprob: -7.54541540145874
    9. ')))))
' → logprob: -7.54541540145874
    10. ')))

' → logprob: -8.295414924621582

Token 115: '(' (ID: 7)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.020297318696975708
    2. '(A' → logprob: -4.020297527313232
    3. '   ' → logprob: -6.645297527313232
    4. '       ' → logprob: -8.020297050476074
    5. '(' → logprob: -8.520297050476074
    6. ')' → logprob: -9.770297050476074
    7. ')((' → logprob: -9.895297050476074
    8. ')(
' → logprob: -10.145297050476074
    9. '           ' → logprob: -10.395297050476074
    10. '(a' → logprob: -10.520297050476074

Token 116: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011889220913872123
    2. ' A' → logprob: -7.0011887550354
    3. '   ' → logprob: -8.251189231872559
    4. 'a' → logprob: -11.876189231872559
    5. ' ' → logprob: -13.001189231872559
    6. '       ' → logprob: -13.251189231872559
    7. '	A' → logprob: -13.501189231872559
    8. '  ' → logprob: -13.626189231872559
    9. '           ' → logprob: -14.376189231872559
    10. '*A' → logprob: -14.501189231872559

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009413579828105867
    2. ',b' → logprob: -7.500941276550293
    3. ' ,' → logprob: -7.875941276550293
    4. ',B' → logprob: -12.625941276550293
    5. 'b' → logprob: -13.750941276550293
    6. ',
' → logprob: -13.875941276550293
    7. ')' → logprob: -14.625941276550293
    8. ',k' → logprob: -14.875941276550293
    9. ' ' → logprob: -15.125941276550293
    10. '   ' → logprob: -15.375941276550293

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001037691137753427
    2. ' b' → logprob: -6.87603759765625
    3. '   ' → logprob: -13.00103759765625
    4. '    ' → logprob: -14.12603759765625
    5. '       ' → logprob: -14.12603759765625
    6. ' ' → logprob: -15.12603759765625
    7. '<|end|>' → logprob: -15.12603759765625
    8. 'B' → logprob: -15.50103759765625
    9. '           ' → logprob: -15.62603759765625
    10. '  ' → logprob: -16.50103759765625

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010640094988048077
    2. ',k' → logprob: -7.126063823699951
    3. ' ,' → logprob: -8.75106430053711
    4. 'k' → logprob: -9.87606430053711
    5. ' -' → logprob: -11.12606430053711
    6. ')' → logprob: -11.50106430053711
    7. '-' → logprob: -12.00106430053711
    8. ',K' → logprob: -12.50106430053711
    9. '),' → logprob: -12.75106430053711
    10. ' k' → logprob: -13.25106430053711

Token 120: ' k' (ID: 372)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.048593275249004364
    2. 'k' → logprob: -3.048593282699585
    3. ' K' → logprob: -12.298593521118164
    4. ')' → logprob: -14.673593521118164
    5. '   ' → logprob: -14.923593521118164
    6. ' k' → logprob: -15.673593521118164
    7. ' ' → logprob: -15.673593521118164
    8. '           ' → logprob: -16.423593521118164
    9. '  ' → logprob: -16.548593521118164
    10. '	K' → logprob: -16.673593521118164

Token 121: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4347938895225525
    2. 'for' → logprob: -1.1847939491271973
    3. ')' → logprob: -3.3097939491271973
    4. ')
' → logprob: -5.434793949127197
    5. '   ' → logprob: -5.934793949127197
    6. '       ' → logprob: -6.684793949127197
    7. '
' → logprob: -6.809793949127197
    8. '           ' → logprob: -7.559793949127197
    9. ' ' → logprob: -9.309793472290039
    10. '               ' → logprob: -9.809793472290039

Token 122: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10680790990591049
    2. ' for' → logprob: -2.3568079471588135
    3. '   ' → logprob: -5.481807708740234
    4. '       ' → logprob: -6.481807708740234
    5. '           ' → logprob: -7.231807708740234
    6. '               ' → logprob: -9.606807708740234
    7. ',' → logprob: -9.981807708740234
    8. '                   ' → logprob: -11.231807708740234
    9. ' ' → logprob: -11.231807708740234
    10. ')' → logprob: -11.856807708740234

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.045771609991788864
    2. ' for' → logprob: -3.545771598815918
    3. '           ' → logprob: -4.170771598815918
    4. '   ' → logprob: -8.420771598815918
    5. '       ' → logprob: -9.045771598815918
    6. '               ' → logprob: -9.295771598815918
    7. ')' → logprob: -12.170771598815918
    8. '
' → logprob: -12.420771598815918
    9. ' ' → logprob: -12.545771598815918
    10. '            ' → logprob: -13.045771598815918

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08647020906209946
    2. 'range' → logprob: -3.336470127105713
    3. 'product' → logprob: -4.086470127105713
    4. 'k' → logprob: -4.086470127105713
    5. '(a' → logprob: -4.711470127105713
    6. 'A' → logprob: -7.086470127105713
    7. '(' → logprob: -7.086470127105713
    8. '(range' → logprob: -7.211470127105713
    9. '(k' → logprob: -7.586470127105713
    10. ' a' → logprob: -7.711470127105713

Token 125: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3258621394634247
    2. ',' → logprob: -1.325862169265747
    3. 'in' → logprob: -4.450861930847168
    4. ' ,' → logprob: -7.325861930847168
    5. ',b' → logprob: -9.075861930847168
    6. ')' → logprob: -10.450861930847168
    7. 'b' → logprob: -11.200861930847168
    8. 'range' → logprob: -11.825861930847168
    9. ' ' → logprob: -12.325861930847168
    10. '<|end|>' → logprob: -12.450861930847168

Token 126: ' b' (ID: 287)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.660086989402771
    2. ' product' → logprob: -1.785086989402771
    3. '[(' → logprob: -1.785086989402771
    4. 'b' → logprob: -2.5350871086120605
    5. 'range' → logprob: -3.6600871086120605
    6. ' range' → logprob: -4.6600871086120605
    7. 'enumer' → logprob: -5.1600871086120605
    8. ' [(' → logprob: -5.2850871086120605
    9. ' b' → logprob: -5.4100871086120605
    10. '(product' → logprob: -6.0350871086120605

Token 127: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5233811140060425
    2. ' in' → logprob: -0.8983811140060425
    3. ',' → logprob: -8.398381233215332
    4. ')' → logprob: -11.398381233215332
    5. '<|end|>' → logprob: -11.523381233215332
    6. ' ' → logprob: -12.398381233215332
    7. '  ' → logprob: -13.523381233215332
    8. '<|end|>' → logprob: -13.648381233215332
    9. '   ' → logprob: -14.648381233215332
    10. '
' → logprob: -14.648381233215332

Token 128: ' k' (ID: 372)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.009628107771277428
    2. ' product' → logprob: -4.7596282958984375
    3. '[(' → logprob: -7.3846282958984375
    4. 'zip' → logprob: -9.134628295898438
    5. '(product' → logprob: -9.634628295898438
    6. '((' → logprob: -9.884628295898438
    7. 'enumer' → logprob: -10.009628295898438
    8. 'per' → logprob: -10.384628295898438
    9. '
' → logprob: -11.134628295898438
    10. '[' → logprob: -11.509628295898438

Token 129: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38697168231010437
    2. ' in' → logprob: -1.1369717121124268
    3. ')' → logprob: -9.886971473693848
    4. 'n' → logprob: -10.511971473693848
    5. 's' → logprob: -12.386971473693848
    6. ',' → logprob: -12.886971473693848
    7. 'import' → logprob: -13.886971473693848
    8. 'd' → logprob: -14.261971473693848
    9. 'In' → logprob: -14.261971473693848
    10. 'i' → logprob: -14.261971473693848

Token 130: ' [' (ID: 723)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.026424072682857513
    2. ' product' → logprob: -3.6514241695404053
    3. 'zip' → logprob: -9.776424407958984
    4. '   ' → logprob: -11.026424407958984
    5. '(product' → logprob: -11.401424407958984
    6. ' ' → logprob: -11.776424407958984
    7. 'chain' → logprob: -11.901424407958984
    8. 'per' → logprob: -12.026424407958984
    9. '
' → logprob: -12.276424407958984
    10. ' zip' → logprob: -12.901424407958984

Token 131: ' (' (ID: 350)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.2655901312828064
    2. 'product' → logprob: -2.390590190887451
    3. '(A' → logprob: -3.015590190887451
    4. '(zip' → logprob: -3.265590190887451
    5. ' (' → logprob: -3.390590190887451
    6. '(' → logprob: -4.640590190887451
    7. '(B' → logprob: -5.765590190887451
    8. 'zip' → logprob: -6.140590190887451
    9. '[(' → logprob: -6.265590190887451
    10. ' product' → logprob: -6.765590190887451

Token 132: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5808324217796326
    2. '(A' → logprob: -0.8308324217796326
    3. ' (' → logprob: -5.830832481384277
    4. ' A' → logprob: -7.580832481384277
    5. '   ' → logprob: -7.705832481384277
    6. '(' → logprob: -8.080832481384277
    7. 'out' → logprob: -8.830832481384277
    8. '(i' → logprob: -8.830832481384277
    9. '(a' → logprob: -9.330832481384277
    10. ')' → logprob: -9.830832481384277

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005826414097100496
    2. '-' → logprob: -5.630826473236084
    3. ' -' → logprob: -6.505826473236084
    4. ' ,' → logprob: -8.255825996398926
    5. '+' → logprob: -9.005825996398926
    6. ',B' → logprob: -9.130825996398926
    7. ',k' → logprob: -9.880825996398926
    8. ' +' → logprob: -10.005825996398926
    9. '-i' → logprob: -10.380825996398926
    10. 'B' → logprob: -10.880825996398926

Token 134: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0031817557755857706
    2. ' B' → logprob: -5.7531819343566895
    3. '<|end|>' → logprob: -13.378181457519531
    4. ' ' → logprob: -13.878181457519531
    5. '
' → logprob: -14.503181457519531
    6. '   ' → logprob: -15.003181457519531
    7. '  ' → logprob: -15.128181457519531
    8. '...' → logprob: -16.00318145751953
    9. '       ' → logprob: -16.75318145751953
    10. 'K' → logprob: -17.06568145751953

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04064613953232765
    2. '-' → logprob: -3.7906460762023926
    3. ' -' → logprob: -4.790646076202393
    4. '+' → logprob: -5.290646076202393
    5. ')' → logprob: -6.415646076202393
    6. ' +' → logprob: -6.790646076202393
    7. ',K' → logprob: -8.16564655303955
    8. ' ,' → logprob: -8.54064655303955
    9. '),' → logprob: -8.66564655303955
    10. '-K' → logprob: -9.04064655303955

Token 136: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.08151096850633621
    2. 'k' → logprob: -3.0815110206604004
    3. 'i' → logprob: -3.4565110206604004
    4. ' K' → logprob: -7.4565110206604
    5. ')' → logprob: -9.456510543823242
    6. ' i' → logprob: -9.706510543823242
    7. '   ' → logprob: -10.081510543823242
    8. ' k' → logprob: -10.456510543823242
    9. '0' → logprob: -11.081510543823242
    10. 'x' → logprob: -11.706510543823242

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26838234066963196
    2. ')]' → logprob: -1.6433823108673096
    3. ')])' → logprob: -4.268382549285889
    4. ')]
' → logprob: -4.643382549285889
    5. '+' → logprob: -5.018382549285889
    6. ']' → logprob: -6.393382549285889
    7. '       ' → logprob: -6.393382549285889
    8. ')],' → logprob: -6.393382549285889
    9. ')
' → logprob: -7.018382549285889
    10. ')])
' → logprob: -7.143382549285889

Token 138: ' ]
' (ID: 10213)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6299827694892883
    2. ']' → logprob: -0.8799827694892883
    3. ' ]
' → logprob: -3.7549827098846436
    4. ' ]' → logprob: -4.254982948303223
    5. ']))' → logprob: -5.254982948303223
    6. '   ' → logprob: -6.379982948303223
    7. '])' → logprob: -6.504982948303223
    8. '],
' → logprob: -6.879982948303223
    9. ']),' → logprob: -7.379982948303223
    10. ']

' → logprob: -7.504982948303223

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1748521775007248
    2. ',' → logprob: -2.049852132797241
    3. '           ' → logprob: -3.799852132797241
    4. ',
' → logprob: -5.54985237121582
    5. '),' → logprob: -5.79985237121582
    6. '   ' → logprob: -7.17485237121582
    7. ')' → logprob: -7.79985237121582
    8. '),
' → logprob: -8.29985237121582
    9. '               ' → logprob: -8.42485237121582
    10. ')))' → logprob: -8.79985237121582

Token 140: ' ),
' (ID: 4954)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03282906487584114
    2. '   ' → logprob: -3.7828290462493896
    3. '       ' → logprob: -5.407829284667969
    4. '),' → logprob: -6.407829284667969
    5. ',
' → logprob: -6.532829284667969
    6. ')' → logprob: -7.907829284667969
    7. '),
' (adapté à ' ),
') → logprob: -8.157829284667969
    8. ' ,' → logprob: -8.407829284667969
    9. ')
' → logprob: -8.907829284667969
    10. '20' → logprob: -9.032829284667969

Token 141: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03461207449436188
    2. ' ' → logprob: -4.15961217880249
    3. '2' → logprob: -4.53461217880249
    4. 'K' → logprob: -5.78461217880249
    5. '   ' → logprob: -6.03461217880249
    6. ' K' → logprob: -7.40961217880249
    7. '0' → logprob: -7.78461217880249
    8. '       ' → logprob: -8.409611701965332
    9. '10' → logprob: -8.659611701965332
    10. '3' → logprob: -8.784611701965332

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001227276516146958
    2. ' ' → logprob: -9.375123023986816
    3. '2' → logprob: -11.000123023986816
    4. '10' → logprob: -11.625123023986816
    5. '   ' → logprob: -12.500123023986816
    6. '100' → logprob: -12.875123023986816
    7. '  ' → logprob: -13.750123023986816
    8. '3' → logprob: -13.875123023986816
    9. '5' → logprob: -13.875123023986816
    10. '20' → logprob: -14.375123023986816

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002862650901079178
    2. '10' → logprob: -7.002862453460693
    3. ' ' → logprob: -7.127862453460693
    4. '2' → logprob: -7.377862453460693
    5. '3' → logprob: -9.252862930297852
    6. '100' → logprob: -9.252862930297852
    7. '5' → logprob: -9.252862930297852
    8. '20' → logprob: -9.627862930297852
    9. 'None' → logprob: -10.002862930297852
    10. '50' → logprob: -10.877862930297852

Token 144: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028423991054296494
    2. '))' → logprob: -3.653424024581909
    3. '   ' → logprob: -6.40342378616333
    4. ')
' → logprob: -8.278424263000488
    5. ')))' → logprob: -8.653424263000488
    6. '),' → logprob: -11.528424263000488
    7. '));' → logprob: -12.153424263000488
    8. '
' → logprob: -12.653424263000488
    9. ' )' → logprob: -12.778424263000488
    10. '))))' → logprob: -13.653424263000488

Token 145: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17404493689537048
    2. '))' → logprob: -2.0490448474884033
    3. '   ' → logprob: -3.9240448474884033
    4. ')
' → logprob: -4.674045085906982
    5. ')))' → logprob: -6.424045085906982
    6. '),' → logprob: -10.549044609069824
    7. ' )' → logprob: -10.674044609069824
    8. '))
' → logprob: -10.799044609069824
    9. ')

' → logprob: -10.799044609069824
    10. '))))' → logprob: -11.299044609069824

Token 146: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046195898205041885
    2. ')
' (adapté à ' )
') → logprob: -3.7961959838867188
    3. '))' → logprob: -3.7961959838867188
    4. ')
' → logprob: -9.421195983886719
    5. ')))' → logprob: -10.046195983886719
    6. ')

' → logprob: -10.046195983886719
    7. ' )' → logprob: -10.796195983886719
    8. '   ' → logprob: -11.296195983886719
    9. ' ' → logprob: -11.796195983886719
    10. '))
' → logprob: -11.796195983886719

Token 147: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021956121549010277
    2. ')
' → logprob: -3.896956205368042
    3. ')

' → logprob: -7.146955966949463
    4. '))' → logprob: -7.521955966949463
    5. ')[' → logprob: -10.021956443786621
    6. '))
' → logprob: -11.396956443786621
    7. ' )' → logprob: -12.146956443786621
    8. ')))' → logprob: -12.146956443786621
    9. ')
' → logprob: -12.521956443786621
    10. ')`' → logprob: -12.646956443786621

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.625005722045898
    3. '-' → logprob: -13.625005722045898
    4. '[' → logprob: -14.937505722045898
    5. ')' → logprob: -15.625005722045898
    6. '00' → logprob: -16.0625057220459
    7. '(' → logprob: -16.2500057220459
    8. '```' → logprob: -16.5625057220459
    9. '012' → logprob: -16.8125057220459
    10. '۰' → logprob: -17.0625057220459

Token 149: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001463299704482779
    2. ')
' → logprob: -9.12514591217041
    3. ' )' → logprob: -12.12514591217041
    4. ']' → logprob: -12.12514591217041
    5. '<|end|>' → logprob: -12.25014591217041
    6. ',' → logprob: -12.37514591217041
    7. 'print' → logprob: -12.37514591217041
    8. ')

' → logprob: -12.87514591217041
    9. ')#' → logprob: -13.25014591217041
    10. '}' → logprob: -13.25014591217041

Token 150: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. 'for' → logprob: -13.00000286102295
    3. '```' → logprob: -15.12500286102295
    4. '#print' → logprob: -15.87500286102295
    5. 'pr' → logprob: -16.000003814697266
    6. 'if' → logprob: -16.500003814697266
    7. '(print' → logprob: -16.500003814697266
    8. ' print' → logprob: -16.750003814697266
    9. ')' → logprob: -16.875003814697266
    10. '<|end|>' → logprob: -17.000003814697266

Token 151: '(*' (ID: 9000)
  Prédit: '(out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.05173145979642868
    2. '(' → logprob: -3.3017313480377197
    3. '(*' → logprob: -4.301731586456299
    4. 'out' → logprob: -10.30173110961914
    5. '*out' → logprob: -12.05173110961914
    6. '(
' → logprob: -12.42673110961914
    7. '(f' → logprob: -13.17673110961914
    8. '((' → logprob: -13.42673110961914
    9. ' (' → logprob: -13.80173110961914
    10. '((*' → logprob: -14.42673110961914

Token 152: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -9.088346359931165e-07
    2. ' out' → logprob: -14.000000953674316
    3. '(out' → logprob: -22.25
    4. 'tuple' → logprob: -22.5
    5. '[out' → logprob: -23.0
    6. '	out' → logprob: -23.375
    7. '*out' → logprob: -23.75
    8. '_out' → logprob: -23.75
    9. '$out' → logprob: -24.125
    10. 'list' → logprob: -24.75

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.625003814697266
    4. ',)' → logprob: -16.625003814697266
    5. ')`' → logprob: -16.625003814697266
    6. '))' → logprob: -17.125003814697266
    7. ')#' → logprob: -17.500003814697266
    8. ',' → logprob: -18.000003814697266
    9. ')}' → logprob: -18.250003814697266
    10. '}' → logprob: -19.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 119
Précision stricte (1ère position): 29.80%
Précision adaptée (1ère position): 30.46%
Précision (top 10): 78.81%
================================================================================
