================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B,C,D=[int(j)for j in input().split()]
class X:pass
def g(q,z):
 for _ in[0]:pass
 while z:a,q=z,q%z
 return a
setattr(X,'y',lambda s,t,u: t*u//g(t,u))
E=X().y(C,D)
def w(v,m):return v//m+(-A//m)+1
r=[w(B,k) for k in (C,D,E)]
print((B-A+1)-r[0]-r[1]+r[2])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: ',C' (ID: 26924)
  → Token d'amorce (pas de prédiction)

Token 3: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12319324165582657
    2. ',D' → logprob: -2.4981932640075684
    3. '```' → logprob: -4.498193264007568
    4. '<|end|>' → logprob: -4.873193264007568
    5. 'D' → logprob: -4.998193264007568
    6. '=' → logprob: -5.748193264007568
    7. ';' → logprob: -6.498193264007568
    8. ':' → logprob: -6.873193264007568
    9. ')' → logprob: -7.123193264007568
    10. '.' → logprob: -8.37319278717041

Token 4: '=[' (ID: 13370)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021496864035725594
    2. ',E' → logprob: -4.646496772766113
    3. '<|end|>' → logprob: -5.521496772766113
    4. '```' → logprob: -5.646496772766113
    5. ';' → logprob: -6.396496772766113
    6. '=' → logprob: -6.771496772766113
    7. '.' → logprob: -7.771496772766113
    8. 'E' → logprob: -8.396496772766113
    9. ')' → logprob: -8.646496772766113
    10. '<|end|>' → logprob: -9.146496772766113

Token 5: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4894847571849823
    2. '0' → logprob: -0.9894847869873047
    3. ']' → logprob: -4.864484786987305
    4. '[' → logprob: -5.239484786987305
    5. '10' → logprob: -7.239484786987305
    6. '[]' → logprob: -7.864484786987305
    7. '(' → logprob: -8.489484786987305
    8. '[int' → logprob: -8.614484786987305
    9. '```' → logprob: -8.989484786987305
    10. ']int' → logprob: -9.114484786987305

Token 6: '(j' (ID: 4997)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0166687965393066
    2. '(x' → logprob: -1.1416687965393066
    3. '(' → logprob: -1.5166687965393066
    4. ']' → logprob: -2.7666687965393066
    5. '(i' → logprob: -4.016668796539307
    6. '()]' → logprob: -4.141668796539307
    7. '(s' → logprob: -7.641668796539307
    8. '(token' → logprob: -8.016668319702148
    9. '(item' → logprob: -8.141668319702148
    10. '(line' → logprob: -8.766668319702148

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39273616671562195
    2. '(x' → logprob: -1.2677361965179443
    3. '(i' → logprob: -3.6427361965179443
    4. '(k' → logprob: -4.892735958099365
    5. '(' → logprob: -6.017735958099365
    6. 'x' → logprob: -6.142735958099365
    7. ')x' → logprob: -6.142735958099365
    8. 'for' → logprob: -7.517735958099365
    9. '(s' → logprob: -7.517735958099365
    10. 'i' → logprob: -7.642735958099365

Token 8: 'for' (ID: 1938)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6100864410400391
    2. '(x' → logprob: -0.8600864410400391
    3. '(' → logprob: -4.485086441040039
    4. '(k' → logprob: -4.485086441040039
    5. 'x' → logprob: -5.610086441040039
    6. 'for' → logprob: -6.110086441040039
    7. ')' → logprob: -6.860086441040039
    8. ']' → logprob: -6.985086441040039
    9. '(j' → logprob: -7.235086441040039
    10. 'i' → logprob: -7.360086441040039

Token 9: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5608940124511719
    2. ' input' → logprob: -1.0608940124511719
    3. ' range' → logprob: -3.185894012451172
    4. 'input' → logprob: -4.435894012451172
    5. 'j' → logprob: -4.560894012451172
    6. ' i' → logprob: -5.060894012451172
    7. 'range' → logprob: -5.560894012451172
    8. ' x' → logprob: -6.060894012451172
    9. ' in' → logprob: -6.435894012451172
    10. ' s' → logprob: -6.810894012451172

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28115925192832947
    2. 'in' → logprob: -1.4061592817306519
    3. ' ' → logprob: -12.531159400939941
    4. 'range' → logprob: -13.156159400939941
    5. '<|end|>' → logprob: -13.781159400939941
    6. ')' → logprob: -14.781159400939941
    7. '  ' → logprob: -14.906159400939941
    8. ' i' → logprob: -15.031159400939941
    9. 'input' → logprob: -15.281159400939941
    10. ' range' → logprob: -15.531159400939941

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05499139800667763
    2. ' input' → logprob: -2.9299914836883545
    3. '(input' → logprob: -9.304991722106934
    4. 'list' → logprob: -11.929991722106934
    5. 'range' → logprob: -12.804991722106934
    6. '<input' → logprob: -13.179991722106934
    7. 'raw' → logprob: -13.554991722106934
    8. '[input' → logprob: -13.554991722106934
    9. ',input' → logprob: -14.304991722106934
    10. '=input' → logprob: -14.304991722106934

Token 12: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.01344255916774273
    2. '()' → logprob: -4.763442516326904
    3. '(' → logprob: -5.888442516326904
    4. '().' → logprob: -7.013442516326904
    5. '()][' → logprob: -7.763442516326904
    6. ']' → logprob: -8.638442993164062
    7. '())' → logprob: -8.638442993164062
    8. '()].' → logprob: -8.763442993164062
    9. '()],' → logprob: -9.888442993164062
    10. ']()' → logprob: -10.263442993164062

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010652327910065651
    2. 'strip' → logprob: -9.250106811523438
    3. 'rstrip' → logprob: -12.125106811523438
    4. ' split' → logprob: -12.250106811523438
    5. '(split' → logprob: -16.250106811523438
    6. 'replace' → logprob: -16.875106811523438
    7. 'spl' → logprob: -17.125106811523438
    8. ' strip' → logprob: -20.500106811523438
    9. '_split' → logprob: -20.750106811523438
    10. 's' → logprob: -20.875106811523438

Token 14: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0011093784123659134
    2. '(' → logprob: -7.126109600067139
    3. '()' → logprob: -8.37610912322998
    4. '())' → logprob: -9.75110912322998
    5. '('' → logprob: -11.62610912322998
    6. '()],' → logprob: -13.37610912322998
    7. '()][' → logprob: -13.62610912322998
    8. ']' → logprob: -14.00110912322998
    9. '()}' → logprob: -14.00110912322998
    10. '()].' → logprob: -14.37610912322998

Token 15: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37191542983055115
    2. '+' → logprob: -1.4969154596328735
    3. '#' → logprob: -3.246915340423584
    4. ' if' → logprob: -4.621915340423584
    5. ';' → logprob: -4.746915340423584
    6. '*' → logprob: -5.371915340423584
    7. '%' → logprob: -5.496915340423584
    8. 'i' → logprob: -5.746915340423584
    9. ',' → logprob: -5.871915340423584
    10. ':' → logprob: -6.246915340423584

Token 16: ' X' (ID: 2127)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.1434982568025589
    2. ' My' → logprob: -2.143498182296753
    3. ' Solver' → logprob: -6.018498420715332
    4. ' Rectangle' → logprob: -6.393498420715332
    5. ' Test' → logprob: -6.518498420715332
    6. ' ' → logprob: -6.518498420715332
    7. ' A' → logprob: -6.768498420715332
    8. ' Node' → logprob: -7.018498420715332
    9. ' Calculator' → logprob: -7.018498420715332
    10. ' Student' → logprob: -7.018498420715332

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010902655776590109
    2. ' :' → logprob: -9.87510871887207
    3. '():' → logprob: -10.50010871887207
    4. '(' → logprob: -11.00010871887207
    5. '(:' → logprob: -12.62510871887207
    6. ':**' → logprob: -12.87510871887207
    7. '<|end|>' → logprob: -13.25010871887207
    8. ':
' → logprob: -13.75010871887207
    9. ':def' → logprob: -14.25010871887207
    10. '):' → logprob: -14.50010871887207

Token 18: 'pass' (ID: 9948)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41461285948753357
    2. ' 
' → logprob: -2.6646127700805664
    3. '   ' → logprob: -2.6646127700805664
    4. '\n' → logprob: -2.6646127700805664
    5. '<|end|>' → logprob: -2.6646127700805664
    6. '    
' → logprob: -3.9146127700805664
    7. 'def' → logprob: -4.539612770080566
    8. ' def' → logprob: -4.914612770080566
    9. '    ' → logprob: -5.664612770080566
    10. 'newline' → logprob: -6.039612770080566

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.051643144339323044
    2. '<|end|>' → logprob: -3.551643133163452
    3. '

' → logprob: -5.926643371582031
    4. '\' → logprob: -6.176643371582031
    5. '' → logprob: -6.301643371582031
    6. ' ' → logprob: -6.426643371582031
    7. ';' → logprob: -6.551643371582031
    8. '.' → logprob: -6.551643371582031
    9. '\n' → logprob: -6.551643371582031
    10. 'x' → logprob: -6.551643371582031

Token 20: 'def' (ID: 1314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2293440103530884
    2. 'x' → logprob: -1.2293440103530884
    3. 'E' → logprob: -2.479343891143799
    4. 'X' → logprob: -2.604343891143799
    5. '
' → logprob: -2.854343891143799
    6. 'if' → logprob: -2.979343891143799
    7. '<|end|>' → logprob: -2.979343891143799
    8. 'a' → logprob: -3.354343891143799
    9. '[' → logprob: -4.479343891143799
    10. 'class' → logprob: -4.729343891143799

Token 21: ' g' (ID: 329)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.11040318012237549
    2. ' main' → logprob: -2.735403060913086
    3. ' foo' → logprob: -4.110403060913086
    4. ' func' → logprob: -4.610403060913086
    5. ' ' → logprob: -5.860403060913086
    6. ' my' → logprob: -6.110403060913086
    7. ' solution' → logprob: -6.110403060913086
    8. 'f' → logprob: -6.485403060913086
    9. ' solve' → logprob: -7.110403060913086
    10. ' x' → logprob: -7.110403060913086

Token 22: '(q' (ID: 21479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31798824667930603
    2. '():' → logprob: -1.8179882764816284
    3. '(a' → logprob: -2.317988157272339
    4. '(x' → logprob: -4.692988395690918
    5. ' ():' → logprob: -7.567988395690918
    6. '()' → logprob: -8.192988395690918
    7. 'et' → logprob: -8.192988395690918
    8. '(g' → logprob: -8.317988395690918
    9. '(i' → logprob: -8.567988395690918
    10. 'a' → logprob: -8.942988395690918

Token 23: ',z' (ID: 54920)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005689868703484535
    2. ')' → logprob: -5.505690097808838
    3. 'u' → logprob: -6.755690097808838
    4. ',' → logprob: -8.13068962097168
    5. ' ):' → logprob: -9.88068962097168
    6. ':' → logprob: -10.63068962097168
    7. ',a' → logprob: -11.38068962097168
    8. 'e' → logprob: -11.50568962097168
    9. 'a' → logprob: -11.63068962097168
    10. ',q' → logprob: -11.88068962097168

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017822809517383575
    2. ')' → logprob: -4.142822742462158
    3. ',' → logprob: -6.892822742462158
    4. ':' → logprob: -7.392822742462158
    5. ' ):' → logprob: -9.392823219299316
    6. '=' → logprob: -11.017823219299316
    7. '*' → logprob: -12.517823219299316
    8. ' :' → logprob: -12.642823219299316
    9. ',q' → logprob: -12.642823219299316
    10. ' ' → logprob: -12.767823219299316

Token 25: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16409935057163239
    2. ' ' → logprob: -2.2890994548797607
    3. ' :' → logprob: -3.6640994548797607
    4. '   ' → logprob: -4.664099216461182
    5. ',' → logprob: -5.414099216461182
    6. ':return' → logprob: -6.039099216461182
    7. ' if' → logprob: -6.289099216461182
    8. ' return' → logprob: -6.414099216461182
    9. '.' → logprob: -7.164099216461182
    10. '    ' → logprob: -7.664099216461182

Token 26: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13295143842697144
    2. ' i' → logprob: -2.132951498031616
    3. ' z' → logprob: -6.257951259613037
    4. ' q' → logprob: -6.632951259613037
    5. '  ' → logprob: -7.507951259613037
    6. '_' → logprob: -7.507951259613037
    7. ' _' → logprob: -7.757951259613037
    8. ' x' → logprob: -8.132951736450195
    9. 'i' → logprob: -8.507951736450195
    10. ' in' → logprob: -9.007951736450195

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018507275730371475
    2. 'in' → logprob: -4.143507480621338
    3. ' ' → logprob: -6.143507480621338
    4. 'range' → logprob: -9.26850700378418
    5. '_' → logprob: -9.39350700378418
    6. 's' → logprob: -9.89350700378418
    7. '  ' → logprob: -10.39350700378418
    8. 'n' → logprob: -10.51850700378418
    9. ' range' → logprob: -11.14350700378418
    10. ' _' → logprob: -12.26850700378418

Token 28: '[' (ID: 58)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31399914622306824
    2. ' range' → logprob: -1.3139991760253906
    3. 'z' → logprob: -7.563999176025391
    4. ' z' → logprob: -8.93899917602539
    5. 'q' → logprob: -10.06399917602539
    6. ' q' → logprob: -11.31399917602539
    7. 'g' → logprob: -12.06399917602539
    8. ' ' → logprob: -12.06399917602539
    9. 'r' → logprob: -12.68899917602539
    10. 'C' → logprob: -13.31399917602539

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032677841372787952
    2. '1' → logprob: -6.003267765045166
    3. 'None' → logprob: -8.628268241882324
    4. 'range' → logprob: -8.628268241882324
    5. ' ' → logprob: -8.753268241882324
    6. '_' → logprob: -9.378268241882324
    7. '_]' → logprob: -9.753268241882324
    8. ']' → logprob: -10.503268241882324
    9. '-' → logprob: -11.003268241882324
    10. ' range' → logprob: -11.128268241882324

Token 30: ']:' (ID: 12433)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18906521797180176
    2. ']*' → logprob: -2.0640652179718018
    3. ']' → logprob: -3.4390652179718018
    4. ']:' → logprob: -4.564064979553223
    5. ' ,' → logprob: -7.314064979553223
    6. ' ]' → logprob: -7.564064979553223
    7. ']+' → logprob: -7.939064979553223
    8. ' ' → logprob: -8.189064979553223
    9. ']):' → logprob: -8.314064979553223
    10. '])' → logprob: -9.689064979553223

Token 31: 'pass' (ID: 9948)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6382534503936768
    2. ' z' → logprob: -1.0132534503936768
    3. ' q' → logprob: -2.8882534503936768
    4. 'z' → logprob: -4.513253211975098
    5. ' if' → logprob: -4.638253211975098
    6. ' g' → logprob: -5.013253211975098
    7. ' return' → logprob: -5.138253211975098
    8. ' A' → logprob: -5.888253211975098
    9. ' p' → logprob: -6.013253211975098
    10. '    ' → logprob: -6.013253211975098

Token 32: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14068835973739624
    2. '<|end|>' → logprob: -3.515688419342041
    3. ' 
' → logprob: -3.640688419342041
    4. '   ' → logprob: -4.265688419342041
    5. '\' → logprob: -4.265688419342041
    6. '
' → logprob: -5.015688419342041
    7. ':' → logprob: -5.265688419342041
    8. ',' → logprob: -5.640688419342041
    9. '\n' → logprob: -5.640688419342041
    10. '  ' → logprob: -6.265688419342041

Token 33: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17694099247455597
    2. ' 
' → logprob: -2.92694091796875
    3. '<|end|>' → logprob: -3.55194091796875
    4. '   ' → logprob: -3.92694091796875
    5. '
' → logprob: -4.42694091796875
    6. 'g' → logprob: -5.30194091796875
    7. ' q' → logprob: -5.30194091796875
    8. ' return' → logprob: -5.42694091796875
    9. ' g' → logprob: -5.80194091796875
    10. '\' → logprob: -5.92694091796875

Token 34: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.09182348847389221
    2. 'z' → logprob: -3.2168235778808594
    3. ' q' → logprob: -4.216823577880859
    4. ' A' → logprob: -4.466823577880859
    5. ' B' → logprob: -4.841823577880859
    6. ' ' → logprob: -5.466823577880859
    7. ' True' → logprob: -6.091823577880859
    8. 'q' → logprob: -6.716823577880859
    9. ' not' → logprob: -6.716823577880859
    10. ' C' → logprob: -6.716823577880859

Token 35: ':a' (ID: 77025)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5807912945747375
    2. ' >' → logprob: -0.8307912945747375
    3. '<' → logprob: -6.830791473388672
    4. ' <' → logprob: -6.830791473388672
    5. '>=' → logprob: -7.580791473388672
    6. ' >=' → logprob: -7.830791473388672
    7. ':' → logprob: -8.080791473388672
    8. ' ' → logprob: -8.205791473388672
    9. '!=' → logprob: -8.580791473388672
    10. ' !=' → logprob: -8.830791473388672

Token 36: ',q' (ID: 86188)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.2494169473648071
    2. '.pop' → logprob: -1.6244169473648071
    3. '-=' → logprob: -2.7494168281555176
    4. '=' → logprob: -2.8744168281555176
    5. 'z' → logprob: -2.8744168281555176
    6. '  ' → logprob: -2.9994168281555176
    7. '   ' → logprob: -2.9994168281555176
    8. ' ' → logprob: -3.4994168281555176
    9. '-' → logprob: -3.7494168281555176
    10. 'r' → logprob: -3.8744168281555176

Token 37: '=z' (ID: 196886)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2642708420753479
    2. ',' → logprob: -1.8892707824707031
    3. ',q' → logprob: -3.764270782470703
    4. ' =' → logprob: -3.889270782470703
    5. ',a' → logprob: -4.139270782470703
    6. '=a' → logprob: -5.139270782470703
    7. '=q' → logprob: -5.639270782470703
    8. ' ,' → logprob: -5.639270782470703
    9. ',b' → logprob: -6.639270782470703
    10. ' ' → logprob: -6.764270782470703

Token 38: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0275219678878784
    2. ',a' → logprob: -1.1525219678878784
    3. ',q' → logprob: -1.4025219678878784
    4. ',b' → logprob: -3.527522087097168
    5. ',z' → logprob: -4.527522087097168
    6. '[q' → logprob: -4.902522087097168
    7. '<|end|>' → logprob: -5.277522087097168
    8. '[' → logprob: -5.277522087097168
    9. ' ,' → logprob: -5.402522087097168
    10. 'q' → logprob: -5.652522087097168

Token 39: '%' (ID: 4)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: 'z' (ID: 89)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02497674711048603
    2. 'q' → logprob: -4.02497673034668
    3. 'z' → logprob: -5.02497673034668
    4. ' a' → logprob: -9.02497673034668
    5. ' ' → logprob: -10.27497673034668
    6. '2' → logprob: -10.89997673034668
    7. 'A' → logprob: -11.27497673034668
    8. ' q' → logprob: -11.77497673034668
    9. 'b' → logprob: -12.27497673034668
    10. 'x' → logprob: -12.52497673034668

Token 41: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0243608951568604
    2. ' z' → logprob: -1.0243608951568604
    3. '<|end|>' → logprob: -2.6493608951568604
    4. 'z' → logprob: -3.0243608951568604
    5. '-' → logprob: -3.6493608951568604
    6. ' 
' → logprob: -4.024360656738281
    7. '   ' → logprob: -4.149360656738281
    8. '```' → logprob: -4.274360656738281
    9. '  ' → logprob: -4.399360656738281
    10. '    ' → logprob: -4.524360656738281

Token 42: ' return' (ID: 622)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.3601298928260803
    2. 'z' → logprob: -1.6101298332214355
    3. ' return' → logprob: -2.8601298332214355
    4. '-' → logprob: -4.1101298332214355
    5. '-z' → logprob: -4.7351298332214355
    6. 'return' → logprob: -5.4851298332214355
    7. ' ' → logprob: -5.6101298332214355
    8. '+' → logprob: -6.1101298332214355
    9. ' 
' → logprob: -6.6101298332214355
    10. '<|end|>' → logprob: -6.7351298332214355

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10071554780006409
    2. ' a' → logprob: -2.6007156372070312
    3. 'q' → logprob: -3.9757156372070312
    4. ' q' → logprob: -5.975715637207031
    5. 'z' → logprob: -8.850715637207031
    6. ' z' → logprob: -9.725715637207031
    7. ' ' → logprob: -10.350715637207031
    8. 'b' → logprob: -11.913215637207031
    9. 'A' → logprob: -12.038215637207031
    10. '(a' → logprob: -12.100715637207031

Token 44: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7789857387542725
    2. '(' → logprob: -1.9039857387542725
    3. ',' → logprob: -2.0289857387542725
    4. '<|end|>' → logprob: -2.5289857387542725
    5. '=' → logprob: -3.2789857387542725
    6. '[' → logprob: -3.6539857387542725
    7. '+' → logprob: -4.028985977172852
    8. 'def' → logprob: -4.403985977172852
    9. ' (' → logprob: -4.528985977172852
    10. ':' → logprob: -4.528985977172852

Token 45: 'set' (ID: 977)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.874050498008728
    2. ' ' → logprob: -1.874050498008728
    3. '<|end|>' → logprob: -1.999050498008728
    4. ':' → logprob: -2.3740506172180176
    5. '(' → logprob: -2.4990506172180176
    6. ')' → logprob: -3.6240506172180176
    7. '=' → logprob: -3.7490506172180176
    8. '+' → logprob: -4.624050617218018
    9. 'def' → logprob: -4.999050617218018
    10. '*' → logprob: -5.124050617218018

Token 46: 'attr' (ID: 6035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04246155545115471
    2. '([' → logprob: -3.792461633682251
    3. '()' → logprob: -4.417461395263672
    4. '({' → logprob: -5.792461395263672
    5. '([]' → logprob: -7.542461395263672
    6. '(
' → logprob: -7.667461395263672
    7. '([...' → logprob: -7.792461395263672
    8. '<|end|>' → logprob: -7.792461395263672
    9. '(range' → logprob: -7.917461395263672
    10. '((' → logprob: -7.917461395263672

Token 47: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.055621251463890076
    2. '(X' → logprob: -2.9306211471557617
    3. '(
' → logprob: -7.680621147155762
    4. '(x' → logprob: -9.430621147155762
    5. '(

' → logprob: -9.680621147155762
    6. '(g' → logprob: -10.180621147155762
    7. '(object' → logprob: -10.805621147155762
    8. '(Q' → logprob: -10.805621147155762
    9. '(A' → logprob: -11.555621147155762
    10. '((' → logprob: -11.680621147155762

Token 48: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016742201521992683
    2. ',X' → logprob: -4.39174222946167
    3. ',A' → logprob: -6.14174222946167
    4. ',g' → logprob: -7.26674222946167
    5. ' ,' → logprob: -7.51674222946167
    6. ',Q' → logprob: -8.766741752624512
    7. ',x' → logprob: -9.516741752624512
    8. ',int' → logprob: -9.766741752624512
    9. ',C' → logprob: -9.766741752624512
    10. ','' → logprob: -10.016741752624512

Token 49: 'y' (ID: 88)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.022883428260684013
    2. '__' → logprob: -5.147883415222168
    3. 'f' → logprob: -5.522883415222168
    4. 'a' → logprob: -5.772883415222168
    5. 'A' → logprob: -6.272883415222168
    6. ' __' → logprob: -7.022883415222168
    7. 'x' → logprob: -7.335383415222168
    8. ' g' → logprob: -7.585383415222168
    9. 'z' → logprob: -7.960383415222168
    10. ' ' → logprob: -8.210383415222168

Token 50: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2284613847732544
    2. ',' → logprob: -1.9784613847732544
    3. ',g' → logprob: -2.978461265563965
    4. ' ,' → logprob: -5.228461265563965
    5. ' ',' → logprob: -5.478461265563965
    6. '','' → logprob: -6.353461265563965
    7. ''' → logprob: -6.603461265563965
    8. '',(' → logprob: -7.853461265563965
    9. ','' → logprob: -7.978461265563965
    10. 'g' → logprob: -8.103461265563965

Token 51: 'lambda' (ID: 35280)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.022299161180853844
    2. 'lambda' → logprob: -4.272299289703369
    3. 'staticmethod' → logprob: -5.897299289703369
    4. ' g' → logprob: -6.022299289703369
    5. 'property' → logprob: -7.522299289703369
    6. 'classmethod' → logprob: -7.522299289703369
    7. ' lambda' → logprob: -7.772299289703369
    8. ')' → logprob: -8.397298812866211
    9. ' ' → logprob: -8.647298812866211
    10. 'static' → logprob: -8.647298812866211

Token 52: ' s' (ID: 265)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2942923903465271
    2. 'x' → logprob: -2.169292449951172
    3. ' a' → logprob: -3.044292449951172
    4. ' self' → logprob: -3.919292449951172
    5. ' q' → logprob: -3.919292449951172
    6. ' s' → logprob: -4.419292449951172
    7. ' A' → logprob: -4.794292449951172
    8. 'a' → logprob: -5.044292449951172
    9. ' y' → logprob: -5.544292449951172
    10. 'A' → logprob: -5.794292449951172

Token 53: ',t' (ID: 26927)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.21757209300994873
    2. ',x' → logprob: -2.0925722122192383
    3. ',' → logprob: -3.2175722122192383
    4. ',s' → logprob: -4.717572212219238
    5. ',y' → logprob: -4.967572212219238
    6. ',A' → logprob: -5.592572212219238
    7. ',b' → logprob: -5.842572212219238
    8. ',f' → logprob: -6.092572212219238
    9. ',q' → logprob: -6.217572212219238
    10. ',z' → logprob: -6.342572212219238

Token 54: ',u' (ID: 80698)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37015965580940247
    2. ':s' → logprob: -2.37015962600708
    3. ' :' → logprob: -2.87015962600708
    4. ',s' → logprob: -2.99515962600708
    5. ',g' → logprob: -3.49515962600708
    6. ':g' → logprob: -3.87015962600708
    7. ',y' → logprob: -4.24515962600708
    8. ':t' → logprob: -4.49515962600708
    9. ',' → logprob: -4.62015962600708
    10. ':y' → logprob: -5.37015962600708

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20111943781375885
    2. ' :' → logprob: -2.5761194229125977
    3. ':s' → logprob: -2.7011194229125977
    4. ':g' → logprob: -4.576119422912598
    5. ':t' → logprob: -5.076119422912598
    6. ',s' → logprob: -5.701119422912598
    7. ':y' → logprob: -6.201119422912598
    8. ',g' → logprob: -6.326119422912598
    9. ':x' → logprob: -6.326119422912598
    10. ':a' → logprob: -6.576119422912598

Token 56: ' t' (ID: 260)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.08438806235790253
    2. ' g' → logprob: -3.209388017654419
    3. 's' → logprob: -4.334388256072998
    4. '(g' → logprob: -4.459388256072998
    5. '(s' → logprob: -5.209388256072998
    6. ' (' → logprob: -5.834388256072998
    7. ' s' → logprob: -6.209388256072998
    8. 'X' → logprob: -7.834388256072998
    9. ' ' → logprob: -7.834388256072998
    10. '(' → logprob: -8.08438777923584

Token 57: '*u' (ID: 156006)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8413450121879578
    2. '%' → logprob: -1.2163450717926025
    3. '+' → logprob: -2.2163450717926025
    4. '*u' → logprob: -2.3413450717926025
    5. '%s' → logprob: -4.591344833374023
    6. '*' → logprob: -4.591344833374023
    7. '+s' → logprob: -5.091344833374023
    8. ' %' → logprob: -5.091344833374023
    9. 'if' → logprob: -5.216344833374023
    10. ' and' → logprob: -5.341344833374023

Token 58: '//' (ID: 393)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09220153838396072
    2. '//' → logprob: -3.3422014713287354
    3. ' %' → logprob: -4.0922017097473145
    4. ')' → logprob: -4.2172017097473145
    5. '+' → logprob: -4.9672017097473145
    6. '%x' → logprob: -5.8422017097473145
    7. ' if' → logprob: -5.9672017097473145
    8. ' )' → logprob: -6.8422017097473145
    9. '%A' → logprob: -6.9672017097473145
    10. '%n' → logprob: -7.0922017097473145

Token 59: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.004097635392099619
    2. ' g' → logprob: -5.5040974617004395
    3. 's' → logprob: -11.879097938537598
    4. ')' → logprob: -12.379097938537598
    5. ' ' → logprob: -12.379097938537598
    6. 'q' → logprob: -14.379097938537598
    7. '(g' → logprob: -14.629097938537598
    8. 'X' → logprob: -14.754097938537598
    9. ' s' → logprob: -14.879097938537598
    10. '   ' → logprob: -15.254097938537598

Token 60: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.041367337107658386
    2. '(' → logprob: -3.541367292404175
    3. '(s' → logprob: -4.916367530822754
    4. 't' → logprob: -5.791367530822754
    5. 's' → logprob: -7.041367530822754
    6. '(u' → logprob: -8.916367530822754
    7. ')' → logprob: -9.666367530822754
    8. ' t' → logprob: -10.666367530822754
    9. ')t' → logprob: -10.666367530822754
    10. ' (' → logprob: -11.041367530822754

Token 61: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.2514767050743103
    2. ',' → logprob: -1.876476764678955
    3. ',s' → logprob: -2.751476764678955
    4. 'u' → logprob: -6.126476764678955
    5. 's' → logprob: -6.501476764678955
    6. ' ,' → logprob: -7.251476764678955
    7. ',q' → logprob: -7.626476764678955
    8. '(u' → logprob: -8.876476287841797
    9. ',t' → logprob: -9.376476287841797
    10. ' u' → logprob: -9.626476287841797

Token 62: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38806939125061035
    2. ')' → logprob: -1.1380693912506104
    3. ')))' → logprob: -7.013069152832031
    4. ')
' → logprob: -9.388069152832031
    5. '))
' → logprob: -9.513069152832031
    6. ''))' → logprob: -10.513069152832031
    7. ' ))' → logprob: -10.763069152832031
    8. ' )' → logprob: -11.013069152832031
    9. ')t' → logprob: -11.138069152832031
    10. ')>' → logprob: -11.638069152832031

Token 63: 'E' (ID: 36)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '=X' (ID: 143117)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0043896436691284
    2. '=' → logprob: -1.5043896436691284
    3. 'X' → logprob: -1.5043896436691284
    4. ' =' → logprob: -2.504389762878418
    5. '.' → logprob: -3.004389762878418
    6. '1' → logprob: -5.004389762878418
    7. '.__' → logprob: -5.129389762878418
    8. '=x' → logprob: -5.379389762878418
    9. 'xt' → logprob: -6.004389762878418
    10. '.x' → logprob: -6.004389762878418

Token 65: '().' (ID: 1454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015553286066278815
    2. '<|end|>' → logprob: -7.626555442810059
    3. '.
' → logprob: -7.751555442810059
    4. '(' → logprob: -9.376555442810059
    5. ')' → logprob: -9.501555442810059
    6. 'y' → logprob: -9.751555442810059
    7. '.y' → logprob: -10.001555442810059
    8. '[' → logprob: -10.001555442810059
    9. '.

' → logprob: -10.001555442810059
    10. '```' → logprob: -10.376555442810059

Token 66: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.2729995988775045e-06
    2. ' y' → logprob: -12.125006675720215
    3. ''y' → logprob: -15.875006675720215
    4. 'y's' → logprob: -16.0000057220459
    5. '<|end|>' → logprob: -16.1250057220459
    6. 'yse' → logprob: -16.3750057220459
    7. '‘y' → logprob: -16.3750057220459
    8. '_y' → logprob: -17.1250057220459
    9. 'yl' → logprob: -17.5000057220459
    10. '	y' → logprob: -17.5000057220459

Token 67: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.262032687664032
    2. '<|end|>' → logprob: -1.6370327472686768
    3. '(A' → logprob: -3.6370327472686768
    4. '(B' → logprob: -4.887032508850098
    5. ' ' → logprob: -7.512032508850098
    6. ' A' → logprob: -8.012032508850098
    7. ')' → logprob: -8.137032508850098
    8. ' (' → logprob: -8.512032508850098
    9. 'A' → logprob: -8.637032508850098
    10. '(
' → logprob: -9.512032508850098

Token 68: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.03742675110697746
    2. ',' → logprob: -3.662426710128784
    3. 'D' → logprob: -4.662426948547363
    4. ' ,' → logprob: -6.787426948547363
    5. ',B' → logprob: -8.662426948547363
    6. ' D' → logprob: -8.787426948547363
    7. ' ' → logprob: -9.287426948547363
    8. ',d' → logprob: -10.912426948547363
    9. ',A' → logprob: -11.162426948547363
    10. 'B' → logprob: -11.537426948547363

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.3451433409936726e-05
    2. ' )' → logprob: -10.625033378601074
    3. ')
' → logprob: -12.750033378601074
    4. '+' → logprob: -12.875033378601074
    5. ')#' → logprob: -14.250033378601074
    6. ')

' → logprob: -14.500033378601074
    7. '))' → logprob: -14.625033378601074
    8. ')+' → logprob: -14.750033378601074
    9. '*' → logprob: -14.875033378601074
    10. '),' → logprob: -15.750033378601074

Token 70: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04537411034107208
    2. '*' → logprob: -3.4203741550445557
    3. '<|end|>' → logprob: -4.920373916625977
    4. ')' → logprob: -6.420373916625977
    5. 'print' → logprob: -6.920373916625977
    6. ' ' → logprob: -7.920373916625977
    7. '#' → logprob: -8.045373916625977
    8. '=' → logprob: -8.920373916625977
    9. 'A' → logprob: -8.920373916625977
    10. '+A' → logprob: -9.045373916625977

Token 71: ' w' (ID: 286)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.24007119238376617
    2. ' h' → logprob: -2.4900712966918945
    3. ' main' → logprob: -2.7400712966918945
    4. 'f' → logprob: -3.6150712966918945
    5. ' ' → logprob: -4.2400712966918945
    6. 'h' → logprob: -4.8650712966918945
    7. ' A' → logprob: -5.9900712966918945
    8. ' l' → logprob: -6.1150712966918945
    9. ' s' → logprob: -6.9275712966918945
    10. ' H' → logprob: -7.0525712966918945

Token 72: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9998757839202881
    2. '(s' → logprob: -1.624875783920288
    3. '(x' → logprob: -2.499875783920288
    4. '(q' → logprob: -2.499875783920288
    5. '(p' → logprob: -2.624875783920288
    6. '(a' → logprob: -2.749875783920288
    7. '(n' → logprob: -3.249875783920288
    8. '(e' → logprob: -4.124876022338867
    9. '(E' → logprob: -4.499876022338867
    10. '(i' → logprob: -4.749876022338867

Token 73: ',m' (ID: 26648)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016004100441932678
    2. ',' → logprob: -4.8910040855407715
    3. ',v' → logprob: -5.7660040855407715
    4. ')' → logprob: -6.2660040855407715
    5. ',s' → logprob: -7.7660040855407715
    6. ' ):' → logprob: -8.01600456237793
    7. ',a' → logprob: -8.01600456237793
    8. ',k' → logprob: -8.39100456237793
    9. ',t' → logprob: -8.39100456237793
    10. ',r' → logprob: -8.51600456237793

Token 74: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004148441832512617
    2. ',' → logprob: -6.379148483276367
    3. ')' → logprob: -7.629148483276367
    4. ',v' → logprob: -7.629148483276367
    5. ',n' → logprob: -7.879148483276367
    6. '):
' → logprob: -8.504148483276367
    7. ':' → logprob: -8.754148483276367
    8. ' ):' → logprob: -8.754148483276367
    9. ',s' → logprob: -8.879148483276367
    10. ',r' → logprob: -9.879148483276367

Token 75: 'return' (ID: 1034)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.2636067867279053
    2. ' return' → logprob: -1.2636067867279053
    3. ' if' → logprob: -1.5136067867279053
    4. ' for' → logprob: -2.2636067867279053
    5. ' while' → logprob: -3.7636067867279053
    6. ' ' → logprob: -3.7636067867279053
    7. ' i' → logprob: -3.8886067867279053
    8. 'r' → logprob: -5.013607025146484
    9. ' s' → logprob: -5.138607025146484
    10. '   ' → logprob: -5.388607025146484

Token 76: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4986948072910309
    2. ' v' → logprob: -1.7486947774887085
    3. 'm' → logprob: -2.498694896697998
    4. '(v' → logprob: -2.998694896697998
    5. ' m' → logprob: -3.873694896697998
    6. ' (' → logprob: -4.498694896697998
    7. '(m' → logprob: -4.873694896697998
    8. '(' → logprob: -5.248694896697998
    9. ' ' → logprob: -5.498694896697998
    10. 'g' → logprob: -5.498694896697998

Token 77: '//' (ID: 393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3689473867416382
    2. '(E' → logprob: -1.7439473867416382
    3. '<|end|>' → logprob: -1.9939473867416382
    4. '(C' → logprob: -1.9939473867416382
    5. '+' → logprob: -2.2439475059509277
    6. ',' → logprob: -3.2439475059509277
    7. '(D' → logprob: -3.2439475059509277
    8. '(v' → logprob: -3.3689475059509277
    9. ' ' → logprob: -4.243947505950928
    10. ' +' → logprob: -4.368947505950928

Token 78: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3504362404346466
    2. 'g' → logprob: -1.2254362106323242
    3. 'w' → logprob: -6.225436210632324
    4. ' m' → logprob: -12.100436210632324
    5. ' g' → logprob: -13.475436210632324
    6. '(m' → logprob: -13.725436210632324
    7. ' ' → logprob: -14.350436210632324
    8. '(' → logprob: -14.600436210632324
    9. 'v' → logprob: -14.850436210632324
    10. '{' → logprob: -15.350436210632324

Token 79: '+' (ID: 10)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.271619439125061
    2. 'w' → logprob: -1.646619439125061
    3. 'v' → logprob: -2.1466193199157715
    4. 'A' → logprob: -2.5216193199157715
    5. '*' → logprob: -2.7716193199157715
    6. 'print' → logprob: -3.3966193199157715
    7. 'r' → logprob: -3.5216193199157715
    8. 'f' → logprob: -3.5216193199157715
    9. '%' → logprob: -3.7716193199157715
    10. 'F' → logprob: -4.0216193199157715

Token 80: '(-' (ID: 8087)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.7553166151046753
    2. '1' → logprob: -1.5053166151046753
    3. 'v' → logprob: -2.380316734313965
    4. ' (' → logprob: -2.880316734313965
    5. 'bool' → logprob: -3.380316734313965
    6. '(' → logprob: -3.380316734313965
    7. ' bool' → logprob: -3.630316734313965
    8. ' v' → logprob: -3.880316734313965
    9. '(bool' → logprob: -4.380316734313965
    10. 'int' → logprob: -4.880316734313965

Token 81: 'A' (ID: 32)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5141884684562683
    2. '(' → logprob: -1.639188528060913
    3. '1' → logprob: -2.264188528060913
    4. '(-' → logprob: -2.764188528060913
    5. '(-(' → logprob: -3.639188528060913
    6. '-(' → logprob: -5.514188289642334
    7. '(int' → logprob: -5.639188289642334
    8. '-' → logprob: -6.389188289642334
    9. 'int' → logprob: -6.514188289642334
    10. ' (' → logprob: -7.139188289642334

Token 82: '//' (ID: 393)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5729494690895081
    2. '1' → logprob: -2.0729494094848633
    3. ' (' → logprob: -2.4479494094848633
    4. '(' → logprob: -2.5729494094848633
    5. 'v' → logprob: -3.0729494094848633
    6. '(-' → logprob: -3.5729494094848633
    7. '((' → logprob: -4.322949409484863
    8. ' v' → logprob: -4.947949409484863
    9. '<v' → logprob: -5.447949409484863
    10. '-v' → logprob: -5.572949409484863

Token 83: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0016205495921894908
    2. ' m' → logprob: -7.126620769500732
    3. 'B' → logprob: -7.751620769500732
    4. '-' → logprob: -9.251620292663574
    5. '1' → logprob: -9.251620292663574
    6. 'v' → logprob: -9.501620292663574
    7. '2' → logprob: -10.501620292663574
    8. 'w' → logprob: -11.001620292663574
    9. 'D' → logprob: -11.251620292663574
    10. '-m' → logprob: -11.376620292663574

Token 84: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004767595790326595
    2. ' )' → logprob: -5.879767417907715
    3. '+' → logprob: -7.129767417907715
    4. ')+' → logprob: -8.004767417907715
    5. ')+(' → logprob: -8.754767417907715
    6. '))' → logprob: -9.629767417907715
    7. '>' → logprob: -9.754767417907715
    8. ')))' → logprob: -9.754767417907715
    9. '+)' → logprob: -9.879767417907715
    10. ')*' → logprob: -10.129767417907715

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8130531907081604
    2. '(' → logprob: -1.4380531311035156
    3. '((' → logprob: -1.6880531311035156
    4. '(-' → logprob: -3.3130531311035156
    5. '(B' → logprob: -3.8130531311035156
    6. '(v' → logprob: -3.8130531311035156
    7. '(A' → logprob: -4.688053131103516
    8. '(C' → logprob: -5.063053131103516
    9. '((-' → logprob: -5.188053131103516
    10. ' ' → logprob: -5.563053131103516

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: 'r' (ID: 81)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.0837621688842773
    2. '#' → logprob: -2.3337621688842773
    3. 'f' → logprob: -2.5837621688842773
    4. '+' → logprob: -2.5837621688842773
    5. 'print' → logprob: -2.9587621688842773
    6. 'x' → logprob: -3.0837621688842773
    7. 'n' → logprob: -3.2087621688842773
    8. 'E' → logprob: -3.3337621688842773
    9. ')' → logprob: -3.3337621688842773
    10. 'F' → logprob: -3.5837621688842773

Token 88: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4492281377315521
    2. '=' → logprob: -1.0742281675338745
    3. '(' → logprob: -5.574228286743164
    4. '=r' → logprob: -5.699228286743164
    5. '=A' → logprob: -5.699228286743164
    6. '=w' → logprob: -6.199228286743164
    7. '=(' → logprob: -6.324228286743164
    8. ',' → logprob: -6.824228286743164
    9. '=C' → logprob: -7.449228286743164
    10. 's' → logprob: -7.699228286743164

Token 89: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15872156620025635
    2. 'i' → logprob: -2.658721446990967
    3. ' w' → logprob: -3.658721446990967
    4. '0' → logprob: -4.033721446990967
    5. 'x' → logprob: -4.533721446990967
    6. 'A' → logprob: -5.283721446990967
    7. ' i' → logprob: -5.408721446990967
    8. 'v' → logprob: -6.283721446990967
    9. '(' → logprob: -6.908721446990967
    10. 'B' → logprob: -7.033721446990967

Token 90: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.6863152384757996
    2. '(C' → logprob: -0.9363152384757996
    3. '(A' → logprob: -2.8113152980804443
    4. '(i' → logprob: -3.9363152980804443
    5. '(' → logprob: -4.311315059661865
    6. '(E' → logprob: -5.561315059661865
    7. '(D' → logprob: -5.686315059661865
    8. '(x' → logprob: -7.061315059661865
    9. '((' → logprob: -7.436315059661865
    10. '(I' → logprob: -7.811315059661865

Token 91: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8819398880004883
    2. ',C' → logprob: -0.8819398880004883
    3. ',i' → logprob: -3.5069398880004883
    4. ',B' → logprob: -3.8819398880004883
    5. ',D' → logprob: -4.006939888000488
    6. ',k' → logprob: -4.131939888000488
    7. ' ,' → logprob: -4.131939888000488
    8. ',A' → logprob: -4.381939888000488
    9. ',m' → logprob: -4.506939888000488
    10. ',j' → logprob: -4.631939888000488

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00336307380348444
    2. '-' → logprob: -6.628363132476807
    3. ' )' → logprob: -7.253363132476807
    4. ')]' → logprob: -8.128362655639648
    5. '+' → logprob: -8.628362655639648
    6. '*' → logprob: -8.753362655639648
    7. 'for' → logprob: -9.128362655639648
    8. ')])' → logprob: -9.378362655639648
    9. ')+' → logprob: -9.503362655639648
    10. ' for' → logprob: -9.628362655639648

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6981189250946045
    2. 'for' → logprob: -0.6981189250946045
    3. '-' → logprob: -6.073119163513184
    4. '-k' → logprob: -7.323119163513184
    5. '+' → logprob: -7.823119163513184
    6. ')' → logprob: -8.198119163513184
    7. ' ' → logprob: -8.198119163513184
    8. 'k' → logprob: -8.573119163513184
    9. '*' → logprob: -8.823119163513184
    10. ']' → logprob: -8.823119163513184

Token 94: ' k' (ID: 372)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.40418338775634766
    2. 'range' → logprob: -1.6541833877563477
    3. ' k' → logprob: -2.2791833877563477
    4. 'k' → logprob: -3.4041833877563477
    5. '(range' → logprob: -6.404183387756348
    6. '[' → logprob: -6.654183387756348
    7. ' r' → logprob: -7.029183387756348
    8. '[k' → logprob: -7.654183387756348
    9. ' ' → logprob: -8.154183387756348
    10. 'r' → logprob: -8.279183387756348

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017926320433616638
    2. 'in' → logprob: -6.5017924308776855
    3. 'range' → logprob: -9.001792907714844
    4. ' range' → logprob: -9.251792907714844
    5. ' ' → logprob: -9.876792907714844
    6. '<|end|>' → logprob: -11.751792907714844
    7. ' ' → logprob: -13.001792907714844
    8. '  ' → logprob: -13.439292907714844
    9. '(range' → logprob: -13.814292907714844
    10. 's' → logprob: -14.064292907714844

Token 96: ' (' (ID: 350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04107801988720894
    2. 'range' → logprob: -3.5410780906677246
    3. ' r' → logprob: -5.041078090667725
    4. '[' → logprob: -6.541078090667725
    5. 'r' → logprob: -6.791078090667725
    6. '[r' → logprob: -7.416078090667725
    7. ' [' → logprob: -7.666078090667725
    8. '(range' → logprob: -7.916078090667725
    9. ' C' → logprob: -8.541077613830566
    10. '[C' → logprob: -8.791077613830566

Token 97: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.46263572573661804
    2. '[C' → logprob: -1.5876357555389404
    3. '(C' → logprob: -2.0876357555389404
    4. 'range' → logprob: -4.337635517120361
    5. 'A' → logprob: -5.087635517120361
    6. ' C' → logprob: -5.337635517120361
    7. 'E' → logprob: -5.462635517120361
    8. '[A' → logprob: -6.087635517120361
    9. ' range' → logprob: -6.337635517120361
    10. '(A' → logprob: -6.712635517120361

Token 98: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.011023893021047115
    2. ',' → logprob: -4.636023998260498
    3. ' ,' → logprob: -7.761023998260498
    4. ',E' → logprob: -8.26102352142334
    5. ',w' → logprob: -9.13602352142334
    6. ',B' → logprob: -9.51102352142334
    7. ',C' → logprob: -9.63602352142334
    8. 'D' → logprob: -9.76102352142334
    9. ',d' → logprob: -10.01102352142334
    10. '-' → logprob: -10.38602352142334

Token 99: ',E' (ID: 101576)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00029875844484195113
    2. ')' → logprob: -8.750298500061035
    3. ' )' → logprob: -9.875298500061035
    4. ')])' → logprob: -10.125298500061035
    5. ']' → logprob: -11.125298500061035
    6. '])]' → logprob: -11.750298500061035
    7. ',' → logprob: -11.875298500061035
    8. '))' → logprob: -12.500298500061035
    9. ')]
' → logprob: -12.500298500061035
    10. ')]

' → logprob: -12.625298500061035

Token 100: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000287795381154865
    2. ']' → logprob: -8.750288009643555
    3. ')' → logprob: -9.875288009643555
    4. '])]' → logprob: -10.625288009643555
    5. ' )' → logprob: -10.750288009643555
    6. '])' → logprob: -11.250288009643555
    7. ')])' → logprob: -11.375288009643555
    8. ',' → logprob: -12.875288009643555
    9. '))' → logprob: -13.875288009643555
    10. ')]
' → logprob: -14.000288009643555

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08261869847774506
    2. 'r' → logprob: -2.7076187133789062
    3. '<|end|>' → logprob: -5.832618713378906
    4. ']' → logprob: -6.332618713378906
    5. 'for' → logprob: -6.332618713378906
    6. 'max' → logprob: -6.582618713378906
    7. 's' → logprob: -7.082618713378906
    8. '[' → logprob: -7.207618713378906
    9. '
' → logprob: -7.707618713378906
    10. ')' → logprob: -7.832618713378906

Token 102: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.04118819162249565
    2. '(' → logprob: -3.6661882400512695
    3. '(*' → logprob: -4.2911882400512695
    4. '(max' → logprob: -7.7911882400512695
    5. '(tuple' → logprob: -8.29118824005127
    6. '(sum' → logprob: -8.66618824005127
    7. '(min' → logprob: -8.79118824005127
    8. '(sorted' → logprob: -10.41618824005127
    9. '((' → logprob: -11.16618824005127
    10. ' (' → logprob: -11.29118824005127

Token 103: 'B' (ID: 33)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.557063639163971
    2. 'min' → logprob: -1.6820635795593262
    3. 'max' → logprob: -1.9320635795593262
    4. 'B' → logprob: -3.807063579559326
    5. 'sum' → logprob: -4.182063579559326
    6. ' r' → logprob: -4.307063579559326
    7. 'A' → logprob: -4.557063579559326
    8. ' max' → logprob: -4.557063579559326
    9. ' min' → logprob: -4.557063579559326
    10. ' ' → logprob: -6.432063579559326

Token 104: '-A' (ID: 9406)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.187427282333374
    2. '-r' → logprob: -1.437427282333374
    3. '-max' → logprob: -1.687427282333374
    4. '-min' → logprob: -2.562427282333374
    5. '-s' → logprob: -3.312427282333374
    6. ' -' → logprob: -3.312427282333374
    7. '-B' → logprob: -3.687427282333374
    8. '-C' → logprob: -4.187427520751953
    9. '+' → logprob: -4.437427520751953
    10. '*' → logprob: -4.687427520751953

Token 105: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011819059029221535
    2. ')+' → logprob: -4.761818885803223
    3. ' +' → logprob: -6.261818885803223
    4. ')' → logprob: -7.511818885803223
    5. '+r' → logprob: -8.011818885803223
    6. ')*' → logprob: -9.011818885803223
    7. ')+(' → logprob: -10.261818885803223
    8. ' )' → logprob: -10.511818885803223
    9. '-' → logprob: -10.636818885803223
    10. ')//' → logprob: -10.761818885803223

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001704102149233222
    2. ' ' → logprob: -6.376704216003418
    3. ')' → logprob: -13.751704216003418
    4. 'r' → logprob: -15.251704216003418
    5. '(' → logprob: -15.751704216003418
    6. ' r' → logprob: -16.1267032623291
    7. '2' → logprob: -16.2517032623291
    8. '))' → logprob: -16.7517032623291
    9. '0' → logprob: -16.8142032623291
    10. '  ' → logprob: -17.3142032623291

Token 107: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.6876983642578125
    2. ')' → logprob: -1.8126983642578125
    3. '-' → logprob: -1.8126983642578125
    4. ' -' → logprob: -2.4376983642578125
    5. ')-(' → logprob: -3.3126983642578125
    6. ')+' → logprob: -4.1876983642578125
    7. ' )' → logprob: -4.4376983642578125
    8. ')*' → logprob: -4.9376983642578125
    9. '-s' → logprob: -5.3126983642578125
    10. '-r' → logprob: -7.1876983642578125

Token 108: 'r' (ID: 81)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7307392358779907
    2. 'sum' → logprob: -1.3557392358779907
    3. 'max' → logprob: -1.6057392358779907
    4. ' min' → logprob: -3.605739116668701
    5. ' sum' → logprob: -4.230739116668701
    6. ' max' → logprob: -4.605739116668701
    7. 'r' → logprob: -4.855739116668701
    8. ' r' → logprob: -8.35573959350586
    9. '(min' → logprob: -9.10573959350586
    10. '(max' → logprob: -10.23073959350586

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023558970540761948
    2. '0' → logprob: -3.7735588550567627
    3. '[-' → logprob: -9.023558616638184
    4. '1' → logprob: -9.898558616638184
    5. ' [' → logprob: -10.398558616638184
    6. ' ' → logprob: -10.898558616638184
    7. ')' → logprob: -11.148558616638184
    8. '2' → logprob: -11.398558616638184
    9. 'sum' → logprob: -11.398558616638184
    10. '-' → logprob: -11.648558616638184

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006676767487078905
    2. '2' → logprob: -5.13167667388916
    3. ' ' → logprob: -7.75667667388916
    4. '1' → logprob: -8.13167667388916
    5. '-' → logprob: -11.25667667388916
    6. 'sum' → logprob: -12.00667667388916
    7. 'r' → logprob: -13.25667667388916
    8. 'x' → logprob: -14.25667667388916
    9. ']' → logprob: -14.31917667388916
    10. 'i' → logprob: -14.63167667388916

Token 111: ']-' (ID: 27107)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.010855741798877716
    2. '+r' → logprob: -5.510855674743652
    3. ' -' → logprob: -5.760855674743652
    4. '-' → logprob: -5.760855674743652
    5. ')' → logprob: -8.885855674743652
    6. ']-' → logprob: -9.135855674743652
    7. ')-' → logprob: -9.760855674743652
    8. '+' → logprob: -9.885855674743652
    9. ' ' → logprob: -10.635855674743652
    10. ']' → logprob: -11.385855674743652

Token 112: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019402962643653154
    2. ' r' → logprob: -6.2519402503967285
    3. '(r' → logprob: -11.501940727233887
    4. ' (' → logprob: -13.876940727233887
    5. 'sum' → logprob: -15.126940727233887
    6. '(' → logprob: -16.00193977355957
    7. 'max' → logprob: -16.50193977355957
    8. ' ' → logprob: -16.75193977355957
    9. '   ' → logprob: -16.75193977355957
    10. '  ' → logprob: -17.25193977355957

Token 113: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020616286201402545
    2. '1' → logprob: -8.500205993652344
    3. '[
' → logprob: -13.875205993652344
    4. ' [' → logprob: -14.375205993652344
    5. '[-' → logprob: -14.625205993652344
    6. '```' → logprob: -15.375205993652344
    7. '2' → logprob: -16.125205993652344
    8. '(' → logprob: -16.375205993652344
    9. '\[' → logprob: -17.125205993652344
    10. '][' → logprob: -17.375205993652344

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001769616355886683
    2. '2' → logprob: -9.000177383422852
    3. ' ' → logprob: -9.875177383422852
    4. '   ' → logprob: -13.750177383422852
    5. '-' → logprob: -14.687677383422852
    6. '```' → logprob: -16.25017738342285
    7. '  ' → logprob: -16.31267738342285
    8. ']' → logprob: -16.37517738342285
    9. '0' → logprob: -16.68767738342285
    10. '[' → logprob: -16.87517738342285

Token 115: ']+' (ID: 15344)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.001975503284484148
    2. '-r' → logprob: -7.0019755363464355
    3. '+' → logprob: -7.2519755363464355
    4. ' +' → logprob: -8.001975059509277
    5. ' -' → logprob: -11.376975059509277
    6. '-' → logprob: -13.001975059509277
    7. ')+' → logprob: -13.001975059509277
    8. '+-' → logprob: -13.501975059509277
    9. '+
' → logprob: -14.626975059509277
    10. ']+' → logprob: -14.626975059509277

Token 116: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.4391956685576588e-05
    2. ' r' → logprob: -10.625024795532227
    3. '(r' → logprob: -18.625024795532227
    4. ' ' → logprob: -19.625024795532227
    5. '	r' → logprob: -19.875024795532227
    6. '<|end|>' → logprob: -19.875024795532227
    7. '+r' → logprob: -20.000024795532227
    8. '  ' → logprob: -20.000024795532227
    9. '   ' → logprob: -20.250024795532227
    10. '(' → logprob: -20.750024795532227

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3663626305060461e-05
    2. '2' → logprob: -11.25001335144043
    3. '[
' → logprob: -15.62501335144043
    4. '[-' → logprob: -16.12501335144043
    5. '\[' → logprob: -16.12501335144043
    6. '```' → logprob: -16.37501335144043
    7. ' [' → logprob: -17.37501335144043
    8. '][' → logprob: -18.37501335144043
    9. '(' → logprob: -18.62501335144043
    10. '
' → logprob: -19.37501335144043

Token 118: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '-' → logprob: -14.875001907348633
    4. '```' → logprob: -16.250001907348633
    5. '
' → logprob: -17.437501907348633
    6. '２' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.687501907348633
    8. '۲' → logprob: -18.062501907348633
    9. '' → logprob: -18.250001907348633
    10. '

' → logprob: -18.437501907348633

Token 119: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.886803359724581e-05
    2. '))' → logprob: -9.500079154968262
    3. ' )' → logprob: -13.375079154968262
    4. '])' → logprob: -13.750079154968262
    5. '})' → logprob: -14.750079154968262
    6. ')))' → logprob: -15.250079154968262
    7. ')`' → logprob: -15.500079154968262
    8. ')
' → logprob: -16.125078201293945
    9. ')])' → logprob: -16.375078201293945
    10. '`)' → logprob: -16.750078201293945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 117
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 58.97%
================================================================================
