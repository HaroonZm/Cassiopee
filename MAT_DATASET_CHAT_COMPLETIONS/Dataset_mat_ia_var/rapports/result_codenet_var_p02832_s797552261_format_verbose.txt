================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input_read_entire = sys.stdin.read
input_read_line = sys.stdin.readline
input_read_lines = sys.stdin.readlines

sys.setrecursionlimit(10 ** 9)
INFINITE_DISTANCE = 1 << 60
MODULO_CONST = 1000000007

def main():
    input_values = list(map(int, input_read_entire().split()))
    sequence_length = input_values[0]
    sequence_numbers = input_values[1:]

    current_expected_number = 1

    for number in sequence_numbers:
        if number == current_expected_number:
            current_expected_number += 1

    if current_expected_number == 1:
        print(-1)
    else:
        min_removals_needed = sequence_length - current_expected_number + 1
        print(min_removals_needed)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03690023347735405
    2. '\n' → logprob: -3.661900281906128
    3. 'import' → logprob: -5.786900043487549
    4. '\' → logprob: -6.286900043487549
    5. 'newline' → logprob: -6.786900043487549
    6. '' → logprob: -7.161900043487549
    7. '```' → logprob: -7.411900043487549
    8. '<|end|>' → logprob: -7.411900043487549
    9. '[' → logprob: -7.661900043487549
    10. '
' → logprob: -7.786900043487549

Token 4: '_read' (ID: 14291)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036376076750457287
    2. '.' → logprob: -5.753637790679932
    3. '(
' → logprob: -9.003637313842773
    4. ' (' → logprob: -9.503637313842773
    5. '()' → logprob: -9.503637313842773
    6. ')' → logprob: -10.003637313842773
    7. '_' → logprob: -10.253637313842773
    8. '('' → logprob: -11.253637313842773
    9. ''' → logprob: -11.378637313842773
    10. '[' → logprob: -11.378637313842773

Token 5: '_ent' (ID: 66249)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5256144404411316
    2. '(' → logprob: -1.0256145000457764
    3. 'er' → logprob: -3.0256145000457764
    4. '('' → logprob: -7.525614261627197
    5. '("' → logprob: -8.275614738464355
    6. 'ing' → logprob: -8.400614738464355
    7. '(`' → logprob: -9.150614738464355
    8. ')' → logprob: -9.275614738464355
    9. '())' → logprob: -9.525614738464355
    10. 'line' → logprob: -9.525614738464355

Token 6: 'ire' (ID: 594)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0032270292285829782
    2. 'er' → logprob: -6.378227233886719
    3. 'r' → logprob: -6.753227233886719
    4. 'y' → logprob: -8.753227233886719
    5. 'ity' → logprob: -8.753227233886719
    6. '()' → logprob: -10.753227233886719
    7. 'ery' → logprob: -11.753227233886719
    8. '```' → logprob: -12.628227233886719
    9. 'ries' → logprob: -12.878227233886719
    10. 'ropy' → logprob: -13.503227233886719

Token 7: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07964546233415604
    2. '(' → logprob: -2.5796453952789307
    3. 'r' → logprob: -8.079645156860352
    4. '())' → logprob: -8.329645156860352
    5. ')' → logprob: -10.204645156860352
    6. '_' → logprob: -11.329645156860352
    7. 'ln' → logprob: -11.454645156860352
    8. '=' → logprob: -11.579645156860352
    9. '("' → logprob: -11.579645156860352
    10. 'line' → logprob: -11.579645156860352

Token 8: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31374743580818176
    2. ' sys' → logprob: -1.3137474060058594
    3. 'lambda' → logprob: -8.06374740600586
    4. ' lambda' → logprob: -8.93874740600586
    5. 'input' → logprob: -10.93874740600586
    6. '=sys' → logprob: -11.93874740600586
    7. '(sys' → logprob: -12.43874740600586
    8. ' ' → logprob: -12.56374740600586
    9. '	sys' → logprob: -12.68874740600586
    10. ' input' → logprob: -13.43874740600586

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015136697329580784
    2. '.stdin' → logprob: -6.626513481140137
    3. '.input' → logprob: -10.126513481140137
    4. ' .' → logprob: -10.251513481140137
    5. '.readline' → logprob: -10.501513481140137
    6. '.import' → logprob: -10.751513481140137
    7. '.stdout' → logprob: -11.501513481140137
    8. '.`' → logprob: -11.501513481140137
    9. '.argv' → logprob: -11.626513481140137
    10. '.get' → logprob: -12.251513481140137

Token 10: '.read' (ID: 7211)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33319729566574097
    2. '.read' → logprob: -1.3331973552703857
    3. '.readline' → logprob: -3.9581973552703857
    4. '.Read' → logprob: -8.083197593688965
    5. 'read' → logprob: -8.958197593688965
    6. '```' → logprob: -9.958197593688965
    7. '.readlines' → logprob: -10.083197593688965
    8. '._' → logprob: -10.458197593688965
    9. ' .' → logprob: -10.708197593688965
    10. '.get' → logprob: -11.958197593688965

Token 11: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5761414766311646
    2. '(' → logprob: -0.8261414766311646
    3. '(
' → logprob: -9.951141357421875
    4. '(

' → logprob: -9.951141357421875
    5. '().' → logprob: -10.826141357421875
    6. '.' → logprob: -11.076141357421875
    7. '```' → logprob: -11.451141357421875
    8. ' (' → logprob: -11.576141357421875
    9. ' ()' → logprob: -11.826141357421875
    10. ')' → logprob: -11.951141357421875

Token 12: 'input' (ID: 2586)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08004686236381531
    2. '(' → logprob: -2.5800468921661377
    3. '(
' → logprob: -7.205046653747559
    4. '()
' → logprob: -8.455046653747559
    5. '(

' → logprob: -9.705046653747559
    6. '().' → logprob: -10.330046653747559
    7. '()

' → logprob: -10.580046653747559
    8. '.' → logprob: -11.080046653747559
    9. ')' → logprob: -11.705046653747559
    10. '```' → logprob: -11.830046653747559

Token 13: '_read' (ID: 14291)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32989490032196045
    2. '()' → logprob: -1.8298949003219604
    3. '_' → logprob: -2.32989501953125
    4. '_read' → logprob: -4.45489501953125
    5. '.' → logprob: -5.07989501953125
    6. '_reads' → logprob: -6.57989501953125
    7. ')' → logprob: -7.07989501953125
    8. '```' → logprob: -7.95489501953125
    9. '=' → logprob: -8.07989501953125
    10. 'Read' → logprob: -8.45489501953125

Token 14: '_line' (ID: 14418)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.026819322258234024
    2. '_' → logprob: -3.9018192291259766
    3. 'ent' → logprob: -5.526819229125977
    4. '()' → logprob: -7.026819229125977
    5. '(' → logprob: -7.526819229125977
    6. '(ent' → logprob: -8.901819229125977
    7. '_line' → logprob: -9.151819229125977
    8. '_en' → logprob: -9.276819229125977
    9. ')' → logprob: -9.776819229125977
    10. '<|end|>' → logprob: -9.901819229125977

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3048163652420044
    2. '_' → logprob: -2.179816246032715
    3. '()' → logprob: -2.679816246032715
    4. ' =' → logprob: -2.929816246032715
    5. '_line' → logprob: -4.054816246032715
    6. '(' → logprob: -5.679816246032715
    7. 's' → logprob: -6.179816246032715
    8. 'line' → logprob: -6.429816246032715
    9. '.readline' → logprob: -6.929816246032715
    10. ')' → logprob: -7.179816246032715

Token 16: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47410884499549866
    2. 'sys' → logprob: -0.9741088151931763
    3. 'input' → logprob: -11.099108695983887
    4. '=sys' → logprob: -12.099108695983887
    5. ' input' → logprob: -12.474108695983887
    6. '	sys' → logprob: -12.974108695983887
    7. ' ' → logprob: -13.099108695983887
    8. '(sys' → logprob: -13.724108695983887
    9. 'lambda' → logprob: -14.099108695983887
    10. ' lambda' → logprob: -14.599108695983887

Token 17: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22650548815727234
    2. '.stdin' → logprob: -1.6015055179595947
    3. '.stdout' → logprob: -7.351505279541016
    4. ' .' → logprob: -8.726505279541016
    5. '.readline' → logprob: -8.976505279541016
    6. 'stdin' → logprob: -9.851505279541016
    7. '.
' → logprob: -10.476505279541016
    8. '.<' → logprob: -10.476505279541016
    9. '.input' → logprob: -11.351505279541016
    10. '.argv' → logprob: -11.476505279541016

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.5776860184123507e-06
    2. ' readline' → logprob: -13.75000286102295
    3. 'read' → logprob: -14.25000286102295
    4. '.' → logprob: -14.75000286102295
    5. '.readlines' → logprob: -15.62500286102295
    6. 'line' → logprob: -16.000001907348633
    7. 'buffer' → logprob: -17.375001907348633
    8. '.read' → logprob: -17.500001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'getline' → logprob: -18.625001907348633

Token 19: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1170071363449097
    2. '(' → logprob: -1.2420071363449097
    3. '
' → logprob: -1.4920071363449097
    4. '#' → logprob: -3.492007255554199
    5. '\' → logprob: -3.617007255554199
    6. '\n' → logprob: -3.867007255554199
    7. '(
' → logprob: -4.117007255554199
    8. '

' → logprob: -4.492007255554199
    9. '=' → logprob: -4.492007255554199
    10. '' → logprob: -4.867007255554199

Token 20: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0410950183868408
    2. '()' → logprob: -1.4160950183868408
    3. '(' → logprob: -1.5410950183868408
    4. '
' → logprob: -3.166095018386841
    5. '_' → logprob: -3.291095018386841
    6. '#' → logprob: -3.291095018386841
    7. '(
' → logprob: -4.291094779968262
    8. 'input' → logprob: -4.416094779968262
    9. '=' → logprob: -4.791094779968262
    10. '

' → logprob: -4.791094779968262

Token 21: '_read' (ID: 14291)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4014752507209778
    2. '_read' → logprob: -1.151475191116333
    3. '.' → logprob: -5.401475429534912
    4. '._' → logprob: -5.526475429534912
    5. '_reads' → logprob: -6.026475429534912
    6. '_write' → logprob: -6.151475429534912
    7. ' _' → logprob: -8.026474952697754
    8. '_.' → logprob: -8.151474952697754
    9. '_get' → logprob: -8.776474952697754
    10. '<|end|>' → logprob: -9.651474952697754

Token 22: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.10310175269842148
    2. '_ent' → logprob: -2.6031017303466797
    3. 'line' → logprob: -4.47810173034668
    4. '_' → logprob: -4.72810173034668
    5. 'ent' → logprob: -6.10310173034668
    6. '_lines' → logprob: -7.97810173034668
    7. '<|end|>' → logprob: -8.10310173034668
    8. '_token' → logprob: -9.10310173034668
    9. '_l' → logprob: -9.35310173034668
    10. '_one' → logprob: -9.97810173034668

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3634006977081299
    2. ' =' → logprob: -1.2384006977081299
    3. 's' → logprob: -4.238400459289551
    4. '_' → logprob: -8.61340045928955
    5. '[]' → logprob: -10.11340045928955
    6. '[:]' → logprob: -10.36340045928955
    7. '()' → logprob: -10.48840045928955
    8. ')' → logprob: -10.73840045928955
    9. '(s' → logprob: -10.86340045928955
    10. ' ' → logprob: -10.86340045928955

Token 24: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38689014315605164
    2. ' sys' → logprob: -1.136890172958374
    3. '(sys' → logprob: -11.886890411376953
    4. 's' → logprob: -12.386890411376953
    5. '=sys' → logprob: -12.511890411376953
    6. '	sys' → logprob: -14.136890411376953
    7. 'lambda' → logprob: -14.386890411376953
    8. 'lines' → logprob: -14.511890411376953
    9. '/sys' → logprob: -14.761890411376953
    10. '_sys' → logprob: -14.761890411376953

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.25680848956108093
    2. '.' → logprob: -1.5068085193634033
    3. '.stdout' → logprob: -6.006808280944824
    4. '.readline' → logprob: -6.756808280944824
    5. ' .' → logprob: -7.631808280944824
    6. 'stdin' → logprob: -8.006808280944824
    7. '.stderr' → logprob: -9.631808280944824
    8. '<|end|>' → logprob: -10.006808280944824
    9. '.argv' → logprob: -10.131808280944824
    10. '.read' → logprob: -10.256808280944824

Token 26: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.14445772767066956
    2. '.readline' → logprob: -2.5194578170776367
    3. '<|end|>' → logprob: -3.1444578170776367
    4. '.' → logprob: -4.894457817077637
    5. '```' → logprob: -7.019457817077637
    6. '.__' → logprob: -7.269457817077637
    7. '.read' → logprob: -7.644457817077637
    8. '<|end|>' → logprob: -7.644457817077637
    9. 'read' → logprob: -9.019457817077637
    10. 'lines' → logprob: -9.144457817077637

Token 27: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8238144516944885
    2. '
' → logprob: -1.1988143920898438
    3. '```' → logprob: -2.8238143920898438
    4. '#' → logprob: -3.1988143920898438
    5. '<|end|>' → logprob: -3.8238143920898438
    6. 'newline' → logprob: -3.8238143920898438
    7. '\' → logprob: -3.8238143920898438
    8. 'def' → logprob: -4.198814392089844
    9. '' → logprob: -4.323814392089844
    10. '(' → logprob: -4.448814392089844

Token 28: 'sys' (ID: 17324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7854609489440918
    2. '#' → logprob: -2.035460948944092
    3. '_' → logprob: -2.160460948944092
    4. '.' → logprob: -2.660460948944092
    5. '
' → logprob: -3.035460948944092
    6. 'def' → logprob: -3.035460948944092
    7. '()' → logprob: -3.910460948944092
    8. '\' → logprob: -4.035460948944092
    9. '=' → logprob: -4.035460948944092
    10. '(
' → logprob: -4.160460948944092

Token 29: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004969743546098471
    2. '.stdin' → logprob: -5.754969596862793
    3. '.stdout' → logprob: -6.879969596862793
    4. '.exit' → logprob: -8.129969596862793
    5. '.readline' → logprob: -8.254969596862793
    6. '.stderr' → logprob: -10.004969596862793
    7. '.setdefault' → logprob: -10.129969596862793
    8. '.write' → logprob: -10.379969596862793
    9. '.argv' → logprob: -11.004969596862793
    10. '.import' → logprob: -11.754969596862793

Token 30: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.022444885224103928
    2. 'trace' → logprob: -4.397444725036621
    3. 'execution' → logprob: -5.897444725036621
    4. 't' → logprob: -6.147444725036621
    5. 'limit' → logprob: -6.272444725036621
    6. 're' → logprob: -7.397444725036621
    7. 'switch' → logprob: -7.772444725036621
    8. 'rl' → logprob: -8.022444725036621
    9. 'default' → logprob: -8.147444725036621
    10. 's' → logprob: -8.272444725036621

Token 31: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0004611743788700551
    2. 'urs' → logprob: -7.875461101531982
    3. 'ursive' → logprob: -10.00046157836914
    4. 'ursor' → logprob: -11.00046157836914
    5. 'ur' → logprob: -11.37546157836914
    6. 'urse' → logprob: -12.25046157836914
    7. 'urf' → logprob: -13.75046157836914
    8. 'limit' → logprob: -14.62546157836914
    9. 'ursively' → logprob: -15.12546157836914
    10. 'urst' → logprob: -15.75046157836914

Token 32: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.2007883671903983e-05
    2. '_limit' → logprob: -10.750021934509277
    3. 'depth' → logprob: -15.125021934509277
    4. ' limit' → logprob: -15.375021934509277
    5. 'Limit' → logprob: -17.875022888183594
    6. 'lim' → logprob: -18.000022888183594
    7. '-limit' → logprob: -18.750022888183594
    8. '_depth' → logprob: -20.125022888183594
    9. '(limit' → logprob: -20.250022888183594
    10. '.limit' → logprob: -20.375022888183594

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7372048862162046e-05
    2. '40' → logprob: -11.125027656555176
    3. ' (' → logprob: -11.625027656555176
    4. '(
' → logprob: -13.000027656555176
    5. '((' → logprob: -14.250027656555176
    6. '(

' → logprob: -15.500027656555176
    7. '400' → logprob: -16.25002670288086
    8. ' ' → logprob: -16.37502670288086
    9. '()' → logprob: -16.37502670288086
    10. '50' → logprob: -17.12502670288086

Token 34: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05532081052660942
    2. '100' → logprob: -2.9303207397460938
    3. ' ' → logprob: -7.805320739746094
    4. '1' → logprob: -12.055320739746094
    5. '999' → logprob: -12.055320739746094
    6. '500' → logprob: -12.180320739746094
    7. '400' → logprob: -12.305320739746094
    8. '200' → logprob: -12.805320739746094
    9. '300' → logprob: -13.180320739746094
    10. '410' → logprob: -14.055320739746094

Token 35: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.34958788752555847
    2. '7' → logprob: -1.8495879173278809
    3. '000' → logprob: -2.474587917327881
    4. '00' → logprob: -3.474587917327881
    5. '**' → logprob: -4.474587917327881
    6. '0' → logprob: -5.224587917327881
    7. '5' → logprob: -5.349587917327881
    8. '8' → logprob: -7.474587917327881
    9. '007' → logprob: -8.724587440490723
    10. '07' → logprob: -8.849587440490723

Token 36: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014459635131061077
    2. '9' → logprob: -4.264459609985352
    3. '8' → logprob: -8.139459609985352
    4. '6' → logprob: -12.389459609985352
    5. '**' → logprob: -16.26445960998535
    6. '```' → logprob: -18.38945960998535
    7. ' ' → logprob: -18.63945960998535
    8. '+' → logprob: -19.88945960998535
    9. '

' → logprob: -20.13945960998535
    10. '  ' → logprob: -20.76445960998535

Token 37: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.010187962092459202
    2. '9' → logprob: -4.635188102722168
    3. '8' → logprob: -7.760188102722168
    4. '6' → logprob: -12.135188102722168
    5. '**' → logprob: -16.63518714904785
    6. '```' → logprob: -18.13518714904785
    7. '10' → logprob: -19.38518714904785
    8. ' ' → logprob: -19.38518714904785
    9. '+' → logprob: -19.38518714904785
    10. '``' → logprob: -20.13518714904785

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '))' → logprob: -16.875
    5. ')

' → logprob: -18.875
    6. ')
' → logprob: -19.875
    7. '),' → logprob: -20.25
    8. '0' → logprob: -20.875
    9. '）' → logprob: -21.125
    10. ')`' → logprob: -21.125

Token 39: 'IN' (ID: 965)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07028117775917053
    2. 'n' → logprob: -2.8202812671661377
    3. 'N' → logprob: -6.320281028747559
    4. '#' → logprob: -6.445281028747559
    5. 'import' → logprob: -6.945281028747559
    6. 'MOD' → logprob: -7.070281028747559
    7. 'class' → logprob: -7.320281028747559
    8. '\' → logprob: -7.820281028747559
    9. 'input' → logprob: -7.820281028747559
    10. 'from' → logprob: -8.070281028747559

Token 40: 'FINITE' (ID: 190648)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.16361959278583527
    2. 'PUT' → logprob: -1.9136196374893188
    3. 'FINITY' → logprob: -6.538619518280029
    4. 'put' → logprob: -6.788619518280029
    5. 'T' → logprob: -8.413619995117188
    6. 'P' → logprob: -8.413619995117188
    7. 'IT' → logprob: -9.538619995117188
    8. 'I' → logprob: -9.663619995117188
    9. '.put' → logprob: -9.913619995117188
    10. ' =' → logprob: -10.413619995117188

Token 41: '_DISTANCE' (ID: 148171)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3718584179878235
    2. '_LOOP' → logprob: -1.3718583583831787
    3. '_CAP' → logprob: -4.246858596801758
    4. '_RE' → logprob: -4.496858596801758
    5. '_LO' → logprob: -5.121858596801758
    6. '_VALUE' → logprob: -5.121858596801758
    7. ' =' → logprob: -5.871858596801758
    8. '=' → logprob: -5.996858596801758
    9. '_COST' → logprob: -6.371858596801758
    10. '_LIMIT' → logprob: -6.371858596801758

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04869773983955383
    2. '=' → logprob: -3.1736977100372314
    3. '_' → logprob: -5.1736979484558105
    4. '_=' → logprob: -12.048697471618652
    5. ',' → logprob: -12.548697471618652
    6. '_SPACE' → logprob: -12.798697471618652
    7. '＝' → logprob: -14.173697471618652
    8. ' ' → logprob: -14.298697471618652
    9. '=_' → logprob: -14.423697471618652
    10. ')' → logprob: -14.673697471618652

Token 43: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.801839292049408
    2. '10' → logprob: -1.1768393516540527
    3. ' ' → logprob: -2.0518393516540527
    4. ' float' → logprob: -2.1768393516540527
    5. '999' → logprob: -7.551839351654053
    6. 'int' → logprob: -8.051838874816895
    7. '1' → logprob: -8.051838874816895
    8. '100' → logprob: -9.301838874816895
    9. ' int' → logprob: -9.926838874816895
    10. '(float' → logprob: -11.676838874816895

Token 44: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3555479943752289
    2. 'float' → logprob: -1.2305480241775513
    3. ' ' → logprob: -6.355547904968262
    4. '999' → logprob: -6.480547904968262
    5. ' float' → logprob: -6.605547904968262
    6. 'int' → logprob: -6.730547904968262
    7. '1' → logprob: -7.230547904968262
    8. '100' → logprob: -7.855547904968262
    9. '9' → logprob: -9.855547904968262
    10. '987' → logprob: -11.355547904968262

Token 45: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.020360037684440613
    2. '0' → logprob: -4.020359992980957
    3. '00' → logprob: -6.895359992980957
    4. '<<' → logprob: -7.895359992980957
    5. '_' → logprob: -8.270359992980957
    6. '099' → logprob: -9.520359992980957
    7. '8' → logprob: -9.645359992980957
    8. '010' → logprob: -10.020359992980957
    9. '07' → logprob: -10.270359992980957
    10. '06' → logprob: -10.520359992980957

Token 46: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.05914943292737007
    2. '30' → logprob: -3.6841495037078857
    3. '61' → logprob: -4.559149265289307
    4. '63' → logprob: -4.684149265289307
    5. '62' → logprob: -5.059149265289307
    6. '31' → logprob: -6.059149265289307
    7. '50' → logprob: -6.559149265289307
    8. '32' → logprob: -7.309149265289307
    9. '29' → logprob: -7.559149265289307
    10. '59' → logprob: -7.809149265289307

Token 47: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.09951235353946686
    2. '30' → logprob: -3.0995123386383057
    3. '63' → logprob: -4.099512577056885
    4. '62' → logprob: -4.474512577056885
    5. '31' → logprob: -4.724512577056885
    6. '61' → logprob: -5.099512577056885
    7. '50' → logprob: -5.974512577056885
    8. '32' → logprob: -6.474512577056885
    9. '64' → logprob: -6.974512577056885
    10. '29' → logprob: -7.349512577056885

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09992721676826477
    2. '

' → logprob: -2.5999271869659424
    3. '' → logprob: -4.3499274253845215
    4. '
' → logprob: -6.0999274253845215
    5. '#' → logprob: -6.2249274253845215
    6. 'def' → logprob: -6.8499274253845215
    7. 'newline' → logprob: -7.3499274253845215
    8. 'n' → logprob: -7.8499274253845215
    9. '\n' → logprob: -8.224926948547363
    10. '```' → logprob: -8.224926948547363

Token 49: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.041371554136276245
    2. 'class' → logprob: -4.5413713455200195
    3. '#' → logprob: -4.9163713455200195
    4. 'n' → logprob: -5.0413713455200195
    5. 'd' → logprob: -5.5413713455200195
    6. 'N' → logprob: -6.0413713455200195
    7. 'D' → logprob: -6.2913713455200195
    8. 'from' → logprob: -6.2913713455200195
    9. '\' → logprob: -6.5413713455200195
    10. 'import' → logprob: -7.4163713455200195

Token 50: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06381753087043762
    2. '=' → logprob: -2.8138175010681152
    3. ' ' → logprob: -6.313817501068115
    4. ' =
' → logprob: -10.813817977905273
    5. '_' → logprob: -11.813817977905273
    6. ' =)' → logprob: -12.688817977905273
    7. '  ' → logprob: -13.563817977905273
    8. ' ,' → logprob: -14.188817977905273
    9. '.' → logprob: -14.688817977905273
    10. ',' → logprob: -14.688817977905273

Token 51: '_CONST' (ID: 91635)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02396700158715248
    2. '=' → logprob: -3.7739670276641846
    3. ' ' → logprob: -7.2739667892456055
    4. '_' → logprob: -11.273966789245605
    5. ' =
' → logprob: -11.398966789245605
    6. '  ' → logprob: -14.023966789245605
    7. ' =)' → logprob: -14.398966789245605
    8. '<|end|>' → logprob: -14.773966789245605
    9. ',' → logprob: -14.898966789245605
    10. ' ,' → logprob: -15.273966789245605

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018306447193026543
    2. '=' → logprob: -4.018306255340576
    3. ' ' → logprob: -8.893306732177734
    4. '_' → logprob: -11.393306732177734
    5. ' =
' → logprob: -12.018306732177734
    6. '  ' → logprob: -14.893306732177734
    7. ' =)' → logprob: -14.893306732177734
    8. ' =
' → logprob: -15.143306732177734
    9. ' _' → logprob: -15.518306732177734
    10. ' ' → logprob: -16.268306732177734

Token 53: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06375175714492798
    2. '100' → logprob: -3.438751697540283
    3. ' ' → logprob: -3.563751697540283
    4. '998' → logprob: -6.688751697540283
    5. '1' → logprob: -9.563752174377441
    6. '999' → logprob: -12.688752174377441
    7. '(' → logprob: -13.438752174377441
    8. 'int' → logprob: -13.438752174377441
    9. '123' → logprob: -14.188752174377441
    10. '2' → logprob: -14.313752174377441

Token 54: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1634405255317688
    2. '100' → logprob: -1.913440465927124
    3. '998' → logprob: -5.788440704345703
    4. '1' → logprob: -9.038440704345703
    5. '(' → logprob: -11.163440704345703
    6. 'int' → logprob: -11.788440704345703
    7. ' ' → logprob: -13.038440704345703
    8. '999' → logprob: -13.163440704345703
    9. '123' → logprob: -13.538440704345703
    10. '2' → logprob: -14.288440704345703

Token 55: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.18151667714118958
    2. '9' → logprob: -1.8065166473388672
    3. '09' → logprob: -7.056516647338867
    4. '00' → logprob: -8.306516647338867
    5. '07' → logprob: -8.431516647338867
    6. '+' → logprob: -9.181516647338867
    7. '0' → logprob: -9.306516647338867
    8. '7' → logprob: -9.556516647338867
    9. '007' → logprob: -9.931516647338867
    10. '009' → logprob: -10.306516647338867

Token 56: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1286170482635498
    2. '+' → logprob: -2.50361704826355
    3. '0' → logprob: -3.50361704826355
    4. '7' → logprob: -5.878617286682129
    5. '_' → logprob: -6.753617286682129
    6. '00' → logprob: -6.878617286682129
    7. '007' → logprob: -6.878617286682129
    8. '19' → logprob: -7.253617286682129
    9. ')' → logprob: -7.378617286682129
    10. ' +' → logprob: -7.628617286682129

Token 57: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.392202976712724e-06
    2. '9' → logprob: -12.375006675720215
    3. '+' → logprob: -13.250006675720215
    4. '0' → logprob: -15.625006675720215
    5. '07' → logprob: -15.750006675720215
    6. ' ' → logprob: -16.3750057220459
    7. ' +' → logprob: -17.7500057220459
    8. '```' → logprob: -18.0000057220459
    9. '' → logprob: -19.3750057220459
    10. '79' → logprob: -19.5000057220459

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10394693166017532
    2. '' → logprob: -3.2289469242095947
    3. '

' → logprob: -3.6039469242095947
    4. '#' → logprob: -3.9789469242095947
    5. '\n' → logprob: -4.978947162628174
    6. '\' → logprob: -6.353947162628174
    7. '
' → logprob: -7.103947162628174
    8. '_' → logprob: -7.728947162628174
    9. 'newline' → logprob: -7.728947162628174
    10. '```' → logprob: -7.853947162628174

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00938368495553732
    2. 'n' → logprob: -5.884383678436279
    3. 'class' → logprob: -5.884383678436279
    4. '#' → logprob: -6.384383678436279
    5. 'd' → logprob: -7.634383678436279
    6. '\' → logprob: -7.634383678436279
    7. 'de' → logprob: -8.134384155273438
    8. 'from' → logprob: -8.634384155273438
    9. '\n' → logprob: -8.884384155273438
    10. 'import' → logprob: -9.134384155273438

Token 60: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.159837007522583
    2. ' solve' → logprob: -2.159837007522583
    3. ' dfs' → logprob: -4.284836769104004
    4. ' ' → logprob: -5.409836769104004
    5. ' read' → logprob: -6.034836769104004
    6. ' parse' → logprob: -6.034836769104004
    7. ' calculate' → logprob: -6.659836769104004
    8. ' solution' → logprob: -6.909836769104004
    9. ' bfs' → logprob: -6.909836769104004
    10. ' input' → logprob: -7.284836769104004

Token 61: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002887490263674408
    2. ' ():' → logprob: -8.500288963317871
    3. '(' → logprob: -9.500288963317871
    4. ':' → logprob: -12.250288963317871
    5. '()' → logprob: -12.375288963317871
    6. '(:' → logprob: -14.250288963317871
    7. '():
' → logprob: -14.875288963317871
    8. '(":' → logprob: -15.500288963317871
    9. '):' → logprob: -16.500288009643555
    10. ' ()' → logprob: -17.500288009643555

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2806425094604492
    2. '    ' → logprob: -2.030642509460449
    3. ' ' → logprob: -2.780642509460449
    4. '(' → logprob: -4.155642509460449
    5. '    
' → logprob: -4.905642509460449
    6. 'n' → logprob: -5.030642509460449
    7. '\' → logprob: -5.030642509460449
    8. ' 
' → logprob: -5.530642509460449
    9. 'a' → logprob: -6.405642509460449
    10. ' (' → logprob: -6.405642509460449

Token 63: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9193444848060608
    2. ' n' → logprob: -1.294344425201416
    3. ' ' → logprob: -1.794344425201416
    4. ' pass' → logprob: -3.294344425201416
    5. '    ' → logprob: -3.544344425201416
    6. '   ' → logprob: -4.294344425201416
    7. ' input' → logprob: -4.544344425201416
    8. 'input' (adapté à ' input') → logprob: -4.669344425201416
    9. ' 
' → logprob: -4.794344425201416
    10. 'r' → logprob: -5.169344425201416

Token 64: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5706290006637573
    2. '_line' → logprob: -1.4456290006637573
    3. '_read' → logprob: -1.6956290006637573
    4. '_data' → logprob: -4.945629119873047
    5. '_lines' → logprob: -5.445629119873047
    6. '_str' → logprob: -6.195629119873047
    7. '_text' → logprob: -7.320629119873047
    8. '()' → logprob: -7.820629119873047
    9. '_write' → logprob: -8.445629119873047
    10. '_string' → logprob: -8.945629119873047

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5202418565750122
    2. '=' → logprob: -1.0202418565750122
    3. '()' → logprob: -3.2702417373657227
    4. '(' → logprob: -5.395241737365723
    5. '_' → logprob: -6.520241737365723
    6. '_line' → logprob: -7.770241737365723
    7. ')' → logprob: -9.020241737365723
    8. '[:]' → logprob: -9.395241737365723
    9. '.' → logprob: -9.520241737365723
    10. ' ' → logprob: -9.895241737365723

Token 66: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.300721675157547
    2. 'input' → logprob: -1.4257216453552246
    3. ' list' → logprob: -4.425721645355225
    4. 'list' → logprob: -5.425721645355225
    5. ' sys' → logprob: -6.175721645355225
    6. 'sys' → logprob: -7.300721645355225
    7. ' map' → logprob: -8.925722122192383
    8. 'map' → logprob: -10.175722122192383
    9. ' ' → logprob: -10.300722122192383
    10. ' [' → logprob: -11.863222122192383

Token 67: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5651483535766602
    2. '(' → logprob: -1.3151483535766602
    3. '(input' → logprob: -1.8151483535766602
    4. '(int' → logprob: -8.44014835357666
    5. '()' → logprob: -8.81514835357666
    6. '(
' → logprob: -10.19014835357666
    7. 'map' → logprob: -11.06514835357666
    8. '(sys' → logprob: -11.19014835357666
    9. '(range' → logprob: -11.31514835357666
    10. '(

' → logprob: -11.44014835357666

Token 68: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0042381929233670235
    2. '(' → logprob: -5.504238128662109
    3. '(str' → logprob: -9.12923812866211
    4. 'int' → logprob: -11.12923812866211
    5. '(
' → logprob: -11.62923812866211
    6. ')' → logprob: -11.62923812866211
    7. '<int' → logprob: -11.87923812866211
    8. '(lambda' → logprob: -12.37923812866211
    9. '(input' → logprob: -13.50423812866211
    10. '=int' → logprob: -13.50423812866211

Token 69: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09876474738121033
    2. ',input' → logprob: -2.973764657974243
    3. ',' → logprob: -3.348764657974243
    4. '(' → logprob: -4.973764896392822
    5. 'input' → logprob: -7.348764896392822
    6. ' (' → logprob: -9.473764419555664
    7. '(sys' → logprob: -9.723764419555664
    8. ' input' → logprob: -10.598764419555664
    9. '))' → logprob: -10.723764419555664
    10. ' ,' → logprob: -10.723764419555664

Token 70: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519567012786865
    2. 'input' → logprob: -1.5019567012786865
    3. ' sys' → logprob: -12.001956939697266
    4. ' ' → logprob: -12.501956939697266
    5. ',input' → logprob: -12.501956939697266
    6. '(input' → logprob: -12.626956939697266
    7. '   ' → logprob: -13.001956939697266
    8. ')' → logprob: -13.001956939697266
    9. '	input' → logprob: -13.251956939697266
    10. 'sys' → logprob: -13.501956939697266

Token 71: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.00014013137842994183
    2. '_reads' → logprob: -9.375140190124512
    3. '()' → logprob: -10.875140190124512
    4. '(_' → logprob: -11.375140190124512
    5. 'read' → logprob: -12.000140190124512
    6. '(' → logprob: -12.250140190124512
    7. '_' → logprob: -12.375140190124512
    8. ')_' → logprob: -13.500140190124512
    9. '```' → logprob: -14.125140190124512
    10. '_reader' → logprob: -14.250140190124512

Token 72: '_ent' (ID: 66249)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.023513680323958397
    2. 'line' → logprob: -3.7735137939453125
    3. '().' → logprob: -9.148513793945312
    4. '()' → logprob: -9.898513793945312
    5. 'Line' → logprob: -10.898513793945312
    6. ' line' → logprob: -11.023513793945312
    7. '_lines' → logprob: -11.398513793945312
    8. '())' → logprob: -11.648513793945312
    9. ')' → logprob: -11.648513793945312
    10. '_LINE' → logprob: -11.898513793945312

Token 73: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.00026455431361682713
    2. 't' → logprob: -8.375264167785645
    3. 'ir' → logprob: -11.250264167785645
    4. 'er' → logprob: -12.000264167785645
    5. '```' → logprob: -12.000264167785645
    6. 're' → logprob: -13.000264167785645
    7. '()' → logprob: -13.375264167785645
    8. 'it' → logprob: -14.750264167785645
    9. 'ире' → logprob: -14.750264167785645
    10. ')' → logprob: -14.875264167785645

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002772189909592271
    2. '()))' → logprob: -6.127772331237793
    3. '()' → logprob: -7.502772331237793
    4. '())))' → logprob: -10.502772331237793
    5. '()));' → logprob: -13.002772331237793
    6. ' ().' → logprob: -13.127772331237793
    7. '()
' → logprob: -13.877772331237793
    8. '())' → logprob: -14.502772331237793
    9. '()[' → logprob: -14.502772331237793
    10. '))' → logprob: -15.127772331237793

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12795120477676392
    2. 'strip' → logprob: -2.127951145172119
    3. 'decode' → logprob: -7.127951145172119
    4. 'rstrip' → logprob: -8.502951622009277
    5. ' split' → logprob: -11.252951622009277
    6. ')' → logprob: -13.127951622009277
    7. ' strip' → logprob: -13.877951622009277
    8. '(split' → logprob: -14.002951622009277
    9. 'read' → logprob: -15.377951622009277
    10. 'spl' → logprob: -16.25295066833496

Token 76: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028293639421463013
    2. '))' → logprob: -4.153293609619141
    3. '()' → logprob: -4.528293609619141
    4. '())' → logprob: -7.028293609619141
    5. '(' → logprob: -7.903293609619141
    6. '()))
' → logprob: -10.15329360961914
    7. '()));' → logprob: -10.27829360961914
    8. ')' → logprob: -10.40329360961914
    9. '())))' → logprob: -11.52829360961914
    10. '(),' → logprob: -12.65329360961914

Token 77: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8533963561058044
    2. ' ' → logprob: -1.7283964157104492
    3. '
' → logprob: -2.478396415710449
    4. ':' → logprob: -2.853396415710449
    5. '\' → logprob: -3.228396415710449
    6. '   ' → logprob: -3.228396415710449
    7. '    
' → logprob: -3.228396415710449
    8. ')' → logprob: -3.353396415710449
    9. '[
' → logprob: -3.853396415710449
    10. '' → logprob: -4.478396415710449

Token 78: ' sequence' (ID: 16281)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5050822496414185
    2. ')' → logprob: -2.255082130432129
    3. ' ' → logprob: -2.630082130432129
    4. ':' → logprob: -3.005082130432129
    5. '\' → logprob: -3.505082130432129
    6. '_' → logprob: -3.755082130432129
    7. '   ' → logprob: -4.255082130432129
    8. '
' → logprob: -4.380082130432129
    9. '.' → logprob: -4.755082130432129
    10. '#' → logprob: -4.755082130432129

Token 79: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05578901618719101
    2. '_length' → logprob: -3.305788993835449
    3. ' =' → logprob: -5.555788993835449
    4. '=' → logprob: -5.680788993835449
    5. '_values' → logprob: -5.930788993835449
    6. '_index' → logprob: -5.930788993835449
    7. '_len' → logprob: -6.805788993835449
    8. '[' → logprob: -6.930788993835449
    9. '_size' → logprob: -7.555788993835449
    10. '_idx' → logprob: -7.680788993835449

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0054040346294641495
    2. '=' → logprob: -5.255403995513916
    3. ' ' → logprob: -9.255404472351074
    4. '_' → logprob: -10.630404472351074
    5. '  ' → logprob: -11.380404472351074
    6. '_index' → logprob: -11.630404472351074
    7. '   ' → logprob: -11.880404472351074
    8. ',' → logprob: -12.005404472351074
    9. '_idx' → logprob: -12.130404472351074
    10. '    ' → logprob: -12.880404472351074

Token 81: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519415020942688
    2. 'input' → logprob: -1.501941442489624
    3. 'len' → logprob: -11.751941680908203
    4. ' len' → logprob: -12.501941680908203
    5. '   ' → logprob: -15.376941680908203
    6. '=input' → logprob: -15.626941680908203
    7. 'int' → logprob: -16.001941680908203
    8. '	input' → logprob: -16.001941680908203
    9. '    ' → logprob: -17.251941680908203
    10. '(input' → logprob: -17.501941680908203

Token 82: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0001105762057704851
    2. '_' → logprob: -9.250110626220703
    3. '_tokens' → logprob: -12.500110626220703
    4. 'values' → logprob: -12.500110626220703
    5. '_length' → logprob: -12.750110626220703
    6. '_value' → logprob: -13.625110626220703
    7. '_vals' → logprob: -14.375110626220703
    8. '_VALUES' → logprob: -14.500110626220703
    9. 'Values' → logprob: -14.625110626220703
    10. '_sequence' → logprob: -14.625110626220703

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.250001907348633
    3. ' [' → logprob: -15.875001907348633
    4. '\[' → logprob: -16.375001907348633
    5. '[
' → logprob: -16.625001907348633
    6. '1' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ' ' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. '[len' → logprob: -19.500001907348633

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -16.125
    4. '00' → logprob: -19.0
    5. '   ' → logprob: -19.75
    6. '[' → logprob: -20.0
    7. '  ' → logprob: -20.375
    8. '000' → logprob: -21.5
    9. '０' → logprob: -21.75
    10. '۰' → logprob: -21.875

Token 85: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016635251813568175
    2. ' )' → logprob: -8.875165939331055
    3. '])' → logprob: -11.375165939331055
    4. ']' → logprob: -12.375165939331055
    5. ')
' → logprob: -13.500165939331055
    6. '))' → logprob: -13.500165939331055
    7. '<|end|>' → logprob: -13.500165939331055
    8. '),' → logprob: -13.875165939331055
    9. ',' → logprob: -14.000165939331055
    10. '+' → logprob: -14.250165939331055

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07766498625278473
    2. '<|end|>' → logprob: -3.202665090560913
    3. ' ' → logprob: -4.202664852142334
    4. '    
' → logprob: -5.077664852142334
    5. ')' → logprob: -5.577664852142334
    6. '    ' → logprob: -5.702664852142334
    7. '#' → logprob: -6.452664852142334
    8. ',' → logprob: -7.077664852142334
    9. '  ' → logprob: -7.577664852142334
    10. '<|end|>' → logprob: -7.702664852142334

Token 87: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.8220215439796448
    2. 'sequence' (adapté à ' sequence') → logprob: -0.8220215439796448
    3. '   ' → logprob: -2.697021484375
    4. 'data' → logprob: -4.697021484375
    5. ' current' → logprob: -4.822021484375
    6. 'current' → logprob: -5.072021484375
    7. ' data' → logprob: -5.072021484375
    8. ' numbers' → logprob: -5.322021484375
    9. 's' → logprob: -6.322021484375
    10. 'numbers' → logprob: -6.322021484375

Token 88: '_numbers' (ID: 76842)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.40007272362709045
    2. '_' → logprob: -1.150072693824768
    3. ' =' → logprob: -4.7750725746154785
    4. '=' → logprob: -5.5250725746154785
    5. '_data' → logprob: -8.775073051452637
    6. '_vals' → logprob: -8.775073051452637
    7. '_numbers' → logprob: -9.150073051452637
    8. '_length' → logprob: -9.275073051452637
    9. '_=' → logprob: -9.400073051452637
    10. '_elements' → logprob: -10.650073051452637

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048289015889168
    2. '=' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.261048316955566
    4. '   ' → logprob: -16.63604736328125
    5. 'sequence' → logprob: -17.38604736328125
    6. 's' → logprob: -17.51104736328125
    7. '=[]' → logprob: -17.51104736328125
    8. '  ' → logprob: -17.76104736328125
    9. ' =[' → logprob: -17.88604736328125
    10. ' sequence' → logprob: -18.13604736328125

Token 90: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014165041036903858
    2. 'input' → logprob: -4.264164924621582
    3. '	input' → logprob: -14.014164924621582
    4. '[input' → logprob: -15.264164924621582
    5. '=input' → logprob: -15.514164924621582
    6. ' ' → logprob: -16.2641658782959
    7. '(input' → logprob: -16.2641658782959
    8. '<input' → logprob: -17.0141658782959
    9. '_input' → logprob: -17.0141658782959
    10. '   ' → logprob: -17.6391658782959

Token 91: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0001254693343071267
    2. 'values' → logprob: -10.125125885009766
    3. '_vals' → logprob: -10.500125885009766
    4. '_' → logprob: -11.250125885009766
    5. 't' → logprob: -11.500125885009766
    6. 'ted' → logprob: -12.125125885009766
    7. '_numbers' → logprob: -12.125125885009766
    8. 's' → logprob: -12.250125885009766
    9. '_VALUES' → logprob: -12.500125885009766
    10. 'put' → logprob: -13.000125885009766

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.500000953674316
    3. '[:]' → logprob: -17.75
    4. ' [' → logprob: -18.0
    5. '[
' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. ' ' → logprob: -19.25
    8. '[:' → logprob: -20.0
    9. '[start' → logprob: -20.375
    10. '\[' → logprob: -20.75

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013786651834379882
    2. ' ' → logprob: -9.000138282775879
    3. '2' → logprob: -12.000138282775879
    4. '   ' → logprob: -12.250138282775879
    5. '```' → logprob: -14.062638282775879
    6. '  ' → logprob: -14.437638282775879
    7. '[' → logprob: -15.062638282775879
    8. ':' → logprob: -15.312638282775879
    9. '    ' → logprob: -15.375138282775879
    10. '１' → logprob: -15.750138282775879

Token 94: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.38690564036369324
    2. ':' → logprob: -1.1369056701660156
    3. ' :]' → logprob: -11.261905670166016
    4. ']' → logprob: -11.636905670166016
    5. ' :' → logprob: -11.761905670166016
    6. ':length' → logprob: -14.011905670166016
    7. ':]
' → logprob: -14.136905670166016
    8. ':],' → logprob: -14.386905670166016
    9. ':].' → logprob: -14.511905670166016
    10. ':index' → logprob: -14.511905670166016

Token 95: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1192046403884888
    2. '   ' → logprob: -1.2442046403884888
    3. '
' → logprob: -1.6192046403884888
    4. ' ' → logprob: -2.369204521179199
    5. '    
' → logprob: -4.119204521179199
    6. '<|end|>' → logprob: -4.369204521179199
    7. ':' → logprob: -4.494204521179199
    8. 'for' → logprob: -4.619204521179199
    9. ' 
' → logprob: -4.744204521179199
    10. '\n' → logprob: -5.244204521179199

Token 96: ' current' (ID: 2208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4529971480369568
    2. 'max' → logprob: -2.5779972076416016
    3. 'd' → logprob: -2.9529972076416016
    4. '#' → logprob: -3.2029972076416016
    5. 'distance' → logprob: -3.2029972076416016
    6. 'count' → logprob: -3.5779972076416016
    7. 'dist' → logprob: -3.7029972076416016
    8. 'counts' → logprob: -4.077997207641602
    9. 'answer' → logprob: -4.827997207641602
    10. 'result' → logprob: -4.952997207641602

Token 97: '_expected' (ID: 79906)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4411126673221588
    2. '_index' → logprob: -1.9411126375198364
    3. '_value' → logprob: -2.816112756729126
    4. '_' → logprob: -3.191112756729126
    5. '_max' → logprob: -3.191112756729126
    6. '_distance' → logprob: -3.691112756729126
    7. '_position' → logprob: -4.816112518310547
    8. '_count' → logprob: -4.941112518310547
    9. '_length' → logprob: -4.941112518310547
    10. '_number' → logprob: -5.191112518310547

Token 98: '_number' (ID: 11733)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3134412169456482
    2. '_' → logprob: -1.438441276550293
    3. '_sum' → logprob: -4.688441276550293
    4. ' =' → logprob: -5.563441276550293
    5. '_index' → logprob: -5.813441276550293
    6. '_val' → logprob: -6.063441276550293
    7. '_distance' → logprob: -6.188441276550293
    8. '_number' → logprob: -6.438441276550293
    9. '_count' → logprob: -6.563441276550293
    10. '_token' → logprob: -6.563441276550293

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004087066277861595
    2. '=' → logprob: -5.504086971282959
    3. ' ' → logprob: -12.379087448120117
    4. '_' → logprob: -13.629087448120117
    5. ',' → logprob: -13.754087448120117
    6. '<|end|>' → logprob: -14.629087448120117
    7. '  ' → logprob: -14.879087448120117
    8. 's' → logprob: -15.129087448120117
    9. ' =)' → logprob: -15.629087448120117
    10. '.' → logprob: -15.879087448120117

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02171246148645878
    2. ' ' → logprob: -4.521712303161621
    3. '0' → logprob: -4.646712303161621
    4. 'sequence' → logprob: -7.271712303161621
    5. ' sequence' → logprob: -8.146712303161621
    6. '   ' → logprob: -11.146712303161621
    7. '(sequence' → logprob: -12.396712303161621
    8. '-' → logprob: -13.146712303161621
    9. '2' → logprob: -13.584212303161621
    10. ' -' → logprob: -13.709212303161621

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031085656955838203
    2. '0' → logprob: -3.656085729598999
    3. 'sequence' → logprob: -5.40608549118042
    4. ' ' → logprob: -8.781085968017578
    5. '-' → logprob: -9.906085968017578
    6. ' sequence' → logprob: -10.156085968017578
    7. '2' → logprob: -11.218585968017578
    8. '(sequence' → logprob: -11.593585968017578
    9. '   ' → logprob: -12.718585968017578
    10. 'a' → logprob: -13.656085968017578

Token 102: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08354177325963974
    2. '<|end|>' → logprob: -2.5835418701171875
    3. '   ' → logprob: -6.3335418701171875
    4. ' ' → logprob: -7.2085418701171875
    5. '    
' → logprob: -7.4585418701171875
    6. ' 
' → logprob: -7.9585418701171875
    7. ' for' → logprob: -7.9585418701171875
    8. '<|end|>' → logprob: -8.208541870117188
    9. '  
' → logprob: -8.708541870117188
    10. '\n' → logprob: -9.458541870117188

Token 103: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11246410757303238
    2. '<|end|>' → logprob: -3.112464189529419
    3. '   ' → logprob: -3.487464189529419
    4. ' ' → logprob: -4.48746395111084
    5. ' 
' → logprob: -5.23746395111084
    6. '    
' → logprob: -5.48746395111084
    7. ' for' → logprob: -5.73746395111084
    8. '  
' → logprob: -6.11246395111084
    9. ':' → logprob: -6.61246395111084
    10. '\n' → logprob: -7.11246395111084

Token 104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004001226741820574
    2. 'result' → logprob: -6.254001140594482
    3. 'answer' → logprob: -6.754001140594482
    4. 'count' → logprob: -8.12900161743164
    5. 'output' → logprob: -8.75400161743164
    6. 'results' → logprob: -9.75400161743164
    7. ' for' → logprob: -9.87900161743164
    8. 'answers' → logprob: -10.00400161743164
    9. 'max' → logprob: -10.12900161743164
    10. 'valid' → logprob: -10.62900161743164

Token 105: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5119722485542297
    2. ' num' → logprob: -1.011972188949585
    3. 'num' → logprob: -3.886972188949585
    4. 'number' → logprob: -4.261972427368164
    5. ' i' → logprob: -6.886972427368164
    6. ' ' → logprob: -8.011972427368164
    7. ' x' → logprob: -8.136972427368164
    8. ' sequence' → logprob: -8.136972427368164
    9. 'n' → logprob: -8.511972427368164
    10. ' n' → logprob: -8.886972427368164

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048830918967723846
    2. 'in' → logprob: -3.048830986022949
    3. ' ' → logprob: -8.67383098602295
    4. '_in' → logprob: -10.54883098602295
    5. ',' → logprob: -11.29883098602295
    6. 's' → logprob: -11.79883098602295
    7. '	in' → logprob: -11.79883098602295
    8. '_' → logprob: -11.92383098602295
    9. '  ' → logprob: -13.04883098602295
    10. ' ,' → logprob: -13.17383098602295

Token 107: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.062004204839468
    2. 'sequence' → logprob: -2.8120040893554688
    3. '(sequence' → logprob: -10.687004089355469
    4. ' ' → logprob: -11.312004089355469
    5. '<|end|>' → logprob: -14.562004089355469
    6. '_sequence' → logprob: -15.562004089355469
    7. ' range' → logprob: -15.687004089355469
    8. 'Sequence' → logprob: -15.812004089355469
    9. 's' → logprob: -16.06200408935547
    10. '.sequence' → logprob: -16.18700408935547

Token 108: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0006074831471778452
    2. '_' → logprob: -7.625607490539551
    3. '_:' → logprob: -9.75060749053955
    4. ':' → logprob: -10.62560749053955
    5. '_length' → logprob: -11.00060749053955
    6. '_values' → logprob: -11.62560749053955
    7. 's' → logprob: -12.00060749053955
    8. 'numbers' → logprob: -13.25060749053955
    9. '_number' → logprob: -13.50060749053955
    10. '_sequence' → logprob: -15.00060749053955

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038837024476379156
    2. ':
' → logprob: -8.125388145446777
    3. ' :' → logprob: -9.375388145446777
    4. '):' → logprob: -13.250388145446777
    5. '   ' → logprob: -13.375388145446777
    6. '<|end|>' → logprob: -13.625388145446777
    7. ' :
' → logprob: -14.375388145446777
    8. ':return' → logprob: -14.750388145446777
    9. ',' → logprob: -14.875388145446777
    10. ':

' → logprob: -15.250388145446777

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.289196252822876
    2. '<|end|>' → logprob: -1.539196252822876
    3. ':' → logprob: -3.539196252822876
    4. '<|end|>' → logprob: -5.539196014404297
    5. ' ' → logprob: -7.289196014404297
    6. '        
' → logprob: -7.289196014404297
    7. '    ' → logprob: -7.664196014404297
    8. '   ' → logprob: -8.039196014404297
    9. '        ' → logprob: -8.289196014404297
    10. ',' → logprob: -8.539196014404297

Token 111: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38878247141838074
    2. ' if' → logprob: -1.5137825012207031
    3. '
' → logprob: -2.638782501220703
    4. 'if' (adapté à ' if') → logprob: -4.263782501220703
    5. ' ' → logprob: -4.513782501220703
    6. '   ' → logprob: -6.388782501220703
    7. ' 
' → logprob: -6.888782501220703
    8. '    ' → logprob: -7.138782501220703
    9. '        ' → logprob: -7.138782501220703
    10. ':' → logprob: -8.138782501220703

Token 112: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.054891765117645264
    2. 'number' → logprob: -2.92989182472229
    3. ' ' → logprob: -12.304891586303711
    4. '	number' → logprob: -13.054891586303711
    5. ' current' → logprob: -13.804891586303711
    6. '(number' → logprob: -14.804891586303711
    7. ' ' → logprob: -14.804891586303711
    8. 'num' → logprob: -15.429891586303711
    9. 'current' → logprob: -15.554891586303711
    10. 'Number' → logprob: -15.679891586303711

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38691654801368713
    2. '==' → logprob: -1.1369165182113647
    3. '>' → logprob: -11.636916160583496
    4. ' ' → logprob: -11.636916160583496
    5. '=' → logprob: -12.136916160583496
    6. '!=' → logprob: -12.511916160583496
    7. ' !=' → logprob: -12.511916160583496
    8. ' >' → logprob: -12.761916160583496
    9. ' ' → logprob: -12.886916160583496
    10. ' <' → logprob: -13.261916160583496

Token 114: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3868745267391205
    2. 'current' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.261874198913574
    4. '	current' → logprob: -14.511874198913574
    5. 'urrent' → logprob: -15.136874198913574
    6. '   ' → logprob: -15.511874198913574
    7. 'Current' → logprob: -15.886874198913574
    8. 'c' → logprob: -16.13687515258789
    9. '=current' → logprob: -16.13687515258789
    10. ' ' → logprob: -16.26187515258789

Token 115: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -7.896309739408025e-07
    2. 'expected' → logprob: -15.000000953674316
    3. 'Expected' → logprob: -16.25
    4. '_' → logprob: -16.5
    5. ' _' → logprob: -16.875
    6. '_required' → logprob: -17.0
    7. '_expect' → logprob: -17.25
    8. '_requested' → logprob: -17.625
    9. '_possible' → logprob: -17.875
    10. '_number' → logprob: -18.5

Token 116: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.4121114822482923e-06
    2. ' _' → logprob: -13.625003814697266
    3. 'number' → logprob: -13.875003814697266
    4. '_' → logprob: -14.000003814697266
    5. '_num' → logprob: -15.500003814697266
    6. 'Number' → logprob: -17.625003814697266
    7. ' ' → logprob: -17.625003814697266
    8. ' number' → logprob: -18.000003814697266
    9. '_n' → logprob: -18.125003814697266
    10. '_NUMBER' → logprob: -18.125003814697266

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016098538413643837
    2. ':
' → logprob: -4.141098499298096
    3. ' :' → logprob: -10.266098976135254
    4. '       ' → logprob: -12.016098976135254
    5. '):' → logprob: -12.016098976135254
    6. '   ' → logprob: -12.766098976135254
    7. ' :
' → logprob: -12.891098976135254
    8. ':

' → logprob: -13.641098976135254
    9. ' and' → logprob: -13.641098976135254
    10. ',' → logprob: -13.766098976135254

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8888511657714844
    2. '
' → logprob: -1.1388511657714844
    3. 'current' → logprob: -1.8888511657714844
    4. '       ' → logprob: -2.6388511657714844
    5. ' current' → logprob: -3.2638511657714844
    6. ':
' → logprob: -5.138851165771484
    7. ':' → logprob: -7.638851165771484
    8. '        
' → logprob: -8.388851165771484
    9. '```' → logprob: -8.888851165771484
    10. '1' → logprob: -9.013851165771484

Token 119: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.1280183494091034
    2. ' current' → logprob: -2.128018379211426
    3. '
' → logprob: -7.878018379211426
    4. '               ' → logprob: -8.003018379211426
    5. '           ' → logprob: -8.003018379211426
    6. '   ' → logprob: -11.003018379211426
    7. '	current' → logprob: -11.128018379211426
    8. '       ' → logprob: -12.378018379211426
    9. '```' → logprob: -13.628018379211426
    10. '_current' → logprob: -14.003018379211426

Token 120: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. 'Expected' → logprob: -15.750000953674316
    4. 'expected' → logprob: -16.0
    5. ' _' → logprob: -17.625
    6. '_required' → logprob: -18.0
    7. '_expect' → logprob: -18.75
    8. '_current' → logprob: -18.875
    9. '_requested' → logprob: -18.875
    10. '_possible' → logprob: -18.875

Token 121: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00011164903844473884
    2. 'number' → logprob: -9.12511157989502
    3. 'Number' → logprob: -14.25011157989502
    4. '_' → logprob: -14.62511157989502
    5. '_token' → logprob: -14.62511157989502
    6. ' ' → logprob: -14.87511157989502
    7. ' number' → logprob: -15.37511157989502
    8. '_numbers' → logprob: -16.125112533569336
    9. '_NUMBER' → logprob: -16.125112533569336
    10. 'umber' → logprob: -16.750112533569336

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25194206833839417
    2. ' +=' → logprob: -1.5019420385360718
    3. '+' → logprob: -12.001941680908203
    4. '=' → logprob: -12.501941680908203
    5. ' ' → logprob: -13.626941680908203
    6. ']+=' → logprob: -13.751941680908203
    7. '```' → logprob: -15.126941680908203
    8. '<|end|>' → logprob: -16.001941680908203
    9. ' ' → logprob: -16.126941680908203
    10. ' =' → logprob: -16.626941680908203

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -18.87507438659668
    4. '   ' → logprob: -19.37507438659668
    5. '<|end|>' → logprob: -19.37507438659668
    6. '１' → logprob: -20.87507438659668
    7. ' ' → logprob: -20.87507438659668
    8. '۱' → logprob: -21.12507438659668
    9. '0' → logprob: -21.12507438659668
    10. '
' → logprob: -22.00007438659668

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.375001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '<|end|>' → logprob: -19.000001907348633
    6. '１' → logprob: -20.687501907348633
    7. '१' → logprob: -21.125001907348633
    8. '۱' → logprob: -21.375001907348633
    9. '১' → logprob: -21.500001907348633
    10. 'python' → logprob: -21.500001907348633

Token 125: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1301148533821106
    2. '<|end|>' → logprob: -2.130114793777466
    3. ')' → logprob: -6.255115032196045
    4. '   ' → logprob: -7.880115032196045
    5. '\n' → logprob: -8.255114555358887
    6. '```' → logprob: -9.130114555358887
    7. 'if' → logprob: -9.630114555358887
    8. '

' → logprob: -9.630114555358887
    9. '#' → logprob: -9.755114555358887
    10. '
' → logprob: -9.755114555358887

Token 127: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06679586321115494
    2. 'if' (adapté à ' if') → logprob: -2.941795825958252
    3. ' if' → logprob: -4.816795825958252
    4. ' print' → logprob: -5.691795825958252
    5. '   ' → logprob: -8.19179630279541
    6. '    
' → logprob: -10.69179630279541
    7. '
' → logprob: -10.81679630279541
    8. 'result' → logprob: -11.06679630279541
    9. ')' → logprob: -11.44179630279541
    10. '```' → logprob: -12.31679630279541

Token 128: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.007616325747221708
    2. 'current' → logprob: -4.8826165199279785
    3. ' ' → logprob: -12.00761604309082
    4. ' sequence' → logprob: -13.88261604309082
    5. '(current' → logprob: -14.25761604309082
    6. '   ' → logprob: -14.38261604309082
    7. '	current' → logprob: -14.50761604309082
    8. '  ' → logprob: -15.13261604309082
    9. 'Current' → logprob: -15.25761604309082
    10. 'urrent' → logprob: -15.63261604309082

Token 129: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -3.8889261304575484e-06
    2. 'expected' → logprob: -13.375003814697266
    3. '_' → logprob: -14.125003814697266
    4. 'Expected' → logprob: -14.250003814697266
    5. '_possible' → logprob: -15.375003814697266
    6. '_required' → logprob: -16.000003814697266
    7. '_number' → logprob: -16.750003814697266
    8. '_expect' → logprob: -16.750003814697266
    9. '```' → logprob: -17.125003814697266
    10. '_allowed' → logprob: -17.375003814697266

Token 130: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00046630011638626456
    2. 'number' → logprob: -8.000466346740723
    3. '_' → logprob: -9.875466346740723
    4. '_expected' → logprob: -10.375466346740723
    5. 'expected' → logprob: -10.625466346740723
    6. '```' → logprob: -12.125466346740723
    7. '   ' → logprob: -12.375466346740723
    8. '==' → logprob: -12.500466346740723
    9. ' ' → logprob: -12.750466346740723
    10. '-' → logprob: -13.750466346740723

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5003276467323303
    2. '>' → logprob: -1.7503275871276855
    3. ' ==' → logprob: -2.0003275871276855
    4. ' >' → logprob: -2.6253275871276855
    5. '-' → logprob: -4.5003275871276855
    6. '<=' → logprob: -7.6253275871276855
    7. ' -' → logprob: -8.125328063964844
    8. ' <=' → logprob: -9.625328063964844
    9. ' ' → logprob: -9.750328063964844
    10. '>=' → logprob: -9.875328063964844

Token 132: ' ' (ID: 220)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0059434943832457066
    2. ' sequence' → logprob: -5.130943298339844
    3. '1' → logprob: -11.380943298339844
    4. '(sequence' → logprob: -12.880943298339844
    5. '   ' → logprob: -14.880943298339844
    6. ' ' → logprob: -15.005943298339844
    7. '2' → logprob: -17.005943298339844
    8. 'seq' → logprob: -17.255943298339844
    9. '
' → logprob: -17.505943298339844
    10. 'current' → logprob: -17.880943298339844

Token 133: '1' (ID: 16)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.10693400353193283
    2. '1' → logprob: -2.356934070587158
    3. ' sequence' → logprob: -5.106934070587158
    4. ' ' → logprob: -7.481934070587158
    5. '2' → logprob: -10.73193359375
    6. '(sequence' → logprob: -10.73193359375
    7. '   ' → logprob: -10.85693359375
    8. '
' → logprob: -12.73193359375
    9. '```' → logprob: -12.85693359375
    10. 'seq' → logprob: -12.98193359375

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003186147892847657
    2. ':
' → logprob: -5.753186225891113
    3. ' :' → logprob: -12.253186225891113
    4. ':
' → logprob: -13.628186225891113
    5. 'print' → logprob: -14.128186225891113
    6. ':

' → logprob: -14.878186225891113
    7. '):' → logprob: -15.003186225891113
    8. ':return' → logprob: -15.003186225891113
    9. ' and' → logprob: -15.378186225891113
    10. ' or' → logprob: -16.378185272216797

Token 135: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8530099987983704
    2. '       ' → logprob: -0.9780099987983704
    3. '   ' → logprob: -2.2280099391937256
    4. ' print' → logprob: -3.1030099391937256
    5. '
' → logprob: -3.4780099391937256
    6. ':' → logprob: -4.603010177612305
    7. ':
' → logprob: -5.978010177612305
    8. '-' → logprob: -7.103010177612305
    9. '```' → logprob: -8.103010177612305
    10. '        
' → logprob: -9.228010177612305

Token 136: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05281532555818558
    2. '
' → logprob: -3.4278154373168945
    3. '-' → logprob: -4.0528154373168945
    4. ' print' → logprob: -6.9278154373168945
    5. '   ' → logprob: -8.177815437316895
    6. '       ' → logprob: -9.052815437316895
    7. '        
' → logprob: -9.677815437316895
    8. '    
' → logprob: -10.052815437316895
    9. '-
' → logprob: -10.302815437316895
    10. '-print' → logprob: -10.552815437316895

Token 137: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.60414821645827e-06
    2. ' -' → logprob: -12.375004768371582
    3. '(-' → logprob: -14.875004768371582
    4. '```' → logprob: -17.625003814697266
    5. '−' → logprob: -17.875003814697266
    6. '"-' → logprob: -17.875003814697266
    7. '-m' → logprob: -18.125003814697266
    8. '-
' → logprob: -18.750003814697266
    9. '\-' → logprob: -18.750003814697266
    10. '(' → logprob: -18.750003814697266

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '１' → logprob: -15.06250286102295
    4. '
' → logprob: -15.81250286102295
    5. '۱' → logprob: -16.062501907348633
    6. '```' → logprob: -16.312501907348633
    7. '2' → logprob: -16.437501907348633
    8. 'print' → logprob: -17.000001907348633
    9. 'sequence' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.125001907348633

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38690173625946045
    2. ')
' → logprob: -1.1369017362594604
    3. '   ' → logprob: -11.01190185546875
    4. ')return' → logprob: -12.13690185546875
    5. ')
' → logprob: -12.38690185546875
    6. ' )' → logprob: -13.38690185546875
    7. ' )
' → logprob: -13.63690185546875
    8. ')

' → logprob: -14.63690185546875
    9. 'else' → logprob: -15.26190185546875
    10. '
' → logprob: -15.38690185546875

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2153828740119934
    2. 'else' → logprob: -1.7153828144073486
    3. ' else' → logprob: -4.340383052825928
    4. '       ' → logprob: -7.215383052825928
    5. 'elif' → logprob: -9.46538257598877
    6. '	else' → logprob: -11.71538257598877
    7. ')' → logprob: -12.34038257598877
    8. '_else' → logprob: -12.84038257598877
    9. '<|end|>' → logprob: -13.09038257598877
    10. '```' → logprob: -13.21538257598877

Token 141: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16137291491031647
    2. ' else' → logprob: -1.9113729000091553
    3. 'elif' → logprob: -7.036373138427734
    4. '   ' → logprob: -8.536373138427734
    5. ' elif' → logprob: -9.661373138427734
    6. ' ' → logprob: -12.536373138427734
    7. '_else' → logprob: -12.911373138427734
    8. '	else' → logprob: -14.161373138427734
    9. ')' → logprob: -14.286373138427734
    10. '       ' → logprob: -15.161373138427734

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00864080898463726
    2. ':
' → logprob: -4.758640766143799
    3. ' :' → logprob: -10.758641242980957
    4. ' :
' → logprob: -12.758641242980957
    5. '       ' → logprob: -14.133641242980957
    6. '   ' → logprob: -14.508641242980957
    7. ':

' → logprob: -14.758641242980957
    8. ':
' → logprob: -15.383641242980957
    9. 'print' → logprob: -16.25864028930664
    10. '    ' → logprob: -16.50864028930664

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7113769054412842
    2. 'print' → logprob: -0.7113769054412842
    3. ' print' → logprob: -4.461377143859863
    4. '   ' → logprob: -5.086377143859863
    5. '
' → logprob: -8.336377143859863
    6. '    
' → logprob: -10.336377143859863
    7. '        
' → logprob: -11.586377143859863
    8. '```' → logprob: -11.836377143859863
    9. '7' → logprob: -11.961377143859863
    10. '	print' → logprob: -12.086377143859863

Token 144: ' min' (ID: 1349)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.796184723294573e-06
    2. 'sequence' → logprob: -12.750005722045898
    3. ' print' → logprob: -13.000005722045898
    4. '       ' → logprob: -15.375005722045898
    5. '   ' → logprob: -15.375005722045898
    6. '
' → logprob: -16.5000057220459
    7. '        
' → logprob: -17.3750057220459
    8. '```' → logprob: -17.8750057220459
    9. '    
' → logprob: -19.0000057220459
    10. ' sequence' → logprob: -19.0000057220459

Token 145: '_rem' (ID: 42194)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.9876272678375244
    2. 'print' → logprob: -1.7376272678375244
    3. 'sequence' → logprob: -2.3626272678375244
    4. 'imum' → logprob: -3.1126272678375244
    5. 'e' → logprob: -3.2376272678375244
    6. 'ion' → logprob: -3.2376272678375244
    7. '_sequence' → logprob: -3.4876272678375244
    8. 'o' → logprob: -3.7376272678375244
    9. '-' → logprob: -4.237627029418945
    10. 'ions' → logprob: -4.237627029418945

Token 146: 'ov' (ID: 569)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.622759222984314
    2. 'ov' → logprob: -1.872759222984314
    3. 'oved' → logprob: -1.872759222984314
    4. 'ain' → logprob: -2.7477593421936035
    5. 'aining' → logprob: -2.9977593421936035
    6. 'oval' → logprob: -3.7477593421936035
    7. 'a' → logprob: -4.4977593421936035
    8. 'oving' → logprob: -5.8727593421936035
    9. 'ains' → logprob: -6.8727593421936035
    10. 'ovable' → logprob: -6.8727593421936035

Token 147: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.3755350112915039
    2. 'e' → logprob: -1.750535011291504
    3. 'al' → logprob: -2.125535011291504
    4. 'ed' → logprob: -4.625535011291504
    5. 'ov' → logprob: -4.750535011291504
    6. 'oval' → logprob: -7.875535011291504
    7. 'es' → logprob: -8.000535011291504
    8. 'able' → logprob: -8.500535011291504
    9. 'val' → logprob: -8.750535011291504
    10. 'ove' → logprob: -9.250535011291504

Token 148: '_needed' (ID: 148421)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012521663680672646
    2. '=' → logprob: -4.387521743774414
    3. ' ' → logprob: -11.637521743774414
    4. '   ' → logprob: -13.512521743774414
    5. ' =
' → logprob: -14.012521743774414
    6. '    ' → logprob: -15.387521743774414
    7. '=len' → logprob: -15.512521743774414
    8. '  ' → logprob: -16.512521743774414
    9. '=
' → logprob: -16.637521743774414
    10. 's' → logprob: -17.137521743774414

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132671117782593
    2. '=' → logprob: -1.3132671117782593
    3. ' ' → logprob: -12.93826675415039
    4. '   ' → logprob: -13.93826675415039
    5. ' =
' → logprob: -14.56326675415039
    6. '=len' → logprob: -14.68826675415039
    7. '=
' → logprob: -15.31326675415039
    8. ':' → logprob: -15.56326675415039
    9. '＝' → logprob: -15.93826675415039
    10. '    ' → logprob: -16.56326675415039

Token 150: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.001178439473733306
    2. ' sequence' → logprob: -6.75117826461792
    3. 'len' → logprob: -12.376178741455078
    4. '   ' → logprob: -12.501178741455078
    5. '
' → logprob: -15.626178741455078
    6. '(sequence' → logprob: -15.751178741455078
    7. ' len' → logprob: -18.876178741455078
    8. 'length' → logprob: -19.251178741455078
    9. 'seq' → logprob: -19.376178741455078
    10. ' ' → logprob: -19.376178741455078

Token 151: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0564331205387134e-05
    2. 'length' → logprob: -11.75001049041748
    3. 'Length' → logprob: -14.00001049041748
    4. '_lengths' → logprob: -14.50001049041748
    5. '_' → logprob: -14.62501049041748
    6. '   ' → logprob: -15.50001049041748
    7. '_l' → logprob: -15.87501049041748
    8. '_sequence' → logprob: -16.500011444091797
    9. '_numbers' → logprob: -16.500011444091797
    10. '-length' → logprob: -16.500011444091797

Token 152: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08898396044969559
    2. '-' → logprob: -2.4639840126037598
    3. ' ' → logprob: -10.963983535766602
    4. '-current' → logprob: -11.713983535766602
    5. '-
' → logprob: -11.963983535766602
    6. ' ' → logprob: -12.213983535766602
    7. ' -
' → logprob: -12.838983535766602
    8. '   ' → logprob: -13.088983535766602
    9. '
' → logprob: -13.588983535766602
    10. '-min' → logprob: -15.338983535766602

Token 153: ' current' (ID: 2208)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.49961110949516296
    2. 'current' → logprob: -0.9996111392974854
    3. ' current' → logprob: -4.124610900878906
    4. ' (' → logprob: -4.749610900878906
    5. '(' → logprob: -8.124610900878906
    6. '[current' → logprob: -10.374610900878906
    7. '   ' → logprob: -10.749610900878906
    8. '$current' → logprob: -11.624610900878906
    9. '	current' → logprob: -12.249610900878906
    10. ' ' → logprob: -12.249610900878906

Token 154: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -0.000158842682139948
    2. 'expected' → logprob: -8.75015926361084
    3. 'Expected' → logprob: -15.25015926361084
    4. '_required' → logprob: -17.750158309936523
    5. 'EXPECTED' → logprob: -17.750158309936523
    6. '_expect' → logprob: -18.375158309936523
    7. '_possible' → logprob: -18.750158309936523
    8. '	expected' → logprob: -19.000158309936523
    9. '_current' → logprob: -19.000158309936523
    10. '```' → logprob: -19.125158309936523

Token 155: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0006282062386162579
    2. 'number' → logprob: -7.3756279945373535
    3. 'umber' → logprob: -14.625628471374512
    4. 'expected' → logprob: -14.750628471374512
    5. ' ' → logprob: -15.500628471374512
    6. '_' → logprob: -15.750628471374512
    7. ' number' → logprob: -16.250627517700195
    8. 'Number' → logprob: -16.875627517700195
    9. '_expected' → logprob: -17.125627517700195
    10. '_numbers' → logprob: -17.250627517700195

Token 156: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026306800544261932
    2. ' +' → logprob: -3.6513068675994873
    3. '+
' → logprob: -13.151307106018066
    4. ' plus' → logprob: -13.526307106018066
    5. 'plus' → logprob: -13.901307106018066
    6. '```' → logprob: -14.276307106018066
    7. '   ' → logprob: -14.776307106018066
    8. '＋' → logprob: -15.401307106018066
    9. '1' → logprob: -15.526307106018066
    10. '
' → logprob: -15.526307106018066

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '0' → logprob: -14.375029563903809
    4. '-' → logprob: -14.750029563903809
    5. '
' → logprob: -15.250029563903809
    6. '```' → logprob: -15.625029563903809
    7. '<|end|>' → logprob: -16.500028610229492
    8. ' -' → logprob: -16.500028610229492
    9. '   ' → logprob: -17.375028610229492
    10. '  ' → logprob: -18.000028610229492

Token 158: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22168627381324768
    2. '1' → logprob: -1.8466862440109253
    3. ' -' → logprob: -3.221686363220215
    4. '0' → logprob: -7.721686363220215
    5. ' ' → logprob: -8.221686363220215
    6. '   ' → logprob: -8.846686363220215
    7. '```' → logprob: -8.971686363220215
    8. '
' → logprob: -9.221686363220215
    9. '  ' → logprob: -10.471686363220215
    10. '--' → logprob: -11.784186363220215

Token 159: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011591781862080097
    2. '   ' → logprob: -4.761591911315918
    3. 'print' → logprob: -7.011591911315918
    4. ')' → logprob: -7.386591911315918
    5. ')
' → logprob: -7.886591911315918
    6. '       ' → logprob: -7.886591911315918
    7. '
' → logprob: -8.261591911315918
    8. '    
' → logprob: -8.511591911315918
    9. '  
' → logprob: -8.761591911315918
    10. '<|end|>' → logprob: -11.011591911315918

Token 160: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03443104401230812
    2. 'print' → logprob: -3.909430980682373
    3. '       ' → logprob: -4.409430980682373
    4. '
' → logprob: -6.534430980682373
    5. ' print' → logprob: -9.284431457519531
    6. ')' → logprob: -10.284431457519531
    7. '    
' → logprob: -10.409431457519531
    8. ')
' → logprob: -12.034431457519531
    9. '```' → logprob: -12.034431457519531
    10. '	print' → logprob: -13.034431457519531

Token 161: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.8325677703833207e-05
    2. ' print' → logprob: -11.250028610229492
    3. '       ' → logprob: -11.750028610229492
    4. '   ' → logprob: -12.000028610229492
    5. '
' → logprob: -13.625028610229492
    6. '```' → logprob: -17.250028610229492
    7. '	print' → logprob: -18.500028610229492
    8. '#print' → logprob: -19.750028610229492
    9. '        
' → logprob: -20.000028610229492
    10. '    
' → logprob: -20.250028610229492

Token 162: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0005548207554966211
    2. '(' → logprob: -7.500555038452148
    3. 'min' → logprob: -13.250555038452148
    4. '(max' → logprob: -16.87555503845215
    5. '(
' → logprob: -18.50055503845215
    6. '(m' → logprob: -18.62555503845215
    7. ' min' → logprob: -19.00055503845215
    8. ',min' → logprob: -19.50055503845215
    9. ' (' → logprob: -20.50055503845215
    10. '	min' → logprob: -21.25055503845215

Token 163: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -1.5451681974809617e-05
    2. '_' → logprob: -11.750015258789062
    3. '_removed' → logprob: -13.500015258789062
    4. 'rem' → logprob: -13.750015258789062
    5. '_res' → logprob: -14.000015258789062
    6. '_remove' → logprob: -14.250015258789062
    7. ' _' → logprob: -14.375015258789062
    8. ')' → logprob: -14.500015258789062
    9. '_rel' → logprob: -14.750015258789062
    10. '_rest' → logprob: -15.000015258789062

Token 164: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -0.00026538874953985214
    2. '```' → logprob: -9.500265121459961
    3. 'o' → logprob: -10.250265121459961
    4. 'ova' → logprob: -10.625265121459961
    5. 'ivals' → logprob: -10.750265121459961
    6. '_' → logprob: -10.875265121459961
    7. 'ovs' → logprob: -11.625265121459961
    8. 'oval' → logprob: -11.750265121459961
    9. '##' → logprob: -12.000265121459961
    10. 'vals' → logprob: -12.125265121459961

Token 165: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -5.455048449221067e-05
    2. 'al' → logprob: -10.125054359436035
    3. 'ov' → logprob: -12.750054359436035
    4. 'a' → logprob: -13.375054359436035
    5. '```' → logprob: -13.375054359436035
    6. 'ers' → logprob: -13.750054359436035
    7. 'vals' → logprob: -13.875054359436035
    8. 's' → logprob: -14.250054359436035
    9. '**' → logprob: -14.500054359436035
    10. '
' → logprob: -14.625054359436035

Token 166: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.03004678711295128
    2. ')' → logprob: -3.5300467014312744
    3. ')_' → logprob: -9.030046463012695
    4. ' )' → logprob: -10.405046463012695
    5. '_need' → logprob: -10.405046463012695
    6. '_' → logprob: -10.530046463012695
    7. '_required' → logprob: -10.655046463012695
    8. '_n' → logprob: -11.030046463012695
    9. ' _' → logprob: -11.030046463012695
    10. 'needed' → logprob: -11.405046463012695

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -12.125007629394531
    3. ' )' → logprob: -14.000007629394531
    4. '<|end|>' → logprob: -14.125007629394531
    5. '   ' → logprob: -14.750007629394531
    6. '```' → logprob: -15.625007629394531
    7. '}' → logprob: -16.37500762939453
    8. ')#' → logprob: -16.50000762939453
    9. ')}' → logprob: -16.75000762939453
    10. '`)' → logprob: -16.75000762939453

Token 168: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.644612729549408
    2. '
' → logprob: -1.1446127891540527
    3. '<|end|>' → logprob: -1.8946127891540527
    4. '\n' → logprob: -6.019612789154053
    5. '```' → logprob: -6.394612789154053
    6. '#' → logprob: -7.894612789154053
    7. ' if' → logprob: -8.144612312316895
    8. '\' → logprob: -8.269612312316895
    9. '' → logprob: -8.394612312316895
    10. '[' → logprob: -8.769612312316895

Token 169: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03752860426902771
    2. '__' → logprob: -3.4125285148620605
    3. '_' → logprob: -5.7875285148620605
    4. ' ' → logprob: -7.7875285148620605
    5. ' _' → logprob: -8.287528991699219
    6. '_name' → logprob: -9.537528991699219
    7. ' ' → logprob: -10.912528991699219
    8. '  ' → logprob: -11.537528991699219
    9. '___' → logprob: -11.787528991699219
    10. ' ‌' → logprob: -11.912528991699219

Token 170: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6320427060127258
    2. '__' → logprob: -1.007042646408081
    3. ' __' → logprob: -2.757042646408081
    4. '.__' → logprob: -3.757042646408081
    5. '_' → logprob: -5.50704288482666
    6. ' .' → logprob: -5.88204288482666
    7. '==' → logprob: -5.88204288482666
    8. '.' → logprob: -5.88204288482666
    9. '[' → logprob: -7.38204288482666
    10. '<|end|>' → logprob: -7.38204288482666

Token 171: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0033446596935391426
    2. '==' → logprob: -5.878344535827637
    3. ' ==' → logprob: -7.753344535827637
    4. '=="' → logprob: -9.253344535827637
    5. '__.__' → logprob: -11.753344535827637
    6. '=='' → logprob: -13.128344535827637
    7. '_' → logprob: -13.378344535827637
    8. '___' → logprob: -14.253344535827637
    9. '```' → logprob: -14.628344535827637
    10. '.__' → logprob: -15.253344535827637

Token 172: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5792860388755798
    2. ' ==' → logprob: -0.9542860388755798
    3. '==' → logprob: -3.0792860984802246
    4. '.__' → logprob: -5.329286098480225
    5. '.' → logprob: -6.204286098480225
    6. '__.__' → logprob: -7.579286098480225
    7. ' .' → logprob: -7.954286098480225
    8. '[' → logprob: -7.954286098480225
    9. '_' → logprob: -8.954285621643066
    10. '=="' → logprob: -9.329285621643066

Token 173: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06198090314865112
    2. ''' → logprob: -2.811980962753296
    3. ' "__' → logprob: -11.561981201171875
    4. '__' → logprob: -13.061981201171875
    5. ' "' → logprob: -14.186981201171875
    6. ' '__' → logprob: -14.936981201171875
    7. '"user' → logprob: -15.811981201171875
    8. '`' → logprob: -16.311981201171875
    9. '"_' → logprob: -16.686981201171875
    10. '"name' → logprob: -17.311981201171875

Token 174: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.621933451038785e-05
    2. 'name' → logprob: -9.875056266784668
    3. 'm' → logprob: -12.375056266784668
    4. 'ma' → logprob: -15.375056266784668
    5. '_main' → logprob: -15.375056266784668
    6. '__':
' → logprob: -16.62505531311035
    7. '__' → logprob: -16.75005531311035
    8. ' main' → logprob: -17.37505531311035
    9. 'mai' → logprob: -18.25005531311035
    10. '.main' → logprob: -19.00005531311035

Token 175: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0297836996614933
    2. '__' → logprob: -3.5297837257385254
    3. '':' → logprob: -10.904783248901367
    4. '__:' → logprob: -11.529783248901367
    5. '__":
' → logprob: -12.904783248901367
    6. '_' → logprob: -13.279783248901367
    7. ':' → logprob: -15.154783248901367
    8. '':
' → logprob: -15.279783248901367
    9. '__.' → logprob: -15.404783248901367
    10. '___' → logprob: -17.529783248901367

Token 176: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2620072662830353
    2. '	main' → logprob: -1.637007236480713
    3. 'main' → logprob: -3.762007236480713
    4. '   ' → logprob: -4.387007236480713
    5. '_main' → logprob: -9.262007713317871
    6. '    
' → logprob: -10.012007713317871
    7. '<|end|>' → logprob: -10.637007713317871
    8. '   ' → logprob: -11.012007713317871
    9. '	Main' → logprob: -11.137007713317871
    10. '(main' → logprob: -11.262007713317871

Token 177: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -18.0
    4. '   ' → logprob: -19.25
    5. '_main' → logprob: -23.875
    6. '  ' → logprob: -25.125
    7. '(main' → logprob: -25.375
    8. '.main' → logprob: -25.5
    9. 'Main' → logprob: -26.625
    10. '    
' → logprob: -26.875

Token 178: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 176
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 142
Précision stricte (1ère position): 44.32%
Précision adaptée (1ère position): 47.73%
Précision (top 10): 80.68%
================================================================================
