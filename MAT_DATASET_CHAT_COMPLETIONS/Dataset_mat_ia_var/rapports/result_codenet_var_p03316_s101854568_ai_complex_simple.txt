================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

n = int(input())
digits = map(int, str(n))
s = reduce(lambda x, y: add(x, y), digits, 0)
print(('No', 'Yes')[divmod(n, s)[1] == 0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03611854091286659
    2. '(lambda' → logprob: -3.411118507385254
    3. '.' → logprob: -6.786118507385254
    4. ' (' → logprob: -7.786118507385254
    5. ',' → logprob: -8.036118507385254
    6. 'lambda' → logprob: -9.036118507385254
    7. '```' → logprob: -9.286118507385254
    8. 'a' → logprob: -9.536118507385254
    9. ''' → logprob: -10.036118507385254
    10. '\' → logprob: -10.286118507385254

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2564718425273895
    2. '\' → logprob: -2.631471872329712
    3. '(
' → logprob: -3.256471872329712
    4. '\n' → logprob: -3.256471872329712
    5. ',' → logprob: -3.756471872329712
    6. '#' → logprob: -4.631471633911133
    7. ' ' → logprob: -5.131471633911133
    8. 'def' → logprob: -5.131471633911133
    9. ')' → logprob: -5.506471633911133
    10. '
' → logprob: -5.756471633911133

Token 10: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03048279881477356
    2. '(
' → logprob: -3.905482769012451
    3. '#' → logprob: -5.530482769012451
    4. 'def' → logprob: -6.655482769012451
    5. 'a' → logprob: -6.780482769012451
    6. '\' → logprob: -7.030482769012451
    7. 'result' → logprob: -7.405482769012451
    8. ',' → logprob: -7.530482769012451
    9. '(

' → logprob: -8.65548324584961
    10. '(a' → logprob: -8.90548324584961

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.268945336341858
    2. '_' → logprob: -1.393945336341858
    3. ' =' → logprob: -1.643945336341858
    4. 'u' → logprob: -2.2689452171325684
    5. ' ' → logprob: -2.5189452171325684
    6. 'umber' → logprob: -3.6439452171325684
    7. 'um' → logprob: -3.7689452171325684
    8. 'a' → logprob: -4.018945217132568
    9. ',' → logprob: -4.893945217132568
    10. 'umbers' → logprob: -5.393945217132568

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01192072220146656
    2. '0' → logprob: -4.886920928955078
    3. '1' → logprob: -6.011920928955078
    4. '10' → logprob: -6.636920928955078
    5. '5' → logprob: -8.636920928955078
    6. ''' → logprob: -9.261920928955078
    7. '20' → logprob: -9.511920928955078
    8. ' '' → logprob: -9.636920928955078
    9. 'int' → logprob: -10.886920928955078
    10. '100' → logprob: -11.136920928955078

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001785112835932523
    2. '(n' → logprob: -9.500178337097168
    3. '()' → logprob: -10.500178337097168
    4. '(input' → logprob: -10.625178337097168
    5. ' (' → logprob: -10.875178337097168
    6. '('' → logprob: -11.625178337097168
    7. '(`' → logprob: -12.000178337097168
    8. '```' → logprob: -13.000178337097168
    9. '(

' → logprob: -13.375178337097168
    10. '<|end|>' → logprob: -13.500178337097168

Token 14: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16534316539764404
    2. ')' → logprob: -2.2903432846069336
    3. '()' → logprob: -3.1653432846069336
    4. '())' → logprob: -5.165343284606934
    5. '('' → logprob: -6.290343284606934
    6. '(
' → logprob: -7.540343284606934
    7. '("("' → logprob: -8.665343284606934
    8. '(()' → logprob: -9.040343284606934
    9. '))' → logprob: -9.290343284606934
    10. '(

' → logprob: -9.415343284606934

Token 15: 'digits' (ID: 135574)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3000141978263855
    2. 'numbers' → logprob: -2.3000142574310303
    3. 'lst' → logprob: -2.9250142574310303
    4. 'total' → logprob: -3.3000142574310303
    5. 'arr' → logprob: -4.050014019012451
    6. 's' → logprob: -4.300014019012451
    7. 'sequence' → logprob: -4.800014019012451
    8. 'data' → logprob: -4.925014019012451
    9. 'a' → logprob: -5.050014019012451
    10. 'nums' → logprob: -5.300014019012451

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42129766941070557
    2. ' =' → logprob: -1.7962976694107056
    3. '=' → logprob: -2.546297550201416
    4. '_' → logprob: -2.671297550201416
    5. '(' → logprob: -4.421297550201416
    6. '[:]' → logprob: -5.546297550201416
    7. 's' → logprob: -5.671297550201416
    8. '()' → logprob: -5.796297550201416
    9. '.' → logprob: -6.296297550201416
    10. '[]' → logprob: -6.546297550201416

Token 17: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1942080557346344
    2. 'input' → logprob: -2.1942081451416016
    3. ' list' → logprob: -3.0692081451416016
    4. '[input' → logprob: -4.694208145141602
    5. ' input' → logprob: -5.694208145141602
    6. '[' → logprob: -5.694208145141602
    7. ' [' → logprob: -6.694208145141602
    8. '[list' → logprob: -7.194208145141602
    9. '(input' → logprob: -8.569208145141602
    10. '(list' → logprob: -8.569208145141602

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.46194010972976685
    2. '(' → logprob: -1.086940050125122
    3. '(lambda' → logprob: -3.461940050125122
    4. '(str' → logprob: -6.836940288543701
    5. 'int' → logprob: -8.961939811706543
    6. '[int' → logprob: -10.211939811706543
    7. '<int' → logprob: -10.711939811706543
    8. ' (' → logprob: -11.711939811706543
    9. 'lambda' → logprob: -12.211939811706543
    10. '(ord' → logprob: -12.211939811706543

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012685162015259266
    2. '(' → logprob: -4.637685298919678
    3. '(n' → logprob: -6.387685298919678
    4. ')' → logprob: -7.137685298919678
    5. '(user' → logprob: -9.01268482208252
    6. ',input' → logprob: -10.13768482208252
    7. '(line' → logprob: -10.76268482208252
    8. ',' → logprob: -10.88768482208252
    9. '(inputs' → logprob: -11.01268482208252
    10. '(data' → logprob: -11.13768482208252

Token 20: ' str' (ID: 989)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02014976553618908
    2. ' input' → logprob: -4.2701497077941895
    3. 'list' → logprob: -5.2701497077941895
    4. 'str' → logprob: -7.3951497077941895
    5. ' list' → logprob: -9.145150184631348
    6. ' str' → logprob: -9.770150184631348
    7. '(input' → logprob: -10.395150184631348
    8. ' ' → logprob: -12.270150184631348
    9. ')' → logprob: -12.395150184631348
    10. '[input' → logprob: -13.020150184631348

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013909504050388932
    2. '(' → logprob: -7.2513909339904785
    3. 'n' → logprob: -7.3763909339904785
    4. ' (' → logprob: -10.376391410827637
    5. ' n' → logprob: -11.751391410827637
    6. ')' → logprob: -12.251391410827637
    7. ')n' → logprob: -12.251391410827637
    8. 'a' → logprob: -14.126391410827637
    9. '(num' → logprob: -14.376391410827637
    10. '(x' → logprob: -14.501391410827637

Token 22: '))
' (ID: 2210)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.699467658996582
    2. ')' → logprob: -1.074467658996582
    3. '))' → logprob: -1.824467658996582
    4. '))))' → logprob: -8.699467658996582
    5. '[' → logprob: -9.699467658996582
    6. ')[' → logprob: -10.199467658996582
    7. '),' → logprob: -11.074467658996582
    8. ')+' → logprob: -11.449467658996582
    9. ')n' → logprob: -11.699467658996582
    10. '   ' → logprob: -12.074467658996582

Token 23: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029765060171484947
    2. 'result' → logprob: -3.7797651290893555
    3. ' )' → logprob: -6.2797651290893555
    4. 'sum' → logprob: -6.2797651290893555
    5. 'print' → logprob: -7.6547651290893555
    6. 's' → logprob: -7.9047651290893555
    7. ')
' → logprob: -8.029765129089355
    8. 'total' → logprob: -8.029765129089355
    9. '_)' → logprob: -8.404765129089355
    10. '_' → logprob: -8.404765129089355

Token 24: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.05933154374361038
    2. 'u' → logprob: -2.9343316555023193
    3. '=' → logprob: -5.68433141708374
    4. ' =' → logprob: -8.434331893920898
    5. 'umm' → logprob: -9.434331893920898
    6. '(' → logprob: -9.434331893920898
    7. '_' → logprob: -9.559331893920898
    8. 'umulate' → logprob: -9.684331893920898
    9. 'reduce' → logprob: -9.684331893920898
    10. '(u' → logprob: -10.184331893920898

Token 25: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.47409364581108093
    2. ' reduce' → logprob: -0.9740936756134033
    3. 'sum' → logprob: -11.849093437194824
    4. 're' → logprob: -13.224093437194824
    5. ' sum' → logprob: -13.224093437194824
    6. 'redu' → logprob: -13.349093437194824
    7. '.reduce' → logprob: -13.599093437194824
    8. '_reduce' → logprob: -14.349093437194824
    9. ' functools' → logprob: -14.599093437194824
    10. ' ' → logprob: -14.974093437194824

Token 26: '(lambda' (ID: 43341)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.014348485507071018
    2. '(' → logprob: -4.26434850692749
    3. '(lambda' → logprob: -8.639348030090332
    4. '(operator' → logprob: -12.514348030090332
    5. 'add' → logprob: -13.264348030090332
    6. '(s' → logprob: -14.764348030090332
    7. ')add' → logprob: -14.764348030090332
    8. ' (' → logprob: -14.764348030090332
    9. '(Add' → logprob: -15.139348030090332
    10. '```' → logprob: -15.264348030090332

Token 27: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.34240296483039856
    2. 'x' → logprob: -1.3424029350280762
    3. ' a' → logprob: -4.342402935028076
    4. 'a' → logprob: -4.342402935028076
    5. 'acc' → logprob: -6.467402935028076
    6. ' acc' → logprob: -6.842402935028076
    7. ' add' → logprob: -10.467403411865234
    8. ' ' → logprob: -10.467403411865234
    9. 'add' → logprob: -10.717403411865234
    10. '	x' → logprob: -12.842403411865234

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029351349803619087
    2. ' ,' → logprob: -8.375293731689453
    3. ',x' → logprob: -9.875293731689453
    4. ',y' → logprob: -11.875293731689453
    5. ',a' → logprob: -13.250293731689453
    6. ',s' → logprob: -15.000293731689453
    7. ',e' → logprob: -15.000293731689453
    8. ',b' → logprob: -15.375293731689453
    9. '+' → logprob: -15.625293731689453
    10. ' +' → logprob: -15.625293731689453

Token 29: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38687199354171753
    2. ' y' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.386872291564941
    4. '	y' → logprob: -15.886872291564941
    5. 'a' → logprob: -16.136871337890625
    6. ',y' → logprob: -16.886871337890625
    7. ' ' → logprob: -17.386871337890625
    8. ',' → logprob: -17.761871337890625
    9. '  ' → logprob: -18.011871337890625
    10. 'x' → logprob: -18.261871337890625

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003478666767477989
    2. ' :' → logprob: -5.753478527069092
    3. ',' → logprob: -8.87847900390625
    4. ':add' → logprob: -8.87847900390625
    5. ':x' → logprob: -11.25347900390625
    6. ',:' → logprob: -13.62847900390625
    7. 'add' → logprob: -13.87847900390625
    8. '+:' → logprob: -13.87847900390625
    9. ':y' → logprob: -13.87847900390625
    10. ':s' → logprob: -14.50347900390625

Token 31: ' add' (ID: 1147)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3383232355117798
    2. 'x' → logprob: -1.9633232355117798
    3. ' add' → logprob: -1.9633232355117798
    4. 'add' → logprob: -5.08832311630249
    5. ' ' → logprob: -9.588323593139648
    6. '	add' → logprob: -12.463323593139648
    7. '  ' → logprob: -12.713323593139648
    8. '(add' → logprob: -13.338323593139648
    9. '	x' → logprob: -13.463323593139648
    10. ')add' → logprob: -13.588323593139648

Token 32: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015096203424036503
    2. '(' → logprob: -6.501509666442871
    3. 'x' → logprob: -12.126509666442871
    4. ')' → logprob: -14.376509666442871
    5. ' (' → logprob: -14.501509666442871
    6. ' ' → logprob: -14.751509666442871
    7. ' x' → logprob: -16.001508712768555
    8. '(
' → logprob: -16.626508712768555
    9. ',' → logprob: -16.751508712768555
    10. '  ' → logprob: -17.251508712768555

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009797642007470131
    2. ',y' → logprob: -4.8847975730896
    3. ' ,' → logprob: -6.1347975730896
    4. 'y' → logprob: -11.634798049926758
    5. '+' → logprob: -12.384798049926758
    6. '+y' → logprob: -12.884798049926758
    7. '+,' → logprob: -13.009798049926758
    8. ' ' → logprob: -13.509798049926758
    9. ' y' → logprob: -14.134798049926758
    10. ',+' → logprob: -14.759798049926758

Token 34: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759671330451965
    2. 'y' → logprob: -0.8259671330451965
    3. ')' → logprob: -11.700966835021973
    4. ')y' → logprob: -11.825966835021973
    5. ' ' → logprob: -12.450966835021973
    6. ' ' → logprob: -13.200966835021973
    7. '(y' → logprob: -13.450966835021973
    8. ' )' → logprob: -13.825966835021973
    9. '	y' → logprob: -13.950966835021973
    10. 's' → logprob: -14.325966835021973

Token 35: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6349276304244995
    2. ')' → logprob: -1.0099276304244995
    3. ',' → logprob: -2.259927749633789
    4. '))' → logprob: -6.634927749633789
    5. 's' → logprob: -10.384927749633789
    6. ' ' → logprob: -11.384927749633789
    7. ')))' → logprob: -11.634927749633789
    8. ',d' → logprob: -11.884927749633789
    9. ')
' → logprob: -12.259927749633789
    10. ',s' → logprob: -12.384927749633789

Token 36: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.0889524519443512
    2. 'digits' → logprob: -2.4639525413513184
    3. ' ' → logprob: -12.58895206451416
    4. ')' → logprob: -12.96395206451416
    5. '_digits' → logprob: -13.46395206451416
    6. 'Digits' → logprob: -13.46395206451416
    7. ' digit' → logprob: -14.33895206451416
    8. ' ' → logprob: -14.46395206451416
    9. 'd' → logprob: -14.46395206451416
    10. 'igits' → logprob: -14.83895206451416

Token 37: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. '))' → logprob: -11.125016212463379
    3. ')
' → logprob: -14.375016212463379
    4. ')))' → logprob: -14.750016212463379
    5. ')s' → logprob: -15.375016212463379
    6. ' )' → logprob: -15.750016212463379
    7. ')#' → logprob: -17.250017166137695
    8. ')return' → logprob: -17.625017166137695
    9. ')`' → logprob: -18.125017166137695
    10. ')**' → logprob: -18.375017166137695

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. ')' → logprob: -17.12548828125
    4. '   ' → logprob: -18.12548828125
    5. '  ' → logprob: -18.37548828125
    6. ' ' → logprob: -19.37548828125
    7. '1' → logprob: -19.62548828125
    8. '۰' → logprob: -19.87548828125
    9. '00' → logprob: -20.12548828125
    10. '    ' → logprob: -20.93798828125

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -8.875140190124512
    3. ')' → logprob: -14.750140190124512
    4. '1' → logprob: -16.625141143798828
    5. '  ' → logprob: -17.250141143798828
    6. '   ' → logprob: -17.375141143798828
    7. '۰' → logprob: -18.437641143798828
    8. '    ' → logprob: -19.250141143798828
    9. '-' → logprob: -19.312641143798828
    10. '10' → logprob: -19.750141143798828

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.000000953674316
    3. '))' → logprob: -15.375000953674316
    4. ' )' → logprob: -15.750000953674316
    5. ')`' → logprob: -17.500001907348633
    6. ')

' → logprob: -18.000001907348633
    7. '`)' → logprob: -18.250001907348633
    8. '),' → logprob: -18.500001907348633
    9. ')#' → logprob: -18.750001907348633
    10. '')' → logprob: -19.500001907348633

Token 41: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.8828707804204896e-05
    2. ')' → logprob: -10.250048637390137
    3. '
' → logprob: -12.750048637390137
    4. '#' → logprob: -12.875048637390137
    5. ' print' → logprob: -13.000048637390137
    6. '+' → logprob: -13.750048637390137
    7. ')
' → logprob: -14.000048637390137
    8. 'if' → logprob: -14.625048637390137
    9. '```' → logprob: -14.625048637390137
    10. 'p' → logprob: -14.875048637390137

Token 42: '(('' (ID: 122195)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03820638731122017
    2. '(' → logprob: -3.2882063388824463
    3. 's' → logprob: -8.788206100463867
    4. ' (' → logprob: -12.663206100463867
    5. '((' → logprob: -12.663206100463867
    6. '()' → logprob: -12.913206100463867
    7. '(`' → logprob: -14.288206100463867
    8. '(sum' → logprob: -14.663206100463867
    9. '(ss' → logprob: -14.663206100463867
    10. '(f' → logprob: -14.913206100463867

Token 43: 'No' (ID: 3160)
  Prédit: 'Even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Even' → logprob: -1.4425239562988281
    2. 'even' → logprob: -1.4425239562988281
    3. 's' → logprob: -1.9425239562988281
    4. ''' → logprob: -2.567523956298828
    5. 'odd' → logprob: -2.942523956298828
    6. 'sum' → logprob: -3.067523956298828
    7. 'Odd' → logprob: -3.567523956298828
    8. 'n' → logprob: -3.567523956298828
    9. 'Fizz' → logprob: -4.067523956298828
    10. 'Yes' → logprob: -4.192523956298828

Token 44: '',' (ID: 787)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04347524419426918
    2. 'ne' → logprob: -4.168475151062012
    3. ' t' → logprob: -4.168475151062012
    4. ''' → logprob: -5.418475151062012
    5. 'n' → logprob: -7.168475151062012
    6. '')' → logprob: -7.168475151062012
    7. ',' → logprob: -7.293475151062012
    8. ' problem' → logprob: -7.543475151062012
    9. ')' → logprob: -7.668475151062012
    10. 'r' → logprob: -7.668475151062012

Token 45: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03427312150597572
    2. ' '' → logprob: -3.409273147583008
    3. ')' → logprob: -7.659273147583008
    4. '('' → logprob: -9.784273147583008
    5. '"' → logprob: -10.909273147583008
    6. ' ' → logprob: -11.034273147583008
    7. ''O' → logprob: -11.284273147583008
    8. '')' → logprob: -11.409273147583008
    9. ''s' → logprob: -12.534273147583008
    10. '

' → logprob: -12.659273147583008

Token 46: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1798315793275833
    2. 'Yes' → logprob: -1.804831624031067
    3. ' Yes' → logprob: -10.554831504821777
    4. ' '' → logprob: -10.804831504821777
    5. ''S' → logprob: -11.054831504821777
    6. '"' → logprob: -12.679831504821777
    7. ')' → logprob: -13.054831504821777
    8. 'yes' → logprob: -13.179831504821777
    9. 'No' → logprob: -13.179831504821777
    10. ''A' → logprob: -13.179831504821777

Token 47: '')[' (ID: 28534)
  Prédit: '')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')[' → logprob: -0.0027349782176315784
    2. ')[' → logprob: -6.377735137939453
    3. '')' → logprob: -7.127735137939453
    4. ''[' → logprob: -9.002735137939453
    5. ' ')[' → logprob: -10.627735137939453
    6. ''' → logprob: -10.877735137939453
    7. '[' → logprob: -11.377735137939453
    8. '')['' → logprob: -11.377735137939453
    9. ')' → logprob: -11.752735137939453
    10. 's' → logprob: -11.752735137939453

Token 48: 'div' (ID: 862)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28271496295928955
    2. ' s' → logprob: -1.4077149629592896
    3. '(s' → logprob: -6.65771484375
    4. '1' → logprob: -9.78271484375
    5. ' ' → logprob: -9.90771484375
    6. '(' → logprob: -9.90771484375
    7. ' (' → logprob: -10.15771484375
    8. '10' → logprob: -11.40771484375
    9. 'n' → logprob: -11.53271484375
    10. '9' → logprob: -11.65771484375

Token 49: 'mod' (ID: 4847)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.23217007517814636
    2. 's' → logprob: -1.9821701049804688
    3. '(s' → logprob: -2.8571701049804688
    4. 'is' → logprob: -4.607170104980469
    5. 'ide' → logprob: -7.232170104980469
    6. 'mod' → logprob: -7.857170104980469
    7. '(' → logprob: -8.107170104980469
    8. ' s' → logprob: -9.107170104980469
    9. 'ides' → logprob: -9.357170104980469
    10. '(n' → logprob: -9.857170104980469

Token 50: '(n' (ID: 2406)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012070851516909897
    2. '(' → logprob: -9.125121116638184
    3. '(n' → logprob: -12.250121116638184
    4. ' (' → logprob: -12.500121116638184
    5. 's' → logprob: -13.125121116638184
    6. ')(' → logprob: -14.125121116638184
    7. '((' → logprob: -16.125120162963867
    8. '(t' → logprob: -16.500120162963867
    9. ')' → logprob: -16.500120162963867
    10. '(x' → logprob: -18.000120162963867

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5178134441375732
    2. 's' → logprob: -1.6428134441375732
    3. '(s' → logprob: -2.1428134441375732
    4. ',s' → logprob: -2.6428134441375732
    5. '(' → logprob: -3.8928134441375732
    6. ' ,' → logprob: -6.642813682556152
    7. ' (' → logprob: -8.517813682556152
    8. ',(' → logprob: -9.517813682556152
    9. ' (,' → logprob: -10.142813682556152
    10. '(n' → logprob: -10.767813682556152

Token 52: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0022709856275469065
    2. ' s' → logprob: -6.1272711753845215
    3. '9' → logprob: -9.752270698547363
    4. '10' → logprob: -11.627270698547363
    5. ' ' → logprob: -12.377270698547363
    6. '6' → logprob: -12.502270698547363
    7. '7' → logprob: -12.627270698547363
    8. '1' → logprob: -12.877270698547363
    9. '3' → logprob: -13.127270698547363
    10. '2' → logprob: -14.002270698547363

Token 53: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0006438109558075666
    2. ')' → logprob: -7.625643730163574
    3. ' )[' → logprob: -9.250643730163574
    4. '[' → logprob: -10.375643730163574
    5. ')][' → logprob: -11.750643730163574
    6. '())[' → logprob: -12.375643730163574
    7. '')[' → logprob: -12.750643730163574
    8. ')==' → logprob: -13.000643730163574
    9. '][' → logprob: -13.250643730163574
    10. ').' → logprob: -13.625643730163574

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.149051427608356e-05
    2. '0' → logprob: -9.750081062316895
    3. '-' → logprob: -11.250081062316895
    4. '::-' → logprob: -12.812581062316895
    5. '
' → logprob: -13.375081062316895
    6. ' ' → logprob: -13.562581062316895
    7. '

' → logprob: -13.750081062316895
    8. '```' → logprob: -14.437581062316895
    9. '   ' → logprob: -15.000081062316895
    10. '	' → logprob: -15.187581062316895

Token 55: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.435549259185791
    2. ']==' → logprob: -1.185549259185791
    3. ']' → logprob: -3.185549259185791
    4. ' ==' → logprob: -5.435549259185791
    5. ')' → logprob: -7.060549259185791
    6. '=' → logprob: -7.810549259185791
    7. ')==' → logprob: -8.435548782348633
    8. '0' → logprob: -9.310548782348633
    9. ' ' → logprob: -9.435548782348633
    10. '']==' → logprob: -9.560548782348633

Token 56: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004927635192871094
    2. ']==' → logprob: -6.004927635192871
    3. ' ==' → logprob: -6.379927635192871
    4. ']' → logprob: -7.754927635192871
    5. '=' → logprob: -9.004927635192871
    6. ')' → logprob: -9.129927635192871
    7. '0' → logprob: -9.629927635192871
    8. ' ' → logprob: -11.504927635192871
    9. ')==' → logprob: -11.879927635192871
    10. '])' → logprob: -13.504927635192871

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.500804901123047
    4. '  ' → logprob: -16.000804901123047
    5. '```' → logprob: -17.000804901123047
    6. '۰' → logprob: -17.375804901123047
    7. ' ' → logprob: -17.375804901123047
    8. '<|end|>' → logprob: -17.500804901123047
    9. ')' → logprob: -18.000804901123047
    10. '00' → logprob: -18.063304901123047

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '  ' → logprob: -19.000036239624023
    4. '۰' → logprob: -19.250036239624023
    5. '   ' → logprob: -19.625036239624023
    6. '<|end|>' → logprob: -19.750036239624023
    7. ')' → logprob: -20.125036239624023
    8. '０' → logprob: -20.500036239624023
    9. 's' → logprob: -20.500036239624023
    10. 'zero' → logprob: -21.000036239624023

Token 59: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0036330888979136944
    2. ')' → logprob: -6.12863302230835
    3. ')]' → logprob: -6.87863302230835
    4. ')])' → logprob: -7.87863302230835
    5. ']' → logprob: -11.003633499145508
    6. '))' → logprob: -11.003633499145508
    7. ''])' → logprob: -13.253633499145508
    8. '])]' → logprob: -13.753633499145508
    9. ' ])' → logprob: -13.753633499145508
    10. ']))' → logprob: -14.878633499145508


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 35.09%
Précision adaptée (1ère position): 35.09%
Précision (top 10): 73.68%
================================================================================
