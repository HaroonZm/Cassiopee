================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
from functools import reduce
from operator import add, mul
from collections import Counter
from itertools import product, chain, groupby

n, k = map(int, input().split())

# Création ingénieuse du compteur périodique
x = Counter(map(lambda y: y % k, range(1, n + 1)))
x = dict(map(lambda t: (t, x.get(t, 0)), range(k)))

def triplets(k):
    # Générer les triplets (a, b, c) dans [0, k-1]^3 avec a + b + c ≡ 0 mod k
    return filter(lambda t: sum(t) % k == 0, product(range(k), repeat=3))

# 'ans' par la somme de tous les triplets valides pondérée par leur effectif
ans = sum(reduce(mul, map(x.get, t), 1) for t in triplets(k) if len(set(t)) == 1 or t[1] == (k - t[0]) % k and t[2] == (k - t[0]) % k)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.001180704333819449
    2. 'np' → logprob: -6.751180648803711
    3. ' ' → logprob: -12.001180648803711
    4. ' numpy' → logprob: -12.376180648803711
    5. ' ' → logprob: -15.751180648803711
    6. '```' → logprob: -17.75118064880371
    7. 'numpy' → logprob: -17.87618064880371
    8. '_np' → logprob: -18.12618064880371
    9. '(np' → logprob: -18.50118064880371
    10. ' n' → logprob: -18.75118064880371

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.605406641960144
    2. '\n' → logprob: -1.480406641960144
    3. 'newline' → logprob: -2.3554067611694336
    4. 'import' → logprob: -3.2304067611694336
    5. '\' → logprob: -3.2304067611694336
    6. '<|end|>' → logprob: -3.8554067611694336
    7. '```' → logprob: -4.480406761169434
    8. '
' → logprob: -5.480406761169434
    9. '[' → logprob: -5.855406761169434
    10. '<|end|>' → logprob: -6.480406761169434

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01564916968345642
    2. '\n' → logprob: -5.140649318695068
    3. '\' → logprob: -6.015649318695068
    4. '```' → logprob: -6.140649318695068
    5. '<|end|>' → logprob: -6.890649318695068
    6. 'import' → logprob: -6.890649318695068
    7. 'newline' → logprob: -7.390649318695068
    8. '
' → logprob: -7.640649318695068
    9. '#' → logprob: -8.01564884185791
    10. '[' → logprob: -8.26564884185791

Token 6: ' functools' (ID: 142636)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.060342974960803986
    2. ' pandas' → logprob: -3.310343027114868
    3. ' scipy' → logprob: -4.560342788696289
    4. ' tensorflow' → logprob: -5.185342788696289
    5. 'sk' → logprob: -5.310342788696289
    6. ' math' → logprob: -7.935342788696289
    7. ' matplotlib' → logprob: -8.685342788696289
    8. ' keras' → logprob: -8.685342788696289
    9. ' ' → logprob: -9.810342788696289
    10. ' random' → logprob: -10.185342788696289

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22647641599178314
    2. 'import' → logprob: -1.6014764308929443
    3. '.' → logprob: -7.851476192474365
    4. '_import' → logprob: -8.101476669311523
    5. ' ' → logprob: -8.351476669311523
    6. '_' → logprob: -9.976476669311523
    7. '	import' → logprob: -10.726476669311523
    8. ' .' → logprob: -11.101476669311523
    9. ' ' → logprob: -11.226476669311523
    10. ' _' → logprob: -11.476476669311523

Token 8: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.45428749918937683
    2. 'wrap' → logprob: -2.079287528991699
    3. ' wraps' → logprob: -2.329287528991699
    4. ' partial' → logprob: -2.579287528991699
    5. 'reduce' → logprob: -3.454287528991699
    6. 'l' → logprob: -3.954287528991699
    7. ' l' → logprob: -4.329287528991699
    8. ' reduce' → logprob: -6.204287528991699
    9. 'cached' → logprob: -7.954287528991699
    10. 'cache' → logprob: -8.3292875289917

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6103990077972412
    2. 'def' → logprob: -1.2353990077972412
    3. '\' → logprob: -2.360399007797241
    4. '\n' → logprob: -3.735399007797241
    5. 'import' → logprob: -4.11039924621582
    6. '(
' → logprob: -4.36039924621582
    7. '```' → logprob: -5.48539924621582
    8. ',' → logprob: -5.86039924621582
    9. '
' → logprob: -6.11039924621582
    10. '#' → logprob: -6.23539924621582

Token 10: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3944685161113739
    2. '(' → logprob: -2.1444685459136963
    3. '\' → logprob: -2.2694685459136963
    4. ',' → logprob: -3.6444685459136963
    5. '\n' → logprob: -4.269468307495117
    6. 'import' → logprob: -4.394468307495117
    7. '
' → logprob: -4.644468307495117
    8. '#' → logprob: -5.019468307495117
    9. '```' → logprob: -5.144468307495117
    10. ' 

' → logprob: -5.269468307495117

Token 11: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.6133071780204773
    2. ' math' → logprob: -1.613307237625122
    3. 'operator' → logprob: -1.613307237625122
    4. 'math' → logprob: -3.613307237625122
    5. ' itertools' → logprob: -3.613307237625122
    6. ' collections' → logprob: -5.613306999206543
    7. 'collections' → logprob: -6.738306999206543
    8. ' ' → logprob: -6.988306999206543
    9. ' os' → logprob: -9.363306999206543
    10. ' typing' → logprob: -9.488306999206543

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.206426739692688
    2. 'import' → logprob: -2.3314266204833984
    3. '.' → logprob: -3.0814266204833984
    4. ' .' → logprob: -3.2064266204833984
    5. ' ' → logprob: -5.956426620483398
    6. '.import' → logprob: -8.331426620483398
    7. '_import' → logprob: -10.456426620483398
    8. '<|end|>' → logprob: -10.581426620483398
    9. '	import' → logprob: -10.956426620483398
    10. ' as' → logprob: -11.456426620483398

Token 13: ' add' (ID: 1147)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.6776592135429382
    2. ' add' → logprob: -1.302659273147583
    3. ' ' → logprob: -2.677659273147583
    4. ' import' → logprob: -2.802659273147583
    5. '.mul' → logprob: -3.177659273147583
    6. 'mul' → logprob: -3.677659273147583
    7. ' .' → logprob: -5.177659034729004
    8. ' *' → logprob: -5.302659034729004
    9. 'add' → logprob: -5.677659034729004
    10. 'import' → logprob: -5.802659034729004

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6903026103973389
    2. '
' → logprob: -1.5653026103973389
    3. '(' → logprob: -2.190302610397339
    4. 'import' → logprob: -2.815302610397339
    5. '\n' → logprob: -3.690302610397339
    6. '\' → logprob: -3.940302610397339
    7. ',' → logprob: -4.065302848815918
    8. '(
' → logprob: -4.315302848815918
    9. 'def' → logprob: -4.440302848815918
    10. '(

' → logprob: -4.940302848815918

Token 15: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.12196201831102371
    2. 'mul' → logprob: -2.246962070465088
    3. ' sub' → logprob: -4.871962070465088
    4. 'sub' → logprob: -6.621962070465088
    5. '.mul' → logprob: -10.62196159362793
    6. '```' → logprob: -10.87196159362793
    7. '_mul' → logprob: -10.99696159362793
    8. ' item' → logprob: -11.87196159362793
    9. ' ' → logprob: -11.87196159362793
    10. 'getitem' → logprob: -12.24696159362793

Token 16: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.963782548904419
    2. '\n' → logprob: -1.713782548904419
    3. 'def' → logprob: -1.713782548904419
    4. '\' → logprob: -2.838782548904419
    5. '#' → logprob: -2.963782548904419
    6. '(
' → logprob: -3.713782548904419
    7. 'import' → logprob: -3.838782548904419
    8. '

' → logprob: -3.963782548904419
    9. '
' → logprob: -4.21378231048584
    10. ',' → logprob: -4.33878231048584

Token 17: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4799105226993561
    2. 'def' → logprob: -2.1049106121063232
    3. '(
' → logprob: -2.3549106121063232
    4. '\' → logprob: -2.9799106121063232
    5. '(

' → logprob: -3.1049106121063232
    6. '\n' → logprob: -3.9799106121063232
    7. '```' → logprob: -4.229910373687744
    8. ',' → logprob: -5.354910373687744
    9. '

' → logprob: -5.479910373687744
    10. '#' → logprob: -5.604910373687744

Token 18: ' collections' (ID: 22690)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.20348890125751495
    2. ' math' → logprob: -1.9534889459609985
    3. 'math' → logprob: -3.203488826751709
    4. ' collections' → logprob: -7.703488826751709
    5. ' functools' → logprob: -7.953488826751709
    6. ' ' → logprob: -8.328489303588867
    7. ' typing' → logprob: -8.953489303588867
    8. 'collections' → logprob: -8.953489303588867
    9. 'it' → logprob: -9.328489303588867
    10. ' random' → logprob: -9.703489303588867

Token 19: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16056174039840698
    2. ' import' → logprob: -1.9105618000030518
    3. '	import' → logprob: -9.410561561584473
    4. '.' → logprob: -9.660561561584473
    5. '_import' → logprob: -10.035561561584473
    6. '<|end|>' → logprob: -10.285561561584473
    7. '_' → logprob: -10.785561561584473
    8. '```' → logprob: -10.910561561584473
    9. ' defaultdict' → logprob: -11.160561561584473
    10. 'abc' → logprob: -11.410561561584473

Token 20: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.31498533487319946
    2. 'deque' → logprob: -2.0649852752685547
    3. ' deque' → logprob: -2.6899852752685547
    4. ' Counter' → logprob: -3.9399852752685547
    5. ' abc' → logprob: -4.189985275268555
    6. 'abc' → logprob: -4.189985275268555
    7. 'default' → logprob: -4.439985275268555
    8. 'Counter' → logprob: -5.189985275268555
    9. 'named' → logprob: -5.564985275268555
    10. ' named' → logprob: -5.564985275268555

Token 21: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9186038970947266
    2. '
' → logprob: -1.4186038970947266
    3. '(' → logprob: -2.6686038970947266
    4. '\n' → logprob: -2.7936038970947266
    5. '

' → logprob: -2.9186038970947266
    6. '#' → logprob: -3.0436038970947266
    7. '\' → logprob: -3.2936038970947266
    8. 'n' → logprob: -4.293603897094727
    9. 'd' → logprob: -4.293603897094727
    10. '(
' → logprob: -4.418603897094727

Token 22: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.025776982307434
    2. '
' → logprob: -1.275776982307434
    3. '

' → logprob: -2.0257768630981445
    4. '#' → logprob: -2.6507768630981445
    5. 'd' → logprob: -3.6507768630981445
    6. '\n' → logprob: -3.7757768630981445
    7. '\' → logprob: -3.9007768630981445
    8. '(' → logprob: -4.0257768630981445
    9. 'n' → logprob: -4.4007768630981445
    10. ',' → logprob: -4.5257768630981445

Token 23: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.05632496625185013
    2. ' math' → logprob: -2.9313249588012695
    3. ' typing' → logprob: -7.3063249588012695
    4. 'math' → logprob: -7.5563249588012695
    5. ' functools' → logprob: -8.80632495880127
    6. 'it' → logprob: -10.80632495880127
    7. ' heap' → logprob: -10.80632495880127
    8. ' sklearn' → logprob: -11.18132495880127
    9. ' ' → logprob: -11.68132495880127
    10. ' collections' → logprob: -11.80632495880127

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.39429527521133423
    2. '.' → logprob: -1.8942952156066895
    3. 'import' → logprob: -1.8942952156066895
    4. ' .' → logprob: -3.7692952156066895
    5. '.import' → logprob: -6.7692952156066895
    6. '.im' → logprob: -8.394295692443848
    7. '.groupby' → logprob: -8.769295692443848
    8. '	import' → logprob: -9.144295692443848
    9. '_import' → logprob: -10.144295692443848
    10. 'ertools' → logprob: -10.269295692443848

Token 25: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.2562934458255768
    2. ' permutations' → logprob: -2.381293535232544
    3. ' combinations' → logprob: -3.256293535232544
    4. 'com' → logprob: -3.256293535232544
    5. 'product' → logprob: -3.881293535232544
    6. ' chain' → logprob: -4.131293296813965
    7. ' ' → logprob: -5.131293296813965
    8. 'per' → logprob: -5.131293296813965
    9. ' group' → logprob: -5.256293296813965
    10. ' accumulate' → logprob: -6.881293296813965

Token 26: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0309356451034546
    2. 'def' → logprob: -1.6559356451034546
    3. '

' → logprob: -1.7809356451034546
    4. '#' → logprob: -2.030935764312744
    5. ',' → logprob: -3.530935764312744
    6. 'n' → logprob: -3.905935764312744
    7. '[' → logprob: -4.155935764312744
    8. '(' → logprob: -4.280935764312744
    9. '\n' → logprob: -4.280935764312744
    10. 'd' → logprob: -4.780935764312744

Token 27: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3389623463153839
    2. 'per' → logprob: -1.8389623165130615
    3. ' permutations' → logprob: -2.9639623165130615
    4. 'chain' → logprob: -3.4639623165130615
    5. 'st' → logprob: -4.588962554931641
    6. ' chain' → logprob: -4.963962554931641
    7. ' combinations' → logprob: -5.338962554931641
    8. 'repeat' → logprob: -5.338962554931641
    9. 'acc' → logprob: -5.338962554931641
    10. 'cycle' → logprob: -5.838962554931641

Token 28: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.531144380569458
    2. '
' → logprob: -1.156144380569458
    3. 'def' → logprob: -2.781144380569458
    4. '\n' → logprob: -4.781144142150879
    5. '```' → logprob: -4.906144142150879
    6. '#' → logprob: -5.406144142150879
    7. 'import' → logprob: -6.031144142150879
    8. '


' → logprob: -6.281144142150879
    9. ',' → logprob: -6.656144142150879
    10. 'd' → logprob: -6.781144142150879

Token 29: ' group' (ID: 3566)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.13892588019371033
    2. ' permutations' → logprob: -3.263925790786743
    3. 'repeat' → logprob: -3.888925790786743
    4. ' combinations' → logprob: -4.138926029205322
    5. 'st' → logprob: -4.388926029205322
    6. ' is' → logprob: -5.013926029205322
    7. 'per' → logprob: -5.263926029205322
    8. ' repeat' → logprob: -5.388926029205322
    9. 'acc' → logprob: -5.763926029205322
    10. 'zip' → logprob: -5.888926029205322

Token 30: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.2664456789934775e-06
    2. 'b' → logprob: -14.500000953674316
    3. 'y' → logprob: -14.625000953674316
    4. 'by's' → logprob: -16.625001907348633
    5. 'ing' → logprob: -17.250001907348633
    6. 's' → logprob: -17.250001907348633
    7. 'py' → logprob: -17.500001907348633
    8. '

' → logprob: -17.625001907348633
    9. 'ed' → logprob: -18.500001907348633
    10. ' by' → logprob: -18.875001907348633

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5305923819541931
    2. '#' → logprob: -1.905592441558838
    3. 'def' → logprob: -2.155592441558838
    4. '

' → logprob: -2.655592441558838
    5. '\n' → logprob: -4.405592441558838
    6. ',' → logprob: -4.530592441558838
    7. 'import' → logprob: -4.905592441558838
    8. 'd' → logprob: -5.030592441558838
    9. '' → logprob: -5.155592441558838
    10. 'n' → logprob: -5.155592441558838

Token 32: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5047194361686707
    2. 'def' → logprob: -1.3797194957733154
    3. '#' → logprob: -2.1297194957733154
    4. 'n' → logprob: -5.129719257354736
    5. 'a' → logprob: -5.504719257354736
    6. 'de' → logprob: -6.254719257354736
    7. '
' → logprob: -6.379719257354736
    8. '\' → logprob: -6.504719257354736
    9. 'D' → logprob: -6.879719257354736
    10. '```' → logprob: -6.879719257354736

Token 33: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2663170099258423
    2. ' =' → logprob: -2.0163168907165527
    3. ' ' → logprob: -2.7663168907165527
    4. 'u' → logprob: -4.016316890716553
    5. '=' → logprob: -4.391316890716553
    6. '_' → logprob: -5.516316890716553
    7. ',' → logprob: -7.016316890716553
    8. 'um' → logprob: -7.766316890716553
    9. 'umpy' → logprob: -8.141317367553711
    10. 't' → logprob: -8.266317367553711

Token 34: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.19218429923057556
    2. ' ' → logprob: -2.3171842098236084
    3. 'k' → logprob: -3.1921842098236084
    4. ' m' → logprob: -3.9421842098236084
    5. 'm' → logprob: -4.3171844482421875
    6. 'a' → logprob: -8.192184448242188
    7. 'x' → logprob: -8.442184448242188
    8. 's' → logprob: -8.567184448242188
    9. ' p' → logprob: -8.567184448242188
    10. ' =' → logprob: -8.692184448242188

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012727659195661545
    2. '=' → logprob: -4.387727737426758
    3. ',' → logprob: -9.137727737426758
    4. ' ' → logprob: -9.262727737426758
    5. ' ,' → logprob: -11.887727737426758
    6. ' =
' → logprob: -12.512727737426758
    7. '<|end|>' → logprob: -13.637727737426758
    8. ')' → logprob: -14.012727737426758
    9. 'space' → logprob: -14.512727737426758
    10. '.' → logprob: -14.512727737426758

Token 36: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47770747542381287
    2. ' map' → logprob: -1.1027075052261353
    3. 'map' → logprob: -3.3527073860168457
    4. '0' → logprob: -5.102707386016846
    5. ' int' → logprob: -6.602707386016846
    6. ' input' → logprob: -6.602707386016846
    7. '10' → logprob: -6.852707386016846
    8. '5' → logprob: -7.102707386016846
    9. '1' → logprob: -7.227707386016846
    10. 'input' → logprob: -7.602707386016846

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5299268960952759
    2. '(' → logprob: -0.9049268960952759
    3. '(str' → logprob: -5.779926776885986
    4. '(lambda' → logprob: -6.029926776885986
    5. 'int' → logprob: -7.029926776885986
    6. '(input' → logprob: -8.904927253723145
    7. '<|end|>' → logprob: -10.029927253723145
    8. '<int' → logprob: -10.154927253723145
    9. '[int' → logprob: -10.529927253723145
    10. 'str' → logprob: -10.654927253723145

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13670308887958527
    2. '(' → logprob: -2.3867030143737793
    3. ')' → logprob: -3.6367030143737793
    4. 'input' → logprob: -4.761703014373779
    5. ' input' → logprob: -8.261703491210938
    6. ',input' → logprob: -8.261703491210938
    7. ',' → logprob: -8.761703491210938
    8. '=input' → logprob: -9.386703491210938
    9. '(n' → logprob: -10.636703491210938
    10. '(
' → logprob: -11.011703491210938

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3870208263397217
    2. ' input' → logprob: -1.1370208263397217
    3. ')' → logprob: -8.8870210647583
    4. '(input' → logprob: -12.1370210647583
    5. ' )' → logprob: -12.2620210647583
    6. ' ' → logprob: -14.8870210647583
    7. '=input' → logprob: -14.8870210647583
    8. ',input' → logprob: -15.0120210647583
    9. '	input' → logprob: -15.8870210647583
    10. 'open' → logprob: -16.512020111083984

Token 40: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30616331100463867
    2. '()' → logprob: -2.0561633110046387
    3. '().' → logprob: -2.0561633110046387
    4. ')' → logprob: -5.181163311004639
    5. '(' → logprob: -6.931163311004639
    6. '());' → logprob: -7.556163311004639
    7. '();)' → logprob: -9.056163787841797
    8. '()>' → logprob: -9.181163787841797
    9. '()))' → logprob: -9.306163787841797
    10. '(()' → logprob: -9.681163787841797

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011803467059507966
    2. 'strip' → logprob: -6.751180171966553
    3. ')' → logprob: -11.876180648803711
    4. 'rstrip' → logprob: -13.626180648803711
    5. ' split' → logprob: -13.751180648803711
    6. '(split' → logprob: -14.376180648803711
    7. 'spl' → logprob: -15.876180648803711
    8. 'read' → logprob: -16.00118064880371
    9. 's' → logprob: -17.37618064880371
    10. ' ' → logprob: -17.37618064880371

Token 42: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002403199672699
    2. '))' → logprob: -2.3502402305603027
    3. '())' → logprob: -11.350240707397461
    4. '),' → logprob: -11.475240707397461
    5. '()' → logprob: -11.975240707397461
    6. ')
' → logprob: -13.725240707397461
    7. ')))' → logprob: -13.850240707397461
    8. '()))' → logprob: -14.600240707397461
    9. '(' → logprob: -14.725240707397461
    10. ').' → logprob: -14.725240707397461

Token 43: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17809811234474182
    2. 's' → logprob: -3.303098201751709
    3. 'arr' → logprob: -3.553098201751709
    4. ')' → logprob: -4.053098201751709
    5. '\n' → logprob: -4.678098201751709
    6. '
' → logprob: -4.803098201751709
    7. 'numbers' → logprob: -4.928098201751709
    8. 'data' → logprob: -4.928098201751709
    9. 'n' → logprob: -5.303098201751709
    10. 'nums' → logprob: -5.303098201751709

Token 44: ' Cré' (ID: 109203)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7274618148803711
    2. ' arr' → logprob: -2.227461814880371
    3. 'data' → logprob: -2.352461814880371
    4. ' data' → logprob: -2.852461814880371
    5. 'dp' → logprob: -3.352461814880371
    6. 'a' → logprob: -3.477461814880371
    7. 'def' → logprob: -3.477461814880371
    8. 'nums' → logprob: -3.977461814880371
    9. 'A' → logprob: -4.102461814880371
    10. ' nums' → logprob: -4.227461814880371

Token 45: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2430727630853653
    2. 'ation' → logprob: -1.618072748184204
    3. 'ate' → logprob: -4.868072986602783
    4. 'a' → logprob: -5.618072986602783
    5. 'd' → logprob: -5.993072986602783
    6. '```' → logprob: -6.743072986602783
    7. 'at' → logprob: -6.868072986602783
    8. 'e' → logprob: -7.743072986602783
    9. 'ati' → logprob: -8.618072509765625
    10. 'é' → logprob: -8.618072509765625

Token 46: ' ingén' (ID: 146009)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9787116050720215
    2. '(' → logprob: -1.1037116050720215
    3. 's' → logprob: -2.7287116050720215
    4. '_' → logprob: -2.8537116050720215
    5. ' ' → logprob: -2.9787116050720215
    6. 'd' → logprob: -3.7287116050720215
    7. '<|end|>' → logprob: -3.8537116050720215
    8. ' of' → logprob: -4.7287116050720215
    9. ' d' → logprob: -4.8537116050720215
    10. '()' → logprob: -4.9787116050720215

Token 47: 'ieuse' (ID: 70987)
  Prédit: 'ieuse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieuse' → logprob: -0.24164478480815887
    2. 'nie' → logprob: -1.8666447401046753
    3. 'ieur' → logprob: -3.616644859313965
    4. 'ie' → logprob: -4.616644859313965
    5. 'e' → logprob: -4.741644859313965
    6. 'ieux' → logprob: -5.116644859313965
    7. 'érie' → logprob: -5.741644859313965
    8. 'ier' → logprob: -6.241644859313965
    9. 'er' → logprob: -6.991644859313965
    10. 'é' → logprob: -6.991644859313965

Token 48: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4158210754394531
    2. 's' → logprob: -1.5408210754394531
    3. ' ' → logprob: -2.165821075439453
    4. 'def' → logprob: -2.290821075439453
    5. 'dp' → logprob: -2.790821075439453
    6. ' (' → logprob: -3.540821075439453
    7. '(n' → logprob: -4.165821075439453
    8. '_' → logprob: -4.290821075439453
    9. 'a' → logprob: -4.415821075439453
    10. ')' → logprob: -4.415821075439453

Token 49: ' compteur' (ID: 163344)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.9132075309753418
    2. 'table' → logprob: -1.6632075309753418
    3. 'list' → logprob: -3.413207530975342
    4. 's' → logprob: -3.413207530975342
    5. '```' → logprob: -3.538207530975342
    6. 'counter' → logprob: -4.038207530975342
    7. ' compteur' → logprob: -4.038207530975342
    8. 'mult' → logprob: -4.038207530975342
    9. 'Counter' → logprob: -4.288207530975342
    10. ' table' → logprob: -4.288207530975342

Token 50: ' péri' (ID: 39844)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26950758695602417
    2. ':' → logprob: -2.019507646560669
    3. ' :' → logprob: -3.519507646560669
    4. 's' → logprob: -4.01950740814209
    5. ' ' → logprob: -4.26950740814209
    6. ')' → logprob: -4.89450740814209
    7. 'counter' → logprob: -5.14450740814209
    8. ' =' → logprob: -5.26950740814209
    9. '=' → logprob: -5.64450740814209
    10. ',' → logprob: -5.64450740814209

Token 51: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.0030187068041414022
    2. 'ode' → logprob: -7.503018856048584
    3. 'ód' → logprob: -7.753018856048584
    4. '#' → logprob: -7.878018856048584
    5. 'o' → logprob: -8.003018379211426
    6. 'odi' → logprob: -8.878018379211426
    7. '[' → logprob: -9.003018379211426
    8. 'orique' → logprob: -9.128018379211426
    9. '{' → logprob: -9.378018379211426
    10. 'òd' → logprob: -9.503018379211426

Token 52: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.02016039378941059
    2. 'er' → logprob: -5.27016019821167
    3. 'ic' → logprob: -5.64516019821167
    4. 'e' → logprob: -6.39516019821167
    5. 'i' → logprob: -6.39516019821167
    6. '```' → logprob: -6.52016019821167
    7. 'que' → logprob: -6.64516019821167
    8. 'iques' → logprob: -6.89516019821167
    9. 'eur' → logprob: -7.02016019821167
    10. 'iqu' → logprob: -7.27016019821167

Token 53: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10880321264266968
    2. ':' → logprob: -3.4838032722473145
    3. ' ' → logprob: -3.9838032722473145
    4. '_' → logprob: -4.2338032722473145
    5. 's' → logprob: -4.6088032722473145
    6. ',' → logprob: -5.1088032722473145
    7. '(
' → logprob: -5.6088032722473145
    8. ' :' → logprob: -5.9838032722473145
    9. 'counter' → logprob: -6.2338032722473145
    10. ' (' → logprob: -6.6088032722473145

Token 54: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7413994669914246
    2. ' counter' → logprob: -2.6163995265960693
    3. ' :' → logprob: -2.6163995265960693
    4. ':' → logprob: -2.8663995265960693
    5. '_' → logprob: -2.9913995265960693
    6. 'counter' → logprob: -3.1163995265960693
    7. 'c' → logprob: -3.1163995265960693
    8. 'period' → logprob: -3.2413995265960693
    9. ' c' → logprob: -3.4913995265960693
    10. ' period' → logprob: -4.49139928817749

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04364780709147453
    2. '=' → logprob: -4.168647766113281
    3. '_' → logprob: -4.543647766113281
    4. '_counter' → logprob: -4.918647766113281
    5. 's' → logprob: -5.168647766113281
    6. ' ' → logprob: -6.793647766113281
    7. '_counts' → logprob: -7.168647766113281
    8. 'ounter' → logprob: -7.918647766113281
    9. ',' → logprob: -8.168647766113281
    10. '_c' → logprob: -8.418647766113281

Token 56: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.1253700256347656
    2. ' Counter' → logprob: -1.6253700256347656
    3. 'np' → logprob: -2.0003700256347656
    4. '[' → logprob: -2.1253700256347656
    5. ' np' → logprob: -2.7503700256347656
    6. ' [' → logprob: -3.0003700256347656
    7. ' (' → logprob: -3.8753700256347656
    8. '[(' → logprob: -4.250370025634766
    9. '(np' → logprob: -4.500370025634766
    10. '(' → logprob: -4.625370025634766

Token 57: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.958419144153595
    2. '(' → logprob: -1.5834190845489502
    3. '([' → logprob: -1.9584190845489502
    4. '((' → logprob: -1.9584190845489502
    5. '([(' → logprob: -3.33341908454895
    6. '(product' → logprob: -3.70841908454895
    7. '(list' → logprob: -3.95841908454895
    8. '({' → logprob: -4.083419322967529
    9. '(chain' → logprob: -4.333419322967529
    10. '()' → logprob: -5.208419322967529

Token 58: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08012696355581284
    2. '(lambda' → logprob: -2.955127000808716
    3. '(' → logprob: -4.205126762390137
    4. '(str' → logprob: -4.705126762390137
    5. '(tuple' → logprob: -8.330126762390137
    6. ')' → logprob: -8.455126762390137
    7. '(
' → logprob: -9.080126762390137
    8. '(abs' → logprob: -9.455126762390137
    9. '(eval' → logprob: -9.580126762390137
    10. '(ord' → logprob: -9.580126762390137

Token 59: ' y' (ID: 342)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7055182456970215
    2. 'lambda' → logprob: -1.7055182456970215
    3. ' i' → logprob: -1.8305182456970215
    4. '(lambda' → logprob: -3.0805182456970215
    5. ' x' → logprob: -3.8305182456970215
    6. '_:' → logprob: -4.2055182456970215
    7. ' _:' → logprob: -4.3305182456970215
    8. 'i' → logprob: -4.4555182456970215
    9. ':' → logprob: -4.7055182456970215
    10. 'x' → logprob: -4.8305182456970215

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015430611558258533
    2. ' :' → logprob: -4.390430450439453
    3. ':y' → logprob: -6.390430450439453
    4. ' y' → logprob: -7.640430450439453
    5. ':x' → logprob: -8.640430450439453
    6. ',' → logprob: -8.890430450439453
    7. ':int' → logprob: -9.015430450439453
    8. ':
' → logprob: -9.390430450439453
    9. 'y' → logprob: -9.765430450439453
    10. ':n' → logprob: -10.390430450439453

Token 61: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2583700120449066
    2. 'y' → logprob: -2.1333699226379395
    3. ' (' → logprob: -2.6333699226379395
    4. '(y' → logprob: -3.8833699226379395
    5. '(' → logprob: -6.0083699226379395
    6. ' lambda' → logprob: -6.2583699226379395
    7. 'pow' → logprob: -6.3833699226379395
    8. '(lambda' → logprob: -6.5083699226379395
    9. '(int' → logprob: -6.6333699226379395
    10. ' tuple' → logprob: -6.8833699226379395

Token 62: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4886690080165863
    2. '%' → logprob: -1.2386690378189087
    3. ':' → logprob: -2.488668918609619
    4. '%n' → logprob: -5.238668918609619
    5. ' y' → logprob: -6.113668918609619
    6. 'y' → logprob: -6.363668918609619
    7. ' :' → logprob: -6.738668918609619
    8. '%d' → logprob: -7.113668918609619
    9. '%x' → logprob: -7.738668918609619
    10. ':y' → logprob: -8.113669395446777

Token 63: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004465131554752588
    2. ' k' → logprob: -6.129465103149414
    3. 'n' → logprob: -6.129465103149414
    4. ' n' → logprob: -10.254465103149414
    5. '(k' → logprob: -11.254465103149414
    6. ' ' → logprob: -11.379465103149414
    7. '(' → logprob: -11.629465103149414
    8. 'm' → logprob: -11.879465103149414
    9. '(n' → logprob: -12.254465103149414
    10. '2' → logprob: -13.004465103149414

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025452205445617437
    2. ',n' → logprob: -6.502545356750488
    3. ',x' → logprob: -7.502545356750488
    4. ' ,' → logprob: -9.002545356750488
    5. ',y' → logprob: -9.377545356750488
    6. 'x' → logprob: -9.377545356750488
    7. ')' → logprob: -10.377545356750488
    8. ',
' → logprob: -10.502545356750488
    9. '),' → logprob: -10.752545356750488
    10. 'n' → logprob: -10.877545356750488

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007109609432518482
    2. ' range' → logprob: -5.382109642028809
    3. '[' → logprob: -6.757109642028809
    4. '(range' → logprob: -7.132109642028809
    5. 'map' → logprob: -8.507109642028809
    6. 'chain' → logprob: -8.757109642028809
    7. 'np' → logprob: -9.882109642028809
    8. ' [' → logprob: -10.882109642028809
    9. 'x' → logprob: -11.632109642028809
    10. '	range' → logprob: -11.757109642028809

Token 66: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02068331092596054
    2. '(' → logprob: -3.8956832885742188
    3. '(x' → logprob: -9.020683288574219
    4. '(k' → logprob: -11.645683288574219
    5. '(
' → logprob: -12.645683288574219
    6. 'n' → logprob: -12.895683288574219
    7. ' (' → logprob: -14.020683288574219
    8. ')' → logprob: -14.145683288574219
    9. ')n' → logprob: -14.145683288574219
    10. '((' → logprob: -14.270683288574219

Token 67: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015423099510371685
    2. '(n' → logprob: -4.26542329788208
    3. ' n' → logprob: -7.89042329788208
    4. '(' → logprob: -8.265422821044922
    5. '1' → logprob: -8.515422821044922
    6. ')n' → logprob: -8.515422821044922
    7. '	n' → logprob: -9.640422821044922
    8. '0' → logprob: -9.640422821044922
    9. 'x' → logprob: -11.015422821044922
    10. ')' → logprob: -11.015422821044922

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010125647531822324
    2. ',n' → logprob: -7.126012802124023
    3. ' ,' → logprob: -8.501012802124023
    4. 'n' → logprob: -13.126012802124023
    5. '1' → logprob: -13.501012802124023
    6. ' ' → logprob: -14.251012802124023
    7. ',k' → logprob: -15.251012802124023
    8. '```' → logprob: -16.001012802124023
    9. ',
' → logprob: -16.376012802124023
    10. '‌,' → logprob: -16.876012802124023

Token 69: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4287252128124237
    2. ' n' → logprob: -1.053725242614746
    3. ' ' → logprob: -11.303725242614746
    4. '	n' → logprob: -12.178725242614746
    5. ')n' → logprob: -13.678725242614746
    6. '1' → logprob: -13.928725242614746
    7. '(n' → logprob: -14.053725242614746
    8. 'k' → logprob: -14.303725242614746
    9. 'x' → logprob: -14.928725242614746
    10. '    ' → logprob: -15.303725242614746

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11288907378911972
    2. ' +' → logprob: -2.237889051437378
    3. ' ' → logprob: -9.987889289855957
    4. '+
' → logprob: -12.362889289855957
    5. ' +
' → logprob: -12.362889289855957
    6. '1' → logprob: -12.612889289855957
    7. '2' → logprob: -13.987889289855957
    8. '+k' → logprob: -14.112889289855957
    9. '```' → logprob: -14.237889289855957
    10. ' plus' → logprob: -14.487889289855957

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '  ' → logprob: -16.438127517700195
    4. '   ' → logprob: -16.875627517700195
    5. ')' → logprob: -16.938127517700195
    6. '2' → logprob: -17.188127517700195
    7. '```' → logprob: -17.438127517700195
    8. ' ' → logprob: -17.625627517700195
    9. '' → logprob: -17.938127517700195
    10. '۱' → logprob: -18.500627517700195

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -14.812541007995605
    4. '2' → logprob: -15.750041007995605
    5. 'k' → logprob: -16.062541961669922
    6. '```' → logprob: -16.312541961669922
    7. 'n' → logprob: -16.750041961669922
    8. ' k' → logprob: -17.125041961669922
    9. '11' → logprob: -17.187541961669922
    10. '100' → logprob: -17.375041961669922

Token 73: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.028105074539780617
    2. ')' → logprob: -3.9031050205230713
    3. '))' → logprob: -4.90310525894165
    4. '))))' → logprob: -10.153104782104492
    5. '),' → logprob: -10.778104782104492
    6. ')));' → logprob: -10.778104782104492
    7. ' ' → logprob: -11.153104782104492
    8. ')))
' → logprob: -12.528104782104492
    9. ')),' → logprob: -12.903104782104492
    10. ',' → logprob: -13.403104782104492

Token 74: 'x' (ID: 87)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.892787516117096
    2. ')' → logprob: -1.1427874565124512
    3. 'x' → logprob: -2.517787456512451
    4. ' ' → logprob: -2.767787456512451
    5. '#' → logprob: -3.267787456512451
    6. '*' → logprob: -4.142787456512451
    7. '' → logprob: -4.392787456512451
    8. '+' → logprob: -4.642787456512451
    9. ',' → logprob: -4.642787456512451
    10. 'n' → logprob: -4.767787456512451

Token 75: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' dict' (ID: 11878)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.35080575942993164
    2. 'Counter' → logprob: -1.3508057594299316
    3. ' dict' → logprob: -4.725805759429932
    4. '{' → logprob: -4.975805759429932
    5. 'sum' → logprob: -5.475805759429932
    6. ' {' → logprob: -5.600805759429932
    7. 'dict' → logprob: -5.725805759429932
    8. 'x' → logprob: -6.100805759429932
    9. ' defaultdict' → logprob: -6.475805759429932
    10. ' sum' → logprob: -6.600805759429932

Token 77: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5782432556152344
    2. '(x' → logprob: -1.5782432556152344
    3. '((' → logprob: -2.2032432556152344
    4. '(C' → logprob: -2.3282432556152344
    5. '(sorted' → logprob: -4.828243255615234
    6. '(chain' → logprob: -5.078243255615234
    7. '({' → logprob: -5.453243255615234
    8. '(map' → logprob: -6.828243255615234
    9. '(sum' → logprob: -6.953243255615234
    10. '(
' → logprob: -6.953243255615234

Token 78: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.22611477971076965
    2. '(' → logprob: -1.6011147499084473
    3. '(
' → logprob: -7.601114749908447
    4. '((' → logprob: -9.476115226745605
    5. ' (' → logprob: -9.726115226745605
    6. '(l' → logprob: -10.726115226745605
    7. ')' → logprob: -10.851115226745605
    8. '(x' → logprob: -12.476115226745605
    9. '(...' → logprob: -12.601115226745605
    10. 'lambda' → logprob: -13.351115226745605

Token 79: ' t' (ID: 260)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.005965057294815779
    2. '(lambda' → logprob: -5.755965232849121
    3. 'lambda' → logprob: -6.005965232849121
    4. ' ' → logprob: -8.755965232849121
    5. ' lamb' → logprob: -10.380965232849121
    6. '<|end|>' → logprob: -10.630965232849121
    7. ' (' → logprob: -10.630965232849121
    8. ' l' → logprob: -11.255965232849121
    9. '=lambda' → logprob: -11.255965232849121
    10. ' x' → logprob: -11.505965232849121

Token 80: ':' (ID: 25)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.14060074090957642
    2. '(lambda' → logprob: -2.5156006813049316
    3. 'lambda' → logprob: -3.2656006813049316
    4. ':' → logprob: -5.015600681304932
    5. ',' → logprob: -6.140600681304932
    6. ' (' → logprob: -6.765600681304932
    7. '=lambda' → logprob: -6.765600681304932
    8. ' :' → logprob: -8.14060115814209
    9. '(' → logprob: -8.26560115814209
    10. 's' → logprob: -9.26560115814209

Token 81: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7725323438644409
    2. '(lambda' → logprob: -1.022532343864441
    3. '(t' → logprob: -1.772532343864441
    4. '(' → logprob: -5.5225324630737305
    5. ' lambda' → logprob: -6.6475324630737305
    6. 'lambda' → logprob: -6.7725324630737305
    7. '(y' → logprob: -7.1475324630737305
    8. '(k' → logprob: -7.3975324630737305
    9. '(x' → logprob: -9.02253246307373
    10. '(int' → logprob: -9.27253246307373

Token 82: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014244955033063889
    2. ' t' → logprob: -4.26424503326416
    3. '(t' → logprob: -10.51424503326416
    4. ' (' → logprob: -11.13924503326416
    5. 'x' → logprob: -11.51424503326416
    6. ' ' → logprob: -12.01424503326416
    7. '   ' → logprob: -12.26424503326416
    8. ')t' → logprob: -12.88924503326416
    9. '(' → logprob: -13.07674503326416
    10. '	t' → logprob: -13.13924503326416

Token 83: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011951096821576357
    2. ',' → logprob: -6.751194953918457
    3. ' ,' → logprob: -12.376194953918457
    4. '
' → logprob: -12.751194953918457
    5. ' [' → logprob: -12.751194953918457
    6. ',[' → logprob: -12.751194953918457
    7. ')' → logprob: -13.001194953918457
    8. ' ' → logprob: -13.251194953918457
    9. ',
' → logprob: -13.688694953918457
    10. '),' → logprob: -13.938694953918457

Token 84: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9223050475120544
    2. ' t' → logprob: -1.1723051071166992
    3. 'x' → logprob: -1.5473051071166992
    4. 't' → logprob: -3.297305107116699
    5. ' n' → logprob: -3.797305107116699
    6. 'n' → logprob: -5.047305107116699
    7. ' k' → logprob: -5.797305107116699
    8. ' ' → logprob: -5.922305107116699
    9. ' (' → logprob: -6.422305107116699
    10. 'k' → logprob: -6.672305107116699

Token 85: '.get' (ID: 775)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.16870728135108948
    2. '(t' → logprob: -2.0437073707580566
    3. '.get' → logprob: -3.6687073707580566
    4. '[' → logprob: -9.043706893920898
    5. 't' → logprob: -11.168706893920898
    6. ')t' → logprob: -11.293706893920898
    7. ')' → logprob: -11.668706893920898
    8. 'get' → logprob: -11.918706893920898
    9. '.setdefault' → logprob: -12.043706893920898
    10. '(' → logprob: -12.043706893920898

Token 86: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.000866083602886647
    2. '(' → logprob: -7.625865936279297
    3. 't' → logprob: -8.125865936279297
    4. ' t' → logprob: -10.000865936279297
    5. '(k' → logprob: -11.625865936279297
    6. ' (' → logprob: -11.625865936279297
    7. '((' → logprob: -12.125865936279297
    8. ')t' → logprob: -12.750865936279297
    9. ')' → logprob: -13.000865936279297
    10. '(x' → logprob: -13.500865936279297

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8286811709403992
    2. '(t' → logprob: -1.203681230545044
    3. 't' → logprob: -1.953681230545044
    4. '0' → logprob: -2.578681230545044
    5. '(' → logprob: -3.578681230545044
    6. ',t' → logprob: -5.078680992126465
    7. ')' → logprob: -5.453680992126465
    8. ' t' → logprob: -5.953680992126465
    9. '1' → logprob: -6.703680992126465
    10. ')t' → logprob: -7.203680992126465

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01431193295866251
    2. ' ' → logprob: -4.264311790466309
    3. ')' → logprob: -10.139311790466309
    4. 't' → logprob: -10.514311790466309
    5. ' t' → logprob: -10.639311790466309
    6. '1' → logprob: -10.639311790466309
    7. 'k' → logprob: -11.701811790466309
    8. 'n' → logprob: -13.014311790466309
    9. '   ' → logprob: -13.014311790466309
    10. '  ' → logprob: -13.389311790466309

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -9.500081062316895
    3. 'k' → logprob: -12.750081062316895
    4. 't' → logprob: -13.250081062316895
    5. '1' → logprob: -14.500081062316895
    6. ')' → logprob: -15.750081062316895
    7. ' t' → logprob: -15.750081062316895
    8. '  ' → logprob: -16.25008201599121
    9. 'n' → logprob: -16.68758201599121
    10. 'x' → logprob: -16.75008201599121

Token 90: ')),' (ID: 12098)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7117704749107361
    2. ')),' → logprob: -1.2117705345153809
    3. '(' → logprob: -2.836770534515381
    4. '(t' → logprob: -2.961770534515381
    5. ')' → logprob: -3.586770534515381
    6. ' ' → logprob: -3.711770534515381
    7. '0' → logprob: -4.461770534515381
    8. '()+' → logprob: -4.961770534515381
    9. '(n' → logprob: -5.586770534515381
    10. '1' → logprob: -5.836770534515381

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28264012932777405
    2. 'range' → logprob: -1.4076400995254517
    3. '(range' → logprob: -7.782639980316162
    4. 'k' → logprob: -8.40764045715332
    5. ' chain' → logprob: -9.03264045715332
    6. ' k' → logprob: -9.03264045715332
    7. ' xrange' → logprob: -9.28264045715332
    8. ' [' → logprob: -9.40764045715332
    9. ' list' → logprob: -9.53264045715332
    10. '[' → logprob: -9.78264045715332

Token 92: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00026217024424113333
    2. '(' → logprob: -8.250262260437012
    3. 'k' → logprob: -14.375262260437012
    4. '(n' → logprob: -15.250262260437012
    5. '(
' → logprob: -16.000261306762695
    6. '((' → logprob: -19.000261306762695
    7. '(x' → logprob: -19.750261306762695
    8. '	k' → logprob: -19.750261306762695
    9. '(j' → logprob: -19.875261306762695
    10. ' (' → logprob: -19.875261306762695

Token 93: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.07158375531435013
    2. ')' → logprob: -2.6965837478637695
    3. '))' → logprob: -6.5715837478637695
    4. '))))' → logprob: -8.82158374786377
    5. ' ' → logprob: -10.32158374786377
    6. ')));' → logprob: -10.69658374786377
    7. ' )' → logprob: -10.82158374786377
    8. ')))
' → logprob: -11.32158374786377
    9. ')))

' → logprob: -12.69658374786377
    10. ')
' → logprob: -13.44658374786377

Token 94: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08577165007591248
    2. '(' → logprob: -2.5857715606689453
    3. ',' → logprob: -5.835771560668945
    4. '(
' → logprob: -6.960771560668945
    5. '[' → logprob: -7.335771560668945
    6. 'x' → logprob: -7.710771560668945
    7. ' ' → logprob: -7.710771560668945
    8. '
' → logprob: -8.710771560668945
    9. ')
' → logprob: -8.960771560668945
    10. 's' → logprob: -8.960771560668945

Token 95: ' trip' (ID: 8831)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.725178062915802
    2. ' f' → logprob: -1.6001780033111572
    3. ' calculate' → logprob: -2.3501780033111572
    4. ' count' → logprob: -2.8501780033111572
    5. ' factorial' → logprob: -3.7251780033111572
    6. ' add' → logprob: -3.9751780033111572
    7. ' factor' → logprob: -4.100178241729736
    8. ' counter' → logprob: -4.600178241729736
    9. ' s' → logprob: -4.725178241729736
    10. '_' → logprob: -4.725178241729736

Token 96: 'lets' (ID: 12222)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.29056084156036377
    2. 'let' → logprob: -1.4155608415603638
    3. 'lets' → logprob: -4.915560722351074
    4. 'les' → logprob: -6.665560722351074
    5. 'l' → logprob: -7.540560722351074
    6. '(let' → logprob: -9.040560722351074
    7. '

' → logprob: -11.040560722351074
    8. '_le' → logprob: -11.415560722351074
    9. 'lete' → logprob: -11.665560722351074
    10. 'Let' → logprob: -11.665560722351074

Token 97: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0053314706310629845
    2. '(n' → logprob: -6.005331516265869
    3. '():' → logprob: -6.755331516265869
    4. '(k' → logprob: -6.880331516265869
    5. '(x' → logprob: -8.130331039428711
    6. '(a' → logprob: -8.630331039428711
    7. '((' → logprob: -10.005331039428711
    8. '(s' → logprob: -11.005331039428711
    9. '(
' → logprob: -11.130331039428711
    10. '(*' → logprob: -11.255331039428711

Token 98: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6363053321838379
    2. '):' → logprob: -0.7613053321838379
    3. ')' → logprob: -5.636305332183838
    4. ':' → logprob: -10.51130485534668
    5. ' ):' → logprob: -10.88630485534668
    6. '):
' → logprob: -11.01130485534668
    7. 'def' → logprob: -11.63630485534668
    8. ')):' → logprob: -11.76130485534668
    9. ',n' → logprob: -11.88630485534668
    10. '),' → logprob: -12.38630485534668

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005042575299739838
    2. ':' → logprob: -6.380042552947998
    3. ')' → logprob: -6.630042552947998
    4. '):' → logprob: -7.380042552947998
    5. ',' → logprob: -8.130043029785156
    6. '<|end|>' → logprob: -8.130043029785156
    7. ' for' → logprob: -8.630043029785156
    8. ' ' → logprob: -9.130043029785156
    9. '  ' → logprob: -9.255043029785156
    10. '    ' → logprob: -9.755043029785156

Token 100: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3818938434123993
    2. '   ' → logprob: -1.3818938732147217
    3. 'for' → logprob: -3.0068938732147217
    4. ' return' → logprob: -4.381893634796143
    5. ')' → logprob: -6.506893634796143
    6. 'return' → logprob: -6.756893634796143
    7. ' ' → logprob: -7.131893634796143
    8. '  ' → logprob: -8.1318941116333
    9. '    ' → logprob: -8.6318941116333
    10. '	for' → logprob: -9.6318941116333

Token 101: ' Gén' (ID: 71828)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25815752148628235
    2. ' return' → logprob: -2.00815749168396
    3. 'for' → logprob: -3.13315749168396
    4. '   ' → logprob: -3.75815749168396
    5. 'return' → logprob: -4.258157730102539
    6. ' product' → logprob: -5.133157730102539
    7. ' result' → logprob: -6.758157730102539
    8. ' res' → logprob: -6.883157730102539
    9. ' range' → logprob: -7.383157730102539
    10. 'result' → logprob: -7.383157730102539

Token 102: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004918497055768967
    2. 'érer' → logprob: -5.629918575286865
    3. 'def' → logprob: -8.129918098449707
    4. 'r' → logprob: -8.629918098449707
    5. 'érateur' → logprob: -8.879918098449707
    6. 'rate' → logprob: -9.129918098449707
    7. '```' → logprob: -9.129918098449707
    8. 'range' → logprob: -9.254918098449707
    9. '#' → logprob: -9.879918098449707
    10. 'érez' → logprob: -10.129918098449707

Token 103: ' les' (ID: 1341)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.19918981194496155
    2. 'product' → logprob: -2.4491899013519287
    3. ' from' → logprob: -4.19918966293335
    4. ' (' → logprob: -4.32418966293335
    5. 'from' → logprob: -4.32418966293335
    6. ' chain' → logprob: -4.57418966293335
    7. ' range' → logprob: -4.57418966293335
    8. 'range' → logprob: -4.82418966293335
    9. 'chain' → logprob: -5.82418966293335
    10. ' k' → logprob: -5.82418966293335

Token 104: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.3128764629364014
    2. 'product' → logprob: -1.4378764629364014
    3. ' trip' → logprob: -2.0628764629364014
    4. '((' → logprob: -2.5628764629364014
    5. '(product' → logprob: -3.0628764629364014
    6. '(k' → logprob: -3.4378764629364014
    7. ' product' → logprob: -3.6878764629364014
    8. '(' → logprob: -3.6878764629364014
    9. '[(' → logprob: -3.9378764629364014
    10. ' (' → logprob: -3.9378764629364014

Token 105: 'lets' (ID: 12222)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.843605637550354
    2. 'plets' → logprob: -1.093605637550354
    3. 'lets' → logprob: -1.468605637550354
    4. 'ects' → logprob: -6.3436055183410645
    5. 'uples' → logprob: -6.8436055183410645
    6. 'sets' → logprob: -7.0936055183410645
    7. 'ettes' → logprob: -8.843605995178223
    8. 'let' → logprob: -9.343605995178223
    9. 'et' → logprob: -9.343605995178223
    10. 'ples' → logprob: -9.968605995178223

Token 106: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.053642261773347855
    2. '(' → logprob: -3.3036422729492188
    3. '(range' → logprob: -4.428642272949219
    4. '(n' → logprob: -6.803642272949219
    5. '(i' → logprob: -7.553642272949219
    6. '   ' → logprob: -7.553642272949219
    7. ':' → logprob: -8.428642272949219
    8. '((' → logprob: -8.553642272949219
    9. '):' → logprob: -8.553642272949219
    10. '():' → logprob: -8.803642272949219

Token 107: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7639366984367371
    2. ' i' → logprob: -1.0139367580413818
    3. 'range' → logprob: -3.013936758041382
    4. ' range' → logprob: -3.138936758041382
    5. ')' → logprob: -3.388936758041382
    6. '   ' → logprob: -3.888936758041382
    7. 'a' → logprob: -5.138936519622803
    8. '(i' → logprob: -5.513936519622803
    9. ' (' → logprob: -6.263936519622803
    10. ' ' → logprob: -6.513936519622803

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001377137377858162
    2. ',b' → logprob: -6.626377105712891
    3. 'b' → logprob: -10.75137710571289
    4. ' ,' → logprob: -11.25137710571289
    5. 'a' → logprob: -12.75137710571289
    6. ')' → logprob: -12.87637710571289
    7. '<|end|>' → logprob: -12.87637710571289
    8. ' ' → logprob: -13.75137710571289
    9. '_,' → logprob: -13.87637710571289
    10. 's' → logprob: -13.87637710571289

Token 109: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.576246440410614
    2. 'b' → logprob: -0.826246440410614
    3. '<|end|>' → logprob: -8.32624626159668
    4. ' ' → logprob: -10.32624626159668
    5. ')' → logprob: -10.95124626159668
    6. ')b' → logprob: -11.70124626159668
    7. '  ' → logprob: -13.57624626159668
    8. '<|end|>' → logprob: -13.57624626159668
    9. ',' → logprob: -13.95124626159668
    10. ',b' → logprob: -14.32624626159668

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025430647656321526
    2. ' ,' → logprob: -9.50025463104248
    3. ',k' → logprob: -9.87525463104248
    4. ')' → logprob: -9.87525463104248
    5. '<|end|>' → logprob: -10.62525463104248
    6. ',c' → logprob: -10.75025463104248
    7. 'c' → logprob: -11.25025463104248
    8. '   ' → logprob: -12.12525463104248
    9. '<|end|>' → logprob: -13.37525463104248
    10. 'a' → logprob: -13.50025463104248

Token 111: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22602766752243042
    2. 'c' → logprob: -1.6010277271270752
    3. ',' → logprob: -8.351027488708496
    4. '<|end|>' → logprob: -8.351027488708496
    5. ' ' → logprob: -9.351027488708496
    6. ' k' → logprob: -11.101027488708496
    7. '  ' → logprob: -11.726027488708496
    8. ')' → logprob: -11.726027488708496
    9. ' ,' → logprob: -12.101027488708496
    10. 'k' → logprob: -12.101027488708496

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024197304621338844
    2. '):' → logprob: -3.8991973400115967
    3. ',' → logprob: -5.899197101593018
    4. ' )' → logprob: -7.524197101593018
    5. '):
' → logprob: -8.774197578430176
    6. '   ' → logprob: -9.399197578430176
    7. ',)' → logprob: -9.774197578430176
    8. '),' → logprob: -10.524197578430176
    9. ' ):' → logprob: -11.649197578430176
    10. ' ' → logprob: -11.649197578430176

Token 113: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.310038447380066
    2. ':' → logprob: -1.435038447380066
    3. '):' → logprob: -1.685038447380066
    4. ',' → logprob: -1.935038447380066
    5. ' in' → logprob: -1.935038447380066
    6. 'in' → logprob: -5.4350385665893555
    7. ' for' → logprob: -6.0600385665893555
    8. ')' → logprob: -6.0600385665893555
    9. '=' → logprob: -6.3100385665893555
    10. ' :' → logprob: -6.6850385665893555

Token 114: ' [' (ID: 723)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5249966979026794
    2. 'product' → logprob: -1.1499967575073242
    3. 'range' → logprob: -3.024996757507324
    4. ' range' → logprob: -3.149996757507324
    5. '(product' → logprob: -9.024996757507324
    6. '(range' → logprob: -9.649996757507324
    7. '   ' → logprob: -9.774996757507324
    8. ')' → logprob: -10.149996757507324
    9. '	product' → logprob: -10.524996757507324
    10. 'k' → logprob: -11.024996757507324

Token 115: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0031477732118219137
    2. '0' → logprob: -6.628147602081299
    3. 'range' → logprob: -6.753147602081299
    4. ' k' → logprob: -7.503147602081299
    5. ' range' → logprob: -9.878148078918457
    6. '(k' → logprob: -10.253148078918457
    7. ')' → logprob: -12.378148078918457
    8. ' ' → logprob: -12.503148078918457
    9. '   ' → logprob: -12.628148078918457
    10. '(' → logprob: -14.128148078918457

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020199062302708626
    2. ',k' → logprob: -4.020199298858643
    3. ' ,' → logprob: -6.270199298858643
    4. 'k' → logprob: -9.020198822021484
    5. ';k' → logprob: -11.270198822021484
    6. ':k' → logprob: -11.395198822021484
    7. ' ' → logprob: -12.895198822021484
    8. '-k' → logprob: -13.270198822021484
    9. ' k' → logprob: -14.020198822021484
    10. ',
' → logprob: -14.395198822021484

Token 117: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20141831040382385
    2. ' k' → logprob: -1.7014182806015015
    3. ' ' → logprob: -12.701417922973633
    4. '	k' → logprob: -14.576417922973633
    5. ',k' → logprob: -14.826417922973633
    6. '{k' → logprob: -14.826417922973633
    7. ')' → logprob: -15.451417922973633
    8. '  ' → logprob: -16.076417922973633
    9. ' к' → logprob: -16.451417922973633
    10. '<|end|>' → logprob: -16.826417922973633

Token 118: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046045915223658085
    2. ')**' → logprob: -8.500460624694824
    3. '-' → logprob: -9.250460624694824
    4. ' )' → logprob: -10.000460624694824
    5. '):' → logprob: -10.250460624694824
    6. ')^' → logprob: -10.500460624694824
    7. ']' → logprob: -11.125460624694824
    8. '[' → logprob: -11.500460624694824
    9. '),' → logprob: -12.500460624694824
    10. ')
' → logprob: -12.500460624694824

Token 119: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5709008574485779
    2. 'k' → logprob: -1.1959009170532227
    3. ',' → logprob: -2.8209009170532227
    4. '1' → logprob: -2.9459009170532227
    5. ' k' → logprob: -4.570900917053223
    6. ' ' → logprob: -6.195900917053223
    7. '),' → logprob: -6.445900917053223
    8. ']' → logprob: -6.445900917053223
    9. '```' → logprob: -6.820900917053223
    10. '
' → logprob: -7.320900917053223

Token 120: ']^' (ID: 144683)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003278368094470352
    2. ')' → logprob: -9.500328063964844
    3. ' ]' → logprob: -9.750328063964844
    4. ']:' → logprob: -9.875328063964844
    5. ']
' → logprob: -10.000328063964844
    6. '])' → logprob: -10.250328063964844
    7. '],' → logprob: -10.250328063964844
    8. ']^' → logprob: -11.125328063964844
    9. ']:
' → logprob: -13.125328063964844
    10. '   ' → logprob: -13.125328063964844

Token 121: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.440506407059729e-05
    2. ' ' → logprob: -10.37503433227539
    3. 'k' → logprob: -14.12503433227539
    4. '³' → logprob: -14.12503433227539
    5. ',' → logprob: -14.87503433227539
    6. '   ' → logprob: -15.00003433227539
    7. ')' → logprob: -15.37503433227539
    8. '  ' → logprob: -15.37503433227539
    9. '```' → logprob: -15.37503433227539
    10. ']' → logprob: -15.75003433227539

Token 122: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5202440619468689
    2. ':' → logprob: -1.1452441215515137
    3. '):' → logprob: -2.6452441215515137
    4. '():' → logprob: -4.645244121551514
    5. ',' → logprob: -5.145244121551514
    6. ' :' → logprob: -8.895243644714355
    7. ']:' → logprob: -9.145243644714355
    8. ')' → logprob: -9.145243644714355
    9. '(' → logprob: -9.270243644714355
    10. '(k' → logprob: -9.270243644714355

Token 123: ' a' (ID: 261)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4290141463279724
    2. ' product' → logprob: -1.0540142059326172
    3. '(product' → logprob: -8.679014205932617
    4. ')' → logprob: -10.554014205932617
    5. 'range' → logprob: -10.929014205932617
    6. 'filter' → logprob: -11.179014205932617
    7. 'a' → logprob: -11.304014205932617
    8. ' k' → logprob: -11.429014205932617
    9. '	product' → logprob: -11.679014205932617
    10. ' ' → logprob: -11.804014205932617

Token 124: ' +' (ID: 659)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3087214529514313
    2. ' <' → logprob: -2.3087215423583984
    3. '<|end|>' → logprob: -2.9337215423583984
    4. ',' → logprob: -3.0587215423583984
    5. '<=' → logprob: -3.4337215423583984
    6. '+' → logprob: -4.933721542358398
    7. ' in' → logprob: -5.183721542358398
    8. ' ,' → logprob: -5.308721542358398
    9. ' +' → logprob: -5.433721542358398
    10. ' >=' → logprob: -6.058721542358398

Token 125: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.34932857751846313
    2. ' b' → logprob: -1.2243285179138184
    3. 'c' → logprob: -7.974328517913818
    4. ' c' → logprob: -8.724328994750977
    5. ' ' → logprob: -8.849328994750977
    6. '1' → logprob: -8.974328994750977
    7. ',' → logprob: -10.349328994750977
    8. '3' → logprob: -10.849328994750977
    9. 'k' → logprob: -11.599328994750977
    10. '<|end|>' → logprob: -11.724328994750977

Token 126: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8536821007728577
    2. '<|end|>' → logprob: -1.353682041168213
    3. 'c' → logprob: -1.853682041168213
    4. ' c' → logprob: -3.103682041168213
    5. ' +' → logprob: -3.353682041168213
    6. '%' → logprob: -3.603682041168213
    7. ' ' → logprob: -3.728682041168213
    8. ',' → logprob: -5.228682041168213
    9. ' <' → logprob: -5.228682041168213
    10. ')' → logprob: -5.603682041168213

Token 127: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3881641626358032
    2. 'c' → logprob: -1.1381641626358032
    3. ' ' → logprob: -7.263164043426514
    4. ')' → logprob: -8.888164520263672
    5. '<|end|>' → logprob: -8.888164520263672
    6. '1' → logprob: -9.013164520263672
    7. ')c' → logprob: -9.763164520263672
    8. ',' → logprob: -11.138164520263672
    9. '	c' → logprob: -11.263164520263672
    10. '<|end|>' → logprob: -11.450664520263672

Token 128: ' �' (ID: 42308)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14472439885139465
    2. '%' → logprob: -2.6447243690490723
    3. ')' → logprob: -3.1447243690490723
    4. ' ' → logprob: -4.894724369049072
    5. ' <' → logprob: -5.519724369049072
    6. ',' → logprob: -5.894724369049072
    7. ')%' → logprob: -6.019724369049072
    8. ' ,' → logprob: -6.769724369049072
    9. ' )' → logprob: -7.394724369049072
    10. ' ==' → logprob: -7.519724369049072

Token 129: '�' (ID: 94)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3435993790626526
    2. ' %' → logprob: -1.5935993194580078
    3. ' ' → logprob: -2.968599319458008
    4. '=' → logprob: -3.843599319458008
    5. ')' → logprob: -4.593599319458008
    6. '%=' → logprob: -6.343599319458008
    7. ' %=' → logprob: -6.593599319458008
    8. ')%' → logprob: -8.093599319458008
    9. ' =' → logprob: -8.718599319458008
    10. '3' → logprob: -8.968599319458008

Token 130: ' ' (ID: 220)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6327243447303772
    2. '%' → logprob: -1.2577242851257324
    3. ' ' → logprob: -2.1327242851257324
    4. '<|end|>' → logprob: -3.0077242851257324
    5. ')' → logprob: -4.507724285125732
    6. ' %=' → logprob: -6.007724285125732
    7. ' k' → logprob: -6.882724285125732
    8. ')%' → logprob: -7.257724285125732
    9. '7' → logprob: -8.50772476196289
    10. ' modulo' → logprob: -8.50772476196289

Token 131: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17502181231975555
    2. ' k' → logprob: -1.925021767616272
    3. '0' → logprob: -4.675021648406982
    4. ' ' → logprob: -6.300021648406982
    5. '%' → logprob: -6.425021648406982
    6. ')' → logprob: -6.925021648406982
    7. '(k' → logprob: -7.925021648406982
    8. '<|end|>' → logprob: -8.17502212524414
    9. ' %' → logprob: -9.30002212524414
    10. ' (' → logprob: -9.42502212524414

Token 132: ' mod' (ID: 1812)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3556329309940338
    2. ' %' → logprob: -1.2306329011917114
    3. ' ' → logprob: -5.355632781982422
    4. ')' → logprob: -6.605632781982422
    5. ' modulo' → logprob: -8.105632781982422
    6. '=' → logprob: -8.230632781982422
    7. ' mod' → logprob: -9.230632781982422
    8. '  ' → logprob: -9.730632781982422
    9. 'mod' → logprob: -9.730632781982422
    10. '   ' → logprob: -9.730632781982422

Token 133: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2812419533729553
    2. ' k' → logprob: -1.4062418937683105
    3. '<|end|>' → logprob: -10.281242370605469
    4. ' ' → logprob: -10.781242370605469
    5. ' ' → logprob: -10.906242370605469
    6. '(k' → logprob: -12.531242370605469
    7. '	k' → logprob: -12.781242370605469
    8. ')' → logprob: -12.906242370605469
    9. '_k' → logprob: -13.656242370605469
    10. '<|end|>' → logprob: -13.781242370605469

Token 134: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.214230015873909
    2. ' %' → logprob: -2.0892300605773926
    3. ')' → logprob: -3.4642300605773926
    4. ',' → logprob: -3.9642300605773926
    5. ' ' → logprob: -4.339230060577393
    6. '   ' → logprob: -5.964230060577393
    7. '  ' → logprob: -7.464230060577393
    8. '(' → logprob: -7.714230060577393
    9. '=' → logprob: -8.589229583740234
    10. '):' → logprob: -8.714229583740234

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9093387126922607
    2. '=' → logprob: -1.2843387126922607
    3. ')' → logprob: -2.6593387126922607
    4. ' if' → logprob: -2.7843387126922607
    5. ':' → logprob: -2.9093387126922607
    6. ',' → logprob: -3.1593387126922607
    7. ' ' → logprob: -3.9093387126922607
    8. ' =' → logprob: -4.15933895111084
    9. '):' → logprob: -4.40933895111084
    10. '==' → logprob: -4.90933895111084

Token 136: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8468787670135498
    2. ' return' → logprob: -1.3468787670135498
    3. ' for' → logprob: -1.9718787670135498
    4. 'return' (adapté à ' return') → logprob: -2.34687876701355
    5. 'for' → logprob: -3.22187876701355
    6. ')' → logprob: -4.346879005432129
    7. ':' → logprob: -5.596879005432129
    8. ' ' → logprob: -5.846879005432129
    9. '=' → logprob: -6.221879005432129
    10. '0' → logprob: -6.471879005432129

Token 137: ' filter' (ID: 6690)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(product' → logprob: -1.1234978437423706
    2. '((' → logprob: -1.2484978437423706
    3. '[(' → logprob: -2.12349796295166
    4. '(filter' → logprob: -2.37349796295166
    5. '(' → logprob: -3.24849796295166
    6. 'product' → logprob: -3.49849796295166
    7. 'filter' → logprob: -3.74849796295166
    8. ' (' → logprob: -3.74849796295166
    9. '(
' → logprob: -3.99849796295166
    10. ' ((' → logprob: -4.12349796295166

Token 138: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0004484269011300057
    2. '(' → logprob: -7.750448226928711
    3. '(
' → logprob: -11.500448226928711
    4. 'lambda' → logprob: -12.125448226928711
    5. '(None' → logprob: -13.250448226928711
    6. '(False' → logprob: -15.625448226928711
    7. '(\' → logprob: -16.37544822692871
    8. '=lambda' → logprob: -16.75044822692871
    9. '(

' → logprob: -16.87544822692871
    10. '(True' → logprob: -17.12544822692871

Token 139: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3121378719806671
    2. 't' → logprob: -1.6871378421783447
    3. 'abc' → logprob: -4.187138080596924
    4. ' (' → logprob: -4.312138080596924
    5. 'lambda' → logprob: -4.562138080596924
    6. '(lambda' → logprob: -4.562138080596924
    7. ' lambda' → logprob: -4.812138080596924
    8. ' trip' → logprob: -5.187138080596924
    9. ' abc' → logprob: -5.312138080596924
    10. ' x' → logprob: -5.812138080596924

Token 140: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01596762426197529
    2. ' :' → logprob: -4.515967845916748
    3. ' t' → logprob: -5.890967845916748
    4. ' lambda' → logprob: -6.640967845916748
    5. 'lambda' → logprob: -7.515967845916748
    6. '=lambda' → logprob: -8.51596736907959
    7. 't' → logprob: -10.01596736907959
    8. '(lambda' → logprob: -11.01596736907959
    9. 'ambda' → logprob: -12.26596736907959
    10. ',' → logprob: -12.51596736907959

Token 141: ' sum' (ID: 4215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2276596575975418
    2. '(t' → logprob: -1.8526597023010254
    3. '(sum' → logprob: -3.2276597023010254
    4. '(a' → logprob: -5.602659702301025
    5. '((' → logprob: -6.602659702301025
    6. '(x' → logprob: -7.602659702301025
    7. '(m' → logprob: -7.852659702301025
    8. '   ' → logprob: -8.477659225463867
    9. '(add' → logprob: -8.477659225463867
    10. '(' → logprob: -8.477659225463867

Token 142: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0002752790169324726
    2. '(' → logprob: -8.375275611877441
    3. 't' → logprob: -10.125275611877441
    4. ' t' → logprob: -12.875275611877441
    5. ' (' → logprob: -13.375275611877441
    6. ')' → logprob: -15.875275611877441
    7. '	t' → logprob: -15.875275611877441
    8. ')t' → logprob: -16.375274658203125
    9. '(tuple' → logprob: -17.000274658203125
    10. '(x' → logprob: -17.625274658203125

Token 143: ')' (ID: 8)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.27357083559036255
    2. ')' → logprob: -1.7735707759857178
    3. ' t' → logprob: -3.8985707759857178
    4. '%' → logprob: -3.8985707759857178
    5. ' %' → logprob: -4.523571014404297
    6. ')%' → logprob: -5.273571014404297
    7. '(' → logprob: -5.523571014404297
    8. 't' → logprob: -5.773571014404297
    9. ' )' → logprob: -6.273571014404297
    10. '()%' → logprob: -6.773571014404297

Token 144: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5327698588371277
    2. '%' → logprob: -0.9077698588371277
    3. '()' → logprob: -5.782769680023193
    4. '()%' → logprob: -5.782769680023193
    5. ')' → logprob: -5.907769680023193
    6. ' ' → logprob: -8.032770156860352
    7. '(' → logprob: -8.657770156860352
    8. ')%' → logprob: -9.407770156860352
    9. ' t' → logprob: -10.282770156860352
    10. ' ()' → logprob: -10.532770156860352

Token 145: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.061968132853507996
    2. ' k' → logprob: -2.8119680881500244
    3. '	k' → logprob: -15.686967849731445
    4. '{k' → logprob: -15.686967849731445
    5. '<|end|>' → logprob: -16.436967849731445
    6. ' к' → logprob: -16.936967849731445
    7. ' ' → logprob: -16.936967849731445
    8. '(k' → logprob: -17.561967849731445
    9. ')' → logprob: -18.311967849731445
    10. '_k' → logprob: -18.561967849731445

Token 146: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12700600922107697
    2. ' ==' → logprob: -2.1270060539245605
    3. '=' → logprob: -10.502005577087402
    4. ')' → logprob: -10.752005577087402
    5. '==
' → logprob: -11.002005577087402
    6. ' ' → logprob: -12.002005577087402
    7. ')==' → logprob: -12.377005577087402
    8. '[' → logprob: -14.127005577087402
    9. '),' → logprob: -15.377005577087402
    10. '===' → logprob: -15.502005577087402

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606151048094034
    2. ' ' → logprob: -4.882606029510498
    3. '   ' → logprob: -18.632606506347656
    4. '
' → logprob: -19.007606506347656
    5. ')' → logprob: -19.632606506347656
    6. ' ' → logprob: -19.757606506347656
    7. '  ' → logprob: -19.882606506347656
    8. '۰' → logprob: -20.132606506347656
    9. '```' → logprob: -20.820106506347656
    10. '1' → logprob: -20.945106506347656

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -21.00000762939453
    4. '```' → logprob: -21.75000762939453
    5. 'k' → logprob: -21.87500762939453
    6. '   ' → logprob: -22.50000762939453
    7. '000' → logprob: -23.00000762939453
    8. ')' → logprob: -23.25000762939453
    9. '00' → logprob: -23.87500762939453
    10. '０' → logprob: -24.06250762939453

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -10.875052452087402
    3. '),' → logprob: -11.250052452087402
    4. ')' → logprob: -11.625052452087402
    5. '   ' → logprob: -11.750052452087402
    6. ',
' → logprob: -12.750052452087402
    7. ' ' → logprob: -15.750052452087402
    8. ',map' → logprob: -15.875052452087402
    9. ',t' → logprob: -16.00005340576172
    10. ',)' → logprob: -16.37505340576172

Token 150: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.2520075738430023
    2. ' product' → logprob: -1.5020076036453247
    3. '   ' → logprob: -9.627007484436035
    4. '	product' → logprob: -12.252007484436035
    5. '(product' → logprob: -12.377007484436035
    6. '.product' → logprob: -13.752007484436035
    7. ' ' → logprob: -14.127007484436035
    8. '    ' → logprob: -14.377007484436035
    9. '  ' → logprob: -15.127007484436035
    10. ' itertools' → logprob: -16.12700843811035

Token 151: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -5.9153885558771435e-06
    2. 'range' → logprob: -12.250005722045898
    3. '(' → logprob: -14.125005722045898
    4. ')' → logprob: -15.375005722045898
    5. ' (' → logprob: -16.7500057220459
    6. ')(' → logprob: -17.0000057220459
    7. ' ' → logprob: -17.1250057220459
    8. ' range' → logprob: -17.5000057220459
    9. '	range' → logprob: -19.2500057220459
    10. '((' → logprob: -19.5000057220459

Token 152: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.306760805164231e-05
    2. 'k' → logprob: -11.37501335144043
    3. '(' → logprob: -13.50001335144043
    4. ',k' → logprob: -16.00001335144043
    5. ' k' → logprob: -18.25001335144043
    6. '{k' → logprob: -18.50001335144043
    7. '(n' → logprob: -18.75001335144043
    8. '	k' → logprob: -19.37501335144043
    9. ' (' → logprob: -19.87501335144043
    10. ')' → logprob: -20.37501335144043

Token 153: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -7.123899558791891e-05
    2. ')' → logprob: -10.37507152557373
    3. ' ),' → logprob: -10.50007152557373
    4. ',),' → logprob: -12.25007152557373
    5. ',' → logprob: -12.37507152557373
    6. '),(' → logprob: -13.37507152557373
    7. ' ' → logprob: -14.87507152557373
    8. '3' → logprob: -15.62507152557373
    9. ',k' → logprob: -15.75007152557373
    10. ')))' → logprob: -15.87507152557373

Token 154: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.2724612355232239
    2. 'range' → logprob: -1.522461175918579
    3. '3' → logprob: -4.022461414337158
    4. ' repeat' → logprob: -6.397461414337158
    5. ' range' → logprob: -7.397461414337158
    6. ' ' → logprob: -9.0224609375
    7. 'k' → logprob: -11.7724609375
    8. '  ' → logprob: -13.3974609375
    9. 're' → logprob: -13.8974609375
    10. '(range' → logprob: -13.8974609375

Token 155: '=' (ID: 28)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005237233126536012
    2. '(' → logprob: -8.250523567199707
    3. '=' → logprob: -8.250523567199707
    4. ' ' → logprob: -13.625523567199707
    5. ')' → logprob: -16.750524520874023
    6. '(
' → logprob: -18.375524520874023
    7. '۳' → logprob: -18.625524520874023
    8. '³' → logprob: -18.625524520874023
    9. '```' → logprob: -19.000524520874023
    10. 's' → logprob: -20.250524520874023

Token 156: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۳' → logprob: -20.375
    4. ')' → logprob: -21.0
    5. '```' → logprob: -21.125
    6. '３' → logprob: -21.875
    7. '   ' → logprob: -21.875
    8. '³' → logprob: -22.375
    9. '٣' → logprob: -22.375
    10. '(' → logprob: -22.5

Token 157: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.219262624857947e-05
    2. ')' → logprob: -10.000072479248047
    3. ')))' → logprob: -10.625072479248047
    4. '))
' → logprob: -13.500072479248047
    5. ' ))' → logprob: -14.250072479248047
    6. '()))' → logprob: -15.250072479248047
    7. '))

' → logprob: -16.625072479248047
    8. '));' → logprob: -16.625072479248047
    9. '),' → logprob: -17.500072479248047
    10. ''))' → logprob: -17.625072479248047

Token 158: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04744673892855644
    2. ':' → logprob: -3.5474467277526855
    3. '):' → logprob: -4.2974467277526855
    4. 'def' → logprob: -5.9224467277526855
    5. '(' → logprob: -7.7974467277526855
    6. '   ' → logprob: -8.922447204589844
    7. ',' → logprob: -9.297447204589844
    8. ')
' → logprob: -9.672447204589844
    9. '():' → logprob: -9.672447204589844
    10. '()' → logprob: -10.422447204589844

Token 159: ' '' (ID: 461)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.1213958263397217
    2. 'count' → logprob: -2.1213958263397217
    3. 'freq' → logprob: -2.2463958263397217
    4. 'dp' → logprob: -2.4963958263397217
    5. 'x' → logprob: -2.6213958263397217
    6. 's' → logprob: -2.8713958263397217
    7. 'def' → logprob: -2.8713958263397217
    8. '#' → logprob: -3.1213958263397217
    9. 'cnt' → logprob: -3.9963958263397217
    10. 'for' → logprob: -4.246396064758301

Token 160: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9650372862815857
    2. 'x' → logprob: -1.7150373458862305
    3. 'def' → logprob: -1.9650373458862305
    4. 'for' → logprob: -2.0900373458862305
    5. '#' → logprob: -3.2150373458862305
    6. 'sum' → logprob: -3.9650373458862305
    7. 'counts' → logprob: -4.0900373458862305
    8. ' =' → logprob: -4.4650373458862305
    9. '=' → logprob: -4.7150373458862305
    10. 'trip' → logprob: -4.7150373458862305

Token 161: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007395310327410698
    2. '=' → logprob: -5.007395267486572
    3. ''' → logprob: -8.00739574432373
    4. ')' → logprob: -8.88239574432373
    5. ' ='' → logprob: -9.25739574432373
    6. ' +=' → logprob: -9.88239574432373
    7. ' ' → logprob: -10.50739574432373
    8. ' '' → logprob: -11.00739574432373
    9. ',' → logprob: -12.75739574432373
    10. '='' → logprob: -13.00739574432373

Token 162: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889655277132988
    2. '=' → logprob: -2.46396541595459
    3. ' ' → logprob: -11.33896541595459
    4. ')' → logprob: -12.33896541595459
    5. ',' → logprob: -12.46396541595459
    6. '_' → logprob: -14.21396541595459
    7. ' =
' → logprob: -14.33896541595459
    8. 's' → logprob: -14.33896541595459
    9. '=[]' → logprob: -14.33896541595459
    10. ' =[' → logprob: -14.71396541595459

Token 163: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.381976455450058
    2. '=' → logprob: -1.2569764852523804
    3. ' =' → logprob: -5.00697660446167
    4. '=sum' → logprob: -5.13197660446167
    5. 't' → logprob: -5.25697660446167
    6. '0' → logprob: -5.50697660446167
    7. 's' → logprob: -6.63197660446167
    8. 'd' → logprob: -6.63197660446167
    9. 'def' → logprob: -6.75697660446167
    10. 'default' → logprob: -7.13197660446167

Token 164: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09425035864114761
    2. 'x' → logprob: -3.719250440597534
    3. 's' → logprob: -4.219250202178955
    4. 'com' → logprob: -5.094250202178955
    5. 'reduce' → logprob: -5.094250202178955
    6. 'for' → logprob: -5.469250202178955
    7. 'Counter' → logprob: -5.594250202178955
    8. 'duction' → logprob: -6.094250202178955
    9. 'som' → logprob: -6.094250202178955
    10. 'next' → logprob: -6.594250202178955

Token 165: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5799120664596558
    2. ' =' → logprob: -0.8299120664596558
    3. '(' → logprob: -6.079912185668945
    4. 'ans' → logprob: -7.454912185668945
    5. '(ans' → logprob: -8.204912185668945
    6. '=sum' → logprob: -8.454912185668945
    7. '_=' → logprob: -8.954912185668945
    8. '_' → logprob: -9.204912185668945
    9. ')' → logprob: -9.829912185668945
    10. ',' → logprob: -9.954912185668945

Token 166: ' tous' (ID: 10688)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7403115630149841
    2. 'trip' → logprob: -1.365311622619629
    3. 'lambda' → logprob: -1.865311622619629
    4. 'mul' → logprob: -2.740311622619629
    5. 'sum' → logprob: -4.115311622619629
    6. 'c' → logprob: -4.990311622619629
    7. 'x' → logprob: -5.365311622619629
    8. '1' → logprob: -5.990311622619629
    9. 'reduce' → logprob: -5.990311622619629
    10. '(lambda' → logprob: -5.990311622619629

Token 167: ' les' (ID: 1341)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.18599027395248413
    2. 't' → logprob: -2.685990333557129
    3. 'c' → logprob: -4.060990333557129
    4. 'a' → logprob: -4.185990333557129
    5. 'count' → logprob: -4.560990333557129
    6. 'sum' → logprob: -4.560990333557129
    7. 'counter' → logprob: -4.560990333557129
    8. 'map' → logprob: -4.685990333557129
    9. 'x' → logprob: -5.685990333557129
    10. 'comb' → logprob: -5.685990333557129

Token 168: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.2588461637496948
    2. 'com' → logprob: -2.5088462829589844
    3. 'c' → logprob: -3.1338462829589844
    4. ' trip' → logprob: -3.3838462829589844
    5. 'multip' → logprob: -4.008846282958984
    6. 'counts' → logprob: -4.758846282958984
    7. 'x' → logprob: -4.883846282958984
    8. 'counter' → logprob: -5.383846282958984
    9. 'produ' → logprob: -5.883846282958984
    10. ' produits' → logprob: -5.883846282958984

Token 169: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.030007563531398773
    2. 'plets' → logprob: -3.5300076007843018
    3. 'let' → logprob: -8.905007362365723
    4. 'les' → logprob: -10.530007362365723
    5. 'ples' → logprob: -10.905007362365723
    6. 't' → logprob: -11.405007362365723
    7. 'sets' → logprob: -11.655007362365723
    8. 'letes' → logprob: -11.655007362365723
    9. 'l' → logprob: -11.905007362365723
    10. 'uples' → logprob: -12.155007362365723

Token 170: ' val' (ID: 1459)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2816300690174103
    2. ' =' → logprob: -1.406630039215088
    3. ')' → logprob: -9.031630516052246
    4. ',' → logprob: -9.156630516052246
    5. '(' → logprob: -9.281630516052246
    6. '(ans' → logprob: -10.656630516052246
    7. 'ans' → logprob: -10.781630516052246
    8. ' =
' → logprob: -10.781630516052246
    9. '(
' → logprob: -11.406630516052246
    10. 'x' → logprob: -11.406630516052246

Token 171: 'ides' (ID: 4105)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763370990753174
    2. 'ide' → logprob: -1.5763370990753174
    3. 'id' → logprob: -2.9513370990753174
    4. 'e' → logprob: -3.2013370990753174
    5. 'eur' → logprob: -3.8263370990753174
    6. 'ue' → logprob: -3.9513370990753174
    7. 'eurs' → logprob: -3.9513370990753174
    8. '(' → logprob: -4.076336860656738
    9. ' =' → logprob: -4.701336860656738
    10. '#' → logprob: -4.951336860656738

Token 172: ' pond' (ID: 42367)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12225142121315002
    2. 'ans' → logprob: -2.247251510620117
    3. ' =' → logprob: -5.372251510620117
    4. '(ans' → logprob: -5.997251510620117
    5. '=
' → logprob: -6.997251510620117
    6. ' ans' → logprob: -7.247251510620117
    7. ')' → logprob: -7.747251510620117
    8. '(
' → logprob: -9.497251510620117
    9. '=

' → logprob: -10.622251510620117
    10. '(' → logprob: -10.997251510620117

Token 173: 'érée' (ID: 113219)
  Prédit: 'érés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érés' → logprob: -0.009803901426494122
    2. 'ération' → logprob: -5.634803771972656
    3. 'érées' → logprob: -6.009803771972656
    4. 'éré' → logprob: -6.509803771972656
    5. 'érations' → logprob: -6.884803771972656
    6. 'érée' → logprob: -7.634803771972656
    7. 'é' → logprob: -8.884803771972656
    8. 'ér' → logprob: -8.884803771972656
    9. '=' → logprob: -9.884803771972656
    10. 'érant' → logprob: -9.884803771972656

Token 174: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21422041952610016
    2. '(lambda' → logprob: -2.4642205238342285
    3. '=' → logprob: -2.7142205238342285
    4. '=lambda' → logprob: -3.9642205238342285
    5. ' =' → logprob: -4.2142205238342285
    6. '(
' → logprob: -6.2142205238342285
    7. '=sum' → logprob: -6.4642205238342285
    8. 'lambda' → logprob: -7.0892205238342285
    9. ' +=' → logprob: -7.4642205238342285
    10. ' (' → logprob: -7.7142205238342285

Token 175: ' leur' (ID: 9853)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.13544103503227234
    2. ' lambda' → logprob: -2.5104410648345947
    3. '(lambda' → logprob: -3.1354410648345947
    4. 'x' → logprob: -6.385440826416016
    5. 'mul' → logprob: -9.260440826416016
    6. ' x' → logprob: -9.510440826416016
    7. '#' → logprob: -10.385440826416016
    8. 'lam' → logprob: -11.010440826416016
    9. '=lambda' → logprob: -11.260440826416016
    10. ' (' → logprob: -12.385440826416016

Token 176: ' effect' (ID: 3159)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9012321829795837
    2. ' lambda' → logprob: -1.4012322425842285
    3. 'x' → logprob: -1.5262322425842285
    4. 'count' → logprob: -3.5262322425842285
    5. ' x' → logprob: -4.0262322425842285
    6. 'value' → logprob: -4.0262322425842285
    7. 'val' → logprob: -4.2762322425842285
    8. ' count' → logprob: -4.6512322425842285
    9. '(lambda' → logprob: -4.9012322425842285
    10. '1' → logprob: -5.5262322425842285

Token 177: 'if' (ID: 366)
  Prédit: 'ifs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.5778033137321472
    2. 'if' → logprob: -0.8278033137321472
    3. 'ivité' → logprob: -7.077803134918213
    4. 's' → logprob: -7.952803134918213
    5. 'u' → logprob: -8.702803611755371
    6. '#' → logprob: -9.827803611755371
    7. 'count' → logprob: -9.952803611755371
    8. 'ic' → logprob: -10.202803611755371
    9. 'counts' → logprob: -10.202803611755371
    10. 't' → logprob: -10.327803611755371

Token 178: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18325035274028778
    2. '=' → logprob: -1.9332503080368042
    3. '(' → logprob: -4.683250427246094
    4. '(ans' → logprob: -5.308250427246094
    5. 'ans' → logprob: -6.058250427246094
    6. '(
' → logprob: -6.433250427246094
    7. ' ans' → logprob: -6.558250427246094
    8. 'x' → logprob: -7.558250427246094
    9. ')' → logprob: -7.558250427246094
    10. ',' → logprob: -7.558250427246094

Token 179: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08047372847795486
    2. '=' → logprob: -2.9554736614227295
    3. ' =' → logprob: -3.9554736614227295
    4. ' ans' → logprob: -5.705473899841309
    5. '(ans' → logprob: -6.580473899841309
    6. ')' → logprob: -7.830473899841309
    7. '=
' → logprob: -7.830473899841309
    8. '(
' → logprob: -8.205473899841309
    9. ' =
' → logprob: -9.455473899841309
    10. '(' → logprob: -9.580473899841309

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300159960985184
    2. '=' → logprob: -3.168001651763916
    3. '(' → logprob: -13.668001174926758
    4. ' ' → logprob: -14.918001174926758
    5. ' =(' → logprob: -14.918001174926758
    6. ' =
' → logprob: -15.418001174926758
    7. ')' → logprob: -15.668001174926758
    8. '=sum' → logprob: -16.918001174926758
    9. ' =)' → logprob: -17.043001174926758
    10. ' +=' → logprob: -17.168001174926758

Token 181: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.013030578382313251
    2. 'reduce' → logprob: -5.263030529022217
    3. ' sum' → logprob: -5.388030529022217
    4. '0' → logprob: -5.763030529022217
    5. ' ' → logprob: -11.013031005859375
    6. '   ' → logprob: -11.013031005859375
    7. ' reduce' → logprob: -11.513031005859375
    8. '(sum' → logprob: -13.013031005859375
    9. '  ' → logprob: -13.388031005859375
    10. '1' → logprob: -13.763031005859375

Token 182: '(re' (ID: 8178)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7431452870368958
    2. '(x' → logprob: -1.243145227432251
    3. '(m' → logprob: -2.243145227432251
    4. '(map' → logprob: -2.368145227432251
    5. '(' → logprob: -3.618145227432251
    6. '(lambda' → logprob: -5.11814546585083
    7. '(((' → logprob: -6.99314546585083
    8. '(
' → logprob: -7.36814546585083
    9. '(re' → logprob: -7.99314546585083
    10. '(mu' → logprob: -8.493144989013672

Token 183: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.00023476807109545916
    2. 'd' → logprob: -8.500234603881836
    3. 'du' → logprob: -11.125234603881836
    4. '(' → logprob: -12.000234603881836
    5. 'ducer' → logprob: -12.750234603881836
    6. '[' → logprob: -13.125234603881836
    7. 'duced' → logprob: -13.375234603881836
    8. 'dice' → logprob: -14.000234603881836
    9. 'duc' → logprob: -14.125234603881836
    10. 'dux' → logprob: -14.250234603881836

Token 184: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.44354966282844543
    2. '(' → logprob: -1.443549633026123
    3. '(add' → logprob: -2.693549633026123
    4. '(lambda' → logprob: -3.068549633026123
    5. '(operator' → logprob: -4.943549633026123
    6. '(
' → logprob: -7.943549633026123
    7. ')' → logprob: -8.443550109863281
    8. ')(' → logprob: -9.318550109863281
    9. ' (' → logprob: -9.693550109863281
    10. '(op' → logprob: -10.318550109863281

Token 185: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.00012106612848583609
    2. 'u' → logprob: -10.125121116638184
    3. ' ul' → logprob: -10.625121116638184
    4. '(lambda' → logprob: -11.125121116638184
    5. 'mul' → logprob: -11.750121116638184
    6. '<ul' → logprob: -11.875121116638184
    7. ')' → logprob: -12.375121116638184
    8. ' mul' → logprob: -12.500121116638184
    9. '(add' → logprob: -12.875121116638184
    10. 'ulp' → logprob: -12.875121116638184

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011116322129964828
    2. '(x' → logprob: -5.8861165046691895
    3. ',(' → logprob: -6.3861165046691895
    4. ',[' → logprob: -7.0111165046691895
    5. ',
' → logprob: -7.1361165046691895
    6. '(' → logprob: -7.1361165046691895
    7. ',x' → logprob: -7.1361165046691895
    8. '(lambda' → logprob: -7.2611165046691895
    9. '[' → logprob: -7.5111165046691895
    10. ' (' → logprob: -7.7611165046691895

Token 187: ' map' (ID: 4014)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2569885551929474
    2. '(map' → logprob: -1.756988525390625
    3. '[x' → logprob: -4.131988525390625
    4. ' (' → logprob: -4.256988525390625
    5. 'map' → logprob: -4.256988525390625
    6. '[' → logprob: -6.006988525390625
    7. '(' → logprob: -6.256988525390625
    8. '(t' → logprob: -6.881988525390625
    9. '(chain' → logprob: -7.256988525390625
    10. 'x' → logprob: -7.631988525390625

Token 188: '(x' (ID: 4061)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2053232342004776
    2. '(x' → logprob: -1.7053232192993164
    3. '(' → logprob: -5.580323219299316
    4. ' (' → logprob: -9.830323219299316
    5. '((' → logprob: -10.705323219299316
    6. 'lambda' → logprob: -10.955323219299316
    7. '(
' → logprob: -11.080323219299316
    8. 'x' → logprob: -12.955323219299316
    9. '(k' → logprob: -13.330323219299316
    10. '(part' → logprob: -13.330323219299316

Token 189: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.1993371993303299
    2. ' .' → logprob: -2.4493372440338135
    3. ',' → logprob: -2.5743372440338135
    4. '.__' → logprob: -4.949337005615234
    5. '.' → logprob: -5.324337005615234
    6. ' ,' → logprob: -6.199337005615234
    7. ',x' → logprob: -7.199337005615234
    8. '(lambda' → logprob: -7.324337005615234
    9. ')' → logprob: -7.699337005615234
    10. ',get' → logprob: -8.199337005615234

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05725785344839096
    2. ',t' → logprob: -2.932257890701294
    3. 't' → logprob: -6.557257652282715
    4. ' ,' → logprob: -7.307257652282715
    5. '(t' → logprob: -8.432257652282715
    6. ' t' → logprob: -11.057257652282715
    7. ',x' → logprob: -12.307257652282715
    8. ' ' → logprob: -12.432257652282715
    9. '   ' → logprob: -12.432257652282715
    10. ',(' → logprob: -12.807257652282715

Token 191: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.048987455666065216
    2. ' t' → logprob: -3.04898738861084
    3. 'trip' → logprob: -8.17398738861084
    4. ' trip' → logprob: -9.42398738861084
    5. '(t' → logprob: -11.04898738861084
    6. '))' → logprob: -12.29898738861084
    7. ')t' → logprob: -12.29898738861084
    8. ')' → logprob: -12.42398738861084
    9. '   ' → logprob: -12.79898738861084
    10. ')))' → logprob: -13.29898738861084

Token 192: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.093906931579113
    2. '),' → logprob: -2.718906879425049
    3. ')))' → logprob: -4.093906879425049
    4. '()))' → logprob: -6.093906879425049
    5. ')),' → logprob: -6.468906879425049
    6. ' ))' → logprob: -6.718906879425049
    7. ' ' → logprob: -6.843906879425049
    8. '()),' → logprob: -8.343907356262207
    9. ' ),' → logprob: -8.593907356262207
    10. '  ' → logprob: -8.843907356262207

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003448792558629066
    2. ' ' → logprob: -8.000345230102539
    3. ')' → logprob: -12.625345230102539
    4. '   ' → logprob: -12.750345230102539
    5. '  ' → logprob: -13.125345230102539
    6. '))' → logprob: -15.187845230102539
    7. '
' → logprob: -15.687845230102539
    8. '0' → logprob: -16.50034523010254
    9. '=' → logprob: -16.75034523010254
    10. '    ' → logprob: -16.81284523010254

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032485672272741795
    2. ' ' → logprob: -8.125325202941895
    3. ')' → logprob: -10.875325202941895
    4. '   ' → logprob: -12.625325202941895
    5. '  ' → logprob: -12.875325202941895
    6. '0' → logprob: -13.937825202941895
    7. '
' → logprob: -15.062825202941895
    8. '))' → logprob: -15.062825202941895
    9. 'ans' → logprob: -15.437825202941895
    10. '```' → logprob: -15.562825202941895

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031508569372817874
    2. ' )' → logprob: -8.375314712524414
    3. ')*' → logprob: -10.750314712524414
    4. '))' → logprob: -11.000314712524414
    5. 'for' → logprob: -11.125314712524414
    6. ' for' → logprob: -11.375314712524414
    7. '   ' → logprob: -11.875314712524414
    8. ')+' → logprob: -12.125314712524414
    9. ',' → logprob: -12.875314712524414
    10. ')
' → logprob: -13.375314712524414

Token 196: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08919811993837357
    2. 'for' → logprob: -2.464198112487793
    3. ')' → logprob: -8.964198112487793
    4. '   ' → logprob: -9.339198112487793
    5. ' ' → logprob: -10.464198112487793
    6. '	for' → logprob: -11.964198112487793
    7. '  ' → logprob: -13.589198112487793
    8. ' )' → logprob: -13.589198112487793
    9. '    ' → logprob: -13.714198112487793
    10. ' +' → logprob: -13.714198112487793

Token 197: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5389270782470703
    2. ' t' → logprob: -0.9139270782470703
    3. ' trip' → logprob: -4.78892707824707
    4. 'trip' → logprob: -4.91392707824707
    5. ' ' → logprob: -12.53892707824707
    6. ')' → logprob: -12.66392707824707
    7. ')t' → logprob: -13.28892707824707
    8. '	t' → logprob: -13.53892707824707
    9. '_trip' → logprob: -13.78892707824707
    10. 'tr' → logprob: -14.03892707824707

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07906680554151535
    2. 'in' → logprob: -3.329066753387451
    3. 'trip' → logprob: -3.579066753387451
    4. ' trip' → logprob: -4.704066753387451
    5. '(tr' → logprob: -6.329066753387451
    6. ')' → logprob: -6.954066753387451
    7. 'tr' → logprob: -8.45406723022461
    8. '(' → logprob: -9.07906723022461
    9. 's' → logprob: -10.32906723022461
    10. ' )' → logprob: -11.07906723022461

Token 199: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.0059335362166166306
    2. ' trip' → logprob: -5.13093376159668
    3. 'tr' → logprob: -12.50593376159668
    4. 'tri' → logprob: -15.63093376159668
    5. ' ' → logprob: -15.88093376159668
    6. 'trap' → logprob: -15.88093376159668
    7. ')' → logprob: -16.00593376159668
    8. 'filter' → logprob: -16.25593376159668
    9. '.trip' → logprob: -16.25593376159668
    10. 'list' → logprob: -16.50593376159668

Token 200: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.0009277798235416412
    2. 'ets' → logprob: -7.000927925109863
    3. 'let' → logprob: -12.250927925109863
    4. 'ts' → logprob: -12.250927925109863
    5. 'plets' → logprob: -12.750927925109863
    6. 'elts' → logprob: -13.500927925109863
    7. ')' → logprob: -14.750927925109863
    8. 'les' → logprob: -15.000927925109863
    9. 's' → logprob: -15.000927925109863
    10. 'els' → logprob: -15.375927925109863

Token 201: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -4.127333340875339e-06
    2. 'k' → logprob: -13.125003814697266
    3. ' (' → logprob: -13.500003814697266
    4. ')' → logprob: -14.500003814697266
    5. '(' → logprob: -16.250003814697266
    6. ')(' → logprob: -17.000003814697266
    7. '(n' → logprob: -17.125003814697266
    8. ' k' → logprob: -17.250003814697266
    9. '=k' → logprob: -18.125003814697266
    10. '```' → logprob: -18.500003814697266

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804642707109451
    2. '))' → logprob: -3.288046360015869
    3. ')))' → logprob: -12.413046836853027
    4. ' )' → logprob: -14.788046836853027
    5. ')
' → logprob: -15.913046836853027
    6. ')}' → logprob: -16.53804588317871
    7. '})' → logprob: -16.91304588317871
    8. '));' → logprob: -17.28804588317871
    9. '])' → logprob: -17.28804588317871
    10. ')`' → logprob: -17.28804588317871

Token 203: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. '))' → logprob: -12.625003814697266
    3. ')
' → logprob: -14.875003814697266
    4. ' )' → logprob: -14.875003814697266
    5. ')`' → logprob: -16.500003814697266
    6. ')}' → logprob: -17.500003814697266
    7. ')#' → logprob: -17.875003814697266
    8. ')))' → logprob: -17.875003814697266
    9. ')**' → logprob: -18.125003814697266
    10. ')t' → logprob: -19.250003814697266

Token 204: ' len' (ID: 4631)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6293618679046631
    2. 'sum' → logprob: -1.629361867904663
    3. 'True' → logprob: -2.129361867904663
    4. 't' → logprob: -2.504361867904663
    5. ' all' → logprob: -3.379361867904663
    6. 'reduce' → logprob: -4.754362106323242
    7. 'len' → logprob: -5.129362106323242
    8. 'x' → logprob: -5.254362106323242
    9. ' True' → logprob: -5.504362106323242
    10. 'k' → logprob: -5.879362106323242

Token 205: '(set' (ID: 25904)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.03680957481265068
    2. '(set' → logprob: -3.4118096828460693
    3. '(' → logprob: -6.41180944442749
    4. 't' → logprob: -7.66180944442749
    5. '({' → logprob: -7.78680944442749
    6. '(x' → logprob: -7.78680944442749
    7. '(ans' → logprob: -9.911809921264648
    8. '(s' → logprob: -10.286809921264648
    9. 'set' → logprob: -11.161809921264648
    10. '{' → logprob: -11.161809921264648

Token 206: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.3451433409936726e-05
    2. 't' → logprob: -10.500033378601074
    3. '(' → logprob: -12.750033378601074
    4. ' (' → logprob: -12.875033378601074
    5. ' t' → logprob: -15.750033378601074
    6. '(
' → logprob: -15.875033378601074
    7. ')t' → logprob: -18.12503433227539
    8. '(s' → logprob: -18.25003433227539
    9. '	t' → logprob: -18.62503433227539
    10. ')' → logprob: -19.12503433227539

Token 207: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010680586565285921
    2. ')==' → logprob: -7.376068115234375
    3. ' )' → logprob: -8.251068115234375
    4. '())' → logprob: -9.001068115234375
    5. ')!=' → logprob: -10.501068115234375
    6. ')<' → logprob: -11.876068115234375
    7. '(t' → logprob: -12.001068115234375
    8. '))' → logprob: -12.251068115234375
    9. ')>' → logprob: -12.626068115234375
    10. ')=' → logprob: -13.251068115234375

Token 208: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6530062556266785
    2. '==' → logprob: -1.1530063152313232
    3. ' ==' → logprob: -2.7780063152313232
    4. '>' → logprob: -3.0280063152313232
    5. '<' → logprob: -3.9030063152313232
    6. ')==' → logprob: -5.278006076812744
    7. '!=' → logprob: -5.278006076812744
    8. '()==' → logprob: -5.403006076812744
    9. ' <' → logprob: -5.778006076812744
    10. '()' → logprob: -5.778006076812744

Token 209: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08016207069158554
    2. '1' → logprob: -2.5801620483398438
    3. '2' → logprob: -7.205162048339844
    4. ' ' → logprob: -7.580162048339844
    5. 'len' → logprob: -11.830162048339844
    6. 'k' → logprob: -12.955162048339844
    7. '   ' → logprob: -13.517662048339844
    8. '```' → logprob: -13.642662048339844
    9. '
' → logprob: -13.830162048339844
    10. '  ' → logprob: -13.955162048339844

Token 210: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03836734965443611
    2. '1' → logprob: -3.28836727142334
    3. ' ' → logprob: -8.53836727142334
    4. '2' → logprob: -9.03836727142334
    5. 'len' → logprob: -12.72586727142334
    6. '
' → logprob: -12.78836727142334
    7. 'k' → logprob: -14.03836727142334
    8. '```' → logprob: -14.28836727142334
    9. ')' → logprob: -14.35086727142334
    10. '   ' → logprob: -14.53836727142334

Token 211: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004598631348926574
    2. '))' → logprob: -7.750459671020508
    3. ' )' → logprob: -10.875459671020508
    4. ' or' → logprob: -12.750459671020508
    5. ')))' → logprob: -12.750459671020508
    6. ')+' → logprob: -13.250459671020508
    7. ')
' → logprob: -14.375459671020508
    8. ')**' → logprob: -15.000459671020508
    9. '),' → logprob: -15.250459671020508
    10. 'or' → logprob: -15.500459671020508

Token 212: ' t' (ID: 260)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3159288167953491
    2. ' len' → logprob: -1.3159288167953491
    3. '(len' → logprob: -7.190928936004639
    4. '   ' → logprob: -7.440928936004639
    5. ' ' → logprob: -8.44092845916748
    6. 'sum' → logprob: -8.56592845916748
    7. ' (' → logprob: -8.81592845916748
    8. ' sum' → logprob: -9.06592845916748
    9. '  ' → logprob: -9.19092845916748
    10. '    ' → logprob: -9.44092845916748

Token 213: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013472783379256725
    2. '<|end|>' → logprob: -5.888472557067871
    3. '.' → logprob: -6.513472557067871
    4. ' in' → logprob: -6.638472557067871
    5. '==' → logprob: -6.638472557067871
    6. ',' → logprob: -6.763472557067871
    7. ')' → logprob: -7.013472557067871
    8. ' not' → logprob: -7.263472557067871
    9. 'not' → logprob: -7.513472557067871
    10. ' ==' → logprob: -8.138472557067871

Token 214: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15182040631771088
    2. '1' → logprob: -2.026820421218872
    3. '2' → logprob: -4.776820182800293
    4. ' ' → logprob: -7.776820182800293
    5. '[' → logprob: -9.901820182800293
    6. '-' → logprob: -9.901820182800293
    7. ':' → logprob: -10.276820182800293
    8. ']' → logprob: -10.401820182800293
    9. '   ' → logprob: -11.339320182800293
    10. '```' → logprob: -11.464320182800293

Token 215: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15449181199073792
    2. '==' → logprob: -2.654491901397705
    3. ' <' → logprob: -3.654491901397705
    4. ' !=' → logprob: -3.904491901397705
    5. ' <=' → logprob: -4.029491901397705
    6. ' >' → logprob: -6.154491901397705
    7. '<' → logprob: -6.279491901397705
    8. '!=' → logprob: -6.404491901397705
    9. ' ' → logprob: -7.029491901397705
    10. '<=' → logprob: -7.154491901397705

Token 216: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5967015027999878
    2. ' ==' → logprob: -0.8467015027999878
    3. '!=' → logprob: -4.596701622009277
    4. ' !=' → logprob: -4.971701622009277
    5. '<=' → logprob: -7.096701622009277
    6. ' <=' → logprob: -7.221701622009277
    7. '>' → logprob: -7.471701622009277
    8. ' >' → logprob: -7.721701622009277
    9. ' ' → logprob: -8.596701622009277
    10. '<' → logprob: -8.596701622009277

Token 217: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.027039101347327232
    2. '0' → logprob: -4.152039051055908
    3. ' t' → logprob: -4.902039051055908
    4. '(t' → logprob: -6.277039051055908
    5. '(' → logprob: -7.652039051055908
    6. 'k' → logprob: -8.152039527893066
    7. '2' → logprob: -8.277039527893066
    8. ' ' → logprob: -8.902039527893066
    9. '((' → logprob: -8.902039527893066
    10. ' (' → logprob: -9.152039527893066

Token 218: 'k' (ID: 74)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00331852282397449
    2. '(t' → logprob: -6.8783183097839355
    3. '0' → logprob: -7.0033183097839355
    4. '(' → logprob: -7.5033183097839355
    5. ' t' → logprob: -8.253318786621094
    6. 'k' → logprob: -8.378318786621094
    7. '(k' → logprob: -8.878318786621094
    8. ')' → logprob: -9.378318786621094
    9. ')t' → logprob: -10.503318786621094
    10. '   ' → logprob: -10.878318786621094

Token 219: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46220269799232483
    2. 't' → logprob: -1.4622026681900024
    3. '2' → logprob: -3.087202787399292
    4. '[' → logprob: -3.462202787399292
    5. ' -' → logprob: -3.962202787399292
    6. '0' → logprob: -4.212202548980713
    7. '1' → logprob: -4.462202548980713
    8. ' t' → logprob: -5.087202548980713
    9. ')' → logprob: -5.837202548980713
    10. ' ' → logprob: -6.087202548980713

Token 220: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0027305749244987965
    2. ' t' → logprob: -6.127730369567871
    3. '1' → logprob: -7.752730369567871
    4. '(t' → logprob: -9.502730369567871
    5. '2' → logprob: -10.627730369567871
    6. '(' → logprob: -12.127730369567871
    7. ')' → logprob: -12.877730369567871
    8. ' ' → logprob: -13.502730369567871
    9. ')t' → logprob: -13.502730369567871
    10. '	t' → logprob: -13.627730369567871

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.51347815990448
    2. '2' → logprob: -1.38847815990448
    3. '0' → logprob: -1.88847815990448
    4. 't' → logprob: -8.38847827911377
    5. '(' → logprob: -8.51347827911377
    6. '1' → logprob: -9.01347827911377
    7. ' ' → logprob: -9.13847827911377
    8. '-' → logprob: -10.63847827911377
    9. ' [' → logprob: -10.88847827911377
    10. '
' → logprob: -10.88847827911377

Token 222: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08901548385620117
    2. '0' → logprob: -2.464015483856201
    3. 't' → logprob: -9.83901596069336
    4. '1' → logprob: -11.08901596069336
    5. '(' → logprob: -13.33901596069336
    6. '[' → logprob: -13.46401596069336
    7. ' ' → logprob: -13.46401596069336
    8. '
' → logprob: -14.65151596069336
    9. '(t' → logprob: -14.83901596069336
    10. '   ' → logprob: -14.90151596069336

Token 223: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07521233707666397
    2. '[' → logprob: -3.325212240219116
    3. ')])' → logprob: -3.950212240219116
    4. ')%' → logprob: -4.825212478637695
    5. '))' → logprob: -5.450212478637695
    6. ')]' → logprob: -5.825212478637695
    7. '-' → logprob: -7.325212478637695
    8. '])' → logprob: -7.825212478637695
    9. ')))' → logprob: -8.325212478637695
    10. ' )' → logprob: -8.700212478637695

Token 224: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07211772352457047
    2. ' or' → logprob: -2.822117805480957
    3. ' )' → logprob: -4.822117805480957
    4. '[' → logprob: -6.947117805480957
    5. 'or' → logprob: -7.822117805480957
    6. ' and' → logprob: -9.322117805480957
    7. '))' → logprob: -9.322117805480957
    8. '3' → logprob: -9.572117805480957
    9. ' ' → logprob: -9.697117805480957
    10. '<|end|>' → logprob: -9.697117805480957

Token 225: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.15310683415737e-05
    2. ' k' → logprob: -10.750021934509277
    3. ')' → logprob: -19.50002098083496
    4. '	k' → logprob: -21.00002098083496
    5. '{k' → logprob: -21.37502098083496
    6. 'kx' → logprob: -21.37502098083496
    7. ' ' → logprob: -22.37502098083496
    8. ',k' → logprob: -22.62502098083496
    9. 'x' → logprob: -23.00002098083496
    10. ' к' → logprob: -23.00002098083496

Token 226: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022226988803595304
    2. '))' → logprob: -6.877222537994385
    3. ' or' → logprob: -7.127222537994385
    4. ' )' → logprob: -8.127223014831543
    5. ')))' → logprob: -9.752223014831543
    6. ' and' → logprob: -11.502223014831543
    7. 'or' → logprob: -12.502223014831543
    8. '  ' → logprob: -12.877223014831543
    9. ' ' → logprob: -13.002223014831543
    10. ')
' → logprob: -13.127223014831543

Token 227: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18377432227134705
    2. ' t' → logprob: -1.8087743520736694
    3. '(t' → logprob: -6.308774471282959
    4. ' (' → logprob: -7.433774471282959
    5. '   ' → logprob: -8.0587739944458
    6. '    ' → logprob: -8.3087739944458
    7. ' ' → logprob: -8.9337739944458
    8. 'k' → logprob: -9.0587739944458
    9. '  ' → logprob: -9.1837739944458
    10. ' all' → logprob: -9.4337739944458

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.145118848304264e-05
    2. ' [' → logprob: -11.375051498413086
    3. '(' → logprob: -11.625051498413086
    4. ']' → logprob: -11.625051498413086
    5. '[
' → logprob: -13.000051498413086
    6. '2' → logprob: -13.125051498413086
    7. ')' → logprob: -13.250051498413086
    8. '0' → logprob: -13.375051498413086
    9. ' ' → logprob: -13.500051498413086
    10. '   ' → logprob: -13.500051498413086

Token 229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004284043679945171
    2. '0' → logprob: -8.000428199768066
    3. '1' → logprob: -9.750428199768066
    4. '[' → logprob: -11.125428199768066
    5. '(' → logprob: -11.250428199768066
    6. ' ' → logprob: -12.750428199768066
    7. '
' → logprob: -13.750428199768066
    8. '```' → logprob: -14.000428199768066
    9. '   ' → logprob: -15.812928199768066
    10. ']' → logprob: -15.875428199768066

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6851529479026794
    2. ' ==' → logprob: -0.9351529479026794
    3. ')' → logprob: -3.060153007507324
    4. '==' → logprob: -3.310153007507324
    5. ']==' → logprob: -4.185153007507324
    6. '[' → logprob: -6.185153007507324
    7. ' ]' → logprob: -6.560153007507324
    8. ' )' → logprob: -7.935153007507324
    9. ')==' → logprob: -8.060153007507324
    10. ' ' → logprob: -8.060153007507324

Token 231: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08901166170835495
    2. '==' → logprob: -2.4640116691589355
    3. ')' → logprob: -10.464011192321777
    4. '=' → logprob: -11.464011192321777
    5. ' ' → logprob: -11.464011192321777
    6. '==(' → logprob: -11.839011192321777
    7. ')==' → logprob: -12.339011192321777
    8. ' <=' → logprob: -13.214011192321777
    9. ' =' → logprob: -13.214011192321777
    10. ' !=' → logprob: -13.714011192321777

Token 232: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.4928576648235321
    2. ' (' → logprob: -1.1178576946258545
    3. '(t' → logprob: -3.4928576946258545
    4. '(' → logprob: -3.7428576946258545
    5. 't' → logprob: -4.992857456207275
    6. ' t' → logprob: -7.242857456207275
    7. '0' → logprob: -8.492857933044434
    8. '((' → logprob: -8.742857933044434
    9. ' ' → logprob: -10.117857933044434
    10. 'k' → logprob: -10.367857933044434

Token 233: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.1460629552602768
    2. 't' → logprob: -2.6460628509521484
    3. '(' → logprob: -3.0210628509521484
    4. ' (' → logprob: -5.271062850952148
    5. 'k' → logprob: -5.396062850952148
    6. '(t' → logprob: -5.646062850952148
    7. '(-' → logprob: -6.521062850952148
    8. ' t' → logprob: -7.271062850952148
    9. '0' → logprob: -7.646062850952148
    10. '((' → logprob: -9.146062850952148

Token 234: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0015367622254416347
    2. '-' → logprob: -6.501536846160889
    3. '[' → logprob: -11.37653636932373
    4. ' ' → logprob: -11.75153636932373
    5. ')' → logprob: -12.25153636932373
    6. 't' → logprob: -12.62653636932373
    7. '-t' → logprob: -13.12653636932373
    8. ' -
' → logprob: -13.62653636932373
    9. ' t' → logprob: -13.75153636932373
    10. ',' → logprob: -14.50153636932373

Token 235: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.397946834564209
    2. '(t' → logprob: -1.147946834564209
    3. '((' → logprob: -5.272946834564209
    4. ' (' → logprob: -6.772946834564209
    5. ' t' → logprob: -6.772946834564209
    6. '(' → logprob: -6.897946834564209
    7. '(add' → logprob: -7.022946834564209
    8. 'sum' → logprob: -7.272946834564209
    9. '(sum' → logprob: -7.897946834564209
    10. 'add' → logprob: -8.022947311401367

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009144973941147327
    2. '1' → logprob: -4.7591447830200195
    3. '0' → logprob: -7.8841447830200195
    4. '(' → logprob: -9.00914478302002
    5. '
' → logprob: -11.13414478302002
    6. '[
' → logprob: -13.00914478302002
    7. ' [' → logprob: -13.25914478302002
    8. '

' → logprob: -13.63414478302002
    9. ']' → logprob: -13.75914478302002
    10. '   ' → logprob: -14.00914478302002

Token 237: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06217651069164276
    2. '0' → logprob: -2.812176465988159
    3. '(' → logprob: -8.812176704406738
    4. '[' → logprob: -9.937176704406738
    5. 'sum' → logprob: -12.812176704406738
    6. '
' → logprob: -12.937176704406738
    7. ']' → logprob: -13.437176704406738
    8. 'tuple' → logprob: -14.249676704406738
    9. '2' → logprob: -14.437176704406738
    10. '((' → logprob: -14.624676704406738

Token 238: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005093070212751627
    2. ')%' → logprob: -8.625509262084961
    3. '])' → logprob: -9.250509262084961
    4. '))' → logprob: -9.375509262084961
    5. '[' → logprob: -9.875509262084961
    6. ' )' → logprob: -10.250509262084961
    7. '})' → logprob: -11.000509262084961
    8. '`)' → logprob: -11.500509262084961
    9. '   ' → logprob: -12.375509262084961
    10. '2' → logprob: -12.500509262084961

Token 239: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03466067090630531
    2. ')%' → logprob: -3.409660577774048
    3. ' )' → logprob: -7.659660816192627
    4. '%' → logprob: -7.659660816192627
    5. '[' → logprob: -10.909660339355469
    6. '%)' → logprob: -11.409660339355469
    7. ' %' → logprob: -11.409660339355469
    8. '))' → logprob: -11.909660339355469
    9. ' ' → logprob: -12.159660339355469
    10. ')
' → logprob: -12.284660339355469

Token 240: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4741615951061249
    2. ' k' → logprob: -0.9741616249084473
    3. ')' → logprob: -9.974161148071289
    4. ' ' → logprob: -11.474161148071289
    5. ' ' → logprob: -12.099161148071289
    6. '(k' → logprob: -12.224161148071289
    7. '_k' → logprob: -12.349161148071289
    8. '(' → logprob: -13.411661148071289
    9. '	k' → logprob: -13.661661148071289
    10. '2' → logprob: -13.661661148071289

Token 241: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002576251979917288
    2. '))' → logprob: -6.0025763511657715
    3. ')))' → logprob: -9.752575874328613
    4. ' )' → logprob: -10.252575874328613
    5. ')
' → logprob: -13.877575874328613
    6. ')#' → logprob: -14.252575874328613
    7. '),' → logprob: -14.377575874328613
    8. '  ' → logprob: -14.752575874328613
    9. ')])' → logprob: -14.752575874328613
    10. '')' → logprob: -14.752575874328613

Token 242: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026654504239559174
    2. '<|end|>' → logprob: -3.7766544818878174
    3. '
' → logprob: -6.0266547203063965
    4. '+' → logprob: -7.9016547203063965
    5. '#' → logprob: -8.776654243469238
    6. ')
' → logprob: -9.151654243469238
    7. ' )' → logprob: -9.526654243469238
    8. ':' → logprob: -9.776654243469238
    9. '<|end|>' → logprob: -10.026654243469238
    10. ' ' → logprob: -10.151654243469238

Token 243: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006736453622579575
    2. '(' → logprob: -5.0067362785339355
    3. ' (' → logprob: -12.381736755371094
    4. '(abs' → logprob: -12.506736755371094
    5. '('' → logprob: -12.881736755371094
    6. '(
' → logprob: -12.881736755371094
    7. '(len' → logprob: -13.256736755371094
    8. 'ans' → logprob: -13.381736755371094
    9. '()' → logprob: -13.881736755371094
    10. '((' → logprob: -13.881736755371094

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. '))' → logprob: -12.625006675720215
    3. ' )' → logprob: -13.000006675720215
    4. ')`' → logprob: -14.625006675720215
    5. ')
' → logprob: -15.000006675720215
    6. '())' → logprob: -15.625006675720215
    7. '()' → logprob: -15.875006675720215
    8. '+' → logprob: -15.875006675720215
    9. '`)' → logprob: -16.00000762939453
    10. '')' → logprob: -16.87500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 242
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 185
Précision stricte (1ère position): 33.06%
Précision adaptée (1ère position): 33.06%
Précision (top 10): 76.45%
================================================================================
