================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
first_number, second_number, third_number = map(int, input().split())

if first_number == second_number and first_number != third_number:
    
    print("Yes")

elif first_number == third_number and second_number != third_number:
    
    print("Yes")

elif third_number == second_number and first_number != third_number:
    
    print("Yes")

else:
    
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'first' (ID: 7743)
  → Token d'amorce (pas de prédiction)

Token 1: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.36099112033843994
    2. 'second' → logprob: -1.36099112033844
    3. ' ' → logprob: -3.1109910011291504
    4. '_' → logprob: -8.110991477966309
    5. '_second' → logprob: -8.110991477966309
    6. ' space' → logprob: -8.110991477966309
    7. ' next' → logprob: -8.235991477966309
    8. ' ,' → logprob: -8.485991477966309
    9. 'space' → logprob: -8.610991477966309
    10. ' ' → logprob: -8.735991477966309

Token 4: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.047787394374608994
    2. '```' → logprob: -3.9227874279022217
    3. '_,' → logprob: -5.297787189483643
    4. ',' → logprob: -5.672787189483643
    5. ')_' → logprob: -5.672787189483643
    6. '_number' → logprob: -5.797787189483643
    7. '=' → logprob: -6.047787189483643
    8. ',_' → logprob: -6.047787189483643
    9. ')' → logprob: -6.172787189483643
    10. '_=' → logprob: -6.672787189483643

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17639930546283722
    2. '+' → logprob: -2.8013992309570312
    3. ',' → logprob: -3.1763992309570312
    4. '_' → logprob: -3.3013992309570312
    5. ' =' → logprob: -4.051399230957031
    6. '```' → logprob: -5.801399230957031
    7. '*' → logprob: -7.926399230957031
    8. ')' → logprob: -8.051399230957031
    9. '.' → logprob: -8.176399230957031
    10. '**' → logprob: -8.551399230957031

Token 6: ' third' (ID: 6914)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9720264673233032
    2. ' ' → logprob: -0.9720264673233032
    3. 'third' → logprob: -2.5970263481140137
    4. ' =' → logprob: -2.8470263481140137
    5. ',' → logprob: -2.8470263481140137
    6. '_' → logprob: -3.3470263481140137
    7. '```' → logprob: -5.597026348114014
    8. ' third' → logprob: -5.722026348114014
    9. ' ,' → logprob: -6.347026348114014
    10. ')' → logprob: -6.722026348114014

Token 7: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34241363406181335
    2. '```' → logprob: -2.5924136638641357
    3. '_number' → logprob: -2.8424136638641357
    4. '=' → logprob: -2.9674136638641357
    5. '_=' → logprob: -3.8424136638641357
    6. '=_' → logprob: -4.092413425445557
    7. '_,' → logprob: -4.092413425445557
    8. ')_' → logprob: -4.592413425445557
    9. ' _' → logprob: -4.717413425445557
    10. ')' → logprob: -5.217413425445557

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21437859535217285
    2. '_' → logprob: -2.339378595352173
    3. ' =' → logprob: -2.964378595352173
    4. ',' → logprob: -3.214378595352173
    5. '+' → logprob: -5.964378356933594
    6. '```' → logprob: -7.214378356933594
    7. '.' → logprob: -7.464378356933594
    8. ' ' → logprob: -8.464378356933594
    9. ')' → logprob: -8.464378356933594
    10. '_=' → logprob: -9.339378356933594

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.062393587082624435
    2. '0' → logprob: -2.8123936653137207
    3. '1' → logprob: -8.437393188476562
    4. ' [' → logprob: -8.687393188476562
    5. '[' → logprob: -10.812393188476562
    6. '10' → logprob: -12.187393188476562
    7. ' (' → logprob: -12.562393188476562
    8. ' map' → logprob: -13.312393188476562
    9. '42' → logprob: -13.312393188476562
    10. 'input' → logprob: -13.687393188476562

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16852954030036926
    2. '(lambda' → logprob: -2.043529510498047
    3. '<|end|>' → logprob: -4.043529510498047
    4. '```' → logprob: -5.418529510498047
    5. '<|end|>' → logprob: -7.793529510498047
    6. '(token' → logprob: -8.168529510498047
    7. ')' → logprob: -8.293529510498047
    8. '[' → logprob: -8.293529510498047
    9. '(int' → logprob: -8.418529510498047
    10. '(str' → logprob: -8.543529510498047

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5407618880271912
    2. '(' → logprob: -1.540761947631836
    3. ')' → logprob: -1.790761947631836
    4. '(user' → logprob: -3.915761947631836
    5. '('' → logprob: -5.290761947631836
    6. '<|end|>' → logprob: -5.540761947631836
    7. '(raw' → logprob: -7.040761947631836
    8. '(first' → logprob: -7.540761947631836
    9. '(token' → logprob: -7.665761947631836
    10. '("' → logprob: -7.790761947631836

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06202784180641174
    2. ' input' → logprob: -2.812027931213379
    3. '(input' → logprob: -9.937027931213379
    4. ')' → logprob: -11.687027931213379
    5. 'user' → logprob: -13.437027931213379
    6. '=input' → logprob: -14.687027931213379
    7. '<input' → logprob: -14.687027931213379
    8. ',input' → logprob: -15.062027931213379
    9. '[input' → logprob: -15.687027931213379
    10. '```' → logprob: -15.812027931213379

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22377508878707886
    2. '())' → logprob: -1.7237751483917236
    3. '('' → logprob: -5.0987749099731445
    4. '(' → logprob: -5.0987749099731445
    5. '().' → logprob: -5.5987749099731445
    6. ')' → logprob: -6.4737749099731445
    7. '(()' → logprob: -6.5987749099731445
    8. '`()' → logprob: -7.7237749099731445
    9. '());' → logprob: -7.7237749099731445
    10. '();)' → logprob: -7.9737749099731445

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.256334695033729e-05
    2. 'strip' → logprob: -9.500082969665527
    3. ' split' → logprob: -12.125082969665527
    4. 'rstrip' → logprob: -13.250082969665527
    5. '(split' → logprob: -15.250082969665527
    6. 'spl' → logprob: -16.00008201599121
    7. 'startswith' → logprob: -16.62508201599121
    8. ')' → logprob: -16.62508201599121
    9. '```' → logprob: -16.87508201599121
    10. 'replace' → logprob: -17.00008201599121

Token 15: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12111473828554153
    2. ')' → logprob: -2.246114730834961
    3. '()' → logprob: -5.746114730834961
    4. '()))' → logprob: -5.746114730834961
    5. '))' → logprob: -6.496114730834961
    6. '(' → logprob: -9.246114730834961
    7. '`)' → logprob: -9.871114730834961
    8. '```' → logprob: -9.996114730834961
    9. ' ())' → logprob: -10.371114730834961
    10. '('' → logprob: -10.621114730834961

Token 16: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05054429545998573
    2. '<|end|>' → logprob: -4.550544261932373
    3. ',' → logprob: -4.800544261932373
    4. '#' → logprob: -4.925544261932373
    5. '+
' → logprob: -5.300544261932373
    6. '.' → logprob: -5.550544261932373
    7. 'if' → logprob: -5.800544261932373
    8. '*' → logprob: -5.925544261932373
    9. ':' → logprob: -6.425544261932373
    10. ')' → logprob: -6.550544261932373

Token 17: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.15519046783447266
    2. ' ' → logprob: -2.0301904678344727
    3. 'first' → logprob: -4.405190467834473
    4. '  ' → logprob: -9.030190467834473
    5. ' not' → logprob: -10.280190467834473
    6. ' ' → logprob: -11.030190467834473
    7. '	first' → logprob: -11.030190467834473
    8. '(first' → logprob: -11.655190467834473
    9. ' second' → logprob: -11.780190467834473
    10. ' third' → logprob: -12.155190467834473

Token 18: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002723917830735445
    2. '_number' → logprob: -6.377723693847656
    3. ' _' → logprob: -7.377723693847656
    4. ' ' → logprob: -8.627723693847656
    5. '_space' → logprob: -8.877723693847656
    6. '_numbers' → logprob: -11.377723693847656
    7. '  ' → logprob: -11.752723693847656
    8. ' ==' → logprob: -12.002723693847656
    9. '_second' → logprob: -12.127723693847656
    10. '_first' → logprob: -12.252723693847656

Token 19: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04997586831450462
    2. ' ==' → logprob: -3.674975872039795
    3. ' <' → logprob: -4.549975872039795
    4. ' %' → logprob: -5.299975872039795
    5. ' >=' → logprob: -5.799975872039795
    6. ' ' → logprob: -6.049975872039795
    7. '>' → logprob: -6.924975872039795
    8. '  ' → logprob: -7.549975872039795
    9. ' <=' → logprob: -8.049975395202637
    10. ' !=' → logprob: -8.924975395202637

Token 20: ' second' (ID: 3099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5070616602897644
    2. 'second' → logprob: -1.6320617198944092
    3. ' second' → logprob: -1.6320617198944092
    4. '0' → logprob: -5.75706148147583
    5. '=' → logprob: -5.88206148147583
    6. '3' → logprob: -8.882061958312988
    7. ''' → logprob: -9.132061958312988
    8. ' ' → logprob: -9.257061958312988
    9. ' =' → logprob: -9.882061958312988
    10. '"' → logprob: -10.007061958312988

Token 21: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02096748724579811
    2. '_number' → logprob: -4.145967483520508
    3. ' _' → logprob: -6.395967483520508
    4. ''_' → logprob: -6.770967483520508
    5. '_:' → logprob: -7.395967483520508
    6. '_space' → logprob: -8.145967483520508
    7. ':' → logprob: -8.645967483520508
    8. ' and' → logprob: -9.020967483520508
    9. ')_' → logprob: -9.520967483520508
    10. ''' → logprob: -9.645967483520508

Token 22: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2309185266494751
    2. ' and' → logprob: -1.605918526649475
    3. 'and' → logprob: -5.9809184074401855
    4. ' :' → logprob: -6.2309184074401855
    5. ' ==' → logprob: -8.105918884277344
    6. ' ' → logprob: -8.855918884277344
    7. '   ' → logprob: -9.230918884277344
    8. '==' → logprob: -9.355918884277344
    9. ' or' → logprob: -9.355918884277344
    10. '=' → logprob: -9.980918884277344

Token 23: ' first' (ID: 1577)
  Prédit: ' third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' third' → logprob: -0.0024714937899261713
    2. ' first' → logprob: -6.752471446990967
    3. ' second' → logprob: -6.877471446990967
    4. ' ' → logprob: -9.002471923828125
    5. 'third' → logprob: -9.252471923828125
    6. ' ' → logprob: -10.002471923828125
    7. '"' → logprob: -13.627471923828125
    8. ''' → logprob: -14.127471923828125
    9. '```' → logprob: -14.252471923828125
    10. '​' → logprob: -14.502471923828125

Token 24: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.001671015052124858
    2. '_' → logprob: -6.501670837402344
    3. '_second' → logprob: -9.876670837402344
    4. ' _' → logprob: -10.001670837402344
    5. '_token' → logprob: -10.876670837402344
    6. '```' → logprob: -10.876670837402344
    7. '_numbers' → logprob: -12.001670837402344
    8. '_code' → logprob: -12.126670837402344
    9. '_n' → logprob: -12.626670837402344
    10. 'number' → logprob: -13.126670837402344

Token 25: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004226085729897022
    2. '==' → logprob: -6.004226207733154
    3. ' >' → logprob: -6.754226207733154
    4. ' <=' → logprob: -8.629225730895996
    5. ' !=' → logprob: -8.879225730895996
    6. '<|end|>' → logprob: -9.004225730895996
    7. ' ' → logprob: -10.129225730895996
    8. ' <' → logprob: -10.504225730895996
    9. ' >=' → logprob: -10.504225730895996
    10. '>' → logprob: -11.129225730895996

Token 26: ' third' (ID: 6914)
  Prédit: ' third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' third' → logprob: -0.38688117265701294
    2. 'third' → logprob: -1.1368811130523682
    3. ' ' → logprob: -11.886880874633789
    4. '.third' → logprob: -13.386880874633789
    5. '第三' → logprob: -14.636880874633789
    6. 'Third' → logprob: -15.636880874633789
    7. 'th' → logprob: -15.761880874633789
    8. ' troisième' → logprob: -16.13688087463379
    9. '   ' → logprob: -16.38688087463379
    10. '-third' → logprob: -16.38688087463379

Token 27: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.002880595624446869
    2. '_' → logprob: -5.877880573272705
    3. ' _' → logprob: -10.752881050109863
    4. '_n' → logprob: -11.002881050109863
    5. '_numbers' → logprob: -12.252881050109863
    6. ''_' → logprob: -12.252881050109863
    7. '_code' → logprob: -12.877881050109863
    8. '_num' → logprob: -12.877881050109863
    9. '```' → logprob: -12.877881050109863
    10. '_value' → logprob: -13.127881050109863

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.881560041918419e-05
    2. ' :' → logprob: -10.750039100646973
    3. ' and' → logprob: -11.250039100646973
    4. ':**' → logprob: -13.375039100646973
    5. 'and' → logprob: -13.875039100646973
    6. ':
' → logprob: -14.250039100646973
    7. '):' → logprob: -14.750039100646973
    8. ',' → logprob: -15.375039100646973
    9. ' or' → logprob: -15.875039100646973
    10. 'or' → logprob: -16.625038146972656

Token 29: '    
' (ID: 1944)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006774345878511667
    2. ' and' → logprob: -5.506774425506592
    3. ':
' → logprob: -6.631774425506592
    4. ' :' → logprob: -7.381774425506592
    5. ' print' → logprob: -7.756774425506592
    6. 'print' → logprob: -9.381773948669434
    7. 'and' → logprob: -9.756773948669434
    8. ' or' → logprob: -9.756773948669434
    9. ',' → logprob: -9.881773948669434
    10. '   ' → logprob: -10.506773948669434

Token 30: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5855796337127686
    2. 'print' → logprob: -1.4605796337127686
    3. '   ' → logprob: -1.5855796337127686
    4. ':' → logprob: -5.335579872131348
    5. '```' → logprob: -7.460579872131348
    6. ' and' → logprob: -8.460579872131348
    7. '    ' → logprob: -8.710579872131348
    8. ':
' → logprob: -8.835579872131348
    9. ' or' → logprob: -9.710579872131348
    10. ' ' → logprob: -9.960579872131348

Token 31: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011057964526116848
    2. ' print' → logprob: -4.5110578536987305
    3. '   ' → logprob: -11.88605785369873
    4. '```' → logprob: -13.26105785369873
    5. 'pass' → logprob: -14.88605785369873
    6. 'pr' → logprob: -15.13605785369873
    7. 'return' → logprob: -15.51105785369873
    8. ' ' → logprob: -15.88605785369873
    9. 'p' → logprob: -15.88605785369873
    10. '`' → logprob: -16.011058807373047

Token 32: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022576119750738144
    2. '(first' → logprob: -3.897576093673706
    3. '("' → logprob: -6.772576332092285
    4. '('' → logprob: -7.647576332092285
    5. '("("' → logprob: -8.647576332092285
    6. '(second' → logprob: -9.397576332092285
    7. '()' → logprob: -9.772576332092285
    8. '(True' → logprob: -10.272576332092285
    9. '((' → logprob: -10.772576332092285
    10. '(max' → logprob: -11.647576332092285

Token 33: 'Yes' (ID: 13022)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.17128467559814453
    2. 'first' → logprob: -2.6712846755981445
    3. 'Third' → logprob: -2.7962846755981445
    4. 'First' → logprob: -4.6712846755981445
    5. 'Yes' → logprob: -5.0462846755981445
    6. '3' → logprob: -5.6712846755981445
    7. ' third' → logprob: -6.1712846755981445
    8. 'Fizz' → logprob: -7.2962846755981445
    9. 'Equal' → logprob: -7.4212846755981445
    10. 'YES' → logprob: -7.5462846755981445

Token 34: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.28182533383369446
    2. ')' → logprob: -1.406825304031372
    3. ',' → logprob: -7.656825542449951
    4. '!")' → logprob: -9.531825065612793
    5. '')' → logprob: -10.281825065612793
    6. ' ")' → logprob: -10.656825065612793
    7. ')")' → logprob: -10.906825065612793
    8. '"' → logprob: -11.281825065612793
    9. '```' → logprob: -11.906825065612793
    10. '!' → logprob: -12.281825065612793

Token 35: 'elif' (ID: 29767)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.11930368095636368
    2. ' second' → logprob: -2.2443037033081055
    3. ' ' → logprob: -5.3693037033081055
    4. ' third' → logprob: -7.2443037033081055
    5. ' ' → logprob: -7.7443037033081055
    6. 'first' → logprob: -7.8693037033081055
    7. 'second' → logprob: -8.369303703308105
    8. ' (' → logprob: -12.119303703308105
    9. ' fourth' → logprob: -12.244303703308105
    10. '	second' → logprob: -12.369303703308105

Token 37: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.130576806142926e-05
    2. '_' → logprob: -11.500031471252441
    3. ' _' → logprob: -11.875031471252441
    4. '_token' → logprob: -12.250031471252441
    5. '_numbers' → logprob: -12.875031471252441
    6. 'Number' → logprob: -13.625031471252441
    7. ' ' → logprob: -14.125031471252441
    8. '_second' → logprob: -14.250031471252441
    9. '```' → logprob: -14.250031471252441
    10. '_code' → logprob: -14.500031471252441

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0028307924512773752
    2. '==' → logprob: -5.877830982208252
    3. ' !=' → logprob: -11.252830505371094
    4. ' ' → logprob: -11.377830505371094
    5. ' >' → logprob: -14.377830505371094
    6. ' <=' → logprob: -15.002830505371094
    7. ' ' → logprob: -15.502830505371094
    8. ' <' → logprob: -16.252830505371094
    9. ' >=' → logprob: -16.877830505371094
    10. '>' → logprob: -17.252830505371094

Token 39: ' third' (ID: 6914)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.10023827850818634
    2. ' third' → logprob: -2.35023832321167
    3. 'second' → logprob: -10.475237846374512
    4. ' second' → logprob: -12.850237846374512
    5. ' ' → logprob: -14.850237846374512
    6. '.third' → logprob: -15.725237846374512
    7. '第三' → logprob: -16.600238800048828
    8. 'th' → logprob: -16.975238800048828
    9. '   ' → logprob: -17.225238800048828
    10. '  ' → logprob: -17.850238800048828

Token 40: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.054500666621607e-06
    2. '_second' → logprob: -13.75000286102295
    3. '_' → logprob: -14.37500286102295
    4. '_numbers' → logprob: -14.75000286102295
    5. ' _' → logprob: -15.12500286102295
    6. '_n' → logprob: -15.25000286102295
    7. '_num' → logprob: -15.87500286102295
    8. '_NUMBER' → logprob: -16.750003814697266
    9. ''_' → logprob: -17.000003814697266
    10. 'umber' → logprob: -17.125003814697266

Token 41: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01505797728896141
    2. 'and' → logprob: -4.2650580406188965
    3. ':' → logprob: -7.5150580406188965
    4. ' ' → logprob: -8.265057563781738
    5. ' :' → logprob: -9.515057563781738
    6. '   ' → logprob: -11.890057563781738
    7. '```' → logprob: -12.640057563781738
    8. '  ' → logprob: -13.140057563781738
    9. '    ' → logprob: -13.390057563781738
    10. ' ' → logprob: -13.890057563781738

Token 42: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.0009081258322112262
    2. ' third' → logprob: -7.875907897949219
    3. 'second' → logprob: -8.500907897949219
    4. ' first' → logprob: -8.625907897949219
    5. ' ' → logprob: -9.125907897949219
    6. ' not' → logprob: -10.625907897949219
    7. '(second' → logprob: -11.750907897949219
    8. ' ' → logprob: -13.000907897949219
    9. '	second' → logprob: -13.750907897949219
    10. '_second' → logprob: -16.00090789794922

Token 43: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23138968646526337
    2. '_number' → logprob: -2.4813897609710693
    3. ' ==' → logprob: -2.6063897609710693
    4. ' ' → logprob: -4.10638952255249
    5. '<|end|>' → logprob: -4.23138952255249
    6. ' !=' → logprob: -4.60638952255249
    7. '==' → logprob: -5.73138952255249
    8. ' _' → logprob: -5.98138952255249
    9. '<|end|>' → logprob: -6.73138952255249
    10. ' ' → logprob: -8.231389999389648

Token 44: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4845559000968933
    2. ' !=' → logprob: -1.234555959701538
    3. '==' → logprob: -2.484555959701538
    4. '!=' → logprob: -4.734555721282959
    5. ' ' → logprob: -7.109555721282959
    6. '<|end|>' → logprob: -9.734556198120117
    7. '=' → logprob: -11.484556198120117
    8. ' ' → logprob: -11.609556198120117
    9. '<|end|>' → logprob: -12.234556198120117
    10. ')' → logprob: -12.484556198120117

Token 45: ' third' (ID: 6914)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.12898260354995728
    2. ' third' → logprob: -2.1289825439453125
    3. 'first' → logprob: -6.5039825439453125
    4. ' first' → logprob: -7.5039825439453125
    5. 'second' → logprob: -13.253982543945312
    6. '.third' → logprob: -13.628982543945312
    7. '第三' → logprob: -15.378982543945312
    8. ' ' → logprob: -15.378982543945312
    9. ' second' → logprob: -15.503982543945312
    10. 'th' → logprob: -15.753982543945312

Token 46: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.125003814697266
    3. 'number' → logprob: -14.125003814697266
    4. '_num' → logprob: -14.375003814697266
    5. '_n' → logprob: -15.000003814697266
    6. '_code' → logprob: -16.500003814697266
    7. 'Number' → logprob: -17.000003814697266
    8. '_numbers' → logprob: -17.125003814697266
    9. '_NUMBER' → logprob: -17.875003814697266
    10. 'umber' → logprob: -17.875003814697266

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.274932143744081e-05
    2. ' :' → logprob: -10.250042915344238
    3. ':
' → logprob: -12.250042915344238
    4. ':

' → logprob: -13.250042915344238
    5. ':**' → logprob: -15.000042915344238
    6. '):' → logprob: -15.250042915344238
    7. ' and' → logprob: -15.750042915344238
    8. 'and' → logprob: -17.875041961669922
    9. '>:' → logprob: -18.125041961669922
    10. '：' → logprob: -18.500041961669922

Token 48: '    
' (ID: 1944)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2520671486854553
    2. '    
' → logprob: -1.8770670890808105
    3. '   ' → logprob: -3.0020670890808105
    4. ' 
' → logprob: -5.2520670890808105
    5. ':
' → logprob: -5.3770670890808105
    6. '   
' → logprob: -5.7520670890808105
    7. ' :' → logprob: -5.8770670890808105
    8. '
' → logprob: -7.1270670890808105
    9. '     
' → logprob: -7.3770670890808105
    10. '  
' → logprob: -7.3770670890808105

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3336179256439209
    2. 'print' → logprob: -1.583617925643921
    3. '    
' → logprob: -2.583617925643921
    4. ' print' → logprob: -6.0836181640625
    5. ' 
' → logprob: -8.4586181640625
    6. '```' → logprob: -8.4586181640625
    7. '  
' → logprob: -9.7086181640625
    8. '   
' → logprob: -9.7086181640625
    9. '
' → logprob: -9.8336181640625
    10. '    
    
' → logprob: -10.5836181640625

Token 50: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012964237248525023
    2. ' print' → logprob: -6.751296520233154
    3. '   ' → logprob: -9.001296043395996
    4. '```' → logprob: -12.876296043395996
    5. '    
' → logprob: -16.001296997070312
    6. ' ' → logprob: -16.501296997070312
    7. '``' → logprob: -16.626296997070312
    8. '	print' → logprob: -16.751296997070312
    9. '  ' → logprob: -18.251296997070312
    10. 'Print' → logprob: -19.626296997070312

Token 51: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16189013421535492
    2. '(' → logprob: -1.9118901491165161
    3. '("("' → logprob: -6.411890029907227
    4. '('' → logprob: -11.161890029907227
    5. '("")' → logprob: -12.661890029907227
    6. '("(' → logprob: -13.286890029907227
    7. '("""' → logprob: -14.036890029907227
    8. '()' → logprob: -14.411890029907227
    9. '(""' → logprob: -14.536890029907227
    10. '(">' → logprob: -14.911890029907227

Token 52: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.005240156780928373
    2. '"' → logprob: -5.255239963531494
    3. ' Yes' → logprob: -13.130240440368652
    4. 'No' → logprob: -13.380240440368652
    5. 'Second' → logprob: -13.755240440368652
    6. 'second' → logprob: -14.130240440368652
    7. 'YES' → logprob: -14.880240440368652
    8. '“Yes' → logprob: -15.005240440368652
    9. ''' → logprob: -15.255240440368652
    10. '"No' → logprob: -16.005239486694336

Token 53: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00278776534833014
    2. ')' → logprob: -6.0027875900268555
    3. '")
' → logprob: -8.252787590026855
    4. ')")' → logprob: -10.002787590026855
    5. '```' → logprob: -12.877787590026855
    6. ')
' → logprob: -13.502787590026855
    7. '")

' → logprob: -13.627787590026855
    8. '')' → logprob: -14.752787590026855
    9. ')")
' → logprob: -15.502787590026855
    10. '"' → logprob: -16.127788543701172

Token 54: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.029782773926854134
    2. 'else' → logprob: -3.529782772064209
    3. ' elif' → logprob: -10.779783248901367
    4. '```' → logprob: -11.904783248901367
    5. ' else' → logprob: -13.029783248901367
    6. 'el' → logprob: -13.404783248901367
    7. 'e' → logprob: -14.404783248901367
    8. '    
' → logprob: -16.654783248901367
    9. 'elseif' → logprob: -16.654783248901367
    10. '	elif' → logprob: -17.029783248901367

Token 55: ' third' (ID: 6914)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.0024968255311250687
    2. 'second' → logprob: -6.002496719360352
    3. ' third' → logprob: -11.002496719360352
    4. ' ' → logprob: -13.127496719360352
    5. '(second' → logprob: -13.627496719360352
    6. ' first' → logprob: -14.002496719360352
    7. '	second' → logprob: -14.752496719360352
    8. 'third' → logprob: -16.50249671936035
    9. ' ' → logprob: -17.12749671936035
    10. '_second' → logprob: -18.12749671936035

Token 56: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.001348211313597858
    2. '_' → logprob: -6.62634801864624
    3. '_num' → logprob: -12.376348495483398
    4. ' _' → logprob: -12.376348495483398
    5. '_n' → logprob: -12.876348495483398
    6. '_second' → logprob: -12.876348495483398
    7. '_numbers' → logprob: -13.251348495483398
    8. '_user' → logprob: -13.751348495483398
    9. '_code' → logprob: -13.876348495483398
    10. '_name' → logprob: -14.501348495483398

Token 57: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694017589092255
    2. '==' → logprob: -2.1269402503967285
    3. ' ' → logprob: -11.62693977355957
    4. ' !=' → logprob: -13.12693977355957
    5. '=' → logprob: -14.50193977355957
    6. '!=' → logprob: -15.75193977355957
    7. '==
' → logprob: -15.87693977355957
    8. ' ' → logprob: -16.12693977355957
    9. '>' → logprob: -16.75193977355957
    10. ')' → logprob: -17.00193977355957

Token 58: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.00081487005809322
    2. 'first' → logprob: -7.500814914703369
    3. ' second' → logprob: -8.250814437866211
    4. '	second' → logprob: -15.000814437866211
    5. ' first' → logprob: -15.375814437866211
    6. ' ' → logprob: -16.25081443786621
    7. 'third' → logprob: -16.50081443786621
    8. '   ' → logprob: -17.87581443786621
    9. '(second' → logprob: -18.25081443786621
    10. 'se' → logprob: -18.50081443786621

Token 59: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.173704271830502e-06
    2. 'number' → logprob: -13.37500286102295
    3. 'umber' → logprob: -14.87500286102295
    4. '_' → logprob: -15.12500286102295
    5. '_NUMBER' → logprob: -15.25000286102295
    6. ' _' → logprob: -16.000003814697266
    7. '```' → logprob: -16.000003814697266
    8. 'Number' → logprob: -16.125003814697266
    9. '_numbers' → logprob: -16.875003814697266
    10. 'and' → logprob: -17.000003814697266

Token 60: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009878854267299175
    2. 'and' → logprob: -4.634878635406494
    3. ' ' → logprob: -9.009879112243652
    4. ' ' → logprob: -15.509879112243652
    5. '  ' → logprob: -16.259878158569336
    6. '   ' → logprob: -16.509878158569336
    7. '    ' → logprob: -16.634878158569336
    8. ' и' → logprob: -16.884878158569336
    9. ' but' → logprob: -16.884878158569336
    10. '```' → logprob: -17.384878158569336

Token 61: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.030865846201777458
    2. ' third' → logprob: -3.9058659076690674
    3. 'first' → logprob: -4.655865669250488
    4. ' second' → logprob: -7.905865669250488
    5. 'third' → logprob: -7.905865669250488
    6. 'second' → logprob: -11.405865669250488
    7. ' ' → logprob: -11.655865669250488
    8. '(first' → logprob: -12.655865669250488
    9. '	first' → logprob: -12.905865669250488
    10. ' not' → logprob: -14.155865669250488

Token 62: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.002813909435644746
    2. '_' → logprob: -5.877813816070557
    3. ' _' → logprob: -11.877814292907715
    4. '_num' → logprob: -15.127814292907715
    5. '```' → logprob: -15.127814292907715
    6. ' !=' → logprob: -15.252814292907715
    7. '_numbers' → logprob: -15.877814292907715
    8. '_first' → logprob: -15.877814292907715
    9. 'number' → logprob: -16.1278133392334
    10. '_n' → logprob: -16.1278133392334

Token 63: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2519417703151703
    2. '!=' → logprob: -1.5019418001174927
    3. ' ' → logprob: -13.001941680908203
    4. '<|end|>' → logprob: -13.251941680908203
    5. '==' → logprob: -13.376941680908203
    6. ' not' → logprob: -13.876941680908203
    7. ')!=' → logprob: -14.001941680908203
    8. '!==' → logprob: -14.001941680908203
    9. ' ' → logprob: -14.001941680908203
    10. ' ==' → logprob: -14.501941680908203

Token 64: ' third' (ID: 6914)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.07341044396162033
    2. ' third' → logprob: -3.3234105110168457
    3. 'second' → logprob: -3.5734105110168457
    4. 'first' → logprob: -5.198410511016846
    5. ' second' → logprob: -7.073410511016846
    6. ' first' → logprob: -8.073410034179688
    7. ' ' → logprob: -12.698410034179688
    8. '	second' → logprob: -13.948410034179688
    9. '.third' → logprob: -14.948410034179688
    10. 'th' → logprob: -14.948410034179688

Token 65: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.5690089639974758e-05
    2. 'number' → logprob: -11.125015258789062
    3. 'Number' → logprob: -14.500015258789062
    4. 'umber' → logprob: -15.625015258789062
    5. '_' → logprob: -16.625015258789062
    6. '_NUMBER' → logprob: -17.750015258789062
    7. '```' → logprob: -17.875015258789062
    8. '_code' → logprob: -19.250015258789062
    9. '_Number' → logprob: -19.250015258789062
    10. '_num' → logprob: -19.250015258789062

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.802049756515771e-05
    2. ':
' → logprob: -9.625067710876465
    3. ':

' → logprob: -14.000067710876465
    4. ' :' → logprob: -14.625067710876465
    5. ':**' → logprob: -15.125067710876465
    6. '):' → logprob: -15.250067710876465
    7. '':' → logprob: -17.87506866455078
    8. '   ' → logprob: -18.12506866455078
    9. '":' → logprob: -18.50006866455078
    10. ':`' → logprob: -18.62506866455078

Token 67: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.03636664152145386
    2. '   ' → logprob: -3.4113667011260986
    3. '   
' → logprob: -7.4113664627075195
    4. '  
' → logprob: -7.4113664627075195
    5. ' 
' → logprob: -8.03636646270752
    6. '\n' → logprob: -8.16136646270752
    7. '     
' → logprob: -8.41136646270752
    8. '
' → logprob: -8.66136646270752
    9. '        
' → logprob: -8.91136646270752
    10. '    ' → logprob: -9.53636646270752

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25902411341667175
    2. '    
' → logprob: -1.5090241432189941
    3. 'print' → logprob: -5.009024143218994
    4. '```' → logprob: -8.884023666381836
    5. '        
' → logprob: -9.509023666381836
    6. ' print' → logprob: -9.634023666381836
    7. '
' → logprob: -10.634023666381836
    8. '    ' → logprob: -10.759023666381836
    9. '    
    
' → logprob: -11.009023666381836
    10. '     
' → logprob: -11.259023666381836

Token 69: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003874166286550462
    2. '   ' → logprob: -8.000387191772461
    3. '```' → logprob: -10.500387191772461
    4. '    
' → logprob: -10.875387191772461
    5. ' print' → logprob: -12.250387191772461
    6. '``' → logprob: -15.000387191772461
    7. '
' → logprob: -15.500387191772461
    8. ' ' → logprob: -17.00038719177246
    9. '  
' → logprob: -17.37538719177246
    10. '        
' → logprob: -18.00038719177246

Token 70: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07925713062286377
    2. '(' → logprob: -2.579257011413574
    3. '("("' → logprob: -7.954257011413574
    4. '("")' → logprob: -12.329257011413574
    5. '('' → logprob: -12.579257011413574
    6. '()' → logprob: -13.079257011413574
    7. '("""' → logprob: -13.579257011413574
    8. ' ("' → logprob: -13.579257011413574
    9. '(""' → logprob: -14.079257011413574
    10. '(">' → logprob: -14.579257011413574

Token 71: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0901731550693512
    2. 'Yes' → logprob: -2.4651732444763184
    3. '("' → logprob: -7.215173244476318
    4. '"No' → logprob: -8.09017276763916
    5. ''' → logprob: -10.46517276763916
    6. '(' → logprob: -10.46517276763916
    7. '")' → logprob: -10.46517276763916
    8. 'No' → logprob: -10.46517276763916
    9. '“Yes' → logprob: -10.46517276763916
    10. 'Y' → logprob: -11.34017276763916

Token 72: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1286124438047409
    2. 'else' → logprob: -2.378612518310547
    3. '```' → logprob: -4.128612518310547
    4. ')
' → logprob: -5.003612518310547
    5. ' else' → logprob: -6.503612518310547
    6. ')

' → logprob: -6.878612518310547
    7. '")' → logprob: -7.378612518310547
    8. ':' → logprob: -7.503612518310547
    9. '\n' → logprob: -8.253612518310547
    10. '   ' → logprob: -8.503612518310547

Token 73: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01617032289505005
    2. ' else' → logprob: -4.516170501708984
    3. 'e' → logprob: -5.516170501708984
    4. 'elif' → logprob: -7.391170501708984
    5. '```' → logprob: -8.266170501708984
    6. '    
' → logprob: -9.266170501708984
    7. 'el' → logprob: -10.266170501708984
    8. '
' → logprob: -10.391170501708984
    9. '\n' → logprob: -11.641170501708984
    10. '_else' → logprob: -11.891170501708984

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.941850526549388e-06
    2. ':
' → logprob: -12.000007629394531
    3. ' :' → logprob: -13.375007629394531
    4. ':return' → logprob: -17.12500762939453
    5. ':def' → logprob: -17.12500762939453
    6. ':

' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.37500762939453
    8. ':**' → logprob: -17.50000762939453
    9. '():' → logprob: -17.62500762939453
    10. '```' → logprob: -18.00000762939453

Token 75: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029332218691706657
    2. '    
' → logprob: -3.904332160949707
    3. ' print' → logprob: -5.654332160949707
    4. '    ' → logprob: -6.154332160949707
    5. 'print' → logprob: -7.279332160949707
    6. ' True' → logprob: -7.654332160949707
    7. ' 
' → logprob: -7.654332160949707
    8. ' False' → logprob: -7.904332160949707
    9. '```' → logprob: -8.154332160949707
    10. ' ' → logprob: -8.654332160949707

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4478226900100708
    2. 'print' → logprob: -1.1978226900100708
    3. ' print' → logprob: -2.9478225708007812
    4. '```' → logprob: -5.322822570800781
    5. '    
' → logprob: -6.447822570800781
    6. ' 
' → logprob: -9.697822570800781
    7. '	print' → logprob: -9.822822570800781
    8. '    ' → logprob: -10.072822570800781
    9. '``' → logprob: -11.197822570800781
    10. '     
' → logprob: -11.447822570800781

Token 77: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.125000953674316
    3. ' print' → logprob: -14.875000953674316
    4. '   ' → logprob: -15.500000953674316
    5. 'pass' → logprob: -18.125001907348633
    6. 'pr' → logprob: -18.250001907348633
    7. 'prit' → logprob: -18.375001907348633
    8. '	print' → logprob: -18.875001907348633
    9. 'prin' → logprob: -19.000001907348633
    10. 'Print' → logprob: -19.375001907348633

Token 78: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34989097714424133
    2. '("' → logprob: -1.349890947341919
    3. '("("' → logprob: -3.349890947341919
    4. '("")' → logprob: -7.599891185760498
    5. '("""' → logprob: -8.84989070892334
    6. '("(' → logprob: -9.09989070892334
    7. '('' → logprob: -9.84989070892334
    8. '(False' → logprob: -11.22489070892334
    9. '(""' → logprob: -11.22489070892334
    10. '("="' → logprob: -11.34989070892334

Token 79: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.07895533740520477
    2. '"No' → logprob: -2.5789554119110107
    3. '"' → logprob: -9.82895565032959
    4. 'NO' → logprob: -12.45395565032959
    5. '"N' → logprob: -13.20395565032959
    6. ' No' → logprob: -13.32895565032959
    7. '")' → logprob: -13.95395565032959
    8. '“No' → logprob: -13.95395565032959
    9. ''' → logprob: -14.45395565032959
    10. 'Yes' → logprob: -14.70395565032959

Token 80: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003337291069328785
    2. ')' → logprob: -5.753337383270264
    3. ')")' → logprob: -8.753336906433105
    4. '"' → logprob: -14.128336906433105
    5. '")
' → logprob: -15.003336906433105
    6. '```' → logprob: -15.628336906433105
    7. ')"' → logprob: -16.128337860107422
    8. '}")' → logprob: -16.253337860107422
    9. '`)' → logprob: -16.628337860107422
    10. '!")' → logprob: -16.753337860107422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 41.03%
Précision adaptée (1ère position): 46.15%
Précision (top 10): 92.31%
================================================================================
