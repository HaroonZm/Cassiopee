================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir deux entiers séparés par un espace, qui seront assignés à N et L
# La fonction input() lit une ligne entrée au clavier sous forme de chaîne de caractères
# La méthode split() coupe la chaîne en morceaux autour des espaces et crée une liste de sous-chaînes
# La fonction map(int, ...) applique int() à chaque élément de la liste, les transformant en entiers
# Les deux valeurs entières sont ensuite affectées à N et L
N, L = map(int, input().split())

# Déclare une liste vide appelée apple, qui va stocker les valeurs des pommes
apple = []

# Utilise une boucle for pour créer des nombres allant de L à L+N-1 inclus
# La variable i commence à 0 et s'incrémente jusqu'à N-1
for i in range(N):
    # À chaque itération, ajoute (L + i) à la liste apple
    # Cela correspond à la saveur de chaque pomme située consécutivement à partir de L
    apple.append(L + i)

# Trie la liste apple avec la méthode sort()
# Le paramètre key=abs indique qu'on veut trier la liste selon la valeur absolue de chaque élément
# Cela veut dire que les éléments les plus proches de 0 viendront au début de la liste
apple.sort(key=abs)

# Supprime le premier élément de la liste apple avec la notation [1:]
# Cela crée une nouvelle liste qui commence à l'indice 1 et va jusqu'à la fin de la liste
# Le premier élément, c'est-à-dire celui avec la plus petite valeur absolue, est ainsi retiré
apple = apple[1:]

# Utilise la fonction sum() pour additionner tous les éléments restants dans la liste apple
# Le résultat, qui représente la somme des saveurs après avoir retiré la pomme la plus neutre, est affecté à ans
ans = sum(apple)

# Affiche la valeur calculée de ans à l'écran
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5254546403884888
    2. ' de' → logprob: -2.025454521179199
    3. ' ' → logprob: -2.400454521179199
    4. ':' → logprob: -2.525454521179199
    5. '_' → logprob: -3.150454521179199
    6. ' :' → logprob: -3.900454521179199
    7. '```' → logprob: -4.525454521179199
    8. ' =' → logprob: -4.900454521179199
    9. ' d' → logprob: -5.025454521179199
    10. ''' → logprob: -5.150454521179199

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03950051590800285
    2. ' l' → logprob: -3.4145004749298096
    3. 'util' → logprob: -6.164500713348389
    4. 'user' → logprob: -6.664500713348389
    5. '`' → logprob: -7.789500713348389
    6. ' user' → logprob: -8.16450023651123
    7. '#' → logprob: -8.28950023651123
    8. ''' → logprob: -8.41450023651123
    9. ' ' → logprob: -8.41450023651123
    10. ' utilisateur' → logprob: -8.78950023651123

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6045140624046326
    2. ' saisir' → logprob: -1.3545141220092773
    3. ' ' → logprob: -2.3545141220092773
    4. ' ' → logprob: -3.8545141220092773
    5. 'r' → logprob: -4.104514122009277
    6. 'entr' → logprob: -4.354514122009277
    7. '```' → logprob: -4.729514122009277
    8. '_' → logprob: -4.854514122009277
    9. 'entrée' → logprob: -5.104514122009277
    10. ' entrer' → logprob: -5.104514122009277

Token 8: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17205238342285156
    2. ' espaces' → logprob: -2.0470523834228516
    3. 's' → logprob: -4.422052383422852
    4. ' espace' → logprob: -5.797052383422852
    5. ' mots' → logprob: -5.922052383422852
    6. '_' → logprob: -5.922052383422852
    7. ' lignes' → logprob: -6.422052383422852
    8. 'es' → logprob: -7.547052383422852
    9. '  ' → logprob: -7.547052383422852
    10. ' s' → logprob: -7.672052383422852

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0009563630446791649
    2. 'i' → logprob: -7.5009565353393555
    3. 'ières' → logprob: -8.250956535339355
    4. '```' → logprob: -9.750956535339355
    5. 'rs' → logprob: -10.375956535339355
    6. 'ié' → logprob: -11.000956535339355
    7. 'ier' → logprob: -11.750956535339355
    8. 'ri' → logprob: -11.875956535339355
    9. 'ers' → logprob: -12.375956535339355
    10. 'riers' → logprob: -12.500956535339355

Token 11: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5646196603775024
    2. 'a' → logprob: -0.9396196603775024
    3. '\n' → logprob: -3.814619541168213
    4. 'x' → logprob: -4.314619541168213
    5. '```' → logprob: -6.939619541168213
    6. '`' → logprob: -7.064619541168213
    7. '\' → logprob: -7.314619541168213
    8. ',' → logprob: -7.314619541168213
    9. 'num' → logprob: -7.939619541168213
    10. 'nombre' → logprob: -7.939619541168213

Token 12: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005324954632669687
    2. 'é' → logprob: -5.255324840545654
    3. '```' → logprob: -10.380325317382812
    4. 's' → logprob: -10.880325317382812
    5. 'ément' → logprob: -11.255325317382812
    6. 'ès' → logprob: -11.630325317382812
    7. 'ées' → logprob: -12.130325317382812
    8. 'es' → logprob: -12.255325317382812
    9. 'ÉS' → logprob: -13.630325317382812
    10. ' par' → logprob: -13.880325317382812

Token 13: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0151854753494263
    2. ' par' → logprob: -1.2651854753494263
    3. 'es' → logprob: -1.5151854753494263
    4. 'par' → logprob: -2.2651853561401367
    5. 'e' → logprob: -4.140185356140137
    6. ' ' → logprob: -5.015185356140137
    7. ' d' → logprob: -6.390185356140137
    8. ',' → logprob: -6.515185356140137
    9. '```' → logprob: -7.015185356140137
    10. '_par' → logprob: -7.515185356140137

Token 14: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.38724908232688904
    2. 'une' → logprob: -1.2622491121292114
    3. ''un' → logprob: -4.012248992919922
    4. ' un' → logprob: -4.387248992919922
    5. ''' → logprob: -5.887248992919922
    6. ' une' → logprob: -7.262248992919922
    7. ''une' → logprob: -7.262248992919922
    8. '```' → logprob: -7.262248992919922
    9. 'space' → logprob: -7.762248992919922
    10. ' ' → logprob: -8.012248992919922

Token 15: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.22950433194637299
    2. ''espace' → logprob: -2.229504346847534
    3. ' espace' → logprob: -2.604504346847534
    4. 'esp' → logprob: -4.354504108428955
    5. 'space' → logprob: -5.229504108428955
    6. '’espace' → logprob: -6.604504108428955
    7. 'e' → logprob: -6.979504108428955
    8. ''esp' → logprob: -7.354504108428955
    9. '```' → logprob: -7.479504108428955
    10. '_' → logprob: -7.854504108428955

Token 16: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3953862190246582
    2. 'x' → logprob: -1.7703862190246582
    3. 'e' → logprob: -2.770386219024658
    4. 'a' → logprob: -3.395386219024658
    5. 'i' → logprob: -3.645386219024658
    6. 'input' → logprob: -4.770386219024658
    7. 'v' → logprob: -5.270386219024658
    8. 'u' → logprob: -5.395386219024658
    9. 'user' → logprob: -5.645386219024658
    10. 'ent' → logprob: -5.770386219024658

Token 17: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5704243183135986
    2. 'input' → logprob: -1.5704243183135986
    3. 's' → logprob: -2.1954243183135986
    4. 'e' → logprob: -2.4454243183135986
    5. 'n' → logprob: -2.4454243183135986
    6. 'i' → logprob: -2.8204243183135986
    7. 'x' → logprob: -3.0704243183135986
    8. 'a' → logprob: -3.3204243183135986
    9. ' i' → logprob: -3.6954243183135986
    10. 'ent' → logprob: -3.9454243183135986

Token 18: ' seront' (ID: 35024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010709032416343689
    2. ' seront' → logprob: -5.135708808898926
    3. ' s' → logprob: -6.760708808898926
    4. ' sera' → logprob: -7.135708808898926
    5. ''' → logprob: -7.260708808898926
    6. ' sont' → logprob: -8.010708808898926
    7. 'n' → logprob: -8.260708808898926
    8. ' ' → logprob: -8.510708808898926
    9. ' vont' → logprob: -8.510708808898926
    10. 'u' → logprob: -8.885708808898926

Token 19: ' assign' (ID: 14975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35598286986351013
    2. ' utilisés' → logprob: -1.3559828996658325
    3. 's' → logprob: -4.105982780456543
    4. ' used' → logprob: -5.605982780456543
    5. ' utilisé' → logprob: -5.730982780456543
    6. ' utilisées' → logprob: -5.980982780456543
    7. '  ' → logprob: -6.230982780456543
    8. ' ,' → logprob: -6.355982780456543
    9. '_' → logprob: -6.480982780456543
    10. ' utilisée' → logprob: -6.730982780456543

Token 20: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10097161680459976
    2. 's' → logprob: -2.6009716987609863
    3. 'é' → logprob: -3.8509716987609863
    4. '́s' → logprob: -8.100971221923828
    5. '#' → logprob: -9.725971221923828
    6. ''s' → logprob: -9.850971221923828
    7. 'es' → logprob: -10.100971221923828
    8. '```' → logprob: -10.850971221923828
    9. '_' → logprob: -11.100971221923828
    10. ' ' → logprob: -11.225971221923828

Token 21: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6774317622184753
    2. ' à' → logprob: -0.8024317622184753
    3. ' ' → logprob: -4.052431583404541
    4. ' a' → logprob: -4.177431583404541
    5. 'à' → logprob: -5.927431583404541
    6. '_' → logprob: -6.177431583404541
    7. ' s' → logprob: -6.177431583404541
    8. 'es' → logprob: -6.927431583404541
    9. ' =' → logprob: -7.302431583404541
    10. ' au' → logprob: -7.427431583404541

Token 22: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2365339994430542
    2. 'x' → logprob: -2.2365341186523438
    3. 'de' → logprob: -2.4865341186523438
    4. ' a' → logprob: -5.111534118652344
    5. 'la' → logprob: -5.736534118652344
    6. 'n' → logprob: -5.861534118652344
    7. ' x' → logprob: -6.361534118652344
    8. 'variables' → logprob: -6.736534118652344
    9. 'variable' → logprob: -6.736534118652344
    10. 'val' → logprob: -7.111534118652344

Token 23: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9473617076873779
    2. '=' → logprob: -1.072361707687378
    3. ' =' → logprob: -1.572361707687378
    4. '_' → logprob: -3.572361707687378
    5. 's' → logprob: -4.447361946105957
    6. ' ' → logprob: -4.822361946105957
    7. ' ,' → logprob: -5.447361946105957
    8. 'n' → logprob: -5.822361946105957
    9. 'e' → logprob: -6.572361946105957
    10. ')' → logprob: -6.947361946105957

Token 24: ' L' (ID: 451)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.030152391642332077
    2. 'K' → logprob: -4.280152320861816
    3. 'P' → logprob: -4.905152320861816
    4. ' M' → logprob: -5.530152320861816
    5. 'n' → logprob: -7.155152320861816
    6. 'x' → logprob: -7.155152320861816
    7. '```' → logprob: -7.405152320861816
    8. 'a' → logprob: -7.905152320861816
    9. 'N' → logprob: -8.030152320861816
    10. 'l' → logprob: -8.280152320861816

Token 25: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002580178203061223
    2. 'n' → logprob: -6.002580165863037
    3. '#' → logprob: -9.752580642700195
    4. '```' → logprob: -11.127580642700195
    5. 'i' → logprob: -11.752580642700195
    6. 'x' → logprob: -12.127580642700195
    7. '\n' → logprob: -12.627580642700195
    8. ' N' → logprob: -12.627580642700195
    9. ',' → logprob: -13.002580642700195
    10. '`' → logprob: -13.127580642700195

Token 26: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005443989299237728
    2. 'n' → logprob: -5.255444049835205
    3. '```' → logprob: -9.880443572998047
    4. '\n' → logprob: -10.380443572998047
    5. 'x' → logprob: -10.630443572998047
    6. '#' → logprob: -10.880443572998047
    7. ' N' → logprob: -11.005443572998047
    8. 'i' → logprob: -11.130443572998047
    9. '`' → logprob: -11.630443572998047
    10. '\' → logprob: -11.755443572998047

Token 27: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018044931814074516
    2. 'n' → logprob: -4.643044948577881
    3. 'input' → logprob: -5.643044948577881
    4. 'user' → logprob: -6.393044948577881
    5. ' N' → logprob: -7.143044948577881
    6. '```' → logprob: -7.518044948577881
    7. 's' → logprob: -7.643044948577881
    8. 'print' → logprob: -7.643044948577881
    9. '#' → logprob: -8.643044471740723
    10. 'ent' → logprob: -8.768044471740723

Token 28: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9581462144851685
    2. ' ' → logprob: -0.9581462144851685
    3. ' #' → logprob: -2.333146095275879
    4. '#' → logprob: -3.583146095275879
    5. ' =' → logprob: -3.833146095275879
    6. ' ' → logprob: -3.833146095275879
    7. 'n' → logprob: -4.083146095275879
    8. 'i' → logprob: -4.833146095275879
    9. ' `' → logprob: -5.333146095275879
    10. ' N' → logprob: -5.458146095275879

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5345356464385986
    2. 'input' → logprob: -1.5345356464385986
    3. 'def' → logprob: -1.6595356464385986
    4. ' def' → logprob: -5.5345354080200195
    5. 's' → logprob: -5.9095354080200195
    6. '=input' → logprob: -7.6595354080200195
    7. '=' → logprob: -8.90953540802002
    8. ' =' → logprob: -8.90953540802002
    9. 'd' → logprob: -9.03453540802002
    10. 'i' → logprob: -9.15953540802002

Token 30: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006189120467752218
    2. '()' → logprob: -8.375618934631348
    3. '('' → logprob: -8.625618934631348
    4. '(
' → logprob: -9.000618934631348
    5. '("' → logprob: -10.000618934631348
    6. ' (' → logprob: -11.625618934631348
    7. ')' → logprob: -11.875618934631348
    8. '(

' → logprob: -12.375618934631348
    9. '("""' → logprob: -12.500618934631348
    10. 's' → logprob: -12.750618934631348

Token 31: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6278379559516907
    2. ' ' → logprob: -1.752837896347046
    3. 's' → logprob: -2.252837896347046
    4. ' =' → logprob: -2.627837896347046
    5. ',' → logprob: -3.752837896347046
    6. '=' → logprob: -3.752837896347046
    7. '.' → logprob: -4.252838134765625
    8. ')' → logprob: -4.377838134765625
    9. '()' → logprob: -4.877838134765625
    10. ' (' → logprob: -5.127838134765625

Token 32: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9278329610824585
    2. '()' → logprob: -1.3028329610824585
    3. ' la' → logprob: -2.302833080291748
    4. '(' → logprob: -2.552833080291748
    5. ' ' → logprob: -3.427833080291748
    6. ' ' → logprob: -3.927833080291748
    7. 'une' → logprob: -3.927833080291748
    8. '('' → logprob: -4.177833080291748
    9. ' deux' → logprob: -4.302833080291748
    10. ' l' → logprob: -4.427833080291748

Token 33: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.660671591758728
    2. ' chaîne' → logprob: -1.035671591758728
    3. ' ' → logprob: -2.9106717109680176
    4. ' ' → logprob: -3.7856717109680176
    5. ' chaine' → logprob: -4.035671710968018
    6. 'chaine' → logprob: -4.535671710968018
    7. 'ligne' → logprob: -5.285671710968018
    8. 's' → logprob: -6.285671710968018
    9. ' valeur' → logprob: -6.410671710968018
    10. ' line' → logprob: -6.410671710968018

Token 34: ' entrée' (ID: 95590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4917418360710144
    2. ' ' → logprob: -2.241741895675659
    3. 'N' → logprob: -2.491741895675659
    4. ' =' → logprob: -3.116741895675659
    5. ',' → logprob: -3.366741895675659
    6. 's' → logprob: -3.741741895675659
    7. ' N' → logprob: -4.11674165725708
    8. ' n' → logprob: -4.61674165725708
    9. '.' → logprob: -4.86674165725708
    10. '#' → logprob: -4.99174165725708

Token 35: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0057538747787476
    2. ',' → logprob: -1.8807538747787476
    3. ' ' → logprob: -2.005753993988037
    4. 's' → logprob: -2.380753993988037
    5. 'e' → logprob: -3.630753993988037
    6. ' ,' → logprob: -3.630753993988037
    7. '.' → logprob: -3.755753993988037
    8. ')' → logprob: -3.755753993988037
    9. ' )' → logprob: -4.255753993988037
    10. 'N' → logprob: -4.380753993988037

Token 36: ' clavier' (ID: 187878)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.2984754145145416
    2. ' clavier' → logprob: -1.4234753847122192
    3. 'n' → logprob: -5.92347526550293
    4. 'c' → logprob: -6.17347526550293
    5. 'clave' → logprob: -6.29847526550293
    6. 't' → logprob: -6.42347526550293
    7. '#' → logprob: -6.79847526550293
    8. ' ' → logprob: -6.92347526550293
    9. 'prompt' → logprob: -7.04847526550293
    10. 'input' → logprob: -7.79847526550293

Token 37: ' sous' (ID: 14487)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0414048433303833
    2. 'n' → logprob: -3.2914047241210938
    3. '#' → logprob: -6.291404724121094
    4. ',' → logprob: -8.291404724121094
    5. ' N' → logprob: -8.416404724121094
    6. 'x' → logprob: -9.166404724121094
    7. 's' → logprob: -9.416404724121094
    8. 'i' → logprob: -9.541404724121094
    9. '```' → logprob: -9.541404724121094
    10. ' ' → logprob: -9.666404724121094

Token 38: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.20853160321712494
    2. 'forme' → logprob: -1.8335316181182861
    3. 'form' → logprob: -4.458531379699707
    4. 'la' → logprob: -4.583531379699707
    5. 'chaine' → logprob: -5.958531379699707
    6. 'forma' → logprob: -6.458531379699707
    7. 'ent' → logprob: -7.083531379699707
    8. 'une' → logprob: -7.708531379699707
    9. ' la' → logprob: -7.708531379699707
    10. 'texte' → logprob: -8.958531379699707

Token 39: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07412132620811462
    2. 'd' → logprob: -2.6991212368011475
    3. ' de' → logprob: -6.074121475219727
    4. 'de' → logprob: -6.324121475219727
    5. 'str' → logprob: -10.449121475219727
    6. '=' → logprob: -11.574121475219727
    7. 's' → logprob: -11.949121475219727
    8. '=d' → logprob: -12.074121475219727
    9. ''d' → logprob: -12.449121475219727
    10. '='' → logprob: -12.699121475219727

Token 40: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.12030363082885742
    2. ' chaîne' → logprob: -2.9953036308288574
    3. 'cha' → logprob: -2.9953036308288574
    4. 'string' → logprob: -5.620303630828857
    5. 'texte' → logprob: -5.745303630828857
    6. 'str' → logprob: -5.870303630828857
    7. ' chaine' → logprob: -5.870303630828857
    8. 'chain' → logprob: -7.995303630828857
    9. 's' → logprob: -8.745304107666016
    10. ' chaînes' → logprob: -9.370304107666016

Token 41: ' de' (ID: 334)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.060170579701662064
    2. 'n' → logprob: -2.9351706504821777
    3. '#' → logprob: -6.060170650482178
    4. ',' → logprob: -6.435170650482178
    5. ':' → logprob: -7.435170650482178
    6. '[' → logprob: -8.68517017364502
    7. ' N' → logprob: -9.06017017364502
    8. '```' → logprob: -9.31017017364502
    9. '`' → logprob: -9.56017017364502
    10. 'x' → logprob: -9.93517017364502

Token 42: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0029278991278260946
    2. ' caractères' → logprob: -5.877927780151367
    3. 'texte' → logprob: -9.377927780151367
    4. 'c' → logprob: -11.502927780151367
    5. ' caracteres' → logprob: -11.877927780151367
    6. '#' → logprob: -11.877927780151367
    7. ' caract' → logprob: -12.627927780151367
    8. 'ca' → logprob: -12.877927780151367
    9. 'chaine' → logprob: -14.127927780151367
    10. 'chars' → logprob: -14.252927780151367

Token 43: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.024374619126319885
    2. 'n' → logprob: -3.7743747234344482
    3. '#' → logprob: -7.149374485015869
    4. '```' → logprob: -8.649374961853027
    5. ',' → logprob: -10.149374961853027
    6. '`' → logprob: -10.524374961853027
    7. '\n' → logprob: -10.899374961853027
    8. '\' → logprob: -11.024374961853027
    9. '[' → logprob: -11.399374961853027
    10. 'x' → logprob: -11.774374961853027

Token 44: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020803222432732582
    2. 'n' → logprob: -3.895803213119507
    3. '#' → logprob: -9.020803451538086
    4. '```' → logprob: -9.645803451538086
    5. '\n' → logprob: -10.895803451538086
    6. 'x' → logprob: -11.145803451538086
    7. '`' → logprob: -11.645803451538086
    8. ',' → logprob: -12.145803451538086
    9. '\' → logprob: -12.270803451538086
    10. 'i' → logprob: -12.520803451538086

Token 45: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0029431134462356567
    2. 'n' → logprob: -5.87794303894043
    3. '#' → logprob: -10.00294303894043
    4. '```' → logprob: -10.50294303894043
    5. 'x' → logprob: -11.25294303894043
    6. ' N' → logprob: -11.37794303894043
    7. '`' → logprob: -12.25294303894043
    8. 'L' → logprob: -12.37794303894043
    9. '[' → logprob: -12.50294303894043
    10. 'u' → logprob: -12.87794303894043

Token 46: ' méthode' (ID: 71490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.727125883102417
    2. ' #' → logprob: -1.477125883102417
    3. 's' → logprob: -1.852125883102417
    4. ' ' → logprob: -2.852125883102417
    5. 'v' → logprob: -4.102126121520996
    6. 'l' → logprob: -4.102126121520996
    7. 'n' → logprob: -5.227126121520996
    8. ' ligne' → logprob: -5.352126121520996
    9. 'i' → logprob: -5.602126121520996
    10. 'split' → logprob: -5.977126121520996

Token 47: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2039370834827423
    2. ' split' → logprob: -1.70393705368042
    3. 'strip' → logprob: -6.20393705368042
    4. '.split' → logprob: -7.95393705368042
    5. ' strip' → logprob: -9.203937530517578
    6. ' input' → logprob: -10.703937530517578
    7. 'input' → logprob: -11.953937530517578
    8. ' .' → logprob: -12.453937530517578
    9. 's' → logprob: -12.703937530517578
    10. 'spl' → logprob: -12.703937530517578

Token 48: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2926456928253174
    2. '()' → logprob: -1.4176456928253174
    3. '('' → logprob: -4.542645454406738
    4. '("' → logprob: -7.917645454406738
    5. '("("' → logprob: -8.417645454406738
    6. '(
' → logprob: -9.667645454406738
    7. '().' → logprob: -10.542645454406738
    8. '('.')' → logprob: -11.042645454406738
    9. '(

' → logprob: -11.292645454406738
    10. ' ()' → logprob: -11.417645454406738

Token 49: ' coupe' (ID: 71780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5276824235916138
    2. '()' → logprob: -0.9026824235916138
    3. '('' → logprob: -6.777682304382324
    4. 'split' → logprob: -7.152682304382324
    5. '(
' → logprob: -7.652682304382324
    6. ' ()' → logprob: -7.902682304382324
    7. 'spl' → logprob: -8.027682304382324
    8. ')' → logprob: -8.902682304382324
    9. '().' → logprob: -9.027682304382324
    10. ' (' → logprob: -9.027682304382324

Token 50: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09250076860189438
    2. '('' → logprob: -3.092500686645508
    3. '(' → logprob: -3.217500686645508
    4. '("' → logprob: -6.967500686645508
    5. ''' → logprob: -7.467500686645508
    6. 'l' → logprob: -8.217500686645508
    7. 'la' → logprob: -8.717500686645508
    8. ' ()' → logprob: -8.717500686645508
    9. 's' → logprob: -9.592500686645508
    10. ' ' → logprob: -9.717500686645508

Token 51: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.159778892993927
    2. 'chaine' → logprob: -2.0347788333892822
    3. 'cha' → logprob: -4.534779071807861
    4. ' chaine' → logprob: -5.284779071807861
    5. 's' → logprob: -7.909779071807861
    6. 'string' → logprob: -8.409778594970703
    7. 'ligne' → logprob: -9.034778594970703
    8. ' string' → logprob: -9.534778594970703
    9. ' chaînes' → logprob: -9.659778594970703
    10. 'entrée' → logprob: -9.784778594970703

Token 52: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2500044107437134
    2. '[' → logprob: -2.125004291534424
    3. '()' → logprob: -3.000004291534424
    4. 's' → logprob: -4.625004291534424
    5. ' (' → logprob: -4.875004291534424
    6. '[]' → logprob: -5.000004291534424
    7. ')' → logprob: -5.250004291534424
    8. '(
' → logprob: -5.250004291534424
    9. '.' → logprob: -6.125004291534424
    10. '('' → logprob: -6.125004291534424

Token 53: ' morceaux' (ID: 133321)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.7023573517799377
    2. '["' → logprob: -1.452357292175293
    3. ' ['' → logprob: -2.077357292175293
    4. ' morceaux' → logprob: -3.577357292175293
    5. ' une' → logprob: -3.702357292175293
    6. ' ["' → logprob: -3.702357292175293
    7. '```' → logprob: -4.452357292175293
    8. 'une' → logprob: -4.452357292175293
    9. ' ' → logprob: -5.077357292175293
    10. 'liste' → logprob: -5.077357292175293

Token 54: ' autour' (ID: 39420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018677176907658577
    2. 'n' → logprob: -4.268677234649658
    3. ',' → logprob: -6.268677234649658
    4. '[' → logprob: -7.018677234649658
    5. '#' → logprob: -7.143677234649658
    6. ' N' → logprob: -9.0186767578125
    7. ':' → logprob: -9.2686767578125
    8. '[N' → logprob: -9.6436767578125
    9. '```' → logprob: -9.6436767578125
    10. 'x' → logprob: -9.8936767578125

Token 55: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0107357501983643
    2. ' d' → logprob: -1.5107357501983643
    3. 'd' → logprob: -1.8857357501983643
    4. ' des' → logprob: -2.1357357501983643
    5. 'de' → logprob: -2.8857357501983643
    6. 'des' → logprob: -3.2607357501983643
    7. ' du' → logprob: -4.010735511779785
    8. ''' → logprob: -4.510735511779785
    9. 'du' → logprob: -4.885735511779785
    10. ' ' → logprob: -5.010735511779785

Token 56: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.3097926080226898
    2. ' espaces' → logprob: -1.6847926378250122
    3. ''esp' → logprob: -2.5597925186157227
    4. 'es' → logprob: -7.059792518615723
    5. 'spaces' → logprob: -7.059792518615723
    6. ''espace' → logprob: -7.184792518615723
    7. ''' → logprob: -7.434792518615723
    8. '’esp' → logprob: -8.309792518615723
    9. ''s' → logprob: -9.309792518615723
    10. ' ' → logprob: -10.184792518615723

Token 57: ' et' (ID: 859)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.025510398671030998
    2. 'n' → logprob: -3.775510311126709
    3. '#' → logprob: -7.025510311126709
    4. '[' → logprob: -7.275510311126709
    5. '`' → logprob: -8.650510787963867
    6. 'x' → logprob: -8.900510787963867
    7. '```' → logprob: -9.025510787963867
    8. ',' → logprob: -10.150510787963867
    9. ' N' → logprob: -11.025510787963867
    10. 'v' → logprob: -11.150510787963867

Token 58: ' crée' (ID: 102256)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -1.256615161895752
    2. ' crée' → logprob: -1.381615161895752
    3. ' les' → logprob: -1.881615161895752
    4. ' ren' → logprob: -2.506615161895752
    5. ' stock' → logprob: -3.131615161895752
    6. 'ren' → logprob: -3.381615161895752
    7. ' récup' → logprob: -3.506615161895752
    8. '#' → logprob: -3.506615161895752
    9. ' transforme' → logprob: -4.256615161895752
    10. ' return' → logprob: -4.381615161895752

Token 59: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5049841403961182
    2. 'une' → logprob: -1.6299841403961182
    3. ' un' → logprob: -2.754984140396118
    4. '[' → logprob: -3.254984140396118
    5. '['' → logprob: -3.254984140396118
    6. '[]' → logprob: -3.879984140396118
    7. 's' → logprob: -4.004983901977539
    8. 'un' → logprob: -4.629983901977539
    9. ' ['' → logprob: -5.879983901977539
    10. ''une' → logprob: -6.004983901977539

Token 60: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.65404212474823
    2. 'list' → logprob: -1.15404212474823
    3. ' liste' → logprob: -2.2790422439575195
    4. '[]' → logprob: -3.2790422439575195
    5. 's' → logprob: -4.4040422439575195
    6. '[' → logprob: -5.6540422439575195
    7. ' list' → logprob: -5.7790422439575195
    8. '['' → logprob: -6.0290422439575195
    9. 'l' → logprob: -7.2790422439575195
    10. ' []' → logprob: -7.4040422439575195

Token 61: ' de' (ID: 334)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020265305414795876
    2. 'n' → logprob: -4.020265102386475
    3. '[' → logprob: -6.895265102386475
    4. ',' → logprob: -8.020265579223633
    5. '#' → logprob: -8.520265579223633
    6. '```' → logprob: -8.895265579223633
    7. '`' → logprob: -9.020265579223633
    8. ' N' → logprob: -9.270265579223633
    9. '[N' → logprob: -10.520265579223633
    10. '\n' → logprob: -11.145265579223633

Token 62: ' sous' (ID: 14487)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.49892908334732056
    2. 'cha' → logprob: -1.2489290237426758
    3. 'tokens' → logprob: -3.248929023742676
    4. ' chaînes' → logprob: -3.623929023742676
    5. 'chain' → logprob: -4.623929023742676
    6. 'mot' → logprob: -5.123929023742676
    7. 'strings' → logprob: -5.498929023742676
    8. 'la' → logprob: -5.498929023742676
    9. ' mots' → logprob: -5.748929023742676
    10. 'chaine' → logprob: -5.748929023742676

Token 63: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.7779998183250427
    2. 'chain' → logprob: -1.1529998779296875
    3. 'cha' → logprob: -2.4029998779296875
    4. 'strings' → logprob: -2.9029998779296875
    5. 'chaine' → logprob: -3.2779998779296875
    6. '-' → logprob: -4.6529998779296875
    7. 'string' → logprob: -5.2779998779296875
    8. 'str' → logprob: -5.7779998779296875
    9. 'ent' → logprob: -6.0279998779296875
    10. 'm' → logprob: -6.1529998779296875

Token 64: 'înes' (ID: 171517)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.7009325623512268
    2. 'înes' → logprob: -0.7009325623512268
    3. 'Î' → logprob: -6.075932502746582
    4. 'nes' → logprob: -6.200932502746582
    5. '```' → logprob: -6.700932502746582
    6. '``' → logprob: -8.200932502746582
    7. 'ı' → logprob: -8.450932502746582
    8. 'în' → logprob: -8.700932502746582
    9. 'ines' → logprob: -8.825932502746582
    10. 'r' → logprob: -8.825932502746582

Token 65: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03843778371810913
    2. 'n' → logprob: -3.288437843322754
    3. '#' → logprob: -8.788437843322754
    4. '```' → logprob: -9.163437843322754
    5. ',' → logprob: -9.788437843322754
    6. '
' → logprob: -11.038437843322754
    7. '[' → logprob: -11.038437843322754
    8. '`' → logprob: -11.288437843322754
    9. ' 
' → logprob: -11.538437843322754
    10. '\n' → logprob: -12.288437843322754

Token 66: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03099263459444046
    2. 'n' → logprob: -3.5309927463531494
    3. '```' → logprob: -7.65599250793457
    4. ',' → logprob: -7.90599250793457
    5. '#' → logprob: -8.53099250793457
    6. '`' → logprob: -9.65599250793457
    7. 'x' → logprob: -10.40599250793457
    8. ':' → logprob: -10.65599250793457
    9. '[' → logprob: -10.65599250793457
    10. 'a' → logprob: -11.53099250793457

Token 67: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002973280206788331
    2. 'n' → logprob: -8.500297546386719
    3. '#' → logprob: -10.125297546386719
    4. '```' → logprob: -10.375297546386719
    5. 'NL' → logprob: -12.250297546386719
    6. '`' → logprob: -12.250297546386719
    7. ' N' → logprob: -12.375297546386719
    8. 'L' → logprob: -13.375297546386719
    9. '[' → logprob: -13.750297546386719
    10. 'x' → logprob: -14.125297546386719

Token 68: ' fonction' (ID: 17610)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7089841961860657
    2. ' méthode' → logprob: -1.333984136581421
    3. ' ligne' → logprob: -2.208984136581421
    4. 's' → logprob: -3.333984136581421
    5. ' variable' → logprob: -3.583984136581421
    6. ' fonction' → logprob: -4.083984375
    7. '#' → logprob: -4.458984375
    8. ' première' → logprob: -5.083984375
    9. 'liste' → logprob: -5.333984375
    10. 'mé' → logprob: -5.708984375

Token 69: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03572569414973259
    2. 'map' → logprob: -3.5357255935668945
    3. ' list' → logprob: -6.0357255935668945
    4. ' int' → logprob: -6.4107255935668945
    5. ' N' → logprob: -7.0357255935668945
    6. ' input' → logprob: -7.4107255935668945
    7. 'int' → logprob: -8.285725593566895
    8. 'list' → logprob: -9.410725593566895
    9. ' tuple' → logprob: -10.160725593566895
    10. ' n' → logprob: -10.910725593566895

Token 70: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1740369349718094
    2. '(lambda' → logprob: -2.174036979675293
    3. '(int' → logprob: -3.174036979675293
    4. '()' → logprob: -6.299036979675293
    5. '(str' → logprob: -6.424036979675293
    6. '(
' → logprob: -8.799036979675293
    7. '<|end|>' → logprob: -9.424036979675293
    8. '(None' → logprob: -9.799036979675293
    9. '```' → logprob: -9.924036979675293
    10. '(float' → logprob: -10.549036979675293

Token 71: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04334398731589317
    2. ',' → logprob: -3.168344020843506
    3. ' )' → logprob: -9.168343544006348
    4. ',)' → logprob: -9.668343544006348
    5. '(' → logprob: -10.418343544006348
    6. '),' → logprob: -10.918343544006348
    7. ')>' → logprob: -11.168343544006348
    8. ')#' → logprob: -11.293343544006348
    9. '#' → logprob: -11.543343544006348
    10. ' ,' → logprob: -11.668343544006348

Token 72: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.32695356011390686
    2. ' input' → logprob: -1.3269535303115845
    3. ')' → logprob: -4.326953411102295
    4. ' )' → logprob: -8.201953887939453
    5. '(input' → logprob: -10.076953887939453
    6. '...)' → logprob: -10.826953887939453
    7. '<input' → logprob: -12.201953887939453
    8. 'user' → logprob: -12.326953887939453
    9. '=input' → logprob: -12.451953887939453
    10. ' ' → logprob: -12.701953887939453

Token 73: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07995343953371048
    2. ')' → logprob: -2.82995343208313
    3. '(
' → logprob: -5.079953670501709
    4. '(n' → logprob: -6.079953670501709
    5. '()' → logprob: -6.329953670501709
    6. '(int' → logprob: -6.329953670501709
    7. '(input' → logprob: -7.079953670501709
    8. '(...)' → logprob: -7.579953670501709
    9. '(N' → logprob: -7.954953670501709
    10. ',' → logprob: -8.07995319366455

Token 74: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13242623209953308
    2. '(int' → logprob: -2.6324262619018555
    3. ' int' → logprob: -3.0074262619018555
    4. 'lambda' → logprob: -6.8824262619018555
    5. '(lambda' → logprob: -7.0074262619018555
    6. '=int' → logprob: -8.882426261901855
    7. 'la' → logprob: -9.132426261901855
    8. '```' → logprob: -9.132426261901855
    9. ' la' → logprob: -9.507426261901855
    10. '<int' → logprob: -9.507426261901855

Token 75: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10609029233455658
    2. '(lambda' → logprob: -2.9810903072357178
    3. '()' → logprob: -3.6060903072357178
    4. ')' → logprob: -4.106090068817139
    5. 's' → logprob: -6.231090068817139
    6. '(...)' → logprob: -6.731090068817139
    7. '(s' → logprob: -7.106090068817139
    8. '(aux' → logprob: -7.856090068817139
    9. '```' → logprob: -8.231090545654297
    10. '(
' → logprob: -8.606090545654297

Token 76: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5191454887390137
    2. ')' → logprob: -1.7691454887390137
    3. 'sur' → logprob: -2.1441454887390137
    4. '(N' → logprob: -3.7691454887390137
    5. ' sur' → logprob: -4.019145488739014
    6. '()' → logprob: -4.394145488739014
    7. '(lambda' → logprob: -4.519145488739014
    8. ' à' → logprob: -4.519145488739014
    9. '(n' → logprob: -5.144145488739014
    10. '(s' → logprob: -5.519145488739014

Token 77: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.24262943863868713
    2. 'cha' → logprob: -2.3676295280456543
    3. ' chacune' → logprob: -2.6176295280456543
    4. ' chacun' → logprob: -4.117629528045654
    5. ' la' → logprob: -4.992629528045654
    6. ' each' → logprob: -4.992629528045654
    7. ' l' → logprob: -5.367629528045654
    8. 'l' → logprob: -5.617629528045654
    9. 'ch' → logprob: -5.742629528045654
    10. ' cha' → logprob: -5.867629528045654

Token 78: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.004187148064374924
    2. ' élément' → logprob: -5.504187107086182
    3. ' morceau' → logprob: -10.50418758392334
    4. 'él' → logprob: -10.50418758392334
    5. 'm' → logprob: -11.00418758392334
    6. 'é' → logprob: -11.87918758392334
    7. ' ' → logprob: -11.87918758392334
    8. 'element' → logprob: -12.12918758392334
    9. ' él' → logprob: -12.75418758392334
    10. 'mot' → logprob: -12.87918758392334

Token 79: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06283129006624222
    2. ')' → logprob: -3.437831401824951
    3. 'N' → logprob: -4.812831401824951
    4. '()' → logprob: -5.187831401824951
    5. '(
' → logprob: -5.187831401824951
    6. ',' → logprob: -5.437831401824951
    7. '(N' → logprob: -6.187831401824951
    8. 's' → logprob: -7.062831401824951
    9. ' N' → logprob: -8.437830924987793
    10. 'n' → logprob: -8.562830924987793

Token 80: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.18483880162239075
    2. 'l' → logprob: -2.4348387718200684
    3. ' la' → logprob: -2.5598387718200684
    4. ' l' → logprob: -6.059838771820068
    5. 'split' → logprob: -7.559838771820068
    6. ' cette' → logprob: -8.309839248657227
    7. 'spl' → logprob: -8.934839248657227
    8. 's' → logprob: -9.059839248657227
    9. '...' → logprob: -9.684839248657227
    10. 'input' → logprob: -9.934839248657227

Token 81: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7339536547660828
    2. 'liste' → logprob: -1.1089537143707275
    3. 'input' → logprob: -1.9839537143707275
    4. ' input' → logprob: -3.3589537143707275
    5. 'split' → logprob: -4.733953475952148
    6. 'list' → logprob: -5.608953475952148
    7. 'entrée' → logprob: -6.608953475952148
    8. 'chaine' → logprob: -6.608953475952148
    9. ' chaîne' → logprob: -7.108953475952148
    10. 'l' → logprob: -7.983953475952148

Token 82: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00344813778065145
    2. 'n' → logprob: -6.003448009490967
    3. ',' → logprob: -7.378448009490967
    4. '#' → logprob: -9.128448486328125
    5. '
' → logprob: -9.753448486328125
    6. '\' → logprob: -10.378448486328125
    7. '

' → logprob: -10.378448486328125
    8. '```' → logprob: -11.003448486328125
    9. '\n' → logprob: -11.128448486328125
    10. ' 
' → logprob: -11.503448486328125

Token 83: ' les' (ID: 1341)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1052285432815552
    2. 'N' → logprob: -1.4802285432815552
    3. 'n' → logprob: -2.2302284240722656
    4. ' N' → logprob: -2.2302284240722656
    5. ')' → logprob: -2.4802284240722656
    6. 'e' → logprob: -4.105228424072266
    7. 't' → logprob: -4.230228424072266
    8. '[' → logprob: -4.480228424072266
    9. ' *' → logprob: -4.730228424072266
    10. ' )' → logprob: -4.730228424072266

Token 84: ' transform' (ID: 7118)
  Prédit: ' transforme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transforme' → logprob: -0.9369941353797913
    2. 'convert' → logprob: -1.0619940757751465
    3. 'transform' → logprob: -1.9369940757751465
    4. ' convert' → logprob: -2.3119940757751465
    5. ' transform' → logprob: -5.3119940757751465
    6. 'met' → logprob: -5.8119940757751465
    7. 'trans' → logprob: -6.6869940757751465
    8. 'con' → logprob: -6.9369940757751465
    9. ' met' → logprob: -7.0619940757751465
    10. 's' → logprob: -7.4369940757751465

Token 85: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008562447503209114
    2. 'a' → logprob: -5.6335625648498535
    3. 'ant' → logprob: -5.6335625648498535
    4. 'é' → logprob: -7.0085625648498535
    5. 'ée' → logprob: -8.758562088012695
    6. 'an' → logprob: -9.508562088012695
    7. 'és' → logprob: -9.633562088012695
    8. 'er' → logprob: -10.008562088012695
    9. 'es' → logprob: -10.758562088012695
    10. '#' → logprob: -11.133562088012695

Token 86: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2263118475675583
    2. ')' → logprob: -1.8513118028640747
    3. 'en' → logprob: -4.601311683654785
    4. ' )' → logprob: -4.601311683654785
    5. ' ' → logprob: -5.351311683654785
    6. 's' → logprob: -5.476311683654785
    7. 'N' → logprob: -5.726311683654785
    8. ' N' → logprob: -6.101311683654785
    9. ',' → logprob: -6.351311683654785
    10. '#' → logprob: -6.351311683654785

Token 87: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.502016544342041
    2. 'ent' → logprob: -1.002016544342041
    3. ' nombres' → logprob: -4.002016544342041
    4. ' integers' → logprob: -6.002016544342041
    5. ' int' → logprob: -6.127016544342041
    6. ' entier' → logprob: -6.377016544342041
    7. ' des' → logprob: -6.627016544342041
    8. 'int' → logprob: -6.877016544342041
    9. 'inte' → logprob: -9.127016067504883
    10. ' nombre' → logprob: -9.377016067504883

Token 88: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.25435084104537964
    2. 'i' → logprob: -1.8793509006500244
    3. ',' → logprob: -3.6293509006500244
    4. 't' → logprob: -3.8793509006500244
    5. 'e' → logprob: -4.254350662231445
    6. 'ier' → logprob: -5.879350662231445
    7. 'ière' → logprob: -6.504350662231445
    8. 's' → logprob: -6.629350662231445
    9. 'ières' → logprob: -6.629350662231445
    10. 'g' → logprob: -7.129350662231445

Token 89: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00396904768422246
    2. '
' → logprob: -6.503969192504883
    3. 'n' → logprob: -6.628969192504883
    4. ' 
' → logprob: -8.253969192504883
    5. ',' → logprob: -8.503969192504883
    6. '\n' → logprob: -8.753969192504883
    7. '#' → logprob: -9.628969192504883
    8. '\' → logprob: -9.753969192504883
    9. '```' → logprob: -9.753969192504883
    10. ',
' → logprob: -9.878969192504883

Token 90: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3544423381972592e-05
    2. 'n' → logprob: -11.50001335144043
    3. '#' → logprob: -13.50001335144043
    4. '```' → logprob: -14.50001335144043
    5. ' N' → logprob: -14.62501335144043
    6. '

' → logprob: -15.25001335144043
    7. '`' → logprob: -16.00001335144043
    8. '
' → logprob: -16.12501335144043
    9. ',' → logprob: -16.25001335144043
    10. '\' → logprob: -16.25001335144043

Token 91: ' Les' (ID: 7029)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014597235713154078
    2. ' N' → logprob: -9.37514591217041
    3. 'n' → logprob: -10.25014591217041
    4. '#' → logprob: -11.37514591217041
    5. ' 
' → logprob: -11.87514591217041
    6. ' ' → logprob: -12.87514591217041
    7. '[' → logprob: -14.00014591217041
    8. '```' → logprob: -14.25014591217041
    9. '  
' → logprob: -14.37514591217041
    10. '
' → logprob: -15.12514591217041

Token 92: ' deux' (ID: 10301)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10390858352184296
    2. ' N' → logprob: -2.3539085388183594
    3. 'de' → logprob: -6.728908538818359
    4. 'n' → logprob: -6.978908538818359
    5. '#' → logprob: -7.728908538818359
    6. ' variables' → logprob: -8.97890853881836
    7. ' valeurs' → logprob: -9.41640853881836
    8. 'ent' → logprob: -9.47890853881836
    9. ' =' → logprob: -9.47890853881836
    10. ' deux' → logprob: -9.54140853881836

Token 93: ' valeurs' (ID: 73668)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7550761699676514
    2. ',' → logprob: -1.8800761699676514
    3. 'n' → logprob: -2.0050761699676514
    4. 'N' → logprob: -2.2550761699676514
    5. ' N' → logprob: -2.3800761699676514
    6. 's' → logprob: -2.5050761699676514
    7. ' ' → logprob: -2.6300761699676514
    8. ' =' → logprob: -3.3800761699676514
    9. 'ent' → logprob: -3.5050761699676514
    10. '=' → logprob: -4.0050764083862305

Token 94: ' ent' (ID: 1121)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6089150309562683
    2. ' ' → logprob: -1.733915090560913
    3. ' =' → logprob: -2.358915090560913
    4. ',' → logprob: -2.483915090560913
    5. ' N' → logprob: -2.983915090560913
    6. 's' → logprob: -4.233914852142334
    7. '=' → logprob: -4.483914852142334
    8. ' ,' → logprob: -4.858914852142334
    9. 'n' → logprob: -4.983914852142334
    10. ' sont' → logprob: -5.983914852142334

Token 95: 'ières' (ID: 44864)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6543722748756409
    2. 'iers' → logprob: -1.779372215270996
    3. 'n' → logprob: -2.904372215270996
    4. 'N' → logprob: -3.154372215270996
    5. '=' → logprob: -3.654372215270996
    6. 'a' → logprob: -3.654372215270996
    7. 's' → logprob: -3.654372215270996
    8. 'e' → logprob: -3.779372215270996
    9. ',' → logprob: -3.904372215270996
    10. ' =' → logprob: -4.029372215270996

Token 96: ' sont' (ID: 5242)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6060890555381775
    2. 'N' → logprob: -1.3560891151428223
    3. ',' → logprob: -2.3560891151428223
    4. ' ' → logprob: -2.9810891151428223
    5. 's' → logprob: -3.8560891151428223
    6. ')' → logprob: -4.606089115142822
    7. ' ,' → logprob: -4.731089115142822
    8. ' )' → logprob: -5.606089115142822
    9. 'n' → logprob: -5.731089115142822
    10. ' sont' → logprob: -6.231089115142822

Token 97: ' ensuite' (ID: 39713)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.9142043590545654
    2. ' assign' → logprob: -1.1642043590545654
    3. ' ensuite' → logprob: -2.1642043590545654
    4. ' unpack' → logprob: -2.7892043590545654
    5. ' stock' → logprob: -3.5392043590545654
    6. ' attrib' → logprob: -3.5392043590545654
    7. 'assign' → logprob: -3.9142043590545654
    8. ' assigned' → logprob: -4.0392045974731445
    9. ' récup' → logprob: -5.4142045974731445
    10. ' alors' → logprob: -5.9142045974731445

Token 98: ' affect' (ID: 7902)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.22139541804790497
    2. ' affect' → logprob: -2.471395492553711
    3. ' unpack' → logprob: -3.221395492553711
    4. ' assign' → logprob: -3.721395492553711
    5. 'aff' → logprob: -3.971395492553711
    6. ' stock' → logprob: -4.346395492553711
    7. 'stock' → logprob: -5.346395492553711
    8. 'dé' → logprob: -5.471395492553711
    9. 'attrib' → logprob: -5.971395492553711
    10. ' attrib' → logprob: -6.596395492553711

Token 99: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.08733770996332169
    2. 'é' → logprob: -2.8373377323150635
    3. 'és' → logprob: -3.7123377323150635
    4. 'u' → logprob: -7.462337493896484
    5. 'ée' → logprob: -10.462337493896484
    6. ' é' → logprob: -11.462337493896484
    7. 'es' → logprob: -11.837337493896484
    8. '```' → logprob: -13.087337493896484
    9. 'nées' → logprob: -13.962337493896484
    10. 'ü' → logprob: -14.212337493896484

Token 100: ' à' (ID: 1221)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004712903406471014
    2. ',' → logprob: -6.37971305847168
    3. ' N' → logprob: -6.37971305847168
    4. 'n' → logprob: -7.75471305847168
    5. '(' → logprob: -8.12971305847168
    6. '=' → logprob: -8.50471305847168
    7. ' =' → logprob: -9.75471305847168
    8. ' (' → logprob: -10.00471305847168
    9. 's' → logprob: -10.12971305847168
    10. 'a' → logprob: -10.50471305847168

Token 101: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06196959316730499
    2. ' N' → logprob: -2.811969518661499
    3. '`' → logprob: -14.186969757080078
    4. ' ' → logprob: -14.561969757080078
    5. 'n' → logprob: -14.936969757080078
    6. ' ' → logprob: -16.186969757080078
    7. ' `' → logprob: -16.186969757080078
    8. ',' → logprob: -17.061969757080078
    9. 'a' → logprob: -17.436969757080078
    10. 'l' → logprob: -17.436969757080078

Token 102: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008620307198725641
    2. ' ,' → logprob: -7.750862121582031
    3. 'N' → logprob: -8.375862121582031
    4. ',N' → logprob: -9.500862121582031
    5. 'L' → logprob: -10.250862121582031
    6. ',L' → logprob: -10.375862121582031
    7. ',n' → logprob: -11.500862121582031
    8. ',
' → logprob: -11.750862121582031
    9. 'n' → logprob: -12.125862121582031
    10. 's' → logprob: -12.250862121582031

Token 103: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2015988975763321
    2. 'L' → logprob: -1.701598882675171
    3. ' ' → logprob: -9.07659912109375
    4. ' ' → logprob: -9.82659912109375
    5. ' ' → logprob: -12.20159912109375
    6. '  ' → logprob: -13.07659912109375
    7. '_' → logprob: -13.32659912109375
    8. ',' → logprob: -13.32659912109375
    9. 'space' → logprob: -13.95159912109375
    10. '```' → logprob: -14.07659912109375

Token 104: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.657694418914616e-05
    2. '#' → logprob: -10.625056266784668
    3. 'n' → logprob: -10.750056266784668
    4. ',' → logprob: -12.375056266784668
    5. '
' → logprob: -13.000056266784668
    6. '

' → logprob: -14.000056266784668
    7. '[' → logprob: -14.250056266784668
    8. '```' → logprob: -14.750056266784668
    9. ' N' → logprob: -14.875056266784668
    10. 'a' → logprob: -15.000056266784668

Token 105: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003256911295466125
    2. 'n' → logprob: -8.125326156616211
    3. '#' → logprob: -10.875326156616211
    4. '
' → logprob: -12.875326156616211
    5. '```' → logprob: -13.250326156616211
    6. '\n' → logprob: -13.625326156616211
    7. ' 
' → logprob: -14.125326156616211
    8. '

' → logprob: -14.125326156616211
    9. ' N' → logprob: -14.375326156616211
    10. '[' → logprob: -14.625326156616211

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030066570616327226
    2. ' ,' → logprob: -8.125300407409668
    3. ',N' → logprob: -13.125300407409668
    4. ',
' → logprob: -14.750300407409668
    5. ' ' → logprob: -14.875300407409668
    6. ',L' → logprob: -15.375300407409668
    7. ' =' → logprob: -15.875300407409668
    8. ',n' → logprob: -15.875300407409668
    9. '<|end|>' → logprob: -16.000301361083984
    10. '=' → logprob: -16.000301361083984

Token 107: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.05238926783204079
    2. 'L' → logprob: -3.17738938331604
    3. ' ' → logprob: -4.802389144897461
    4. '<|end|>' → logprob: -7.552389144897461
    5. ' ' → logprob: -7.927389144897461
    6. 'space' → logprob: -9.302389144897461
    7. '  ' → logprob: -9.677389144897461
    8. ')' → logprob: -10.802389144897461
    9. ' =' → logprob: -11.552389144897461
    10. '=' → logprob: -11.802389144897461

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868763744831085
    2. '=' → logprob: -1.1368763446807861
    3. '=input' → logprob: -12.636876106262207
    4. ',' → logprob: -13.386876106262207
    5. '=int' → logprob: -15.636876106262207
    6. ')' → logprob: -16.386877059936523
    7. ' =
' → logprob: -16.511877059936523
    8. ' ' → logprob: -16.886877059936523
    9. '=

' → logprob: -16.886877059936523
    10. '＝' → logprob: -17.011877059936523

Token 109: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692904472351074
    2. ' map' → logprob: -2.1269290447235107
    3. '	map' → logprob: -15.12692928314209
    4. 'int' → logprob: -15.25192928314209
    5. 'list' → logprob: -15.50192928314209
    6. ' ' → logprob: -16.251928329467773
    7. 'm' → logprob: -16.376928329467773
    8. ' ' → logprob: -16.876928329467773
    9. 'input' → logprob: -17.001928329467773
    10. ' list' → logprob: -17.751928329467773

Token 110: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3869349956512451
    2. '(' → logprob: -1.1369349956512451
    3. '<int' → logprob: -10.761935234069824
    4. '(lambda' → logprob: -11.136935234069824
    5. ' (' → logprob: -11.761935234069824
    6. '(
' → logprob: -11.886935234069824
    7. '(input' → logprob: -12.261935234069824
    8. 'int' → logprob: -12.886935234069824
    9. '[int' → logprob: -13.261935234069824
    10. '(str' → logprob: -14.511935234069824

Token 111: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006170758977532387
    2. '(' → logprob: -5.506170749664307
    3. 'input' → logprob: -6.256170749664307
    4. ')' → logprob: -8.881171226501465
    5. ' (' → logprob: -10.756171226501465
    6. ' input' → logprob: -12.131171226501465
    7. ',input' → logprob: -12.631171226501465
    8. '=input' → logprob: -13.881171226501465
    9. '(
' → logprob: -14.756171226501465
    10. ' )' → logprob: -15.006171226501465

Token 112: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245826363563538
    2. ' input' → logprob: -3.7732458114624023
    3. '(input' → logprob: -15.648245811462402
    4. ' ' → logprob: -16.52324676513672
    5. ')' → logprob: -17.02324676513672
    6. '	input' → logprob: -17.52324676513672
    7. '<input' → logprob: -17.52324676513672
    8. '=input' → logprob: -17.77324676513672
    9. '   ' → logprob: -18.27324676513672
    10. '```' → logprob: -19.02324676513672

Token 113: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1871040314435959
    2. '())' → logprob: -1.8121039867401123
    3. '().' → logprob: -5.062104225158691
    4. '('' → logprob: -7.437104225158691
    5. '("' → logprob: -9.312104225158691
    6. '(' → logprob: -9.312104225158691
    7. ')' → logprob: -9.562104225158691
    8. '()))' → logprob: -10.437104225158691
    9. ' ())' → logprob: -10.437104225158691
    10. '(()' → logprob: -10.812104225158691

Token 114: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015908108616713434
    2. 'strip' → logprob: -8.75015926361084
    3. ' split' → logprob: -14.50015926361084
    4. 'rstrip' → logprob: -17.375158309936523
    5. ')' → logprob: -17.625158309936523
    6. '(split' → logprob: -18.375158309936523
    7. '.split' → logprob: -20.375158309936523
    8. 'spl' → logprob: -20.500158309936523
    9. 'read' → logprob: -21.750158309936523
    10. '_split' → logprob: -21.875158309936523

Token 115: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008123023435473442
    2. '()))' → logprob: -5.00812292098999
    3. '()' → logprob: -6.63312292098999
    4. ')' → logprob: -10.008123397827148
    5. '(' → logprob: -10.633123397827148
    6. ' ())' → logprob: -11.508123397827148
    7. '))' → logprob: -12.258123397827148
    8. '('' → logprob: -12.508123397827148
    9. '("' → logprob: -14.758123397827148
    10. '());' → logprob: -15.008123397827148

Token 116: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1137058734893799
    2. '<|end|>' → logprob: -1.2387058734893799
    3. '#' → logprob: -2.11370587348938
    4. ' ' → logprob: -2.48870587348938
    5. ' 
' → logprob: -3.36370587348938
    6. '[' → logprob: -3.61370587348938
    7. '  
' → logprob: -3.86370587348938
    8. ')' → logprob: -4.238705635070801
    9. ':' → logprob: -4.488705635070801
    10. '\n' → logprob: -4.613705635070801

Token 117: ' Dé' (ID: 27247)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4188600480556488
    2. 'for' → logprob: -2.7938599586486816
    3. 'print' → logprob: -3.4188599586486816
    4. 's' → logprob: -3.5438599586486816
    5. 'total' → logprob: -3.5438599586486816
    6. 'words' → logprob: -3.7938599586486816
    7. '#' → logprob: -4.043859958648682
    8. 'output' → logprob: -4.043859958648682
    9. 'lst' → logprob: -4.168859958648682
    10. 'results' → logprob: -4.668859958648682

Token 118: 'clare' (ID: 44660)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20071779191493988
    2. 'fin' → logprob: -1.825717806816101
    3. 'fi' → logprob: -4.700717926025391
    4. '#' → logprob: -4.950717926025391
    5. 'but' → logprob: -6.700717926025391
    6. 'fine' → logprob: -7.200717926025391
    7. 'termin' → logprob: -7.700717926025391
    8. 'part' → logprob: -8.45071792602539
    9. 'term' → logprob: -8.57571792602539
    10. 'claration' → logprob: -8.95071792602539

Token 119: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6653914451599121
    2. 's' → logprob: -1.915391445159912
    3. 'r' → logprob: -2.415391445159912
    4. '_' → logprob: -2.915391445159912
    5. 'e' → logprob: -3.415391445159912
    6. 'er' → logprob: -3.540391445159912
    7. 'a' → logprob: -3.540391445159912
    8. 'u' → logprob: -3.790391445159912
    9. ')' → logprob: -4.290391445159912
    10. ' a' → logprob: -4.915391445159912

Token 120: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.03675280883908272
    2. ' liste' → logprob: -3.661752700805664
    3. 'list' → logprob: -5.036752700805664
    4. 'chaine' → logprob: -6.786752700805664
    5. 'variable' → logprob: -6.911752700805664
    6. 's' → logprob: -7.786752700805664
    7. 'table' → logprob: -8.286752700805664
    8. '#' → logprob: -8.286752700805664
    9. 'lst' → logprob: -9.161752700805664
    10. 'Liste' → logprob: -9.411752700805664

Token 121: ' vide' (ID: 21835)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -2.119154453277588
    2. '[]' → logprob: -2.369154453277588
    3. 'words' → logprob: -2.369154453277588
    4. ' =' → logprob: -2.744154453277588
    5. 'lines' → logprob: -2.869154453277588
    6. ' words' → logprob: -3.119154453277588
    7. 'values' → logprob: -3.244154453277588
    8. 'lst' → logprob: -3.369154453277588
    9. '=[]' → logprob: -3.369154453277588
    10. 's' → logprob: -3.494154453277588

Token 122: ' appelée' (ID: 179130)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.756261944770813
    2. ' lines' → logprob: -2.0062618255615234
    3. 'liste' → logprob: -2.3812618255615234
    4. 'result' → logprob: -3.3812618255615234
    5. 'numbers' → logprob: -3.3812618255615234
    6. 'lst' → logprob: -3.5062618255615234
    7. 'ma' → logprob: -3.5062618255615234
    8. 'l' → logprob: -4.006261825561523
    9. 'words' → logprob: -4.006261825561523
    10. 'points' → logprob: -4.256261825561523

Token 123: ' apple' (ID: 30366)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9457848072052002
    2. 'm' → logprob: -2.4457848072052
    3. 'words' → logprob: -2.5707848072052
    4. 'notes' → logprob: -3.3207848072052
    5. 'fr' → logprob: -3.4457848072052
    6. 'results' → logprob: -3.4457848072052
    7. ' mots' → logprob: -3.6957848072052
    8. ' fruits' → logprob: -3.9457848072052
    9. 'liste' → logprob: -4.195784568786621
    10. 'pl' → logprob: -4.320784568786621

Token 124: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020554543007165194
    2. '_s' → logprob: -6.752055644989014
    3. '_' → logprob: -7.627055644989014
    4. '_list' → logprob: -8.627055168151855
    5. '_ap' → logprob: -9.127055168151855
    6. 'es' → logprob: -9.752055168151855
    7. ' =' → logprob: -10.752055168151855
    8. '=' → logprob: -11.502055168151855
    9. 'ap' → logprob: -12.127055168151855
    10. '_lst' → logprob: -12.502055168151855

Token 125: ' qui' (ID: 2780)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.04657952859997749
    2. ' apple' → logprob: -3.671579599380493
    3. '[]' → logprob: -4.046579360961914
    4. ' apples' → logprob: -6.546579360961914
    5. '[' → logprob: -7.546579360961914
    6. ' []' → logprob: -8.796579360961914
    7. '.apple' → logprob: -9.171579360961914
    8. 'ap' → logprob: -9.296579360961914
    9. '/apple' → logprob: -9.546579360961914
    10. 'app' → logprob: -9.796579360961914

Token 126: ' va' (ID: 3423)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.37423017621040344
    2. ' cont' → logprob: -2.249230146408081
    3. 'stock' → logprob: -3.249230146408081
    4. ' stock' → logprob: -3.624230146408081
    5. ' accueill' → logprob: -3.624230146408081
    6. 's' → logprob: -3.749230146408081
    7. ' va' → logprob: -3.749230146408081
    8. '_' → logprob: -3.874230146408081
    9. '_cont' → logprob: -4.37423038482666
    10. 'represent' → logprob: -4.62423038482666

Token 127: ' stock' (ID: 6546)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.1365472078323364
    2. ' stock' → logprob: -1.5115472078323364
    3. 'stock' → logprob: -1.7615472078323364
    4. 'conten' → logprob: -2.386547088623047
    5. ' accueillir' → logprob: -2.761547088623047
    6. ' conten' → logprob: -2.886547088623047
    7. 'con' → logprob: -3.761547088623047
    8. 'cont' → logprob: -4.261547088623047
    9. 'rec' → logprob: -4.886547088623047
    10. ' recevoir' → logprob: -5.011547088623047

Token 128: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.020940756425261497
    2. 'r' → logprob: -3.8959407806396484
    3. 'e' → logprob: -8.395940780639648
    4. 's' → logprob: -10.395940780639648
    5. 'rer' → logprob: -10.520940780639648
    6. 'érer' → logprob: -10.895940780639648
    7. 're' → logprob: -11.020940780639648
    8. '=' → logprob: -11.395940780639648
    9. '[]' → logprob: -11.520940780639648
    10. ' =' → logprob: -11.770940780639648

Token 129: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.33317574858665466
    2. 'les' → logprob: -1.333175778388977
    3. 's' → logprob: -4.5831756591796875
    4. ' la' → logprob: -6.2081756591796875
    5. 'des' → logprob: -6.7081756591796875
    6. '<|end|>' → logprob: -7.0831756591796875
    7. 'l' → logprob: -7.2081756591796875
    8. 'the' → logprob: -7.5831756591796875
    9. ' des' → logprob: -7.5831756591796875
    10. 'positions' → logprob: -7.9581756591796875

Token 130: ' valeurs' (ID: 73668)
  Prédit: 'ta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ta' → logprob: -0.8121836185455322
    2. 'positions' → logprob: -0.9371836185455322
    3. 'long' → logprob: -2.8121836185455322
    4. 'tail' → logprob: -3.3121836185455322
    5. 'po' → logprob: -3.9371836185455322
    6. 'indices' → logprob: -4.687183380126953
    7. 'n' → logprob: -5.062183380126953
    8. 'prix' → logprob: -5.812183380126953
    9. 'N' → logprob: -5.937183380126953
    10. 'pos' → logprob: -6.062183380126953

Token 131: ' des' (ID: 731)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.3661027252674103
    2. '[]' → logprob: -1.366102695465088
    3. ' =' → logprob: -4.366102695465088
    4. ' apple' → logprob: -4.866102695465088
    5. 'ap' → logprob: -5.116102695465088
    6. '=' → logprob: -5.491102695465088
    7. '[' → logprob: -5.616102695465088
    8. ' apples' → logprob: -5.616102695465088
    9. ' []' → logprob: -5.741102695465088
    10. '=[]' → logprob: -5.866102695465088

Token 132: ' pommes' (ID: 149224)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5643367767333984
    2. 'pom' → logprob: -1.3143367767333984
    3. ' pommes' → logprob: -1.9393367767333984
    4. 'positions' → logprob: -5.314336776733398
    5. 'apple' → logprob: -5.439336776733398
    6. 'long' → logprob: -6.064336776733398
    7. 'ap' → logprob: -6.564336776733398
    8. ' p' → logprob: -6.564336776733398
    9. ' longue' → logprob: -6.689336776733398
    10. 'ta' → logprob: -7.689336776733398

Token 133: '
' (ID: 198)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.00011450992315076292
    2. '[]' → logprob: -9.875114440917969
    3. 's' → logprob: -10.750114440917969
    4. '[' → logprob: -11.625114440917969
    5. ' apple' → logprob: -11.875114440917969
    6. 'ap' → logprob: -12.125114440917969
    7. '=' → logprob: -12.375114440917969
    8. 'app' → logprob: -12.500114440917969
    9. 'a' → logprob: -12.625114440917969
    10. '.apple' → logprob: -13.000114440917969

Token 134: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -2.1008713702030946e-06
    2. ' apple' → logprob: -13.500001907348633
    3. 'ap' → logprob: -14.875001907348633
    4. '.apple' → logprob: -15.750001907348633
    5. 'app' → logprob: -17.000001907348633
    6. 'a' → logprob: -17.125001907348633
    7. ' =' → logprob: -17.625001907348633
    8. '/apple' → logprob: -17.875001907348633
    9. 'appel' → logprob: -18.000001907348633
    10. '=' → logprob: -18.625001907348633

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46545442938804626
    2. '=' → logprob: -1.2154544591903687
    3. 's' → logprob: -2.590454339981079
    4. '=[]' → logprob: -7.590454578399658
    5. 'es' → logprob: -9.5904541015625
    6. '[]' → logprob: -12.4654541015625
    7. '_values' → logprob: -12.5904541015625
    8. '=[]
' → logprob: -12.8404541015625
    9. 'values' → logprob: -14.0904541015625
    10. '[:]' → logprob: -14.2154541015625

Token 136: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00013893934374209493
    2. ' []' → logprob: -9.000139236450195
    3. '[' → logprob: -11.125139236450195
    4. '[]
' → logprob: -14.750139236450195
    5. '[]}' → logprob: -16.000139236450195
    6. 'list' → logprob: -16.000139236450195
    7. '[]

' → logprob: -16.750139236450195
    8. '[]>' → logprob: -17.250139236450195
    9. '[],' → logprob: -17.750139236450195
    10. '[]=' → logprob: -18.000139236450195

Token 137: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2127087504486553e-05
    2. ' for' → logprob: -10.750021934509277
    3. '
' → logprob: -14.500021934509277
    4. '#' → logprob: -16.000022888183594
    5. '	for' → logprob: -18.250022888183594
    6. 'f' → logprob: -19.000022888183594
    7. '<|end|>' → logprob: -19.000022888183594
    8. '```' → logprob: -19.250022888183594
    9. 'i' → logprob: -19.375022888183594
    10. '

' → logprob: -19.375022888183594

Token 138: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.3458322731312364e-06
    2. '#' → logprob: -12.125007629394531
    3. ' for' → logprob: -14.125007629394531
    4. 'pour' → logprob: -14.125007629394531
    5. 'Pour' → logprob: -15.375007629394531
    6. 'fo' → logprob: -15.625007629394531
    7. 'For' → logprob: -17.12500762939453
    8. '
' → logprob: -17.62500762939453
    9. 'while' → logprob: -18.62500762939453
    10. 'f' → logprob: -19.50000762939453

Token 139: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.02484918385744095
    2. 'se' → logprob: -4.1498494148254395
    3. 'isation' → logprob: -5.6498494148254395
    4. 'isez' → logprob: -6.5248494148254395
    5. 'iser' → logprob: -7.0248494148254395
    6. '#' → logprob: -7.2748494148254395
    7. 'isateur' → logprob: -7.2748494148254395
    8. 'is' → logprob: -7.3998494148254395
    9. 's' → logprob: -7.8998494148254395
    10. '```' → logprob: -8.774848937988281

Token 140: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1454825401306152
    2. '_' → logprob: -1.6454825401306152
    3. ' a' → logprob: -1.7704825401306152
    4. ' for' → logprob: -2.0204825401306152
    5. 'for' → logprob: -2.1454825401306152
    6. ' un' → logprob: -3.3954825401306152
    7. 'une' → logprob: -4.395482540130615
    8. 'a' → logprob: -4.770482540130615
    9. ' range' → logprob: -5.270482540130615
    10. 'range' → logprob: -5.270482540130615

Token 141: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00816676951944828
    2. 'range' → logprob: -5.133166790008545
    3. ' for' → logprob: -6.133166790008545
    4. ' range' → logprob: -10.633166313171387
    5. '_' → logprob: -11.008166313171387
    6. 'f' → logprob: -11.758166313171387
    7. 'fo' → logprob: -12.633166313171387
    8. 'r' → logprob: -13.008166313171387
    9. '```' → logprob: -13.008166313171387
    10. 'or' → logprob: -13.133166313171387

Token 142: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.201427161693573
    2. 'for' → logprob: -1.7014272212982178
    3. ' ' → logprob: -11.951427459716797
    4. ' `' → logprob: -12.701427459716797
    5. ' pour' → logprob: -14.076427459716797
    6. '`' → logprob: -14.326427459716797
    7. '	for' → logprob: -14.576427459716797
    8. 'f' → logprob: -14.701427459716797
    9. ' range' → logprob: -15.326427459716797
    10. '.for' → logprob: -15.326427459716797

Token 143: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02929922565817833
    2. ' _' → logprob: -3.904299259185791
    3. 'i' → logprob: -5.404299259185791
    4. '_' → logprob: -6.529299259185791
    5. ' for' → logprob: -7.029299259185791
    6. ' pour' → logprob: -7.404299259185791
    7. ' ' → logprob: -7.529299259185791
    8. ' range' → logprob: -8.029298782348633
    9. ' ' → logprob: -9.029298782348633
    10. ' to' → logprob: -9.529298782348633

Token 144: ' créer' (ID: 40938)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.29783526062965393
    2. '_' → logprob: -1.5478352308273315
    3. ' _' → logprob: -3.172835350036621
    4. ' range' → logprob: -6.172835350036621
    5. 'i' → logprob: -7.172835350036621
    6. ' ' → logprob: -9.422835350036621
    7. ' ' → logprob: -10.672835350036621
    8. 'range' → logprob: -11.547835350036621
    9. ' r' → logprob: -11.797835350036621
    10. '_i' → logprob: -12.047835350036621

Token 145: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4205496609210968
    2. ' i' → logprob: -1.5455496311187744
    3. ' _' → logprob: -2.6705496311187744
    4. 'i' → logprob: -3.4205496311187744
    5. ' N' → logprob: -4.6705498695373535
    6. ' une' → logprob: -5.1705498695373535
    7. ' ' → logprob: -5.7955498695373535
    8. ' range' → logprob: -6.0455498695373535
    9. 'range' → logprob: -6.0455498695373535
    10. ' ' → logprob: -6.0455498695373535

Token 146: ' nombres' (ID: 76205)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -1.0441627502441406
    2. ' N' → logprob: -1.7941627502441406
    3. ' range' → logprob: -2.4191627502441406
    4. 'range' → logprob: -2.5441627502441406
    5. ' pommes' → logprob: -2.7941627502441406
    6. ' indices' → logprob: -3.4191627502441406
    7. 'apple' → logprob: -3.5441627502441406
    8. 'ent' → logprob: -3.6691627502441406
    9. ' lignes' → logprob: -4.169162750244141
    10. ' ent' → logprob: -4.169162750244141

Token 147: ' allant' (ID: 122150)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4668460190296173
    2. 'range' → logprob: -1.216845989227295
    3. ' i' → logprob: -3.341845989227295
    4. ' for' → logprob: -3.966845989227295
    5. '_' → logprob: -4.966845989227295
    6. 'for' → logprob: -5.466845989227295
    7. ' pour' → logprob: -6.591845989227295
    8. ' ' → logprob: -6.966845989227295
    9. ' in' → logprob: -6.966845989227295
    10. 'i' → logprob: -7.091845989227295

Token 148: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.645801842212677
    2. ' de' → logprob: -0.770801842212677
    3. 'from' → logprob: -4.520802021026611
    4. ' from' → logprob: -6.145802021026611
    5. '_de' → logprob: -10.895801544189453
    6. ' ' → logprob: -11.145801544189453
    7. '	de' → logprob: -11.395801544189453
    8. 'd' → logprob: -11.520801544189453
    9. 'jus' → logprob: -11.895801544189453
    10. '_' → logprob: -12.020801544189453

Token 149: ' L' (ID: 451)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14352552592754364
    2. ' ' → logprob: -2.6435256004333496
    3. ' -' → logprob: -3.3935256004333496
    4. '-' → logprob: -4.39352560043335
    5. '-N' → logprob: -4.89352560043335
    6. '1' → logprob: -5.26852560043335
    7. '-L' → logprob: -5.89352560043335
    8. ' N' → logprob: -8.643525123596191
    9. ' L' → logprob: -8.643525123596191
    10. 'N' → logprob: -8.768525123596191

Token 150: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16846425831317902
    2. 'à' → logprob: -1.9184643030166626
    3. '+' → logprob: -5.793464183807373
    4. ' jusqu' → logprob: -6.293464183807373
    5. 'a' → logprob: -6.793464183807373
    6. ' a' → logprob: -7.293464183807373
    7. ',' → logprob: -7.793464183807373
    8. ' ' → logprob: -7.918464183807373
    9. ' ' → logprob: -9.293464660644531
    10. ' jusque' → logprob: -9.668464660644531

Token 151: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.576977014541626
    2. ' L' → logprob: -0.826977014541626
    3. 'N' → logprob: -7.451976776123047
    4. ' N' → logprob: -8.326976776123047
    5. ' ' → logprob: -9.576976776123047
    6. ' (' → logprob: -10.201976776123047
    7. ' ' → logprob: -10.951976776123047
    8. '```' → logprob: -10.951976776123047
    9. '(' → logprob: -11.076976776123047
    10. '(L' → logprob: -11.201976776123047

Token 152: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.428715318441391
    2. ' +' → logprob: -1.0537153482437134
    3. ' ' → logprob: -12.303715705871582
    4. '+n' → logprob: -13.303715705871582
    5. 'N' → logprob: -13.678715705871582
    6. ' ' → logprob: -13.928715705871582
    7. '
' → logprob: -13.928715705871582
    8. ' plus' → logprob: -14.303715705871582
    9. '

' → logprob: -14.428715705871582
    10. '1' → logprob: -14.553715705871582

Token 153: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.033721085637807846
    2. ' N' → logprob: -3.4087209701538086
    3. ' ' → logprob: -10.158720970153809
    4. '(' → logprob: -11.533720970153809
    5. ' (' → logprob: -11.783720970153809
    6. '(N' → logprob: -12.283720970153809
    7. '1' → logprob: -12.533720970153809
    8. '	N' → logprob: -12.783720970153809
    9. '
' → logprob: -13.658720970153809
    10. '5' → logprob: -13.908720970153809

Token 154: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.090458944439888
    2. ' +' → logprob: -3.340458869934082
    3. ':' → logprob: -3.465458869934082
    4. ' :' → logprob: -4.590458869934082
    5. '+:' → logprob: -5.965458869934082
    6. '-' → logprob: -6.215458869934082
    7. ',' → logprob: -6.465458869934082
    8. 'range' → logprob: -6.840458869934082
    9. 'for' → logprob: -7.590458869934082
    10. ')' → logprob: -7.965458869934082

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010788989020511508
    2. ' ' → logprob: -7.001079082489014
    3. '-' → logprob: -8.751078605651855
    4. ' -' → logprob: -12.126078605651855
    5. 'N' → logprob: -12.751078605651855
    6. ' N' → logprob: -15.501078605651855
    7. '9' → logprob: -15.751078605651855
    8. '2' → logprob: -15.751078605651855
    9. '```' → logprob: -16.376079559326172
    10. '  ' → logprob: -17.376079559326172

Token 156: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.145974263548851
    2. 'for' → logprob: -2.7709741592407227
    3. ' for' → logprob: -2.7709741592407227
    4. ' :' → logprob: -4.895974159240723
    5. ' in' → logprob: -7.020974159240723
    6. ':
' → logprob: -7.145974159240723
    7. ',' → logprob: -7.770974159240723
    8. 'range' → logprob: -7.770974159240723
    9. 'in' → logprob: -8.645974159240723
    10. '(' → logprob: -9.020974159240723

Token 157: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09615489840507507
    2. 'for' → logprob: -3.3461549282073975
    3. ' for' → logprob: -3.5961549282073975
    4. ':
' → logprob: -4.346154689788818
    5. ' :' → logprob: -4.721154689788818
    6. ' :
' → logprob: -5.096154689788818
    7. '
' → logprob: -7.971154689788818
    8. ',' → logprob: -7.971154689788818
    9. ' 
' → logprob: -9.346155166625977
    10. '  
' → logprob: -9.846155166625977

Token 158: '#' (ID: 2)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5235194563865662
    2. 'for' → logprob: -0.8985194563865662
    3. ':' → logprob: -8.148519515991211
    4. ' 
' → logprob: -10.023519515991211
    5. '
' → logprob: -10.648519515991211
    6. ':
' → logprob: -11.773519515991211
    7. 'range' → logprob: -11.773519515991211
    8. ' in' → logprob: -12.773519515991211
    9. ' ' → logprob: -12.898519515991211
    10. 's' → logprob: -13.023519515991211

Token 159: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16022484004497528
    2. ' for' → logprob: -1.9102247953414917
    3. 'f' → logprob: -15.535224914550781
    4. '
' → logprob: -16.03522491455078
    5. ' 
' → logprob: -16.28522491455078
    6. 'range' → logprob: -16.41022491455078
    7. '	for' → logprob: -16.91022491455078
    8. ' ' → logprob: -17.66022491455078
    9. ' ' → logprob: -17.78522491455078
    10. 'r' → logprob: -17.78522491455078

Token 160: ' variable' (ID: 11076)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3877650499343872
    2. 'for' → logprob: -1.1377650499343872
    3. ' ' → logprob: -8.012764930725098
    4. ' range' → logprob: -8.762764930725098
    5. 's' → logprob: -9.387764930725098
    6. 'r' → logprob: -9.637764930725098
    7. ' ' → logprob: -9.762764930725098
    8. 'range' → logprob: -10.012764930725098
    9. 'or' → logprob: -11.012764930725098
    10. ' pour' → logprob: -11.137764930725098

Token 161: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4290606379508972
    2. 'i' → logprob: -1.054060697555542
    3. ' ' → logprob: -9.429060935974121
    4. ' x' → logprob: -9.679060935974121
    5. 'x' → logprob: -10.304060935974121
    6. 'a' → logprob: -10.679060935974121
    7. '_' → logprob: -10.804060935974121
    8. ' _' → logprob: -11.054060935974121
    9. ' d' → logprob: -11.054060935974121
    10. '	i' → logprob: -11.179060935974121

Token 162: ' commence' (ID: 44755)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2385186105966568
    2. ' ' → logprob: -1.8635185956954956
    3. 'in' → logprob: -3.363518714904785
    4. 'n' → logprob: -4.238518714904785
    5. ' i' → logprob: -6.988518714904785
    6. ' dans' → logprob: -7.113518714904785
    7. ' n' → logprob: -7.363518714904785
    8. '  ' → logprob: -7.488518714904785
    9. ',' → logprob: -7.613518714904785
    10. 's' → logprob: -7.738518714904785

Token 163: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3366740345954895
    2. ' en' → logprob: -2.0866739749908447
    3. 'in' → logprob: -3.7116739749908447
    4. '=' → logprob: -3.8366739749908447
    5. ' from' → logprob: -4.461674213409424
    6. ' dans' → logprob: -4.586674213409424
    7. ' à' → logprob: -4.586674213409424
    8. ' ' → logprob: -4.586674213409424
    9. 'from' → logprob: -4.711674213409424
    10. 'en' → logprob: -4.961674213409424

Token 164: ' ' (ID: 220)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0019320894498378038
    2. ' L' → logprob: -6.251932144165039
    3. '0' → logprob: -12.751932144165039
    4. '	L' → logprob: -15.251932144165039
    5. '=L' → logprob: -16.37693214416504
    6. '>L' → logprob: -16.62693214416504
    7. ' ' → logprob: -16.75193214416504
    8. 'l' → logprob: -17.12693214416504
    9. '_L' → logprob: -17.62693214416504
    10. '1' → logprob: -18.00193214416504

Token 165: '0' (ID: 15)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00013262155698612332
    2. '0' → logprob: -9.62513256072998
    3. ' L' → logprob: -9.62513256072998
    4. '	L' → logprob: -15.87513256072998
    5. ' ' → logprob: -16.375133514404297
    6. '>L' → logprob: -16.375133514404297
    7. '_L' → logprob: -16.875133514404297
    8. 'l' → logprob: -17.125133514404297
    9. '1' → logprob: -17.250133514404297
    10. '-L' → logprob: -17.625133514404297

Token 166: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38896000385284424
    2. ' for' → logprob: -1.1389600038528442
    3. '
' → logprob: -6.263959884643555
    4. 'range' → logprob: -9.763959884643555
    5. ',' → logprob: -10.388959884643555
    6. ' pour' → logprob: -10.513959884643555
    7. 'pour' → logprob: -10.638959884643555
    8. ' 
' → logprob: -11.388959884643555
    9. ':' → logprob: -11.763959884643555
    10. ' range' → logprob: -12.638959884643555

Token 167: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.962109386920929
    2. 'i' → logprob: -1.8371093273162842
    3. 'N' → logprob: -1.9621093273162842
    4. ' range' → logprob: -2.087109327316284
    5. ' N' → logprob: -2.212109327316284
    6. ' n' → logprob: -3.962109327316284
    7. 'range' → logprob: -4.087109565734863
    8. ' ' → logprob: -4.212109565734863
    9. 'n' → logprob: -4.837109565734863
    10. ' continue' → logprob: -4.962109565734863

Token 168: ''in' (ID: 17942)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8316674828529358
    2. 'range' → logprob: -1.831667423248291
    3. 'uis' → logprob: -2.331667423248291
    4. '<' → logprob: -2.331667423248291
    5. 'ur' → logprob: -3.581667423248291
    6. 'u' → logprob: -3.956667423248291
    7. 'uper' → logprob: -4.081667423248291
    8. 'er' → logprob: -4.456667423248291
    9. 'for' → logprob: -4.456667423248291
    10. 'é' → logprob: -4.581667423248291

Token 169: 'cré' (ID: 125389)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048626311123371124
    2. ' range' → logprob: -3.04862642288208
    3. '	range' → logprob: -10.423625946044922
    4. 'crement' → logprob: -12.923625946044922
    5. '_range' → logprob: -13.173625946044922
    6. ' in' → logprob: -13.423625946044922
    7. 'clude' → logprob: -14.923625946044922
    8. ' xrange' → logprob: -15.173625946044922
    9. 'rang' → logprob: -15.173625946044922
    10. '(range' → logprob: -15.173625946044922

Token 170: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0065504093654453754
    2. '\' → logprob: -6.631550312042236
    3. 'ment' → logprob: -6.756550312042236
    4. 'nte' → logprob: -7.006550312042236
    5. 'r' → logprob: -7.506550312042236
    6. 'm' → logprob: -7.881550312042236
    7. '(' → logprob: -8.381550788879395
    8. '*' → logprob: -8.631550788879395
    9. '́' → logprob: -8.631550788879395
    10. '`' → logprob: -8.881550788879395

Token 171: ' jusqu' (ID: 21961)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.7195128202438354
    2. ' in' → logprob: -1.8445128202438354
    3. ' dans' → logprob: -1.9695128202438354
    4. ' de' → logprob: -2.094512939453125
    5. 'in' → logprob: -2.219512939453125
    6. 'dans' → logprob: -2.219512939453125
    7. 'for' → logprob: -2.969512939453125
    8. ',' → logprob: -3.094512939453125
    9. ' for' → logprob: -4.094512939453125
    10. 'from' → logprob: -4.219512939453125

Token 172: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.03318799287080765
    2. '’à' → logprob: -4.2831878662109375
    3. ' à' → logprob: -4.5331878662109375
    4. 'à' → logprob: -5.5331878662109375
    5. ''au' → logprob: -5.6581878662109375
    6. 'a' → logprob: -8.658187866210938
    7. 'au' → logprob: -9.033187866210938
    8. '<|end|>' → logprob: -9.158187866210938
    9. '’au' → logprob: -9.783187866210938
    10. 'e' → logprob: -10.033187866210938

Token 173: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.061970822513103485
    2. ' N' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.561970710754395
    4. '	N' → logprob: -13.811970710754395
    5. 'n' → logprob: -15.561970710754395
    6. '1' → logprob: -15.561970710754395
    7. '(N' → logprob: -16.31197166442871
    8. '<N' → logprob: -16.68697166442871
    9. ' ' → logprob: -16.81197166442871
    10. '```' → logprob: -16.93697166442871

Token 174: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.430325984954834
    2. ' for' → logprob: -1.055325984954834
    3. ',' → logprob: -7.305325984954834
    4. ' pour' → logprob: -8.555326461791992
    5. ' =' → logprob: -8.930326461791992
    6. '
' → logprob: -9.055326461791992
    7. 'pour' → logprob: -9.430326461791992
    8. '=' → logprob: -9.555326461791992
    9. ':' → logprob: -9.555326461791992
    10. 's' → logprob: -10.305326461791992

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -16.625028610229492
    4. 'N' → logprob: -17.125028610229492
    5. '-' → logprob: -18.875028610229492
    6. '   ' → logprob: -19.500028610229492
    7. '  ' → logprob: -19.812528610229492
    8. ',' → logprob: -19.812528610229492
    9. '0' → logprob: -20.062528610229492
    10. ' N' → logprob: -20.062528610229492

Token 176: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08306486904621124
    2. ' for' → logprob: -2.5830647945404053
    3. '
' → logprob: -5.708065032958984
    4. 'f' → logprob: -7.708065032958984
    5. ' 
' → logprob: -8.583065032958984
    6. ',' → logprob: -10.083065032958984
    7. ':' → logprob: -10.208065032958984
    8. 's' → logprob: -10.583065032958984
    9. 'i' → logprob: -10.708065032958984
    10. '  
' → logprob: -11.208065032958984

Token 177: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12741592526435852
    2. ' for' → logprob: -2.127415895462036
    3. 'f' → logprob: -7.752416133880615
    4. ' 
' → logprob: -10.127415657043457
    5. ',' → logprob: -12.502415657043457
    6. ' ' → logprob: -12.752415657043457
    7. ':' → logprob: -12.752415657043457
    8. 'i' → logprob: -13.002415657043457
    9. '
' → logprob: -13.627415657043457
    10. 'r' → logprob: -14.127415657043457

Token 178: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013923770748078823
    2. 'i' → logprob: -7.001392364501953
    3. ' ' → logprob: -7.751392364501953
    4. ' ' → logprob: -10.126392364501953
    5. ' _' → logprob: -12.001392364501953
    6. '	i' → logprob: -13.626392364501953
    7. ' ' → logprob: -13.751392364501953
    8. '_i' → logprob: -14.126392364501953
    9. ' ‌' → logprob: -14.376392364501953
    10. '_' → logprob: -14.501392364501953

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006735742092132568
    2. 'in' → logprob: -5.006735801696777
    3. ' ' → logprob: -11.131735801696777
    4. 'range' → logprob: -13.631735801696777
    5. '	in' → logprob: -13.881735801696777
    6. ')' → logprob: -14.506735801696777
    7. ',' → logprob: -14.756735801696777
    8. ' i' → logprob: -15.006735801696777
    9. 'n' → logprob: -15.319235801696777
    10. '  ' → logprob: -15.381735801696777

Token 180: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06994587928056717
    2. 'range' → logprob: -2.694945812225342
    3. '(range' → logprob: -12.8199462890625
    4. '	range' → logprob: -12.9449462890625
    5. ' ' → logprob: -13.0699462890625
    6. '0' → logprob: -14.5699462890625
    7. ' rang' → logprob: -14.6949462890625
    8. ' xrange' → logprob: -15.3199462890625
    9. ' ' → logprob: -15.5699462890625
    10. '   ' → logprob: -15.6949462890625

Token 181: '(N' (ID: 10564)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.01896064728498459
    2. '(' → logprob: -4.018960475921631
    3. '(N' → logprob: -7.143960475921631
    4. ' (' → logprob: -11.643960952758789
    5. '(
' → logprob: -11.643960952758789
    6. '(l' → logprob: -13.893960952758789
    7. '(i' → logprob: -14.643960952758789
    8. 'L' → logprob: -14.643960952758789
    9. '(n' → logprob: -15.018960952758789
    10. '(len' → logprob: -15.268960952758789

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00558447977527976
    2. ' ):' → logprob: -5.255584716796875
    3. '):
' → logprob: -8.380584716796875
    4. ')' → logprob: -9.130584716796875
    5. '+' → logprob: -11.880584716796875
    6. ':' → logprob: -13.005584716796875
    7. ' )' → logprob: -13.880584716796875
    8. ' ):
' → logprob: -14.505584716796875
    9. ',' → logprob: -14.630584716796875
    10. ' :' → logprob: -15.380584716796875

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35067397356033325
    2. ' apple' → logprob: -1.3506739139556885
    3. 'apple' → logprob: -3.3506739139556885
    4. '   ' → logprob: -7.225674152374268
    5. '
' → logprob: -8.72567367553711
    6. ' apples' → logprob: -8.97567367553711
    7. '	' → logprob: -9.35067367553711
    8. ' ' → logprob: -9.66317367553711
    9. '    
' → logprob: -9.66317367553711
    10. ' ' → logprob: -9.91317367553711

Token 184: ' #' (ID: 1069)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.04404759034514427
    2. ' apple' → logprob: -3.2940475940704346
    3. '   ' → logprob: -5.1690473556518555
    4. ' ' → logprob: -9.544047355651855
    5. 'a' → logprob: -10.044047355651855
    6. 'app' → logprob: -10.544047355651855
    7. 'ap' → logprob: -10.544047355651855
    8. 'value' → logprob: -10.669047355651855
    9. 'val' → logprob: -11.294047355651855
    10. '    
' → logprob: -11.294047355651855

Token 185: ' À' (ID: 27643)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0036036325618624687
    2. 'val' → logprob: -6.628603458404541
    3. ' apple' → logprob: -6.878603458404541
    4. 'value' → logprob: -7.253603458404541
    5. '   ' → logprob: -7.628603458404541
    6. ' ' → logprob: -11.2536039352417
    7. 'app' → logprob: -11.7536039352417
    8. 'a' → logprob: -11.8786039352417
    9. ' value' → logprob: -12.1286039352417
    10. 'ap' → logprob: -12.8786039352417

Token 186: ' chaque' (ID: 21194)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.163793683052063
    2. ' apple' → logprob: -1.913793683052063
    3. '   ' → logprob: -5.788793563842773
    4. ' ' → logprob: -8.538793563842773
    5. '    ' → logprob: -9.663793563842773
    6. 'app' → logprob: -10.288793563842773
    7. 'ap' → logprob: -10.288793563842773
    8. ' ' → logprob: -10.788793563842773
    9. '  ' → logprob: -10.913793563842773
    10. 'append' → logprob: -11.288793563842773

Token 187: ' it' (ID: 480)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.11715386807918549
    2. '   ' → logprob: -2.4921538829803467
    3. ' apple' → logprob: -3.8671538829803467
    4. 'ap' → logprob: -7.242153644561768
    5. ' ' → logprob: -7.492153644561768
    6. '
' → logprob: -7.617153644561768
    7. '    ' → logprob: -7.742153644561768
    8. '    
' → logprob: -7.867153644561768
    9. 'val' → logprob: -7.867153644561768
    10. 'value' → logprob: -7.867153644561768

Token 188: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.10304971039295197
    2. 'er' → logprob: -2.3530497550964355
    3. 'ér' → logprob: -6.3530497550964355
    4. 'éra' → logprob: -7.8530497550964355
    5. 'é' → logprob: -8.978049278259277
    6. 'éré' → logprob: -8.978049278259277
    7. 'érations' → logprob: -9.228049278259277
    8. 'érer' → logprob: -9.603049278259277
    9. 'e' → logprob: -9.978049278259277
    10. 'érêt' → logprob: -10.228049278259277

Token 189: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7263700366020203
    2. 'apple' → logprob: -0.8513700366020203
    3. ' apple' → logprob: -2.601370096206665
    4. ',' → logprob: -4.601369857788086
    5. '    ' → logprob: -6.351369857788086
    6. ' ,' → logprob: -6.851369857788086
    7. '       ' → logprob: -7.476369857788086
    8. '   ' → logprob: -7.476369857788086
    9. '    
' → logprob: -8.476369857788086
    10. ' ' → logprob: -8.601369857788086

Token 190: ' ajoute' (ID: 91611)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.018488673493266106
    2. ' apple' → logprob: -4.018488883972168
    3. '   ' → logprob: -8.143488883972168
    4. 'val' → logprob: -11.018488883972168
    5. 'value' → logprob: -11.768488883972168
    6. ' pomme' → logprob: -12.018488883972168
    7. 'app' → logprob: -12.268488883972168
    8. 'appel' → logprob: -12.518488883972168
    9. ' ' → logprob: -12.643488883972168
    10. 'ap' → logprob: -13.768488883972168

Token 191: ' (' (ID: 350)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.6348466277122498
    2. 'L' → logprob: -0.7598466277122498
    3. '(L' → logprob: -6.8848466873168945
    4. 'apple' → logprob: -8.134846687316895
    5. ' i' → logprob: -8.759846687316895
    6. 'i' → logprob: -8.884846687316895
    7. '   ' → logprob: -9.384846687316895
    8. '	L' → logprob: -9.384846687316895
    9. ' apple' → logprob: -9.384846687316895
    10. ' (' → logprob: -9.634846687316895

Token 192: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07949265837669373
    2. ' L' → logprob: -2.5794925689697266
    3. '(L' → logprob: -8.079492568969727
    4. '   ' → logprob: -8.579492568969727
    5. 'i' → logprob: -10.204492568969727
    6. ' ' → logprob: -10.954492568969727
    7. ' (' → logprob: -11.079492568969727
    8. '	L' → logprob: -11.454492568969727
    9. '    ' → logprob: -12.329492568969727
    10. ' i' → logprob: -12.329492568969727

Token 193: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34094560146331787
    2. '+' → logprob: -1.7159456014633179
    3. '+i' → logprob: -2.2159457206726074
    4. ' plus' → logprob: -10.21594524383545
    5. ' ' → logprob: -11.96594524383545
    6. ' ' → logprob: -12.21594524383545
    7. ' i' → logprob: -12.96594524383545
    8. 'plus' → logprob: -13.21594524383545
    9. '
' → logprob: -13.59094524383545
    10. ')+' → logprob: -13.96594524383545

Token 194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02326492965221405
    2. ' i' → logprob: -3.7732648849487305
    3. '   ' → logprob: -11.64826488494873
    4. ')' → logprob: -12.39826488494873
    5. ' ' → logprob: -12.64826488494873
    6. ')i' → logprob: -14.02326488494873
    7. '	i' → logprob: -14.27326488494873
    8. '
' → logprob: -14.27326488494873
    9. '  ' → logprob: -14.89826488494873
    10. '[i' → logprob: -15.39826488494873

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005948548787273467
    2. ' )' → logprob: -7.6255950927734375
    3. ')**' → logprob: -9.875595092773438
    4. '*' → logprob: -11.125595092773438
    5. '-' → logprob: -11.500595092773438
    6. ')
' → logprob: -11.750595092773438
    7. ')*' → logprob: -12.750595092773438
    8. '))' → logprob: -13.000595092773438
    9. ')`' → logprob: -13.125595092773438
    10. 'apple' → logprob: -13.375595092773438

Token 196: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5466081500053406
    2. ')' → logprob: -2.0466082096099854
    3. ' à' → logprob: -2.0466082096099854
    4. 'to' → logprob: -2.2966082096099854
    5. '+' → logprob: -3.5466082096099854
    6. ' ' → logprob: -4.421607971191406
    7. 'apple' → logprob: -4.671607971191406
    8. ' +' → logprob: -5.296607971191406
    9. ' )' → logprob: -6.671607971191406
    10. ' au' → logprob: -7.171607971191406

Token 197: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.3488061726093292
    2. ' apple' → logprob: -1.2238061428070068
    3. ' la' → logprob: -8.848806381225586
    4. 'la' → logprob: -10.098806381225586
    5. ' ' → logprob: -10.848806381225586
    6. 'ap' → logprob: -10.911306381225586
    7. ' ' → logprob: -10.973806381225586
    8. 'app' → logprob: -11.223806381225586
    9. 'a' → logprob: -11.598806381225586
    10. 'the' → logprob: -11.661306381225586

Token 198: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0002658655575942248
    2. 'liste' → logprob: -8.625266075134277
    3. ' apple' → logprob: -9.625266075134277
    4. 'list' → logprob: -12.375266075134277
    5. 'appel' → logprob: -12.625266075134277
    6. '   ' → logprob: -12.875266075134277
    7. 'ap' → logprob: -13.250266075134277
    8. 'p' → logprob: -13.500266075134277
    9. '```' → logprob: -13.500266075134277
    10. 'app' → logprob: -14.125266075134277

Token 199: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.019374974071979523
    2. ' apple' → logprob: -4.394374847412109
    3. '.apple' → logprob: -5.394374847412109
    4. '.append' → logprob: -6.894374847412109
    5. '.' → logprob: -7.144374847412109
    6. 'append' → logprob: -8.51937484741211
    7. 'app' → logprob: -9.51937484741211
    8. '   ' → logprob: -9.76937484741211
    9. ' .' → logprob: -9.89437484741211
    10. 'ap' → logprob: -10.51937484741211

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015109812375158072
    2. 'apple' → logprob: -9.125150680541992
    3. '
' → logprob: -10.875150680541992
    4. '   ' → logprob: -11.625150680541992
    5. ' apple' → logprob: -11.875150680541992
    6. '    
' → logprob: -12.750150680541992
    7. '       ' → logprob: -14.000150680541992
    8. '  ' → logprob: -14.125150680541992
    9. '```' → logprob: -14.125150680541992
    10. '    ' → logprob: -14.500150680541992

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014450833201408386
    2. 'apple' → logprob: -4.389451026916504
    3. ' apple' → logprob: -6.389451026916504
    4. '   ' → logprob: -9.389451026916504
    5. '    
' → logprob: -9.514451026916504
    6. '
' → logprob: -10.014451026916504
    7. '       ' → logprob: -10.764451026916504
    8. '```' → logprob: -11.889451026916504
    9. '    ' → logprob: -12.264451026916504
    10. '.apple' → logprob: -12.389451026916504

Token 202: ' #' (ID: 1069)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.8698328733444214
    2. '   ' → logprob: -1.1198328733444214
    3. ' apple' → logprob: -1.3698328733444214
    4. 'app' → logprob: -9.307332992553711
    5. '   ' → logprob: -9.869832992553711
    6. ' ' → logprob: -9.932332992553711
    7. '  ' → logprob: -10.307332992553711
    8. '.apple' → logprob: -10.682332992553711
    9. '    ' → logprob: -10.807332992553711
    10. ' ' → logprob: -10.807332992553711

Token 203: ' Cela' (ID: 44403)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.8121097087860107
    2. '   ' → logprob: -1.0621097087860107
    3. ' apple' → logprob: -1.5621097087860107
    4. '   ' → logprob: -8.68710994720459
    5. 'app' → logprob: -9.68710994720459
    6. ' ' → logprob: -9.93710994720459
    7. '
' → logprob: -9.99960994720459
    8. ' ' → logprob: -10.06210994720459
    9. '  ' → logprob: -10.12460994720459
    10. '    ' → logprob: -10.18710994720459

Token 204: ' correspond' (ID: 11095)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.11516714841127396
    2. ' apple' → logprob: -2.2401671409606934
    3. '   ' → logprob: -7.240167140960693
    4. '.apple' → logprob: -7.990167140960693
    5. 'aj' → logprob: -8.615167617797852
    6. '.append' → logprob: -8.740167617797852
    7. 'app' → logprob: -8.740167617797852
    8. ' ajoute' → logprob: -9.115167617797852
    9. 'append' → logprob: -9.490167617797852
    10. 'continue' → logprob: -9.740167617797852

Token 205: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04651375859975815
    2. '    ' → logprob: -4.421513557434082
    3. '   ' → logprob: -4.671513557434082
    4. ' a' → logprob: -5.046513557434082
    5. ' au' → logprob: -5.046513557434082
    6. 'à' → logprob: -5.046513557434082
    7. ' to' → logprob: -6.296513557434082
    8. ' aux' → logprob: -7.171513557434082
    9. ' ' → logprob: -7.546513557434082
    10. 'au' → logprob: -7.796513557434082

Token 206: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.5972510576248169
    2. ' apple' → logprob: -0.8472510576248169
    3. ' L' → logprob: -3.9722509384155273
    4. 'L' → logprob: -6.722250938415527
    5. ' ' → logprob: -8.097250938415527
    6. 'une' → logprob: -8.847250938415527
    7. ' une' → logprob: -9.222250938415527
    8. ' la' → logprob: -9.597250938415527
    9. ' apples' → logprob: -9.847250938415527
    10. ' ' → logprob: -10.097250938415527

Token 207: ' save' (ID: 5093)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.026289036497473717
    2. 'val' → logprob: -3.7762889862060547
    3. ' apple' → logprob: -6.401288986206055
    4. 'value' → logprob: -8.151288986206055
    5. ' valeur' → logprob: -8.651288986206055
    6. 'ap' → logprob: -8.651288986206055
    7. 'liste' → logprob: -9.276288986206055
    8. ' pomme' → logprob: -9.276288986206055
    9. 'L' → logprob: -9.526288986206055
    10. ' L' → logprob: -9.526288986206055

Token 208: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.004084335640072823
    2. 'urs' → logprob: -5.62908411026001
    3. 't' → logprob: -9.379084587097168
    4. 'g' → logprob: -9.879084587097168
    5. 'r' → logprob: -10.004084587097168
    6. '#' → logprob: -10.504084587097168
    7. '=' → logprob: -11.004084587097168
    8. '(' → logprob: -11.004084587097168
    9. '```' → logprob: -11.379084587097168
    10. 'l' → logprob: -11.441584587097168

Token 209: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7475325465202332
    2. ' apple' → logprob: -1.497532606124878
    3. 'apple' → logprob: -1.622532606124878
    4. '_' → logprob: -2.872532606124878
    5. ' _' → logprob: -4.872532367706299
    6. '   ' → logprob: -4.872532367706299
    7. 'de' → logprob: -5.122532367706299
    8. ' des' → logprob: -5.372532367706299
    9. ' ' → logprob: -5.497532367706299
    10. '.append' → logprob: -5.622532367706299

Token 210: ' chaque' (ID: 21194)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.10362032055854797
    2. ' apple' → logprob: -2.6036202907562256
    3. ' L' → logprob: -4.353620529174805
    4. '(L' → logprob: -5.603620529174805
    5. ' pomme' → logprob: -5.728620529174805
    6. 'L' → logprob: -6.603620529174805
    7. ' (' → logprob: -7.228620529174805
    8. ' la' → logprob: -7.353620529174805
    9. 'une' → logprob: -8.103620529174805
    10. 'abs' → logprob: -8.228620529174805

Token 211: ' pomme' (ID: 197262)
  Prédit: ' pomme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pomme' → logprob: -0.4454677402973175
    2. 'p' → logprob: -1.0704677104949951
    3. 'apple' → logprob: -4.820467948913574
    4. 'pom' → logprob: -5.070467948913574
    5. ' p' → logprob: -6.445467948913574
    6. ' apple' → logprob: -8.195467948913574
    7. '   ' → logprob: -9.570467948913574
    8. 'po' → logprob: -9.570467948913574
    9. ' pommes' → logprob: -9.570467948913574
    10. ' ' → logprob: -10.070467948913574

Token 212: ' située' (ID: 95008)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00413444172590971
    2. 'apple' → logprob: -5.629134654998779
    3. ' apple' → logprob: -7.879134654998779
    4. '   ' → logprob: -9.504134178161621
    5. '
' → logprob: -10.754134178161621
    6. '    
' → logprob: -11.004134178161621
    7. '```' → logprob: -11.629134178161621
    8. '	' → logprob: -12.254134178161621
    9. '       ' → logprob: -12.379134178161621
    10. ' ' → logprob: -12.629134178161621

Token 213: ' cons' (ID: 1473)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6123765707015991
    2. ' dans' → logprob: -1.2373765707015991
    3. 'dans' → logprob: -2.8623766899108887
    4. ' au' → logprob: -3.6123766899108887
    5. ' sur' → logprob: -4.237376689910889
    6. '.append' → logprob: -4.612376689910889
    7. ',' → logprob: -4.862376689910889
    8. '   ' → logprob: -4.987376689910889
    9. ')' → logprob: -5.237376689910889
    10. ' ' → logprob: -5.362376689910889

Token 214: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.03598584234714508
    2. 'id' → logprob: -4.285985946655273
    3. 'é' → logprob: -5.035985946655273
    4. 'ér' → logprob: -5.660985946655273
    5. 'ac' → logprob: -6.285985946655273
    6. 'éc' → logprob: -6.410985946655273
    7. '   ' → logprob: -6.535985946655273
    8. 'er' → logprob: -6.910985946655273
    9. 't' → logprob: -7.285985946655273
    10. 'u' → logprob: -7.660985946655273

Token 215: 'ivement' (ID: 37978)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.03304465115070343
    2. 'ivement' → logprob: -3.7830445766448975
    3. 'utive' → logprob: -5.533044815063477
    4. '   ' → logprob: -6.283044815063477
    5. 'i' → logprob: -6.658044815063477
    6. ' à' → logprob: -7.158044815063477
    7. 'if' → logprob: -7.533044815063477
    8. 'iv' → logprob: -8.408044815063477
    9. ' dans' → logprob: -8.533044815063477
    10. 'itive' → logprob: -9.158044815063477

Token 216: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008175285533070564
    2. 'apple' → logprob: -4.883175373077393
    3. ' apple' → logprob: -7.758175373077393
    4. '   ' → logprob: -10.258174896240234
    5. '       ' → logprob: -11.008174896240234
    6. ',' → logprob: -11.133174896240234
    7. '    ' → logprob: -11.258174896240234
    8. '  ' → logprob: -11.383174896240234
    9. '	' → logprob: -11.758174896240234
    10. '    
' → logprob: -12.258174896240234

Token 217: ' partir' (ID: 12100)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04374684765934944
    2. ' L' → logprob: -3.1687469482421875
    3. 'l' → logprob: -7.6687469482421875
    4. 'i' → logprob: -9.543746948242188
    5. ' la' → logprob: -10.293746948242188
    6. 'position' → logprob: -10.543746948242188
    7. ' l' → logprob: -10.793746948242188
    8. ' ' → logprob: -11.043746948242188
    9. '+' → logprob: -11.418746948242188
    10. 'index' → logprob: -11.543746948242188

Token 218: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0952472984790802
    2. 'de' → logprob: -2.845247268676758
    3. ' du' → logprob: -4.345247268676758
    4. '(L' → logprob: -4.720247268676758
    5. ' L' → logprob: -5.720247268676758
    6. ' à' → logprob: -5.970247268676758
    7. '   ' → logprob: -6.470247268676758
    8. 'du' → logprob: -7.095247268676758
    9. ' (' → logprob: -7.345247268676758
    10. 'L' → logprob: -7.470247268676758

Token 219: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4741128385066986
    2. ' L' → logprob: -0.974112868309021
    3. ' ' → logprob: -11.474112510681152
    4. 'l' → logprob: -11.849112510681152
    5. '(L' → logprob: -11.974112510681152
    6. ' ' → logprob: -12.599112510681152
    7. '	L' → logprob: -12.974112510681152
    8. ' (' → logprob: -13.474112510681152
    9. '_L' → logprob: -14.349112510681152
    10. ' la' → logprob: -14.974112510681152

Token 220: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009515985148027539
    2. 'apple' → logprob: -7.250951766967773
    3. '   ' → logprob: -9.125951766967773
    4. ' apple' → logprob: -9.375951766967773
    5. '    
' → logprob: -11.250951766967773
    6. '
' → logprob: -11.875951766967773
    7. '	' → logprob: -12.250951766967773
    8. '       ' → logprob: -12.375951766967773
    9. '   ' → logprob: -12.625951766967773
    10. '    ' → logprob: -12.625951766967773

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009311101748608053
    2. 'apple' → logprob: -7.500931262969971
    3. ' apple' → logprob: -8.250930786132812
    4. '   ' → logprob: -9.250930786132812
    5. '```' → logprob: -12.000930786132812
    6. '       ' → logprob: -13.000930786132812
    7. '   ' → logprob: -13.125930786132812
    8. '  ' → logprob: -13.500930786132812
    9. '    
' → logprob: -13.500930786132812
    10. '    ' → logprob: -13.813430786132812

Token 222: ' apple' (ID: 30366)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30698248744010925
    2. 'apple' (adapté à ' apple') → logprob: -1.4319825172424316
    3. ' apple' → logprob: -3.6819825172424316
    4. '   ' → logprob: -8.931982040405273
    5. 'app' → logprob: -10.181982040405273
    6. '  ' → logprob: -10.744482040405273
    7. ' ' → logprob: -10.869482040405273
    8. ' ' → logprob: -11.181982040405273
    9. '    
' → logprob: -11.369482040405273
    10. 'ap' → logprob: -11.556982040405273

Token 223: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031793788075447083
    2. '.' → logprob: -5.753179550170898
    3. '.app' → logprob: -14.878179550170898
    4. 'append' → logprob: -14.878179550170898
    5. ' .' → logprob: -15.128179550170898
    6. '.add' → logprob: -15.503179550170898
    7. '.extend' → logprob: -15.503179550170898
    8. '.ap' → logprob: -16.5031795501709
    9. '.Append' → logprob: -16.8781795501709
    10. '.push' → logprob: -17.0031795501709

Token 224: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0009175319573841989
    2. '(' → logprob: -7.000917434692383
    3. ' (' → logprob: -12.625917434692383
    4. '((' → logprob: -13.000917434692383
    5. '(
' → logprob: -15.750917434692383
    6. ' L' → logprob: -16.000917434692383
    7. '(l' → logprob: -16.250917434692383
    8. 'L' → logprob: -17.625917434692383
    9. '(int' → logprob: -18.750917434692383
    10. '(i' → logprob: -19.875917434692383

Token 225: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47544026374816895
    2. '+' → logprob: -0.975440263748169
    3. '+i' → logprob: -6.60044002532959
    4. ')' → logprob: -13.97544002532959
    5. '+
' → logprob: -14.85044002532959
    6. '   ' → logprob: -14.97544002532959
    7. ' ' → logprob: -15.35044002532959
    8. ' +
' → logprob: -15.35044002532959
    9. ' plus' → logprob: -15.85044002532959
    10. '＋' → logprob: -15.85044002532959

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008615872822701931
    2. ' i' → logprob: -4.758615970611572
    3. '   ' → logprob: -14.133615493774414
    4. ' ' → logprob: -15.133615493774414
    5. '	i' → logprob: -15.133615493774414
    6. ')' → logprob: -18.258615493774414
    7. '  ' → logprob: -18.508615493774414
    8. '1' → logprob: -18.758615493774414
    9. '_i' → logprob: -19.633615493774414
    10. '    ' → logprob: -19.633615493774414

Token 227: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ' )' → logprob: -12.375004768371582
    3. ')
' → logprob: -15.125004768371582
    4. '))' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.750003814697266
    6. ')`' → logprob: -19.000003814697266
    7. ')#' → logprob: -19.500003814697266
    8. '),' → logprob: -20.000003814697266
    9. '+' → logprob: -20.000003814697266
    10. ')}' → logprob: -20.250003814697266

Token 228: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' Trie' (ID: 131955)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4388703405857086
    2. 'total' → logprob: -1.9388703107833862
    3. 'if' → logprob: -2.063870429992676
    4. 'sum' → logprob: -3.563870429992676
    5. 'min' → logprob: -4.188870429992676
    6. 'print' → logprob: -4.313870429992676
    7. 'm' → logprob: -5.063870429992676
    8. 's' → logprob: -5.313870429992676
    9. 'apple' → logprob: -5.813870429992676
    10. 'best' → logprob: -6.438870429992676

Token 230: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.08211742341518402
    2. '(' → logprob: -2.7071173191070557
    3. '()' → logprob: -4.957117557525635
    4. ' apple' → logprob: -5.332117557525635
    5. '.apple' → logprob: -9.707117080688477
    6. 'une' → logprob: -10.957117080688477
    7. 'la' → logprob: -10.957117080688477
    8. '#' → logprob: -10.957117080688477
    9. '()
' → logprob: -10.957117080688477
    10. ' (' → logprob: -11.207117080688477

Token 231: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0026233356911689043
    2. ' apple' → logprob: -6.502623558044434
    3. 'liste' → logprob: -7.002623558044434
    4. 'list' → logprob: -8.752623558044434
    5. ' liste' → logprob: -10.752623558044434
    6. ' pomme' → logprob: -12.252623558044434
    7. ' list' → logprob: -12.877623558044434
    8. 'lista' → logprob: -13.127623558044434
    9. 'ap' → logprob: -13.127623558044434
    10. '```' → logprob: -13.190123558044434

Token 232: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.006276201456785202
    2. '(' → logprob: -5.1312761306762695
    3. '.apple' → logprob: -8.88127613067627
    4. ' apple' → logprob: -9.00627613067627
    5. '()' → logprob: -10.75627613067627
    6. '```' → logprob: -11.50627613067627
    7. '.' → logprob: -12.25627613067627
    8. 'sorted' → logprob: -12.50627613067627
    9. '(
' → logprob: -12.50627613067627
    10. '#' → logprob: -12.50627613067627

Token 233: ' avec' (ID: 3937)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.13663135468959808
    2. 'apple' → logprob: -2.1366312503814697
    3. '.' → logprob: -5.136631488800049
    4. '.apple' → logprob: -5.636631488800049
    5. '.
' → logprob: -9.01163101196289
    6. 'sort' → logprob: -10.38663101196289
    7. ',' → logprob: -11.13663101196289
    8. '.reverse' → logprob: -11.51163101196289
    9. '.append' → logprob: -11.76163101196289
    10. ' apple' → logprob: -11.88663101196289

Token 234: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0047218031249940395
    2. 'reverse' → logprob: -5.504721641540527
    3. ')' → logprob: -8.379721641540527
    4. ' apple' → logprob: -8.879721641540527
    5. '.apple' → logprob: -9.379721641540527
    6. '.reverse' → logprob: -9.879721641540527
    7. '()' → logprob: -10.254721641540527
    8. '.' → logprob: -10.504721641540527
    9. '(reverse' → logprob: -10.879721641540527
    10. 'sorted' → logprob: -11.004721641540527

Token 235: ' méthode' (ID: 71490)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.03240411728620529
    2. 'sorted' → logprob: -3.7824041843414307
    3. 'sort' → logprob: -5.532403945922852
    4. 'reverse' → logprob: -5.532403945922852
    5. '.sort' → logprob: -7.782403945922852
    6. ' apple' → logprob: -8.282403945922852
    7. '.apple' → logprob: -9.532403945922852
    8. '```' → logprob: -9.532403945922852
    9. 'key' → logprob: -9.657403945922852
    10. '#' → logprob: -9.907403945922852

Token 236: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.028613770380616188
    2. 'apple' → logprob: -3.778613805770874
    3. '.sort' → logprob: -5.403613567352295
    4. ' sort' → logprob: -7.778613567352295
    5. 'sorted' → logprob: -8.028614044189453
    6. ' apple' → logprob: -10.278614044189453
    7. ' .' → logprob: -11.403614044189453
    8. '	sort' → logprob: -11.403614044189453
    9. '.apple' → logprob: -11.653614044189453
    10. '.' → logprob: -11.653614044189453

Token 237: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00045379105722531676
    2. '()
' → logprob: -7.875453948974609
    3. 'apple' → logprob: -9.75045394897461
    4. '()`' → logprob: -12.25045394897461
    5. '(' → logprob: -12.37545394897461
    6. '()

' → logprob: -12.50045394897461
    7. '().' → logprob: -14.12545394897461
    8. ' ()' → logprob: -14.75045394897461
    9. '()
' → logprob: -15.12545394897461
    10. '())' → logprob: -15.62545394897461

Token 238: '#' (ID: 2)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -1.1279553291387856e-05
    2. ' apple' → logprob: -11.750011444091797
    3. '   ' → logprob: -12.875011444091797
    4. '
' → logprob: -15.500011444091797
    5. '```' → logprob: -15.500011444091797
    6. 'app' → logprob: -16.000011444091797
    7. '.apple' → logprob: -16.250011444091797
    8. '  
' → logprob: -16.875011444091797
    9. '    
' → logprob: -17.125011444091797
    10. ' ' → logprob: -17.250011444091797

Token 239: ' Le' (ID: 2018)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -8.590104698669165e-05
    2. ' apple' → logprob: -9.500085830688477
    3. '#' → logprob: -12.125085830688477
    4. '   ' → logprob: -12.625085830688477
    5. '
' → logprob: -14.250085830688477
    6. 'if' → logprob: -14.500085830688477
    7. '```' → logprob: -15.625085830688477
    8. ' ' → logprob: -15.875085830688477
    9. 'appel' → logprob: -16.000085830688477
    10. 'app' → logprob: -16.000085830688477

Token 240: ' param' (ID: 3802)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.015299723483622074
    2. 'reverse' → logprob: -5.1402997970581055
    3. ' apple' → logprob: -5.3902997970581055
    4. '#' → logprob: -5.5152997970581055
    5. ' reverse' → logprob: -7.8902997970581055
    6. '.apple' → logprob: -9.390299797058105
    7. 'key' → logprob: -9.890299797058105
    8. '.reverse' → logprob: -10.640299797058105
    9. 'sort' → logprob: -10.765299797058105
    10. '```' → logprob: -11.265299797058105

Token 241: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.060793668031692505
    2. 'etre' → logprob: -3.56079363822937
    3. '=' → logprob: -3.68579363822937
    4. 'ètres' → logprob: -5.935793876647949
    5. 'eter' → logprob: -7.185793876647949
    6. 'étr' → logprob: -7.560793876647949
    7. 'être' → logprob: -7.560793876647949
    8. 'etri' → logprob: -8.18579387664795
    9. '=None' → logprob: -8.68579387664795
    10. '#' → logprob: -9.06079387664795

Token 242: ' key' (ID: 2140)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.024048002436757088
    2. ' reverse' → logprob: -3.899048089981079
    3. '=' → logprob: -6.1490478515625
    4. '(reverse' → logprob: -6.7740478515625
    5. 'key' → logprob: -8.8990478515625
    6. 're' → logprob: -10.5240478515625
    7. ' key' → logprob: -10.8990478515625
    8. '   ' → logprob: -11.3990478515625
    9. 'rev' → logprob: -12.0240478515625
    10. 'remove' → logprob: -12.5240478515625

Token 243: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.5811983346939087
    2. '=' → logprob: -0.8311983346939087
    3. '=len' → logprob: -5.456198215484619
    4. '=int' → logprob: -7.206198215484619
    5. '=str' → logprob: -9.331198692321777
    6. '=sum' → logprob: -9.831198692321777
    7. '=None' → logprob: -10.081198692321777
    8. ' =' → logprob: -10.831198692321777
    9. '=min' → logprob: -12.581198692321777
    10. '=list' → logprob: -12.706198692321777

Token 244: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.002477796748280525
    2. 'lambda' → logprob: -6.002477645874023
    3. ' abs' → logprob: -14.252477645874023
    4. '```' → logprob: -15.002477645874023
    5. '(abs' → logprob: -15.377477645874023
    6. 'int' → logprob: -15.377477645874023
    7. '   ' → logprob: -15.502477645874023
    8. ' lambda' → logprob: -16.127477645874023
    9. '=lambda' → logprob: -16.127477645874023
    10. 'len' → logprob: -16.627477645874023

Token 245: ' indique' (ID: 97324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19156567752361298
    2. ',' → logprob: -1.8165656328201294
    3. '=' → logprob: -4.69156551361084
    4. '=lambda' → logprob: -6.44156551361084
    5. ',key' → logprob: -7.81656551361084
    6. ')=' → logprob: -8.94156551361084
    7. ',
' → logprob: -9.56656551361084
    8. ' ,' → logprob: -9.56656551361084
    9. ')
' → logprob: -9.69156551361084
    10. ' )' → logprob: -9.94156551361084

Token 246: ' qu' (ID: 474)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2085060477256775
    2. 'key' → logprob: -1.8335061073303223
    3. 'lambda' → logprob: -3.8335061073303223
    4. '=lambda' → logprob: -6.333506107330322
    5. '=' → logprob: -6.708506107330322
    6. '   ' → logprob: -6.833506107330322
    7. ' key' → logprob: -6.958506107330322
    8. 'que' → logprob: -7.208506107330322
    9. ' abs' → logprob: -8.208505630493164
    10. '(abs' → logprob: -8.708505630493164

Token 247: ''on' (ID: 25812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1521337628364563
    2. '=lambda' → logprob: -2.0271337032318115
    3. 'abs' → logprob: -4.902133941650391
    4. 'key' → logprob: -7.402133941650391
    5. 'lambda' → logprob: -7.527133941650391
    6. '   ' → logprob: -7.652133941650391
    7. ' key' → logprob: -9.52713394165039
    8. '=len' → logprob: -10.27713394165039
    9. 'la' → logprob: -10.40213394165039
    10. ' abs' → logprob: -10.77713394165039

Token 248: ' veut' (ID: 41653)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3298405706882477
    2. ' trie' → logprob: -2.204840660095215
    3. ' tr' → logprob: -2.579840660095215
    4. 'tri' → logprob: -3.454840660095215
    5. '#' → logprob: -3.704840660095215
    6. 'Trie' → logprob: -4.954840660095215
    7. ' tri' → logprob: -5.204840660095215
    8. '_tri' → logprob: -5.204840660095215
    9. 've' → logprob: -5.704840660095215
    10. ' veut' → logprob: -5.829840660095215

Token 249: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.008797744289040565
    2. ' tr' → logprob: -4.883797645568848
    3. '   ' → logprob: -7.008797645568848
    4. '	tr' → logprob: -9.383797645568848
    5. '#' → logprob: -9.508797645568848
    6. ' Trier' → logprob: -10.633797645568848
    7. 'que' → logprob: -10.883797645568848
    8. 'tri' → logprob: -11.258797645568848
    9. ' ' → logprob: -11.258797645568848
    10. 't' → logprob: -11.383797645568848

Token 250: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8675639629364014
    2. 'ier' → logprob: -0.9925639629364014
    3. 'ie' → logprob: -1.6175639629364014
    4. 'ié' → logprob: -4.6175642013549805
    5. 'iangle' → logprob: -8.36756420135498
    6. 'iere' → logprob: -8.99256420135498
    7. 'ière' → logprob: -9.11756420135498
    8. 'iable' → logprob: -9.11756420135498
    9. 'ieuse' → logprob: -9.36756420135498
    10. 'y' → logprob: -9.99256420135498

Token 251: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.09019625186920166
    2. '=' → logprob: -2.840196132659912
    3. 'key' → logprob: -3.840196132659912
    4. ',' → logprob: -5.965196132659912
    5. 'abs' → logprob: -6.715196132659912
    6. '   ' → logprob: -6.965196132659912
    7. '=lambda' → logprob: -7.090196132659912
    8. ' apple' → logprob: -8.59019660949707
    9. ' key' → logprob: -8.96519660949707
    10. '(' → logprob: -9.71519660949707

Token 252: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.003530105808749795
    2. 'key' → logprob: -6.128530025482178
    3. 'absolute' → logprob: -7.753530025482178
    4. 'abs' → logprob: -8.003530502319336
    5. ' apple' → logprob: -8.003530502319336
    6. 'liste' → logprob: -10.003530502319336
    7. 'val' → logprob: -10.003530502319336
    8. ' key' → logprob: -10.503530502319336
    9. ',' → logprob: -10.753530502319336
    10. 'clé' → logprob: -10.753530502319336

Token 253: ' selon' (ID: 27571)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011844506487250328
    2. '=' → logprob: -5.136844635009766
    3. 'apple' → logprob: -6.136844635009766
    4. '=lambda' → logprob: -6.636844635009766
    5. ',key' → logprob: -7.011844635009766
    6. '   ' → logprob: -7.011844635009766
    7. ' ,' → logprob: -8.011844635009766
    8. 'key' → logprob: -9.011844635009766
    9. 'abs' → logprob: -10.136844635009766
    10. 'avec' → logprob: -11.511844635009766

Token 254: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1499815285205841
    2. 'abs' → logprob: -2.0249814987182617
    3. 'lambda' → logprob: -5.399981498718262
    4. ' la' → logprob: -6.274981498718262
    5. 'l' → logprob: -7.524981498718262
    6. 'lam' → logprob: -9.649981498718262
    7. 'val' → logprob: -9.774981498718262
    8. 'les' → logprob: -9.899981498718262
    9. 'une' → logprob: -9.899981498718262
    10. '   ' → logprob: -10.649981498718262

Token 255: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12955527007579803
    2. 'val' → logprob: -2.1295552253723145
    3. 'lambda' → logprob: -6.1295552253723145
    4. 'value' → logprob: -8.629555702209473
    5. 'key' → logprob: -8.629555702209473
    6. ' abs' → logprob: -10.379555702209473
    7. ' valeur' → logprob: -11.254555702209473
    8. 'absolute' → logprob: -11.254555702209473
    9. 'fonction' → logprob: -11.379555702209473
    10. 'clé' → logprob: -12.379555702209473

Token 256: ' absol' (ID: 7374)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10911227017641068
    2. '=lambda' → logprob: -2.85911226272583
    3. 'abs' → logprob: -3.10911226272583
    4. '   ' → logprob: -7.73411226272583
    5. 'key' → logprob: -7.98411226272583
    6. 'absolute' → logprob: -8.359112739562988
    7. 'def' → logprob: -9.234112739562988
    8. '(abs' → logprob: -10.234112739562988
    9. ' =' → logprob: -10.359112739562988
    10. 'lambda' → logprob: -10.484112739562988

Token 257: 'ue' (ID: 466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21695353090763092
    2. 'ue' → logprob: -2.3419535160064697
    3. 'oute' → logprob: -2.9669535160064697
    4. 'ute' → logprob: -3.4669535160064697
    5. 'ol' → logprob: -4.466953754425049
    6. 'ule' → logprob: -5.716953754425049
    7. 'e' → logprob: -7.841953754425049
    8. '(' → logprob: -8.46695327758789
    9. '=value' → logprob: -8.84195327758789
    10. 'ale' → logprob: -9.09195327758789

Token 258: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3785715401172638
    2. 'apple' → logprob: -1.6285715103149414
    3. '=' → logprob: -2.2535715103149414
    4. '(' → logprob: -4.878571510314941
    5. ')' → logprob: -5.628571510314941
    6. '   ' → logprob: -6.753571510314941
    7. '),' → logprob: -8.378571510314941
    8. 'abs' → logprob: -8.503571510314941
    9. 'def' → logprob: -8.503571510314941
    10. '=lambda' → logprob: -8.753571510314941

Token 259: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41115492582321167
    2. 'apple' → logprob: -1.6611549854278564
    3. 'abs' → logprob: -2.2861549854278564
    4. 'lambda' → logprob: -3.6611549854278564
    5. ' x' → logprob: -4.286154747009277
    6. ' apple' → logprob: -6.411154747009277
    7. ' lambda' → logprob: -6.786154747009277
    8. 'la' → logprob: -7.036154747009277
    9. ' abs' → logprob: -7.911154747009277
    10. 'l' → logprob: -8.036154747009277

Token 260: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5792114734649658
    2. 'apple' → logprob: -1.7042114734649658
    3. '(x' → logprob: -2.329211473464966
    4. 'élé' → logprob: -2.579211473464966
    5. 'element' → logprob: -3.079211473464966
    6. 'elem' → logprob: -4.204211235046387
    7. 'val' → logprob: -5.079211235046387
    8. 'p' → logprob: -5.954211235046387
    9. 'item' → logprob: -5.954211235046387
    10. ' x' → logprob: -5.954211235046387

Token 261: '
' (ID: 198)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0001601539261173457
    2. ')' → logprob: -9.375160217285156
    3. ',' → logprob: -10.125160217285156
    4. ')
' → logprob: -10.500160217285156
    5. '),' → logprob: -13.000160217285156
    6. ' apple' → logprob: -13.500160217285156
    7. ').' → logprob: -13.750160217285156
    8. '```' → logprob: -14.375160217285156
    9. 'app' → logprob: -14.875160217285156
    10. '   ' → logprob: -15.000160217285156

Token 262: '#' (ID: 2)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -5.080963092041202e-06
    2. ' apple' → logprob: -12.875004768371582
    3. ',' → logprob: -13.875004768371582
    4. ')' → logprob: -14.250004768371582
    5. 'key' → logprob: -15.000004768371582
    6. '```' → logprob: -15.750004768371582
    7. ')
' → logprob: -16.6250057220459
    8. 'app' → logprob: -16.8750057220459
    9. '),' → logprob: -16.8750057220459
    10. '   ' → logprob: -16.8750057220459

Token 263: ' Cela' (ID: 44403)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -2.696889623621246e-06
    2. ' apple' → logprob: -13.12500286102295
    3. '#' → logprob: -15.00000286102295
    4. 'app' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '
' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. 'reverse' → logprob: -18.375001907348633
    9. 'python' → logprob: -18.625001907348633
    10. 'key' → logprob: -18.625001907348633

Token 264: ' veut' (ID: 41653)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.15590839087963104
    2. '#' → logprob: -2.7809083461761475
    3. ')' → logprob: -3.2809083461761475
    4. ').' → logprob: -4.780908584594727
    5. ' apple' → logprob: -5.030908584594727
    6. 'continue' → logprob: -5.155908584594727
    7. '.apple' → logprob: -5.280908584594727
    8. 'tr' → logprob: -6.030908584594727
    9. 'tri' → logprob: -6.405908584594727
    10. ',' → logprob: -6.530908584594727

Token 265: ' dire' (ID: 4071)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0010063735535368323
    2. '-dire' → logprob: -7.376006603240967
    3. ' dire' → logprob: -8.001006126403809
    4. '#' → logprob: -11.126006126403809
    5. 'dir' → logprob: -11.751006126403809
    6. 'bien' → logprob: -11.751006126403809
    7. '   ' → logprob: -11.751006126403809
    8. 'direction' → logprob: -12.876006126403809
    9. '```' → logprob: -14.376006126403809
    10. ' ' → logprob: -14.626006126403809

Token 266: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.41866588592529297
    2. ' que' → logprob: -1.293665885925293
    3. 'qu' → logprob: -3.293665885925293
    4. ' qu' → logprob: -4.668665885925293
    5. 'apple' → logprob: -4.918665885925293
    6. '   ' → logprob: -5.418665885925293
    7. '#' → logprob: -5.668665885925293
    8. 'la' → logprob: -7.043665885925293
    9. 'les' → logprob: -7.168665885925293
    10. ',' → logprob: -7.168665885925293

Token 267: ' les' (ID: 1341)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.009409783408045769
    2. 'la' → logprob: -5.7594099044799805
    3. '#' → logprob: -6.0094099044799805
    4. 'les' → logprob: -6.6344099044799805
    5. ' apple' → logprob: -6.8844099044799805
    6. 'on' → logprob: -7.1344099044799805
    7. 'le' → logprob: -8.88440990447998
    8. 'l' → logprob: -9.50940990447998
    9. 'python' → logprob: -9.50940990447998
    10. 'nous' → logprob: -10.13440990447998

Token 268: ' éléments' (ID: 57375)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.6551616191864014
    2. 'pom' → logprob: -1.1551616191864014
    3. 'élé' → logprob: -2.2801616191864014
    4. 'val' → logprob: -3.7801616191864014
    5. '#' → logprob: -4.4051618576049805
    6. ' pommes' → logprob: -4.5301618576049805
    7. 'elements' → logprob: -5.2801618576049805
    8. 'p' → logprob: -5.7801618576049805
    9. 'prem' → logprob: -6.6551618576049805
    10. ' pom' → logprob: -7.5301618576049805

Token 269: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4425105154514313
    2. 'apple' → logprob: -1.5675104856491089
    3. 's' → logprob: -2.9425106048583984
    4. 'ser' → logprob: -3.5675106048583984
    5. ' seront' → logprob: -4.067510604858398
    6. ',' → logprob: -4.442510604858398
    7. '   ' → logprob: -5.317510604858398
    8. 'à' → logprob: -5.567510604858398
    9. 'import' → logprob: -5.817510604858398
    10. 'les' → logprob: -5.817510604858398

Token 270: ' plus' (ID: 2932)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.007546642329543829
    2. '.sort' → logprob: -5.882546424865723
    3. '.apple' → logprob: -6.257546424865723
    4. '#' → logprob: -7.257546424865723
    5. '.append' → logprob: -7.632546424865723
    6. 'tr' → logprob: -8.007546424865723
    7. '   ' → logprob: -8.507546424865723
    8. 'import' → logprob: -8.882546424865723
    9. 'plus' → logprob: -9.132546424865723
    10. 'moins' → logprob: -9.132546424865723

Token 271: ' proches' (ID: 91241)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.010993586853146553
    2. ' proches' → logprob: -5.135993480682373
    3. 'près' → logprob: -5.385993480682373
    4. '```' → logprob: -8.760993957519531
    5. 'pr' → logprob: -9.510993957519531
    6. 'import' → logprob: -9.760993957519531
    7. 'prox' → logprob: -9.885993957519531
    8. 'pet' → logprob: -10.260993957519531
    9. 'prés' → logprob: -10.635993957519531
    10. '#' → logprob: -11.010993957519531

Token 272: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.03623949736356735
    2. '=' → logprob: -4.2862396240234375
    3. ' de' → logprob: -4.4112396240234375
    4. '   ' → logprob: -5.2862396240234375
    5. 'd' → logprob: -5.6612396240234375
    6. ',' → logprob: -8.286239624023438
    7. ' =' → logprob: -8.661239624023438
    8. '#' → logprob: -8.786239624023438
    9. 'apple' → logprob: -8.911239624023438
    10. 'abs' → logprob: -9.536239624023438

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.500049591064453
    3. 'zero' → logprob: -11.750049591064453
    4. ' zéro' → logprob: -11.875049591064453
    5. 'z' → logprob: -12.000049591064453
    6. ' zero' → logprob: -15.000049591064453
    7. ' z' → logprob: -17.500049591064453
    8. '０' → logprob: -17.500049591064453
    9. 'zer' → logprob: -18.375049591064453
    10. 'origine' → logprob: -18.625049591064453

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.407366916188039e-05
    2. 'z' → logprob: -10.000054359436035
    3. 'zero' → logprob: -12.000054359436035
    4. ' zéro' → logprob: -13.750054359436035
    5. ' ' → logprob: -14.000054359436035
    6. 'la' → logprob: -15.250054359436035
    7. 'l' → logprob: -15.875054359436035
    8. '```' → logprob: -16.25005340576172
    9. '０' → logprob: -17.87505340576172
    10. 'origine' → logprob: -18.12505340576172

Token 275: ' vi' (ID: 2640)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9594389200210571
    2. 'apple' → logprob: -1.4594389200210571
    3. '#' → logprob: -1.8344389200210571
    4. 's' → logprob: -2.3344388008117676
    5. ' seront' → logprob: -2.9594388008117676
    6. ',' → logprob: -3.5844388008117676
    7. '),' → logprob: -4.334438800811768
    8. '   ' → logprob: -4.834438800811768
    9. ').' → logprob: -4.959438800811768
    10. '.apple' → logprob: -5.459438800811768

Token 276: 'end' (ID: 419)
  Prédit: 'ennent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ennent' → logprob: -0.3699239194393158
    2. 'enn' → logprob: -1.8699239492416382
    3. 'end' → logprob: -2.2449238300323486
    4. 'v' → logprob: -3.3699238300323486
    5. 'sent' → logprob: -5.994924068450928
    6. 'vr' → logprob: -6.119924068450928
    7. 'vent' → logprob: -6.369924068450928
    8. 'iennent' → logprob: -6.494924068450928
    9. 'endra' → logprob: -6.619924068450928
    10. 'en' → logprob: -7.494924068450928

Token 277: 'ront' (ID: 30041)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3488835394382477
    2. 'nt' → logprob: -1.9738835096359253
    3. 'ront' → logprob: -2.223883628845215
    4. 'nent' → logprob: -4.223883628845215
    5. 'ant' → logprob: -4.473883628845215
    6. 't' → logprob: -4.848883628845215
    7. 'd' → logprob: -5.473883628845215
    8. 'aient' → logprob: -5.973883628845215
    9. 'dr' → logprob: -6.973883628845215
    10. '#' → logprob: -7.223883628845215

Token 278: ' au' (ID: 2791)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.12109055370092392
    2. ' en' → logprob: -2.3710906505584717
    3. 'avant' → logprob: -3.9960906505584717
    4. '   ' → logprob: -7.621090412139893
    5. ' avant' → logprob: -8.12109088897705
    6. 'first' → logprob: -8.12109088897705
    7. '	en' → logprob: -8.37109088897705
    8. 'd' → logprob: -8.49609088897705
    9. ' ' → logprob: -8.99609088897705
    10. 'prem' → logprob: -9.62109088897705

Token 279: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.000695515947882086
    2. 'd' → logprob: -8.12569522857666
    3. 'prem' → logprob: -8.62569522857666
    4. 'de' → logprob: -9.37569522857666
    5. 'dev' → logprob: -9.62569522857666
    6. ' début' → logprob: -10.62569522857666
    7. 'dess' → logprob: -11.12569522857666
    8. 'front' → logprob: -12.25069522857666
    9. 'begin' → logprob: -12.62569522857666
    10. '#' → logprob: -13.00069522857666

Token 280: ' de' (ID: 334)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.00010676169040380046
    2. ',' → logprob: -9.625106811523438
    3. ' apple' → logprob: -11.250106811523438
    4. '#' → logprob: -11.375106811523438
    5. ')' → logprob: -12.500106811523438
    6. ')
' → logprob: -12.750106811523438
    7. '   ' → logprob: -12.875106811523438
    8. '),' → logprob: -14.000106811523438
    9. 'app' → logprob: -14.000106811523438
    10. '```' → logprob: -14.125106811523438

Token 281: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.003656841581687331
    2. ' apple' → logprob: -5.62865686416626
    3. 'la' → logprob: -10.503656387329102
    4. ' la' → logprob: -12.378656387329102
    5. ' ' → logprob: -12.503656387329102
    6. 'the' → logprob: -12.753656387329102
    7. '   ' → logprob: -13.003656387329102
    8. '  ' → logprob: -13.128656387329102
    9. 'l' → logprob: -13.378656387329102
    10. 'a' → logprob: -13.753656387329102

Token 282: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.10576903820037842
    2. 'apple' → logprob: -2.480769157409668
    3. 'list' → logprob: -4.105769157409668
    4. ' liste' → logprob: -8.980769157409668
    5. 'lista' → logprob: -10.230769157409668
    6. 'Liste' → logprob: -11.355769157409668
    7. '#' → logprob: -11.855769157409668
    8. 'ap' → logprob: -12.230769157409668
    9. '```' → logprob: -12.480769157409668
    10. ' apple' → logprob: -12.605769157409668

Token 283: '
' (ID: 198)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -2.816093228830141e-06
    2. ' apple' → logprob: -13.75000286102295
    3. '#' → logprob: -14.12500286102295
    4. 'app' → logprob: -15.62500286102295
    5. ',' → logprob: -15.87500286102295
    6. '
' → logprob: -16.000001907348633
    7. '```' → logprob: -16.000001907348633
    8. '   ' → logprob: -16.125001907348633
    9. ')' → logprob: -16.750001907348633
    10. ')
' → logprob: -17.125001907348633

Token 284: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -1.5048530030981055e-06
    2. ' apple' → logprob: -13.875001907348633
    3. '#' → logprob: -16.125001907348633
    4. '```' → logprob: -16.250001907348633
    5. '
' → logprob: -16.625001907348633
    6. 'app' → logprob: -16.875001907348633
    7. ',' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.750001907348633
    9. ')' → logprob: -18.375001907348633
    10. 'reverse' → logprob: -18.625001907348633

Token 285: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0003819332632701844
    2. '.' → logprob: -7.875381946563721
    3. '.abs' → logprob: -14.625381469726562
    4. '.sorted' → logprob: -14.625381469726562
    5. 'sort' → logprob: -14.750381469726562
    6. ' .' → logprob: -15.750381469726562
    7. '=' → logprob: -16.250381469726562
    8. '.reverse' → logprob: -16.250381469726562
    9. '.s' → logprob: -16.375381469726562
    10. '	sort' → logprob: -18.125381469726562

Token 286: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -10.0000581741333
    3. 'key' → logprob: -11.3750581741333
    4. '(reverse' → logprob: -14.1250581741333
    5. '(
' → logprob: -15.3750581741333
    6. ' (' → logprob: -15.8750581741333
    7. '()' → logprob: -16.000059127807617
    8. ',key' → logprob: -16.375059127807617
    9. ' key' → logprob: -17.125059127807617
    10. '_key' → logprob: -18.375059127807617

Token 287: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.848420551046729e-05
    2. '=lambda' → logprob: -9.7500581741333
    3. '=
' → logprob: -16.875059127807617
    4. 'abs' → logprob: -17.000059127807617
    5. '=

' → logprob: -18.625059127807617
    6. ' =' → logprob: -18.625059127807617
    7. ')=' → logprob: -19.125059127807617
    8. '=len' → logprob: -19.250059127807617
    9. '(abs' → logprob: -19.750059127807617
    10. '=}' → logprob: -20.000059127807617

Token 288: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0280383548888494e-06
    2. ' abs' → logprob: -13.875000953674316
    3. '(abs' → logprob: -17.875001907348633
    4. 'lambda' → logprob: -18.625001907348633
    5. '   ' → logprob: -20.250001907348633
    6. 'ab' → logprob: -21.125001907348633
    7. '
' → logprob: -21.750001907348633
    8. 'absolute' → logprob: -22.000001907348633
    9. '```' → logprob: -22.000001907348633
    10. '.abs' → logprob: -22.250001907348633

Token 289: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '())' → logprob: -13.12500286102295
    3. '))' → logprob: -14.62500286102295
    4. ' )' → logprob: -16.000001907348633
    5. ')
' → logprob: -16.125001907348633
    6. '()' → logprob: -17.000001907348633
    7. '),' → logprob: -17.625001907348633
    8. ')`' → logprob: -18.000001907348633
    9. ',)' → logprob: -18.500001907348633
    10. ')#' → logprob: -18.625001907348633

Token 290: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5229259729385376
    2. 'result' → logprob: -1.8979259729385376
    3. 'sum' → logprob: -2.147925853729248
    4. 'print' → logprob: -2.772925853729248
    5. 's' → logprob: -3.272925853729248
    6. 'answer' → logprob: -3.897925853729248
    7. '#' → logprob: -5.272925853729248
    8. 'taste' → logprob: -6.147925853729248
    9. 'summ' → logprob: -6.147925853729248
    10. 'for' → logprob: -6.397925853729248

Token 291: ' Sup' (ID: 13606)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.32778286933898926
    2. 'result' → logprob: -2.5777828693389893
    3. 'sum' → logprob: -2.8277828693389893
    4. 's' → logprob: -2.9527828693389893
    5. 'print' → logprob: -2.9527828693389893
    6. '#' → logprob: -3.5777828693389893
    7. 'som' → logprob: -5.07778263092041
    8. 'answer' → logprob: -6.07778263092041
    9. 'summ' → logprob: -6.45278263092041
    10. 'S' → logprob: -7.57778263092041

Token 292: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.6393521428108215
    2. 'm' → logprob: -2.1393520832061768
    3. 'pr' → logprob: -2.5143520832061768
    4. '#' → logprob: -2.7643520832061768
    5. 'r' → logprob: -3.1393520832061768
    6. 'um' → logprob: -3.2643520832061768
    7. 'primer' → logprob: -3.2643520832061768
    8. 'prim' → logprob: -3.8893520832061768
    9. 'sum' → logprob: -4.514352321624756
    10. 'p' → logprob: -4.514352321624756

Token 293: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05906200781464577
    2. 'apple' → logprob: -2.9340620040893555
    3. '()' → logprob: -6.0590620040893555
    4. '(
' → logprob: -6.9340620040893555
    5. '(len' → logprob: -8.309062004089355
    6. 'sum' → logprob: -8.934062004089355
    7. '(sum' → logprob: -9.184062004089355
    8. '(ap' → logprob: -9.934062004089355
    9. '(

' → logprob: -10.309062004089355
    10. ' (' → logprob: -10.559062004089355

Token 294: ' premier' (ID: 15506)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.1778883934020996
    2. 'prem' → logprob: -2.8028883934020996
    3. 'dern' → logprob: -2.9278883934020996
    4. 'first' → logprob: -4.1778883934021
    5. '#' → logprob: -4.8028883934021
    6. '0' → logprob: -4.8028883934021
    7. 'p' → logprob: -4.9278883934021
    8. 'last' → logprob: -6.0528883934021
    9. 'if' → logprob: -6.3028883934021
    10. 'der' → logprob: -6.6778883934021

Token 295: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0370858758687973
    2. 'apple' → logprob: -3.537085771560669
    3. 'element' → logprob: -5.787086009979248
    4. ' élément' → logprob: -5.787086009979248
    5. 'e' → logprob: -7.662086009979248
    6. 'é' → logprob: -8.91208553314209
    7. ' apple' → logprob: -9.16208553314209
    8. 'él' → logprob: -9.41208553314209
    9. 'p' → logprob: -9.78708553314209
    10. 'lement' → logprob: -10.53708553314209

Token 296: ' de' (ID: 334)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.002145739272236824
    2. 'del' → logprob: -6.502145767211914
    3. 'pop' → logprob: -7.502145767211914
    4. '(' → logprob: -9.752145767211914
    5. '.pop' → logprob: -11.502145767211914
    6. '0' → logprob: -12.002145767211914
    7. ' apple' → logprob: -12.502145767211914
    8. 'ap' → logprob: -12.627145767211914
    9. '.apple' → logprob: -13.377145767211914
    10. 'appel' → logprob: -13.377145767211914

Token 297: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0002631238894537091
    2. ' apple' → logprob: -8.250263214111328
    3. 'a' → logprob: -15.250263214111328
    4. 'la' → logprob: -15.250263214111328
    5. 'appel' → logprob: -15.625263214111328
    6. '.apple' → logprob: -15.625263214111328
    7. '```' → logprob: -15.875263214111328
    8. 'ap' → logprob: -16.125263214111328
    9. 'fruit' → logprob: -16.125263214111328
    10. 'the' → logprob: -16.500263214111328

Token 298: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.012229661457240582
    2. 'liste' → logprob: -4.5122294425964355
    3. 'list' → logprob: -7.1372294425964355
    4. ' apple' → logprob: -9.012229919433594
    5. '```' → logprob: -10.262229919433594
    6. 'ap' → logprob: -10.512229919433594
    7. 'ma' → logprob: -11.012229919433594
    8. 'a' → logprob: -11.074729919433594
    9. 'lista' → logprob: -11.137229919433594
    10. 'appel' → logprob: -11.262229919433594

Token 299: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0004785744531545788
    2. 'del' → logprob: -7.750478744506836
    3. 'pop' → logprob: -10.000478744506836
    4. '.apple' → logprob: -14.250478744506836
    5. '.pop' → logprob: -14.375478744506836
    6. ' apple' → logprob: -14.500478744506836
    7. '```' → logprob: -14.500478744506836
    8. 'app' → logprob: -16.250478744506836
    9. '.' → logprob: -17.375478744506836
    10. 'appel' → logprob: -17.500478744506836

Token 300: ' avec' (ID: 3937)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0017252764664590359
    2. 'del' → logprob: -6.376725196838379
    3. 'pop' → logprob: -11.251725196838379
    4. '```' → logprob: -12.001725196838379
    5. '.apple' → logprob: -13.376725196838379
    6. '.pop' → logprob: -14.001725196838379
    7. ' apple' → logprob: -14.001725196838379
    8. ',' → logprob: -15.876725196838379
    9. '.' → logprob: -15.876725196838379
    10. ' del' → logprob: -16.376726150512695

Token 301: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.00020985817536711693
    2. ' apple' → logprob: -9.00020980834961
    3. 'del' → logprob: -10.12520980834961
    4. 'pop' → logprob: -10.25020980834961
    5. 'appel' → logprob: -12.00020980834961
    6. 'ap' → logprob: -13.12520980834961
    7. '```' → logprob: -13.87520980834961
    8. '.apple' → logprob: -14.62520980834961
    9. 'app' → logprob: -15.12520980834961
    10. '/apple' → logprob: -15.50020980834961

Token 302: ' notation' (ID: 92060)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.00025776340044103563
    2. 'apple' → logprob: -8.50025749206543
    3. '.pop' → logprob: -10.12525749206543
    4. 'del' → logprob: -11.37525749206543
    5. '0' → logprob: -13.25025749206543
    6. ' pop' → logprob: -14.75025749206543
    7. '.' → logprob: -15.25025749206543
    8. '```' → logprob: -16.00025749206543
    9. '`' → logprob: -16.37525749206543
    10. '1' → logprob: -16.37525749206543

Token 303: ' [' (ID: 723)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.4177013337612152
    2. '[' → logprob: -1.1677013635635376
    3. 'del' → logprob: -4.917701244354248
    4. 'pop' → logprob: -5.292701244354248
    5. '[]' → logprob: -5.417701244354248
    6. ' apple' → logprob: -5.667701244354248
    7. '[:]' → logprob: -5.667701244354248
    8. '[-' → logprob: -5.792701244354248
    9. '```' → logprob: -6.667701244354248
    10. '[:-' → logprob: -6.792701244354248

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007914528250694275
    2. ':]' → logprob: -5.6329145431518555
    3. '0' → logprob: -5.8829145431518555
    4. ':' → logprob: -6.6329145431518555
    5. ':-' → logprob: -9.257914543151855
    6. '-' → logprob: -10.257914543151855
    7. ']' → logprob: -11.632914543151855
    8. '```' → logprob: -11.757914543151855
    9. ' :]' → logprob: -12.007914543151855
    10. '::-' → logprob: -12.132914543151855

Token 305: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.00010437761375214905
    2. ':' → logprob: -9.750103950500488
    3. ':].' → logprob: -10.625103950500488
    4. ' :]' → logprob: -11.750103950500488
    5. ']' → logprob: -11.875103950500488
    6. ':],' → logprob: -12.250103950500488
    7. ':]

' → logprob: -13.625103950500488
    8. ':]
' → logprob: -14.125103950500488
    9. '::' → logprob: -17.250104904174805
    10. '1' → logprob: -17.375104904174805

Token 306: '#' (ID: 2)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.038381461054086685
    2. '=' → logprob: -3.288381576538086
    3. ' =' → logprob: -8.038381576538086
    4. ' apple' → logprob: -11.663381576538086
    5. 'app' → logprob: -13.163381576538086
    6. '.apple' → logprob: -13.663381576538086
    7. '   ' → logprob: -13.663381576538086
    8. ',' → logprob: -13.663381576538086
    9. '#' → logprob: -14.288381576538086
    10. '```' → logprob: -14.413381576538086

Token 307: ' Cela' (ID: 44403)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0001605115394340828
    2. ' apple' → logprob: -8.875160217285156
    3. 'sum' → logprob: -11.750160217285156
    4. 'result' → logprob: -13.000160217285156
    5. 'remaining' → logprob: -13.500160217285156
    6. '=' → logprob: -13.625160217285156
    7. 'rest' → logprob: -13.750160217285156
    8. '#' → logprob: -13.750160217285156
    9. 'total' → logprob: -13.875160217285156
    10. 'answer' → logprob: -14.125160217285156

Token 308: ' crée' (ID: 102256)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46585336327552795
    2. ' =' → logprob: -1.0908533334732056
    3. 'apple' → logprob: -3.590853452682495
    4. ' permet' → logprob: -6.215853214263916
    5. ' apple' → logprob: -6.465853214263916
    6. '#' → logprob: -7.215853214263916
    7. ' signifie' → logprob: -7.340853214263916
    8. 'ret' → logprob: -7.465853214263916
    9. 'est' → logprob: -7.715853214263916
    10. 'continue' → logprob: -7.840853214263916

Token 309: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8924776911735535
    2. ' une' → logprob: -1.0174777507781982
    3. 'apple' → logprob: -1.7674777507781982
    4. ' apple' → logprob: -2.8924777507781982
    5. 'a' → logprob: -6.517477512359619
    6. 'un' → logprob: -8.142477989196777
    7. 'ap' → logprob: -8.767477989196777
    8. ' la' → logprob: -8.767477989196777
    9. 'la' → logprob: -8.892477989196777
    10. ' un' → logprob: -9.142477989196777

Token 310: ' nouvelle' (ID: 24562)
  Prédit: 'nou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nou' → logprob: -0.02556222304701805
    2. 'apple' → logprob: -4.400562286376953
    3. 'new' → logprob: -4.525562286376953
    4. 'n' → logprob: -7.025562286376953
    5. ' nouvelle' → logprob: -7.025562286376953
    6. 'liste' → logprob: -8.400562286376953
    7. '```' → logprob: -9.900562286376953
    8. '#' → logprob: -10.900562286376953
    9. 's' → logprob: -11.525562286376953
    10. 'cop' → logprob: -11.775562286376953

Token 311: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.05067053809762001
    2. 'liste' → logprob: -3.175670623779297
    3. ' apple' → logprob: -5.175670623779297
    4. 'list' → logprob: -7.050670623779297
    5. ' liste' → logprob: -7.050670623779297
    6. 'lista' → logprob: -10.050670623779297
    7. ' pomme' → logprob: -10.425670623779297
    8. ' list' → logprob: -10.550670623779297
    9. '#' → logprob: -10.800670623779297
    10. 'ligne' → logprob: -11.050670623779297

Token 312: ' qui' (ID: 2780)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.31213894486427307
    2. '=' → logprob: -1.5621389150619507
    3. ' =' → logprob: -2.9371390342712402
    4. ' apple' → logprob: -5.31213903427124
    5. ',' → logprob: -8.562138557434082
    6. '   ' → logprob: -9.562138557434082
    7. 'app' → logprob: -10.812138557434082
    8. 'ap' → logprob: -10.812138557434082
    9. '#' → logprob: -10.937138557434082
    10. '.apple' → logprob: -10.937138557434082

Token 313: ' commence' (ID: 44755)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.332518994808197
    2. ' =' → logprob: -1.5825190544128418
    3. 'apple' → logprob: -2.832519054412842
    4. ' apple' → logprob: -5.082519054412842
    5. ' contient' → logprob: -5.207519054412842
    6. 'cont' → logprob: -5.707519054412842
    7. 'est' → logprob: -6.832519054412842
    8. 's' → logprob: -7.582519054412842
    9. 'exclude' → logprob: -7.707519054412842
    10. 'ignore' → logprob: -7.707519054412842

Token 314: ' à' (ID: 1221)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.6648887395858765
    2. '=' → logprob: -1.7898887395858765
    3. 'from' → logprob: -1.7898887395858765
    4. 'à' → logprob: -2.289888858795166
    5. ' à' → logprob: -4.039888858795166
    6. '[' → logprob: -4.664888858795166
    7. ' =' → logprob: -4.789888858795166
    8. ' from' → logprob: -5.539888858795166
    9. 'ap' → logprob: -5.914888858795166
    10. 'after' → logprob: -6.539888858795166

Token 315: ' l' (ID: 305)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.13372136652469635
    2. '1' → logprob: -2.258721351623535
    3. 'index' → logprob: -4.508721351623535
    4. ' apple' → logprob: -5.758721351623535
    5. '[' → logprob: -6.133721351623535
    6. ' ' → logprob: -6.258721351623535
    7. ' index' → logprob: -7.633721351623535
    8. 'la' → logprob: -7.633721351623535
    9. 'indice' → logprob: -7.758721351623535
    10. 'l' → logprob: -8.008721351623535

Token 316: ''ind' (ID: 82245)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4564974904060364
    2. 'index' → logprob: -1.8314974308013916
    3. '[' → logprob: -2.0814974308013916
    4. 'indice' → logprob: -3.2064974308013916
    5. 'apple' → logprob: -3.5814974308013916
    6. '`' → logprob: -6.456497669219971
    7. '=' → logprob: -6.581497669219971
    8. '#' → logprob: -6.706497669219971
    9. ''' → logprob: -6.706497669219971
    10. 'un' → logprob: -6.956497669219971

Token 317: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.348611444234848
    2. 'ice' → logprob: -1.2236114740371704
    3. 'ices' → logprob: -9.223611831665039
    4. 'exe' → logprob: -10.223611831665039
    5. 'e' → logprob: -12.223611831665039
    6. '#' → logprob: -12.348611831665039
    7. 'é' → logprob: -12.598611831665039
    8. 'exp' → logprob: -12.723611831665039
    9. 'ic' → logprob: -12.723611831665039
    10. '[' → logprob: -12.848611831665039

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005604196921922266
    2. ' ' → logprob: -7.500560283660889
    3. '   ' → logprob: -12.750560760498047
    4. '[' → logprob: -13.750560760498047
    5. '```' → logprob: -13.750560760498047
    6. '
' → logprob: -14.500560760498047
    7. '=' → logprob: -14.750560760498047
    8. ' ' → logprob: -14.750560760498047
    9. '  ' → logprob: -15.500560760498047
    10. '0' → logprob: -15.625560760498047

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.274932143744081e-05
    2. 'apple' → logprob: -10.750042915344238
    3. ' ' → logprob: -11.875042915344238
    4. '[' → logprob: -12.125042915344238
    5. '0' → logprob: -12.875042915344238
    6. '   ' → logprob: -13.125042915344238
    7. '```' → logprob: -13.125042915344238
    8. '
' → logprob: -14.375042915344238
    9. '=' → logprob: -14.750042915344238
    10. '`' → logprob: -15.000042915344238

Token 320: ' et' (ID: 859)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.008621785789728165
    2. '=' → logprob: -4.883621692657471
    3. ' =' → logprob: -7.258621692657471
    4. ' apple' → logprob: -8.758622169494629
    5. ',' → logprob: -9.633622169494629
    6. '.apple' → logprob: -10.883622169494629
    7. '   ' → logprob: -10.883622169494629
    8. 'app' → logprob: -10.883622169494629
    9. '#' → logprob: -12.008622169494629
    10. '=
' → logprob: -12.133622169494629

Token 321: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2832472622394562
    2. 'se' → logprob: -1.9082472324371338
    3. 'incl' → logprob: -3.533247232437134
    4. 's' → logprob: -3.783247232437134
    5. 'ignore' → logprob: -4.408247470855713
    6. 'ne' → logprob: -5.158247470855713
    7. 'qui' → logprob: -5.408247470855713
    8. 'exclude' → logprob: -5.533247470855713
    9. 'contin' → logprob: -5.783247470855713
    10. ' continue' → logprob: -5.783247470855713

Token 322: ' jusqu' (ID: 21961)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.13048698008060455
    2. ' jusqu' → logprob: -2.1304869651794434
    3. 'au' → logprob: -6.380486965179443
    4. 'à' → logprob: -6.755486965179443
    5. ' jusque' → logprob: -8.880487442016602
    6. ' à' → logprob: -9.005487442016602
    7. ':' → logprob: -9.505487442016602
    8. ' au' → logprob: -9.505487442016602
    9. ',' → logprob: -9.880487442016602
    10. '#' → logprob: -10.255487442016602

Token 323: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.09560369700193405
    2. 'à' → logprob: -2.7206037044525146
    3. ''au' → logprob: -4.2206034660339355
    4. 'au' → logprob: -5.3456034660339355
    5. '’à' → logprob: -5.4706034660339355
    6. 'a' → logprob: -7.3456034660339355
    7. ' à' → logprob: -8.720603942871094
    8. '   ' → logprob: -8.845603942871094
    9. '’au' → logprob: -8.970603942871094
    10. '=' → logprob: -9.095603942871094

Token 324: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.42650163173675537
    2. 'None' → logprob: -1.1765016317367554
    3. 'la' → logprob: -3.676501750946045
    4. ' None' → logprob: -4.926501750946045
    5. ' la' → logprob: -5.551501750946045
    6. ' len' → logprob: -6.551501750946045
    7. ':' → logprob: -8.051501274108887
    8. 'the' → logprob: -9.051501274108887
    9. '[len' → logprob: -9.176501274108887
    10. ' ' → logprob: -9.426501274108887

Token 325: ' fin' (ID: 2131)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5323676466941833
    2. 'None' → logprob: -0.9073676466941833
    3. 'fin' → logprob: -5.032367706298828
    4. ' None' → logprob: -6.907367706298828
    5. 'end' → logprob: -7.282367706298828
    6. '[len' → logprob: -8.657367706298828
    7. '-fin' → logprob: -8.782367706298828
    8. '```' → logprob: -9.032367706298828
    9. '-' → logprob: -9.157367706298828
    10. 'N' → logprob: -10.157367706298828

Token 326: ' de' (ID: 334)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0004418743774294853
    2. ' apple' → logprob: -8.000441551208496
    3. '=' → logprob: -9.500441551208496
    4. ' =' → logprob: -10.875441551208496
    5. '   ' → logprob: -12.250441551208496
    6. ',' → logprob: -13.000441551208496
    7. 'result' → logprob: -14.125441551208496
    8. 'app' → logprob: -14.250441551208496
    9. '.apple' → logprob: -14.500441551208496
    10. 'a' → logprob: -14.625441551208496

Token 327: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0052486988715827465
    2. ' apple' → logprob: -5.255248546600342
    3. 'la' → logprob: -12.2552490234375
    4. ' ' → logprob: -13.0052490234375
    5. 'len' → logprob: -13.5052490234375
    6. ' la' → logprob: -13.6302490234375
    7. '```' → logprob: -13.6302490234375
    8. '.apple' → logprob: -14.2552490234375
    9. 'ap' → logprob: -14.6302490234375
    10. '   ' → logprob: -14.8802490234375

Token 328: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.07254984974861145
    2. 'liste' → logprob: -2.697549819946289
    3. 'list' → logprob: -6.072549819946289
    4. 'lista' → logprob: -9.197549819946289
    5. ' apple' → logprob: -9.697549819946289
    6. ' liste' → logprob: -10.447549819946289
    7. '```' → logprob: -10.572549819946289
    8. 'ap' → logprob: -11.197549819946289
    9. 'Liste' → logprob: -11.197549819946289
    10. 'len' → logprob: -11.447549819946289

Token 329: '
' (ID: 198)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0010735384421423078
    2. '=' → logprob: -7.001073360443115
    3. ' apple' → logprob: -9.626073837280273
    4. ' =' → logprob: -9.626073837280273
    5. '   ' → logprob: -11.376073837280273
    6. '#' → logprob: -12.251073837280273
    7. 'app' → logprob: -12.501073837280273
    8. ',' → logprob: -12.876073837280273
    9. '.apple' → logprob: -13.626073837280273
    10. 'ap' → logprob: -14.251073837280273

Token 330: '#' (ID: 2)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0007129086880013347
    2. ' apple' → logprob: -7.250712871551514
    3. 'app' → logprob: -15.125713348388672
    4. 'remaining' → logprob: -15.125713348388672
    5. '.apple' → logprob: -15.250713348388672
    6. '```' → logprob: -15.250713348388672
    7. 'result' → logprob: -15.375713348388672
    8. '   ' → logprob: -15.625713348388672
    9. 'final' → logprob: -15.625713348388672
    10. '#' → logprob: -15.750713348388672

Token 331: ' Le' (ID: 2018)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0005867527215741575
    2. ' apple' → logprob: -7.625586986541748
    3. 'answer' → logprob: -10.50058650970459
    4. 'result' → logprob: -10.62558650970459
    5. 'selected' → logprob: -12.12558650970459
    6. 'rest' → logprob: -12.37558650970459
    7. 'remaining' → logprob: -12.50058650970459
    8. 'sweet' → logprob: -12.75058650970459
    9. 'best' → logprob: -12.87558650970459
    10. 'new' → logprob: -12.87558650970459

Token 332: ' premier' (ID: 15506)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0026277387514710426
    2. 'result' → logprob: -7.127627849578857
    3. '#' → logprob: -7.377627849578857
    4. 'sum' → logprob: -7.877627849578857
    5. ' apple' → logprob: -8.0026273727417
    6. 'L' → logprob: -9.3776273727417
    7. 's' → logprob: -9.5026273727417
    8. 'total' → logprob: -10.1276273727417
    9. 'answer' → logprob: -10.1276273727417
    10. 'ap' → logprob: -10.2526273727417

Token 333: ' élément' (ID: 99627)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.591316282749176
    2. '=' → logprob: -0.966316282749176
    3. ' =' → logprob: -2.8413162231445312
    4. ' apple' → logprob: -5.341316223144531
    5. 'élé' → logprob: -7.341316223144531
    6. 'element' → logprob: -8.278816223144531
    7. '_' → logprob: -8.591316223144531
    8. 'e' → logprob: -8.841316223144531
    9. '#' → logprob: -8.903816223144531
    10. ' ' → logprob: -9.153816223144531

Token 334: ',' (ID: 11)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.48836976289749146
    2. '=' → logprob: -0.9883697628974915
    3. ' =' → logprob: -4.363369941711426
    4. ',' → logprob: -7.363369941711426
    5. ' apple' → logprob: -7.988369941711426
    6. 'est' → logprob: -8.613369941711426
    7. 'de' → logprob: -9.488369941711426
    8. 'n' → logprob: -10.363369941711426
    9. 's' → logprob: -10.738369941711426
    10. '=
' → logprob: -11.113369941711426

Token 335: ' c' (ID: 274)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.022769581526517868
    2. '#' → logprob: -4.272769451141357
    3. ' apple' → logprob: -4.772769451141357
    4. ' #' → logprob: -9.897769927978516
    5. 'ap' → logprob: -11.522769927978516
    6. 'c' → logprob: -11.647769927978516
    7. 'appel' → logprob: -11.647769927978516
    8. 'une' → logprob: -13.022769927978516
    9. '```' → logprob: -13.335269927978516
    10. 'car' → logprob: -13.335269927978516

Token 336: ''est' (ID: 6616)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.2683795094490051
    2. '#' → logprob: -1.7683794498443604
    3. 'est' → logprob: -3.2683794498443604
    4. ''ap' → logprob: -4.5183796882629395
    5. ''est' → logprob: -5.2683796882629395
    6. 'a' → logprob: -5.8933796882629395
    7. 'ap' → logprob: -6.0183796882629395
    8. ' apple' → logprob: -6.0183796882629395
    9. 'e' → logprob: -7.6433796882629395
    10. 'es' → logprob: -7.7683796882629395

Token 337: '-à' (ID: 56297)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.20498521625995636
    2. ' apple' → logprob: -1.70498526096344
    3. ' ' → logprob: -7.20498514175415
    4. '0' → logprob: -7.70498514175415
    5. ' la' → logprob: -8.204985618591309
    6. ' l' → logprob: -8.329985618591309
    7. 'appel' → logprob: -8.579985618591309
    8. 'l' → logprob: -8.704985618591309
    9. 'abs' → logprob: -8.829985618591309
    10. 'le' → logprob: -8.829985618591309

Token 338: '-dire' (ID: 76064)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.1339576542377472
    2. 'la' → logprob: -3.258957624435425
    3. 'l' → logprob: -3.883957624435425
    4. '0' → logprob: -4.258957862854004
    5. ' apple' → logprob: -4.508957862854004
    6. '#' → logprob: -4.508957862854004
    7. 'une' → logprob: -4.883957862854004
    8. 'abs' → logprob: -5.758957862854004
    9. ' la' → logprob: -6.133957862854004
    10. '   ' → logprob: -6.258957862854004

Token 339: ' celui' (ID: 27857)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.024289805442094803
    2. ' apple' → logprob: -3.774289846420288
    3. 'abs' → logprob: -8.149290084838867
    4. ' ' → logprob: -9.524290084838867
    5. 'la' → logprob: -9.524290084838867
    6. '   ' → logprob: -9.649290084838867
    7. 'l' → logprob: -9.649290084838867
    8. '0' → logprob: -9.774290084838867
    9. 'ap' → logprob: -10.211790084838867
    10. 'appel' → logprob: -10.274290084838867

Token 340: ' avec' (ID: 3937)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.5273682475090027
    2. '=' → logprob: -1.1523683071136475
    3. '#' → logprob: -3.4023683071136475
    4. ' apple' → logprob: -3.5273683071136475
    5. 'qui' → logprob: -4.902368068695068
    6. ' =' → logprob: -5.027368068695068
    7. '[' → logprob: -5.277368068695068
    8. 'de' → logprob: -5.402368068695068
    9. '   ' → logprob: -6.527368068695068
    10. ' qui' → logprob: -6.902368068695068

Token 341: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.5239406824111938
    2. '0' → logprob: -1.8989406824111938
    3. 'abs' → logprob: -2.0239405632019043
    4. '#' → logprob: -2.8989405632019043
    5. 'la' → logprob: -3.8989405632019043
    6. ' la' → logprob: -4.273940563201904
    7. 'le' → logprob: -4.523940563201904
    8. ' ' → logprob: -5.148940563201904
    9. ' apple' → logprob: -5.273940563201904
    10. 'index' → logprob: -6.023940563201904

Token 342: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.15217287838459015
    2. 'val' → logprob: -3.402172803878784
    3. 'apple' → logprob: -3.652172803878784
    4. 'moins' → logprob: -3.652172803878784
    5. '0' → logprob: -4.027173042297363
    6. 'abs' → logprob: -4.402173042297363
    7. '#' → logprob: -4.527173042297363
    8. 'minimum' → logprob: -4.777173042297363
    9. 'mo' → logprob: -6.402173042297363
    10. 'min' → logprob: -6.652173042297363

Token 343: ' petite' (ID: 28119)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.05204429104924202
    2. 'pet' → logprob: -3.05204439163208
    3. 'près' → logprob: -6.67704439163208
    4. ' proche' → logprob: -7.17704439163208
    5. '```' → logprob: -8.052043914794922
    6. 'import' → logprob: -8.177043914794922
    7. 'val' → logprob: -8.552043914794922
    8. 'prox' → logprob: -8.677043914794922
    9. '#' → logprob: -8.927043914794922
    10. ' petite' → logprob: -9.927043914794922

Token 344: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.010938520543277264
    2. 'distance' → logprob: -5.01093864440918
    3. 'abs' → logprob: -5.51093864440918
    4. ' valeur' → logprob: -9.51093864440918
    5. '#' → logprob: -10.38593864440918
    6. 'ab' → logprob: -10.76093864440918
    7. '|' → logprob: -11.13593864440918
    8. 'absolute' → logprob: -11.38593864440918
    9. 'value' → logprob: -12.26093864440918
    10. 'save' → logprob: -12.88593864440918

Token 345: ' absol' (ID: 7374)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.44846311211586
    2. 'apple' → logprob: -1.5734630823135376
    3. 'absolute' → logprob: -2.448463201522827
    4. 'abs' → logprob: -3.198463201522827
    5. ' absol' → logprob: -4.573462963104248
    6. '_absolute' → logprob: -5.448462963104248
    7. 'import' → logprob: -5.948462963104248
    8. 'de' → logprob: -6.448462963104248
    9. '   ' → logprob: -6.698462963104248
    10. ',' → logprob: -6.948462963104248

Token 346: 'ue' (ID: 466)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.7378734350204468
    2. 'é' → logprob: -1.3628734350204468
    3. 'ol' → logprob: -1.8628734350204468
    4. 'ale' → logprob: -4.112873554229736
    5. 'de' → logprob: -4.237873554229736
    6. 'value' → logprob: -4.237873554229736
    7. 'u' → logprob: -4.612873554229736
    8. ' apple' → logprob: -4.862873554229736
    9. 'ie' → logprob: -4.987873554229736
    10. 'abs' → logprob: -5.112873554229736

Token 347: ',' (ID: 11)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.01623529940843582
    2. '=' → logprob: -5.0162353515625
    3. ',' → logprob: -5.3912353515625
    4. ' =' → logprob: -6.0162353515625
    5. '#' → logprob: -6.3912353515625
    6. ' apple' → logprob: -9.1412353515625
    7. 's' → logprob: -9.1412353515625
    8. 'est' → logprob: -9.5162353515625
    9. 'n' → logprob: -9.5162353515625
    10. 'N' → logprob: -9.6412353515625

Token 348: ' est' (ID: 893)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.49760517477989197
    2. ' apple' → logprob: -1.2476052045822144
    3. 'est' → logprob: -3.372605085372925
    4. ' est' → logprob: -3.497605085372925
    5. ' =' → logprob: -3.997605085372925
    6. '=' → logprob: -4.372605323791504
    7. ' n' → logprob: -5.622605323791504
    8. '#' → logprob: -6.622605323791504
    9. ',' → logprob: -6.622605323791504
    10. 'n' → logprob: -7.247605323791504

Token 349: ' ainsi' (ID: 16371)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.028313912451267242
    2. ' apple' → logprob: -3.9033138751983643
    3. 'excluded' → logprob: -5.903314113616943
    4. 'ignored' → logprob: -6.903314113616943
    5. ' supprim' → logprob: -6.903314113616943
    6. 'removed' → logprob: -7.153314113616943
    7. 'appel' → logprob: -7.528314113616943
    8. '#' → logprob: -8.153313636779785
    9. 'sup' → logprob: -8.153313636779785
    10. 'ex' → logprob: -8.653313636779785

Token 350: ' retir' (ID: 35638)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.3677200675010681
    2. 'ex' → logprob: -2.617720127105713
    3. 'en' → logprob: -2.867720127105713
    4. 'excluded' → logprob: -3.367720127105713
    5. 'ignor' → logprob: -3.367720127105713
    6. ' supprim' → logprob: -3.367720127105713
    7. 'ret' → logprob: -3.492720127105713
    8. 'sup' → logprob: -4.367720127105713
    9. 'ignored' → logprob: -4.367720127105713
    10. 's' → logprob: -6.117720127105713

Token 351: 'é' (ID: 377)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.056433022022247314
    2. 'é' → logprob: -3.5564329624176025
    3. 'ée' → logprob: -3.9314329624176025
    4. 'out' → logprob: -6.306433200836182
    5. '=' → logprob: -6.806433200836182
    6. ' apple' → logprob: -7.556433200836182
    7. 'e' → logprob: -7.931433200836182
    8. 'ite' → logprob: -8.056432723999023
    9. 'à' → logprob: -8.181432723999023
    10. 'oute' → logprob: -8.181432723999023

Token 352: '
' (ID: 198)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -2.1888679839321412e-05
    2. ' apple' → logprob: -10.750021934509277
    3. '#' → logprob: -16.37502098083496
    4. '.apple' → logprob: -16.62502098083496
    5. 'app' → logprob: -16.87502098083496
    6. 'fruit' → logprob: -17.25002098083496
    7. 'juice' → logprob: -18.00002098083496
    8. 'appel' → logprob: -18.00002098083496
    9. '/apple' → logprob: -18.00002098083496
    10. '=' → logprob: -18.25002098083496

Token 353: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.00010008628305513412
    2. ' apple' → logprob: -9.625100135803223
    3. 'selected' → logprob: -11.250100135803223
    4. 'result' → logprob: -12.375100135803223
    5. 's' → logprob: -12.625100135803223
    6. 'answer' → logprob: -13.250100135803223
    7. 'remaining' → logprob: -13.875100135803223
    8. 'juice' → logprob: -14.250100135803223
    9. 'sum' → logprob: -14.375100135803223
    10. 'ap' → logprob: -14.375100135803223

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289051592350006
    2. ' =' → logprob: -1.0539051294326782
    3. '[' → logprob: -8.553905487060547
    4. '=[' → logprob: -13.178905487060547
    5. 'apple' → logprob: -13.678905487060547
    6. '＝' → logprob: -13.928905487060547
    7. '<|end|>' → logprob: -13.928905487060547
    8. ' ' → logprob: -13.991405487060547
    9. ' =[' → logprob: -14.116405487060547
    10. '[:]' → logprob: -14.178905487060547

Token 355: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.011054305359721184
    2. ' apple' → logprob: -4.511054515838623
    3. 'app' → logprob: -12.386054039001465
    4. 'ap' → logprob: -14.386054039001465
    5. '.apple' → logprob: -14.886054039001465
    6. '   ' → logprob: -15.011054039001465
    7. ' ' → logprob: -15.386054039001465
    8. ' ' → logprob: -15.886054039001465
    9. '[' → logprob: -16.01105499267578
    10. 'Apple' → logprob: -16.13605499267578

Token 356: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '[:' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '1' → logprob: -16.625
    5. '[:]' → logprob: -18.125
    6. '[:-' → logprob: -18.625
    7. '[::-' → logprob: -18.625
    8. '[
' → logprob: -18.625
    9. '[len' → logprob: -18.875
    10. '\[' → logprob: -19.0

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.875001907348633
    4. ':' → logprob: -19.000001907348633
    5. '１' → logprob: -19.812501907348633
    6. '```' → logprob: -19.937501907348633
    7. '
' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.562501907348633
    9. '+' → logprob: -20.937501907348633
    10. '0' → logprob: -21.000001907348633

Token 358: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -5.371605948312208e-05
    2. ':' → logprob: -10.500053405761719
    3. ' :]' → logprob: -10.625053405761719
    4. ']' → logprob: -14.250053405761719
    5. ':].' → logprob: -14.750053405761719
    6. ':]
' → logprob: -14.875053405761719
    7. ':]

' → logprob: -14.875053405761719
    8. ':],' → logprob: -16.62505340576172
    9. ' :' → logprob: -18.50005340576172
    10. '[:]' → logprob: -18.62505340576172

Token 359: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001496887649409473
    2. 'total' → logprob: -7.2514967918396
    3. 'result' → logprob: -7.6264967918396
    4. '#' → logprob: -8.501497268676758
    5. 's' → logprob: -10.501497268676758
    6. 'sum' → logprob: -10.501497268676758
    7. 'prin' → logprob: -11.126497268676758
    8. 'pr' → logprob: -11.626497268676758
    9. ' print' → logprob: -12.751497268676758
    10. 'answer' → logprob: -12.876497268676758

Token 360: ' Util' (ID: 13564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003490514063742012
    2. 'result' → logprob: -8.125349044799805
    3. 'total' → logprob: -10.500349044799805
    4. 'answer' → logprob: -11.375349044799805
    5. 'sum' → logprob: -11.875349044799805
    6. 's' → logprob: -12.875349044799805
    7. '#' → logprob: -13.000349044799805
    8. 'prin' → logprob: -14.125349044799805
    9. ' print' → logprob: -14.875349044799805
    10. 'pr' → logprob: -15.250349044799805

Token 361: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6508728265762329
    2. 'ise' → logprob: -0.7758728265762329
    3. 's' → logprob: -5.275872707366943
    4. '#' → logprob: -5.525872707366943
    5. 'ser' → logprob: -5.900872707366943
    6. 'e' → logprob: -6.025872707366943
    7. 'm' → logprob: -7.150872707366943
    8. 'me' → logprob: -7.650872707366943
    9. 'iser' → logprob: -7.650872707366943
    10. 'isez' → logprob: -7.900872707366943

Token 362: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1269988715648651
    2. 'sum' → logprob: -2.1269989013671875
    3. ' print' → logprob: -10.251998901367188
    4. ' sum' → logprob: -10.501998901367188
    5. 'prin' → logprob: -12.626998901367188
    6. '=sum' → logprob: -13.876998901367188
    7. 's' → logprob: -14.376998901367188
    8. 'total' → logprob: -14.501998901367188
    9. 'range' → logprob: -14.751998901367188
    10. '(sum' → logprob: -15.126998901367188

Token 363: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16025622189044952
    2. 'sum' → logprob: -1.910256266593933
    3. 'for' → logprob: -10.535256385803223
    4. ' print' → logprob: -13.160256385803223
    5. ' sum' → logprob: -14.035256385803223
    6. 'abs' → logprob: -14.035256385803223
    7. '#' → logprob: -14.660256385803223
    8. 'max' → logprob: -14.785256385803223
    9. 'prin' → logprob: -14.785256385803223
    10. 'min' → logprob: -15.285256385803223

Token 364: ' sum' (ID: 4215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029757557436823845
    2. 'sum' → logprob: -3.529757499694824
    3. 'abs' → logprob: -12.279757499694824
    4. 'min' → logprob: -13.904757499694824
    5. ' print' → logprob: -14.154757499694824
    6. 'max' → logprob: -14.154757499694824
    7. ' sum' → logprob: -16.27975845336914
    8. '=sum' → logprob: -18.52975845336914
    9. '#print' → logprob: -19.90475845336914
    10. 'prin' → logprob: -20.27975845336914

Token 365: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025633294717408717
    2. 'apple' → logprob: -8.625256538391113
    3. '()' → logprob: -10.500256538391113
    4. '(sum' → logprob: -11.000256538391113
    5. 'sum' → logprob: -11.125256538391113
    6. ' (' → logprob: -11.500256538391113
    7. '_sum' → logprob: -12.625256538391113
    8. '(ap' → logprob: -13.250256538391113
    9. 'def' → logprob: -14.500256538391113
    10. '_' → logprob: -14.625256538391113

Token 366: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10930999368429184
    2. 'print' → logprob: -2.9843099117279053
    3. '(sum' → logprob: -3.8593099117279053
    4. 'apple' → logprob: -4.484310150146484
    5. 'result' → logprob: -4.609310150146484
    6. 'sum' → logprob: -4.859310150146484
    7. '(s' → logprob: -6.984310150146484
    8. 'total' → logprob: -7.859310150146484
    9. '(ap' → logprob: -7.984310150146484
    10. '(result' → logprob: -8.234310150146484

Token 367: ' addition' (ID: 5856)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.196732960641384e-05
    2. 'sum' → logprob: -10.000082015991211
    3. ' print' → logprob: -10.250082015991211
    4. 'prin' → logprob: -14.625082015991211
    5. 'pr' → logprob: -15.500082015991211
    6. '#' → logprob: -16.00008201599121
    7. 'calculate' → logprob: -16.12508201599121
    8. 'calcul' → logprob: -16.25008201599121
    9. ' sum' → logprob: -17.37508201599121
    10. 'prendre' → logprob: -18.25008201599121

Token 368: 'ner' (ID: 1247)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.8353944420814514
    2. 'e' → logprob: -1.5853943824768066
    3. 'me' → logprob: -1.8353943824768066
    4. '(' → logprob: -2.0853943824768066
    5. 'er' → logprob: -2.9603943824768066
    6. 'ner' → logprob: -4.960394382476807
    7. 'sum' → logprob: -5.085394382476807
    8. '()' → logprob: -5.960394382476807
    9. 'ate' → logprob: -6.210394382476807
    10. ' apple' → logprob: -6.335394382476807

Token 369: ' tous' (ID: 10688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004309076175559312
    2. 'apple' → logprob: -7.750431060791016
    3. ' apple' → logprob: -17.125431060791016
    4. '(ap' → logprob: -17.250431060791016
    5. ' (' → logprob: -17.625431060791016
    6. '/apple' → logprob: -18.750431060791016
    7. 'ap' → logprob: -19.500431060791016
    8. ' ' → logprob: -19.500431060791016
    9. 'the' → logprob: -19.625431060791016
    10. '   ' → logprob: -19.875431060791016

Token 370: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007108822464942932
    2. 'apple' → logprob: -7.250710964202881
    3. '(ap' → logprob: -14.250710487365723
    4. ' apple' → logprob: -15.625710487365723
    5. '/apple' → logprob: -17.00071144104004
    6. ' (' → logprob: -17.12571144104004
    7. 'ap' → logprob: -18.12571144104004
    8. '.apple' → logprob: -18.25071144104004
    9. 'l' → logprob: -18.50071144104004
    10. '(app' → logprob: -18.62571144104004

Token 371: ' éléments' (ID: 57375)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -6.153795766294934e-06
    2. ' apple' → logprob: -12.125005722045898
    3. 'elements' → logprob: -15.250005722045898
    4. 'element' → logprob: -15.375005722045898
    5. 'elem' → logprob: -16.5000057220459
    6. 'élé' → logprob: -17.2500057220459
    7. '.apple' → logprob: -17.7500057220459
    8. 'val' → logprob: -17.8750057220459
    9. 'ap' → logprob: -18.0000057220459
    10. 'ele' → logprob: -18.1250057220459

Token 372: ' rest' (ID: 2867)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028091557323932648
    2. 'apple' → logprob: -5.877809047698975
    3. 'sum' → logprob: -13.377809524536133
    4. 'of' → logprob: -14.127809524536133
    5. '(sum' → logprob: -14.502809524536133
    6. 'def' → logprob: -15.252809524536133
    7. '(ap' → logprob: -15.377809524536133
    8. 'ap' → logprob: -16.002809524536133
    9. ' (' → logprob: -16.002809524536133
    10. '=' → logprob: -16.252809524536133

Token 373: 'ants' (ID: 2027)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.08872197568416595
    2. 'er' → logprob: -3.838721990585327
    3. 'ant' → logprob: -4.213721752166748
    4. 'ants' → logprob: -4.213721752166748
    5. 'e' → logprob: -5.088721752166748
    6. 'es' → logprob: -5.213721752166748
    7. 'ent' → logprob: -5.213721752166748
    8. 'és' → logprob: -5.588721752166748
    9. 'of' → logprob: -6.088721752166748
    10. '(' → logprob: -6.338721752166748

Token 374: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8492019176483154
    2. 'result' → logprob: -0.8492019176483154
    3. 'apple' → logprob: -2.3492019176483154
    4. 'total' → logprob: -3.5992019176483154
    5. 'sum' → logprob: -4.0992021560668945
    6. '(' → logprob: -5.9742021560668945
    7. 'answer' → logprob: -7.4742021560668945
    8. '(sum' → logprob: -7.7242021560668945
    9. 'res' → logprob: -7.8492021560668945
    10. 's' → logprob: -7.9742021560668945

Token 375: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -4.36574100604048e-06
    2. ' apple' → logprob: -12.375004768371582
    3. '```' → logprob: -18.000003814697266
    4. 'appel' → logprob: -18.125003814697266
    5. '/apple' → logprob: -18.250003814697266
    6. '.apple' → logprob: -18.375003814697266
    7. 'app' → logprob: -18.375003814697266
    8. '`' → logprob: -19.125003814697266
    9. 'the' → logprob: -19.125003814697266
    10. 'ap' → logprob: -19.500003814697266

Token 376: ' liste' (ID: 31719)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -2.696889623621246e-06
    2. ' apple' → logprob: -12.87500286102295
    3. 'list' → logprob: -16.750001907348633
    4. 'liste' → logprob: -18.125001907348633
    5. 'appel' → logprob: -19.625001907348633
    6. 'ap' → logprob: -19.625001907348633
    7. '.apple' → logprob: -20.000001907348633
    8. '```' → logprob: -20.000001907348633
    9. 'banana' → logprob: -20.625001907348633
    10. '/apple' → logprob: -20.750001907348633

Token 377: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.004436647519469261
    2. '(' → logprob: -6.004436492919922
    3. 'sum' → logprob: -7.129436492919922
    4. 'print' → logprob: -7.254436492919922
    5. 'result' → logprob: -8.004436492919922
    6. 'total' → logprob: -9.754436492919922
    7. 'answer' → logprob: -11.004436492919922
    8. ' apple' → logprob: -11.379436492919922
    9. 'ap' → logprob: -11.629436492919922
    10. '(sum' → logprob: -11.879436492919922

Token 378: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4851444661617279
    2. 'total' → logprob: -1.4851444959640503
    3. 'result' → logprob: -1.8601444959640503
    4. 'sum' → logprob: -6.86014461517334
    5. 'answer' → logprob: -7.73514461517334
    6. 's' → logprob: -7.73514461517334
    7. 'res' → logprob: -8.98514461517334
    8. 'ans' → logprob: -9.98514461517334
    9. 'som' → logprob: -10.61014461517334
    10. 'k' → logprob: -10.86014461517334

Token 379: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011933799833059311
    2. 'result' → logprob: -4.51193380355835
    3. 'total' → logprob: -7.13693380355835
    4. 'answer' → logprob: -9.511933326721191
    5. 'sum' → logprob: -12.011933326721191
    6. 'ans' → logprob: -12.011933326721191
    7. ' print' → logprob: -13.761933326721191
    8. 'prin' → logprob: -13.886933326721191
    9. 'res' → logprob: -14.136933326721191
    10. 'pr' → logprob: -14.261933326721191

Token 380: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032236989587545395
    2. 'result' → logprob: -3.5322370529174805
    3. 'total' → logprob: -6.0322370529174805
    4. 'answer' → logprob: -9.90723705291748
    5. ' print' → logprob: -10.90723705291748
    6. 'ans' → logprob: -12.03223705291748
    7. 'sum' → logprob: -12.90723705291748
    8. 'res' → logprob: -13.03223705291748
    9. 'taste' → logprob: -13.90723705291748
    10. 's' → logprob: -14.40723705291748

Token 381: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.429915189743042
    2. 'result' → logprob: -1.179915189743042
    3. 'total' → logprob: -3.179915189743042
    4. 'res' → logprob: -8.429915428161621
    5. '#' → logprob: -9.554915428161621
    6. 'answer' → logprob: -9.554915428161621
    7. 'rés' → logprob: -9.929915428161621
    8. 'prin' → logprob: -10.179915428161621
    9. 's' → logprob: -10.679915428161621
    10. 'r' → logprob: -11.304915428161621

Token 382: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17719215154647827
    2. ' =' → logprob: -1.927192211151123
    3. 'total' → logprob: -4.302192211151123
    4. 'print' → logprob: -6.177192211151123
    5. 'result' → logprob: -7.927192211151123
    6. '=sum' → logprob: -8.302191734313965
    7. 's' → logprob: -8.552191734313965
    8. 'final' → logprob: -8.927191734313965
    9. ' total' → logprob: -9.302191734313965
    10. 'sum' → logprob: -9.302191734313965

Token 383: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7192326188087463
    2. 'result' → logprob: -1.4692325592041016
    3. 'total' → logprob: -1.5942325592041016
    4. ' print' → logprob: -3.4692325592041016
    5. ' total' → logprob: -3.7192325592041016
    6. ' result' → logprob: -4.469232559204102
    7. 'res' → logprob: -5.094232559204102
    8. 'answer' → logprob: -6.219232559204102
    9. 's' → logprob: -6.719232559204102
    10. ' resultat' → logprob: -6.844232559204102

Token 384: ' représente' (ID: 88912)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.2892138361930847
    2. '=' → logprob: -2.1642138957977295
    3. ' est' → logprob: -2.6642138957977295
    4. ' =' → logprob: -3.2892138957977295
    5. 's' → logprob: -4.66421365737915
    6. 'print' → logprob: -5.53921365737915
    7. ' correspond' → logprob: -5.66421365737915
    8. ' représente' → logprob: -5.66421365737915
    9. 'cor' → logprob: -5.78921365737915
    10. 'don' → logprob: -6.16421365737915

Token 385: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.09268800169229507
    2. 'le' → logprob: -2.8426880836486816
    3. ' la' → logprob: -3.7176880836486816
    4. 'sum' → logprob: -5.842688083648682
    5. ' le' → logprob: -6.842688083648682
    6. 'l' → logprob: -6.967688083648682
    7. 'leur' → logprob: -8.592687606811523
    8. 'une' → logprob: -8.717687606811523
    9. 'the' → logprob: -9.217687606811523
    10. 'min' → logprob: -9.467687606811523

Token 386: ' somme' (ID: 64484)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9605807065963745
    2. 'print' → logprob: -1.3355807065963745
    3. 'score' → logprob: -2.210580825805664
    4. 'me' → logprob: -2.710580825805664
    5. 'sum' → logprob: -2.710580825805664
    6. 'go' → logprob: -3.210580825805664
    7. 's' → logprob: -3.960580825805664
    8. 'minimum' → logprob: -4.335580825805664
    9. 'nombre' → logprob: -4.710580825805664
    10. 'som' → logprob: -4.835580825805664

Token 387: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6665933728218079
    2. ' =' → logprob: -1.541593313217163
    3. '=' → logprob: -2.416593313217163
    4. 'total' → logprob: -2.541593313217163
    5. ' des' → logprob: -3.416593313217163
    6. '_des' → logprob: -3.666593313217163
    7. 'final' → logprob: -4.291593551635742
    8. 'apple' → logprob: -4.916593551635742
    9. '_total' → logprob: -5.041593551635742
    10. '_' → logprob: -5.541593551635742

Token 388: ' save' (ID: 5093)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.017789551988244057
    2. 'val' → logprob: -4.892789363861084
    3. ' apple' → logprob: -5.892789363861084
    4. 'abs' → logprob: -6.017789363861084
    5. 'save' → logprob: -6.392789363861084
    6. ' pommes' → logprob: -7.517789363861084
    7. 'p' → logprob: -7.767789363861084
    8. 'fl' → logprob: -7.892789363861084
    9. ' apples' → logprob: -8.392789840698242
    10. 'ap' → logprob: -8.392789840698242

Token 389: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.09680783748626709
    2. 'rs' → logprob: -2.9718079566955566
    3. 'leurs' → logprob: -3.9718079566955566
    4. 'nts' → logprob: -4.346807956695557
    5. 'eurs' → logprob: -5.721807956695557
    6. 'ur' → logprob: -5.971807956695557
    7. 'r' → logprob: -6.596807956695557
    8. 'nt' → logprob: -7.096807956695557
    9. 'ls' → logprob: -7.971807956695557
    10. 'l' → logprob: -8.096807479858398

Token 390: ' après' (ID: 16460)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9681543111801147
    2. 'des' → logprob: -0.9681543111801147
    3. ' =' → logprob: -1.8431543111801147
    4. 'apple' → logprob: -3.3431544303894043
    5. '_des' → logprob: -4.593154430389404
    6. '#' → logprob: -4.718154430389404
    7. 'print' → logprob: -5.093154430389404
    8. 'de' → logprob: -5.343154430389404
    9. 'est' → logprob: -5.468154430389404
    10. 'of' → logprob: -5.968154430389404

Token 391: ' avoir' (ID: 16595)
  Prédit: 'supp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'supp' → logprob: -0.362272173166275
    2. ' suppression' → logprob: -2.112272262573242
    3. 'la' → logprob: -2.612272262573242
    4. 'avoir' → logprob: -2.987272262573242
    5. 'ex' → logprob: -3.112272262573242
    6. 're' → logprob: -4.737272262573242
    7. 'c' → logprob: -6.612272262573242
    8. 'ret' → logprob: -6.987272262573242
    9. 'l' → logprob: -7.112272262573242
    10. 's' → logprob: -7.362272262573242

Token 392: ' retir' (ID: 35638)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4892284870147705
    2. 'ret' → logprob: -1.4892284870147705
    3. 'sup' → logprob: -1.9892284870147705
    4. 'm' → logprob: -4.739228248596191
    5. ' retir' → logprob: -5.364228248596191
    6. 'ex' → logprob: -5.364228248596191
    7. 'sou' → logprob: -6.989228248596191
    8. 's' → logprob: -7.114228248596191
    9. ' supprim' → logprob: -7.489228248596191
    10. 'repr' → logprob: -7.614228248596191

Token 393: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -3.7697225252486533e-06
    2. 'er' → logprob: -13.500003814697266
    3. '=' → logprob: -13.750003814697266
    4. 'ée' → logprob: -14.625003814697266
    5. 'e' → logprob: -14.750003814697266
    6. '#' → logprob: -15.750003814697266
    7. 'és' → logprob: -16.750003814697266
    8. '&eacute' → logprob: -17.000003814697266
    9. '[' → logprob: -17.125003814697266
    10. 'ed' → logprob: -17.375003814697266

Token 394: ' la' (ID: 557)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.14138583838939667
    2. 'le' → logprob: -2.891385793685913
    3. 'la' → logprob: -3.266385793685913
    4. 'abs' → logprob: -4.266386032104492
    5. 'len' → logprob: -4.766386032104492
    6. 'l' → logprob: -4.891386032104492
    7. 'une' → logprob: -5.641386032104492
    8. ' la' → logprob: -6.766386032104492
    9. 'min' → logprob: -6.891386032104492
    10. 'the' → logprob: -7.641386032104492

Token 395: ' pomme' (ID: 197262)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.411113977432251
    2. 'val' → logprob: -2.161113977432251
    3. 'prem' → logprob: -2.536113977432251
    4. 'plus' → logprob: -3.286113977432251
    5. '0' → logprob: -3.411113977432251
    6. 'élé' → logprob: -4.411113739013672
    7. 'minimum' → logprob: -4.411113739013672
    8. 'me' → logprob: -4.411113739013672
    9. 'mo' → logprob: -4.661113739013672
    10. 'moins' → logprob: -4.786113739013672

Token 396: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.410352349281311
    2. '#' → logprob: -1.660352349281311
    3. ',' → logprob: -2.4103522300720215
    4. ')' → logprob: -3.0353522300720215
    5. 'apple' → logprob: -3.2853522300720215
    6. 'des' → logprob: -3.4103522300720215
    7. 's' → logprob: -3.4103522300720215
    8. 'import' → logprob: -3.4103522300720215
    9. 'de' → logprob: -3.5353522300720215
    10. 'est' → logprob: -3.5353522300720215

Token 397: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.004487800411880016
    2. 'prem' → logprob: -5.754487991333008
    3. 'me' → logprob: -6.879487991333008
    4. 'moins' → logprob: -9.254487991333008
    5. ' plus' → logprob: -9.879487991333008
    6. 'min' → logprob: -10.379487991333008
    7. '   ' → logprob: -11.504487991333008
    8. 'p' → logprob: -11.504487991333008
    9. '+' → logprob: -11.754487991333008
    10. 'm' → logprob: -11.879487991333008

Token 398: ' neut' (ID: 18541)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.018511608242988586
    2. 'acid' → logprob: -4.518511772155762
    3. 'ac' → logprob: -6.268511772155762
    4. 'fort' → logprob: -6.393511772155762
    5. 'import' → logprob: -7.018511772155762
    6. 'dou' → logprob: -7.268511772155762
    7. 's' → logprob: -7.768511772155762
    8. 'près' → logprob: -8.643511772155762
    9. 'fa' → logprob: -8.643511772155762
    10. 'pres' → logprob: -8.768511772155762

Token 399: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4986262023448944
    2. 'rale' → logprob: -1.2486262321472168
    3. 'ale' → logprob: -2.373626232147217
    4. 'le' → logprob: -4.748626232147217
    5. 'ral' → logprob: -6.748626232147217
    6. '#' → logprob: -7.123626232147217
    7. 'elle' → logprob: -7.498626232147217
    8. 'ra' → logprob: -8.123625755310059
    9. 'r' → logprob: -8.623625755310059
    10. '=' → logprob: -8.873625755310059

Token 400: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41828376054763794
    2. '=' → logprob: -1.9182837009429932
    3. ' =' → logprob: -2.043283700942993
    4. 'est' → logprob: -3.918283700942993
    5. 'apple' → logprob: -3.918283700942993
    6. ',' → logprob: -4.043283939361572
    7. 'total' → logprob: -5.543283939361572
    8. ' est' → logprob: -7.043283939361572
    9. 's' → logprob: -7.293283939361572
    10. 'result' → logprob: -7.543283939361572

Token 401: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10537827014923096
    2. ' print' → logprob: -2.6053781509399414
    3. ' est' → logprob: -4.105378150939941
    4. 'est' → logprob: -5.355378150939941
    5. '=' → logprob: -5.980378150939941
    6. ' is' → logprob: -6.605378150939941
    7. ' =' → logprob: -7.480378150939941
    8. 's' → logprob: -8.980378150939941
    9. ')' → logprob: -9.480378150939941
    10. 'is' → logprob: -9.480378150939941

Token 402: ' affect' (ID: 7902)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.180258191714529e-06
    2. ' print' → logprob: -11.875008583068848
    3. 'sum' → logprob: -14.500008583068848
    4. 'result' → logprob: -15.000008583068848
    5. 'prin' → logprob: -15.750008583068848
    6. 'total' → logprob: -16.37500762939453
    7. 'printed' → logprob: -16.50000762939453
    8. 's' → logprob: -17.00000762939453
    9. 'pr' → logprob: -17.12500762939453
    10. 'p' → logprob: -18.50000762939453

Token 403: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4797202944755554
    2. '=' → logprob: -0.9797202944755554
    3. 'ée' → logprob: -5.354720115661621
    4. 'e' → logprob: -8.104720115661621
    5. 'ué' → logprob: -8.104720115661621
    6. 'u' → logprob: -9.354720115661621
    7. '_' → logprob: -10.104720115661621
    8. '_=' → logprob: -10.229720115661621
    9. 'er' → logprob: -10.354720115661621
    10. ' =' → logprob: -10.854720115661621

Token 404: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5348771810531616
    2. 'to' → logprob: -1.6598771810531616
    3. 'à' → logprob: -2.284877300262451
    4. 'total' → logprob: -2.784877300262451
    5. 'sum' → logprob: -4.034877300262451
    6. 'a' → logprob: -4.534877300262451
    7. 'apple' → logprob: -4.659877300262451
    8. '=sum' → logprob: -5.159877300262451
    9. 'result' → logprob: -5.409877300262451
    10. ' à' → logprob: -5.534877300262451

Token 405: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3005499243736267
    2. 'total' → logprob: -1.5505499839782715
    3. 'answer' → logprob: -3.5505499839782715
    4. 'ans' → logprob: -4.4255499839782715
    5. 'res' → logprob: -5.1755499839782715
    6. 's' → logprob: -7.4255499839782715
    7. 'print' → logprob: -8.925549507141113
    8. 'sum' → logprob: -9.175549507141113
    9. 'taste' → logprob: -9.675549507141113
    10. 'apple' → logprob: -10.050549507141113

Token 406: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3896562159061432
    2. ' =' → logprob: -1.1396561861038208
    3. 's' → logprob: -6.014656066894531
    4. 'ans' → logprob: -8.514656066894531
    5. ' ans' → logprob: -10.264656066894531
    6. '=
' → logprob: -10.264656066894531
    7. '(ans' → logprob: -10.889656066894531
    8. '_ans' → logprob: -11.139656066894531
    9. ' =
' → logprob: -11.639656066894531
    10. '=s' → logprob: -11.764656066894531

Token 407: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.438573680294212e-06
    2. 'answer' → logprob: -12.750005722045898
    3. 'print' → logprob: -13.250005722045898
    4. ' ans' → logprob: -14.875005722045898
    5. '(ans' → logprob: -15.625005722045898
    6. 'sum' → logprob: -17.1250057220459
    7. '	ans' → logprob: -17.3750057220459
    8. '_ans' → logprob: -17.6250057220459
    9. 'answers' → logprob: -17.8750057220459
    10. 'ANS' → logprob: -18.6250057220459

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022534668445587
    2. ' =' → logprob: -1.9102253913879395
    3. '＝' → logprob: -14.660224914550781
    4. ',' → logprob: -15.910224914550781
    5. ' +=' → logprob: -16.03522491455078
    6. '=sum' → logprob: -16.03522491455078
    7. '=int' → logprob: -16.28522491455078
    8. ' ' → logprob: -16.66022491455078
    9. '.=' → logprob: -16.91022491455078
    10. '+=' → logprob: -17.03522491455078

Token 409: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.842555426876061e-06
    2. ' sum' → logprob: -12.250004768371582
    3. '(sum' → logprob: -21.0000057220459
    4. '	sum' → logprob: -21.7500057220459
    5. '=sum' → logprob: -21.8750057220459
    6. '   ' → logprob: -23.8750057220459
    7. '_sum' → logprob: -24.7500057220459
    8. '0' → logprob: -25.1250057220459
    9. 'Sum' → logprob: -25.2500057220459
    10. '.sum' → logprob: -25.2500057220459

Token 410: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. 'apple' → logprob: -14.875000953674316
    3. ' (' → logprob: -15.000000953674316
    4. '(ap' → logprob: -15.125000953674316
    5. '(app' → logprob: -15.875000953674316
    6. '(
' → logprob: -16.875001907348633
    7. '((' → logprob: -17.000001907348633
    8. '()' → logprob: -17.250001907348633
    9. '/apple' → logprob: -18.625001907348633
    10. '(s' → logprob: -18.625001907348633

Token 411: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -6.704273118884885e-07
    2. ' apple' → logprob: -14.375000953674316
    3. '(' → logprob: -17.75
    4. '.apple' → logprob: -18.625
    5. '/apple' → logprob: -19.25
    6. 'app' → logprob: -20.875
    7. '   ' → logprob: -21.875
    8. ')' → logprob: -22.25
    9. 'ap' → logprob: -22.375
    10. 'Apple' → logprob: -22.625

Token 412: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ' )' → logprob: -12.500005722045898
    3. '())' → logprob: -14.000005722045898
    4. '()' → logprob: -14.000005722045898
    5. '(' → logprob: -15.625005722045898
    6. '[' → logprob: -15.750005722045898
    7. ')
' → logprob: -16.2500057220459
    8. '))' → logprob: -16.6250057220459
    9. ')#' → logprob: -17.7500057220459
    10. '-)' → logprob: -17.7500057220459

Token 413: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6789137084269896e-05
    2. ' print' → logprob: -10.25003719329834
    3. '(print' → logprob: -14.25003719329834
    4. 'pr' → logprob: -15.25003719329834
    5. '.print' → logprob: -15.50003719329834
    6. '#print' → logprob: -15.62503719329834
    7. 'prin' → logprob: -16.750036239624023
    8. '#' → logprob: -17.125036239624023
    9. '-print' → logprob: -18.000036239624023
    10. 'pri' → logprob: -18.250036239624023

Token 414: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -13.750000953674316
    3. 'pr' → logprob: -21.750001907348633
    4. 'prin' → logprob: -22.000001907348633
    5. '#print' → logprob: -22.375001907348633
    6. '#' → logprob: -22.500001907348633
    7. 'Print' → logprob: -24.000001907348633
    8. 'prit' → logprob: -25.875001907348633
    9. 'printf' → logprob: -26.875001907348633
    10. '-print' → logprob: -27.375001907348633

Token 415: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.030836138874292374
    2. '#' → logprob: -3.9058361053466797
    3. 'icher' → logprob: -4.78083610534668
    4. 'ich' → logprob: -7.15583610534668
    5. 'ichage' → logprob: -7.28083610534668
    6. 'print' → logprob: -8.28083610534668
    7. 'ic' → logprob: -10.03083610534668
    8. 'f' → logprob: -10.40583610534668
    9. '#print' → logprob: -11.03083610534668
    10. 'iché' → logprob: -11.15583610534668

Token 416: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.500011444091797
    3. 'ans' → logprob: -13.500011444091797
    4. '(answer' → logprob: -18.875011444091797
    5. '(print' → logprob: -19.875011444091797
    6. '	ans' → logprob: -20.125011444091797
    7. '()' → logprob: -20.500011444091797
    8. '(abs' → logprob: -20.500011444091797
    9. '(a' → logprob: -20.625011444091797
    10. ' (' → logprob: -21.625011444091797

Token 417: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.007680446375161409
    2. 'ans' → logprob: -5.007680416107178
    3. '(' → logprob: -7.257680416107178
    4. 'print' → logprob: -8.257680892944336
    5. '(answer' → logprob: -15.007680892944336
    6. '(print' → logprob: -15.257680892944336
    7. 'answer' → logprob: -16.757680892944336
    8. '	ans' → logprob: -17.007680892944336
    9. 'ANS' → logprob: -17.132680892944336
    10. ' ans' → logprob: -18.007680892944336

Token 418: ' calcul' (ID: 7559)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004092292860150337
    2. '(' → logprob: -5.504092216491699
    3. '(print' → logprob: -11.6290922164917
    4. 'ans' → logprob: -12.6290922164917
    5. 'print' → logprob: -14.2540922164917
    6. '(answer' → logprob: -14.5040922164917
    7. '()' → logprob: -15.7540922164917
    8. '(
' → logprob: -16.254093170166016
    9. ' (' → logprob: -16.629093170166016
    10. '("' → logprob: -16.629093170166016

Token 419: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2618918716907501
    2. '(ans' → logprob: -1.5118918418884277
    3. 'ée' → logprob: -4.886891841888428
    4. 'ans' → logprob: -6.636891841888428
    5. 'é' → logprob: -8.011892318725586
    6. '(e' → logprob: -8.136892318725586
    7. '(' → logprob: -8.136892318725586
    8. '()' → logprob: -10.511892318725586
    9. 'ation' → logprob: -10.761892318725586
    10. 'ee' → logprob: -11.011892318725586

Token 420: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9311909675598145
    2. '(ans' → logprob: -0.9311909675598145
    3. '(' → logprob: -1.6811909675598145
    4. '(print' → logprob: -3.6811909675598145
    5. 'ans' → logprob: -8.056190490722656
    6. '()' → logprob: -9.681190490722656
    7. '(
' → logprob: -9.931190490722656
    8. '()
' → logprob: -10.556190490722656
    9. ' print' → logprob: -11.431190490722656
    10. '("' → logprob: -12.306190490722656

Token 421: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.014163863845169544
    2. 'ans' → logprob: -4.264163970947266
    3. '(' → logprob: -15.014163970947266
    4. '	ans' → logprob: -16.889163970947266
    5. ' ans' → logprob: -17.514163970947266
    6. 'ANS' → logprob: -17.639163970947266
    7. 'Ans' → logprob: -19.014163970947266
    8. '_ans' → logprob: -19.764163970947266
    9. 'print' → logprob: -20.889163970947266
    10. '(
' → logprob: -21.139163970947266

Token 422: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. '
' → logprob: -12.500004768371582
    3. ' print' → logprob: -13.875004768371582
    4. '(print' → logprob: -16.2500057220459
    5. '```' → logprob: -17.8750057220459
    6. 'ans' → logprob: -18.2500057220459
    7. '()
' → logprob: -18.6250057220459
    8. '(' → logprob: -18.7500057220459
    9. '(ans' → logprob: -19.2500057220459
    10. ')
' → logprob: -19.6250057220459

Token 423: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04042188823223114
    2. 'l' → logprob: -4.040421962738037
    3. 'la' → logprob: -4.165421962738037
    4. ' print' → logprob: -6.290421962738037
    5. ' l' → logprob: -6.415421962738037
    6. ' la' → logprob: -6.665421962738037
    7. '#' → logprob: -8.165421485900879
    8. 'près' → logprob: -8.415421485900879
    9. 'x' → logprob: -9.415421485900879
    10. ')' → logprob: -9.540421485900879

Token 424: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8844624161720276
    2. 'print' → logprob: -0.8844624161720276
    3. ''écran' → logprob: -1.8844623565673828
    4. 'é' → logprob: -4.884462356567383
    5. 'e' → logprob: -5.009462356567383
    6. '’écran' → logprob: -6.009462356567383
    7. '#' → logprob: -6.634462356567383
    8. 'l' → logprob: -7.384462356567383
    9. '#print' → logprob: -7.509462356567383
    10. 'à' → logprob: -8.384462356567383

Token 425: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -12.75000286102295
    3. '(print' → logprob: -16.375003814697266
    4. ' print' → logprob: -17.000003814697266
    5. '```' → logprob: -17.375003814697266
    6. '()
' → logprob: -18.500003814697266
    7. '(' → logprob: -18.750003814697266
    8. 'ans' → logprob: -20.000003814697266
    9. '
' → logprob: -20.250003814697266
    10. '#print' → logprob: -20.625003814697266

Token 426: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.75
    3. '```' → logprob: -23.375
    4. '
' → logprob: -23.875
    5. 'prin' → logprob: -27.0
    6. 'pr' → logprob: -27.0
    7. 'Print' → logprob: -27.25
    8. '#print' → logprob: -27.75
    9. '.print' → logprob: -28.0
    10. 'prit' → logprob: -28.5

Token 427: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.003178544342517853
    2. '(' → logprob: -5.753178596496582
    3. ' (' → logprob: -14.878178596496582
    4. 'ans' → logprob: -15.378178596496582
    5. '()' → logprob: -16.378177642822266
    6. '(
' → logprob: -16.753177642822266
    7. '(abs' → logprob: -17.003177642822266
    8. '(answer' → logprob: -17.628177642822266
    9. '(an' → logprob: -18.253177642822266
    10. '(`' → logprob: -18.503177642822266

Token 428: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. '())' → logprob: -11.750017166137695
    3. '()' → logprob: -12.125017166137695
    4. '(' → logprob: -13.000017166137695
    5. ')`' → logprob: -14.125017166137695
    6. ' )' → logprob: -14.500017166137695
    7. '))' → logprob: -15.875017166137695
    8. '`)' → logprob: -18.250017166137695
    9. ')")' → logprob: -18.625017166137695
    10. ')#' → logprob: -19.000017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 426
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 238
Précision stricte (1ère position): 19.95%
Précision adaptée (1ère position): 19.95%
Précision (top 10): 55.87%
================================================================================
