================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Peu lisible, variables inhabituelles, structures atypiques

get = lambda: input().split()
P, Q = map(int, get())
T = list(map(int, get()))
J = [None]*(P)
ix = 0
while ix<P:
	J[ix]=T[ix]
	ix+=1

M = dict(); M[0]=1
zZ = 0
ccc = 0
while ccc<P:
	zZ += J[ccc]
	zZ %= Q
	if zZ in M:
		M[zZ] += 1
	else:
		M[zZ]=1
	ccc+=1

A = list(M.values())
xX = 0; wrd = iter(A)
try:
	while True:
		alfa = next(wrd)
		xX += alfa*(alfa-1)//2
except StopIteration: pass
print(xX)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Peu' (ID: 189054)
  → Token d'amorce (pas de prédiction)

Token 2: ' lis' (ID: 20784)
  → Token d'amorce (pas de prédiction)

Token 3: 'ible' (ID: 1430)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3018770217895508
    2. 'r' → logprob: -1.4268770217895508
    3. '```' → logprob: -1.8018770217895508
    4. 'm' → logprob: -2.426877021789551
    5. 'bles' → logprob: -2.426877021789551
    6. 'b' → logprob: -2.801877021789551
    7. 'ble' → logprob: -3.176877021789551
    8. 'd' → logprob: -4.176877021789551
    9. '``' → logprob: -5.176877021789551
    10. 've' → logprob: -6.051877021789551

Token 4: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8865151405334473
    2. '_' → logprob: -1.0115151405334473
    3. '=' → logprob: -2.0115151405334473
    4. ':' → logprob: -4.136515140533447
    5. 'def' → logprob: -4.386515140533447
    6. 'a' → logprob: -4.761515140533447
    7. ' ' → logprob: -4.886515140533447
    8. ',' → logprob: -5.011515140533447
    9. 'for' → logprob: -5.136515140533447
    10. '[' → logprob: -5.636515140533447

Token 5: ' variables' (ID: 13955)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3951879739761353
    2. ',' → logprob: -1.6451879739761353
    3. ' mais' → logprob: -2.0201878547668457
    4. '#' → logprob: -2.1451878547668457
    5. ' #' → logprob: -3.1451878547668457
    6. ' but' → logprob: -3.3951878547668457
    7. '=' → logprob: -3.3951878547668457
    8. '_' → logprob: -3.3951878547668457
    9. 'mais' → logprob: -3.7701878547668457
    10. '```' → logprob: -3.7701878547668457

Token 6: ' inhab' (ID: 42455)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19751334190368652
    2. '=' → logprob: -2.9475133419036865
    3. ' ' → logprob: -2.9475133419036865
    4. ' =' → logprob: -3.3225133419036865
    5. 's' → logprob: -4.322513580322266
    6. ',' → logprob: -5.322513580322266
    7. '#' → logprob: -5.947513580322266
    8. '```' → logprob: -6.072513580322266
    9. '_=' → logprob: -6.322513580322266
    10. 'u' → logprob: -6.447513580322266

Token 7: 'itu' (ID: 7642)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.810807704925537
    2. '```' → logprob: -1.935807704925537
    3. 'ér' → logprob: -2.060807704925537
    4. 'er' → logprob: -2.560807704925537
    5. 'n' → logprob: -2.935807704925537
    6. 'iles' → logprob: -2.935807704925537
    7. 'i' → logprob: -2.935807704925537
    8. 'e' → logprob: -3.185807704925537
    9. 'il' → logprob: -3.685807704925537
    10. 'r' → logprob: -3.685807704925537

Token 8: 'elles' (ID: 8500)
  Prédit: 'ères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ères' → logprob: -0.9209226369857788
    2. 'bles' → logprob: -1.1709226369857788
    3. 't' → logprob: -2.1709227561950684
    4. 'ables' → logprob: -2.6709227561950684
    5. 'tes' → logprob: -3.5459227561950684
    6. 'er' → logprob: -3.9209227561950684
    7. '```' → logprob: -4.170922756195068
    8. 'les' → logprob: -4.670922756195068
    9. 'èr' → logprob: -4.920922756195068
    10. 'ers' → logprob: -5.545922756195068

Token 9: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35200586915016174
    2. '#' → logprob: -2.727005958557129
    3. 'x' → logprob: -2.977005958557129
    4. '=' → logprob: -3.352005958557129
    5. ',' → logprob: -3.602005958557129
    6. 'a' → logprob: -3.852005958557129
    7. 'i' → logprob: -4.102005958557129
    8. 'e' → logprob: -4.477005958557129
    9. 'n' → logprob: -4.727005958557129
    10. 'd' → logprob: -4.852005958557129

Token 10: ' structures' (ID: 21207)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7914248704910278
    2. ' ' → logprob: -2.0414247512817383
    3. ' #' → logprob: -2.2914247512817383
    4. '_' → logprob: -2.6664247512817383
    5. ',' → logprob: -2.9164247512817383
    6. 'é' → logprob: -3.1664247512817383
    7. '```' → logprob: -3.4164247512817383
    8. 'n' → logprob: -3.7914247512817383
    9. 'a' → logprob: -3.9164247512817383
    10. 'b' → logprob: -3.9789247512817383

Token 11: ' atyp' (ID: 138863)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4665820002555847
    2. '_' → logprob: -1.2165820598602295
    3. ',' → logprob: -4.09158182144165
    4. '/' → logprob: -4.96658182144165
    5. 'd' → logprob: -5.34158182144165
    6. 'a' → logprob: -5.46658182144165
    7. '=' → logprob: -5.59158182144165
    8. '.' → logprob: -5.59158182144165
    9. 'n' → logprob: -5.59158182144165
    10. ':' → logprob: -5.59158182144165

Token 12: 'iques' (ID: 11654)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.767499566078186
    2. 's' → logprob: -1.892499566078186
    3. '`' → logprob: -2.3924994468688965
    4. '#' → logprob: -2.6424994468688965
    5. 'e' → logprob: -2.7674994468688965
    6. '_' → logprob: -3.3924994468688965
    7. ',' → logprob: -3.3924994468688965
    8. 'es' → logprob: -3.6424994468688965
    9. '.' → logprob: -4.5174994468688965
    10. '``' → logprob: -4.5174994468688965

Token 13: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1666558980941772
    2. '_' → logprob: -1.6666558980941772
    3. ':' → logprob: -2.166656017303467
    4. ',' → logprob: -2.791656017303467
    5. ';' → logprob: -3.041656017303467
    6. '=' → logprob: -3.291656017303467
    7. '.' → logprob: -3.416656017303467
    8. 'd' → logprob: -3.416656017303467
    9. 'a' → logprob: -3.666656017303467
    10. '```' → logprob: -3.916656017303467

Token 14: 'get' (ID: 522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1829874515533447
    2. '_' → logprob: -1.3079874515533447
    3. '#' → logprob: -1.4329874515533447
    4. ';' → logprob: -2.9329874515533447
    5. ',' → logprob: -3.1829874515533447
    6. '.' → logprob: -3.6829874515533447
    7. '=' → logprob: -4.307987213134766
    8. '!' → logprob: -4.807987213134766
    9. 'e' → logprob: -5.057987213134766
    10. '```' → logprob: -5.182987213134766

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3619321584701538
    2. 'attr' → logprob: -1.8619321584701538
    3. ' _' → logprob: -2.3619322776794434
    4. 's' → logprob: -4.611932277679443
    5. '(' → logprob: -4.986932277679443
    6. ' ' → logprob: -5.236932277679443
    7. '.' → logprob: -5.486932277679443
    8. '_data' → logprob: -5.736932277679443
    9. '()' → logprob: -5.861932277679443
    10. ')' → logprob: -6.236932277679443

Token 16: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5632836222648621
    2. ' lambda' → logprob: -1.5632836818695068
    3. ' ' → logprob: -3.063283681869507
    4. ' getattr' → logprob: -3.688283681869507
    5. 'input' → logprob: -3.938283681869507
    6. ' dict' → logprob: -4.063283443450928
    7. 'lambda' → logprob: -4.063283443450928
    8. ' list' → logprob: -4.313283443450928
    9. ' get' → logprob: -4.938283443450928
    10. ' open' → logprob: -5.188283443450928

Token 17: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.010533769614994526
    2. ' s' → logprob: -5.760533809661865
    3. ' a' → logprob: -6.260533809661865
    4. 'x' → logprob: -6.260533809661865
    5. ' ' → logprob: -7.260533809661865
    6. ' n' → logprob: -7.385533809661865
    7. ' f' → logprob: -7.510533809661865
    8. ' lambda' → logprob: -7.760533809661865
    9. ' b' → logprob: -9.260533332824707
    10. ' y' → logprob: -9.260533332824707

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8238629698753357
    2. ' ' → logprob: -1.8238630294799805
    3. 'input' → logprob: -2.0738630294799805
    4. ' None' → logprob: -2.9488630294799805
    5. '[]' → logprob: -3.6988630294799805
    6. ' []' → logprob: -3.6988630294799805
    7. ' __' → logprob: -4.0738630294799805
    8. ' int' → logprob: -4.0738630294799805
    9. '__' → logprob: -4.1988630294799805
    10. ' [' → logprob: -4.4488630294799805

Token 19: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6354860067367554
    2. '()' → logprob: -0.7604860067367554
    3. '().' → logprob: -7.135486125946045
    4. ')' → logprob: -7.510486125946045
    5. '.' → logprob: -7.885486125946045
    6. ' ()' → logprob: -8.260485649108887
    7. '("")' → logprob: -8.510485649108887
    8. '(
' → logprob: -8.885485649108887
    9. ' (' → logprob: -9.135485649108887
    10. '('' → logprob: -9.635485649108887

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.017018117010593414
    2. 'rstrip' → logprob: -4.1420183181762695
    3. 'split' → logprob: -7.0170183181762695
    4. 'replace' → logprob: -9.76701831817627
    5. 'lower' → logprob: -10.64201831817627
    6. 'read' → logprob: -13.14201831817627
    7. ' strip' → logprob: -13.76701831817627
    8. 'rst' → logprob: -14.14201831817627
    9. 'r' → logprob: -14.76701831817627
    10. 'str' → logprob: -14.76701831817627

Token 21: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5833297967910767
    2. '()' → logprob: -0.8333297967910767
    3. '('' → logprob: -4.958329677581787
    4. '("("' → logprob: -8.833330154418945
    5. '('.')' → logprob: -9.833330154418945
    6. '(None' → logprob: -10.958330154418945
    7. '()]' → logprob: -10.958330154418945
    8. '(
' → logprob: -11.583330154418945
    9. '(\' → logprob: -11.833330154418945
    10. '('\' → logprob: -11.958330154418945

Token 22: 'P' (ID: 47)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6902604103088379
    2. '()' → logprob: -1.690260410308838
    3. '_' → logprob: -1.940260410308838
    4. '[' → logprob: -3.190260410308838
    5. ',' → logprob: -3.815260410308838
    6. ')' → logprob: -3.815260410308838
    7. 'def' → logprob: -3.940260410308838
    8. 'data' → logprob: -4.690260410308838
    9. '(
' → logprob: -4.815260410308838
    10. '.' → logprob: -5.190260410308838

Token 23: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18722859025001526
    2. 'R' → logprob: -1.8122285604476929
    3. ' =' → logprob: -5.937228679656982
    4. '=' → logprob: -7.312228679656982
    5. '1' → logprob: -7.437228679656982
    6. '_r' → logprob: -7.562228679656982
    7. 'I' → logprob: -8.062228202819824
    8. '_' → logprob: -8.312228202819824
    9. 'Q' → logprob: -8.687228202819824
    10. 'L' → logprob: -8.812228202819824

Token 24: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3377004861831665
    2. 'L' → logprob: -2.837700366973877
    3. 'M' → logprob: -3.462700366973877
    4. 'K' → logprob: -3.462700366973877
    5. 'A' → logprob: -3.712700366973877
    6. 'T' → logprob: -3.962700366973877
    7. 'V' → logprob: -4.337700366973877
    8. 'E' → logprob: -4.462700366973877
    9. 'N' → logprob: -4.587700366973877
    10. 'a' → logprob: -4.587700366973877

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5238279104232788
    2. ' =' → logprob: -0.8988279104232788
    3. ',' → logprob: -7.398828029632568
    4. ' ' → logprob: -9.39882755279541
    5. '=input' → logprob: -13.39882755279541
    6. ' ,' → logprob: -13.77382755279541
    7. '=int' → logprob: -14.27382755279541
    8. '[' → logprob: -14.39882755279541
    9. ')' → logprob: -14.52382755279541
    10. '   ' → logprob: -14.58632755279541

Token 26: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9209595918655396
    2. 'get' → logprob: -1.1709595918655396
    3. ' map' → logprob: -1.5459595918655396
    4. ' get' → logprob: -2.54595947265625
    5. 'int' → logprob: -9.79595947265625
    6. '[get' → logprob: -9.79595947265625
    7. 'list' → logprob: -9.92095947265625
    8. ' ' → logprob: -10.54595947265625
    9. '(get' → logprob: -10.67095947265625
    10. ' list' → logprob: -11.29595947265625

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01121275220066309
    2. '(' → logprob: -4.6362128257751465
    3. '(get' → logprob: -6.6362128257751465
    4. '(lambda' → logprob: -9.761212348937988
    5. 'int' → logprob: -10.136212348937988
    6. '(input' → logprob: -10.761212348937988
    7. '(str' → logprob: -11.261212348937988
    8. '(map' → logprob: -13.386212348937988
    9. '(eval' → logprob: -13.511212348937988
    10. 'get' → logprob: -13.511212348937988

Token 28: ',' (ID: 11)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.79721999168396
    2. ',' → logprob: -1.17221999168396
    3. 'get' → logprob: -2.29721999168396
    4. ',get' → logprob: -2.29721999168396
    5. 'input' → logprob: -4.172220230102539
    6. ',input' → logprob: -4.797220230102539
    7. '(input' → logprob: -5.172220230102539
    8. ')' → logprob: -5.422220230102539
    9. ')get' → logprob: -5.547220230102539
    10. '(' → logprob: -7.922220230102539

Token 29: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.055110085755586624
    2. ' get' → logprob: -2.930109977722168
    3. ')get' → logprob: -9.180109977722168
    4. 'input' → logprob: -9.680109977722168
    5. ')' → logprob: -10.305109977722168
    6. ' input' → logprob: -11.180109977722168
    7. '(get' → logprob: -11.930109977722168
    8. '[get' → logprob: -13.180109977722168
    9. '	get' → logprob: -13.680109977722168
    10. 'getc' → logprob: -14.180109977722168

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10209499299526215
    2. '()))' → logprob: -2.977094888687134
    3. '()' → logprob: -3.102094888687134
    4. ')' → logprob: -6.852095127105713
    5. '))' → logprob: -10.477094650268555
    6. ' ())' → logprob: -11.102094650268555
    7. '()),' → logprob: -11.352094650268555
    8. '().' → logprob: -11.602094650268555
    9. '();)' → logprob: -12.102094650268555
    10. '())
' → logprob: -12.102094650268555

Token 31: 'T' (ID: 51)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.805495023727417
    2. 'for' → logprob: -1.930495023727417
    3. 'r' → logprob: -2.305495023727417
    4. ',' → logprob: -2.555495023727417
    5. '*' → logprob: -2.555495023727417
    6. ')' → logprob: -2.680495023727417
    7. 'a' → logprob: -3.055495023727417
    8. '+' → logprob: -3.180495023727417
    9. 'x' → logprob: -3.180495023727417
    10. ' ' → logprob: -3.180495023727417

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35275301337242126
    2. '=' → logprob: -1.2277530431747437
    3. ',' → logprob: -5.977753162384033
    4. '.' → logprob: -7.602753162384033
    5. '_' → logprob: -8.102752685546875
    6. '[' → logprob: -8.227752685546875
    7. ' ' → logprob: -8.602752685546875
    8. '[]' → logprob: -9.102752685546875
    9. ')' → logprob: -9.602752685546875
    10. 'ime' → logprob: -9.977752685546875

Token 33: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2604030966758728
    2. '[' → logprob: -2.1354031562805176
    3. '[int' → logprob: -3.5104031562805176
    4. '0' → logprob: -3.6354031562805176
    5. '[P' → logprob: -3.6354031562805176
    6. ' []' → logprob: -4.510403156280518
    7. ' [' → logprob: -5.635403156280518
    8. 'Q' → logprob: -5.635403156280518
    9. 'P' → logprob: -6.135403156280518
    10. 'int' → logprob: -6.510403156280518

Token 34: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06595105677843094
    2. '()' → logprob: -3.565951108932495
    3. '(' → logprob: -3.815951108932495
    4. '(range' → logprob: -4.940950870513916
    5. '(get' → logprob: -5.315950870513916
    6. '(int' → logprob: -7.440950870513916
    7. '(input' → logprob: -7.440950870513916
    8. '(filter' → logprob: -9.190951347351074
    9. '(set' → logprob: -10.565951347351074
    10. '(P' → logprob: -10.565951347351074

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008365504327230155
    2. '(' → logprob: -7.750836372375488
    3. 'int' → logprob: -8.250836372375488
    4. ')' → logprob: -9.125836372375488
    5. ',int' → logprob: -11.750836372375488
    6. '[int' → logprob: -11.875836372375488
    7. ')(' → logprob: -12.000836372375488
    8. '<int' → logprob: -12.375836372375488
    9. '(str' → logprob: -12.500836372375488
    10. '=int' → logprob: -13.000836372375488

Token 36: ',' (ID: 11)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.015646468847990036
    2. ',get' → logprob: -4.890646457672119
    3. ',' → logprob: -5.265646457672119
    4. '(' → logprob: -6.140646457672119
    5. 'get' → logprob: -7.515646457672119
    6. '(input' → logprob: -9.890646934509277
    7. ')get' → logprob: -10.890646934509277
    8. '(),' → logprob: -11.390646934509277
    9. ' ,' → logprob: -11.390646934509277
    10. ')' → logprob: -11.390646934509277

Token 37: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.28669896721839905
    2. ' get' → logprob: -1.4116989374160767
    3. 'input' → logprob: -5.786698818206787
    4. ' input' → logprob: -6.036698818206787
    5. '(get' → logprob: -10.286699295043945
    6. ')get' → logprob: -11.036699295043945
    7. '	get' → logprob: -11.911699295043945
    8. ' ' → logprob: -12.036699295043945
    9. '[get' → logprob: -12.911699295043945
    10. ')' → logprob: -13.099199295043945

Token 38: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.026138538494706154
    2. '()' → logprob: -3.7761385440826416
    3. '())' → logprob: -6.2761383056640625
    4. '))' → logprob: -7.1511383056640625
    5. '()));' → logprob: -9.026138305664062
    6. '())))' → logprob: -10.151138305664062
    7. '()))
' → logprob: -10.776138305664062
    8. '().' → logprob: -10.901138305664062
    9. '(' → logprob: -12.151138305664062
    10. ')' → logprob: -12.401138305664062

Token 39: 'J' (ID: 41)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06705006211996078
    2. '#' → logprob: -3.942049980163574
    3. '()' → logprob: -4.317049980163574
    4. '.' → logprob: -4.442049980163574
    5. '[' → logprob: -4.942049980163574
    6. '(' → logprob: -5.692049980163574
    7. 'Q' → logprob: -6.442049980163574
    8. '()
' → logprob: -6.567049980163574
    9. ' ' → logprob: -6.817049980163574
    10. '
' → logprob: -7.192049980163574

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.06035315990448
    2. '[' → logprob: -1.18535315990448
    3. ' =' → logprob: -1.93535315990448
    4. ',' → logprob: -2.8103532791137695
    5. '[]' → logprob: -3.0603532791137695
    6. '0' → logprob: -4.3103532791137695
    7. '=[]' → logprob: -4.3103532791137695
    8. '[:]' → logprob: -4.5603532791137695
    9. '_' → logprob: -4.8103532791137695
    10. '1' → logprob: -4.9353532791137695

Token 41: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4018112123012543
    2. ' []' → logprob: -1.9018112421035767
    3. ' [' → logprob: -2.526811122894287
    4. '0' → logprob: -3.276811122894287
    5. '[' → logprob: -3.401811122894287
    6. '[len' → logprob: -5.526811122894287
    7. '[T' → logprob: -5.526811122894287
    8. 'sum' → logprob: -5.651811122894287
    9. 'list' → logprob: -5.776811122894287
    10. ' list' → logprob: -5.901811122894287

Token 42: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06355947256088257
    2. 'T' → logprob: -3.4385595321655273
    3. '(' → logprob: -5.438559532165527
    4. ']' → logprob: -5.688559532165527
    5. 't' → logprob: -5.688559532165527
    6. 'i' → logprob: -5.938559532165527
    7. 'int' → logprob: -6.063559532165527
    8. '[]' → logprob: -6.188559532165527
    9. '1' → logprob: -6.438559532165527
    10. '-' → logprob: -6.563559532165527

Token 43: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2116129845380783
    2. '()]' → logprob: -2.3366129398345947
    3. ']*' → logprob: -2.5866129398345947
    4. ']*(' → logprob: -4.711613178253174
    5. '()' → logprob: -5.086613178253174
    6. ' for' → logprob: -6.211613178253174
    7. 'for' → logprob: -6.836613178253174
    8. ']()' → logprob: -8.711612701416016
    9. '(' → logprob: -8.836612701416016
    10. '(None' → logprob: -9.961612701416016

Token 44: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.18082040548324585
    2. 'Q' → logprob: -1.9308204650878906
    3. 'len' → logprob: -4.180820465087891
    4. ' P' → logprob: -6.430820465087891
    5. ' Q' → logprob: -7.555820465087891
    6. '10' → logprob: -7.805820465087891
    7. '2' → logprob: -7.930820465087891
    8. '6' → logprob: -8.30582046508789
    9. '4' → logprob: -8.43082046508789
    10. '100' → logprob: -8.80582046508789

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14413009583950043
    2. '+' → logprob: -2.019129991531372
    3. '*' → logprob: -6.894130229949951
    4. ' )' → logprob: -9.269129753112793
    5. '))' → logprob: -9.394129753112793
    6. ' +' → logprob: -9.394129753112793
    7. ')
' → logprob: -9.894129753112793
    8. '-' → logprob: -10.019129753112793
    9. 'Q' → logprob: -10.144129753112793
    10. '+)' → logprob: -11.144129753112793

Token 46: 'ix' (ID: 1128)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038177818059921265
    2. ' for' → logprob: -3.913177728652954
    3. ')' → logprob: -4.913177967071533
    4. '=' → logprob: -5.538177967071533
    5. '+' → logprob: -6.538177967071533
    6. '
' → logprob: -6.663177967071533
    7. ']' → logprob: -7.413177967071533
    8. 'f' → logprob: -7.538177967071533
    9. '0' → logprob: -7.913177967071533
    10. 'Q' → logprob: -8.413177490234375

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28268808126449585
    2. ' =' → logprob: -1.4076881408691406
    3. 's' → logprob: -7.532688140869141
    4. ' ' → logprob: -7.657688140869141
    5. '_' → logprob: -8.15768814086914
    6. ',' → logprob: -8.65768814086914
    7. ')' → logprob: -11.03268814086914
    8. 'a' → logprob: -11.78268814086914
    9. 'x' → logprob: -11.90768814086914
    10. '  ' → logprob: -12.40768814086914

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015337858349084854
    2. ' ' → logprob: -6.6265339851379395
    3. 'P' → logprob: -8.751533508300781
    4. '1' → logprob: -11.251533508300781
    5. '[' → logprob: -11.501533508300781
    6. '-' → logprob: -11.626533508300781
    7. ' P' → logprob: -12.001533508300781
    8. 'Q' → logprob: -12.876533508300781
    9. 'p' → logprob: -13.751533508300781
    10. '2' → logprob: -13.814033508300781

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003271945286542177
    2. 'P' → logprob: -6.00327205657959
    3. '[' → logprob: -7.75327205657959
    4. '[P' → logprob: -8.75327205657959
    5. '-' → logprob: -9.37827205657959
    6. 'range' → logprob: -10.50327205657959
    7. 'len' → logprob: -11.00327205657959
    8. '1' → logprob: -11.25327205657959
    9. '[]' → logprob: -11.37827205657959
    10. ' ' → logprob: -11.37827205657959

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.280454158782959
    2. '<|end|>' → logprob: -1.280454158782959
    3. '
' → logprob: -1.405454158782959
    4. 'while' → logprob: -2.155454158782959
    5. ' while' → logprob: -4.030454158782959
    6. ' 
' → logprob: -4.030454158782959
    7. ' for' → logprob: -4.280454158782959
    8. ' ' → logprob: -4.655454158782959
    9. ')' → logprob: -5.530454158782959
    10. '<|end|>' → logprob: -5.655454158782959

Token 52: ' ix' (ID: 44402)
  Prédit: ' ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.038711581379175186
    2. 'ix' → logprob: -3.2887115478515625
    3. ' ' → logprob: -8.288711547851562
    4. ' P' → logprob: -9.288711547851562
    5. '(ix' → logprob: -9.413711547851562
    6. 'P' → logprob: -9.663711547851562
    7. 'Ix' → logprob: -9.913711547851562
    8. ' True' → logprob: -10.663711547851562
    9. '_ix' → logprob: -10.788711547851562
    10. ' T' → logprob: -11.038711547851562

Token 53: '<P' (ID: 42419)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3139302432537079
    2. '<' → logprob: -1.3139302730560303
    3. ' ' → logprob: -8.06393051147461
    4. '<P' → logprob: -8.68893051147461
    5. '<len' → logprob: -8.68893051147461
    6. 'P' → logprob: -12.56393051147461
    7. '<T' → logprob: -13.18893051147461
    8. '[' → logprob: -13.31393051147461
    9. ' P' → logprob: -13.43893051147461
    10. '<size' → logprob: -13.81393051147461

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01832037977874279
    2. ' and' → logprob: -4.143320560455322
    3. ' :' → logprob: -6.393320560455322
    4. 'and' → logprob: -7.768320560455322
    5. ':
' → logprob: -8.768320083618164
    6. '+' → logprob: -11.768320083618164
    7. '+:' → logprob: -11.768320083618164
    8. ')' → logprob: -12.393320083618164
    9. '>' → logprob: -13.143320083618164
    10. ' ' → logprob: -13.393320083618164

Token 55: '	J' (ID: 27262)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26804646849632263
    2. ' if' → logprob: -2.3930463790893555
    3. 'J' → logprob: -2.8930463790893555
    4. 'if' → logprob: -3.7680463790893555
    5. ' J' → logprob: -4.1430463790893555
    6. 'T' → logprob: -4.6430463790893555
    7. 'j' → logprob: -4.7680463790893555
    8. ':' → logprob: -5.0180463790893555
    9. ' ' → logprob: -5.1430463790893555
    10. ' T' → logprob: -5.6430463790893555

Token 56: '[ix' (ID: 165910)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0514878034591675
    2. '[ix' → logprob: -1.4264878034591675
    3. '[' → logprob: -1.6764878034591675
    4. ' =' → logprob: -1.9264878034591675
    5. '[i' → logprob: -3.301487922668457
    6. 'ix' → logprob: -4.176487922668457
    7. ']' → logprob: -5.551487922668457
    8. '=None' → logprob: -5.926487922668457
    9. '[index' → logprob: -6.551487922668457
    10. '=[' → logprob: -6.676487922668457

Token 57: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03108958713710308
    2. ']=' → logprob: -3.9060895442962646
    3. ']+=' → logprob: -5.156089782714844
    4. ' ]' → logprob: -6.281089782714844
    5. ')' → logprob: -7.031089782714844
    6. '=' → logprob: -7.281089782714844
    7. '+=' → logprob: -8.531089782714844
    8. '+' → logprob: -8.781089782714844
    9. ']+' → logprob: -9.156089782714844
    10. ' =' → logprob: -9.156089782714844

Token 58: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1332668960094452
    2. 'int' → logprob: -2.2582669258117676
    3. 'max' → logprob: -5.758266925811768
    4. 'ix' → logprob: -5.883266925811768
    5. '0' → logprob: -6.008266925811768
    6. '	T' → logprob: -6.133266925811768
    7. '(T' → logprob: -6.258266925811768
    8. 'Q' → logprob: -6.383266925811768
    9. '(int' → logprob: -7.258266925811768
    10. ' T' → logprob: -7.508266925811768

Token 59: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.0002469158498570323
    2. '[' → logprob: -8.75024700164795
    3. '[i' → logprob: -10.75024700164795
    4. 'ix' → logprob: -11.00024700164795
    5. '```' → logprob: -11.50024700164795
    6. '[:' → logprob: -12.00024700164795
    7. '[:]' → logprob: -12.12524700164795
    8. '[j' → logprob: -12.37524700164795
    9. '[]' → logprob: -12.75024700164795
    10. '[idx' → logprob: -12.87524700164795

Token 60: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20001347362995148
    2. ']+' → logprob: -2.2000133991241455
    3. '])' → logprob: -3.7000133991241455
    4. '+' → logprob: -4.075013637542725
    5. ')' → logprob: -4.325013637542725
    6. ']*' → logprob: -5.825013637542725
    7. '-' → logprob: -5.825013637542725
    8. '*' → logprob: -6.575013637542725
    9. ']-' → logprob: -6.575013637542725
    10. ' ]' → logprob: -6.575013637542725

Token 61: '	' (ID: 197)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8038983345031738
    2. '	
' → logprob: -1.3038983345031738
    3. ' 
' → logprob: -2.678898334503174
    4. '	' → logprob: -3.178898334503174
    5. 'ix' → logprob: -3.428898334503174
    6. '\n' → logprob: -3.803898334503174
    7. '\' → logprob: -4.053898334503174
    8. ' ' → logprob: -4.178898334503174
    9. '[ix' → logprob: -4.428898334503174
    10. '\x' → logprob: -4.553898334503174

Token 62: 'ix' (ID: 1128)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2648996114730835
    2. 'ix' → logprob: -1.2648996114730835
    3. '+' → logprob: -2.014899730682373
    4. ' ix' → logprob: -2.764899730682373
    5. 'if' → logprob: -2.889899730682373
    6. ' ' → logprob: -3.389899730682373
    7. '	if' → logprob: -3.514899730682373
    8. '
' → logprob: -3.889899730682373
    9. '	' → logprob: -4.014899730682373
    10. '*' → logprob: -4.264899730682373

Token 63: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.524429440498352
    2. '+=' → logprob: -1.024429440498352
    3. ' +=' → logprob: -3.0244293212890625
    4. ' +' → logprob: -7.8994293212890625
    5. '=' → logprob: -9.274429321289062
    6. '++' → logprob: -10.274429321289062
    7. '+++' → logprob: -12.399429321289062
    8. '+='' → logprob: -12.524429321289062
    9. ' ' → logprob: -12.649429321289062
    10. ' =' → logprob: -13.149429321289062

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. '2' → logprob: -15.68765926361084
    4. '	' → logprob: -16.187660217285156
    5. '```' → logprob: -16.562660217285156
    6. ' ' → logprob: -16.625160217285156
    7. '+' → logprob: -16.812660217285156
    8. '   ' → logprob: -16.812660217285156
    9. '4' → logprob: -16.812660217285156
    10. '0' → logprob: -16.875160217285156

Token 65: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35594385862350464
    2. '<|end|>' → logprob: -1.2309439182281494
    3. ' ' → logprob: -5.73094367980957
    4. '<|end|>' → logprob: -6.85594367980957
    5. ' 
' → logprob: -7.48094367980957
    6. '\n' → logprob: -7.60594367980957
    7. ')' → logprob: -8.23094367980957
    8. '#' → logprob: -8.35594367980957
    9. '```' → logprob: -8.60594367980957
    10. 'ix' → logprob: -8.73094367980957

Token 66: 'M' (ID: 44)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4983748495578766
    2. 'ax' → logprob: -1.2483748197555542
    3. '=' → logprob: -3.1233749389648438
    4. 'a' → logprob: -3.4983749389648438
    5. 'ean' → logprob: -4.873374938964844
    6. 'y' → logprob: -5.498374938964844
    7. 'atrix' → logprob: -5.873374938964844
    8. '=[]' → logprob: -6.373374938964844
    9. 'ix' → logprob: -6.748374938964844
    10. 'o' → logprob: -6.873374938964844

Token 68: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3297322988510132
    2. 'max' → logprob: -2.2047324180603027
    3. 'Q' → logprob: -2.3297324180603027
    4. '[max' → logprob: -2.4547324180603027
    5. '[]' → logprob: -2.5797324180603027
    6. ' [' → logprob: -2.8297324180603027
    7. '[P' → logprob: -3.0797324180603027
    8. '[J' → logprob: -3.0797324180603027
    9. '{}' → logprob: -3.2047324180603027
    10. '[min' → logprob: -3.7047324180603027

Token 69: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014842603355646133
    2. '(' → logprob: -4.264842510223389
    3. '([(' → logprob: -9.139842987060547
    4. '()
' → logprob: -9.389842987060547
    5. '({' → logprob: -9.889842987060547
    6. '()\' → logprob: -10.014842987060547
    7. '()]' → logprob: -10.264842987060547
    8. '([' → logprob: -10.389842987060547
    9. '()>' → logprob: -10.389842987060547
    10. '()

' → logprob: -10.514842987060547

Token 70: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3958490490913391
    2. 'for' → logprob: -2.2708489894866943
    3. ' 
' → logprob: -2.7708489894866943
    4. ' for' → logprob: -3.0208489894866943
    5. 'Q' → logprob: -3.3958489894866943
    6. 'i' → logprob: -4.145849227905273
    7. ' Q' → logprob: -4.270849227905273
    8. 'ix' → logprob: -4.520849227905273
    9. ' ix' → logprob: -4.770849227905273
    10. ' i' → logprob: -5.145849227905273

Token 71: '[' (ID: 58)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7419720888137817
    2. '[]' → logprob: -1.7419720888137817
    3. ' =' → logprob: -1.9919720888137817
    4. '.setdefault' → logprob: -2.116971969604492
    5. '<|end|>' → logprob: -2.116971969604492
    6. '={}' → logprob: -2.491971969604492
    7. '{}' → logprob: -2.616971969604492
    8. '=' → logprob: -3.116971969604492
    9. '.clear' → logprob: -3.491971969604492
    10. '[' → logprob: -3.741971969604492

Token 72: '0' (ID: 15)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -1.515744686126709
    2. 'P' → logprob: -1.640744686126709
    3. '0' → logprob: -2.140744686126709
    4. 'Q' → logprob: -2.265744686126709
    5. 'None' → logprob: -2.515744686126709
    6. 'ix' → logprob: -2.640744686126709
    7. 'T' → logprob: -3.265744686126709
    8. '(' → logprob: -3.390744686126709
    9. 'True' → logprob: -3.890744686126709
    10. '[]' → logprob: -4.265744686126709

Token 73: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04459359496831894
    2. ']=' → logprob: -3.169593572616577
    3. ' ]' → logprob: -6.544593811035156
    4. ']+=' → logprob: -9.794593811035156
    5. '=' → logprob: -10.044593811035156
    6. ']=-' → logprob: -11.544593811035156
    7. ']={' → logprob: -11.669593811035156
    8. ']>' → logprob: -12.294593811035156
    9. ' =' → logprob: -12.419593811035156
    10. ']==' → logprob: -12.919593811035156

Token 74: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012142036110162735
    2. '1' → logprob: -5.262142181396484
    3. 'True' → logprob: -5.637142181396484
    4. ' ' → logprob: -6.762142181396484
    5. '[]' → logprob: -7.262142181396484
    6. '-' → logprob: -7.387142181396484
    7. '[' → logprob: -8.137142181396484
    8. '(' → logprob: -8.637142181396484
    9. 'P' → logprob: -9.512142181396484
    10. '(True' → logprob: -9.887142181396484

Token 75: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.138869285583496
    2. 'ix' → logprob: -1.138869285583496
    3. 'for' → logprob: -2.638869285583496
    4. ' i' → logprob: -3.013869285583496
    5. 's' → logprob: -3.638869285583496
    6. ' for' → logprob: -3.888869285583496
    7. 'while' → logprob: -4.513869285583496
    8. ' ix' → logprob: -4.513869285583496
    9. 'sum' → logprob: -4.638869285583496
    10. 'idx' → logprob: -4.638869285583496

Token 76: 'z' (ID: 89)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0646485090255737
    2. 'c' → logprob: -1.6896485090255737
    3. 'i' → logprob: -2.5646486282348633
    4. 'sum' → logprob: -2.8146486282348633
    5. ' s' → logprob: -3.0646486282348633
    6. 'ix' → logprob: -3.5646486282348633
    7. 'cum' → logprob: -3.6896486282348633
    8. ' i' → logprob: -3.8146486282348633
    9. 'r' → logprob: -4.064648628234863
    10. 'count' → logprob: -4.189648628234863

Token 77: 'Z' (ID: 57)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6138566732406616
    2. '=' → logprob: -1.3638566732406616
    3. 'x' → logprob: -2.613856792449951
    4. 'a' → logprob: -3.613856792449951
    5. 'um' → logprob: -4.113856792449951
    6. 'i' → logprob: -4.238856792449951
    7. 'e' → logprob: -4.488856792449951
    8. '=i' → logprob: -4.988856792449951
    9. 'o' → logprob: -5.113856792449951
    10. 'z' → logprob: -5.363856792449951

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7198687791824341
    2. ' =' → logprob: -0.7198687791824341
    3. 'x' → logprob: -4.0948686599731445
    4. 'z' → logprob: -5.9698686599731445
    5. ',' → logprob: -6.4698686599731445
    6. 'o' → logprob: -6.7198686599731445
    7. ' ' → logprob: -6.9698686599731445
    8. 'i' → logprob: -7.3448686599731445
    9. 'e' → logprob: -8.094868659973145
    10. 'a' → logprob: -8.219868659973145

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07029584795236588
    2. ' ' → logprob: -2.695295810699463
    3. '{}' → logprob: -8.945296287536621
    4. '1' → logprob: -9.570296287536621
    5. 'P' → logprob: -10.570296287536621
    6. '[]' → logprob: -10.820296287536621
    7. ' {}' → logprob: -11.070296287536621
    8. ' P' → logprob: -11.320296287536621
    9. 'z' → logprob: -11.695296287536621
    10. ' []' → logprob: -11.695296287536621

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002695505041629076
    2. '{}' → logprob: -6.377695560455322
    3. ' ' → logprob: -8.127695083618164
    4. '[]' → logprob: -8.752695083618164
    5. 'J' → logprob: -9.002695083618164
    6. 'T' → logprob: -9.127695083618164
    7. 'P' → logprob: -9.377695083618164
    8. '1' → logprob: -9.377695083618164
    9. '{' → logprob: -9.627695083618164
    10. '[' → logprob: -11.252695083618164

Token 81: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2522451877593994
    2. '+' → logprob: -1.6272451877593994
    3. 'for' → logprob: -2.1272451877593994
    4. 'ix' → logprob: -2.2522451877593994
    5. '<|end|>' → logprob: -2.3772451877593994
    6. ' for' → logprob: -3.0022451877593994
    7. 'i' → logprob: -4.00224494934082
    8. ' ix' → logprob: -4.37724494934082
    9. 's' → logprob: -4.50224494934082
    10. 'while' → logprob: -4.50224494934082

Token 82: 'ccc' (ID: 79077)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7283815145492554
    2. 'ix' → logprob: -1.3533815145492554
    3. 'i' → logprob: -2.853381633758545
    4. 'while' → logprob: -2.853381633758545
    5. ' for' → logprob: -3.228381633758545
    6. '+' → logprob: -3.603381633758545
    7. ' while' → logprob: -3.978381633758545
    8. ' ' → logprob: -4.228381633758545
    9. ' ix' → logprob: -4.603381633758545
    10. ' i' → logprob: -4.853381633758545

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328664422035217
    2. '=' → logprob: -0.7578664422035217
    3. '+=' → logprob: -9.632866859436035
    4. ' +=' → logprob: -10.132866859436035
    5. '+' → logprob: -10.257866859436035
    6. 'x' → logprob: -10.382866859436035
    7. 'z' → logprob: -10.632866859436035
    8. ' ' → logprob: -11.132866859436035
    9. ',' → logprob: -11.257866859436035
    10. '=int' → logprob: -12.507866859436035

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11387984454631805
    2. ' ' → logprob: -2.238879919052124
    3. '1' → logprob: -6.988879680633545
    4. 'P' → logprob: -10.113880157470703
    5. ' P' → logprob: -10.988880157470703
    6. '{}' → logprob: -11.113880157470703
    7. ' T' → logprob: -11.363880157470703
    8. 'T' → logprob: -11.488880157470703
    9. '2' → logprob: -11.988880157470703
    10. ' defaultdict' → logprob: -12.363880157470703

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001933992956764996
    2. '1' → logprob: -6.501934051513672
    3. ' ' → logprob: -8.876934051513672
    4. '{}' → logprob: -8.876934051513672
    5. 'P' → logprob: -9.626934051513672
    6. 'T' → logprob: -10.001934051513672
    7. '[]' → logprob: -10.876934051513672
    8. '{' → logprob: -12.251934051513672
    9. 'len' → logprob: -12.501934051513672
    10. '2' → logprob: -13.251934051513672

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8923660516738892
    2. 'for' → logprob: -1.1423660516738892
    3. 'ix' → logprob: -1.3923660516738892
    4. 'i' → logprob: -4.5173659324646
    5. ' while' → logprob: -5.1423659324646
    6. ' for' → logprob: -6.3923659324646
    7. '```' → logprob: -7.3923659324646
    8. '<|end|>' → logprob: -7.5173659324646
    9. 'x' → logprob: -7.7673659324646
    10. 'z' → logprob: -7.7673659324646

Token 88: ' c' (ID: 274)
  Prédit: ' ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.396051824092865
    2. 'ix' → logprob: -1.5210518836975098
    3. ' z' → logprob: -2.3960518836975098
    4. 'z' → logprob: -4.39605188369751
    5. ' c' → logprob: -6.02105188369751
    6. '(ix' → logprob: -7.27105188369751
    7. '_ix' → logprob: -7.77105188369751
    8. '	' → logprob: -8.646051406860352
    9. '	z' → logprob: -8.771051406860352
    10. ' True' → logprob: -8.771051406860352

Token 89: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.283743679523468
    2. 'c' → logprob: -1.4087436199188232
    3. '<' → logprob: -6.283743858337402
    4. 'ccc' → logprob: -8.033743858337402
    5. 'z' → logprob: -9.033743858337402
    6. ' <' → logprob: -9.283743858337402
    7. '<P' → logprob: -10.158743858337402
    8. 'zz' → logprob: -10.158743858337402
    9. '<c' → logprob: -10.408743858337402
    10. 'P' → logprob: -10.658743858337402

Token 90: '<P' (ID: 42419)
  Prédit: '<P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<P' → logprob: -0.11776059120893478
    2. '<' → logprob: -2.36776065826416
    3. ' <' → logprob: -4.11776065826416
    4. '<Q' → logprob: -7.11776065826416
    5. '<p' → logprob: -9.24276065826416
    6. '<len' → logprob: -9.49276065826416
    7. ' ' → logprob: -10.11776065826416
    8. 'P' → logprob: -10.36776065826416
    9. '<=' → logprob: -11.24276065826416
    10. '<
' → logprob: -11.86776065826416

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05613541603088379
    2. ' and' → logprob: -3.556135416030884
    3. ':
' → logprob: -3.681135416030884
    4. 'and' → logprob: -7.556135177612305
    5. ' :' → logprob: -8.681135177612305
    6. '+' → logprob: -9.681135177612305
    7. '>' → logprob: -10.556135177612305
    8. ' :
' → logprob: -10.806135177612305
    9. ':

' → logprob: -11.681135177612305
    10. '+:' → logprob: -11.931135177612305

Token 92: '	z' (ID: 52196)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.6322922110557556
    2. 'z' → logprob: -2.5072922706604004
    3. '   ' → logprob: -2.5072922706604004
    4. '	z' → logprob: -2.6322922706604004
    5. ' ' → logprob: -3.5072922706604004
    6. '	' → logprob: -3.7572922706604004
    7. ' ix' → logprob: -3.8822922706604004
    8. ' J' → logprob: -4.2572922706604
    9. ' if' → logprob: -4.6322922706604
    10. '	J' → logprob: -4.7572922706604

Token 93: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.02481359988451004
    2. ' +=' → logprob: -4.149813652038574
    3. '+=' → logprob: -4.899813652038574
    4. '+' → logprob: -7.399813652038574
    5. '=' → logprob: -7.899813652038574
    6. ' =' → logprob: -8.899813652038574
    7. 'z' → logprob: -9.274813652038574
    8. ' +' → logprob: -10.774813652038574
    9. '++' → logprob: -11.649813652038574
    10. '	Z' → logprob: -12.149813652038574

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10422194004058838
    2. ' +=' → logprob: -2.354221820831299
    3. '+' → logprob: -5.604221820831299
    4. ' +' → logprob: -9.229222297668457
    5. '=' → logprob: -9.604222297668457
    6. ' =' → logprob: -9.854222297668457
    7. ' ^=' → logprob: -10.354222297668457
    8. '+=(' → logprob: -10.604222297668457
    9. ']+=' → logprob: -10.854222297668457
    10. '^' → logprob: -11.479222297668457

Token 95: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.10693614184856415
    2. 'T' → logprob: -2.60693621635437
    3. ' J' → logprob: -3.73193621635437
    4. ' T' → logprob: -5.856935977935791
    5. '	J' → logprob: -7.356935977935791
    6. '	T' → logprob: -9.35693645477295
    7. ' ' → logprob: -10.10693645477295
    8. '1' → logprob: -10.23193645477295
    9. ' ' → logprob: -11.23193645477295
    10. '	' → logprob: -11.48193645477295

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012737659562844783
    2. '[ix' → logprob: -9.250127792358398
    3. '[i' → logprob: -10.750127792358398
    4. 'ccc' → logprob: -12.500127792358398
    5. ' [' → logprob: -13.375127792358398
    6. '[j' → logprob: -13.625127792358398
    7. '[idx' → logprob: -14.000127792358398
    8. '	' → logprob: -14.000127792358398
    9. '[I' → logprob: -15.500127792358398
    10. '[ii' → logprob: -15.500127792358398

Token 97: 'ccc' (ID: 79077)
  Prédit: 'ccc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ccc' → logprob: -2.6060808522743173e-05
    2. ' c' → logprob: -11.375025749206543
    3. 'c' → logprob: -12.250025749206543
    4. 'cc' → logprob: -12.375025749206543
    5. 'ix' → logprob: -13.625025749206543
    6. 'cci' → logprob: -13.875025749206543
    7. 'cccc' → logprob: -14.250025749206543
    8. '0' → logprob: -14.750025749206543
    9. '[c' → logprob: -15.125025749206543
    10. 'iii' → logprob: -15.250025749206543

Token 98: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01533540990203619
    2. ')' → logprob: -4.515335559844971
    3. ']
' → logprob: -6.140335559844971
    4. '])' → logprob: -6.265335559844971
    5. ')
' → logprob: -9.390335083007812
    6. ']+' → logprob: -10.140335083007812
    7. ')]' → logprob: -10.140335083007812
    8. ' ]' → logprob: -10.140335083007812
    9. ' )' → logprob: -12.140335083007812
    10. '[' → logprob: -12.765335083007812

Token 99: '	z' (ID: 52196)
  Prédit: 'ccc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ccc' → logprob: -0.05396917834877968
    2. '	' → logprob: -3.428969144821167
    3. '	cc' → logprob: -4.803969383239746
    4. 'cc' → logprob: -5.678969383239746
    5. 'if' → logprob: -5.803969383239746
    6. '	if' → logprob: -6.678969383239746
    7. ' c' → logprob: -6.803969383239746
    8. ' if' → logprob: -6.928969383239746
    9. '```' → logprob: -7.428969383239746
    10. '
' → logprob: -8.303969383239746

Token 100: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.000181372175575234
    2. ' +=' → logprob: -9.375181198120117
    3. '+=' → logprob: -10.125181198120117
    4. '=' → logprob: -10.750181198120117
    5. '[' → logprob: -11.500181198120117
    6. 'z' → logprob: -12.375181198120117
    7. '+' → logprob: -12.500181198120117
    8. '_' → logprob: -13.250181198120117
    9. ' =' → logprob: -13.375181198120117
    10. '%' → logprob: -13.375181198120117

Token 101: ' %=' (ID: 117035)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.262532114982605
    2. ' not' → logprob: -1.512532114982605
    3. '%' → logprob: -5.8875322341918945
    4. '>' → logprob: -6.1375322341918945
    5. ' ' → logprob: -6.8875322341918945
    6. ' %=' → logprob: -7.1375322341918945
    7. ' %' → logprob: -7.2625322341918945
    8. '=' → logprob: -7.2625322341918945
    9. ']' → logprob: -8.012532234191895
    10. '<|end|>' → logprob: -8.137532234191895

Token 102: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0038099302910268307
    2. ' Q' → logprob: -5.628809928894043
    3. '100' → logprob: -9.503809928894043
    4. '(Q' → logprob: -10.128809928894043
    5. 'P' → logprob: -11.253809928894043
    6. 'M' → logprob: -11.253809928894043
    7. '	Q' → logprob: -11.378809928894043
    8. ' ' → logprob: -11.503809928894043
    9. '10' → logprob: -12.128809928894043
    10. '2' → logprob: -12.128809928894043

Token 103: '
' (ID: 198)
  Prédit: '	if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	if' → logprob: -0.36250531673431396
    2. ' if' → logprob: -1.487505316734314
    3. '	cc' → logprob: -2.9875054359436035
    4. 'if' → logprob: -4.2375054359436035
    5. 'ccc' → logprob: -5.4875054359436035
    6. '```' → logprob: -5.6125054359436035
    7. '
' → logprob: -6.6125054359436035
    8. '	c' → logprob: -7.1125054359436035
    9. '   ' → logprob: -7.2375054359436035
    10. '	
' → logprob: -7.3625054359436035

Token 104: '	if' (ID: 1224)
  Prédit: 'ccc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ccc' → logprob: -0.19217093288898468
    2. 'if' → logprob: -2.1921708583831787
    3. ' if' → logprob: -3.3171708583831787
    4. '	if' → logprob: -4.442171096801758
    5. 'M' → logprob: -5.192171096801758
    6. '	cc' → logprob: -5.567171096801758
    7. 'cc' → logprob: -5.942171096801758
    8. ' M' → logprob: -6.692171096801758
    9. '```' → logprob: -7.192171096801758
    10. '	' → logprob: -8.317171096801758

Token 105: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.0028221122920513153
    2. 'z' → logprob: -5.877821922302246
    3. ' M' → logprob: -12.127821922302246
    4. ' not' → logprob: -12.502821922302246
    5. '	z' → logprob: -12.877821922302246
    6. '(z' → logprob: -12.877821922302246
    7. ' ' → logprob: -13.502821922302246
    8. ' ' → logprob: -13.752821922302246
    9. 'M' → logprob: -15.252821922302246
    10. ' (' → logprob: -15.877821922302246

Token 106: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0022112776059657335
    2. '[' → logprob: -6.127211093902588
    3. '[z' → logprob: -11.127211570739746
    4. ' Z' → logprob: -12.752211570739746
    5. 'z' → logprob: -13.752211570739746
    6. '[
' → logprob: -14.127211570739746
    7. 'З' → logprob: -14.377211570739746
    8. '['' → logprob: -14.752211570739746
    9. '```' → logprob: -14.877211570739746
    10. '	Z' → logprob: -14.877211570739746

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007946698926389217
    2. 'in' → logprob: -5.382946491241455
    3. ' not' → logprob: -5.757946491241455
    4. ' ' → logprob: -9.382946968078613
    5. 'not' → logprob: -9.507946968078613
    6. ')' → logprob: -14.382946968078613
    7. '<|end|>' → logprob: -14.507946968078613
    8. 'In' → logprob: -14.632946968078613
    9. '0' → logprob: -14.632946968078613
    10. '	in' → logprob: -14.757946968078613

Token 108: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02975071594119072
    2. ' M' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. '	M' → logprob: -16.15475082397461
    5. '   ' → logprob: -18.02975082397461
    6. ')' → logprob: -18.77975082397461
    7. 'm' → logprob: -18.90475082397461
    8. ':M' → logprob: -19.02975082397461
    9. '  ' → logprob: -19.27975082397461
    10. '>M' → logprob: -19.65475082397461

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010451936395838857
    2. ':
' → logprob: -6.876045227050781
    3. ' :' → logprob: -12.626045227050781
    4. '=' → logprob: -12.751045227050781
    5. '):' → logprob: -13.501045227050781
    6. '<|end|>' → logprob: -14.251045227050781
    7. '.keys' → logprob: -14.376045227050781
    8. ':M' → logprob: -14.376045227050781
    9. ':return' → logprob: -15.001045227050781
    10. ' =' → logprob: -15.126045227050781

Token 110: '	' (ID: 197)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.11956106126308441
    2. '       ' → logprob: -2.494560956954956
    3. ' M' → logprob: -3.869560956954956
    4. '	   ' → logprob: -5.494561195373535
    5. '	M' → logprob: -6.369561195373535
    6. '   ' → logprob: -6.494561195373535
    7. '	' → logprob: -6.494561195373535
    8. '           ' → logprob: -8.994561195373535
    9. '	       ' → logprob: -9.369561195373535
    10. '    ' → logprob: -10.119561195373535

Token 111: '	M' (ID: 24747)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00819384679198265
    2. 'print' → logprob: -5.1331939697265625
    3. '	M' → logprob: -7.1331939697265625
    4. ' M' → logprob: -7.3831939697265625
    5. 'ccc' → logprob: -7.5081939697265625
    6. 'cc' → logprob: -9.883193969726562
    7. 'P' → logprob: -10.133193969726562
    8. '   ' → logprob: -10.508193969726562
    9. '	' → logprob: -10.633193969726562
    10. '	print' → logprob: -10.758193969726562

Token 112: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.250000953674316
    3. '	z' → logprob: -15.500000953674316
    4. 'z' → logprob: -16.625001907348633
    5. '[M' → logprob: -18.500001907348633
    6. ' z' → logprob: -19.000001907348633
    7. '	' → logprob: -19.375001907348633
    8. ' [' → logprob: -19.500001907348633
    9. '(z' → logprob: -20.000001907348633
    10. '=z' → logprob: -20.375001907348633

Token 113: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.00021974841365590692
    2. '[' → logprob: -8.625219345092773
    3. '[z' → logprob: -10.375219345092773
    4. 'z' → logprob: -11.875219345092773
    5. 'З' → logprob: -15.000219345092773
    6. ']' → logprob: -15.125219345092773
    7. '	Z' → logprob: -15.500219345092773
    8. ' Z' → logprob: -15.500219345092773
    9. '```' → logprob: -15.500219345092773
    10. '[c' → logprob: -15.750219345092773

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25194790959358215
    2. ']+=' → logprob: -1.5019478797912598
    3. ']=' → logprob: -11.126948356628418
    4. '+=' → logprob: -13.001948356628418
    5. '']' → logprob: -14.751948356628418
    6. '"]' → logprob: -14.751948356628418
    7. ']+' → logprob: -14.876948356628418
    8. '[' → logprob: -15.626948356628418
    9. ' ]' → logprob: -16.0019474029541
    10. ']-' → logprob: -16.0019474029541

Token 115: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008674022741615772
    2. ' +=' → logprob: -4.758674144744873
    3. '=' → logprob: -9.883673667907715
    4. ']+=' → logprob: -11.883673667907715
    5. ' =' → logprob: -13.758673667907715
    6. '	' → logprob: -15.133673667907715
    7. '-=' → logprob: -16.25867462158203
    8. '+=(' → logprob: -16.75867462158203
    9. '```' → logprob: -17.00867462158203
    10. '+='' → logprob: -17.38367462158203

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.376502990722656
    4. '	' → logprob: -16.126502990722656
    5. '１' → logprob: -17.439002990722656
    6. ' ' → logprob: -17.626502990722656
    7. '```' → logprob: -17.814002990722656
    8. '  ' → logprob: -18.001502990722656
    9. '۱' → logprob: -18.876502990722656
    10. '111' → logprob: -19.314002990722656

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.62500762939453
    4. '	' → logprob: -18.25000762939453
    5. '
' → logprob: -18.87500762939453
    6. '１' → logprob: -19.62500762939453
    7. '```' → logprob: -20.00000762939453
    8. '  ' → logprob: -20.06250762939453
    9. '۱' → logprob: -20.68750762939453
    10. '111' → logprob: -20.87500762939453

Token 118: '
' (ID: 198)
  Prédit: '	else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.003457525512203574
    2. 'else' → logprob: -5.753457546234131
    3. ' else' → logprob: -8.253457069396973
    4. '	elif' → logprob: -11.003457069396973
    5. '<|end|>' → logprob: -13.253457069396973
    6. '	continue' → logprob: -15.628457069396973
    7. '	
' → logprob: -15.753457069396973
    8. '```' → logprob: -15.878457069396973
    9. '_else' → logprob: -16.37845802307129
    10. '	except' → logprob: -16.62845802307129

Token 119: '	else' (ID: 5107)
  Prédit: '	else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.03968500345945358
    2. 'else' → logprob: -3.289685010910034
    3. ' else' → logprob: -6.414684772491455
    4. '	elif' → logprob: -13.039685249328613
    5. '	
' → logprob: -13.289685249328613
    6. '<|end|>' → logprob: -15.164685249328613
    7. '		
' → logprob: -15.414685249328613
    8. '```' → logprob: -15.914685249328613
    9. '
' → logprob: -16.164684295654297
    10. '_else' → logprob: -16.289684295654297

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6378175616264343
    2. ':
' → logprob: -0.7628175616264343
    3. ' M' → logprob: -6.1378173828125
    4. '	M' → logprob: -7.2628173828125
    5. ' :
' → logprob: -7.2628173828125
    6. ':M' → logprob: -7.7628173828125
    7. '   ' → logprob: -7.7628173828125
    8. ' :' → logprob: -8.1378173828125
    9. ' ' → logprob: -8.5128173828125
    10. '	' → logprob: -8.8878173828125

Token 121: '	' (ID: 197)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.09940183907747269
    2. ' M' → logprob: -2.5994019508361816
    3. '	' → logprob: -4.099401950836182
    4. '	M' → logprob: -5.599401950836182
    5. '		' → logprob: -12.099401473999023
    6. ' ' → logprob: -12.349401473999023
    7. '       ' → logprob: -12.974401473999023
    8. '0' → logprob: -13.099401473999023
    9. '   ' → logprob: -13.224401473999023
    10. '1' → logprob: -13.224401473999023

Token 122: '	M' (ID: 24747)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0004408015520311892
    2. ' M' → logprob: -7.75044059753418
    3. '	M' → logprob: -11.62544059753418
    4. '	' → logprob: -13.75044059753418
    5. '   ' → logprob: -18.12544059753418
    6. '		' → logprob: -18.25044059753418
    7. ' ' → logprob: -18.37544059753418
    8. '
' → logprob: -19.00044059753418
    9. '0' → logprob: -19.37544059753418
    10. '	   ' → logprob: -20.12544059753418

Token 123: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.00010950337309623137
    2. '[' → logprob: -9.125109672546387
    3. '	z' → logprob: -15.250109672546387
    4. '

' → logprob: -16.00010871887207
    5. 'z' → logprob: -16.12510871887207
    6. '
' → logprob: -16.50010871887207
    7. ' [' → logprob: -16.87510871887207
    8. ',z' → logprob: -17.50010871887207
    9. '(z' → logprob: -18.00010871887207
    10. '   ' → logprob: -18.12510871887207

Token 124: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.008724717423319817
    2. 'z' → logprob: -4.758724689483643
    3. '[' → logprob: -9.8837251663208
    4. '[z' → logprob: -10.2587251663208
    5. '	z' → logprob: -11.7587251663208
    6. '	Z' → logprob: -11.7587251663208
    7. ' z' → logprob: -13.6337251663208
    8. '	' → logprob: -13.7587251663208
    9. ' Z' → logprob: -14.1337251663208
    10. 'З' → logprob: -14.1337251663208

Token 125: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23550179600715637
    2. ']' → logprob: -1.735501766204834
    3. ']=' → logprob: -3.485501766204834
    4. ' =' → logprob: -5.860501766204834
    5. ')' → logprob: -11.610502243041992
    6. ')=' → logprob: -11.860502243041992
    7. '']=' → logprob: -12.735502243041992
    8. '[' → logprob: -13.360502243041992
    9. '	' → logprob: -13.485502243041992
    10. ' ]' → logprob: -13.985502243041992

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '	' → logprob: -19.25000762939453
    4. '   ' → logprob: -20.00000762939453
    5. '0' → logprob: -20.25000762939453
    6. '１' → logprob: -21.62500762939453
    7. '```' → logprob: -22.25000762939453
    8. '' → logprob: -22.50000762939453
    9. '  ' → logprob: -22.50000762939453
    10. '۱' → logprob: -22.75000762939453

Token 127: '
' (ID: 198)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.07182963192462921
    2. 'ccc' → logprob: -3.4468295574188232
    3. '
' → logprob: -3.6968295574188232
    4. '	cc' → logprob: -4.571829795837402
    5. '	
' → logprob: -6.196829795837402
    6. '		
' → logprob: -9.321829795837402
    7. '```' → logprob: -9.446829795837402
    8. '\t' → logprob: -10.446829795837402
    9. '\' → logprob: -11.196829795837402
    10. '' → logprob: -12.071829795837402

Token 128: '	' (ID: 197)
  Prédit: 'ccc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ccc' → logprob: -0.07989774644374847
    2. '	' → logprob: -2.57989764213562
    3. '	cc' → logprob: -7.204897880554199
    4. '```' → logprob: -9.2048978805542
    5. '
' → logprob: -10.3298978805542
    6. ' c' → logprob: -10.8298978805542
    7. '	
' → logprob: -11.0798978805542
    8. 'cc' → logprob: -11.2048978805542
    9. 'print' → logprob: -11.3298978805542
    10. '	c' → logprob: -11.4548978805542

Token 129: 'ccc' (ID: 79077)
  Prédit: 'ccc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ccc' → logprob: -0.0005888947052881122
    2. '	' → logprob: -8.125589370727539
    3. '
' → logprob: -8.625589370727539
    4. '	
' → logprob: -10.125589370727539
    5. '```' → logprob: -10.375589370727539
    6. '	cc' → logprob: -11.125589370727539
    7. 'cc' → logprob: -11.625589370727539
    8. '		
' → logprob: -12.000589370727539
    9. 'cccc' → logprob: -12.875589370727539
    10. 'cci' → logprob: -12.875589370727539

Token 130: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01473606564104557
    2. '+' → logprob: -4.264736175537109
    3. ' +=' → logprob: -7.514736175537109
    4. '++' → logprob: -10.88973617553711
    5. '=' → logprob: -12.38973617553711
    6. '+='' → logprob: -13.38973617553711
    7. '+="' → logprob: -13.76473617553711
    8. ']+=' → logprob: -14.01473617553711
    9. '<|end|>' → logprob: -14.38973617553711
    10. '+++' → logprob: -14.63973617553711

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -19.625
    4. '１' → logprob: -20.375
    5. '```' → logprob: -20.75
    6. '۱' → logprob: -21.5
    7. '   ' → logprob: -22.0
    8. '১' → logprob: -22.25
    9. '+' → logprob: -22.25
    10. '...' → logprob: -22.25

Token 132: '

' (ID: 279)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0648880004882812
    2. 'res' → logprob: -1.6898880004882812
    3. 'ans' → logprob: -1.8148880004882812
    4. 's' → logprob: -1.9398880004882812
    5. 'result' → logprob: -3.5648880004882812
    6. 'print' → logprob: -3.6898880004882812
    7. 'answer' → logprob: -3.6898880004882812
    8. 'count' → logprob: -4.064888000488281
    9. 'total' → logprob: -4.189888000488281
    10. 'R' → logprob: -4.564888000488281

Token 133: 'A' (ID: 32)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9535571932792664
    2. 'res' → logprob: -1.0785572528839111
    3. 'r' → logprob: -2.328557252883911
    4. 's' → logprob: -2.953557252883911
    5. 'result' → logprob: -3.078557252883911
    6. 'print' → logprob: -3.578557252883911
    7. 'answer' → logprob: -4.328557014465332
    8. 'cnt' → logprob: -5.078557014465332
    9. 'rez' → logprob: -5.203557014465332
    10. 'total' → logprob: -5.453557014465332

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133693337440491
    2. '=' → logprob: -1.3133692741394043
    3. ' ' → logprob: -9.938369750976562
    4. 'ns' → logprob: -10.188369750976562
    5. 'n' → logprob: -11.313369750976562
    6. '=sum' → logprob: -12.563369750976562
    7. '=A' → logprob: -13.813369750976562
    8. '=n' → logprob: -14.313369750976562
    9. ' ' → logprob: -14.438369750976562
    10. ' +=' → logprob: -14.813369750976562

Token 135: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00430217245593667
    2. ' ' → logprob: -5.504302024841309
    3. 'sum' → logprob: -8.754302024841309
    4. ' sum' → logprob: -9.629302024841309
    5. '1' → logprob: -16.129302978515625
    6. '   ' → logprob: -16.754302978515625
    7. ' ' → logprob: -17.504302978515625
    8. '
' → logprob: -17.879302978515625
    9. '```' → logprob: -17.879302978515625
    10. '(sum' → logprob: -18.441802978515625

Token 136: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -4.60414821645827e-06
    2. '()' → logprob: -12.625004768371582
    3. '(' → logprob: -13.875004768371582
    4. '((' → logprob: -15.625004768371582
    5. '(m' → logprob: -16.875003814697266
    6. '(sorted' → logprob: -18.625003814697266
    7. '(range' → logprob: -18.875003814697266
    8. '(A' → logprob: -19.000003814697266
    9. '(D' → logprob: -19.000003814697266
    10. '(
' → logprob: -19.125003814697266

Token 137: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -12.875003814697266
    3. '.items' → logprob: -13.875003814697266
    4. 'values' → logprob: -16.500003814697266
    5. ' .' → logprob: -16.875003814697266
    6. '().' → logprob: -17.250003814697266
    7. ')' → logprob: -18.000003814697266
    8. '.keys' → logprob: -18.125003814697266
    9. '.Values' → logprob: -18.625003814697266
    10. '.value' → logprob: -19.750003814697266

Token 138: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001470822375267744
    2. '()' → logprob: -7.001471042633057
    3. ')' → logprob: -7.501471042633057
    4. '())
' → logprob: -12.001470565795898
    5. ' ())' → logprob: -14.626470565795898
    6. '());' → logprob: -15.876470565795898
    7. '();)' → logprob: -16.6264705657959
    8. '(' → logprob: -16.6264705657959
    9. '()))' → logprob: -17.1264705657959
    10. '()
' → logprob: -17.5014705657959

Token 139: 'x' (ID: 87)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8507254123687744
    2. 'S' → logprob: -1.6007254123687744
    3. 's' → logprob: -1.7257254123687744
    4. 'R' → logprob: -2.1007254123687744
    5. 'print' → logprob: -3.4757254123687744
    6. 'res' → logprob: -4.225725173950195
    7. 'ans' → logprob: -4.725725173950195
    8. 'result' → logprob: -5.850725173950195
    9. 'c' → logprob: -6.225725173950195
    10. 'A' → logprob: -6.600725173950195

Token 140: 'X' (ID: 55)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03769335895776749
    2. ' =' → logprob: -3.5376932621002197
    3. '=len' → logprob: -5.787693500518799
    4. '=sum' → logprob: -5.912693500518799
    5. '=max' → logprob: -7.037693500518799
    6. 'max' → logprob: -8.41269302368164
    7. '=A' → logprob: -8.41269302368164
    8. 'sum' → logprob: -8.53769302368164
    9. ',' → logprob: -8.78769302368164
    10. '_=' → logprob: -9.66269302368164

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14297060668468475
    2. ' =' → logprob: -2.017970561981201
    3. '=len' → logprob: -8.76797103881836
    4. '=sum' → logprob: -9.51797103881836
    5. ',' → logprob: -10.64297103881836
    6. '=max' → logprob: -11.01797103881836
    7. '=x' → logprob: -11.89297103881836
    8. ' ' → logprob: -12.01797103881836
    9. '=int' → logprob: -12.89297103881836
    10. '=[]' → logprob: -13.01797103881836

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011158766224980354
    2. 'sum' → logprob: -4.5111589431762695
    3. 'len' → logprob: -10.13615894317627
    4. 'max' → logprob: -10.38615894317627
    5. ' ' → logprob: -10.76115894317627
    6. ' sum' → logprob: -11.26115894317627
    7. 'A' → logprob: -12.63615894317627
    8. '[' → logprob: -13.63615894317627
    9. '(sum' → logprob: -14.26115894317627
    10. '1' → logprob: -15.26115894317627

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2528558075428009
    2. 'sum' → logprob: -1.5028557777404785
    3. 'len' → logprob: -7.5028557777404785
    4. 'max' → logprob: -8.502856254577637
    5. 'A' → logprob: -9.502856254577637
    6. ' sum' → logprob: -10.877856254577637
    7. '[' → logprob: -11.002856254577637
    8. '(sum' → logprob: -11.252856254577637
    9. '1' → logprob: -11.377856254577637
    10. 'P' → logprob: -11.752856254577637

Token 144: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01227887999266386
    2. 'i' → logprob: -4.887279033660889
    3. '
' → logprob: -5.387279033660889
    4. 'f' → logprob: -10.63727855682373
    5. 'x' → logprob: -11.26227855682373
    6. ' for' → logprob: -11.63727855682373
    7. 'while' → logprob: -11.63727855682373
    8. 'n' → logprob: -11.76227855682373
    9. 'idx' → logprob: -12.38727855682373
    10. '0' → logprob: -12.51227855682373

Token 145: ' wr' (ID: 5899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004705899860709906
    2. 'i' → logprob: -6.129705905914307
    3. 'ii' → logprob: -6.129705905914307
    4. 'yy' → logprob: -9.129705429077148
    5. ' for' → logprob: -9.879705429077148
    6. 'ix' → logprob: -10.129705429077148
    7. 'fo' → logprob: -10.254705429077148
    8. 'idx' → logprob: -10.504705429077148
    9. '
' → logprob: -11.629705429077148
    10. 'x' → logprob: -11.879705429077148

Token 146: 'd' (ID: 67)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.5152671933174133
    2. '=' → logprob: -1.1402671337127686
    3. 'iting' → logprob: -2.8902671337127686
    4. 'i' → logprob: -4.640267372131348
    5. 'iter' → logprob: -5.640267372131348
    6. ' =' → logprob: -5.640267372131348
    7. 'x' → logprob: -5.890267372131348
    8. 'it' → logprob: -6.265267372131348
    9. 'iters' → logprob: -6.640267372131348
    10. '+=' → logprob: -7.265267372131348

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5774277448654175
    2. '=' → logprob: -0.8274277448654175
    3. ' ' → logprob: -7.202427864074707
    4. ',' → logprob: -7.327427864074707
    5. 'x' → logprob: -10.202427864074707
    6. 'A' → logprob: -12.077427864074707
    7. 's' → logprob: -12.327427864074707
    8. '=len' → logprob: -12.327427864074707
    9. '  ' → logprob: -12.452427864074707
    10. ' ,' → logprob: -12.577427864074707

Token 148: ' iter' (ID: 10621)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031966082751750946
    2. ' ' → logprob: -5.753196716308594
    3. 'sum' → logprob: -11.753196716308594
    4. 'A' → logprob: -12.128196716308594
    5. '1' → logprob: -13.753196716308594
    6. ' A' → logprob: -13.878196716308594
    7. ' sum' → logprob: -13.878196716308594
    8. '[]' → logprob: -14.003196716308594
    9. 'len' → logprob: -14.003196716308594
    10. '  ' → logprob: -15.628196716308594

Token 149: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00020342117932159454
    2. '(' → logprob: -8.625203132629395
    3. '(M' → logprob: -11.750203132629395
    4. '([' → logprob: -12.250203132629395
    5. '(
' → logprob: -12.500203132629395
    6. '(a' → logprob: -13.125203132629395
    7. '<|end|>' → logprob: -13.250203132629395
    8. 'A' → logprob: -14.000203132629395
    9. '(x' → logprob: -14.750203132629395
    10. '((' → logprob: -15.125203132629395

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00623887637630105
    2. '())' → logprob: -5.38123893737793
    3. '()' → logprob: -6.75623893737793
    4. ')
' → logprob: -7.75623893737793
    5. '())
' → logprob: -11.75623893737793
    6. '))' → logprob: -12.00623893737793
    7. ' )' → logprob: -12.75623893737793
    8. '()
' → logprob: -13.13123893737793
    9. '();)' → logprob: -13.25623893737793
    10. ');' → logprob: -13.38123893737793

Token 151: 'try' (ID: 1806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8451166152954102
    2. 'c' → logprob: -1.8451166152954102
    3. 'n' → logprob: -2.34511661529541
    4. 'while' → logprob: -2.34511661529541
    5. 'v' → logprob: -2.47011661529541
    6. 'x' → logprob: -2.84511661529541
    7. 'w' → logprob: -3.59511661529541
    8. 'a' → logprob: -4.47011661529541
    9. 'try' → logprob: -4.84511661529541
    10. 'cnt' → logprob: -5.09511661529541

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6326570510864258
    2. ':
' → logprob: -0.7576570510864258
    3. ' :' → logprob: -10.507657051086426
    4. ' :
' → logprob: -11.132657051086426
    5. ':
' → logprob: -11.507657051086426
    6. ':

' → logprob: -12.507657051086426
    7. '	' → logprob: -14.882657051086426
    8. '   ' → logprob: -15.507657051086426
    9. 'ing' → logprob: -15.632657051086426
    10. 'except' → logprob: -15.757657051086426

Token 153: '	while' (ID: 10883)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5769740343093872
    2. ' while' → logprob: -0.8269740343093872
    3. '	while' → logprob: -7.951973915100098
    4. 'w' → logprob: -8.326973915100098
    5. '   ' → logprob: -8.826973915100098
    6. 'v' → logprob: -8.826973915100098
    7. 'x' → logprob: -9.326973915100098
    8. 'wh' → logprob: -10.326973915100098
    9. '
' → logprob: -12.201973915100098
    10. 'from' → logprob: -12.451973915100098

Token 154: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.38753488659858704
    2. ' True' → logprob: -1.1375348567962646
    3. '1' → logprob: -8.262535095214844
    4. '(True' → logprob: -8.512535095214844
    5. ' ' → logprob: -8.637535095214844
    6. '   ' → logprob: -11.387535095214844
    7. '  ' → logprob: -11.637535095214844
    8. ' ' → logprob: -12.262535095214844
    9. '(' → logprob: -14.387535095214844
    10. ' Tru' → logprob: -14.637535095214844

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24717114865779877
    2. '	x' → logprob: -1.87217116355896
    3. ':
' → logprob: -3.99717116355896
    4. '	w' → logprob: -4.872170925140381
    5. '	n' → logprob: -4.997170925140381
    6. '	A' → logprob: -4.997170925140381
    7. '	a' → logprob: -5.372170925140381
    8. '   ' → logprob: -5.747170925140381
    9. '	' → logprob: -5.747170925140381
    10. ' :' → logprob: -5.997170925140381

Token 156: '	' (ID: 197)
  Prédit: '	v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	v' → logprob: -1.207791805267334
    2. 'v' → logprob: -1.332791805267334
    3. '   ' → logprob: -1.332791805267334
    4. '	n' → logprob: -3.582791805267334
    5. '	c' → logprob: -3.957791805267334
    6. '	x' → logprob: -4.082791805267334
    7. 'n' → logprob: -4.207791805267334
    8. 'x' → logprob: -4.207791805267334
    9. ' v' → logprob: -4.457791805267334
    10. 'a' → logprob: -4.582791805267334

Token 157: '	al' (ID: 137983)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2656121850013733
    2. 'a' → logprob: -3.0156121253967285
    3. 'n' → logprob: -3.0156121253967285
    4. 'x' → logprob: -3.1406121253967285
    5. '	v' → logprob: -3.5156121253967285
    6. 'k' → logprob: -4.6406121253967285
    7. 'c' → logprob: -4.7656121253967285
    8. 'val' → logprob: -4.8906121253967285
    9. 'y' → logprob: -5.0156121253967285
    10. '	n' → logprob: -5.6406121253967285

Token 158: 'fa' (ID: 4968)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17916807532310486
    2. ' =' → logprob: -2.8041679859161377
    3. 'p' → logprob: -3.3041679859161377
    4. 'pha' → logprob: -3.8041679859161377
    5. 'l' → logprob: -4.054168224334717
    6. 'ph' → logprob: -4.429168224334717
    7. 'e' → logprob: -5.554168224334717
    8. 'x' → logprob: -6.304168224334717
    9. '=A' → logprob: -6.429168224334717
    10. 'le' → logprob: -6.554168224334717

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14362621307373047
    2. '=' → logprob: -2.0186262130737305
    3. '	' → logprob: -7.2686262130737305
    4. ' ' → logprob: -8.89362621307373
    5. 'count' → logprob: -11.01862621307373
    6. '=count' → logprob: -11.01862621307373
    7. '=w' → logprob: -11.26862621307373
    8. '	count' → logprob: -11.76862621307373
    9. '=A' → logprob: -12.01862621307373
    10. '   ' → logprob: -12.26862621307373

Token 160: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011071753688156605
    2. ' next' → logprob: -4.511071681976318
    3. 'w' → logprob: -11.386072158813477
    4. '	next' → logprob: -11.511072158813477
    5. '(next' → logprob: -13.136072158813477
    6. ' nxt' → logprob: -15.261072158813477
    7. ' w' → logprob: -15.636072158813477
    8. '.next' → logprob: -17.011072158813477
    9. ' nex' → logprob: -17.261072158813477
    10. ',next' → logprob: -17.386072158813477

Token 161: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0003364158037584275
    2. '(' → logprob: -8.500336647033691
    3. 'w' → logprob: -9.000336647033691
    4. ' (' → logprob: -12.000336647033691
    5. ' w' → logprob: -12.750336647033691
    6. '	w' → logprob: -15.750336647033691
    7. ' ' → logprob: -17.000335693359375
    8. '(v' → logprob: -17.625335693359375
    9. '(s' → logprob: -17.750335693359375
    10. '()' → logprob: -17.750335693359375

Token 162: 'rd' (ID: 9290)
  Prédit: 'rd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rd' → logprob: -6.933173426659778e-05
    2. 'r' → logprob: -9.750069618225098
    3. 'ord' → logprob: -12.000069618225098
    4. 'prd' → logprob: -13.250069618225098
    5. 'd' → logprob: -13.750069618225098
    6. ')' → logprob: -14.875069618225098
    7. 'pd' → logprob: -15.125069618225098
    8. 'rnd' → logprob: -15.250069618225098
    9. 'A' → logprob: -15.625069618225098
    10. '(rd' → logprob: -16.00006866455078

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935421228408813
    2. ')
' → logprob: -0.6935421228408813
    3. ')
' → logprob: -8.31854248046875
    4. ')*' → logprob: -9.56854248046875
    5. ')**' → logprob: -9.81854248046875
    6. ')+' → logprob: -12.19354248046875
    7. ')

' → logprob: -12.31854248046875
    8. ' )
' → logprob: -12.56854248046875
    9. ' )' → logprob: -12.69354248046875
    10. '**' → logprob: -13.19354248046875

Token 164: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.00394197553396225
    2. '	x' → logprob: -6.628942012786865
    3. 'x' → logprob: -6.753942012786865
    4. '
' → logprob: -7.128942012786865
    5. '		
' → logprob: -7.628942012786865
    6. ' x' → logprob: -9.753941535949707
    7. '		' → logprob: -10.503941535949707
    8. '	
' → logprob: -10.503941535949707
    9. '	       ' → logprob: -11.878941535949707
    10. '
' → logprob: -12.378941535949707

Token 165: '	x' (ID: 21395)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.5066794753074646
    2. 'x' → logprob: -1.1316795349121094
    3. '	x' → logprob: -2.7566795349121094
    4. ' x' → logprob: -4.506679534912109
    5. '		' → logprob: -8.50667953491211
    6. ' 	' → logprob: -10.13167953491211
    7. '       ' → logprob: -10.25667953491211
    8. '	if' → logprob: -10.38167953491211
    9. '		
' → logprob: -10.63167953491211
    10. '	       ' → logprob: -11.13167953491211

Token 166: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.002408350817859173
    2. '+=' → logprob: -6.627408504486084
    3. ' +=' → logprob: -7.127408504486084
    4. '=' → logprob: -8.752408027648926
    5. '*=' → logprob: -10.252408027648926
    6. '_' → logprob: -10.627408027648926
    7. ' =' → logprob: -10.752408027648926
    8. ' *=' → logprob: -10.877408027648926
    9. '*' → logprob: -11.502408027648926
    10. ' ' → logprob: -13.127408027648926

Token 167: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.022979307919740677
    2. ' +=' → logprob: -3.897979259490967
    3. '+=(' → logprob: -6.022979259490967
    4. '	' → logprob: -12.897979736328125
    5. '*=' → logprob: -12.897979736328125
    6. ']+=' → logprob: -13.022979736328125
    7. '=' → logprob: -13.397979736328125
    8. '+='' → logprob: -13.397979736328125
    9. '+="' → logprob: -13.772979736328125
    10. '-=' → logprob: -15.647979736328125

Token 168: ' alfa' (ID: 166795)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.09418949484825134
    2. '(al' → logprob: -2.594189405441284
    3. ' alfa' → logprob: -4.469189643859863
    4. '	al' → logprob: -6.094189643859863
    5. '(' → logprob: -7.594189643859863
    6. ' al' → logprob: -8.094189643859863
    7. ' (' → logprob: -8.219189643859863
    8. '((' → logprob: -8.969189643859863
    9. 'alpha' → logprob: -9.344189643859863
    10. '(alpha' → logprob: -9.719189643859863

Token 169: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3143652677536011
    2. '*(' → logprob: -1.314365267753601
    3. ' *' → logprob: -6.814365386962891
    4. '-' → logprob: -12.56436538696289
    5. '	' → logprob: -13.81436538696289
    6. ' ' → logprob: -15.31436538696289
    7. ' ' → logprob: -16.06436538696289
    8. '*((' → logprob: -16.43936538696289
    9. '**' → logprob: -17.18936538696289
    10. ' *(' → logprob: -17.18936538696289

Token 170: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0011050907196477056
    2. '(al' → logprob: -7.251105308532715
    3. '	al' → logprob: -7.876105308532715
    4. ' alfa' → logprob: -12.126105308532715
    5. ' al' → logprob: -12.376105308532715
    6. 'alpha' → logprob: -12.501105308532715
    7. 'alph' → logprob: -14.251105308532715
    8. 'alf' → logprob: -14.626105308532715
    9. ''al' → logprob: -15.501105308532715
    10. '   ' → logprob: -16.3761043548584

Token 171: 'fa' (ID: 4968)
  Prédit: 'fa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.07437322288751602
    2. 'f' → logprob: -2.824373245239258
    3. 'pha' → logprob: -4.574373245239258
    4. '-' → logprob: -7.449373245239258
    5. 'фа' → logprob: -7.449373245239258
    6. 'fal' → logprob: -8.824373245239258
    7. 'alpha' → logprob: -8.949373245239258
    8. 'a' → logprob: -9.324373245239258
    9. '1' → logprob: -9.949373245239258
    10. '(' → logprob: -9.949373245239258

Token 172: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010328111238777637
    2. ' -' → logprob: -6.876032829284668
    3. ' ' → logprob: -16.87603187561035
    4. '−' → logprob: -17.00103187561035
    5. '1' → logprob: -17.75103187561035
    6. '	' → logprob: -17.75103187561035
    7. '<|end|>' → logprob: -18.12603187561035
    8. '```' → logprob: -18.75103187561035
    9. '
' → logprob: -18.87603187561035
    10. ' ' → logprob: -19.25103187561035

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -14.375004768371582
    4. ')' → logprob: -16.5000057220459
    5. '
' → logprob: -16.7500057220459
    6. '```' → logprob: -17.8750057220459
    7. '	' → logprob: -18.2500057220459
    8. '۱' → logprob: -18.3750057220459
    9. '<|end|>' → logprob: -18.6250057220459
    10. '...' → logprob: -18.6250057220459

Token 174: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.02773619443178177
    2. ')' → logprob: -4.152736186981201
    3. '//' → logprob: -4.527736186981201
    4. ' )' → logprob: -7.402736186981201
    5. ' //' → logprob: -8.65273666381836
    6. ')>>' → logprob: -10.27773666381836
    7. '	' → logprob: -13.02773666381836
    8. ')/' → logprob: -13.52773666381836
    9. ')
' → logprob: -13.52773666381836
    10. ')#' → logprob: -14.02773666381836

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۲' → logprob: -20.0
    4. '   ' → logprob: -20.875
    5. '22' → logprob: -21.75
    6. '२' → logprob: -21.875
    7. '٢' → logprob: -21.875
    8. '２' → logprob: -22.0
    9. '	' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 176: '
' (ID: 198)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.017093120142817497
    2. '	except' → logprob: -4.392093181610107
    3. ' except' → logprob: -5.392093181610107
    4. '	
' → logprob: -12.51709270477295
    5. '	ex' → logprob: -12.51709270477295
    6. 'Except' → logprob: -12.76709270477295
    7. '		
' → logprob: -13.01709270477295
    8. '	finally' → logprob: -13.14209270477295
    9. 'ex' → logprob: -13.39209270477295
    10. '
' → logprob: -13.64209270477295

Token 177: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.06547338515520096
    2. ' except' → logprob: -3.1904733180999756
    3. '	except' → logprob: -3.8154733180999756
    4. '<|end|>' → logprob: -9.940473556518555
    5. '	
' → logprob: -10.440473556518555
    6. '		
' → logprob: -10.565473556518555
    7. 'Except' → logprob: -10.940473556518555
    8. '	finally' → logprob: -11.190473556518555
    9. '
' → logprob: -11.815473556518555
    10. '	' → logprob: -11.815473556518555

Token 178: ' Stop' (ID: 22535)
  Prédit: ' Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stop' → logprob: -0.011050770990550518
    2. 'Stop' → logprob: -4.511050701141357
    3. '_Stop' → logprob: -12.761051177978516
    4. '.Stop' → logprob: -17.011051177978516
    5. '	' → logprob: -17.511051177978516
    6. '_stop' → logprob: -18.136051177978516
    7. ' ' → logprob: -19.386051177978516
    8. '  ' → logprob: -19.636051177978516
    9. '_STOP' → logprob: -19.761051177978516
    10. ' STOP' → logprob: -19.761051177978516

Token 179: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -4.320199877838604e-07
    2. 'iteration' → logprob: -15.5
    3. 'Iterator' → logprob: -15.75
    4. ' iteration' → logprob: -17.875
    5. 'Iter' → logprob: -18.5
    6. 'Exception' → logprob: -18.5
    7. '_iteration' → logprob: -18.5
    8. 'Async' → logprob: -18.75
    9. 'Iterations' → logprob: -19.5
    10. 'Traversal' → logprob: -20.375

Token 180: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001868306309916079
    2. ':
' → logprob: -6.87686824798584
    3. '	pass' → logprob: -8.00186824798584
    4. '	' → logprob: -8.37686824798584
    5. ' pass' → logprob: -8.75186824798584
    6. ' :' → logprob: -9.37686824798584
    7. 'pass' → logprob: -10.75186824798584
    8. '	break' → logprob: -13.25186824798584
    9. '   ' → logprob: -13.87686824798584
    10. '():' → logprob: -14.25186824798584

Token 181: ' pass' (ID: 1853)
  Prédit: '	pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	pass' → logprob: -0.25327521562576294
    2. ' pass' → logprob: -1.5032751560211182
    3. 'pass' → logprob: -6.878275394439697
    4. '   ' → logprob: -8.253274917602539
    5. ' None' → logprob: -10.253274917602539
    6. '	' → logprob: -11.878274917602539
    7. '	print' → logprob: -12.753274917602539
    8. 'None' → logprob: -12.753274917602539
    9. ' ' → logprob: -13.003274917602539
    10. '0' → logprob: -13.128274917602539

Token 182: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006184740923345089
    2. '
' → logprob: -5.1311845779418945
    3. '<|end|>' → logprob: -8.381184577941895
    4. ' print' → logprob: -11.006184577941895
    5. '#print' → logprob: -12.631184577941895
    6. '
' → logprob: -13.131184577941895
    7. ' 
' → logprob: -13.256184577941895
    8. '#' → logprob: -13.881184577941895
    9. '  
' → logprob: -14.631184577941895
    10. '```' → logprob: -14.881184577941895

Token 183: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008207073551602662
    2. '
' → logprob: -7.125820636749268
    3. ' print' → logprob: -11.500821113586426
    4. '<|end|>' → logprob: -12.875821113586426
    5. '```' → logprob: -13.750821113586426
    6. '#print' → logprob: -14.250821113586426
    7. '
' → logprob: -14.625821113586426
    8. '#' → logprob: -14.625821113586426
    9. ' 
' → logprob: -15.375821113586426
    10. '\n' → logprob: -15.750821113586426

Token 184: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47408029437065125
    2. '(x' → logprob: -0.9740803241729736
    3. '('' → logprob: -13.724080085754395
    4. '(
' → logprob: -13.724080085754395
    5. '("' → logprob: -14.349080085754395
    6. ' (' → logprob: -15.224080085754395
    7. '()' → logprob: -16.22408103942871
    8. '(

' → logprob: -17.22408103942871
    9. '((' → logprob: -17.47408103942871
    10. '(X' → logprob: -17.72408103942871

Token 185: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. ')' → logprob: -17.625
    3. ' X' → logprob: -18.75
    4. '_X' → logprob: -20.625
    5. '```' → logprob: -21.125
    6. '	X' → logprob: -21.25
    7. '_' → logprob: -21.5
    8. '>X' → logprob: -21.875
    9. 'x' → logprob: -22.0
    10. 'A' → logprob: -22.0

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.625
    4. ')`' → logprob: -18.375
    5. ')#' → logprob: -18.875
    6. '))' → logprob: -18.875
    7. '+' → logprob: -19.375
    8. ')}' → logprob: -19.625
    9. '）' → logprob: -19.75
    10. ')**' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 184
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 32.61%
Précision adaptée (1ère position): 32.61%
Précision (top 10): 73.37%
================================================================================
