================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache

MOD = 10**9 + 7
n, kk = map(int, input().split())

@lru_cache(maxsize=None)
def dp(i, j, k):
    if i == 0:
        return int(j == 0 and k == 0)
    if k < 0 or j < 0 or j > n:
        return 0
    res = ((2 * j + 1) * dp(i - 1, j, k - 2 * j)) % MOD
    if j + 1 <= n:
        res = (res + ((j + 1) ** 2) * dp(i - 1, j + 1, k - 2 * j)) % MOD
    if j - 1 >= 0:
        res = (res + dp(i - 1, j - 1, k - 2 * j)) % MOD
    return res

print(dp(n, 0, kk))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.27646777033805847
    2. 'partial' → logprob: -1.7764678001403809
    3. ' wraps' → logprob: -3.151467800140381
    4. 'reduce' → logprob: -3.776467800140381
    5. ' partial' → logprob: -5.901467800140381
    6. 'l' → logprob: -5.901467800140381
    7. ' l' → logprob: -7.776467800140381
    8. 'cmp' → logprob: -8.901467323303223
    9. 'cache' → logprob: -8.901467323303223
    10. 'cached' → logprob: -9.026467323303223

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.069664333248511e-05
    2. 'partial' → logprob: -11.750020980834961
    3. 'wrap' → logprob: -12.375020980834961
    4. 'reduce' → logprob: -12.875020980834961
    5. 'ruz' → logprob: -13.000020980834961
    6. 'z' → logprob: -13.500020980834961
    7. 'ambda' → logprob: -14.625020980834961
    8. '```' → logprob: -15.125020980834961
    9. '_ru' → logprob: -15.500020980834961
    10. 'r' → logprob: -15.625020980834961

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0004652273200917989
    2. 'cache' → logprob: -8.500465393066406
    3. '_c' → logprob: -8.625465393066406
    4. '_' → logprob: -9.875465393066406
    5. '_ca' → logprob: -11.750465393066406
    6. '_cached' → logprob: -12.125465393066406
    7. '\' → logprob: -12.250465393066406
    8. 'c' → logprob: -12.375465393066406
    9. '```' → logprob: -13.250465393066406
    10. '__' → logprob: -13.625465393066406

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009892907924950123
    2. '\(' → logprob: -5.13489294052124
    3. '(
' → logprob: -6.50989294052124
    4. '```' → logprob: -7.00989294052124
    5. 'def' → logprob: -7.25989294052124
    6. '\' → logprob: -7.38489294052124
    7. '\n' → logprob: -9.759892463684082
    8. '@' → logprob: -10.134892463684082
    9. '.' → logprob: -10.634892463684082
    10. '\[' → logprob: -11.009892463684082

Token 7: 'MOD' (ID: 52135)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2455655336380005
    2. '(' → logprob: -1.6205655336380005
    3. 'def' → logprob: -4.245565414428711
    4. '```' → logprob: -6.370565414428711
    5. '\' → logprob: -6.495565414428711
    6. '\(' → logprob: -6.995565414428711
    7. '(
' → logprob: -7.495565414428711
    8. '@
' → logprob: -8.870565414428711
    9. '\n' → logprob: -9.120565414428711
    10. '()' → logprob: -9.620565414428711

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008107058703899384
    2. ' =' → logprob: -5.2581071853637695
    3. '_' → logprob: -5.8831071853637695
    4. '_=' → logprob: -9.75810718536377
    5. '=

' → logprob: -12.00810718536377
    6. '`' → logprob: -12.38310718536377
    7. ' ' → logprob: -12.50810718536377
    8. ')' → logprob: -13.75810718536377
    9. ',' → logprob: -14.13310718536377
    10. '```' → logprob: -14.13310718536377

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4071936011314392
    2. '10' → logprob: -1.157193660736084
    3. '100' → logprob: -3.907193660736084
    4. '1' → logprob: -11.157193183898926
    5. '```' → logprob: -13.032193183898926
    6. 'int' → logprob: -13.282193183898926
    7. ' ' → logprob: -14.407193183898926
    8. '`' → logprob: -14.782193183898926
    9. '_' → logprob: -14.782193183898926
    10. '0' → logprob: -15.532193183898926

Token 10: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023257825523614883
    2. '100' → logprob: -3.7732577323913574
    3. '1' → logprob: -11.523258209228516
    4. ' ' → logprob: -13.523258209228516
    5. '998' → logprob: -14.273258209228516
    6. '```' → logprob: -15.023258209228516
    7. 'int' → logprob: -16.398258209228516
    8. '`' → logprob: -17.898258209228516
    9. '123' → logprob: -19.273258209228516
    10. '999' → logprob: -19.273258209228516

Token 11: '**' (ID: 410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9479221701622009
    2. '```' → logprob: -1.3229222297668457
    3. '\' → logprob: -2.0729222297668457
    4. '%' → logprob: -3.1979222297668457
    5. '*' → logprob: -3.4479222297668457
    6. '\n' → logprob: -3.9479222297668457
    7. '#' → logprob: -4.072922229766846
    8. '`' → logprob: -4.072922229766846
    9. '**' → logprob: -4.197922229766846
    10. ':' → logprob: -4.572922229766846

Token 12: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.25
    3. ' ' → logprob: -16.5
    4. '09' → logprob: -17.875
    5. '``' → logprob: -19.375
    6. '+' → logprob: -19.625
    7. '   ' → logprob: -20.75
    8. ' ' → logprob: -21.5
    9. '**' → logprob: -21.625
    10. '10' → logprob: -21.875

Token 13: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.370294846012257e-05
    2. ' +' → logprob: -10.250043869018555
    3. '7' → logprob: -11.875043869018555
    4. '+

' → logprob: -14.375043869018555
    5. '+
' → logprob: -14.875043869018555
    6. '```' → logprob: -15.250043869018555
    7. '＋' → logprob: -16.125043869018555
    8. '+</' → logprob: -17.875043869018555
    9. ' ' → logprob: -18.875043869018555
    10. ' +
' → logprob: -19.000043869018555

Token 14: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -16.125003814697266
    4. '9' → logprob: -17.375003814697266
    5. '07' → logprob: -17.625003814697266
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '37' → logprob: -19.000003814697266
    9. ' ' → logprob: -19.375003814697266
    10. '  ' → logprob: -19.687503814697266

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '+' → logprob: -17.375
    4. '```' → logprob: -18.125
    5. '07' → logprob: -19.125
    6. '   ' → logprob: -19.75
    7. '9' → logprob: -20.0
    8. '37' → logprob: -21.125
    9. '``' → logprob: -21.125
    10. '

' → logprob: -21.375

Token 16: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7638871073722839
    2. '
' → logprob: -1.0138871669769287
    3. '

' → logprob: -2.1388871669769287
    4. '
' → logprob: -4.26388692855835
    5. '\n' → logprob: -4.38888692855835
    6. '@' → logprob: -4.51388692855835
    7. '\' → logprob: -4.76388692855835
    8. '' → logprob: -5.51388692855835
    9. 'def' → logprob: -6.26388692855835
    10. '``' → logprob: -7.26388692855835

Token 17: 'n' (ID: 77)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.655154824256897
    2. '

' → logprob: -1.530154824256897
    3. '
' → logprob: -1.780154824256897
    4. '```' → logprob: -2.4051547050476074
    5. '
' → logprob: -5.905154705047607
    6. '``' → logprob: -7.030154705047607
    7. 'def' → logprob: -7.280154705047607
    8. '\' → logprob: -7.905154705047607
    9. '\n' → logprob: -8.780155181884766
    10. '`' → logprob: -9.030155181884766

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2777852714061737
    2. '=' → logprob: -1.652785301208496
    3. ' ' → logprob: -3.152785301208496
    4. ',' → logprob: -5.777785301208496
    5. '.' → logprob: -6.277785301208496
    6. ')' → logprob: -6.652785301208496
    7. '_' → logprob: -7.277785301208496
    8. '[' → logprob: -8.027785301208496
    9. '+' → logprob: -8.402785301208496
    10. ']' → logprob: -9.652785301208496

Token 19: ' kk' (ID: 76595)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.34970805048942566
    2. 'm' → logprob: -1.724708080291748
    3. ' k' → logprob: -2.349708080291748
    4. ' m' → logprob: -3.849708080291748
    5. 'a' → logprob: -10.22470760345459
    6. ' ' → logprob: -10.47470760345459
    7. 'r' → logprob: -10.47470760345459
    8. 'q' → logprob: -11.09970760345459
    9. 'x' → logprob: -11.34970760345459
    10. ' =' → logprob: -11.34970760345459

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284242570400238
    2. '=' → logprob: -2.237842321395874
    3. '_' → logprob: -11.737842559814453
    4. ' ' → logprob: -11.862842559814453
    5. ',' → logprob: -13.362842559814453
    6. ')' → logprob: -13.737842559814453
    7. ' =
' → logprob: -13.862842559814453
    8. 's' → logprob: -14.862842559814453
    9. ' =
' → logprob: -15.487842559814453
    10. ' ' → logprob: -15.612842559814453

Token 21: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10280289500951767
    2. ' map' → logprob: -2.3528029918670654
    3. '10' → logprob: -6.852802753448486
    4. 'input' → logprob: -7.352802753448486
    5. ' ' → logprob: -8.102803230285645
    6. '5' → logprob: -8.477803230285645
    7. '0' → logprob: -9.977803230285645
    8. '20' → logprob: -10.102803230285645
    9. ' input' → logprob: -10.102803230285645
    10. '1' → logprob: -10.227803230285645

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1449156105518341
    2. '(' → logprob: -2.0199155807495117
    3. '(str' → logprob: -6.644915580749512
    4. '(input' → logprob: -7.894915580749512
    5. '(lambda' → logprob: -8.394915580749512
    6. 'int' → logprob: -8.519915580749512
    7. '[int' → logprob: -10.144915580749512
    8. 'input' → logprob: -10.894915580749512
    9. '<int' → logprob: -11.144915580749512
    10. ')' → logprob: -11.394915580749512

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00352927902713418
    2. ',input' → logprob: -5.753529071807861
    3. ',int' → logprob: -9.12852954864502
    4. '(' → logprob: -9.12852954864502
    5. ' ,' → logprob: -10.87852954864502
    6. 'input' → logprob: -11.00352954864502
    7. ')' → logprob: -11.12852954864502
    8. '<|end|>' → logprob: -11.75352954864502
    9. '`,' → logprob: -11.87852954864502
    10. '(),' → logprob: -12.00352954864502

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693114578723907
    2. ' input' → logprob: -2.1269311904907227
    3. ')' → logprob: -13.501931190490723
    4. ',input' → logprob: -14.251931190490723
    5. '(input' → logprob: -14.626931190490723
    6. ' ' → logprob: -15.501931190490723
    7. '=input' → logprob: -15.501931190490723
    8. ' )' → logprob: -16.501930236816406
    9. '	input' → logprob: -16.751930236816406
    10. '```' → logprob: -16.751930236816406

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012558852904476225
    2. '())' → logprob: -9.375125885009766
    3. ')' → logprob: -10.250125885009766
    4. '()' → logprob: -12.250125885009766
    5. '.readline' → logprob: -16.000125885009766
    6. '(' → logprob: -16.250125885009766
    7. ' ().' → logprob: -16.625125885009766
    8. '());' → logprob: -16.625125885009766
    9. '.' → logprob: -17.500125885009766
    10. '.split' → logprob: -17.625125885009766

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.133198283147067e-05
    2. 'strip' → logprob: -10.000051498413086
    3. 'rstrip' → logprob: -12.375051498413086
    4. 'read' → logprob: -14.250051498413086
    5. 'spl' → logprob: -14.875051498413086
    6. ' split' → logprob: -14.875051498413086
    7. ')' → logprob: -15.375051498413086
    8. '(split' → logprob: -15.875051498413086
    9. '```' → logprob: -18.000051498413086
    10. '_split' → logprob: -18.250051498413086

Token 27: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005471617449074984
    2. '))' → logprob: -5.255471706390381
    3. '())' → logprob: -8.505471229553223
    4. '`)' → logprob: -11.505471229553223
    5. '()' → logprob: -11.880471229553223
    6. '),' → logprob: -12.005471229553223
    7. '')' → logprob: -12.630471229553223
    8. ')`' → logprob: -12.755471229553223
    9. ')))' → logprob: -13.755471229553223
    10. '")' → logprob: -13.755471229553223

Token 28: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00016706773021724075
    2. '```' → logprob: -10.250166893005371
    3. '@
' → logprob: -10.625166893005371
    4. 'n' → logprob: -11.375166893005371
    5. '
' → logprob: -11.500166893005371
    6. ')' → logprob: -11.500166893005371
    7. 'x' → logprob: -11.625166893005371
    8. 'k' → logprob: -11.750166893005371
    9. 'def' → logprob: -11.750166893005371
    10. '@

' → logprob: -11.875166893005371

Token 29: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -17.75
    3. '```' → logprob: -18.125
    4. '@' → logprob: -19.0
    5. '	l' → logprob: -20.125
    6. '`' → logprob: -20.75
    7. 'staticmethod' → logprob: -20.75
    8. ''l' → logprob: -21.0
    9. 'fun' → logprob: -21.75
    10. 'lr' → logprob: -21.75

Token 30: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5772401690483093
    2. 'ru' → logprob: -0.8272401690483093
    3. '@' → logprob: -6.702239990234375
    4. '```' → logprob: -9.702239990234375
    5. 'ру' → logprob: -12.827239990234375
    6. '_r' → logprob: -13.452239990234375
    7. 'rl' → logprob: -13.702239990234375
    8. '`' → logprob: -13.952239990234375
    9. '_ru' → logprob: -14.327239990234375
    10. 'def' → logprob: -15.077239990234375

Token 31: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.440506407059729e-05
    2. '_cached' → logprob: -11.00003433227539
    3. 'cache' → logprob: -11.12503433227539
    4. '_c' → logprob: -14.00003433227539
    5. '_' → logprob: -14.50003433227539
    6. '```' → logprob: -15.25003433227539
    7. 'Cache' → logprob: -15.50003433227539
    8. '_CACHE' → logprob: -15.62503433227539
    9. '_ca' → logprob: -15.75003433227539
    10. 'cached' → logprob: -16.25003433227539

Token 32: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39025166630744934
    2. '(None' → logprob: -1.265251636505127
    3. '()' → logprob: -3.765251636505127
    4. '(max' → logprob: -4.640251636505127
    5. '()
' → logprob: -5.765251636505127
    6. 'None' → logprob: -5.890251636505127
    7. '(' → logprob: -7.390251636505127
    8. '(int' → logprob: -7.765251636505127
    9. '
' → logprob: -8.265252113342285
    10. 'max' → logprob: -8.390252113342285

Token 33: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.011841678991913795
    2. '_size' → logprob: -4.636841773986816
    3. '=None' → logprob: -6.511841773986816
    4. '=' → logprob: -8.511841773986816
    5. '_cache' → logprob: -8.511841773986816
    6. ')' → logprob: -9.636841773986816
    7. '```' → logprob: -11.136841773986816
    8. '_SIZE' → logprob: -11.261841773986816
    9. '=_' → logprob: -11.386841773986816
    10. ' size' → logprob: -11.636841773986816

Token 34: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.16023214161396027
    2. '=' → logprob: -1.9102321863174438
    3. 'None' → logprob: -11.910232543945312
    4. '=

' → logprob: -14.285232543945312
    5. ')' → logprob: -15.535232543945312
    6. ')=' → logprob: -15.910232543945312
    7. '(None' → logprob: -16.035232543945312
    8. '=
' → logprob: -16.535232543945312
    9. '=`' → logprob: -17.035232543945312
    10. '=NULL' → logprob: -17.285232543945312

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008775054477155209
    2. ')
' → logprob: -4.758775234222412
    3. 'def' → logprob: -8.758774757385254
    4. ')
' → logprob: -13.508774757385254
    5. ')`' → logprob: -15.008774757385254
    6. ')

' → logprob: -15.258774757385254
    7. ' )' → logprob: -15.508774757385254
    8. '):' → logprob: -16.13377571105957
    9. '`)' → logprob: -16.13377571105957
    10. ')#' → logprob: -16.38377571105957

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.195421494543552e-05
    2. '
' → logprob: -9.62507152557373
    3. ' def' → logprob: -12.37507152557373
    4. 'de' → logprob: -14.25007152557373
    5. '(def' → logprob: -14.62507152557373
    6. 'd' → logprob: -15.62507152557373
    7. '\' → logprob: -16.000072479248047
    8. '('' → logprob: -16.750072479248047
    9. '(' → logprob: -17.375072479248047
    10. '0' → logprob: -17.375072479248047

Token 37: ' dp' (ID: 21546)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.3031123876571655
    2. ' dp' → logprob: -1.6781123876571655
    3. ' f' → logprob: -1.9281123876571655
    4. ' comb' → logprob: -2.428112506866455
    5. 'dp' → logprob: -2.428112506866455
    6. ' dfs' → logprob: -2.928112506866455
    7. 'f' → logprob: -3.303112506866455
    8. 'count' → logprob: -3.428112506866455
    9. 'comb' → logprob: -3.928112506866455
    10. ' ways' → logprob: -3.928112506866455

Token 38: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11415628343820572
    2. '(' → logprob: -2.4891562461853027
    3. '(n' → logprob: -4.489156246185303
    4. '(k' → logprob: -4.489156246185303
    5. '(x' → logprob: -7.239156246185303
    6. '(pos' → logprob: -7.989156246185303
    7. '(index' → logprob: -7.989156246185303
    8. '(idx' → logprob: -8.114156723022461
    9. '(num' → logprob: -9.114156723022461
    10. '(s' → logprob: -9.239156723022461

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.388769103679806e-05
    2. ' ,' → logprob: -9.875093460083008
    3. ',k' → logprob: -10.125093460083008
    4. ',n' → logprob: -14.375093460083008
    5. ',j' → logprob: -14.500093460083008
    6. ',int' → logprob: -15.125093460083008
    7. ',
' → logprob: -15.875093460083008
    8. ',b' → logprob: -16.000093460083008
    9. ')' → logprob: -16.125093460083008
    10. ',i' → logprob: -16.875093460083008

Token 40: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6259298324584961
    2. 'j' → logprob: -0.8759298324584961
    3. 's' → logprob: -5.000929832458496
    4. 'mask' → logprob: -5.125929832458496
    5. ' j' → logprob: -5.250929832458496
    6. 'used' → logprob: -5.250929832458496
    7. ' k' → logprob: -5.500929832458496
    8. 'sum' → logprob: -5.875929832458496
    9. 'rem' → logprob: -6.000929832458496
    10. 'kk' → logprob: -6.125929832458496

Token 41: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005906827282160521
    2. ')' → logprob: -8.250590324401855
    3. ',' → logprob: -8.500590324401855
    4. ':' → logprob: -9.375590324401855
    5. '):
' → logprob: -10.250590324401855
    6. ' ):' → logprob: -12.875590324401855
    7. '):
' → logprob: -14.375590324401855
    8. '**' → logprob: -14.875590324401855
    9. ''):' → logprob: -15.125590324401855
    10. '*' → logprob: -15.375590324401855

Token 42: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22507533431053162
    2. ' k' → logprob: -2.1000752449035645
    3. 'm' → logprob: -4.4750752449035645
    4. 't' → logprob: -4.7250752449035645
    5. 's' → logprob: -5.2250752449035645
    6. 'l' → logprob: -5.3500752449035645
    7. 'prev' → logprob: -5.4750752449035645
    8. ' t' → logprob: -5.6000752449035645
    9. 'p' → logprob: -5.6000752449035645
    10. ' is' → logprob: -5.7250752449035645

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00037037418223917484
    2. ')' → logprob: -8.000370025634766
    3. '):
' → logprob: -10.750370025634766
    4. ' ):' → logprob: -11.875370025634766
    5. ',' → logprob: -12.625370025634766
    6. ':' → logprob: -13.125370025634766
    7. '):
' → logprob: -15.375370025634766
    8. ''):' → logprob: -15.625370025634766
    9. '=' → logprob: -15.875370025634766
    10. ' ' → logprob: -16.375370025634766

Token 44: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0285208560526371
    2. ' :' → logprob: -4.6535210609436035
    3. ' ' → logprob: -5.2785210609436035
    4. '   ' → logprob: -5.4035210609436035
    5. ' if' → logprob: -5.4035210609436035
    6. '):' → logprob: -6.0285210609436035
    7. 'if' → logprob: -7.2785210609436035
    8. ')' → logprob: -7.4035210609436035
    9. ':
' → logprob: -8.153520584106445
    10. ',' → logprob: -9.653520584106445

Token 45: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49219316244125366
    2. 'if' (adapté à ' if') → logprob: -1.1171932220458984
    3. '   ' → logprob: -3.9921932220458984
    4. ' ' → logprob: -4.117193222045898
    5. ')' → logprob: -4.242193222045898
    6. 'i' → logprob: -5.992193222045898
    7. '    ' → logprob: -5.992193222045898
    8. ':' → logprob: -6.242193222045898
    9. '0' → logprob: -6.367193222045898
    10. '(' → logprob: -7.117193222045898

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06760340929031372
    2. 'i' → logprob: -2.817603349685669
    3. ' j' → logprob: -5.692603588104248
    4. ' k' → logprob: -6.817603588104248
    5. 'j' → logprob: -7.192603588104248
    6. 'k' → logprob: -7.942603588104248
    7. ' ' → logprob: -10.31760311126709
    8. ' (' → logprob: -13.06760311126709
    9. ' ' → logprob: -13.44260311126709
    10. '	i' → logprob: -13.44260311126709

Token 47: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3135746121406555
    2. ' ==' → logprob: -1.3135745525360107
    3. '>=' → logprob: -8.68857479095459
    4. '>' → logprob: -10.06357479095459
    5. '=' → logprob: -10.31357479095459
    6. ' >=' → logprob: -10.43857479095459
    7. ' >' → logprob: -11.81357479095459
    8. ')' → logprob: -12.18857479095459
    9. '==
' → logprob: -12.56357479095459
    10. '<' → logprob: -12.56357479095459

Token 48: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31476467847824097
    2. '0' → logprob: -1.3147647380828857
    3. 'k' → logprob: -7.939764499664307
    4. 'kk' → logprob: -7.939764499664307
    5. ' n' → logprob: -8.189764976501465
    6. 'j' → logprob: -8.689764976501465
    7. ' ' → logprob: -8.814764976501465
    8. '1' → logprob: -9.689764976501465
    9. 'nk' → logprob: -10.939764976501465
    10. '10' → logprob: -11.564764976501465

Token 49: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12721723318099976
    2. '0' → logprob: -2.1272172927856445
    3. 'k' → logprob: -9.002217292785645
    4. 'j' → logprob: -10.002217292785645
    5. '1' → logprob: -10.252217292785645
    6. 'kk' → logprob: -10.502217292785645
    7. ' n' → logprob: -11.377217292785645
    8. '10' → logprob: -12.127217292785645
    9. '2' → logprob: -12.377217292785645
    10. '100' → logprob: -12.502217292785645

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25627750158309937
    2. ' and' → logprob: -1.6312775611877441
    3. 'and' → logprob: -4.006277561187744
    4. ':
' → logprob: -5.256277561187744
    5. ':return' → logprob: -5.256277561187744
    6. '   ' → logprob: -6.381277561187744
    7. ' ' → logprob: -10.881277084350586
    8. ' :' → logprob: -11.256277084350586
    9. '<|end|>' → logprob: -11.631277084350586
    10. 'return' → logprob: -12.006277084350586

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40352895855903625
    2. '       ' → logprob: -2.028528928756714
    3. ' return' → logprob: -2.028528928756714
    4. 'return' → logprob: -3.028528928756714
    5. ':return' → logprob: -4.278529167175293
    6. ' if' → logprob: -5.653529167175293
    7. ':' → logprob: -7.028529167175293
    8. '    ' → logprob: -7.153529167175293
    9. ' ' → logprob: -7.778529167175293
    10. 'if' → logprob: -7.903529167175293

Token 52: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.691346287727356
    2. ' return' → logprob: -0.816346287727356
    3. '   ' → logprob: -3.0663461685180664
    4. '       ' → logprob: -5.066346168518066
    5. '0' → logprob: -5.816346168518066
    6. '1' → logprob: -7.816346168518066
    7. ' if' → logprob: -8.191346168518066
    8. ' ' → logprob: -8.441346168518066
    9. 'if' → logprob: -8.941346168518066
    10. ':return' → logprob: -10.316346168518066

Token 53: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05124830827116966
    2. '0' → logprob: -3.55124831199646
    3. ' ' → logprob: -4.551248073577881
    4. 'int' → logprob: -4.676248073577881
    5. ' int' → logprob: -7.801248073577881
    6. '(' → logprob: -7.926248073577881
    7. 'k' → logprob: -8.301248550415039
    8. 'j' → logprob: -8.551248550415039
    9. '(int' → logprob: -9.551248550415039
    10. '(k' → logprob: -10.051248550415039

Token 54: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.16298790276050568
    2. '(k' → logprob: -1.9129879474639893
    3. '(' → logprob: -6.16298770904541
    4. '(i' → logprob: -8.03798770904541
    5. 'j' → logprob: -8.53798770904541
    6. '(not' → logprob: -9.41298770904541
    7. '((' → logprob: -10.53798770904541
    8. 'k' → logprob: -11.03798770904541
    9. '(
' → logprob: -13.03798770904541
    10. '()' → logprob: -13.41298770904541

Token 55: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0671655461192131
    2. ' ==' → logprob: -2.8171656131744385
    3. '<=' → logprob: -5.692165374755859
    4. '>=' → logprob: -6.567165374755859
    5. ' <=' → logprob: -8.94216537475586
    6. ')' → logprob: -9.19216537475586
    7. ' >=' → logprob: -9.31716537475586
    8. '>' → logprob: -10.56716537475586
    9. '==
' → logprob: -11.56716537475586
    10. '!=' → logprob: -11.69216537475586

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043421488255262375
    2. ' ' → logprob: -3.418421506881714
    3. 'k' → logprob: -4.793421268463135
    4. '1' → logprob: -7.293421268463135
    5. 'kk' → logprob: -7.793421268463135
    6. ' k' → logprob: -8.918421745300293
    7. 'n' → logprob: -9.168421745300293
    8. ' kk' → logprob: -10.293421745300293
    9. '  ' → logprob: -11.668421745300293
    10. ' n' → logprob: -11.730921745300293

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010694054886698723
    2. 'k' → logprob: -4.6356940269470215
    3. 'kk' → logprob: -7.6356940269470215
    4. '1' → logprob: -8.63569450378418
    5. 'n' → logprob: -8.76069450378418
    6. ' ' → logprob: -9.63569450378418
    7. '-' → logprob: -11.44819450378418
    8. 'i' → logprob: -11.76069450378418
    9. ')' → logprob: -12.19819450378418
    10. 'j' → logprob: -12.63569450378418

Token 58: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10411699116230011
    2. ' and' → logprob: -2.354116916656494
    3. 'and' → logprob: -5.604116916656494
    4. ')
' → logprob: -8.729117393493652
    5. ' )' → logprob: -10.479117393493652
    6. '   ' → logprob: -10.729117393493652
    7. ' ' → logprob: -13.479117393493652
    8. ')

' → logprob: -13.729117393493652
    9. 'else' → logprob: -13.729117393493652
    10. ' else' → logprob: -14.104117393493652

Token 59: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0036448531318455935
    2. ' k' → logprob: -5.628644943237305
    3. '0' → logprob: -10.628644943237305
    4. ' ' → logprob: -11.878644943237305
    5. '(k' → logprob: -12.128644943237305
    6. '   ' → logprob: -12.753644943237305
    7. '  ' → logprob: -13.878644943237305
    8. ' (' → logprob: -14.253644943237305
    9. 'j' → logprob: -14.378644943237305
    10. '	k' → logprob: -14.503644943237305

Token 60: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5237439274787903
    2. '==' → logprob: -0.8987439274787903
    3. ' <=' → logprob: -8.273743629455566
    4. '<=' → logprob: -8.773743629455566
    5. ')' → logprob: -9.273743629455566
    6. '0' → logprob: -10.523743629455566
    7. ' >=' → logprob: -10.773743629455566
    8. ' ' → logprob: -10.898743629455566
    9. '>=' → logprob: -11.023743629455566
    10. '=' → logprob: -12.148743629455566

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007523320964537561
    2. ' ' → logprob: -7.8757524490356445
    3. '1' → logprob: -8.250752449035645
    4. 'kk' → logprob: -9.750752449035645
    5. 'n' → logprob: -10.375752449035645
    6. 'k' → logprob: -12.000752449035645
    7. '2' → logprob: -12.625752449035645
    8. '-' → logprob: -13.500752449035645
    9. 'i' → logprob: -13.563252449035645
    10. ')' → logprob: -13.563252449035645

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012644019443541765
    2. '1' → logprob: -7.501264572143555
    3. 'kk' → logprob: -8.001264572143555
    4. ' ' → logprob: -9.001264572143555
    5. 'k' → logprob: -9.126264572143555
    6. 'n' → logprob: -9.626264572143555
    7. '-' → logprob: -11.063764572143555
    8. 'i' → logprob: -11.501264572143555
    9. 'j' → logprob: -11.563764572143555
    10. '2' → logprob: -12.126264572143555

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004963174578733742
    2. ')
' → logprob: -7.8754963874816895
    3. '   ' → logprob: -9.125495910644531
    4. ' )' → logprob: -12.500495910644531
    5. ')

' → logprob: -13.500495910644531
    6. ')return' → logprob: -14.500495910644531
    7. ')
' → logprob: -14.875495910644531
    8. ' ' → logprob: -15.250495910644531
    9. '))' → logprob: -15.500495910644531
    10. '       ' → logprob: -15.750495910644531

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47483134269714355
    2. '   ' → logprob: -1.2248313426971436
    3. '\n' → logprob: -3.0998313426971436
    4. '<|end|>' → logprob: -3.7248313426971436
    5. '    
' → logprob: -5.474831581115723
    6. ')' → logprob: -5.599831581115723
    7. '  
' → logprob: -6.599831581115723
    8. ' 
' → logprob: -6.724831581115723
    9. 'n' → logprob: -7.349831581115723
    10. ' ' → logprob: -7.349831581115723

Token 65: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6090409755706787
    2. ' res' → logprob: -0.9840409755706787
    3. 'if' (adapté à ' if') → logprob: -2.9840409755706787
    4. ' if' → logprob: -3.7340409755706787
    5. 'result' → logprob: -5.609041213989258
    6. '   ' → logprob: -6.609041213989258
    7. 'val' → logprob: -7.484041213989258
    8. 'ans' → logprob: -7.609041213989258
    9. ' val' → logprob: -7.984041213989258
    10. ' result' → logprob: -8.234041213989258

Token 66: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.39244359731674194
    2. ' j' → logprob: -1.7674436569213867
    3. 'k' → logprob: -2.0174436569213867
    4. ' k' → logprob: -4.392443656921387
    5. 'i' → logprob: -5.267443656921387
    6. ' i' → logprob: -6.392443656921387
    7. 'dp' → logprob: -6.892443656921387
    8. ' dp' → logprob: -8.142443656921387
    9. ' ' → logprob: -9.392443656921387
    10. ' not' → logprob: -10.017443656921387

Token 67: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24442410469055176
    2. '==' → logprob: -1.6194241046905518
    3. ' >' → logprob: -4.619423866271973
    4. '>' → logprob: -5.244423866271973
    5. ' <' → logprob: -6.244423866271973
    6. '<' → logprob: -6.994423866271973
    7. '0' → logprob: -7.494423866271973
    8. ' ' → logprob: -8.869423866271973
    9. '=' → logprob: -9.869423866271973
    10. '1' → logprob: -11.119423866271973

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003845794126391411
    2. ' ' → logprob: -5.628845691680908
    3. 'j' → logprob: -8.753846168518066
    4. '1' → logprob: -10.253846168518066
    5. '-' → logprob: -10.753846168518066
    6. 'i' → logprob: -12.128846168518066
    7. '   ' → logprob: -12.566346168518066
    8. ' j' → logprob: -12.941346168518066
    9. '=' → logprob: -13.128846168518066
    10. ' -' → logprob: -13.503846168518066

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000227496653678827
    2. ' ' → logprob: -8.625227928161621
    3. 'j' → logprob: -10.625227928161621
    4. '-' → logprob: -11.625227928161621
    5. '1' → logprob: -12.250227928161621
    6. 'i' → logprob: -12.500227928161621
    7. '   ' → logprob: -13.687727928161621
    8. 'kk' → logprob: -14.437727928161621
    9. 'jj' → logprob: -14.687727928161621
    10. '00' → logprob: -14.937727928161621

Token 70: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18199555575847626
    2. ':
' → logprob: -2.1819956302642822
    3. '   ' → logprob: -3.1819956302642822
    4. ' or' → logprob: -4.556995391845703
    5. ':return' → logprob: -7.306995391845703
    6. '       ' → logprob: -7.556995391845703
    7. ' :' → logprob: -9.431995391845703
    8. '):
' → logprob: -9.556995391845703
    9. ',' → logprob: -10.056995391845703
    10. ' ' → logprob: -10.181995391845703

Token 71: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1292891502380371
    2. 'k' → logprob: -2.629289150238037
    3. ' j' → logprob: -3.129289150238037
    4. 'i' → logprob: -5.754289150238037
    5. ' k' → logprob: -6.379289150238037
    6. ' i' → logprob: -8.004289627075195
    7. 'kk' → logprob: -10.629289627075195
    8. ' ' → logprob: -10.754289627075195
    9. '(j' → logprob: -10.754289627075195
    10. 'jj' → logprob: -10.754289627075195

Token 72: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4294600784778595
    2. ' <' → logprob: -1.054460048675537
    3. ' >' → logprob: -7.929460048675537
    4. '>' → logprob: -8.179460525512695
    5. '<=' → logprob: -10.554460525512695
    6. ' ' → logprob: -10.679460525512695
    7. ' <=' → logprob: -10.804460525512695
    8. '==' → logprob: -11.179460525512695
    9. '<|end|>' → logprob: -11.179460525512695
    10. ' ==' → logprob: -12.054460525512695

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003647591220214963
    2. ' ' → logprob: -5.628647804260254
    3. '=' → logprob: -10.628647804260254
    4. 'i' → logprob: -11.878647804260254
    5. 'k' → logprob: -12.066147804260254
    6. '1' → logprob: -12.691147804260254
    7. '-' → logprob: -13.816147804260254
    8. ' i' → logprob: -14.503647804260254
    9. ' or' → logprob: -15.003647804260254
    10. '(' → logprob: -15.066147804260254

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003209229907952249
    2. ' ' → logprob: -8.125321388244629
    3. 'i' → logprob: -11.625321388244629
    4. 'k' → logprob: -11.875321388244629
    5. '1' → logprob: -12.687821388244629
    6. '-' → logprob: -13.250321388244629
    7. '00' → logprob: -15.000321388244629
    8. '```' → logprob: -15.125321388244629
    9. 'j' → logprob: -15.250321388244629
    10. '=' → logprob: -15.250321388244629

Token 75: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03294476121664047
    2. ':
' → logprob: -3.532944679260254
    3. ' or' → logprob: -6.282944679260254
    4. '   ' → logprob: -7.032944679260254
    5. ':return' → logprob: -8.032944679260254
    6. '):' → logprob: -9.782944679260254
    7. '):
' → logprob: -10.657944679260254
    8. ')' → logprob: -11.907944679260254
    9. ':
' → logprob: -11.907944679260254
    10. ' :' → logprob: -11.907944679260254

Token 76: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09378831833600998
    2. 'k' → logprob: -3.4687883853912354
    3. ' j' → logprob: -3.4687883853912354
    4. 'i' → logprob: -3.7187883853912354
    5. ' i' → logprob: -6.468788146972656
    6. ' k' → logprob: -7.093788146972656
    7. 'n' → logprob: -8.843788146972656
    8. 'kk' → logprob: -9.343788146972656
    9. ' ' → logprob: -9.718788146972656
    10. '   ' → logprob: -9.718788146972656

Token 77: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3159068524837494
    2. ' >' → logprob: -1.3159068822860718
    3. '==' → logprob: -7.190907001495361
    4. '>=' → logprob: -7.190907001495361
    5. ' >=' → logprob: -7.815907001495361
    6. ' ==' → logprob: -8.440906524658203
    7. '0' → logprob: -8.815906524658203
    8. '<' → logprob: -8.815906524658203
    9. ' ' → logprob: -9.065906524658203
    10. ' <' → logprob: -10.565906524658203

Token 78: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08291389793157578
    2. 'kk' → logprob: -2.832913875579834
    3. 'k' → logprob: -4.582913875579834
    4. 'n' → logprob: -5.207913875579834
    5. ' i' → logprob: -6.082913875579834
    6. ' kk' → logprob: -6.957913875579834
    7. ' ' → logprob: -8.457914352416992
    8. '9' → logprob: -8.707914352416992
    9. '2' → logprob: -8.832914352416992
    10. '   ' → logprob: -8.832914352416992

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3194040060043335
    2. ':
' → logprob: -1.6944040060043335
    3. '*i' → logprob: -3.569404125213623
    4. '-i' → logprob: -3.819404125213623
    5. ' or' → logprob: -4.069404125213623
    6. ' -' → logprob: -4.944404125213623
    7. '-' → logprob: -5.444404125213623
    8. ':return' → logprob: -5.569404125213623
    9. '*' → logprob: -5.694404125213623
    10. ' *' → logprob: -6.819404125213623

Token 80: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7652068734169006
    2. '       ' → logprob: -1.0152068138122559
    3. 'return' → logprob: -1.7652068138122559
    4. ' return' → logprob: -6.890206813812256
    5. '```' → logprob: -8.515207290649414
    6. '	return' → logprob: -10.390207290649414
    7. ' ' → logprob: -11.765207290649414
    8. ':return' → logprob: -11.890207290649414
    9. '  ' → logprob: -12.515207290649414
    10. '           ' → logprob: -12.765207290649414

Token 81: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008291740901768208
    2. '   ' → logprob: -5.008291721343994
    3. ' return' → logprob: -6.883291721343994
    4. '       ' → logprob: -7.633291721343994
    5. '0' → logprob: -10.258292198181152
    6. '	return' → logprob: -10.883292198181152
    7. '```' → logprob: -12.008292198181152
    8. ' ' → logprob: -13.008292198181152
    9. ':return' → logprob: -13.883292198181152
    10. '{return' → logprob: -14.133292198181152

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019291093340143561
    2. ' ' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.75192928314209
    4. '۰' → logprob: -16.751928329467773
    5. ' ' → logprob: -16.814428329467773
    6. '000' → logprob: -17.501928329467773
    7. '00' → logprob: -17.501928329467773
    8. '```' → logprob: -17.564428329467773
    9. '  ' → logprob: -17.939428329467773
    10. 'return' → logprob: -18.189428329467773

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -18.25
    4. '000' → logprob: -19.125
    5. '00' → logprob: -19.25
    6. '```' → logprob: -20.5
    7. '   ' → logprob: -20.625
    8. '٠' → logprob: -20.8125
    9. '０' → logprob: -21.5
    10. '  ' → logprob: -21.75

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4896894693374634
    2. '
' → logprob: -0.9896894693374634
    3. '    
' → logprob: -4.614689350128174
    4. '<|end|>' → logprob: -5.989689350128174
    5. 'return' → logprob: -6.864689350128174
    6. 'result' → logprob: -7.739689350128174
    7. '```' → logprob: -8.239689826965332
    8. '  
' → logprob: -8.239689826965332
    9. ' return' → logprob: -8.614689826965332
    10. '  ' → logprob: -9.114689826965332

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.443772554397583
    2. '   ' → logprob: -1.068772554397583
    3. '    
' → logprob: -4.568772315979004
    4. '<|end|>' → logprob: -6.193772315979004
    5. 'return' → logprob: -7.068772315979004
    6. 'result' → logprob: -7.818772315979004
    7. ' return' → logprob: -8.443772315979004
    8. '  
' → logprob: -8.568772315979004
    9. '```' → logprob: -8.943772315979004
    10. 'res' → logprob: -9.068772315979004

Token 86: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.009725039824843407
    2. ' res' → logprob: -5.259725093841553
    3. 'return' → logprob: -6.634725093841553
    4. 'ans' → logprob: -6.884725093841553
    5. 'result' → logprob: -6.884725093841553
    6. '   ' → logprob: -7.884725093841553
    7. 's' → logprob: -8.509724617004395
    8. 'total' → logprob: -8.509724617004395
    9. 'val' → logprob: -9.259724617004395
    10. 'x' → logprob: -9.509724617004395

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029827436432242393
    2. '=' → logprob: -3.529827356338501
    3. ' ' → logprob: -9.654827117919922
    4. ' +=' → logprob: -11.529827117919922
    5. '  ' → logprob: -14.029827117919922
    6. ' =)' → logprob: -15.029827117919922
    7. ')' → logprob: -15.154827117919922
    8. ',' → logprob: -15.404827117919922
    9. ' =
' → logprob: -15.404827117919922
    10. ' ' → logprob: -15.529827117919922

Token 88: ' ((' (ID: 3536)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49064838886260986
    2. '(dp' → logprob: -1.1156483888626099
    3. 'dp' → logprob: -3.9906482696533203
    4. ' (' → logprob: -3.9906482696533203
    5. '(' → logprob: -4.61564826965332
    6. ' ' → logprob: -4.86564826965332
    7. ' dp' → logprob: -5.24064826965332
    8. '(
' → logprob: -9.24064826965332
    9. '   ' → logprob: -10.74064826965332
    10. '	dp' → logprob: -11.11564826965332

Token 89: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003291544271633029
    2. 'j' → logprob: -6.003291606903076
    3. 'k' → logprob: -8.253291130065918
    4. ' dp' → logprob: -8.378291130065918
    5. 'n' → logprob: -9.253291130065918
    6. '(dp' → logprob: -9.378291130065918
    7. '   ' → logprob: -10.003291130065918
    8. 'sum' → logprob: -11.128291130065918
    9. '2' → logprob: -11.378291130065918
    10. '(' → logprob: -11.628291130065918

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17470663785934448
    2. '*' → logprob: -2.0497066974639893
    3. '*j' → logprob: -3.6747066974639893
    4. '**' → logprob: -5.42470645904541
    5. ' **' → logprob: -7.54970645904541
    6. '*n' → logprob: -7.92470645904541
    7. '*i' → logprob: -8.04970645904541
    8. ' ' → logprob: -9.04970645904541
    9. '*k' → logprob: -9.29970645904541
    10. ')' → logprob: -9.29970645904541

Token 91: ' j' (ID: 441)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3562694191932678
    2. ' dp' → logprob: -1.231269359588623
    3. 'j' → logprob: -5.856269359588623
    4. '(dp' → logprob: -6.481269359588623
    5. ' j' → logprob: -7.231269359588623
    6. 'n' → logprob: -7.231269359588623
    7. ' n' → logprob: -7.606269359588623
    8. ' (' → logprob: -7.731269359588623
    9. '(' → logprob: -8.106269836425781
    10. 'k' → logprob: -8.606269836425781

Token 92: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9620231986045837
    2. ')' → logprob: -1.3370232582092285
    3. ' *' → logprob: -1.3370232582092285
    4. '+' → logprob: -3.2120232582092285
    5. ' +' → logprob: -3.9620232582092285
    6. '%' → logprob: -4.2120232582092285
    7. ')*' → logprob: -4.2120232582092285
    8. ' )' → logprob: -7.0870232582092285
    9. ' -' → logprob: -7.2120232582092285
    10. ' %' → logprob: -7.4620232582092285

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010280941613018513
    2. ' ' → logprob: -5.510281085968018
    3. 'k' → logprob: -5.635281085968018
    4. '2' → logprob: -7.135281085968018
    5. 'kk' → logprob: -8.01028060913086
    6. '(k' → logprob: -8.38528060913086
    7. ' kk' → logprob: -8.51028060913086
    8. ' k' → logprob: -8.51028060913086
    9. '(' → logprob: -8.76028060913086
    10. '-' → logprob: -9.01028060913086

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037722520530223846
    2. 'k' → logprob: -3.537722587585449
    3. 'kk' → logprob: -6.037722587585449
    4. '-' → logprob: -6.537722587585449
    5. '2' → logprob: -6.787722587585449
    6. ' ' → logprob: -7.287722587585449
    7. 'i' → logprob: -7.912722587585449
    8. 'dp' → logprob: -8.03772258758545
    9. 'n' → logprob: -8.28772258758545
    10. ')' → logprob: -8.41272258758545

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38685402274131775
    2. '*' → logprob: -1.2618540525436401
    3. ' *' → logprob: -3.3868539333343506
    4. ')*' → logprob: -5.63685417175293
    5. ' )' → logprob: -8.88685417175293
    6. ' ' → logprob: -9.51185417175293
    7. '   ' → logprob: -9.88685417175293
    8. '**' → logprob: -11.51185417175293
    9. '*)' → logprob: -11.76185417175293
    10. '+' → logprob: -12.38685417175293

Token 96: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20178402960300446
    2. '*' → logprob: -1.7017840147018433
    3. ')' → logprob: -8.326784133911133
    4. ' ' → logprob: -9.701784133911133
    5. '   ' → logprob: -10.326784133911133
    6. '**' → logprob: -11.701784133911133
    7. ')*' → logprob: -11.951784133911133
    8. ' )' → logprob: -12.701784133911133
    9. ' *
' → logprob: -12.826784133911133
    10. ' ' → logprob: -12.951784133911133

Token 97: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4290023446083069
    2. ' dp' → logprob: -1.054002285003662
    3. '(dp' → logprob: -8.55400276184082
    4. '	dp' → logprob: -10.17900276184082
    5. ' ' → logprob: -11.05400276184082
    6. ' (' → logprob: -11.55400276184082
    7. ' ' → logprob: -11.92900276184082
    8. '(' → logprob: -11.99150276184082
    9. '   ' → logprob: -12.67900276184082
    10. '2' → logprob: -12.67900276184082

Token 98: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.438573680294212e-06
    2. '(n' → logprob: -12.375005722045898
    3. '(' → logprob: -13.750005722045898
    4. '(I' → logprob: -17.6250057220459
    5. '(ii' → logprob: -18.5000057220459
    6. '(
' → logprob: -18.6250057220459
    7. '(j' → logprob: -19.0000057220459
    8. '((' → logprob: -19.1250057220459
    9. '(u' → logprob: -19.2500057220459
    10. ' (' → logprob: -19.2500057220459

Token 99: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014246364124119282
    2. ' -' → logprob: -4.264246463775635
    3. '(' → logprob: -10.764245986938477
    4. '1' → logprob: -10.889245986938477
    5. ' ' → logprob: -11.264245986938477
    6. '(i' → logprob: -11.889245986938477
    7. '   ' → logprob: -12.014245986938477
    8. '(n' → logprob: -12.264245986938477
    9. '  ' → logprob: -12.389245986938477
    10. '```' → logprob: -12.764245986938477

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.44443862256594e-05
    2. ' ' → logprob: -9.875064849853516
    3. ',' → logprob: -11.625064849853516
    4. '   ' → logprob: -12.625064849853516
    5. '```' → logprob: -15.500064849853516
    6. '       ' → logprob: -16.000064849853516
    7. '(' → logprob: -16.250064849853516
    8. '    ' → logprob: -16.250064849853516
    9. ' ,' → logprob: -16.500064849853516
    10. '  ' → logprob: -16.500064849853516

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.62500762939453
    4. '```' → logprob: -16.62500762939453
    5. '2' → logprob: -18.12500762939453
    6. '
' → logprob: -18.25000762939453
    7. ',' → logprob: -18.50000762939453
    8. '  ' → logprob: -18.75000762939453
    9. '4' → logprob: -19.68750762939453
    10. 'from' → logprob: -19.81250762939453

Token 102: ',' (ID: 11)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.44396382570266724
    2. '(' → logprob: -1.4439637660980225
    3. ',' → logprob: -2.1939637660980225
    4. '(n' → logprob: -5.193964004516602
    5. ',j' → logprob: -5.443964004516602
    6. ' ,' → logprob: -7.693964004516602
    7. '(i' → logprob: -8.193964004516602
    8. ' (' → logprob: -8.693964004516602
    9. '(
' → logprob: -8.818964004516602
    10. ')' → logprob: -9.943964004516602

Token 103: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0620744526386261
    2. ' j' → logprob: -2.8120744228363037
    3. ' ' → logprob: -9.937074661254883
    4. '   ' → logprob: -11.062074661254883
    5. '    ' → logprob: -11.437074661254883
    6. '  ' → logprob: -11.937074661254883
    7. '2' → logprob: -12.062074661254883
    8. 'k' → logprob: -12.437074661254883
    9. '	j' → logprob: -12.437074661254883
    10. '0' → logprob: -12.937074661254883

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013903966173529625
    2. '-' → logprob: -4.638904094696045
    3. ',k' → logprob: -6.388904094696045
    4. ' ,' → logprob: -6.638904094696045
    5. ' -' → logprob: -7.638904094696045
    6. ' ' → logprob: -7.763904094696045
    7. '+' → logprob: -8.888903617858887
    8. '   ' → logprob: -9.513903617858887
    9. ' +' → logprob: -11.263903617858887
    10. ',j' → logprob: -11.888903617858887

Token 105: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011060673743486404
    2. ' k' → logprob: -4.51106071472168
    3. '   ' → logprob: -12.51106071472168
    4. ' ' → logprob: -12.51106071472168
    5. '    ' → logprob: -13.13606071472168
    6. '  ' → logprob: -13.76106071472168
    7. '     ' → logprob: -14.88606071472168
    8. '0' → logprob: -14.88606071472168
    9. '        ' → logprob: -15.13606071472168
    10. '           ' → logprob: -15.38606071472168

Token 106: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6939092874526978
    2. '))' → logprob: -0.6939092874526978
    3. ')%' → logprob: -7.318909168243408
    4. ' )' → logprob: -10.193909645080566
    5. ')+' → logprob: -10.943909645080566
    6. ' ))' → logprob: -11.443909645080566
    7. '   ' → logprob: -11.443909645080566
    8. '-' → logprob: -12.568909645080566
    9. ')
' → logprob: -12.693909645080566
    10. ' -' → logprob: -12.943909645080566

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12238602340221405
    2. 'j' → logprob: -2.3723859786987305
    3. '2' → logprob: -4.8723859786987305
    4. '0' → logprob: -4.9973859786987305
    5. '(' → logprob: -5.4973859786987305
    6. '(j' → logprob: -6.6223859786987305
    7. ' j' → logprob: -7.7473859786987305
    8. 'dp' → logprob: -7.9973859786987305
    9. ' ' → logprob: -8.12238597869873
    10. 'k' → logprob: -8.49738597869873

Token 108: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08444372564554214
    2. '1' → logprob: -2.5844438076019287
    3. '2' → logprob: -5.70944356918335
    4. '0' → logprob: -7.08444356918335
    5. '(' → logprob: -7.20944356918335
    6. '(j' → logprob: -8.584444046020508
    7. 'k' → logprob: -8.584444046020508
    8. ' j' → logprob: -9.209444046020508
    9. 'jj' → logprob: -10.084444046020508
    10. 'kk' → logprob: -10.334444046020508

Token 109: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16051708161830902
    2. '))' → logprob: -1.9105170965194702
    3. ')))' → logprob: -9.535516738891602
    4. ')%' → logprob: -9.535516738891602
    5. ')
' → logprob: -10.035516738891602
    6. ')+' → logprob: -10.285516738891602
    7. ' )' → logprob: -10.535516738891602
    8. '+' → logprob: -11.535516738891602
    9. '   ' → logprob: -12.035516738891602
    10. ' ' → logprob: -12.285516738891602

Token 110: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08589166402816772
    2. 'i' → logprob: -2.5858917236328125
    3. ')' → logprob: -5.7108917236328125
    4. '(' → logprob: -6.2108917236328125
    5. '(j' → logprob: -7.3358917236328125
    6. 'k' → logprob: -8.335891723632812
    7. '(i' → logprob: -8.710891723632812
    8. ' j' → logprob: -8.835891723632812
    9. ' (' → logprob: -9.585891723632812
    10. 'n' → logprob: -10.210891723632812

Token 111: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.28159812092781067
    2. ')' → logprob: -1.4065980911254883
    3. ')%' → logprob: -9.281598091125488
    4. ' )' → logprob: -9.406598091125488
    5. ' ))' → logprob: -9.406598091125488
    6. ')))' → logprob: -9.781598091125488
    7. ')
' → logprob: -9.906598091125488
    8. '   ' → logprob: -10.281598091125488
    9. ' ' → logprob: -10.906598091125488
    10. '  ' → logprob: -11.781598091125488

Token 112: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.11745484173297882
    2. ' %' → logprob: -2.492454767227173
    3. '+' → logprob: -3.992454767227173
    4. ' +' → logprob: -5.117455005645752
    5. ')' → logprob: -5.742455005645752
    6. ')%' → logprob: -8.367454528808594
    7. '
' → logprob: -9.367454528808594
    8. ' ' → logprob: -9.617454528808594
    9. '   ' → logprob: -10.367454528808594
    10. 'res' → logprob: -12.242454528808594

Token 113: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '_MOD' → logprob: -20.750045776367188
    4. '.MOD' → logprob: -22.875045776367188
    5. '(M' → logprob: -23.625045776367188
    6. ' ' → logprob: -23.625045776367188
    7. 'M' → logprob: -24.250045776367188
    8. 'MO' → logprob: -24.375045776367188
    9. 'MD' → logprob: -24.625045776367188
    10. '```' → logprob: -24.750045776367188

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07562833279371262
    2. '+' → logprob: -3.0756282806396484
    3. '+
' → logprob: -4.700628280639648
    4. '
' → logprob: -4.950628280639648
    5. ' +' → logprob: -5.325628280639648
    6. ' +
' → logprob: -6.950628280639648
    7. 'res' → logprob: -6.950628280639648
    8. ' ' → logprob: -7.075628280639648
    9. '    
' → logprob: -7.325628280639648
    10. ')' → logprob: -7.450628280639648

Token 115: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03918636962771416
    2. '+' → logprob: -4.289186477661133
    3. '   ' → logprob: -4.289186477661133
    4. ' res' → logprob: -5.164186477661133
    5. '
' → logprob: -6.039186477661133
    6. '+
' → logprob: -6.664186477661133
    7. ' +' → logprob: -7.414186477661133
    8. '    
' → logprob: -8.164186477661133
    9. 'for' → logprob: -8.164186477661133
    10. '```' → logprob: -9.039186477661133

Token 116: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00027349460287950933
    2. ' res' → logprob: -8.875273704528809
    3. 'for' → logprob: -9.750273704528809
    4. 'if' (adapté à ' if') → logprob: -10.000273704528809
    5. '+' → logprob: -11.000273704528809
    6. '
' → logprob: -12.375273704528809
    7. '   ' → logprob: -12.875273704528809
    8. 'return' → logprob: -13.000273704528809
    9. '    
' → logprob: -13.125273704528809
    10. '(res' → logprob: -14.625273704528809

Token 117: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5232856869697571
    2. ' j' → logprob: -0.8982856869697571
    3. '(j' → logprob: -9.273285865783691
    4. ' ' → logprob: -10.398285865783691
    5. 'k' → logprob: -11.398285865783691
    6. ' ' → logprob: -11.523285865783691
    7. '   ' → logprob: -12.398285865783691
    8. ' k' → logprob: -12.648285865783691
    9. '	j' → logprob: -12.898285865783691
    10. ' (' → logprob: -13.023285865783691

Token 118: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08019980788230896
    2. '>' → logprob: -2.580199718475342
    3. '+' → logprob: -7.330199718475342
    4. ' +' → logprob: -8.3302001953125
    5. '-' → logprob: -8.7052001953125
    6. '   ' → logprob: -9.8302001953125
    7. ' ' → logprob: -9.8302001953125
    8. ':' → logprob: -10.2052001953125
    9. ' >=' → logprob: -10.4552001953125
    10. ' -' → logprob: -10.9552001953125

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -15.000109672546387
    4. '   ' → logprob: -15.375109672546387
    5. '
' → logprob: -16.500110626220703
    6. '  ' → logprob: -17.625110626220703
    7. '+' → logprob: -18.250110626220703
    8. '<|end|>' → logprob: -18.375110626220703
    9. '2' → logprob: -18.625110626220703
    10. '0' → logprob: -18.750110626220703

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.500009536743164
    4. '   ' → logprob: -17.625009536743164
    5. '
' → logprob: -18.375009536743164
    6. '(' → logprob: -18.750009536743164
    7. '2' → logprob: -19.000009536743164
    8. '

' → logprob: -19.250009536743164
    9. '  ' → logprob: -19.250009536743164
    10. 'from' → logprob: -19.750009536743164

Token 121: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10576989501714706
    2. '<=' → logprob: -2.3557698726654053
    3. ' <' → logprob: -5.355770111083984
    4. '<' → logprob: -7.480770111083984
    5. ')' → logprob: -9.230770111083984
    6. ')<=' → logprob: -9.855770111083984
    7. '<n' → logprob: -10.355770111083984
    8. '<|end|>' → logprob: -11.105770111083984
    9. '<len' → logprob: -11.230770111083984
    10. ']<=' → logprob: -11.855770111083984

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08894295990467072
    2. ' n' → logprob: -2.4639430046081543
    3. '	n' → logprob: -13.588942527770996
    4. ' ' → logprob: -13.713942527770996
    5. '<|end|>' → logprob: -15.213942527770996
    6. '   ' → logprob: -15.588942527770996
    7. '
' → logprob: -15.713942527770996
    8. '(n' → logprob: -16.088943481445312
    9. ')n' → logprob: -16.588943481445312
    10. '```' → logprob: -16.713943481445312

Token 123: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1602563112974167
    2. ':' → logprob: -1.910256266593933
    3. '   ' → logprob: -11.785256385803223
    4. ' and' → logprob: -11.910256385803223
    5. '):
' → logprob: -12.660256385803223
    6. 'and' → logprob: -12.660256385803223
    7. ':

' → logprob: -12.785256385803223
    8. ':
' → logprob: -12.785256385803223
    9. 'res' → logprob: -13.285256385803223
    10. ',' → logprob: -13.535256385803223

Token 124: '       ' (ID: 309)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6427468657493591
    2. '       ' → logprob: -0.7677468657493591
    3. 'res' → logprob: -5.017746925354004
    4. '   ' → logprob: -6.392746925354004
    5. '<|end|>' → logprob: -7.142746925354004
    6. '```' → logprob: -8.517746925354004
    7. ':' → logprob: -9.267746925354004
    8. '    ' → logprob: -9.267746925354004
    9. ':
' → logprob: -9.392746925354004
    10. '	res' → logprob: -9.392746925354004

Token 125: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5767288208007812
    2. 'res' (adapté à ' res') → logprob: -0.8267288208007812
    3. '           ' → logprob: -7.951728820800781
    4. '
' → logprob: -7.951728820800781
    5. '       ' → logprob: -9.951728820800781
    6. '   ' → logprob: -10.826728820800781
    7. '	res' → logprob: -11.576728820800781
    8. '
' → logprob: -13.076728820800781
    9. ' ' → logprob: -13.201728820800781
    10. '            
' → logprob: -14.201728820800781

Token 126: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3618660271167755
    2. ' +=' → logprob: -1.6118659973144531
    3. '=' → logprob: -2.736865997314453
    4. ' =' → logprob: -3.236865997314453
    5. '+=(' → logprob: -10.736865997314453
    6. '+' → logprob: -11.111865997314453
    7. '   ' → logprob: -12.861865997314453
    8. '-=' → logprob: -13.361865997314453
    9. ' -=' → logprob: -13.611865997314453
    10. '=(' → logprob: -13.611865997314453

Token 127: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.25203120708465576
    2. ' (' → logprob: -1.5020312070846558
    3. '(' → logprob: -10.627031326293945
    4. '(max' → logprob: -11.252031326293945
    5. '   ' → logprob: -11.502031326293945
    6. '(ans' → logprob: -11.752031326293945
    7. '(result' → logprob: -11.877031326293945
    8. ' ' → logprob: -12.252031326293945
    9. '(rs' → logprob: -12.502031326293945
    10. '(next' → logprob: -12.502031326293945

Token 128: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004712784197181463
    2. ' res' → logprob: -5.3797125816345215
    3. '(res' → logprob: -9.37971305847168
    4. '
' → logprob: -12.75471305847168
    5. '           ' → logprob: -13.37971305847168
    6. '   ' → logprob: -14.12971305847168
    7. '	res' → logprob: -14.37971305847168
    8. '       ' → logprob: -14.75471305847168
    9. '

' → logprob: -15.00471305847168
    10. '               ' → logprob: -15.62971305847168

Token 129: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002165898680687
    2. '+' → logprob: -2.3502166271209717
    3. ' ' → logprob: -12.60021686553955
    4. 'res' → logprob: -13.35021686553955
    5. ' +
' → logprob: -13.47521686553955
    6. '[' → logprob: -14.10021686553955
    7. ' -' → logprob: -14.47521686553955
    8. ')' → logprob: -14.47521686553955
    9. '-' → logprob: -14.60021686553955
    10. '=' → logprob: -14.97521686553955

Token 130: ' ((' (ID: 3536)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7144005298614502
    2. ' dp' → logprob: -0.7144005298614502
    3. '(dp' → logprob: -4.464400291442871
    4. ' (' → logprob: -5.964400291442871
    5. '(j' → logprob: -6.464400291442871
    6. 'j' → logprob: -6.464400291442871
    7. '(' → logprob: -6.714400291442871
    8. ' j' → logprob: -6.714400291442871
    9. '((' → logprob: -7.339400291442871
    10. '2' → logprob: -8.714400291442871

Token 131: 'j' (ID: 73)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02892928011715412
    2. 'j' → logprob: -4.778929233551025
    3. 'n' → logprob: -5.028929233551025
    4. '(' → logprob: -5.528929233551025
    5. 'k' → logprob: -6.278929233551025
    6. '(j' → logprob: -6.278929233551025
    7. '(k' → logprob: -6.403929233551025
    8. 'dp' → logprob: -6.403929233551025
    9. 'kk' → logprob: -6.903929233551025
    10. '(n' → logprob: -7.028929233551025

Token 132: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12694469094276428
    2. '+' → logprob: -2.1269447803497314
    3. ' +
' → logprob: -11.626944541931152
    4. ')+' → logprob: -13.126944541931152
    5. ' ' → logprob: -13.626944541931152
    6. '   ' → logprob: -13.626944541931152
    7. ')' → logprob: -13.876944541931152
    8. '+
' → logprob: -14.626944541931152
    9. '
' → logprob: -15.126944541931152
    10. '<|end|>' → logprob: -15.376944541931152

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005948548787273467
    2. '2' → logprob: -7.7505950927734375
    3. ' ' → logprob: -8.750595092773438
    4. '   ' → logprob: -12.875595092773438
    5. '  ' → logprob: -14.750595092773438
    6. '
' → logprob: -15.125595092773438
    7. '    ' → logprob: -15.438095092773438
    8. '+' → logprob: -15.500595092773438
    9. '```' → logprob: -15.625595092773438
    10. '           ' → logprob: -15.875595092773438

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. '2' → logprob: -10.75003433227539
    3. ' ' → logprob: -11.50003433227539
    4. '   ' → logprob: -14.37503433227539
    5. '+' → logprob: -15.50003433227539
    6. 'j' → logprob: -15.75003433227539
    7. 'n' → logprob: -15.93753433227539
    8. '0' → logprob: -16.06253433227539
    9. '
' → logprob: -16.06253433227539
    10. '

' → logprob: -16.31253433227539

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015067486092448235
    2. ' *' → logprob: -4.5150675773620605
    3. '*' → logprob: -6.0150675773620605
    4. ')*' → logprob: -6.5150675773620605
    5. ' )' → logprob: -10.015067100524902
    6. '   ' → logprob: -10.890067100524902
    7. 'dp' → logprob: -11.890067100524902
    8. ' ' → logprob: -12.140067100524902
    9. '*)' → logprob: -12.390067100524902
    10. '))' → logprob: -13.140067100524902

Token 136: ' **' (ID: 6240)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05362372845411301
    2. '*' → logprob: -3.053623676300049
    3. ')' → logprob: -5.428623676300049
    4. ')*' → logprob: -7.678623676300049
    5. ' ' → logprob: -9.053624153137207
    6. '   ' → logprob: -11.053624153137207
    7. 'def' → logprob: -11.553624153137207
    8. 'dp' → logprob: -12.428624153137207
    9. '  ' → logprob: -12.553624153137207
    10. ' dp' → logprob: -12.678624153137207

Token 137: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005370667786337435
    2. '3' → logprob: -7.625536918640137
    3. ' ' → logprob: -10.250536918640137
    4. '4' → logprob: -12.375536918640137
    5. '   ' → logprob: -12.625536918640137
    6. '1' → logprob: -13.375536918640137
    7. '
' → logprob: -13.625536918640137
    8. '

' → logprob: -14.000536918640137
    9. '6' → logprob: -14.625536918640137
    10. ' ' → logprob: -14.750536918640137

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000533136713784188
    2. '3' → logprob: -7.625533103942871
    3. '1' → logprob: -10.250533103942871
    4. '4' → logprob: -12.375533103942871
    5. ' ' → logprob: -12.750533103942871
    6. '5' → logprob: -14.625533103942871
    7. '

' → logprob: -14.625533103942871
    8. '6' → logprob: -14.750533103942871
    9. '
' → logprob: -15.500533103942871
    10. '-' → logprob: -15.625533103942871

Token 139: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06574200093746185
    2. ')' → logprob: -2.940742015838623
    3. '*' → logprob: -4.565742015838623
    4. ')*' → logprob: -8.190741539001465
    5. '   ' → logprob: -9.940741539001465
    6. ' ' → logprob: -10.065741539001465
    7. ' )' → logprob: -10.690741539001465
    8. '  ' → logprob: -13.440741539001465
    9. ',' → logprob: -13.565741539001465
    10. ' *
' → logprob: -13.815741539001465

Token 140: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04862222820520401
    2. '*' → logprob: -3.0486221313476562
    3. ')' → logprob: -10.548622131347656
    4. ' ' → logprob: -12.173622131347656
    5. '   ' → logprob: -13.423622131347656
    6. ' ' → logprob: -14.673622131347656
    7. '
' → logprob: -15.173622131347656
    8. '  ' → logprob: -15.548622131347656
    9. ',' → logprob: -15.548622131347656
    10. 'def' → logprob: -15.673622131347656

Token 141: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16027794778347015
    2. ' dp' → logprob: -1.9102779626846313
    3. '(dp' → logprob: -9.9102783203125
    4. '	dp' → logprob: -13.4102783203125
    5. ' ' → logprob: -14.5352783203125
    6. '
' → logprob: -14.7852783203125
    7. '(' → logprob: -14.7852783203125
    8. ' (' → logprob: -14.9102783203125
    9. '_dp' → logprob: -15.4102783203125
    10. '.dp' → logprob: -16.2852783203125

Token 142: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.375004768371582
    3. '(
' → logprob: -14.625004768371582
    4. '(n' → logprob: -15.375004768371582
    5. ' (' → logprob: -17.2500057220459
    6. '(I' → logprob: -17.2500057220459
    7. '```' → logprob: -17.7500057220459
    8. 'i' → logprob: -18.1250057220459
    9. ')i' → logprob: -18.7500057220459
    10. '<|end|>' → logprob: -18.7500057220459

Token 143: ' -' (ID: 533)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006938508013263345
    2. '(' → logprob: -7.7506937980651855
    3. ' (' → logprob: -9.000694274902344
    4. '-' → logprob: -9.875694274902344
    5. '(n' → logprob: -10.125694274902344
    6. ' -' → logprob: -10.625694274902344
    7. 'i' → logprob: -11.375694274902344
    8. ' i' → logprob: -11.875694274902344
    9. '(
' → logprob: -13.250694274902344
    10. '   ' → logprob: -14.125694274902344

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.25000762939453
    4. ',' → logprob: -16.62500762939453
    5. '
' → logprob: -17.00000762939453
    6. '<|end|>' → logprob: -17.75000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '2' → logprob: -19.31250762939453
    9. 's' → logprob: -19.31250762939453
    10. '       ' → logprob: -19.68750762939453

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.125012397766113
    4. '
' → logprob: -15.312512397766113
    5. '   ' → logprob: -16.312511444091797
    6. ',' → logprob: -16.312511444091797
    7. '

' → logprob: -17.312511444091797
    8. '
' → logprob: -17.625011444091797
    9. 'from' → logprob: -18.125011444091797
    10. '  ' → logprob: -18.250011444091797

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061472099274396896
    2. '(i' → logprob: -3.436472177505493
    3. '(' → logprob: -4.561471939086914
    4. '(j' → logprob: -4.811471939086914
    5. '(n' → logprob: -5.061471939086914
    6. ' ,' → logprob: -6.311471939086914
    7. ' (' → logprob: -8.061471939086914
    8. ',j' → logprob: -8.061471939086914
    9. ',i' → logprob: -11.186471939086914
    10. ')' → logprob: -11.436471939086914

Token 147: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10024192184209824
    2. ' j' → logprob: -2.3502418994903564
    3. '(j' → logprob: -11.100241661071777
    4. '   ' → logprob: -11.600241661071777
    5. ' ' → logprob: -12.225241661071777
    6. '	j' → logprob: -13.475241661071777
    7. ' (' → logprob: -13.725241661071777
    8. '  ' → logprob: -13.975241661071777
    9. '    ' → logprob: -14.225241661071777
    10. '[j' → logprob: -14.475241661071777

Token 148: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25202277302742004
    2. ' +' → logprob: -1.5020227432250977
    3. '+,' → logprob: -10.252022743225098
    4. '+
' → logprob: -10.377022743225098
    5. ' +
' → logprob: -11.252022743225098
    6. ',' → logprob: -11.877022743225098
    7. '   ' → logprob: -13.377022743225098
    8. '1' → logprob: -13.377022743225098
    9. '＋' → logprob: -14.252022743225098
    10. ' ,' → logprob: -14.377022743225098

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030042731668800116
    2. ' ' → logprob: -8.125300407409668
    3. '
' → logprob: -13.250300407409668
    4. '   ' → logprob: -13.875300407409668
    5. ',' → logprob: -14.375300407409668
    6. '```' → logprob: -14.750300407409668
    7. '<|end|>' → logprob: -15.375300407409668
    8. '  ' → logprob: -15.625300407409668
    9. '

' → logprob: -17.125301361083984
    10. ')' → logprob: -17.375301361083984

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '
' → logprob: -15.125009536743164
    4. '   ' → logprob: -15.750009536743164
    5. '<|end|>' → logprob: -16.625009536743164
    6. ',' → logprob: -17.250009536743164
    7. '  ' → logprob: -17.500009536743164
    8. '```' → logprob: -17.625009536743164
    9. '

' → logprob: -18.750009536743164
    10. '-' → logprob: -19.187509536743164

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010927118128165603
    2. ' ,' → logprob: -7.001092910766602
    3. ',k' → logprob: -8.626092910766602
    4. ',
' → logprob: -14.126092910766602
    5. 'k' → logprob: -14.876092910766602
    6. ')' → logprob: -15.876092910766602
    7. '),' → logprob: -16.3760929107666
    8. ' k' → logprob: -16.5010929107666
    9. '```' → logprob: -16.8760929107666
    10. '   ' → logprob: -16.8760929107666

Token 152: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02324722334742546
    2. ' k' → logprob: -3.773247241973877
    3. '(k' → logprob: -14.648246765136719
    4. '           ' → logprob: -15.398246765136719
    5. ' ' → logprob: -15.523246765136719
    6. '   ' → logprob: -15.648246765136719
    7. '               ' → logprob: -15.898246765136719
    8. '                   ' → logprob: -16.14824676513672
    9. '                           ' → logprob: -16.64824676513672
    10. '                               ' → logprob: -17.27324676513672

Token 153: ' -' (ID: 533)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21800173819065094
    2. '-' → logprob: -1.8430017232894897
    3. ' -' → logprob: -3.7180018424987793
    4. ')' → logprob: -4.343001842498779
    5. ')))' → logprob: -9.343001365661621
    6. ' ))' → logprob: -9.843001365661621
    7. ',' → logprob: -9.968001365661621
    8. '))
' → logprob: -11.468001365661621
    9. '),' → logprob: -11.593001365661621
    10. ' ' → logprob: -11.718001365661621

Token 154: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021114572882652283
    2. '1' → logprob: -4.146114349365234
    3. '(' → logprob: -5.896114349365234
    4. '(j' → logprob: -6.271114349365234
    5. ' ' → logprob: -8.646114349365234
    6. 'j' → logprob: -9.021114349365234
    7. ' (' → logprob: -10.021114349365234
    8. '0' → logprob: -10.146114349365234
    9. '((' → logprob: -10.521114349365234
    10. '3' → logprob: -12.521114349365234

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4741770923137665
    2. '1' → logprob: -0.9741771221160889
    3. '0' → logprob: -9.974177360534668
    4. '(' → logprob: -11.099177360534668
    5. '4' → logprob: -11.224177360534668
    6. ' ' → logprob: -11.224177360534668
    7. '3' → logprob: -12.474177360534668
    8. '(j' → logprob: -12.724177360534668
    9. 'j' → logprob: -12.974177360534668
    10. '   ' → logprob: -13.974177360534668

Token 156: ' *' (ID: 425)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.08361786603927612
    2. 'j' → logprob: -3.333617925643921
    3. ' (' → logprob: -4.083617687225342
    4. '*(' → logprob: -4.333617687225342
    5. ')' → logprob: -4.958617687225342
    6. '(' → logprob: -6.458617687225342
    7. '*j' → logprob: -6.458617687225342
    8. '*' → logprob: -6.833617687225342
    9. '[j' → logprob: -6.833617687225342
    10. ' *' → logprob: -7.583617687225342

Token 157: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006001909729093313
    2. '(j' → logprob: -5.131001949310303
    3. ' j' → logprob: -10.256001472473145
    4. '(' → logprob: -10.631001472473145
    5. ' (' → logprob: -11.881001472473145
    6. 'jj' → logprob: -13.506001472473145
    7. '   ' → logprob: -13.881001472473145
    8. ')' → logprob: -14.131001472473145
    9. '_j' → logprob: -14.506001472473145
    10. '	j' → logprob: -14.506001472473145

Token 158: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000685391016304493
    2. ')))' → logprob: -7.500685214996338
    3. ')' → logprob: -9.500685691833496
    4. '   ' → logprob: -10.500685691833496
    5. ' ))' → logprob: -10.625685691833496
    6. '       ' → logprob: -12.875685691833496
    7. ' ' → logprob: -14.125685691833496
    8. '))
' → logprob: -14.500685691833496
    9. ')
' → logprob: -14.500685691833496
    10. '  ' → logprob: -15.250685691833496

Token 159: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13670319318771362
    2. ' %' → logprob: -2.3867032527923584
    3. '%' → logprob: -3.3867032527923584
    4. ')%' → logprob: -6.386703014373779
    5. ' )' → logprob: -8.261703491210938
    6. ' ' → logprob: -10.261703491210938
    7. '
' → logprob: -11.011703491210938
    8. '   ' → logprob: -11.261703491210938
    9. ' %)' → logprob: -12.636703491210938
    10. '%)' → logprob: -12.761703491210938

Token 160: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023246990516781807
    2. ' MOD' → logprob: -3.773247003555298
    3. '_MOD' → logprob: -13.523246765136719
    4. '.MOD' → logprob: -16.64824676513672
    5. ' ' → logprob: -16.89824676513672
    6. '```' → logprob: -17.14824676513672
    7. ' ' → logprob: -19.27324676513672
    8. '
' → logprob: -19.39824676513672
    9. '`' → logprob: -19.77324676513672
    10. '   ' → logprob: -19.77324676513672

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008883645758032799
    2. 'return' → logprob: -5.133883476257324
    3. ' return' → logprob: -6.008883476257324
    4. '
' → logprob: -8.133883476257324
    5. ')' → logprob: -9.508883476257324
    6. '```' → logprob: -10.508883476257324
    7. '    
' → logprob: -10.633883476257324
    8. '	return' → logprob: -11.258883476257324
    9. ':return' → logprob: -11.383883476257324
    10. '  ' → logprob: -11.508883476257324

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06760730594396591
    2. '```' → logprob: -2.9426074028015137
    3. '    
' → logprob: -5.692607402801514
    4. ')' → logprob: -5.692607402801514
    5. '<|end|>' → logprob: -6.567607402801514
    6. '``' → logprob: -7.317607402801514
    7. '  ' → logprob: -7.317607402801514
    8. ' res' → logprob: -7.692607402801514
    9. ' 
' → logprob: -7.692607402801514
    10. '  
' → logprob: -7.817607402801514

Token 163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13654378056526184
    2. 'res' → logprob: -2.3865437507629395
    3. 'else' → logprob: -4.1365437507629395
    4. '   ' → logprob: -4.3865437507629395
    5. ' if' → logprob: -5.0115437507629395
    6. 'return' → logprob: -8.386544227600098
    7. ' res' → logprob: -8.761544227600098
    8. 'elif' → logprob: -9.136544227600098
    9. ' else' → logprob: -9.761544227600098
    10. '```' → logprob: -10.261544227600098

Token 164: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.38713905215263367
    2. 'j' → logprob: -1.137139081954956
    3. '(j' → logprob: -9.262139320373535
    4. '0' → logprob: -9.887139320373535
    5. 'res' → logprob: -10.262139320373535
    6. ' ' → logprob: -10.512139320373535
    7. ' res' → logprob: -11.012139320373535
    8. ' (' → logprob: -11.387139320373535
    9. ' ' → logprob: -11.887139320373535
    10. '   ' → logprob: -12.012139320373535

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3730244040489197
    2. ' >' → logprob: -1.2480244636535645
    3. '>' → logprob: -4.6230244636535645
    4. '   ' → logprob: -4.7480244636535645
    5. '-' → logprob: -5.3730244636535645
    6. ' +' → logprob: -6.8730244636535645
    7. '  ' → logprob: -10.123023986816406
    8. '+' → logprob: -10.623023986816406
    9. ' ' → logprob: -10.873023986816406
    10. ':' → logprob: -11.873023986816406

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012519778683781624
    2. ' ' → logprob: -4.387519836425781
    3. '   ' → logprob: -12.012519836425781
    4. '```' → logprob: -13.387519836425781
    5. '>' → logprob: -13.762519836425781
    6. '+' → logprob: -15.012519836425781
    7. '(' → logprob: -15.137519836425781
    8. '  ' → logprob: -15.762519836425781
    9. '>=' → logprob: -16.01251983642578
    10. '0' → logprob: -16.20001983642578

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.500030517578125
    3. '   ' → logprob: -13.500030517578125
    4. '```' → logprob: -14.375030517578125
    5. '
' → logprob: -15.250030517578125
    6. '>' → logprob: -16.125030517578125
    7. '  ' → logprob: -16.750030517578125
    8. '>=' → logprob: -17.000030517578125
    9. '``' → logprob: -17.000030517578125
    10. '(' → logprob: -17.062530517578125

Token 168: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.13035428524017334
    2. '>=' → logprob: -2.130354404449463
    3. '   ' → logprob: -5.755354404449463
    4. ')>=' → logprob: -9.880353927612305
    5. ' <=' → logprob: -10.255353927612305
    6. '       ' → logprob: -10.380353927612305
    7. '    ' → logprob: -10.505353927612305
    8. ' ' → logprob: -10.630353927612305
    9. '  ' → logprob: -11.255353927612305
    10. '```' → logprob: -11.255353927612305

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3869161903858185
    2. ' ' → logprob: -1.136916160583496
    3. '   ' → logprob: -10.386916160583496
    4. '(' → logprob: -12.386916160583496
    5. ' (' → logprob: -12.886916160583496
    6. '  ' → logprob: -12.886916160583496
    7. 'n' → logprob: -13.511916160583496
    8. ' n' → logprob: -14.386916160583496
    9. '
' → logprob: -14.511916160583496
    10. ' ' → logprob: -14.949416160583496

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009140860638581216
    2. ' ' → logprob: -7.000914096832275
    3. '   ' → logprob: -13.125913619995117
    4. '
' → logprob: -15.875913619995117
    5. '(' → logprob: -16.125913619995117
    6. '1' → logprob: -16.250913619995117
    7. 'n' → logprob: -16.375913619995117
    8. '  ' → logprob: -16.563413619995117
    9. '       ' → logprob: -17.688413619995117
    10. '    ' → logprob: -18.063413619995117

Token 171: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5236842036247253
    2. ':' → logprob: -0.8986842036247253
    3. '       ' → logprob: -8.39868450164795
    4. '   ' → logprob: -8.52368450164795
    5. '):
' → logprob: -9.27368450164795
    6. ':

' → logprob: -11.14868450164795
    7. 'res' → logprob: -12.39868450164795
    8. ',' → logprob: -12.64868450164795
    9. ':
' → logprob: -12.77368450164795
    10. '=' → logprob: -12.77368450164795

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8118169903755188
    2. ' res' → logprob: -1.311816930770874
    3. 'res' → logprob: -1.311816930770874
    4. '   ' → logprob: -4.061817169189453
    5. '```' → logprob: -10.561817169189453
    6. '	res' → logprob: -11.686817169189453
    7. '(res' → logprob: -11.811817169189453
    8. '
' → logprob: -12.186817169189453
    9. '    ' → logprob: -12.186817169189453
    10. '           ' → logprob: -12.436817169189453

Token 173: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5759475827217102
    2. ' res' → logprob: -0.8259475827217102
    3. '   ' → logprob: -12.325947761535645
    4. '
' → logprob: -13.200947761535645
    5. '(res' → logprob: -14.450947761535645
    6. '	res' → logprob: -14.450947761535645
    7. ' ' → logprob: -15.700947761535645
    8. '```' → logprob: -15.700947761535645
    9. '       ' → logprob: -15.825947761535645
    10. 'resc' → logprob: -16.450946807861328

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931519508361816
    2. ' =' → logprob: -0.6931519508361816
    3. '   ' → logprob: -12.693151473999023
    4. ')' → logprob: -15.193151473999023
    5. ' ' → logprob: -15.568151473999023
    6. '```' → logprob: -15.693151473999023
    7. '=res' → logprob: -15.818151473999023
    8. '=
' → logprob: -15.943151473999023
    9. ' =(' → logprob: -15.943151473999023
    10. '(' → logprob: -16.068151473999023

Token 175: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00760698551312089
    2. '(res' → logprob: -4.8826069831848145
    3. '(' → logprob: -14.757607460021973
    4. '(rest' → logprob: -15.382607460021973
    5. ' ' → logprob: -16.382606506347656
    6. '(re' → logprob: -17.632606506347656
    7. '(ans' → logprob: -17.882606506347656
    8. '(req' → logprob: -17.882606506347656
    9. ' ' → logprob: -18.132606506347656
    10. '   ' → logprob: -18.257606506347656

Token 176: 'res' (ID: 430)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00025526012177579105
    2. ' (' → logprob: -8.375255584716797
    3. 'res' → logprob: -10.875255584716797
    4. '   ' → logprob: -13.250255584716797
    5. ' res' → logprob: -13.250255584716797
    6. ',res' → logprob: -14.125255584716797
    7. ')' → logprob: -15.375255584716797
    8. '(rest' → logprob: -15.375255584716797
    9. ' ' → logprob: -15.500255584716797
    10. '(' → logprob: -15.625255584716797

Token 177: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.761358380317688
    2. ' (' → logprob: -1.011358380317688
    3. '+' → logprob: -2.1363582611083984
    4. '(' → logprob: -3.5113582611083984
    5. '=' → logprob: -4.261358261108398
    6. ' =' → logprob: -5.636358261108398
    7. '(res' → logprob: -6.261358261108398
    8. '   ' → logprob: -7.386358261108398
    9. ')' → logprob: -7.511358261108398
    10. ' ' → logprob: -8.011358261108398

Token 178: ' dp' (ID: 21546)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03029477410018444
    2. ' ((' → logprob: -3.78029465675354
    3. '(j' → logprob: -5.280294895172119
    4. '(((' → logprob: -6.780294895172119
    5. ' (' → logprob: -7.280294895172119
    6. '(' → logprob: -10.030294418334961
    7. '   ' → logprob: -10.655294418334961
    8. ' (((' → logprob: -11.280294418334961
    9. ' ' → logprob: -11.780294418334961
    10. 'j' → logprob: -12.155294418334961

Token 179: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. '```' → logprob: -17.000001907348633
    4. 'i' → logprob: -17.250001907348633
    5. '(
' → logprob: -17.375001907348633
    6. '<|end|>' → logprob: -17.625001907348633
    7. '(I' → logprob: -17.750001907348633
    8. '[i' → logprob: -17.750001907348633
    9. ')i' → logprob: -18.125001907348633
    10. '(ii' → logprob: -18.875001907348633

Token 180: ' -' (ID: 533)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.933173426659778e-05
    2. '(' → logprob: -10.125069618225098
    3. ' (' → logprob: -10.875069618225098
    4. 'i' → logprob: -12.500069618225098
    5. '   ' → logprob: -13.000069618225098
    6. '-' → logprob: -13.000069618225098
    7. ' ' → logprob: -14.625069618225098
    8. ' -' → logprob: -14.750069618225098
    9. '(n' → logprob: -15.125069618225098
    10. ' i' → logprob: -15.375069618225098

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014251544780563563
    2. ' ' → logprob: -8.875142097473145
    3. '-' → logprob: -13.250142097473145
    4. '   ' → logprob: -15.375142097473145
    5. '```' → logprob: -15.750142097473145
    6. 'prev' → logprob: -16.68764305114746
    7. '(' → logprob: -16.93764305114746
    8. 'def' → logprob: -17.31264305114746
    9. '...' → logprob: -17.43764305114746
    10. ' -' → logprob: -17.56264305114746

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007522129453718662
    2. '(i' → logprob: -7.6257524490356445
    3. '-' → logprob: -8.875752449035645
    4. 'i' → logprob: -9.375752449035645
    5. ' ' → logprob: -10.375752449035645
    6. '(' → logprob: -11.875752449035645
    7. '   ' → logprob: -15.000752449035645
    8. '[i' → logprob: -15.500752449035645
    9. ' -' → logprob: -15.625752449035645
    10. '```' → logprob: -15.750752449035645

Token 183: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.093505099765025e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.500020980834961
    4. ' i' → logprob: -15.875020980834961
    5. '(
' → logprob: -15.875020980834961
    6. '   ' → logprob: -16.00002098083496
    7. ')' → logprob: -17.00002098083496
    8. ',' → logprob: -17.12502098083496
    9. 'i' → logprob: -17.62502098083496
    10. ',i' → logprob: -17.75002098083496

Token 184: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16023194789886475
    2. ' j' → logprob: -1.9102319478988647
    3. '(j' → logprob: -13.160231590270996
    4. '   ' → logprob: -13.160231590270996
    5. ' ' → logprob: -13.410231590270996
    6. '    ' → logprob: -14.285231590270996
    7. '	j' → logprob: -14.535231590270996
    8. '  ' → logprob: -14.785231590270996
    9. '[j' → logprob: -15.035231590270996
    10. '       ' → logprob: -16.035232543945312

Token 185: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1440439224243164
    2. '-' → logprob: -2.7690439224243164
    3. ' -' → logprob: -2.8940439224243164
    4. ' ,' → logprob: -4.269043922424316
    5. ',j' → logprob: -6.894043922424316
    6. '   ' → logprob: -7.019043922424316
    7. ' ' → logprob: -10.019043922424316
    8. '       ' → logprob: -10.019043922424316
    9. '	' → logprob: -11.019043922424316
    10. '  ' → logprob: -11.144043922424316

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. ')' → logprob: -14.875016212463379
    4. '   ' → logprob: -15.375016212463379
    5. ',' → logprob: -15.500016212463379
    6. '<|end|>' → logprob: -16.000015258789062
    7. '```' → logprob: -16.125015258789062
    8. '           ' → logprob: -16.875015258789062
    9. '    ' → logprob: -17.375015258789062
    10. '...' → logprob: -17.562515258789062

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.750007629394531
    4. '
' → logprob: -15.812507629394531
    5. '```' → logprob: -16.93750762939453
    6. ')' → logprob: -17.25000762939453
    7. '-' → logprob: -17.37500762939453
    8. ',' → logprob: -17.50000762939453
    9. '2' → logprob: -17.62500762939453
    10. '  ' → logprob: -17.75000762939453

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014328587567433715
    2. ',k' → logprob: -6.8764328956604
    3. '(k' → logprob: -8.501432418823242
    4. ' ,' → logprob: -8.626432418823242
    5. '(' → logprob: -11.626432418823242
    6. 'k' → logprob: -12.251432418823242
    7. ',
' → logprob: -14.126432418823242
    8. ',j' → logprob: -14.251432418823242
    9. ' k' → logprob: -14.501432418823242
    10. ')' → logprob: -14.751432418823242

Token 189: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12692853808403015
    2. ' k' → logprob: -2.1269285678863525
    3. '    ' → logprob: -16.251928329467773
    4. ' ' → logprob: -16.376928329467773
    5. '	k' → logprob: -16.751928329467773
    6. '           ' → logprob: -16.876928329467773
    7. '        ' → logprob: -17.126928329467773
    8. ')' → logprob: -17.126928329467773
    9. '(k' → logprob: -17.501928329467773
    10. '   ' → logprob: -17.751928329467773

Token 190: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013446388766169548
    2. ' ,' → logprob: -7.376344680786133
    3. '+' → logprob: -8.251344680786133
    4. ',k' → logprob: -8.376344680786133
    5. ')' → logprob: -9.376344680786133
    6. '   ' → logprob: -10.001344680786133
    7. ' +' → logprob: -10.376344680786133
    8. ',j' → logprob: -10.876344680786133
    9. '           ' → logprob: -11.626344680786133
    10. '       ' → logprob: -11.626344680786133

Token 191: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018947436183225363
    2. ' ' → logprob: -8.750189781188965
    3. '1' → logprob: -10.625189781188965
    4. '(' → logprob: -12.500189781188965
    5. ')' → logprob: -14.125189781188965
    6. '-' → logprob: -14.625189781188965
    7. '   ' → logprob: -14.875189781188965
    8. '0' → logprob: -14.937689781188965
    9. '  ' → logprob: -15.187689781188965
    10. '```' → logprob: -15.750189781188965

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007514976896345615
    2. '1' → logprob: -7.250751495361328
    3. ' ' → logprob: -10.125751495361328
    4. '4' → logprob: -14.750751495361328
    5. '   ' → logprob: -14.875751495361328
    6. '-' → logprob: -15.688251495361328
    7. '(' → logprob: -15.875751495361328
    8. '  ' → logprob: -16.125751495361328
    9. '```' → logprob: -16.250751495361328
    10. '
' → logprob: -16.938251495361328

Token 193: ' *' (ID: 425)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06693823635578156
    2. ' j' → logprob: -2.9419381618499756
    3. '   ' → logprob: -4.816938400268555
    4. ' *' → logprob: -6.816938400268555
    5. '*' → logprob: -7.316938400268555
    6. '*j' → logprob: -7.316938400268555
    7. ')' → logprob: -7.816938400268555
    8. '    ' → logprob: -8.066938400268555
    9. ' ' → logprob: -8.316938400268555
    10. ',' → logprob: -8.941938400268555

Token 194: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004050514253322035
    2. '(j' → logprob: -8.250405311584473
    3. ' j' → logprob: -8.875405311584473
    4. '(' → logprob: -12.875405311584473
    5. ' (' → logprob: -14.500405311584473
    6. ')' → logprob: -15.250405311584473
    7. '   ' → logprob: -15.500405311584473
    8. ' ' → logprob: -16.250404357910156
    9. '_j' → logprob: -16.500404357910156
    10. '[j' → logprob: -16.500404357910156

Token 195: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006695479387417436
    2. ')' → logprob: -7.625669479370117
    3. ')))' → logprob: -9.625669479370117
    4. '   ' → logprob: -9.625669479370117
    5. ' ))' → logprob: -10.125669479370117
    6. '       ' → logprob: -12.500669479370117
    7. ' ' → logprob: -13.125669479370117
    8. ')
' → logprob: -13.625669479370117
    9. '))
' → logprob: -14.250669479370117
    10. '  ' → logprob: -15.250669479370117

Token 196: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8190043568611145
    2. '%' → logprob: -1.0690042972564697
    3. ' %' → logprob: -1.5690042972564697
    4. ')%' → logprob: -4.944004535675049
    5. ' )' → logprob: -8.31900405883789
    6. '%)' → logprob: -9.81900405883789
    7. ' ' → logprob: -10.44400405883789
    8. ' %)' → logprob: -10.44400405883789
    9. '   ' → logprob: -10.56900405883789
    10. '
' → logprob: -12.56900405883789

Token 197: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0067156096920371056
    2. ' MOD' → logprob: -5.006715774536133
    3. '_MOD' → logprob: -15.381715774536133
    4. '.MOD' → logprob: -17.381715774536133
    5. '(M' → logprob: -17.756715774536133
    6. '```' → logprob: -19.506715774536133
    7. ' ' → logprob: -20.256715774536133
    8. '   ' → logprob: -20.756715774536133
    9. '(mod' → logprob: -21.256715774536133
    10. '
' → logprob: -21.506715774536133

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012275819666683674
    2. ' return' → logprob: -4.887275695800781
    3. 'return' → logprob: -5.637275695800781
    4. '
' → logprob: -7.512275695800781
    5. '	return' → logprob: -8.637275695800781
    6. '```' → logprob: -8.637275695800781
    7. '    
' → logprob: -9.137275695800781
    8. ':return' → logprob: -10.637275695800781
    9. ' 
' → logprob: -11.387275695800781
    10. '<|end|>' → logprob: -11.387275695800781

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007461408386006951
    2. ' return' → logprob: -7.625746250152588
    3. '```' → logprob: -8.75074577331543
    4. 'return' → logprob: -9.37574577331543
    5. '	return' → logprob: -12.00074577331543
    6. '    
' → logprob: -12.62574577331543
    7. '<|end|>' → logprob: -13.50074577331543
    8. '       ' → logprob: -13.62574577331543
    9. ':return' → logprob: -14.25074577331543
    10. '   ' → logprob: -14.25074577331543

Token 200: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4755638539791107
    2. 'return' (adapté à ' return') → logprob: -0.9755638837814331
    3. ' return' → logprob: -6.600564002990723
    4. '```' → logprob: -9.225564002990723
    5. '	return' → logprob: -10.850564002990723
    6. ':return' → logprob: -12.350564002990723
    7. '       ' → logprob: -13.725564002990723
    8. '``' → logprob: -14.225564002990723
    9. '    
' → logprob: -14.475564002990723
    10. '  ' → logprob: -14.850564002990723

Token 201: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38687485456466675
    2. ' res' → logprob: -1.1368749141693115
    3. '(res' → logprob: -12.76187515258789
    4. '	res' → logprob: -15.01187515258789
    5. ' ' → logprob: -15.76187515258789
    6. '$res' → logprob: -16.38687515258789
    7. ' ' → logprob: -16.63687515258789
    8. '   ' → logprob: -16.76187515258789
    9. 're' → logprob: -17.01187515258789
    10. '```' → logprob: -17.01187515258789

Token 202: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3317345380783081
    2. '(
' → logprob: -1.706734538078308
    3. '<|end|>' → logprob: -2.5817346572875977
    4. '(dp' → logprob: -4.456734657287598
    5. '(n' → logprob: -4.831734657287598
    6. '```' → logprob: -6.581734657287598
    7. '(i' → logprob: -7.081734657287598
    8. '[' → logprob: -7.831734657287598
    9. '
' → logprob: -8.081734657287598
    10. 'dp' → logprob: -8.331734657287598

Token 203: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6405310816480778e-05
    2. '(print' → logprob: -12.000016212463379
    3. '```' → logprob: -12.250016212463379
    4. '(' → logprob: -12.875016212463379
    5. ' print' → logprob: -13.250016212463379
    6. 'result' → logprob: -14.625016212463379
    7. '(
' → logprob: -14.875016212463379
    8. '``' → logprob: -16.375017166137695
    9. 'for' → logprob: -17.250017166137695
    10. '_print' → logprob: -18.375017166137695

Token 204: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0008071291376836598
    2. '(' → logprob: -7.125807285308838
    3. '(
' → logprob: -13.75080680847168
    4. 'dp' → logprob: -14.12580680847168
    5. '((' → logprob: -15.12580680847168
    6. '(pow' → logprob: -15.75080680847168
    7. '()' → logprob: -16.25080680847168
    8. ' dp' → logprob: -16.50080680847168
    9. '(n' → logprob: -17.12580680847168
    10. '(len' → logprob: -17.87580680847168

Token 205: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020069109741598368
    2. '(' → logprob: -6.252007007598877
    3. '(k' → logprob: -10.252006530761719
    4. ')' → logprob: -10.627006530761719
    5. ')n' → logprob: -11.502006530761719
    6. '(nn' → logprob: -12.252006530761719
    7. ')(' → logprob: -13.252006530761719
    8. '(
' → logprob: -14.127006530761719
    9. 'n' → logprob: -14.377006530761719
    10. '((' → logprob: -15.377006530761719

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006883738096803427
    2. '(n' → logprob: -5.25688362121582
    3. ',n' → logprob: -6.75688362121582
    4. ' ,' → logprob: -8.13188362121582
    5. '(' → logprob: -8.63188362121582
    6. ',k' → logprob: -12.25688362121582
    7. 'n' → logprob: -12.63188362121582
    8. ',j' → logprob: -13.50688362121582
    9. ' n' → logprob: -13.75688362121582
    10. ')' → logprob: -13.75688362121582

Token 207: ' ' (ID: 220)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0040952586568892
    2. '0' → logprob: -6.004095077514648
    3. 'k' → logprob: -6.629095077514648
    4. 'n' → logprob: -8.879095077514648
    5. ' kk' → logprob: -8.879095077514648
    6. 'nk' → logprob: -12.004095077514648
    7. 'nn' → logprob: -12.254095077514648
    8. 'jj' → logprob: -13.504095077514648
    9. 'kn' → logprob: -13.504095077514648
    10. 'kkkk' → logprob: -14.129095077514648

Token 208: '0' (ID: 15)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0006770504405722022
    2. 'k' → logprob: -7.750677108764648
    3. '0' → logprob: -8.500677108764648
    4. ' kk' → logprob: -10.375677108764648
    5. 'n' → logprob: -11.625677108764648
    6. 'nk' → logprob: -13.875677108764648
    7. 'jj' → logprob: -14.625677108764648
    8. 'nn' → logprob: -14.625677108764648
    9. 'kn' → logprob: -14.875677108764648
    10. 'kkkk' → logprob: -15.625677108764648

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',
' → logprob: -15.500085830688477
    4. ',k' → logprob: -15.750085830688477
    5. 'k' → logprob: -16.750085830688477
    6. ' ' → logprob: -17.375085830688477
    7. ' kk' → logprob: -17.625085830688477
    8. '，' → logprob: -17.625085830688477
    9. ')' → logprob: -17.875085830688477
    10. 'kk' → logprob: -18.000085830688477

Token 210: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -1.8312570318812504e-05
    2. ' kk' → logprob: -11.000018119812012
    3. 'k' → logprob: -13.375018119812012
    4. '2' → logprob: -18.500019073486328
    5. '0' → logprob: -18.500019073486328
    6. '   ' → logprob: -19.000019073486328
    7. ' ' → logprob: -19.250019073486328
    8. 'nk' → logprob: -19.500019073486328
    9. 'kkkk' → logprob: -19.625019073486328
    10. '
' → logprob: -20.625019073486328

Token 211: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018375257786829025
    2. ')' → logprob: -8.625184059143066
    3. ')))' → logprob: -13.000184059143066
    4. '))
' → logprob: -13.375184059143066
    5. ' ))' → logprob: -16.50018310546875
    6. '()))' → logprob: -16.75018310546875
    7. '),' → logprob: -18.37518310546875
    8. ' ' → logprob: -18.50018310546875
    9. ')}' → logprob: -18.75018310546875
    10. '))
' → logprob: -18.87518310546875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 209
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 195
Précision stricte (1ère position): 37.32%
Précision adaptée (1ère position): 39.71%
Précision (top 10): 93.30%
================================================================================
